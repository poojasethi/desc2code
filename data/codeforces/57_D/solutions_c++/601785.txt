#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)(v).size())

#define MAX 1005
char mp[MAX][MAX];

li n,m,res=0;

void rotate(){
	char tmp[MAX][MAX];
	rep(i,n)rep(j,m) tmp[m-j-1][i]=mp[i][j];
	rep(i,MAX)rep(j,MAX) mp[i][j]=tmp[i][j];
	swap(n,m);
}

void run(){
	li pos[MAX];
	rep(i,m) pos[i]=0;
	rep(i,n)rep(j,m)if(mp[i][j]=='X') pos[j]=i;
	rep(i,m){
		li right=i+1,left=i-1,sum=pos[i];
		while(right<m && pos[right]<=pos[right-1]){
			sum+=pos[right];
			right++;
		}
		while(0<=left && pos[left]<=pos[left+1]){
			sum+=pos[left];
			left--;
		}
		res+=2*(n-pos[i]-1)*sum;
	}
}
		

int main(){
	cin>>n>>m;
	rep(i,n) scanf("%s",mp[i]);
#define cal(var,nm) ((2*(var)*(var)+2*(var)-2*(nm)*(var)+(nm)*(nm)-(nm))/2)
	rep(i,n) res+=(cal(i,n))*m*m;
	rep(i,m) res+=(cal(i,m))*n*n;
	vector<pair<li,li> > bad;
	rep(i,n)rep(j,m)if(mp[i][j]=='X') bad.pb(make_pair(i,j));
	rep(i,sz(bad)){
		res-=cal(bad[i].first,n)*m*2;
		res-=cal(bad[i].second,m)*n*2;
	}
	rep(i,sz(bad))rep(j,i){
		res+=2*(abs(bad[i].first-bad[j].first)+abs(bad[i].second-bad[j].second));
	}
	li cnt=0;
	rep(i,n)rep(j,m)if(mp[i][j]=='.') cnt++;
	rep(i,4){
		run();
		rotate();
	}
	printf("%.20lf\n",(double)res/(double)cnt/(double)cnt);
}
