#include <bits/stdc++.h>
//Damned if I don't take what I want.

using namespace std;

typedef long long ll;
typedef pair<ll, ll> pii;

const ll S = 1100, S2 = 2 * S;
//const ll S = 3, S2 = 2 * S;
string s[S];

ll col[S], row[S];

int main(){
	ios::sync_with_stdio( false );
	cout.tie(0); cin.tie(0);

	ll n, m; cin >> n >> m;

	memset(row, -1, sizeof row);
	memset(col, -1, sizeof col);

	for (ll i = 0; i < n; i++){
		cin >> s[i];
		for (ll j = 0; j < m; j++)
			if (s[i][j] == 'X'){
				row[i] = j;
				col[j] = i;
			}
	}

	ll tmp = 0, sum = 0, cnt = 0;
	for (ll i = 0; i < n; i++)
		for (ll j = 0; j < m; j++) if (s[i][j] == '.'){
			sum += i * cnt - tmp;
			tmp += i; cnt++;
		}

	tmp = cnt = 0;
	for (ll j = 0; j < m; j++)
		for (ll i = 0; i < n; i++) if (s[i][j] == '.'){
			sum += j * cnt - tmp;
			tmp += j; cnt++;
		}

	cerr << sum << endl;

	for (ll i = 0; i < n; i++) if (row[i] != -1) {
		sum += row[i] * (m - row[i] - 1) * 2;

		for (ll j = i + 1; j < n && row[j] != -1; j++) {
			if (row[j] < row[j - 1])  break;
			sum += row[i] * (m - row[j] - 1) * 2;
		}

		for (ll j = i + 1; j < n && row[j] != -1; j++) {
			if (row[j] > row[j - 1]) break;
			sum += (m - row[i] - 1) * row[j] * 2;
		}
	}

	for (ll i = 0; i < m; i++) if ( col[i] != -1 ) {
		sum += col[i] * (n - col[i] -1) * 2;

		for (ll j = i + 1; j < m && col[j] != -1; j++){
			if (col[j] < col[j - 1]) break;
			sum += col[i] * (n - col[j] - 1) * 2;
		}

		for (ll j = i + 1; j < m && col[j] != -1; j++){
			if (col[j] > col[j - 1]) break;
			sum += (n - col[i] - 1) * col[j] * 2;
		}
	}

	sum *= 2;

	cout << fixed << setprecision(10) << double(sum) / cnt / cnt ;
}
