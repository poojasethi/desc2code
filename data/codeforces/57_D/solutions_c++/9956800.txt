#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
vector<pair<int,int> >vt;
char a[1005][1005];
int row[1005];
int col[1005];
int n,m;
long long solve(int n,int m,int row[])
{	int i,f,s,last,start,end;
	long long ans=0;
	for (i=1;i<=n;++i)
	{	if (row[i]==-1)
			continue;
		last=0,start=i;
		while (i<=n&&row[i]!=-1&&row[i]>last)
		{	last=row[i];
			++i;
		}
		end=--i;
		for (f=start;f<=end;++f)
			for (s=f;s<=end;++s)
				ans+=2*(f==s?1:2)*(row[f]-1)*(m-row[s]);
	}
	for (i=1;i<=n;++i)
	{	if (row[i]==-1)
			continue;
		last=m+1,start=i,end;
		while (i<=n&&row[i]!=-1&&row[i]<last)
		{	last=row[i];
			++i;
		}
		end=--i;
		for (f=start;f<=end;++f)
			for (s=f;s<=end;++s)
				ans+=2*(f==s?1:2)*(m-row[f])*(row[s]-1);
	}
	return ans;
}
long long work()
{	vector<pair<int,int> >::iterator x,y;
	long long ans=0;
	int i,j;
	for (i=1;i<=n;++i)
		ans+=(long long)m*m*i*(i-1);
	for (j=1;j<=m;++j)
		ans+=(long long)n*n*j*(j-1);
	for (i=1;i<=n;++i)
		for (x=vt.begin();x!=vt.end();++x)
			ans-=2*m*abs(i-x->first);
	for (j=1;j<=m;++j)
		for (x=vt.begin();x!=vt.end();++x)
			ans-=2*n*abs(j-x->second);
	for (x=vt.begin();x!=vt.end();++x)
		for (y=vt.begin();y!=vt.end();++y)
			ans+=abs(x->first-y->first)+abs(x->second-y->second);
	ans+=solve(n,m,row);
	for (i=1;i<=n;++i)
		for (j=i+1;j<=m;++j)
			swap(a[i][j],a[j][i]);
	ans+=solve(m,n,col);
	return ans;
}
int main()
{	int i,j,num;
	memset(row,-1,sizeof(row));
	memset(col,-1,sizeof(col));
	scanf("%d%d",&n,&m); 
	num=n*m;
	for (i=1;i<=n;++i)
		scanf("%s",a[i]+1);
	for (i=1;i<=n;++i)
		for (j=1;j<=m;j++)
			if (a[i][j]=='X')
			{	row[i]=j;
				col[j]=i;
				vt.push_back(make_pair(i,j));
				num--;
			}
	printf("%.10f\n",(double)work()/num/num);
	return 0;
}
      	 	 	 		 	  					  	   	