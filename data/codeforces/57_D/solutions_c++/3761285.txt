#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
vector<pair<int,int> >vt;
char a[1005][1005];
int row[1005];
int col[1005];
int n,m;
long long solve(int n,int m,int row[])
{	int i,j,k,p,l,r;
	long long ans=0;
	for (i=1;i<=n;++i)
		if (row[i]!=-1)
		{	p=0,l=i;
			while (i<=n&&row[i]!=-1&&row[i]>p)
			{	p=row[i];
				++i;
			}
			r=--i;
			for (j=l;j<=r;++j)
				for (k=j;k<=r;++k)
					if (j!=k)
						ans+=4*(row[j]-1)*(m-row[k]);
					else ans+=2*(row[j]-1)*(m-row[k]);
		}
	for (i=1;i<=n;++i)
		if (row[i]!=-1)
		{	p=m+1,l=i;
			while (i<=n&&row[i]!=-1&&row[i]<p)
			{	p=row[i];
				++i;
			}
			r=--i;
			for (j=l;j<=r;++j)
				for (k=j;k<=r;++k)
					if (j!=k)
						ans+=4*(m-row[j])*(row[k]-1);
					else ans+=2*(m-row[j])*(row[k]-1);
		}
	return ans;
}
long long work()
{	vector<pair<int,int> >::iterator x,y;
	long long ans=0;
	int i,j;
	ans=(long long)m*m*(n-1)*n*(n+1)/3;
	ans+=(long long)n*n*(m-1)*m*(m+1)/3;
	for (i=1;i<=n;++i)
		for (x=vt.begin();x!=vt.end();++x)
			ans-=m*abs(i-x->first)*2;
	for (j=1;j<=m;++j)
		for (x=vt.begin();x!=vt.end();++x)
			ans-=n*abs(j-x->second)*2;
	for (x=vt.begin();x!=vt.end();++x)
		for (y=vt.begin();y!=vt.end();++y)
			ans+=abs(x->first-y->first)+abs(x->second-y->second);
	ans+=solve(n,m,row);
	for (i=1;i<=n;++i)
		for (j=i+1;j<=m;++j)
			swap(a[i][j],a[j][i]);
	ans+=solve(m,n,col);
	return ans;
}
int main()
{	int i,j,num;
	memset(row,-1,sizeof(row));
	memset(col,-1,sizeof(col));
	scanf("%d%d",&n,&m); 
	num=n*m;
	for (i=1;i<=n;++i)
		scanf("%s",a[i]+1);
	for (i=1;i<=n;++i)
		for (j=1;j<=m;++j)
			if (a[i][j]=='X')
			{	row[i]=j;
				col[j]=i;
				vt.push_back(make_pair(i,j));
				--num;
			}
	printf("%.10f\n",(double)work()/num/num);
	return 0;
}
			    	 			 			     	 	