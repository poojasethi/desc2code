#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
int n,m,row[1003],col[1003],cnt=0;
char s[1003][1003];
int main(){
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;++i)scanf("%s",s[i]+1);
	long long total=0;
	memset(row,0,sizeof(row));
	memset(col,0,sizeof(col));
	for(int i=1;i<=n;++i)
		for(int j=1;j<=m;++j)
			if(s[i][j]=='X')
				row[i]=j,col[j]=i;
			else{
				++cnt;
				int k1=i-1;
				total+=m*(k1+1)*k1/2;
				int k2=n-i;
				total+=m*(k2+1)*k2/2;
				k1=j-1;
				total+=n*(k1+1)*k1/2;
				k2=m-j;
				total+=n*(k2+1)*k2/2;
			}
	for(int i=1;i<=n;++i){
		if(!row[i])continue;
		int k1=row[i]-1;total-=k1*(k1+1)/2;
		int k2=m-row[i];total-=k2*(k2+1)/2;
		for(int j=1;j<=n;++j){
			if(i==j)continue;
			total-=m*abs(i-j);
			k1=row[i]-1;total-=k1*(k1+1)/2;
			k2=m-row[i];total-=k2*(k2+1)/2;
			if(row[j])total+=abs(i-j)+abs(row[i]-row[j]);
		}
	}
	for(int i=1;i<=n;++i){
		if(!row[i])continue;
		total+=4LL*(row[i]-1)*(m-row[i]);
		for(int j=i-1;j;--j){
			if(!row[j]||row[j]<row[j+1])break;
			total+=4LL*(row[i]-1)*(m-row[j]);
		}
		for(int j=i+1;j<=n;++j){
			if(!row[j]||row[j]<row[j-1])break;
			total+=4LL*(row[i]-1)*(m-row[j]);
		}
	}
	for(int j=1;j<=m;++j){
		if(!col[j])continue;
		total+=4LL*(col[j]-1)*(n-col[j]);
		for(int i=j-1;i;--i){
			if(!col[i]||col[i]<col[i+1])break;
			total+=4LL*(col[j]-1)*(n-col[i]);
		}
		for(int i=j+1;i<=m;++i){
			if(!col[i]||col[i]<col[i-1])break;
			total+=4LL*(col[j]-1)*(n-col[i]);
		}
	}
	printf("%.10f\n",double(total)/cnt/cnt);
	return 0;
}
