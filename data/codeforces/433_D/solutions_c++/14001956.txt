#include<stdio.h>
#include<algorithm>
using namespace std;
const int maxn=1050;
int n,m,q,A[maxn][maxn],ans;
int l[maxn][maxn],r[maxn][maxn],up[maxn][maxn],down[maxn][maxn];
int calc1(int x,int y,int h[][maxn])
{
	int li=y,ri=y,h0,s=0;
	while(h0=max(h[x][li],h[x][ri]))
	{
		while(h[x][li]>=h0) li--;
		while(h[x][ri]>=h0) ri++;
		s=max(s,(ri-li-1)*h0);
	}
	return s;
}
int calc2(int x,int y,int h[][maxn])
{
	int li=x,ri=x,h0,s=0;
	while(h0=max(h[li][y],h[ri][y]))
	{
		while(h[li][y]>=h0) li--;
		while(h[ri][y]>=h0) ri++;
		s=max(s,(ri-li-1)*h0);
	}
	return s;
}
int main()
{
	int i,j;
	scanf("%d%d%d",&n,&m,&q);
	for(i=1;i<=n;i++)
		for(j=1;j<=m;j++)
			scanf("%d",&A[i][j]);
	for(i=1;i<=n;i++)
		for(j=1;j<=m;j++)
		{
			up[i][j]=A[i][j]*(up[i-1][j]+1);
			l[i][j]=A[i][j]*(l[i][j-1]+1);
		}
	for(i=n;i;i--)
		for(j=m;j;j--)
		{
			down[i][j]=A[i][j]*(down[i+1][j]+1);
			r[i][j]=A[i][j]*(r[i][j+1]+1);
		}
	while(q--)
	{
		int op,x,y;
		scanf("%d%d%d",&op,&x,&y);
		if(op==1)
		{
			A[x][y]^=1;
			for(i=x;i<=n;i++)
				up[i][y]=A[i][y]*(up[i-1][y]+1);
			for(i=x;i;i--)
				down[i][y]=A[i][y]*(down[i+1][y]+1);
			for(i=y;i<=m;i++)
				l[x][i]=A[x][i]*(l[x][i-1]+1);
			for(i=y;i;i--)
				r[x][i]=A[x][i]*(r[x][i+1]+1);
		}
		else
		{
			ans=max(max(calc1(x,y,up),calc1(x,y,down)),max(calc2(x,y,l),calc2(x,y,r)));
			printf("%d\n",ans);
		}
	}
	return 0;
}
