#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<queue>
#define mk make_pair
using namespace std;
int i,j,k,l,n,m,s,an,tot,len,S;
const int w[4][2]={{-1,0},{0,1},{1,0},{0,-1}};
const int N=1100;
int f[N][N][4],a[N][N];
void work(int x,int y,int k)
{
    int xx=x-w[k][0];int yy=y-w[k][1];
    int s=f[xx][yy][k];
    while ((x>0)&&(x<=n)&&(y>0)&&(y<=m))
    {
        if (a[x][y]==0) s=0;
        else s++;
        f[x][y][k]=s;
        x+=w[k][0];y+=w[k][1];
    }
}
int find(int x,int y,int k)
{
    int s=0;
    int l=99999;
    int r=l;
    int h=0;
    while ((x>0)&&(x<=n)&&(y>0)&&(y<=m))
    {
        h++;
        l=min(l,f[x][y][(k-1+4)%4]);
        r=min(r,f[x][y][(k+1)%4]);
        s=max(s,h*(l+r-1));
        x+=w[k][0];y+=w[k][1];
    }
    return s;
}
int main()
{
    int T;
    scanf("%d%d%d",&n,&m,&T);
    for (int i=1;i<=n;i++)
        for (int j=1;j<=m;j++)
        scanf("%d",&a[i][j]);
    for (int i=1;i<=n;i++)
    work(i,1,1),work(i,m,3);
    for (int i=1;i<=m;i++)
    work(1,i,2),work(n,i,0);
    while (T)
    {
        T--;
        int t,x,y;
        scanf("%d%d%d",&t,&x,&y);
        if (t==1)
        {
            a[x][y]^=1;
            for (int k=0;k<4;k++)
            work(x,y,k);
        }
        else
        { 
            an=0;
            for (int k=0;k<4;k++)
            an=max(an,find(x,y,k));
            printf("%d\n",an);
        }
    }
}
            
            
