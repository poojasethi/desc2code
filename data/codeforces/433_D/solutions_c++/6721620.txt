#include<bits/stdc++.h>
using namespace std;
const int INF=0x3f3f3f3f;
const int maxn=1000+10;
int n,m,q,a[maxn][maxn];
int U[maxn][maxn],D[maxn][maxn],L[maxn][maxn],R[maxn][maxn];
int main()
{
	scanf("%d%d%d",&n,&m,&q);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			scanf("%d",&a[i][j]);
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
			L[i][j]=a[i][j]?L[i][j-1]+1:0;
		for(int j=m;j;j--)
			R[i][j]=a[i][j]?R[i][j+1]+1:0;
	}
	for(int j=1;j<=m;j++)
	{
		for(int i=1;i<=n;i++)
			U[i][j]=a[i][j]?U[i-1][j]+1:0;
		for(int i=n;i;i--)
			D[i][j]=a[i][j]?D[i+1][j]+1:0;
	}
	while(q--)
	{
		int op,x,y;
		scanf("%d%d%d",&op,&x,&y);
		switch(op)
		{
			case 1:
				a[x][y]^=1;
				for(int i=1;i<=m;i++)
					L[x][i]=a[x][i]?L[x][i-1]+1:0;
				for(int i=m;i;i--)
					R[x][i]=a[x][i]?R[x][i+1]+1:0;
				for(int i=1;i<=n;i++)
					U[i][y]=a[i][y]?U[i-1][y]+1:0;
				for(int i=n;i;i--)
					D[i][y]=a[i][y]?D[i+1][y]+1:0;
				break;
			case 2:
				if(!a[x][y])
					printf("0\n");
				else
				{
					int ans=0;
					for(int i=x,left=INF,right=INF;i;i--)
					{
						left=min(left,L[i][y]);right=min(right,R[i][y]);
						ans=max(ans,(left+right-1)*(x-i+1));
					}
					for(int i=x,left=INF,right=INF;i<=n;i++)
					{
						left=min(left,L[i][y]);right=min(right,R[i][y]);
						ans=max(ans,(left+right-1)*(i-x+1));
					}
					for(int i=y,up=INF,down=INF;i;i--)
					{
						up=min(up,U[x][i]);down=min(down,D[x][i]);
						ans=max(ans,(up+down-1)*(y-i+1));
					}
					for(int i=y,up=INF,down=INF;i<=m;i++)
					{
						up=min(up,U[x][i]);down=min(down,D[x][i]);
						ans=max(ans,(up+down-1)*(i-y+1));
					}
					printf("%d\n",ans);
				}
				break;
		}
	}
	return 0;
}
/*
3 4 5
0 1 1 0
1 0 0 1
0 1 1 0
2 2 2
2 1 2
1 2 2
1 2 3
2 2 2
3 3 4
1 1 1
1 1 1
1 1 1
2 2 2
1 2 2
2 1 1
2 2 1
*/
