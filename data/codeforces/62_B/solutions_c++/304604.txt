#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <cmath>

using namespace std;

const int MaxN = 200010;

int N, L;
char str[MaxN];
char s[MaxN];
int pos[30][MaxN];
int pn[30];


int main()
{
	cin >> N >> L;
	scanf("%s", str);
	memset(pn, 0, sizeof(pn));
	for(int i=0; i<L; i++)
	{
		pos[str[i]-'a'][pn[str[i]-'a']++] = i;	
	}
	
	while(N --)
	{
		scanf("%s", s);
		long long ans = 0;
		int l = strlen(s);
		for(int i=0; i<l; i++)
		{
			char ch = s[i] - 'a';
			if(pn[ch] == 0)	ans += l;
			else
			{
				int x = lower_bound(pos[ch], pos[ch]+pn[ch], i) - pos[ch];
				int tmp = MaxN;
				if(x > 0)	tmp = min(tmp, i - pos[ch][x-1]);
				if(x < pn[ch])	tmp = min(tmp, pos[ch][x] - i);
				ans += tmp;
			}
		}	
		cout << ans << endl;
	}
	
	return 0;	
}
