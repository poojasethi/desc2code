#include<map>
#include<vector>
#include<iostream>
#include<string>
#include<algorithm>

using namespace std;

map<char, vector<int> > m;
long long int ans=0;
int k,p; 
string s,t;

int main(){
  cin >> k >> p;
  cin >> s;
  for(int i=0;i<s.length();i++){
    m[s[i]].push_back(i);
  }

  for(int i=0;i<k;i++){
    cin >> t;
    ans=0;
    for(int j=0;j<t.length();j++){
      if(p-1<=j||s[j]!=t[j]){
	if(m.count(t[j])==0)ans+=t.length();
	else{
	  int tmp=1<<30;
	  vector<int>::iterator it=upper_bound( m[t[j]].begin(), m[t[j]].end(), j );
	  int z=it-m[t[j]].begin();
	  if(z!=0)tmp=min(tmp,abs(j-m[t[j]][z-1]));
	  if(z!=m[t[j]].size())tmp=min(tmp,abs(m[t[j]][z]-j));
	  ans+=tmp;
	}
      }
    }
    cout << ans << endl;
  }


  return 0;
}

 
