#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> let[26];

long long div(const string &cand)	{
	long long res = 0;
	for (int i = 0; i < (int)cand.size(); i++)	{
		char c = cand[i];
		int val = 1 << 30;
		if (let[c-'a'].empty())	{
			res += cand.size();
			//cout << "char '" << c << "': " << cand.size() << endl;
			continue;
		}
		vector<int>::iterator it = upper_bound(let[c-'a'].begin(), let[c-'a'].end(), i);
		if (it != let[c-'a'].end())
			val = abs(*it-i);
		if (it != let[c-'a'].begin())
			val = min(val, abs(*(--it)-i));
		//cout << "char '" << c << "': " << val << endl;
		res += val;
	}
	return res;
}

int main()	{
	int n, k;
	string url, cand;
	cin >> n >> k;
	cin >> url;
	for (size_t i = 0; i < url.size(); i++)
		let[url[i]-'a'].push_back(i);
	while (n--)	{
		cin >> cand;
		cout << div(cand) << endl;
	}
	return 0;
}
