#include <stdio.h>
#include <string.h>
#include <vector>
#include <algorithm>

const int kMaxL = 100000;

std::vector<int> char_list[26];
char s[kMaxL + 1], c[2 * kMaxL + 1];
int n, k;

int main() {
  scanf("%d%d", &n, &k);
  scanf("%s", s);
  for (int i = 0; i < k; ++i)
    char_list[s[i] - 'a'].push_back(i);
  for (int i = 0; i < n; ++i) {
    long long result = 0;
    scanf("%s", c);
    int length = strlen(c);
    for (int j = 0; j < length; ++j) {
      std::vector<int> &l = char_list[c[j] - 'a'];
      if (l.empty()) {
        result += length;
        continue;
      }
      int pos = std::lower_bound(l.begin(), l.end(), j) - l.begin();
      int min = std::max(length, k);
      if (pos > 0) min = std::min(min, j - l[pos - 1]);
      if ((size_t) pos < l.size()) min = std::min(min, l[pos] - j);
      result += min;
    }
    printf("%I64d\n", result);
  }
  return 0;
}
