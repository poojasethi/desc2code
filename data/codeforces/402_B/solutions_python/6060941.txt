from sys import stdout, stdin
from itertools import chain
#import copy

n, k = map(int, stdin.readline().strip().split())

trees = map(int, stdin.readline().strip().split())

unSortedTreesDict = dict( enumerate(trees) )

bases = []

stayers = set()

for ti, t in enumerate(trees):
	fail = False	
	stayersCandidate = set()

	for t2i, t2 in enumerate(trees):
		heightToMatch = (k * (t2i - ti) + t)
		if heightToMatch <= 0:
			fail = True
			break
		elif t2 == heightToMatch:
			stayersCandidate.add(t2i)
	
	if not fail:
		if len(stayersCandidate) > len(stayers):
			stayers = stayersCandidate


basei = list(stayers)[0]
stdout.write("%d\n"%(len(trees) - len (stayers)))

for ti,t in enumerate(trees):
	if ti not in stayers:
		heightToMatch = trees[basei] + (ti - basei) * k

		if t > heightToMatch:
			stdout.write("- %d %d\n"%(ti+1, t - heightToMatch))
		else:
			stdout.write("+ %d %d\n"%(ti+1, heightToMatch - t))
