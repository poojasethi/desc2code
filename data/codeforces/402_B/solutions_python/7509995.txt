inp = raw_input().split()
n, k = int(inp[0]), int(inp[1])

from math import fabs

def number_affected(L, a, k):
    acc = 0
    if L[1] != a + k: acc += 1
    for x in range(2, len(L)):
        if L[x] != a + (x * k): acc += 1
    if L[0] != a: acc += 1
    return acc


def find_tree(L, k):
    first = 1
    if len(L) == 1:
        print 0
        return
    min = number_affected(L, 1, k)
    for i in range(2, 1001):
        val = number_affected(L, i, k)
        if val < min:
            min = val
            first = i
    
    expected = first
    
    print min
    for i in range(len(L)):
        if L[i] != expected:
            if L[i] > expected:
                print "-", i + 1, (L[i] - expected)
            elif L[i] < expected:
                print  "+", i + 1, (expected - L[i])
        expected += k


find_tree([int(x) for x in raw_input().split()], k)
    
