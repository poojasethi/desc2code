class Trim_tree():
    def __init__(self):
        '''
        self.height = raw_input().split()
        self.n = int(self.height[0])
        self.k = int(self.height[1])
        self.height = raw_input().split()
        self.height = [int(x) for x in self.height]
        '''

        self.n,self.k = map(int,raw_input().split())
        self.height = map(int,raw_input().split())

    def calc(self):
    	
    	index = -1
    	min_min = 1000

    	for i in range(self.n):
    		temp_min = 0 
    		#print 'i=%d min_min=%d index=%d' % (i,min_min,index)
    		for j in range(self.n):
    			x,y = self.height[i] - (i-j)*self.k,self.height[j]
    			if x < 1:
    				break
    			'''	
    			if x != y:
    				temp_min+=1
    			'''
    			temp_min+=int(x!=y)
    		else:
    			if temp_min < min_min:
    				index = i
    				min_min = temp_min

    	#print index,min_min		
    	self.output(index,min_min)

    def output(self,index,min_min):

    	diff = 0

    	print min_min
    	for i in range(self.n):
    		diff = self.height[index] - (index-i)*self.k - self.height[i]

    		'''
    		if diff > 0 :
    			print '+' ,i+1,abs(diff)
    		if diff < 0 :
    			print '-' ,i+1,abs(diff)
    		'''
    		if diff:
    			print '-+'[diff>0],i+1,abs(diff)




obj = Trim_tree()
obj.calc()