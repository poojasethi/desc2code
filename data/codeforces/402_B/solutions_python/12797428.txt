# TREES IN A ROW
# Estacio Pereira, estacio.neto@ccc.ufcg.edu.br
# UFCG

x = [int(x) for x in raw_input().split()]
arv, k = x[0], x[1]

l = [int(x) for x in raw_input().split()]
v = []
c = []
for i in range(1000):
    ch = 0
    r = l[:]
    if r[0] != i + 1:
        r[0] = i + 1
        ch += 1
    for j in range(1, arv):
        if r[j] != r[j - 1] + k:
            ch += 1
            r[j] = r[j - 1] + k
    c.append(ch)
    v.append(i + 1)

mi = min(c)
bestc = []
besth = []
while mi in c:
    bestc.append(mi)
    besth.append(v[c.index(mi)])
    v.pop(c.index(mi))
    c.pop(c.index(mi))
print min(bestc)
ch = []
if l[0] != min(besth):
    m = l[0]
    l[0] = min(besth)
    r = []
    if m > l[0]:
        r.append('-')
        r.append(1)
        r.append(m - l[0])
    else:
        r.append('+')
        r.append(1)
        r.append(l[0] - m)
    ch.append(r)

for i in range(1, arv):
    d = l[i] - l[i - 1]
    if d != k:
        r = []
        if d > k:
            r.append('-')
            r.append(i + 1)
            r.append((k - d) * -1)
        else:
            r.append('+')
            r.append(i + 1)
            r.append(k - d)
        ch.append(r)
        l[i] = l[i - 1] + k


for c in ch:
    print "%s %d %d" % (c[0], c[1], c[2])
