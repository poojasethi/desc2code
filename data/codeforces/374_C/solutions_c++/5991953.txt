#include <cstdio>
#include <algorithm>
using namespace std;

int n, m, ans, bst[1234][1234], s[1234][1234], instk[1234][1234]; char gr[1234][1234], nxt[256], inf;
int dx[] = {1, -1, 0, 0};
int dy[] = {0, 0, 1, -1};
int dfs(int y, int x) {
	if (s[y][x]) return bst[y][x];
	s[y][x] = 1; instk[y][x] = 1;
	for (int i = 0; i < 4; i++) {
		int ny = y + dy[i], nx = x + dx[i];
		if (ny < 0 || ny >= n || nx < 0 || nx >= m || gr[ny][nx] != nxt[gr[y][x]]) continue;
		if (instk[ny][nx]) {
			inf = 1; instk[y][x] = 0; return 0;
		}
		bst[y][x] = max(bst[y][x], dfs(ny, nx) + (gr[y][x]=='M'));
	}
	instk[y][x] = 0;
	return bst[y][x];
}
int main() {
	nxt['D'] = 'I'; nxt['I'] = 'M'; nxt['M'] = 'A'; nxt['A'] = 'D';
	scanf("%d %d", &n, &m);
	for (int i = 0; i < n; i++) scanf("%s", gr[i]);
	for (int i = 0; !inf && i < n; i++) for (int j = 0; !inf && j < m; j++) if (gr[i][j]=='D') ans = max(ans, dfs(i, j));
	if (inf) printf("Poor Inna!\n");
	else if (!ans) printf("Poor Dima!\n");
	else printf("%d\n", ans);

	return 0;
}