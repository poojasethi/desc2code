#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;
#define INF 1<<30

int n, m;
char g[1010][1010];
int dp[1010][1010];
char step[10]="DIMA";
int dx[]={0, 1, -1, 0};
int dy[]={1, 0, 0, -1};

int dfs(int x,int y,int d)
{
    if(dp[x][y]!=-1) return dp[x][y];
    dp[x][y] = INF;
    d=(d+1)%4;
    int tmp=0;
    for(int k=0;k<4;++k)
    {
        int tx=x+dx[k],ty=y+dy[k];
        if(tx>=0&&tx<n&&ty>=0&&ty<m&&g[tx][ty]==step[d])
            tmp=max(tmp,dfs(tx,ty,d));
    }
    return dp[x][y]=min(INF,tmp+1);
}

int main()
{
    scanf("%d %d",&n,&m);
    for(int i=0; i<n; ++i)
        scanf("%s",g[i]);
    memset(dp,-1,sizeof(dp));
    int ans=0;
    for(int i=0;i<n&&ans!=INF;++i)
        for(int j=0;j<m&&ans!=INF;++j)
            if(g[i][j]=='D') 
            	ans=max(ans,dfs(i,j,0));
    if(ans==INF) puts("Poor Inna!");
    else
    {
        ans/=4;
        if(ans==0) puts("Poor Dima!");
        else printf("%d\n", ans);
    }
    return 0;
}
