#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

char x[1000][1000];
int y[1000][1000];
int z[1000][1000];
int n, m;
char l[4] = { 'D', 'I', 'M', 'A' };
bool lp = false;

int dfs(int i, int j, int ind)
{
	if (x[i][j] != l[ind%4])
		return 0;
	else if (y[i][j] != 0)
	{
		lp = true;
		return 0;
	}
	else if (z[i][j] != -1)
		return z[i][j];
	y[i][j] = 1;
	int res = 0;
	int mod = (ind%4 == 3) ? 1 : 0;
	if (i > 0)
		res = max(res, mod+dfs(i-1, j, ind+1));
	if (i < n-1)
		res = max(res, mod+dfs(i+1, j, ind+1));
	if (j > 0)
		res = max(res, mod+dfs(i, j-1, ind+1));
	if (j < m-1)
		res = max(res, mod+dfs(i, j+1, ind+1));
	y[i][j] = 0;
	return z[i][j] = res;
}

int main()
{
	memset(z, -1, sizeof(z));
	scanf("%d%d", &n, &m);
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < m; ++j)
			scanf(" %c ", &x[i][j]);
	int res = 0;
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < m; ++j)
			res = max(res, dfs(i, j, 0));
	if (lp)
		printf("Poor Inna!\n");
	else if (res == 0)
		printf("Poor Dima!\n");
	else
		printf("%d\n", res);
	return 0;
}
