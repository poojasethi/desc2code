#include <iostream>
#define INF 10e8
using namespace std;
char mas[1000][1000];
int masstep[1000][1000]={0};
int n,m;
int maxim=0;
char nextchar(char l)
{
if (l=='D') return 'I';
if (l=='I') return 'M';
if (l=='M') return 'A';
return 'D';
}
int check(int x,int y,char l)
{
if (x>=0 && y>=0 && y<m && x<n && mas[x][y]==l) return 1;
return 0;
}
int dfs(int x,int y,char l,int steps)
{
if (masstep[x][y]!=0) return masstep[x][y]+steps;
int p=steps;
if (steps>n*m || maxim==INF) { maxim=INF;return 0;}
char next=nextchar(l);
if (check(x,y+1,l)) p=max(p,dfs(x,y+1,next,steps+1));
if (check(x,y-1,l)) p=max(p,dfs(x,y-1,next,steps+1));
if (check(x+1,y,l)) p=max(p,dfs(x+1,y,next,steps+1));
if (check(x-1,y,l)) p=max(p,dfs(x-1,y,next,steps+1));
maxim=max(maxim,p);
masstep[x][y]=p-steps;
return p;
}
int main()
{
cin >> n >> m ;
for (int i=0;i<n;i++)
for (int j=0;j<m;j++)
cin >>  mas[i][j];
for (int i=0;i<n;i++)
for (int j=0;j<m;j++)
if (mas[i][j]=='D' && masstep[i][j]==0) dfs(i,j,nextchar('D'),1);
if (maxim==INF) cout << "Poor Inna!"; else
if (maxim/4==0) cout << "Poor Dima!"; else
cout << maxim/4;
}
