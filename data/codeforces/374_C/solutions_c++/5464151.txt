#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;
#define INF (999999999)

int n, m;
char map[1010][1010];
int cnt[1010][1010];
const char step[] = "DIMA";
const int dx[] = {0, 1, -1, 0};
const int dy[] = {1, 0, 0, -1};

int dfs(int r, int c, int now)
{
    if(cnt[r][c]!=-1) return cnt[r][c];
    cnt[r][c] = INF;
    now = (now+1)%4;
    int tmp = 0;
    for(int k=0; k<4; ++k)
    {
        int nr = r+dx[k], nc = c+dy[k];
        if(nr>=0&&nr<n&&nc>=0&&nc<m&&map[nr][nc]==step[now])
            tmp = max(tmp, dfs(nr, nc, now));
    }
    return cnt[r][c] = min(INF, tmp+1);
}

int main()
{
    scanf("%d %d", &n, &m);
    for(int i=0; i<n; ++i)
        scanf("%s", map[i]);
    memset(cnt, -1, sizeof(cnt));
    int ans = 0;
    for(int i=0; i<n&&ans!=INF; ++i)
        for(int j=0; j<m&&ans!=INF; ++j)
            if(map[i][j]=='D') ans = max(ans, dfs(i, j, 0));
    if(ans == INF) puts("Poor Inna!");
    else
    {
        ans /= 4;
        if(ans == 0) puts("Poor Dima!");
        else printf("%d\n", ans);
    }
    return 0;
}
