#include <iostream>
#include <algorithm>
#include <cstdio>
#include <string.h>
#define INF 1000000000
using namespace std;
int n,m,res,dp[1010][1010], dx[4]={-1,0,1,0}, dy[4]={0,1,0,-1};
char tab[1010][1010];
string dima = "DIMA";
int dfs(int x, int y, int cnt)
{
	if(dp[x][y]!=-1)
		return dp[x][y];
	dp[x][y]=INF; //if come again then infinite cycle
	cnt = (cnt+1)%4;
	int dep = 0;
	for(int k = 0; k < 4; k++)
	{
		int x2 = x + dx[k], y2 = y + dy[k];
		if(x2<1 || x2 > n || y2 < 1 || y2> m || tab[x2][y2]!=dima[cnt]) continue;
		dep = max(dfs(x2,y2,cnt),dep);
	}
	return dp[x][y]=min(INF,dep+1);
}
int main()
{
	cin >> n >> m;
	for(int i = 1; i <= n; i++)
	{
		string s; cin >> s;
		for (int j = 1; j <= m; j++)
			tab[i][j]=s[j-1];
	}
	memset(dp,-1,sizeof(dp));
	for(int i = 1; i <= n && res<INF; i++)
		for(int j = 1; j <= m && res<INF; j++)
			if(tab[i][j]=='D')
				res = max(dfs(i,j,0),res); 
	if(res/4==0)
		cout << "Poor Dima!";
	else if(res>=INF)
		cout << "Poor Inna!";
	else
		cout << res/4;
    return 0;
}