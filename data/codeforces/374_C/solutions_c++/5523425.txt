#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>

using namespace std;

const int maxn = 1010, cs = 1073741823;
char a[maxn][maxn];
const char need[4] = {'D', 'I', 'M', 'A'};
const int x1[4][2] = {1, 0, -1, 0, 0, 1, 0, -1};
int dp[maxn][maxn];
int N, M;

void read()
{
	scanf("%d%d", & N, & M);
	for (int i = 0; i < N; ++i) scanf("%s", a[i]);
}

int dfs(int i, int j, int v)
{
	if (dp[i][j] != -1) return dp[i][j];
	dp[i][j] = cs;
	v = (v + 1) % 4;
	int temp = 1;
	
	for (int e = 0; e < 4; ++e)
	{
		int x = i + x1[e][0], y = j + x1[e][1];
		if ((x >= 0) && (y >= 0) && (x < N) && (y < M) && (a[x][y] == need[v]))
			temp = max(temp, dfs(x, y, v) + 1);
	}
	
	return dp[i][j] = min(cs, temp);
}

void getans()
{
	memset(dp, -1, sizeof dp);
	int ans = 0;
	
	for (int i = 0; i < N; ++i)
		for (int j = 0; j < M; ++j) if (dp[i][j] == -1 && (a[i][j] == need[0]))
			ans = max(ans, dfs(i, j, 0));
			
	if (ans == cs) cout << "Poor Inna!" << endl;
	else if (ans < 4) cout << "Poor Dima!" << endl;
	else cout << ans / 4 << endl;
}

int main()
{
	read();
	getans();
}