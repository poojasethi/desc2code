#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;
vector<string> table;
int dx[4]={-1,0,1,0},dy[4]={0,1,0,-1},n,m;
int dp[1000][1000];
int dfs(int x,int y,int cnt){
	if(cnt>n*m) return -1;
	if(dp[x][y]>0) return dp[x][y];
	char ch;
	if(cnt%4==0) ch='I';
	if(cnt%4==1) ch='M';
	if(cnt%4==2) ch='A';
	if(cnt%4==3) ch='D';
	int ret=0;
	for(int i=0;i<4;i++){
		int nx=x+dx[i],ny=y+dy[i];
		if(nx<0 || n<=nx || ny<0 || m<=ny || table[nx][ny]!=ch) continue;
		int hoge=dfs(nx,ny,cnt+1);
		if(hoge==-1) return -1;
		ret=max(ret,hoge);
	}
	ret++;
	dp[x][y]=ret;
	return ret;
}
int main(){
	cin >> n >> m;
	for(int i=0;i<n;i++){
		string s;
		cin >> s;
		table.push_back(s);
	}
	int ans=0;
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(table[i][j]!='D') continue;
			int a=dfs(i,j,0);
			if(a==-1){
				cout << "Poor Inna!" << endl;
				return 0;
			}
			ans=max(ans,a);
		}
	}
	if(ans<4) cout << "Poor Dima!" << endl;
	else cout << ans/4 << endl;	
	return 0;
}