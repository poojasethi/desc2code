#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<string>
#include <iostream>
#include<vector>
#define MAXN 1000050
#define lson i<<1
#define rson i<<1|1
#define LL long long
using namespace std;
char s[MAXN];
char a[MAXN];
int p[MAXN];
int ans[MAXN];
int tmp[MAXN];
int main() {
	int n, m;
	scanf(" %s", s);
	n = strlen(s);
	scanf("%d", &m);
	for (int i = 0; i < m; ++i) {
		int k, d;
		scanf("%d%d", &k, &d);
		for (int i = 0; i < n; ++i)
			p[i] = ans[i] = i;
		int cid = 0;
		for (int x = 0; x < d; ++x)
			for (int j = x; j < k; j += d)
			{
				p[cid++] = j;
			}
		int last = p[0];
		for (int j = 0; j <n-1;++j)
			p[j] = p[j + 1];
		p[n-1] = last;
		int x = n - k + 1;
		while (x) {
			if (x & 1) {
				for (int j = 0; j < n; ++j)
					tmp[j] = ans[p[j]];
				for(int j=0;j<n;++j)
					ans[j]=tmp[j];
			}
			for (int j = 0; j < n; ++j)
				tmp[j] = p[p[j]];
			for (int j = 0; j < n; ++j)
				p[j] = tmp[j];
			x >>= 1;
		}
//		for (int j = 0; j < n; ++j)
//			printf("%d ", ans[j]);
//		puts("");
		for (int j = 0; j < n; ++j)
		{
//			printf("--%d %d\n",(j+k-1)%n,ans[(j + k - 1) % n]);
			a[j] = s[ans[(j + k - 1) % n]];
		}
		for (int j = 0; j < n; ++j)
			s[j] = a[j];
		printf("%s\n", s);
	}
}
