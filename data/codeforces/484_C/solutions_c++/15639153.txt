#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <cmath>
#include <algorithm>

using namespace std;

const int maxn = 2e6;

char str[maxn], ch[maxn];
int p[maxn], s[maxn], tmp[maxn];
bool vis[maxn];
int stack[maxn];

int main( )
{
	int k, d;
	scanf("%s", str + 1);
	int n = (int )strlen(str + 1), m;
	scanf("%d", &m);
	while (m --)
	{
		scanf("%d %d", &k, &d);
		int cnt = 0;
		for (int i = 1; i <= d; i ++)
			for (int j = i; j <= k; j += d)
				p[j] = ++ cnt;
		for (int i = k + 1; i <= n; i ++) p[i] = i;
		for (int i = 1; i <= n; i ++)
			s[i % n + 1] = i;

		for (int i = 1; i <= n; i ++)
			tmp[i] = s[p[i]], vis[i] = false;
		int c = n - k + 1;
		for (int i = 1; i <= n; i ++)
		{
			if (vis[i]) continue;
			int x = i, top = 0;
			while (!vis[x])
			{
				vis[x] = true;
				stack[++ top] = x;
				x = tmp[x];
			}
			for (int j = 1; j <= top; j ++)
				p[stack[j]] = stack[(j + c - 1) % top + 1];
		}
		for (int i = 1; i <= n; i ++)
			s[p[i]] = i;
		for (int i = 1; i <= n; i ++)
			ch[i] = str[s[i]];
		for (int i = 1; i <= n; i ++)
			str[i] = ch[(i - c - 1 + n) % n + 1], printf("%c", str[i]);
		printf("\n");
	}
	return 0;
}
		