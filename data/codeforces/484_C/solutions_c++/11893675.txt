#include <stdio.h>
#include <string.h>
#include <algorithm>
using namespace std;
#define M 1001001
int fa[20][M];
char s[M];
char t[M];
int n;
int k, d;

void prepare() {
	for (int j = 0; j < 20; j++) for (int i = 0; i < k; i++)
		fa[j][i] = -1;
	for (int r = -1, x = 0; x < d; x++) {
		for (int i = x; i < k; i += d)
			fa[0][i] = r++;
	}
	for (int j = 1; j < 20; j++) for (int i = 0; i < k; i++) {
		if (fa[j-1][i] == -1);
		else fa[j][i] = fa[j-1][fa[j-1][i]];
	}
	t[n] = 0;
}

int calc(int c, int tim) {
	int cc = c;
	for (int d = 19; d >= 0; d--) if ((tim>>d) & 1) {
        cc = fa[d][cc];
        if (cc == -1) break;
	}
	if (cc != -1) {
		return cc + n - k + 1;
	}
	int tt = 0;
	cc = c;
	for (int d = 19; d >= 0; d--) if (fa[d][cc] >= 0) {
		tt |= 1<<d;
		cc = fa[d][cc];
	}
	return n - k + 1- tim + tt;
}

void solve() {
	t[0] = s[0];
	for (int j, i = 1; i < n; i++) {
		if (i < k) j = calc(i, n - k + 1);
		else j = calc(k - 1, n - i);
		t[j] = s[i];
	}
	puts(t);
}

int main() {
	///freopen("C.in", "r", stdin);
	scanf("%s", s);
	n = strlen(s);
	int T;
	for (scanf("%d", &T); T--; ) {
		scanf("%d %d", &k, &d);
		if (d == 1 || k == d) puts(s);
		else {
			prepare();
			solve();
			strcpy(s, t);
		}
	}
}
