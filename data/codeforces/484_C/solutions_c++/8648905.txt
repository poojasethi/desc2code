#include <cstdio>
#include <vector>
#include <cstring>
using namespace std;

const int N =  1000005;
char s[N], t[N];
int pos[N], c[N], b[N], col[N];
vector<int> vec[N];
int main(){
	scanf("%s", s);
	int n = strlen(s), m, k, d, i, j;
	scanf("%d",&m);
	while(m--){
		for(i=1;i<=n;++i) pos[i]=-1;
		scanf("%d%d",&k,&d);
		int cnt = 0;
		for(i=1;i<=d;++i){
			for(j=i;j<=k;j+=d){
				b[cnt++] = j;
			//	b[j-1] = cnt;
			}
		}
		for(i=k+1;i<=n;++i)
		b[i-1]=i;

		int u, idx=0, cc=1;
		vec[0].push_back(0);
		for(u=b[0]; u; u=b[u]){
			vec[0].push_back(u);
			pos[u] = cc++;
			col[u] = 0;
		}

		for(i=1;i<=k;++i) if(pos[i]==-1){
			++idx;
			cc=0;
			u = i;
			while(pos[u]==-1){
				pos[u] = cc++;
				col[u]=idx;
				vec[idx].push_back(u);

				u = b[u];
			}
		}


		for(i=1;i<=n-k+1;++i){
			t[i-1]=s[vec[0][i]-1];
		}
		for(i=n-k+2;i<=n;++i){
			int ps=pos[k-n+i-1];
			if(col[k-n+i-1]==0){
				t[i-1]=s[vec[0][ps+n-k+1]-1];
			} else {
				int sz = vec[col[k-n+i-1]].size();
				t[i-1]=s[vec[col[k-n+i-1]][(ps+n-k+1)%sz]-1];
			}
		}
		t[n]=0;
		printf("%s\n", t);
		for(i=0;i<=n;++i) s[i]=t[i];

		for(i=0;i<=idx;++i) vec[i].clear();
	}
	return 0;
}

	 	   		 		 	 	 			 			 	