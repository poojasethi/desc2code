#include <iostream>
#include <cstring>
#include <set>

using namespace std;

const int MAXN = 11;

int n, l[MAXN], r[MAXN];
string s, p[MAXN];
set<string> sset;

bool test(int a, int b, int ind) {
	string t = s.substr(a, b - a + 1);
	int len = t.size();
	int count = 0;
	for (int i = 0; i < ((int) p[ind].size()) - len + 1; i++) {
		if (p[ind].substr(i, len) == t) {
			count++;
		}	
	}
	if (count >= l[ind] && count <= r[ind]) return true;
	return false;
}

bool good(int a, int b) {
	for (int i = 0; i < n; i++) {
		if (!test(a, b, i)) return false;
	}
	return true;
}

int main() { 
	cin >> s >> n;
	for (int i = 0; i < n; i++) {
		cin >> p[i] >> l[i] >> r[i];
	}
	for (int i = 0; i < s.size(); i++) {
		for (int k = i; k < s.size(); k++) {
			if (good(i, k)) { 
				sset.insert(s.substr(i, k - i + 1));	
			}
		}
	}
	cout << sset.size() << '\n';
	return 0;
}
