#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <string>

using namespace std;

struct Rule {
    string s;
    int l;
    int r;
};

int count(string &where, string &what) {
    int res = 0;
    for (int i = 0; i < where.size(); ++i) {
        if (where.substr(i, what.size()) == what)
            ++res;
    }
    return res;
}

int main() {
    vector<Rule> r; int rlen;
    string s, ss;
    set<string> res;
    bool test; int cx;

    cin >> s;
    cin >> rlen; r.resize(rlen);
    for (int i = 0; i < rlen; ++i)
        cin >> r[i].s >> r[i].l >> r[i].r;

    for (int a = 0; a < s.size(); ++a) {
        for (int b = a; b < s.size(); ++b) {
            ss = s.substr(a, b-a+1);
            test = true;

            for (int R = 0; R < rlen; ++R) {
                cx = count(r[R].s, ss);
                test = test && (r[R].l <= cx && cx <= r[R].r);
            }

            if (test)
                res.insert(ss);
        }
    }
    
    cout << res.size() << endl;
    return 0;
}
