#include <cstdio>
#include <iostream>
#include <set>
#include <string>
#include <map>
#include <cstring>
using namespace std;

int n;
set <string> S;
set<string>::iterator it;
string s, p;
int ls, lp, l, r;
string bs[40000];
bool f[40000];
int bsn;
int ans;
int countN(string &x, string &y)
{
	int ret = 0;
	int p=-1;
	while (1)
	{
		p = x.find(y, p+1);
		if (p == -1) break;
		ret ++;
	}
	return ret;
}
int main()
{
	while (cin >> s)
	{
		ls = s.length();
		S.clear();
		for (int i = 0; i < ls; ++ i)
			for (int j = 1; j <= ls-i; ++ j)
				S.insert(s.substr(i,j));
		bsn = 0;
		for (it = S.begin(); it != S.end(); ++ it)
			bs[bsn++] = *it;
		memset(f, 1, sizeof(f));
		cin >> n;
		while (n --)
		{
			cin >> p;
			lp = p.length();
			cin >> l >> r;
			int num;
			for (int i = 0; i < bsn; ++ i) if (f[i])
			{
				num = countN(p, bs[i]);
				if (num < l || num > r) f[i] = 0;
			}
		}
		ans = 0;
		for (int i = 0; i < bsn; ++ i)
			if (f[i]) ans ++;
		cout << ans << endl;
	}
}
