#include <cstdio>
#include <algorithm>
#define MAXN 200001
#define MAXM 400001
using namespace std;
struct edge{int node,next;}e[MAXM];
int n,g,t,h[MAXN],a[MAXN],p[MAXN],col[MAXN];
bool cmp(const int &x,const int &y) {return p[x]<p[y];}
void addedge(int x,int y) {
    t++;e[t]=(edge){y,h[x]};h[x]=t;
	t++;e[t]=(edge){x,h[y]};h[y]=t;
}
void dfs(int x) {
    for (int i=h[x];i;i=e[i].next)
	  if (!col[e[i].node]) {
	    col[e[i].node]=col[x]^3;
		dfs(e[i].node);
	  }
}
int main() {
	scanf("%d",&n);
	for (int i=1;i<=n;i++) {scanf("%d%d",p+i,p+n+i);p[n+i]++;addedge(i,i+n);}
	for (int i=1;i<=2*n;i++) a[i]=i;
	sort(a+1,a+2*n+1,cmp);
	for (int i=1;i<=2*n;i+=2) addedge(a[i],a[i+1]);
	for (int i=1;i<=2*n;i++)
	  if (!col[i]) {col[i]=2;dfs(i);}
	for (int i=1;i<=n;i++) printf("%d%c",col[i]-1," \n"[i==n]);
	return 0;
}