#include<cstdio>
#include<algorithm>
#include<cstring>
#include<iostream>
#include<queue>
#define SF scanf
#define PF printf
#define mp make_pair
using namespace std;
typedef long long LL;
typedef pair<int, int> pii;
const int MAXN = 200000;
struct Node {
	int v, next;
} Edge[MAXN*6+10];
int adj[MAXN+10], ecnt;
void addedge(int u, int v) {
	Node &e = Edge[++ecnt];
	e.v = v; e.next = adj[u]; adj[u] = ecnt;
}
int n, A[MAXN+10];
pii E[MAXN*2+10];
void dfs(int u, int c) {
	A[u] = c;
	for(int i = adj[u]; i; i = Edge[i].next) {
		int v = Edge[i].v;
		if(A[v] == -1) dfs(v, c^1);
	}
}
int main() {
	SF("%d", &n);
	for(int i = 0; i < n; i++) {
		int l, r;
		SF("%d%d", &l, &r);
		addedge(i<<1, i<<1|1); addedge(i<<1|1, i<<1);
		E[i<<1] = mp(l<<1, i<<1); E[i<<1|1] = mp(r<<1|1, i<<1|1);
	}
	sort(E, E+2*n);
	for(int i = 0; i < n; i++) {
		int x = E[i<<1].second, y = E[i<<1|1].second;
		addedge(x, y); addedge(y, x);
	}
	memset(A, -1, sizeof(A));
	for(int i = 0; i < n; i++)
		if(A[i<<1] == -1) dfs(i<<1, 0);
	for(int i = 0; i < n; i++) PF("%d ", A[i<<1]);
}
 		  		 	    										 	   		