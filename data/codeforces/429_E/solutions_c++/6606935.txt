#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define MN 100005
int n;

struct SEG
{
    int l,num;
    friend bool operator < (const SEG &a,const SEG &b)
    {
        return a.l<b.l;
    }
}seg[MN<<1];

int tot,col[MN<<1];
int there[MN<<2],nx[MN<<2],head[MN<<1];
inline void addedge(int x,int y)
{
    ++tot; there[tot]=y; nx[tot]=head[x]; head[x]=tot;
    ++tot; there[tot]=x; nx[tot]=head[y]; head[y]=tot;
}

void dfs(int x,int cc)
{
    if(col[x]!=-1) return;
    col[x]=cc;
    for(int i=head[x];i;i=nx[i])
    {
        dfs(there[i],cc^1);
    }
}

int main()
{
    int la,ra;

    scanf("%d",&n);
    for(int i=1;i<=n;++i)
    {
        scanf("%d%d",&la,&ra);
        seg[i*2-1].l=la,seg[i*2-1].num=i*2-1;
        seg[i*2].l=ra+1,seg[i*2].num=i*2;
        addedge(i*2-1,i*2);
    }

    sort(seg+1,seg+2*n+1);

    for(int i=1;i<=n;++i)
        addedge(seg[i*2-1].num,seg[i*2].num);

    memset(col,-1,sizeof(col));
    for(int i=1;i<=n*2;++i)
    if(col[i]==-1)
    {
        dfs(i,0);
    }

    for(int i=1;i<=n;++i)
    {
        printf("%d ",col[i*2-1]);
    }

    return 0;
}
