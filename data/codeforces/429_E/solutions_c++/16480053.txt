#include<iostream>
#include<cstdio>
#include<algorithm>
#include<map>
#define N 400001
#include<cmath>
using namespace std;
int a[N][2],g[N];
int ans[N],E[N][2];
int n,x,y;
int c[N],d[N];
bool bz[N];
map<int,int>f;
void ins(int x,int y){
	static int sum=1;
	a[++sum][0]=y,a[sum][1]=g[x],g[x]=sum;
}
void dfs(int x){
	bz[x]=1;
	for (int i=g[x];i;i=a[i][1])
		if (!ans[i/2]){
			ans[i/2]=(i&1)+1;
			dfs(a[i][0]);
		}
}
int main(){
	scanf("%d",&n);
	for (int i=1;i<=n;i++){
		scanf("%d %d",&E[i][0],&E[i][1]);
		c[++c[0]]=--E[i][0],c[++c[0]]=E[i][1];
	}
	sort(c+1,c+c[0]+1);
	x=c[0];
	c[0]=1;
	for (int i=2;i<=x;i++)
		if (c[i]!=c[c[0]])c[++c[0]]=c[i];
	for (int i=1;i<=c[0];i++)
		f[c[i]]=i;
	c[0]++;
	for (int i=1;i<=n;i++){
		x=f[E[i][0]],y=f[E[i][1]];
		ins(x,y),ins(y,x);
		d[x]^=1,d[y]^=1;
	}
	x=-1;
	for (int i=1;i<=c[0];i++)
		if (d[i]){
			if (x!=-1)
				ins(x,i),ins(i,x),x=-1;
			else
				x=i;
		}
	for (int i=1;i<=c[0];i++)
		if (!bz[i])
			dfs(i);
	for (int i=1;i<=n;i++)
		printf("%d ",ans[i]-1);
	return 0;
}