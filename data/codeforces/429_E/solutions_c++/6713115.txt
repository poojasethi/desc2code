#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;
int a[200005],b[100005],i,n,v[200005],e[1000005],head[1000005],next[1000005],o;
struct node {int x,y;} t[200005];
void add(int a,int b,int c)
{
    e[a]=c;
    next[a]=head[b];
    head[b]=a;
}
void dfs(int x,int c)
{
    a[x]=c;
    int  now=head[x];
    while (now!=0)
    {
        if (!v[e[now]]) {v[e[now]]=true; dfs(e[now],1-c);}
        now=next[now];
    }
}
int cmp(node i,node j) {return i.y<j.y;}
int main()
{
    scanf("%d",&n);
    for (i=1; i<=n; i++)
    {
        scanf("%d%d",&a[i],&b[i]);
        add(++o,i*2-1,i*2);
        add(++o,i*2,i*2-1);
    }
    for (i=1; i<=n; i++) {t[i].x=i*2-1; t[i].y=a[i];}
    for (i=1; i<=n; i++) {t[i+n].x=i*2; t[i+n].y=b[i]+1;}
    sort(t+1,t+n*2+1,cmp);
    for (i=1; i<=2*n; i+=2) {add(++o,t[i].x,t[i+1].x); add(++o,t[i+1].x,t[i].x);}
    for (i=1; i<=2*n; i++) if (!v[i]) {v[i]=1; dfs(i,1); }
    for (i=1; i<=n; i++) printf("%d ",a[i*2-1]);
    return 0;
}
