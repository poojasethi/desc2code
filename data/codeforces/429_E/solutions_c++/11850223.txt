#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define n	400005
#define For(i,a,b)	for(int i=a;i<=b;i++)

int		N,D=1,L[n],R[n],B[n],V[n],st[n],IN[n],Ans[n];
struct	Lin{int v,next;}E[n];

void	Link(int u,int v){
		E[++D]=(Lin){v,st[u]};	st[u]=D;IN[u]++;
		E[++D]=(Lin){u,st[v]};	st[v]=D;IN[v]++;
}
void	DFS(int u){
		for (int i=st[u];i;i=E[i].next)
			if	(!V[i])	V[i]=V[i^1]=1,Ans[i>>1]=(E[i].v<u),DFS(E[i].v);
}

int		main(){
		scanf("%d",&N);
		For(i,1,N)	scanf("%d%d",&L[i],&R[i]),R[i]++;
		For(i,1,N)	B[++*B]=L[i],B[++*B]=R[i];
		sort(B+1,B+*B+1);	*B=unique(B+1,B+*B+1)-B-1;

		For(i,1,N)	L[i]=lower_bound(B+1,B+*B+1,L[i])-B,
					R[i]=lower_bound(B+1,B+*B+1,R[i])-B;
		For(i,1,N)	Link(L[i],R[i]);
		for (int i=1,x=-1;i<=*B;i++)	if	(IN[i]&1)
			if	(x!=-1)	Link(x,i),x=-1;	else	x=i;
		For(i,1,*B)	DFS(i);
		For(i,1,N)	printf("%d ",Ans[i]);
}