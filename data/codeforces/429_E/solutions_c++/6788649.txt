#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<vector>
#include<algorithm>
using namespace std;
#define pb push_back
#define mp make_pair
#define X first
#define Y second
const int L=200100;
int n;
vector<int> a[L];
vector<pair<int,int> > b;
int col[L];
void ins(int x,int y)	{a[x].pb(y);a[y].pb(x);}
void dfs(int x,int c)
{
	if(col[x]!=-1)	return;
	col[x]=c;
	for(vector<int>::iterator e=a[x].begin();e!=a[x].end();++e)	dfs(*e,1-c);
}
void init(void)
{
   // freopen("Points and Segments.in","r",stdin);
   // freopen("Points and Segments.out","w",stdout);
    cin>>n;
    int i,l,r;
    for(i=1;i<=n;i++)
    {
		scanf("%d%d",&l,&r);
		l*=2;r=r*2+1;
		ins(i*2-1,2*i);
		b.pb(mp(l,2*i-1));b.pb(mp(r,2*i));
	}
	sort(b.begin(),b.end());
}
void work(void)
{
	int i;
	for(i=0;i<n;i++)	ins(b[i*2].Y,b[i*2+1].Y);
	memset(col,-1,sizeof(col));
	for(i=1;i<=2*n;i++)	if(col[i]==-1)	dfs(i,0);
	for(i=1;i<=n;i++)	printf("%d ",col[i*2-1]);printf("\n");
}
int main(void)
{
    init();
    work();
    return 0;
}
