#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>

using namespace std;

const int maxn = 100005;

vector<int> v[maxn<<1];
struct node
{
    int v,p;
    bool operator<(const node& a)const
    {
        return v < a.v;
    }
}ji[maxn*2];

int col[maxn<<1];

void dfs(int p,int c)
{
    col[p] = c;
    for(int i=0;i<v[p].size();i++)
    {
        int toit = v[p][i];
        if(col[toit]==-1)
            dfs(toit,1-c);
    }
}
int main()
{
    int a,b,n;scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
        scanf("%d%d",&a,&b);
        v[i<<1].push_back(i<<1|1);
        v[i<<1|1].push_back(i<<1);
        ji[i<<1].v = 2*a;ji[i<<1].p = i<<1;
        ji[i<<1|1].v = 2*b+1;ji[i<<1|1].p = i<<1|1;
    }
    n*=2;
    sort(ji,ji+n);
    for(int i=0;i<n;i+=2)
    {
        v[ji[i].p].push_back(ji[i+1].p);
        v[ji[i+1].p].push_back(ji[i].p);
    }
    memset(col,-1,sizeof(col));
    for(int i=0;i<n;i++)
        if(col[i]==-1)
            dfs(i,0);
    for(int i=0;i<n;i+=2)
        printf("%d ",col[i]);
}