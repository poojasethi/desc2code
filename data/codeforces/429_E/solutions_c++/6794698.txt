#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
typedef long long ll;
#define rep(i,n) for (int i=0;i<n;++i)
const int N=400005;
int n,m,last,l,a[N],v[N],c[N],d[N],son[N],next[N],ed[N],flag[N];
void add(int x,int y)
{
	ed[++l]=y,next[l]=son[x],son[x]=l;
	ed[++l]=x,next[l]=son[y],son[y]=l;
}
void dfs(int x)
{
	for (int p=son[x];p;p=next[p]) if (!flag[p])
		flag[p]=flag[p^1]=1,c[p/2]=x<ed[p],dfs(ed[p]);
}
int main()
{
	scanf("%d",&n),m=n*2,last=-1,l=1;
	rep(i,n) scanf("%d%d",a+i,a+n+i),++a[n+i];
	rep(i,m) v[i]=a[i]; sort(v,v+m); m=unique(v,v+m)-v;
	rep(i,n*2) a[i]=lower_bound(v,v+m,a[i])-v,++d[a[i]]; rep(i,n) add(a[i],a[i+n]);
	rep(i,m) if (d[i]&1) if (last<0) last=i; else add(last,i),last=-1;
	rep(i,m) dfs(i); rep(i,n) printf("%d ",c[i+1]);
	return 0;
}
