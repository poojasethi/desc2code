#include<cstdio>
#include<cstring>
#include<queue>
#include<vector>
#include<algorithm>
using namespace std;

vector<pair<int,int> > v[200005];
int l[100005],r[100005],a[200005],s[200005];
bool f[200005];

void dfs(int x)
{
	int i,y,k;
	for(i=0;i<(int)v[x].size();i++)
	{
		y=v[x][i].first;k=v[x][i].second;
		if(!f[k])
		{
			f[k]=1;
			dfs(y);
			s[k]=x>y;
		}
	}
}

int main()
{
	int n,m,k,x,y,i;
	for(scanf("%d",&n),i=0;i<n;i++)
	{
		scanf("%d%d",l+i,r+i);
		a[2*i]=l[i],a[2*i+1]=++r[i];
	}
	sort(a,a+2*n);
	m=unique(a,a+2*n)-a;
	for(i=0;i<n;i++)
	{
		l[i]=x=lower_bound(a,a+m,l[i])-a;
		r[i]=y=lower_bound(a,a+m,r[i])-a;
		v[x].push_back(make_pair(y,i));
		v[y].push_back(make_pair(x,i));
	}
	for(x=-1,i=0,k=n;i<m;i++)
		if(v[i].size()&1)
		{
			if(x<0)
				x=i;
			else
			{
				v[x].push_back(make_pair(i,k));
				v[i].push_back(make_pair(x,k++));
				x=-1;
			}
		}
	for(i=0;i<k;i++)
		if(!f[i])
			dfs(l[i]);
	for(i=0;i<n;i++)
		printf("%d%c",s[i],i==n-1?'\n':' ');
	return 0;
}
