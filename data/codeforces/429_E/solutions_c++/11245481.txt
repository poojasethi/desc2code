#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<map>

using namespace std;

map<int,int> Hash;

int f[300011],g[300011],next[600011],y[600011];
int col[300011],b[600011];
bool p[600011],vis[600011];
int tt,t,n,i,tot,len;
struct seg{
	int l,r;
}a[100011];

void star(int i,int j)
{
	tt++;
	next[tt]=g[i];
	g[i]=tt;
	y[tt]=j;
}

void dfs(int x)
{
	int j,k;
	vis[x]=true;
	j=g[x];
	while(j!=0){
		k=y[j];
		if(p[j]){
			p[j]=p[j^1]=false;
			col[j/2]=j%2;
			dfs(k);
		}
		j=next[j];
	}
}

int main()
{
	scanf("%d",&n);
	for(i=1;i<=n;i++){
		scanf("%d%d",&a[i].l,&a[i].r);
		if(!Hash[a[i].l]){
			Hash[a[i].l]=1;
			b[++tot]=a[i].l;
		}
		a[i].r++;
		if(!Hash[a[i].r]){
			Hash[a[i].r]=1;
			b[++tot]=a[i].r;
		}
	}
	sort(b+1,b+1+tot);
	for(i=1;i<=tot;i++)Hash[b[i]]=i;
	tt=1;
	for(i=1;i<=n;i++){
		a[i].l=Hash[a[i].l];
		a[i].r=Hash[a[i].r];
		star(a[i].l,a[i].r);
		star(a[i].r,a[i].l);
		f[a[i].l]++;f[a[i].r]--;
	}
	for(i=1;i<=tot;i++)f[i]+=f[i-1];
	for(i=1;i<tot;i++){
		if(f[i]%2==1){
			star(i,i+1);
			star(i+1,i);
		}
	}
	memset(p,true,sizeof(p));memset(vis,false,sizeof(vis));
	for(i=1;i<=tot;i++)if(!vis[i])dfs(i);
	for(i=1;i<=n;i++)printf("%d ",col[i]);
	
	
}
	 			 	  							   			 		 	 	 	