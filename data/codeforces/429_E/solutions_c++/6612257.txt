#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 1000010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int l,r;
} a[N];
int i,j,k,n,m,t,te,s;
int b[N],c[N],next[N],head[N],in[N],F[N],id[N],flag[N],an[N],oula[N];
inline void add(int x,int y,int z) {
	c[++t]=y,id[t]=z,next[t]=head[x],head[x]=t;
	c[++t]=x,id[t]=z,next[t]=head[y],head[y]=t;
	in[x]++,in[y]++;
}
void dfs(int x) {
	int v;
	for (v=head[x];v;v=next[v]) if (!F[v]) {
		F[v]=F[v^1]=1;
		dfs(c[v]);
		oula[++s]=v;
	}
}
int main() {
	scanf("%d",&n);
	For(i,1,n) {
		scanf("%d%d",&a[i].l,&a[i].r);
		a[i].l--;
		b[++m]=a[i].l;
		b[++m]=a[i].r;
	}
	b[++m]=2000000000;
	sort(b+1,b+m+1); t=1;
	For(i,1,n) {
		int A=lower_bound(b+1,b+m+1,a[i].l)-b;
		int B=lower_bound(b+1,b+m+1,a[i].r)-b;
		add(A+1,B+1,i);
	}
	j=1; te=m;
	For(i,1,m) if (in[i]&1) {
		for (j=max(j,i+1);j<=m&&in[j]%2==0;j++);
		++te;
		add(i,te,0);
		add(te,j,0);
	}
	For(i,1,m) if (!flag[i]) {
		s=0;
		dfs(i);
		For(j,1,s) {
			int A=oula[j];
			an[id[A]]=A&1;
		}
	}
	For(i,1,n) printf("%d ",an[i]);
	printf("\n");
	//for(;;);
	return 0;
}
