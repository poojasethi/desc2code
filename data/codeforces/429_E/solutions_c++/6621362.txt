#include <iostream>
#include <cstdio>
#include <cstring>
#include <map>
#include <algorithm>
#include <cmath>
#include <vector>
#define N 100005
using namespace std;
typedef pair<int,int> P;
P x[N*2];
vector<int> G[N*2];
int c[N*2],n;
bool dfs(int now){
    bool ok=true;
    for(int i=0;i<(int)G[now].size();i++){
        int to=G[now][i];
        if(c[to]==-1){
            c[to]=!c[now];
            ok=dfs(to);
        }else if(c[to]==c[now]){
            ok=false;
        }
        if(!ok)return false;
    }
    return ok;
}
int main()
{
    cin>>n;
    int cx,cy;
    memset(c,-1,sizeof(c));
    for(int i=0;i<n;i++){
        scanf("%d%d",&cx,&cy);
        x[i<<1]=P(cx<<1,i<<1);
        x[(i<<1)+1]=P((cy<<1)+1,(i<<1)+1);
        G[i<<1].push_back((i<<1)+1);
        G[(i<<1)+1].push_back(i<<1);
    }
    sort(x,x+n*2);
    for(int i=0;i<n;i++){
        cx=x[i<<1].second;
        cy=x[(i<<1)+1].second;
        G[cx].push_back(cy);
        G[cy].push_back(cx);
    }
    bool ok=true;
    for(int i=0;i<2*n;i++){
        if(c[i]==-1){
            c[i]=0;
            ok=dfs(i);
        }
        if(!ok)break;
    }
    if(!ok){puts("-1");return 0;}
    for(int i=0;i<n;i++){
        printf("%d%c",c[i<<1],(i+1==n?'\n':' '));
    }
    return 0;
}
