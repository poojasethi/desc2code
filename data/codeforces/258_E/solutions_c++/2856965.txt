#include<stdio.h>
#include<vector>

using std::vector;

const int MAXN=131072;

int begin[MAXN],next[MAXN<<1],end[MAXN<<1],ne;
inline void add(int a,int b)
{
	end[++ne]=b;
	next[ne]=begin[a];
	begin[a]=ne;
}

int index,l[MAXN],r[MAXN];
void dfs(int u)
{
	l[u]=++index;
	for(int i=begin[u];i;i=next[i])
		if(!l[end[i]])
			dfs(end[i]);
	r[u]=index;
}

int mark[MAXN<<1],cnt[MAXN<<1];
void add(int u,int l,int r,int ll,int rr,int v)
{
	if(r<ll || l>rr)
		return;
	if(ll<=l && r<=rr)
	{
		if(mark[u]+=v)
			cnt[u]=r-l+1;
		else cnt[u]=l!=r?cnt[u<<1]+cnt[u*2+1]:0;
		return;
	}
	int m=(l+r)>>1;
	add(u<<1,l,m,ll,rr,v);
	add(u*2+1,m+1,r,ll,rr,v);
	if(!mark[u])
		cnt[u]=l!=r?cnt[u<<1]+cnt[u*2+1]:0;
}

vector<int> s[MAXN];
int c[MAXN];
void dfs(int u,int fa)
{
	if(s[u].size())
	{
		add(1,1,index,l[u],r[u],1);
		for(unsigned i=0;i!=s[u].size();++i)
			add(1,1,index,l[s[u][i]],r[s[u][i]],1);
	}
	if(cnt[1])
		c[u]=cnt[1]-1;
	for(int i=begin[u];i;i=next[i])
		if(end[i]!=fa)
			dfs(end[i],u);
	if(s[u].size())
	{
		add(1,1,index,l[u],r[u],-1);
		for(unsigned i=0;i!=s[u].size();++i)
			add(1,1,index,l[s[u][i]],r[s[u][i]],-1);
	}
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif
	int n,m,i,a,b;
	scanf("%d%d",&n,&m);
	for(i=1;i<n;++i)
	{
		scanf("%d%d",&a,&b);
		add(a,b),add(b,a);
	}
	dfs(1);
	for(i=0;i<m;++i)
	{
		scanf("%d%d",&a,&b);
		s[a].push_back(b),s[b].push_back(a);
	}
	dfs(1,0);
	for(i=1;i<=n;++i)
		printf("%d ",c[i]);
	putchar(10);
	return 0;
}
