#include <stdio.h>
#include <vector>

using namespace std;

#define M 100100

vector <int> v[M], u[M];

int n, m, p[M], q[M], pa[M], ti, dis[M], fin[M], ans[M];
int addv[4 * M], val[4 * M];

void dfs(int r){
	dis[r] = ++ ti;
	for(int i = 0; i < v[r]. size(); i ++)if(v[r][i] != pa[r]){
		pa[v[r][i]] = r;
		dfs(v[r][i]);
	}
	fin[r] = ti;
}

void push_up(int id, int L){
	if(addv[id])val[id] = L;
	else if(L>1)val[id] = val[id<<1] + val[id<<1|1];
	else val[id] = 0;
}

void update(int L, int R, int id, int l, int r, int vv){
	if(l <= L && R <= r)addv[id] += vv;
	else {
		int md = (L + R) >> 1;
		if(md >= l)update(L, md, id << 1, l, r, vv);
		if(md < r)update(md+1, R, id<<1|1, l, r, vv);
	}
	push_up(id, R - L + 1);
}

void DFS(int r){
	for(int i = 0; i < u[r]. size(); i ++){
		int k = u[r][i];
		update(1, n, 1, dis[p[k]], fin[p[k]], 1);
		update(1, n, 1, dis[q[k]], fin[q[k]], 1);
	}
	ans[r] = val[1] - 1; if(ans[r] < 0)ans[r] = 0;
	for(int i = 0; i < v[r]. size(); i ++)if(v[r][i] != pa[r])DFS(v[r][i]);
	for(int i = 0; i < u[r]. size(); i ++){
		int k = u[r][i];
		update(1, n, 1, dis[p[k]], fin[p[k]], -1);
		update(1, n, 1, dis[q[k]], fin[q[k]], -1);
	}
}

int main(){
	//freopen("in.txt","r",stdin);
	scanf("%d %d\n",&n, &m);
	int x, y;
	for(int i = 1; i < n; i ++ ){
		scanf("%d %d\n",&x, &y);
		v[x]. push_back(y); v[y]. push_back(x);
	}
	for(int i = 0; i < m; i ++){
		scanf("%d %d\n", p + i, q + i);
		u[p[i]].push_back(i); u[q[i]].push_back(i);
	}
	dfs(1);
	DFS(1);
	for(int i = 1; i <= n; i ++){
		if(i > 1)printf(" ");
		printf("%d",ans[i]);
	}
	puts("");
}
