#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <map>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <climits>
#define LL long long
#define mem(a,x) memset(a,x,sizoef(a))
const double pi=acos(-1.0),e=exp(1.0);
using namespace std;
#define MAX 110000
#define pb push_back
#define ls i<<1
#define rs (i<<1)+1

int ans[MAX],T[MAX*10],f[MAX*10],be[MAX],en[MAX],N,ti;
vector <int> a[MAX],p[MAX];

int update(int i,int l,int r){
    if (f[i]) T[i]=r-l+1;
    else T[i]=T[ls]+T[rs];
}

int ins(int i,int l,int r,int x,int y,int d){
    if (y<l || r<x) return 0;
    if (x<=l && r<=y){
        f[i]+=d; update(i,l,r); return 0;
    }
    int mid=l+r>>1;
    ins(ls,l,mid,x,y,d);
    ins(rs,mid+1,r,x,y,d);
    update(i,l,r);
}

int dfs(int u,int fa){
    int i,v,size;
    be[u]=++ti;
    for (i=0,size=a[u].size();i<size;i++){
        v=a[u][i];
        if (v!=fa) dfs(v,u);
    }
    en[u]=ti;
}

int doit(int u,int fa){
    int i,v,size;
    for (i=0,size=p[u].size();i<size;i++){
        v=p[u][i];
        ins(1,1,N,be[v],en[v],1);
    }
    ans[u]=T[1]?T[1]-1:0;
    for (i=0,size=a[u].size();i<size;i++){
        v=a[u][i];
        if (v!=fa) doit(v,u);
    }
    for (i=0,size=p[u].size();i<size;i++){
        v=p[u][i];
        ins(1,1,N,be[v],en[v],-1);
    }
}

int main(){
    int i,x,y,M;
    scanf("%d%d",&N,&M);
    for (i=1;i<N;i++){
        scanf("%d%d",&x,&y);
        a[x].pb(y); a[y].pb(x);
    }
    for (i=1;i<=M;i++){
        scanf("%d%d",&x,&y);
        p[x].pb(x); p[x].pb(y);
        p[y].pb(x); p[y].pb(y);
    }
    dfs(1,0);
    doit(1,0);
    for (i=1;i<=N;i++) printf("%d%c",ans[i],i==N?'\n':' ');
}
