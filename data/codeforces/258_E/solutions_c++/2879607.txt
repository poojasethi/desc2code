#include<cstdio>
#include<vector>
#include<utility>
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define fo(i,a,b) for(i=a;i<=b;++i)
using namespace std;
const int mn=101000;
int s[mn*4],f[mn*4],ans[mn];
int n,Q,L[mn],R[mn],tt;
vector<int>e[mn];
vector<pair<int,int> >I[mn],D[mn];
void dfs(int r,int fa)
{
    L[r]=++tt;
    for(int p=0,i;p<e[r].size();++p)
    {
        i=e[r][p];
        if(i!=fa)dfs(i,r);
    }
    R[r]=tt;
}
void build(int p,int l,int r)
{
    s[p]=r-l+1;
    if(l==r)return;
    int m=(l+r)/2;
    build(p+p,l,m);
    build(p+p+1,m+1,r);
}
void add(int p,int l,int r,int x,int y,int v)
{
    if(x<=l&&y>=r)
    {
        f[p]+=v;
        if(f[p])s[p]=0;
        else s[p]=l<r?(s[p+p]+s[p+p+1]):1;
        return;
    }
    int m=(l+r)/2;
    if(x<=m)add(p+p,l,m,x,y,v);
    if(y>m)add(p+p+1,m+1,r,x,y,v);
    if(f[p])s[p]=0;
    else s[p]=l<r?(s[p+p]+s[p+p+1]):1;
}
int main()
{
    scanf("%d%d",&n,&Q);
    int i,j,k;
    fo(i,1,n-1)
    {
        scanf("%d%d",&j,&k);
        e[j].pb(k),e[k].pb(j);
    }
    dfs(1,0);
    build(1,1,n);
    while(Q--)
    {
        scanf("%d%d",&i,&j);
        I[L[i]].pb(mp(i,j)),D[R[i]+1].pb(mp(i,j));
        I[L[j]].pb(mp(i,j)),D[R[j]+1].pb(mp(i,j));
    }
    fo(i,1,n)
    {
        for(j=0;j<I[i].size();++j)
        {
            add(1,1,n,L[I[i][j].fi],R[I[i][j].fi],1);
            add(1,1,n,L[I[i][j].se],R[I[i][j].se],1);
        }
        for(j=0;j<D[i].size();++j)
        {
            add(1,1,n,L[D[i][j].fi],R[D[i][j].fi],-1);
            add(1,1,n,L[D[i][j].se],R[D[i][j].se],-1);
        }
        ans[i]=n-s[1];
        if(ans[i])--ans[i];
    }
    fo(i,1,n-1)printf("%d ",ans[L[i]]);
    printf("%d\n",ans[L[n]]);
    return 0;
}