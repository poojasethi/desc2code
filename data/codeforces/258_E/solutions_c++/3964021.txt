#include<stdio.h>
#include<stdlib.h>
#include<iostream>
#include<algorithm>
#define N 210000
#define foru(i,a,b) for(int i=a;i<=b;++i)
#define forv(i,a) for(int j=g1[a],i=map1[j];j;j=next1[j],i=map1[j])
#define forp(i,a) for(int j=g2[a],i=map2[j];j;j=next2[j],i=map2[j])

using namespace std;
int sum[4*N],da[4*N],next1[N],g1[N],map1[N],next2[N],g2[N],map2[N],l[N],r[N],f[N];
int n,m,tot,a,b;
void make(int a,int b)
{
	next1[++tot]=g1[a]; g1[a]=tot; map1[tot]=b;
}
void add(int a,int b)
{
	next2[++tot]=g2[a]; g2[a]=tot; map2[tot]=b;
}
void init(int a,int b)
{
	l[a]=++tot;
	forv(i,a)
	  if(i!=b) init(i,a);
	r[a]=tot;
}
void icc(int l,int r,int ll,int rr,int d,int no)
{
	if(l>rr||ll>r) return;
	if(ll<=l&&r<=rr)
	{
		da[no]+=d;
		if(da[no]) sum[no]=r-l+1;
		else sum[no]=sum[2*no]+sum[2*no+1];
		return;
	}
	icc(l,(l+r)>>1,ll,rr,d,2*no); icc(((l+r)>>1)+1,r,ll,rr,d,2*no+1);
	if(!da[no]) sum[no]=sum[2*no]+sum[2*no+1];
}
void dfs(int a,int b)
{
	forp(i,a) icc(1,n,l[i],r[i],1,1);
	if(g2[a]) icc(1,n,l[a],r[a],1,1);
	f[a]=max(sum[1]-1,0);
	forv(i,a)
	  if(i!=b) dfs(i,a);
	forp(i,a) icc(1,n,l[i],r[i],-1,1);	
	if(g2[a]) icc(1,n,l[a],r[a],-1,1);
}
int main()
{
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	cin>>n>>m;
 	tot=0;
	foru(i,1,n-1)
	  cin>>a>>b,make(a,b),make(b,a);
	tot=0;
	foru(i,1,m)
	  cin>>a>>b,add(a,b),add(b,a);
	tot=0; init(1,0);
	dfs(1,0);
	foru(i,1,n)
	  printf("%d%c",f[i],i==n?'\n':' ');
	return 0;
}
