#include <cstdio>
#include <vector>
#include <iostream>
#define rep(i,n) for (int i=0; i<n; ++i)
#define For(i,n) for (int i=1; i<=n; ++i)

using namespace std;

const int N = 100000 + 10;
int n,m,u,v,sz,a[N],b[N],L[N],R[N],ans[N];
int mark[N<<2], s[N<<2];
vector <int> e[N],p[N];

void update(int x,int l,int r)
{
    if (mark[x])
        s[x] = r-l+1;
    else
        if (l==r)
            s[x] = 0;
    else
        s[x] = s[x<<1] + s[x<<1|1];
}
void dfs(int x,int fa)
{
    L[x] = ++sz;
    rep(i,e[x].size())
    {
        int v = e[x][i];
        if (v==fa) continue;
        dfs(v,x);
    }
    R[x] = sz;
}
void Modify(int x,int l,int r,int aa,int bb,int d)
{
    if (aa<=l && r<=bb)
    {
        mark[x] += d;
        update(x,l,r);
        return;
    }
    int m = (l+r)>>1;
    if (aa<=m) Modify(x<<1,l,m,aa,bb,d);
    if (m+1<=bb) Modify(x<<1|1,m+1,r,aa,bb,d);
    update(x,l,r);
}

void DFS(int x,int fa)
{
    rep(i,p[x].size())
    {
        int v = p[x][i];
        Modify(1,1,n,L[a[v]],R[a[v]],1);
        Modify(1,1,n,L[b[v]],R[b[v]],1);
    }
    ans[x] = s[1];
    rep(i,e[x].size())
    {
        int v = e[x][i];
        if (v==fa) continue;
        DFS(v,x);
    }
    rep(i,p[x].size())
    {
        int v = p[x][i];
        Modify(1,1,n,L[a[v]],R[a[v]],-1);
        Modify(1,1,n,L[b[v]],R[b[v]],-1);
    }
}
int main()
{
    scanf("%d%d",&n,&m);
    For(i,n-1)
    {
        scanf("%d%d",&u,&v);
        e[u].push_back(v);
        e[v].push_back(u);
    }
    For(i,m)
    {
        scanf("%d%d",&a[i],&b[i]);
        p[a[i]].push_back(i);
        p[b[i]].push_back(i);
    }
    dfs(1,0);
    DFS(1,0);
    For(i,n)
        printf("%d ",max(ans[i]-1,0));
}
