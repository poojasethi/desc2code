#include<cstdio>
#include<vector>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;
const int maxn=400005;
int v[maxn],l[maxn],r[maxn],ans[maxn];
int tot,n,m,pre[maxn],last[maxn],child[maxn],c[maxn*2],d[maxn*2];
vector<int>a[maxn];
void DFSA(int x)
{
	if(v[x])return;v[x]=1;l[x]=++tot;
	for(int i=last[x];i;i=pre[i])DFSA(child[i]);
	r[x]=tot;
}
void updata(int i,int len)
{
	if(d[i])c[i]=len;else c[i]=c[i*2]+c[i*2+1];
}
void updata(int i,int a,int b,int l,int r,int delta)
{
	if(l<=a&&b<=r){d[i]+=delta;updata(i,b-a+1);return;}
	int mid=(a+b)/2;
	if(l<=mid)updata(i*2,a,mid,l,r,delta);
	if(mid<r)updata(i*2+1,mid+1,b,l,r,delta);
	updata(i,b-a+1); 
}
void DFSB(int x)
{
	if(v[x])return;v[x]=1;
	for(int i=0;i<a[x].size();i++)updata(1,1,n,l[a[x][i]],r[a[x][i]],1);
	ans[x]=max(c[1]-1,0);
	for(int i=last[x];i;i=pre[i])DFSB(child[i]);
	for(int i=0;i<a[x].size();i++)updata(1,1,n,l[a[x][i]],r[a[x][i]],-1);
}
int main()
{
	cin>>n>>m;
	for(int i=1,t=1;i<n;i++)
	{
		int x,y;scanf("%d%d",&x,&y);
		pre[++t]=last[x];last[x]=t;child[t]=y;
		pre[++t]=last[y];last[y]=t;child[t]=x;
	}
	DFSA(1);
	for(int i=1;i<=m;i++)
	{
		int x,y;scanf("%d%d",&x,&y);
		a[x].push_back(x);a[x].push_back(y);
		a[y].push_back(x);a[y].push_back(y);
	}
	memset(v,0,sizeof(v));DFSB(1);
	for(int i=1;i<=n;i++)printf("%d ",ans[i]);
	return 0;
}