/*
 * Author:  vawait
 * Created Time:  2013/11/15 21:46:18
 * File Name: test.cpp
 */
#include<cstdio>
#include<iostream>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<vector>
#include<queue>
#include<stack>
using namespace std;
#define rep(i, a, b) for (int i = (a); i <= (b); ++i)
#define red(i, a, b) for (int i = (a); i >= (b); --i)
#define clr( x , y ) memset(x,y,sizeof(x))
#define sqr(x) ((x) * (x))
typedef long long lint;
int a[60],d[60],f[60],n,m,x,t,ans=0;
bool v[60];

struct nodd
{
    int x,y,c,d,n;
} b[200000];

void add(int x,int y,int c,int d)
{
    b[++t].y = y;
    b[t].x = x;
    b[t].c = c;
    b[t].d = d;
    b[t].n = a[x];
    a[x] = t;
}

void init()
{
    scanf("%d%d",&n,&m);
    t = 1;
    clr(a,0);
    rep(i,1,n)
        rep(j,1,n) {
            scanf("%d",&x);
            if ( x ) {
                add(i,j,x,0);
                add(j,i,0,0);
                add(i,j,10000,1);
                add(j,i,0,1);
            }
        }
}

void work()
{
    queue<int> q;
    int x,y;
    while ( 1 ) {
        q.push(1);
        clr(v,1); v[1] = 0;
        clr(d,1); d[1] = 0;
        while ( !q.empty() ) {
            x = q.front(); q.pop();
            for(int p=a[x]; p; p=b[p].n) if ( b[p].c && b[p].d + d[x] < d[ y = b[p].y ] ) {
                d[y] = b[p].d + d[x];
                f[y] = p;
                if ( v[y] ) {
                    v[y] = 0;
                    q.push(y);
                }
            }
            v[x] = 1;
        }
        if ( d[n] > m ) break;
        for ( x = n , y = 10000000; x != 1; x = b[f[x]].x ) y = min( y , b[f[x]].c );
        if ( d[n] ) y = min( y , m / d[n] );
        m -= y * d[n];
        ans += y;
        for ( x = n; x != 1; x = b[f[x]].x ) b[f[x]].c -= y , b[ f[x] ^ 1 ].c += y , b[ f[x] ^ 1 ] . d = - b[f[x]].d;
    }
    printf("%d",ans);
}

int main()
{
    init();
    work();
    return 0;
}
