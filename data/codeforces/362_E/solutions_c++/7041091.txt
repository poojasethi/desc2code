#include<cstdio>
#include<cstring>
#define N 100
#define M 100000
int n,m,i,j,inf,dp,flow,ans,sss,ttt,a,l,r,mid;
int p[N],now[N],dis[N],vis[N],o[N],f[N];
int pre[M],tt[M],g[M],w[M],gg[M];
void link(int x,int y,int z,int ww)
{
	dp++;pre[dp]=p[x];p[x]=dp;tt[dp]=y;g[dp]=z;w[dp]=ww;
	dp++;pre[dp]=p[y];p[y]=dp;tt[dp]=x;g[dp]=0;w[dp]=-ww;
}
int min(int a,int b)
{
	if (a<b) return a;return b;
} 
int dfs(int u,int flow)
{
	int z,ww,tmp,i,v;
	if (u==ttt)
	{
		ans=ans+flow*dis[u];
		return flow;
	}
	z=0;
	i=now[u];
	vis[u]=1;
	o[u]=1;
	while (i)
	{
		v=tt[i];
		tmp=min(g[i],flow-z);
		if (tmp>0)
		{
			ww=dis[u]-dis[v]+w[i];
			if (ww<f[v]) f[v]=ww;
			if ((ww==0)&&(o[v]==0))
			{
				ww=dfs(v,tmp);
				z=z+ww;g[i]=g[i]-ww;
				if (i%2==1) g[i+1]=g[i+1]+ww;else g[i-1]=g[i-1]+ww;
				if (z==flow)
				{
					o[u]=0;
					return flow;
				}
			}
		}
		i=pre[i];
		now[u]=i;
	}
	o[u]=0;
	return z;
} 

int main()
{
	scanf("%d%d",&n,&m);
	sss=0;ttt=n;
	link(0,1,0,0);
	for (i=1;i<=n;i++)
	{
		for (j=1;j<=n;j++)
		{
			scanf("%d",&a);
			if (a)
			{ 
				link(i,j,a,0);
				link(i,j,m,1);
			}
		}
	}
	
	memcpy(gg,g,sizeof(g));
	l=1;r=200000000;
	do
	{
		mid=(l+r)>>1;
		memcpy(g,gg,sizeof(gg));
		memset(dis,0,sizeof(dis));
	    flow=0;ans=0;g[1]=mid;
		do
		{
			memcpy(now,p,sizeof(p));
			for (i=sss;i<=ttt;i++)
			f[i]=10000000;
			memset(vis,0,sizeof(vis));
			flow=flow+dfs(sss,10000000);
			inf=10000000;
			for (i=sss;i<=ttt;i++) if ((f[i]<inf)&&(vis[i]==0)) inf=f[i];
			for (i=sss;i<=ttt;i++) if (vis[i]==0) dis[i]=dis[i]+inf;
		}
		while (inf!=10000000);
		if ((ans>m)||(flow!=mid)) r=mid-1;else l=mid+1;
	}
	while (l<=r);
	printf("%d",r);
}
	 	  			   	 				 	   		