#include <bits/stdc++.h>
using namespace std;
const int N = 123;
bool a[N][N][N];
bool used[N][N][N];
struct abc
{
    int x, y, z;
};
vector <abc> v;
int t[10];
abc hozir;
void dfs1(int x, int y, int z, int s)
{
    if(s >= 3)
        return ;
    if(x == hozir.x && z == hozir.z && y == hozir.y)
        return ;
    for(int i = 0; i < v.size(); i ++)
    {
        abc d = v[i];
        if(x == d.x && y == d.y && z == d.z)
            t[i] ++;
    }
    if(a[x + 1][y][z])
    {
        dfs1(x + 1, y, z, s + 1);
    }
    if(a[x][y + 1][z])
    {
        dfs1(x, y + 1, z, s + 1);
    }
    if(a[x][y][z + 1])
    {
        dfs1(x, y, z + 1, s + 1);
    }
}
bool dfs(int x, int y, int z)
{
    v.clear();
    t[0] = 0;
    t[1] = 0;
    t[2] = 0;
    hozir.x = x;
    hozir.y = y;
    hozir.z = z;
    if(a[x + 1][y][z])
    {
        abc d;
        d.x = x + 1;
        d.y = y;
        d.z = z;
        v.push_back(d);
    }
    if(a[x][y + 1][z])
    {
        abc d;
        d.x = x;
        d.y = y + 1;
        d.z = z;
        v.push_back(d);
    }
    if(a[x][y][z + 1])
    {
        abc d;
        d.x = x;
        d.y = y;
        d.z = z + 1;
        v.push_back(d);
    }
    if(v.size() == 0)
        return 0;
    if(a[x - 1][y][z])
    {
        t[0] = 0;
        t[1] = 0;
        t[2] = 0;
        dfs1(x - 1, y, z, 0);
        for(int i = 0; i < v.size(); i ++)
            if(t[i] == 0)
                return 1;
    }
    if(a[x][y - 1][z])
    {
        t[0] = 0;
        t[1] = 0;
        t[2] = 0;
        dfs1(x, y - 1, z, 0);
        for(int i = 0; i < v.size(); i ++)
            if(t[i] == 0)
                return 1;
    }
    if(a[x][y][z - 1])
    {
        t[0] = 0;
        t[1] = 0;
        t[2] = 0;
        dfs1(x, y, z - 1, 0);
        for(int i = 0; i < v.size(); i ++)
            if(t[i] == 0)
                return 1;
    }
    return 0;
}
main()
{
    int n, m, i, j, q, k;
    cin >> n >> m >> q;
    char e;
    for(i = 1; i <= n; i ++)
    {
        for(j = 1; j <= m; j ++)
        {
            for(k = 1; k <= q; k ++)
            {
                cin >> e;
                if(e == '1')
                    a[i][j][k] = 1;
            }
        }
    }
    int ans = 0;
    for(i = 1; i <= n; i ++)
    {
        for(j = 1; j <= m; j ++)
        {
            for(k = 1; k <= q; k ++)
            {
                if(a[i][j][k] && dfs(i, j, k))
                {
                    //cout << i << " " << j << "  "<< k << endl;
                    ans ++;
                }
            }
        }
    }
    cout << ans;
}
