#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#define ll long long
#define pb push_back
#define mp make_pair
#define M_PI 3.14159265358979323846
using namespace std;
int n, m, k;
int power[100][100][100];
int col[100][100][100];
int main() {
    srand(time(NULL));
    ios_base::sync_with_stdio(false);
	cin >> n >> m >> k;
	for (int x = 0; x < n; x++) {
		for (int y = 0; y < m; y++) {
			for (int z = 0; z < k; z++) {
				char v;
				cin >> v;
				power[x][y][z] = v - '0';
				col[x][y][z] = 0;
			}
		}
	}
	int ans = 0;
	for (int x = 0; x < n; x++) {
		for (int y = 0; y < m; y++) {
			for (int z = 0; z < k; z++) {
				if (power[x][y][z] == 0) continue;
				if (x + 1 < n && power[x + 1][y][z] == 1) {
					col[x + 1][y][z]++;
				}
				if (y + 1 < m && power[x][y + 1][z] == 1) {
					col[x][y + 1][z]++;
				}
				if (z + 1 < k && power[x][y][z + 1] == 1) {
					col[x][y][z + 1]++;
				}
			}
		}
	}
	for (int x = 0; x < n; x++) {
		for (int y = 0; y < m; y++) {
			for (int z = 0; z < k; z++) {
				if (power[x][y][z] == 0 || col[x][y][z] == 0) continue;
				if (x + 1 < n && x > 0 && power[x + 1][y][z] == 1 && power[x - 1][y][z] == 1) {
					ans++;
					continue;
				}
				if (y + 1 < m && y > 0 && power[x][y + 1][z] == 1 && power[x][y - 1][z] == 1) {
					ans++;
					continue;
				}
				if (z + 1 < k && z > 0 && power[x][y][z + 1] == 1 && power[x][y][z - 1] == 1) {
					ans++;
					continue;
				}
				if (x > 0 && power[x - 1][y][z] == 1) {
					if (y + 1 < m && power[x - 1][y + 1][z] == 0 && power[x][y + 1][z] == 1) {
						ans++;
						continue;
					}
					if (z + 1 < k && power[x - 1][y][z + 1] == 0 && power[x][y][z + 1] == 1) {
						ans++;
						continue;
					}
				}
				if (y > 0 && power[x][y - 1][z] == 1) {
					if (x + 1 < n && power[x + 1][y - 1][z] == 0 && power[x + 1][y][z] == 1) {
						ans++;
						continue;
					}
					if (z + 1 < k && power[x][y - 1][z + 1] == 0 && power[x][y][z + 1] == 1) {
						ans++;
						continue;
					}
				}
				if (z > 0 && power[x][y][z - 1] == 1) {
					if (y + 1 < m && power[x][y + 1][z - 1] == 0 && power[x][y + 1][z] == 1) {
						ans++;
						continue;
					}
					if (x + 1 < n && power[x + 1][y][z - 1] == 0 && power[x + 1][y][z] == 1) {
						ans++;
						continue;
					}
				}
			}
		}
	}
	cout << ans << "\n";
	return 0;
}