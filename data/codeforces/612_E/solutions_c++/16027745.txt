#include <stdio.h>
#include <string.h>
#include <algorithm>
using namespace std;

#define M 2000001

struct dat{
	int x, y;
	dat(int x = 0, int y = 0):x(x), y(y){}
}a[M], b[M];

bool cmp(dat A, dat B) {
	if(A.y != B.y) return A.y < B.y;
	return A.x < B.x;
}

int n;

int p[M], vis[M], q[M];


int main() {
	//freopen("e.in", "r", stdin);
	scanf("%d", &n);
	for(int i = 1; i <= n; i ++) scanf("%d", &p[i]);
	int m = 0, mm = 0;
    for(int i = 1; i <= n; i ++) if(!vis[i]){
		vis[i] = 1;
        int x = p[i], cnt = 1;
        while(x != i) {
			vis[x] = 1;
			x = p[x];
			cnt ++;
        }
        if(cnt % 2 == 0) a[++m] = dat(i, cnt);
        else b[++mm] = dat(i, cnt);
    }
    sort(a + 1, a + m + 1, cmp);
    if(m % 2) return puts("-1");
    for(int i = 1; i <= m; i += 2) if(a[i].y != a[i + 1]. y) return puts("-1");
    for(int i = 1; i <= mm; i ++) {
    	int x = b[i].x;
        for(int j = 0; j < (b[i].y + 1) / 2; j ++) x = p[x];
        int y = b[i].x;
        for(int j = 0; j < b[i].y; j ++) {
			q[y] = x;
			y = p[y];
			x = p[x];
        }
    }
    for(int i = 1; i <=m; i += 2) {
        int x = a[i].x, xx = a[i+1].x;
        for(int j = 0; j < a[i].y; j ++) {
            q[x] = xx;
			q[xx] = p[x];
			x = p[x];
			xx = p[xx];
        }
    }
    for(int i = 1; i <= n; i ++) printf("%d ", q[i]);
}
