#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>

using namespace std;

const int Maxn=1e6+1;

int a[Maxn],f[Maxn],Q[Maxn],Q_[Maxn],next[Maxn],num[Maxn],tail[Maxn],b[Maxn],c[Maxn];

int n,length,l,i,j,k,u;

bool t[Maxn];

void Re() {
	c[++length]=l;
	b[length]=u;
	next[length]=tail[l];
	tail[l]=length;
	num[l]++;
}

bool Judge() {
	int k,m;
	for (u=1;u<=length;u++) {
		k=c[u];
		if (num[k] & 1) return false;
		if (b[tail[k]]>b[u]) {
			
			i=1;
			m=b[u];
			for (j=0;j<k;j++) {
				Q_[i]=m;
				m=a[m];
				i+=2;
			}
			i=2;
			m=b[tail[k]];
			for (j=0;j<k;j++) {
				Q_[i]=m;
				m=a[m];
				i+=2;
			}
			k=k*2;
			for (i=1;i<k;i++) f[Q_[i]]=Q_[i+1];
			f[Q_[k]]=Q_[1];
			k/=2;
			tail[k]=next[tail[k]];
		}
	}
	return true;
}

int main() {
	scanf("%d",&n);
	for (i=1;i<=n;i++) scanf("%d",&a[i]);
	for (u=1;u<=n;u++) {
		if (! t[u]) {
			t[u]=true;
			j=u;
			l=1;
			Q[0]=u;
			while (a[j]!=u) {
				j=a[j];
				t[j]=true;
				Q[l++]=j;
			}
			if (l & 1) {
				i=-1;
				k=l/2+1;
				for (j=0;j<k;j++) {
					i = i+2;
					Q_[i]=Q[j];
				}
				i=0;
				for (j=k;j<l;j++) {
					i = i+2;
					Q_[i]=Q[j];
				}
				for (i=1;i<l;i++) f[Q_[i]]=Q_[i+1];
				f[Q_[l]]=Q_[1];
			} else Re();
		}
	}
	if (Judge()) {
		for (i=1;i<=n;i++) printf("%d ",f[i]);
		printf("\n");
	}
	else printf("-1\n");
	return 0;
}
