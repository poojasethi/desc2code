// solution idea - editorial

#include <iostream>
#include <stdio.h>
#include <vector>

using namespace std;

const int N = 1e6 + 7;

vector<vector<int> > vv[N];
vector<int> w;
int ans[N];

int n;
int x[N];
int v[N];

void dfs(int tp)
{
	if(v[tp]) return;
	v[tp] = 1;
	w.push_back(tp);
	tp = x[tp];
	dfs(tp);
}

void update(vector<int> temp)
{
	for(int i=0;i<temp.size();i++)
	{
		ans[temp[i]] = temp[(i+1)%temp.size()];
	}
}

int main()
{
	#ifndef ONLINE_JUDGE
		freopen("I.in","r",stdin);
	#endif
	cin>>n;
	for(int i=0;i<n;i++) scanf("%d",&x[i+1]);
	for(int i=1;i<=n;i++)
	{
		if(!v[i]) 
		{
			w.clear();
			dfs(i);
			vv[w.size()].push_back(w);
		}
	}
	for(int i=2;i<=n;i+=2)
	{
		if(vv[i].size()&1)
		{
			puts("-1");
			return 0;
		}
	}
	for(int i=1;i<=n;i++)
	{
		if(vv[i].size() == 0) continue;
		if(i&1)
		{
			for(int j=0;j<vv[i].size();j++)
			{
				vector<int> temp;
				int len = i/2;
				for(int k=0;k<len;k++)
				{
					temp.push_back(vv[i][j][k]);
					temp.push_back(vv[i][j][(k+1)+len]);
				}
				temp.push_back(vv[i][j][len]);
				update(temp);
			}
		}
		else
		{
			for(int j=0;j<vv[i].size();j+=2)
			{
				vector<int> temp;
				for(int k=0;k<vv[i][j].size();k++)
				{
					temp.push_back(vv[i][j][k]);
					temp.push_back(vv[i][j+1][k]);
				}
				update(temp);
			}
		}
	}
	for(int i=1;i<=n;i++) printf("%d ",ans[i]);
	return 0;
}