#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

#define pii pair<int,int>
#define pll pair<ll,ll>
#define PB push_back
#define MP make_pair
#define X first
#define Y second
#define N 1000001

int p[N],q[N],counter[N];
bool visited[N];
vector< vector<int> > v;

void generate_q(vector<int>& a){
	int n,i,j,k;

	n=a.size();
	k=n/2;

	for(i=0,j=k+1;i<k;i++,j++)
		q[a[i]]=a[j];

	q[a[k]]=a[0];

	for(i=k+1,j=1;j<k+1;i++,j++)
		q[a[i]]=a[j];
}

void merge_and_generate(vector<int>& a, vector<int>& b){
	int i,j,k;

	k=a.size();

	for(i=0;i<k;i++)
		q[a[i]]=b[i];

	for(i=0;i<k-1;i++)
		q[b[i]]=a[i+1];

	q[b[k-1]]=a[0];
}

int main(){
	int n,m,i,j,k,l;

	vector<int> w;
	v.PB(w);

	scanf("%d", &n);

	for(i=1;i<n+1;i++)
		scanf("%d", &p[i]);

	for(i=1,m=1;i<n+1;i++){
		if(visited[i]==0){
			vector<int> u;

			u.PB(i);
			visited[i]=1;
			k=1;

			for(j=p[i];j!=i;j=p[j],k++){
				u.PB(j);
				visited[j]=1;
			}

			if(k==1)
				q[i]=i;
			else{
				if(k%2==1)
					generate_q(u);
				else{
					v.PB(u);

					if(counter[k]==0)
						counter[k]=m;
					else{
						merge_and_generate(v[counter[k]],v[m]);
						counter[k]=0;
					}

					m++;
				}
			}
		}
		else;
	}

	for(i=1;i<n+1 && counter[i]==0;i++);

	if(i!=(n+1))
		printf("-1\n");
	else{
		for(i=1;i<n+1;i++)
			printf("%d ", q[i]);

		printf("\n");
	}

	return 0;
}