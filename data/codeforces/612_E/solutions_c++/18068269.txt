//2016-05-25 03:55:31.058000
#include <algorithm>
#include <stdio.h>
#include <memory.h>
#include <string.h>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <string>

using namespace std;

#define NN 1100000

typedef pair<int, int> pii;
typedef long long INT;

int N;
int p[NN], vst[NN];
int cnt, id[NN], sz[NN];
vector<int> cyc[NN];
int buf[NN];

bool cmp(int u, int v) {
	return sz[u]<sz[v];
}

bool solve() {
	for (int i=1; i<=N; i++) {
		if (vst[i]) continue;
		cyc[cnt].push_back(i);
		vst[i]=1;
		int cur=i;
		while (1) {
			cur=p[cur];
			if (vst[cur]) break;
			vst[cur]=1;
			cyc[cnt].push_back(cur);
		}
		cnt++;
	}
	
	for (int i=0; i<cnt; i++) {
		id[i]=i;
		sz[i]=cyc[i].size();
	}
	
	sort(id, id+cnt, cmp);
	
	for (int i=0; i<cnt; i++) {
		int u=id[i];
		if (sz[u]%2==1) {
			for (int j=0; j<sz[u]; j++)
				buf[j*2%sz[u]]=cyc[u][j];
			for (int j=0; j<sz[u]; j++) {
				p[buf[j]]=buf[(j+1)%sz[u]];
			}
		} else {
			if (i==cnt-1) return false;
			int v=id[i+1];
			if (sz[u]!=sz[v]) return false;
			for (int j=0; j<sz[u]; j++) {
				p[cyc[u][j]]=cyc[v][j];
				p[cyc[v][j]]=cyc[u][(j+1)%sz[u]];
			}
			i++;
		}
	}
	
	return true;
}
int main() {
	scanf("%d", &N);
	for (int i=1; i<=N; i++)
		scanf("%d", &p[i]);
	
	if (solve()) {
		for (int i=1; i<=N; i++) {
			if (i>1) printf(" ");
			printf("%d", p[i]);
		}
		puts("");
	} 
	else puts("-1");
	
	return 0;
}