#include<bits/stdc++.h>
#define N 1000005
using namespace std;
vector<int>a[N/2],now;
int succ[N],succ2[N],id[N];
int vis[N],start,n,i,cnt,k,len;
void Bye(){
  puts("-1");exit(0);
}
void DFS(int x){
  now.push_back(x);vis[x]=1;
  if (!vis[succ2[x]]) return DFS(succ2[x]);
  if (succ2[x]!=start) Bye();
  if (now.size()&1){
    int add=now.size()/2;
    for (int i=0;i<add;i++)
      succ[now[i]]=now[add+i+1];
    succ[now[add]]=now[0];
    for (int i=add+1;i<now.size();i++)
      succ[now[i]]=now[i-add];
    return;
  }a[++cnt]=now;
  //for (int i=0;i<now.size();i++)
    //printf("%d ",now[i]);
}
int cmp(const int &A,const int &B){return a[A].size()<a[B].size();}
int main(){
  scanf("%d",&n);
  for (i=1;i<=n;i++)
    scanf("%d",&succ2[i]);
  //odd cycle can build itself
  //even cycle must combine with others
  for (i=1;i<=n;i++)
    if (!vis[i]){
      start=i;
      now.clear();
      DFS(i);
    }
  for (i=1;i<=cnt;i++) id[i]=i;
  sort(id+1,id+cnt+1,cmp);
  if (cnt&1) Bye();
  for (i=2;i<=cnt;i+=2)
    if (a[id[i]].size()!=a[id[i-1]].size()) Bye();
    else {
      len=a[id[i]].size();
      for (k=0;k<len;k++)
        //printf("%d %d\n",a[id[i-1]][k],a[id[i]][k]);
        succ[a[id[i-1]][k]]=a[id[i]][k];
      for (k=0;k<len-1;k++)
        succ[a[id[i]][k]]=a[id[i-1]][k+1];
      succ[a[id[i]][len-1]]=a[id[i-1]][0];
    }
  for (i=1;i<=n;i++)
    printf("%d ",succ[i]);
}