#include <iostream>
#include <algorithm>
#include <cstdio>
#include <vector>
using namespace std;

double DP[1010][1010];
long long count(long long x,long long y);
int main(){
	int n,l,r;
	int i,j,k;
	long long x,y,z;
	double d,d1,d2;
	vector<double> vp;
	
	cin>>n;
	for(i=0;i<n;i++){
		cin>>x>>y;
		z = count(x,y);
		vp.push_back(double(z)/(y-x+1));
	}
	cin>>k;
	
	DP[0][1] = vp[0]; DP[0][0] = (1-vp[0]);
	for(i=1;i<n;i++){
		DP[i][0] = 0;
		for(j=0;j<=i;j++){
			DP[i][j] += (DP[i-1][j]*(1-vp[i]));
			DP[i][j+1] = (DP[i-1][j]*vp[i]);
		}
	}
	double ans=0;
	for(i=n;i>=0 && (100*i) >= (n*k);i--)
		ans += DP[n-1][i];
	printf("%.11lf\n",ans);
	return 0;
}

long long count(long long x,long long y)
{
	long long a,b,c;
	a = 1; c = 0;
	for(int i=0;i<=18 && a <= y;i++,a*=10)
		c += max(0LL,(min((2*a)-1,y) - max(a,x))+1);
	return c;
}
		
	
	
	