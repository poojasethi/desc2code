#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

int n,k;
long long l,r;

long long calc(long long b)
{
	unsigned long long now = 1;
	long long ans = 0;
	while (now <= (unsigned long long)b)
	{
		ans += min(b-now+1,now);
		now *= 10;
	}
	return ans;
}

double dp[1001][1001];

int main(int argc,char* argv[])
{	
	cin >> n;
	memset(dp,0,sizeof(dp));
	dp[0][0] = 1;
	for (int i = 1;i <= n;i++)
	{
		cin >> l >> r;
		long long tot = r-l+1;
		long long tot1 = calc(r)-calc(l-1);
		for (int j = 0;j < i;j++)
		{
			dp[i][j] += dp[i-1][j]*(tot-tot1)/tot;
			dp[i][j+1] += dp[i-1][j]*tot1/tot;
		}
	}
	cin >> k;
	double ans = 0;
	for (int i = 0;i <= n;i++)
		if (100*i >= n*k)
			ans += dp[n][i];
	printf("%.10f\n",ans);
	return 0;
}

 	  	 							    					   	