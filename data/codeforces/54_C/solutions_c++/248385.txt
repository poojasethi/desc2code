#include <stdio.h>
#include <algorithm>

using namespace std;

typedef long long LL;

bool inRange(LL a, LL b, LL c, LL d, LL & x, LL & y) {
	x = max(a, c);
	y = min(b, d);
	if (x <= y) {
		return true;
	}
	return false;
}

double p[2000];

double d[2000][2000];

int main() {
    int n, k;
    scanf("%d", &n);
	
	for (int i = 0; i < n; i++) {
		LL L, R, A, B;
		scanf("%I64d%I64d", &L, &R);
		
		double q = 0;
		if (inRange(1, 1, L, R, A, B)) {
			q += 1;
		}
		for (LL j = 10; true; j *= 10) {
			if (inRange(j, 2 * j - 1, L, R, A, B)) {
				q += B - A + 1;
			}
			if (j == 1000000000000000000LL) {
				break;
			}
		}
		
		double qq = R - L + 1;
		
		p[i + 1] = q / qq;
	}
	
	d[0][0] = 1;
	for (int i = 1; i <= n; i++) {
		d[i][0] = d[i - 1][0] * (1 - p[i]);
		for (int j = 1; j <= n; j++) {
			d[i][j] = d[i - 1][j - 1] * p[i] + d[i - 1][j] * (1 - p[i]);
		}
	}
	
	scanf("%d", &k);
	
	double q = 0;
	for (int i = n; 100 * i >= n * k; i--) {
		q += d[n][i];
	}
	
	printf("%.10lf\n", q);
	
    return 0;
}
