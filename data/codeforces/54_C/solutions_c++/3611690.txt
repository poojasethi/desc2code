#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <iterator>
#include <vector>
#include <algorithm>
using namespace std;

const int Max = 1009;
#define LL __int64
double dp[Max][Max];
double p[Max];

LL cal(LL x) {
    LL cnt = 0 , now = 1;
    while(x/now > 1) {
        cnt += now;
        now *= 10;
    }
    if(x / now == 1) {
        cnt += x - now + 1;
    }
    return cnt;
}

int main() {
	int n,k;
	cin >> n;
	for(int i = 1; i <= n; i++) {
		LL l ,r;
		cin >> l >> r;
		LL sum = (r - l + 1);
		LL num = cal(r) - cal(l-1);
		//cout << num << endl;
		p[i] = num * 1.0 / sum;
	}
	cin >> k;
	memset(dp,0,sizeof(dp));
	dp[0][0] = 1;
	for(int i = 1; i <= n; i++) {
		for(int j = 0; j <= i; j++) {
			dp[i][j] = dp[i-1][j-1]*p[i] + dp[i-1][j]*(1-p[i]);
		}
	}
	double ans = 0;
	for(int i = 0; i <=n; i++) {
		if(100*i >= n*k)
			ans += dp[n][i];
	}
	printf("%.10lf\n",ans);
	return 0;
}
			       	  	 	  		  	  	