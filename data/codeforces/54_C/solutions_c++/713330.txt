#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
#define ll __int64
int n,m,k;
double p[1001],dp[1001][1001];
ll gcd(ll a,ll b){return b?gcd(b,a%b):a;}
ll get(ll L,ll R)
{
	ll d=1,ret=0;
	while(d<=L)d*=10;
	if(L<d/5)
	{
		if(R<d/5)ret+=R-L+1;
		else ret+=d/5-L;
	}
	while(1)
	{
		if(d>R)return ret;
		if(2*d>R)
		{
			ret+=R-d+1;
			return ret;
		}
		ret+=d;
		d*=10;
	}
}
int main()
{
	scanf("%d",&n);
	ll l,r,L,R;
	for(int i=1;i<=n;i++)
	{
		scanf("%I64d%I64d",&l,&r);
		L=get(l,r);
		R=r-l+1;
		ll g=gcd(L,R);
		L/=g;R/=g;
		p[i]=(double)L/(double)R;
	}
	scanf("%d",&k);
	m=0;
	while(m*100<k*n)m++;
	dp[1][1]=p[1];dp[1][0]=1.0-p[1];
	for(int i=2;i<=n;i++)
	{
		double q=1.0-p[i];
		dp[i][0]=dp[i-1][0]*q;
		for(int j=1;j<=i;j++)
		dp[i][j]=dp[i-1][j]*q+dp[i-1][j-1]*p[i];
	}
	double ret=0;
	for(int i=m;i<=n;i++)
	ret+=dp[n][i];
	printf("%.12f\n",ret);
}
  	 								  	 	 		      	