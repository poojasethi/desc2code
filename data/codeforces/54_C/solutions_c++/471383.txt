#include <iostream>
#include <algorithm>
using namespace std;

double dp[1005][1005];

double getOnes(long long L, long long R) {
	long long cnt = 0;
	if (R == 1000000000000000000LL) ++cnt, --R;
	if (L == 1000000000000000000LL) --L;
	long long C = 1LL, LL, RR;
	while(C<=R) {
		LL = max(C, L);
		RR = min(C+C-1, R);
		if(LL <= RR)
			cnt += RR-LL+1;
		C *= 10;
	}
	return (double) cnt / (double) (R - L + 1);
}
#include <stdio.h>
int main(void) {
	int n, k, i, j;
	long long L, R;
	cin >> n;
	dp[0][0] = 1.0;
	for(i=1;i<=n;i++) {
		cin >> L >> R;
		double v = getOnes(L, R);
		dp[i][0] = dp[i-1][0] * (1-v);
		for(j=1;j<=i;j++)
			dp[i][j] = v * dp[i-1][j-1] + (1-v)*dp[i-1][j];
	}
	cin >> k;
	double ans = 0.0;
	for (j= (n*k+99)/100;j<=n;j++)
		ans += dp[n][j];
	printf("%.10lf\n", ans);
	return 0;
}
