#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#define N 300005
#define Long long long
#define For(i,l,r) for(int i=l;i<=r;i++)
using namespace std;
Long Ans;
int val[4*N],lazy[4*N],num[4*N][2];
int ll,rr,ret,n,p[N],a[N];
void add(int t,int ret){
    val[t]+=ret;
    lazy[t]+=ret;
}
void down(int t){
    if(lazy[t]){
        add(t*2,lazy[t]);
        add(t*2+1,lazy[t]);
        lazy[t]=0;
    }
}
void update(int t){
    int L=t*2,R=t*2+1;
    if(val[L]>val[R]) swap(L,R);
    val[t]=val[L];
    
    num[t][0]=num[L][0];
    num[t][1]=num[L][1];
    
    if(val[L]==val[R]){
        num[t][0]+=num[R][0];
        num[t][1]+=num[R][1];
    }
    if(val[L]==val[R]-1){
        num[t][1]+=num[R][0];
    }
}
void Modify(int t,int l,int r){
    if(ll<=l&&r<=rr){add(t,ret); return;}
    int mid=(l+r)>>1;
    down(t);
    if(ll<=mid) Modify(t*2,l,mid);
    if(rr>mid) Modify(t*2+1,mid+1,r);
    update(t);
}
void Get_node(int t,int l,int r){
    if(l==r){num[t][0]=1; val[t]=0; return;}
    int mid=(l+r)>>1;
    down(t);
    if(ll<=mid) Get_node(t*2,l,mid);
    else Get_node(t*2+1,mid+1,r);
    update(t);
}
void writeln(int t,int l,int r){
    printf("l r %d %d val %d num %d %d\n",l,r,val[t],num[t][0],num[t][1]);
    if(l==r) return;
    int mid=(l+r)>>1;
    down(t);
    writeln(t*2,l,mid);
    writeln(t*2+1,mid+1,r);
}
int main(){
    scanf("%d",&n); memset(val,0x7f,sizeof(val));
    For(i,1,n){int x; scanf("%d",&x); p[x]=i;}
    For(R,1,n){
        a[p[R]]=R; int x=a[p[R]-1],y=a[p[R]+1];
        ll=R; Get_node(1,1,n);
        if(x>y) swap(x,y);
        if(x==0 && y==0){
            ll=1; rr=R; ret=1; Modify(1,1,n);
        }
        if(x==0 && y!=0){
            ll=y+1; rr=R; ret=1; Modify(1,1,n);
        }
        if(x!=0 && y!=0){
            ll=1; rr=x; ret=-1; Modify(1,1,n);
            ll=y+1; rr=R; ret=1; Modify(1,1,n);
        }
        
        int t=1;
        if(val[t]==1) Ans+=num[t][0]-1+num[t][1];
        if(val[t]==2) Ans+=num[t][1];
    }
    
    printf("%I64d\n",Ans);
}