//gskhirtladze

#include<iostream>
#include<stdio.h>

#define N 1500000
#define LL long long

using namespace std;

int m[N],f[N],s[N],v[N],ind[N],d[N];
LL a,b,k,i,n,ans;

void update(int now)
 {
  m[now]=min(m[2*now],m[2*now+1]);
  f[now]=f[2*now]*(m[2*now]==m[now])+f[2*now+1]*(m[2*now+1]==m[now]);
  s[now]=s[2*now]*(m[2*now]==m[now])+s[2*now+1]*(m[2*now+1]==m[now])+f[2*now]*(m[2*now]-1==m[now])+f[2*now+1]*(m[2*now+1]-1==m[now]);
 }

void upd(int now,int l,int r,int R,int x)
 {
  if (l > r || l > R) return;
  if (r <= R)
   {
    m[now]+=x;
    d[now]+=x;
    return;
   }
  d[2*now]+=d[now];
  d[2*now+1]+=d[now];
  m[2*now]+=d[now];
  m[2*now+1]+=d[now];
  d[now]=0;
  upd(2*now,l,(l+r)/2,R,x);
  upd(2*now+1,(l+r)/2+1,r,R,x);
  update(now);
 }

void build(int now,int l,int r)
 {
  if (l == r) { f[now]=1; return; }
  build(2*now,l,(l+r)/2);
  build(2*now+1,(l+r)/2+1,r);
 }

LL solve(int now,int l,int r,int R)
 {
  if (l > r || l > R) return 0;
  if (r <= R) return (s[now]*(m[now]<=1)+f[now]*(m[now]<=2));
  d[2*now]+=d[now];
  d[2*now+1]+=d[now];
  m[2*now]+=d[now];
  m[2*now+1]+=d[now];
  d[now]=0;
  return solve(2*now,l,(l+r)/2,R)+solve(2*now+1,(l+r)/2+1,r,R);
 }

main()
 {
  cin>>n;
  for (i=1;i<=n;i++) 
   {
    cin>>b;
    v[b]=i;
    ind[i]=b;
   }
  build(1,1,n);
  for (i=1;i<=n;i++)
   {
    int a=ind[v[i]-1];
    int b=ind[v[i]+1];
    if (a > b) swap(a,b);
    upd(1,1,n,i,1);
    if (a && a < i)upd(1,1,n,a,-1);
    if (b && b < i)upd(1,1,n,b,-1);
    ans+=solve(1,1,n,i-1);
   }
  cout<<ans<<endl;
 };
