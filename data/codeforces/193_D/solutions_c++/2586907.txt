//program 193-D

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

using namespace std;

struct Data
{
  int X0,Y0,X1,Y1;
};

Data operator +(Data A,Data B)
{
  if(B.X0<A.X0)
    {A.X1=A.X0;A.Y1=A.Y0;A.X0=B.X0;A.Y0=B.Y0;}
  else if(B.X0==A.X0)
    A.Y0+=B.Y0;
  else if(B.X0<A.X1)
    {A.X1=B.X0;A.Y1=B.Y0;}
  else if(B.X0==A.X1)
    A.Y1+=B.Y0;
  if(B.X1<A.X1)
    {A.X1=B.X1;A.Y1=B.Y1;}
  else if(B.X1==A.X1)
    A.Y1+=B.Y1;
  return A;
}

int Get()
{
  char c;while(c=getchar(),c<'0'||c>'9');
  int X=0;while(c>='0'&&c<='9'){X=X*10+c-48;c=getchar();}
  return X;
}

const int inf=1000000000;

int Left[1048576],Right[1048576],Delta[1048576];
Data Min[1048576];

void Build(int P,int L,int R)
{
  Left[P]=L;Right[P]=R;Delta[P]=0;
  Min[P]=(Data){0,R-L+1,inf,0};
  if(L==R)return;
  int Mid=(L+R)/2;
  Build(P*2,L,Mid);
  Build(P*2+1,Mid+1,R);
}

void Check(int P)
{
  if(!Delta[P])return;
  Min[P].X0+=Delta[P];
  Min[P].X1+=Delta[P];
  if(Left[P]<Right[P])
    {
      Delta[P*2]+=Delta[P];
      Delta[P*2+1]+=Delta[P];
    }
  Delta[P]=0;
}

void Add(int P,int L,int R,int D)
{
  Check(P);
  if(Left[P]==L&&Right[P]==R)
    {Delta[P]+=D;return;}
  int Mid=(Left[P]+Right[P])/2;
  if(R<=Mid)Add(P*2,L,R,D);
  else if(L>Mid)Add(P*2+1,L,R,D);
  else {Add(P*2,L,Mid,D);Add(P*2+1,Mid+1,R,D);}
  Check(P*2);Check(P*2+1);Min[P]=Min[P*2]+Min[P*2+1];
}

Data Query(int P,int L,int R)
{
  Check(P);
  if(Left[P]==L&&Right[P]==R)return Min[P];
  int Mid=(Left[P]+Right[P])/2;
  if(R<=Mid)return Query(P*2,L,R);
  if(L>Mid)return Query(P*2+1,L,R);
  return Query(P*2,L,Mid)+Query(P*2+1,Mid+1,R);
}

int main()
{
  int N=Get();
  static int Pos[300000],P[300000];
  for(int i=0;i<N;i++)
    {
      Pos[i]=Get()-1;
      P[Pos[i]]=i;
    }
  Build(1,0,N-1);
  long long Ans=-N;
  for(int i=0;i<N;i++)
    {
      Add(1,0,i,1);
      if(P[i]&&Pos[P[i]-1]<i)
        Add(1,0,Pos[P[i]-1],-1);
      if(P[i]+1<N&&Pos[P[i]+1]<i)
        Add(1,0,Pos[P[i]+1],-1);
      Data T=Query(1,0,i);
      if(T.X0<=2)Ans+=T.Y0;
      if(T.X1<=2)Ans+=T.Y1;
    }
  cout<<Ans<<endl;
  return 0;
}
