#define FILE_IO 0
#define LLD "%I64d"

#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cstring>

using std::min;
using std::swap;

typedef long long ll;

const int maxn=1300000;
int n,tn;
int p[maxn],v[maxn];
int a[maxn],b[maxn],c[maxn],s[maxn];

void init(int k,int l,int r){
  b[k]=r-l+1;
  if(l==r)return;
  int m=l+r>>1;
  init(k<<1,l,m),init((k<<1)+1,m+1,r);
}

void pus(int k,int l,int r){
  if(!s[k])return;
  a[k]+=s[k];
  if(l!=r)s[k<<1]+=s[k],s[(k<<1)+1]+=s[k];
  s[k]=0;
}

void upd(int k,int l,int r){
  pus(k,l,r);
  if(l!=r){
    int m=l+r>>1,x=k<<1,y=(k<<1)+1;
    pus(x,l,m),pus(y,m+1,r);
    if(a[x]>a[y])swap(x,y);
    a[k]=min(a[x],a[y]),b[k]=c[k]=0;
    if(a[k]==a[x])b[k]+=b[x],c[k]+=c[x];
    else if(a[k]+1==a[x])c[k]+=b[x];
    if(a[k]==a[y])b[k]+=b[y],c[k]+=c[y];
    else if(a[k]+1==a[y])c[k]+=b[y];
  }
}

void add(int k,int l,int r,int x,int y,int w){
  if(l==x&&r==y){s[k]+=w;return;}
  pus(k,l,r);
  int m=l+r>>1;
  if(y<=m)add(k<<1,l,m,x,y,w);
  else if(x>m)add((k<<1)+1,m+1,r,x,y,w);
  else add(k<<1,l,m,x,m,w),add((k<<1)+1,m+1,r,m+1,y,w);
  upd(k,l,r);
}
void _add(int x,int y,int w){
  if(x<=y)add(1,1,tn,x,y,w);
}

int que(int k,int l,int r,int x,int y){
  upd(k,l,r);
  if(l==x&&r==y){
    if(a[k]==1)return b[k]+c[k];
    else if(a[k]==2)return b[k];
    else return 0;
  }
  int m=l+r>>1;
  if(y<=m)return que(k<<1,l,m,x,y);
  if(x>m)return que((k<<1)+1,m+1,r,x,y);
  return que(k<<1,l,m,x,m)+que((k<<1)+1,m+1,r,m+1,y);
}

int main(){
  if(FILE_IO){
    freopen("t.in","r",stdin);
    freopen("t.out","w",stdout);
  }
  int i,x,y;
  ll ans=0;
  scanf("%d",&n);
  for(tn=1;tn<n;tn<<=1);
  init(1,1,tn);
  for(i=1;i<=n;++i)scanf("%d",&x),p[x]=i;
  for(i=0;i<=n+1;++i)v[i]=n+1;
  for(i=n;i;--i){
    x=v[p[i]-1],y=v[p[i]+1];
    if(x>y)swap(x,y);
    _add(i,x-1,1),_add(y,n,-1);
    ans+=que(1,1,tn,i,n);
    v[p[i]]=i;
  }
  printf(LLD"\n",ans-n);
  return 0;
}
