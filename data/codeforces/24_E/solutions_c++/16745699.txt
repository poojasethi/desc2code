#include<cstdio>
#include<iostream>
#include<algorithm>
using namespace std;
typedef struct{int x,v;} P;
const int N = 500000;
const double Eps = 1e-12,INF = 1e12;
P A[N];
int n;
bool f(double t)
{
	double leftBound=-INF;
	for(int i=0;i<n;i++)
	{
		if(A[i].v>0)
			leftBound = max(leftBound,t*A[i].v+A[i].x);
		else if(t*A[i].v+A[i].x < leftBound)
			return true;
	}
	return false;
}
bool Possible()
{
	int i=0;
	while(A[i++].v<0);
	while(i<n)
	{
		if(A[i++].v<0)
			return true;
	}
	return false;
}
int main()
{
	scanf("%d",&n);
	for(int i=0;i<n;i++)
		scanf("%d%d",&A[i].x,&A[i].v);
	if(Possible())
	{	
		double l=0,r=INF;
		for(int cnt=0;cnt<100;cnt++)
		{
			double m=(r+l)/2;
			if(f(m)) r=m;
			else l=m;
		}
		printf("%.10lf",l);
	}
	else
		printf("-1");
	return 0;
}
