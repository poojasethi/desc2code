#include <vector>
#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <queue>
#include <iomanip>
#include <cmath>
using namespace std;

typedef long long ll;
typedef pair<int,int > P;
typedef double dd;
const ll mod = 1000000007;
ll inf = 1000000007;
const int size = 5111;

int n,dp[size][size][2],deg[size],m,sz[size];
vector<int> vi[size];

void dfs(int u,int f){
    for(int i=0;i<=n;i++)
        dp[u][i][0]=dp[u][i][1]=n;
    if(deg[u]==1)dp[u][1][1]=dp[u][0][0]=0,m++;
    else dp[u][0][0]=dp[u][0][1]=0;
    sz[u]=1;
    for(int j=0;j<vi[u].size();j++){
        int to=vi[u][j];
        if(to==f)continue;
        dfs(to,u);
        for(int a=sz[u];a>=0;a--)
        {
            for(int b=sz[to];b>0;b--)
            for(int p1=0;p1<2;p1++)
            for(int p2=0;p2<2;p2++)
            {
                dp[u][a+b][p1]=min(dp[u][a+b][p1],dp[u][a][p1]+dp[to][b][p2]+(p1!=p2));
            }
            dp[u][a][0]=dp[u][a][0]+min(dp[to][0][0],dp[to][0][1]+1);
            dp[u][a][1]=dp[u][a][1]+min(dp[to][0][1],dp[to][0][0]+1);
        }
        sz[u]+=sz[to];
    }return ;
    cout<<u<<endl;
    for(int p=0;p<2;p++){
        cout<<dp[u][0][p]<<' '<<dp[u][1][p]<<' '<<dp[u][2][p]<<endl;
    }
}

int main(){
    cin>>n;
    for(int i=1;i<n;i++){
        int a,b;
        scanf("%d%d",&a,&b);
        vi[a].push_back(b);
        vi[b].push_back(a);
        deg[a]++;deg[b]++;
    }
    if(n==2)cout<<1<<endl;
    else {
        for(int i=1;i<=n;i++)
        if(deg[i]-1){
            dfs(i,0);
            cout<<min(dp[i][m/2][0],dp[i][m/2][1])<<endl;
            break;
        }
    }
}
