#include <set>
#include <map>
#include <vector>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;

#ifdef WIN32
#define L_L "%I64d"
#else
#define L_L "%lld"
#endif
#define LL long long
#define dbl double
#define LY(p) freopen (p".in", "r", stdin); freopen (p".out", "w", stdout)
#define N 5010

const int inf = (1 << 30);
int n, h[N], tot, f[N][2][N], siz[N], ans, dig[N];
int x, y;

struct edge {
	int v, n;

	edge () {}
	edge (int y, int t): v(y), n(t) {}
} e[N * 2];

void link (int x, int y) {e[++ tot] = edge (y, h[x]), h[x] = tot;}

void upd (int &a, int x) {a = min (x, a);}

void dfs (int o, int ft) {
	int fl(1), t;
	for (int x = h[o], y; y = e[x].v, x; x = e[x].n)
		if (y != ft) {
			if (fl)
				f[o][0][0] = f[o][1][0] = 0, fl = 0;
			dfs (y, o); siz[o] += siz[y];
			for (int i = siz[o]; i >= 0; i--)
				for (int k = 0; k <= 1; k++) {
					t = inf;
					for (int j = min (siz[y], i); j >= 0; j--)
						for (int l = 0; l <= 1; l++)
							upd (t, f[y][l][j] + (k != l) + f[o][k][i - j]);
					f[o][k][i] = t;
				}
		}
	if (fl) {
		siz[o] = 1;
		for (int k = 0; k <= 1; k++)
			for (int l = 0; l <= 1; l++)
				upd (f[o][k][l], k != l);
	}
}

int main()
{
#ifndef ONLINE_JUDGE
	LY("F");
#endif
	scanf ("%d", &n);
	for (int i = 1; i < n; i++)
		scanf ("%d%d", &x, &y), link (x, y), link (y, x), dig[x] ++, dig[y] ++;

	memset (f, 0x3f, sizeof (f));

	for (int i = 1; i <= n; i++)
		if (dig[i] > 1) {
			dfs (i, 0);
			ans = min (f[i][0][siz[i] >> 1], f[i][1][siz[i] >> 1]);
			break;
		}
	printf ("%d", ans);
	return 0;
}
