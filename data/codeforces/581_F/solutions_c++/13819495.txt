#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstring>
#include<algorithm>
#define maxn 5005
#define inf 1061109567
using namespace std;
char ch;
int n,a,b,root,tot,ans,now[maxn],son[maxn<<1],pre[maxn<<1];
int deg[maxn],sum[maxn],f[maxn][maxn][2],g[maxn][2];
bool ok;
void read(int &x){
	for (ok=0,ch=getchar();!isdigit(ch);ch=getchar()) if (ch=='-') ok=1;
	for (x=0;isdigit(ch);x=x*10+ch-'0',ch=getchar());
	if (ok) x=-x;
}
void put(int a,int b){pre[++tot]=now[a],now[a]=tot,son[tot]=b,deg[a]++;}
void dfs(int u,int fa){
	f[u][0][0]=0;
	if (deg[u]==1){f[u][1][1]=0,sum[u]=1;return;}
	f[u][0][1]=0;
	for (int p=now[u],v=son[p];p;p=pre[p],v=son[p])
		if (v!=fa){
			//cout<<v<<endl;
			dfs(v,u);
			memset(g,63,sizeof(g));
			for (int i=sum[u];i>=0;i--)
				for (int j=sum[v];j>=0;j--){
					//cout<<i<<' '<<j<<"     ";
					g[i+j][0]=min(g[i+j][0],min(f[u][i][0]+f[v][j][0],f[u][i][0]+f[v][j][1]+1));
					g[i+j][1]=min(g[i+j][1],min(f[u][i][1]+f[v][j][1],f[u][i][1]+f[v][j][0]+1));
					//cout<<g[i+j][0]<<' '<<g[i+j][1]<<endl;
				}
			memcpy(f[u],g,sizeof(g));
			sum[u]+=sum[v];
		}
	//if (!sum[u]) sum[u]=1,cout<<"    "<<u<<endl;
}
int main(){
	read(n);
	for (int i=1;i<n;i++) read(a),read(b),put(a,b),put(b,a);
	if (n==2){puts("0");return 0;}
	for (int i=1;i<=n;i++) if (deg[i]!=1){root=i;break;}
	memset(f,63,sizeof(f));
	dfs(root,0);
	//cout<<sum[root]<<endl;
	ans=min(f[root][sum[root]>>1][0],f[root][sum[root]>>1][1]);
	//for (int i=0;i<=sum[root];i++) ans=min(ans,min(f[root][i][0],f[root][i][1]));
	printf("%d\n",ans);
	return 0;
}

				 	   	 		   		 		       			