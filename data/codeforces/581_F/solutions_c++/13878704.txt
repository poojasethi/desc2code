#include<bits/stdc++.h>

using namespace std;

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define sol (root+root)
#define sag (root+root+1)
#define orta ((bas+son)/2)
#define ll long long
#define pii pair<int,int>

const int N=5000+5;
const int mod=1e9+7;
const int inf=1e9+7;

int n,x,y,root,i;
int s[N],dp[N][2][N],temp[N];

vector<int> V[N];

void dfs(int x,int ata){
	
	s[x]=V[x].size()==1;

	dp[x][0][0]=0;

	if(V[x].size()==1)
		dp[x][1][1]=0;
	else dp[x][1][0]=0;

	int i,c,l,r,j;

	for(i=0 ; i<V[x].size() ; i++)
		if(V[x][i]!=ata){
			dfs(V[x][i],x);
			for(c=0 ; c<2 ; c++){
				memset(temp,20,sizeof temp);
				for(l=0 ; l<=s[x] ; l++)
					for(r=0 ; r<=s[V[x][i]] ; r++)
						temp[l+r]=min(temp[l+r],min(dp[x][c][l]+dp[V[x][i]][c][r],dp[x][c][l]+dp[V[x][i]][!c][r]+1));
				for(j=0 ; j<=s[x]+s[V[x][i]] ; j++)
					dp[x][c][j]=temp[j];
			}
			s[x]+=s[V[x][i]];
		}
}

main(){

	memset(dp,20,sizeof dp);

	scanf("%d",&n);

	for(i=2 ; i<=n ; i++){
		scanf("%d %d",&x,&y);
		V[x].pb(y);
		V[y].pb(x);
	}

	if(n==2)
		return cout<<1,0;
	
	for(i=1 ; i<=n ; i++)
		if(V[i].size()>1)
			root=i;
		
	dfs(root,-1);

	printf("%d",min(dp[root][0][s[root]/2],dp[root][1][s[root]/2]));
}
