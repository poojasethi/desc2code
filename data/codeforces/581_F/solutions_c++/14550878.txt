#include <bits/stdc++.h>
#define maxint 1000000007
#define N 5200

using namespace std;

vector<int> ke[N];
int child[N], f[N][N];
int n;

void dfs(int u, int par){
    if(ke[u].size() == 1) child[u] = 1;
    for(int i = 1; i <= n; i++) f[u][i] = maxint;
    for(int i = 0; i < ke[u].size(); i++){
        int v = ke[u][i];
        if(v == par) continue;
        dfs(v, u);
        for(int i = child[u]; i >= 0; i--)
            for(int j = 0; j <= child[v]; j++)
                f[u][i+j] = min(f[u][i+j], f[u][i] + f[v][j]);
        child[u] += child[v];
    }
    for(int i = 0; i <= child[u]; i++){
        f[u][i] = min(f[u][i], f[u][child[u]-i] + 1);
    }
}

int main()
{
    ios_base::sync_with_stdio(false);
    //freopen("f.in","r",stdin);
    //freopen("f.out","w",stdout);
    cin >> n;
    if(n == 2){cout << 1; return 0;}
    int u, v;
    for(int i = 1; i < n; i++){
        cin >> u >> v;
        ke[u].push_back(v);
        ke[v].push_back(u);
    }
    int root = 1;
    while(ke[root].size() == 1) root++;
    dfs(root, 0);
    cout << f[root][child[root]/2];
    return 0;
}
