#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cstdlib>
#include <queue>
#define int64 long long 
using namespace std;
const int Maxn = (1 << 30);
int n,into[5050];
int head[5050],to[20020],next[20020],top,f[5050][5050][2],size[5050];

void link(int x,int y)
{
  next[++top] = head[x];   head[x] = top;   to[top] = y;
}
void upd(int &a,int x)   {   a = min(a,x);   }
void dfs(int whe,int fa)
{
  bool yes = 0;
  for (int i = head[whe],y;y = to[i],i;i = next[i])
    if (y != fa)
      {
    if (!yes)   yes = 1,f[whe][0][1] = 0,f[whe][0][0] = 0;
    dfs(y,whe);   size[whe] += size[y];
    for (int j = size[whe];j >= 0;j--)
      {
        for (int l1 = 0;l1 <= 1;l1++)
          {
        int tot = Maxn;
        for (int k = 0;k <= min(j,size[y]);k++)
          for (int l2 = 0;l2 <= 1;l2++)
            upd(tot,f[whe][j - k][l1] + (l1 != l2) + f[y][k][l2]);
        f[whe][j][l1] = tot;
          }
      }
      }
  if (!yes)
    {
      size[whe] = 1;
      f[whe][0][1] = Maxn;  f[whe][0][0] = 0;
      f[whe][1][1] = 0;     f[whe][1][0] = Maxn;
    }
}

int main()
{
  cin >> n;   int x,y,whe;
  memset(f,127 / 3,sizeof(f));
  for (int i = 1;i < n;i++)
    scanf("%d %d",&x,&y),link(x,y),link(y,x),into[x]++,into[y]++;
  for (int i = 1;i <= n;i++)
    if (into[i] > 1)
      {whe = i;break;}
  dfs(whe,-1);
  printf("%d",min(f[whe][size[whe] / 2][0],f[whe][size[whe] / 2][1]));
}
