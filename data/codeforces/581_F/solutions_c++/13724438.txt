#include <bits/stdc++.h>
using namespace std;

const int maxn = 5050 , inf = 1e9;

int n,end[maxn],ans[maxn][maxn][2];
vector < int > way[maxn];
bool used[maxn];

void solve( int n ){
	used[n] = 1;
	if( way[n].size() == 1 ){
		end[n] = 1;
		ans[n][0][1] = 0;
		ans[n][1][0] = 0;
		return;
	}
	
	int dp[maxn][2],dn[maxn][2];
	
	dp[0][0] = dp[0][1] = 0;
	
	for( int i=0 ; i < (int)way[n].size() ; i++ ){
		int u = way[n][i];
		if( used[u] )
			continue;
		
		solve(u);
		
		for( int c=0 ; c < 2 ; c++ ){
			
			for( int i=0 ; i <= end[u]+end[n] ; i++ )
				dn[i][c] = inf;
			
			for( int col=0 ; col < 2 ; col++ )
				for( int i=0 ; i <= end[n] ; i++ )
					for( int j=0 ; j <= end[u] ; j++ )
						if( dp[i][c] != inf and ans[u][j][col] != inf )
							dn[i+j][c] = min( dn[i+j][c] , dp[i][c] + ans[u][j][col] + (c != col) );
			
			for( int i=0 ; i <= end[u]+end[n] ; i++ )
				dp[i][c] = dn[i][c];
		}
		
		end[n] += end[u];
	}
	
	for( int c=0 ; c < 2 ; c++ )
		for( int i=0 ; i <= end[n] ; i++ )
			ans[n][i][c] = dp[i][c];
}

int main(){
	
	scanf("%d",&n);
	
	if( n == 2 ){
		puts("1");
		return 0;
	}
	
	for( int i=1,a,b ; i < n ; i++ ){
		scanf("%d%d",&a,&b);
		way[a].push_back(b);
		way[b].push_back(a);
	}
	
	for( int c=0 ; c < 2 ; c++ )
		for( int i=1 ; i <= n ; i++ )
			for( int j=0 ; j <= n ; j++ )
				ans[i][j][c] = inf;
	
	int root = 1;
	while( way[root].size() == 1 )
		root++;
	
	solve( root );
	
	printf("%d\n",min(ans[root][end[root] / 2][0] , ans[root][end[root] / 2][1]) );
	
	return 0;
}
