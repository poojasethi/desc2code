#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <queue>
#include <cmath>
using namespace std;
#define mp make_pair
#define eps 1e-7
#define N 5010
#define M 1000000
#define inf 0x3f3f3f3f

int dp[N][2][2510],num[N],tmp[2][2510];
vector<int>g[N];

void dfs(int u,int fa)
{
    num[u]=0;
    int siz=(int)g[u].size();
    if(siz==1&&g[u][0]==fa)
    {
        num[u]=1;
        dp[u][0][1]=dp[u][1][0]=0;
        return ;
    }
    dp[u][0][0]=dp[u][1][0]=0;
    for(int i=0;i<siz;i++)
    {
        int v=g[u][i];
        if(v==fa)
            continue;
        dfs(v,u);
        memset(tmp,inf,sizeof(tmp));
        for(int j=0;j<2;j++)
        {
            for(int k=0;k<2;k++)
            {
                for(int w=num[u];w>=0;w--)
                {
                    for(int l=0;l<=num[v];l++)
                        tmp[j][w+l]=min(tmp[j][w+l],dp[v][k][l]+dp[u][j][w]+(j^k));
                }
            }
        }
        memcpy(dp[u],tmp,sizeof(dp[u]));
        num[u]+=num[v];
    }

}

int main()
{
    //freopen("in.txt","r",stdin);
    int n,u,v;

    scanf("%d",&n);
    for(int i=1;i<=n;i++)
        g[i].clear();
    for(int i=1;i<n;i++)
    {
        scanf("%d%d",&u,&v);
        g[u].push_back(v);
        g[v].push_back(u);
    }
    int root=-1;
    for(int i=1;i<=n;i++)
    {
        if((int)g[i].size()>1)
            root=i;
    }
    if(root==-1)
    {
        cout<<1<<endl;
        return 0;
    }
    memset(dp,inf,sizeof(dp));
    dfs(root,-1);
    cout<<min(dp[root][0][num[root]/2],dp[root][1][num[root]/2])<<endl;

}
