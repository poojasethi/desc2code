#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>

using namespace std;

const int MAX_N = 507;

typedef pair<int,int> pii;

int n, m;
int cnt[MAX_N][MAX_N];
vector<pii> red, blue;

int main() {
	scanf("%d%d", &n, &m);
	for (int i = 0; i < n; ++i) {
		long long x, y;
		scanf("%I64d%I64d", &x, &y);
		red.push_back(make_pair(x, y));
	}
	for (int i = 0; i < m; ++i) {
		long long x, y;
		scanf("%I64d%I64d", &x, &y);
		blue.push_back(make_pair(x, y));
	}
	sort(red.begin(), red.end());
	sort(blue.begin(), blue.end());
	for (int i = 0; i < n; ++i) {
		for (int j = i + 1; j < n; ++j) {
			long long x = red[i].first - red[j].first, y = red[j].second - red[i].second;
			long long z = -y * red[i].first - x * red[i].second;
			for (int k = 0; k < m; ++k) {
				if (red[i].first <= blue[k].first && blue[k].first < red[j].first && y * blue[k].first + x * blue[k].second + z > 0) {
					++cnt[i][j];
				}
			}
			cnt[j][i] = -cnt[i][j];
		}
	}
	int ans = 0;
	for (int i = 0; i < n; ++i) {
		for (int j = i + 1; j < n; ++j) {
			for (int k = j + 1; k < n; ++k) {
				if (cnt[i][j] + cnt[j][k] + cnt[k][i] == 0)
					++ans;
			}
		}
	}
	printf("%d\n", ans); 
	return 0;
}
	     			 			   	 		 				