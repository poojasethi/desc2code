#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
using namespace std;
struct point {
	int x, y;
} nlist[500], mlist[500];
bool cmp(const point &a, const point &b) {
	return a.x < b.x;
}
typedef long long llong;
llong xmult(point p1, point p2, point p0) {
	return llong(p1.x - p0.x) * llong(p2.y - p0.y) - llong(p2.x - p0.x) * llong(p1.y - p0.y);
}
int c[500][500];
int main() {
	int n, m;
	scanf("%d%d", &n, &m);
	for (int i = 0; i < n; i++) {
		scanf("%d%d", &nlist[i].x, &nlist[i].y);
	}
	for (int i = 0; i < m; i++) {
		scanf("%d%d", &mlist[i].x, &mlist[i].y);
	}
	memset(c, 0, sizeof(c));
	sort(nlist, nlist + n, cmp);
	for (int i = 0; i < n; i++) {
		for (int j = i + 1; j < n; j++) {
			for (int k = 0; k < m; k++) {
				if (nlist[i].x <= mlist[k].x && mlist[k].x < nlist[j].x && xmult(nlist[j], mlist[k], nlist[i]) > 0) {
					c[i][j]++;
				}
			}
		}
	}
	int ans = 0;
	for (int i = 0; i < n; i++) {
		for (int j = i + 1; j < n; j++) {
			for (int k = j + 1; k < n; k++) {
				if (c[i][j] + c[j][k] == c[i][k]) ans++;
			}
		}
	}
	printf("%d\n", ans);
	return 0;
}
