#include<iostream>
#include<vector>
#include<cstdio>
#include<complex>
#include<algorithm>
using namespace std;

#define X real()
#define Y imag()
int n, m;
complex<double> r[510], b[510];

bool cmp(complex<double> a, complex<double> b){
    return a.X<b.X;
}

int dyn[510][510], ans;

double cross(complex<double> a, complex<double> b){
    return a.X*b.Y-a.Y*b.X;
}

int main(){
    cin>>n>>m;
    for(int i=0; i<n; i++)
        cin>>r[i].X>>r[i].Y;
    for(int i=0; i<m; i++)
        cin>>b[i].X>>b[i].Y;
        
    sort(r, r+n, cmp);
    for(int i=0; i<n; i++)
        for(int j=i+1; j<n; j++){
            for(int k=0; k<m; k++){
                if(b[k].X>=r[i].X && b[k].X<r[j].X && cross(r[j]-r[i], b[k]-r[i])>0)
                    dyn[i][j]++;
            }
            dyn[j][i]=-dyn[i][j];
        }
            
    for(int i=0; i<n; i++)
        for(int j=i+1; j<n; j++)
            for(int k=j+1; k<n; k++)
                if(dyn[i][j]+dyn[j][k]+dyn[k][i]==0)
                    ans++;
                    
    cout<<ans<<endl;
    
    return 0;
}