#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <algorithm>
using namespace std;
#define Red true
#define Blue false
struct Point
{
	bool Col;
	long long x,y;
	inline void Read(bool C)
	{
		Col=C;
		scanf("%I64d%I64d",&x,&y);
	}
}R[1003],B[1003];
inline bool Cmp(const Point& A,const Point& B)
{
	return A.x<B.x;
}
int D[1003][1003],n,m;
double ata[1003][1003];
inline bool Pro(const Point& A,const Point& B,const Point& C)
{
	long long X1=A.x-C.x,Y1=A.y-C.y,X2=B.x-C.x,Y2=B.y-C.y;
	return X1*Y2-Y1*X2>0;
}
void Calc()
{
	for (int i=1;i<=n;i++)
		for (int j=1;j<=m;j++)
			if (B[j].x==R[i].x && R[i].y>B[j].y)
				D[i][i]++;
	for (int i=1;i<=n;i++)
		for (int j=i+1;j<=n;j++)
			for (int k=1;k<=m;k++)
				if (Pro(B[k],R[j],R[i]) && B[k].x>=R[i].x && R[j].x>=B[k].x)
					D[i][j]++;
}
int ans=0;
int main()
{
	scanf("%d%d",&n,&m);
	for (int i=1;i<=n;i++) R[i].Read(Red);
	for (int j=1;j<=m;j++) B[j].Read(Blue);
	sort(R+1,R+n+1,Cmp);
	Calc();
	for (int i=1;i<=n;i++)
		for (int j=i+1;j<=n;j++)
			for (int k=j+1;k<=n;k++)
				if (0==D[i][j]+D[j][k]-D[j][j]-D[i][k]) ans++;
	printf("%d\n",ans);
	return 0;
}
