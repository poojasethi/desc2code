#include <cstdio>
#include <map>
#include <algorithm>

using namespace std;

#define FOR(i,a,b) for (int (i) = (a); (i) < (b); ++(i))

typedef pair<int,int> PII;
const double EPS = 1E-14;

inline int cmp(double x, double y = 0, double tol = EPS) {
    return (x <= y + tol) ? (x + tol < y) ? -1 : 0 : 1;
}

////////////////////////////////////////////////////////////////////////////////

#define X first
#define Y second

const int MAXV = 500;

PII R[MAXV], B[MAXV];
int BELOW[MAXV][MAXV], DOWN[MAXV];
int N, M;

int main() {

    int x, y;
    scanf("%d%d", &N, &M);
    FOR(i,0,N) scanf("%d%d", &R[i].X, &R[i].Y); sort(R, R+N);
    FOR(i,0,M) {
        scanf("%d%d", &x, &y);
        FOR(j,0,N) if (x == R[j].X && y < R[j].Y) DOWN[j]++;
        FOR(j,0,N) FOR(k,j+1,N) if (R[j].X <= x && x <= R[k].X) {
            double m = (R[k].Y-(double)R[j].Y) / (R[k].X-(double)R[j].X);
            if (cmp(y,R[j].Y+m*(x-R[j].X)) <= 0) BELOW[j][k]++;
        }
    }
    
    int ret = 0;
    FOR(i,0,N) FOR(j,i+1,N) FOR(k,j+1,N)
        if (BELOW[i][j] + BELOW[j][k] - BELOW[i][k] - DOWN[j] == 0) ret++;
    printf("%d\n", ret);
    
    return 0;
}
