#include<cstdio>
#include<cstdlib>
#include<algorithm>

void Get(int &T)
{
	char C;bool F=0;
	for(;C=getchar(),C<'0'||C>'9';)if(C=='-')F=1;
	for(T=C-'0';C=getchar(),C>='0'&&C<='9';T=T*10+C-'0');
	F&&(T=-T);
}

void Get(long long &T)
{
	char C;bool F=0;
	for(;C=getchar(),C<'0'||C>'9';)if(C=='-')F=1;
	for(T=C-'0';C=getchar(),C>='0'&&C<='9';T=T*10+C-'0');
	F&&(T=-T);
}

long long AX[5005];
long long AY[5005];
long long BX[5005];
long long BY[5005];
int N,M;

int Cnt[505][505];

void Init()
{
	Get(N);
	Get(M);
	
	for(int i=1;i<=N;i++)
	{
		Get(AX[i]);
		Get(AY[i]);
	}
	
	for(int i=1;i<=M;i++)
	{
		Get(BX[i]);
		Get(BY[i]);
	}
}

int Ans;

void Work()
{
	for(int i=1;i<=N;i++)
		for(int j=1;j<=N;j++)
			if(AY[i]>AY[j])
			{
				for(int k=1;k<=M;k++)
				{
					Cnt[i][j]+=(AY[i]>=BY[k]&&BY[k]>AY[j]&&((AX[j]-AX[i])*(BY[k]-AY[i])>(BX[k]-AX[i])*(AY[j]-AY[i])));
				}
				Cnt[j][i]=-Cnt[i][j];
			}
	
	for(int i=1;i<=N;i++)
		for(int j=i+1;j<=N;j++)
			for(int k=j+1;k<=N;k++)
				Ans+=(Cnt[i][j]+Cnt[j][k]+Cnt[k][i]==0);
}

void Output()
{
	printf("%d\n",Ans);
}

int main()
{
	Init();
	Work();
	Output();
	return 0;
}