

lis = []

n, m = [int(x) for x in raw_input().split()]

for i in range(n):
  temp = []
  for j in range(n):
    temp.append(0)	
  lis.append(temp)
    
found = False
  
def hasSquare(li, i, j):

  try:
    if li[i][j + 1] == 1 and li[i][j + 2] == 1 and li[i+1][j] == 1 and li[i+1][j + 1] == 1 and li[i+1][j + 2] == 1 and li[i+2][j] == 1 and li[i+2][j + 1] == 1 and li[i+2][j + 2] == 1:
      #print "1 here"	
      return True
  except IndexError:
    pass

  try:	
    if (j - 1) >= 0 and li[i][j - 1] == 1 and li[i][j + 1] == 1 and li[i+1][j - 1] == 1 and li[i+1][j ] == 1 and  li[i+1][j + 1] == 1 and li[i+2][j - 1] == 1 and li[i+2][j] == 1 and li[i+2][j + 1] == 1:
      #print "2 here"
      return True
  except IndexError:
    pass


  try:	
    if (j-2) >= 0 and (j-1) >= 0 and li[i][j - 2] == 1 and li[i][j - 1] == 1 and li[i+1][j - 2] == 1 and li[i+1][j - 1] == 1 and 	li[i+1][j] == 1 and li[i+2][j -2 ] == 1 and  li[i+2][j - 1] == 1 and li[i+2][j] == 1:
      #print "3 here"	
      return True
  except IndexError:
    pass

  try:	
    if (i-1) >= 0 and li[i-1][j] == 1 and li[i-1][j+1] == 1 and li[i-1][j+2] == 1 and li[i][j+1] == 1 and li[i][j+2] == 1 and li[i+1][j] == 1 and li[i+1][j+1] == 1 and	li[i+1][j+2] == 1:
      #print "4 here"	
      return True
  except IndexError:
    pass

  try:	
    if (i-1) >= 0 and (j-1) >= 0 and li[i-1][j-1] == 1 and li[i-1][j] == 1 and li[i-1][j+1] == 1 and	li[i][j-1] == 1 and li[i][j+1] == 1 and li[i+1][j-1] == 1 and li[i+1][j] == 1 and li[i+1][j+1] == 1:
      #print "5 here"	
      return True
  except IndexError:
    pass

  try:	
    if (i-1) >= 0 and (j-2) >=0 and (j-1) >= 0 and li[i-1][j-2] == 1 and li[i-1][j-1] == 1 and	li[i-1][j] == 1 and li[i][j-2] == 1 and li[i][j-1] == 1 and li[i+1][j-2] == 1 and li[i+1][j-1] == 1 and li[i+1][j] == 1:
      #print "6 here"	
      return True
  except IndexError:
    pass


  try:	
    if (i-2) >= 0 and (i-1) >= 0 and li[i-2][j] == 1 and li[i-2][j+1] == 1 and li[i-2][j+2] == 1 and li[i-1][j] == 1 and li[i-1][j+1] == 1 and li[i-1][j+2] == 1 and li[i][j+1] == 1 and	li[i][j+2] == 1:
      #print "7 here"	
      return True
  except IndexError:
    pass

  try:	
    if (i-2) >= 0 and (j-1) >=0 and (i-1) >=0 and li[i-2][j-1] == 1 and li[i-2][j] == 1 and li[i-2][j+1] == 1 and li[i-1][j-1] == 1 and li[i-1][j] == 1 and li[i-1][j+1] == 1 and li[i][j-1] == 1 and li[i][j+1] == 1:
      #print "8 here"	
      return True
  except IndexError:
    pass

  try:	
    if (i-2) >= 0 and (j-2) >=0 and (j-1) >=0 and (i-1) >=0 and li[i-2][j-2] == 1 and li[i-2][j-1] == 1 and li[i-2][j] == 1 and	li[i-1][j-2] == 1 and li[i-1][j-1] == 1 and li[i-1][j] == 1 and li[i][j-2] == 1 and li[i][j-1] == 1:
      #print "9 here"	
      return True
  except IndexError:
    pass  

  return False  	

  
for k in range(m):
  lin = [int(x) for x in raw_input().split()]
  lis[lin[0] - 1][lin[1] - 1] = 1
  if hasSquare(lis, lin[0] - 1, lin[1] - 1):
    found = True  
    print k + 1
    break

if not found:
  print "-1"	
  