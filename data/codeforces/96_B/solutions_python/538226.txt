from itertools import *
from heapq import *

def get2d(a, b, elem = -1):
  res = []
  for x in range(a):
    res.append(list(repeat(elem, b)))
  return res

def getTuple():
  return tuple(getList())

def getList():
  return map(long, raw_input().split())
  
S = raw_input()
N = long(S)

res = None

for T in range(1, 6):
  if res:
    break
  if 2 * T < len(S):
    continue
  q = T * ['4']
  v = T * ['7']
  ar = q + v
  for r in permutations(ar):
    v1 = long(''.join(r))
    if v1 >= N:
      res = v1
      break

print res
    
#print tout[2][N - 1] - customers[-1]