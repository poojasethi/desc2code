import sys
import itertools
import math

def product(*args, **kwds):
    # product('ABCD', 'xy') --> Ax Ay Bx By Cx Cy Dx Dy
    # product(range(2), repeat=3) --> 000 001 010 011 100 101 110 111
    pools = map(tuple, args) * kwds.get('repeat', 1)
    result = [[]]
    for pool in pools:
        result = [x+[y] for x in result for y in pool]
    for prod in result:
        yield tuple(prod)

if __name__ == '__main__':
    n = int(raw_input())
    size = len(str(n))

    mini = 10**11

    for i in range(1, size + 3):
        for j in product('47', repeat = i):
            l = list(j)
            if l.count('4') != l.count('7'):
                continue
            
            tmp = int("".join(l))
            if tmp >= n and mini > tmp:
                mini = tmp

    print mini



