# -*- coding: UTF-8 -*-

# from itertools import *
# from collections import defaultdict

# def gcd(a,b):
#     while b > 0: a,b = b, a%b
#     return a

# def baseN(num,b,numerals="0123456789abcdefghijklmnopqrstuvwxyz"):
#     return ((num == 0) and  "0" ) or ( baseN(num // b, b).lstrip("0") + numerals[num % b])

T = input()
seq = map(int, raw_input().split())
master = [[seq[i], i+1] for i in xrange(T)]
pointer = 1
while T > 2:
    if master[0][0] <= master[pointer][0] <= master[pointer+1][0] or master[0][0] >= master[pointer][0] >= master[pointer+1][0]:
        T -= 1
        pointer += 1
    else: 
        print 3
        print master[0][1], master[pointer][1], master[pointer+1][1]
        exit()
print 0
