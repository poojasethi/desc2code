#include <iostream>
#include <utility>
#include <algorithm>
#include <vector>
#include <utility>

using namespace std;

#define ii pair<int,int>
#define itm pair<ii,string>
#define is pair<int,string>

vector<itm> items[3];
vector<is> resid[3];
int bestid[3];
int best[3]={0,0,0};
int rus[3]={0,0,0};
int rus2[3]={0,0,0};


int main()
{
int in;
cin>>in;
int totalsize=0;
for(int i=0;i<in;i++){
   string name,type;
   int siz;
   int par[3];
   cin>>name>>type>>par[0]>>par[1]>>par[2]>>siz;
   int t2=0;
   if(type[0]=='a')
      t2=1;
   else if(type[0]=='o')
      t2=2;
   items[t2].push_back(itm(ii(par[t2],siz),name));
   totalsize+=siz;
}
int k;
cin>>k;
if(k<totalsize){
   for(int i=0;i<k;i++){
      string name,type,home;
      int bonus;
      cin>>name>>type>>bonus>>home;
      int t2=0;
      if(type[0]=='s')
         t2=1;
      else if(type[0]=='p')
         t2=2;
      /*for(int i=0;i<items[t2].size();i++){
         if(items[t2][i].second==home)
            items[t2][i].first.first-=bonus;
      }*/
      resid[t2].push_back(is(bonus,name));
   }
   sort(resid[0].begin(),resid[0].end());
   sort(resid[1].begin(),resid[1].end());
   sort(resid[2].begin(),resid[2].end());
   for(int j=0;j<3;j++){
      for(int i=resid[j].size()-2;i>-1;i--){
         resid[j][i].first+=resid[j][i+1].first;
      }
   }
   for(int j=0;j<3;j++){
      for(int i=0;i<items[j].size();i++){
         int t=items[j][i].first.first;
         int tu=0;
         if(items[j][i].first.second>resid[j].size()){
            tu=resid[j].size();
         }else{
            tu=items[j][i].first.second;
         }
         if(tu)
            t+=resid[j][resid[j].size()-tu].first;
         if(t>best[j]){
            best[j]=t;
            bestid[j]=i;
            rus[j]=tu;
            rus2[j]=tu;
         }
      }
   }
   int rl=resid[0].size()+resid[1].size()+resid[2].size()-rus[0]-rus[1]-rus[2];
   for(int j=0;j<3;j++){
      int t=rus[j];
      int cid=bestid[j];
      cout<<items[j][cid].second;
      if(rl>=items[j][cid].first.second-t)
         t=items[j][cid].first.second;
      else
         t+=rl;
      rl-=t-rus[j];
      cout<<" "<<t;
      for(int i=0;i<rus[j];i++){
         cout<<" "<<resid[j][resid[j].size()-1-i].second;
      }
      t-=rus[j];
      while(t){
         if(rus2[0]<resid[0].size()){
            rus2[0]++;cout<<" "<<resid[0][resid[0].size()-rus2[0]].second;
         }else if(rus2[1]<resid[1].size()){
            rus2[1]++;cout<<" "<<resid[1][resid[1].size()-rus2[1]].second;
         }else if(rus2[2]<resid[2].size()){
            rus2[2]++;cout<<" "<<resid[2][resid[2].size()-rus2[2]].second;
         }
         t--;
      }
      cout<<endl;
   }
}else{
   vector<string> resname;
   vector<string> reshome;
   for(int i=0;i<3;i++)
      for(int j=0;j<items[i].size();j++)
         items[i][j].first.second=0;
   for(int i=0;i<k;i++){
      string name,type,home;
      int bonus;
      cin>>name>>type>>bonus>>home;
      int t2=0;
      if(type[0]=='s')
         t2=1;
      else if(type[0]=='p')
         t2=2;
      for(int j=0;j<3;j++){
         for(int i=0;i<items[j].size();i++){
            if(items[j][i].second==home){
               if(j==t2)
                  items[j][i].first.first+=bonus;
               items[j][i].first.second++;
            }        
         }
      }
      resname.push_back(name);
      reshome.push_back(home);
   }
   sort(items[0].begin(),items[0].end());
   sort(items[1].begin(),items[1].end());
   sort(items[2].begin(),items[2].end());
   itm bs[3];
   for(int i=0;i<3;i++)bs[i]=items[i][items[i].size()-1];
   
   for(int i=0;i<3;i++){
      cout<<bs[i].second<<" "<<bs[i].first.second;
      for(int j=0;j<reshome.size();j++){
         if(reshome[j]==bs[i].second)
            cout<<" "<<resname[j];
      }
      cout<<endl;
   }
}
return 0;
}




