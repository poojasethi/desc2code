#include <map>
#include <set>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <string>
#include <vector>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#define sqr(x) ((x) * (x))
using namespace std;


typedef	long long int64;
struct	ITEM
{
	string	name;
	int	start, tot, type, size;
}		a[1005];
struct	PEOP
{
	string	name;
	int	data, home, type;
}		b[1005];
map<string,int>	hash;
vector<int>	e;
int		h[1005], N, M, S = 0, H;


bool	sort_h(const int A, const int B)
{
	return b[A].data > b[B].data;
}

void	Print(int TYPE)
{
	int	k = 0;
	for (int i = 1; i <= N; ++ i)
		if (a[i].type == TYPE)
			k = (!k ? i : (a[i].tot > a[k].tot ? i : k));
	cout << a[k].name << ' ';
	int	cnt = 0;
	for (int i = 1; i <= M; ++ i) if (b[i].home == k) ++ cnt;
	cout << cnt;
	for (int i = 1; i <= M; ++ i) if (b[i].home == k) cout << ' ' << b[i].name;
	cout << endl;
}

void	Work(int TYPE)
{
	H = 0;
	for (int i = 1; i <= M; ++ i) if (b[i].type == TYPE) h[++ H] = i;
	sort(h + 1, h + H + 1, sort_h);
	int	 k = 0;
	for (int i = 1; i <= N; ++ i) if (a[i].type == TYPE)
	{
		for (int j = 1; j <= min(H, a[i].size); ++ j) a[i].tot += b[h[j]].data;
		k = (!k ? i : (a[i].tot > a[k].tot ? i : k));
	}
	
	e.clear();
	for (int i = 1; i <= M; ++ i) if (b[i].home == k) e.push_back(i);
	int	T = min(a[k].size, H), r = 1;
	for (int i = 0; i < e.size(); ++ i)
	{
		bool	flag = 0;
		for (int j = 1; j <= T && !flag; ++ j) if (h[j] == e[i]) flag = 1;
		if (flag) continue;
		for (; r <= T && b[h[r]].home == k; ++ r);
		if (r > T) continue;
		swap(b[e[i]].home, b[h[r]].home);
	}
	for (; r <= T; ++ r) b[h[r]].home = k;
}

int	main()
{
//	freopen("C.in", "r", stdin);
//	freopen("C.out", "w", stdout);
	
	cin >> N;
	for (int i = 1; i <= N; ++ i)
	{
		string	type;
		int	s[3];
		cin >> a[i].name >> type >> s[0] >> s[1] >> s[2] >> a[i].size;
		if (type == "weapon") a[i].type = 0; else
		if (type == "armor") a[i].type = 1; else
		if (type == "orb") a[i].type = 2;
		a[i].start = a[i].tot = s[a[i].type];
		hash[a[i].name] = i;
		S += a[i].size;
	}
	cin >> M;
	for (int i = 1; i <= M; ++ i)
	{
		string	type, home;
		cin >> b[i].name >> type >> b[i].data >> home;
		b[i].home = hash[home];
		if (type == "gladiator") b[i].type = 0; else
		if (type == "sentry") b[i].type = 1; else
		if (type == "physician") b[i].type = 2;
	}
	
	if (S == M)
	{
		for (int i = 1; i <= M; ++ i)
			if (b[i].type == a[b[i].home].type) a[b[i].home].tot += b[i].data;
		Print(0);
		Print(1);
		Print(2);
		exit(0);
	}
	
	Work(0);
	Work(1);
	Work(2);
	Print(0);
	Print(1);
	Print(2);
	
	return 0;
}
