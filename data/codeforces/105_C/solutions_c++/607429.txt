#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <time.h>
#include <ctype.h>
#include <assert.h>
#include <iostream>
#include <fstream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <list>
#include <bitset>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <numeric>
using namespace std;

typedef long long ll;
typedef unsigned long long llu;
typedef long double ld;
typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;

#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(),(x).end()
#define clr(t,v) memset((t),(v),sizeof(t))
#define endl ('\n')

const int inf=1999999999;
const double pi=acos(-1.0);
const double eps=1e-9;
char gc(){char c;while(isspace(c=getchar()));return c;}
int gs(char*s){fgets(s,2000000,stdin);int l=strlen(s);while(l && isspace(s[l-1]))s[--l]=0;return l;}

string weps[100];
int type[100];
int power[100],cap[100];
vector<int> resid[100],tresid[100];

string pers[1000];
int ptype[1000];
int ppower[1000];
bool resu[1000];

map<string,int> wepm;

int gettype(string t)
{
	char c=t[0];
	if(c=='w')
		return 0;
	if(c=='a')
		return 1;
	if(c=='o')
		return 2;
	if(c=='g')
		return 0;
	if(c=='s')
		return 1;
	if(c=='p')
		return 2;
	return -1;
}
int main()
{
//	freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
	ios::sync_with_stdio(false);cout<<fixed<<setprecision(15);
	int n,m;
	cin>>n;
	string s,t;
	int a[3];
	int totcap=0;
	for(int i=0;i<n;i++)
	{
		cin>>s>>t>>a[0]>>a[1]>>a[2]>>cap[i];
		totcap+=cap[i];
		wepm[s]=i;
		weps[i]=s;
		type[i]=gettype(t);
		power[i]=a[type[i]];
	}
	cin>>m;
	for(int i=0;i<m;i++)
	{
		cin>>pers[i]>>t>>ppower[i]>>s;
		ptype[i]=gettype(t);
		int a=wepm[s];
		resid[a].push_back(i);
	}
//	cout<<totcap<<' '<<m<<endl;
	if(totcap==m)
	{
		for(int t=0;t<3;t++)
		{
			vii v;
			for(int i=0;i<n;i++)
				if(type[i]==t)
				{
					int s=power[i];
					for(int j=0;j<sz(resid[i]);j++)
						if(ptype[resid[i][j]]==t)
							s+=ppower[resid[i][j]];
//					cout<<weps[i]<<' '<<s<<endl;
					v.pb(mp(s,i));
				}
			
			int i=max_element(all(v))->se;
			cout<<weps[i]<<' '<<resid[i].size();
			for(int j=0;j<sz(resid[i]);j++)
				cout<<' '<<pers[resid[i][j]];
			cout<<endl;
		}
		return 0;
	}
	vector<int> ans;
	for(int t=0;t<3;t++)
	{
		vii pows;
		for(int i=0;i<m;i++)
			if(ptype[i]==t)
				pows.pb(mp(ppower[i],i));
		sort(all(pows),greater<ii>());
		
		vii v;
		for(int i=0;i<n;i++)
			if(type[i]==t)
			{
				int s=power[i];
				for(int j=0;j<cap[i] && j<sz(pows);j++)
				{
					s+=pows[j].fi;
					tresid[i].pb(pows[j].se);
				}
//				cout<<weps[i]<<' '<<s<<endl;
				v.pb(mp(s,i));
			}
		
		int i=max_element(all(v))->second;
		ans.pb(i);
		for(int j=0;j<sz(tresid[i]);j++)
			resu[tresid[i][j]]=true;
	}
	int pos=0;
	for(int i=0;i<m && pos<3;i++)
	{
		if(resu[i]==true)
			continue;
		while(pos<3 && sz(tresid[ans[pos]])==cap[ans[pos]])
			pos++;
		if(pos==3)
			break;
		tresid[ans[pos]].pb(i);
	}
	for(int t=0;t<3;t++)
	{
		int i=ans[t];
		cout<<weps[i]<<' '<<tresid[i].size();
		for(int j=0;j<sz(tresid[i]);j++)
			cout<<' '<<pers[tresid[i][j]];
		cout<<endl;
	}
	return 0;
}
