import sys
def read_values():
  return map(int,raw_input().split())

n=input()
items=[]; c=[]; a=[]; d=[]; r=[]; s=[]
residents=[]
for _ in range(n):
  words = raw_input().split()
  nn,cc = words[:2]
  aa,dd,rr,ss = map(int,words[2:])
  items.append(nn); c.append(cc)
  a.append(aa)
  d.append(dd)
  r.append(rr)
  s.append(ss)
  residents.append([])
k=input()
rnames=[]; rt=[]; b=[]; h=[]
for j in range(k):
  rr,tt,bb,hh = raw_input().split()
  bb = int(bb)
  residents.append(rr)
  rt.append(tt)
  b.append(bb)
  rnames.append(rr)
  residents[items.index(hh)].append(j)

if sum(s)==k:
  for i in range(n):
    for j in residents[i]:
      if rt[j]=='gladiator': a[i]+= b[j]
      if rt[j]=='sentry': d[i]+= b[j]
      if rt[j]=='physician': r[i]+= b[j]
  max_a,max_d,max_r=-1,-1,-1
  which_a,which_d,which_r=-1,-1,-1
  for i in range(n):
    if c[i]=='weapon' and a[i]>max_a:
      max_a = a[i]
      which_a = i     
    if c[i]=='armor' and d[i]>max_d:
      max_d = d[i]
      which_d = i     
    if c[i]=='orb' and r[i]>max_r:
      max_r = r[i]
      which_r = i     
  print items[which_a], s[which_a], 
  for j in residents[which_a]:
    print rnames[j],
  print
  print items[which_d], s[which_d], 
  for j in residents[which_d]:
    print rnames[j],
  print
  print items[which_r], s[which_r], 
  for j in residents[which_r]:
    print rnames[j],
  print
else:
  which_residents = [[],[],[]]
  types = ['gladiator', 'sentry', 'physician']
  classes = ['weapon', 'armor', 'orb']
  powers = [a,d,r]
  for j in range(k):
    which_residents[types.index(rt[j])].append(j)
  choice_item = [-1,-1,-1]
  choice_resident = [[],[],[]]
  for t in range(3):
    which_residents[t].sort(key = b.__getitem__,reverse=True)
    max_p = -1
    for i in range(n):
      if classes.index(c[i])==t:
        sp = powers[t][i]+\
             sum([b[j] for j in which_residents[t][:s[i]]])
        if sp > max_p:
          max_p=sp
          choice_item[t]=i
          choice_resident[t] = which_residents[t][:s[i]]
    
  remaining = range(k)
  for t in range(3):
    for j in choice_resident[t]:
      remaining.remove(j)
  for j in remaining:
    assigned = False
    t=0
    while t<3 and not assigned:
      if len(choice_resident[t]) < s[choice_item[t]]:
        choice_resident[t].append(j)
        assigned = True
      t += 1
        
  for t in range(3):
    print items[choice_item[t]],
    print len(choice_resident[t]),
    for j in choice_resident[t]:
      print rnames[j],
    print
