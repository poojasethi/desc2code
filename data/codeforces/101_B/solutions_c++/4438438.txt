#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

const int MAX_N = (int) 1e5 + 20;
vector < pair<int,int> > cor;
vector <int> v;
int dp[MAX_N];
int Sum[MAX_N];
int n , m;
int MOD = 1e9 + 7;

int main()
{
	cin >> n >> m;
	for ( int i = 0 ; i < m ; i++ ){
		int x,y;
		cin >> x >> y;
		cor.push_back(make_pair(y,x));
		v.push_back(y);
	}
	sort( cor.begin() , cor.end() );
	sort( v.begin() , v.end() );
	for ( int i = 0 ; i < m ; i++ ){
		int x = cor[i].second , y = cor[i].first;
		if ( x == 0 )
			++dp[i];
		int st = ( lower_bound( v.begin() , v.end() , x ) - v.begin() );
		int en = ( lower_bound( v.begin() , v.end() , y ) - v.begin() );
		dp[i] = ( dp[i] + Sum[en] - Sum[st] + MOD ) % MOD;
		Sum[i+1] = (Sum[i] + dp[i]) % MOD;
	}
	int ans = 0;
	for ( int i = 0 ; i < m ; i++ )
		if ( cor[i].first == n )
			ans = ( ans + dp[i] ) % MOD;
	cout << ans % MOD << endl;
	return 0;
}
