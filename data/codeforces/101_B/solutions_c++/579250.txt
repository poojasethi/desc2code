#include <stdio.h>
#include <map>
#include <algorithm>
using namespace std;

#define maxn 444444
#define m0 1000000007
map<int, int> fwt;
pair<int, int> a[maxn];
int b[maxn], i, j, m, n;

void fwt_modify(int j, int x){
	while(j<=m){
		fwt[j] = (fwt[j]+x) % m0;
		j = (j | (j-1))+1;
	}
}

int fwt_findsum(int l, int r){
	int res = 0, ad = (l==0);
	while(r>0){
		res = (res+fwt[r]) % m0;
		r = (r & (r-1));
	}
	--l;
	while(l>0){
		res = (res+m0-fwt[l]) % m0;
		l = (l & (l-1));
	}
	return (res+m0+ad) % m0;
}

int main(){
	scanf("%d %d", &m, &n);
	for(i = 0; i<n; i++){
		scanf("%d %d", &a[1+i].second, &a[1+i].first);
		b[i+1] = a[1+i].first;
	}
	sort(b+1, b+n+1);
	sort(a+1, a+n+1);
	for(i = 1; i<=n; i++){
		fwt_modify(b[i], fwt_findsum(a[i].second, a[i].first-1));
	}
	printf("%d\n", fwt_findsum(m, m));
	return 0;
}