#include <iostream>
#include <algorithm>
#include <map>

using namespace std;

const int md = 1000000007;
int n, m, fw[200010];
pair<int,int> v[100010];
map<int,int> mp;

void upd(int i, int x) {
	for (; i<=n; i+=i&-i) fw[i]=(fw[i]+x)%md;
}

int sum(int i) {
	int r = 0;
	for (; i>0; i-=i&-i) r=(r+fw[i])%md;
	return r;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin >> n >> m;
	for (int i=0; i<m; i++) {
		cin >> v[i].second >> v[i].first;
		mp[v[i].first] = 0;
		mp[v[i].second] = 0;
	}
	if (mp.count(0) && mp.count(n));
	else {
		cout << "0\n";
		return 0;
	}
	int k = 0;
	for (map<int,int>::iterator it=mp.begin(); it!=mp.end(); it++) {
		it->second = ++k;
	}
	n = k;
	for (int i=0; i<m; i++) {
		v[i].first = mp[v[i].first];
		v[i].second = mp[v[i].second];
	}
	sort(v, v+m);
	upd(1, +1);
	for (int i=0; i<m; i++) {
		upd(v[i].first, (sum(v[i].first-1)-sum(v[i].second-1)+md)%md);
	}
	cout << (sum(n)-sum(n-1)+md) % md << "\n";
	return 0;
}
