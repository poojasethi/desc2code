#include<cstdio>
#include<cstring>
#include<algorithm>

using namespace std;

const int MOD=1000000007;

int p,c[200010],n,m,f[200010],sum[200010];

struct arr
{
	int x,y;
} b[100010];

bool comp(arr a,arr b)
{
	return a.y<b.y;
}

int bsearch(int k)
{
	int ll,rr,ret;
	for(ll=1,rr=p;ll<=rr;)
	{
		int t=(ll+rr)/2;
		if (c[t]>=k) rr=t-1,ret=t; else ll=t+1;
	}
	return ret;
}

void lsh()
{
	c[++p]=n;
	for(int i=1;i<=m;i++)
	{
		c[++p]=b[i].x;
		c[++p]=b[i].y;
	}
	sort(c+1,c+p+1);
	for(int i=1;i<=m;i++)
	{
		if (b[i].x) b[i].x=bsearch(b[i].x);
		b[i].y=bsearch(b[i].y);
	}
}

int main()
{
	//freopen("101B.in","r",stdin);
	
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;i++)
		scanf("%d%d",&b[i].x,&b[i].y);
	lsh();
	sort(b+1,b+m+1,comp);
	f[0]=sum[0]=1;
	b[0].y=1;
	for(int i=1;i<=m;i++)
	{
		for(int j=b[i-1].y;j<b[i].y;j++) sum[j]=(sum[j-1]+f[j])%MOD;
		f[b[i].y]=((f[b[i].y]+sum[b[i].y-1])%MOD-(b[i].x?sum[b[i].x-1]:0))%MOD;
	}
	printf("%d\n",(f[bsearch(c[p])]+MOD)%MOD);
	
	return 0;
}

