#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long LL;

const int MAXN = 100010;
const int MO = 1000000007;

struct Seg
{
  int st, ed;
  void read() { scanf("%d%d", &st, &ed); }
  bool operator < (const Seg &p) const
  {
    return ed < p.ed;
  }
  bool operator < (const int num) const
  {
    return ed < num;
  }
} p[MAXN];

int f[MAXN];
int sum[MAXN];
int n, m;

void init()
{
  scanf("%d%d", &n, &m);
  for (int i = 0; i < m; ++i) p[i].read();
  p[m].st = 0;
  p[m++].ed = 0;
}

void solve()
{
  sort(p, p+m);
  f[0] = sum[0] = 1;
  
  for (int la = 0, pos, i = 1; i < m; ++i) {
    pos = lower_bound(p, p+i, p[i].st) - p - 1;
    f[i] = (sum[la] - (pos < 0 ? 0 : sum[pos]))%MO;
    sum[i] = (sum[i-1] + f[i])%MO;
    if (i < m-1 && p[i].ed != p[i+1].ed) la = i;
  }

  int ans = 0;
  for (int i = 0; i < m; ++i)
    if (p[i].ed == n) ans = (ans + f[i])%MO;

  printf("%d\n", (ans+MO)%MO);
}

int main()
{
  init();
  solve();
  return 0;
}
