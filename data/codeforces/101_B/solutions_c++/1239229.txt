#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;

const int MOD=1000000007;
int bit[400005];
vector<pair<int, int> > a;
map<int, int> v;
int r;
void add(int x, int val) {
	while(x<=r) {
		bit[x] = (bit[x]+val)%MOD;
		x += x&-x;
	}
}
int sum(int x) {
	int ret=0;
	while(x>0) {
		ret = (ret + bit[x])%MOD;
		x -= x&-x;
	}
	return ret;
}
int query(int L, int R) {
	int ret = sum(R) - sum(L-1);
	return (ret%MOD+MOD)%MOD;
}

int main(void) {
	int n, m;
	scanf("%d%d", &n, &m);
	v[n]=v[0]=0;
	for(int i=0;i<m;i++) {
		int s, t;
		scanf("%d%d", &s, &t);
		v[s]=v[t]=0;
		a.push_back(make_pair(t, s));
	}
	r=0;
	for(map<int, int>::iterator it=v.begin(); it!=v.end();it++) it->second=++r;
	add(1, 1);
	sort(a.begin(), a.end());
	for(int i=0;i<m;i++) {
		int val=query(v[a[i].second], v[a[i].first]-1);
		add(v[a[i].first], val);
	}
	int ans=query(v[n], v[n]);
	printf("%d\n", ans);
	return 0;
}

