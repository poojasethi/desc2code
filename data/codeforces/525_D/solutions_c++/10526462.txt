#include <cstdio>

const int N = 2020;

int a[N][N], q[2][N * N], qs[2], x, y, c;
char s[N][N];
int n, m, i, j;

inline void chadd(int i, int j, int x)
{
	int cx, cy, k = 0;
	for (int ii = 0; ii < 2; ii++)
		for (int jj = 0; jj < 2; jj++)
			if (s[i + ii][j + jj] == '*')
				cx = i + ii, cy = j + jj, ++k;
	if (k == 1 && a[cx][cy] < c)
		q[x][qs[x]++] = cx * m + cy, a[cx][cy] = c;
}

int main()
{
	scanf("%d%d", &n, &m);
	for (i = 0; i < n; i++)
		scanf("%s", s[i]);

	c = 1;
	for (i = 0; i < n - 1; i++)
		for (j = 0; j < m - 1; j++)
			chadd(i, j, 0);

	x = 0, y = 1;
	while(qs[x] > 0)
	{
		++c;
		qs[y] = 0;
		for (int i = 0; i < qs[x]; i++)
		{
			int cx = q[x][i] / m, cy = q[x][i] % m;
			s[cx][cy] = '.';
			for (int ii = cx > 0 ? cx - 1 : 0; ii < n - 1 && ii <= cx; ii++)
				for (int jj = cy > 0 ? cy - 1 : 0; jj < m - 1 && jj <= cy; jj++)
					chadd(ii, jj, y);
		}
		x ^= 1, y ^= 1;
	}

	for (i = 0; i < n; i++)
		puts(s[i]);

	return 0;
}