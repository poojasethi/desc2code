#include <iostream>
#include <string>
using namespace std;
int n, m;
string s[2000];
bool can(int y, int x){
    if (y == n - 1 || x == m - 1 || y < 0 || x < 0) return false;
    return true;
}
void dfs(int y, int x){
    if (!can(y, x)) return;
    int wall = 0;
    if (s[y][x] == '*') wall++;
    if (s[y][x + 1] == '*') wall++;
    if (s[y + 1][x] == '*') wall++;
    if (s[y + 1][x + 1] == '*') wall++;
    if (wall == 1){
        s[y][x] = '.';
        s[y][x + 1] = '.';
        s[y + 1][x] = '.';
        s[y + 1][x + 1] = '.';
        for (int i = 0; i < 3; i++){
            for (int j = 0; j < 3; j++){
                dfs(y - 1 + i, x - 1 + j);
            }
        }
    }
}
int main(){
    cin >> n >> m;
    for (int i = 0; i < n; i++) cin >> s[i];

    for (int i = 0; i < n; i++){
        for (int j = 0; j < m; j++){
            dfs(i, j);
        }
    }

    for (int i = 0; i < n; i++){
        for (int j = 0; j < m; j++){
            cout << s[i][j];
        }
        cout << endl;
    }
}