#include <iostream>
#include <cstdio>
#include <algorithm>
using namespace std;
typedef long long ll;
const int maxN = 1234567;
ll mod,B;
ll pw[maxN];
string b,n;
ll f (const ll &x) { return x%mod; }
int main(){
    ios_base::sync_with_stdio(false);
    cin >> b >> n >> mod;
    for (int i=0; i<(int)b.size(); i++)
        B = f(B*10+b[i]-'0');
    pw[0] = B;
    for (int i=1; i<maxN; i++){
        pw[i] = 1;
        for (int j=0; j<10; j++)
            pw[i] = f(pw[i]*pw[i-1]);
    }
    reverse(n.begin(),n.end());
    for (int i=0; true; i++){
        if (n[i]=='0')
            n[i]='9';
        else{
            n[i]--; break;
        }
    }
    ll ans1 = 1;
    for (int i=0; i<(int)n.size(); i++)
        for (int j=0; j<(n[i]-'0'); j++)
            ans1 = f(ans1 * pw[i]);
    ll ans = ((ans1*B-ans1)%mod+mod)%mod;
    if (ans==0)
        ans = mod;
    cout << ans << endl;
    return 0;
}