#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long i64;
const int N = 1000005;
char b[N], n[N];
int c;

i64 calc(i64 x, i64 y, i64 mod) {
    i64 res=1;
    x=x%mod;
    while(y) {
        if(y&1) res=(res*x)%mod;
        y>>=1;
        x=(x*x)%mod;
    }
    return res;
}

int main() {
    int i, nlen;
    i64 bi,bn_1,res;
    scanf("%s %s %d",b,n,&c);
    i=0;
    bi=0;
    while(b[i]) {
        bi=(bi*10+b[i]-'0')%c;
        i++;
    }
    nlen=strlen(n);
    i=nlen-1;
    while(i>=0&&n[i]=='0') {
        n[i]='9';
        i--;
    }
    n[i]--;
    
    bn_1=1;
    for(int i=0; i<nlen; i++) {
        bn_1 = (calc(bn_1, 10, c)*calc(bi, n[i]-'0', c))%c;
    }
    res=(bn_1*(bi-1+c))%c;
    if(res==0) printf("%d\n", c);
    else printf("%I64d\n", res);
    
    return 0;
}
