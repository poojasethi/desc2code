#include <bits/stdc++.h>

const int N = 1000005;

char b[N], n[N];

long long power(long long a, int b, int c) {
    if (b == 0) return 1;
    if (b == 1) return a;
    long long tmp = power(a, b>>1, c);
    if (b & 1) return (tmp*tmp%c)*a%c;
    else return tmp*tmp%c;
}

int main() {
    scanf("%s", b);
    scanf("%s", n);
    int c;
    scanf("%d", &c);
    long long bb = 0;
    int len = strlen(b);
    for (int i = 0; i < len; i++)
        bb = (bb*10+b[i]-'0')%c;
    len = strlen(n);
    long long ans = (bb-1)%c;
    if (ans < 0) ans += c;
    int i = len-1;
    while (n[i] == '0') n[i--] = '9';
    n[i]--;
    for (int i = len-1; i >= 0; i--) {
        ans = (ans * power(bb, n[i]-'0', c)) % c;
        bb = power(bb, 10, c);
    }
    if (ans == 0) ans = c;
    printf("%I64d", ans);
    return 0;
}
