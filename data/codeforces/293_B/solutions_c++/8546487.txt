// by Î¾

#include <cstdio>

#define rep(i,l,r) for(int i=l;i<=r;++i)

using namespace std;

const int p=1e9+7;

int base,re,k,vl,n,m,fac[20],z[20][20],A[20][20],a[20][20],lable[405],c[405],col[405],log[2049];

int dfs(int x,int y){
	int ret=0;
	if(y>m)y=1,++x;
	if(x>n)return A[vl][re-k+vl];
	z[x][y]=z[x-1][y]|z[x][y-1];
	if(a[x][y] && lable[a[x][y]]){
		if(z[x][y]>>lable[a[x][y]]-1&1)return 0;
		z[x][y]|=1<<lable[a[x][y]]-1;
		return dfs(x,y+1);
	}
	for(int b=~z[x][y];;b-=b&-b){
		int _=b&-b,i=log[_];
		if(i>re || !i)break;
		if(!c[i] || c[i]==a[x][y] || !a[x][y]){
			int qq=c[i];
			lable[a[x][y]]=i;
			if(a[x][y])c[i]=a[x][y];
			z[x][y]|=_;
			if((ret+=dfs(x,y+1))>=p)ret-=p;
			lable[a[x][y]]=0,c[i]=qq,z[x][y]^=_;
		}
	}
	if(re<k){
		++re;
		c[re]=a[x][y];
		z[x][y]|=1<<re-1;
		lable[a[x][y]]=re;
		if((ret+=dfs(x,y+1))>=p)ret-=p;
		lable[a[x][y]]=0;
		c[re]=a[x][y];
		--re;
	}
	return ret;
}

int main(){
	//freopen("data.in","r",stdin);//freopen("my.out","w",stdout);
	scanf("%d%d%d",&n,&m,&k);
	if(n+m-1>k)return puts("0"),0;
	rep(i,1,n)rep(j,1,m){
		scanf("%d",&a[i][j]);
		if(!col[a[i][j]]++)++vl;
	}
	--vl;vl=k-vl;
	*fac=1;
	rep(i,1,vl)fac[i]=fac[i-1]*i;
	rep(i,1,vl)rep(j,0,i)A[i][j]=fac[i]/fac[i-j];
	base=1<<vl;
	for(int i=1;i<=base*2;i<<=1)log[i]=log[i>>1]+1;
	printf("%d\n",dfs(1,1));
}