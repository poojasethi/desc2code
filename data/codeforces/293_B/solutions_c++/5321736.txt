#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
using namespace std;
int K,i,j,k,l,n,m,ans,f[14],a[14][14],s[14][14],bo[14];
void dfs(int x,int y,int tot){
    int i,j,k;
    if(tot>K)return;
    if(y==m+1)x++,y=1;
    if(x==n+1){
        int num=0,res=1;
        for(i=1;i<=K;++i)if(f[i])num++;
        for(i=K-tot+1;i<=K-num;++i)res*=i;
        ans=(ans+res)%1000000007;
        return;
    }
    s[x][y]=s[x-1][y]|s[x][y-1];
    if(a[x][y]){
        if(f[a[x][y]]){
            if((s[x][y]>>f[a[x][y]])&1)return;
            s[x][y]|=1<<f[a[x][y]];
            dfs(x,y+1,tot);
        }else{
            for(i=1;i<=tot+1;++i)if(((s[x][y]>>i)&1)==0 && !bo[i]){
                s[x][y]^=1<<i;
                f[a[x][y]]=i;
                bo[i]=1;
                dfs(x,y+1,max(i,tot));
                s[x][y]^=1<<i;
                f[a[x][y]]=0;
                bo[i]=0;
            }
        }
        return;
    }
    for(k=1;k<=tot+1;++k)if(((s[x][y]>>k)&1)==0){
        s[x][y]^=1<<k;
        dfs(x,y+1,max(k,tot));
        s[x][y]^=1<<k;
    }
}
int main(){
    scanf("%d%d%d",&n,&m,&K);
    if(n+m-1>K){
        printf("0\n");
        return 0;
    }
    for(i=1;i<=n;++i)
        for(j=1;j<=m;++j)scanf("%d",&a[i][j]);
    dfs(1,1,0);
    printf("%d\n",ans);
}