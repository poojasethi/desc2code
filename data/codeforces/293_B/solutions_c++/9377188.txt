#include <bits/stdc++.h>
using namespace std;

const int S=12;
const int MOD=1000000007;

int n,m,k,color,tot,ans,st[S][S],a[S][S],to[S];
bool cnt[S],used[S];

inline void dfs(int x,int y,int c)
{
	if (c>k) return;
	if (y>m)
	{
		y=1;
		if (++x>n)
		{
			tot=1;
			for (int i=0;i<c-color;++i) tot*=k-color-i;
			ans=(ans+tot)%MOD;
			return;
		}
	}
	st[x][y]=st[x-1][y]|st[x][y-1];
	if (a[x][y])
	{
		if (to[a[x][y]])
		{
			if (st[x][y]&(1<<to[a[x][y]])) return;
			st[x][y]^=1<<to[a[x][y]];
			dfs(x,y+1,c);
			st[x][y]^=1<<to[a[x][y]];
		}else{
			for (int i=1;i<=c+1;++i)
				if (!used[i] && !(st[x][y]&(1<<i)))
					used[i]=1,st[x][y]^=1<<i,to[a[x][y]]=i,
					dfs(x,y+1,i>c?i:c),
					used[i]=0,st[x][y]^=1<<i,to[a[x][y]]=0;
		}
	}else{
		for (int i=1;i<=c+1;++i)
			if (!(st[x][y]&(1<<i)))
				st[x][y]^=1<<i,dfs(x,y+1,i>c?i:c),st[x][y]^=1<<i;
	}
}

int main()
{
	scanf("%d%d%d",&n,&m,&k);
	if (n+m-1>k)
	{
		puts("0");
		return 0;
	}
	for (int i=1;i<=n;++i)
		for (int j=1;j<=m;++j)
		{
			scanf("%d",&a[i][j]);
			if (a[i][j] && !cnt[a[i][j]]) cnt[a[i][j]]=1,++color;
		}
	dfs(1,1,0);
	printf("%d\n",ans);
	return 0;
}
