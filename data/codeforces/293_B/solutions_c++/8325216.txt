#include<cstdio>
#include<cstring>
#include<algorithm>
#define LL long long
using namespace std;
const int mod=1000000007;
int n,m,K;
int a[15][15],s[15][15];
int ans[15],f[15],p[15];
void Dfs(int x,int y,int tot)
{
	int i;
	if(x>n)
	{
		ans[tot]++;
		return ;
	}
	if(y>m)
		return Dfs(x+1,1,tot);
	if(tot>K)
		return ;
	s[x][y]=s[x-1][y]|s[x][y-1];
	if(a[x][y])
		if(f[a[x][y]])
		{
			s[x][y]^=1<<f[a[x][y]];
			if((s[x][y]>>f[a[x][y]])&1)
				Dfs(x,y+1,tot);
			s[x][y]^=1<<f[a[x][y]];
		}
		else
		{
			for(i=1;i<=tot+1;i++)
				if((~s[x][y]>>i)&1&&!p[i])
					f[p[i]=a[x][y]]=i,
					s[x][y]^=1<<i,
					Dfs(x,y+1,max(tot,i)),
					s[x][y]^=1<<i,
					f[a[x][y]]=p[i]=0;
		}
	else
		for(i=1;i<=tot+1;i++)
			if((~s[x][y]>>i)&1)
				s[x][y]^=1<<i,
				Dfs(x,y+1,max(tot,i)),
				s[x][y]^=1<<i;
}
int main()
{
	int i,j,tot=0,ret=0,now=1;
	scanf("%d%d%d",&n,&m,&K);
	if(n+m-1>K)return puts("0"),0;
	for(i=1;i<=n;i++)
		for(j=1;j<=m;j++)
		{
			scanf("%d",&a[i][j]);
			if(a[i][j]&&!p[a[i][j]])
				tot++,p[a[i][j]]=1;
		}
	memset(p,0,sizeof(p));
	Dfs(1,1,0);
	for(i=tot;i<=K;i++)
		ret=(ret+(LL)ans[i]*now)%mod,
		now=(LL)now*(K-i)%mod;
	printf("%d\n",ret);
}