#include <map>
#include <set>
#include <list>
#include <ctime>
#include <cmath>
#include <queue>
#include <stack>
#include <bitset>
#include <vector>
#include <cstdio>
#include <string>
#include <cstring>
#include <sstream>
#include <iomanip>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;
int n,m,k,ans=0;
int a[15][15],b[1<<15],f[15][15],g[15][15],v[15];
int dfs (int x,int y) {
	if (y==m+1) {x++;y=1;}
	if (x==n+1) return 1;
	int z=(f[x-1][y]|f[x][y-1]),i,w=-1,p=0;
	for (i=(~z)&((1<<k)-1);i;i-=(i&(-i))) {
		int t=b[i&(-i)]+1;
		if (!g[x][y] || g[x][y]==t) {
			f[x][y]=z|(1<<(t-1));v[t]++;
			if (v[t]==1) {
				if (w==-1) w=dfs(x,y+1);
				p+=w;
			}
			else if (v[t]) p+=dfs(x,y+1);
			if (p>=1000000007) p-=1000000007;
			v[t]--;
		}
	}
	return p;
}
int main ( ) {
	scanf("%d%d%d",&n,&m,&k);
	if (n+m-1>k) {puts("0");return 0;}
	int i,j;
	for (i=1;i<=n;i++) {
		for (j=1;j<=m;j++) {
			scanf("%d",&g[i][j]);
			v[g[i][j]]++;
		}
	}
	for (i=1;i<=k;i++) b[1<<i]=i;
	printf("%d\n",dfs(1,1));
	return 0;
}