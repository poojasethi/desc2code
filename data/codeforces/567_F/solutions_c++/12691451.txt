#include<bits/stdc++.h>
using namespace std;
typedef long long int64;
const int maxn=80,maxk=210;
int t0[maxn][maxn],t1[maxn][maxn],t2[maxn][maxn];
int n,k;

inline int get0(int x1,int y1,int x2,int y2){
	return t0[x2][y2]-t0[x1-1][y2]-t0[x2][y1-1]+t0[x1-1][y1-1];
}
inline int get1(int x1,int y1,int x2,int y2){
	return t1[x2][y2]-t1[x1-1][y2]-t1[x2][y1-1]+t1[x1-1][y1-1];
}
inline int get2(int x1,int y1,int x2,int y2){
	return t2[x2][y2]-t2[x1-1][y2]-t2[x2][y1-1]+t2[x1-1][y1-1];
}
void init(){
	memset(t0,0,sizeof(t0));
	memset(t1,0,sizeof(t1));
	memset(t2,0,sizeof(t2));
	for(int i=1;i<=k;++i){
		int u,v; char s[5];
		scanf("%d%s%d",&u,s,&v);
		if(s[0]=='>') swap(u,v),s[0]='<';
		++t2[u][v];
		if(s[0]=='=') ++t1[u][v],++t2[v][u];
		else if(!s[1]) ++t0[u][v];
	}
/*	for(int i=1;i<=n*2;++i)
		for(int j=1;j<=n*2;++j){
			if(t0[i][j]) printf("h[%d]<h[%d]\n",i,j);
		}
	for(int i=1;i<=n*2;++i)
		for(int j=1;j<=n*2;++j){
			if(t1[i][j]) printf("h[%d]=h[%d]\n",i,j);
		}
	for(int i=1;i<=n*2;++i)
		for(int j=1;j<=n*2;++j){
			if(t2[i][j]) printf("h[%d]<=h[%d]\n",i,j);
		}*/
	for(int i=1;i<=(n<<1);++i)
		for(int j=1;j<=(n<<1);++j){
			t0[i][j]+=t0[i-1][j]+t0[i][j-1]-t0[i-1][j-1];
			t1[i][j]+=t1[i-1][j]+t1[i][j-1]-t1[i-1][j-1];
			t2[i][j]+=t2[i-1][j]+t2[i][j-1]-t2[i-1][j-1];
		}
}

int64 f[maxn][maxn];
void dp(){
	memset(f,0,sizeof(f));
	for(int i=1;i<=(n<<1)-1;++i)
		f[n][i]=!get0(i,i+1,i,i+1) && !get0(i+1,i,i+1,i);
	for(int i=n-1;i>=1;--i){
		for(int l=1,r=(n-i+1)<<1;r<=(n<<1);++l,++r){
			if(!get0(l,r,l,r) && !get0(r,l,r,l) && !get2(l+1,l,r-1,l) && !get2(l+1,r,r-1,r))
				f[i][l]+=f[i+1][l+1];
			if(!get0(l,l+1,l,l+1) && !get0(l+1,l,l+1,l) && !get2(l+2,l,r,l+1))
				f[i][l]+=f[i+1][l+2];
			if(!get0(r-1,r,r-1,r) && !get0(r,r-1,r,r-1) && !get2(l,r-1,r-2,r))
				f[i][l]+=f[i+1][l];
		}
	}
	cout<<f[1][1]<<endl;
}

int main(){
	while(scanf("%d%d",&n,&k)!=EOF)
		init(),dp();
	return 0;
}
