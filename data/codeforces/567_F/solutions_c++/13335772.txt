#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <cctype>
#include <cmath>
#include <algorithm>
#include <vector>
#include <deque>

using namespace std;

typedef long long ll;

#define MP(x,y) (make_pair((x),(y)))

const int mxn = 76;

int N, K;
ll f[mxn][mxn];

string REV(string s) {
	if (s[0] == '<')
		s[0] = '>';
	else if (s[0] == '>')
		s[0] = '<';
	return s;
}

vector<pair<string,int> > O[mxn];

bool bel(int x, pair<int,int> a) {
	return a.first <= x && x <= a.second;
}

bool check(int x, pair<int,int> ge, pair<int,int> g) { // greater_equal, greater
	for (int i = 0; i < O[x].size(); ++i) {
		string s = O[x][i].first;
		int y = O[x][i].second;
		if (!(
			   (s.find('=') != string::npos && bel(y, ge) && !bel(y, g))
			|| (s.find('<') != string::npos && bel(y, g))
			|| (s.find('>') != string::npos && !bel(y, ge))
		))
			return false;
	}
	return true;
}

void EXEC() {
	
	cin >> N >> K;
	
	for (int i = 1; i <= K; ++i) {
		int a, b;
		string o;
		cin >> a >> o >> b;
		O[a].push_back(MP(o, b));
		O[b].push_back(MP(REV(o), a));
	}
	
	N *= 2;
	
	ll ans = 0;
	
	f[0][0] = 1;
	for (int i = 0; i <= N; ++i)
		for (int j = 0; i + j <= N; ++j) if ((i + j) % 2 == 0) {
			if (i + j == N) {
				ans += f[i][j];
				continue;
			}
			// LL
			if (   check(i + 1, MP(i + 1, N - j), MP(i + 3, N - j))
			 	&& check(i + 2, MP(i + 1, N - j), MP(i + 3, N - j)))
					f[i + 2][j] += f[i][j];
			if (i + j + 2 < N) {
				// RR
				if (   check(N - j,     MP(i + 1, N - j), MP(i + 1, N - j - 2))
			 		&& check(N - j - 1, MP(i + 1, N - j), MP(i + 1, N - j - 2)))
						f[i][j + 2] += f[i][j];
				// LR
				if (   check(i + 1, MP(i + 1, N - j), MP(i + 2, N - j - 1))
			 		&& check(N - j, MP(i + 1, N - j), MP(i + 2, N - j - 1)))
						f[i + 1][j + 1] += f[i][j];
			}
		}
	
	cout << ans << endl;
}

int main() {
	EXEC();
	return 0;
}
