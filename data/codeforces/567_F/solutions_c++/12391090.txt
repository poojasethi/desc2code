#include <bits/stdc++.h>
#define ll long long
#define N 1000
#define NN 1000000009
#define f first
#define s second
#define mp make_pair
#define BIT(i, j) ((j >> i) & 1)
#define filein(t) freopen(t, "r", stdin)
#define fileout(t) freopen(t, "w", stdout)
#define ln 1e18

using namespace std;

int n, k;
pair <int, int> L[N];
string Sign[N], p1, p3;
ll DP[N][N];

bool Check(int x1, int x2, int l, int r)
{
    for(int i=1; i<=2*k; i++)
    {
        if(L[i].f == x1 && L[i].s >= l && L[i].s <= r && (Sign[i] == ">" || Sign[i] == ">=" || Sign[i] == "=")) return false;
        if(L[i].f == x2 && L[i].s >= l && L[i].s <= r && (Sign[i] == ">" || Sign[i] == ">=" || Sign[i] == "=")) return false;
        if(L[i].f == x1 && L[i].s == x2 && (Sign[i] == ">" || Sign[i] == "<")) return false;
        if(L[i].f == x2 && L[i].s == x1 && (Sign[i] == ">" || Sign[i] == "<")) return false;
    }
    return true;
}

string Rev(string p)
{
    if(p == ">") return "<";
    if(p == "<") return ">";
    if(p == ">=") return "<=";
    if(p == "<=") return ">=";
    return p;
}

bool Check2(int x, int y)
{
    for(int i=1; i<=2*k; i++)
        if(L[i].f == x && L[i].s == y && (Sign[i] == ">" || Sign[i] == "<")) return false;
    return true;
}

int main()
{
    //filein("inp.txt");
    //fileout("out.txt");
    cin >> n >> k;
    for(int i=1; i<=k; i++)
    {
        cin >> p1 >> Sign[i*2-1] >> p3;
        stringstream(p1) >> L[i*2-1].f;
        stringstream(p3) >> L[i*2-1].s;
        L[2*i].f = L[2*i-1].s;
        L[2*i].s = L[2*i-1].f;
        Sign[i*2] = Rev(Sign[i*2-1]);
    }
    for(int i=1; i<=2*n-1; i++)
        if(Check2(i, i+1))
            DP[i][i+1] = 1;
    for(int k=4; k<=2*n; k+=2)
        for(int i=1; i<=2*n-k+1; i++)
        {
            int j = i + k - 1;
            if(Check(i, j, i+1, j-1)) DP[i][j] += DP[i+1][j-1];
            if(Check(j-1, j, i, j-2)) DP[i][j] += DP[i][j-2];
            if(Check(i, i+1, i+2, j)) DP[i][j] += DP[i+2][j];
        }
    cout << DP[1][2*n];
}
