#include <iostream>
#include <cstdio>
#include <fstream>
#include <cmath>
#include <ctime>
#include <cstring>
#include <iomanip>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
using namespace std;
struct chel
{
    int vik;
    int ys;
};
chel a[200003];
chel b[200003];
void mergesort(chel *a,chel *b,int n)
{
    int i,i0,i1,iRight,iEnd,width,j;
    for(width=1;width<n;width*=2)
        for(i=0;i<n;i+=width*2)
        {
            i0=i;
            i1=iRight=min(i+width,n);
            iEnd=min(i+width*2,n);
            for(j=i;j<iEnd;j++)
                if(i0<iRight && (i1==iEnd || a[i0].ys<a[i1].ys))
                    b[j]=a[i0++];
                else
                    b[j]=a[i1++];
            for(j=i;j<iEnd;j++)
                a[j]=b[j];
        }
}
int main()
{
    int n,k;
    scanf("%d %d",&n,&k);
    int i;
    for(i=0;i<n;i++)
        scanf("%d %d",&a[i].vik,&a[i].ys);
    mergesort(a,b,n);
    long long res;
    long long rec=((long long)1<<(62));
    int place;
    int stop;
    for(int wik=0;wik<n+1;wik++)
    {
        place=n+1;
        for(i=0;i<n;i++)
            if(a[i].vik<wik-1)
                place--;
        res=0;
        if(place<=k)
        {
            for(i=0;i<wik;i++)
                res+=a[i].ys;
            rec=min(rec,res);
            break;
        }
        int coun=0;
        for(i=0;i<n && coun<place-k;i++)
            if(a[i].vik==wik || a[i].vik==wik-1)
            {
                res+=a[i].ys;
                stop=i;
                coun++;
            }
        if(coun<place-k && wik==n)
        {
            printf("-1\n");
            return 0;
        }
        if(coun<place-k)
            continue;
        for(i=0;i<n && coun<wik;i++)
        {
            if((a[i].vik!=wik && a[i].vik!=wik-1) || stop<i)
            {
                res+=a[i].ys;
                coun++;
            }
        }
        rec=min(rec,res);
    }
    printf("%I64d\n",rec);
    return 0;
}
/*

*/
