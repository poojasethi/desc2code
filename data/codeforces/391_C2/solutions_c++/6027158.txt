#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <queue>
#include <map>
#include <set>
#include <vector>
#include <string>
#include <stack>
#define INF 0x3f3f3f3f
#define eps 1e-8
using namespace std;
typedef long long LL;
const int maxn=105;
int point[maxn],cost[maxn];
int dp[105][maxn][maxn];

inline void updata(int &x,int v)
{
    x=v<x?v:x;
}

int main()
{
    int n,K;
    scanf("%d%d",&n,&K);
    K=n-K+1;
    for(int i=1;i<=n;++i) scanf("%d%d",point+i,cost+i);
    int ans=INF;
    for(int win=0;win<=n;++win)
    {
        memset(dp,0x3f,sizeof(dp));
        dp[0][0][0]=0;
        for(int i=1;i<=n;++i)
        {
            int mw=min(i,win);
            for(int j=0;j<=mw;++j) for(int k=0;k<=i;++k)
            {
                if(win>point[i]+1&&k) updata(dp[i][j][k],dp[i-1][j][k-1]);
                if(win<=point[i]+1) updata(dp[i][j][k],dp[i-1][j][k]);
                if(win>=point[i]&&k&&j) updata(dp[i][j][k],dp[i-1][j-1][k-1]+cost[i]);
                if(win<point[i]&&j) updata(dp[i][j][k],dp[i-1][j-1][k]+cost[i]);
            }
        }
        for(int i=K;i<=n;++i) ans=min(ans,dp[n][win][i]);
    }
    if(ans==INF) puts("-1");
    else printf("%d\n",ans);
    return 0;
}
