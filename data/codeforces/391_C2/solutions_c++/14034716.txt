#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <climits>
#include <list>
#include <deque>
#include <sstream>
#include <iomanip>
#include <queue>
using namespace std;
const long long M=1000000;
const long long BIG= 10000000000000000LL;
int main(){
    int n,k;
    cin >> n>>k;
    vector<int> p(n),e(n), t;
    for(int i=0;i<n;i++){
    cin>>p[i]>>e[i];
    }
    long long res=0;
    if(k < n+1){
        res = BIG;
        t = p;
        sort(t.begin(),t.end());
        int s0 = t[n-k];
        for(int s=s0; s<=s0+2; s++) if(s<=n) {
            int nlow=0;
            for(int i=0; i<n; i++) if(s>=p[i]+2) nlow++;
            vector<long long> a(0),others(0);
            for(int i=0; i<n; i++){
                if(s-2 < p[i] and p[i]<=s){
                    a.push_back(M*e[i]+i);
                }
            }

            if(nlow+(int)a.size() >= n+1-k){
                long long r=0;
                sort(a.begin(),a.end());
                int index=-1;
                vector<int> used(n,0);
                int nused=0;
                for(int i=0;not(nlow+i >= n+1-k);i++){
                    r += a[i]/M;
                    index = a[i]%M;
                    used[index]=1;
                    nused++;
                }
                for(int i=0; i<n; i++) if(not used[i]){
                    others.push_back(M*e[i]+i);
                }
                sort(others.begin(),others.end());

                int i=0;
                while(nused<s){
                    r += others[i]/M;
                    i++;
                    nused++;
                }
                if(r<res) res = r;
            }
        }
    }
    if(res==BIG) res = -1;
    cout << res << endl;
    return 0;
}

