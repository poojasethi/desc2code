/*
  ------------------------- Hachiikung ---------------------------------
  ---------------------- Worrachate Bosri ------------------------------
  ------ Faculty of Computer Engineering Chulalongkorn University ------
*/
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<stack>
#include<list>
#include<set>
#include<map>
#include<string>
#include<utility>
using namespace std;
#define REP(i,FN) for(int i=0;i<FN;i++)
#define FOR(i,ST,FN) for(int i=ST;i<=FN;i++)
#define FORD(i,FN,ST) for(int i=FN;i>=ST;i--)
#define FORX(i,c) for(typeof(c.begin())i=c.begin();i!=c.end();i++)
#define pause system("pause")
#define S scanf
#define P printf
#define X first
#define Y second
#define pb push_back
#define PII pair<int,int>
#define mp make_pair
#define sz size()
#define eps 1e-8

const int MOD(1000000007);
const int INF((1<<30)-1);
const int MAXN(200005);

struct con
{
    int p,e;
    con(){}
    con(int pp,int ee){
        p = pp;
        e = ee;
    }
}a[MAXN];

bool compare1(const con &x,const con &y){
    return x.p > y.p;
}

bool compare2(const con &x,const con &y){
    return x.e < y.e;
}

int main(){

    int n,k;
    S("%d%d",&n,&k);
    REP(i,n)
        S("%d%d",&a[i].p,&a[i].e);

    sort(a,a+n,compare1);

    if(k == n+1){ P("0"); return 0; }

    long long best = -1;

    FOR(m,a[k-1].p,a[k-1].p+2)
    {
        vector<con>b,d;

        int rk = 1;

        REP(i,n)
        {
            if(a[i].p > m)
            {
                rk++;
                b.pb(a[i]);
            }
            else if(a[i].p < m-1)
            {
                b.pb(a[i]);
            }
            else
            {
                d.pb(a[i]);
            }
        }

        if(rk > k) continue;

        sort(d.begin(),d.end(),compare2);

        int t = max(0, (int)d.sz - (k - rk));

        if(t > m) continue;

        long long ans = 0;

        REP(i,t)
            ans += d[i].e;

        FOR(i,t,(int)(d.sz)-1)
            b.pb(d[i]);

        sort(b.begin(),b.end(),compare2);

        if(b.sz < m-t) continue;

        REP(i,m-t)
            ans += b[i].e;

        if(best == -1) best = ans;
        else best = min(best, ans);
    }

    cout << best;
}
