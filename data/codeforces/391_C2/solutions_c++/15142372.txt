#include<algorithm>
#include<iostream>
#include<cstring>
#include<cstdlib>
#include<vector>
#include<cstdio>
#include<cmath>
using namespace std;
const int maxn=200010;
pair<int,int> a[maxn];
int n,k;

void init(){
    scanf("%d%d",&n,&k); k=n-k+1;
    for(int i=1;i<=n;++i)
        scanf("%d%d",&a[i].first,&a[i].second);
    sort(a+1,a+n+1);
}

vector<int> w;
unsigned calc(int sce){
    int l=lower_bound(a+1,a+n+1,make_pair(sce-1,0))-a;
    int r=lower_bound(a+1,a+n+1,make_pair(sce+1,0))-a-1;
    int must=k-l+1; if(must>r-l+1 || sce>n || sce<must) return ~0u;
    
    unsigned ans=0; w.clear();
    for(int i=l;i<=r;++i) w.push_back(a[i].second);
    sort(w.begin(),w.end(),greater<int>());
    for(int i=1;i<=must;++i,w.pop_back()) ans+=w.back(),--sce;
    
    for(int i=1;i<=l-1;++i) w.push_back(a[i].second);
    for(int i=r+1;i<=n;++i) w.push_back(a[i].second);
    sort(w.begin(),w.end(),greater<int>());
    for(int i=1;i<=sce;++i,w.pop_back()) ans+=w.back();
    return ans;
}

void solve(){
    unsigned ans=~0u;
    for(int i=0;i<=n;++i)
        ans=min(ans,calc(i));
    if(ans==~0u) puts("-1"); else printf("%u\n",ans);
}

int main(){
    init();
    solve();
    return 0;
}
