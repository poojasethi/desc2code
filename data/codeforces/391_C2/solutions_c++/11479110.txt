#include<bits/stdc++.h>
 
using namespace std;
 
// Typedefs
typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
 
// Macros
#define FOR(i, a, b) for(int i = a; i < b; ++i)
#define FORR(i, a) FOR(i, 0, a)
#define FORE(i, a, b) for(int i = a; i >= b; --i)
#define all(v) v.begin(),v.end()
#define sz(A) int((A).size())
#define CLR(x, a) memset(x, a, sizeof(x))
#define pb push_back
#define mp make_pair
 
// Constantes
const double PI = 2*asin(1.0);
const int INF = 1000000000; // 9 zeros
const double EPS = 1e-10;
 
// Matematica basica
inline int cmp(double x, double y = 0, double tol = EPS) {
    return (x <= y + tol) ? (x + tol < y) ? -1 : 0 : 1; }
 
const int MAXN = 200005;

int n, k;
ii fights[MAXN];

ll vec1[MAXN], vec2[MAXN];

ll calc (int w) {
	if (w<0) return -1;

	int t1 = 0, t2 = 0;
	int rank = 1;
	FORR (i, n) {
		if (fights[i].first==w-1 || fights[i].first==w) {
			vec1[t1++] = fights[i].second;
		} else {
			vec2[t2++] = fights[i].second;
			if (fights[i].first>w) rank++;
		}
	}
	if (rank>k) return -1;

	//cout << "aqui " << w << " " << rank << endl;
	sort (vec1, vec1+t1);
	rank += t1;
	int i;
	ll effort = 0;
	for (i = 0; i < t1; i++) {
		if (rank<=k) break;
		rank--;
		effort += vec1[i];
		w--;				
	}

	//cout << w << " <- " << rank << endl; 
	for (; i < t1; i++) vec2[t2++] = vec1[i];
	sort (vec2, vec2+t2);
	FORR (i, t2) {
		if (w<=0) break;
		effort += vec2[i];
		w--;
	}

	if (w!=0) return -1;
	return effort;
}


int main() {
	ios_base::sync_with_stdio(false);
	cin.tie (NULL);
	while (cin>>n>>k) {
		FORR (i, n) {
			int a, b;
			cin>>a>>b;
			fights[i] = ii(a, b);
		}
		sort (fights, fights+n);
		reverse (fights, fights+n);

		int j = 0;
		int left = 0, right = 0;
		for (int i = MAXN; i>=0; i--) {
			while (j<n && fights[j].first>i) j++;
			if (j>=k) {
				left = i;
				break;
			}
		}
		j=0;
		for (int i = MAXN; i>=0; i--) {
			while (j<n && fights[j].first>=i-1) j++;
			if (j>=k) {
				right = i;
				break;
			}
		}
		ll res = -1;
		FOR (i, left-10, right+10) {
			ll aux = calc (i);
			//cout << i << " " << aux << endl;
			if (aux==-1) continue;
			if (aux<res || res==-1) res = aux;
		}
		cout << res << endl;
	}
}