#include<cmath>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<algorithm>
#define x first
#define y second
using namespace std;
const double eps=1e-15;
typedef pair<double,double> Point;
typedef pair<Point,Point> Line;
Line l1,l2,l3;
Point operator +(const Point &a,const Point &b){return make_pair(a.x+b.x,a.y+b.y);}
Point operator -(const Point &a,const Point &b){return make_pair(a.x-b.x,a.y-b.y);}
Point operator *(const Point &a,double b){return make_pair(a.x*b,a.y*b);}
Point operator /(const Point &a,double b){return make_pair(a.x/b,a.y/b);}
Point left_Rotate(Point x){return make_pair(-x.y,x.x);}
Point right_Rotate(Point x){return make_pair(x.y,-x.x);}
double cha(Point x,Point y){return x.x*y.y-x.y*y.x;}
double dot(Point x,Point y){return x.x*y.x+x.y*y.y;}
double dis(Point x){return sqrt(dot(x,x));}
bool jiao(Line x,Line y,bool flag)
{
    if(min(x.x.x,x.y.x)>max(y.x.x,y.y.x)||
       max(x.x.x,x.y.x)<min(y.x.x,y.y.x)||
       min(x.x.y,x.y.y)>max(y.x.y,y.y.y)||
       max(x.x.y,x.y.y)<min(y.x.y,y.y.y))
        return false;
    double a=cha(y.x-x.y,x.x-x.y),b=cha(x.x-x.y,y.y-x.y);
    if(a*b<0||abs(a+b)-eps<0&&abs(a*b)-eps<0&&!flag)return false;
    a=cha(x.x-y.y,y.x-y.y),b=cha(y.x-y.y,x.y-y.y);
    if(a*b<0||abs(a+b)-eps<0&&abs(a*b)-eps<0&&!flag)return false;
    return true;
}
Point dui(Point x,Line y)
{
    double a=y.x.y-y.y.y,b=y.y.x-y.x.x,c=y.x.x*y.y.y-y.y.x*y.x.y;
    Point d=y.y-y.x;
    double q=cha(x-y.x,d);
    if(abs(q)<eps)
        return x;
    if(q>0)
        d=left_Rotate(d);
    else
        d=right_Rotate(d);
    d=d/dis(d);
    double l=fabs(x.x*a+x.y*b+c)/sqrt(a*a+b*b);
    d=d*(l*2);
    return x+d;
}
int main()
{
    scanf("%lf%lf%lf%lf",&l1.x.x,&l1.x.y,&l1.y.x,&l1.y.y);
    scanf("%lf%lf%lf%lf",&l2.x.x,&l2.x.y,&l2.y.x,&l2.y.y);
    scanf("%lf%lf%lf%lf",&l3.x.x,&l3.x.y,&l3.y.x,&l3.y.y);
    if(!jiao(l1,l2,true)&&!jiao(l1,l3,false))
    {
        printf("YES\n");
        return 0;
    }
    l1.x=dui(l1.x,l3);
    if(!(!jiao(l1,l2,true)&&jiao(l1,l3,false)))
    {
        printf("NO\n");
        return 0;
    }
    l1.x=dui(l1.x,l3);
    l1.y=dui(l1.y,l3);
    if(!(!jiao(l1,l2,true)&&jiao(l1,l3,false)))
    {
        printf("NO\n");
        return 0;
    }
    printf("YES\n");
    return 0;
}