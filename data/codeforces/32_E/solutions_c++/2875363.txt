#include<cstdio>
#include<cmath>

struct Point
{
	double X,Y;
}A,B,P,Q,M,N;

void Get(int &T)
{
	char C;bool F=0;
	for(;C=getchar(),C<'0'||C>'9';)if(C=='-')F=1;
	for(T=C-'0';C=getchar(),C>='0'&&C<='9';T=T*10+C-'0');
	F&&(T=-T);
}

double Cp(Point &O,Point &A,Point &B)
{
	return (A.X-O.X)*(B.Y-O.Y)-(A.Y-O.Y)*(B.X-O.X);
}

void Init()
{
	scanf("%lf%lf",&A.X,&A.Y);
	scanf("%lf%lf",&B.X,&B.Y);
	scanf("%lf%lf",&P.X,&P.Y);
	scanf("%lf%lf",&Q.X,&Q.Y);
	scanf("%lf%lf",&M.X,&M.Y);
	scanf("%lf%lf",&N.X,&N.Y);
}

double Abs(double X)
{
	return X>0?X:-X;
}

bool Cross(Point&A,Point&B,Point&C,Point&D,Point&X)
{
	double Cp1=Cp(A,B,C);
	double Cp2=Cp(A,B,D);
	
	if(Abs(Cp1-Cp2)<1e-8) return 0;
	
	double K=Cp1/(Cp1-Cp2);
	
	X.X=C.X+(D.X-C.X)*K;
	X.Y=C.Y+(D.Y-C.Y)*K;
	
	return 1;
}

bool On(Point&X,Point&A,Point&B)
{
	double DX=Abs(X.X-A.X)+Abs(X.X-B.X)-Abs(A.X-B.X);
	double DY=Abs(X.Y-A.Y)+Abs(X.Y-B.Y)-Abs(A.Y-B.Y);
	
	return DX+DY<1e-8;
}

bool Check1(Point&A,Point&B,Point&P,Point &Q)
{
	Point X={0,0};
	
	bool OK=Cross(A,B,P,Q,X);
	
	if(OK)
	{
		if(On(X,P,Q)&&On(X,A,B))
		{
			return 1;
		}
		return 0;
	}
	else
	{
		if(On(A,P,Q)||On(B,P,Q)||On(P,A,B)||On(Q,A,B))
			return 1;
		return 0;
	}
}

double Dist(Point&A,Point&B)
{
	double DX=A.X-B.X;
	double DY=A.Y-B.Y;
	
	return sqrt(DX*DX+DY*DY);
}

double Dist2(Point&A,Point&B)
{
	double DX=A.X-B.X;
	double DY=A.Y-B.Y;
	
	return DX*DX+DY*DY;
}

double Dotp(Point&A,Point&B,Point&C)
{
	return (B.X-A.X)*(C.X-A.X)+(B.Y-A.Y)*(C.Y-A.Y);
}

bool Check2()
{
	Point E={0,0};
	double K=Dotp(M,N,A)/Dist2(M,N);
	
	E.X=M.X+(N.X-M.X)*K;
	E.Y=M.Y+(N.Y-M.Y)*K;
	
	E.X=E.X+E.X-A.X;
	E.Y=E.Y+E.Y-A.Y;
	
	Point F={0,0};
	
	bool OK=Cross(E,B,M,N,F);
	
	if(OK==1)
	{
		if(On(F,E,B)&&On(F,M,N))
		{
			if(Check1(A,F,P,Q)==0&&Check1(F,B,P,Q)==0)
				return 1;
			else
				return 0;
		}
		else
		{
			return 0;
		}
	}
	else
	{
		return 0;
	}
}

bool Ans;

void Work()
{
	if(Check1(A,B,P,Q)==0)
	{
		Point X;
		bool OK=Cross(A,B,M,N,X);
		
		if(OK==1&&On(X,A,B)&&On(X,M,N))
		{
			Ans=0;
			return;
		}
		
		Ans=1;
		return;
	}
	if(Check2())
	{
		Ans=1;
		return;
	}
}

void Output()
{
	puts(Ans?"YES":"NO");
}

int main()
{
	Init();
	Work();
	Output();
	return 0;
}