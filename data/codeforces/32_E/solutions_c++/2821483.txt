#include<cstdio>
#include<cstring>
struct point{
    double x,y;
    double operator *(const point &a) const{
        return x*a.y-y*a.x;
    }
    double operator /(const point &a) const{
        return x*a.x+y*a.y;
    }
} ps0,ps1,wl0,wl1,mr0,mr1,ps2,cs;
void init(point &a,point &b){
    scanf("%lf%lf%lf%lf",&a.x,&a.y,&b.x,&b.y);
}
bool yh(double a,double b){
    return (a!=0 || b!=0) && a*b<=0;
}
point operator *(double a,point b){
    b.x*=a,b.y*=a;
    return b;
}
point operator +(point a,point b){
    a.x+=b.x,a.y+=b.y;
    return a;
}
point operator -(point a,point b){
    a.x-=b.x,a.y-=b.y;
    return a;
}
bool cr(point a,point b,point c,point d){
    double s1,s2;
    s1=(c-a)*(b-a);
    s2=-((d-a)*(b-a));
    if (s1+s2==0) return false;
    cs=1/(s1+s2)*(s1*d+s2*c);
    if (yh((c-a)*(d-a),(c-b)*(d-b)) && yh((a-c)*(b-c),(a-d)*(b-d)))
        return true;
    else return false;
}
bool il(point a,point b,point c){
    return (b-a)*(c-a)==0 && (b-a)/(c-a)<0;
}
int main(){
//  freopen("32E.in","r",stdin);
//  freopen("32E.out","w",stdout);
    init(ps0,ps1);
    init(wl0,wl1);
    init(mr0,mr1);
    if (!cr(ps0,ps1,wl0,wl1) && !cr(ps0,ps1,mr0,mr1) && (!il(wl0,ps0,ps1) || !il(wl1,ps0,ps1))){
        puts("YES");
    } else{
        ps2.x=mr1.y-mr0.y;
        ps2.y=-(mr1.x-mr0.x);
        ps2=ps2+ps0;
        if (!cr(ps0,ps2,mr0,mr1)){}
        ps2=2*cs-ps0;
        if (!cr(ps1,ps2,mr0,mr1)){
            puts("NO");
            return 0;
        }
        ps2=cs;
        if (!cr(ps0,ps2,wl0,wl1) && !cr(ps2,ps1,wl0,wl1))
            puts("YES"); else puts("NO");
    }
    return 0;
}
