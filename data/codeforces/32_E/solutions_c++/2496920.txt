#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;
const double EPS=1e-8;
int sgn(double x){
	if(abs(x)<=EPS)return 0;
	return x>0?1:-1;
}
struct Point{
	double x,y;
	Point(){}
	Point(double _x,double _y):x(_x),y(_y){}
}a,b,wa,wb,ma,mb;
double cross(Point o,Point a,Point b){
	return (a.x-o.x)*(b.y-o.y)-(b.x-o.x)*(a.y-o.y);
}
void getABC(Point x,Point y,double&a,double&b,double&c){
	a=y.y-x.y;
	b=x.x-y.x;
	c=y.x*x.y-x.x*y.y;
}
Point reflect(Point p){
	double a,b,c;
	getABC(ma,mb,a,b,c);
	double d=a*a+b*b;
	return Point((b*b*p.x-a*a*p.x-2*a*b*p.y-2*a*c)/d,(a*a*p.y-b*b*p.y-2*a*b*p.x-2*b*c)/d);
}
bool inter(Point a,Point b,Point c,Point d){
	return sgn(min(a.x,b.x)-max(c.x,d.x))<=0
		&& sgn(min(a.y,b.y)-max(c.y,d.y))<=0
		&& sgn(min(c.x,d.x)-max(a.x,b.x))<=0
		&& sgn(min(c.y,d.y)-max(a.y,b.y))<=0
		&& sgn(cross(a,b,c)*cross(a,b,d))<=0
		&& sgn(cross(c,d,a)*cross(c,d,b))<=0;
}
bool noMirror(){
	return !inter(a,b,wa,wb);
}
bool hasMirror(){
	if(!inter(a,b,ma,mb) && !inter(a,b,wa,wb))return true;
	Point _b=reflect(b);
	Point _wa=reflect(wa),_wb=reflect(wb);
	//printf("_b(%f,%f)\n",_b.x,_b.y);
	return inter(a,_b,ma,mb) && !inter(a,_b,wa,wb) && !inter(a,_b,_wa,_wb);
}
int main(){
	scanf("%lf%lf",&a.x,&a.y);
	scanf("%lf%lf",&b.x,&b.y);
	scanf("%lf%lf%lf%lf",&wa.x,&wa.y,&wb.x,&wb.y);
	scanf("%lf%lf%lf%lf",&ma.x,&ma.y,&mb.x,&mb.y);
	if(!sgn(cross(a,ma,mb)) || !sgn(cross(b,ma,mb)))
		puts(noMirror()?"YES":"NO");
	else
		puts(hasMirror()?"YES":"NO");
	return 0;
}