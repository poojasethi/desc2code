#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iostream>
#include<algorithm>
#define x first
#define y second
#define cp const PR
using namespace std;
typedef pair<double,double> PR;
PR a,b,w,w2,m,m2;
void init()
{
    scanf("%lf%lf",&a.x,&a.y);
    scanf("%lf%lf",&b.x,&b.y);
    scanf("%lf%lf",&w.x,&w.y);
    scanf("%lf%lf",&w2.x,&w2.y);
    scanf("%lf%lf",&m.x,&m.y);
    scanf("%lf%lf",&m2.x,&m2.y);
}
double dis(cp A,cp B){  return sqrt((A.x-B.x)*(A.x-B.x)+(A.y-B.y)*(A.y-B.y));}
double ch(cp a,cp b,cp c)
{ return (b.x-a.x)*(c.y-a.y)-(c.x-a.x)*(b.y-a.y);}
bool intr(cp a,cp b,cp c,cp d,const bool e)
{
    if ( dis(a,c)+dis(b,c)<dis(a,b)+1e-7 && dis(a,d)+dis(b,d)<dis(a,b)+1e-7 ) return e;
    if ( dis(a,c)+dis(b,c)<dis(a,b)+1e-7 || dis(a,d)+dis(b,d)<dis(a,b)+1e-7 ) return 1;
    return ch(a,b,c)*ch(a,b,d)<0 && ch(c,d,a)*ch(c,d,b)<0;
}
PR dc(cp c,cp a,cp b)
{
    PR A=make_pair(a.x-c.x,a.y-c.y),B=make_pair(a.x-b.x,a.y-b.y);
    double k=-(A.x*B.x+A.y*B.y)/(B.x*B.x+B.y*B.y);
    A.x+=B.x*k,A.y+=B.y*k;  
    return make_pair(c.x+A.x*2,c.y+A.y*2);
}
bool YES()
{
    if ( !intr(a,b,w,w2,1) && !intr(a,b,m,m2,0) ) return 1;
    if ( ch(m,m2,a)*ch(m,m2,b)<=0 ) return 0;
    PR p=dc(a,m,m2),q=dc(b,m,m2);
    if ( !intr(b,p,w,w2,1) && !intr(a,q,w,w2,1) && intr(a,q,m,m2,1) && intr(b,p,m,m2,1) ) return 1;
    return 0;
}
int main()
{
    init();
    if ( YES() ) puts("YES");else puts("NO");
    return 0;
}