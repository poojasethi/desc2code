#include <cstdio>
#include <cmath>
#include <iostream>
#define eps 1e-7
using namespace std;

double xv , yv , xp , yp , xw1 , yw1 , xw2 , yw2 , xm1 , ym1 , xm2 , ym2 , x1 , y11 , x2 , y2;
bool ans = 0;

bool cross(double x1 , double y1 , double x2 , double y2 , double x3 , double y3 , double x4 , double y4 , bool flag)
{
    double xx1 , yy1 , xx2 , yy2 , xx3 , yy3 , t1 , t2;
    xx1 = x3 - x1 , yy1 = y3 - y1 , xx2 = x4 - x1  , yy2 = y4 - y1 , xx3 = x2 - x1 , yy3 = y2 - y1;
    t1 = (xx1 * yy3 - xx3 * yy1) * (xx2 * yy3 - xx3 * yy2);
    if (t1 > eps) return 0;
    xx1 = x1 - x3 , yy1 = y1 - y3 , xx2 = x2 - x3 , yy2 = y2 - y3 , xx3 = x4 - x3 , yy3 = y4 - y3;
    t2 = (xx1 * yy3 - xx3 * yy1) * (xx2 * yy3 - xx3 * yy2);
    if (t2 > eps) return 0;
    if (t1 > -eps && t2 > -eps) {
        if ((x3 + y3 - x1 - y1) * (x3 + y3 - x2 - y2) < eps || (x4 + y4 - x1 - y1) * (x4 + y4 - x2 - y2) < eps) return flag; else return 0;
    }
    return 1;
}

void point(double x1 , double y1 , double x2 , double y2 , double x3 , double y3 , double x4 , double y4 , double &x , double &y)
{
    double p = (x2 - x1) * (y3 - y4) - (y1 - y2) * (x4 - x3);
    y = ((y1 - y2) * (x3 * y4 - x4 * y3) - (y3 - y4) * (x1 * y2 - x2 * y1)) / p;
    x = -((x2 - x1) * (x3 * y4 - x4 * y3) - (x4 - x3) * (x1 * y2 - x2 * y1)) / p;
}

void change(double x0 , double y0 , double x1 , double y1 , double x2 , double y2 , double &x , double &y)
{
    double p = ((x0 - x1) * (x2 - x1) + (y0 - y1) * (y2 - y1)) / ((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
    x = x1 + p * (x2 - x1) , y = y1 + p * (y2 - y1);
    x += (x - x0) , y += (y - y0);
}

int main()
{
    cin >> xv >> yv >> xp >> yp >> xw1 >> yw1 >> xw2 >> yw2 >> xm1 >> ym1 >> xm2 >> ym2;
    if (!cross(xv , yv , xp , yp , xw1 , yw1 , xw2 , yw2 , 1) && !cross(xv , yv , xp , yp , xm1 , ym1 , xm2 , ym2 , 0)) ans = 1;
    change(xp , yp , xm1 , ym1 , xm2 , ym2 , x1 , y11);
    if (cross(xv , yv , x1 , y11 , xm1 , ym1 , xm2 , ym2 , 0)) {
        point(xv , yv , x1 , y11 , xm1 , ym1 , xm2 , ym2 , x2 , y2);
        if (!cross(xv , yv , x2 , y2 , xw1 , yw1 , xw2 , yw2 , 1) && !cross(x2 , y2 , xp , yp , xw1 , yw1 , xw2 , yw2 , 1)) ans = 1;
    }
    if (ans) printf("YES\n"); else printf("NO\n");
}
