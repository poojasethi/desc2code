#include <algorithm>
#include <cmath>
#include <iostream>
#include <cstdio>
using namespace std;

typedef long double dbl;
typedef pair <dbl, dbl> pnt;
#define x first
#define y second
#define eps 1e-10

pnt wa, wb, ma, mb, a, b;

void read (pnt &p) {
  cin >> p.x;
  cin >> p.y;
}

bool operator < (pnt a, pnt b) { 
  return a.x < b.x - eps || (a.x < b.x + eps && a.y < b.y - eps);
}
bool operator <= (pnt a, pnt b) { 
  return a.x < b.x - eps || (a.x < b.x + eps && a.y < b.y + eps);
}

pnt operator - (pnt a, pnt b) {
  return pnt (a.x - b.x, a.y - b.y);
}

dbl operator * (pnt a, pnt b) {
  return a.x * b.y - a.y * b.x;
}

int sg (dbl x) {
  return x < -eps ? -1 : x > eps ? 1 : 0;
}

int inter (pnt a, pnt b, pnt c, pnt d) {
  if (fabs((b - a) * (c - a)) < eps && fabs ((b - a) * (d - a)) < eps) {
    if (!(a < b)) {
      swap (a, b);
    }
    if (!(c < d)) {
      swap (c, d);
    }
    pnt l = a;
    if (l < c) {
      l = c;
    }
    pnt r = d;
    if (b < r) {
      r = b;
    }
    return l <= r;
  }
  return sg ((b - a) * (c - a)) * sg ((b - a) * (d - a)) <= 0 && 
         sg ((c - d) * (a - d)) * sg ((c - d) * (b - d)) <= 0;
}

int main( void )
{
  read (a);
  read (b);
  read (wa);
  read (wb);
  read (ma);
  read (mb);

  if (!(wa < wb)) {
    swap (wa, wb);
  }
  if (!(ma < mb)) {
    swap (ma, mb);
  }

  dbl A = ma.y - mb.y, B = mb.x - ma.x, C = -(A * ma.x + B * ma.y);

  int sma = sg (A * a.x + B * a.y + C), smb = sg (A * b.x + B * b.y + C);

  if (sma * smb >= 0 && !inter (a, b, wa, wb)) {
    printf ("YES\n");
    return 0;
  }

  if (!inter (a, b, wa, wb) && !inter (a, b, ma, mb)) {
    printf ("YES\n");
    return 0;
  }

  if (sma * smb == 1) {
    dbl d = (A * a.x + B * a.y + C) / (A * A + B * B);
    pnt p(a.x - 2 * d * A, a.y - 2 * d * B);
    dbl A1 = p.y - b.y, B1 = b.x - p.x, C1 = -(A1 * p.x + B1 * p.y);

    dbl x = B * C1 - C * B1,
        y = C * A1 - A * C1,
        z = A * B1 - B * A1;
    if (fabs (z) > eps) {
      x /= z;
      y /= z;
      pnt p(x, y);
      if (ma <= p && p <= mb) {
        if (!inter (p, a, wa, wb) && !inter (p, b, wa, wb)) {
          printf ("YES\n");
          return 0;
        }
      }
    }
  }

  printf ("NO\n");

  return 0;
}