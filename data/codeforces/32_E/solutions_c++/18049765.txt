#include<bits/stdc++.h>
#define ep 1e-8
using namespace std;
struct pnt{
    double x,y;
    pnt(double x=0,double y=0):x(x),y(y){}
    pnt operator-(pnt a){return pnt(x-a.x,y-a.y);}
    pnt operator+(pnt a){return pnt(x+a.x,y+a.y);}
    pnt operator*(double a){return pnt(x*a,y*a);}
    pnt operator/(double a){return pnt(x/a,y/a);}
    double operator^(pnt a){return x*a.y-y*a.x;}
    double operator&(pnt a){return x*a.x+y*a.y;}
    void  input(){x=y=0, scanf("%lf %lf",&x,&y);}
    void print(){printf("%lf %lf\n",x,y);}
}AA, A, B, BB, C, D, E , F;
pnt sym(pnt a,pnt b,pnt c){
    double tp=(c-a&b-a)/(b-a&b-a);
    pnt p=a*(1-tp)+b*tp;
    return p*2-c;
}
bool inside(pnt a, pnt b, pnt c) {
    double A=a-b&c-b;
    double B=c-b&c-b;
    double C=a-b^c-b;
    if(fabs(C)>ep) return 0;
    if(A>-ep && A<B+ep) return 1;
    return 0;
}
int intersect(pnt a, pnt b, pnt c, pnt d) {
    double s1=b-a^d-c, s2=b-c^a-c, s;
    double t1=s1, t2=c-a^d-a;
    if(fabs(s1)<ep) {
    double dd=c-b^a-b;
    if(fabs(dd)>ep) return 2;
    if(inside(a, c, d) || inside(b, c, d) ||
       inside(c, a, b) || inside(d, a, b)) return 1;
        return 2;
    }
    if(s1<0) s2*=-1, t2*=-1, s1*=-1, t1*=-1;
    if(-ep<s2 && s2<s1+ep && -ep<t2 && t2<t1+ep) {
          s=s2/s1;
        return 1;
    }
    return 0;
}

int main(){
   // freopen("E.in","r",stdin);
    A.input();
    B.input();
    C.input(), D.input();
    E.input(), F.input();
    if(intersect(A, B, C, D) % 2 == 0 && intersect(A, B, E, F) % 2 == 0) {puts("YES");return 0;}
    BB = sym(E, F, B);AA = sym(E, F, A);
    if(intersect(A, BB, E, F) != 1){puts("NO"); return 0;}
    if(intersect(A, BB, C, D) == 1) {puts("NO"); return 0;}
    if(intersect(AA, B, E, F) != 1){puts("NO"); return 0;}
    if(intersect(AA, B, C, D) == 1) {puts("NO"); return 0;}
    puts("YES");
    return 0;
}
