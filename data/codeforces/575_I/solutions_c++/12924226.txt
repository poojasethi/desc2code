#include<cstdio>
#include<cmath>
#include<cstring>

const int MAXN=5E3+10;
const int MAXQ=1E5+10;

int n,q,type;
int dir[MAXQ],x[MAXQ],y[MAXQ],len[MAXQ],ans[MAXQ];
int m[MAXN][MAXN],p[MAXN][2*MAXN];

int get2(int nx,int ny)
{
	int xx,yy,ans;
	ans=0;
	for (xx=nx;xx>0;xx-=xx&(-xx))
		for (yy=ny;yy>0;yy-=yy&(-yy))
			ans+=p[xx][yy];
	return ans;
}

int get1(int nx,int ny)
{
	int xx,yy,ans;
	ans=0;
	for (xx=nx;xx>0;xx-=xx&(-xx))
		for (yy=ny;yy>0;yy-=yy&(-yy))
			ans+=m[xx][yy];
	return ans;
}

void go2(int nx,int ny,int t)
{
	int xx,yy;
	for (xx=nx;xx<=n;xx+=xx&(-xx))
		for (yy=ny;yy<=2*n;yy+=yy&(-yy))
			p[xx][yy]+=t;
}

void go1(int nx,int ny,int t)
{
	int xx,yy;
	for (xx=nx;xx<=n;xx+=xx&(-xx))
		for (yy=ny;yy<=n;yy+=yy&(-yy))
			m[xx][yy]+=t;
}

int main()
{
	memset(dir,0,sizeof(dir));
	memset(ans,0,sizeof(ans));
	scanf("%d%d",&n,&q);
	for (int i=0;i<q;i++)
	{
		scanf("%d",&type);
		if (type&1)	scanf("%d%d%d%d",&dir[i],&x[i],&y[i],&len[i]);
		else scanf("%d%d",&x[i],&y[i]);
	}
	for (int d=1;d<=4;d++)
	{
		memset(m,0,sizeof(m));
		memset(p,0,sizeof(p));
		for (int i=0;i<q;i++)
		{
			if (dir[i]==0)
			{
				ans[i]+=get1(x[i],y[i]);
				if (d==1) ans[i]+=get2(x[i],x[i]+y[i]);
				if (d==2) ans[i]+=get2(x[i],y[i]-x[i]+n);
				if (d==3) ans[i]+=get2(x[i],y[i]-x[i]+n);
				if (d==4) ans[i]+=get2(x[i],x[i]+y[i]);
			}
			if (dir[i]==d)
			{
				if (d==1)
				{
					go1(x[i],y[i],1);
					go1(x[i]+len[i]+1,y[i],-1);
					go2(x[i],x[i]+y[i]+len[i]+1,-1);
					go2(x[i]+len[i]+1,x[i]+y[i]+len[i]+1,1);
				}
				if (d==2)
				{
					go1(x[i],y[i]+1,-1);
					go1(x[i]+len[i]+1,y[i]+1,1);
					go2(x[i],y[i]-x[i]-len[i]+n,1);
					go2(x[i]+len[i]+1,y[i]-x[i]-len[i]+n,-1);
				}
				if (d==3)
				{
					go1(x[i]+1,y[i],-1);
					go1(x[i]-len[i],y[i],1);
					go2(x[i]+1,y[i]-x[i]+len[i]+n+1,1);
					go2(x[i]-len[i],y[i]-x[i]+len[i]+n+1,-1);
				}
				if (d==4)
				{
					go1(x[i]+1,y[i]+1,1);
					go1(x[i]-len[i],y[i]+1,-1);
					go2(x[i]+1,x[i]+y[i]-len[i],-1);
					go2(x[i]-len[i],x[i]+y[i]-len[i],1);
				}
			}
		}
	}
	for (int i=0;i<q;i++)
		if (!dir[i]) printf("%d\n",ans[i]);
}