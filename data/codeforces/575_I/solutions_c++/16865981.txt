#include <bits/stdc++.h>
using namespace std;
#define M 5010

int ans[100010];
int n, Q;

struct dat {
	int type, dir, x, y, len;
	dat(int type = 0, int dir = 0, int x = 0, int y = 0, int len = 0) : type(type), dir(dir), x(x), y(y), len(len) {}
} q[100010];

int get(int t, int &x, int &y) {
	if (t == 2) y = n - y + 1;
	else if (t == 3) x = n - x + 1;
	else if (t == 4) {x = n - x + 1; y = n - y + 1;}
}

int f[M][M], g[M][M << 1], sz;

template <typename T>
void update(T a, int x, int y, int v) {
	for ( ; x; x -= (x & -x)) {
		int yy = y;
		for ( ; yy; yy -= (yy & -yy)) a[x][yy] += v;
	}
}

template <typename T>
int calc(T a, int x, int y, int n) {
	int res = 0;
	if (!x || !y) return 0;
	for ( ; x <= sz; x += (x & -x)) {
		int yy = y;
		for ( ; yy <= n; yy += (yy & -yy)) res += a[x][yy];
	}
	return res;
}

int main() {
	scanf("%d %d", &n, &Q);
	sz = n;
	int dir, x, y, t, len, xx, yy;
	for (int i = 0; i < Q; i++) {
		scanf("%d", &t);
		if (t == 1) {
			scanf("%d %d %d %d", &dir, &x, &y, &len);
			q[i] = dat(t, dir, x, y, len);
		}
		else {
			scanf("%d %d", &x, &y);
			q[i] = dat(t, 0, x, y);
		}
	}
	for (int t = 1; t <= 4; t++) {
		if (t > 1) {
			memset(f, 0, sizeof(f));
			memset(g, 0, sizeof(g));
		}
		for (int i = 0; i < Q; i++) {
			if (q[i].type == 1) {
				if (t != q[i].dir) continue;
				x = q[i].x, y = q[i].y, len = q[i].len;
				get(t, x, y);
				update(f, x + len, y - 1, -1);
				update(f, x - 1, y - 1, 1);
				update(g, x + len, x + y + len, 1);
				update(g, x - 1, x + y + len, -1);
			}
			else {
				x = q[i].x, y = q[i].y;
				get(t, x, y);
				ans[i] += (calc(f, x, y, n) + calc(g, x, x + y, 2 * n));
			}
		}
	}
	for (int i = 0; i < Q; i++) {
		if (q[i].type == 2) printf("%d\n",ans[i]);
	}
}
