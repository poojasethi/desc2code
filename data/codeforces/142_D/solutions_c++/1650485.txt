#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <set>
#include <map>
#include <queue>
#include <cmath>
#include <algorithm>
#include <ctime>
#include <sstream>
#include <fstream>
#include <cstring>
#include <string>

using namespace std;

#define MP make_pair
#define PB push_back
#define LB lower_bound
#define UB upper_bound

const double eps = 1e-8;
const double pi = acos(-1.0);

int S[100], n, m, k;
char ma[1100][1100];
void add(int a)
{
	int tot = 0;
	while (a) {
		S[tot] = (S[tot] + a % 2) % (k + 1);
		tot++;
		a /= 2;
	}
}
bool pos()
{
	for (int i = 0; i < 50; i++) if (S[i] != 0) return 1;
	return 0;
}
int main()
{
	scanf("%d%d%d", &n, &m, &k);
	if (m == 1) {
		puts("Second");
		return 0;
	}
	int neverG = 0, neverR = 0;
	for (int i = 0; i < n; i++) {
		int R = -1, G = -1, same = 0;
		for (int j = 0; j < m; j++) {
			scanf(" %c", &ma[i][j]);
			if (ma[i][j] == 'R') {
				if (R != -1) same = 1;
				else R = j;
			} else if (ma[i][j] == 'G') {
				if (G != -1) same = 1;
				else G = j;
			}
		}
		if (G != -1 && R == -1 && (!same || m > 2)) neverG = 1; else
		if (R != -1 && G == -1 && (!same || m > 2)) neverR = 1; else {
			if (R != -1 && G != -1)
				add(abs(R - G) - 1);
		}
	}
	if (neverG && neverR) {
		puts("Draw");
		return 0;
	}
	if (neverG) {
		puts("First");
		return 0;
	}
	if (neverR) {
		puts("Second");
		return 0;
	}
	if (pos()) puts("First");
	else puts("Second");
}

		  				 			   	 	  	  	 	