#include <iostream>
#include <string>
#include <vector>

using namespace std;

const int kBits = 7;

bool check(const vector<int> &piles, const int k) {
  for (int i = 0; i < kBits; ++i) {
    int sum = 0;
    for (int j = 0; j < piles.size(); ++j)
      if (piles[j] & 1 << i)
        ++sum;
    if (sum % (k + 1))
      return true;
  }
  return false;
}

int main() {
  int n, m, k;
  cin >> n >> m >> k;
  vector<int> piles;
  bool freeDonkey = false, freeShrek = false;
  for (int i = 0; i < n; ++i) {
    string row;
    cin >> row;
    vector<pair<char, int> > soldiers;
    for (int i = 0; i < row.size(); ++i)
      if (row[i] != '-')
        soldiers.push_back(make_pair(row[i], i));
    if (soldiers.size() == 1 && m > 1)
      soldiers[0].first == 'G' ? freeShrek = true : freeDonkey = true;
    else if (soldiers.size() == 2 && soldiers[0].first == soldiers[1].first
        && m > 2)
      soldiers[0].first == 'G' ? freeShrek = true : freeDonkey = true;
    else if (soldiers.size() == 2 && soldiers[0].first != soldiers[1].first)
      piles.push_back(soldiers[1].second - soldiers[0].second - 1);
  }
  string output;
  if (freeDonkey && freeShrek) output = "Draw";
  else if (freeShrek) output = "First";
  else if (freeDonkey) output = "Second";
  else output = check(piles, k) ? "First" : "Second";
  cout << output << endl;
  return 0;
}
