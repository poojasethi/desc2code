#include <vector>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <string>
#include <bitset>
#include <complex>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <cctype>
using namespace std;

const int maxn = 128;

char ma[maxn][maxn];
int a[maxn];
int N, M, K;

int main() {
    cin >> N >> M >> K;
    for (int i = 0; i < N; ++i) {
        cin >> ma[i];
    }
    int cntG = 0, cntR = 0;
    for (int i = 0; i < N; ++i) {
        int g = count(ma[i], ma[i] + M, 'G');
        int r = count(ma[i], ma[i] + M, 'R');
        if (g > 0 && r > 0) {
            int d = find(ma[i], ma[i] + M, 'G') - find(ma[i], ma[i] + M, 'R');
            a[i] = abs(d) - 1;
        } else if (g > 0) {
            cntG += g < M;
        } else if (r > 0) {
            cntR += r < M;
        }
    }
    if (cntG > 0 && cntR > 0) {
        printf("Draw\n");
    } else if (cntG > 0) {
        printf("First\n");
    } else if (cntR > 0) {
        printf("Second\n");
    } else {
        int ans = 0;
        for (int i = 0; i < 31; ++i) {
            int s = 0;
            for (int j = 0; j < N; ++j) {
                s += (a[j] >> i) & 1;
            }
            if (s % (K + 1) != 0) {
                ans = 1;
                break;
            }
        }
        printf("%s\n", ans ? "First" : "Second");
    }
}


  	 	       	 		 	  	    	