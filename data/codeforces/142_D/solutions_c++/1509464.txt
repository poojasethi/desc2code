#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

char buff[123];
bool wing, winr;
int n, m, k, diff[123], s[10];

bool been[123][123];
bool cache[123][123];

bool trial() {
    for (int i=0; i<123; i++) {
        for (int j=0; j<10; j++) {
            s[j] += diff[i]%2;
            diff[i]/=2;
        }
    }
    bool ret = false;
    for (int j=0; j<10; j++) {
        if (s[j]%(k+1)) {
            ret = true;
        }
    }
    return ret;
}

int main() {
    scanf("%d%d%d", &n, &m, &k);

    for (int i=0; i<n; i++) {
        scanf("%s", buff);
        vector<int> green, red;
        for (int j=0; j<m; j++) {
            if (buff[j] == 'R') {
                red.push_back(j);
            }
            if (buff[j] == 'G') {
                green.push_back(j);
            }
        }
        if (green.empty() || red.empty()) {
            if (green.size() && green.size() < m) {
                wing = true;
            }
            if (red.size() && red.size() < m) {
                winr = true;
            }
        }
        else {
            diff[i] = abs(green[0]-red[0])-1;
        }
    }
    int win;
    if (winr || wing) {
        if (winr && wing) {
            win = -1;
        }
        else if (wing) {
            win = 1;
        }
    }
    else {
        win = trial();
    }

    if (win == -1) {
        printf("Draw\n");
    }
    else {
        printf("%s\n", (win)?"First":"Second");
    }
    return 0;
}