#include <iostream>
#include <iomanip>
#include <cstdio>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
using namespace std;

int absv(int x) { return (x > 0 ? x : -x); }

bool win(vector<int>& gaps, int k) {
  for (int i = 0; i < 7; i++) {
    int sum = 0;
    for (int j = 0; j < gaps.size(); j++)
      sum += ((gaps[j] >> i) & 1);
    if (sum % (k+1) != 0) return true;
  }
  return false;
}

int main() {
  int n, m, k; cin >> n >> m >> k;
  int aonly = 0, bonly = 0;
  vector<int> gaps;
  for (int i = 0; i < n; i++) {
    string s; cin >> s;
    int a = -1, b = -1, sp = 0;
    for (int j = 0; j < m; j++) {
      if (s[j] == 'G') a = j;
      else if (s[j] == 'R') b = j;
      else sp++;
    }
    if (sp == 0) continue;
    if (a >= 0 && b == -1) aonly++;
    if (a == -1 && b >= 0) bonly++;
    if (a >= 0 && b >= 0 && absv(a-b) > 1)
      gaps.push_back(absv(a-b)-1);
  }

  if (aonly > 0 && bonly == 0) cout << "First" << endl;
  else if (aonly == 0 && bonly > 0) cout << "Second" << endl;
  else if (aonly > 0 && bonly > 0) cout << "Draw" << endl;
  else {
    if (win(gaps, k)) cout << "First" << endl;
    else cout << "Second" << endl;
  }
  return 0;
}
