#include<cstdio>
#include<cstdlib>
#include<bitset>
#include<algorithm>
using namespace std;
const int N = 1E5+10;
const int M = 1E6+10;
int n,m,bh[2][N],bit[50];
int on[2],data[N],fuck[N];
int scan(){int i=0;scanf("%d",&i);return i;}
typedef pair<int,int>Data;
typedef bitset<31> Matrix[N];
Matrix mata,matb;
Data out[2][M];
void Swap(int i,int j,int bh[],int &on,Data out[]){
	if(i==j)return;
	//swap(bh[i],bh[j]);
	on++;out[on] = Data(i,j);
	on++;out[on] = Data(j,i);
	on++;out[on] = Data(i,j);
}
int gauss(int n,Matrix a,int bh[],int &on,Data out[]){
	int i,j,top;
	for(i=1,top=30;i<=n&&top>=0;top--,i++){
		int r=i;
		for(j=i;j<=n;j++)
		if(a[j][top]){r=j;break;}
		if(!a[r][top]){i--;continue;}
		swap(a[i],a[r]);
		Swap(i,r,bh,on,out);
		for(j=1;j<=n;j++)
		if(i!=j && a[j][top]){
			a[j] ^= a[i];
			on++;out[on] = Data(j,i);
		}
		bit[i] = top;
	}return i-1;
}
void print(Matrix a){
	int i,j;
	for(i=1;i<=n;i++){
		for(j=10;j>=0;j--)printf("%d ",(int)a[i][j]);
		printf("\n");
	}
}
int main(){
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	int i,j,a,b;
	n = scan();
	for(i=1;i<=n;i++){
		mata[i] = scan();
		bh[0][i]=bh[1][i]=i;
		fuck[i] = i;
	}
	for(i=1;i<=n;i++)matb[i]=data[i]=scan();
	//printf("%d ",(int)mat[1][2]);
	//print(1);
	//printf("\n");
	int rank[2];
	rank[1] = gauss(n,matb,bh[1],on[1],out[1]);
	//pay attention the order
	rank[0] = gauss(n,mata,bh[0],on[0],out[0]);
	/*
	print(mata);
	printf("\n");
	print(matb);
	printf("\n");*/
	//print(rank);
	bool ok = 1;
	if(rank[1] > rank[0])ok=0;
	for(i=1;i<=rank[0] && ok;i++){
		for(j=i;j<=rank[0] && ok;j++)
		if(mata[i][bit[j]]!=matb[i][bit[j]]){
			on[0]++;out[0][on[0]] = Data(bh[0][i],bh[0][j]);
			mata[i] ^= mata[j];
		}
		if(mata[i]!=matb[i])ok=0;
	}
	/*
	print(mata);
	printf("\n");
	print(matb);*/
	//swap
	/*
	for(i=1;i<=rank[0] && ok;i++)
	if(fuck[bh[0][i]]!=bh[1][i]){
		if(mata[i]!=matb[i])ok=0;
		a = bh[0][i];b = bh[1][i];
		a = fuck[a];
		swap(fuck[bh[0][i]],fuck[bh[1][i]]);
		on[0]++;out[0][on[0]] = Data(a,b);
		on[0]++;out[0][on[0]] = Data(b,a);
		on[0]++;out[0][on[0]] = Data(a,b);
	}*/
	if(ok){
		printf("%d\n",on[0]+on[1]);
		for(i=1;i<=on[0];i++)printf("%d %d\n",out[0][i].first,out[0][i].second);
		for(i=on[1];i;i--)printf("%d %d\n",out[1][i].first,out[1][i].second);	
	}else printf("-1\n");
	return 0;
}