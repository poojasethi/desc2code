#include<iostream>
#include<cstdio>
#include<cstring>
#include<stack>
#include<string>
#include<vector>
using namespace std;
#define M 10010
#define MP make_pair
#define PB push_back
int a[M], b[M];
vector< pair< int, int > > ans1, ans2;
int pos[40];
void func( int *a, int n, vector< pair< int, int > >& ans )
{
	ans.clear();
	for( int r = 0, c = 30; r < n && c >= 0; ++r, --c ){
		int k = r;
		while( k < n && !( a[k] >> c & 1 ) ) ++k;
		if( k >= n ){
			--r;
			continue;
		}
		if( k - r ){
			ans.PB( MP( r, k ) ), ans.PB( MP( k, r ) ), ans.PB( MP( r, k ) );
			swap( a[r], a[k] );
		}
		for( int i = 0; i < n; ++i ) if( r - i && ( a[i] >> c & 1 ) ){
			a[i] ^= a[r];
			ans.push_back( MP( i, r ) );
		}
	}
	//for( int i = 0; i < n; ++i ) printf( "%d\n", a[i] );
}
int solve( int n )
{
	memset( pos, -1, sizeof(pos) );
	for( int i = 0; i <= 30 && i < n ; ++i ){
		for( int j = 30; j >= 0; --j ) if( a[i] >> j & 1 ){
			pos[j] = i;
			break;
		}
	}
	for( int i = 0; i <= 30 && i < n; ++i ){
		int one = 0;
		for( int j = 30; j >= 0; --j )if( b[i] >> j & 1 ){
			int x = pos[j];
			if( x == -1 ) return 0;
			if( x != i ){
				ans1.PB( MP( i, x ) ), ans1.push_back( MP( x, i ) ), ans1.push_back( MP( i, x ) );
			}
			int tmp = a[x];
			for( int k = j - 1; k >= 0; --k ) if( b[i] >> k & 1 ){
				if( pos[k] >= 0 ){
					tmp ^= a[pos[k]];
					ans1.push_back( MP( i, pos[k] ) );
				}
			}
			if( tmp != b[i] ) return 0;
			one = 1;
			break;
		}
		if( !one ) ans1.push_back( MP( i, i ) );
	}
	return 1;
}

int main()
{
	int n;
	cin>>n;
	for( int i = 0; i < n; ++i ) scanf( "%d", a + i );
	for( int i = 0; i < n; ++i ) scanf( "%d", b + i );
	func( a, n, ans1 );
	func( b, n, ans2 );
	if( !solve( n ) ){
		puts( "-1" );
		return 0;
	}

	printf( "%d\n", ans1.size() + ans2.size() );
	for( int i = 0; i < ans1.size(); ++i ) printf( "%d %d\n", ans1[i].first + 1, ans1[i].second + 1 );
	for( int i = ans2.size() - 1; i >= 0; --i) printf( "%d %d\n", ans2[i].first + 1, ans2[i].second + 1 );
}

