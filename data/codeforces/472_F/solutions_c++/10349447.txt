#include <cstdio>
#include <vector>
using namespace std;

#define n	1000005
#define MK	make_pair
#define PA	pair<int,int>

int		N,A[n],B[n];
vector<PA>	Qa,Qb;

void	Add(int *A,int i,int j,vector<PA> &Q){
		A[i]^=A[j];	Q.push_back(MK(i,j));
}
void	Work(int *A,vector<PA> &Q){
		for	(int i=30,j=1,k;i+1;i--){
			for	(k=j;k<=N&&!(A[k]&(1<<i));k++);
			if	(k>N)	continue;
			if	(k^j)	Add(A,k,j,Q),Add(A,j,k,Q),Add(A,k,j,Q);
			for	(k=1;k<=N;k++)
				if	((A[k]&(1<<i))&&(k!=j))	Add(A,k,j,Q);	j++;
		}
}

int		main(){
		scanf("%d",&N);
		for	(int i=1;i<=N;i++)	scanf("%d",&A[i]);
		for	(int i=1;i<=N;i++)	scanf("%d",&B[i]);
		Work(A,Qa);	Work(B,Qb); int flag=0;
		for	(int i=1,k;i<=N&&A[i];i++){
			for	(k=30;k+1&&!((1<<k)&A[i]);k--);
			for	(int j=1;j<=30&&j<=N;j++)
				if	((A[j]^B[j])&(1<<k))	Add(A,j,i,Qa);
		}
	
		for	(int i=1;i<=N;i++)
			if	(A[i]!=B[i])	flag=1;
		if	(flag)	puts("-1");
		else{
			printf("%d\n",Qa.size()+Qb.size());
			for	(int i=0,s=Qa.size();i<s;i++)
				printf("%d %d\n",Qa[i].first,Qa[i].second);
			for	(int i=Qb.size()-1;i+1;i--)
				printf("%d %d\n",Qb[i].first,Qb[i].second);
		}
}