#include<cstdio>
#include<algorithm>
#include<cstring>
#include<vector>
using namespace std;
typedef pair<int,int>pi;
const int Maxn=10002;
int a[Maxn],b[Maxn];
int loc[32];
int n;
vector<pi> op[2];
/*
19
299680915 393032551 493663697 236674617 241039110 148124291
285038573 118601390 178201606 158160059 424891269 133264977
49764237 367021593 354153886 218980937 329836106 111979647 479144750

239468561 496077836 332893213 169604566 394951130 432830923
394951130 394951130 239468561 394951130 0 0 394951130
332893213 332893213 169604566 0 0 73266631
*/
void getbase(int *x,int t)
{
   for(int i=0,row=0;i<n&&row<32;i++,row++)
   {
      int cs=-1;
      for(int j=i;j<n;j++)
         if(x[j]>>row&1)
         {
             cs=j;break;
         }
      if(cs<0){i--;continue;}
      if(cs!=i)
      {
          op[t].push_back(pi(i,cs));
          op[t].push_back(pi(cs,i));
          op[t].push_back(pi(i,cs));
          swap(x[i],x[cs]);
      }
      if(!t)loc[row]=i;
      for(int j=0;j<n;j++)
        if(j!=i&&(x[j]>>row&1))
        {
           op[t].push_back(pi(j,i));
           x[j]^=x[i];
        }
   }
}
void pt(int x)
{
  for(int i=0;i<32;i++)
     printf("%d",x>>i&1);puts("");
}
bool solve()
{
   memset(loc,-1,sizeof(loc));
   getbase(a,0);
   getbase(b,1);
  // printf("%d\n",loc[20]);
  /*  for(int i=0;i<32;i++)
       if(b[i])pt(b[i]);
    puts("");*/
   for(int i=0,row=0;i<n;i++)
   {
      int maxst=min(n,32);
      if(!b[i]){op[0].push_back(pi(i,i));continue;}
      while(!(b[i]>>row&1))row++;
      int cs=-1;
      for(int j=i;j<maxst;j++)
         if(!(a[j]>>row)&&((a[j]>>row)>1))
            op[0].push_back(pi(j,j)),a[j]=0;
         else if(a[j]>>row&1)
              {
                 cs=j;
                 break;
              }
      if(cs<0)return false;
      if(cs!=i)
      {
          op[0].push_back(pi(i,cs));
          op[0].push_back(pi(cs,i));
          op[0].push_back(pi(i,cs));
          swap(a[i],a[cs]);
      }
      for(int t=row+1;t<32;t++)
      {
         if((b[i]>>t&1)!=(a[i]>>t&1))
         {
            if(loc[t]<0)return false;
            a[i]^=a[loc[t]];op[0].push_back(pi(i,loc[t]));
         }
      }
       if(a[i]!=b[i]){return false;}
   }
   return true;
}
int main()
{
   scanf("%d",&n);
   for(int i=0;i<n;i++)scanf("%d",a+i);
   for(int i=0;i<n;i++)scanf("%d",b+i);
   if(!solve())puts("-1");
   else
   {
      printf("%d\n",(int)op[0].size()+(int)op[1].size());
      for(int i=0;i<op[0].size();i++)
         printf("%d %d\n",op[0][i].first+1,op[0][i].second+1);
      for(int i=op[1].size()-1;i>=0;i--)
         printf("%d %d\n",op[1][i].first+1,op[1][i].second+1);
   }
}
