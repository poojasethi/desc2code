#include <iostream>
#include <cstdio>
using namespace std;
int n;
int highbit(int x)
{
    if(x)
        return highbit(x >> 1) + 1;
    return -1;
}
struct class_answer
{
    int x[10005];
    int t1[1000005];
    int t2[1000005];
    int m;
    void add(int X, int Y)
    {
        t1[m] = X;
        t2[m] = Y;
        m++;
    }
    void print()
    {
        for(int i = 0; i < m; i++)
            printf("%d %d\n", t1[i] + 1, t2[i] + 1);
    }
    void down_print()
    {
        for(int i = m; i > 0; i--)
            printf("%d %d\n", t1[i - 1] + 1, t2[i - 1] + 1);
    }
    void onwxor(int i, int j)
    {
        x[i] ^= x[j];
        add(i, j);
    }
    void onwswap(int i, int j)
    {
        if(i != j)
        onwxor(i, j);
        onwxor(j, i);
        onwxor(i, j);
    }
    void doit()
    {
        //cout << "for1" << endl;
        for(int i = 0; i < min(31, n); i++)
        {
            for(int j = i + 1; j < n; j++)
            {
                if(x[i] < x[j])
                    {
                        onwswap(i, j);
                    }
                if((x[i] ^ x[j]) < x[j])
                    {
                        onwxor(j, i);
                    }
            }
        }

        //cout << "for2" << endl;
        for(int i = min(30, n - 1); i >= 0; i--)
        {
            for(int j = 0; j < i; j++)
                if((x[i] ^ x[j]) < x[j])
                    {
                        onwxor(j, i);
                    }
        }
    }
}answer, answer2;
//=============
bool check()
{
    for(int i = 0; i < min(31, n); i++)
    {
        int t = 0;
        if(highbit(answer.x[i]) > highbit(answer2.x[i]))
            answer.onwxor(i, i);
        for(int j = i + 1; j < min(31, n); j++)
        {
            if((answer.x[i] ^ answer.x[j]) <= answer2.x[i])
            {
                answer.onwxor(i, j);
            }
        }
        if(answer.x[i] != answer2.x[i])
            return false;
    }
    return true;
}
//=============
int main()
{
    scanf("%d", &n);
    for(int i = 0; i < n; i++)
        scanf("%d", &answer.x[i]);
    for(int i = 0; i < n; i++)
        scanf("%d", &answer2.x[i]);
    answer.doit();
    answer2.doit();
    if(check())
    {
        cout << answer.m + answer2.m << endl;
        answer.print();
        answer2.down_print();
    }
    else
    {
        cout << "-1" << endl;
    }
    return 0;
}
