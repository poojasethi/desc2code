#include <iostream>
#include <cstring>
#include <cstdio>
using namespace std;
typedef __int64 LL;
int n,cnt_a=0,cnt_b=0;
LL a[10005],b[10005],pw[35];
struct operation
{
    int x,y;
    operation(int _x=-1,int _y=-1) {x=_x;y=_y;}
}qa[1000005],qb[1000005];
void Swap(int x,int y,LL *t,operation *q,int &cnt)
{
    if(x==y) return;
    q[cnt++]=operation(x,y);
    q[cnt++]=operation(y,x);
    q[cnt++]=operation(x,y);
    LL tp=t[x];
    t[x]=t[y];
    t[y]=tp;
}
void Do(int x,int y,LL *t,operation *q,int &cnt)
{
    q[cnt++]=operation(x,y);
    t[x]^=t[y];
}
void Gauss(LL *t,operation *q,int &cnt)
{
    cnt=0;
    int r=0;
    for(int i=30;i>=0;i--)
    {
        for(int j=r;j<n;j++)
        {
            if(t[j]&pw[i])
            {
                Swap(j,r,t,q,cnt);
                for(int k=0;k<n;k++)
                {
                    if(k==r) continue;
                    if(t[k]&pw[i]) Do(k,r,t,q,cnt);
                }
                r++;
                break;
            }
        }
    }
}
int main()
{
    pw[0]=1;
    for(int i=1;i<=32;i++) pw[i]=pw[i-1]*2;
    scanf("%d",&n);
    for(int i=0;i<n;i++) scanf("%I64d",&a[i]);
    for(int i=0;i<n;i++) scanf("%I64d",&b[i]);
    Gauss(a,qa,cnt_a);
    Gauss(b,qb,cnt_b);
    for(int i=0;i<40&&i<n;i++)
    {
        int p=30;
        if(a[i]==0) continue;
        while((a[i]&pw[p])==0) p--;
        for(int j=0;j<40&&j<n;j++) if((a[j]^b[j])&pw[p]) Do(j,i,a,qa,cnt_a);
    }
    for(int i=0;i<n;i++) if(a[i]!=b[i]) {printf("-1\n");return 0;}
    printf("%d\n",cnt_a+cnt_b);
    for(int i=0;i<cnt_a;i++) printf("%d %d\n",qa[i].x+1,qa[i].y+1);
    for(int i=cnt_b-1;i>=0;i--) printf("%d %d\n",qb[i].x+1,qb[i].y+1);
    return 0;
}
