#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <map>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cassert>
#include <cstdlib>
#include <cmath>
#include <algorithm>

using namespace std;

typedef long long ll;
typedef pair<int,int> PII;
typedef vector<int> VI;

const int mod=1000000007;
const int MAXN=10010;

int a[MAXN],b[MAXN],n;
vector<PII> qa,qb;

void Xor(int *a,int i,int j,vector<PII> &q){
    q.push_back(make_pair(i,j));
    a[i]^=a[j];
}
void guass(int *a,vector<PII> &q){
    int p=0;
    for(int i=29;i>=0;i--){
        for(int j=p;j<n;j++){
            if(a[j]&(1<<i)){
                if(j!=p){
                    Xor(a,p,j,q);
                    Xor(a,j,p,q);
                    Xor(a,p,j,q);
                }
                for(int k=0;k<n;k++){
                    if(k!=p && a[k]&(1<<i)){
                        Xor(a,k,p,q);
                    }
                }
                ++p;
                break;
            }
        }
    }
}

void solve(){
    scanf("%d",&n);
    for(int i=0;i<n;i++)
        scanf("%d",&a[i]);
    for(int i=0;i<n;i++)
        scanf("%d",&b[i]);
    guass(a,qa);
    guass(b,qb);
    for(int i=0;i<30 && i<n;i++){
        if(a[i]==0)
            break;
        int k=(1<<29);
        while(!(k&a[i])) k>>=1;
        for(int j=0;j<30 && j<n;j++){
            if((a[j]^b[j])&k){
                Xor(a,j,i,qa);
            }
        }
    }
    int flag=0;
    for(int i=0;i<n;i++) if(a[i]!=b[i]){
        flag=1;
        break;
    }
    if(flag) printf("-1\n");
    else{
        printf("%d\n",qa.size()+qb.size());
        for(int i=0;i<qa.size();i++)
            printf("%d %d\n",qa[i].first+1,qa[i].second+1);
        reverse(qb.begin(),qb.end());
        for(int i=0;i<qb.size();i++)
            printf("%d %d\n",qb[i].first+1,qb[i].second+1);
    }
}

int main()
{
    solve();
    return 0;
}
