#include <cstdio>
#include <iostream>
#include <vector>

using namespace std;

const int MAXN = 10100;
const int MAX_BIT = 32;

int n;
int x[MAXN], y[MAXN];

vector < pair < int, int > > a, b;

void read() {
	int i;

	scanf ( "%d", &n );

	for ( i = 0; i < n; ++ i ) {
		scanf ( "%d", &x[i] );
	}

	for ( i = 0; i < n; ++ i ) {
		scanf ( "%d", &y[i] );
	}

}

void gauss ( int a[], vector < pair < int, int > > &v ) {
	int k = 0;
	for ( int i = MAX_BIT - 1; i>= 0; -- i ) {
		int idx = -1;
		for ( int j = k; j < n; ++ j ) {
			if ( ( a[j] & ( 1 << i ) ) ) {
				idx = j;
				break;
			}
		}

		if ( idx == -1 ) continue;

		if ( idx != k ) {
			swap ( a[k], a[idx] );
			v.push_back ( make_pair ( k, idx ) );
			v.push_back ( make_pair ( idx, k ) );
			v.push_back ( make_pair ( k, idx ) );
		}

		for ( int j = 0; j < n; ++ j ) {
			if ( k != j && ( a[j] & ( 1 << i ) ) ) {
				a[j] ^= a[k];
				v.push_back ( make_pair ( j, k ) );
			}
		}

		k ++;

	}

}

void solve() {
	int i, j;

	gauss ( x, a );
	gauss ( y, b );

	for ( i = 0; i < MAX_BIT; ++ i ) {
		int bit = -1;
		for ( j = MAX_BIT - 1; j >= 0; -- j ) {
			if ( ( x[i] & ( 1 << j ) ) ) {
				bit = j;
				break;
			}
		}

		if ( bit == -1 ) continue;

		for ( j = 0; j < MAX_BIT; ++ j ) {
			if ( ( x[j] & ( 1 << bit ) ) ^ ( y[j] & ( 1 << bit ) ) ) {
				x[j] ^= x[i];
				a.push_back ( make_pair ( j, i ) );
			}
		}
	}

	for ( i = 0; i < n; ++ i ) {
		if ( x[i] != y[i] ) {
			printf ( "-1\n" );
			return;
		}
	}

	printf ( "%d\n", ( int ) a.size() + ( int ) b.size() );
	for ( i = 0; i < ( int ) a.size(); ++ i ) {
		printf ( "%d %d\n", a[i].first + 1, a[i].second + 1 );
	}

	for ( i = ( int ) b.size() - 1; i >= 0; -- i ) {
		printf ( "%d %d\n", b[i].first + 1, b[i].second + 1 );
	}

}

int main() {
	read();
	solve();

	return 0;

}