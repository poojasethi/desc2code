#pragma comment(linker, "/STACK:1024000000,1024000000")
#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<fstream>
#include<math.h>
#include<iomanip>
#include<time.h>
#include<assert.h>
using namespace std;
#define ll long long
#define ull unsigned long long
#define db double
#define inf 1000000007
#define mod 1000000007
#define pii pair<int,int>
#define vi vector<int>
#define vii vector<pii>
#define VS vector<string>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 50010
#define pi 3.14159265358979323846
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(__typeof(t.begin()) i=t.begin();i!=t.end();i++)

int gauss(vi &v,vii &ans,vi &mb)
{
    int cur=0;     
    for(int b=30;b>=0;b--)if(cur<v.size())
    {
        for(int i=cur;i<v.size();i++)if(v[i]>>b&1){
        if(i!=cur)
        {
            swap(v[i],v[cur]);
            ans.pb(mp(i,cur));
            ans.pb(mp(cur,i));
            ans.pb(mp(i,cur));
        }
        break;
        }
        if(v[cur]>>b&1)
        {
            for(int i=0;i<v.size();i++)
                if(i!=cur&&(v[i]>>b&1))
                v[i]^=v[cur],ans.pb(mp(i,cur));
            mb.pb(1<<b);cur++;
        }
    }
    return cur;
}
int main()
{
    //freopen("1.txt","r",stdin);
    int T,i,j,m,ca=0,k,n;
    vi x,y;
    scanf("%d",&n);
    x.resize(n),y.resize(n);
    for(i=0;i<n;i++)scanf("%d",&x[i]);
    for(i=0;i<n;i++)scanf("%d",&y[i]);
    vii ans;vi mb;
    int b=gauss(x,ans,mb);
    vi y0=y;
    for(i=0;i<y.size();i++)
    {
        for(j=0;j<b;j++)if((y[i]&x[j])>=mb[j])
        {
            y[i]^=x[j];
            if(i>=b)ans.pb(mp(i,j));
        }
        if(y[i]){puts("-1");return 0;}
    }
    y0.resize(b);
    vii ansy;vi mby;
    gauss(y0,ansy,mby);
    y=y0;
    for(i=0;i<y.size();i++)
    {
        if((x[i]&y[i])>=mb[i])y[i]^=x[i];
        else ans.pb(mp(i,i));
        for(j=i+1;j<b;j++)if((y[i]&x[j])>=mb[j])
            y[i]^=x[j],ans.pb(mp(i,j));
    }
    for(i=ansy.size()-1;i>=0;i--)
        ans.pb(mp(ansy[i].x,ansy[i].y));
    printf("%d\n",ans.size());
    for(i=0;i<ans.size();i++)
        printf("%d %d\n",ans[i].x+1,ans[i].y+1);
    return 0;
}
