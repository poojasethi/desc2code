#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef double dcm;
typedef pair<int, int> PII;
#define IL inline
#define initIO(pn) freopen(pn ".in", "r", stdin), freopen(pn ".out", "w", stdout)
#define arrset(p, v) memset(p, v, sizeof(p))
#define CT(T) const T&
const int MAXN = 1e5 + 10;

int n, cnt, A[MAXN], B[MAXN], pos[MAXN];
vector<PII> Ra, Rb;

void lucky() {
#ifndef ONLINE_JUDGE
	initIO("472F");
#endif
	scanf("%d", &n);
	for (int i = 1; i <= n; i++) scanf("%d", &A[i]);
	for (int i = 1; i <= n; i++) scanf("%d", &B[i]);
}

void Xor(int *A, vector<PII> &R, int x, int y) {
	A[x] ^= A[y], R.push_back(PII(x, y));	
}

void getBase(int *A, vector<PII> &R) {
	for (int i = 30, j, p = 1; i >= 0; i--) {
		for (j = p; j <= n && !(A[j] & (1 << i)); j++);
		if (j > n) continue;
		if (j != p) Xor(A, R, p, j), Xor(A, R, j, p), Xor(A, R, p, j);
		for (j = p + 1; j <= n; j++)
			if (A[j] & (1 << i)) Xor(A, R, j, p);
		p++;
	}
}

int main() {
	lucky();
	getBase(A, Ra), getBase(B, Rb);
	for (int i = 1; cnt++, i <= n && A[i]; i++)
		for (int j = 30; j >= 0; j--)
			if (A[i] & (1 << j)) {
				pos[i] = j; break;
			}
	for (int i = 1; i <= cnt; i++)
		for (int j = i; j <= cnt; j++)
			if ((A[i] ^ B[i]) & (1 << pos[j]))
				Xor(A, Ra, i, j);
	for (int i = 1; i <= n; i++)
		if (A[i] != B[i]) printf("-1\n"), exit(0);
	printf("%d\n", (int)(Ra.size() + Rb.size()));
	for (int i = 0; i < (int)Ra.size(); i++)
		printf("%d %d\n", Ra[i].first, Ra[i].second);
	for (int i = Rb.size() - 1; i >= 0; i--)
		printf("%d %d\n", Rb[i].first, Rb[i].second);
	return 0;
}
