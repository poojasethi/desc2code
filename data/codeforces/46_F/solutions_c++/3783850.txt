#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<map>
using namespace std;
map<string,int> name;
int pos[1005];
int v1[1005];
int v2[1005];
int h[1005];
int a[1005];
int b[1005];
int f[1005];
int n,m,c;
int find(int x)
{	if (f[x]==0)
		return x;
	f[x]=find(f[x]);
	return f[x];
}
void joint(int x,int y)
{	int fx,fy;
	fx=find(x),fy=find(y);
	if (fx!=fy)
		f[fx]=fy;
}
void connect(int v[])
{	int i,flag;
	memset(f,0,sizeof(f));
	do
	{	flag=0;
		for (i=1;i<=m;++i)
			if (v[i]==0&&(find(pos[i])==find(a[i])||find(pos[i])==find(b[i])))
			{	joint(a[i],b[i]);
				v[i]=flag=1;
			}
	} while(flag);
}
void work()
{	int i,j,x,y,k,p;
	string st;
	for (i=1;i<=c;++i)
	{	cin>>st;
		name[st]=i;
		scanf("%d%d",&x,&y);
		h[i]=x;
		for (j=1;j<=y;++j)
		{	scanf("%d",&k);
			pos[k]=x;
		}
	}
	connect(v1);
	for (i=1;i<=c;++i)
	{	cin>>st;
		p=name[st];
		scanf("%d%d",&x,&y);
		if (find(x)!=find(h[p]))
		{	printf("NO\n");
			return ;
		}
		for (j=1;j<=y;++j)
		{	scanf("%d",&k);
			if (find(x)!=find(pos[k]))
			{	printf("NO\n");
				return ;
			}
			pos[k]=x;
		}
	}
	connect(v2);
	for (i=1;i<=m;++i)
		if (v1[i]!=v2[i])
		{	printf("NO\n");
			return ;
		}
	printf("YES\n");
}
int main()
{	int i;
	scanf("%d%d%d",&n,&m,&c);
	for (i=1;i<=m;++i)
		scanf("%d%d",&a[i],&b[i]);
	work();
	return 0;
}

		 		  		    			   	  		  	