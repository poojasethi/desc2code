#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<map>
using namespace std;
const int maxn=1010;
bool vs[maxn],vt[maxn];
int key,num,n,m,k,fa[maxn];
int x[maxn],y[maxn],ps[maxn],ks[maxn],pt[maxn],kt[maxn];
string name;
map<string,int> no;
int getf(int x){return fa[x]==x?x:fa[x]=getf(fa[x]);}
void solve(int p[],int k[],bool v[]){
    for(int i=1;i<=n;i++)fa[i]=i;
    for(bool f=1;f;){
        f=0;
        for(int i=1;i<=m;i++){
            int a=getf(x[i]),b=getf(y[i]),c=getf(p[k[i]]);
            if(!v[i]&&(a==c||b==c)){
                v[i]=f=1;
                if(a!=b)fa[a]=b;
            }
        }
    }
}
int main(){
    //freopen("AC.in","r",stdin);
    //freopen("AC.out","w",stdout);
    cin>>n>>m>>k;
    for(int i=1;i<=m;i++)cin>>x[i]>>y[i];
    for(int i=1;i<=k;i++){
        cin>>name>>ps[i]>>num;
        no[name]=i;
        while(num--){
            cin>>key;
            ks[key]=i;
        }
    }
    solve(ps,ks,vs);
    for(int i=1;i<=k;i++){
        cin>>name;
        int id=no[name];
        cin>>pt[id]>>num;
        if(getf(pt[id])!=getf(ps[id]))return puts("NO"),0;
        while(num--){
            cin>>key;
            if(getf(ps[ks[key]])!=getf(pt[id]))return puts("NO"),0;
            kt[key]=id;
        }
    }
    solve(pt,kt,vt);
    for(int i=1;i<=m;i++)
        if(vt[i]!=vs[i])return puts("NO"),0;
    return puts("YES"),0;
}
