#include <cstdio>
#include <vector>
#include <cstring>
#include <string>
#include <map>
#include <iostream>
using namespace std;
int num,room[10000],n,m,k,rep[10000],prt[10000],keyi[10000];
int head[10000],next[10000],to[10000],cnt[10000],b1_key[10000],b1_people[10000];
int find(int u)
{
	if(prt[u] == 0) return u;
	return prt[u] = find(prt[u]);
}
map<string,int> name;	
void bfs()
{	
	memset(prt,0,sizeof(prt));
	int i,u;
	while(true)
	{
		bool flag = false;
		for(u=1;u<=n;u++)
			for(i=head[u];i;i=next[i])
				if(find(u) == find(keyi[i<=m?i:i-m]))
					if(find(to[i]) != find(u))
						prt[find(to[i])] = find(u),flag = true;
		if(!flag) return;
	}
}
int main()
{
	//freopen("input.txt","r",stdin);
	int i,j,u,v,x; bool imp=true; string s;
	vector<int>::iterator iter;
	scanf("%d%d%d",&n,&m,&k);
	for(i=1;i<=m;i++)
	{
		scanf("%d%d",&u,&v);
		next[i] = head[u]; head[u] = i; to[i] = v;
		next[i+m] = head[v]; head[v] = i+m; to[i+m] = u;
	}
	for(i=1;i<=k;i++)
	{
		cin>>s;
		name.insert(make_pair(s,++num));
		scanf("%d%d",&room[num],&cnt[num]);
		for(j=1;j<=cnt[num];j++) scanf("%d",&x),keyi[x] = room[num];
	}
	bfs();
	for(i=1;i<=n;i++) 
		if(!rep[find(i)] || i < rep[find(i)]) rep[find(i)] = i;
	for(i=1;i<=k;i++)
		b1_people[i] = rep[find(room[i])];
	for(i=1;i<=m;i++)
		b1_key[i] = rep[find(keyi[i])];
	for(i=1;i<=k;i++)
	{
		cin>>s;
		int tmp = name.find(s) -> second;
		scanf("%d%d",&room[tmp],&cnt[tmp]);
		for(j=1;j<=cnt[tmp];j++) scanf("%d",&x),keyi[x]=room[tmp];
	}
	bfs();
	memset(rep,0,sizeof(rep));
	for(i=1;i<=n;i++) 
		if(!rep[find(i)] || i < rep[find(i)]) rep[find(i)] = i;
	for(i=1;i<=k && imp;i++)
		if(b1_people[i] != rep[find(room[i])]) imp=false;
	for(i=1;i<=m && imp;i++)
		if(b1_key[i] != rep[find(keyi[i])]) imp=false;
	if(imp)	printf("YES\n");
	else printf("NO\n");
}