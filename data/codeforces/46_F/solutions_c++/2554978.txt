#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<string>
#include<iostream>
#include<map>

using namespace std;

const int maxn=1010;

int n,m,k,f[maxn],s[maxn],e[maxn];

bool se[maxn],ee[maxn];

map<string,int> idx;

string name;

struct rec
{
	int stay[maxn],key[maxn];
}start,end;

int getf(int now)
{
	if (now==f[now]) return now;
	else return f[now]=getf(f[now]);
}

void get(bool *nows)
{
	for (int a=1;a<=n;a++)
		f[a]=a;
	bool change=true;
	while (change)
	{
		change=false;
		for (int a=1;a<=m;a++)
			if (nows[a]) continue;
			else
			{
				int p1=s[a],p2=e[a],p3=start.key[a];
				int f1=getf(p1),f2=getf(p2),f3=getf(p3);
				if (f1==f3 || f2==f3)
				{
					f[f1]=f2;
					change=true;
					nows[a]=true;
				}
			}
	}
}

int main()
{
	scanf("%d%d%d",&n,&m,&k);
	for (int a=1;a<=m;a++)
		scanf("%d%d",&s[a],&e[a]);
	for (int a=1;a<=k;a++)
	{
		cin>>name;
		idx[name]=a;
		scanf("%d",&start.stay[a]);
		int k;
		scanf("%d",&k);
		for (int b=1;b<=k;b++)
		{
			int p;
			scanf("%d",&p);
			start.key[p]=start.stay[a];
		}
	}
	get(se);
	for (int a=1;a<=k;a++)
	{
		cin>>name;
		int id=idx[name];
		scanf("%d",&end.stay[id]);
		if (getf(start.stay[id])!=getf(end.stay[id]))
		{
			printf("NO\n");
			return 0;
		}
		int k;
		scanf("%d",&k);
		for (int b=1;b<=k;b++)
		{
			int p;
			scanf("%d",&p);
			end.key[p]=end.stay[id];
			if (getf(end.key[p])!=getf(start.key[p]))
			{
				printf("NO\n");
				return 0;
			}
		}
	}
	swap(start,end);
	get(ee);
	for (int a=1;a<=m;a++)
		if (se[a]!=ee[a])
		{
			printf("NO\n");
			return 0;
		}
	printf("YES\n");

	return 0;
}
