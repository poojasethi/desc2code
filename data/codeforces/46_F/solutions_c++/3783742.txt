#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<map>
using namespace std;
map<string,int> name;
bool v1[1005];
bool v2[1005];
int pos[1005];
int h[1005];
int a[1005];
int b[1005];
int f[1005];
int n,m,c;
int find(int x)
{	if (x==f[x])
		return x;
	f[x]=find(f[x]);
	return f[x];
}
void solve(bool v[])
{	bool open;
	int i;
	for (i=1;i<=n;++i)
		f[i]=i;
	do
	{	open=0;
		for (i=1;i<=m;++i)
			if (!v[i]&&(find(pos[i])==find(a[i])||find(pos[i])==find(b[i])))
			{	f[find(b[i])]=find(a[i]);
				v[i]=open=1;
			}
	} while(open);
}
int main()
{	int i,j,room,num,k,p;
	string st;
	scanf("%d%d%d",&n,&m,&c);
	for(i=1;i<=m;++i)
		scanf("%d%d",&a[i],&b[i]);
	for (i=1;i<=c;++i)
	{	cin>>st;
		name[st]=i;
		scanf("%d%d",&room,&num);
		h[i]=room;
		for (j=1;j<=num;++j)
		{	scanf("%d",&k);
			pos[k]=room;
		}
	}
	solve(v1);
	for (i=1;i<=c;++i)
	{	cin>>st;
		p=name[st];
		scanf("%d%d",&room,&num);
		if (find(room)!=find(h[p]))
		{	puts("NO");
			return 0;
		}
		for (j=1;j<=num;++j)
		{	scanf("%d",&k);
			if(find(room)!=find(pos[k]))
			{	puts("NO");
				return 0;
			}
			pos[k]=room;
		}
	}
	solve(v2);
	for (i=1;i<=m;++i)
		if (v1[i]^v2[i])
		{	puts("NO");
			return 0;
		}
	puts("YES");
	return 0;
}
 	  	 	 	 		  		   			 	 	