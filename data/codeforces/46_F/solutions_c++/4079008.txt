#include <cstdio>
#include <cstring>
struct door {
    int x, y;
} d[1000];
int n, m, k, pos[1000], pos2[1000], f[1000], f2[1000], own[1000], own2[1000];
char name[1000][11], tmp[11];
int root(int *f, int x) {
    int r = x;
    for (; f[r] != r; r = f[r]);
    for (int y; f[x] != x; y = f[x], f[x] = r, x = y);
    return r;
}
void process(int *pos, int *own, int *f) {
    for (int i = 0; i < n; i++)
        f[i] = i;
    for (int i = 0; i < n; i++) {
        int flag = 0;
        for (int j = 0; j < m; j++) {
            int r1 = root(f, d[j].x), r2 = root(f, d[j].y), r = root(f, pos[own[j]]);
            if (r1 != r2 && (r == r1 || r == r2)) {
                if (r1 < r2) f[r2] = r1;
                else f[r1] = r2;
                flag = 1;
            }
        }
        if (!flag) break;
    }
}
int main() {
    scanf("%d%d%d", &n, &m, &k);
    for (int i = 0; i < m; i++)
        scanf("%d%d", &d[i].x, &d[i].y), d[i].x--, d[i].y--;
    for (int i = 0, x; i < k; i++) {
        scanf("%s%d%d", name[i], &pos[i], &x), pos[i]--;
        for (int y; x--; )
            scanf("%d", &y), own[y-1] = i;
    }
    for (int i = 0, x; i < k; i++) {
        scanf("%s", tmp);
        int j = 0;
        for (; j < k; j++)
            if (strcmp(name[j], tmp) == 0) break;
        scanf("%d%d", &pos2[j], &x), pos2[j]--;
        for (int y; x--; )
            scanf("%d", &y), own2[y-1] = j;
    }
    process(pos, own, f);
    process(pos2, own2, f2);
    for (int i = 0; i < n; i++)
        if (root(f, i) != root(f2, i)) {
            puts("NO");
            return 0;
        }
    for (int i = 0; i < k; i++)
        if (root(f, pos[i]) != root(f2, pos2[i])) {
            puts("NO");
            return 0;
        }
    for (int i = 0; i < m; i++)
        if (root(f, pos[own[i]]) != root(f2, pos2[own2[i]])) {
            puts("NO");
            return 0;
        }
    puts("YES");
    return 0;
}
