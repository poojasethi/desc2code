#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
using namespace std;
const int u=2510,w=10010,dx[4]={0,-1,1,0},dy[4]={-1,0,0,1};
int ver[w],edge[w],next[w],head[u],d[u],n,m,tot,i,j,k,ans,x,y;
char a[55][55];

void add(int x,int y,int z)
{
	ver[++tot]=y,edge[tot]=z,next[tot]=head[x],head[x]=tot;
}

int bfs(int x)
{
	deque<int> q;
	q.push_back(x);
	memset(d,0x3f,sizeof(d));
	d[x]=0;
	int i,j;
	while(q.size())
	{
		x=q.front(),q.pop_front();
		for(int i=head[x];i;i=next[i])
			if(d[ver[i]]>d[x]+edge[i])
			{
				d[ver[i]]=d[x]+edge[i];
				if(edge[i]) q.push_back(ver[i]); else q.push_front(ver[i]);
			}
	}
	d[0]=0;
	for(i=1;i<=n;i++)
		for(j=1;j<=m;j++)
			if(a[i][j]=='B') d[0]=max(d[0],d[(i-1)*m+j]);
	return d[0];
}

int main()
{
	cin>>n>>m;
	for(i=1;i<=n;i++) scanf("%s",a[i]+1);
	ans=-1;
	for(i=1;i<=n;i++)
		for(j=1;j<=m;j++)
		{
			if(a[i][j]=='B') ans=0x7fffffff;
			for(k=0;k<4;k++)
				if((x=i+dx[k])>0&&x<=n&&(y=j+dy[k])>0&&y<=m)
					add((i-1)*m+j,(x-1)*m+y,a[i][j]!=a[x][y]);
		}
	for(i=1;i<=n*m;i++) ans=min(ans,bfs(i));
	cout<<ans+1<<endl;
	return 0;
}