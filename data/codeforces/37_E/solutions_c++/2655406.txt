#include <cstdio>
#include <iostream>
#include <cstring>
using namespace std;
const int vec[4][2]={{0,1},{0,-1},{1,0},{-1,0}};
int ans,all,tot[2],n,m,i,j,k,dl[2][2501][2],maxn,o;
int map[52][52],dis[52][52];
char s[52];
void dfs(int x,int y)
{
		 if (map[x][y]) maxn=max(maxn,dis[x][y]);
		 for (int i=0;i<4;i++)
		 {
		 		 int X=x+vec[i][0],Y=y+vec[i][1];
		 		 if (1<=X && X<=n && 1<=Y && Y<=m)
		 		 		if (map[X][Y]^map[x][y])
		 		 			 if (dis[x][y]+1<dis[X][Y]) dis[X][Y]=dis[x][y]+1,dl[1-o][++tot[1-o]][0]=X,dl[1-o][tot[1-o]][1]=Y;
		 		 			 else;
 		 			  else
	 			  		 if (dis[x][y]<dis[X][Y]) dis[X][Y]=dis[x][y],dfs(X,Y);
		 }
}
int check(int x,int y)
{
		memset(dis,63,sizeof(dis));
		maxn=0;
		tot[o]=1;
		dl[o][1][0]=x,dl[o][1][1]=y;
		dis[x][y]=0;
		while (tot[o])
		{
					tot[1-o]=0;
					for (int i=1;i<=tot[o];i++)
							dfs(dl[o][i][0],dl[o][i][1]);
					o=1-o;
		}
		return maxn;
}
int main()
{
		cin >> n >> m;
		for (i=1;i<=n;i++)
		{
				scanf("%s",s+1);
				for (j=1;j<=m;j++)
						if (s[j]=='W') all++;
						else					 map[i][j]=1;
		}
		if (all==n*m)
		{
			 cout << 0;
			 return 0;
		}
		ans=1<<30;
		for (i=1;i<=n;i++)
		for (j=1;j<=m;j++)
				ans=min(ans,check(i,j));
		cout << ans+1;
		return 0;
}