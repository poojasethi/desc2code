#include <cstdio>
#include <cstring>
#define INFI 99999999
int getc()
{
	char ch;
	do{
		scanf("%c",&ch);
	}while(ch!='W' && ch!='B');
	return ch == 'W' ? 0:1;
}
int n,m,ans;
inline int h(int x,int y)
{
	if(x<1 || y<1 || x>n || y>m) return 0;
	return m*(x-1)+y;
}
int e,q[1000000],d[10000],w[100000],next[100000],first[10000],to[100000];
bool inq[10000];  int p[100][100];
void SPFA(int u)
{
	int head,tail,max=-1,i,j;
	q[0] = u; head = tail = 0;
	memset(inq,false,sizeof(inq));
	for(i=1;i<=n*m;i++) d[i] = INFI;
	d[u] = 0;
	while(head<=tail)
	{
		u = q[head]; head++; inq[u]=false;
		for(i=first[u];i;i=next[i])
			if(d[to[i]] > d[u]+w[i])
			{
				d[to[i]] = d[u]+w[i];
				if(!inq[to[i]]) q[++tail] = to[i],inq[to[i]]=true;
			}
	}
	for(i=1;i<=n;i++)
		for(j=1;j<=m;j++)
		if(p[i][j] && d[h(i,j)] > max) max = d[h(i,j)];
	if(max < ans) ans = max;
}
void add(int u,int v,int weight)
{
	next[++e] = first[u]; first[u] = e; w[e] = weight; to[e] = v;
}
int main()
{
	//freopen("input.txt","r",stdin);
	int i,j,k; ans = INFI;
	scanf("%d%d",&n,&m);
	for(i=1;i<=n;i++)
		for(j=1;j<=m;j++)
		p[i][j] = getc();
	for(i=1;i<=n;i++)
		for(j=1;j<=m;j++)
		{
			if(h(i-1,j)) add(h(i,j),h(i-1,j),p[i][j]==p[i-1][j]?0:1);
			if(h(i+1,j)) add(h(i,j),h(i+1,j),p[i][j]==p[i+1][j]?0:1);
			if(h(i,j-1)) add(h(i,j),h(i,j-1),p[i][j]==p[i][j-1]?0:1);
			if(h(i,j+1)) add(h(i,j),h(i,j+1),p[i][j]==p[i][j+1]?0:1);
		}
	for(k=1;k<=n*m;k++)
		SPFA(k);
	printf("%d\n",ans+1);
}