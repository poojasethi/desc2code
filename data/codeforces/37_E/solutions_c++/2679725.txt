#include<iostream>
#include<algorithm>
#include<vector>
#include<cstdio>
#include<cstdlib>
#include<cstring>

using std::min;
using std::vector;

const int fin=0,maxn=52;
const int INF=1<<28;
const int dx[4]={0,-1,0,1},dy[4]={1,0,-1,0};
int n,m;
char s[maxn][maxn];
bool c[maxn][maxn],v[maxn][maxn];
vector<int>V[maxn*2];

int sol(int sx,int sy){
  int i,j,k,u,ux,uy,tx,ty,last=-1;
  for(i=0;i<n;++i)for(j=0;j<m;++j)v[i][j]=0;
  for(i=0;i<=n+m;++i)V[i].clear();
  V[0].push_back(sx*m+sy),v[sx][sy]=1;
  for(i=0;i<=n+m;++i)
    for(j=0;j<V[i].size();++j){
      u=V[i][j],ux=u/m,uy=u%m;
      if(c[ux][uy])last=i;
      for(k=0;k<4;++k){
        tx=ux+dx[k],ty=uy+dy[k];
        if(tx<0||tx>=n||ty<0||ty>=m)continue;
        if(!v[tx][ty])
          v[tx][ty]=1,V[i+(c[ux][uy]^c[tx][ty])].push_back(tx*m+ty);
      }
    }
  return last+1;
}

int main(){
  if(fin){
    freopen("t.in","r",stdin);
    freopen("t.out","w",stdout);
  }
  int i,j,ans=INF;
  scanf("%d%d\n",&n,&m);
  for(i=0;i<n;++i)gets(s[i]);
  for(i=0;i<n;++i)for(j=0;j<m;++j)c[i][j]=s[i][j]=='B';
  for(i=0;i<n;++i)for(j=0;j<m;++j)ans=min(ans,sol(i,j));
  printf("%d",ans);
  return 0;
}
