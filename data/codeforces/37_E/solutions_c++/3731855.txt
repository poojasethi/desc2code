#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<cstdlib>
#include<queue>
using namespace std;
const int maxn=50+5;
const int maxN=maxn*maxn;
const int INF=1<<30;
int g[maxN],next[4*maxN],to[4*maxN],start[maxN];
int S,tot=1,N,ans=INF,n,m,flag;
int vis[maxN],dis[maxN],cost[4*maxN];
void add(int a,int b,int c,int d)
{
	int x=(a-1)*m+b,y=(c-1)*m+d,z=g[x]^g[y];
	to[++tot]=y,cost[tot]=z,next[tot]=start[x],start[x]=tot;
	to[++tot]=x,cost[tot]=z,next[tot]=start[y],start[y]=tot;	
}
queue<int> q;
void SPFA()
{
	for(int i=1;i<=N;i++)
		vis[i]=0,dis[i]=INF;
	q.push(S);
	vis[S]=1,dis[S]=0;
	while(!q.empty())
	{
		int u=q.front(); q.pop(); vis[u]=0;
		for(int i=start[u];i;i=next[i])
		{
			int v=to[i];
			if(dis[v]>dis[u]+cost[i])
			{
				dis[v]=dis[u]+cost[i];
				if(!vis[v])
				{
					vis[v]=1;
					q.push(v);
				}
			}
		}
	}
	int maxv=0;
	for(int i=1;i<=N;i++)
		if(g[i])
			maxv=max(maxv,dis[i]);
	ans=min(ans,maxv);
}	
int main()
{
	scanf("%d %d\n",&n,&m);
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{	
			if(getchar()=='B')
			{
				g[(i-1)*m+j]=1;
				flag=1;
			}
		}
		scanf("\n");
	}
	if(!flag) {printf("0\n"); return 0;}
	N=n*m;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
		{
			if(j==m && i==n) continue;
			else if(j==m) add(i,j,i+1,j);
			else if(i==n) add(i,j,i,j+1);
			else add(i,j,i+1,j),add(i,j,i,j+1);
		}
	for(S=1;S<=N;S++)
		SPFA();
	printf("%d\n",ans+1);
	return 0;
}

 		  	 			  		 			 	 			