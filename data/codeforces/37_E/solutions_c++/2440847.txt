#include <cstdio>
#include <cstring>

int n, m, ans, cur, st, en, q[5200][3];
char map[52][52];
bool v[52][52];

void add(int x, int y, int od, int d){
	if (od == d) q[--st][2] = d, q[st][0] = x, q[st][1] = y;
	else q[++en][2] = d, q[en][0] = x, q[en][1] = y;
	v[x][y] = true;
}

int main(){
	scanf("%d%d\n", &n, &m);
	for (int i = 1; i <= n; i++) scanf("%s", map[i] + 1);
	ans = n * m;
	for (int i = 1; i <= n; i++) for (int j = 1; j <= m; j++){
		memset(v, false, sizeof(v));
		cur = -1;
		st = en = 2520; q[st][0] = i; q[st][1] = j; q[st][2] = 0; v[i][j] = true;
		while (st <= en){
			int x = q[st][0], y = q[st][1], d = q[st++][2];
			if (map[x][y] == 'B' && d > cur) cur = d;
			if (x > 1 && !v[x - 1][y]) add(x - 1, y, d, d + (map[x][y] != map[x - 1][y]));
			if (x < n && !v[x + 1][y]) add(x + 1, y, d, d + (map[x][y] != map[x + 1][y]));
			if (y > 1 && !v[x][y - 1]) add(x, y - 1, d, d + (map[x][y] != map[x][y - 1]));
			if (y < m && !v[x][y + 1]) add(x, y + 1, d, d + (map[x][y] != map[x][y + 1]));
		}
		if (cur + 1 < ans) ans = cur + 1;
	}
	printf("%d\n", ans);
}
