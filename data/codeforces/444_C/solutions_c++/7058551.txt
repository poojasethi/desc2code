#include<stdio.h>
#include<stdlib.h>
#define N 100005

struct node
{
	int flag;
	long long sum;
};

node a[N<<2];
int n,m;

void build(int l,int r,int t)
{
	a[t].sum=0;
	a[t].flag=0;
	if(l==r)
	{
		a[t].flag=l;
		return ;
	}
	int mid=(l+r)>>1;
	build(l,mid,t<<1);
	build(mid+1,r,t<<1|1);
}

void down(int l,int r,int t)
{
	int mid=(l+r)>>1;
	long long tmp=a[t].sum-a[t<<1].sum-a[t<<1|1].sum;
	tmp/=(r-l+1);
	a[t<<1].sum+=1LL*(mid-l+1)*tmp;
	a[t<<1|1].sum+=1LL*(r-mid)*tmp;
	a[t<<1].flag=a[t<<1|1].flag=a[t].flag;
	a[t].flag=0;
}

void update(int l,int r,int t,int L,int R,int v)
{
	if(L<=l && r<=R && a[t].flag>0)
	{
		a[t].sum+=1LL*(r-l+1)*abs(v-a[t].flag);
		a[t].flag=v;
		return ;
	}
	int mid=(l+r)>>1;
	if(a[t].flag)	down(l,r,t);
	if(L<=mid)	update(l,mid,t<<1,L,R,v);
	if(R>mid)	update(mid+1,r,t<<1|1,L,R,v);
	if(a[t<<1].flag==a[t<<1|1].flag)
		a[t].flag=a[t<<1].flag;
	else	a[t].flag=0;
	a[t].sum=a[t<<1].sum+a[t<<1|1].sum;
}

long long query(int l,int r,int t,int L,int R)
{
	if(L<=l && r<=R)	return a[t].sum;
	if(a[t].flag)	down(l,r,t);
	int mid=(l+r)>>1;
	long long rec=0;
	if(L<=mid)	rec=query(l,mid,t<<1,L,R);
	if(R>mid)	rec+=query(mid+1,r,t<<1|1,L,R);
	return rec;	
}

int main()
{
	scanf("%d%d",&n,&m);
	build(1,n,1);
	int t,x,y,v;
	while(m--)
	{
		scanf("%d",&t);
		if(t==1)
		{
			scanf("%d%d%d",&x,&y,&v);
			update(1,n,1,x,y,v);
		}
		else
		if(t==2)
		{
			scanf("%d%d",&x,&y);
			printf("%I64d\n",query(1,n,1,x,y));
		}
	}	
	return 0;
}
