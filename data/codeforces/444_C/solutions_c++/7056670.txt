#include <cstdio>
#include <algorithm>
using namespace std;
#define rep(i,a,b) for (int i=a;i<=b;++i)
typedef long long ll;
const int nn=500010;
ll s[nn],delta[nn],mark[nn];
int n,m;
void build(int p,int l,int r)
{
    int mid=l+r>>1,lc=p<<1,rc=lc+1;
    if (l<r)
    {
        build(lc,l,mid);
        build(rc,mid+1,r);
    }
    else mark[p]=l;
}
ll query(int p,int l,int r,int x,int y)
{
    if (y<l || r<x) return 0;
    if (x<=l && r<=y) return s[p];
    int mid=l+r>>1,lc=p<<1,rc=lc+1;
    return query(lc,l,mid,x,y)+query(rc,mid+1,r,x,y)+max(0,min(r,y)-max(l,x)+1)*delta[p];
}
void clear(int p,int l,int r,int z)
{
    int mid=l+r>>1,lc=p<<1,rc=lc+1;
    if (mark[p]>0)
    {
        delta[p]+=abs(z-mark[p]);
        s[p]+=(ll)1*(r-l+1)*abs(z-mark[p]);
        mark[p]=0;
        return;
    }
    else
    {
        if (l==r) return;
        clear(lc,l,mid,z);
        clear(rc,mid+1,r,z);
    }
    s[p]=s[lc]+s[rc]+delta[p]*(r-l+1);
}
void modify(int p,int l,int r,int x,int y,int z)
{
    if (y<l || r<x) return;
    if (x<=l && r<=y) { clear(p,l,r,z);mark[p]=z;return; }
    int mid=l+r>>1,lc=p<<1,rc=lc+1;
    if (mark[p]>0) mark[lc]=mark[rc]=mark[p],mark[p]=0;
    modify(lc,l,mid,x,y,z);
    modify(rc,mid+1,r,x,y,z);
    s[p]=s[lc]+s[rc]+1ll*(r-l+1)*delta[p];
}
int main()
{
    scanf("%d%d",&n,&m);
    build(1,1,n);
    rep(i,1,m)
    {
        int opt,x,y,z;
        scanf("%d%d%d",&opt,&x,&y);
        if (opt==2) printf("%lld\n",query(1,1,n,x,y));
        else
        {
            scanf("%d",&z);
            modify(1,1,n,x,y,z);
        }
    }
}