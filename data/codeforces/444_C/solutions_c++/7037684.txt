#include "cstdio"
#include "iostream"
#include "vector"
#include "algorithm"
#include "cstring"
#include "set"
#include "map"
#include "cmath"
#define runtime() ((double)clock() / CLOCKS_PER_SEC)
#define rep(i, n) for(int i=0; i<n; i++)
#define repp(i, a, b) for(int i=a; i<a+b; i++)
using namespace std;
#define ll long long
const int maxn = 100010, B = 350;
int n,m,k,x,y,z,o;
ll c[maxn], bc[maxn*3], ba[maxn*3], bs[maxn*3];

#define sgt int u, int l, int r
#define lef u+u, l, m
#define rig u+u+1, m, r
#define getm int m = (l+r)>>1;

void build(sgt){
	if(l+1==r){
		bc[u] = l+1;
		return;
	}
	getm;
	build(lef), build(rig);
	bc[u] = 0;
}

void clear(sgt, int z){
	if(bc[u] > 0){
		ba[u] += abs(z - bc[u]);
		bs[u] += 1LL* (r-l) * abs(z - bc[u]);
	}else{
		getm;
		clear(lef, z), clear(rig, z);
		bs[u] = bs[u+u]+bs[u+u+1] + ba[u] * (r-l);
	}
	bc[u] = -1;
}
void modify(sgt, int x, int y, int z){
	if(x<=l && r<=y){
		clear(u,l,r, z);
		bc[u] = z;
		return;
	}
	if(y<=l || r<=x) return;
	getm;
	if(bc[u]>0) bc[u+u] = bc[u+u+1] = bc[u], bc[u] = 0;
	modify(lef, x,y,z), modify(rig, x,y,z);
	bc[u] = 0;
	bs[u] = bs[u+u] + bs[u+u+1] + ba[u]*(r-l) ;
}

ll get(sgt, int x, int y){
	if(x<=l && r<=y) return bs[u];
	if(y<=l || r<=x) return 0;
	getm;
	return get(lef,x,y)  + get(rig, x,y) + ba[u]*(min(r,y)-max(l,x));
}

int main(int argc, char const *argv[])
{
	cin>>n>>m;
	rep(i,n) c[i] = i+1;
	build(1,0,n); 
	rep(mm,m){
		scanf("%d", &o);
		if(o==1){
			scanf("%d%d%d", &x, &y, &z);
			x--;
			modify(1,0,n, x,y,z);
		}else{
			scanf("%d%d", &x, &y);
			x--; 
			printf("%I64d\n", get(1,0,n, x,y));
		}
	}
	return 0;
}