#include <bits/stdc++.h>

#define FI(ii,aa,bb) for(ll ii=aa;ii<=bb;ii++)
#define F(ii,aa,bb) for(ll ii=aa;ii<bb;ii++)
#define TF(ii,aa,bb) for(ll ii=aa;ii>=bb;ii--)
#define foreach(ii,vv) for(ii=vv.begin();ii!=vv.end();ii++)
#define pii pair<ll,ll>
#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define ll long long
#define inf (1000000000)

using namespace std;

ll n,m,lazy[400005],sum[400005],equ[400005];

void init(ll i,ll b,ll s){
	if(b==s){
		equ[i]=b;
		return;
	}
	ll o=(b+s)/2;
	init(2*i,b,o);
	init(2*i+1,o+1,s);
}

ll update(ll i,ll b,ll s,ll x,ll y,ll t){
	if(x>s || y<b) return sum[i];
	if(x<=b && y>=s && equ[i]){
		ll add=abs(equ[i]-t);
		lazy[i]+=add;
		equ[i]=t;
		return sum[i]+=add*(s-b+1);
	}
	ll l=i<<1,o=(b+s)/2;
	ll r=l|1;
	if(equ[i]){
		equ[l]=equ[r]=equ[i];
		lazy[l]+=lazy[i];
		lazy[r]+=lazy[i];
		sum[l]+=lazy[i]*(o-b+1);
		sum[r]+=lazy[i]*(s-o);
		lazy[i]=equ[i]=0;
	}
	sum[i]=update(l,b,o,x,y,t)+update(r,o+1,s,x,y,t);
	if(equ[l]==equ[r]) equ[i]=equ[l];
	return sum[i];
}

ll query(ll i,ll b,ll s,ll x,ll y){
	if(x>s || y<b) return 0;
	if(x<=b && y>=s) return sum[i];
	ll l=i<<1,o=(b+s)/2;
	ll r=l|1;
	if(equ[i]){
		equ[l]=equ[r]=equ[i];
		lazy[l]+=lazy[i];
		lazy[r]+=lazy[i];
		sum[l]+=lazy[i]*(o-b+1);
		sum[r]+=lazy[i]*(s-o);
		lazy[i]=equ[i]=0;
	}
	ll t=query(l,b,o,x,y)+query(r,o+1,s,x,y);
	if(equ[l]==equ[r]) equ[i]=equ[l];
	return t;
}


int main()
{
	ll cmd,x,y,t;
	scanf("%lld %lld",&n,&m);
	init(1,1,n);
	while(m--){
		scanf("%lld %lld %lld",&cmd,&x,&y);
		if(cmd==1){
			scanf("%lld",&t);
			update(1,1,n,x,y,t);
		}
		else{
			printf("%lld\n",query(1,1,n,x,y));
		}
	}
	return 0;
}

