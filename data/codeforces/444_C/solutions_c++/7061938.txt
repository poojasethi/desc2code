#include<cstdio>

const int N=100050;

int C[4*N],P[4*N];
long long S[4*N],A[4*N];
int abs(int x){if(x<0)return -x;return x;}

void updata(int v){
  if(C[v*2]==C[v*2+1]) C[v]=C[v*2];
  else C[v]=0;
  S[v]=S[v*2]+S[v*2+1];
}
void down(int v,int s,int t){
  int mid=(s+t)>>1;
  if(P[v]){
    P[v*2]=P[v*2+1]=C[v*2]=C[v*2+1]=P[v];
    P[v]=0;
  }
  if(A[v]){
    S[v*2]+=A[v]*(mid-s+1);
    S[v*2+1]+=A[v]*(t-mid);
    A[v*2]+=A[v];
    A[v*2+1]+=A[v];
    A[v]=0;
  }
}
void modify(int v,int s,int t,int l,int r,long long x){
   if(s>=l&&t<=r&&C[v]){
     S[v]+=1ll*abs(x-C[v])*(t-s+1);
     A[v]+=1ll*abs(x-C[v]);
     P[v]=C[v]=x;
     return;
   }
   int mid=(s+t)>>1;
   down(v,s,t);
   if(mid>=l) modify(v*2,s,mid,l,r,x);
   if(mid+1<=r)modify(v*2+1,mid+1,t,l,r,x);
   updata(v);  
}
void build(int v,int s,int t){
  if(s==t){
    C[v]=s;
    return; 
  }
  int mid=(s+t)>>1;
  build(v*2,s,mid);build(v*2+1,mid+1,t);
  updata(v);
}
long long ask(int v,int s,int t,int l,int r){
  if(s>=l&&t<=r)return S[v];
  long long A=0;    
  int mid=(s+t)>>1;
  down(v,s,t);
  if(mid>=l)A+=ask(v*2,s,mid,l,r);
  if(mid+1<=r)A+=ask(v*2+1,mid+1,t,l,r);
  updata(v);
  return A;
}
int n,m;
int main(){
  scanf("%d%d",&n,&m);
  build(1,1,n);
  for(int i=1;i<=m;i++){
    int t,l,r;scanf("%d%d%d",&t,&l,&r);
    if(t==1){
      long long x;scanf("%I64d",&x);
      modify(1,1,n,l,r,x);
    }
    else printf("%I64d\n",ask(1,1,n,l,r));
  }
}
