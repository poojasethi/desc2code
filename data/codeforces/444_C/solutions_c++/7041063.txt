#include<cstdio>
#include<cmath>
#define LL long long
#define ls (x<<1)
#define rs ((x<<1)|1)
#define N 100002
using namespace std;
int n,m;
int sid=0,c[N<<2];
LL sm[N<<2],add[N<<2];
void pd(int x,int l,int r){
    add[ls]+=add[x];
    add[rs]+=add[x];
    sm[x]+=add[x]*(r-l+1);
    c[ls]=c[rs]=c[x];
    c[x]=0;
    add[x]=0;
}
void pu(int x,int l,int r){
    int md=(l+r)>>1;
    if(c[ls]==c[rs])c[x]=c[ls];
    sm[x]=sm[ls]+sm[rs]+add[ls]*(md-l+1)+add[rs]*(r-md);
}
void sged(int x,int l,int r,int L,int R,int v){
    int md=(l+r)>>1;
    if(L<=l&&r<=R && c[x]){
        add[x]+=abs(c[x]-v);
        c[x]=v;
        return;
    }
    if(c[x])pd(x,l,r);
    if(L<=md)sged(ls,l,md,L,R,v);
    if(R>md)sged(rs,md+1,r,L,R,v);
    pu(x,l,r);
}
void bt(int x,int l,int r){
    if(l==r){
        sm[x]=add[x]=0;
        c[x]=l;
        return;
    }
    c[x]=sm[x]=add[x]=0;
    int md=l+r>>1;
    bt(ls,l,md);
    bt(rs,md+1,r);
    pu(x,l,r);
}
LL sgqy(int x,int l,int r,int L,int R){
    int md=(l+r)>>1;
    if(L<=l && r<=R)return sm[x]+add[x]*(r-l+1);
    else{
        LL s=0;
        if(c[x])pd(x,l,r);
        if(L<=md)s+=sgqy(ls,l,md,L,R);
        if(R>md)s+=sgqy(rs,md+1,r,L,R);
        return s;
    }
}
int main(){
    while(~scanf("%d%d",&n,&m)){
        bt(1,1,n);
        while(m--){
            int u,v,w,op;
            scanf("%d%d%d",&op,&u,&v);
            if(op==1){
                scanf("%d",&w);
                sged(1,1,n,u,v,w);
            }else if(op==2){
                printf("%I64d\n",sgqy(1,1,n,u,v));
            }
        }
    }
    return 0;
}
