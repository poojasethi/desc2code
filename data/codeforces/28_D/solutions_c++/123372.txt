#include<iostream>
#include<cstdio>
#include<vector>
#include<cstring>
#include<map>

using namespace std;

struct P
{
	int v,c,l,r;
}p[100000];

int n;
long long mv[100000],fr[100000];

int main()
{
	long long ans = -1,bt = -1;
	memset(mv,-1,sizeof mv);
	memset(fr,-1,sizeof fr);
	scanf("%d",&n);
	map<int,vector<int> > m;
	for(int i=0;i<n;i++)
	{
		scanf("%d%d%d%d",&p[i].v,&p[i].c,&p[i].l,&p[i].r);
		int q = p[i].r;
		m[q].push_back(i);
		
		if (p[i].l==0)
		{
			mv[i] = p[i].v;
			if (p[i].r == 0&&ans<mv[i])
			{
				ans = mv[i];
				bt = i;
			}
		}
		else
		{
			int t = p[i].r+p[i].c;
			for(vector<int>::iterator it = m[t].begin();it!=m[t].end();it++)
			{
				int j = *it;
				if (mv[j]>=0&&p[i].l-p[j].l==p[j].c)
				{
					if (mv[i]<mv[j]+p[i].v)
					{
						mv[i] = mv[j]+p[i].v;
						fr[i] = j;
					}
					if (p[i].r == 0&&ans<mv[i])
					{
						ans = mv[i];
						bt = i;
					}
				}
			}
		}

	}
	if (ans==-1)
	{
		printf("0\n");
		return 0;
	}
	vector<int> s;
	while(bt!=-1)
	{
		s.push_back(bt+1);
		bt = fr[bt];
	}
	int n = s.size();
	printf("%d\n",n);
	for(int i=0;i<n-1;i++) printf("%d ",s[n-i-1]);
	printf("%d\n",s[0]);

	return 0;
}
