#include <map>
#include <cstdio>
#include <vector>

using namespace std;

enum {MAXN = 100100};
const int INF = 1000000007;

int v[MAXN],c[MAXN],l[MAXN],r[MAXN];
int dp[MAXN],pre[MAXN];
int ans[MAXN];

typedef pair<int,int> pii;
map<pii,int> mp;

int main()
{
  int n, m;
 
  scanf("%d", &n);
  fill(pre, pre + n + 1, 0);
  dp[m = 0] = 0;
  for (int i = 1; i <= n; ++i)
    {
      scanf("%d%d%d%d", &v[i], &c[i], &l[i], &r[i]);
      if (l[i] == 0)
	{
	  dp[i] = v[i];
	}
      else if (mp.count(make_pair(l[i] + c[i] + r[i], l[i])) != 0)
	{
	  pre[i] = mp[make_pair(l[i] + c[i] + r[i], l[i])];
	  dp[i] = dp[pre[i]] + v[i];
	}
      else
	{
	  dp[i] = -INF;
	  continue;
	}
      if (r[i] == 0 && dp[i] > dp[m])
	{
	  m = i;
	}
      int& k = mp[make_pair(l[i] + c[i] + r[i], l[i] + c[i])];
      if (k == 0 || dp[k] < dp[i])
	{
	  k = i;
	}
    }

  int cans = 0;
  for(;m != 0;m = pre[m]) ans[cans++] = m;

  printf("%d\n",cans);
  for(;cans--;) printf("%d ",ans[cans]);
  puts("");
  return 0;
}
