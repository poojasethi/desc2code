#include <stdio.h>
#include <cstring>
#include <vector>
using namespace std;

class Data{
	public:
		int v, c, l, r, id;
		Data(int _v=0,int _c=0,int _l=0,int _r=0, int _id=0){
			v=_v;c=_v;l=_l;r=_r;
			id=_id;
		}
		void read(int myid) {
			scanf("%d%d%d%d", &v, &c, &l, &r);
			id = myid;
		}
};
vector<Data> w[300005];
vector<int> sol;
int ans = -1;
int dp[300005], last[300005], lasti[100005];
int u[300005];

void go(int m, vector<Data> &a) {
	dp[0] = 0;
	u[0] = m;
	last[0] = -1;
	for(int i=0;i<(int)a.size();i++) {
		if(u[a[i].l]==m && (u[a[i].l+a[i].c]!=m || dp[a[i].l+a[i].c] < dp[a[i].l]+a[i].v)) {
			lasti[i] = last[a[i].l];
			dp[a[i].l+a[i].c] = dp[a[i].l] + a[i].v;
			last[a[i].l+a[i].c] = i;
			u[a[i].l+a[i].c] = m;
		}
	}
	if(u[m]==m && dp[m]>ans) {
		sol = vector<int>();
		ans = dp[m];
		m = last[m];
		while(m >= 0) {
			sol.push_back(a[m].id);
			m = lasti[m];
		}
	}
}

int main(void) {
	Data t;
	int n, i;
	scanf("%d", &n);
	for(i=0;i<n;i++) {
		t.read(i+1);
		w[t.l+t.c+t.r].push_back(t);
	}
	for(i=1;i<=300000;i++) {
		go(i, w[i]);
	}
	printf("%d\n", sol.size());
	while(!sol.empty()) {
		printf("%d ", sol.back());
		sol.pop_back();
	}
	return 0;
}
