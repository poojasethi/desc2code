#include <cstdio>
#include <map>
using	namespace	std;
typedef	long long	ll;
const	int	maxn = 100000 + 300;
struct	cars
{
	int	v, c, l, r, f, father, num;
	cars()	{}
	cars(int vv, int cc, int ll, int rr, int ff) {v = vv, c = cc, l = ll, r = rr, f = ff;}
	void	read() {scanf("%d%d%d%d", &v, &c, &l, &r);}
	ll	t1() {return (((ll)l+c) << 30) + r;}
	ll	t2() {return (((ll)l) << 30) + r+c;}
}	a[maxn];
map	<ll, cars>	s;
int	o[maxn];
int	ans, n, ansk, lo;
int	main()
{
//	freopen("28d.in", "r", stdin);
//	freopen("28d.out", "w", stdout);
	scanf("%d", &n);
	for (int i=1; i<=n; i++) a[i].read(), a[i].num = i;
	ans = ansk = 0;
	for (int i=1; i<=n; i++)
	{
		if (s.count(a[i].t2())) a[i].f = a[i].v + s[a[i].t2()].f, a[i].father = s[a[i].t2()].num;
		if (!a[i].l) a[i].f = a[i].v;
		if (a[i].f && ((!s.count(a[i].t1())) || s[a[i].t1()].f < a[i].f)) s[a[i].t1()] = a[i];
		if ((!a[i].r) && ans < a[i].f) ans = a[i].f, ansk = i;
	}
	if (!ansk) printf("0\n"); else
	{
		for (int i=ansk; i; i=a[i].father) o[++lo] = i;
		printf("%d\n", lo);
		for (int i=lo; i; i--) printf("%d ", o[i]);
		printf("\n");
	}
	return 0;
}