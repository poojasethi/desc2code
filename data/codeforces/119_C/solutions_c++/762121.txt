#include <cstdio>
#include <iostream>

using namespace std;


long long D[61][61][121];
int pi[61][61][121], pt[61][61][121];

long long a[60], b[60];
int c[60], d[60], e[60];

long long a1[60], a2[60];

int main () {
  int n, m, k;
  cin >> n >> m >> k;
  for (int i = 0; i < m; i++) {
    cin >> a[i] >> b[i] >> c[i];
    d[i] = i + 1;
  }

  long long mx = 0;
  int mi = -1, mt = -1;

  for (int i = 0; i < m; i++) {
    for (int j = i + 1; j < m; j++)
      if (c[j] < c[i]) {
	long long tmp;
	tmp = a[i]; a[i] = a[j]; a[j] = tmp;
	tmp = b[i]; b[i] = b[j]; b[j] = tmp;
	tmp = c[i]; c[i] = c[j]; c[j] = tmp;
	tmp = d[i]; d[i] = d[j]; d[j] = tmp;
      }
    e[i] = b[i] - a[i];
  }


  for (int i = 0; i < m; i++)
    for (int j = 1; j <= n; j++)
      for (int t = 0; t <= e[i]; t++) {
	long long val = a[i] + t;
	if (j == 1) D[i][j][t] = val; else {
	  long long val1 = val - k;
	  long long val2 = -1;
	  if (val % k == 0) val2 = val / k;
	  for (int z = 0; z < i; z++)
	    if (c[z] < c[i]) {
	      if (a[z] <= val1 && val1 <= b[z]) {
		int y = val1 - a[z];
		if (D[z][j - 1][y] && D[z][j - 1][y] + val > D[i][j][t]) {
		  D[i][j][t] = D[z][j - 1][y] + val;
		  pi[i][j][t] = z;
		  pt[i][j][t] = y;
		}
	      }
	      if (a[z] <= val2 && val2 <= b[z]) {
		int y = val2 - a[z];
		if (D[z][j - 1][y] && D[z][j - 1][y] + val > D[i][j][t]) {
		  D[i][j][t] = D[z][j - 1][y] + val;
		  pi[i][j][t] = z;
		  pt[i][j][t] = y;
		}
	      }
	    }
	}
	if (j == n && D[i][j][t] > mx) {
	  mx = D[i][j][t];
	  mi = i;
	  mt = t;
	}
      }

  //cerr << mx << endl;
  //cerr << e[4] << D[4][4][39] << endl;

  if (!mx) cout << "NO" << endl; else {
    int i = mi, j = n, t = mt;
    while (j) {
      a1[j - 1] = d[i];
      a2[j - 1] = a[i] + t;
      int ni = pi[i][j][t];
      int nt = pt[i][j][t];
      i = ni; t = nt; j--;
    }
    cout << "YES" << endl;
    for (int j = 0; j < n; j++)
      cout << a1[j] << " " << a2[j] << endl;
  }


  return 0;
}
