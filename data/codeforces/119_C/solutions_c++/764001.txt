//YA HAGH


#include<iostream>
using namespace std;
const int MN=110;
typedef long long ll;
ll d[MN/2][MN/2][MN];
bool mark[MN/2][MN/2][MN];
ll d2[MN/2][MN/2][MN];
ll p[MN/2][MN/2][MN];
ll lm[MN][3],n,m,k;
ll inf=1000000000;
ll memz(ll nd,ll ns,ll ts){
	if(mark[nd][ns][ts]){
		return d[nd][ns][ts];
	}else{
		if(nd==n-1){
			return lm[ns][0]+ts;
		}
		mark[nd][ns][ts]=1;
		ll Max=-inf;
		ll pr=-1;
		ll TS=-1;;
		ll l=lm[ns][0];
		for(ll i=0;i<m;i++){
			if(lm[i][2]>lm[ns][2]){
				ll nts=l+ts+k;
				if(lm[i][0]<=nts&&nts<=lm[i][1]){
					if(Max<memz(nd+1,i,nts-lm[i][0])){
						
						Max=memz(nd+1,i,nts-lm[i][0]);
						pr=i;
						TS=nts-lm[i][0];
					}
				}
				nts=(l+ts)*k;
				if(lm[i][0]<=nts&&nts<=lm[i][1]){
					if(Max<memz(nd+1,i,nts-lm[i][0])){
						
						Max=memz(nd+1,i,nts-lm[i][0]);
						pr=i;
						TS=nts-lm[i][0];
					}
				}
			}
		}
		Max+=ts+l;
		p[nd][ns][ts]=pr;
		d[nd][ns][ts]=Max;
		d2[nd][ns][ts]=TS;
		return Max;
	}
}
ll memz2(ll nd,ll ns,ll ts){
	cout<<ns+1<<" "<<lm[ns][0]+ts<<endl;	
	if(nd==n-1){
		return 0;
	}	
	memz2(nd+1,p[nd][ns][ts],d2[nd][ns][ts]);
}
int main(){
	inf*=1000000000;
	cin>>n>>m>>k;
	for(ll i=0;i<m;i++){
		ll a,b,c;
		cin>>a>>b>>c;
		lm[i][0]=a;
		lm[i][1]=b;
		lm[i][2]=c;
	}
	ll Max=0;
	ll p,TS;
	for(ll i=0;i<m;i++){
		ll d=lm[i][1]-lm[i][0];
		for(ll ts=0;ts<=d;ts++){
			if(memz(0,i,ts)>Max){
				Max=memz(0,i,ts);
				p=i;
				TS=ts;
			}
		}
	}
	if(Max==0){
		cout<<"NO"<<endl;
	}else{
		cout<<"YES"<<endl;
		memz2(0,p,TS);
	}
}

