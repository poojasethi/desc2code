#include <list>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <cfloat>



using namespace std;
 
const int oo = 0x3f3f3f3f;
const double eps = 1e-9;

typedef long long ll;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int, int> pii;
 
#define sz(c) int((c).size())
#define all(c) (c).begin(), (c).end()
#define FOR(i,a,b) for (int i = (a); i < (b); i++)
#define FORD(i,a,b) for (int i = int(b)-1; i >= (a); i--)
#define FORIT(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
ll a[55],b[55];
int c[55];
int dif[55];
ll sum[55][120][55];
int last[55][120][55];
int lastc[55][120][55];
void printout(int n,int p, int N){
	cout << "YES\n";
	stack<pii > st = stack<pii >();
	FORD(i,1,N){
		st.push(pii(n,p));
		int j = last[n][p][i];
		p = lastc[n][p][i];
		n = j;
	}
	st.push(pii(n,p));
	while(!st.empty()){
		pii nn = st.top();
		st.pop();
		cout << (nn.first + 1) << " "<< (nn.second + a[nn.first]) << endl;
	}
}
int main(){
	int N,M,K;
	cin >> N >> M >> K;
	FOR(i,0,M)cin >> a[i] >> b[i] >> c[i];
	FOR(i,0,M)dif[i] = b[i] - a[i] + 1;
	set<int> difi = set<int>();
	FOR(i,0,M)difi.insert(c[i]);
	memset(sum,-1,sizeof(sum));
	FOR(i,0,M)FOR(j,0,dif[i])sum[i][j][0] = a[i]+j;
	FOR(d,0,N-1)FORIT(it,difi){
		int cdif = *it;
		FOR(i,0,M)if(cdif == c[i]){
			FOR(p,0,dif[i])if(sum[i][p][d]!=-1){
				ll to[2] = {a[i]+p+K,(a[i]+p) * K};
				FOR(j,0,M)if(c[j] > cdif){
					FOR(k,0,2){
						if(a[j]<=to[k] && b[j] >=to[k]){
							int pp = to[k] - a[j];
							ll nv = to[k]+sum[i][p][d];
							if(nv > sum[j][pp][d+1]){
								sum[j][pp][d+1] = nv;
								last[j][pp][d+1] = i;
								lastc[j][pp][d+1] = p;
							}
						}
					}
				}
			}
		}
	}
	int n = 0, p = 0;
	FOR(i,0,M)FOR(j,0,dif[i])if(sum[i][j][N-1] > sum[n][p][N-1]){
		n = i; p = j;
	}
	if(sum[n][p][N-1] == -1)cout << "NO\n";
	else printout(n,p,N);
	return 0;
}