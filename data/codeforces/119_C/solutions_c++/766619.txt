#include<stdio.h>
#include<string.h>
#include<math.h>
#include<ctype.h>
#include<stdlib.h>
#include<iostream>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<stack>

using namespace std;

typedef long long LL;
typedef vector<int> VI;
typedef vector<string> VS;
typedef pair<int,int> II;
typedef vector<II> VII;
typedef vector<VII> VVII;
typedef vector<VI> VVI;

#define INF 2000000000
#define INFLL (1LL<<62)
#define FI first
#define SE second
#define PB push_back
#define SS ({int x;scanf("%d", &x);x;})
#define SSL ({LL x;scanf("%lld", &x);x;})

LL dp[60][110][60];
II chose[60][110][60];
vector<pair<II,pair<LL,LL> > > pp; 
int n,m,k;
LL solve(int i, int d, int rem)
{
	if(i>=m-1 || rem==0)
		return 0;
	if(dp[i][d][rem]!=-1)
		return dp[i][d][rem];
	int j;
	LL mx=0,px=pp[i].SE.FI+d;
	II bestp;
	for(j=i+1;j<m;j++)
	{
		if(pp[i].FI.FI<pp[j].FI.FI)
		{
			if(px+k>=pp[j].SE.FI && px+k<=pp[j].SE.SE)
			{
				LL cur=px+k+solve(j,px+k-pp[j].SE.FI,rem-1);
				if(mx<cur && (cur>px+k || rem==1))
				{
					mx=cur;
					bestp=II(j,px+k-pp[j].SE.FI);
				}
			}
			if(px*k>=pp[j].SE.FI && px*k<=pp[j].SE.SE)
			{
				LL cur=px*k+solve(j,px*k-pp[j].SE.FI,rem-1);
				if(mx<cur && (cur>px*k || rem==1))
				{
					mx=cur;
					bestp=II(j,px*k-pp[j].SE.FI);
				}
			}
		}
	}
	dp[i][d][rem]=mx;
	chose[i][d][rem]=bestp;
	return mx;
}

int main()
{
	LL i,a,b,c;
	cin>>n>>m>>k;
	for(i=0;i<m;i++)
	{
		cin>>a>>b>>c;
		pp.PB(pair<II,pair<LL,LL> >(II(c,i+1),pair<LL,LL>(a,b)));
	}
	sort(pp.begin(),pp.end());
	memset(dp,-1,sizeof(dp));
	LL mx=0, x, bx;
	int start;
	for(i=0;i<m;i++)
	{
		for(x=pp[i].SE.FI;x<=pp[i].SE.SE;x++)
		{
			LL cur=x+solve(i,x-pp[i].SE.FI,n-1);
			if(mx<cur && (cur>x || n==1))
			{
				mx=cur;
				bx=x-pp[i].SE.FI;
				start=i;
			}
		}
	}
	if(mx==0)
		cout<<"NO";
	else
	{
		cout<<"YES\n";
		for(i=0;i<n;i++)
		{
			cout<<pp[start].FI.SE<<" "<<bx+pp[start].SE.FI<<"\n";
			II ss=chose[start][bx][n-i-1];
			start=ss.FI;
			bx=ss.SE;
		}
	}
	return 0;
}

