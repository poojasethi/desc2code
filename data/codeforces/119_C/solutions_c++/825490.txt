#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>

using namespace std;

typedef long long ll;
typedef pair <ll,ll> pll;
const int MAX=110;
struct subj
{
	ll a, b, c;
	int id;
}a[MAX];

bool cmp (subj x ,subj y)
{
	return x.c < y.c;
}

ll n, m, k;
ll memz[MAX][MAX][MAX];
int W[MAX][MAX][MAX];

ll Memz(int r,int s,int q) 
{
	if (r==n-1)
	{
		W[r][s][q] = 0;
		return 0;
	}
	ll &res=memz[r][s][q];
	if (res!=-1)
		return res;
	res=0;
	W[r][s][q] =-1;
	for (int j=0;j<2;++j)
	{
		ll next=(j == 0 ? (a[s].a + q) + k : (a[s].a + q) * k);
		
		for(int i=s+1;i<m;i++) 
		{
			if(a[i].c == a[s].c || a[i].a > next || a[i].b < next )   
				continue;
			ll inx = next + Memz( r + 1, i, next - a[i].a );
			if(W[r + 1][i][next - a[i].a] != -1 && inx > res) 
				res = inx, W[r][s][q] = j;
		}
	}
	return res;
}

int main()
{
	cin >> n >> m >> k;
	for (int i=0;i<m;++i)
	{
		cin >> a[i].a >> a[i].b >> a[i].c;
		a[i].id = i;
	}
	sort(a,a+m,cmp);
	ll Ans,X,Y;
	Ans=X=Y=0;

	memset (memz,-1,sizeof memz);
	memset (W,-1,sizeof W);

	for (int i=0;i<m;++i)
	{
		for (ll j=a[i].a;j<=a[i].b;++j)
		{
			ll inx= j + Memz(0, i, j - a[i].a);
			if( W[0][i][j - a[i].a] != -1 && inx > Ans ) 
				Ans = inx, X = i, Y = j;
		}
	}

	if(!Ans)
	{
		cout << "NO" << endl;
		return 0;
	}

	cout << "YES" << endl;
	for( int i=0;i<n;++i) 
	{
		cout << a[X].id + 1 << ' ' << Y << endl;
		if( W[i][X][Y - a[X].a] == 0 )
			Y=Y+k;
		else   
			Y=Y*k;

		for (int j=X+1;j<m;++j)
		{
			if( a[j].c > a[X].c && Y >= a[j].a && Y <= a[j].b )
			{
				X = j;
				break;
			}
		}
	}
	return 0;
}       
