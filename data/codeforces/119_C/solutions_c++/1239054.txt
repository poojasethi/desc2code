#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

typedef long long LL;
LL k;
vector<pair<LL, pair<LL, int> > > v;
int last[15505][55];
LL dp[15505][55];
int main(void) {
	int n, m;
	scanf("%d%d%I64d", &n, &m, &k);
	for(int i=0;i<m;i++) {
		LL a, b, c;
		scanf("%I64d%I64d%I64d", &a, &b, &c);
		for(LL x=a;x<=b;x++)
			v.push_back(make_pair(c, make_pair(x, i+1)));
	}
	sort(v.begin(), v.end());
	memset(dp, -1, sizeof(last));
	for(int i=0;i<(int)v.size();i++) {
		dp[i][0] = v[i].second.first;
		last[i][0] = -1;
		for(int j=0;j<i;j++)
			if(v[j].first < v[i].first &&
				(v[j].second.first+k == v[i].second.first ||
				 (v[j].second.first*k == v[i].second.first
				  && v[j].second.first==v[i].second.first/k))) {
				for(int l=0;l<n && dp[j][l]!=-1;l++) {
					if(dp[i][l+1]==-1 ||
							dp[j][l] + v[i].second.first > dp[i][l+1]) {
						dp[i][l+1] = dp[j][l] + v[i].second.first;
						last[i][l+1] = j;
					}
				}
			}
	}
	LL lrg=-1, x=-1, y=n-1;
	for(int i=0;i<(int)v.size();i++)
		if(dp[i][n-1] > lrg) {
				x=i; lrg=dp[i][n-1];
			}
	if(lrg==-1) {
		puts("NO");
	} else {
		puts("YES");
		vector<pair<int, LL> > ans;
		for(;y>=0;--y) {
			ans.push_back(make_pair(v[x].second.second, v[x].second.first));
			x=last[x][y];
		}
		reverse(ans.begin(), ans.end());
		for(int i=0;i<n;i++)
			printf("%d %I64d\n", ans[i].first, ans[i].second);
	}
	return 0;
}

