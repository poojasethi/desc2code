//By Lin
#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std; 

int		n,m,kk,from[55][55][105][2];
long long 		dp[55][55][105];;
struct	Subject{
	long long	a,b;
	int	c,num,L;
}data[55];
bool	cmp( Subject a , Subject b ) {
	return a.c < b.c; 
}
bool	check(long long  &a , long long b )
{
	if ( b > a ) { a = b;  return true; }
	return false; 
}
void	writ(int i ,int j ,int k )
{
	if  ( i == 0 ) return; 
	writ( i-1 , from[i][j][k][0] , from[i][j][k][1] );
	printf("%d %I64d\n" , data[j].num , data[j].a + k );
}

int main()
{
	scanf("%d%d%d" , &n ,&m ,&kk );
	for (int i = 0; i<m; i++)
	{
		scanf("%I64d%I64d%d" , &data[i].a , &data[i].b , &data[i].c );
		data[i].num = i+1; 
		data[i].L = data[i].b - data[i].a; 
	}
	sort( data , data+m , cmp );
	for (int i = 1; i<=n; i++)
		for (int j = 0; j<m; j++)
			for (int k = 0; k<=data[j].L; k++)
			{
				long long  today = data[j].a + k; 
				if ( i == 1 ) dp[i][j][k] = today; 
				else
				{
					for (int t = 0; t<j; t++)
					{
						if ( data[t].c == data[j].c ) break;
						long long 	w = data[j].a + k - kk - data[t].a; 
						if ( w >= 0 && w <= data[t].L && dp[i-1][t][w] &&  check(dp[i][j][k],dp[i-1][t][w]+today) ){
							from[i][j][k][0] = t; 
							from[i][j][k][1] = (int)w; 
						}
						w = data[j].a + k; 
						if ( w%kk != 0 ) continue; 
						w = w/kk - data[t].a; 
						if ( w >= 0 && w <= data[t].L && dp[i-1][t][w] && check(dp[i][j][k],dp[i-1][t][w]+today) ){
							from[i][j][k][0] = t; 
							from[i][j][k][1] = (int)w; 
						}
					}
				}
			}
	int	g = -1 , h = -1; 
	long long ans = 0; 
	for ( int j = 0; j<m; j++)
		for (int k = 0; k<=data[j].L; k++)
			if ( dp[n][j][k]>ans ) {
				ans = dp[n][j][k];
				g = j; 
				h = k; 
			}
	if ( g == -1 ) printf("NO\n"); 
	else 
	{
		printf("YES\n"); 
		writ( n , g , h );
	}
	return 0;
}
