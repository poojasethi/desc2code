#include<stdio.h>
#include<iostream>
#include<cstring>
using namespace std;


const char road[1000]="C:\\data\\";
char roadnum[1000]="";
char roadin[1000]="";
char roadout[1000]="";


void writeIntoFile(char num[]){
    strcpy(roadnum,num);
	strcpy(roadin,road);
	strcat(roadin,roadnum);
	strcat(roadin,".");
	strcpy(roadout,roadin);
	strcat(roadin,"in");
	strcat(roadout,"out_b");
	//puts(roadin);
	//puts(roadout);
	freopen(roadin,"r",stdin);
	freopen(roadout,"w",stdout);
}

void solve();
void solveM(){
    char ch[50];

    for(int i=1;i<=30;i++){
        sprintf(ch,"%d",i);
        writeIntoFile(ch);
        solve();
    }
}

typedef long long ll;
int n,m,k;
ll a[60],b[60];
int c[100];
ll mem[60][60][110];
ll nxt[60][60][110],nxta[60][60][110];
ll dp(int i,int cnt,ll amt) {
	if(amt<a[i] || amt>b[i]) return -2;
	if(cnt==1) return amt;
	int nrm=amt-a[i];
	if(mem[i][cnt][nrm]!=-1) {
		return mem[i][cnt][nrm];
	}
	ll mx=-2,t;
	for(int j=0;j<m;j++) {
		if(c[j]>c[i]) {
			t=dp(j,cnt-1,amt+k);
			if(t>mx) {
				mx=t;
				nxt[i][cnt][nrm]=j;
				nxta[i][cnt][nrm]=amt+k;
			}
			t=dp(j,cnt-1,amt*k);
			if(t>mx) {
				mx=t;
				nxt[i][cnt][nrm]=j;
				nxta[i][cnt][nrm]=amt*k;
			}
		}
	}
	if(mx!=-2) {
		mx+=amt;
	}
	return mem[i][cnt][nrm]=mx;
}

void solve(){
    memset(mem,-1,sizeof(mem));
	cin>>n>>m>>k;
	for(int i=0;i<m;i++) {
		cin>>a[i]>>b[i]>>c[i];
	}
	ll mx=-2,mxi,mxa;
	for(int i=0;i<m;i++) {
		for(ll f=a[i];f<=b[i];f++) {
			ll t=dp(i,n,f);
			if(t>mx) {
				mx=t;
				mxi=i;
				mxa=f;
			}
		}
	}
	if(mx==-2) {
		cout<<"NO"<<endl;
		return ;
	}
	cout<<"YES"<<endl;
	//cout<<mx<<endl;
	for(int i=n;i;i--) {
		cout<<mxi+1<<' '<<mxa<<endl;
		ll ti=nxt[mxi][i][mxa-a[mxi]],ta=nxta[mxi][i][mxa-a[mxi]];
		mxi=ti;
		mxa=ta;
	}
}

int main() {
    solve();
    return 0;
}

 		 			 			  				 	     			   	