#include<cstdio>
#include<cmath>
#include<iomanip>
#include<cstring>
#include<cstdlib>
#include<ctime>
#include<iostream>
#include<algorithm>
#include<vector>
#include<list>
#include<stack>
#include<queue>
#include<deque>
#include<set>
#include<map>
#include<string>
#include<bitset>
#include<functional>

using namespace std;

struct arr
{
	long long C,lab;
	long long A,B;
} a[55];

long long typ[55][55][110],las[55][55][110],n,m,K;
long long f[55][55][110],upd,nxt;

bool comp(arr a,arr b)
{
	return a.C<b.C;
}

void output(long long A,long long B,long long C)
{
	if (!B) return;
	long long nC=C+a[A].A;
	if (typ[A][B][C]==1) nC-=K; else nC/=K;
	output(las[A][B][C],B-1,nC-a[las[A][B][C]].A);
	cout<<a[A].lab<<' '<<a[A].A+C<<endl;
}

int main()
{
	//freopen("c.in","r",stdin);
	
	cin>>n>>m>>K;
	for(long long i=1;i<=m;i++)
	{
		cin>>a[i].A>>a[i].B>>a[i].C;
		a[i].lab=i;
	}
	sort(a+1,a+m+1,comp);
	memset(f,-1,sizeof f);
	for(long long i=1;i<=m;i++)
		for(long long j=1;j<=i&&j<=n;j++)
			for(long long k=0;k<=a[i].B-a[i].A;k++)
			{
				if (j==1)
				{
					f[i][j][k]=a[i].A+k;
					continue;
				}
				for(long long p=1;p<i;p++) if (a[p].C<a[i].C)
				{
					nxt=a[i].A+k-K;
					if (nxt>=a[p].A&&nxt<=a[p].B&&f[p][j-1][nxt-a[p].A]!=-1)
					{
						upd=f[p][j-1][nxt-a[p].A]+a[i].A+k;
						if (upd>f[i][j][k])
						{
							f[i][j][k]=upd;
							las[i][j][k]=p; typ[i][j][k]=1;
						}
					}
					if ((a[i].A+k)%K==0)
					{
						nxt=(a[i].A+k)/K;
						if (nxt>=a[p].A&&nxt<=a[p].B&&f[p][j-1][nxt-a[p].A]!=-1)
						{
							upd=f[p][j-1][nxt-a[p].A]+a[i].A+k;
							if (upd>f[i][j][k])
							{
								f[i][j][k]=upd;
								las[i][j][k]=p; typ[i][j][k]=2;
							}
						}
					}
				}
			}
	long long rec=-1;
	long long rA,rC;
	for(long long i=n;i<=m;i++)
		for(long long k=0;k<=a[i].B-a[i].A;k++)
			if (f[i][n][k]>rec)
			{
				rec=f[i][n][k];
				rA=i; rC=k;
			}
	if (rec<0)
	{
		cout<<"NO"<<endl;
		return 0;
	}
	cout<<"YES"<<endl;
	output(rA,n,rC);
	
	return 0;
}

