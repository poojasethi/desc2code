#include<iostream>
#include<cstdio>
#include<vector>
using namespace std;

long long d[50][50][101], koef;
int p[50][50][101];
long long a[50], b[50];
int c[50];
int main()
{
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);

	for(int i = 0; i < 50; ++i)
		for(int j = 0; j < 50; ++j)
			for(int k = 0; k < 101; ++k)
				p[i][j][k] = -1;
	int n, m;
	cin >> n >> m >> koef;
	for(int i = 0; i < m; ++i)
		cin >> a[i] >> b[i] >> c[i];
	for(int i = 0; i < m; ++i)
		for(long long j = 0; j <= b[i] - a[i]; ++j)
			d[0][i][j] = a[i] + j;
	for(int i = 1; i < n; ++i)
		for(int j = 0; j < m; ++j)
			for(long long k = 0; k <= b[j] - a[j]; ++k)
				for(int jj = 0; jj < m; ++jj)
				{
					if(c[jj] >= c[j]) continue;
					long long nu = a[j]+k, lu;
					lu = nu-koef;
					if(lu >= a[jj] && lu <= b[jj] && d[i-1][jj][lu-a[jj]] > 0 && d[i][j][k] < d[i-1][jj][lu-a[jj]]+nu)
					{
						d[i][j][k] = d[i-1][jj][lu-a[jj]]+nu;
						p[i][j][k] = jj;
					}
					if(nu%koef != 0) continue;
					lu = nu/koef;
					if(lu >= a[jj] && lu <= b[jj] && d[i-1][jj][lu-a[jj]] > 0 && d[i][j][k] < d[i-1][jj][lu-a[jj]]+nu)
					{
						d[i][j][k] = d[i-1][jj][lu-a[jj]]+nu;
						p[i][j][k] = 100+jj;
					}
				}
	long long bans = -1, bk, tbk;
	int bj;
	for(int i = 0; i < m; ++i)
		for(long long k = 0; k <= b[i]-a[i]; ++k)
			if(d[n - 1][i][k] > bans && d[n - 1][i][k] > 0)
				bans = d[n - 1][i][k], bj = i, bk = k;
	if(bans == -1)
		cout << "NO";
	else
	{
		cout << "YES" << endl;
		vector<pair<int, long long> > ans;
		for(int i = n - 1; i >= 0; --i)
		{
			ans.push_back(make_pair(bj + 1, a[bj] + bk));
			if(i == 0) break;
			if(p[i][bj][bk] >= 100)
			{
				tbk = (bk + a[bj])/koef - a[p[i][bj][bk]-100];
				bj = p[i][bj][bk] - 100;
				bk = tbk;
			}
			else
			{
				tbk = (bk + a[bj]) - koef - a[p[i][bj][bk]];
				bj = p[i][bj][bk];
				bk = tbk;
			}
		}
		for(int i = n - 1; i >= 0; --i)
			cout << ans[i].first << ' ' << ans[i].second << endl;
	}
	return 0;
}