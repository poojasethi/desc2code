#!/usr/bin/env python

def make(n, d, l):
	card = []
	while abs(d) > (l - 1):
		if d > 0:
			card.append(l)
			card.append(1)
			d -= l - 1
		else:
			card.append(1)
			card.append(l)
			d += l - 1
	if d > 0:
		card.append(1 + d)
		card.append(1)
	elif d < 0:
		card.append(1)
		card.append(1 + abs(d))
	return card

(n, d, l) = [int(i) for i in raw_input().split()]

if l == 1:
	if n % 2 == 0 and d == 0:
		print ' '.join(['1'] * n)
	elif n % 2 == 1 and d == 1:
		print ' '.join(['1'] * n)
	else:
		print -1
else:
	if n % 2 == 0:
		card = make(n, d, l)
		if len(card) > n:
			print -1
		else:
			if len(card) == 0:
				card.append(1)
			while len(card) < n:
				card.append(card[-1])
			print ' '.join([str(i) for i in card])
	else:
		card = [1] + make(n, 1 - d, l)
		if len(card) > n:
			card = [l] + make(n, l - d, l)
			if len(card) > n:
				print -1
			else:
				if len(card) == 0:
					card.append(1)
				while len(card) < n:
					card.append(card[-1])
				print ' '.join([str(i) for i in card])
		else:
			if len(card) == 0:
				card.append(1)
			while len(card) < n:
				card.append(card[-1])
			print ' '.join([str(i) for i in card])
