def nums():
    return map(int, raw_input().split())

n, d, l = nums()

def solve(n, d, l):
    if l == 1:
        if d == 1 and n % 2:
            return [1] * n
        return []
    if n % 2 == 0:
        r = abs(d) / (l - 1)
        p = abs(d) % (l - 1)
        if d == 0:
            return fill([], n)
        elif d > 0:
            if p > 0:
                return fill([l, 1] * r + [p + 1, 1], n)
            else:
                return fill([l, 1] * r, n)
        elif d < 0:
            if p > 0:
                return fill([1, l] * r + [1, p + 1], n)
            else:
                return fill([1, l] * r, n)
    else:
        if 1 <= d <= l:
            return fill([d], n)
        for p in xrange(1, l+1):
            q = solve(n - 1, d - p, l)
            if q: return q + [p]
    return []

def fill(a, n):
    if len(a) > n or (len(a) - n) % 2:
        return []
    return a + [1] * (n - (len(a)))

ans = solve(n, d, l)
if ans:
    print ' '.join(map(str, ans))
else:
    print -1
