//In the name of Allah
//
//
//////////////////////
// Program:
// Written By Alireza Farhadi (LGM)
//////////////////////
#include <iostream>
#include <algorithm>
#include <deque>
#include <utility>
#include <vector>

using namespace std;

#define endl '\n'
#define sz(x) ((int((x).size())))

typedef long long ll;
typedef pair<int,int> pie;
typedef pair<ll,pie> tp;

const int MN=1000+10;
int d1[MN][MN],d2[MN][MN];
ll sum[MN][MN];
int mark[MN][MN];
int map[MN][MN];
int a,b,n,m;
deque <pie> me;
vector <tp> res;
vector <tp> mn;
ll sf(int x,int y)
{
	x+=(a-1);
	y+=(b-1);
	ll res=sum[x][y];
	if (x>=a)
		res-=sum[x-a][y];
	if (y>=b)
		res-=sum[x][y-b];
	if (x>=a && y>=b)
		res+=sum[x-a][y-b];
	return res;
}
int main(int argc,char * argv[])
{
	ios_base::sync_with_stdio(false);
	cin>>n>>m>>a>>b;
	for (int i=0;i<n;i++)
		for (int j=0;j<m;j++)
			cin>>map[i][j];
	for (int i=0;i<n;i++)
	{
		ll now=0;
		for (int j=0;j<m;j++)
		{
			now+=map[i][j];
			if (i>0)
				sum[i][j]=now+sum[i-1][j];
			else
				sum[i][j]=now;
		}
	}
	for (int i=0;i<n;i++)
	{
		me.clear();
		for (int j=0;j<m;j++)
		{
			pie t=pie(map[i][j],j);
			while (!me.empty() && me.back().first>t.first)
				me.pop_back();
			me.push_back(t);
			if (j>=b && me.front().second==j-b)
				me.pop_front();
			if (j>=b-1)
				d1[i][j-b+1]=me.front().first;
		}
	}

	for (int j=0;j<m;j++)
	{
		me.clear();
		for (int i=0;i<n;i++)
		{
			pie t=pie(d1[i][j],i);
			while (!me.empty() && me.back().first>t.first)
				me.pop_back();
			me.push_back(t);
			if (i>=a && me.front().second==i-a)
				me.pop_front();
			if (i>=a-1)
				d2[i-a+1][j]=me.front().first;
		}
	}
	for (int i=0;i<=n-a;i++)
		for (int j=0;j<=m-b;j++)
			mn.push_back(tp(sf(i,j)-ll(a)*b*d2[i][j],pie(i,j)));
	sort(mn.begin(),mn.end());
	for (int t=0;t<sz(mn);t++)
	{
		tp now=mn[t];
		int x=now.second.first,y=now.second.second;
		if (mark[x][y])
			continue;
		res.push_back(now);
		for (int i=(x+a-1);i>=x-a+1 && i>=0;i--) for (int j=(y+b-1);j>=y-b+1 && j>=0;j--)
			mark[i][j]=1;
	}
	cout<<sz(res)<<endl;
	for (int i=0;i<sz(res);i++)
		cout<<res[i].second.first+1<<" "<<res[i].second.second+1<<" "<<res[i].first<<endl;
	return 0;
}
