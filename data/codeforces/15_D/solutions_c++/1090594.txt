//In the name of Allah
//
//
//////////////////////
// Program: 
// Written By Alireza Farhadi (LGM)
//////////////////////
#include <cstdio>
#include <vector>
#include <utility>
#include <algorithm>
#include <set>
using namespace std;
#if ( _WIN32 || __WIN32__ )
    #define LLD "%I64d"
#else
    #define LLD "%lld"
#endif

typedef long long ll;
typedef pair<int,int> pie;
typedef pair<ll,pie> tp;

const int MN=1000+10;
int d1[MN][MN],d2[MN][MN];
ll sum[MN][MN];
int mark[MN][MN];
int map[MN][MN];
int a,b,n,m;
set <pie> me;
vector <tp> res;
vector <tp> mn;
ll sf(int x,int y)
{
	x+=(a-1);
	y+=(b-1);
	ll res=sum[x][y];
	if (x>=a)
		res-=sum[x-a][y];
	if (y>=b)
		res-=sum[x][y-b];
	if (x>=a && y>=b)
		res+=sum[x-a][y-b];
	return res;
}
int main(int argc,char * argv[])
{
	scanf("%d %d %d %d",&n,&m,&a,&b);
	for (int i=0;i<n;i++)
		for (int j=0;j<m;j++)
			scanf("%d",&map[i][j]);
	for (int i=0;i<n;i++)
	{
		ll now=0;
		for (int j=0;j<m;j++)
		{
			now+=map[i][j];
			if (i>0)
				sum[i][j]=now+sum[i-1][j];
			else
				sum[i][j]=now;
		}
	}
	for (int i=0;i<n;i++)
	{
		me.clear();
		for (int j=0;j<m;j++)
		{
			me.insert(pie(map[i][j],j));
			if (j>=b)
				me.erase(pie(map[i][j-b],j-b));
			if (j>=b-1)
				d1[i][j-b+1]=me.begin()->first;
		}
	}

	for (int j=0;j<m;j++)
	{
		me.clear();
		for (int i=0;i<n;i++)
		{
			me.insert(pie(d1[i][j],i));
			if (i>=a)
				me.erase(pie(d1[i-a][j],i-a));
			if (i>=a-1)
				d2[i-a+1][j]=me.begin()->first;
		}
	}
	for (int i=0;i<=n-a;i++)
		for (int j=0;j<=m-b;j++)
			mn.push_back(tp(sf(i,j)-ll(a)*b*d2[i][j],pie(i,j)));
	sort(mn.begin(),mn.end());
	for (int t=0;t<mn.size();t++)
	{
		tp now=mn[t];
		int x=now.second.first,y=now.second.second;
		if (mark[x][y])
			continue;
		res.push_back(now);
		for (int i=(x+a-1);i>=x-a+1;i--) for (int j=(y+b-1);j>=y-b+1;j--) if (i>=0 && j>=0)
			mark[i][j]=1;
	}
	printf("%d\n",int(res.size()));
	for (int i=0;i<res.size();i++)
	{
		printf("%d %d ",res[i].second.first+1,res[i].second.second+1);
		printf(LLD,res[i].first);
		printf("\n");
	}
	return 0;
}
