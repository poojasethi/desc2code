#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
const int N = 1005;
#define mp(x,y) make_pair(x,y)
typedef __int64 ll;
typedef pair<int,int> per;
typedef pair<ll,per> pie;
int a[N][N],b[N][N],q[N];
ll sum[N][N];
bool u[N][N],ok[N*N];
pie data[N*N];
int read()
{
    int v=0;
    char c;
    while((c=getchar())<'0'||c>'9');
    while(c>='0'&&c<='9'){v=v*10+c-'0';c=getchar();}
    return v;
}
int main()
{
    int m,n,r,c,t,w,i,j,h,k=0;
    scanf("%d%d%d%d",&m,&n,&r,&c);
    for(i=1;i<=m;i++)
    {
        for(j=1;j<=n;j++)
        {
            a[i][j]=read();
            sum[i][j]=sum[i][j-1]+a[i][j];
        }
    }
    for(j=1;j<=n;j++)for(i=1;i<=m;i++)sum[i][j]+=sum[i-1][j];
    for(i=1;i<=m;i++)
    {
        t=0;w=-1;
        for(j=1;j<=n;j++)
        {
            while(t<=w&&a[i][q[w]]>=a[i][j])w--;
            q[++w]=j;
            if(j-q[t]==c)t++;
            b[i][j]=a[i][q[t]];
        }
    }
    for(i=1;i<=n;i++)
    {
        t=0;w=-1;
        for(j=1;j<=m;j++)
        {
            while(t<=w&&b[q[w]][i]>=b[j][i])w--;
            q[++w]=j;
            if(j-q[t]==r)t++;
            if(j>=r&&i>=c)
            {
                int tp=b[q[t]][i];
                data[k].second=mp(j,i);
                data[k++].first=sum[j][i]-sum[j-r][i]-sum[j][i-c]+sum[j-r][i-c]-(ll)r*c*b[q[t]][i];
            }
        }
    }
    sort(data,data+k);
    int cnt=0,rd1,rd2;
    for(i=0;i<k;i++)
    {
        if(u[data[i].second.first][data[i].second.second])continue;
        int x=data[i].second.first,y=data[i].second.second;
        cnt++;
        ok[i]=true;
        rd1=x+r<m+1?x+r:m+1;
        rd2=y+c<n+1?y+c:n+1;
        for(j=x-r+1>0?x-r+1:1;j<rd1;j++)
        {
            for(h=y-c+1>0?y-c+1:1;h<rd2;h++)
                u[j][h]=true;
        }
    }
    printf("%d\n",cnt);
    for(i=0;i<k;i++)if(ok[i])printf("%d %d %I64d\n",data[i].second.first-r+1,data[i].second.second-c+1,data[i].first);
    return 0;
}