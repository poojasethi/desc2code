#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
#include <cstdlib>
using namespace std;

long long n,m;
long long a,b;
long long h[1010][1010];
struct FIRST
{
  int h,l;
  long long s;
  long long sum;
  /*friend bool operator < (const FIRST &A , const FIRST &B)
  {
            if (A.sum != B.sum) return A.sum < B.sum ;
            if (A.h != B.h) return A.h < B.h ;
            return A.l < B.l ;
  }*/
}p[1000010];
long long q[1000010],a1[1010][1010];
bool vis[1010][1010];
int go[1000010];
bool cmp(const FIRST &A,const FIRST &B)
{
  if(A.sum!=B.sum)
    return A.sum<B.sum;
  if(A.h!=B.h)
    return A.h<B.h;
  return A.l<B.l;
}
long long sum[1010][1010];
int main()
{
  while(scanf("%I64d%I64d%I64d%I64d",&n,&m,&a,&b)!=EOF)
  {
    for(int i=1;i<=n;i++)
      for(int j=1;j<=m;j++)
        scanf("%I64d",&h[i][j]);

    for(int i=n;i>=1;i--)
      for(int j=m;j>=1;j--)
        sum[i][j]=sum[i+1][j]+sum[i][j+1]-sum[i+1][j+1]+h[i][j];

    for(int i=1;i<=m;i++)
    {
      int tail=0,head=1;
      for(int j=1;j<=n;j++)
      {
        while(tail>=head && q[head]<=j-a) head++;
        while(tail>=head && h[j][i]<=h[q[tail]][i]) tail--;
        q[++tail]=j;
        if(j>=a)
          a1[j][i]=h[q[head]][i];
      }
    }
    int u=0;
    for(int i=1;i<=n;i++)
    {
      int tail=0,head=1;
      for(int j=1;j<=m;j++)
      {
        while(tail>=head && q[head]<=j-b) head++;
        while(tail>=head && a1[i][j]<=a1[i][q[tail]]) tail--;
        q[++tail]=j;
        if(i>=a && j>=b)
        {
          u++;
          p[u].h=i-a+1;
          p[u].l=j-b+1;
          p[u].sum=sum[i-a+1][j-b+1]-sum[i+1][j-b+1]-sum[i-a+1][j+1]+sum[i+1][j+1]-a1[i][q[head]]*a*b;
        }
      }
    }
    int ans=0;
    int hmax,hmin,lmax,lmin;
    
    sort(p+1,p+1+u,cmp);
    
    for(int i=1;i<=u;i++)
    {
      if(vis[p[i].h][p[i].l])
        continue;
      else
      {
        ans++;
        go[ans]=i;
        hmax=min(n,p[i].h+a-1);
        lmax=min(m,p[i].l+b-1);
        hmin=max(1ll,p[i].h-a+1);
        lmin=max(1ll,p[i].l-b+1);
         for(int h=hmin;h<=hmax;h++)
          for(int lie=lmin;lie<=lmax;lie++)
            vis[h][lie]=true;
      }
    }
    printf("%d\n",ans);
    for(int i=1;i<=ans;i++)
      printf("%d %d %I64d\n",p[go[i]].h,p[go[i]].l,p[go[i]].sum);
  }

  return 0;
}

 		   			   			  	 	 			