#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>

using namespace std;
#define MAXN (1000+100)

typedef long long LL ;
typedef pair<int,int> pr;
typedef pair<LL, pr> prpr;
LL sum[MAXN][MAXN],h[MAXN][MAXN],cost[MAXN][MAXN];
int n,m,a,b;
bool visit[MAXN][MAXN];
LL minH[MAXN][MAXN];
LL q[MAXN];
int f,r,pos[MAXN];
LL getsum(int a,int b,int c,int d){
    return sum[c][d] + sum[a-1][b-1] - sum[a-1][d] - sum[c][b-1] ;
}

int main(){
	scanf("%d%d%d%d",&n,&m,&a,&b);
    for (int i=1;i<=n;i++)
        for (int j=1;j<=m;j++){
            scanf("%I64d",&h[i][j]);
            sum[i][j]=sum[i][j-1]+sum[i-1][j]-sum[i-1][j-1]+h[i][j];
        }
    for (int i=1;i<=n;i++){
        f=r=0;
        for (int j=1;j<=m;j++){
            while (f<r && q[r-1]>=h[i][j]) r--;
            q[r] = h[i][j] ;
            pos[r] = j ;
            r++;
            if (j>=b){
                if (f<r && pos[f] < j-b+1) f++;
                minH[i][j-b+1] = q[f] ;
            }
        }
    }
    for (int j=1;j<=m-b+1;j++){
        f=r=0;
        for (int i=1;i<=n;i++){
            while (f<r && q[r-1]>=minH[i][j]) r-- ;
            q[r] = minH[i][j];
            pos[r] = i ;
            r++ ;
            if (i>=a){
                if (f<r && pos[f] < i-a+1) f++ ;
                cost[i-a+1][j] = q[f] ;
            }
        }
    }

    vector< prpr > block ;
    for (int i=1;i<=n-a+1;i++){
        for (int j=1;j<=m-b+1;j++){
            block.push_back( make_pair((getsum(i,j,i+a-1,j+b-1)-a*b*cost[i][j]) , make_pair(i,j))) ;
        }
    }

    sort(block.begin(),block.end()) ;
    vector< prpr > ans ;
    for(int i=0;i<block.size();i++){
        int xx = block[i].second.first , yy = block[i].second.second ;
        if (visit[xx][yy]) continue ;
        LL ww = block[i].first ;
        visit[xx][yy] = true ;
        ans.push_back(make_pair(ww,make_pair(xx,yy))) ;
        for (int i=max(1,xx-a+1) ; i <= xx+a-1 ; i++)
            for (int j=max(1,yy-b+1) ; j <= yy+b-1 ; j++)
                visit[i][j] = true ;
    }
    printf("%d\n",ans.size());
    for (int i=0;i<ans.size();i++)
        printf("%d %d %I64d\n",ans[i].second.first,ans[i].second.second,ans[i].first) ;
    return 0;
}