#include <iostream>
#include <vector>
#include <cstring>
#include <algorithm>
#include <cstdio>
using namespace std;
#define REP(i,a,b) for(i=a;i<b;i++)

typedef long long LL;

LL sum[1010][1010];
bool oc[1010][1010];
vector< pair< LL , int > > ans,A;
int f[1010][1010][2][2],h[1010][1010];
int a,b;

int getmin(int x,int y,int dx,int dy){
        if (f[x][y][dx][dy]!=-1) return f[x][y][dx][dy];
        int &ret=f[x][y][dx][dy];
        ret=h[x][y];
        if (dx==0&&x%a!=a-1) ret=min(ret,getmin(x+1,y,dx,dy));
        if (dy==0&&y%b!=b-1) ret=min(ret,getmin(x,y+1,dx,dy));
        if (dx==1&&x%a!=0) ret=min(ret,getmin(x-1,y,dx,dy));
        if (dy==1&&y%b!=0) ret=min(ret,getmin(x,y-1,dx,dy));
        return ret;
}

int getmin(int x,int y){
        int ret=int(1e9);
        ret=min(ret,getmin(x,y,0,0));
        ret=min(ret,getmin(x,y+b-1,0,1));
        ret=min(ret,getmin(x+a-1,y,1,0));
        ret=min(ret,getmin(x+a-1,y+b-1,1,1));
        return ret;
}

int main(){
        int n,m,i,j,k;
        scanf("%d%d%d%d",&n,&m,&a,&b);
        REP(i,0,n)REP(j,0,m) scanf("%d",&h[i][j]);
        sum[0][0]=h[0][0];
        REP(i,1,n)sum[i][0]=sum[i-1][0]+h[i][0];
        REP(j,1,m)sum[0][j]=sum[0][j-1]+h[0][j];
        REP(i,1,n)REP(j,1,m) sum[i][j]=sum[i][j-1]+sum[i-1][j]-sum[i-1][j-1]+h[i][j];
        //REP(i,0,n)REP(j,0,m) cout<<i<<' '<<j<<' '<<sum[i][j]<<endl;cout<<endl;

        memset(f,-1,sizeof f);
        REP(i,0,n-a+1)REP(j,0,m-b+1){
                LL tmp=sum[i+a-1][j+b-1];
                //cout<<i<<' '<<j<<' '<<tmp<<' ';
                if (i) tmp-=sum[i-1][j+b-1];//cout<<tmp<<' ';
                if (j) tmp-=sum[i+a-1][j-1];//cout<<tmp<<' ';
                if (i&&j) tmp+=sum[i-1][j-1];//cout<<tmp<<' ';
                tmp-=LL(getmin(i,j))*LL(a)*LL(b);//cout<<tmp<<endl;
                A.push_back(make_pair(tmp,i*m+j));
        }
        sort(A.begin(),A.end());
        memset(oc,0,sizeof oc);
        REP(k,0,A.size()){
                int x=A[k].second/m,y=A[k].second%m;
                if (oc[x][y]) continue;
                ans.push_back(A[k]);
                REP(i,x-a+1,x+a)REP(j,y-b+1,y+b) if(i>=0&&j>=0) oc[i][j]=true;
        }
        cout<<ans.size()<<endl;
        REP(i,0,ans.size()) printf("%d %d %I64d\n",ans[i].second/m+1,ans[i].second%m+1,ans[i].first);
}
