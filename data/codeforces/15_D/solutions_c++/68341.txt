
#include <iostream>
#include <cstdio>
#include <cstring>
#include <deque>
#include <algorithm>
using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,int> pli;
typedef pair<ll,pii> plpii;
#define f first
#define s second

int main(){
	int n,m,a,b;scanf("%d%d%d%d",&n,&m,&a,&b);

	ll v[n][m];
#ifdef MIRAC
	for(int i=0;i<n;i++)for(int k=0;k<m;k++)scanf("%lld",v[i]+k);
#else
	for(int i=0;i<n;i++)for(int k=0;k<m;k++)scanf("%I64d",v[i]+k);
#endif

	ll w[n][m];
	for(int i=0;i<n;i++){
		deque<pli> d;
		for(int k=0;k<m;k++){
			if(d.size() && d.front().s+b==k)d.pop_front();
			while(d.size() && v[i][k]<=d.back().f)d.pop_back();
			d.push_back(pli(v[i][k],k));
			if(b-1<=k)w[i][k-(b-1)]=d.front().f;
		}
	}
	for(int k=0;k<m;k++){
		deque<pli> d;
		for(int i=0;i<n;i++){
			if(d.size() && d.front().s+a==i)d.pop_front();
			while(d.size() && w[i][k]<=d.back().f)d.pop_back();
			d.push_back(pli(w[i][k],i));
			if(a-1<=i)w[i-(a-1)][k]=d.front().f;
		}
	}

	for(int i=0;i<n;i++){
		ll sum=0;
		for(int k=0;k<b-1;k++)sum+=v[i][k];
		for(int k=0;k+b<=m;k++){
			sum+=v[i][b-1+k];
			ll prev=v[i][k];
			v[i][k]=sum;
			sum-=prev;
		}
	}
	for(int k=0;k<m;k++){
		ll sum=0;
		for(int i=0;i<a-1;i++)sum+=v[i][k];
		for(int i=0;i+a<=n;i++){
			sum+=v[a-1+i][k];
			ll prev=v[i][k];
			v[i][k]=sum;
			sum-=prev;
		}
	}

#if 0
	cout<<"w"<<endl;
	for(int i=0;i<n-a+1;i++){
		for(int k=0;k<m-b+1;k++)cout<<w[i][k]<<" ";cout<<endl;
	}
	cout<<"v"<<endl;
	for(int i=0;i<n-a+1;i++){
		for(int k=0;k<m-b+1;k++)cout<<v[i][k]<<" ";cout<<endl;
	}
#endif

	int nval=(n-a+1)*(m-b+1);
	plpii val[nval];
	for(int i=0;i<n-a+1;i++)for(int k=0;k<m-b+1;k++){
		val[i*(m-b+1)+k]=plpii(v[i][k]-w[i][k]*a*b,pii(i,k));
	}
	sort(val,val+nval);

	int ans[nval];
	int nans=0;

	int use[n][m];memset(use,0,sizeof(use));
	for(int i=0;i<nval;i++){
		int x=val[i].s.f;
		int y=val[i].s.s;
		int used=use[x+a-1][y+b-1]
				+use[x+a-1][y    ]
				+use[x    ][y+b-1]
				+use[x    ][y    ];
		if(used==0){
			ans[nans++]=i;
			for(int i=x;i<x+a;i++)for(int k=y;k<y+b;k++)use[i][k]=1;
		}
	}

	printf("%d\n",nans);
	for(int i=0;i<nans;i++){
		int to=ans[i];
#ifdef MIRAC
		printf("%d %d %lld\n",val[to].s.f+1,val[to].s.s+1,val[to].f);
#else
		printf("%d %d %I64d\n",val[to].s.f+1,val[to].s.s+1,val[to].f);
#endif
	}

	return 0;
}

