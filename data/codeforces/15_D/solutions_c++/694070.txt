#include <iostream>
#include <cstdio>
#include <vector>
#include <deque>
#include <utility>
#include <algorithm>
#include <cstring>
using namespace std;
#define fi first
#define se second
#define pb(a) push_back(a)
typedef long long ll;
typedef pair<int,int> pii;
deque<ll> Q,Q1;
ll sum;
void clear(){
  sum=0; Q.clear(); Q1.clear();
}
void pop(){
  if(Q[0]==Q1[0])Q.pop_front();
  sum-=Q1[0]; Q1.pop_front();
}
void push(ll w){
  while(!Q.empty() && Q.back()>w)Q.pop_back();
  Q.pb(w); Q1.pb(w); sum+=w;
}
inline ll MIN(){return Q[0];}
// solution
int n,m,a,b;
int M[1000][1000];
ll col[1000][1000],fin[1000][1000];
ll scol[1000][1000],sfin[1000][1000];
typedef pair<ll,pii> data;
vector<data> U, out;
int main(){
  scanf("%d%d%d%d",&n,&m,&a,&b);
  for(int i=0;i<n;++i)
   for(int j=0;j<m;++j)scanf("%d",&M[i][j]);
  int nn=n-a+1,nm=m-b+1;
  for(int j=0;j<m;++j){
   clear(); for(int i=0;i<(a-1);++i)push(M[i][j]);
   for(int i=0;i<nn;++i){
    if(i)pop(); push(M[i+a-1][j]);
    col[i][j]=MIN(); scol[i][j]=sum;
                        }
                      }
  for(int i=0;i<nn;++i){
   ll S=0;
   clear(); for(int j=0;j<(b-1);++j){push(col[i][j]); S+=scol[i][j];}
   for(int j=0;j<nm;++j){
    if(j){pop(); S-=scol[i][j-1];} push(col[i][j+b-1]); S+=scol[i][j+b-1];
    fin[i][j]=MIN(); sfin[i][j]=S;
                        }
                      }
  for(int i=0;i<nn;++i)
   for(int j=0;j<nm;++j)
    U.pb( data( sfin[i][j]-a*fin[i][j]*b , pii(i,j) ) );
  sort(U.begin(), U.end());
  memset(col, 0, sizeof col);
  for(int i=0;i<U.size();++i){
   pii C=U[i].se;
   if(!col[C.fi][C.se] && !col[C.fi+a-1][C.se] && !col[C.fi][C.se+b-1] && !col[C.fi+a-1][C.se+b-1]){
    out.pb(U[i]);
    for(int I=C.fi;I<C.fi+a;++I)
     for(int J=C.se;J<C.se+b;++J)col[I][J]=1;
                                                                                                   } 
                             }
  printf("%d\n",out.size());
  for(int i=0;i<out.size();++i)
   printf("%d %d %I64d\n",out[i].se.fi+1, out[i].se.se+1, out[i].fi);
  return 0;
}
