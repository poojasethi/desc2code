#include<cstdio>
#include<algorithm>
#include<vector>
using namespace std;
int n,m,a,b,q[1001],l,r;
char s[1001][1001];
long long sv[1001][1001],c[1001][1001],sv2[1001][1001];
vector <pair<long long,pair<int,int> > > v,ans;
int main(){
  scanf("%d%d%d%d",&n,&m,&a,&b);
  for(int i=1;i<=n;i++)
    for(int j=1;j<=m;j++)
      scanf("%I64d",&c[i][j]);
  for(int i=1;i<=n;i++){
    l = r = 0;
    for(int j=1;j<=m;j++){
      while(l != r && q[l] < j-b+1) l++;
      while(l < r && c[i][q[r-1]] >= c[i][j]) r--;
      q[r++] = j;
      if(j >= b) sv[i][j-b+1] = c[i][q[l]];
    }  
  }
  for(int j=1;j<=m;j++){
    l = r = 0;
    for(int i=1;i<=n;i++){
      while(l != r && q[l] < i-a+1) l++;
      while(l < r && sv[q[r-1]][j] >= sv[i][j]) r--;
      q[r++] = i;
      if(i >= a) sv2[i-a+1][j] = sv[q[l]][j];
    }  
  }
  for(int i=1;i<=n;i++)
    for(int j=1;j<=m;j++)
      sv[i][j] = sv[i-1][j] + sv[i][j-1] - sv[i-1][j-1] + c[i][j];
  for(int i=1;i<=n-a+1;i++)
    for(int j=1;j<=m-b+1;j++){
      c[i][j] = sv[i+a-1][j+b-1] - sv[i-1][j+b-1] - sv[i+a-1][j-1] + sv[i-1][j-1] - sv2[i][j]*a*b;
      v.push_back(make_pair(c[i][j],make_pair(i,j)));
    }
  sort(v.begin(),v.end());
  for(int i=0;i<v.size();i++){
    if(s[v[i].second.first][v[i].second.second] == 0){
      for(int j=max(1,v[i].second.first-a+1);j<min(n+1,v[i].second.first+a);j++)
    for(int k=max(1,v[i].second.second-b+1);k<min(m+1,v[i].second.second+b);k++)
      s[j][k] = 1;
      ans.push_back(make_pair(v[i].first,make_pair(v[i].second.first,v[i].second.second)));
    }
  }
  printf("%d\n",ans.size());
  for(int i=0;i<ans.size();i++)
    printf("%d %d %I64d\n",ans[i].second.first,ans[i].second.second,ans[i].first);
  return 0;
}
