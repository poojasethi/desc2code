#include <iostream>
#include <iomanip>
#include <sstream>
#include <cstdio>
#include <string>
#include <vector>
#include <algorithm>
#include <complex>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <cassert>
#include <climits>
#include <queue>
#include <set>
#include <map>
#include <valarray>
#include <bitset>
#include <stack>
using namespace std;

#define REP(i,n) for(int i=0;i<(int)n;++i)
#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)
#define ALL(c) (c).begin(), (c).end()
typedef long long ll;
typedef pair<int,int> pii;
const int INF = INT_MAX;
const double PI = acos(-1);
const double EPS = 1e-8;

int ba[1000][1000];
ll sum[1001][1001];
bool used[1000][1000];
ll tmp[1000][1000];
ll mi[1000][1000];
int n,m,h,w;

void calcMin() {
  REP(y,n) {
    deque<int> deq;
    for (int x=m-1; x>=0; --x) {
      while(!deq.empty() && ba[y][x] < deq.back()) deq.pop_back();
      deq.push_back(ba[y][x]);
      if (x < m-w && deq.front() == ba[y][x+w]) deq.pop_front();
      tmp[y][x] = deq.front();
    }
  }

  REP(x,m) {
    deque<int> deq;
    for (int y=n-1; y>=0; --y) {
      while(!deq.empty() && tmp[y][x] < deq.back()) deq.pop_back();
      deq.push_back(tmp[y][x]);
      if (y < n-h && deq.front() == tmp[y+h][x]) deq.pop_front();
      mi[y][x] = deq.front();
    }
  }
  //REP(y,n) {REP(x,m) cout << mi[y][x] << " "; cout << endl;}
}

int main() {
  scanf("%d%d%d%d",&n,&m,&h,&w);
  REP(i,n)REP(j,m)scanf("%d",ba[i]+j);
  REP(i,n)REP(j,m)
    sum[i+1][j+1] = sum[i][j+1] + sum[i+1][j] - sum[i][j] + ba[i][j];
  calcMin();
  typedef pair<ll,pii> plii;
  vector<plii> v;
  REP(i,n-h+1)REP(j,m-w+1) {
    ll s = sum[i][j] + sum[i+h][j+w] - sum[i][j+w] - sum[i+h][j];
    ll cost = s - mi[i][j]*w*h;
    v.push_back(plii(cost,pii(i,j)));
  }
  sort(ALL(v));
  vector<plii> ans;
  FOR(it, v) {
    int i = it->second.first;
    int j = it->second.second;
    if (used[i][j] || used[i+h-1][j] || used[i][j+w-1] || used[i+h-1][j+w-1]) continue;
    for (int y=i; y<i+h; ++y)
      for (int x=j; x<j+w; ++x)
        used[y][x] = 1;
    ans.push_back(*it);
  }
  printf("%d\n", (int)ans.size());
  FOR(it, ans)
    printf("%d %d %I64d\n", it->second.first+1, it->second.second+1, it->first);
}
