#include<iostream>
#include<cstdio>
#include<algorithm>
using namespace std;
int tot[10]={0},a[110],b[110],aa[110],bb[110],n;bool used[110]={0},f[110]={1};
void dfs(int deep)
{
	if(deep>n)
	{
		for(int i=1;i<=n;i++)
		{
			cout<<aa[i]<<' ';
			if(f[i])cout<<"+\n";
			if(!f[i])cout<<"-\n";
		}
		exit(0);
	}
	for(int i=1;i<=n;i++)
	{
		if(used[i]==1)continue;
		if(a[i]!=bb[deep-1]&&b[i]!=bb[deep-1])continue;
		f[deep]=1;
		if(a[i]!=bb[deep-1]){swap(a[i],b[i]);f[deep]=0;}
		aa[deep]=i;bb[deep]=b[i];
		used[i]=1;
		dfs(deep+1);
		used[i]=0;
		if(f[deep]==0){swap(a[i],b[i]);f[deep]=1;}
	}
	return;
}

int main()
{
	std::cin.sync_with_stdio(false);
	cin>>n;
	for(int i=1;i<=n;i++)
	{
		cin>>a[i]>>b[i];
		tot[a[i]]++;tot[b[i]]++;
	}
	int test=0;
	for(int i=9;i>=0;i--)if(tot[i]%2==1){test++;bb[0]=i;}
	if(test!=2&&test!=0){cout<<"No solution"<<endl;return 0;}
	if(test==0)bb[0]=a[1];
	dfs(1);
	cout<<"No solution"<<endl;
	return 0;
}
