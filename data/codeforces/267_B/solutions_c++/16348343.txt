#include<bits/stdc++.h>

using namespace std;

const int N = 4e2;

int adj[7][7] , ans[N] , x[N] , y[N] , degree[7] , n , start , odd_vertex , n1;

void dfs(int v){
     for(int i = 0; i <= 6; i++)
        if(adj[v][i] != 0){
			adj[v][i]-- , adj[i][v]--;
			dfs(i);
		}                
     ans[n1--] = v;
}
int main(){
    cin >> n;
    n1 = n + 1; 
    for (int i = 1; i <= n; i++) {
    	cin >> x[i] >> y[i];
    	adj[x[i]][y[i]]++ , adj[y[i]][x[i]]++;
    	degree[x[i]]++ , degree[y[i]]++;              
    }
    start = x[1];
    for(int i = 0; i <= 6; i++)
       	if (degree[i] % 2 == 1) {
			odd_vertex++;
			start = i;	
		}
    if (odd_vertex > 2) {
             cout<<"No solution";
             return 0;
    }
    dfs(start);
    if (n1 > 0) {
        cout << "No solution";
        return 0;
    }
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++) {
        	if (ans[i] == x[j] && ans[i + 1] == y[j]) {
				cout << j << " +" << endl;
				x[j] = -1 , y[j] = -1;
				break;
			}
	        else if (ans[i] == y[j] && ans[i + 1] == x[j]) {
				cout << j << " -" << endl;
				x[j] = -1 , y[j] = -1;
				break;
			}
    	}
    return 0;
}