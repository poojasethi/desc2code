#include<bits/stdc++.h>
#define eps 1e-9
#define FOR(i,j,k) for(int i=j;i<=k;i++)
#define MAXN 1005
#define MAXM 40005
#define INF 0x3fffffff
using namespace std;
typedef long long LL;
int i,j,k,n,m,T,ans,big,cas,num,len;
bool flag;

int G[MAXN][MAXN],Ru[MAXN],ans1[MAXN],ans2[MAXN],tot,x[MAXN],y[MAXN];

void dfs(int u)
{
	for (int i=0;i<m;i++)
	{
		//printf("BreakPoint #%d %d %d\n",u,i,G[u][i]);
		if (G[u][i]>0)
		{
			G[u][i]--;
			G[i][u]--;
			
			dfs(i);
		
			tot++;
			ans1[tot]=u;
			ans2[tot]=i;
		}
	}
}

int main()
{
	scanf("%d",&n);
	for (i=1;i<=n;i++)
	{
		scanf("%d%d",&x[i],&y[i]);
		G[x[i]][y[i]]++;
		G[y[i]][x[i]]++;
		Ru[x[i]]++;
		Ru[y[i]]++;
	}
	m=7;
	vector <int> vec;
	vec.clear();
	for (i=0;i<m;i++)
	{
		if (Ru[i]%2) vec.push_back(i);
	}
	if (vec.size()==2)
	{
		dfs(vec[0]);
	}else
	if (vec.size()==0)
	{
		dfs(x[1]);
	}else
	{
		printf("No solution\n");
		return 0;
	}
	
	if (tot!=n)
	{
		printf("No solution\n");
		return 0;
	}
	
	for (i=n;i>=1;i--)
	{
		for (j=1;j<=n;j++)
		{
			if (ans1[i]==x[j] && ans2[i]==y[j])
			{
				printf("%d +\n",j);
				x[j]=-1;y[j]=-1;
				break;
			}else
			if (ans1[i]==y[j] && ans2[i]==x[j])
			{
				printf("%d -\n",j);
				x[j]=-1;y[j]=-1;
				break;
			}
		}
	}
				 
	
	return 0;
}

 						   	 	 	   	 	   			 	