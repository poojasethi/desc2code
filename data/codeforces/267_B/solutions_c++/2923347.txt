#include <iostream>
#include <vector>
using namespace std;
const int maxn=110;
vector <int>v[maxn];
vector <int>w[maxn];
vector <int>s;
vector <char>d;
bool mark[maxn];
int a[maxn],b[maxn];

void dfs(int q)
{
    for(int i=0;i<v[q].size();i++)
    {
        if(!mark[v[q][i]])
        {
            mark[v[q][i]]=true;
            if(w[q][i]==1)
            {
                dfs(b[v[q][i]]);
                d.push_back('-');
                s.push_back(v[q][i]);
            }
            else
            {
                dfs(a[v[q][i]]);
                d.push_back('+');
                s.push_back(v[q][i]);
            }
        }
    }
}
int main()
{
    int n,count=0;
    cin>>n;
    for(int i=1;i<=n;i++)
    {
            cin>>a[i]>>b[i];
            v[a[i]].push_back(i);
            v[b[i]].push_back(i);
            w[a[i]].push_back(1);
            w[b[i]].push_back(2);
    }
    for(int i=0;i<=6;i++)
        if(v[i].size()%2==1)
        {
            dfs(i);
            break;
        }
    for(int i=0;i<=6;i++)
        if(v[i].size()%2==1)
            count++;
    if(count==0)
        for(int i=0;i<=6;i++)
            if(v[i].size()>0)
            {
                dfs(i);
                break;
            }
    if(s.size()!=n || count>2)
        cout<<"No solution"<<endl;
    else
        for(int i=0;i<s.size();i++)
            cout<<s[i]<<" "<<d[i]<<endl;
    return 0;
}