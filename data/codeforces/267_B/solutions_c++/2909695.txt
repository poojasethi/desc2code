#include <algorithm>
#include <cmath>
#include <cstdio>
#include <deque>
#include <iostream>
#include <map>
#include <queue>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

#define REP(i,N) for((i)=0;(i)<int(N);(i)++)
#define REPI(i,N) for((i)=1;(i)<=int(N);(i)++)
#define foreach(c,it) for(__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define all(c) (c).begin(), (c).end()
#define pb push_back
#define mp make_pair
#define ST first
#define ND second

#define MAXN 101

vector< vector< pair<int, int> > > g(7);
int D[7];
int r[MAXN];
char dir[MAXN];
int p;
bool flag[MAXN];

void Euler(int v) {
	foreach(g[v],it) {
		if (!flag[((*it).ND+1)/2]) {
			flag[((*it).ND+1)/2] = true;
			Euler((*it).ST);
			r[p] = ((*it).ND+1)/2;
			dir[p] = ((*it).ND % 2 == 0) ? '-' : '+';
			p++;
		}
	}
}

int main() {
	int N, i, x, y, k = 0, s;
	cin >> N;
	REP(i,N) {
		cin >> x >> y;
		s = x;
		D[x]++;
		D[y]++;
		g[x].pb(mp(y, i*2+1));
		g[y].pb(mp(x, i*2+2));
	}
	REP(i,7) if (D[i] % 2 == 1) {
		k++;
		s = i;
	}
	Euler(s);
	if (k > 2 || p != N) {
		cout << "No solution" << endl;
		return 0;
	}
	for(i=p-1;i>=0;i--) cout << r[i] << " " << dir[i] << endl;
}
