#include<stdio.h>
#include<iostream>
#include<limits.h>
#include<algorithm>
#include<math.h>
struct edge
{
	int v,nt,vis,d;
};
using namespace std;
const int 			Maxm=210,Maxn=10;
edge				e[Maxm];
int 				i,n,u,v,sum,s,e0,
					top[Maxn],ans[Maxm],du[Maxn];
void dfs(int u)
{
	for (int i=top[u];i!=0;i=e[i].nt)
	if (!e[i].vis)
	{
		e[i].vis=true;
		if (i%2) e[i+1].vis=true;
			else e[i-1].vis=true;	
		dfs(e[i].v);
		ans[++sum]=(i-1)/2*10+i%2;
	}
}
void build(int u,int v)
{
	e[++e0].v=v; e[e0].nt=top[u]; e[e0].vis=0; e[e0].d=0; top[u]=e0;
	e[++e0].v=u; e[e0].nt=top[v]; e[e0].vis=0; e[e0].d=1; top[v]=e0;
}

int main()
{
	//freopen("1.in","r",stdin);
	//freopen("1.out","w",stdout);
	scanf("%d",&n);
	for (i=1;i<=n;i++)
	{
		scanf("%d%d",&u,&v);
		build(u,v);
		du[u]++;
		du[v]++;
	}
	for(i=0;i<=6;i++) if (du[i]) s=i;
	for(i=0;i<=6;i++)
	if (du[i]%2)
		s=i,sum++;
		
	if (sum>2)
	{
			printf("No solution\n");
			return 0;
	}
	sum=0;
	dfs(s);
	if (sum<n)
	{
		printf("No solution\n");
		return 0;
	
	} 
	for (i=1;i<=n;i++)
	printf("%d %c\n",1+ans[i]/10,ans[i]%10? '-':'+');
}
