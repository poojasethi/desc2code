import sys

def solve(start, g):
    ret = []
    for i in xrange(10):
        if g[start][i] == 0: continue
        g[start][i] -= 1
        g[i][start] -= 1
        ret = solve(i, g) + ret
    return [start] + ret

def main():
    n=input()
    edge = []
    cnt = [0 for _ in xrange(10)]
    g = [[0 for i in xrange(10)] for _ in xrange(10)]
    for _ in xrange(n):
        u,v=map(int,sys.stdin.readline().split())
        edge.append((u,v))
        g[u][v] += 1
        g[v][u] += 1
        cnt[u] += 1
        cnt[v] += 1
    t = 0
    for c in cnt:
        if c % 2: t += 1
    if t > 2:
        print "No solution"
        return
    for i in xrange(10):
        if cnt[i]: start = i
    for i in xrange(10):
        if cnt[i] % 2: start = i
    path = solve(start, g)
    if len(path) != n+1:
        print "No solution"
        return
    used = [0 for _ in xrange(n)]
    for i in xrange(1,len(path)):
        for j in xrange(n):
            if used[j]: continue
            if path[i-1] == edge[j][0] and path[i] == edge[j][1]:
                print j+1, '+'
                used[j] = 1
                break
            if path[i-1] == edge[j][1] and path[i] == edge[j][0]:
                print j+1, '-'
                used[j] = 1
                break

main()

