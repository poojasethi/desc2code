#include<cstdio>
#include<bitset>
using namespace std;
long long N,M,i,X;
long long Cnt[125],Q[125];
const long long oo=1000000007;
bitset<120> S=1;
long long dfs(long long d,long long Last,bitset<120> S)
{
	long long i,j;
	long long Ans=1;
	for(i=1;i<d;++i) Ans=(Ans*Cnt[Q[i]])%oo;
	for(i=Last;i<=M/2;++i)
		if(Cnt[i]&&!S[i]&&!S[M-i])
		{
			Q[d]=i;
			Ans=(Ans+dfs(d+1,i+1,S|(S<<i)|(S>>i)|(S<<M-i)|(S>>M-i)))%oo;
		}
	return Ans;
}
int main()
{
	scanf("%I64d%I64d%I64d",&i,&M,&N);
	for(i=1;i<=N;++i)
	{
		scanf("%I64d",&X);
		X%=M;
		if(M-X<X) X=M-X;
		++Cnt[X];
	}
	printf("%I64d\n",dfs(1,1,S));
	return 0;
}
