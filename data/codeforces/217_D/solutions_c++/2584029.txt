#include<iostream>
#include<cstdio>
#include<bitset>
#include<algorithm>
using namespace std;
const int mo=1000000007;
int n,m,t,mm,x,i;
long long ans,num[126];
void dfs(int x,long long  y,bitset<120> b)
{
	if (x>mm)
	{
		ans=(ans+y)%mo;
	//	cout<<y<<endl;
		return;
	}
	dfs(x+1,y,b);
	if (num[x]&&(!b[x]))
	{
		bitset<120>  bb;
		bb=b|(b<<x)|(b>>x)|(b<<(m-x))|(b>>(m-x));
		dfs(x+1,y*num[x]%mo,bb);	
	}
}
int main()
{
//	freopen("1.in","r",stdin);
//	freopen("1.out","w",stdout);
	scanf("%d%d%d",&n,&m,&t);
	mm=(m+1)/2;
	for(i=1;i<=t;i++)
	{
		scanf("%d",&x);
		x=x%m;
		if (x>mm) x=m-x;
		num[x]++;
	//	cout<<x<<endl;
	}
	bitset<120> b(1);
	dfs(1,1,b);
	cout<<ans;
}