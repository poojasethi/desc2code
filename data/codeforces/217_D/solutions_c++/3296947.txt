#include<stdio.h>
#include<bitset>
#include<algorithm>
using namespace std;
typedef bitset<120> b120;
typedef long long ll;
int cnt[130];
int n,m;
const ll MOD=1000000007;
ll ans;
void dfs(int i,ll k,b120 b)
{
    if(i+i>m){ans=(ans+k)%MOD;return;}
    dfs(i+1,k,b);
    if(cnt[i]&&!b[i])dfs(i+1,k*cnt[i]%MOD,(b|(b<<i)|(b>>i)|(b<<(m-i))|(b>>(m-i)))/*.set(i)*/);
}
int main()
{
    scanf("%d%d%d",&n,&m,&n);
    for(int i=1;i<=n;i++)
    {
        int x;
        scanf("%d",&x);
        x%=m;
        x=min(x,m-x);
        cnt[x]++;
    }
    b120 t=1;
    dfs(1,1,t);
    printf("%I64d\n",ans);
    return 0;
}