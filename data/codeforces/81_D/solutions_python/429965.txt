from heapq import heapify, heappush, heappop
def run(n, a, s):
	r = [s]
	h = []
	for (i, x) in enumerate(a):
		if i == s: x -= 1
		if x: h.append((-x, i))
	heapify(h)
	for i in xrange(1, n - 1):
		if not h: return
		(x, j) = heappop(h)
		if r and r[-1] == j:
			if not h: return
			next = heappop(h)
			heappush(h, (x, j))
			(x, j) = next
		r.append(j)
		if (x != -1):
			heappush(h, (x + 1, j))

	for (x, j) in h:
		if j == r[0] or j == r[-1]: continue
		r.append(j)
		break
	else:
		return

	return r

(n, m) = map(int, raw_input().split())
a = map(int, raw_input().split())
for i in xrange(m):
	r = run(n, a, i)
	if not r: continue
	print " ".join(map(lambda x: str(x + 1), r))
	break
else:
	print -1