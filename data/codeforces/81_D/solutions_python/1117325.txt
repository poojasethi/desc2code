def prev(i, n):
	return (i - 1 + n) % n
def next(i, n):
	return (i + 1) % n
def is_valid(i, now, n, p):
	if now == -1:
		return False
	else:
		return p[prev(i, n)] != now and p[next(i, n)] != now
n, m = map(int, raw_input().split())
a = map(int, raw_input().split())
p = [-1] * n

flag = True
for i in range(n):
	best = -1
	for j, k in enumerate(a):
		if is_valid(i, j, n, p) and k != 0 and (best == -1 or a[best] < k):
			best = j
	if is_valid(i, p[0], n, p) and a[best] <= a[p[0]]:
		best = p[0]
	if best == -1:
		flag = False
		break
	p[i] = best
	a[best] -= 1
p = [i + 1 for i in p]
if flag:
	print ' '.join(map(str, p))
else:
	print -1
