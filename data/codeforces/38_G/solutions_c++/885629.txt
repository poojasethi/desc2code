#include<iostream>
#include<sstream>
#include<vector>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#define rep(i,n) for(int i=0;i<n;i++)
#define fr(i,c) for(__typeof (c.begin()) i=c.begin(); i!=c.end(); i++)
#define all(c) (c).begin(), (c).end()
#define pb push_back
using namespace std;

typedef vector<int> vi;
typedef long long ll;

const int SZ=300;
int n;
vector<vi> bucket;
int mx[100000/SZ+1];
int A[100000],id[100001];

void run(){
  scanf("%d",&n);
  bucket.resize(1);
  
  rep(i,n){
    int a,c; scanf("%d%d",&a,&c);
    id[a]=i+1;
    
    int p=bucket.size()-1;
    for(;c>0&&p>0;p--){
      if(mx[p]>a||bucket[p].size()>c)break;
      c-=bucket[p].size();
    }
    int q=bucket[p].size();
    for(;c>0&&q>0;q--,c--){
      if(bucket[p][q-1]>a)break;
    }
    bucket[p].insert(bucket[p].begin()+q,a);
    mx[p]=max(mx[p],a);
    
    if(i%SZ==SZ-1||i==n-1){
      int l=0;
      rep(j,bucket.size())rep(k,bucket[j].size())A[l++]=bucket[j][k];
      bucket.clear();
      bucket.resize((l+SZ-1)/SZ);
      rep(j,(l+SZ-1)/SZ)mx[j]=0;
      rep(j,l){
        bucket[j/SZ].pb(A[j]);
        mx[j/SZ]=max(mx[j/SZ],A[j]);
      }
    }
  }
  rep(i,n)printf("%d%c",id[A[i]],i==n-1?'\n':' ');
}
int main(){
#ifndef ONLINE_JUDGE
  rep(i,3)
#endif
    run();
  return 0;
}
