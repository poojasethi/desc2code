#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<cmath>
using namespace std;
struct hh
{
	int fi,la,siz,mx,pre,nxt;
} b[100001];
int n,m,i,j,k,x,y,mx1,mx2,num,t,pb,p,a[100001],pre[100001],nxt[100001];
void add(int x,int y,int z)
{
	pre[x]=y;
	nxt[x]=z;
	if (z) pre[z]=x;
	if (y) nxt[y]=x;
}

int main()
{
		scanf("%d\n",&n);
		m=sqrt(n);
		scanf("%d%d\n",&a[1],&x);
		b[1].fi=b[1].la=b[1].siz=t=num=1;
		b[1].mx=a[1];
		for (i=2;i<=n;i++)
		{
			scanf("%d%d\n",&x,&y);
			a[i]=x;
			for (pb=t;b[pb].pre && y>=b[pb].siz && x>b[pb].mx;y-=b[pb].siz,pb=b[pb].pre);
			for (p=b[pb].la;p && y && a[p]<x;p=pre[p],y--);
			if (!p) add(i,p,b[pb].fi);
			else add(i,p,nxt[p]);
			if (!pre[i]) b[pb].fi=i;
			if (!nxt[i]) b[pb].la=i;
			b[pb].mx=max(b[pb].mx,x);
			if (++b[pb].siz>m)
			{
				b[++num].siz=b[pb].siz/2;
				if (pb==t) t=num;
				b[b[pb].nxt].pre=num;
				b[num].nxt=b[pb].nxt;
				b[pb].nxt=num;
				b[num].pre=pb;
				if ((b[pb].siz)&1) b[num].siz++;
				b[pb].siz=b[pb].siz/2;
				for (j=1,mx1=a[k=b[pb].fi];j<b[pb].siz;j++) mx1=max(mx1,a[k=nxt[k]]);
				b[num].fi=nxt[k];
				b[num].la=b[pb].la;
				pre[nxt[k]]=0;
				nxt[k]=0;
				b[pb].la=k;
				for (j=1,mx2=a[k=b[num].fi];j<b[num].siz;j++) mx2=max(mx2,a[k=nxt[k]]);
				b[pb].mx=mx1;
				b[num].mx=mx2;
			}
		}
		for (i=1;i;i=b[i].nxt)
			for (j=b[i].fi;j;j=nxt[j]) printf("%d ",j);
}
