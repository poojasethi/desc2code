#include <bits/stdc++.h>
//Keep your friends rich, and your enemies rich, and wait to find out which is which.

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int C = 550, MAXN = 1e5 + 100, MAXC = (MAXN + C - 1) / C;

set<int> s[MAXC]; deque<int> grp[MAXC];
int a[MAXN], c[MAXN];

#define mx(j) (s[j].size() ? *s[j].rbegin() : 0)

inline void push(int g, int x){
	grp[g].push_front( x );
	s[g].insert( a[x] );
}

inline int pop(int g){
	int x = grp[g].back();
	grp[g].pop_back();
	s[g].erase(a[x]);
	return x;
}


int main(){
	int n; scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%d%d", &a[i], &c[i]);

	for (int i = 0; i < n; i++){
		//cerr << "@" << i << endl;
		int j;
		for (j = MAXC - 1; j >= 0 && (grp[j].size() == 0 || (mx(j) < a[i] && grp[j].size() < c[i])); j--)
			c[i] -= grp[j].size();
	

	//	cerr << "j = " << j << endl;

		if (j == -1) push(0, i);
		else {
			s[j].insert(a[i]); grp[j].push_back(i);
			for (int k = grp[j].size() - 1; k >= 1 && c[i]; k--){
				//cerr << k << " : " << a[ grp[j][k] ] << ", " << a[grp[j][k-1]] << endl;
				if (a[ grp[j][k] ] > a[ grp[j][k - 1] ] ) swap( grp[j][k], grp[j][k - 1]), c[i]--;
				else break;
			}
		}

		while(s[j].size() > C){
			push(j + 1, pop(j));
			j++;
		}
		
	}

	for (int i = 0; i < MAXC; i++)
		if(grp[i].size()) for (int j = 0; j < grp[i].size(); j++) printf("%d ", grp[i][j] + 1);
		else break;

}

