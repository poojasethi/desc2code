#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define orta (bas + son >> 1)
#define sag (k + k + 1)
#define sol (k + k)
#define endl '\n'
#define foreach(i,x) for(type(x)i=x.begin();i!=x.end();i++)
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define ROF(ii,aa,bb) for(int ii=aa;ii>=bb;ii--)
#define mp make_pair
#define nd second
#define st first
#define type(x) __typeof(x.begin())

typedef pair < int ,int > pii;

typedef long long ll;

const long long linf = 1e18+5;
const int mod = (int) 1e9 + 7;
const int logN = 17;
const int inf = 1e9;
const int N = 2e5 + 5;

int size[N], mx[N], n, m, x, y, S, w[N];
vector< int > v[N];

void insert(int x, int y) {
	int cur = 1;
	while(cur < S && y - size[cur] >= 0 && mx[cur] < x) y -= size[cur++];
	foreach(it, v[cur]) {
		if(y && *it < x) y--;
		else{ mx[cur] = max(mx[cur], x); size[cur]++; v[cur].insert(it, x); return ; }
	}
	mx[cur] = max(mx[cur], x);
	v[cur].pb(x); size[cur]++;
}

void init() {
	vector< int > temp;
	FOR(i, 1, S) {
		foreach(it, v[i])
			temp.pb(*it);
		v[i].clear();
	} S = 1;
	memset(mx, 0, sizeof mx);
	memset(size, 0, sizeof size);
	foreach(it, temp) {
		if(v[S].size() > 320) v[++S].pb(*it);
		else v[S].pb(*it);
		mx[S] = max(mx[S], *it);
		size[S]++;
	}
}

int main() {

	scanf("%d", &n);

	S = 1;

	FOR(i, 1, n) {
		scanf("%d %d", &x, &y);
		insert(x, y); w[x] = i;
		if(!(i % 320))  init();
	}

	ROF(i, S, 1)
		while(v[i].size()) {
			printf("%d ", w[v[i].back()]);
			v[i].pop_back();
		}

	return 0;
}
