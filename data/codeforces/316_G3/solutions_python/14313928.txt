#include<cstdio>
#include<cstring>
#include<vector>
#define N 1100005
using namespace std;vector<int>v[N];
int son[N][27],step[N],f[N],L[11],R[11],vis[N],g[N][11];
char a[N];int last,tot,n,i,k;long long ans;
int Insert(int last,int ch,int type){
  int p,q,np,nq;
    step[np=++tot]=step[last]+1;
    if (type>=0) g[np][type]++;
  for (p=last;p&&!son[p][ch];p=f[p]) son[p][ch]=np;
  if (!p) return f[np]=1,np;
  if (step[q=son[p][ch]]==step[p]+1) return f[np]=q,np;
  step[nq=++tot]=step[p]+1;
  memcpy(son[nq],son[q],sizeof(son[q]));
  f[nq]=f[q];f[q]=nq;f[np]=nq;
  for (;p&&son[p][ch]==q;p=f[p]) son[p][ch]=nq;return np;
}
void DFS(int k){
    if (vis[k]) return;vis[k]=1;
    for (int i=0,x;i<v[k].size();i++){
        DFS(x=v[k][i]);
        for (int j=0;j<=n;j++)
            g[k][j]+=g[x][j];
  }if (!g[k][0]) return;
  for (int j=1;j<=n;j++)
    if (g[k][j]<L[j]||g[k][j]>R[j]) return;
  ans+=step[k]-step[f[k]];
}
int main(){
    scanf("%s",a+1);last=tot=1;
    for (i=1;a[i];i++)
        last=Insert(last,a[i]-'a',0);
    scanf("%d",&n);
    for (k=1;k<=n;k++){
        last=Insert(last,26,-1);
        scanf("%s",a+1);
        for (i=1;a[i];i++)
            last=Insert(last,a[i]-'a',k);
        scanf("%d%d",&L[k],&R[k]);
  }for (i=2;i<=tot;i++)
        v[f[i]].push_back(i);
    DFS(1);
  printf("%I64d\n",ans);
}