#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <vector>
#define N 1200000
#define int64 long long
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct sam {
	int l,fa,a[27],ty;
} a[N];
int i,j,k,n,m,t,last,s,len;
int L[20],R[20],b[N][11];
int64 an;
char p[N];
vector<int> c[N];
inline void into(int x,int l,int _) {
	int np,p,q,r;
	np=++t;
	a[np].ty=_,a[np].l=l;
	for (p=last;p&&!a[p].a[x];p=a[p].fa) a[p].a[x]=np;
	last=np;
	if (!p) a[np].fa=1;
	else {
		q=a[p].a[x];
		if (a[p].l+1==a[q].l) a[np].fa=q;
		else {
			r=++t;
			a[r]=a[q];
			a[r].ty=-1;
			a[r].l=a[p].l+1;
			a[q].fa=a[np].fa=r;
			for (;p&&a[p].a[x]==q;p=a[p].fa) a[p].a[x]=r;
		}
	}
}
void dfs(int x) {
	int i,j;
	for (i=0;i<c[x].size();i++) {
		int A=c[x][i];
		dfs(A);
		For(j,0,m) b[x][j]+=b[A][j];
	}
	if (a[x].ty>=0) b[x][a[x].ty]++;
	int s=0;
	For(i,0,m) s+=L[i]<=b[x][i]&&b[x][i]<=R[i];
	if (s==m&&b[x][0]) an+=a[x].l-a[a[x].fa].l;
}
int main() {
	//freopen("316G.in","r",stdin);
	t=last=1; a[t].ty=-1;
	scanf("%s",p+1);
	n=len=strlen(p+1);
	For(i,1,n) into(p[i]-'a',++s,0);
	scanf("%d",&m);
	For(i,1,m) {
		into(26,++s,-1);
		scanf("%s%d%d",p+1,&L[i],&R[i]);
		n=strlen(p+1);
		For(j,1,n) into(p[j]-'a',++s,i);
	}
	For(i,2,t) c[a[i].fa].push_back(i);
	dfs(1);
	printf("%I64d\n",an);
	return 0;
}
