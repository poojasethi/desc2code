#include <iostream>
#include <fstream>
#include <cstring>
#include <string>
#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <bitset>
#include <ctime>
#include <map>
#include <queue>
#include <set>
using namespace std;

const int maxlen=550000*2+15;
const int maxn=50000+15;
struct Node
{
	Node *son[30],*par;
	int len;
}pp[maxlen],*las;
int c[maxlen][14],tot;
char st[14][maxn];
int degre[maxlen];
int n;
int len[14];
int hh,tt,line[maxlen];
int l[14],r[14];
long long ans;
int inser(int x,int y)
{
	Node *now=&pp[++tot];c[tot][y]++;
	now->len=las->len+1;
	Node *u=las;
	for (;u && !u->son[x];u->son[x]=now,u=u->par);
	if (!u) now->par=&pp[0];
	else
	{
		Node *nxt=u->son[x];
		if (nxt->len==u->len+1) now->par=nxt;
		else
		{
			Node *ng=&pp[++tot];
			*ng=*nxt;
			ng->len=u->len+1;
			nxt->par=now->par=ng;
			for (;u && u->son[x]==nxt;u->son[x]=ng,u=u->par);
		}
	}
	las=now;
	return 0;
}
int check(int x)
{
	for (int i=0;i<=n;i++)
	 if (c[x][i]<l[i] || c[x][i]>r[i]) return 0;
	return 1;
}
int main()
{
	scanf("%s%d",st[0],&n);
	len[0]=strlen(st[0]);
	l[0]=1;r[0]=len[0];
	for (int i=1;i<=n;i++) scanf("%s%d%d",st[i],&l[i],&r[i]),len[i]=strlen(st[i]);
	las=&pp[0];
	for (int i=0;i<len[0];i++) inser(st[0][i]-'a'+1,0);
	for (int i=1;i<=n;i++)
	{
		inser(0,n+1);
		for (int j=0;j<len[i];j++) inser(st[i][j]-'a'+1,i);
	}
    for (int i=1;i<=tot;i++) degre[pp[i].par-pp]++;
    for (int i=1;i<=tot;i++)
     if (degre[i]==0) line[++tt]=i;
    for (hh=1;hh<=tot && hh<=tt;hh++)
    {
    	Node *x=&pp[line[hh]],*y=x->par;
    	ans+=(x->len-y->len)*check(x-pp);
    	for (int i=0;i<=n;i++) c[y-pp][i]+=c[x-pp][i];
    	degre[y-pp]--;
    	if (degre[y-pp]==0) line[++tt]=y-pp;
    }
    printf("%I64d\n",ans);
	return 0;
}