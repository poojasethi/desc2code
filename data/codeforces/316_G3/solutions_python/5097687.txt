#include <cstdio>
#include <cstring>
#include <iostream>
using namespace std;

const int MAXN = 1200000;

struct sanode{
	sanode *f, *ch[37];
	int ml, dp[11];
} *root, *tail, pool[MAXN], *b[MAXN];

int tot, dws[MAXN];
char s[55555], t[11][55555];

void init(){
	memset(pool, 0, sizeof(pool));
	tot = 0;
	root = tail = &pool[tot++];
}

void add(int c){
	sanode *p = tail, *np = &pool[tot++];
	np->ml = tail->ml + 1;
	for(;p&&!p->ch[c];p=p->f) p->ch[c] = np;
	tail = np;
	if(!p) np->f = root;
	else{
		if(p->ch[c]->ml == p->ml+1) np->f = p->ch[c];
		else{
			sanode *q = p->ch[c], *r = &pool[tot++];
			*r = *q;
			r->ml = p->ml + 1;
			q->f = np->f = r;
			for(;p&&p->ch[c]==q;p=p->f) p->ch[c] = r;
		}
	}
}

int lf[11], rt[11];
int main(){
	int n, i, len, j;
	init();
	scanf("%s",s);
	len = strlen(s);
	for(i=0;i<len;++i) add(s[i]-'a');
	add(26);
	scanf("%d",&n);
	for(i=1;i<=n;++i){
        scanf("%s", t[i]);
        len = strlen(t[i]);
        for(j=0;j<len;++j)
        add(t[i][j]-'a');
        add(i+26);
        scanf("%d%d",&lf[i], &rt[i]);
	}

	int mx = 0;
	for(i=0;i<tot;++i){
	    dws[pool[i].ml] ++;
        mx = max(mx, pool[i].ml);
	}
	for(i=1;i<=mx;++i) dws[i] += dws[i-1];
	for(i=0;i<tot;++i) b[--dws[pool[i].ml]] = &pool[i];
	sanode *p = root;
    len = strlen(s);
    for(i=0;i<len;++i){
        p = p->ch[s[i]-'a'];
        p->dp[0] = 1;
    }
    p = p->ch[26];
    for(i=1;i<=n;++i){
        len = strlen(t[i]);
        for(j=0;j<len;++j){
            p = p->ch[t[i][j]-'a'];
            p->dp[i] = 1;
        }
        p = p->ch[26+i];
    }

    int ans = 0;
	for(i=tot-1;i>0;--i){
	    if(b[i]->dp[0]){
            for(j=1;j<=n;++j)
            if(b[i]->dp[j] < lf[j] || b[i]->dp[j] > rt[j]) break;
            if(j==n+1) ans += b[i]->ml - b[i]->f->ml;
	    }
	    for(j=0;j<=n;++j)
		b[i]->f->dp[j] += b[i]->dp[j];
	}
    printf("%d\n", ans);
	return 0;
}







