#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<vector>
#define N 1100010
using namespace std;
struct suffix_automaton{
	int son[27],fa,l;
}a[N];
int i,j,cnt[N][11],tot,rt,last,tl,L[11],R[11],n,l,ans,bo[N];
char c[51000];
vector<int> e[N];
void insert(int c,int L,int type){
	int p,np,q,r,i;
	np=++tot;
	a[np].l=L; if(type!=-1)cnt[np][type]++;
	for(p=last;p && !a[p].son[c];p=a[p].fa)a[p].son[c]=np;
	last=np;
	if(!p)a[np].fa=rt;
	else{
		q=a[p].son[c];
		if(a[p].l+1==a[q].l)a[np].fa=q;
		else{
			r=++tot;
			for(i=0;i<27;++i)a[r].son[i]=a[q].son[i];
			a[r].fa=a[q].fa; a[r].l=a[p].l+1;
			a[np].fa=a[q].fa=r;
			for(;p && a[p].son[c]==q;p=a[p].fa) a[p].son[c]=r;
		}
	}
}
void add(char c[],int type){
	int i,l=strlen(c+1);
	for(i=1;i<=l;++i)insert(c[i]-97,++tl,type);
	insert(26,++tl,-1);
}
void dfs(int x){
	int i,y,j;
	if(bo[x])return;
	for(i=0;i<e[x].size();++i){
		y=e[x][i];
		dfs(y);
		for(j=0;j<=n;++j)cnt[x][j]+=cnt[y][j];
	}
	bool f=1;
	for(i=1;i<=n;++i)if(cnt[x][i]<L[i] || cnt[x][i]>R[i])f=0;
	if(f && cnt[x][0])ans+=a[x].l-a[a[x].fa].l;
}
int main(){
	rt=last=++tot;
	scanf("%s%d",c+1,&n);
	l=strlen(c+1);
	add(c,0);
	for(i=1;i<=n;++i){
		scanf("%s%d%d",c+1,&L[i],&R[i]);
		add(c,i);
	}
	for(i=2;i<=tot;++i)e[a[i].fa].push_back(i);
	dfs(1);
	printf("%d\n",ans);
}