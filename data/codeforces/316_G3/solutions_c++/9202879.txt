#include <bits/stdc++.h>
using namespace std;

#define N 600100

char buf[N];
int n, l[11], r[11];

struct node{
	int ch[27], ml, fa;
}t[N * 2];
int rt = 1, la = 1, tot = 1, deg[N * 2], q[N * 2], cnt[N * 2][11];

void add(int len, int c, int id){
	int p = la, np = ++ tot;
	t[np].ml = len;
	++ cnt[np][id];
	for(;p && !t[p].ch[c];p = t[p].fa) t[p].ch[c] = np;
	if(!p) t[np].fa = rt;
	else{
		int q = t[p].ch[c];
		if(t[p].ml + 1 == t[q].ml)	t[np].fa = q;
		else{
			int r = ++ tot;
			t[r] = t[q];
			t[r].ml = t[p].ml + 1;
			t[q].fa = t[np].fa = r;
			for(;p && t[p].ch[c] == q;p = t[p].fa) t[p].ch[c] = r;
		}
	}
	la = np;
}

int check(int u){
	if(!*cnt[u]) return 0;
	for(int i = 1;i <= n;i ++) if(cnt[u][i] < l[i] || r[i] < cnt[u][i]) return 0;
	return 1;
}

int main(){
	scanf("%s", buf + 1);
	scanf("%d", &n);
	int d = strlen(buf + 1);
	for(int i = 1;i <= n;i ++){
		scanf("%s%d%d", buf + d + 2, &l[i], &r[i]);
		d += strlen(buf + d + 2) + 1;
	}
	int id = 0;
	for(int i = 1;i <= d;i ++) if(!buf[i]) add(i, 0, ++ id); else add(i, buf[i] - 'a' + 1, id);
	for(int i = 1;i <= tot;i ++) deg[t[i].fa] ++;
	int s = 1, e = 0;
	for(int i = 1;i <= tot;i ++) if(!deg[i]) q[++ e] = i;
	int ans = 0;
	while(s <= e){
		int u = q[s ++];
		int v = t[u].fa;
		ans += check(u) * (t[u].ml - t[v].ml);
		*cnt[v] |= *cnt[u];
		for(int i = 1;i <= n;i ++) cnt[v][i] += cnt[u][i];
		if(-- deg[v] == 0) q[++ e] = v;
	}
	printf("%d\n", ans);
	return 0;
}
