#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#define NN 305
#define inf 1e9
#define LL long long
#define DD double
#define rep(i,s,t) for(register int i=s;i<=t;i++)
#define red(i,t,s) for(register int i=t;i>=s;i--)
#define vtson(k,x) for(int k=o[x];k;k=nex[k])
using namespace std;
inline int read()
{
	int t=0;char ch=getchar();
	while(ch<'0'||ch>'9')ch=getchar();
	while(ch>='0'&&ch<='9')t=t*10+ch-'0',ch=getchar();
	return t;
}
struct PP
{
	int x,y;
}tmp[NN*NN];
#include <vector>
vector<PP> xu[NN*NN];
int n,m,p,a[NN][NN];
int f[NN][NN],d[NN][NN],vt[NN][NN];
int main()
{
//	freopen ("1.in","r",stdin);//freopen("1.out","w",stdout);
	n=read(),m=read(),p=read();
	rep(i,1,n)
		rep(j,1,m)
		{
			a[i][j]=read();
			xu[a[i][j]].push_back((PP){i,j});
		}
	memset(vt,-1,sizeof(vt));
	memset(f,63,sizeof(f));
	rep(i,1,m)d[1][i]=i-1,vt[1][i]=0;
	rep(now,1,p)
	{
		unsigned int t=xu[now].size();
		for(unsigned int i=0;i<t;i++)
		{
			int x=xu[now][i].x,y=xu[now][i].y;
			int res=inf;
			rep(i,1,n)
				if(vt[i][y]==now-1)
					res=min(res,d[i][y]+abs(x-i));
			f[x][y]=res;
		}
		for(unsigned int i=0;i<t;i++)
		{
			int x=xu[now][i].x,y=xu[now][i].y,tt=f[x][y];
			rep(i,1,m)
			{
				if(vt[x][i]<now)
					d[x][i]=inf,vt[x][i]=now;
				d[x][i]=min(d[x][i],tt+abs(y-i));
			}
			
		}
	}
	printf("%d\n",f[xu[p][0].x][xu[p][0].y]);
	return 0;
}