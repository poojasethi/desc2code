#include<cstdio>
#include<vector>
#include<cstring>
#include<algorithm>
#define a first
#define b second
using namespace std;
const int INF=2000000000;
const int M=305;
vector<pair<int,int> >vec[M*M];
int A[M][M],dp[2][M][M]; 
int val[2][M][M];
int main(){
	int n,m,p;
	scanf("%d%d%d",&n,&m,&p);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++){
			scanf("%d",&A[i][j]);
			vec[A[i][j]].push_back(make_pair(i,j));
		}
	memset(val,127,sizeof(val));
//	memset(dp,127,sizeof(dp));
	memset(dp[0],0,sizeof(dp[0]));
	val[0][1][1]=0;
	for(int i=1;i<=m;i++)
		val[0][1][i]=i;
	int cur=0;
	for(int i=1;i<=p;i++){
		cur^=1;
		if(i>2){
			for(int j=0;j<vec[i-2].size();j++){
				int x=vec[i-2][j].a,y=vec[i-2][j].b;
				dp[cur][x][y]=INF;
				for(int k=1;k<=m;k++)
					val[cur][x][k]=INF;
			}
		}else if(i<=2){
			memset(dp[cur],127,sizeof(dp[cur]));
			memset(val[cur],127,sizeof(val[cur]));
		}
		for(int j=0;j<vec[i].size();j++){
			int x=vec[i][j].a,y=vec[i][j].b; 
			for(int k=1;k<=n;k++)
				dp[cur][x][y]=min(dp[cur][x][y],abs(x-k)+val[cur^1][k][y]);
			for(int k=1;k<=m;k++)
				val[cur][x][k]=min(val[cur][x][k],abs(k-y)+dp[cur][x][y]);
		}
	}
	printf("%d\n",dp[cur][vec[p][0].a][vec[p][0].b]-1);
	return 0;
} 