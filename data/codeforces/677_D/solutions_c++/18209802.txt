#include<stdio.h>
#include<iostream>
#include<stdlib.h>
#include<string.h>
#include<algorithm>
#include<queue>
using namespace std;
const int N=308;
const int M=999999999;
int a[N][N],b[N][N],d[N*N],flag[N][N];
int e[][2]={{0,1},{0,-1},{1,0},{-1,0}};
struct aa{int x,y,w,t;}c[N*N];
queue<aa>dd;
bool operator<(aa p1,aa p2){return p1.w<p2.w;}
int absx(int x){if(x<0)return -x;return x;}
int minx(int x,int y){if(x<y)y=x;return y;}
int main(void)
{
	//freopen("sduoj.in","r",stdin);
	int i,j,k,n,m,tar,p,q,tot;aa t,tt;
	scanf("%d%d%d",&n,&m,&tar);tot=0;
	memset(c,0,sizeof(c));
	for(i=1;i<=n;i++)for(j=1;j<=m;j++){scanf("%d",&b[i][j]);c[++tot].x=i;c[tot].y=j;c[tot].w=b[i][j];c[tot].t=M;d[b[i][j]]++;}
	sort(c+1,c+1+n*m);
	for(i=1;i<=d[1];i++)c[i].t=c[i].x+c[i].y-2;
	for(i=1,j=0;i<tar;j+=d[i++])
	if(d[i]*d[i+1]<4*n*m)
	{
		for(p=1;p<=d[i];p++)
		for(q=1;q<=d[i+1];q++)c[j+d[i]+q].t=minx(c[j+d[i]+q].t,c[j+p].t+absx(c[j+d[i]+q].x-c[j+p].x)+absx(c[j+d[i]+q].y-c[j+p].y));
	}
	else
	{
		for(p=1;p<=n;p++)for(q=1;q<=m;q++)a[p][q]=M;
		memset(flag,0,sizeof(flag));
		while(!dd.empty())dd.pop();
		for(p=1;p<=d[i];p++){t.x=c[j+p].x;t.y=c[j+p].y;a[t.x][t.y]=minx(a[t.x][t.y],c[j+p].t);dd.push(t);flag[t.x][t.y]=1;}
		while(!dd.empty())
		{
			t=dd.front();dd.pop();flag[t.x][t.y]=0;
			for(k=0;k<=3;k++)
			{
				tt.x=t.x+e[k][0];tt.y=t.y+e[k][1];
				if(tt.x>=1&&tt.x<=n&&tt.y>=1&&tt.y<=m&&a[tt.x][tt.y]>a[t.x][t.y]+1)
				{
					a[tt.x][tt.y]=a[t.x][t.y]+1;
					if(flag[tt.x][tt.y]==0){flag[tt.x][tt.y]=1;dd.push(tt);}
				}
			}
		}
		for(q=1;q<=d[i+1];q++)c[j+d[i]+q].t=a[c[j+d[i]+q].x][c[j+d[i]+q].y];
	}
	//for(j=1;j<=n*m;j++)cout<<c[j].x<<' '<<c[j].y<<' '<<c[j].w<<' '<<c[j].t<<endl;
	cout<<c[n*m].t;
	return 0;
}
