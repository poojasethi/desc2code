#include <algorithm>
#include <cstdio>
using namespace std;
const int inf=1000000000;
int fx[4]={1,0,-1,0},fy[4]={0,1,0,-1};
int dx[900100],dy[900100],tx[90010],ty[90010],ne[90010],fi[90010],
	num[90010],f[310][310],c[310][310],u[310][310],i,j,n,m,p,x,ans,tot;
void add(int x,int y,int z)
{
	tx[++tot]=y;ty[tot]=z;ne[tot]=fi[x];fi[x]=tot;
}
void bfs(int col)
{
	int i,j,x,y,s=1,t=0;
	for (i=1;i<=n;++i)
		for (j=1;j<=m;++j)
		if (c[i][j]!=col-1) f[i][j]=inf,u[i][j]=1;
	for (i=fi[col-1];i;i=ne[i])
		dx[++t]=tx[i],dy[t]=ty[i],u[tx[i]][ty[i]]=0;
	for (;s<=t;u[dx[s]][dy[s]]=1,++s)
		for (i=0;i<4;++i)
		{
			x=dx[s]+fx[i];y=dy[s]+fy[i];
			if (x<1 || x>n || y<1 || y>m) continue;
			if (f[dx[s]][dy[s]]+1<f[x][y])
			{
				f[x][y]=f[dx[s]][dy[s]]+1;
				if (u[x][y])
				{
					u[x][y]=0;dx[++t]=x;dy[t]=y;
				}
			}
		}
}
void dp(int col)
{
	int i,j;
	for (i=fi[col];i;i=ne[i]) f[tx[i]][ty[i]]=inf;
	for (i=fi[col-1];i;i=ne[i])
		for (j=fi[col];j;j=ne[j])
			f[tx[j]][ty[j]]=min(f[tx[j]][ty[j]],f[tx[i]][ty[i]]+
				abs(tx[i]-tx[j])+abs(ty[i]-ty[j]));
}
int main()
{
		scanf("%d%d%d\n",&n,&m,&p);
		for (i=1;i<=n;++i,scanf("\n"))
			for (j=1;j<=m;++j)
			{
				scanf("%d",&x);
				if (x==1) f[i][j]=i+j-2;
					else f[i][j]=inf;
				add(x,i,j);
				++num[c[i][j]=x];
			}
		for (i=2;i<=p;++i)
			if (num[i]*num[i-1]>n*m) bfs(i);
				else dp(i);
		ans=inf;
		for (i=fi[p];i;i=ne[i]) ans=min(ans,f[tx[i]][ty[i]]);
		printf("%d\n",ans);
}