
#include<bits/stdc++.h>
using namespace std;
const int N = 91000;
const int inf = 2e9;

struct node{
    int x,y,dp;
    node(const int& a,const int& b,const int& d = inf){
        x=a;y=b;dp = d;
    }
};

vector<node>S[N];


inline bool cmp(const node& a,const node& b){
    return a.dp<b.dp;
}

inline int dis(const int& a,const int& b,const int& x,const int& y){
    return abs(x-a)+abs(y-b);
}



int main()
{
    int n,m,p;bool f = false ;
    scanf("%d%d%d",&n,&m,&p);
    for(int i=1;i<=n;i++){
        for(int j=1,k;j<=m;j++){
            scanf("%d",&k);
            if(k==1){
                S[k].push_back(node(i,j,dis(1,1,i,j)));
            }else {
                S[k].push_back(node(i,j));
            }
        }
    }int ans = inf;
    for(int i=2;i<=p;i++){
        int k = i  - 1 , nn = min((int)S[k].size(),n+m) , mm = S[i].size();
        sort(S[k].begin(),S[k].end(),cmp);
        for(int j = 0;j<nn;j++){
            node& t = S[k][j];
            for(int l = 0;l<mm;l++){
                node& f = S[i][l];
                S[i][l].dp = min(S[i][l].dp , S[k][j].dp + dis(t.x,t.y,f.x,f.y));
            }
        }
    }int nn = S[p].size();
    for(int i=0;i<nn;i++){
        ans = min(ans , S[p][i].dp);
    }printf("%d\n",ans);
}
