
//353 D

#include<bits/stdc++.h>

typedef int LL;
using namespace std;

#define fillchar(a, x) memset(a, x, sizeof(a))
#define MP make_pair
#define PB push_back

const int M = 1000000007;

LL n ,m;
vector <pair<LL,LL> > g[100001];
LL memo[301][301];
LL arr[301][301];

LL dp(LL a,LL b)
{

LL i;

if(memo[a][b]!=-1)
	return memo[a][b];


LL k = arr[a][b]-1;
LL A = M;

if(k==0)
	return a+b;

for(i=0;i<n;i++)
	{
	vector <pair<LL,LL> > ::iterator  it = lower_bound(g[k].begin(),g[k].end(),MP(i,b));

	//cout<<a<<' '<<b<<' '<<i<<' '<<b<<' '<<it->first<<' '<<it->second<<endl;

	if(it!=g[k].end())	
		A = min(A,dp(it->first,it->second)+abs(a-(it->first)) + abs(b-it->second));
	if(it!=g[k].begin())
		{it--;

	//cout<<a<<' '<<b<<' '<<it->first<<' '<<it->second<<endl;
		A = min(A,dp(it->first,it->second)+abs(a-(it->first)) + abs(b-it->second));	
		}
	}
memo[a][b] = A;
return A;

}

int main()
{
LL i,j,p;
cin>>n>>m>>p;

for(i=0;i<n;i++)
	for(j=0;j<m;j++)
		{scanf("%d",&arr[i][j]);
		g[arr[i][j]].push_back(MP(i,j));	
		}

for(i=0;i<n;i++) for(j=0;j<m;j++) memo[i][j] = -1;


for(i=1;i<=p;i++)
	{
 	sort(g[i].begin(),g[i].end());
   	}	




LL A = M;
for(i=0;i<g[p].size();i++)
	 A = min(A,dp(g[p][i].first,g[p][i].second));


cout<<A<<endl;

}

