#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<vector>
#include<iostream>
#define M 305
#define Min(a,b) if(a==-1||a>(b))a=(b)
using namespace std;
struct kxj{
	int x,y;
};
vector<kxj>edge[M*M];
int val[2][305][305];
int main(){
	memset(val[1],-1,sizeof(val[1]));
	int n,m,p,i,j,k,a;
	scanf("%d %d %d",&n,&m,&p);
	for(i=1;i<=n;i++)
		for(j=1;j<=m;j++){
			scanf("%d",&a);
			edge[a].push_back((kxj){i,j});
			if(a==1)val[1][i][j]=i+j-2;
		}
	for(i=2;i<=p;i++){
		int t=i%2;
		memset(val[t],-1,sizeof(val[t]));
		for(j=0;j<edge[i-1].size();j++){
			int x=edge[i-1][j].x;
			int y=edge[i-1][j].y;
			for(k=1;k<=m;k++)
				Min(val[t^1][x][k],val[t^1][x][y]+abs(y-k));
		}
		for(j=0;j<edge[i].size();j++){
			int x=edge[i][j].x;
			int y=edge[i][j].y;
			for(k=1;k<=n;k++)
				if(val[t^1][k][y]!=-1)
					Min(val[t][x][y],val[t^1][k][y]+abs(x-k));
		}
	}
	printf("%d\n",val[p%2][edge[p][0].x][edge[p][0].y]);
	return 0;
}