#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<string.h>
#include<vector>
#include<stdlib.h>
using namespace std;
#define pb push_back
#define vec vector<node>
const int M=305;
inline void rd(int &a){
	a=0;char c;
	while(c=getchar(),!isdigit(c));
	do a=a*10+(c^48);
		while(c=getchar(),isdigit(c));
}
struct node{int x,y;};
vec G[M*M];
int stp[2][M][M],c[M],A[M][M];
inline void Min(int &x,int y){if(x==-1||x>y)x=y;}
int main(){
	int n,m,p;cin>>n>>m>>p;
	for(int i=1;i<=n;++i)
		for(int j=1;j<=m;++j)
			rd(A[i][j]),G[A[i][j]].pb((node){i,j});
	int cur=1,nxt=0;
	memset(c,-1,sizeof(c));
	c[1]=0;
	for(int i=1;i<=m;++i)
		stp[nxt][1][i]=i-1;
	for(int i=1;i<=p;++i){
		cur^=1,nxt^=1;
		for(int j=0;j<G[i].size();++j){
			int x=G[i][j].x,y=G[i][j].y;
			int res=-1;
			for(int k=1;k<=n;++k)
				if(c[k]==i-1)Min(res,stp[cur][k][y]+abs(x-k));
			stp[cur][x][y]=res;
		}
		for(int j=0;j<G[i].size();++j){
			int x=G[i][j].x,y=G[i][j].y,v=stp[cur][x][y];
			if(c[x]==i)for(int k=1;k<=m;++k)Min(stp[nxt][x][k],v+abs(y-k));
			else for(int k=1;k<=m;++k)stp[nxt][x][k]=v+abs(y-k);
			c[x]=i;
		}
	}
	cout<<stp[cur][G[p][0].x][G[p][0].y]<<endl;
	return 0;
}