#include <bits/stdc++.h>
using namespace std;
typedef pair<long long,long long> P;
typedef long long ll;
typedef pair<ll,pair<int,int> >Q;
#define fi first
#define sc second
#define mp make_pair
#define pb push_back
#define mod 1000000007
int n;
int a[500005];
int d[10000005];
int v[10000005];
bool u[10000005];
int x[12];
long long f[500005];
int main(){
	cin >> n;
	for(int i=0;i<n;i++) scanf("%d",&a[i]);
	for(int i=2;i<10000005;i++){
		if(d[i]) continue;
		for(int j=2;i*j<10000005;j++){
			if(!d[i*j]) d[i*j] = i;
		}
	}
	f[0] = 1;
	for(int i=1;i<500005;i++) f[i] = f[i-1]*2LL%mod;
	for(int i=0;i<n;i++){
		vector<int>vi;
		int cur = a[i];
		while(d[cur]){
			if(!u[d[cur]]){
				vi.push_back(d[cur]);
				u[d[cur]] = 1;
			}
			cur /= d[cur];
		}
		if(!u[cur]){
			vi.push_back(cur);
			u[cur] = 1;
		}
		int sz = vi.size();
		for(int j=0;j<(1<<sz);j++){
			int M = 1;
			for(int k=0;k<sz;k++){
				if(((j>>k)&1)){
					M *= vi[k];
				}
			}
			v[M]++;
		}
		for(int k=0;k<sz;k++) u[vi[k]] = 0;
	}
	long long ret = 0;
	for(int i=2;i<10000005;i++){
		int cur = i;
		int nx = 0;int in,sz,bad; long long V;
		while(d[cur]){
			if(nx && x[nx-1] == d[cur]) goto FAIL;
			x[nx++] = d[cur];
			cur /= d[cur];
		}
		if(nx && x[nx-1] == cur) goto FAIL;
		x[nx++] = cur;
		in = v[i];
		bad = n-in;
		V = (nx%2==1?1:-1)*(f[in]-1)*bad%mod;
		if(V<0) V+=mod;
		ret += V; FAIL:;
	}
	printf("%lld\n",ret%mod);
}