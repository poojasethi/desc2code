#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
typedef long long ll;
const int mm=1000000007;
int lim,i,j,k,n,m,a[610001],u[11000001],c[11000001],w[11000001],ans,q[111][2],num,p[1100001],f[1100001],pw2[610001],tmp;
void work(int x,int v){
	int i;
	if (x>num){
		c[v]++;return;
	}
	for (i=0;i<=q[x][1];i++,v*=q[x][0]) work(x+1,v);
}
void work2(int x,int v){
	int i;
	if (x>num){
		if (v==1) return;
		ans=(ans+u[v]*(pw2[c[v]]-1))%mm;
		return;
	}
	for (i=0;i<=1;i++,v*=q[x][0]) work2(x+1,v);
}
int main(){
	scanf("%d",&n);memset(w,0,sizeof(w));memset(c,0,sizeof(c));
	for (i=1,lim=0;i<=n;i++) scanf("%d",&a[i]),lim=max(lim,a[i]);
	for (i=pw2[0]=1;i<=n;i++) pw2[i]=pw2[i-1]*2%mm;
	u[1]=1;p[0]=0;
	for (i=2;i<=lim;i++){
		if (!w[i]){
			p[++p[0]]=i;u[i]=-1;w[i]=i;
		}
		for (j=1;j<=p[0]&&i*p[j]<=lim;j++){
			w[i*p[j]]=p[j];
			if (i%p[j]==0){
				u[i*p[j]]=0;
				break;
			}
			u[i*p[j]]=-u[i];
		}
	}
	for (i=1;i<=n;i++){
		for (num=0,k=a[i];k>1;){
			j=w[k];q[++num][0]=j;q[num][1]=0;
			for (;k%j==0;k/=j) q[num][1]++;
		}
		work(1,1);
	}
	for (i=2,tmp=0;i<=lim;i++) tmp=(tmp-(pw2[c[i]]-1)*u[i])%mm;
	tmp=(tmp+mm)%mm;
	for (ans=0,i=1;i<=n;i++){
		ans=(ans+tmp)%mm;
		for (num=0,k=a[i];k>1;){
			j=w[k];q[++num][0]=j;q[num][1]=0;
			for (;k%j==0;k/=j) q[num][1]++;
		}
		work2(1,1);
	}
	ans=(ans+mm)%mm;
	printf("%d\n",ans);
	return 0;
}