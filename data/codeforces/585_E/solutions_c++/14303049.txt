#include <bits/stdc++.h>

#define mp make_pair
#define st first
#define nd second
#define pb push_back

using namespace std;

typedef long long ll;
typedef pair< ll,ll > pll;
typedef pair< int,int > pii;

const int N = 500000, MAX = 10000000, mod = 1000000007;

int n, fac[MAX+5], a[N+5];
ll cur, pw[N+5];
int cnt[MAX+5];
vector<int> v[N+5];

void upd(int x, int t) {
	int sz = v[x].size();
	
	for (int mask = 0; mask < (1 << sz); mask++) {
		int mul = 1, k = 0;

		for (int i = 0; i < sz; i++) {
			if (mask & (1 << i))
				mul *= v[x][i], k++;
		}
		
		if (t == -1)
			cnt[mul] += t;

		if (k > 0) {
			cur += ((k & 1) ? 1 : -1) * t * pw[cnt[mul]] + mod;
			cur %= mod;
		}
		
		if (t == 1)
			cnt[mul] += t;
	}
}

int main()
{
	for (int i = 2; i <= MAX; i++) {
		if (fac[i])
			continue;
		
		fac[i] = i;

		if (i > 3163)
			continue;

		for (int j = i*i; j <= MAX; j += i) {
			if (!fac[j])
				fac[j] = i;
		}
	}

	scanf("%d", &n);

	pw[0] = 1;
	for (int i = 1; i <= n; i++) {
		pw[i] = pw[i-1] * 2;
		pw[i] %= mod;
	}

	for (int i = 1; i <= n; i++) {
		scanf("%d", a+i);

		for (int t = a[i]; t > 1; t /= fac[t]) {
			if (v[i].empty() || v[i].back() != fac[t])
				v[i].pb(fac[t]);
		}
	}

	for (int i = 1; i <= n; i++) {
		upd(i, 1);
	}

	ll ans = 0;

	for (int i = 1; i <= n; i++) {
		upd(i, -1);
	
		ll t1 = cur;
		
		upd(i, 1);

		ll t2 = cur;

		ans += t1 - (t2 - t1) + 1;
	}

	printf("%lld\n", (ans % mod + mod) % mod);

	return 0;
}
