#include<bits/stdc++.h>

using namespace std;

#define pii pair<int,int>
#define ll long long
#define N (int)(5e5+10)
#define N2 (int)(1e7+10)
#define mod 1000000007
#define mp make_pair
#define pb push_back
#define nd second
#define st first
#define inf mod
#define endl '\n'
#define sag (sol|1)
#define sol (root<<1)
#define ort ((bas+son)>>1)
#define bit(x,y) ((x>>y)&1)

int i,j,k,n,m,x,y,z;
int a[N],s1,s,S[N2];
int b[N],t,t1,pw[N];
int last[N2];
ll ans;
vector<int> v;

main(){
	cin >> n;

	for(i=1 ; i<=n ; i++)
		scanf("%d",a+i);

	pw[0] = 1;

	for(i=1 ; i<N ; i++)
		pw[i] = pw[i-1]*2%mod;

	for(i=2 ; i<N2 ; i++){
		if(last[i])
			continue;

		last[i] = i;

		for(ll j=(ll)i + i ; j<N2 ; j += i)
			if(!last[j])
				last[j] = i;
	}
	

	for(i=1 ; i<=n ; i++){

		int s = 0,x = a[i];

		v.clear();

		while(x!=1){
			int t = last[x];
			while(last[x] == t)
				x /= t;
			v.pb(t);
		} 

		for(int i=1 ; i<(1<<v.size()) ; i++){
			int w = 1;

			for(j=0 ; j<v.size() ; j++)
				if(bit(i,j))
					w *= v[j];
			
			if(__builtin_popcount(i)%2)
				s = ((ll)s + pw[S[w]] - 1)%mod;
			else
				s = ((ll)s - pw[S[w]] + 1 + mod)%mod;
			S[w]++;
		}
		t1 = ((ll)t1 + pw[::i-1] - s - 1 + mod) % mod;
	}

	for(i=1 ; i<=n ; i++){
		int s = 0,s2=0,x=a[i];
		v.clear();
		while(x!=1){
			int t = last[x];
			while(last[x] == t)
				x /= t;
			v.pb(t);
		}
	
		for(int i=1 ; i<(1<<v.size()) ; i++){
			int w = 1;
			for(j=0 ; j<v.size() ; j++)
				if(bit(i,j))
					w *= v[j];
			if(__builtin_popcount(i)%2){
				s2 = ((ll)s2 + pw[S[w]-1] - 1)%mod;
			}
			else{
				s2 = ((ll)s2- pw[S[w]-1] + 1 + mod)%mod;
			}
		}

		s2++;

		ans = (ans + (ll)pw[n] - ((ll)2*s2 + t1))%mod;
		ans = (ans+mod)%mod;
	}

	cout << ans << endl;
}
