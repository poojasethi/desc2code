#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define pb push_back
#define mod 1000000007LL
int mu[10000111];
int a[500011];
ll cn[10000111];
ll cnt[10000111],pp[500011];
vector<int>fact1;
ll modulo(ll a,ll b,ll c)
{
    ll x=1LL,y=a; // long long is taken to avoid overflow of intermediate results
    while(b > 0LL)
    {
        if(b%2LL == 1LL)
        {
            x=(x*y)%c;
        }
        y = (y*y)%c; // squaring the base
        b /= 2LL;
    }
    return x%c;
}

int main()
{
    int i,j,c;
    int n;
    scanf("%d",&n);
    for(i=0; i<n; i++)
    {
        scanf("%d",&a[i]);
        cnt[a[i]]++;
    }
    pp[0]=1LL;
    for(i=1; i<=500000; i++)
    {
        pp[i]=pp[i-1]+pp[i-1];
        if(pp[i]>=mod)
            pp[i]-=mod;
    }
    sort(a,a+n);
    for(i=2; i<=10000000; i++)
    {
        mu[i]++;
        for(j=i+i; j<=10000000; j+=i)
            mu[j]-=mu[i];
    }
    for(i=2; i<=10000000; i++)
    {
        for(j=i; j<=10000000; j+=i)
            cn[i]+=cnt[j];
    }
    cn[1]=n;
    for(i=1; i<=10000000; i++)
    {
        cnt[i]=pp[cn[i]]-1;
        if(cnt[i]<0)
            cnt[i]+=mod;
    }
    ll res=0LL,ans=0LL;
    mu[1]=-1;
    for(i=1; i<=10000000; i++)
    {
        cnt[i]=((-1)*mu[i]*cnt[i])%mod;
        if(cnt[i]<0)
            cnt[i]+=mod;
    }
//    for(i=1; i<=3; i++)
//        printf("%lld ",cnt[i]);
//    cout<<endl;
    for(i=1; i<=10000000; i++)
    {
        ans=(ans+cnt[i]);
        if(ans>=mod)
            ans-=mod;
    }
    //cout<<ans<<endl;
    ans=(pp[n]-ans-1+mod)%mod;
    //cout<<ans<<endl;
    res=(ans*(ll)n)%mod;
    for(i=2; i<=10000000; i++)
    {
        res=(res+((cn[i]*cnt[i])%mod));
        if(res>=mod)
            res-=mod;
    }
    printf("%lld\n",res);
    return 0;
}
