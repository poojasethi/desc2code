#include<bits/stdc++.h>
#define PB push_back
#define MP make_pair
#define A first
#define B second

using namespace std;
typedef long long LL;
typedef long double LD;
const int inf = 0x7fffffff;
const int MOD = 1000000007;
const int N = 10000000 + 10;
const int M = 500000 + 5;
vector<int> v;
int cnt[N], miu[N], pri[N], p[N], pw[M];
void mk(int x, int s){
	if (x == v.size()){cnt[s]++; return;}
	mk(x + 1, s);
	mk(x + 1, s * v[x]);
}
int main(){
	int m, n = N - 5, t = 0, ans = 0, x;
	miu[1] = 1;
	for (int i = 2; i <= n; i++){
		if (!p[i]) p[i] = i, pri[++t] = i, miu[i] = -1;
		for (int j = 1; j <= t && i * pri[j] <= n && pri[j] <= p[i]; j++)
			p[i * pri[j]] = pri[j], miu[i * pri[j]] = (p[i] == pri[j]) ? 0 : miu[i] * miu[pri[j]];
	}
	scanf("%d", &m);
	for (int i = 1; i <= m; i++){
		scanf("%d", &x); v.clear();
		while (x > 1){
			int y = p[x];
			while (!(x % y)) x /= y;
			v.PB(y);
		}
		mk(0, 1);
	}
	pw[0] = 1;
	for (int i = 1; i <= m; i++) pw[i] = (pw[i - 1] << 1) % MOD;
	for (int i = 1; i <= n; i++) ans = (ans + miu[i] * (pw[cnt[i]] - 1) * LL(cnt[i] - m)) % MOD;
	printf("%d\n", (ans + MOD) % MOD);
}
