#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define X first
#define Y second
#define REP(i,a) for( i=0;i<a;++i)
#define REPP(i,a,b) for( i=a;i<b;++i)
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	mp make_pair
#define	pb push_back

inline int max(int a,int b){return a<b?b:a;}
inline int min(int a,int b){return a>b?b:a;}
inline ll max(ll a,ll b){return a<b?b:a;}
inline ll min(ll a,ll b){return a>b?b:a;}
const int mod = 1e9+7;
const int N = 1e7+10;
const ll INF = 1e18;
const int mn= 1e6+10;
bool isprime[N];

int num[N];
int s[N];
int p[mn],l[N],arr[N],sum[N],z[N];
int main(){
  int n,i,j;
  scanf("%d",&n);
  REP(i,N) num[i]=1,l[i]=1;
  REPP(i,2,N){
    if(isprime[i]==1) continue;
      for(j=i;j<N;j+=i) num[j]*=i,l[j]=-l[j],isprime[j]=1;
  }
  p[0]=1;
  //while(1);
  //printf("1\n");
  int x;
  REP(i,n){
    p[i+1]=(p[i]*2)%mod;
     scanf("%d",&x);
    sum[num[x]]++;
  }
  ll m;
  for(i=N-1;i>=2;i--){
  //  if(i<=10) printf("%d %d\n",i,num[i]);
    if(num[i]!=i) continue;
    x=0;
    m=0;
    for(j=i;j<N;j+=i) if(num[j]==j){
      x+=sum[j];
      m-=s[j];
    }
    z[i]=x;
    m=(m%mod+p[x]-1+2*mod)%mod;
    s[i]=m;
//    if(i<=10) printf("gg%d %lld\n",i,s[i]);
  }
  ll ans=0;
  REPP(i,2,N){
    if(num[i]!=i) continue;
    x=(-l[i])*z[i];
    if(x!=0) for(j=i;j<N;j+=i) if(num[j]==j) arr[j]+=x;
    ans=(ans+(n-arr[i])*1ll*s[i])%mod;
  //  if(i<=10)printf("kk%d %d %d\n",i,sum[i],arr[i]);
  }
  printf("%lld\n",(ans+mod)%mod);
  return 0;
}
