#include<bits/stdc++.h>
#define MOD 1000000007
#define N 10000010

using namespace std;

vector<int> c;
int cnt[N], aos[N], pri[N], p[N], pw[520000];

void dfs(int sl, int vl){
	if (sl == c.size()){cnt[vl]++; return;}
	dfs(sl + 1, vl);
	dfs(sl + 1,  vl*c[sl]);
}
int main(){
    //freopen("e.in","r",stdin);
    //freopen("e.out","w",stdout);
	int m, n = N - 5, t = 0;
	aos[1] = 1;
	for (int i = 2; i <= n; i++){
		if (!p[i]) p[i] = i, pri[++t] = i, aos[i] = -1;
		for (int j = 1; j <= t && i * pri[j] <= n && pri[j] <= p[i]; j++)
			p[i * pri[j]] = pri[j], aos[i * pri[j]] = (p[i] == pri[j]) ? 0 : aos[i] * aos[pri[j]];
	}
	cin >> m;
	for (int i = 1; i <= m; i++){
        int x;
		cin >> x;
        c.clear();
		while (x > 1){
			int y = p[x];
			while (!(x % y)) x /= y;
			c.push_back(y);
		}
		dfs(0, 1);
	}
	pw[0] = 1;
	int ans = 0;
	for (int i = 1; i <= m; i++) pw[i] = (pw[i - 1]*2) % MOD;
	for (int i = 1; i <= n; i++) ans = (ans + 1ll*aos[i] * 1ll*(pw[cnt[i]] - 1) * 1ll*(cnt[i] - m)) % MOD;
	ans = (ans + MOD)%MOD;
    cout << ans;
}
