#include <bits/stdc++.h>
using namespace std;

#define fru(j,n) for(int j=0; j<(n); ++j)
#define tr(it,v) for(typeof((v).begin()) it=(v).begin(); it!=(v).end(); ++it)
#define x first
#define y second
#define pb push_back
#define ALL(G) (G).begin(),(G).end()

//#define DEBUG
#ifdef DEBUG
	#define DEB printf
#else
	#define DEB(...)
#endif


typedef long long ll;
typedef long long LL;
typedef double D;
typedef pair<int,int> pii;
typedef vector<int> vi;

const int mod = 1000000007;
const int MAXN = 500006;//10^6
const int UP= 10000007;
pii G[UP];//dzielnik, mi
int A[MAXN];

int Z[UP];
vi dziel(int a){
	vi E;
	while(a>1){
		int p=G[a].x;
		while(a%p==0) a/=p;
		E.pb(p);
	}
	return E;
}

int main(){
	int n;
	scanf("%d",&n);
	fru(i,n) scanf("%d",&A[i]);
	G[1]=pii(1,-1);
	for(int i=2;i<UP;++i){
		int p=G[i].x;
		if(p==0) {
			G[i].x=p=i;
			if(1LL*p*p<UP) for(int j=p*p;j<UP;j+=i) G[j].x=i;
		}
		if((i/p)%p) G[i].y=-G[i/p].y;
	}
	fru(i,n){
		vi P=dziel(A[i]);
		fru(ma,1<<P.size()){
			int d=1;
			fru(j,P.size()) if(ma&(1<<j)) d*=P[j];
			Z[d]=(Z[d]*2+1)%mod;
		}
	}
	LL all=0;
	fru(i,UP) if(i>1) all+=G[i].y*Z[i]+mod;
	all%=mod;
//	fru(i,UP) if(Z[i]) printf("jest %d podzbi dzielacych sie przez %d\n",Z[i],i);
	DEB("all = %lld\n",all);
	LL ret=0;
	fru(i,n){
		vi P=dziel(A[i]);
		LL tu=all;
		fru(ma,1<<P.size()) if(ma){
			int d=1;
			fru(j,P.size()) if(ma&(1<<j)) d*=P[j];
			tu+=mod-Z[d]*G[d].y;
		}
		ret+=tu;
		DEB("dla goscia %d dodajde do wyniku %lld\n",A[i],tu);
	}	

	printf("%lld\n",ret%mod);
	return 0;
}
