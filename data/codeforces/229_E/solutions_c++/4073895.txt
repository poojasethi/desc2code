#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
using namespace std;

#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define SZ(c) ((int)(c).size())

vector<int> all, a[1005];
double dp[1005], mul=1.0;

int main(void) {
	int n, m, k;
	scanf("%d%d", &n, &m);
	for(int i=0;i<m;i++) {
		scanf("%d", &k);
		while(k--) {
			int x;
			scanf("%d", &x);
			a[i].push_back(x);
			all.push_back(x);
		}
	}
	sort(all.begin(), all.end());
	int v = all[SZ(all)-n];
	dp[0] = 1.0;
	int sum=0;
	for(int i=0;i<m;i++) {
		int nvi=0, nvj=0;
		for(int j=0;j<SZ(a[i]);j++)
			if(a[i][j]>v) nvi++;
			else if(a[i][j]==v) nvj++;
		for(int w=1;w<=nvi;w++)	mul *= w/(double)(SZ(a[i])-w+1);
		
		if(nvj) for(int w=sum+1;w>0;w--) dp[w] += dp[w-1] * (nvi+1)/(SZ(a[i])-nvi);
		sum += nvj;
	}
	int c=0; for(int i=SZ(all)-n;i<SZ(all);i++) if(all[i]==v) ++c;
	int d=0; for(int i=0;i<SZ(all);i++) if(all[i]==v) ++d;
	double ans=dp[c] * mul;
	for(int i=1;i<=c;i++) ans *= i/(double)(d-i+1);
	printf("%.9f\n", ans);
	return 0;
}
