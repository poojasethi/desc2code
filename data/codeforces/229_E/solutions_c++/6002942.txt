#include <set>
#include <cmath>
#include <cstdio>
#include <vector>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;
#define rep(i,a,b) for (int i=a;i<=b;++i)
#define dep(i,a,b) for (int i=a;i>=b;--i)

int n,m,p0;
int a[2000][30],need[2000];
struct pp{int x,i;} p[2000];
double f[1100][1100],g[1100][1100],d[1100];

bool cmp(pp x,pp y){
	return x.x>y.x;
}
int main()
{
	scanf("%d%d",&n,&m);
	rep(i,1,m){
		scanf("%d",&a[i][0]);
		rep(j,1,a[i][0]) scanf("%d",&a[i][j]),p[++p0].x=a[i][j],p[p0].i=i;
		sort(a[i]+1,a[i]+1+a[i][0]);
	}
	sort(p+1,p+1+p0,cmp);
	int y=1;
	while (y<=n&&p[n+1].x!=p[y].x) need[p[y].i]++,y++;
	y=n-y+1;
	f[1][0]=f[1][1]=1;
	rep(i,2,20) {
		f[i][0]=f[i][i]=1;
		rep(j,1,i-1) f[i][j]=f[i-1][j]+f[i-1][j-1];
	}
	double ans; int ti=0;
	g[0][0]=1;
	rep(i,1,m) {
		g[i][0]=g[i-1][0]/f[a[i][0]][need[i]];
		rep(j,1,y)
		{
			g[i][j]=g[i-1][j]/f[a[i][0]][need[i]];
			if (a[i][a[i][0]-need[i]]==p[n].x) g[i][j]+=g[i-1][j-1]/f[a[i][0]][need[i]+1];
		}
		if (a[i][a[i][0]-need[i]]==p[n].x) ti++;
	}
	ans=g[m][y];
	rep(i,y+1,ti) ans=(double)ans/i;
	rep(i,2,ti-y) ans=ans*i;
	printf("%.9f\n",ans);
	return 0;
}