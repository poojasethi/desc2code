#include<stdio.h>
#include<vector>
#include<algorithm>
#define pb push_back
#define inf 1000002012
#define it vector<int >::iterator
#define Maxn 102012
#define Maxm 1012
using namespace std;
vector<int > E[Maxn];
int Must[Maxn],Maybe[Maxn],s[Maxn],N,M,cnt,l,r,StdMust,StdMaybe;
long double C[Maxm][Maxm],g[Maxm][Maxm],f[Maxm][Maxm];
inline int cmp(const void*a,const void*b){return*(int *)b-*(int *)a;}
int main()
{
scanf("%d%d",&N,&M);
for(int i=1;i<=M;++i)
{
int T;
scanf("%d",&T);
while(T--)
{
scanf("%d",&s[++cnt]);
E[i].pb(s[cnt]);
}
}
l=N,r=N;
qsort(s+1,cnt,sizeof(s[0]),cmp);
while(r<cnt&&s[r+1]==s[r])++r;
while(l>1&&s[l-1]==s[l])--l;
s[0]=inf;
StdMust=s[l-1];StdMaybe=s[l];
for(int i=1;i<=M;++i)
{
for(it j=E[i].begin();j!=E[i].end();++j)
if(*j>=StdMust)++Must[i];else
if(*j>=StdMaybe)++Maybe[i];
}
C[0][0]=1;
for(int i=1;i<=1000;++i)
for(int j=0;j<=i;++j)
C[i][j]=C[i-1][j]+C[i-1][j-1];
f[0][0]=1;g[0][0]=1;
int MaybeT=N-l+1;
for(int i=1;i<=M;++i)
{
for(int j=0;j<=MaybeT;++j)
{
for(int k=0;k<=Maybe[i]&&j-k>=0;++k)
f[i][j]+=f[i-1][j-k]/C[E[i].size()][Must[i]+k],g[i][j]+=g[i-1][j-k];
}
}
printf("%.10f",(double)(f[M][MaybeT]/g[M][MaybeT]));
return 0;
}