#include <cstdio>
#include <algorithm>
using	namespace	std;
const	int	maxn = 1000 + 10;
int	p1[maxn], p2[maxn], p3[maxn];
double	c[maxn][maxn], dp[maxn][maxn], da[maxn][maxn];
int	n, m, t, l;
struct	fuck
{
	int	wei, x;
}	pt[maxn];
bool	cmp(fuck a, fuck b)	{return a.x < b.x;}
int	main()
{
//	freopen("229e.in", "r", stdin);
//	freopen("229e.out", "w", stdout);
	scanf("%d%d", &n, &m);
	l = 0;
	for (int i=1; i<=m; i++)
		for (scanf("%d", &t); t--; ) scanf("%d", &pt[++l].x), p3[pt[l].wei = i]++;
	sort(pt + 1, pt + l + 1, cmp);
	for (int i=0; i<=l; i++) c[i][0] = 1;
	for (int i=1; i<=l; i++)
		for (int j=i; j<=l; j++)
			c[j][i] = j == i ? 1 : (c[j-1][i-1] * c[j-1][i]) / (c[j-1][i-1] + c[j-1][i]);
	for (int i=l; i; i--)
	{
		if (cmp(pt[i], pt[l-n+1])) break;
		if (cmp(pt[l-n+1], pt[i])) p1[pt[i].wei]++; else p2[pt[i].wei]++;
	}
	for (int i=1; i<=m; i++) n -= p1[i];
	dp[0][0] = 1; da[0][0] = 1;
	for (int i=1; i<=m; i++)
		for (int j=0; j<=n; j++)
			for (int k=0; k<=p2[i] && k <= j; k++)
				dp[i][j] += dp[i-1][j-k] * c[p3[i]][k + p1[i]], da[i][j] += da[i-1][j-k];
	printf("%.14lf\n", dp[m][n] / da[m][n]);
	return 0;
}