#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>
#include <cmath>
#include <stack>
#include <map>
#include <set>
#include <deque>
#include <cstring>
#include <functional>
#include <climits>
#include <list>
#include <ctime>
#include <complex>

#define F1(x,y,z) for(int x=y;x<z;x++)
#define F2(x,y,z) for(int x=y;x<=z;x++)
#define F3(x,y,z) for(int x=y;x>z;x--)
#define F4(x,y,z) for(int x=y;x>=z;x--)
#define pb push_back
#define LL long long
#define co complex<double>
 
#define MAX 100005
#define AMAX 1500
#define MOD 1000000007

#define f(c,d) ((1<<(c))*(d))

using namespace std;

int n,m,qb[MAX*5],qc[MAX*5],bx[20][MAX*5],ai[MAX*5],bi[MAX*5],az,bz,as[MAX*5],bs[MAX*5],pa[MAX*5],pb[MAX*5],ta,tb;
char qa[MAX*5][2];
bool vva[MAX*5],vvb[MAX*5];
vector<int> la[MAX*5],va[MAX*5],vb[MAX*5];
LL ax[20][MAX*5],ans[MAX*5],tc;

int fa(int a){
	if(pa[a]==a)return a;
	return pa[a]=fa(pa[a]);
}

int fb(int a){
	if(pb[a]==a)return a;
	return pb[a]=fb(pb[a]);
}

void dfs1(int a){
	ai[a]=++az;
	F1(b,0,va[a].size())dfs1(va[a][b]);
}

void dfs2(int a){	
	bi[a]=++bz;
	F1(b,0,vb[a].size())dfs2(vb[a][b]);
}

void f1(int a,int b,int c,int d){
	if(f(c,d)==a&&f(c,d+1)==b){
		ax[c][d]+=tc;
		return;
	}
	c--;
	d=d*2+1;
	if(b<=f(c,d))f1(a,b,c,d-1);
	else if(a>=f(c,d))f1(a,b,c,d);
	else{
		f1(a,f(c,d),c,d-1);
		f1(f(c,d),b,c,d);
	}
}

void f2(int a,int b,int c,int d){
	if(f(c,d)==a&&f(c,d+1)==b){
		bx[c][d]=az;
		return;
	}
	c--;
	d=d*2+1;
	if(b<=f(c,d))f2(a,b,c,d-1);
	else if(a>=f(c,d))f2(a,b,c,d);
	else{
		f2(a,f(c,d),c,d-1);
		f2(f(c,d),b,c,d);
	}
}

int main(){
	scanf("%d%d",&n,&m);
	F1(a,0,m){
		scanf("%s%d",qa[a],&qb[a]);
		if(qa[a][0]=='U'){
			scanf("%d",&qc[a]);
			va[qb[a]].pb(qc[a]);
			vva[qc[a]]=1;
		}else if(qa[a][0]=='M'){
			scanf("%d",&qc[a]);
			vb[qb[a]].pb(qc[a]);
			vvb[qc[a]]=1;
		}
	}
	F2(a,1,n){
		if(!vva[a])dfs1(a);
		if(!vvb[a])dfs2(a);
		as[a]=bs[a]=1;
		pa[a]=pb[a]=a;
	}
	F1(a,0,m){
		if(qa[a][0]=='Z'){
			az=a;
			if(a)f2(bi[qb[a]],bi[qb[a]]+bs[bi[qb[a]]],19,0);
		}else if(qa[a][0]=='M'){
			ta=fb(bi[qb[a]]);
			tb=fb(bi[qc[a]]);
			bs[ta]+=bs[tb];
			pb[tb]=ta;
		}else if(qa[a][0]=='Q'){
			ta=bi[qb[a]];
			tb=0;
			F1(b,0,19){
				tb=max(tb,bx[b][ta]);
				ta>>=1;
			}
			if(tb)la[tb].pb(a);
		}
	}
	F1(a,0,m){
		if(qa[a][0]=='A'){
			tc=as[ai[qb[a]]];
			f1(ai[qb[a]],ai[qb[a]]+as[ai[qb[a]]],19,0);
		}else if(qa[a][0]=='U'){
			ta=fa(ai[qb[a]]);
			tb=fa(ai[qc[a]]);
			as[ta]+=as[tb];
			pa[tb]=ta;
		}else if(qa[a][0]=='Q'){
			ta=ai[qb[a]];
			F1(b,0,19){
				ans[a]+=ax[b][ta];
				ta>>=1;
			}
			printf("%I64d\n",ans[a]);
		}else if(qa[a][0]=='Z')F1(b,0,la[a].size()){
			ta=ai[qb[la[a][b]]];
			F1(c,0,19){
				ans[la[a][b]]-=ax[c][ta];
				ta>>=1;
			}
		}
	}
	//system("pause");
	return 0;
}
