#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <vector>
#include <cmath>
#include <cstdlib>
#define sy system("pause")
#define A first
#define B second

using namespace std;
typedef pair <int, int> Pair;
typedef vector <Pair> Vector;
typedef long long LL;

const int N = 500000 + 5;

int cnt, tot, n, s[N * 2], Size[N * 2], fa[N * 2], tag1[N * 2], now[N];
char ch[N];
Pair da[N];
LL tag2[N * 2], ans[N];
Vector vec[N];

void newer() {
	tot = n;
	memset(tag1, 0, sizeof(tag1));
	memset(tag2, 0, sizeof(tag2));
	memset(Size, 0, sizeof(Size));
	for (int i = 1; i <= 2 * n; i++) fa[i] = i;
	for (int i = 1; i <= n; i++) now[i] = i, Size[i] = 1;
}
int find(int x) {
	if (fa[x] != fa[fa[x]]) {
		int k = find(fa[x]);
		tag2[x] += tag2[fa[x]];
		tag1[x] = max(tag1[x], tag1[fa[x]]);
		fa[x] = k;
	}
	return fa[x];
}
int merge(int x, int y) {
	Size[++tot] = Size[x] + Size[y];
	return fa[x] = fa[y] = tot;
}
LL query(int x) {
	find(x);
	if (fa[x] != x) return tag2[x] + tag2[fa[x]];
	else return tag2[x];
}
int main() {
	int m, t;
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= m; i++) {
		scanf(" %c%d", &ch[i], &da[i].A);
		if (ch[i] == 'U' || ch[i] == 'M') scanf("%d", &da[i].B);
		if (ch[i] == 'Q') da[i].B = ++cnt;
	}
	newer();
	for (int i = 1; i <= m; i++) {
		if (ch[i] == 'M') now[da[i].A] = merge(now[da[i].A], now[da[i].B]);
		if (ch[i] == 'Z') tag1[now[da[i].A]] = i;
		if (ch[i] == 'Q')
			vec[max(tag1[find(da[i].A)], tag1[da[i].A])].push_back(da[i]);
	}
	newer();//for (int i = 1; i <= n; i++) printf("%d ", query(i));printf("\n");
	for (int i = 1; i <= m; i++) {
		if (ch[i] == 'U') now[da[i].A] = merge(now[da[i].A], now[da[i].B]);
		if (ch[i] == 'A') tag2[now[da[i].A]] += Size[now[da[i].A]];
		if (ch[i] == 'Q') ans[da[i].B] += query(da[i].A);
		for (int j = 0; j < vec[i].size(); j++)
			ans[vec[i][j].B] -= query(vec[i][j].A);
		//  for (int i = 1; i <= n; i++) printf("%d ", query(i));printf("\n");
	}
	for (int i = 1; i <= cnt; i++) printf("%I64d\n", ans[i]);
	return 0;
}
