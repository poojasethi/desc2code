def solve(a, b, mapped):
    n = len(a)
    m = len(b)
    r1 = []
    r2 = []
    c = []
    i = 0
    j = 0
    while (i < n or j < m):
        while (i < n and a[i] == 1):
            c.append(1)
            r1.append(i + 1)
            i += 1
        while (j < m and b[j] == 1):
            c.append(1)
            r1.append(j + n + 1)
            j += 1
        while (i < n and a[i] == 0):
            c.append(0)
            r1.append(i + 1)
            i += 1
        while (j < m and b[j] == 0):
            c.append(0)
            r1.append(j + n + 1)
            j += 1
    c.append(mapped)
    p = c[0]
    for i in xrange(len(c)):
        if c[i] != p:
            p = c[i]
            r2.append(i)
    return (r1, r2)
f = open("input.txt")
o = open("output.txt", "w")
n = int(f.readline().split()[0])
a = map(int, f.readline().split())
m = int(f.readline().split()[0])
b = map(int, f.readline().split())
(r11, r12) = solve(a, b, 0)
a = map(lambda z: 1 - z, a)
b = map(lambda z: 1 - z, b)
(r21, r22) = solve(a, b, 1)
if len(r12) > len(r22):
    r11 = r21
    r12 = r22
o.write(' '.join(map(str, r11)) + '\n')
o.write(str(len(r12)) + '\n')
o.write(' '.join(map(str, r12)) + '\n')
f.close()
o.close()
