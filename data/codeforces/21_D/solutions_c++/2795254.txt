//By Lin
#include<cstdio>
#include<cstring>
#define maxn 15
#define Rep(i,n) for(int i = 0; i<(n); i++ )
#define rep(i,st,ed) for (int i = st; i<=(ed); i++)
using namespace std;

int     n,m;
int     g[maxn][maxn],dp[1<<maxn],d[maxn];
bool    mark[maxn];
void    check(int &x,int y){
    if ( x == -1 || x > y ) x = y;
}
int     solve(int sta ) {
    if ( dp[sta] != -1 ) return dp[sta];
    Rep(i,n) if ( sta&(1<<i) ) {
        rep(j,i+1,n-1) if ( sta&(1<<j) ) check(dp[sta],g[i][j]+solve(sta^(1<<i)^(1<<j)));
        break;
    }
    return dp[sta];
}
int     main(){
    int x,y,w;
    scanf("%d%d", &n, &m );
    memset( g , -1 ,sizeof(g) );
    int ans = 0;
    mark[0] = true;
    while ( m -- ){
        scanf("%d%d%d", &x, &y , &w );
        ans += w;
        x--, y--;
        mark[x] = mark[y] = 1;
        d[x] ^= 1;  d[y] ^= 1;
        check( g[x][y] , w ); 
        check( g[y][x] , w );
    }
    Rep(k,n) Rep(i,n) Rep(j,n)
        if ( g[i][k] != -1  && g[k][j] != -1 ) check( g[i][j] , g[i][k]+g[k][j] );
    bool flag = true;
    Rep(i,n) Rep(j,n) 
        if ( mark[i] && mark[j] && i!=j && g[i][j] == -1 ) flag = false;
    if ( !flag ) { printf("-1\n"); return 0; }
    int sta = 0;
    Rep(i,n) sta |= (1<<i)*d[i];
    memset( dp , -1 , sizeof(dp) );
    dp[0] = 0;
    printf("%d\n" , ans+solve(sta) );
    return 0;
}
