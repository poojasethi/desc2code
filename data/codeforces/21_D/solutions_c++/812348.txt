#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int inf=(1<<29);
int dis[20][20],n,m,st[20],d[20];
int find_st(int x)
{
    if(st[x]==x) return x;
    return st[x]=find_st(st[x]);
}
int dp[1<<16];
int dfs(int st)
{
    if(dp[st]!=-1) return dp[st];
    if(st==0) return 0;
    dp[st]=inf;
    for(int i=0;i<n;i++)
    {
        if(((1<<i)&st)==0) continue;
        for(int j=i+1;j<n;j++)
        {
            if(((1<<j)&st)==0) continue;
            dp[st]=min(dp[st],dfs(st^(1<<i)^(1<<j))+dis[i][j]);
        }
        break;
    }
    return dp[st];
}
int main()
{
    scanf("%d%d",&n,&m);
    for(int i=0;i<n;i++) st[i]=i;
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++) dis[i][j]=inf;
    int ans=0;
    while(m--)
    {
        int u,v,w;
        scanf("%d%d%d",&u,&v,&w);
        u--;v--;
        dis[u][v]=min(dis[u][v],w);
        dis[v][u]=dis[u][v];
        ans+=w;
        d[u]++;
        d[v]++;
        st[find_st(u)]=find_st(v);
    }
    for(int i=0;i<n;i++) if(d[i]&&find_st(i)!=find_st(0))
    {
        printf("%d\n",-1);
        return 0;
    }
    for(int k=0;k<n;k++)
        for(int i=0;i<n;i++)
            for(int j=0;j<n;j++) dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);
    int st=0;
    memset(dp,-1,sizeof(dp));
    for(int i=0;i<n;i++) if(d[i]&1) st|=(1<<i);
    ans+=dfs(st);
    printf("%d\n",ans);
    return 0;
}
