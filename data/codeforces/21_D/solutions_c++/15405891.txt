#include<iostream>
#include<stdio.h>
#include<string>
#include<algorithm>
#include<math.h>
#include<assert.h>
#include<queue>
using namespace std;
int d[20][20];
int in[20];
int sum=0;
const int INF=1000000000;
int dp[1<<15];
int s=0;
int getans(int n)
{
    int i,j;
    queue<int> Q;
    for(i=1;i<n;i++)
        if(in[i]&&d[0][i]>=INF)return -1;
    int tot=(1<<n)-1;
    for(i=0;i<=tot;i++)
        dp[i]=INF;
    dp[s]=0;
    Q.push(s);
    
    while(!Q.empty())
    {
        int u=Q.front();
        Q.pop();
        
        for(i=0;i<n;i++)
            for(j=0;j<n;j++)
            {
               if(dp[u^(1<<i)^(1<<j)]>dp[u]+d[i][j])
               {
                   dp[u^(1<<i)^(1<<j)]=dp[u]+d[i][j];
                   Q.push(u^(1<<i)^(1<<j));
               }
            }
        
    }
    
    return dp[0]+sum;
}

int main()
{
    int n,m;
    cin>>n>>m;
    assert(n>=1&&n<=15);
    assert(m>=0&&m<=2000);
    int i,j,k;
    int x,y,w;
    for(i=0;i<=n;i++)
    {
        for(j=0;j<=n;j++)
            d[i][j]=INF;
        d[i][i]=0;
    }
    for(i=0;i<m;i++)
    {
        cin>>x>>y>>w;
        assert(x>=1&&x<=n);
        assert(y>=1&&y<=n);
        assert(w>=1&&w<=10000);
        x--,y--;
        sum+=w;
        d[x][y]=min(d[x][y],w);
        d[y][x]=min(d[y][x],w);
        in[x]++,in[y]++;
        s=s^(1<<x);
        s=s^(1<<y);
    }
    

    for(k=0;k<n;k++)
        for(i=0;i<n;i++)
            for(j=0;j<n;j++)
                d[i][j]=min(d[i][j],d[i][k]+d[k][j]);
    
    cout<<getans(n)<<endl;
    return 0;
}