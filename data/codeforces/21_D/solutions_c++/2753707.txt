#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
using namespace std;
const int inf=0x3f3f3f3f;
int d[20],n,ans,f[1<<15],map[20][20],m;
bool vis[1<<15],e[20];
int dfs(int state)
{
    int i,j;
    if(vis[state])return f[state];
    vis[state]=true;
    if(!state)return f[state]=0;
    for(i=0;i<n;i++)
    for(j=i+1;j<n;j++)
    if((state>>i&1)&&(state>>j&1))
    f[state]=min(f[state],dfs(state^(1<<i)^(1<<j))+map[i+1][j+1]);
    return f[state];
}
int main()
{
    int i,j,k,a,b,c,all=0;
    scanf("%d%d",&n,&m);
    memset(f,inf,sizeof(f));
    memset(map,inf,sizeof(map));
    for(i=1;i<=n;i++)
    map[i][i]=0;
    while(m--)
    {
        scanf("%d%d%d",&a,&b,&c);
        ans+=c;e[a]=e[b]=true;
        map[a][b]=map[b][a]=min(map[a][b],c);
        d[a]^=1;d[b]^=1;
    }
    for(i=1;i<=n;i++)
    if(d[i])all|=1<<(i-1);
    for(k=1;k<=n;k++)
    for(i=1;i<=n;i++)
    for(j=1;j<=n;j++)
    map[i][j]=min(map[i][j],map[i][k]+map[k][j]);
    ans=dfs(all)+ans;
    if(ans>=inf)ans=-1;
    for(i=1;i<=n;i++)
    if(map[1][i]>=inf&&e[i])ans=-1;
    printf("%d\n",ans);
}
