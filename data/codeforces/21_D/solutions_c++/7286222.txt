#include<cstdio>
#include<algorithm>
using namespace std;
int n,f[16][16],m,ans,dp[1<<15+1],sv[16],tmp;
int dfs(int x){
  if(dp[x] != 0) return dp[x];
  if(x == 0) return 0;
  dp[x] = 2001*20001;
  for(int i=n-1;i>=0;i--)
    if((x&(1<<i))){
      for(int j=0;j<i;j++)
    dp[x] = min(dp[x],dfs(x^(1<<i)^(1<<j)) + f[i][j]);
    }
  return dp[x];
}
int main(){
  scanf("%d%d",&n,&m);
  for(int i=0;i<n;i++)
    for(int j=0;j<n;j++)
      f[i][j] = 2001*10000;
  for(int i=0,u,v,w;i<m;i++){
    scanf("%d%d%d",&u,&v,&w);
    u--; v--; sv[u]++; sv[v]++;
    ans += w;
    f[u][v] = f[v][u] = min(f[u][v],w);
  }
  for(int i=0;i<n;i++)
    f[i][i] = 0;
  for(int k=0;k<n;k++)
    for(int i=0;i<n;i++)
      for(int j=0;j<n;j++)
        f[i][j] = min(f[i][j],f[i][k] + f[k][j]);
  for(int i=0;i<n;i++)
      if(f[0][i] == 2001*10000 && sv[i] != 0){
          printf("-1"); return 0;
      }
  for(int i=0;i<n;i++)
    if((sv[i]&1))
      tmp |= (1<<i);
  printf("%d",dfs(tmp)+ans);
  return 0;
}
