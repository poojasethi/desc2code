#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <queue>

#define LL long long
#define mp(x, y) make_pair(x, y)
#define pb(x) push_back(x)
#define size(S) S.size()
#define PII pair<int, int>
#define PID pair<int, double>

using namespace std;

int n, m, x, y, w, e[20][20], ans;
bool d[20], v[20];
int f[1 << 15];

int main(){
	memset(f, 60, sizeof(f));
	memset(e, 60, sizeof(e));
	for (cin >> n >> m; m; m--){
		cin >> x >> y >> w; x--; y--;
		e[x][y] = min(e[x][y], w); e[y][x] = e[x][y];
		d[x] = !d[x]; d[y] = !d[y]; v[x] = v[y] = true;
		ans += w;
	}

	for (int i = 0; i < n; i++) e[i][i] = 0;
	for (int k = 0; k < n; k++)
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				e[i][j] = min(e[i][j], e[i][k] + e[k][j]);

	for (int i = 0; i < n; i++) if (v[i] && e[0][i] > 10000 * n){
		cout << -1 << endl;
		return 0;
	}

	f[0] = 0;
	for (int s = 0; s < (1 << n); s++){
		for (int i = 0; i < n; i++) if (((1 << i) & s) == 0 && !d[i])
			f[s ^ (1 << i)] = min(f[s ^ (1 << i)], f[s]);
		for (x = 0; x < n; x++) if (((1 << x) & s) == 0 && d[x]) break;
		if (x < n) for (y = 0; y < n; y++) if (x != y && ((1 << y) & s) == 0 && d[y])
			w = s ^ (1 << x) ^ (1 << y), f[w] = min(f[w], f[s] + e[x][y]);
	}

	cout << ans + f[(1 << n) - 1] << endl;
	return 0;
}
