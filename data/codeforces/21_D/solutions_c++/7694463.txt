#include <cstdio>
#include <algorithm>
using namespace std;
int Dist[20][20];
int Deg[20];
int F[2<<15];
const int INF=20000007;
bool Exist[20];
int Ans=0,n,m;
int main()
{
    scanf("%d%d",&n,&m);
    if (m==0)
    {
        puts("0");
        return 0;
    }
    for (int i=1;i<=n;i++)
        for (int j=1;j<=n;j++)
            Dist[i][j]=INF;
    for (int i=1,u,v,d;i<=m;i++)
    {
        scanf("%d%d%d",&u,&v,&d);
        Dist[v][u]=Dist[u][v]=min(Dist[u][v],d);
        Ans+=d;
        Exist[v]=Exist[u]=true;
        Deg[u]++,Deg[v]++;
    }
    if (!Exist[1])
    {
        puts("-1");
        return 0;
    }
    for (int k=1;k<=n;k++)
        for (int i=1;i<=n;i++)
            for (int j=1;j<=n && i!=k;j++)
                if (j!=k && i!=j) Dist[i][j]=min(Dist[i][j],Dist[i][k]+Dist[k][j]);
    for (int i=2;i<=n;i++)
        if (Dist[i][1]>=INF && Exist[i])
        {
            puts("-1");
            return 0;
        }
    int S=(1<<n)-1;
    for (int i=0;i<=S;i++) F[i]=INF;
    for (int i=1;i<=n;i++)
        if (Deg[i]&1) S-=1<<i-1;
    F[S]=0;
    for (int i=S;i!=(1<<n)-1;i++)
        if (F[i]<INF)
        {
            int l=0,r;
            for (;l<n;l++)
                if ((i&(1<<l))==0) break;
            for (r=l+1;r<n;r++)
                if ((i&(1<<r))==0) F[i+(1<<l)+(1<<r)]=min(F[i+(1<<l)+(1<<r)],F[i]+Dist[l+1][r+1]);
        }
    (F[(1<<n)-1]<INF) ? printf("%d\n",F[(1<<n)-1]+Ans) : puts("-1");
    return 0;
}
