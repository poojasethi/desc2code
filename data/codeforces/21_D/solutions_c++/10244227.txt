#include<bits/stdc++.h>
using namespace std;

int mat[20][20];
int dp[1<<15],deg[20];
int n,m;

int p[20];
int f(int x){
    return x==p[x]?x:p[x]=f(p[x]);
}

void update(int x,int y){
    int fx=f(x),fy=f(y);
    if(fx!=fy)p[fx]=fy;
}

int main(){
    scanf("%d%d",&n,&m);
    for(int i=0;i<n;i++)p[i]=i;
    memset(mat,63,sizeof(mat));
    int ret=0;
    for(int i=0;i<m;i++){
        int x,y,z;
        scanf("%d%d%d",&x,&y,&z);
        x--;y--;
        ret+=z;
        update(x,y);
        deg[x]++;
        deg[y]++;
        mat[x][y]=mat[y][x]=min(z,mat[x][y]);
    }
    for(int i=1;i<n;i++){
        if(0==deg[i])continue;
        if(f(i)!=f(0)){
            puts("-1");
            return 0;
        }
    }
    for(int k=0;k<n;k++){
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                mat[i][j]=min(mat[i][j],mat[i][k]+mat[k][j]);
            }
        }
    }
    memset(dp,63,sizeof(dp));
    dp[0]=0;
    for(int i=3;i<(1<<n);i++){
        for(int j=0;j<n;j++){
            if((1<<j)&i){
                for(int k=0;k<j;k++){
                    if(k==j)continue;
                    dp[i]=min(dp[i],dp[i^(1<<j)^(1<<k)]+mat[j][k]);
                }
            }
        }
    }
    int s=0;
    for(int i=0;i<n;i++){
        if(deg[i]&1)s|=(1<<i);
    }
    printf("%d\n",ret+dp[s]);
    return 0;
}

			      			     	 	 		 	 	   	