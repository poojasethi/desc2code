#include <iostream>
#include <vector>
using namespace std;
const int oo = 1<<29;
bool vis[20];
int n,e;
int d[20];
int dis[20][20];
int solve (vector <int> &odd,int p,int c){
    if (p==odd.size())
        return c;
    if (vis[p])
        return solve(odd,p+1,c);
    int re = oo;
    for (int t=p+1; t<odd.size(); t++) if (!vis[t]){
        vis[t]=true;
        re = min(re,solve(odd,p+1,c+dis[odd[p]][odd[t]]));
        vis[t]=false;
    }
    return re;
}
int main(){
    cin >> n >> e;
    for (int i=0; i<n; i++)
        for (int j=0; j<n; j++) if (i!=j)
            dis[i][j]=oo;
    int ans=0;
    for (int i=0; i<e; i++){
        int a,b,w; 
        cin >> a >> b >> w;
        a--; b--;
        dis[a][b] = dis[b][a] = min(dis[a][b],w);
        d[a]++; 
        d[b]++;
        ans+=w;
    }
    for (int i=0; i<n; i++)
        for (int j=0; j<n; j++)
            for (int k=0; k<n; k++)
                dis[j][k] = min(dis[j][k],dis[j][i]+dis[i][k]);
    if (e>0 && d[0]==0){
        cout << -1 << endl;
        return 0;
    }
    for (int i=0; i<n; i++)
        for (int j=i+1; j<n; j++) if (dis[i][j]==oo && d[i]>0 && d[j]>0){
            cout << -1 << endl;
            return 0;
        }
    vector <int> odd;
    for (int i=0; i<n; i++) if (d[i] & 1)
        odd.push_back(i);
    ans+= solve(odd,0,0);
    cout << ans << endl;
    return 0;
}
