import sys

def letterNum(x):
	return ord(x) - ord('a')

def numLetter(x):
	return chr(ord('a') + x)

def fail():
	print "Impossible"
	exit()

SIGMA = 26
n = int(sys.stdin.readline())

author = [sys.stdin.readline().strip() for i in range(n)]
g = [[] for i in range(SIGMA)]

for i in range(n-1):
	a,b = author[i] , author[i+1]
	j = 0
	while j < len(a) and j < len(b) and a[j] == b[j]:
		j += 1
	if j == len(a):
		pass
	elif j == len(b):
		fail()
	else:
		g[letterNum(b[j])].append(letterNum(a[j]))

# Para llamar a DFS, tiene que ser un nodo blanco, sino, la cagaste.
def dfs(x):
	color[x] = GRIS
	for y in g[x]:
		if color[y] == BLANCO:
			dfs(y)
		elif color[y] == GRIS:
			fail()
	color[x] = NEGRO
	topoSort.append(x)
	
topoSort = []
BLANCO = 0
GRIS   = 1
NEGRO  = 2
color  = [BLANCO for i in range(SIGMA)]
for x in range(SIGMA):
	if color[x] == BLANCO:
		dfs(x)

print "".join(map(numLetter, topoSort))
