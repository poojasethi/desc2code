def get_constraint(a, b):
    n, m = len(a), len(b)
    i, j = 0, 0
    while i < n and j < m and a[i] == b[j]:
        i += 1
        j += 1
    if i < n and j < m:
        return (a[i], b[j])
    elif i == n: return 1
    elif j == m: return -1

def visit(g, status, i, result):
    if status[i] == 1:
        print "Impossible"
        exit(0)
    if status[i] == 0:
        status[i] = 1
        for j in xrange(26):
            if g[i][j]:
                visit(g, status, j, result)
        status[i] = 2
        result.append(chr(i + ord('a')))

def topo(g):
    status = [0 for i in xrange(26)]
    result = []
    for i in xrange(26):
        if status[i] == 0:
            visit(g, status, i, result)
    return result

n = input()
g = [[False for i in xrange(26)] for j in xrange(26)]
s = [raw_input() for i in xrange(n)]
for i in xrange(n-1):
    c = get_constraint(s[i], s[i+1])
    if c == -1:
        print "Impossible"
        exit(0)
    elif c == 1:
        continue
    else:
        g[ord(c[1])-ord('a')][ord(c[0])-ord('a')] = True
ans = topo(g)
print ''.join(ans)
