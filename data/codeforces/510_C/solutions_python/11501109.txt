n = int(raw_input())
ans = True
fullstring = "abcdefghijklmnopqrstuvwxyz"

max_len = -1

names = []

for i in range(n):
    q = raw_input()
    max_len = max(max_len,len(q))
    names.append(q)


order = {} # A[x] contains everything bigger than x

resolved = [False] * n # A[i] means A[i] and A[i+1] not yet decided

for i in range(max_len):
    for j in range(n-1):
        if resolved[j] is False:
            if len(names[j+1]) <= i:
                ans = False
                break
            elif len(names[j]) <= i:
                # good
                resolved[j] = True
                continue
            else:
                small = names[j][i]
                big = names[j+1][i]
                if small != big:
                    resolved[j] = True
                    if big in order and small in order[big]:
                        ans = False
                        break
                    elif small in order:
                        order[small].update([big])
                    else:
                        order[small] = set([big])
                else:
                    pass
        else:
            pass
            

    if ans is False:
        break


left_string = fullstring
current_string = ''

#print "solving...."

while len(order) > 0:
    deadlock = True
    for char in fullstring:
        #print order,char
        if char not in order and char not in current_string: # not smaller than anything
            #print char
            deadlock = False
            current_string = char + current_string
            k = order.copy()
            for otherchar in k:
                if char in k[otherchar]:
                    order[otherchar] -= set([char])
                    if len(order[otherchar]) == 0:
                        order.pop(otherchar)
                        #print len(order)
    if deadlock is True:
        ans = False
        break
    
for char in fullstring:
    if char not in current_string:
        current_string = char + current_string

if ans is False:
    print "Impossible"
else:
    print current_string
