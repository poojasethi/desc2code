import string

# the first input is the number of lines, m
KG = raw_input()
m = int(KG)

# indicator variable: if a = 0, it is impossible
a=1

# add the remaining n words
for i in xrange(m):
    KG = KG + "\n"
    KG = KG + raw_input()

# stroe the words in an array
A = KG.splitlines()
A = A[1:]

# store the information in a directed graph (dictionary)
# letter a is in b's list iff a < b
D =dict()
for i in string.ascii_lowercase:
    D[i]=set()

# we need s1 to be less than s2
def getInfo(s1, s2):
    global D
    global a
    if s1.startswith(s2):
        a=0
    elif s2.startswith(s1):
        pass 
    else:
        index = 0
        while (s1[index]==s2[index]):
            index = index + 1
        D[s1[index]].add(s2[index])
    return

for i in xrange(m-1):
    getInfo(A[i], A[i+1])

    
order = []

for i in xrange(26):
    B=0
    for letter in D:
        if len(D[letter]) == 0:
            B=1
            order = [letter] + order
            k = letter
            break
    if B == 0:
        a = 0
        break
    del D[k]
    for key in D:
        if k in D[key]:
            D[key].remove(k)

result = ""

for letter in order:
    result = letter + result
    

if a == 0:
    print "Impossible"
else:
    print result[::-1]
