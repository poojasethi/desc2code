n = int(raw_input())
words = []
for i in range(n):
	words.append(raw_input())
letters = map(chr, range(97, 123))
graph = {}
in_degrees = {}
for letter in letters:
	graph[letter] = []
	in_degrees[letter] = 0

impossible = False
# Construct graph from inputs
for i in range(n - 1):
	a = words[i]
	b = words[i + 1]
	flag = True
	for j in range(min(len(a), len(b))):
		if a[j] != b[j]:
			graph[a[j]].append(b[j])
			flag = False
			break
	if flag and len(a) > len(b):
		impossible = True

# Kahn's Topological Sort
for u in letters:
	for v in graph[u]:
		in_degrees[v] += 1
queue = []
result = []
for u in letters:
	if in_degrees[u] == 0:
		queue.append(u)
visited_nodes = 0
while queue:
	u = queue.pop()
	result.append(u)
	visited_nodes += 1
	for v in graph[u]:
		in_degrees[v] -= 1
		if in_degrees[v] == 0:
			queue.append(v)
if visited_nodes != 26 or impossible:
	print "Impossible"
else:
	print "".join(result)