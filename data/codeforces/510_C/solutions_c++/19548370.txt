#include <bits/stdc++.h>
using namespace std;

int n,cnt;
string s[103];
char ans[27];
bool d=true,vis[27],cir[27];
map <char,queue <int> > m;

void dfs(char x){
	vis[x-'a']=true;
	cir[x-'a']=true;
	while (m[x].size()){
		if (!vis[m[x].front()-'a']){
			dfs(m[x].front());
		}else if (cir[m[x].front()-'a']){
			d=false;
			return;
		}
		m[x].pop();
	}
	cir[x-'a']=false;
	ans[cnt++]=x;
}

int main(){
	int j;
	cin>>n;
	for (int i=0;i<n;i++){
		cin>>s[i];
	}
	for (int i=1;i<n;i++){
		for (j=0;j<s[i].size() && j<s[i-1].size() && s[i][j]==s[i-1][j];j++);
		if (j==s[i].size() || j==s[i-1].size()){
			if (s[i].size()<s[i-1].size()){
				cout<<"Impossible";
				return 0;
			}
		}else{
			m[s[i][j]].push(s[i-1][j]);
		}
	}
	for (int i=0;i<26;i++){
		if (!vis[i]) dfs('a'+i);
	}
	if (!d){
		cout<<"Impossible";
		return 0;
	}
	for (int i=0;i<cnt;i++) cout<<ans[i];
	return 0;
}
