#include<iostream>
#include<algorithm>
using namespace std;

int n,v[26];
bool adj[26][26];
string s,t,ans;

void dfs(int u){
	v[u]=1;
	for(int i=0; i<26; i++){
		if(adj[u][i]&&v[i]==1){
			cout << "Impossible\n";
			exit(0);
		}
		if(adj[u][i]&&v[i]!=-1)dfs(i);
	}
	v[u]=-1;
	ans=ans+(char)(u+'a');
}

int main(){
	ios_base::sync_with_stdio(0); cin.tie(0);
	cin >> n; 
	cin >> s;
	for(int j=1; j<n; j++){
		cin >> t; bool check=1;
		for(int i=0; i<t.length()&&i<s.length(); i++){
			if(s[i]!=t[i]){check=0; adj[s[i]-'a'][t[i]-'a']=1; break;}
		}
		if(check&&s.length()>t.length()){cout << "Impossible\n"; return 0;}
		s=t;
	}
	for(int i=25; i>=0; i--){
		if(v[i]>=0)dfs(i);
	}
	for(int i=ans.length()-1; i>=0; i--)cout << ans[i]; cout << endl;
	return 0;
}