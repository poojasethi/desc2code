#AV Drift King
import random
import math
import os
import sys

def main():
	rec=str(raw_input())
	nb,ns,nc=map(int,raw_input().split(" "))
	pb,ps,pc=map(int,raw_input().split(" "))
	r=long(raw_input())
	numofb=list(rec).count('B')
	numofs=list(rec).count('S')
	numofc=list(rec).count('C')
	ans=0
	# print nb,ns,nc
	# print numofb,numofs,numofc
	while(True):
		#print nb,ns,nc
		if nb>=numofb and ns>=numofs and nc >= numofc:
			ans+=1;
			nb-=numofb
			ns-=numofs
			nc-=numofc
		elif nb>=numofb and ns<numofs and nc>=numofc:
			nstb=numofs;nc-=numofc;nb-=numofb;
			if ns>0:
				nstb-=ns
				ns=0
			if(r>=nstb*ps):
				r=r-nstb*ps;
				ans+=1;
			else:
				break;
		elif nb<numofb and ns>=numofs and nc>=numofc:
			nbtb=numofb;ns-=numofs;nc-=numofc;
			if nb>0:
				nbtb-=nb
				nb=0
			if(r>=nbtb*pb):
				r=r-nbtb*pb;
				ans+=1;
			else:
				break;
		elif nb>=numofb and ns>=numofs and nc<numofc:
			nctb=numofc;nb-=numofb;ns-=numofs;
			if nc>0:
				nctb-=nc
				nc=0
			if(r>=nctb*pc):
				r=r-nctb*pc;
				ans+=1;
			else:
				break;
		elif nb<numofb and ns<numofs and nc>=numofc:
			nc-=numofc;
			nbtb=numofb;nstb=numofs;
			if nb>0:
				nbtb-=nb
				nb=0
			if ns>0:
				nstb-=ns
				ns=0
			if(r>=(nbtb*pb+nstb*ps)):
				r=r-(nbtb*pb+nstb*ps);
				ans+=1;
			else:
				break;
		elif nb<numofb and ns>=numofs and nc<numofc:
			nbtb=numofb;nctb=numofc;ns-=numofs;
			if nb>0:
				nbtb-=nb
				nb=0
			if nc>0:
				nctb-=nc
				nc=0
			if(r>=(nbtb*pb+nctb*pc)):
				r=r-(nbtb*pb+nctb*pc);
				ans+=1;
			else:
				break;
		elif nb>=numofb and ns<numofs and nc<numofc:
			nstb=numofs;nctb=numofc;nb-=numofb;
			if nc>0:
				nctb-=nc
				nc=0
			if ns>0:
				nstb-=ns
				ns=0
			if(r>=(nstb*ps+nctb*pc)):
				r=r-(nstb*ps+nctb*pc);
				ans+=1;
			else:
				break;
		elif nb<numofb and ns<numofs and nc<numofc:
			nbtb=numofc;nctb=numofc;nstb=numofs;
			if nc>0:
				nctb-=nc
				nc=0
			if nb>0:
				nbtb-=nb
				nb=0
			if ns>0:
				nstb-=ns
				ns=0
			if(r>=(nbtb*pb+nctb*pc+nstb*ps)):
				r=r-(nbtb*pb+nctb*pc+nstb*ps);
				ans+=1;
			else:
				break;
		if ((nb==0 or numofb==0) and (nc==0 or numofc==0) and (ns==0 or numofs==0)):
			break;
	pricetotal=numofs*ps+numofc*pc+numofb*pb;
	ans+=(r/pricetotal)
	print ans
main()