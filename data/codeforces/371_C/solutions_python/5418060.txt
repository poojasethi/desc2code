from collections import Counter

cnt = Counter(raw_input().strip()) # {'B': ..., 'S': ..., 'C': ...}
recipe = [cnt[c] for c in 'BSC'] # how many of each in one hamburger
n = map(int, raw_input().split()) # how many we already have
p = map(int, raw_input().split()) # cost of each
r = int(raw_input()) # amount of money

def cost(num_h):
	total_products = [recipe[i] * num_h for i in xrange(3)]
	need_to_buy = [max(0, total_products[i] - n[i]) for i in xrange(3)]
	return sum(need_to_buy[i] * p[i] for i in xrange(3))

def search_right(low, high):
	while low < high:
		mid = (low + high) // 2
		if r < cost(mid):
			high = mid
		else:
			low = mid + 1
	return low

print search_right(0, (r // min(p)) + max(n) + 1) - 1