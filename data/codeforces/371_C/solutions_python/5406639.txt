def red(c, x):
    c['BSC'.index(x)] += 1
    return c

ing = reduce(red, raw_input(), [0] * 3)
cnt = map(int, raw_input().split())
cost = map(int, raw_input().split())
R = int(raw_input())

def price(k):
    res = 0
    for i in xrange(3):
        res += cost[i] * max(0, ing[i] * k - cnt[i])
    return res

(l, r, best) = (0, 10 ** 13, 0)

while l <= r:
    mid = (l + r) / 2
    if price(mid) <= R:
        best = mid
        l = mid + 1
    else:
        r = mid - 1

print best

