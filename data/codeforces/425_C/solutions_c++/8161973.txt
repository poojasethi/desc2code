#include <bits/stdc++.h>
using namespace std;
#define N 100010
int dp[310], a[N];
vector<int> adj[N];
int main() {
    ios::sync_with_stdio(0);
    int n, m, energia, cost, data;
    cin>>n>>m>>energia>>cost;
    for(int i=1 ; i<=n ; i++) cin>>a[i];
    for(int i=1 ; i<=m ; i++) {
        cin>>data;
        adj[data].push_back(i);
    }
    memset(dp, 63, sizeof(dp));
    dp[0] = 0;
    int ans = 0;
    for(int pos=1 ; pos<=n ; pos++) {
        for(int e=300 ; e>=1 ; e--) {
            int t = upper_bound(adj[a[pos]].begin(), adj[a[pos]].end(), dp[e - 1]) - adj[a[pos]].begin();
            if( t < adj[a[pos]].size() ) {
                dp[e] = min(dp[e], adj[a[pos]][t]);
                //cout<<pos<<" "<<dp[e]<<" "<<e<<endl;
                if( e * cost + pos + dp[e] <= energia ) {
                    ans = max(ans, e);
                }
            }
        }
    }
    cout<<ans<<endl;
    return 0;
}