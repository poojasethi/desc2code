#include<iostream>
#include<vector>
#include<algorithm>
#include<string.h>
using namespace std;

#define MAXN 100005
#define INF 0x3f3f3f3f

vector<int> pos[MAXN];
int a[MAXN], b[MAXN];
int acnt, bcnt, s, e;
int dp[305][MAXN];

int main()
{
	cin>>acnt>>bcnt>>s>>e;
	for(int i = 1; i <= acnt; ++i)
		cin>>a[i];
	for(int i = 1; i <= bcnt; ++i)
	{
		cin>>b[i];
		pos[b[i]].push_back(i);
	}
	
	for(int i = 0; i < MAXN; ++i)
		pos[i].push_back(INF);
	
	int ans = 0;
	int r = s/e;
	memset(dp, 0x3f, sizeof(dp));
	dp[0][0] = 0;
	for(int i = 1; i <= r; ++i)
	{
		int last = dp[i-1][0];
		for(int j = 1; j <= acnt; ++j)
		{
			if(last != INF)
			{
				int lp = *lower_bound(pos[a[j]].begin(), pos[a[j]].end(), last+1);
				dp[i][j] = lp;
				if(lp != INF)
				{
					if(i*e + j + dp[i][j] <= s)
						ans = max(ans, i);
				}
			}
			last = min(last, dp[i-1][j]);
		}
	}
	
	cout<<ans<<endl;
}