#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<bitset>
#include<cstring>
using namespace std;
const int N=2001;
int n,now,next[N],num;
char ch[700],a[700];
bitset<N> re[N],which[N];
void add(int id,int x)
{
	for(int i=1;i<=4;i++)
	{
		re[id][now++]=x % 2;
		x=x/2;
	}
}
void work(int id,int now)
{
	next[id]=next[now];
	next[now]=id;
}
void addit(int id)
{
	int now=0;
	for(int t=2000;t>=0;t--)
	{
		if(next[now]==-1) 
		{
			work(id,now);
			puts("0");
			return;
		}
		int tmp=next[now];
		if(re[id][t]==1)
		{
			if(re[tmp][t]==0)
			{
				work(id,now);
				puts("0");
				return;
			}
			re[id]^=re[tmp];
			which[id]^=which[tmp];
		}
		if(re[tmp][t]==1) now=tmp;
		if(re[id].count()==0)
		{
			printf("%d",(int)which[id].count()-1);
			for(int i=1;i<id;i++)
				if(which[id][i]==1) printf(" %d",i-1);
			puts("");
			return;
		}
	}
}
int main()
{
	cin>>n;scanf("\n");
	for(int i=1;i<=n;i++)
	{
		re[i].reset();
		which[i].reset();
		which[i][i]=1;
		scanf("%s",ch);
		int len=strlen(ch);
		int tmp[700];
		for(int j=0;j<len;j++)
			tmp[len-j]=ch[j]-'0';
		now=0;
		while (len!=0)
		{
			int rest=0;
			for(int j=len;j>=1;j--)
			{
				tmp[j]+=rest * 10;
				rest=tmp[j] % 16;
				tmp[j]/=16;
			}
			add(i,rest);
			while (len!=0 && tmp[len]==0) len--;
		}
	}
	next[0]=-1;
	num=0;
	for(int i=1;i<=n;i++)
	{
		addit(i);
	}
}
 		   	    	 	  			  	   	 	  	