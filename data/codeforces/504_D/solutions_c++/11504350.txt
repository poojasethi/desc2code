#include<cstdio>
#include<cstring>
#include<algorithm>
#include<bitset>
#include<vector>
#include<iostream>
using namespace std;

const int maxn=2000,BASE=int(1e8),WIDTH=8;

bitset<maxn> A[maxn],S[maxn];

int a[maxn];

void div2(int a[],int& rem) {
    rem=0;
    for(int i=a[0];i>0;i--) {
        a[i]+=rem*BASE;
        rem=a[i]&1;
        a[i]>>=1;
    }
    while(a[0]>0&&a[a[0]]==0) {
        a[0]--;
    }
}

int str2num(char* op,char* ed) {
    int res=0;
    for(char* s=op;s!=ed;s++) {
        res=res*10+*s-'0';
    }
    return res;
}

void read(bitset<maxn>& b) {
    b.reset();
    static char s[maxn];
    scanf("%s",s);
    int n=strlen(s);
    while(n>0) {
        a[++a[0]]=str2num(s+max(0,n-WIDTH),s+n);
        n-=min(n,WIDTH);
    }
    for(int siz=0;a[0]>0;siz++) {
        int rem;
        div2(a,rem);
        b[siz]=rem;
    }
}

int n;

int main() {
    scanf("%d",&n);
    static int ins[maxn];
    memset(ins,-1,sizeof(ins));
    for(int i=0;i<n;i++) {
        read(A[i]);
        bool flag=true;
        for(int j=0;j<maxn;j++) {
            if(A[i][j]) {
                if(ins[j]==-1) {
                    ins[j]=i;
                    S[i][i]=true;
                    flag=false;
                    break;
                } else {
                    A[i]^=A[ins[j]];
                    S[i]^=S[ins[j]];
                }
            }
        }
        if(flag) {
            int cnt=S[i].count();
            printf("%d",cnt);
            for(int j=0,tmp=0;tmp<cnt;j++) {
                if(S[i][j]) {
                    printf(" %d",j);
                    tmp++;
                }
            }
            puts("");
        } else {
            puts("0");
        }
    }
    return 0;
}
