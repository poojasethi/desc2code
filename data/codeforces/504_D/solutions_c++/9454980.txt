#include <bits/stdc++.h>
using namespace std;

const int INF = 2009;
int n;
bitset<INF> a[INF] , mask[INF];
char str[INF];
int base[INF];

int main() {
	int i , j , k , x;
	memset (base , -1 , sizeof (base) );
	scanf ("%d", &n);
	for (i = 0 ; i < n ; ++ i) {
		scanf ("%s" , str);
		int len = strlen (str);
		for (j = 0 ; j < len ; ++ j)
			str[j] = str[j] - '0';
		reverse (str , str + len);
		for (j = 0 ; j < INF ; ++ j) {
			for (k = len - 1 , x = 0; k >= 0 ; -- k) {
				str[k] += x * 10;
				x = str[k] & 1;
				str[k] >>= 1;
			}
			a[i][j] = x;
			while (len > 1 && !str[len - 1])
				-- len;
		}
		for (j = 0 ; j < INF ; ++ j) {
			if (a[i][j]) {
				if (!~base[j]) {
					mask[i][i] = 1;
					base[j] = i;
					break;
				}
				a[i] ^= a[base[j]];
				mask[i] ^= mask[base[j]];
			}
		}
		if (j < INF) {
			puts ("0");
		} else {
			printf ("%d" , mask[i].count() );
			for (j = 0 ; j < i ; ++ j)
				if (mask[i][j])
					printf (" %d" , j);
			puts ("");
		}
	}
	return 0;
}
