#include <cstdio>
#include <cstring>
#include <algorithm>
#include <bitset>
using namespace std;
typedef long long ll;

const int N=2005;
typedef bitset<N> numb;
int m,len,l;
char c[N];
int a[N];
numb now,s,base[N],st[N];
bool bo[N];

int main(){
	scanf("%d",&m);
	for(int num=0;num<m;num++){
		scanf("%s",c);
		l=strlen(c);
		reverse(c,c+l);
		len=0;
		for(;len*8<l;len++){
			a[len]=0;
			for(int j=min(l-len*8,8)-1;j>=0;j--)
				a[len]=a[len]*10+c[len*8+j]-'0';
		}
		now=0;
		int t=0;
		while(len){
			ll x=0;
			for(int j=len-1;j>=0;j--){
				x=x*100000000+a[j];
				a[j]=x>>25;
				x&=(1<<25)-1;
			}
			for(int j=0;j<25;j++) now[t++]=x>>j&1;
			while(len&&a[len-1]==0) len--;
		}
		s=0;
		s[num]=1;
		bool ok=false;
		for(int i=0;i<N;i++) if(now[i]){
			if(bo[i]){
				now^=base[i];
				s^=st[i];
			}
			else{
				bo[i]=true;
				base[i]=now;
				st[i]=s;
				ok=true;
				break;
			}
		}
		if(ok){
			puts("0");
			continue;
		}
		printf("%d",s.count()-s[num]);
		for(int i=0;i<num;i++) if(s[i])
			printf(" %d",i);
		puts("");
	}
}
