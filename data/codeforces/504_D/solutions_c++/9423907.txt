#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<vector>
#include<string>
#include<algorithm>
#include<time.h>
#include<math.h>

using namespace std;

typedef long long llo;
typedef double llb;

#define con continue
#define vec vector
#define str string
#define pt puts("");
#define pb push_back
#define lowbit(x) (x&(-x))
#define for0(a,b) for(a=0;a<b;++a)
#define for1(a,b) for(a=1;a<=b;++a)
#define foru(i,a,b) for(i=a;i<=b;++i)
#define ford(i,a,b) for(i=a;i>=b;--i)
#define REP0(i,n) for(long i=0;i<n;++i)
#define REP1(i,n) for(long i=1;i<=n;++i)
#define REPu(i,a,b) for(long i=a;i<=b;++i)
#define REPd(i,a,b) for(long i=a;i>=b;--i)
#define line(i,a,b) for(long i=a;i;i=b[i])

const int maxn=2050;
const int maxm=101;
const llo mod=(llo(1)<<32)-1;

int x,y,l,n,la;

llo a[maxn];
llo b[maxn][maxm];
llo c[maxn][maxm];
int go[maxn],ans[maxn];
char cc[maxn];

int main(){
//	freopen("d.in","r",stdin);
//	freopen("d.out","w",stdout);
	scanf("%ld\n",&n);
	REP1(i,n){
		gets(cc);
		l=strlen(cc);
		
		REP1(j,l)a[j]=cc[l-j]-'0';

		REP1(j,64){
			REPd(k,l,1){
				a[k-1]+=(a[k]&mod)*10;
				a[k]>>=32;
			}
			while(!a[l] && l>1)--l;
			b[i][j]=a[0]/10;
			a[0]=0;
		}
		c[i][(i-1)/32]=1<<((i-1)%32);
		
		l=2048;
		ford(x,64,1){
			ford(y,31,0){
				if(b[i][x]& (1<<y)){
					if(go[l]){
						REPd(j,64,1)b[i][j]^=b[go[l]][j];
						REP0(j,64) c[i][j]^=c[go[l]][j];
					}else break;
				}
				--l;
			}
			if(y+1)break;
		}
		
		if(l){
			go[l]=i;
			puts("0");
		}else{
			la=0;
			for0(x,64){
				for0(y,32){
					if((c[i][x]&(1<<y)) && l!=i-1){
						ans[++la]=l;
					}
					++l;
				}
			}
			printf("%ld",la);
			REP1(j,la) printf(" %ld",ans[j]);
			pt;
		}
	}
	//system("pause");
    return 0;
}
