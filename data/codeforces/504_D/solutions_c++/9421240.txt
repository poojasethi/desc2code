//By Lin
#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <map>
#include <set>
#include <bitset>
#include <cmath>
#include <string>
#include <cstdlib>
#include <vector>

#define X first
#define Y second
#define mp make_pair
#define sqr(x) ((x) * (x))
#define Rep(i, n) for(int i = 0; i<(n); i++)
#define foreach(it, n) for(__typeof(n.begin()) it = n.begin(); it != n.end(); it++)

using namespace std;
typedef long long LL;
typedef pair<int, int> pii;
typedef bitset<2000> bits;

#define esp 1e-8
#define N 2010

char s[N];
int  nums[N];
bits transit(char s[], int &pos) {
	int len = strlen(s);
	Rep(i, len) nums[len - i - 1] = s[i] - '0';
	bits result;
	result.reset();
	for (pos  = 0; len; pos++) {
		result[pos] = nums[0] % 2;
		for (int k = len - 1, c = 0; k >= 0; k--) {
			int cc = nums[k] % 2;
			nums[k] = (nums[k] + c * 10) / 2;
			c = cc;
		}
		if (nums[len - 1] == 0) len--;
	}
	return result;
}

bits data[N];
bits from[N];
int mark[N];

int main() {
	int m;
	scanf("%d", &m);
	memset(mark, -1, sizeof mark);
	for (int i = 0; i < m; i++) {
		scanf("%s", s);
		int pos;
		bits a = transit(s, pos);
		bits ans;
		ans.set(i);
		for (int k = pos - 1; k >= 0; k--)
			if (a.test(k)) {
				if (mark[k] != -1) {
					a = a ^ data[k];
					ans = ans ^ from[k];
				}
				else {
					data[k] = a;
					from[k] = ans;
					mark[k] = i;
					break;
				}
			}
//		printf("!%s\n", a.to_string().data());
		if (a.any()) puts("0");
		else {
			vector<int> v;
			Rep(j, i) if (ans.test(j)) v.push_back(j);
			printf("%d", (int)v.size());
			Rep(i, v.size()) printf(" %d", v[i]);
			puts("");
		}
	}
	return 0;
}
