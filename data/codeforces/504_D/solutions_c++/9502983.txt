#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <vector>
#include <ctime>
#include <bitset>
#define fi first
#define se second
#define PA pair<int,int>
#define VI vector<int>
#define VP vector<PA >
#define mk(x,y) make_pair(x,y)
#define N 2000
#define int64 long long
#define int33 unsigned int
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
const int lim=40;
const int64 mo=1ll<<58;
struct big {
	int64 a[lim];
	inline void clear() {
		int i;
		For(i,1,*a) a[i]=0;
		a[0]=0;
	}
	inline void gao(const int &A) {
		int i;
		For(i,1,*a) a[i]*=10;
		a[1]+=A;
		For(i,1,*a) a[i+1]+=a[i]/mo,a[i]%=mo;
		if (a[*a+1]) (*a)++;
	}
	inline void operator ^= (const big &A) {
		int i;
		For(i,1,max(*a,*A.a)) a[i]^=A.a[i];
		for (;(*a)&&!a[*a];) (*a)--;
	}
	inline int count(int x) {
		int A=x/58+1,B=x%58;
		return a[A]>>B&1;
	}
} a,b[N];
int i,j,k,n,m;
bitset<N> id[N],c;
inline void gao() {
	char p[N];
	scanf("%s",p+1);
	m=strlen(p+1);
	int i,j,s=1;
	a.clear();
	For(i,1,m) a.gao(p[i]-'0');
}
int main() {
	scanf("%d",&n);
	For(i,0,n-1) {
		gao();
		int s=0,g[N]={};
		c.reset();
		c[i]=1;
		for (j=N-1;j>=0;j--) if (a.count(j)) {
			if (!id[j].count()) {
				id[j]=c;
				b[j]=a;
				printf("0\n");
				goto fail;
			} else a^=b[j],c^=id[j];
		}
		printf("%d ",c.count()-1);
		For(j,0,i-1) if (c[j]) printf("%d ",j);
		printf("\n");
		fail:;
	}
	return 0;
}
