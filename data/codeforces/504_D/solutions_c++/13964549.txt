#include<iostream>
#include<cstdio>
#include<cstring>
#include<bitset>
#include<vector>
#define rep(i, l, r) for(int i = l; i <= r; ++i)
using namespace std;
const int maxn = 2010;
struct BigNum{
	int len, x[610];
	void init(){		
		char s[610];
		scanf("%s", s);
		len = strlen(s);
		rep(i, 1, len) x[i] = s[len - i] - '0';
	}
	int div8(){
		int res = 0;
		for(int i = len; i >= 1; --i){
			res = x[i] % 8;
			x[i] >>= 3;
			x[i - 1] += res * 10;
		}
		if(!x[len]) --len;
		return res;
	}
}num;
int n, pos[maxn];
bitset<2015> now[maxn], id[maxn];
vector<int> vec;
int main(){
	int n;
	cin >> n;
	rep(i, 1, n){
		int p = -1;
		num.init();
		while(num.len > 0){
			int k = num.div8();
			rep(j, 1, 3){
				now[i][++p] = k & 1;
				k >>= 1;
			}
		}
		/*rep(j, 0, p) cout << now[i][j];
		printf("\n");*/
		bool flag = 1;
		id[i][i] = 1;
		for(int j = p; j >= 0; --j)if(now[i][j])
			if(!pos[j]){
				pos[j] = i;
				flag = 0;
				break;
			}
			else {
				now[i] ^= now[pos[j]];
				id[i] ^= id[pos[j]];
			}
		if(!flag) printf("0\n");
		else {
			vec.clear();
			rep(j, 1, i - 1)
				if(id[i][j])  vec.push_back(j - 1);
			printf("%d", (int)vec.size());
			for(vector<int>::iterator it = vec.begin(); it != vec.end(); ++it)
				printf(" %d", *it);
			printf("\n");
		} 
	}
	return 0;
}