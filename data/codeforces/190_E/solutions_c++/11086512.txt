#include <cstdio>
#include <algorithm>
#include <set>
#define N 500005
#define M 1000005
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int n, m, f[N], v[M + M], o[M + M], p, ans[N], st[N], q[N], l, h;
set<int> s;
bool u[N];

void bd(int a, int b){
	v[++p] = b; o[p] = f[a]; f[a] = p;
}

int main(){
	scanf("%d %d", &n, &m);
	FI(i, 1, m){
		int a, b;
		scanf("%d %d", &a, &b);
		bd(a, b);
		bd(b, a);
	}
	
	FI(i, 1, n) s.insert(i);
	
	p = 0;
	FI(i, 1, n) if(s.find(i) != s.end()){
		s.erase(i);
		q[h++] = i;
		while(l < h){
			int y = q[l++];
			fe(i, f[y], o) if(s.find(v[i]) != s.end()) u[v[i]] = 1;
			for(set<int>::iterator it = s.begin(); it != s.end();){
				if(u[*it]){
					u[*it] = 0;
					it++;
				}else{
					q[h++] = *it;
					set<int>::iterator t = it;
					it++;
					s.erase(t);
				}
			}
		}
		st[++p] = h;
	}
	
	printf("%d\n", p);
	fi(i, 0, p){
		printf("%d", st[i + 1] - st[i]);
		fi(j, st[i], st[i + 1]) printf(" %d", q[j]);
		puts("");
	}
	scanf("\n");
}
