#include<iostream>
#include<algorithm>
#include<vector>
#define pb push_back
using namespace std;
const int MAXN=500000+10;
vector<int > mp[MAXN],ans[MAXN];
int n,m,cnt=0,f[MAXN];
int find(int x)
{
    return f[x]!=x?f[x]=find(f[x]):f[x];
}
void dfs(int x)
{
    ans[cnt].pb(x);
    f[x]=x+1;
    for(int j=0,i=find(1); i<=n; i=find(i+1))
    {
        for(; j<mp[x].size() && mp[x][j]<i; j++);
//        j=lower_bound(mp[x].begin(),mp[x].end(),i)-mp[x].begin();
        if(j==mp[x].size()||mp[x][j]>i)
            dfs(i);
    }
}
int main()
{
    ios::sync_with_stdio(false);
    cin>>n>>m;
    for(int i=0; i<=n+1; i++)
    {
//        mp[i].clear();
//        ans[i].clear();
        f[i]=i;
    }
    for(int i=0; i<m; i++)
    {
        int x,y;
        cin>>x>>y;
        mp[x].pb(y);
        mp[y].pb(x);
    }
    for(int i=1; i<=n; i++)
        sort(mp[i].begin(),mp[i].end());
    for(int i=1; i<=n; i++)
        if(f[i]==i)
        {
            dfs(i);
            cnt++;
        }
    cout<<cnt<<endl;
    for(int i=0; i<cnt; i++)
    {
        cout<<ans[i].size();
        for(int j=0; j<ans[i].size(); j++)
            cout<<" "<<ans[i][j];
        cout<<endl;
    }
    return 0;
}
