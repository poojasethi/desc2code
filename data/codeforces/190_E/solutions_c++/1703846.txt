#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<algorithm>
#include<vector>
#include<queue>
#include<math.h>
#include<string>
#include<map>
#include<set>
#include<list>
#include<time.h>
using namespace std;
typedef long long ll;

typedef pair<int,int> pint;
typedef vector<int> vint;
#define mp make_pair

vector<int> e[500010];
int visit[500010],flag[500010];
vector<vint> ans;
void bfs(int n)
{
	int kk=0;
	priority_queue<pint ,vector<pint>,greater<pint> > qu;
	for(int i=1;i<=n;i++)
		qu.push(mp(flag[i],i));
	while(!qu.empty()){
		int c=qu.top().first;
		int u=qu.top().second;
		//printf("%d\n",u);
		qu.pop();
		if(flag[u]!=c) continue;
		if(c==kk++){
			ans.push_back(vint());
		}
		visit[u]=1;
		ans.back().push_back(u);
		for(int i=0;i<e[u].size();i++){
			if(visit[e[u][i]]) continue;
			qu.push(mp(++flag[e[u][i]],e[u][i]));
		}
	}
}

int main()
{
	int n,m,x,y;
	scanf("%d%d",&n,&m);

	for(int i=0;i<m;i++){
		scanf("%d%d",&x,&y);
		e[x].push_back(y);
		e[y].push_back(x);
	}
	bfs(n);
	printf("%d\n",ans.size());
	for(int i=0;i<ans.size();i++){
		printf("%d",ans[i].size());
		sort(ans[i].begin(),ans[i].end());
		for(int j=0;j<ans[i].size();j++){
			printf(" %d",ans[i][j]);
		}
		printf("\n");
	}
	return 0;
};
