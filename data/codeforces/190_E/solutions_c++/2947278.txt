#include<cstdio>
#include<algorithm>
#include<iostream>
#include<vector>
using namespace std;
#define MAXN 500050
#define MAXM 1000010

vector<int> adj[MAXN];
vector<vector<int> > cpn;
int next[MAXN],N,M;

int find_next(int x)
{
    if(next[x]==x) return x;
    return next[x]=find_next(next[x]);
}
void dfs(int k)
{
    vector<int>::iterator it=adj[k].begin();
    cpn.back().push_back(k);
    next[k]=k+1;
    for(int v=find_next(1);v<=N;v=find_next(v+1))
    {
        while(it!=adj[k].end()&&*it<v)
            ++it;
        if(it==adj[k].end()||*it!=v) dfs(v);
    }
}
int main()
{
    cin>>N>>M;
    for(int i=0;i<M;i++)
    {
        int a,b;
        scanf("%d%d",&a,&b);
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    for(int i=1;i<=N;i++) sort(adj[i].begin(),adj[i].end());
    for(int i=1;i<=N+1;i++) next[i]=i;
    for(int i=1;i<=N;i++) if(next[i]==i)
    {
        cpn.push_back(vector<int>());
        dfs(i);
    }
    cout<<cpn.size()<<endl;
    for(int i=0;i<cpn.size();i++)
    {
        cout<<cpn[i].size();
        for(int j=0;j<cpn[i].size();j++) printf(" %d",cpn[i][j]);
        cout<<endl;
    }
    return 0;
}
