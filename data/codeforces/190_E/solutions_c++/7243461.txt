#include <bits/stdc++.h>
using namespace std;
#define MAXN 5*100010
std::vector<int> Edge[MAXN];
int main()
{
	ios_base::sync_with_stdio(false);
	int N,M,u,v;
	cin>>N>>M;
	for(int i = 0;i<M;i++)
	{
		cin>>u>>v;
		Edge[u].push_back(v);
		Edge[v].push_back(u);
	}
	set<int> S;
	for(int i = 1;i<=N;i++)
	{
		S.insert(i);
		sort(Edge[i].begin(),Edge[i].end());
	}
	std::vector< std::vector<int> > Ans;
	while(!S.empty())
	{
		std::vector<int> Elements;
		queue < int > Q;
		Q.push(*S.begin());
		S.erase(S.begin());
		while(!Q.empty())
		{
			int idx = Q.front();
			Elements.push_back(idx);
			Q.pop();
			set<int> :: iterator it;
			std::vector<int> V;
			for(it = S.begin();it!=S.end();it++)
			{
				if(!binary_search(Edge[idx].begin(),Edge[idx].end(),*it)){
					Q.push(*it);
					V.push_back(*it);
				}
			}
			for(int i = 0;i<V.size();i++)
			{
				S.erase(S.find(V[i]));
			}
		}
		Ans.push_back(Elements);
	}
	cout<<Ans.size()<<endl;
	for(int i = 0;i<Ans.size();i++)
	{
		cout<<Ans[i].size()<<" ";
		sort(Ans[i].begin(),Ans[i].end());
		for(int j = 0;j<Ans[i].size();j++)
		{
			cout<<Ans[i][j]<<" ";
		}
		cout<<endl;
	}
	return 0;
}