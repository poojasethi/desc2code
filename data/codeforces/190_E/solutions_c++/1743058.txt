#include<cstdio>
#include<vector>
#include<algorithm>
#define N 500009
using namespace std;
int n,m;
vector<int> Adj[N];
vector<int> G[N];
int next[N],cnt;
int find(int a){return (next[a]==a)?a:next[a]=find(next[a]);}
void dfs(int rt){
    next[rt]=rt+1;
    G[cnt].push_back(rt);
    vector<int>::iterator it=Adj[rt].begin();
    for(int i=find(1);i<=n;i=find(i+1)){
        while(it!=Adj[rt].end()&&*it<i) it++;
        if(it==Adj[rt].end()||*it>i) dfs(i);        
    }
}
int main(){    
    scanf("%d%d",&n,&m);
    for(int i=1;i<=m;i++){
        int x,y;
        scanf("%d%d",&x,&y);
        Adj[x].push_back(y);
        Adj[y].push_back(x);
    }
    for(int i=1;i<=n;i++) next[i]=i,sort(Adj[i].begin(),Adj[i].end());
    next[n+1]=n+1;
    for(int i=1;i<=n;i++)
        if(next[i]==i)
            dfs(i),cnt++;
    printf("%d\n",cnt);
    for(int i=0;i<cnt;i++){
        printf("%d\n",G[i].size());
        for(int j=0;j<G[i].size();j++) printf(" %d",G[i][j]);
        puts("");
    }
}
