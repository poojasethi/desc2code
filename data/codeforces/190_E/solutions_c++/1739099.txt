#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#define N 500005
using namespace std;
typedef vector<int> Vi;
typedef pair<int,int> Pii;
struct node{
	int pre,next;
}vect[N];
int n,m,num;
int vis[N];
Vi ans[N];
Pii e[N*2];
bool judge(int u,int v)
{
	Pii val;
	if(u>v)
		swap(u,v);
	val.first=u;val.second=v;
	int i=lower_bound(e,e+m,val)-e;
	return i<m&&e[i]==val;
}
void bfs(int u,int k)
{
	int i,j;
	ans[k].push_back(u);
	vis[u]=1;
	for(i=0;i<ans[k].size();i++)
	{
		u=ans[k][i];
		for(j=1;j<=n;j=vect[j].next)
			if(!vis[j]&&!judge(u,j))
			{
				vect[vect[j].pre].next=vect[j].next;
				vect[vect[j].next].pre=vect[j].pre;
				vis[j]=1;
				ans[k].push_back(j);
			}
	}
}
void solve()
{
	int i,j,k;
	k=0;
	for(i=1;i<=n;i++)
		if(!vis[i])
			bfs(i,k++);
	printf("%d\n",k);
	for(i=0;i<k;i++)
	{
		printf("%d",ans[i].size());
		for(j=0;j<ans[i].size();j++)
			printf(" %d",ans[i][j]);
		printf("\n");
	}
}
int main()
{
	int u,v;
	num=0;
	scanf("%d%d",&n,&m);
	for(int i=0;i<m;i++)
	{
		scanf("%d%d",&u,&v);
		if(u>v)
			swap(u,v);
		e[i].first=u;
		e[i].second=v;
	}
	sort(e,e+m);
	for(int i=1;i<=n;i++)
	{
		vect[i].pre=i-1;
		vect[i].next=i+1;
	}
	solve();
	return 0;
}
