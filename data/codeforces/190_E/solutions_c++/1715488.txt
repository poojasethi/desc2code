#include<iostream>
#include<algorithm>
#include<vector>
#define pb push_back
using namespace std;
const int MAXN=500000+100;
typedef vector<int >vi;
vi g[MAXN],ans[MAXN];
int n,m,cnt=0,f[MAXN];
int F(int x){
     return f[x]!=x?f[x]=F(f[x]):f[x];
}
void dfs(int x){
     ans[cnt].pb(x); f[x]=x+1;
     for(int j=0,i=F(1);i<=n;i=F(i+1)){
	  for(;j<g[x].size()&&g[x][j]<i;j++);
	  if(j==g[x].size()||g[x][j]>i) dfs(i);
     }
}
int main(){
     ios::sync_with_stdio(false); cin>>n>>m;
     for(int i=0;i<=n+1;i++){
	  g[i].clear(); ans[i].clear(); f[i]=i;
     }
     for(int i=0;i<m;i++){
	  int x,y; cin>>x>>y;
	  g[x].pb(y);g[y].pb(x);
     }
     for(int i=1;i<=n;i++)sort(g[i].begin(),g[i].end());
     for(int i=1;i<=n;i++)
	  if(f[i]==i){
	       dfs(i);cnt++;
	  }
     cout<<cnt<<endl;
     for(int i=0;i<cnt;i++){
	  cout<<ans[i].size(); 
	  for(int j=0;j<ans[i].size();j++)
	       cout<<" "<<ans[i][j];
	  cout<<endl;
     }
     return 0;
}
