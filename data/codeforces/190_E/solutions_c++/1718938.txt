#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>

using namespace std;

const int maxn = 500010, maxm = 2000010;
int s[maxm], next[maxm], g1[maxn], v[maxn], r[maxn], d[maxn], len[maxn], be[maxn], an[maxn];
int s1(0), ans(0), N;

void gs()
{
	d[1] = r[0], r[0] = r[r[0]];
	int open = 1, closed = 0;
	while (++closed <= open)
	{
		++s1;
		int t = d[closed], temp = g1[t];
		for (; temp; temp = next[temp]) v[s[temp]] = s1;
		for (int i = r[0], j = 0; i <= N; i = r[i]) if (v[i] != s1)
		{
			d[++open] = i;
			r[j] = r[i];
		}
		else j = i;
	}
	len[++ans] = open;
	be[ans] = be[ans - 1] + len[ans - 1];
	for (int i = 1; i <= open; ++i) an[i + be[ans] - 1] = d[i];
}

int main()
{
	int M;
	cin >> N >> M;
	int total(0);
	for (int i = 1; i <= M; ++i)
	{
		int a, b;
		scanf("%d%d", & a, & b);
		s[++total] = b; next[total] = g1[a]; g1[a] = total;
		s[++total] = a; next[total] = g1[b]; g1[b] = total;
	}
	for (int i = 0; i <= N; ++i) r[i] = i + 1;
	while (r[0] != N + 1) gs();
	cout << ans << endl;
	be[0] = 0; len[0] = 1;
	for (int i = 1; i <= ans; ++i)
	{
		printf("%d", len[i]);
		for (int j = 1; j <= len[i]; ++j) printf(" %d", an[be[i] + j - 1]);
		printf("\n");
	}
}
