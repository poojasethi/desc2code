#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<vector>
#include<set>
using namespace std;
#define PB push_back
#define SZ(v) ((int)v.size())
#define ALL(c) c.begin(),c.end()
#define REPI(it,c) for(typeof(c.begin()) it=c.begin();it!=c.end();it++)
#define MAXN 500005
typedef vector<int> VI;
int n,m,fa[MAXN],tot;
VI edge[MAXN],res[MAXN];
int init(){
  int i;
  for(i=1;i<=n+1;i++)
    fa[i]=i;
}
int find(int x){
  return fa[x]==x?x:(fa[x]=find(fa[x]));
}
void dfs(int x){
  int i,j;
  fa[x]=x+1;
  res[tot].PB(x);
  for(i=find(1);i<=n;i=find(i+1)){
    VI::iterator it=lower_bound(ALL(edge[x]),i);
    if(fa[i]==i&&(it==edge[x].end()||*it!=i)) dfs(i);
  }
}
int main(){
  int i,j;
  scanf("%d%d",&n,&m);
  for(i=0;i<m;i++){
    int s,f;
    scanf("%d%d",&s,&f);
    edge[s].PB(f);
    edge[f].PB(s);
  }
  for(i=1;i<=n;i++)
    sort(ALL(edge[i]));
  init();
  for(i=1,tot=0;i<=n;i++)
    if(fa[i]==i) dfs(i),tot++;
  printf("%d\n",tot);
  for(i=0;i<tot;i++){
    printf("%d ",SZ(res[i]));
    REPI(it,res[i]) printf("%d ",*it);
    printf("\n");
  }
  return 0;
}
