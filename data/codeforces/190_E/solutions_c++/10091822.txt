#include<bits/stdc++.h>
using namespace std;

const int N=500100;
vector<int> g[N];
set<int> s;

vector<int> ans[N];
int tot;

void bfs(int u,vector<int>& out){
    queue<int> que;
    que.push(u);
    while(!que.empty()){
        int u=que.front();
        out.push_back(u);
        que.pop();
        set<int> vis;
        for(int i=0;i<g[u].size();i++){
            int v=g[u][i];
            vis.insert(v);
        }
        vector<int> v;
        for(set<int>::iterator it=s.begin();it!=s.end();it++){
            if(vis.count(*it))continue;
            v.push_back(*it);
        }
        for(int i=0;i<v.size();i++){
            s.erase(v[i]);
            que.push(v[i]);
        }
    }
}

int main(){
    int n,m;
    scanf("%d%d",&n,&m);
    for(int i=0;i<m;i++){
        int x,y;
        scanf("%d%d",&x,&y);
        g[x].push_back(y);
        g[y].push_back(x);
    }
    for(int i=1;i<=n;i++){
        s.insert(i);
    }
    while(!s.empty()){
        int u=*s.begin();
        s.erase(u);
        bfs(u,ans[tot]);
        tot++;
    }
    printf("%d\n",tot);
    for(int i=0;i<tot;i++){
        printf("%d",ans[i].size());
        for(int j=0;j<ans[i].size();j++){
            printf(" %d",ans[i][j]);
        }
        puts("");
    }
    return 0;
}

  	 	 	 		 		 				  	 	  	 	 	