//in the name of god
#include <bits/stdc++.h>

const int maxn=5*100*1000+8;

int nxt[maxn],n;
bool flag[maxn];

using namespace std;
vector < int > a[maxn];
vector <int> Q[maxn];

inline int find_nxt(int x)
{
    if(nxt[x]==x)
        return x;
    return nxt[x]=find_nxt(nxt[x]);
}

inline void dfs(const int &x,const int &col)
{
    Q[col].push_back(x);
    flag[x]=1;
    nxt[x]=x+1;
    for(int i=find_nxt(1);i<=n;i=find_nxt(i+1))
    {
        if(binary_search(a[x].begin(),a[x].end(),i)==0)
            dfs(i,col);
    }
}

int main()
{
    for(int i=0;i<maxn;i++)
        nxt[i]=i;
    int m,u,v;
    scanf("%d",&n);
    scanf("%d",&m);
    for(int i=1;i<=m;i++)
    {
        scanf("%d",&u);
        scanf("%d",&v);
        a[u].push_back(v);
        a[v].push_back(u);
    }
    for(int i=1;i<=n;i++)
        sort(a[i].begin(),a[i].end());
    int col=1;
    for(int i=1;i<=n;i++)
        if(flag[i]==0)
            dfs(i,col++);


    printf("%d\n",col-1);
    for(int i=1;i<col;i++)
    {
        printf("%d ",Q[i].size());
        for(int j=0;j<Q[i].size();j++)
            printf("%d ",Q[i][j]);
        printf("\n");
    }



    return 0;
}
