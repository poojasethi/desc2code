from collections import defaultdict
from random import random

class dsu(object):
    def __init__(self, size):
        self.p = [None]*size

    def make(self, k):
        self.p[k] = k

    def find(self, k):
        if self.p[k] == k: return k
        self.p[k] = self.find(self.p[k])
        return self.p[k]

    def unite(self, l, r):
        li, ri = self.find(l), self.find(r)
        if li == ri: return
        if random() > 0.5:
            self.p[li] = ri
        else:
            self.p[ri] = li


ri = lambda: map(int, raw_input().split())

n = input()
d, rs, cs = dsu(n), defaultdict(list), defaultdict(list)
map(d.make, xrange(n))

for i in xrange(n):
    x, y = ri()
    rs[x].append(i)
    cs[y].append(i)
    d.unite(i, rs[x][0])
    d.unite(i, cs[y][0])

print sum(1 for k in xrange(n) if d.find(k) == k) - 1