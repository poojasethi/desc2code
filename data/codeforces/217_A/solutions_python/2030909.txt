visited, components = [], []

def dfs(point, index):
    global visited, components
    visited[index] = 1
    index = 0
    for comp in components:
        if (comp[0] == point[0] or comp[1] == point[1]) and visited[index] == 0:
            dfs(comp, index)
        index += 1
    return

def start():
    n = input()
    global visited, components
    visited = [0]*n
    for i in xrange(n):
        components.append(map(int, raw_input().split()))
    connectedComponents = 0
    for comp in xrange(len(components)):
        if visited[comp] == 0:
            connectedComponents += 1
            dfs(components[comp], comp)
    print connectedComponents - 1

start()
