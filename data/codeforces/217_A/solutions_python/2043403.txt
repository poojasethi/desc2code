n = int(raw_input())

nodes = {}
for i in range(n):
	nodes[i] = raw_input().split(' ')


# Build graph
for node in nodes:
	nodes[node].append([])
	nodes[node].append(0)
	for node2 in nodes:
		if nodes[node][0] == nodes[node2][0] or nodes[node][1] == nodes[node2][1]:
			nodes[node][2].append(node2)


components = []

def dfs(cur, nodes):
	component = []
	
	component.append(cur)
	
	nodes[cur][3] = 1
	queue = nodes[cur][2]
	while len(queue) > 0:
		cur = queue[0]
		
		component.append(cur)
		
		del(queue[0])
		if nodes[cur][3] == 0:
			queue = nodes[cur][2] + queue
		nodes[cur][3] = 1
	
	return component

for i in nodes:
	if nodes[i][3] == 0:
		component = dfs(i, nodes)
		components.append(component)


print(len(components) - 1)
