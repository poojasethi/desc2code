#include <cstdio>
#include <iostream>
#include <algorithm>
#include <string.h>
#include <vector>
#include <queue>
using namespace std;
typedef long long I;

const int M = 1e3+5;
int lowbit(int i){return i&-i; }
int N,Q;
int kk(int x,int y)
{
    return (x&1)+(y&1)*2;
}
I t[4][M][M];
void add(int x,int y,I c)
{
    int k=kk(x,y);
    while(x<=N)
    {
        int i=y;
        while(i<=N)
        {
            t[k][x][i]^=c; i+=lowbit(i);
        }x+=lowbit(x);
    }
}
I getsum(int x,int y)
{
    int k=kk(x,y);
    I m=0;
    while(x)
    {
        int i=y;
        while(i)
        {
            m^=t[k][x][i]; i-=lowbit(i);
        } x-=lowbit(x);
    } return m;
}
int main()
{
    cin>>N>>Q; int op,x1,x2,y1,y2;I c;
    while(Q--)
    {
        scanf("%d%d%d%d%d",&op,&x1,&y1,&x2,&y2);
        if(op==1)
            printf("%lld\n",getsum(x2,y2)^getsum(x1-1,y1-1)^getsum(x1-1,y2)^getsum(x2,y1-1));
        else
        {
            scanf("%lld",&c);
            add(x1,y1,c); add(x2+1,y2+1,c); add(x1,y2+1,c); add(x2+1,y1,c);
        }
    }
    return 0;
}

					  	 						   	  		 	