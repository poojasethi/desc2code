#include <cstdio>
#include <cstring>
#include <iostream>

using namespace std;

const int N = 1005;
long long bit[4][N][N], v;
int n, m, x0, y0, x1, y1, op;

int lowbit(int x)
{
	return x&-x;
}

int cal(int x, int y)
{
	int t = 0;
	if (x&1) t ++;
	if (y&1) t += 2;
	return t;
}

void Plus(int x, int y, long long v)
{
	int t = cal(x, y);
	for (int i = x; i <= n; i += lowbit(i))
	{
		for (int j = y; j <= n; j += lowbit(j))
		{
			bit[t][i][j] ^= v;
		}
	}
}

long long Sum(int x, int y)
{
	int t = cal(x, y);
	long long ans = 0;
	for (int i = x; i; i -= lowbit(i))
	{
		for (int j = y; j; j -= lowbit(j))
		{
			ans ^= bit[t][i][j];
		}
	}
	return ans;
}

int main()
{
	while (~scanf("%d%d", &n, &m))
	{
		memset(bit, 0, sizeof(bit));
		while (m --)
		{
			scanf("%d%d%d%d%d", &op, &x0, &y0, &x1, &y1);
			if (op == 1)
			{
				printf("%I64d\n", Sum(x1, y1)^Sum(x1, y0-1)^Sum(x0-1, y1)^Sum(x0-1, y0-1));
			}
			else
			{
				scanf("%I64d", &v);
				Plus(x0, y0, v);
				Plus(x0, y1+1, v);
				Plus(x1+1, y0, v);
				Plus(x1+1, y1+1, v);
			}
		}
	}
	return 0;
}

		 	 	 	  	 	 	  		 	