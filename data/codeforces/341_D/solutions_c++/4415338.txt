#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long ll;
int n;
ll bit[2][2][1003][1003];
#define lowbit(x) ((x)&(-(x)))
ll query(int x, int y) {
    ll ret = 0;
    int i, j;
    for(i = x; i > 0; i -= lowbit(i))
        for(j = y; j > 0; j -= lowbit(j))
            ret ^= bit[x&1][y&1][i][j];
    return ret;
}
void add(int x, int y, ll v) {
    int i, j;
    for(i = x; i <= n; i += lowbit(i))
        for(j = y; j <= n; j += lowbit(j))
            bit[x&1][y&1][i][j] ^= v;
}
int main() {
    int m, x0, y0, x1, y1, opt;
    ll v;
    scanf("%d%d", &n, &m);
    while(m--) {
        scanf("%d%d%d%d%d", &opt, &x0, &y0, &x1, &y1);
        if(opt == 1) {
            x0--; y0--;
            printf("%I64d\n", query(x0, y0)^query(x1, y1)^query(x0, y1)^query(x1, y0));
        }
        else {
            scanf("%I64d", &v);
            add(x0, y0, v);
            add(x0, y1+1, v);
            add(x1+1, y0, v);
            add(x1+1, y1+1, v);
        }
    }
    return 0;
}