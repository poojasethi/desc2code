#include <stdio.h>
#include <string.h>

const int MAXN = 1010;
typedef long long LL;

LL tree[2][2][MAXN][MAXN];

int lsb(int x) {
	return x & -x;
}

void update(int x, int y, int val) {
	for (int i = x; i < MAXN; i += lsb(i)) {
		for (int j = y; j < MAXN; j += lsb(j)) {
			tree[x&1][y&1][i][j] ^= val;
		}
	}
}

LL query(int x, int y) {
	LL ret = 0;
	for (int i = x; i > 0; i -= lsb(i)) {
		for (int j = y; j > 0; j -= lsb(j)) {
			ret ^= tree[x&1][y&1][i][j];
		}
	}
	return ret;
}

int main() {
	int n, m;
	while (scanf("%d%d", &n, &m) != EOF) {
		while (m--) {
			int op, x, y, xx, yy;
			LL val;
			scanf("%d", &op);
			if (op == 2) {
				scanf("%d%d%d%d%I64d", &x, &y, &xx, &yy, &val);
				update(x, y, val);
				update(x, yy + 1, val);
				update(xx + 1, y, val);
				update(xx + 1, yy + 1, val);
			} else {
				scanf("%d%d%d%d", &x, &y, &xx, &yy);
				LL ret = 0;
				ret ^= query(xx, yy);
				ret ^= query(x - 1, yy);
				ret ^= query(xx, y - 1);
				ret ^= query(x - 1, y - 1);
				printf("%I64d\n", ret);
			}
		}
	}
}
