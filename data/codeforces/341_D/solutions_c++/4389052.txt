#include<stdio.h>
#include<algorithm>
int n,m;
typedef long long int lnt;
lnt bit[2][2][1024][1024];
void __mdf(lnt bit[][1024],int x,int y,lnt v){
	for(int i=x;i<=n;i+=(i&-i))
		for(int j=y;j<=n;j+=(j&-j))
			bit[i][j]^=v;
	}
void mdf(int x,int y,lnt v){
	__mdf(bit[x&1][y&1],x,y,v);
	}
lnt __qry(lnt bit[][1024],int x,int y){
	lnt ans=0;
	for(int i=x;i;i-=(i&-i))
		for(int j=y;j;j-=(j&-j))
			ans^=bit[i][j];
	return ans;
	}
lnt qry(int x,int y){
	return __qry(bit[x&1][y&1],x,y);
	}
void sol(){
	for(int i=0;i<m;i++){
		int op;
		scanf("%d",&op);
		int x0,y0,x1,y1;
		lnt v;
		if(op==2){
			scanf("%d %d %d %d %I64d",&x0,&y0,&x1,&y1,&v);
			mdf(x0  ,y0  ,v);
			mdf(x0  ,y1+1,v);
			mdf(x1+1,y0  ,v);
			mdf(x1+1,y1+1,v);
			}
		if(op==1){
			scanf("%d %d %d %d",&x0,&y0,&x1,&y1);
			lnt ans=0;
			ans^=qry(x1  ,y1  );
			ans^=qry(x1  ,y0-1);
			ans^=qry(x0-1,y1  );
			ans^=qry(x0-1,y0-1);
			printf("%I64d\n",ans);
			}
		}
	}
int main(){
	while(scanf("%d %d",&n,&m)!=EOF)sol();
	return 0;
	}
