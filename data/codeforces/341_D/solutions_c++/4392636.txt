#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;
typedef long long ll;
const int N = 1005;
int n, m;
ll Tr[4][N][N];

void add(int x, int y, ll v) {
	int mask = ((x&1) << 1) + (y & 1);
	for (int i = x; i <= n; i += i & -i)
		for (int j = y; j <= n; j += j & -j)
			Tr[mask][i][j] ^= v;
}

ll get(int x, int y) {
	int mask = ((x & 1) << 1) + (y & 1);
	ll res = 0;
	for (int i = x; i; i -= i & -i)
		for (int j = y; j; j -= j & -j)
			res ^= Tr[mask][i][j];
	return res;
}

int main() {
	scanf("%d%d", &n, &m);
	for (int _ = 0; _ < m; _++) {
		int op;
		scanf("%d", &op);
		if (op == 1) {
			int ax, ay, bx, by;
			scanf("%d%d%d%d", &ax, &ay, &bx, &by);
			ll res = 0;
			res ^= get(bx, by);
			res ^= get(ax - 1, by);
			res ^= get(bx, ay - 1);
			res ^= get(ax - 1, ay - 1);
			printf("%I64d\n", res);
		} else {
			int ax, ay, bx, by;
			ll v;
			scanf("%d%d%d%d%I64d", &ax, &ay, &bx, &by, &v);
			add(ax, ay, v);
			add(bx + 1, ay, v);
			add(ax, by + 1, v);
			add(bx + 1, by + 1, v);
		}
	}
}