import os,sys
####You have number a, whose decimal representation quite luckily contains digits 1, 6, 8, 9. Rearrange the digits in its decimal representation so that the resulting number will be divisible by 7.
###Number a doesn't contain any leading zeroes and contains digits 1, 6, 8, 9 (it also can contain another digits). The resulting number also mustn't contain any leading zeroes.
###input
###The first line contains positive integer a in the decimal record. It is guaranteed that the record of number a contains digits: 1, 6, 8, 9. Number a doesn't contain any leading zeroes. The decimal representation of number a contains at least 4 and at most 106 characters
###output
###Print a number in the decimal notation without leading zeroes -- the result of the permutation.

def run():
    s = raw_input()
    n = len(s)

    freq = [0 for i in range(10)]
    for i in range(n):
        dig = ord(s[i]) - ord('0')
        freq[dig] += 1
    freq[1] -= 1
    freq[6] -= 1
    freq[8] -= 1
    freq[9] -= 1

    ##ends[i]%7 == i.
    ends = [1869, 1968,1689,6198,1698,1986,1896]
    ###we calculate the number constructed by the rest digits, i.e., front, and choose the one such that (ends + front)%7 == 0
    res = ""
    front = 0
    for i in range(1, 10):
        for j in range(freq[i]):
            front = (front*10 + i) % 7
        res += str(i)*freq[i]
    ###left shift 4, because the last four digits should be {1,6,8,9}
    front = (front * 10000) % 7
    
    ####choose the one such that (front + ends)%7 == 0, and fill in 0 in the end of the number
    res = res + str(ends[(7-front)%7]) + '0'*freq[0]
    print res
####################################################################################
run()
