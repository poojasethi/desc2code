#include <iostream>

using namespace std;

const int MAXN = 100010;

int dp[MAXN], dp2[MAXN];

int solve(string s, string t)
{
	int n = s.length();
	for (int i = n - 1; i >= 0; i--)
		if (s[i] == t[i])
			dp[i] = dp[i + 1] + 1;
		else
			dp[i] = 0;
	for (int i = n - 2; i >= 0; i--)
		if (s[i + 1] == t[i])
			dp2[i] = dp2[i + 1] + 1;
		else
			dp2[i] = 0;
	int ans = 0;
	for (int i = 0; i < n; i++)
		if (s[i] != t[i])
		{
			int nx = i + dp2[i];
			if (dp[nx + 1] == n - (nx + 1))
				return 1;
			else
				return 0;
		}
}

int main()
{
	int n;
	cin >> n;
	string s, t;
	cin >> s >> t;
	cout << solve(s, t) + solve(t, s) << endl;

}
