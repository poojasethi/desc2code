#include <cstdio>
#include <cstring>
#include <algorithm>
#define rep(i,s,t) for (int i = s; i <= t; ++i)
#define per(i,s,t) for (int i = s; i >= t; --i)
#define LL long long
using namespace std;
int n, l, s;
int a[100010], S[100010];
int b[100010], tb, in[100010];
int c[100010], tc;
struct res{
	LL k;
	int q[100010];
	void out(){
		printf("%I64d\n%d", k, q[1]);
		rep(i,2,n-1) printf(" %d", q[i]); printf("\n");
	}
}A, B;
inline bool cmp(int A, int B){ return a[A] < a[B]; }
 res Solve(int l, int s){
 	rep(i,1,n) S[i] = S[i-1]+a[i];
 	res ans; int t = 0, qie; LL sum1, sum2;
	if (s-1 >= l){
		ans.k = S[s-1]+S[n];
		per(i,l,1) ans.q[++t] = i;
		rep(i,l+1,n) if (i != s) ans.q[++t] = i;
	}
	else{
		l = l-(s-1);
		tb = 0; rep(i,s+1,n-2) b[++tb] = i;
		sort(b+1, b+tb+1, cmp);
		memset(in, 0, sizeof(in)); int tt = l;
		sum1 = sum2 = 0; rep(i,1,l) sum1 = sum1+a[b[i]], in[b[i]] = 1; ans.k = sum1*2+S[s-1]+S[n]; qie = n;
		per(i,n-1,n-l){
			sum2+=a[i];
			if (in[i-1]){
				in[i-1] = 0; sum1-=a[i-1];
			}
			else{
				while (tt > 0 && !in[b[tt]]) --tt; in[b[tt]] = 0; sum1-=a[b[tt]];
			}
			if (sum1*2+sum2+S[s-1]+S[n] < ans.k){
				ans.k = sum1*2+sum2+S[s-1]+S[n];
				qie = i;
			}
		}
		per(i,s-1,1) ans.q[++t] = i; int last = s;
		tb = 0; rep(i,s+1,qie-2) b[++tb] = i;
		sort(b+1, b+tb+1, cmp);
		tc = 0; rep(i,1,l-(n-qie)) c[++tc] = b[i];
		sort(c+1, c+tc+1); rep(i,qie,n-1) c[++tc] = i;
		int h1 = 1, h2;
		while (h1 <= tc){
			rep(i,last+1, c[h1]-1) ans.q[++t] = i;
			h2 = h1; while (h2 < tc && c[h2+1] == c[h2]+1) ++h2;
			ans.q[++t] = c[h2]+1; per(i,h2,h1) ans.q[++t] = c[i];
			h1 = h2+1; last = c[h2]+1;
		}
		rep(i,last+1,n) ans.q[++t] = i;
	}
	return ans;
}
int main(){
	scanf("%d%d%d", &n, &l, &s);
	rep(i,1,n) scanf("%d", &a[i]);
	if (l == 0){
		if (s == 1){
			printf("%d\n%d", a[n]-a[1], 2);
			rep(i,3,n) printf(" %d", i); printf("\n");
		}
		else printf("-1\n");
		return 0;
	}
	if (l == n-1){
		if (s == n){
			printf("%d\n%d", a[n]-a[1], n-1);
			per(i,n-2,1) printf(" %d", i); printf("\n");
		}
		else printf("-1\n");
		return 0;
	}
	rep(i,1,n-1) a[i] = a[i+1]-a[i]; a[n] = 0; A = Solve(l, s);
	reverse(a+1, a+n); B = Solve(n-l-1, n-s+1);
	if (A.k < B.k) A.out();
	else{
		rep(i,1,n) B.q[i] = n-B.q[i]+1; B.out();
	}
	return 0;
}