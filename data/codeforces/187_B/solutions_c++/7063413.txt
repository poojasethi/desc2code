#include <iostream>
#include <cstring>
using namespace std;
const int MAX = 60;
int d[MAX][MAX][MAX], cost[MAX][MAX][MAX];
int main()
{
	ios::sync_with_stdio(false);
	memset(d, 60, sizeof(d));
	int n, m, q;
	cin >> n >> m >> q;
	for (int i = 0; i < m; i++)
	{
		for (int j = 0; j < n; j++)
			for (int k = 0; k < n; k++)
				cin >> cost[i][j][k];
		for (int w = 0; w < n; w++)
			for (int u = 0; u < n; u++)
				for (int v = 0; v < n; v++)
					cost[i][u][v] = min(cost[i][u][v], cost[i][u][w] + cost[i][w][v]);
		for (int u = 0; u < n; u++)
			for (int v = 0; v < n; v++)
				d[0][u][v] = min(d[0][u][v], cost[i][u][v]);
	}
	for (int k = 1; k < MAX; k++)
		for (int w = 0; w < n; w++)
			for (int u = 0; u < n; u++)
				for (int v = 0; v < n; v++)
					d[k][u][v] = min(d[k][u][v], d[k / 2][u][w] + d[(k - 1) / 2][w][v]);
	while (q--)
	{
		int u, v, k;
		cin >> u >> v >> k;
		k = min(k, MAX - 1);
		u--;
		v--;
		cout << d[k][u][v] << endl;
	}
	return 0;
}
