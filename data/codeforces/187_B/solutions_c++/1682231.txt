#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define FOR(i, s, t) for (int i = (s); i < (t); i++)
#define FOE(i, s, t) for (int i = (s); i <= (t); i++)
#define MAXN 61
#define INF 1000000000
int n, m, r;
void floyd(int mat[][MAXN]) {
	FOR (k, 0, n) FOR (i, 0, n) FOR (j, 0, n)
		mat[i][j] = min(mat[i][j], mat[i][k] + mat[k][j]);
}
int mat[MAXN][MAXN], opt[MAXN][MAXN][MAXN];
int main() {
	scanf("%d%d%d", &n, &m, &r);
	FOR (i, 0, n) FOR (j, 0, n) FOR (k, 0, n) opt[i][j][k] = INF;
	FOR (k, 0, m) {
		FOR (i, 0, n) FOR (j, 0, n) scanf("%d", &mat[i][j]);
		floyd(mat);
		FOR (i, 0, n) FOR (j, 0, n) opt[i][j][0] = min(opt[i][j][0], mat[i][j]);
	}
	FOR (p, 1, n) FOR (i, 0, n) FOR (j, 0, n) FOR (k, 0, n) opt[i][j][p] = min(opt[i][j][p], opt[i][k][p - 1] + opt[k][j][0]);
	while (r--) {
		int u, v, k;
		scanf("%d%d%d", &u, &v, &k);
		printf("%d\n", opt[u - 1][v - 1][min(k, n - 1)]);
	}
	return 0;
}
