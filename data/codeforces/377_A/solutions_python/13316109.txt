r, c, k = map(int, raw_input().split())
#graph = [map(str, raw_input().split()) for _ in xrange(r)]
graph = []
for i in xrange(r):
	graph.append([])
	I = raw_input()
	for j in I:
		graph[i].append(j) 

s = sum(graph[i].count('.') for i in xrange(r)) 	# number of empty spaces
#print s
point, pointo = False, False
for i in xrange(r):
	if  pointo:
		break
	for j in xrange(c):

		if  point:
			pointo = True
			break
		if graph[i][j] == '#':
			continue
		else:
			stack = [(i, j)] # contain as tuple
			visit = [[False]*c for _ in xrange(r)]
			visit[i][j] = True
			count = 1

			while len(stack) != 0:
				if count == s-k:
					#print count
					#print visit
					for m in xrange(r):
						for n in xrange(c):
							if graph[m][n] == '.' and visit[m][n] == False:
								graph[m][n] = 'X'

						print ''.join(map(str, graph[m]))

					point = True
					break
				else:
					p, q = stack.pop()
					#print p,q
					
					for x,y in [(p,q+1),(p,q-1),(p+1,q),(p-1,q)]:
						try:
							if (x>=0 and y>=0) and graph[x][y] == '.' and not visit[x][y]:
								visit[x][y] = True
								count += 1
								stack.append((x, y))
							if count == s-k:
								break
						except:
							pass
						#print x,y
						#print visit




