[n,m,k] = map(int,raw_input().split())
maze = [[]] * n
for row in xrange(n):
    maze[row] = list(raw_input())
visited = [[False] * m for i in xrange(n)]

def in_bounds(pair):
    return 0 <= pair[0] and pair[0] < n and 0 <= pair[1] and pair[1] < m 
def nbrs(pair):
    (x,y) = pair
    return [p for p in [(x+1,y),(x-1,y),(x,y+1),(x,y-1)] \
            if in_bounds(p) and maze[p[0]][p[1]] == '.']
r = None
x = 0
while(not r):
    if('.' in maze[x]):
        ind = maze[x].index('.')
        if(ind >= 0):
            r = (x,ind)
    x += 1
visited[r[0]][r[1]] = True
tree = [r]

for node in tree:
    for nbr in nbrs(node):
        if(not visited[nbr[0]][nbr[1]]):
            tree.append(nbr)
            visited[nbr[0]][nbr[1]] = True
t = len(tree)        
for i in xrange(t-k,t):
    node = tree[i]
    maze[node[0]][node[1]] = 'X'
for row in maze:
    print "".join(row)
	 		  				  			 	 		 			 		 	