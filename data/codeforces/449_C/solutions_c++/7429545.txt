#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

int n;
bool nprime[100001], used[100001];
vector<pair<int, int> > groups;

int main() {
	nprime[0] = true;
	nprime[1] = true;
	
	cin >> n;
	
	for(int i=2;i<=n;i++)
		if(!nprime[i])
			for(int j=2*i; j<=n; j+=i)
				nprime[j] = true;
	
	for(int i=n;i>0;i--)
		if(!nprime[i]) {
			
			vector<int> useable;
			for(int j=i;j<=n; j+= i)
				if(!used[j])
					useable.push_back(j);
			
			if(useable.size() % 2 == 1 && useable.size() > 1)
				useable.erase(useable.begin() + 1);
			
			for(int j=0;j+1<useable.size();j+= 2) {
				groups.push_back(make_pair(useable[j], useable[j+1]) );
					
				used[useable[j]] = true;
				used[useable[j+1] ] = true;
			}
			
		}
	
	cout << groups.size() << '\n';
	
	for(int i=0;i<groups.size();i++)
		cout << groups[i].first << ' ' << groups[i].second << '\n';
	
	return 0;
}
