#include <cstdio>
#include <algorithm>
#define N 100005
#define M 1000005
#define K 26
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int n, k, t[M][26], pt, w[M], pos[N], q[M], s[M], l, h;
int p, f[M], v[M], o[M], b[M], d[M], tt, bit[M];
char buf[M], cmd;
bool u[N];

int query(int x){
	int ret = 0;
	for(int i = x; i; i -= i & -i) ret += bit[i];
	return ret;
}

void update(int x, int y){
	for(int i = x; i <= tt; i += i & -i) bit[i] += y;
}

void bd(int a, int b){
	v[++p] = b; o[p] = f[a]; f[a] = p;
}

void dfs(int x){
	b[x] = ++tt;
	fe(i, f[x], o) dfs(v[i]);
	d[x] = tt;
}

int main(){
	scanf("%d %d", &n, &k);
	FI(i, 1, k){
		scanf("%s", buf);
		int r = 0;
		for(int j = 0; buf[j]; j++){
			if(!t[r][buf[j] - 'a']) t[r][buf[j] - 'a'] = ++pt;
			r = t[r][buf[j] - 'a'];
		}
		w[r] = i;
		pos[i] = r;
	}
	
	q[h++] = 0;
	while(l < h){
		int y = q[l++];
		fi(i, 0, K) if(t[y][i]){
			q[h++] = t[y][i];
			if(y){
				int j = s[y];
				while(j && !t[j][i]) j = s[j];
				if(t[j][i]) j = t[j][i];
				s[t[y][i]] = j;
				bd(j, t[y][i]);
			}else bd(0, t[y][i]);
		}
	}
	
	dfs(0);
	FI(i, 1, k){
		update(b[pos[i]], 1);
		update(d[pos[i]] + 1, -1);
		u[i] = 1;
	}
	
	while(n--){
		scanf("\n%c%s", &cmd, buf);
		if(cmd == '?'){
			int r = 0, ans = 0;
			for(int i = 0; buf[i]; i++){
				while(r && !t[r][buf[i] - 'a']) r = s[r];
				if(t[r][buf[i] - 'a']) r = t[r][buf[i] - 'a'];
				ans += query(b[r]);
			}
			printf("%d\n", ans);
		}else{
			int num = 0;
			for(int i = 0; buf[i]; i++) num = num * 10 + buf[i] - '0';
			if(cmd == '+' && !u[num]){
				u[num] = 1;
				update(b[pos[num]], 1);
				update(d[pos[num]] + 1, -1);
			}
			if(cmd == '-' && u[num]){
				u[num] = 0;
				update(b[pos[num]], -1);
				update(d[pos[num]] + 1, 1);
			}
		}
	}
	scanf("\n");
}
