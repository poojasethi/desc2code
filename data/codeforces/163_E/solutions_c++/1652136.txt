#include<cstdio>
#include<cstring>
const int MM = 1000010 , NC = 26;
int N;
char str[MM];
bool flag[MM];
int val[MM];
int idx[MM];
int a[MM][NC];
int fail[MM];
int cnt,rt,q[MM],front,last;
void Init(){
    cnt=1;
    rt=cnt++;
    fail[0]=0;memset(a[0],0,sizeof(a[0]));
    for(int i=0;i<NC;i++) a[0][i]=rt;
    fail[1]=0;memset(a[1],0,sizeof(a[1]));
}
void Ins(char *in,int id){
    int now=rt;
    for(;*in;++in){
        int id=*in-'a';
            if(!a[now][id]){
                memset(a[cnt],0,sizeof(a[cnt]));
                a[now][id]=cnt++;
            }
            now=a[now][id];
    }
    idx[id]=now;
    val[now]=1;
    flag[now]=true;
}
void build(){
    front=last=0;q[front++]=rt;
    while(last<front){
        int t=q[last++];
        for(int i=0;i<NC;i++){
            int tt=a[t][i];
            int ff=fail[t];
            if(a[t][i]){
                fail[tt]=a[ff][i];
                q[front++]=tt;
                val[tt]+=val[fail[tt]];
            }
            else a[t][i]=a[ff][i];
        }
    }
}
int AC(char *str){
    int i=1,cur=rt,sum=0;
    for(;str[i];i++){
        int id=str[i]-'a';
        cur=a[cur][id];
        int p=cur;
        while(val[p]){
            sum+=flag[p];
            p=fail[p];
        }
    }
    return sum;
}
int main()
{
    memset(flag,false,sizeof(flag));
    Init();
    int op,n,i,j,num;
    scanf("%d%d",&op,&n);
    for(i=1;i<=n;i++){
        scanf("%s",str);
        Ins(str,i);
    }
    build();
    while(op--)
    {
        scanf("%s",str);
        if(str[0]=='?') printf("%d\n",AC(str));
        else 
        { 
             if(str[0]=='-')
             {
                 sscanf(str,"-%d",&num);
                 flag[idx[num]]=false;
             }
             else 
             {
                 sscanf(str,"+%d",&num);
                 flag[idx[num]]=true;
             }
        }
    }
}