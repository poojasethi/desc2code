#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
using namespace std;

int next[1000005][26],yes[1000005],fail[1000005];
int flag[1000005],q[1000006],f[1000005],cnt;
char s[1000005],t[1000005];
int insert(char s[])
{
    int now=0;
    for (int i=0;s[i];i++)
    {
        if (next[now][s[i]-'a']==-1)
        {
            next[now][s[i]-'a']=cnt;
            memset(next[cnt],-1,sizeof(next[cnt]));
            fail[cnt]=-1;
            yes[cnt]=0;
            cnt++;
        }
        now=next[now][s[i]-'a'];
    }
    yes[now]++;
    f[now]=1;
    return now;
}
void build_AC_automaton()
{
    int head=0,tail=0;
    for (int i=0;i<26;i++)
    {
        int tmp=next[0][i];
        if (tmp==-1)
            next[0][i]=0;
        else
        {
            fail[tmp]=0;
            q[tail++]=tmp;
        }
    }
    while (head<tail)
    {
        int tmp=q[head++];
        for (int i=0;i<26;i++)
        {
            int tmp1=next[tmp][i];
            if (tmp1==-1) next[tmp][i]=next[fail[tmp]][i];
            else
            {
                q[tail++]=tmp1;
                fail[tmp1]=next[fail[tmp]][i];
                yes[tmp1]+=yes[fail[tmp1]];
            }
        }
    }
}
inline int query(char s[])
{
    int now=0;
    int key=0,tmp;
    for (int i=1;s[i];i++)
    {
        now=next[now][s[i]-'a'];
        tmp=now;
        while (yes[tmp])
        {
            if (f[tmp]) key++;
            tmp=fail[tmp];
        }
    }
    return key;
}
int main()
{
    int n,k;
    while (scanf("%d%d",&n,&k)>0)
    {
        cnt=1;
        memset(next[0],-1,sizeof(next[0]));
        fail[0]=-1;
        yes[0]=0;
        for (int i=1;i<=k;i++)
        {
            scanf("%s",s);
            flag[i]=insert(s);
        }
        build_AC_automaton();
        for (int i=1;i<=n;i++)
        {
            scanf("%s",s);
            if (s[0]=='?') printf("%d\n",query(s));
            else
            {
                int key;
                char ch;
                sscanf(s,"%c%d",&ch,&key);
                if (s[0]=='+')
                    f[flag[key]]=1;
                else
                    f[flag[key]]=0;
            }
        }
    }
}
