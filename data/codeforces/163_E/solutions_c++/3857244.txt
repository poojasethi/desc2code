#include <set>
#include <map>
#include <cmath>
#include <queue>
#include <stack>
#include <string>
#include <vector>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;

#define debug puts("here")
#define rep(i,n) for(int i=0;i<n;i++)
#define rep1(i,n) for(int i=1;i<=n;i++)
#define REP(i,a,b) for(int i=a;i<=b;i++)
#define foreach(i,vec) for(unsigned i=0;i<vec.size();i++)
#define pb push_back
#define RD(n) scanf("%d",&n)
#define RD2(x,y) scanf("%d%d",&x,&y)
#define RD3(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define RD4(x,y,z,w) scanf("%d%d%d%d",&x,&y,&z,&w)

/******** program ********************/

const int kind = 26;
const int MAXN = 1e6+5;

int next[MAXN][kind],fail[MAXN],id[MAXN],cnt[MAXN],tot;
char s[MAXN],str[MAXN];
bool in[MAXN];

void ins(int now){
    int p = 0;
    for(int i=0;s[i];i++){
        int c = s[i]-'a';
        if(next[p][c]==0)
            next[p][c] = ++tot;
        p = next[p][c];
    }
    id[now] = p;
    cnt[p] = 1;
    in[p] = true;
}

void ac_build(){
    queue<int> q;
    q.push(0);
    while(!q.empty()){
        int p = q.front();
        q.pop();
        rep(i,26){
            if(next[p][i]){
                if(p){
                    fail[ next[p][i] ] = next[ fail[p] ][i];
                    cnt[ next[p][i] ] += cnt[ fail[ next[p][i]] ];
                }
                q.push(next[p][i]);
            }else if(p)
                next[p][i] = next[ fail[p] ][i];
        }
    }
}

void ac_run(){
    int p = 0;
    int ans = 0;
    for(int i=0;s[i];i++){
        p = next[p][s[i]-'a'];
        int q = p;
        while(cnt[q]){
            ans += in[q];
            q = fail[q];
        }
    }
    cout<<ans<<endl;
}

int main(){

#ifndef ONLINE_JUDGE
	freopen("sum.in","r",stdin);
	//freopen("sum.out","w",stdout);
#endif

    int n,m;
    RD2(m,n);
    rep1(i,n){
        scanf("%s",s);
        ins(i);
    }

    ac_build();

    int x;
    while(m--){
        scanf("%s",str);
        if(str[0]=='?'){
            sscanf(str+1,"%s",s);
            ac_run();
        }else{
            sscanf(str+1,"%d",&x);
            in[ id[x] ] = (str[0]=='+');
        }
    }

	return 0;
}
