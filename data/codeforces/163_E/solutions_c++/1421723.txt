#include <vector>
#include <set>
#include <map>
#include <cstdio>
#include <string>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <iostream>
using namespace std;

const int maxn = 1111111;
char str[maxn];
char a[maxn];
int chd[maxn][26];
int idx[maxn];
int val[maxn];
int fail[maxn];
int Que[maxn];
bool ok[maxn];
int sz;
void build(int id)
{
    int p = 0;
    for (int i = 0 ; str[i] ; i ++)
    {
        int c = str[i] - 'a';
        if (!chd[p][c])
        {
            val[sz] = 0;
            chd[p][c] = sz ++;
        }
        p = chd[p][c];
    }
    val[p] = 1;
    idx[id] = p;
    ok[p] = true;
}
void AC()
{
    int *s = Que , *e = Que;
    for (int i = 0 ; i < 26 ; i ++) if(chd[0][i])
        {
            fail[ chd[0][i] ] = 0;
            *e++ = chd[0][i];
        }
    while(s != e)
    {
        int p = *s++;
        for (int i = 0 ; i < 26 ; i ++)
        {
            if(chd[p][i])
            {
                int v = chd[p][i];
                *e++ = v;
                fail[v] = chd[fail[p]][i];
                val[v] += val[ fail[v] ];
            }
            else
            {
                chd[p][i] = chd[fail[p]][i];
            }
        }
    }
}
int getval()
{
    int id = 0;
    for (int i = 1 ; a[i] ; i ++)
    {
        id = id * 10 + a[i] - '0';
    }
    return id;
}


void ini()
{
    memset(chd , 0,sizeof(chd));
}
int main()
{
    int n ,k;
    scanf("%d%d",&n,&k);


    ini();
    sz = 1;
    for (int i = 0 ; i < k ; i ++)
    {
        scanf("%s",str);
        build(i+1);
    }
    AC();
    while (n --)
    {
        scanf("%s",a);
        if (a[0] == '?')
        {
            int cnt = 0;
            int p = 0;
            for (int i = 1 ; a[i] ; i ++)
            {
                int c = a[i] - 'a';
                p = chd[p][c];
                int q = p;
                while (val[q])
                {
                    if (ok[q]) cnt ++;
                    q = fail[q];
                }
            }
            printf("%d\n",cnt);
        }
        else if (a[0] == '+')
        {
            int id = getval();
            ok[ idx[id] ] = true;
        }
        else
        {
            int id = getval();
            ok[ idx[id] ] = false;
        }
    }
    return 0;
}
