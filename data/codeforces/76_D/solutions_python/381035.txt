import sys,os
g = []
a = 0
b = 0
rx = -1
ry = -1
la = []
lb = []

def initByte():
    global g
    i = 0
    while i < 64:
        g.append(1 << i)
        i += 1
    #print g
    
def solve(p,x,y,carry):
    global g
    global mini
    global a,b
    global rx,ry
    if p == -1:
        if carry == 1:
            return
        rx = x
        ry = y
        return
    if lb[p]:
        if carry == 1:
            if la[p]:
                # 1  1  1
                return
            else:
                # 1  1  0
                solve(p - 1,x,y + g[p],1)
        else:
            if la[p]:
                # 1  0  1
                solve(p - 1,x,y + g[p],0)
            else:
                # 1  0  0
                solve(p - 1,x,y + g[p],1)
    else:
        if carry == 1:
            if la[p]:
                # 0  1  1
                solve(p - 1,x + g[p],y + g[p],1)
            else:
                # 0  1  0
                solve(p - 1,x + g[p],y + g[p],0)
        else:
            if la[p]:
                # 0  0  1
                solve(p - 1,x,y ,1)
            else:
                # 0  0  0
                solve(p - 1,x,y,0)
def main():
    global a,b
    global rx,ry
    
    initByte()
    a = int(raw_input())
    b = int(raw_input())
    x = 0
    y = 0
    i = 0
    
    while i < 64:
        la.append(g[i] == (a & g[i]))
        lb.append(g[i] == (b & g[i]))
        i = i + 1
    #print la,lb
    solve(63,0,0,0)
    if rx == -1:
        print -1
    else:
        print rx,ry
            
if __name__ == '__main__':
    main()