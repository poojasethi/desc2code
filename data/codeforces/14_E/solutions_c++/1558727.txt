#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

#define MAXN 22
#define MAXT 12

int memo[MAXN][5][MAXT][2],n;

int solve(int x, int y, int t, int a) {
	if (t<0) return 0;
	
	if (memo[x][y][t][a] != -1) return memo[x][y][t][a];
	
	if (x == n) {
		if (!t && !a) return 1;
		return 0;
	}
	
	memo[x][y][t][a] = 0;
	for (int i=1; i<=4; i++) {
		if (i == y) continue;
		else if (i < y) {
			if (x == 1) continue;
			if (a == 1) memo[x][y][t][a] += solve(x+1,i,t-1,0);
			else memo[x][y][t][a] += solve(x+1,i,t,0);
		}
		else memo[x][y][t][a] += solve(x+1,i,t,1);
	}
	
	return memo[x][y][t][a];
}

int main() {
	int t,res;
	scanf("%d%d",&n,&t);
	
	res = 0;
	for (int i=1; i<=4; i++) {
		memset(memo,-1,sizeof(memo));
		res += solve(1,i,t,0);
	}
	
	printf("%d\n",res);
	
	return 0;
}