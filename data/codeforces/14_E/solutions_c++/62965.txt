#include <cstdio>
#include <cstring>



const int MaxN = 22, MaxT = 12;

long long dp[6][MaxN][MaxT][2];


int main (void)
{
  int n, t;
  int i, j, g, h;
  long long res = 0;
  scanf ("%d %d", &n, &t);
  memset (dp, 0, sizeof(dp));
  dp[0][0][0][0] = 1;
  for (i = 1; i <= n; i++)
    for (j = 0; j <= t; j++)
      for (h = 1; h <= 4; h++)
      {
        for (g = 0; g < h; g++)
          dp[h][i][j][0] += dp[g][i-1][j][0] + dp[g][i-1][j][1];
        if (i == 2)
          dp[h][i][j][1] = 0;
        else
          for (g = 5; g > h; g--)
          {
            dp[h][i][j][1] += dp[g][i-1][j][1];
            if (j > 0)
              dp[h][i][j][1] += dp[g][i-1][j-1][0];
          }
      }
  for (h = 1; h <= 4; h++)
    res += dp[h][n][t][1];
  printf ("%I64d\n", res);      
  return 0;
}
