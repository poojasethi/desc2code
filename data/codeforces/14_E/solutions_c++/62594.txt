#include<cstdio>
#include<cstring>

long long DP[30][30][10];

long long cal(int n, int t, int y){
	if (DP[n][t][y] != -1) return DP[n][t][y];
	if (!n && !t) return 1;
	if (n <= 0) return 0;
	if (t <= 0) return 0;
	long long res = 0;
	if (t%2 == 0){
		for (int i = y+1; i < 5; ++i) res += cal(n-1, t, i) + cal(n-1, t-1, i);
	}else
		for (int i = y-1; i; --i) res += cal(n-1, t, i) + cal(n-1, t-1, i);
	return DP[n][t][y] = res;
}

int main(){
	int n, t;
	memset(DP, -1, sizeof(DP));
	scanf("%d%d", &n, &t);
	long long ans = 0;
	for (int i = 4; i; i--) ans += cal(n-1, 2*t, i);
	printf("%lld\n", ans);
	return 0;
}
