import sys

points, peaks = (int(x) for x in sys.stdin.readline().split())
mem = {}

def hump(n_points, n_peaks, n_humps, prev, slope, sol=""):
    if n_peaks < 0 or n_humps < 0:
        return 0
    if n_points == 0 and n_peaks == 0 and n_humps == 0:
        #print(sol, n_peaks)
        return 1
    if n_points == 0:
        return 0
    if (n_points, n_peaks, n_humps, prev, slope) in mem:
        return mem[(n_points, n_peaks, n_humps, prev, slope)]

    r = 0
    for i in range(1, 5):
        if i == prev:
            continue
        new_n_points = n_points-1
        new_n_peaks = n_peaks-1 if slope > 0 and i < prev and n_points+2 <= points else n_peaks
        new_n_humps = n_humps-1 if slope < 0 and i > prev and n_points+2 <= points else n_humps
        new_prev, new_slope = i, -1 if i-prev < 0 else 1
        r += hump(new_n_points, new_n_peaks, new_n_humps, new_prev, new_slope)
    mem[(n_points, n_peaks, n_humps, prev, slope)] = r
    return r

print(hump(points, peaks, peaks-1, -1, 0))
