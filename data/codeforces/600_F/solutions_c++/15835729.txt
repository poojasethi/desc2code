#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
#define Clear(a, b) memset(a, b, sizeof a)
using namespace std;
const int N = 2e3+10, M = 1e5+10;

int dgr[N], next[N][N], edge[M][2];
int a, b, d, n, m;
int ans[M];

inline void Get(int x, int y, int &c1, int &c2) {
	static int cnt[N][2];
	Clear(cnt, 0);
	for (int i=1; i<=d; ++i)
		if (next[x][i]) ++cnt[i][0];
	for (int i=1; i<=d; ++i)
		if (next[y][i]) ++cnt[i][1];
	for (int i=1; i<=d; ++i) 
		if (cnt[i][0] ^ cnt[i][1]) {
			if (cnt[i][0]) c1 = i;
			else c2 = i;
		}
}

void Modify(int x, int a, int b) {
	int y=next[x][a];
	if (!next[y][b]) { 
		next[x][b] = y;
		next[y][b] = x;
		next[y][a] = 0;
	}
	else {
		next[y][a] = 0;
		Modify(y, b, a);
		next[x][b] = y;
		next[y][b] = x;
	}
	next[x][a] = 0;
}

inline void Paint(int x, int y) {
	for (int i=1; i<=d; ++i)
		if (!next[x][i] && !next[y][i]) {
			next[x][i] = y;
			next[y][i] = x;
			return;
		}
	static int c1, c2;
	Get(x, y, c1, c2);
	Modify(y, c2, c1);
	next[x][c2] = y;
	next[y][c2] = x;
}

int main() {

	scanf("%d%d%d", &a, &b, &m), n=a+b;
	for (int i=1; i<=m; ++i) {
		int x, y;
		scanf("%d%d", &x, &y);
		y += a;
		++dgr[x], ++dgr[y];
		edge[i][0]=x, edge[i][1]=y;
	}
	int ans=0;
	for (int i=1; i<=n; ++i) ans = max(ans, dgr[i]);
	printf("%d\n", ans);
	d = ans;
	for (int i=1; i<=m; ++i) {
		int x=edge[i][0], y=edge[i][1];
		Paint(x, y);
	}
	for (int i=1; i<=m; ++i) {
		int x=edge[i][0], y=edge[i][1], ans=-1;
		for (int j=1; j<=d; ++j)
			if (next[x][j]==y) { ans=j; break; }
		if (i<m) printf("%d ", ans); else printf("%d\n", ans);
	}

	return 0;
}
