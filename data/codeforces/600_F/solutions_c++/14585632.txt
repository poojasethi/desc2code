#include<iostream>
#include<cstring>
#include<cstdio>
#include<cmath>
using namespace std; 
int const maxn=1003; 

int hash[maxn][maxn],n,m,edge,mat[2][maxn][maxn],ret,ans[100*maxn]; 

void dfs(int p,int a,int b,int c1,int c2) {
	int t=mat[1^p][b][c1]; 
	mat[p][a][c1]=b,mat[1^p][b][c1]=a;
	if (t==-1) {
		mat[1^p][b][c2]=-1;return ;
	}
    dfs(1^p,b,t,c2,c1); 
}
	
	
int main(){
	scanf("%d%d%d",&n,&m,&edge); 
	memset(mat,255,sizeof(mat)); 
	for (int i=1;i<=edge;i++) {
		int a,b,c1=1,c2=1; 
		scanf("%d%d",&a,&b); 
		hash[a][b]=i;
		while ( mat[0][a][c1]!=-1) c1++; 
		while (mat[1][b][c2]!=-1) c2++; 
		ret=max(ret,max(c1,c2)); 
		if ( c1==c2) mat[0][a][c1]=b,mat[1][b][c1]=a;
		else dfs(0,a,b,c1,c2); 
	}
	for ( int i=1;i<=n;i++)
		for(int j=1;j<=ret;j++) 
			if (mat[0][i][j]!=-1) ans[hash[i][mat[0][i][j]]]=j; 
	printf("%d\n",ret);
	for(int i=1;i<=edge;i++) printf("%d ",ans[i]); 
	return 0; 
}