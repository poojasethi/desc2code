#include<cstdio>
#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<cstring>
#include<set>
#include<map>
#include<cmath>
#include<climits>
#include<ctime>
#include<iomanip>
using namespace std ;

#define maxn 1010
#define maxm 100010

int A, B, M, rez ;

int unde[2][maxn][maxn] ;

int id[maxn][maxn] ;

int sol[maxm] ;

void dfs(int parte, int x, int y, int c1, int c2)
{
    int cealalta = ( 1 + parte ) % 2 ;
	int z = unde[cealalta][y][c1] ;

	unde[parte][x][c1] = y ;
	unde[cealalta][y][c1] = x ;

	if( z == 0 )
	{
		unde[cealalta][y][c2] = 0 ;
		return ;
	}

	dfs( cealalta, y, z, c2, c1 ) ;
}

void citire()
{
	cin >> A >> B >> M ;

	for(int i = 1; i <= M; ++i)
	{
		int x, y ;
		cin >> x >> y ;

		id[x][y] = i ;

		int c1 = 1, c2 = 1 ;

		while( unde[0][x][c1] )
            ++c1 ;

		while( unde[1][y][c2] )
            ++c2 ;

		rez = max(rez, max( c1, c2 ) ) ;

		if( c1 == c2 )
		{
			unde[0][x][c1] = y ;
			unde[1][y][c1] = x ;
		}
		else
			dfs( 0, x, y, c1, c2 ) ;
	}
}

void afisare()
{
	for(int i = 1; i <= A; ++i)
		for(int j = 1; j <= rez; ++j)
			if( unde[0][i][j] )
				sol[ id[i][ unde[0][i][j] ] ] = j ;

    cout << rez << "\n" ;

	for(int i = 1; i <= M; ++i)
        cout << sol[i] << " " ;
}

int main()
{
	std::ios_base::sync_with_stdio(false) ;

	//freopen("t.in", "r", stdin);
	//freopen("t.out", "w", stdout);

	citire() ;

    afisare() ;

	return 0 ;
}
