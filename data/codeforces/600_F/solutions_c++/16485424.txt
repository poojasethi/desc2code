#include <bits/stdc++.h>
using namespace std;

const int maxN = 1005, maxM = 100005;

int a, b, m;
int edge[maxM][2], color[maxM];
int dx[maxN], dy[maxM], vertex[2][maxN][maxN];

void dfs(int e, int p, int c1, int c2) {
    int x = edge[e][1 - p], y = edge[e][p];
    int f = vertex[p][y][c1];
    vertex[1 - p][x][c1] = vertex[p][y][c1] = e;
    color[e] = c1;
    if (f == 0) {
        vertex[p][y][c2] = 0;
        return;
    }
    dfs(f, 1 - p, c2, c1);
}

int main() {

    scanf("%d%d%d", &a, &b, &m);
    for (int i = 1; i <= m; i++) {
        scanf("%d%d", &edge[i][0], &edge[i][1]);
    }
    int ans = 0;
    for (int i = 1; i <= m; i++) {
        ans = max(ans, ++dx[edge[i][0]]);
        ans = max(ans, ++dy[edge[i][1]]);
    }

    for (int i = 1; i <= m; i++) {
        int x = edge[i][0], y = edge[i][1];
        int c1 = 1, c2 = 1;
        while (vertex[0][x][c1]) c1++;
        while (vertex[1][y][c2]) c2++;
        if (c1 == c2) {
            vertex[0][x][c1] = vertex[1][y][c2] = i;
            color[i] = c1;
            continue;
        }
        dfs(i, 1, c1, c2);
    }
    printf("%d\n", ans);
    for (int i = 1; i <= m; i++) printf("%d ", color[i]);

    return 0;
}