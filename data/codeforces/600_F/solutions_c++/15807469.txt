#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>
#include <cmath>
#include <stack>
#include <map>
#include <set>
#include <deque>
#include <cstring>
#include <functional>
#include <climits>
#include <list>
#include <ctime>
#include <complex>
 
#define F1(x,y,z) for(int x=y;x<z;x++)
#define F2(x,y,z) for(int x=y;x<=z;x++)
#define F3(x,y,z) for(int x=y;x>z;x--)
#define F4(x,y,z) for(int x=y;x>=z;x--)
#define pb push_back
#define LL long long
#define co complex<double>
 
#define MAX 100005
#define AMAX 1500
#define MOD 1000000007

#define f(c,d) ((1<<(c))*(d))

using namespace std;

int n,m,k,ta,tb,i,ans[MAX],tc,ca[2][1005];
vector<int> va[2][1005],vb[2],ve;

int main(){
	scanf("%d%d%d",&n,&m,&k);
	F1(a,0,k){
		scanf("%d%d",&ta,&tb);
		ta--;
		tb--;
		vb[0].pb(ta);
		vb[1].pb(tb);
		ca[0][ta]++;
		ca[1][tb]++;
		ans[a]=-1;
	}
	F1(a,0,n)i=max(i,ca[0][a]);
	F1(a,0,m)i=max(i,ca[1][a]);
	F1(a,0,n)F1(b,0,i)va[0][a].pb(-1);
	F1(a,0,m)F1(b,0,i)va[1][a].pb(-1);
	F1(a,0,k){
		tc=-1;
		ta=-1;
		tb=-1;
		F1(c,0,i){
			if(va[0][vb[0][a]][c]==-1&&va[1][vb[1][a]][c]==-1)tc=c;
			else if(va[1][vb[1][a]][c]==-1)ta=c;
			else if(va[0][vb[0][a]][c]==-1)tb=c;
		}
		if(tc!=-1)tb=tc;
		ve.clear();
		ve.pb(a);
		while(1){
			tc=va[ve.size()%2][vb[ve.size()%2][ve.back()]][(ve.size()&1)?tb:ta];
			if(tc==-1)break;
			ve.pb(tc);
		}
		F1(c,0,ve.size())if(ans[ve[c]]!=-1){	
			va[c%2][vb[c%2][ve[c]]][ans[ve[c]]]=-1;
			va[1-c%2][vb[1-c%2][ve[c]]][ans[ve[c]]]=-1;
		}
		F1(c,0,ve.size()){
			ans[ve[c]]=(c&1)?ta:tb;
			va[c%2][vb[c%2][ve[c]]][(c&1)?ta:tb]=ve[c];
			va[1-c%2][vb[1-c%2][ve[c]]][(c&1)?ta:tb]=ve[c];
		}
	}
	printf("%d\n",i);
	F1(a,0,k)printf("%d%c",ans[a]+1,a==k-1?'\n':' ');
	//system("pause");
    return 0;
}