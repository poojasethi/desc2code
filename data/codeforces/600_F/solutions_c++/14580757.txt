#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define debug(...) fprintf(stderr,__VA_ARGS__)
#define debug(...)
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100005

template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}

inline void add(int &a,int b){a+=b;if(a>=mod)a-=mod;}

vi g[1005];
int d[1005],f[1005],cnt[1005],U[N],V[N],co[N];
pii c[2005][1005];
void dfs(int u,int x,int v,int y,int k){
    int i=c[v][y].x,from=c[v][y].y;
    if(c[from][x].x==0){
        c[from][x]=mp(i,v),c[v][x]=mp(i,from);co[i]=x;
        c[from][y]=mp(0,0),c[v][y]=mp(0,0);
        c[u][y]=mp(k,v),c[v][y]=mp(k,u),co[k]=y;
        return;
    }
    dfs(v,y,from,x,i);
    //c[from][x]=mp(i,v),c[v][x]=mp(i,from);co[i]=x;
    //c[from][y]=mp(0,0),c[v][y]=mp(0,0);
    c[u][y]=mp(k,v),c[v][y]=mp(k,u),co[k]=y;
}
int main(){
    //ios_base::sync_with_stdio(0);
    //cout<<fixed<<setprecision(18);
    int T,i,j,k,m,n;
    int a,b;
    scanf("%d%d%d",&a,&b,&m);
    for(i=1;i<=m;i++){
        scanf("%d%d",&j,&k);j--,k--;
        d[j]++,f[k]++;
        //g[j].pb(k+a);g[k+a].pb(j);
        U[i]=j,V[i]=k+a;
    }

    int ans=0;
    for(i=0;i<a;i++)Max(ans,d[i]);
    for(i=0;i<b;i++)Max(ans,f[i]);
    printf("%d\n",ans);
    for(i=1;i<=m;i++){
        int u=U[i],v=V[i],ok=0;
        for(j=1;j<=ans;j++){
            cnt[j]=0;
            if(c[u][j].x==0&&c[v][j].x==0){
                co[i]=j;ok=1;
                c[u][j]=mp(i,v),c[v][j]=mp(i,u);
                break;
            }
        }
        if(ok)continue;
        for(j=1;j<=ans;j++){
            if(c[u][j].x)cnt[j]|=1;
            if(c[v][j].x)cnt[j]|=2;
        }
        for(j=1;j<=ans;j++)if(cnt[j]!=3&&cnt[j])break;
        int x=j,y=-1;
        for(j++;j<=ans;j++)if(cnt[j]==3-cnt[x]){y=j;break;}
            assert(y>0);
        if(cnt[x]==1)dfs(u,x,v,y,i);
        else dfs(u,y,v,x,i);
    }
    for(i=1;i<=m;i++)printf("%d ",co[i]);puts("");
    return 0;
}