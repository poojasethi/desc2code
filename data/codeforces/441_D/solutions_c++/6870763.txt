#include <algorithm>
#include <stdio.h>
#include <memory.h>

using namespace std;

int p[10000], vst[10000];
int rid;

int main() {
//	freopen("d.in", "r", stdin);
//	freopen("out.out", "w", stdout);
	
	int i, j, k, n, m;
	
	scanf("%d ", &n);
	for (i=1; i<=n; i++) scanf("%d ", &p[i]); 
	scanf("%d ", &m);
	m=n-m;
	rid++;
	for (i=1; i<=n; i++) {
		if (vst[i]==rid) continue;
		vst[i]=rid;
		for (j=p[i]; vst[j]!=rid; j=p[j]) vst[j]=rid;
		m--;
	}
	
	printf("%d\n", abs(m));
	if (m<0) {
		while (m) {
			vst[1]=++rid;
			for (i=p[1]; vst[i]!=rid; i=p[i]) vst[i]=rid;
			for (i=1; i<=n; i++) if (vst[i]!=rid) break;
			printf("%d %d ", 1, i);
			swap(p[1], p[i]);
			m++;
		}
	} else if (m>0) {
		while (m) {
			rid++;
			for (i=1; i<=n; i++) {
				vst[i]=rid; k=n+1;
				for (j=p[i]; vst[j]!=rid; j=p[j]) {
					vst[j]=rid; k=min(k, j);
				}
				if (k<=n) {
					printf("%d %d ", i, k);
					swap(p[i], p[k]);
					break;
				}
			}
			m--;
		}
	}
	
	return 0;
}

