#include <cstdio>
#include <cstring>
#include <algorithm>
#define mem(name,value) memset(name,value,sizeof(name))
#define FOR(i,n) for(int i=1;i<=n;i++)
using namespace std;
const int maxn = 3000+10;
int a[maxn],pos[maxn];
bool vis[maxn];
void dfs(int s){
	if(vis[s]) return ;
	vis[s] = true;
	dfs(a[s]);
}
int main(){
	//freopen("in.txt","r",stdin);
	int n,m,k=0;
	scanf("%d",&n);
	FOR(i,n) scanf("%d",&a[i]);
	scanf("%d",&m);
	m = n - m;
	for(int i=1;i<=n;i++) if(!vis[i]){
		k++;
		vis[i] = true;
		dfs(a[i]);
	}
	printf("%d\n",abs(k-m));
	if(k>m){
		mem(vis,false);
		dfs(1);
		for(int i=1;i<=n && k>m;i++) if(!vis[i]){
			printf("1 %d%c",i,k==m+1 ? '\n' : ' ');
			k--;
			dfs(a[i]);
		}
	}
	if(k<m){
		for(int i=1;i<=n && k<m;i++){
			mem(pos,-1);
			int cnt = 0;
			for(int j=a[i];j!=i;j=a[j])
				pos[j] = cnt++;
			pos[i] = cnt;
			cnt = 0;
			for(int j=i+1;j<=n && k<m;j++) if(pos[j]>=cnt){
				printf("%d %d%c",i,j,k==m-1 ? '\n' : ' ');
				k++;
				swap(a[i],a[j]);
				cnt = pos[j]+1;
			}
		}
	}
	return 0;
}