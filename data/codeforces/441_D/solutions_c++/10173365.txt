#include<iostream>
#include<cstdio>
#include<cstring>
#define maxn 10000
using namespace std;
int visit[maxn],p[maxn],kk;
int dfs(int k,int ini)
{
	if(k!=ini && k-ini<=kk-ini)kk=k;
	if(visit[k]==1)return k-1;
	visit[k]=1;
	return dfs(p[k],ini);
}
int main()
{
	int n,ans=0,k;
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
		scanf("%d",&p[i]);
	}
	scanf("%d",&k);
	int cir=0;
	for(int i=1;i<=n;i++)
	{
		if(!visit[i])dfs(i,i),cir++;
	}
	if(n-cir==k)
	{
		puts("0");
	}
	else if(n-cir<k)//add repeted
	{
		printf("%d\n",k-n+cir);
		for(int i=1;i<=k-n+cir;i++)
		{
			memset(visit,0,sizeof(visit));
			dfs(1,1);
			int j;
			for(j=1;j<=n;j++)
			{
				if(!visit[j])break;
			}
			swap(p[1],p[j]);
			printf("1 %d ",j);
		}
	}
	else
	{
		printf("%d\n",n-k-cir);
		for(int i=1;i<=n-k-cir;i++)
		{
			memset(visit,0,sizeof(visit));
			int ans=0,j;
			for(j=1;j<=n;j++)
			{
				kk=0x3f3f3f3f;
				if(p[j]!=j)
				{
					int kk=0x3f3f3f3f;
					dfs(j,j);
					break;
				}
			}
			swap(p[j],p[kk]);
			printf("%d %d ",j,kk);
		}
	}
	return 0;
}