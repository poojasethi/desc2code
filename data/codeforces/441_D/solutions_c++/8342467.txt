#include<bits/stdc++.h>
using namespace std;
int n;
int p[3333];
int sta,tar;
bool vis[3333];
int fa[3333];
void dfs(int v)
{
	vis[v]=1;
	if(!vis[p[v]])
	{
		fa[p[v]]=fa[v];
		dfs(p[v]);
	}
}
int father(int v)
{
	if(fa[v]==v)
		return v;
	return fa[v]=father(fa[v]);
}
int main()
{
	cin>>n;
	for(int i=1;i<=n;++i)
		cin>>p[i],fa[i]=i;
	for(int i=1;i<=n;++i)
		if(!vis[i])
			dfs(i),sta++;
	cin>>tar;
	tar=n-tar;
	if(sta==tar)
	{
		cout<<0<<endl;
		return 0;
	}
	if(sta<tar)
	{
		cout<<tar-sta<<endl;
		for(int i=1;i<=tar-sta;++i)
		{
			for(int j=1;j<=n;++j)
			{
				if(p[j]!=j)
				{
					int k;
					memset(vis,0,sizeof(vis));
					dfs(j);
					for(k=j+1;k<=n;++k)
						if(vis[k])
							break;
					cout<<j<<' '<<k<<' ';
					swap(p[j],p[k]);
					break;
				}
			}
		}
	}else
	{
		cout<<sta-tar<<endl;
		for(int i=1;i<=sta-tar;++i)
		{
			for(int j=1;j<=n;++j)
				if(father(j)!=father(1))
				{
					fa[fa[j]]=fa[1];
					cout<<1<<' '<<j<<' ';
					break;
				}
		}
	}
}
