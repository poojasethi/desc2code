n = int(raw_input())
a = [0] + map(int, raw_input().split())
g = [0] * (n+1)
l = []
st = [0] * (n+1)
nd = [0] * (n+1)
k = 0
for x in xrange(1, n+1):
    if g[x]:
        continue
    y = a[x]
    st[x] = len(l)
    while not g[y]:
        g[y] = x
        l.append(y)
        y = a[y]
    nd[x] = len(l)
    k += nd[x] - st[x] - 1

N = 4096
b = [10000] * N * 2
pb = [0] * N * 2
def update(p, x):
    p += N
    b[p] = x
    pb[p] = p - N
    while p > 1:
        p, q = p / 2, p / 2 * 2
        if b[q] >= b[q+1]:
            q += 1
        b[p], pb[p] = b[q], pb[q]
def query(left, right, p = 1, L = 0, R = N):
    if right <= L or R <= left:
        return (10000, -1)
    if left <= L and R <= right:
        return (b[p], pb[p])
    mid = (L + R) / 2
    return min(query(left, right, p+p, L, mid), query(left, right, p+p+1, mid, R))

for i, x in enumerate(l):
    update(i, x)

m = int(raw_input())
if m == k:
    print 0
else:
    ans = []
    if m > k:
        for i in xrange(1, n+1):
            if m <= k: break
            if g[i] != 1:
                for x in l[st[i]:nd[i]]:
                    g[x] = 1
                ans.extend([1, i])
                k += 1
    else:
        for i in xrange(1, n+1):
            while m < k and nd[i] - st[i] > 1:
                j, pj = query(st[i], nd[i] - 1)
                ans.extend([i, j])
                st[i], st[j], nd[j] = pj + 1, st[i], pj + 1
                k -= 1
    print len(ans) / 2
    for x in ans:
        print x,
    print
