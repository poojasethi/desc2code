#include <iostream>
#include <algorithm>
#include <vector>
#include <set>

using namespace std;

#define MAXN 1000010
#define pii pair<int, int>

set<int> s;
vector<pii> v;
int fen[MAXN];
bool marked[MAXN];

void add(int v, int val)
{
	for (; v > 0; v -= v & (-v))
		fen[v] += val;
}
int get(int v)
{
	int ans = 0;
	for (; v <= MAXN; v += v & (-v))
		ans += fen[v];
	return ans;
}
int main()
{
	ios_base::sync_with_stdio(false);
	int n, k;
	cin >> n >> k;
	for (int i = 1; i <= n; i++)
	{
		int a;
		cin >> a;
		v.push_back(pii(a, i));
		add(i, 1);
	}
	sort(v.begin(), v.end());
	for (int i = 1; i <= k; i++)
	{
		int b;
		cin >> b;
		marked[b] = true;
	}
	long long ans = 0;
	for (int i = 0; i < v.size(); i++)
		if (marked[v[i].first])
			s.insert(v[i].second);
		else
		{
			set<int>::iterator it = s.lower_bound(v[i].second);
			int lo, hi;
			if (it == s.end())
				hi = n + 1;
			else
				hi = *it;
			if (it == s.begin())
				lo = 1;
			else
			{
				it--;
				lo = *it + 1;
			}
			ans += get(lo) - get(hi);
			add(v[i].second, -1);
		}
	cout << ans << endl;
}
