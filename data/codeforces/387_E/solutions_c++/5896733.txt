#include<stdio.h>
#include<algorithm>
#include<set>
using namespace std;
int posi[1000005],want[1000005],in[1000005],FW[1000005],n;
set<int> S;
set<int>::iterator it1,it2;
void update(int idx,int v)
{
     for(;idx<=n;idx+=idx&-idx) FW[idx]+=v;
}
int query(int idx)
{
    int sum = 0;
    for(;idx>0;idx-=idx&-idx) 
       sum += FW[idx];
 return sum;
}
int main(){
    
    int m,i,j,k,a,b;
    long long ans=0;
    
    scanf("%d%d",&n,&m);
    
    for(i=1;i<=n;i++)
       {
        scanf("%d",&in[i]);
        posi[in[i]] = i;
       }
    for(i=1;i<=m;i++)
       {
        scanf("%d",&a);
        want[a] = 1;
       }
    
    S.insert(0);
    S.insert(n+1);
    for(i=1;i<=n;i++)
       {
        if(want[i] == 0)
           {
            it1 = S.upper_bound(posi[i]);
            it2 = S.lower_bound(posi[i]);
            a = *it1 -1;
            b = *(--it2);
            ans += (long long)(a-b-(query(a)-query(b-1))); 
            update(posi[i],1);
           }
        else
           S.insert(posi[i]);
       }
    printf("%I64d",ans);
    
    
 scanf(" ");
 return 0;
}
