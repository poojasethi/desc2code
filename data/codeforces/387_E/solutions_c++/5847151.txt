#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define int64 long long
#define N 1000010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,r;
int a[N],b[N],L[N],R[N],g[N],tr[N],h[N],id[N];
int64 an;
inline void inc(int x) {
	for (;x<=n;x+=x&-x) tr[x]++;
}
inline int cal(int x) {
	int an=0;
	for (;x;x-=x&-x) an+=tr[x];
	return an;
}
int main() {
	scanf("%d%d",&n,&m);
	For(i,1,n) scanf("%d",&a[i]),id[a[i]]=i;
	For(i,1,m) scanf("%d",&k),b[k]=1;
	g[r=1]=n+1; h[1]=0;
	for (i=n;i;i--) if (!b[a[i]]) R[i]=g[lower_bound(h+1,h+r+1,a[i])-h-1]-1;
	else {
		for (;a[g[r]]>a[i];r--);
		g[++r]=i; h[r]=a[i];
	}
	g[r=1]=0; h[1]=0;
	For(i,1,n) if (!b[a[i]]) L[i]=g[lower_bound(h+1,h+r+1,a[i])-h-1]+1;
	else {
		for (;a[g[r]]>a[i];r--);
		g[++r]=i; h[r]=a[i];
	}
	For(i,1,n) if (!b[i]) {
		k=id[i];
		an+=(R[k]-L[k]+1)-(cal(R[k])-cal(L[k]-1));
		inc(k);
	}
	printf("%I64d\n",an);
	return 0;
}
