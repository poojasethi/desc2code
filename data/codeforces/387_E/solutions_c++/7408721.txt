#include <bits/stdc++.h>
using namespace std;
#define LL long long
int N,K;
int A[1000010];
int F[1000010];
int tree[1000010];
int Index[1000010];
void Add(int idx,int val)
{
	while(idx<=N)
	{
		tree[idx]+=val;
		idx+=(idx & -idx);
	}
}
int Sum(int idx)
{
	int s = 0;
	while(idx)
	{
		s+=tree[idx];
		idx-=(idx & -idx);
	}
	return s;
}
int main()
{
	ios_base::sync_with_stdio(false);
	int v;
	cin>>N>>K;
	for(int i = 1;i<=N;i++){
		cin>>A[i];
		Index[A[i]] = i;
	}
	for(int i = 1;i<=K;i++){
		cin>>v;
		F[v] = 1;
	}
	LL Score = 0;
	set<int> Integers;
	Integers.insert(0);
	Integers.insert(N+1);
	for(int i = 1;i<=N;i++)
	{
		if(F[i])
		{
			Integers.insert(Index[i]);
		}
		else{
			set<int> :: iterator it;
			it = Integers.upper_bound(Index[i]);
			int ridx = *it;
			it--;
			int lidx = *it;
			lidx+=1;
			ridx-=1;
			Score+=ridx - lidx + 1 - (Sum(ridx) - Sum(lidx-1));
			Add(Index[i],1);
		}
	}
	cout<<Score<<endl;
	return 0;
}