//In the name of God
#include <iostream>
#include <set>
using namespace std;
const int N = 1e6 + 6;

int n, k, adr[N], f[N];
bool mark[N];
set<int> s;
long long ans;

int query(int m) {
	int res = 0;
	while (m)
		res += f[m], m -= m & -m;
	return res;
}
void update(int m) {
	while (m < N)
		f[m]++, m += m & -m;
}
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> k;
	for (int i = 1, x; i <= n; i++)
		cin >> x, adr[x] = i;
	for (int i = 0, x; i < k; i++)
		cin >> x, mark[x] = true;
	s.insert(0);
	s.insert(n + 1);
	for (int i = 1; i <= n; i++)
		if (mark[i])
			s.insert(adr[i]);
		else {
			set<int>::iterator it = s.lower_bound(adr[i]);
			int r = *it - 1, l = *--it;
			ans += r - l - (query(r) - query(l));
			update(adr[i]);
		}
	cout << ans << '\n';
	return 0;
}
