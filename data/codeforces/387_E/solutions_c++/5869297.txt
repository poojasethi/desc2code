#include <iostream>
#include <set>
#include <algorithm>
using namespace std;

#define inc(i,a,b)              for(int i=a;i<=b;++i)
#define dec(i,a,b)              for(int i=a;i>=b;--i)

const int maxN = 1e6+6;

int n, k;
int arr[maxN], pos[maxN];
bool keep[maxN];

int bit[maxN];
int read(int idx) {
    int sum = 0;
    while(idx>0) {
        sum += bit[idx];
        idx -= idx&(-idx);
    }
    return sum;
}
void update(int idx, int val) {
    while(idx<=n) {
        bit[idx] += val;
        idx += idx&(-idx);
    }
}

int main() {
    cin >> n >> k;
    inc(i,1,n) {
        cin >> arr[i];
        pos[arr[i]] = i;
    }
    inc(i,1,k) {
        int r; cin >> r;
        keep[r] = 1;
    }
    
    set<int> occ;
    occ.insert(0), occ.insert(n+1);
    
    long long ans = 0;
    inc(i,1,n) {
        if(keep[i]) {
            occ.insert(pos[i]);
        }
        else {
            set<int>::iterator it = occ.lower_bound(pos[i]);
            int e = *it;
            it--;
            int s = *it;
            
            ans += (e-1)-s-(read(e-1)-read(s));
            update(pos[i],1);
        }
    }
    
    cout << ans << "\n";
}