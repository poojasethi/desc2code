#include <bits/stdc++.h>
//Practice makes perfect

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 1e6 + 100;

int n, k, b[MAXN], fen[MAXN];
pii p[MAXN];

inline void add(int i, int x){
	i += 10;
	for (; i < MAXN; i += i & -i) fen[i] += x;
}

inline int get(int i){
	i += 10;
	int sum = 0;
	for (; i; i -= i & -i) sum += fen[i];
	return sum;
}

int main(){
	scanf("%d%d", &n, &k);
	for (int i = 0; i < n; i++)
		scanf("%d", &p[i].first), p[i].second = i;
		
	sort(p, p + n);
	
	set<int> need;
	for (int i = 0; i < k; i++){
		scanf("%d", &b[i]);
		need.insert( b[i] );
	}
	
	
	ll ans = 0;
	set<int> s; s.insert(-1); s.insert(n);
		
	for (int i = 0; i < n; i++){
		int id = p[i].second, val = p[i].first;
		
		if (need.count( val ) )
			s.insert(id);
		else{
			int l, r;
			
			set<int> :: iterator iter = s.upper_bound(id);
			r = *iter;
			iter--; l = (*iter) + 1;
			
			ans += r - l - (get(r) - get(l));
			add(id + 1, 1);
		}
	}
	
	cout << ans << endl;
	
}
