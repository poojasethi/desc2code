#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <map>
#include <set>
#include <cassert>

using namespace std;

typedef long long ll;

const int N = 1000010;

int n, k;
int a[N], pos[N];
bool flag[N];
set<int> s;
int c[N];

void erase(int x){
    for(; x <= n; x += x & -x) c[x]--;
}
int sum(int x, int ret = 0){
    for(; x; x ^= x & -x) ret += c[x];
    return ret;
}
int main(){
    scanf("%d %d", &n, &k);
    for(int i = 1; i <= n; ++i){
        scanf("%d", a + i);
        pos[a[i]] = i;
        c[i] = i & -i;
    }
    for(int i = 0, b; i < k; ++i){
        scanf("%d", &b);
        flag[b] = 1;
    }
    s.insert(0);
    s.insert(n + 1);
    ll ans = 0;
    for(int i = 1; i <= n; ++i){
        if(flag[i]){
            s.insert(pos[i]);
        }
        else{
            set<int>::iterator it = s.upper_bound(pos[i]);
            int r = *it--, l = *it;
            ans += sum(r - 1) - sum(l);
            erase(pos[i]);
        }
    }
    cout << ans << endl;
    return 0;
}