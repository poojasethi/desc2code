#include <stdio.h>
#include <string.h>
#include <iostream>
#include <set>
typedef long long ll;
const int N = 1000000 + 2;

int n, K, pos[N];
ll v[N];
bool vis[N];

std::set<int> s;
std::set<int>::iterator it;

void add(int x, ll val) {
	while (x <= n) {
		v[x] += val;
		x += (x & (-x));
	}
}

ll sum(int x) {
	ll re = 0;
	while (x > 0) {
		re += v[x];
		x -= (x & (-x));
	}
	return re;
}

int main() {
	int x;
	scanf("%d%d", &n, &K);

	for (int i = 1; i <= n; ++i) {
		scanf("%d", &x);
		pos[x] = i;
		add(i, 1);
	}

	for (int i = 1; i <= K; ++i) {
		scanf("%d", &x);
		vis[x] = 1;
	}
	
	ll ans = 0;

	s.insert(0); 
	s.insert(n + 1);
	for (int i = 1; i <= n; ++i) {
		if (vis[i]) {
			s.insert(pos[i]);
			continue;
		}
		it = s.upper_bound(pos[i]);
		int r = *it - 1;
		int l = *(--it);
		ans += sum(r) - sum(l);
		add(pos[i], -1);
	}
	std::cout << ans << std::endl;
	return 0;
}

