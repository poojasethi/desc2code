#include <iostream>
#include <fstream>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;
ifstream fin("input.txt");
ofstream fout("output.txt");
vector<string> grid;
int psum[405][405];
int n,m,k;
int solve(int c1, int c2){
	vector<int> old[26];
	int cur_id[26]={};
	int sum_a = 0, ans = 0;
	for(int i = 0; i < n; ++i){
		int cur_a = psum[i][c2+1]-psum[i][c1];
		sum_a += cur_a;
		if(grid[i][c1]!=grid[i][c2])
			continue;
		int letter = grid[i][c1]-'a';
		while(cur_id[letter]<old[letter].size()&&sum_a-old[letter][cur_id[letter]]>k){
			cur_id[letter]++;
		}
		ans+=old[letter].size()-cur_id[letter];
		old[letter].push_back(sum_a-cur_a);
	}
	return ans;
}
int main(){
	fin >> n >> m >> k;
	grid.resize(n);
	for(int i = 0; i < n; ++i){
		fin >> grid[i];
		for(int j = 1; j <= m; ++j){
			psum[i][j]=psum[i][j-1]+(grid[i][j-1]=='a');
		}
	}
	long long ans = 0;
	for(int i = 0; i < m; ++i)
		for(int j = i+1; j < m; ++j)
			ans+=solve(i,j);
	fout << ans << '\n';
}

