#include <bits/stdc++.h>
using namespace std;

#define fru(j,n) for(int j=0; j<(n); ++j)
#define tr(it,v) for(typeof((v).begin()) it=(v).begin(); it!=(v).end(); ++it)
#define x first
#define y second
#define pb push_back
#define ALL(G) (G).begin(),(G).end()

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;

const int inft = 1000000009;
const int MAXN = 102;//10^6

vector<pii> P;
vi X;

int ind(int a){
	return lower_bound(ALL(X),a)-X.begin();
}
int DP[MAXN][3*MAXN];
void solve() {
	int n,m;
	scanf("%d",&n);
	P.resize(n);
	fru(i,n){
		scanf("%d%d",&P[i].x,&P[i].y);
		X.pb(P[i].x);
		X.pb(P[i].x-P[i].y);
		X.pb(P[i].x+P[i].y);
	}
	sort(ALL(P));sort(ALL(X));
	X.resize(m=unique(ALL(X))-X.begin());
	
	fru(i,m)DP[n-1][i]=max(0,P[n-1].x+P[n-1].y-max(P[n-1].x,X[i]));
	for(int k=n-2;k>=0;k--)
		for(int l=m-1;l>=0;l--){
			if(X[l]>=P[k].x){
				DP[k][l]=DP[k+1][max(l,ind(P[k].x+P[k].y))]+max(0,P[k].x+P[k].y-X[l]);
			}
			else{
				DP[k][l]=DP[k][ind(P[k].x)];
				for(int j=k;j<n;j++){
					int pocz=max(X[l],P[j].x-P[j].y);
					int kon=P[j].x;
					for(int j2=k;j2<j;j2++)kon=max(kon,P[j2].x+P[j2].y);
					DP[k][l]=max(DP[k][l],DP[j+1][ind(kon)]+kon-pocz);
				}
			}
		}
//	puts("X");
//	fru(i,m)printf("%d ",X[i]);puts("");
//	fru(i,n){
//		fru(j,m)printf("%d ",DP[i][j]);puts("");
//	}
	printf("%d\n",DP[0][0]);
}

int main(){
	//freopen("input.in", "r", stdin);
	//freopen("output.out", "w", stdout);
	int t=1;//scanf("%d",&t);
	fru(i,t) solve();
	return 0;
}
