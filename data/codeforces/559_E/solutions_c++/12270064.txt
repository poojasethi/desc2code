#include <stdio.h>
#include <algorithm>
#include <map>
#include <vector>
#include <utility>

using namespace std;

const int maxn = 110;
const int MIN = -1000000000;

vector<pair<int, int> > light;
map<int, int> f[maxn+1];
int n, result;

void init() {
	int i, j;
	int p, l;
	scanf("%d", &n);
	light.push_back(pair<int, int>(-100, 0));
	for (i = 1; i <= n; ++i) {
		scanf("%d%d",&p, &l);
		light.push_back(pair<int, int>(p, l));
	}
	sort(light.begin(), light.end());
}

int zd(int a, int b) {
	if (a > b) return a;
	else return b;
}

int zx(int a, int b) {
	if (a < b) return a;
	else return b;
}

void work() {
	int i, j, right, r;
	int t;
	map<int, int>::iterator p;
	result = 0;
	f[0][MIN] = 0;
	for (i=0; i<n; ++i) {
		for (p = f[i].begin(); p != f[i].end(); ++p) {
			right = 0;
			for (j = i + 1; j <= n; ++j) {
				for (t = 0; t <= 1; ++t) {
					r = light[j].first + light[j].second * t;
					if (r > right) right = r;
					f[j][right] = zd(f[j][right], p->second + zx(r - p->first, light[j].second) + right - r);
					if (f[j][right] > result) result = f[j][right];
				}
			}
		}
	}
}

void output() {
	printf("%d\n", result);
}

int main() {
//	freopen("E.in", "r", stdin);
	init();
	work();
	output();
	return 0;
}