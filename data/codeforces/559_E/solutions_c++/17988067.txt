#include <bits/stdc++.h>

#define ll long long

#define SZ(x) (int)(x).size()
#define pb push_back

template<class T>inline void chkmax(T &x, const T &y) {if(x < y) x = y;}
template<class T>inline void chkmin(T &x, const T &y) {if(x > y) x = y;}

template<class T>
inline void read(T &x) {
    char c;int f = 1;x = 0;
    while(((c=getchar()) < '0' || c > '9') && c != '-');
    if(c == '-') f = -1;else x = c-'0';
    while((c=getchar()) >= '0' && c <= '9') x = x*10+c-'0';
    x *= f;
}
int outn;
char out[(int)2e7];
template<class T>
inline void write(T x) {
    if(x < 0) out[outn++] = '-', x = -x;
    if(x) {
        static int tmpn;
        static char tmp[20];
        tmpn = 0;
        while(x) tmp[tmpn++] = x%10+'0', x /= 10;
        while(tmpn) out[outn++] = tmp[--tmpn];
    }
    else out[outn++] = '0';
}

const int N = 100;
const int INF = 1e9;

int n;
struct data {
    int p, l;
    data() {p = l = 0;}
    data(int _p, int _l):p(_p), l(_l) {}
    inline void input() {
        read(p), read(l);
    }
    inline friend bool operator < (const data &a, const data &b) {
        return a.p < b.p;
    }
}w[N+9];
int f[N+9][N+9][2];
int ans;

int main() {
    read(n);
    for(int i = 1; i <= n; ++i)
        w[i].input();
    std::sort(w+1, w+n+1);
    w[0].p = -INF;
    for(int i = 0; i <= n; ++i)
        for(int j = 0; j <= i; ++j)
            for(int p = 0; p < 2; ++p) {
                int v = f[i][j][p];
                chkmax(ans, v);
                int pre = w[j].p+p*w[j].l;
                for(int k = i+1, far = -INF, a, b; k <= n; ++k)
                    for(int d = 0; d < 2; ++d) {
                        int nex = w[k].p+d*w[k].l;
                        if(nex > far) far = nex, a = k, b = d;
                        chkmax(f[k][a][b], v+std::min(w[k].l, nex-pre)+far-nex);
                    }
            }
    std::cout << ans << std::endl;
    return 0;
}
