#include<stdio.h>
#include<algorithm>
#include<vector>
#include<map>
using namespace std;
const int maxn=100+10;
const int INF=1000000000;
struct light
{
	int pl,dist;
	light(int pl,int dist)
	{
		this->pl=pl;
		this->dist=dist;
	}
	bool operator<(const light &cmp)const
	{
		return pl<cmp.pl;
	}
};
vector<light>a;
map<int,int>dp[maxn];
int main()
{
	int n;
	scanf("%d",&n);
	for (int i=1;i<=n;i++)
	{
		int pl,dist;
		scanf("%d%d",&pl,&dist);
		a.push_back(light(pl,dist));
	}
	a.push_back(light(-INF,0));
	sort(a.begin(),a.end());
	dp[0][-INF]=0;
	map<int,int>::iterator p;
	for (int i=0;i<a.size();i++)
	for (p=dp[i].begin();p!=dp[i].end();p++)
	{
		int right=0;
		for (int j=i+1;j<a.size();j++)
		for (int temp=0;temp<=1;temp++)
		{
			int thi=a[j].pl+a[j].dist*temp;
			right=max(right,thi);
			dp[j][right]=max(dp[j][right],p->second+min(a[j].dist,thi-p->first)+right-thi);
		}
	}
	int ans=0;
	for (int i=0;i<a.size();i++)
	for (p=dp[i].begin();p!=dp[i].end();p++)
	ans=max(ans,p->second);
	printf("%d\n",ans);
	return 0;
}