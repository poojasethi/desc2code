#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>

const int maxn = 105;
const int inf = 0x3f3f3f3f;

struct SEG
{
	int a, l;

	friend bool operator < (const SEG &x,const SEG &y)
	{
		return x.a < y.a;
	}

} seg[maxn] ;

int n;
int dp[maxn][maxn][2];
int ans = 0;

int main()
{
	std::cin >> n;

	for(int i = 1; i <= n; i++)
	{
		std::cin >> seg[i].a >> seg[i].l;
	}

	std::sort(seg + 1, seg + n + 1);

	seg[0].a = -inf;
	
	for(int i = 0; i <= n; i++)
		for(int j = 0; j <= i; j++)
			for(int p = 0; p < 2; p++)
			{
				ans = std::max(ans, dp[i][j][p]);
				
				int pre = seg[j].a + seg[j].l * p;
				int max = -inf, x = 0, t = 0;

				for(int k = i + 1; k <= n; k++)
					for(int d = 0; d < 2; d++)
					{
						int now = seg[k].a + seg[k].l * d;
						
						if(now > max) max = now, x = k, t = d;
						
						dp[k][x][t] = std::max(dp[k][x][t], dp[i][j][p] + std::min(seg[k].l, now - pre) + max - now);

					}
			}

	std::cout << ans;
	
	return 0;
}

  