#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <cmath>
#include <fstream>
#include <assert.h>
#include <complex>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100005

pii p[110];
int n,m;
inline void Min(int &a,int b){if(a>b)a=b;}
inline void Max(int &a,int b){if(a<b)a=b;}
map<pii,int>dp;
int solve(int k,int s){
    if(k==n)return 0;
    if(dp.count(mp(k,s)))return dp[mp(k,s)];
    int ret=0;
    {
        int x=k;
        int down=p[x].x;
        int up=p[x].x+p[x].y;
        while(x<n&&p[x].x<=up){
            up=max(up,p[x].x+p[x].y);
            x++;
        }
        ret=up-down+solve(x,up);
    }
    {
        for(int i=k;i<n;i++){
            int down=max(s,p[i].x-p[i].y);
            int y=k,up=p[i].x;
            while(y<n){
                if(y!=i){
                    if(p[y].x>up)break;
                    up=max(up,p[y].x+p[y].y);
                }
                y++;
            }
            ret=max(ret,up-down+solve(y,up));
        }
    }
    return dp[mp(k,s)]=ret;
}
int main()
{
    //freopen("1.txt","w",stdout);
    int T,i,j,k,ca=0;
    scanf("%d",&n);
    for(i=0;i<n;i++){
        scanf("%d%d",&p[i].x,&p[i].y);
    }
    sort(p,p+n);
    printf("%d\n",solve(0,-inf));
    return 0;
}