#include <bits/stdc++.h>

const int MAXN = 105;
const int inf = 0x3f3f3f3f;

struct Data
{
	int x, l;
	friend bool operator < (const Data &a, const Data &b)
	{
		return a.x < b.x;
	}
} a[MAXN];

inline void tense(int &x, int y)
{
	x < y ? x = y : 0;
}

int n, ans;
int f[MAXN][MAXN][2];

void input()
{
	scanf("%d", &n);
	for(int i = 1; i <= n; ++i)
		scanf("%d%d", &a[i].x, &a[i].l);
	a[0].x = -inf;
	std::sort(a + 1, a + n + 1);
}

void solve()
{
	for(int i = 0; i <= n; ++i)
	{
		for(int j = 0; j <= i; ++j)
		{
			for(int k = 0; k <= 1; ++k)
			{
				int v = f[i][j][k];
				tense(ans, v);
				int pre = a[j].x + k * a[j].l;
				int mx = -inf, b, c;
				for(int p = i + 1; p <= n; ++p)
				{
					for(int dir = 0; dir <= 1; ++dir)
					{
						int nxt = a[p].x + dir * a[p].l;
						if(nxt > mx) mx = nxt, b = p, c = dir;
						tense(f[p][b][c], v + std::min(nxt - pre, a[p].l) + mx - nxt);
					}
				}
			}
		}
	}
}

void output()
{
	printf("%d\n", ans);
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("K.in", "r", stdin);
	freopen("K.out", "w", stdout);
#endif

	input();
	solve();
	output();

#ifndef ONLINE_JUDGE
	fclose(stdin);
	fclose(stdout);
#endif
	return 0;
}

                                                                                                                                                                                                                                                                                                                                                                                                                                              