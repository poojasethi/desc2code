#include<cstdio>
#include<bitset>
#include<algorithm>
using namespace std;
typedef long long ll;
#define rep(i,n) for (int i=0;i<n;++i)
bitset<1000000> f[6]; int T,S,c4[25],c7[25]; ll n;
void get(int m,int n,int w)
{
	if (m<0) return;
	rep(x,7) rep(y,7-x){
		int z=x*4+y*7;
		if (z<=n && (n-z)%10==0 && f[m][(n-z)/10])
			{get(m-1,(n-z)/10,w+1),c4[w]+=x,c7[w]+=y; return;}
	}
}
void prt()
{
	bool flag=0;
	for (int i=18;i>=0;--i){
		if (c4[i]) printf("4"),--c4[i],flag=1;
		else if (c7[i]) printf("7"),--c7[i],flag=1;
		else if (flag) printf("0");
		}
	if (!flag) printf("0");
}
bool check(ll n,int i,int j,int k)
{
	int x=i*S+n%S; n-=x; if (n<0 || !f[5][x]) return 0; n/=S;
	int y=j*S+n%S; n-=y; if (n<0 || !f[5][y]) return 0; n/=S;
	int z=k*S+n%S; n-=z; if (n<0 || !f[5][z]) return 0; n/=S;
	if (!f[5][n]) return 0; rep(i,20) c4[i]=c7[i]=0;
	get(5,x,0),get(5,y,5),get(5,z,10),get(5,n,15);
	rep(i,6){prt(); if (i<5) printf(" "); else puts("");} return 1;
}
bool work()
{
	scanf("%I64d",&n);
	rep(i,5) rep(j,5) rep(k,5)
		if (check(n,i,j,k)) return 1;
	return 0;
}
int main()
{
	f[0][0]=1,S=1;
	rep(i,5){
		rep(x,7) rep(y,7-x)
			f[i+1]|=f[i]<<(S*(4*x+7*y));
		S*=10;
	}
	scanf("%d",&T);
	while (T--) if (!work()) puts("-1");
	return 0;
}
