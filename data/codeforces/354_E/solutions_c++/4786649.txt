#include <iostream>
#include <vector>

using namespace std;

uint64_t n;
uint64_t sum[7][7];
uint64_t numbers[3][18];
uint64_t ln[3] = {0, 4, 7};

void precompute()
{
	for(uint64_t i=0; i<=6; i++)
		for(uint64_t j=0; j<=6; j++)
			sum[i][j] = 4*i + 7*j;
}

void create(long l)
{
	for(long k=0; k<6; k++)
	{
		uint64_t v = 0;
		
		for(long i = l; i>=0; i--)
		{
			for(long j=0; j<3; j++)
			{
				if(numbers[j][i] > 0)
				{
					v = v*10 + ln[j];
					numbers[j][i]--;
					break;
				}
			}
		}
		
		cout<<v<<" ";
	}
	
	cout<<endl;
}

bool lucky(uint64_t l, uint64_t v, uint64_t c)
{	
	if(v == c)
	{
		create(l-1);
		return true;
	}
	
	if(v < c || l >= 18)
		return false;
	
	v -= c;		
	
	for(uint64_t i = 0; i <= 6; i++)
	{
		for(uint64_t j = 0; j <= 6 && i + j <= 6; j++)
		{
			uint64_t h = 6 - i - j;
			if( (sum[i][j]%10) == (v%10) && (v/10) >= (sum[i][j]/10) )
			{				
				numbers[0][l]=h;
				numbers[1][l]=i;
				numbers[2][l]=j;
				
				if(lucky(l+1, v/10, sum[i][j]/10))
					return true;
			}
		}
	}
	
	return false;
}

int main()
{
	uint64_t t;
	
	cin>>t;
	
	precompute();
	
	while(t-- > 0)
	{
		cin>>n;
		
		if(!lucky(0, n, 0))
			cout<<"-1"<<endl;
	}
	
	return 0;
}
