#include <cstdio>

int t,ln;
long long vl;
int solvable[25][10];
int checked[25][10];
int digs[25];
long long sols[25][10][6];
int calc(int dig,int und) {
	if(checked[dig][und]) return solvable[dig][und];
	solvable[dig][und]=0;
	checked[dig][und]=1;
	if(dig==ln) {
		if(und==0) {
			solvable[dig][und]=1;
			for(int i=0;i<6;i++) sols[ln][0][i]=0;
		}
		return solvable[dig][und];
	}
	for(int i=0;i<7;i++) {
		for(int j=0;j+i<7;j++) {
			if((i*7+j*4+und)%10==digs[dig]) {
				int undx=(i*7+j*4+und)/10;
				if(calc(dig+1,undx)) {
					solvable[dig][und]=1;
					for(int k=0;k<6;k++) sols[dig][und][k]=sols[dig+1][undx][k]*10;
					for(int k=0;k<i;k++) sols[dig][und][k]+=7;
					for(int k=0;k<j;k++) sols[dig][und][i+k]+=4;
					return 1;
				}
			}
		}
	}
	return solvable[dig][und];
}
int main() {
	scanf("%d",&t);
	for(int i=0;i<t;i++) {
		scanf("%I64d",&vl);
		ln=0;
		while(vl) {
			digs[ln++]=(int)(vl%10);
			vl/=10;
		}
		for(int j=0;j<25;j++) {
			for(int k=0;k<10;k++) {
				checked[j][k]=0;
			}
		}
		if(calc(0,0)) {
			for(int j=0;j<5;j++) printf("%I64d ",sols[0][0][j]);
			printf("%I64d\n",sols[0][0][5]);
		} else {
			printf("-1\n");
		}
	}
	return 0;
}
