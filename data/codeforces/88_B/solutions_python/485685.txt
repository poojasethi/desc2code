def search_key(keys, n, m, c, start):
    start_i = start / m
    start_j = start % m
    for i in xrange(n):
        for j in xrange(m):
            if c == keys[i][j]:
                if i * m + j >= start_i * m + start_j:
                    return i, j
    return -1, -1

def can_press(keys, n, m, c, shift, x):
    i, j = search_key(keys, n, m, c, 0)
    while i >= 0:
        for i_, j_ in shift:
            if pow(i - i_, 2) + pow(j - j_, 2) <= pow(x, 2):
                return True
        i, j = search_key(keys, n, m, c, i * m + j + 1)
    return False

def main():
    n, m, x = map(int, raw_input().split())
    all = ""
    keys = []
    shift = []
    for i in xrange(n):
        line = raw_input()
        keys.append(line)
        index = line.find('S')
        while index >= 0:
            shift.append((i, index))
            index = line.find('S', index + 1)
        all += line
    q = int(raw_input())
    T = raw_input()
    upper = {}
    for c in T:
        if c.lower() not in all:
            print -1
            return
        if c.isupper():
            if len(shift) == 0:
                print -1
                return
            if c in upper:
                upper[c] += 1
            else:
                upper[c] = 1
    count = 0
    for c in upper:
        if not can_press(keys, n, m, c.lower(), shift, x):
            count += upper[c]
    print count
    
main()
