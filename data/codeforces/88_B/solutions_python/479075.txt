import sys
import math
input = sys.stdin

n,m,x = map(int, input.readline().strip().split(' '))
layout = []
for nn in xrange(n):
  layout.append(list(input.readline().strip()))

q = int(input.readline())
chars = input.readline().strip()

keys = []
d = [(1,0),(0,1),(-1,0),(0,-1)]
has_shift = False

native_keys = set([])

for i in xrange(n):
  for j in xrange(m):
    c = layout[i][j]
    if c != 'S':
      keys.append(c)
      native_keys.add(c)
    else:
      has_shift = True
      queue = [(i,j)]
      visited = set([(i,j)])

      while queue:
        ei, ej = queue.pop(0)
        
        for di, dj in d:
          if 0 <= ei+di < n and 0 <= ej+dj < m and math.sqrt((ei+di-i)*(ei+di-i) + (ej+dj-j)*(ej+dj-j)) <= x and not (ei+di, ej+dj) in visited:
            visited.add((ei+di, ej+dj))
            queue.append((ei+di, ej+dj))
            if layout[ei+di][ej+dj] != 'S':
              keys.append(layout[ei+di][ej+dj].upper())


key_set = set(keys)
#print key_set

ret = 0
for t in chars:
  if t.isupper() and not t.lower() in native_keys:
    print -1
    sys.exit()
  elif t.isupper() and not has_shift:
    print -1
    sys.exit()
  elif t.isupper() and not t in key_set:
    ret += 1
  elif t.islower() and not t in native_keys:
    print -1
    sys.exit()
print ret
