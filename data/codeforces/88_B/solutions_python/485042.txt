
# -*- coding: UTF-8 -*-

# from itertools import *
from collections import defaultdict

# def gcd(a,b):
#     while b > 0: a,b = b, a%b
#     return a

# def baseN(num,b,numerals="0123456789abcdefghijklmnopqrstuvwxyz"):
#     return ((num == 0) and  "0" ) or ( baseN(num // b, b).lstrip("0") + numerals[num % b])

# T = input()
# St = raw_input()
n, m, x = map(int, raw_input().split())
data2 = [ raw_input() for i in xrange(n) ]
temp = input()
text = raw_input()
ks = defaultdict(list)
ks2 = defaultdict(list)
shifts = []
counter = 0

for i in xrange(n):
    for j in xrange(m):
        if data2[i][j] == "S":
            shifts.append([i, j])
        else:
            ks[data2[i][j]].append([i,j])

for l in ks:
    ks2[l] = 2**31
    for i, j in ks[l]:
        for p, q in shifts:
            if (i-p)**2+(j-q)**2 <= ks2[l]:
                ks2[l] = (i-p)**2+(j-q)**2

for letter in text:
    if not letter.lower() in ks:
        print "-1"
        exit()
    if letter != letter.lower():
        if not shifts:
            print "-1"
            exit()
        letter = letter.lower()
        leng = ks2[letter]
        if leng > x**2:
            counter += 1
print counter
        
