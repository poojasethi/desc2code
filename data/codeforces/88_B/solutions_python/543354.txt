#!/usr/bin/python
import sys
def gcd(a,b):
	while b>0:
		a,b=b,a%b
	return a

read_ints= lambda: map(int,sys.stdin.readline().split())

read_line= lambda: sys.stdin.readline().strip()

n,m,X=read_ints()
board=[]
available={}
all_ch={}
for r in range(n):
  line=read_line()
  board.append(line)

shift=[]
for r in range(n):
  for c in range(m):
    if board[r][c]=='S':
      shift.append([r,c])
for r in range(n):
  for c in range(m):
    ch=board[r][c]
    if ch == 'S': continue
    available[ch]=1
    all_ch[ch]=1
    ch=ch.upper()
    for ss in shift:
      x,y=ss[0],ss[1]
      all_ch[ch]=1
      if (x-r)*(x-r)+(y-c)*(y-c)<=X*X:
        available[ch]=1

line=read_line()
line=read_line()
ans=0
for ch in line:
  if ch not in all_ch:
    ans=-1
    break
  elif ch not in available:
    ans=ans+1
print ans


