
#include <algorithm>
#include <iostream>
#include <map>
#include <cmath>
#include <vector>
#include <cstdio>
#include <string>

using namespace std;

int dist(int x1, int y1, int x2, int y2)
{
	return (x1-x2)*(x1-x2)+(y1-y2)*(y1-y2);
}
int n, m, x;
char grid[31][31];
bool valid[26];
int freq[26];
bool isShift;
void solve()
{
	for(int i = 0; i<n; i++)
		for(int j = 0; j<m; j++)
		{
			if(grid[i][j]!='S')
			{
				for(int ii = 0; ii<n; ii++)
					for(int jj = 0; jj<m; jj++)
					{
						if(grid[ii][jj]=='S' && dist(i,j,ii,jj)<=x)
							valid[grid[i][j]-'a'] = true;
					}
			}
		}
}

int main(void)
{
	cin >> n >> m >> x;
	x*=x;
	for(int i = 0; i<n; i++)
		for(int j = 0; j<m; j++)
		{
			cin>>grid[i][j];
			if(grid[i][j]!='S')
				freq[grid[i][j]-'a']++;
			else isShift = true;
		}
	solve();
	int t;
	cin >> t;
	int count = 0;
	
	for(int i = 0; i<t; i++)
	{
		char curr;
		cin >> curr;
		if((isupper(curr) && !isShift) || (isupper(curr) && freq[curr-'A']==0) || (islower(curr) && freq[curr-'a']==0))
		{
			cout << -1 << endl;
			return 0;
		}
		if(isupper(curr) && !valid[curr-'A'])
			count++;
		
	}
	
	cout << count << endl;
	
	return 0;
}
