#include <stdio.h>
#include <string.h>
#include <algorithm>
#define maxn 35

using namespace std;

char st[500010];
char s[maxn][maxn];
int f[26];
int occur[26];
int n,m,x;
inline int Euclid(int x1,int y1,int x2,int y2){
	return (x1-x2)*(x1-x2)+(y1-y2)*(y1-y2);
}
int Find(int x,int y){
	int ret=100000000;
	for (int i=0;i<n;i++)
		for (int j=0;j<m;j++)
			if (s[i][j]=='S') ret=min(ret,Euclid(x,y,i,j));
	if (ret==100000000) return -1;
	return ret;
}
int main(){
	scanf("%d%d%d",&n,&m,&x);
	for (int i=0;i<n;i++) scanf("%s",s[i]);
	memset(f,-1,sizeof(f));
	memset(occur,0,sizeof(occur));
	for (int i=0;i<n;i++)
		for (int j=0;j<m;j++)
			if (s[i][j]>='a' && s[i][j]<='z') occur[s[i][j]-'a']=1;
	for (int c=0;c<26;c++)
		for (int i=0;i<n;i++)
			for (int j=0;j<m;j++)
				if (s[i][j]-'a'==c){
					int k=Find(i,j);
					if (k==-1) continue;
					k=(k<=x*x);
					if (k>f[c]) f[c]=k;
				}
	int len;
	scanf("%d",&len);
	scanf("%s",st);
	int ans=0;
	for (int i=0;i<len && ans>-1;i++)
		if (st[i]>='A' && st[i]<='Z'){
			if (f[st[i]-'A']==-1) ans=-1;else ans+=(f[st[i]-'A']^1);
		}else
		if (!occur[st[i]-'a']) ans=-1;
	printf("%d\n",ans);
	return 0;
}