#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

char kb[30][30];
bool ok[26], has[26], hasS = false;
int  n, m, x;

bool enough(int i1, int j1, int i2, int j2) {
  return (i2 - i1) * (i2 - i1) + (j2 - j1) * (j2 - j1) <= x * x;
}

int main() {
  ios_base::sync_with_stdio(0);
  cin >> n >> m >> x;

  for (int i = 0; i < n; ++i) for (int j = 0; j < m; ++j) cin >> kb[i][j];

  for (int i1 = 0; i1 < n; ++i1)
    for (int j1 = 0; j1 < m; ++j1)
      if (kb[i1][j1] != 'S') {
        has[kb[i1][j1] - 'a'] = true;

        for (int i2 = 0; i2 < n; ++i2)
          for (int j2 = 0; j2 < m; ++j2)
            if (kb[i2][j2] == 'S') {
              hasS = true;

              if (enough(i1, j1, i2, j2)) ok[kb[i1][j1] - 'a'] = true;
            }
      }
  int q; cin >> q;
  string T; cin >> T;
  int    cnt = 0;

  for (int i = 0; i < q; ++i)  {
    if ((T[i] >= 'a') && (T[i] <= 'z')) {
      if (!has[T[i] - 'a']) {
        cout << -1;
        return 0;
      }
    } else {
      if (!has[T[i] - 'A'] || !hasS) {
        cout << -1;
        return 0;
      } else if (!ok[T[i] - 'A']) ++cnt;
    }
  }
  cout << cnt;
  return 0;
}

