//SkyHawk, CMC MSU

#include <iostream>
#include <list>
#include <string>
#include <vector>
#include <iterator>
#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <math.h>

using namespace std;

#define FOR(i,n) for(int i = 0;i < n;++i)
#define L(x1,y1,x2,y2) sqrt(((x1)-(x2))*((x1)-(x2)) + ((y1)-(y2))*((y1)-(y2)))


int main(int argc, char** argv)
{
	int n,m,x,q;
	char kb[35][35];
	cin >> n >> m >> x;
	double x1 = x;
	x1+=0.00000001;
	FOR(i,n)
		FOR(j,m)
			cin >> kb[i][j];
	cin >> q;
	int sym[258];
	FOR(i,257)
		sym[i] = 0;
	FOR(i,n)
		FOR(j,m)
			if(kb[i][j] != 'S')
				sym[(int)kb[i][j]] = 2;
	bool wasS = false;
	FOR(i,n)
		FOR(j,m)
			if(kb[i][j] == 'S')
			{
				wasS = true;
				FOR(i1,n)
					FOR(j1,m)
						if(L(i1,j1,i,j)<=x1 && kb[i1][j1]!='S')
							sym[kb[i1][j1]-'a'+'A'] = 1;
			}
	if(wasS)
		for(int i = 'A'; i<='Z';++i)
			if(sym[i+'a'-'A'])
				++sym[i];
	char c1 = getchar();
	int s = 0;
	FOR(i,q)
	{
		c1 = getchar();
		if(sym[(int)c1]==1)
		{
			cerr << c1 << endl;
			++s;
		}
		if(!sym[(int)c1])
		{
			cout << "-1";
			return 0;
		}
	}
	cout << s;
	return 0;
}
