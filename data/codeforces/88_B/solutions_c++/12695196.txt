#include <iostream>
#include <algorithm>
#include <cctype>

using namespace std;
typedef long long LL;

#define sqr(x) ((x)*(x))

const int N = 33;

bool canShift[N], canType[N];

char key[N][N];

int main() {
	ios::sync_with_stdio(0);
	cin.tie(0);
	int n, m, x;
	cin >> n >> m >> x;
	bool shift = false;
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < m; ++j) {
			cin >> key[i][j];
			if (key[i][j] == 'S') {
				shift = true;
			} else {
				canType[key[i][j] - 'a'] = true;
			}
		}
	}
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < m; ++j) {
			if (key[i][j] == 'S') {
				continue;
			}
			for (int ii = 0; ii < n; ++ii) {
				for (int jj = 0; jj < m; ++jj) {
					if (key[ii][jj] == 'S' && sqr(ii - i) + sqr(jj - j) <= x * x) {
						canShift[key[i][j] - 'a'] = true;
					}
				}
			}
		}
	}
	int q;
	cin >> q;
	string text;
	cin >> text;
	int ans = 0;
	for (int i = 0; i < q; ++i) {
		if (!canType[tolower(text[i]) - 'a']) {
			cout << "-1\n";
			return 0;
		}
		if (isupper(text[i])) {
			if (!canShift[tolower(text[i]) - 'a']) {
				if (shift) {
					ans ++;
				} else {
					cout << "-1\n";
					return 0;
				}
			}
		}
	}
	cout << ans << "\n";
	return 0;
}
