#include <iostream>
#include <vector>
#include <map>

using namespace std;

int main(int argc, char* argv[])
{
	int n, m, x;
	cin >> n >> m >> x;
	
	vector< pair<int,int> > shifts;
	vector< vector<char> > keys(n);
			
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			char c;
			cin >> c;
			keys[i].push_back(c);
			if (c == 'S')
				shifts.push_back(make_pair<int,int>(i, j));
		}			
	}
	
	map<char,bool> dist;
	
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			if (dist.count(keys[i][j]) == 0)
				dist[keys[i][j]] = false;
			
			if (dist[keys[i][j]] == false)
			{
				for (int k = 0; k < shifts.size(); k++)
				{
					if ((i - shifts[k].first) * (i - shifts[k].first) + (j - shifts[k].second) * (j - shifts[k].second) <= x * x)
						dist[keys[i][j]] = true;
				}
			}
		}
	}
	
	int q;
	cin >> q;
	int count = 0;
	
	for (int i = 0; i < q; i++)
	{
		char c;
		cin >> c;
				
		if ((dist.count(tolower(c))) && ((c != toupper(c)) || (shifts.size() > 0)))
		{
			if ((c == toupper(c)) && (!dist[tolower(c)]))
				count++;
		}
		else
		{
			cout << -1 << endl;
			return 0;
		}
	}
	
	cout << count << endl;
	
	return 0;
}
