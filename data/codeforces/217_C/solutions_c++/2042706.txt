#include <iostream>
#include <set>
using namespace std;

int n; string s;

set<int> parse(int i, int & end){
  char c=s[i];
  set<int> res;
  if (c=='0'){
    end=i+1;
    res.insert(0);
  }
  else if (c=='1'){
    end=i+1;
    res.insert(15);
  }
  else if (c=='?'){
    end=i+1;
    res.insert(3);
    res.insert(5);
  }
  else{
    int j;
    set<int> u = parse(i+1,j);
    char op=s[j];
    set<int> v = parse(j+1,end);
    end++;
    set<int>::iterator k,l;
    for (k=u.begin(); k!=u.end(); k++){
      for (l=v.begin(); l!=v.end(); l++){
        if (op=='&') res.insert((*k)&(*l));
        if (op=='|') res.insert((*k)|(*l));
        if (op=='^') res.insert((*k)^(*l));
      }
    }
  }
  return res;
}

int main() {
  cin >> n >> s;
  int e;
  set<int> v=parse(0, e);
  int x[] = {1,2,4,8,7,11,13,14,3,5,10,12};
  for (int k = 0; k < 12; k++){
    if (v.find(x[k])!=v.end()){
      cout<<"YES\n";
      return 0;
    }
  }
  cout<<"NO\n";
  return 0;
}
