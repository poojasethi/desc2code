#include <cstdio>
#include <bitset>
#include <algorithm>
using namespace std;

const int N = 1000050;

typedef bitset<16> bset;

inline int eval (int x, int y, char op)
{
	if (op == '&') return x & y;
	else if (op == '|') return x | y;
	else return x ^ y;
}

bset analyze (char *s, char *&e)
{
	char ch = *s, *t; bset r = 0;
	switch (ch)
	{
		case '0': r[0] = 1; e = s; break;
		case '1': r[15] = 1; e = s; break;
		case '?': r[12] = r[10] = 1; e = s; break;
		default:
			bset x = analyze(s + 1, t),
				 y = analyze(t + 2, e);
			for (int i = 0; i < 16; ++i)
				for (int j = 0; j < 16; ++j)
					if (x[i] && y[j]) r[eval(i, j, t[1])] = 1;
			e = e + 1;
	} return r;
}

char buff[N];

int main ()
{
#ifdef LOCAL
	freopen("in", "r", stdin);
#endif
	bset obj, res;
	obj[1] = obj[2] = obj[4] = obj[8] =
	obj[14] = obj[13] = obj[11] = obj[7] = 
	obj[12] = obj[10] = obj[3] = obj[5] = 1;
	scanf("%*d%s", buff);
	char *dum; res = analyze(buff, dum);
	if ((res & obj).any()) puts("YES"); else puts("NO");
}

