#include<cstdio>
#include<algorithm>
using namespace std;

typedef long long LL;
#define MAXN 100001
#define MOD 1000000007
LL pw(LL x,int y,int mod){LL ans=1;for(;y;y>>=1){if(y&1)ans=ans*x%mod;x=x*x%mod;}return ans;}
LL rev(LL x){return pw(x,MOD-2,MOD);}
LL fac[MAXN*2];
LL C(int x,int y){return fac[y]*rev(fac[x]*fac[y-x]%MOD)%MOD;}

struct Pawn{
	int x,y;
	Pawn(){}
	Pawn(int _x,int _y){x=_x;y=_y;}
	void scan(){scanf("%d%d",&x,&y);}
}p[MAXN+1];
LL f[MAXN];
int cmp(Pawn p1,Pawn p2){return p1.x<p2.x||(p1.x==p2.x&&p1.y<p2.y);}
int main(){
	fac[0]=1;
	for(int i=1;i!=MAXN*2;++i)fac[i]=fac[i-1]*i%MOD;
	int h,w,n; scanf("%d%d%d",&h,&w,&n);
	for(int i=1;i<=n;++i)p[i].scan();
	p[++n]=Pawn(h,w);
	sort(p+1,p+1+n,cmp);
	for(int i=1;i<=n;++i){
		f[i]=C(p[i].x-1,p[i].x+p[i].y-2);
		for(int j=1;j<i;++j)
			if(p[j].x<=p[i].x&&p[j].y<=p[i].y)
				f[i]=(MOD+f[i]-f[j]*C(p[i].x-p[j].x,p[i].x+p[i].y-p[j].x-p[j].y)%MOD)%MOD;
	}
	printf("%I64d\n",f[n]);
}
