#include <bits/stdc++.h>
using namespace std;
#define LL long long
const int maxn=400001;
const int maxm=4001;
const int mod=1e9+7;
LL dp[maxm],f[maxn];
int h,w,n;
pair <int,int> p[maxm];
LL powm(LL a,LL b)
{
	LL ret=1;
	while (b)
	{
		if (b&1) ret=ret*a%mod;
		a=a*a%mod;
		b>>=1;
	}
	return ret;
}
LL C(LL a,LL b)
{
	if (b>a) return 0;
	return f[a]*powm(f[b]*f[a-b]%mod,mod-2)%mod;
}
LL Lu(LL n,LL m)
{
	if (m==0) return 1;
	return (C(n%mod,m%mod)*Lu(n/mod,m/mod))%mod;
}
int main()
{
	f[0]=1;
	for (int i=1;i<=200010;++i) f[i]=(f[i-1]*i)%mod;
	scanf("%d%d%d",&h,&w,&n);
	for (int i=1;i<=n;++i)
		scanf("%d%d",&p[i].first,&p[i].second);
	p[n+1].first=h,p[n+1].second=w;
	n++;
	sort(p+1,p+n+1);
	for (int i=1;i<=n;++i)
	{
		dp[i]=Lu(p[i].first+p[i].second-2,p[i].first-1);
		for (int j=1;j<i;++j)
		{
			if (p[j].second<=p[i].second)
			{
				int a=p[i].first-p[j].first+p[i].second-p[j].second;
				int b=p[i].first-p[j].first;
				dp[i]-=dp[j]*Lu(a,b)%mod;
				(dp[i]+=mod)%=mod;
			}
		}
	}
	printf("%I64d\n",dp[n]);
}
