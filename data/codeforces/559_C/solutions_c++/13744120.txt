#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
const int M=1000000007;
int R,L,n,dp[2001],fac[200001]={1},inv[200001];
pair<int ,int > v[2001];
int Pow(int a,int x)
{
  if(!x)
    return 1;
  LL k=Pow(a,x/2);
  if(x&1)
    return k*k%M*a%M;
  else
    return k*k%M;
}
int ways(int x,int y)
{
  return (LL)fac[x+y-2]*inv[x-1]%M*inv[y-1]%M;
}
int main()
{
  scanf("%d%d%d",&R,&L,&n);
  inv[0]=1;
  for(int i=1;i<=R+L;i++)
  {
    fac[i]=i*(LL)fac[i-1]%M;
    inv[i]=Pow(fac[i],M-2);
  }
  for(int i=0;i<n;i++)
    scanf("%d%d",&v[i].first,&v[i].second);
  v[n].first=R;
  v[n++].second=L;
  sort(v,v+n);
  for(int i=0;i<n;i++)
  {
    dp[i]=ways(v[i].first,v[i].second);
	for(int j=0;j<i;j++)
    {
	  if(v[j].second<=v[i].second)
	  {
	    dp[i]-=(LL)ways(v[i].first-v[j].first+1,v[i].second-v[j].second+1)*dp[j]%M;
	    dp[i]=((LL)dp[i]+M)%M;
	  }
	}
  }
  printf("%d\n",dp[n-1]);
  return 0;
}
	 			  			  	      		 		      	