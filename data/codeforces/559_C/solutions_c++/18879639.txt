#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const long long p=1000000007;
long long dp[2010],jc[200100],vjc[200100];
struct node
{
	int x,y;
	bool operator < (const node &a) const
	{
		return (x<a.x)||(x==a.x&&y<a.y);
	}
}a[2010];
void eu(long long a,long long b,long long &x,long long &y)
{
	if (!b)
	{
		x=1;
		y=0;
	}
	else
	{
		eu(b,a%b,y,x);
		y-=x*(a/b);
	}
}
void init()
{
	int i;
	vjc[0]=jc[0]=1;
	long long x;
	for (i=1;i<=200010;i++)
	{
		jc[i]=(jc[i-1]*i)%p;
		eu(jc[i],p,vjc[i],x);
		vjc[i]%=p;
		vjc[i]+=p;
		vjc[i]%=p;
	}
}
long long c(int x,int y)
{
	return jc[y]*vjc[x]%p*vjc[y-x]%p;
}
int main()
{
	int i,j,k,m,n,q,x,y,z,h,w;
	init();
	scanf("%d%d%d",&h,&w,&n);
	n++;
	for (i=1;i<n;i++)
	  scanf("%d%d",&a[i].x,&a[i].y);
	a[n].x=h;
	a[n].y=w;
	sort(a+1,a+n+1);
	for (i=1;i<=n;i++)
	{
		dp[i]=c(a[i].x-1,a[i].x+a[i].y-2);
		for (j=1;j<i;j++)
		  if (a[j].y<=a[i].y)
		    dp[i]=((dp[i]-dp[j]*c(a[i].x-a[j].x,a[i].x-a[j].x+a[i].y-a[j].y)%p)+p)%p;
	}
	printf("%lld\n",dp[n]);
}
	  	 		    	 	  		  		 	 	    	