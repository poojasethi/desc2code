#include <stdio.h>
#include <algorithm>
using namespace std;
#define M 1000000007
typedef long long L;
struct data{
	int x,y;
	L z;
	bool operator<(const data&r)const{
		if(x==r.x)return y<r.y;
		return x<r.x;
	}
}a[2010];
L fac[200010]={1},mi[200010];
int pow(L x,int n){
    if(!n)return 1;
    L m=pow(x*x%M,n/2);
    if(n&1)m*=x;
    return m%M;
}
int inv(int n){return mi[n]?mi[n]:mi[n]=pow(fac[n],M-2);}
int com(int n,int m){return fac[n]*inv(n-m)%M*inv(m)%M;}
int main(){
	int i,j,n,m,k,x,y,s;
	scanf("%d%d%d",&n,&m,&k);
	for(i=1;i<=n+m;++i)fac[i]=fac[i-1]*i%M;
	a[0].x=a[0].y=a[0].z=1;
	a[k+1].x=n,a[k+1].y=m;
	for(i=1;i<=k;++i)scanf("%d%d",&a[i].x,&a[i].y);
	sort(a+1,a+k+1);
	for(i=0;i<=k;++i){
		for(j=i+1;j<=k+1;++j)if(a[i].y<=a[j].y){
            x=a[j].x-a[i].x,y=a[j].y-a[i].y;
            s=com(x+y,x);
            if(i)a[j].z-=a[i].z*s;
            else a[j].z+=s;
            a[j].z=(a[j].z+M)%M;
		}
	}
	printf("%d",(a[k+1].z+M)%M);
	return 0;
}
