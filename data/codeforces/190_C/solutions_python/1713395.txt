import sys

def solve(n, arr): #wrong answer at pair int
    res = []
    inPair = False
    plvl = 0
    ilvl = 0
    for i in xrange(len(ar)):
        item = ar[i]
        if item == 'pair':            
            if (ilvl == -1):
                return 'Error occurred'
            plvl += 1
            ilvl += 1
            inPair = True
            res.append(item)
            res.append('<')
        if item == 'int':
            res.append(item)
            n -= 1

            ilvl -= 1
            if (plvl > 0 and ilvl == 0):
                plvl -= 1
                res.append('>,')
            if inPair:
                res.append(',')
                inPair = False
            
            if i == len(ar) - 1:
                if (ilvl > 0):   
                    for i in xrange(plvl):
                        res.append('>')
                return ''.join(res)
    return 'Error occurred'

def solve3(n, str):
    init = 0
    first = 1
    second = 2
    out = 3
    error = 'Error occurred'
    arr = (s for s in str.split())
    res = []
    stateStack = []
    state = init
    for item in arr:
        if state == second:
            res.append(',')
        if item == 'int':
            if state == init:
                res.append(item)
                state = out
            elif state == first:
                res.append('int')
                state = second
            elif state == second:
                res.append('int>')
                prevState = stateStack.pop()
                while prevState == second:
                    res.append('>')
                    prevState = stateStack.pop()
                if prevState == first:
                    state = second
                elif prevState == init:
                    state = out
            elif state == out:
                return error
        elif item == 'pair':
            if state == out:
                return error
            stateStack.append(state)
            state = first
            res.append('pair<')
    if state != out:
        return error
    for i in xrange(len(stateStack)):
        res.append('>')
    return ''.join(res)
    
def solve2(n, arr):  #max recursion deep error
    arr = (str for str in arr.split())
    res = []
    def isType(n):
        try:
            item = arr.next()
            if item == 'int':
                n -= 1
                return 'int';
            if item == 'pair':
                return isPair(n)
        except StopIteration:
            return False
    def isPair(n):
        first = isType(n)
        second = isType(n)
        return first and second and 'pair<%s,%s>' % (first, second) or False
    type = isType(n)    
    if type:
        return type
    else: return 'Error occurred'
#print solve(n, ar)
if __name__ == '__main__':
    n = int(sys.stdin.readline())
    str = sys.stdin.readline()
    print solve3(n, str)