import sys

n = int(raw_input())
seq = raw_input().split()
stack = []
intermediates = []

for token in seq:
    stack.append(token)
    while len(stack) >= 3:
        if stack[-1] != 'pair' and stack[-2] != 'pair':
            if stack[-3] != 'pair':
                print 'Error occurred'
                sys.exit(0)
            else:
                intermediates.append(stack.pop())
                intermediates.append(stack.pop())
                stack.pop()
                stack.append((len(intermediates) - 1, len(intermediates) - 2))
        else:
            break

if len(stack) != 1:
    print 'Error occurred'
else:
    def expand(rep):
        jobs = [rep]
        while len(jobs):
            rep = jobs.pop()
            if isinstance(rep, basestring):
                sys.stdout.write(rep)
            else:
                jobs.append('>')
                jobs.append(intermediates[rep[1]])
                jobs.append(',')
                jobs.append(intermediates[rep[0]])
                jobs.append('pair<')
        
    expand(stack[0])
    print
