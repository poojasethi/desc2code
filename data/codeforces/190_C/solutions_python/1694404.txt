#! /usr/bin/env python
# -*- coding: utf-8 -*-

def main():
    n = getLineAs(int)[0]
    s = getline().split()

    stack = []
    ans   = []

    bad = False
    i   = 0

    for w in s:
        if w == "int":
            i += 1
            if len(stack) == 0:
                if len(ans) != 0:
                    bad = True
                else:
                    ans.append("int")
            else:
                if stack[-1] == 0:
                    stack[-1] += 1
                    ans.append("<int")
                else:
                    ans.append(",int")
                    while len(stack) > 0 and stack[-1] == 1:
                        ans.append(">")
                        stack.pop()
                    if len(stack) > 0:
                        stack[-1] += 1
        else:
            if len(stack) > 0:
                if stack[-1] == 0:
                    ans.append("<pair")
                else:
                    ans.append(",pair")
            else:
                if len(ans) != 0:
                    bad = True
                ans.append("pair")
            stack.append(0)

    if len(stack) != 0:
        bad = True
    if i != n:
        bad = True

    if bad:
        print "Error occurred"
    else:
        print "".join(ans)

    return 0

## -------------------------------------------
## TEMPLATE

from sys import stdin
from sys import setrecursionlimit
from copy import deepcopy
from math import sqrt
from itertools import permutations
from itertools import combinations

def getline():
    return stdin.readline()

def getLineAs(tp):
    return map(tp, getline().split())

def array(n, init = 0):
    return [deepcopy(init) for i in range(n)]

def count_if(lst, pred):
    ret = 0
    for i in lst:
        if pred(i): ret = ret + 1
    return ret

def toSepStr(lst):
    if len(lst):
        return "".join([str(item) + " " for item in lst])[:-1]
    else:
        return ""

if __name__ == "__main__":
    setrecursionlimit(1024 * 1024)
    main()
