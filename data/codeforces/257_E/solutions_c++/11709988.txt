#include <bits/stdc++.h>

using namespace std;

typedef long long LL;

const int N = 100010;

struct Event{
	LL t;
	int s,f,num;
}lst[N];

inline bool cmp(const Event &a,const Event &b){return a.t<b.t;}

int n,m;
int d[N];
vector<int> from[N],to[N];
set<int> hsh;
LL ed[N];

inline void mdf(int x,int dt){for(;x<=m;x+=x&(-x)) d[x]+=dt;}
inline int qry(int x){int rs=0;for(;x>0;x^=x&(-x)) rs+=d[x];return rs;}
inline int qry(int l,int r){return l>r ? 0 : qry(r)-qry(l-1);}

inline void solve(){
	LL ct=1;int cp=1;
	for(int i=1;i<=n+1;i++){
		while(ct<lst[i].t){
			for(vector<int> :: iterator p=from[cp].begin();p!=from[cp].end();p++)
				to[lst[*p].f].push_back(*p),hsh.insert(lst[*p].f),mdf(lst[*p].f,1);
			for(vector<int> :: iterator p=to[cp].begin();p!=to[cp].end();p++)
				ed[lst[*p].num]=ct;
			mdf(cp,-from[cp].size()-to[cp].size());hsh.erase(cp);from[cp].clear();to[cp].clear();
/*
			printf("%d %I64d:\n",cp,ct);
			for(set<int> :: iterator p=hsh.begin();p!=hsh.end();p++) printf("%d ",*p);
			puts("");
			printf("waiting :\n");
			for(int j=1;j<=m;j++)
				for(vector<int> :: iterator p=from[j].begin();p!=from[j].end();p++)
					printf("%d at %d\n",lst[*p].num,j);
*/
			if(!qry(m)) ct=lst[i].t;
			else{
				int pd=qry(1,cp-1),pu=qry(cp+1,m);
				set<int> :: iterator p;
				if(pu>=pd) p=hsh.upper_bound(cp);
				else p=--hsh.lower_bound(cp);
//				printf("%d %d %d %d\n",pd,pu,*p,cp);
				if(ct+abs(cp-*p)<=lst[i].t) ct+=abs(cp-*p),cp=*p;
				else cp+=(pu>=pd ? 1 : -1)*(lst[i].t-ct),ct=lst[i].t;
			}
		}
		if(i<=n) from[lst[i].s].push_back(i),hsh.insert(lst[i].s),mdf(lst[i].s,1);
//		printf("%I64d %d\n",ct,cp);
	}
}
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++) scanf("%I64d%d%d",&lst[i].t,&lst[i].s,&lst[i].f),lst[i].num=i;
	sort(lst+1,lst+n+1,cmp);lst[n+1].t=0x7f7f7f7f7f7f7f7fll;
	solve();
	for(int i=1;i<=n;i++) printf("%I64d\n",ed[i]);
	return 0;
}
