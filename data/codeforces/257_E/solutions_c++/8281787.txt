#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <vector>
#define N 100010
#define mk(x,y) make_pair(x,y)
#define fi first
#define se second
#define int64 long long
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int s,f,id;
	int64 t;
} a[N];
int i,j,k,n,m,now;
int tr[N];
int64 an[N],t;
vector<pair<int,int> > b[N];
inline bool cc1(const ww &a,const ww &b) {
	return a.t<b.t;
}

inline int cal(int x) {
	int an=0;
	for (;x;x-=x&-x) an+=tr[x];
	return an;
}
inline void inc(int x,int y) {
	for (;x<=m;x+=x&-x) tr[x]+=y;
}
inline void Cl() {
	int i;
	for (i=0;i<b[now].size();i++) {
		pair<int,int> A=b[now][i];
		if (A.se==0) an[A.fi]=t;
		else b[A.fi].push_back(mk(A.se,0)),inc(A.fi,1);
	}
	b[now].clear();
	inc(now,-(cal(now)-cal(now-1)));
}
inline int find(int x) {
	int i,y=0;
	for (i=19;i>=0;i--) {
		int A=y+(1<<i);
		if (A<=m&&tr[A]<x) {
			x-=tr[A];
			y=A;
		}
	}
	return y+1;
}
int main() {
	scanf("%d%d",&n,&m);
	For(i,1,n) scanf("%I64d%d%d",&a[i].t,&a[i].s,&a[i].f),a[i].id=i;
	sort(a+1,a+n+1,cc1);
	now=1; t=0; a[n+1].t=(int64)1e18;
	for (i=1;i<=n+1;i=j) {
		for (;t<a[i].t;) {
			int s=cal(m);
			if (!s) break;
			int A=cal(now);
			if (s-A>=A) {
				int B=find(A+1);
				if (B-now+t<a[i].t) {
					t+=B-now;
					now=B;
					Cl();
					continue;
				} else {
					now+=a[i].t-t;
					break;
				}
			} else {
				int B=find(A);
				if (now-B+t<a[i].t) {
					t+=now-B;
					now=B;
					Cl();
					continue;
				} else {
					now-=a[i].t-t;
					break;
				}
			}
		}
		if (i>n) break;
		t=a[i].t;
		for (j=i;j<=n&&a[j].t==a[i].t;j++) {
			ww A=a[j];
			inc(A.s,1);
			b[A.s].push_back(mk(A.f,A.id));
		}
		Cl();
	}
	For(i,1,n) printf("%I64d\n",an[i]);
	return 0;
}
