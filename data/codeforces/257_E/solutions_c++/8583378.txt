#include <cmath>
#include <map>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <set>
#include <bitset>
#include <memory.h>
#include <functional>
#include <queue>
#include <fstream>
#include <ctime>
#include <deque>
#include <utility>
#include <stack>
#include <sstream>
#include <list>
#include <cctype> 
#include <numeric> 
#include <iomanip>
#include <assert.h>
using namespace std;
#define sqr(_) ((_)*(_))

typedef pair<int, int> Pii;
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define SZ(x) ((int)(x).size())

typedef long long LL;

const int MAXN = (int)1e5 + 10;

int n, m, s[MAXN], f[MAXN], id[MAXN];
LL Tohka[MAXN], t[MAXN];
map<int, vector<int> > h;
typedef map<int, vector<int> >::iterator mit;

bool cmp(int a, int b)
{
	return t[a] < t[b];
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout);
#endif
	
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; ++i)
		scanf("%I64d%d%d", &t[i], &s[i], &f[i]), id[i] = i;
	sort(id + 1, id + n + 1, cmp);
	t[0] = (LL)1e18;
	LL ct = 0;
	bool flag = 0;
	for (int cf = 1, p = 1, pu = 0, pd = 0; pu || pd || p <= n || flag; )
	{
		flag = 0;
//		cout << cf << " " << p << " " << ct << " " << pu << " " << pd << endl;
		for (; p <= n && t[id[p]] == ct; h[s[id[p]]].pb(id[p]), ++p)
		{
			if (s[id[p]] > cf)
				++pu;
			if (s[id[p]] < cf)
				++pd;
		}
		vector<int> &v = h[cf];
		for (int i = 0; i < SZ(v); ++i)
			if (v[i] > 0)
			{
				if (f[v[i]] > cf)
					++pu;
				else
					++pd;
				h[f[v[i]]].pb(-v[i]);
			}
			else
				Tohka[-v[i]] = ct;
		h.erase(cf);
		
		mit it = h.lower_bound(cf);
		if (it != h.end() && pu && pu >= pd)
		{
			int w = min(t[id[p]] - ct, (LL)it -> x - cf);
			ct += w,
			cf += w;
			if (cf == (it -> x))
				pu -= SZ(h[cf]), flag = 1;
			continue ;
		}
		
		if (it != h.begin())
		{
			--it;
			if (pu < pd)
			{
				int w = min((LL)cf - it -> x, t[id[p]] - ct);
				ct += w,
				cf -= w;
				if (cf == (it -> x))
					pd -= SZ(h[cf]), flag = 1;
				continue ;
			}
		}
		
		ct = t[id[p]];
	}
	for (int i = 1; i <= n; ++i)
		cout << Tohka[i] << endl;
	
	fclose(stdin);
	fclose(stdout);
	return 0;
}
