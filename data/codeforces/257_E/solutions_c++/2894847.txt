#include<iostream>
#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<algorithm>
#include<set>
#define X first
#define Y second
using namespace std;
typedef long long lint;
struct P
{
    int s,f,x;
    lint t;
}p[100100];
lint now=1,tim,ans[101000];
int n,m,F[101000];
typedef pair <int,int>pi;
set<pi>wu,wd,nu,nd;
inline bool cmp(P a,P b){return a.t<b.t;}
void solve(lint lim)
{
    if(!lim) return;
    if(wu.size()+nu.size()==0&&wd.size()+nd.size()==0) return;
    if(wu.size()+nu.size()>=wd.size()+nd.size())
    {
        lint x,y;
        if(wu.size()==0) x=0x3f3f3f3f3f3f3fll;
        else x=wu.begin()->X;
        if(nu.size()==0) y=0x3f3f3f3f3f3f3fll;
        else y=nu.begin()->X;
        lint i=min(x,y);
        lint j=min(lim,i-now);
        tim+=j;now+=j;lim-=j;
        while(nu.size()&&nu.begin()->X==now)
            ans[nu.begin()->Y]=tim,nu.erase(nu.begin());
        while(wu.size()&&wu.begin()->X==now)
        {
            if(F[wu.begin()->Y]>now) nu.insert(pi(F[wu.begin()->Y],wu.begin()->Y));
            else if(F[wu.begin()->Y]<now) nd.insert(pi(F[wu.begin()->Y],wu.begin()->Y));
            else ans[wu.begin()->Y]=tim;
            wu.erase(wu.begin());
        }
        solve(lim);
    }
    else
    {
        lint x,y;
        if(wd.size()==0) x=0;
        else x=wd.rbegin()->X;
        if(nd.size()==0) y=0;
        else y=nd.rbegin()->X;
        lint i=max(x,y);
        lint j=min(lim,now-i);
        tim+=j;now-=j;lim-=j;
        while(nd.size()&&nd.rbegin()->X==now)
            ans[nd.rbegin()->Y]=tim,nd.erase(--nd.end());
        while(wd.size()&&wd.rbegin()->X==now)
        {
            if(F[wd.rbegin()->Y]>now) nu.insert(pi(F[wd.rbegin()->Y],wd.rbegin()->Y));
            else if(F[wd.rbegin()->Y]<now) nd.insert(pi(F[wd.rbegin()->Y],wd.rbegin()->Y));
            else ans[wd.rbegin()->Y]=tim;
            wd.erase(--wd.end());
        }
        solve(lim);
    }
}

int main()
{
    scanf("%d%d",&n,&m);
    for(int i=1;i<=n;i++)
        scanf("%I64d%d%d",&p[i].t,&p[i].s,&p[i].f),p[i].x=i,F[i]=p[i].f;
    sort(p+1,p+n+1,cmp);
    p[n+1].t=0x3f3f3f3f3f3f3fll;
    for(int i=1;i<=n;i++)
    {
        tim=p[i].t;
        if(now==p[i].s)
        {
            if(p[i].f>now) nu.insert(pi(p[i].f,p[i].x));
            else if(p[i].f<now) nd.insert(pi(p[i].f,p[i].x));
            else ans[p[i].x]=tim;
        }
        else if(p[i].s>now) wu.insert(pi(p[i].s,p[i].x));
        else wd.insert(pi(p[i].s,p[i].x));
        solve(p[i+1].t-p[i].t);
    }
    for(int i=1;i<=n;i++)
        printf("%I64d\n",ans[i]);
    return 0;
}