#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,n) for (int i=a;i<n;i++)
#define per(i,a,n) for (int i=n-1;i>=a;i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define SZ(x) ((int)(x).size())
#define fi first
#define se second
typedef vector<int> VI;
typedef long long ll;
typedef pair<int,int> PII;
const ll mod=1000000007;
ll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
// head

const int N=101000;
struct people { int t,s,f,id;} p[N];
bool cmp(const people &a,const people &b) { return a.t<b.t;}
set<PII> gd,gu,wd,wu;
int cp,ev,n,m,dir,cd;
ll cT,ret[N];
int main() {
	scanf("%d%d",&n,&m);
	rep(i,0,n) scanf("%d%d%d",&p[i].t,&p[i].s,&p[i].f),p[i].id=i;
	sort(p,p+n,cmp);
	cp=0; cT=0; cd=p[0].t; ev=1;
	while (1) {
		ev+=dir*cd; cT+=cd;
		while (cp<n&&p[cp].t==cT) {
			if (p[cp].s==ev) {
				if (p[cp].f<ev) gd.insert(mp(p[cp].f,cp));
				else gu.insert(mp(p[cp].f,cp));
			} else {
				if (p[cp].s<ev) wd.insert(mp(p[cp].s,cp));
				else wu.insert(mp(p[cp].s,cp));
			}
			cp++;
		}
		while (!gd.empty()&&gd.rbegin()->fi==ev) {
			int id=gd.rbegin()->se;
			gd.erase(--gd.end());
			ret[p[id].id]=cT;
		}
		while (!gu.empty()&&gu.begin()->fi==ev) {
			int id=gu.begin()->se;
			gu.erase(gu.begin());
			ret[p[id].id]=cT;
		}
		while (!wd.empty()&&wd.rbegin()->fi==ev) {
			int id=wd.rbegin()->se;
			wd.erase(--wd.end());
			if (p[id].f<ev) gd.insert(mp(p[id].f,id));
			else gu.insert(mp(p[id].f,id));
		}
		while (!wu.empty()&&wu.begin()->fi==ev) {
			int id=wu.begin()->se;
			wu.erase(wu.begin());
			if (p[id].f<ev) gd.insert(mp(p[id].f,id));
			else gu.insert(mp(p[id].f,id));
		}
		if (gd.empty()&&gu.empty()&&wd.empty()&&wu.empty()) {
			dir=0;
			if (cp>=n) break;
			else cd=p[cp].t-cT;
		} else {
			cd=1<<30;
			if (cp<n) cd=p[cp].t-cT;
			if (SZ(wu)+SZ(gu)>=SZ(wd)+SZ(gd)) {
				dir=1;
				if (SZ(gu)) cd=min(cd,gu.begin()->fi-ev);
				if (SZ(wu)) cd=min(cd,wu.begin()->fi-ev);
			} else {
				dir=-1;
				if (SZ(gd)) cd=min(cd,ev-gd.rbegin()->fi);
				if (SZ(wd)) cd=min(cd,ev-wd.rbegin()->fi);
			}
		}
	}
	rep(i,0,n) printf("%I64d\n",ret[i]);
}
