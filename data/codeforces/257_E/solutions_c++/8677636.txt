#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<vector>
#include<string>
#include<set>
#define LL long long
#define fi first
#define se second
#define MP make_pair
#define PII pair<int,int>
using namespace std;
int x,y,n,m,c[100010];
LL inf=1e18,ans[100010];
set<int> Ti;
PII p[100010];
set<PII> In,Wt,Ob;
void read(int &x)
{
	char ch=getchar();int mark=1;for(;ch!='-'&&(ch<'0'||ch>'9');ch=getchar());if (ch=='-') mark=-1,ch=getchar();
	for(x=0;ch>='0'&&ch<='9';ch=getchar()) x=x*10+ch-48;x*=mark;
}
int main()
{
	//freopen("my.in","r",stdin);
	//freopen("1.out","w",stdout);
	read(n);read(m);
	for(int i=1;i<=n;i++)
	{
		read(x);read(p[i].fi);read(p[i].se);
		Ob.insert(MP(x,i));
		Ti.insert(x);
	}
	int U_D=0,Mv=0,now=1;
	LL time=0;
	for(;;)
	{
		if (Ti.empty()&&In.empty()&&Wt.empty()) break;
		for(;Wt.size();)
		{
			set<PII>::iterator it=Wt.lower_bound(MP(now,0));
			if ((*it).fi!=now||it==Wt.end()) break;
			int t=(*it).se;
			In.insert(MP(p[t].se,t));
			c[p[t].se]++;c[now]--;
			if (p[t].se>now) U_D++;else U_D--;
			Wt.erase(it);
		}
		for(;In.size();)
		{
			set<PII>::iterator it=In.lower_bound(MP(now,0));
			if ((*it).fi!=now||it==In.end()) break;
			c[now]--,ans[(*it).se]=time;
			In.erase(it);
		}
		if (In.empty()&&Wt.empty()) Mv=0;
		else if (U_D>=0) Mv=1;else Mv=-1;
		LL nxt=inf;
		if (Mv>0)
		{
			set<PII>::iterator it=In.lower_bound(MP(now,0));
			if (it!=In.end()) nxt=min(nxt,time+(*it).fi-now);
			it=Wt.lower_bound(MP(now,0));
			if (it!=Wt.end()) nxt=min(nxt,time+(*it).fi-now);
		}
		if (Mv<0)
		{
			set<PII>::iterator it=In.lower_bound(MP(now,0));
			if (it!=In.begin())
			{
				it--;nxt=min(nxt,time+now-(*it).fi);
			}
			it=Wt.lower_bound(MP(now,0));
			if (it!=Wt.begin())
			{
				it--;nxt=min(nxt,time+now-(*it).fi);
			}
		}
		LL pre=time;
		if (Ti.empty()||nxt<=(*Ti.begin()))
		{
			now+=Mv*(nxt-time);time=nxt;
			if (Mv>0) U_D-=c[now];else U_D+=c[now];
		}
		else time=*Ti.begin(),now+=Mv*(time-pre);
		if (time==*Ti.begin())
		{
			Ti.erase(Ti.begin());
			set<PII>::iterator it;
			for(;Ob.size();) 
			{
				it=Ob.lower_bound(MP(time,0));
				if ((*it).fi!=time) break;
				int t=(*it).se;
				Wt.insert(MP(p[t].fi,t));
				c[p[t].fi]++;
				if (p[t].fi>now) U_D++;
				if (p[t].fi<now) U_D--;
				Ob.erase(it);
			}
		}
	}
	for(int i=1;i<=n;i++) printf("%I64d\n",ans[i]);
	return 0;
}
