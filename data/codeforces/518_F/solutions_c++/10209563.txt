#include <bits/stdc++.h>
#define rep(i, a, b) for(int i = (int)a; i < (int)b; i++)
#define red(i, a, b) for(int i = a; i > b; i--)
#define RED true
#define BLACK false
#define pb push_back
#define mk make_pair
#define fi first
#define se second
using namespace std;
typedef pair<int, int> ii;
typedef long long ll;
typedef pair<ii, int> iii;
typedef vector<int> vi;
const int N = 2e3 + 7;
const int M = 1e9;
const int inf = 1e9 + 7;
const ll base = 1e18;
const double pi = acos(-1);
const double ep = 1e-9;

int n, m;
string s[N];
int dLeft[N][N], dUp[N][N];
int pLeft[N][N], pUp[N][N];


int main(){
    //freopen("in.txt", "r", stdin);
    cin >> n >> m;
    rep(i, 0, n)
        cin >> s[i];
    rep(i, 0, n) rep(j, 0, m){
        if (s[i][j] == '.') {
            dLeft[i+1][j+1] = dLeft[i+1][j] + 1;
            dUp[i+1][j+1] = dUp[i][j+1] + 1;
        }
    }
    
    ll ans = 0;
    
    rep(i, 2, n)
        if (dLeft[i][m] == m) ans++;
    rep(j, 2, m)
        if (dUp[n][j] == n) ans++;
        
    rep(i, 2, n)
        rep(j, 2, m)
            if (s[i-1][j-1] == '.'){
                int cnt0 = 0, cnt1 = 0;
                if (dUp[i][j] == i) cnt0++;
                if (dUp[n][j] - dUp[i-1][j] == n - i + 1) cnt0++;
                if (dLeft[i][j] == j) cnt1++;
                if (dLeft[i][m] - dLeft[i][j-1] == m - j + 1) cnt1++;
                ans += cnt0 * cnt1;
                
                ans += pLeft[i][j-1] * cnt0 + pUp[i-1][j] * cnt1;
                
                if (j > 2){
                    if (dUp[i][j] == i && dUp[i][j-1] == i) ans--;
                    if (dUp[n][j] - dUp[i-1][j] == n - i + 1 && dUp[n][j-1] - dUp[i-1][j-1] == n - i + 1) ans--;
                }
                
                if (i > 2){
                    if (dLeft[i][j] == j && dLeft[i-1][j] == j) ans--;
                    if (dLeft[i][m] - dLeft[i][j-1] == m - j + 1 && dLeft[i-1][m] - dLeft[i-1][j-1] == m - j + 1) ans--;
                }
                
                pLeft[i][j] = cnt0;
                if (s[i-1][j-2] == '.') pLeft[i][j] += pLeft[i][j-1];
                
                pUp[i][j] = cnt1;
                if (s[i-2][j-1] == '.') pUp[i][j] += pUp[i-1][j];
                
                
            }
    
    
    cout<<ans;
    return 0;    
}