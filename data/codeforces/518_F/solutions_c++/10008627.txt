#include <cstdio>
int n, m;
char c[2010][2010];
int sr[2010][2010];
int sc[2010][2010];
int main() {
	scanf("%d%d", &n, &m);
	for (int i = 0; i < n; i++) {
		scanf("%s", c[i]);
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			sr[i][j+1] = sr[i][j] + (c[i][j] == '#');
		}
	}
	for (int j = 0; j < m; j++) {
		for (int i = 0; i < n; i++) {
			sc[j][i+1] = sc[j][i] + (c[i][j] == '#');
		}
	}
	long long ans = 0;
	for (int i = 1; i < n - 1; i++) {
		if (sr[i][m] - sr[i][0] == 0) {
			ans++;
		}
	}
	for (int j = 1; j < m - 1; j++) {
		if (sc[j][n] - sc[j][0] == 0) {
			ans++;
		}
	}
	for (int i = 1; i < n - 1; i++) {
		for (int j = 1; j < m - 1; j++) {
			if (sr[i][j + 1] - sr[i][0] == 0 && sc[j][i + 1] - sc[j][0] == 0) {
				ans++;
			}
			if (sr[i][j + 1] - sr[i][0] == 0 && sc[j][n] - sc[j][i] == 0) {
				ans++;
			}
			if (sr[i][m] - sr[i][j] == 0 && sc[j][i + 1] - sc[j][0] == 0) {
				ans++;
			}
			if (sr[i][m] - sr[i][j] == 0 && sc[j][n] - sc[j][i] == 0) {
				ans++;
			}
		}
	}
	for (int i = 1; i < n - 1; i++) {
		int u = 0, d = 0, pu = 0, pd = 0, nu, nd;
		for (int j = 1; j < m - 1; j++) {
			if (c[i][j] == '#') {
				ans += u * (u - 1) / 2;
				ans += d * (d - 1) / 2;
				ans += u * d;
				pu = pd = u = d = 0;
			} else {
				nu = sc[j][i + 1] - sc[j][0] == 0;
				nd = sc[j][n] - sc[j][i] == 0;
				if (nu & pu) {
					--ans;
				}
				if (nd & pd) {
					--ans;
				}
				if (nu & nd) {
					--ans;
				}
				u += nu, d += nd;
				pu = nu, pd = nd;
			}
		}
		if (u || d) {
			ans += u * (u - 1) / 2;
			ans += d * (d - 1) / 2;
			ans += u * d;
		}
	}
	for (int j = 1; j < m - 1; j++) {
		int l = 0, r = 0, pl = 0, pr = 0, nl, nr;
		for (int i = 1; i < n - 1; i++) {
			if (c[i][j] == '#') {
				ans += l * (l - 1) / 2;
				ans += r * (r - 1) / 2;
				ans += l * r;
				pl = pr = l = r = 0;
			} else {
				nl = sr[i][j + 1] - sr[i][0] == 0;
				nr = sr[i][m] - sr[i][j] == 0;
				if (nl & pl) {
					--ans;
				}
				if (nr & pr) {
					--ans;
				}
				if (nl & nr) {
					--ans;
				}
				r += nr, l += nl;
				pr = nr, pl = nl;
			}
		}
		if (l || r) {
			ans += l * (l - 1) / 2;
			ans += r * (r - 1) / 2;
			ans += l * r;
		}
	}
	printf("%I64d\n", ans);
	return 0;
}
