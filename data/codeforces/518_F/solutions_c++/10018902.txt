#include<iostream>
#include<complex>
#include<iomanip>
#include<vector>
#include<cstdio>
#include<cstring>
#include<string>
#include<set>
#include<map>
#include<deque>
#include<algorithm>
#include<cmath>
#include<ctime>
#include<fstream>
 
#define pb push_back
#define pp pop_back
#define mp make_pair
#define xx first
#define yy second
#define X real()
#define Y imag()
 
using namespace std;
 
typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef complex<double> point; 

const int maxn=2000+10;
char mat[maxn][maxn],a[maxn][maxn];
bool u[maxn][maxn],d[maxn][maxn],l[maxn][maxn];
int n,m;
ll ans;
void rev(){
	for(int i=1;i<=n;i++)for(int j=1;j<=m;j++)a[m-j+1][i]=mat[i][j];
	swap(n,m);
	for(int i=1;i<=n;i++)for(int j=1;j<=m;j++)mat[i][j]=a[i][j];
}
void init(){
	memset(u,0,sizeof(u));
	memset(d,0,sizeof(d));
	memset(l,0,sizeof(l));
	for(int j=1;j<=m;j++){
		for(int i=1;i<=n;i++){
			if(mat[i][j]=='#')u[i][j]=true;
			else u[i][j]=u[i-1][j];
		}
	}
	for(int j=1;j<=m;j++){
		for(int i=n;i>0;i--){
			if(mat[i][j]=='#')d[i][j]=true;
			else d[i][j]=d[i+1][j];
		}
	}
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			if(mat[i][j]=='#')l[i][j]=true;
			else l[i][j]=l[i][j-1];
		}
	}
}
ll solve(){
	ll ret=0;
	for(int i=2;i<n;i++){
		for(int j=2;j<m;j++){
			if(!l[i][j] && !u[i][j]){
				ret++;
			}
		}
	}
	return ret;
}
ll calc(){
	ll ret=0;
	for(int j=2;j<m;j++){
		if(!u[n][j])ret++;
	}
	for(int i=2;i<n;i++){
		ll dw=0,up=0;
		for(int j=2;j<m;j++){
			if(mat[i][j]=='#'){
				dw=0,up=0;
				continue;
			}
			if(!u[i][j]){
				ret+=dw;
				ret+=up;
				if(j>2 && !u[i][j-1])ret--;
			}
			if(!d[i][j]){
				ret+=up;
				ret+=dw;
				if(j>2 && !d[i][j-1])ret--;
			}
			if(!u[i][j])up++;
			if(!d[i][j])dw++;
		}
	}
	return ret;
}
int main(){
	ios_base::sync_with_stdio(false);	
	cin>>n>>m;
	for(int i=1;i<=n;i++)for(int j=1;j<=m;j++)cin>>mat[i][j];
	for(int i=0;i<4;i++){
		rev();
		init();
		ans+=solve();
		if(i<2)ans+=calc();
	}
	cout<<ans<<endl;
	return 0;
} 
