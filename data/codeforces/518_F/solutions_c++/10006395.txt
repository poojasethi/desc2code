#include <cstdio>
#include <algorithm>
#define N 2005
#define LL long long
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
using namespace std;

int n, m, h[N][N], v[N][N], q[N], tl;
char s[N][N], t[N][N];
LL ans;

void process(char s[][N]){
	FI(i, 1, n) FI(j, 1, m) h[i][j] = h[i][j - 1] + (s[i][j] == '#');
	FI(j, 1, m) FI(i, 1, n) v[i][j] = v[i - 1][j] + (s[i][j] == '#');
	
	fi(i, 2, m) ans += (v[n][i] == 0);
	fi(i, 2, n) fi(j, 2, m){
		ans += (h[i][j] == 0 && v[i][j] == 0);
		ans += (h[i][m] - h[i][j - 1] == 0 && v[n][j] - v[i - 1][j] == 0);
	}
	
	fi(i, 2, n){
		tl = 0;
		fi(j, 2, m){
			if(v[n][j] - v[i - 1][j] == 0) ans += tl;
			if(s[i][j] == '#') tl = 0;
			if(v[i][j] == 0) tl++;
		}
		
		tl = 0;
		fi(j, 2, m){
			if(v[i][j] == 0) ans += tl;
			if(s[i][j] == '#') tl = 0;
			if(v[n][j] - v[i - 1][j] == 0) tl++;
		}
		
		tl = 0;
		fi(j, 3, m){
			if(v[n][j] - v[i - 1][j] == 0) ans += tl;
			if(v[n][j - 1] - v[i - 1][j - 1] == 0) tl++;
			if(s[i][j] == '#') tl = 0;
		}
		
		tl = 0;
		fi(j, 3, m){
			if(v[i][j] == 0) ans += tl;
			if(v[i][j - 1] == 0) tl++;
			if(s[i][j] == '#') tl = 0;
		}
	}
}

int main(){
	scanf("%d %d", &n, &m);
	FI(i, 1, n) scanf("%s", s[i] + 1);
	
	process(s);
	
	FI(i, 1, n) FI(j, 1, m) t[m + 1 - j][i] = s[i][j];
	swap(n, m);
	process(t);
	
	printf("%I64d\n", ans);
}
