#include <iostream>
#include <vector>
#include <stack>
#include <queue>
#include <cstdlib>
using namespace std;

queue<int> next;
vector<int> estado;
vector<int> sol;
vector<vector<pair<int,int> > > g;

int recorre(int u)
{
  if (estado[u]==1) return 0;
  if (estado[u]==2) return 2;
  //cout<<u+1<<endl;
  estado[u]=1;
  sol.push_back(u);
  vector<pair<int,int> > &ar=g[u];
  for (int i=0;i<int(ar.size());i++) {
    int a=ar[i].first;
    int v=ar[i].second;
    int r=recorre(v);
    if (r==1)
      sol.push_back(u);
    if (r>0) {
      if (not next.empty()) {
	int nextu=next.front();
	next.pop();
	sol.push_back(-1);sol.push_back(a);sol.push_back(u);sol.push_back(nextu);
	recorre(nextu);
	sol.push_back(u);
      }
    }
  }
  estado[u]=2;
  return 1;
}

pair<int,int> buscacambio(vector<vector<pair<int,int> > > &g)
{
  int n=int(g.size());
  vector<int> visitado(n,0);
  vector<int> padre(n,-1);
  for (int i=0;i<n;i++) {
    if (not visitado[i]) {
      visitado[i]=1;
      stack<int> s;
      s.push(i);
      while (not s.empty()) {
	int u=s.top();
	s.pop();
	vector<pair<int,int> > &ar=g[u];
	for (int j=0;j<int(ar.size());j++) {
	  int v=ar[j].second;
	  if (not visitado[v]) {
	    visitado[v]=1;
	    padre[v]=u;
	    s.push(v);
	  } else if (padre[u]!=v)
	    return pair<int,int> (u,v);
	}
      }
    }
  }
  for (int i=0;i<n;i++)
    if (int(g[i].size())>=2)
      return pair<int,int> (i,g[i][0].second);
  return pair<int,int> (-1,-1);
}

void generavisitados(vector<vector<pair<int,int> > > &g,
		     int i,vector<int> &visitado)
{
  visitado[i]=1;
  next.push(i);
  stack<int> s;
  s.push(i);
  while (not s.empty()) {
    int u=s.top();
    s.pop();
    vector<pair<int,int> > &ar=g[u];
    for (int j=0;j<int(ar.size());j++) {
      int v=ar[j].second;
      if (not visitado[v]) {
	visitado[v]=1;
	s.push(v);
      }
    }
  }
}

int main()
{
  int n,m;
  cin>>n>>m;
  g=vector<vector<pair<int,int> > > (n);
  for (int i=1;i<=m;i++) {
    int u,v;
    cin>>u>>v;
    u--;v--;
    g[u].push_back(pair<int,int> (i,v));
    g[v].push_back(pair<int,int> (i,u));
  }
  estado=vector<int> (n,0);
  if (int(g[0].size())!=0) {
    vector<int> visitado(n,0);
    for (int i=0;i<n;i++) {
      if (int(g[i].size())!=0 and not visitado[i]) {
	generavisitados(g,i,visitado);
      }
    }
    for (int i=0;i<n;i++)
      if (int(g[i].size())==0)
	next.push(i);
  } else {
    pair<int,int> p=buscacambio(g);
    if (p.first==-1) {
      if (int(g.size())==1) {
	cout<<"YES"<<endl<<0<<endl<<"1 1"<<endl;
      } else
	cout<<"NO"<<endl;
      exit(0);
    }
    int u=p.first;
    int v=p.second;
    vector<pair<int,int> > &aru=g[u];
    vector<pair<int,int> > &arv=g[v];
    int iu;
    for (int i=0;i<int(aru.size());i++)
      if (aru[i].second==v)
	iu=i;
    int iv;
    for (int i=0;i<int(arv.size());i++)
      if (arv[i].first==aru[iu].first)
	iv=i;
    sol.push_back(0);
    sol.push_back(-1);
    sol.push_back(aru[iu].first);
    sol.push_back(0);
    sol.push_back(u);
    vector<pair<int,int> > nextaru;
    for (int i=0;i<int(aru.size());i++)
      if (i!=iu)
	nextaru.push_back(aru[i]);
    aru=nextaru;
    vector<pair<int,int> > nextarv;
    for (int i=0;i<int(arv.size());i++)
      if (i!=iv)
	nextarv.push_back(arv[i]);
    arv=nextarv;
    vector<int> visitado(n,0);
    visitado[0]=1;
    estado[0]=2;
    generavisitados(g,u,visitado);
    for (int i=0;i<n;i++) {
      if (int(g[i].size())!=0 and not visitado[i]) {
	generavisitados(g,i,visitado);
      }
    }
    for (int i=1;i<n;i++)
      if (int(g[i].size())==0)
	next.push(i);
  }
  {
    int u=next.front();
    next.pop();
    recorre(u);
    bool ok=true;
    for (int i=0;i<n;i++)
      if (estado[i]!=2)
	ok=false;
    if (not ok) {
      cout<<"NO"<<endl;
    } else {
      cout<<"YES"<<endl;
      vector<vector<int> > sortida(1);
      for (int i=0;i<int(sol.size());i++) {
	u=sol[i];
	if (u==-1) {
	  vector<int> linea(3);
	  linea[0]=sol[i+1];linea[1]=sol[i+2]+1;linea[2]=sol[i+3]+1;
	  sortida.push_back(linea);sortida.push_back(vector<int> ());
	  i+=3;
	} else {
	  (sortida.back()).push_back(u+1);
	}
      }
      cout<<int(sortida.size())/2<<endl;
      for (int i=0;i<int(sortida.size());i++) {
	vector<int> &ar=sortida[i];
	if (i%2==0) cout<<int(ar.size())<<" ";
	for (int j=0;j<int(ar.size());j++) {
	  if (j>0) cout<<" ";
	  cout<<ar[j];
	}
	cout<<endl;
      }
    }
  }
}
