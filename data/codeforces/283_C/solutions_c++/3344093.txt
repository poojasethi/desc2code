#include <iostream>
#include <cstring>
#include <cstdio>
using namespace std;
const int MOD = 1000000007;
long long a[310], t;
int dp[100010];
int e[100010], bb;
bool flag[100010];
int n, q;

void dfs(int kk, int k, long long sum)
{
	bb++;
	a[k] += sum;
	sum = a[k];
	if (e[k]) t -= sum;
	if (e[k]) dfs(kk, e[k], sum);
}

int main()
{
	memset(flag, true, sizeof(flag));
	memset(e, 0, sizeof(e));
	scanf("%d%d%I64d", &n, &q, &t);
	for (int i = 1; i <= n; i++)
		scanf("%I64d", &a[i]);
	bb = 0;
	int qq = q;
	while (q--)
	{
		int x, y;
		scanf("%d%d", &x, &y);
		e[x] = y;
		flag[y] = false;
	}
	for (int i = 1; i <= n; i++)
		if (flag[i]) dfs(i, i, 0);
	if (bb < n || t < 0)
		puts("0");
	else
	{
		memset(dp, 0, sizeof(dp));
		dp[0] = 1;
		for (int i = 1; i <= n; i++)
		{
			for (int j = 0; j + a[i] <= t; j++)
				dp[j + a[i]] = (dp[j] + dp[j + a[i]]) % MOD;
		}
		printf("%d\n", dp[t]);
	}
	return 0;
}
