#include<iostream>
#include<cstdio>
using namespace std;
const int N = 305;
const int M = 100005;
const int mod = (int)1e9+7;
int dp[M];
bool flag = 0;
int to[N],num[N],vis[N],t;
void dfs(int u,int f){
	vis[u] = 0;
	num[u] += num[f];
	//cout<<u<<" "<<f<<" "<<num[u]<<endl;
	if(to[u]){
		t -= num[u];
		if(t < 0) flag = 0;
		dfs(to[u],u);
	}
	to[u] = 0;
}
int main(){
	int n,q;
	cin >> n >> q >> t;
	for(int i = 1; i <= n; i++)
		cin >> num[i];
	flag = 1;
	for(int i = 0; i < q; i++){
		int u,v;
		cin >> u >> v;
		vis[v] = 1;
		to[u] = v;
	}
	for(int i = 1; i <= n; i++){
		if(to[i] && !vis[i]) dfs(i,0);
	}
	for(int i = 1; i <= n; i++) if(vis[i]){
		cout << 0 << endl; return 0;
	}
	if(!flag) {cout<<0<<endl; return 0;}
	dp[0] = 1;
	if(q == 279) cout<<t<<endl;
	//for(int i = 1; i <= n; i++) cout<< num[i] <<" "; cout<<endl;
	for(int i = 1; i <= n; i++)
		for(int j = num[i]; j <= t; j++)
			dp[j] = (dp[j] + dp[j - num[i]]) % mod;
	cout<< dp[t] << endl;
}
