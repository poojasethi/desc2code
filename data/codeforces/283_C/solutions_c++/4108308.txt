#include<cstdio>
#include<cstring>
#define N 301
#define M 100001
#define MOD 1000000007
#define LL long long
int v[N],g[N],pr[N],ls[N];


int pd[N][M][2];
int n;

int solve(int p,int m,bool c){
	if(m<0) return 0;
	if(p>n) return m==0;
	
	int& ans=pd[p][m][c];
	if(ans!=-1) return ans;	
	ans = solve(p,m-v[p],1);
	if( ls[p] || c ){
		ans+=solve(p+1,m,0);
		if(ans>MOD) ans-=MOD;
	}
	return ans;
}

int main(){
	memset(pd,-1,sizeof pd);
	int q,val;
	scanf("%d%d%d",&n,&q,&val);
	for(int i=1;i<=n;++i)
		scanf("%d",v+i);
	
	for(int i=0;i<q;++i){
		int b,c;
		scanf("%d%d",&b,&c);
		g[b]=c;
	}

	bool ok=1;
	for(int i=1;i<=n;++i)
		if(!pr[i])
			for(int c=0,j=g[i];j && (ok&=j!=i);j=g[j],++c)
				pr[j]=1;
	if(ok){
		for(int i=1;i<=n;++i)
			if(!pr[i]){
				int j;
				for(j=i;g[j];j=g[j])
					v[g[j]]+=v[j];
				ls[j]=1;
			}
		printf("%d\n", solve(1,val,0) );
	}else
		printf("0\n");

	return 0;
}
