import sys

from itertools import izip


n = int(sys.stdin.next())

s1 = sys.stdin.next()
s2 = sys.stdin.next()

d = dict([])

distance = 0

ch_set = set([])
subs = dict([])
needed = dict([])

for (i, ch1), (j, ch2) in izip(enumerate(s1), enumerate(s2)):
    ch_set.add(ch1)
    ch_set.add(ch2)
    if ch1 != ch2:
        d[(ch1, ch2)] = i
        if ch1 in subs:
            subs[ch1].add(i)
        else:
            subs[ch1] = set([i])
        if ch2 in needed:
            needed[ch2].add(i)
        else:
            needed[ch2] = set([i])
        distance += 1

best = 0
solution = [-1, -1]


for ch1 in ch_set:
    for ch2 in ch_set:
        if ((ch1, ch2) in d) and ((ch2, ch1) in d):
            i = d[(ch1, ch2)]
            j = d[(ch2, ch1)]
            print(distance - 2)
            print("%i %i\n" % (i + 1, j + 1))
            sys.exit()


inter = set(subs.keys()).intersection(set(needed.keys()))

if inter:
    print(distance - 1)
    ch = inter.pop()
    i, j = subs[ch].pop(), needed[ch].pop()
    print('%i %i\n' % (j + 1, i + 1))
    sys.exit()

print(distance)
print('-1 -1\n')
