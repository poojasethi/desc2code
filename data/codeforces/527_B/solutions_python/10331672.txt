

# 6:49

import sys

length = int(sys.stdin.readline().rstrip())
s1 = list(sys.stdin.readline().rstrip())
s2 = list(sys.stdin.readline().rstrip())

d = {}
d2 = {}

def getHammingDist(s1, s2):
    tot = 0
    for i in xrange(len(s1)):
        if s1[i] != s2[i]:
            tot += 1
    return tot

bestSwitch = None

for idx, c in enumerate(s2):
    if s1[idx] != s2[idx]:
        needed = (s2[idx], s1[idx])
        if needed in d:
            idx1 = d[needed]
            s1[idx1], s1[idx] = s1[idx], s1[idx1]
            print getHammingDist(s1, s2)
            print idx1 + 1, idx + 1
            sys.exit()
        t = (s1[idx], s2[idx])
        d[t] = idx
        

for idx, c in enumerate(s2):
    if s1[idx] != s2[idx]:
        d2[c] = idx

for idx, c in enumerate(s1):
    if s1[idx] != s2[idx] and c in d2:
        idx1, idx2 = d2[c], idx
        s1[idx1], s1[idx2] = s1[idx2], s1[idx1]
        print getHammingDist(s1, s2)
        print idx + 1, d2[c] + 1
        sys.exit()
        


print getHammingDist(s1, s2)
print -1, -1



