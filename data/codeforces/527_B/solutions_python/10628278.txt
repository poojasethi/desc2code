from sys import stdin
from string import ascii_lowercase

n, s, t = int(stdin.readline()), stdin.readline(), stdin.readline()
best = None
good = None
d = dict()

for i in xrange(0, n):
    a, b = s[i], t[i]
    if a != b:
        d[a, b] = i
        if (b, a) in d:
            # ab-ba
            best = i, d[b, a]
        else:
            for _ in ascii_lowercase:
                if (_, a) in d:
                    # ab-*a
                    good = i, d[_, a]
                elif (b, _) in d:
                    # ab-b*
                    good = i, d[b, _]

def _hamming(s, t):
    h = 0
    for i in xrange(0, n):
        if s[i] != t[i]:
            h = h + 1
    return h

if best:
    print _hamming(s, t) - 2
    print '%d %d' % (best[0] + 1, best[1] + 1)
elif good:
    print _hamming(s, t) - 1
    print '%d %d' % (good[0] + 1, good[1] + 1)
else:
    print _hamming(s, t)
    print '-1 -1'
