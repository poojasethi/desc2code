def print_dist(s, t):
    required = {}
    available = {}
    pairs = {}
    dist = 0
    for i in range(len(s)):
        if s[i] != t[i]:
            required[t[i]] = i
            available[s[i]] = i
            pairs[(t[i], s[i])] = i
            dist += 1
    for x, y in pairs.keys():
        if (y, x) in pairs:
            print dist - 2
            print pairs[(x, y)] + 1, pairs[(y, x)] + 1
            return
    common = set(required.keys()) & set(available.keys())
    if len(common) > 0:
        el = common.pop()
        print dist - 1
        print available[el] + 1, required[el] + 1
    else:
        print dist
        print "-1 -1"

raw_input()

s = list(raw_input())
t = list(raw_input())

assert len(s) == len(t)
print_dist(s, t)
