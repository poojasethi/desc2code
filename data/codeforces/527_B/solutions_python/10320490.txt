

def solve(l, S, T):
    d = [[[] for j in xrange(26)] for i in xrange(26)]

    diff = 0
    for s, t in zip(S, T):
        if s != t:
            diff += 1

    for i, (s, t) in enumerate(zip(S, T)):
        if s == t:
            continue

        ss = ord(s) - ord("a")
        tt = ord(t) - ord("a")
        d[ss][tt].append(i)

        if d[tt][ss]:
            print diff - 2
            print d[tt][ss][0] + 1, i + 1
            return

    for i in xrange(26):
        for j in xrange(26):
            if i == j:
                continue
            for k in xrange(26):
                if j == k:
                    continue
                if d[i][j] and d[j][k]:
                    print diff - 1
                    print d[i][j][0] + 1, d[j][k][0] + 1
                    return

    print diff
    print -1, -1


if __name__ == "__main__":
    l = int(raw_input())
    S = raw_input()
    T = raw_input()
    solve(l, S, T)


# library
def two_dim_array(n, initialize):
    return [[initialize for _ in xrange(n)] for _ in xrange(n)]

