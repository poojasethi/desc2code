#include<cstdio>
#include<cstring>
#include<algorithm>
#define fo(i,a,b) for(i=a;i<=b;++i)
#define fd(i,a,b) for(i=a;i>=b;--i)
typedef long long LL;
using namespace std;
const int mn=101000,mm=mn*2;
struct list
{
    int tt,la[mn],next[mm],y[mm],co[mm];
    void add(int i,int j,int v){next[++tt]=la[i],la[i]=tt,y[tt]=j,co[tt]=v;}
}e;
struct edge{int x,y,v;}w[mn];
struct link{int x,y;LL v;}E[mm];
struct node{int k;LL v;}q[mm];
int pre[mn],f[mn];
LL dis[mn],ans;
bool vis[mn];
int n,m,K,i,j,k,v,L,p;
bool cmp(node a,node b){return a.v>b.v;}
bool cmp1(link a,link b){return a.v<b.v;}
void push(int k,LL v)
{
    q[++L].k=k,q[L].v=v;
    push_heap(q+1,q+L+1,cmp);
}
int find(int r)
{
    int t=r,pa;
    for(;f[t]!=t;t=f[t]);
    for(;r!=t;r=pa)pa=f[r],f[r]=t;
    return t;
}
int main()
{
    scanf("%d%d",&n,&m,&K);
    fo(i,1,m)
    {
        scanf("%d%d%d",&w[i].x,&w[i].y,&w[i].v);
        e.add(w[i].x,w[i].y,w[i].v),e.add(w[i].y,w[i].x,w[i].v);
    }
    scanf("%d",&K);
    if(K==0){printf("0\n");return 0;}
    memset(dis,60,sizeof dis);
    fo(i,1,K)
    {
        scanf("%d",&j);
        dis[j]=0,pre[j]=j,push(j,0);
    }
    while(L)
    {
        i=q[1].k;
        pop_heap(q+1,q+1+L,cmp),--L;
        if(vis[i])continue;
        vis[i]=1;
        for(p=e.la[i];p;p=e.next[p])
        {
            if(dis[i]+e.co[p]<dis[e.y[p]])
            {
                dis[e.y[p]]=dis[i]+e.co[p],pre[e.y[p]]=pre[i];
                push(e.y[p],dis[e.y[p]]);
            }
        }
    }
    fo(i,1,m)
    {
        E[i].x=pre[w[i].x],E[i].y=pre[w[i].y];
        E[i].v=w[i].v+dis[w[i].x]+dis[w[i].y];
    }
    sort(E+1,E+1+m,cmp1);
    fo(i,1,n)f[i]=i;
    fo(i,1,m)
    {
        j=find(E[i].x),k=find(E[i].y);
        if(j!=k)
        {
            ans+=E[i].v;
            f[j]=k;
        }
    }
    printf("%I64d\n",ans+dis[1]);
    return 0;
}