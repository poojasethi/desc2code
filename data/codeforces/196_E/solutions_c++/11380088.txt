#include<bits/stdc++.h>

using namespace std;

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define mod ((int)1e9+7)
#define inf mod
#define sol (root*2)
#define sag (root*2+1)
#define orta ((bas+son)/2)
#define ll long long
#define N (int)1e6+10
#define endl '\n'

int n,m,i,j,x,y,k,from,v;
int W[100005],ata[100005];

long long val,ans;
long long D[100005];

bool H[100005],P[100005];

priority_queue<pair<pair<long long,int>,int> > PQ;
priority_queue<pair<long long,pii > > Kr;

vector<pii > V[100005],M[100005];
pair<int,pii > Edges[100005];

int atabul(int x){
	return ata[x]==x ? x : ata[x]=atabul(ata[x]);
}

main(){

	cin>>n>>m;

	for(i=1 ; i<=m ; i++){
		
		scanf("%d %d %d",&x,&y,&v);

		V[x].pb(mp(y,v));
		V[y].pb(mp(x,v));

		Edges[i]=mp(v,mp(x,y));
	}

	cin>>k;

	for(i=1 ; i<=k ; i++){
		scanf("%d",&x);
		PQ.push(mp(mp(0,x),x));
		P[x]=1;
	}
	
	while(!PQ.empty()){
		
		val=-PQ.top().st.st;
		x=PQ.top().st.nd;
		from=PQ.top().nd;
	
		PQ.pop();

		if(W[x])
			continue;
		
		W[x]=from;
		D[x]=val;

		for(i=0 ; i<V[x].size() ; i++)
			PQ.push(mp(mp(-val-V[x][i].nd,V[x][i].st),from));

	}

	for(i=1 ; i<=m ; i++){
		x=Edges[i].nd.st;
		y=Edges[i].nd.nd;
		v=Edges[i].st;

		if(W[x]!=W[y])
			Kr.push(mp(-D[x]-D[y]-v,mp(W[x],W[y])));
	}

	for(i=1 ; i<=n ; i++)
		ata[i]=i;

	ans=D[1];

	while(!Kr.empty()){
		
		val=-Kr.top().st;
		x=atabul(Kr.top().nd.st);
		y=atabul(Kr.top().nd.nd);

		Kr.pop();

		if(x==y)
			continue;

		ata[x]=y;

		ans+=val;

	}

	printf("%lld",ans);

}
