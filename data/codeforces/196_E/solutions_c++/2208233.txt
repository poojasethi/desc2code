#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <cmath>
#include <vector>
#include <string.h>
#define ll long long
#define N 100005
#define pb push_back
#define mp make_pair
#define pii pair<long long,int>
using namespace std;
const ll inf=(ll)1e+18;
struct node
{
 int v,next,w;
}g[N*2];
int n,head[N],cnt,fa[N],p[N];
ll d[N];
priority_queue<pii>v;
void add(int a,int b,int c)
{
 g[cnt].v=b,g[cnt].w=c,g[cnt].next=head[a],head[a]=cnt++;
}
int find(int a)
{
 if(a==fa[a])return a;
 return fa[a]=find(fa[a]);
}
int Union(int x,int y)
{
 x=find(x),y=find(y);
 if(x==y)return 0;
 if(rand()&1)swap(x,y);
 fa[x]=y;
 return 1;
}
vector<pair<ll,pii> >a;
int main()
{
   // freopen("in.txt","r",stdin);
    int i,j,aa,b,c,u,n,m,x;
    while(~scanf("%d%d",&n,&m))
    {
     cnt=0;
     memset(head,-1,sizeof(head));
     while(m--)
     {
      scanf("%d%d%d",&aa,&b,&c);
      add(aa,b,c);add(b,aa,c);
     }
     for(i=1;i<=n;i++)d[i]=inf;
     scanf("%d",&m);
     while(!v.empty())v.pop();
     for(i=0;i<m;i++)
     {
      scanf("%d",&x);
      p[x]=x;
      d[x]=0;
      v.push(mp(0,x));
     }
     while(!v.empty())
     {
      u=v.top().second;
      ll l=-v.top().first;
      v.pop();
      if(d[u]!=l)continue;
      for(i=head[u];i+1;i=g[i].next)
      {
       j=g[i].v;
       if(d[j]>d[u]+g[i].w)
       {
        d[j]=d[u]+g[i].w;
        p[j]=p[u];
        v.push(mp(-d[j],j));
       }
      }
     }
     for(i=1;i<=n;i++)fa[i]=i;
     //for(i=1;i<=n;i++)printf("%d %I64d\n",p[i],d[i]);
     ll ans=d[1];a.clear();
     for(i=1;i<=n;i++)
     for(j=head[i];j+1;j=g[j].next)
     {
      a.pb(mp(d[i]+d[g[j].v]+g[j].w,mp(p[i],p[g[j].v])));
     }
     sort(a.begin(),a.end());
     for(i=0;i<a.size();i++)
     {
      if(Union(a[i].second.first,a[i].second.second))
      ans+=a[i].first;
     }
     printf("%I64d\n",ans);
    }
    return 0;
}
