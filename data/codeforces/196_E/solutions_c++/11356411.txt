#include<bits/stdc++.h>
 
using namespace std;
 
#define dbg(x) cerr << (#x) << " --> " << (x) << endl
#define lli long long int
#define pii pair<int,int>
#define mod 1000000007
#define N 100005
#define mp make_pair
#define pb push_back
#define nd second
#define st first
#define endl '\n'
#define inf mod
#define sag (sol|1)
#define sol (root<<1)
#define ort ((bas+son)>>1)
#define int long long

int ata[N],n,m,i,j,k,x,y,z;
vector< pii > arr[N],edge[N];
int te[N],T,ans;
int H[N],St,D[N],Ne[N];
priority_queue< pii > q;

int atabul(int x){
	if(ata[x] == x)
		return x;
	return ata[x] = atabul(ata[x]);
}

int mst(){

	int ans = D[1];

	priority_queue< pair< int , pii > > xx;

	for(int i=1 ; i<=n ; i++){
		for(int j=0 ; j<edge[i].size() ; j++)
			xx.push(mp(-edge[i][j].nd , mp(i , edge[i][j].st)));
		ata[i] = i;
	}

	int s = 0;

	while(!xx.empty()){
		int v = -xx.top().st;
		int x = xx.top().nd.st;
		int y = xx.top().nd.nd;
		xx.pop();

		int atax = atabul(x);
		int atay = atabul(y);
	
		if(atax == atay)
			continue;

		ata[atax] = atay;

		ans += v;
	}

	return ans;
}

void f(){
	
	int i,j;

	while(!q.empty()){
		int v = -q.top().st;
		int x = q.top().nd;
	
		q.pop();

		if(D[x] != v)
			continue;

		for(int i=0 ; i<arr[x].size() ; i++){
			int y = arr[x][i].st;

			if(D[x]+arr[x][i].nd < D[y]){
				D[y] = D[x] + arr[x][i].nd;
				Ne[y] = Ne[x];
				q.push(mp(-v-arr[x][i].nd , y));
			}
		}
	}
	for(i=1 ; i<=n ; i++)
		for(j=0 ; j<arr[i].size() ; j++){
			
			int x=i;
			int y=arr[i][j].st;

			if(Ne[x] != Ne[y]){
				edge[Ne[x]].pb(mp(Ne[y] , arr[i][j].nd + D[x] + D[y]));
				edge[Ne[y]].pb(mp(Ne[x] , arr[i][j].nd + D[x] + D[y]));
			}
		}
}

main(){
	cin >> n >> m;

	for(i=1 ; i<=m ; i++){
		cin >> x >> y >> z;
		arr[x].pb(mp(y,z));
		arr[y].pb(mp(x,z));
	}
	
	cin >> T;

	memset(D,4,sizeof D);

	for(i=1 ; i<=T ; i++){
		cin >> x;
		St = x;
		te[x] = 1;
		q.push(mp(D[x]=0,Ne[x] = x));
	}

	f();

	cout << mst() << endl;

}
