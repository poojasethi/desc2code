#inp = open("input.txt", "r")
#R=lambda:map(int, inp.readline().strip().split(' '))
R=lambda:map(int, raw_input().strip().split(' '))

n,k,p=R()
arr=R()

even_arr=[x for x in arr if x % 2 == 0]
odd_arr=[x for x in arr if x % 2 != 0]

need_odd = k - p

def print_list(arr):
	print len(arr),
	for item in arr:
		print item,
	print ''

def print_odd(odd_arr, even_arr,o,e):
	if o == 0:
		return odd_arr, even_arr, o, e
	if o == 1 and e == 0:
		odd_arr.extend(even_arr)
		print_list(odd_arr)
		return 0,0,0,0
	else:
		print_list([odd_arr[0]])
		return odd_arr[1:],even_arr, o-1, e

def print_even(odd_arr, even_arr, e):
	if e == 0:
		return odd_arr, even_arr, e
	if e == 1:
		even_arr.extend(odd_arr)
		print_list(even_arr)
		return odd_arr,even_arr,0
	else:
		if len(even_arr) == 0:
			print_list(odd_arr[0:2])
			return odd_arr[2:],even_arr, e - 1
		else:
			print_list([even_arr[0]])
			return odd_arr, even_arr[1:], e - 1

if need_odd > len(odd_arr) or (len(odd_arr) - need_odd) % 2 != 0 or (len(even_arr) + (len(odd_arr) - need_odd) / 2) < p:
	print "NO"
else:
	print 'YES'

	for i in xrange(need_odd):
		if i == need_odd - 1 and p == 0:
			even_arr.extend(odd_arr[i:])
			print_list(even_arr)
		else:
			print '1', odd_arr[i]
	
	odd_idx = need_odd			
	for i in xrange(p):
		if i == p - 1:
			if i < len(even_arr):
				even_arr.extend(odd_arr[odd_idx:])
				print_list(even_arr[i:])
			else:
				print_list(odd_arr[odd_idx:])
		else:
			if i >= len(even_arr):
				print '2', odd_arr[odd_idx], odd_arr[odd_idx + 1]
				odd_idx += 2
			else:
				print '1', even_arr[i]

#	while True:
#		odd_arr,even_arr,need_odd,p = print_odd(odd_arr,even_arr, need_odd, p)
#		if need_odd == 0:
#			break

#	while  True:
#		if p == 0:
#			break
#		odd_arr, even_arr, p = print_even(odd_arr,even_arr,p)
