even=[]
odd=[]
n,k,p = map(int, raw_input().split())
numbers = map(int,raw_input().split())
res=[]
co=0
ce=0

def seprateNumber():
    for i in numbers:
        if i%2==1:
            odd.append(i)
        else:
            even.append(i)

def constructEven():
    global ce
    if p==0:
        return True
    if p > (len(even) + ((len(odd)-k+p)/2)):
            return False

    e=min(len(even),p)
    for i in range(e):
        temp=[]
        temp.append(even.pop())
        res.append(temp)
        ce+=1

    rem=p-ce
    if  len(odd)==0 and rem > 0:
        return False
    else:
        for i in range(rem):
            if len(odd) == 1:
                break
            temp=[]
            if odd:
                temp.append(odd.pop())
            if odd:
                temp.append(odd.pop())
            res.append(temp)
            ce+=1
    for i in range(len(even)):
        res[0].append(even.pop())
    return True

def constructOdd():
    global co
    if k-p > len(odd):
        return False
    else:
        e=min(len(odd),k-p)
        for i in range(e):
              temp=[]
              temp.append(odd.pop())
              res.append(temp)
              co+=1
    if not odd and co!=k-p:
        return False
    elif len(odd)%2==1:
        return False
    elif len(odd)%2==1 and p<=0:
        return False
    else:
        for i in range(len(odd)):
            res[0].append(odd.pop())
        for i in range(len(even)):
            res[0].append(even.pop())
    return True

def main():
    seprateNumber()
    y=constructEven()
    z=constructOdd()
    if y and z:
        print "YES"
        for i in res:
            print len(i),
            for j in i:
                print j,
            print "\n"

    else:
        print "NO"


main()
