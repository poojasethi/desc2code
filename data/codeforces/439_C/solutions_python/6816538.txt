n, k, p = map(int, raw_input().strip().split())
a = map(int, raw_input().strip().split())

nodd = sum(map(lambda x: x%2, a))
total = sum(a)
odd = [x for x in a if x % 2 == 1]
even = [x for x in a if x % 2 == 0]
neven = len(even)

if (total % 2) != ((k-p) % 2):
    print "NO"

elif (k-p > nodd) or ((nodd-(k-p)) % 2 == 1) or ((p-neven)*2 > nodd-(k-p)):
    print "NO"
else:
    print "YES"
    if p == 0: # no even group
        for i in xrange(0, k-p-1):
            print 1, odd[i]
        print nodd - (k-p-1) + len(even), 
        for x in odd[k-p-1:]:
            print x,
        for x in even:
            print x,
    elif p == k: # no odd group
        oid, eid = 0, 0
        while 1:
            if p == 1:
                break
            if eid < len(even):
                print 1, even[eid]
                eid += 1
            elif oid < len(odd):
                print 2, odd[oid], odd[oid+1]
                oid += 2
            p -= 1
        print len(odd) - oid + len(even) - eid,
        for x in odd[oid:]:
            print x,
        for x in even[eid:]:
            print x,
    else:
        for i in xrange(0, k-p):
            print 1, odd[i]
        
        oid, eid = k-p, 0
        while 1:
            if p == 1:
                break
            if eid < len(even):
                print 1, even[eid]
                eid += 1
            elif oid < len(odd):
                print 2, odd[oid], odd[oid+1]
                oid += 2
            p -= 1
        print len(odd) - oid + len(even) - eid,
        for x in odd[oid:]:
            print x,
            
        for x in even[eid:]:
            print x,
            