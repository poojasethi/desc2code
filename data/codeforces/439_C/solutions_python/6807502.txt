import sys


n, k, p = map(int, raw_input().split())

a = map(int, raw_input().split())
evens = filter(lambda x: x % 2 == 0, a)
odds = filter(lambda x: x % 2 == 1, a)

def no():
    print "NO"
    sys.exit(0)

# need p odd numbers from k 
p = k - p 
if (p % 2 == 1 and len(odds) % 2 == 0) or (p % 2 == 0 and len(odds) % 2 == 1):
    no()

if (p > len(odds)):
    no()


if k - p  > len(evens) + (len(odds) - p) / 2:
    no()

print "YES"
lastOddList = []
for x in xrange(p - 1):
    print 1, odds.pop()

if (p > 0):
    lastOddList.append(odds.pop())



#import ipdb; ipdb.set_trace()
lastEvenList = []
for x in xrange(k - p - 1):
    if len(evens):
        print 1, evens.pop()
    else:
        print 2, odds.pop(), odds.pop()

if (k - p > 0):
    if len(evens):
        lastEvenList.append(evens.pop())
    else:
        lastEvenList.append(odds.pop())
        lastEvenList.append(odds.pop())

if (len(evens) > 0):
    if lastOddList:
        lastOddList += evens
    else:
        lastEvenList += evens

if (len(odds) > 0):
    if lastOddList:
        lastOddList += odds
    else:
        lastEvenList += odds

if lastEvenList:
    print len(lastEvenList), ' '.join(map(str, lastEvenList))
if lastOddList:
    print len(lastOddList), ' '.join(map(str, lastOddList))


