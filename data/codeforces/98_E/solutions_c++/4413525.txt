#include <iostream>
#include <iomanip>
#include <algorithm>

using namespace std;

int N, M;
double P[1002][1002];

double get(int x, int y)
{
    if (y == 0) return 1;
    if (x == 0) return 1.0 / (y + 1);
    if (P[x][y] != -1) return P[x][y];

    double check_play = 1.0 * y / (y + 1) * (1.0 - get(y - 1, x));
    double check_bluff = 1.0;
    double move_play = 1.0 / (y + 1) + 1.0 * y / (y + 1) * (1.0 - get(y - 1, x));
    double move_bluff = 1.0 - get(y, x - 1);

    // prob * check_play + (1 - prob) * move_play = prob * check_bluff + (1 - prob) * move_bluff
    // prob * (check_play - move_play - check_bluff + move_bluff) = move_bluff - move_play

    double prob = (move_bluff - move_play) / (check_play - move_play - check_bluff + move_bluff);
    P[x][y] = max(1.0 / (y + 1), prob * check_play + (1.0 - prob) * move_play);

    return P[x][y];
}

int main()
{
    cin >> N >> M;

    for (int i = 0; i <= 1000; ++i)
        for (int j = 0; j <= 1000; ++j)
            P[i][j] = -1;

    double result = get(N, M);
    cout << fixed << setprecision(9) << result << ' ' << 1 - result << '\n';
}
