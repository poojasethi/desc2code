//98E Hewr
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <vector>
#include <queue>
#include <iomanip>
using namespace std;
#define fo(i,a,b) for (int i = a; i <= b; ++i)
#define fd(i,a,b) for (int i = a; i >= b; --i)
#define fe(i,x) for (int i = g[x], y = E[i].y; i; i = E[i].l, y = E[i].y)
#define forall(i, x) for (typeof((x).begin()) i = (x).begin(); i != (x).end(); ++i)
#define pb push_back
#define SIZE(x) ((int) (x).size())
#define MP make_pair
#define fi first
#define se second
#define UNIQUE(x) x.resize(unique(x.begin(), x.end()) - x.begin())
#define clr(a,x) memset(&a, x, sizeof(a))
#define move(a,b) memcpy(&b, &a, sizeof(a))
#define Plus(a,b) (((LL) (a) + (b)) % mo)
#define Minus(a,b) ((((LL) (a) - (b) ) % mo + mo) % mo)
#define Mul(a,b) ((LL) (a) * (b) % mo)
#define updmin(a,b) (a = min(a, b))
#define updmax(a,b) (a = max(a, b))
#define sqr(x) ((x) * (x))

typedef long long LL;
typedef long double LD;
typedef pair<int, int> PII;
typedef vector<int> VI;

const double eps = 1e-10;
const int oo = ~0u >> 2, mo = (int) 1e9 + 7;
const int mn = 1100;

double f[mn][mn];
bool g[mn][mn];
int n, m;

double dp(int n, int m){
	if (g[n][m]) return f[n][m];
	g[n][m] = 1;
	if (!n) return f[n][m] = 1. / (1 + m);
	if (!m) return f[n][m] = 1;
	double A = 1. * m / (m + 1) * (1 - dp(m - 1, n));
	double B = 1. / (m + 1) + A;
	double C = 1 - dp(m, n - 1);
	double p = (C - 1) / (A - 1 + C - B);
	return f[n][m] = A * p + 1 - p;
}

int main(){
	cin >> n >> m;
	dp(n, m);
	cout << fixed << setprecision(10) << f[n][m] << " " << 1 - f[n][m] << endl;
}
