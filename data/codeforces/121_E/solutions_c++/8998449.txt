#include <bits/stdc++.h>

#define MAX_N 100010
int Lucky[MAX_N];
int sum[MAX_N];

void add(int x, int c) {
	while(x < MAX_N) {
		sum[x] += c;
		x += x&-x;
	}
}

int getSum(int x) {
	int ret = 0;
	while(x > 0) {
		ret += sum[x];
		x -= x&-x;
	}
	return ret;
}

void pre() {
	for(int bit = 1; bit < 5; bit ++) {
		for(int i = 0; i < 1 << bit; i ++) {
			int num = 0;
			for(int j = bit - 1; j >= 0; j --) {
				if(i >> j & 1) {
					num = num * 10 + 7;
				} else 
					num = num * 10 + 4;
			}
		//	printf("%d..\n", num);
			Lucky[num] = 1;
		}
	}
}
int a[MAX_N];
int main() {
	int N, M;
	pre();
	scanf("%d%d", &N, &M);
	for(int i = 1; i <= N; i ++) {
		scanf("%d", a + i);
		if(Lucky[a[i]])
			add(i, 1);
	}
	while(M --) {
		char op[10];
		int L, R;
		scanf("%s %d %d", op, &L, &R);
		if(*op == 'c') {
			int ans = getSum(R) - getSum(L - 1);
			printf("%d\n", ans);
		} else {
			int d;
			scanf("%d", &d);
			for(int i = L; i <= R; i ++) {
				if(Lucky[a[i]])
					add(i, -1);
				a[i] += d;
				if(Lucky[a[i]])
					add(i, 1);
			}
		}
	}
	return 0;
}


