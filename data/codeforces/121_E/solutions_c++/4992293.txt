#include <algorithm>
#include <stdio.h>
#define  maxs      10003
#define  maxn      100003
using    namespace std;

int n,m;
int ar[maxn];
int tree[maxn];
bool lucky[maxs];

int Query(int x)
{
  int res=0;
  while(x)
  {
    res+=tree[x];
    x-=(x&(-x));
  }
  return res;
}

void Update(int x , int add)
{
  while(x<=n)
  {
    tree[x]+=add;
    x+=(x&(-x));
  }
}

void FindLucky(int x)
{
  if(x>=maxs)     return;
  if(x)           lucky[x]=true;
  FindLucky(10*x+4);
  FindLucky(10*x+7);
}

int main()
{
  FindLucky(0);
  scanf("%d%d",&n,&m);
  for(int i=1 ; i<=n ; i++)
  {
    scanf("%d",&ar[i]);
    if(lucky[ar[i]]) Update(i,+1);
  }
  for(int i=0,x,y,z ; i<m ; i++)
  {
    char s[10];
    scanf("%s%d%d",s,&x,&y);
    if(s[0]=='c')
      printf("%d\n",Query(y)-Query(x-1));
    else
    {
      scanf("%d",&z);
      for(int j=x ; j<=y ; j++)
      {
        if(lucky[ar[j]] && !lucky[ar[j]+z]) Update(j,-1);
        if(!lucky[ar[j]] && lucky[ar[j]+z]) Update(j,+1);
        ar[j]+=z;
      }
    }
  }
  return 0;
}
