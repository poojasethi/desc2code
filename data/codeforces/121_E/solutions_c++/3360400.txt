# include<iostream>
# include<algorithm>
# include<cstdio>
# include<cstring>
using namespace std;
const int N = 100000+10;
int lucky[N],a[N],tree[N];
int n,m;

void dfs(int x)
{
    if(x>10000) return;
    lucky[x] = 1;
    dfs(x*10+4);
    dfs(x*10+7);
}

int lowbit(int x)
{
    return x&(-x);
}

void add(int x,int val)
{
    for(int i=x;i<=N;i+=lowbit(i))
            tree[i]+=val;
}

int getsum(int x)
{
    int sum = 0;
    for(int i=x;i>0;i-=lowbit(i))
        sum+=tree[i];
    return sum;
}

int main()
{
    cin>>n>>m;
    memset(tree,0,sizeof(tree));
    memset(lucky,0,sizeof(lucky));
    dfs(0);
    for(int i=1;i<=n;++i)
    {
        scanf("%d",a+i);
        if(lucky[a[i]]) add(i,1);
    }
    char s[11];
    int l,r,z;
    for(int i=0;i<m;++i)
    {
        scanf("%s",s);
        if(s[0] == 'c')
        {
            scanf("%d%d",&l,&r);
            cout<<(getsum(r)-getsum(l-1))<<endl;
        }
        else
        {
            scanf("%d%d%d",&l,&r,&z);
            for(int i=l;i<=r;++i)
            {
                if(lucky[a[i]]) add(i,-1);
                a[i]+=z;
                if(lucky[a[i]]) add(i,1);
            }
        }
    }
    return 0;
}
