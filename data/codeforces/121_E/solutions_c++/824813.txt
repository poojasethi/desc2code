#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<string>
#include<cmath>
using namespace std;

const int maxn = 100000 + 10;
int tree[maxn], a[maxn];
bool luck[maxn];
int n, m;

void insert(int x, int v){
    if(x == 0) return;
    while(x <= n){
        tree[x] += v;
        x += x & -x;
    }
}

int query(int x){
    int cnt = 0;
    while(x > 0){
        cnt += tree[x];
        x -= x & -x;
    }
    return cnt;
}

void preDeal(int n){
    if(n > 100000) return;
    luck[n] = true;
    preDeal(n * 10 + 4);
    preDeal(n * 10 + 7);
}

int main(){
    preDeal(0);
    scanf("%d%d", &n, &m);
    for(int i = 1; i <= n; i++){
        scanf("%d", &a[i]);
        if(luck[a[i]]) insert(i, 1);
    }
    int x, y, v;
    char command[10];
    for(int i = 1; i <= m; i++){
        scanf("%s", command);
        if(command[0] == 'a'){
            scanf("%d%d%d", &x, &y, &v);
            for(int j = x; j <= y; j++){
                if(luck[a[j]])
                    insert(j, -1);
                a[j] += v;
                if(luck[a[j]])
                    insert(j, 1);
            }
        }else{
            scanf("%d%d", &x, &y);
            printf("%d\n",query(y) - query(x - 1));
        }
            
    }
    return 0;
}