#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>

using namespace std;

int main() {
	int n, m;
	scanf("%d %d", &n, &m);
	if (m == 0) {
		printf("%d\n", n);
	} else {
		int trash1, trash2;
		scanf("%d %d", &trash1, &trash2);
		int xn[n], xm[m];
		for (int i = 0; i < n; ++i) {
			scanf("%d", &xn[i]);
		}
		for (int j = 0; j < m; ++j) {
			scanf("%d", &xm[j]);
		}
		int choice[n];
		int minDist[m];
		fill(minDist, minDist + m, 1e8);
		int j = 0;
		for (int i = 0; i < n; ++i) {
			while (j < m - 1 && xm[j + 1] <= xn[i]) {
				++j;
			}
			if (j == m - 1 || abs(xn[i] - xm[j]) < abs(xn[i] - xm[j + 1]) || (abs(
					xn[i] - xm[j]) == abs(xn[i] - xm[j + 1]) && (minDist[j] == 1e8
					|| minDist[j] == abs(xn[i] - xm[j])))) {
				choice[i] = j;
			} else {
				choice[i] = j + 1;
			}
			minDist[choice[i]] = min(minDist[choice[i]], abs(xn[i] - xm[choice[i]]));
		}

		int ans = 0;
		for (int i = 0; i < n; ++i) {
			if (minDist[choice[i]] != abs(xn[i] - xm[choice[i]])) {
				++ans;
			}
		}
		printf("%d\n", ans);
	}
	return 0;
}
