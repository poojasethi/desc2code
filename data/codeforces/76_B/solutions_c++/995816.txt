#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <queue>

#define LL long long
#define mp(x, y) make_pair(x, y)
#define pb(x) push_back(x)
#define size(S) S.size()

using namespace std;

const int maxn=100010;
int n, m, a[maxn], b[maxn], x, y, T[maxn], ans, M[maxn];
bool v[maxn];

int main(){
	cin.sync_with_stdio(false);
	cin>>n>>m>>x>>y;
	for (int i=0; i<n; i++) cin>>a[i];
	for (int i=0; i<m; i++) cin>>b[i];

	memset(T, 60, sizeof(T));
	for (int i=0, now=0; i<m; i++){
		while (now<n-1 && abs(a[now]-b[i])>abs(a[now+1]-b[i])) now++;
		T[i]=abs(a[now]-b[i]);
	}
	for (int i=0, now=0; i<n; i++){
		while (now<m-1 && abs(a[i]-b[now])>abs(a[i]-b[now+1])) now++;
		int D=abs(a[i]-b[now]);
		if (!v[now] || (v[now] && D==M[now])) v[now]=true, M[now]=D, ans++;
		else if (now+1<m && abs(a[i]-b[now+1])==D && (!v[now+1] || (v[now+1] && D==M[now+1]))) v[now+1]=true, M[now+1]=D, ans++;
		else if (D<M[now]) M[now]=D;
	}
	cout<<n-ans<<endl;
}
