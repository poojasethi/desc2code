#include <cstdio>
#include <algorithm>
#include <cstring>
#define N 100005
#define INF (1<<30)
#define FOR(i,s,e) for (int i=(s); i<(int)(e); i++)
using namespace std;

int n,m,a[N],b[N],c[N],d[N],ch[N],cnt[N],t,ret;

int dist(int i,int j){return abs(a[i]-b[j]);}

int main(){

	scanf("%d%d%*d%*d", &n, &m);
	FOR(i,0,n) scanf("%d",&a[i]);
	FOR(i,0,m) scanf("%d",&b[i]), d[i]=INF;
	
	t=0;
	FOR(i,0,n){
		while (t<m-1 && dist(i,t+1)<dist(i,t)) t++;
		
		c[i] = t;
		if (t<m-1 && dist(i,t) == dist(i,t+1)) ch[i] = 2;
		else{
			ch[i] = 1;
			d[t] = min(d[t],dist(i,t));
		}
	}
	
	FOR(i,0,n){
		if (ch[i]==1 && d[c[i]] == dist(i,c[i])) cnt[c[i]]++;
	}
	
	FOR(i,0,n){
		if (ch[i]==2){
			t = c[i];
			if (d[t]==INF) d[t] = dist(i,t);
			else if (d[t+1]==INF){
				if (d[t] != dist(i,t)) d[t+1] = dist(i,t+1), cnt[t+1] = 1;
			}
			else if (dist(i,t)<d[t]&&dist(i,t+1)<d[t+1]){
				if (cnt[t]<cnt[t+1]) d[t]=dist(i,t);
				else d[t+1]=dist(i,t+1);
			}
		}
	}
	
	FOR(i,0,n){
		if (ch[i]==1 && d[c[i]] == dist(i,c[i])) ret++;
		if (ch[i]==2 && (d[c[i]] == dist(i,c[i])||d[c[i]+1] == dist(i,c[i]+1))) ret++;
	}
	printf("%d\n",n-ret);

	return 0;
}
