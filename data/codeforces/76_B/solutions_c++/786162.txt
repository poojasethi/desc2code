#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
int M,C;
int che[200000],mic[200000];
void get_data(){
	scanf("%d%d%*d%*d",&M,&C);
	int i;
	for(i=0;i<M;i++)scanf("%d",&mic[i]);
	sort(mic,mic+M);
	for(i=0;i<C;i++)scanf("%d",&che[i]);
	sort(che,che+C);
}

int markc[200000];
void run(){
	if(!C){
		printf("%d\n",M);
		return;
	}
	int i,cnt=0,c=-1,dis;
	memset(markc,-1,sizeof(markc));
	for(i=0;i<M;i++){
		for(c++;c<C;c++){
			if(che[c]>mic[i])break;
		}
		c--;
		if(c==-1){
			dis=che[0]-mic[i];
			if(markc[0]!=-1)cnt++;
			markc[0]=dis;
		}else if(c+1==C){
			if(markc[c]!=-1&&markc[c]!=mic[i]-che[c]){
				cnt++;
				if(markc[c]>mic[i]-che[c])markc[c]=mic[i]-che[c];
			}else markc[c]=mic[i]-che[c];
		}else{
			if(mic[i]-che[c]==che[c+1]-mic[i]){
				if(markc[c]==-1||markc[c]==mic[i]-che[c])markc[c]=mic[i]-che[c];
				else markc[c+1]=mic[i]-che[c];
			}else{
				int tc;
				if(mic[i]-che[c]>che[c+1]-mic[i]){
					tc=c+1;
					dis=che[c+1]-mic[i];
				}else{
					tc=c;
					dis=mic[i]-che[c];					
				}
				if(markc[tc]==-1||markc[tc]==dis)markc[tc]=dis;
				else{
					cnt++;
					if(markc[tc]>dis)markc[tc]=dis;
				}
			}
		}
	}
	printf("%d\n",cnt);
}
int main(){
	get_data();
	run();
	return 0;
}
 					 	   	  		 		