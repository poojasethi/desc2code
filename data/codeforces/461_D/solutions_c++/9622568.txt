#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <vector>
#include <ctime>
#include <map>
#define fi first
#define se second
#define PA pair<int,int>
#define VI vector<int>
#define VP vector<PA >
#define mk(x,y) make_pair(x,y)
#define N 300010
#define mo 1000000007
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,_,l1,r1,l2,r2,an;
int x[N],y[N],z[N],f[N],b[N];
VP a[N];
inline void merge(int x,int y,int z) {
	int A=(x+y)/2,B=(x-y)/2+n+n;
	l1=min(l1,A);
	l2=min(l2,B);
	r1=max(r1,A);
	r2=max(r2,B);
	a[A].push_back(mk(B,z));
	a[B].push_back(mk(A,z));
}
inline void fail() {
	printf("0\n");
	exit(0);
}
void dfs(int x) {
	int i;
	for (i=0;i<a[x].size();i++) {
		PA A=a[x][i];
		int id=A.fi;
		if (!f[id]) {
			f[id]=1;
			b[id]=b[x]^A.se;
			dfs(id);
		} else if (b[id]^b[x]^A.se)
		fail();
	}
}
int main() {
	scanf("%d%d",&n,&m);
	For(i,1,m) {
		char p[5];
		scanf("%d%d%s",&x[i],&y[i],p);
		z[i]=p[0]=='o';
	}
	For(_,0,1) {
		l1=l2=N*10;
		r1=r2=-N*10;
		For(i,1,n) {
			if ((0+i&1)==_) merge(0,i,0);
			if ((n+1+i&1)==_) merge(n+1,i,0);
		}
		For(j,1,n) {
			if ((j+0&1)==_) merge(j,0,0);
			if ((j+n+1&1)==_) merge(j,n+1,0);
		}
		For(i,1,m) if ((x[i]+y[i]&1)==_) merge(x[i],y[i],z[i]);
		memset(f,0,sizeof(f));
		memset(b,0,sizeof(b));
		For(i,l1,r1) if (!f[i]) f[i]=1,dfs(i),an++;
		For(i,l2,r2) if (!f[i]) f[i]=1,dfs(i),an++;
		For(i,l1,r2) a[i].clear();
	}
	int re=1;
	For(i,1,an-2) re=re*2%mo;
	printf("%d\n",re);
	return 0;
}
