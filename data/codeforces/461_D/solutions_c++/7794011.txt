#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

const int maxn=1e5+5, mo=1e9+7;

int N, K, cnt, father[maxn<<1];

int get(int x)
{
	return x==father[x]?x:father[x]=get(father[x]);
}

inline void conn(int x, int y)
{
	if (get(x)!=get(y))
		father[father[x]]=father[y], cnt++;
}

inline void Restrict(int x, int y, int v)
{
	int l, r;
	l=abs(x-y)-1;
	r=N-abs(N-x-y+1);
	conn(r*2+2,l*2+2+v);
	conn(r*2+3,l*2+3-v);
}

int main()
{
	scanf("%d%d",&N,&K);
	for (int i=1;i<=2*N+3;i++) father[i]=i;
	for (int i=1;i<=K;i++)
	{
		int x, y;
		char c;
		scanf("%d%d %c",&x,&y,&c);
		Restrict(x,y,c=='x'?0:1);
	}
	for (int i=4;i<=2*N+2;i++)
		if (get(i)==get(i+1))
			return printf("0\n"), 0;
	int ans(1);
	for (int i=1;i<=N-cnt/2;i++)
		ans<<=1, ans%=mo;
	printf("%d\n",ans);
}
