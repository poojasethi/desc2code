#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,n) for (int i=a;i<n;i++)
#define per(i,a,n) for (int i=n-1;i>=a;i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define SZ(x) ((int)(x).size())
#define fi first
#define se second
typedef vector<int> VI;
typedef long long ll;
typedef pair<int,int> PII;
const ll mod=1000000007;
ll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
// head

const int N=101000;
vector<PII> e[N];
int vis[N],col[N];
int n,x,y,k;
char c;
void adde(int x,int y,int c) {
	e[x].pb(mp(y,c));
	e[y].pb(mp(x,c));
}
void add(int x,int y,int c) {
	int p=abs(x-y)-2,q=n-1-abs(x+y-n+1);
	if (p<0) p=n;
	adde(p,q,c);
}
void dfs(int u,int c) {
	vis[u]=1; col[u]=c;
	rep(j,0,SZ(e[u])) {
		int v=e[u][j].fi;
		if (vis[v]) continue;
		dfs(v,c^e[u][j].se);
	}
}
ll solve() {
	for (int i=0;i<=n;i++) vis[i]=0;
	int cnt=0;
	for (int i=n;i>=0;i--) if (!vis[i]) {
		dfs(i,0);
		++cnt;
	}
	--cnt;
	for (int i=0;i<=n;i++) rep(j,0,SZ(e[i])) {
		int v=e[i][j].fi;
		if ((col[i]^col[v])!=e[i][j].se) return 0;
	} 
	return powmod(2,cnt);
}
int main() {
	scanf("%d%d",&n,&k);
	rep(i,0,k) {
		scanf("%d %d %c",&x,&y,&c);
		add(x-1,y-1,c=='o');
	}
	printf("%I64d\n",solve());
}
