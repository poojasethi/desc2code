#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long ll;
#define N 200005
#define MOD 1000000007
int f[N];
int n, m;
ll ans;

int getf(int k)
{
    if (f[k] == k)
        return k;
    return f[k] = getf(f[k]);
}

void Union(int i, int j)
{
    i = getf(i);
    j = getf(j);
    if (i != j)
    {
        f[i] = j;
        --ans;
    }
}

ll powll(ll a, ll b)
{
    ll t = 1;
    for (; b; b >>= 1)
    {
        if (b & 1)
            t = (t * a) % MOD;
        a = (a * a) % MOD;
    }
    return t;
}

int main()
{
    char s[2];
    int i, j;
    scanf("%d%d", &n, &m);
    for (i = 0; i < 2 * (n + 2); ++i)
        f[i] = i;
    ans = n * 2;
    while(m--)
    {
        scanf("%d%d%s", &i, &j, s);
        int minx = abs(j - i);
        int maxx = min(i + j, n - i + 1 + n - j + 1);
        if (s[0] == 'o')
        {
            Union(minx * 2, maxx * 2 + 1);
            Union(minx * 2 + 1, maxx * 2);
        }
        else
        {
            Union(minx * 2, maxx * 2);
            Union(minx * 2 + 1, maxx * 2 + 1);
        }
    }
    for (i = 0; i < n + 2; ++i)
        if (getf(i * 2) == getf(i * 2 + 1))
        {
            ans = -1;
            break;
        }
    printf("%I64d\n", ans < 0 ? 0 : powll(2, ans / 2));
    return 0;
}