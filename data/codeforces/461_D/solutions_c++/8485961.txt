#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<time.h>
#include<string>
#define cl(a,b)	memset(a,b,sizeof(a))
#define max(x,y) ((x)>(y)?(x):(y))
#define min(x,y) ((x)<(y)?(x):(y))
#define REP(i,n) for(int i=0;i<n;++i)
#define REP1(i,a,b) for(int i=a;i<=b;++i)
#define REP2(i,a,b) for(int i=a;i>=b;--i)
#define MP make_pair
#define LL long long
#define ULL unsigned long long
#define X first
#define Y second
#define MAXN 400050
#define INF 1000000000
#define MOD 1000000007
using namespace std;
int fa[MAXN];
int cnt;
int getfa(int x) {
	if (fa[x] == x)
		return x;
	else
		return fa[x] = getfa(fa[x]);
}
void Union(int x, int y) {
	int f1 = getfa(x);
	int f2 = getfa(y);
	if (f1 == f2)
		return;
	fa[f1] = f2;
	cnt--;
}
int main() {
	int n, k;
	scanf("%d%d", &n, &k);
	for (int i = 0; i <= 2 * n + 4; ++i)
		fa[i] = i;
	cnt = n * 2;
	for (int i = 0; i < k; ++i) {
		int x, y;
		char c;
		scanf("%d%d %c", &x, &y, &c);
		x--;
		y--;
		int l, r;
		l = abs(x - y);
		if (x + y < n)
			r = x + y+2;
		else
			r = 2 * n - x - y;
//		printf("%d %d\n",l,r);
		if (c == 'o') {
			Union(l * 2+1, r * 2);
			Union(l * 2 , r * 2 + 1);
		} else {
			Union(l * 2 , r * 2);
			Union(l * 2+1, r * 2 + 1);
		}
	}
	int flag = 1;
	for (int i = 0; i <= n+1; ++i)
		if (getfa(i * 2) == getfa(i * 2 + 1))
		{
			flag = 0;
		}
	if (flag == 0)
		puts("0");
	else {
		int ans = 1;
		for (int i = 0; i < cnt / 2; ++i)
			ans = ans * 2 % MOD;
		printf("%d\n", ans);
	}

}
/*
4 14
4 3 o
4 2 o
3 1 o
2 3 x
2 1 o
4 1 x
4 4 o
1 4 x
2 4 o
1 2 o
1 3 o
1 1 o
3 4 o
2 2 o
*/
