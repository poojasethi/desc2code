#include <cstdio>
#include <cstdlib>
#include <algorithm>
using namespace std;
typedef long long ll;

const int N=(int)1e5+10,mo=(int)1e9+7;

int power(ll a,ll b){
	a%=mo;
	ll ans=1;
	for(;b;b>>=1,a=a*a%mo)
		if(b&1) ans=ans*a%mo;
	return ans;
}

int n,k;

struct Struct{
	int n;
	int belong[N/2],w[N/2];
	void init(int _n){
		n=_n;
		for(int i=0;i<=n;i++) belong[i]=i,w[i]=0;
	}
	int get(int x){
		if(belong[x]==x) return x;
		int t=get(belong[x]);
		w[x]^=w[belong[x]];
		return belong[x]=t;
	}
	int link(int u,int v,int c){
		int x=get(u),y=get(v);
		if(x==y)
			return w[u]^w[v]^c?-1:0;
		belong[y]=x;
		w[y]=w[u]^w[v]^c;
		return 1;
	}
	int calc(){
		int ans=0;
		for(int i=0;i<=n;i++)
			if(get(i)==i) ans++;
		ans--;
		return ans;
	}
} Struct[2];

int main(){
	scanf("%d%d",&n,&k);
	Struct[0].init(n/2+n%2);
	Struct[1].init(n/2);
	--n;
	while(k--){
		int i,j; char c; scanf("%d%d %c",&i,&j,&c); c=c=='o'; i--,j--;
		int l=abs(j-i)/2,r=(n-abs(n-j-i))/2+1;
		if(Struct[(i+j)&1].link(l,r,c)==-1)
			return puts("0"),0;
	}
	printf("%d\n",power(2,Struct[0].calc()+Struct[1].calc()));
}