#include <stdio.h>
#include <memory.h>
#include <queue>
#include <algorithm>
using namespace std;
#define M 100010
typedef pair<int,int> pii;
typedef pair<pii,int> piii;
#define X first
#define Y second

pii p[M];
int c[M];
char s[2];

priority_queue<piii> q;
int vis[2*M];

int main() {
//	freopen("D.in","r",stdin);
	int n,m,i,j,k;
	scanf("%d %d",&n,&m);
	for(i=0;i<m;i++) {
		int x,y;
		scanf("%d %d %s",&x,&y,s);
		if(s[0]=='o') c[i]=1; else c[i]=0;
		if(x>y) swap(x,y);
		if(x+y>n+1) {
			swap(x,y);
			x=n+1-x;
			y=n+1-y;
		}
		p[i]=pii(-(y-x+1),-x);
	}
	while(!q.empty()) q.pop();
	for(i=0;i<m;i++) q.push(piii(p[i],c[i]));
	int r=0;
	int fg=0;

	memset(vis,0,sizeof(vis));
	while(!q.empty()) {
		piii tmp=q.top();q.pop();
		if(!vis[-tmp.X.X]) {
			vis[-tmp.X.X]=1;
			r++;
		}
		while(!q.empty()) {
			piii t=q.top();
			if(t.X.X!=tmp.X.X) break;
			if(t.X.Y==tmp.X.Y) {
				if(t.Y!=tmp.Y) fg=1;
				break;
			}
			else {
				int ta,tb,tc;
				ta=-t.X.X;
				tb=-t.X.Y;
				tc=t.Y;
				ta-=tmp.X.Y*2;
				tb+=tmp.X.Y;
				tc^=tmp.Y;
				q.push(piii(pii(-ta,-tb),tc));
				break;
			}
		}
		if(fg) break;
	}
	if(fg) puts("0");
	else {
		r=n-r;
		k=1;
		while(r) k=k*2%1000000007,r--;
		printf("%d\n",k);
	}
	return 0;
}
