#include <algorithm>
#include <iostream>
#include <string.h>
#include <cstdio>

using namespace std;

const int N = 1000010;
const int Mod = 1e9 + 7;

int f[N];

int Find(int x){
	if(x != f[x]) f[x] = Find(f[x]);
	return f[x];
}

int main(){
	int n, m;
	cin >> n >> m;
	for(int i = 0; i < n + n + 4; i++)
		f[i] = i;
	for(int i = 1; i <= m; i++){
		int a, b;
		char c;
		scanf("%d%d %c", &a, &b, &c);
		a -= 1; b -= 1;
		int x = a - b;
		int y = a + b;
		if(x < 0) x = -x;
		if(y > n - 1) y = 2 * (n - 1) - y;
		y += 2;
		a = x;
		b = y;


		if(c == 'o'){
			int A = Find(a + a);
			int B = Find(b + b + 1);
			f[A] = B;
			A = Find(a + a + 1);
			B = Find(b + b);
			f[A] = B;
		}
		else{
			int A = Find(a + a);
			int B = Find(b + b);
			f[A] = B;
			A = Find(a + a + 1);
			B = Find(b + b + 1);
			f[A] = B;
		}
	}
	int num = 0;
	for(int i = 0; i < n + n + 4; i++)
		if(Find(i) == i) num++;
	int ret = 0;
	for(int i = 0; i < n + 2; i++)
		if(Find(i + i) == Find(i + i + 1)) ret = -1;
	if(ret == -1) cout << 0 << endl;
	else{
		num -= 4;
		num /= 2;
		ret = 1;
		for(int i = 1; i <= num; i++)
			ret = ret * 2 % Mod;
		cout << ret << endl;
	}
	return 0;
}
