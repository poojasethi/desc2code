#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cstdlib>
#include<vector>
#include<cmath>
#define MAXN 100005
#define mod 1000000007
using namespace std ;
typedef long long LL ;

int N, K, ans ;
LL pw[MAXN] ;
int fa[MAXN], dis[MAXN] ;
char ss[5], c ;

int find(int x)
{
	if(fa[x] == x) return x ;
	int tmp = fa[x] ;
	fa[x] = find(fa[x]) ;
	dis[x] = dis[x]^dis[tmp] ;
	return fa[x] ;
}

void End(int x)
{
	if(x < 0) printf("0\n") ;
	else printf("%d\n", pw[x]) ;
	//system("pause") ;
	exit(0) ;
}

int main()
{
	int i, j ;
	int x, y ;
	int a, b, flag ;
	scanf("%d %d", &N, &K) ;
	for(i = 1, pw[0] = 1; i <= N+2; i ++)
	{
		pw[i] = pw[i-1]*2%mod ;
		fa[i] = i ;
	}
	for(i = 1; i <= K; i ++)
	{
		scanf("%d %d %s", &x, &y, ss) ; 
		flag = (ss[0]=='o') ;
		a = (abs(x-y)+1)%N, b = (x+y-1)%N ;
		if(x+y-1 >= N) b = N-b ;
		if(a > b) swap(a, b) ;
		a --, b ++ ;
		x = find(a), y = find(b) ;
		if(x != y)
		{
			fa[y] = x ;
			dis[y] = dis[a]^dis[b]^flag ;
		}
		else if(dis[a]^dis[b] != flag)
			End(-1) ;
	}
	for(i = 0; i <= N+1; i ++)
		if(fa[i] == i) ans ++ ;
	End(ans-2) ;
	return 0 ;
}
