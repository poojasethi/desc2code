#include <cstdio>
#include <cstdlib>
#include <algorithm>
#define P 1000000007
using namespace std;

int n,K,key,ans,flag,cnt,x,y,X,Y,num;
int jy1,f[100001];
int jy2,c[100001];
int jy3,vis[100001];
char C;

int find(int x)
{
	if (x==f[x]) return x;
	int fx=f[x];
	f[x]=find(f[x]);
	c[x]^=c[fx];
	return f[x];
}

long long power(long long a,int b)
{
	long long ans=1;
	for (;b;b>>=1,a=(a*a)%P) if (b&1) ans=(ans*a)%P;
	return ans;
}

int main()
{
//	freopen("461D.in","r",stdin);
//	freopen("461D.out","w",stdout);	
	scanf("%d%d",&n,&K); flag=1;
	for (int i=-1;i<=n;i++) f[i]=i;
	
	for (int i=1;i<=K;i++)
	{
		scanf("%d%d %c",&x,&y,&C);
		if (C=='x')	key=0; else key=1;
		if (y>(n+1)/2) x=n-x+1,y=n-y+1;
		num=min(min(x,y),min(n-x+1,n-y+1));
		if (x-y+1>0)
		{
			X=x-y-1; Y=x-y+1+(num-1)*2;
		} else if (x+y-1<=n) {
			Y=x+y-1; X=x+y-1-(num-1)*2-2;
		}
//		if ((X&1)!=(Y&1)) printf("%d %d\n",X,Y);
		int fx=find(X),fy=find(Y);
		if (fx!=fy)
		{
			c[fy]=key^c[X]^c[Y]; f[fy]=fx;
		} else if ((c[X]^c[Y])!=key) { flag=0; break; }
	}
	for (int i=-1;i<=n;i++) 
		if (!vis[find(i)]) cnt++,vis[f[i]]=1;
	if (!flag) printf("0\n");
	else printf("%I64d\n",power(2,cnt-2));
}

