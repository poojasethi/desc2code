#include <iostream>
#include <cstdio>
#include <algorithm>
#define rep(i,a,b) for(int i = a; i <= b; i++)
using namespace std;
const int N = 100010, mod = 1000000000 + 7;
int f[N << 1], r[N << 1], val[N << 1];

void find(int x){
	if (f[x] == x) return; find(f[x]);
	r[x] = r[x] ^ r[f[x]]; 
	f[x] = f[f[x]];
}

char s[10];

int main(){
	int n, k; scanf("%d%d",&n,&k);
	rep(i,1,n * 2 - 1) f[i] = i, r[i] = 0, val[i] = -1;

	rep(i,1,n/2) f[i] = (n - i + 1), r[i] = 0;
	rep(i,1,(n-1)/2) f[n + i] = n + ((n - 1) - i + 1), r[i] = 0;

	rep(i,1,k) {
		int a, b, c; scanf("%d%d%s",&a,&b,s + 1);
		if (s[1] == 'o') c = 1; else c = 0;
		if (a < b) swap(a, b);
		if (a - b + 1 == 2) {	
			if (val[n + b] == -1 || val[n + b] == c) val[n + b] = c; else { printf("0\n"); return 0; } 
		} else if (a - b + 1 == 1) {
			if (val[a] == -1 || val[a] == c) val[a] = c; else { printf("0\n"); return 0; }
		} else if ((a - b + 1) & 1){
			int x = (a - b) / 2, y = (a + b) / 2;
			find(x), find(y);
			if (f[x] == f[y]){
				if (r[x] ^ r[y] != c) { printf("0\n"); return 0; }
			} else {
				r[f[x]] = r[x] ^ c ^ r[y];
				f[f[x]] = f[y];
			}
		} else {
			int x = n + (a - b - 1) / 2, y = n + (a + b - 1) / 2;
			find(x), find(y);
			if (f[x] == f[y]){
				if (r[x] ^ r[y] != c) { printf("0\n"); return 0; }
			} else {
				r[f[x]] = r[x] ^ c ^ r[y];
				f[f[x]] = f[y];
			}
		}
	}

	rep(i,1,n * 2 - 1) if (val[i] != -1) {
		find(i);
		if (val[f[i]] != -1 && val[f[i]] != val[i] ^ r[i]) { printf("0\n"); return 0; }
		else val[f[i]] = val[i] ^ r[i];
	}

	int ans = 1;
	rep(i,1,n * 2 - 1) if (f[i] == i && val[i] == -1) ans = (ans << 1) % mod;

	printf("%d\n",ans); return 0;
}
