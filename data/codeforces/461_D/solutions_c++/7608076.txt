#include <iostream>
#include <fstream>
using namespace std;

ifstream f("wow.in");

#define ll long long
ll result;
#define MOD ((ll)1000000007)
#define LE 100666
#define x first
#define pb push_back
#define y second
#define mp make_pair
#define pii pair<int,int>
#include <vector>
#define f cin

vector<pii> H[LE];
int cl[LE],color[LE];
bool viz[LE];
int X[LE],Y[LE];
bool fr[66][66][66];

void dfs(int nod,int col)
{
    int N=H[nod].size(),i;
    viz[nod]=true;
    color[nod]=col;

    for(i=0; i<N; ++i)
        if (viz[H[nod][i].x]==false)
            dfs(H[nod][i].x,H[nod][i].y^col);
}

int mdl(int val)
{
    if (val<0) return -val;
    return val;
}

int main()
{
    int n,k,xx,yy,i;
    char ch;

    f>>n>>k;
    for(i=1; i<=k; ++i)
    {
        f>>xx>>yy>>ch;
        if (ch=='x') cl[i]=0; else cl[i]=1;
        X[i]=mdl(yy-xx)+1;
        Y[i]=yy+xx-1;
        if (Y[i]>n) Y[i]=n-(Y[i]-n);
        X[i]=max(0,X[i]-2);
        H[X[i]].pb(mp(Y[i],cl[i]));
        H[Y[i]].pb(mp(X[i],cl[i]));

    //    if (fr[xx][yy][cl[i]]==false)
         //  cout<<X[i]<<" "<<Y[i]<<" "<<cl[i]<<"       "<<xx<<" "<<yy<<" "<<ch<<'\n';

    //    fr[xx][yy][cl[i]]=fr[yy][xx][cl[i]]=true;
    }

  result=1;

    for(i=0; i<=n; ++i)
        if (viz[i]==false)
        {
            dfs(i,0);
            if (i!=0)
            {
                result*=2;
                result%=MOD;
            }
        }

    for(i=1; i<=k; ++i)
        if ((color[X[i]]^color[Y[i]])!=cl[i])
        {
            cout<<0;
            return 0;
        }

    cout<<result<<'\n';

    return 0;
}
