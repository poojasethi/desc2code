#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

const int N = int(1e5 + 39);
const int MOD = int(1e9 + 7);

int n, m, s, gen;
int fa[N+N];

int abs(int x){return x>0?x:-x;}
int getf(int x){return fa[x] ? fa[x] = getf(fa[x]) : x;}
void merge(int x, int y){ if(getf(x) != getf(y)) fa[getf(x)] = getf(y), gen--; }

int main()
{
	scanf("%d%d\n", &n, &m), n--;
	
	gen = n+n+2;
	s = n+5;
	
	for(int i=1, x, y, low, upp; i<=m; i++)
	{
		char c;
		
		scanf("%d %d %c\n", &x, &y, &c), --x, --y;
		
		low = abs(x-y);
		upp = min(x+y, n+n-x-y);
		
		upp+=2;
		
		if(c=='o') merge(low, upp+s), merge(low+s, upp);
		else merge(low, upp), merge(low+s, upp+s);
	}
	
	for(int i=0; i<=n+1; i++) if(getf(i) == getf(i+s)) return puts("0"), 0;
	
	gen /= 2;
	
	int r(1);
	for(int i=1; i<=gen; i++) r = (r+r) % MOD;
	printf("%d\n", r);
	
	return 0;
}