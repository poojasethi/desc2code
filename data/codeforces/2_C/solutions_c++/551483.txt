#include <iostream>
#include <cstdio>
#include <complex>
#define FOR(i, n) for (int i = 0; i < (n); ++i)
using namespace std;

typedef complex<double> pt;
double a, b, d, r[3];
pt p[3], c;

double energy(pt c) {
	double d[3], en = 0.0;
	FOR (i, 3) d[i] = abs(c - p[i]) / r[i];
	FOR (i, 3) en += (d[i] - d[(i + 1) % 3]) * (d[i] - d[(i + 1) % 3]);
	return en;
}

int main() {
	FOR (i, 3) scanf("%lf%lf%lf", &a, &b, &r[i]), p[i] = pt(a, b);
	c = (p[0] + p[1] + p[2]) / 3.0;
	for (d = 1.0; d >= 1e-4; d *= 0.7) while (true) {
		if (energy(c + d) < energy(c)) { c += d; continue; }
		if (energy(c - d) < energy(c)) { c -= d; continue; }
		if (energy(c + pt(0, d)) < energy(c)) { c += pt(0, d); continue; }
		if (energy(c - pt(0, d)) < energy(c)) { c -= pt(0, d); continue; }
		break;
	}
	if (energy(c) < 1e-6) printf("%.5lf %.5lf\n", real(c), imag(c));
	return 0;
}
