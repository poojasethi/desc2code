# -*- coding: utf-8 -*-

import sys
import operator


def compute_count(c_xor, c_and):
    if c_xor == '0' and c_and == '0':
        return 1
    elif c_xor == '1' and c_and == '0':
        return 2
    elif c_xor == '0' and c_and == '1':
        return 1
    else:
        return None

if __name__ == '__main__':
    raw = sys.stdin.read()
    s, x = map(long, raw.split())
    and_val = (s-x)/2
    detector = (x & and_val) # | (s & and_val)
    if detector != 0 or (s-x) % 2 != 0:
        result = 0
        sys.stdout.write(str(result))
        exit()
    xxx_string = bin(x)[2:]
    and_string = bin(and_val)[2:]
    xxx_string = xxx_string.zfill(max(len(xxx_string), len(and_string)))
    and_string = and_string.zfill(max(len(xxx_string), len(and_string)))
    counts = map(compute_count, xxx_string, and_string)
    result = reduce(operator.__mul__, counts, 1)
    if s == x:
        result -= 2
    sys.stdout.write(str(result))
