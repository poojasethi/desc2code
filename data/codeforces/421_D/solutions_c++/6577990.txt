#include <cstdio>
#include <vector>
#include <cstring>
#include <algorithm>

using namespace std;

#define N 300000
#define LL long long
int d[N];
vector<pair<int,int> > vec;
vector<int> tmpd;

int main(){
	int n,p;
	scanf("%d%d",&n,&p);
	for(int i = 0 ; i < n ; ++i){
		int u,v;
		scanf("%d%d",&u,&v);
		d[u] ++ ,d[v] ++;
		if(u > v) swap(u,v);
		vec.push_back(make_pair(u,v));	
	}
	LL ans = 0;
	for(int i = 1 ; i <= n ; ++i)	tmpd.push_back(d[i]);
	sort(tmpd.begin(),tmpd.end());
	for(int i = 1 ; i <= n ; ++i){
		int pos = lower_bound(tmpd.begin(),tmpd.end(),p - d[i]) - tmpd.begin();
		ans += (LL)n - pos;
		if(d[i] + d[i] >= p)	ans --;
	}
	ans /= 2;
	sort(vec.begin(),vec.end());
	int cnt = 0,u = 0, v = 0;
	for(int i = 0 ; i < n;  ++i){
		if(!(u == vec[i].first && v == vec[i].second)){
			if(d[u] + d[v] >= p)	ans --;
			if(d[u] + d[v] - cnt >= p)	ans ++;
			cnt = 1;
			u = vec[i].first,v = vec[i].second;
		}
		else	cnt ++;
	}
	if(d[u]+d[v] >= p)	ans --;
	if(d[u] + d[v] - cnt >= p)	ans ++;
	printf("%I64d\n",ans);
	return 0;
}

