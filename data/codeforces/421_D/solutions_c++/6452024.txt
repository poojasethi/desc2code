//                                                  به نام خداوند بخشنده ی مهربان
#include <algorithm>
#include <iostream>
#include <map>
# define xx first
# define yy second
# define mk make_pair
using namespace std;
typedef pair<int,int> pii;
const int maxn=3e5+10;
map<pii,int> mp;
int a[maxn],n,p,k=0,naf[maxn];
pair<pii,int> inmap[maxn];
long long go(){
    long long ans=0;
    for(int i=1 ; i<n ; i++){
        int tmp=max(0,p-a[i]);
        if(tmp<=a[n])
            ans+=(n-(lower_bound(a+i+1,a+1+n,tmp)-a)+1);
    }
    for(int i=1 ; i<=k ; i++){
        int tmp1=naf[inmap[i].xx.xx],tmp2=naf[inmap[i].xx.yy];
        if(tmp1+tmp2>=p && (tmp1+tmp2-inmap[i].yy)<p)
            ans--;
    }
    return ans;
}
int main(){
    ios_base::sync_with_stdio(false);
    cin>>n>>p;
    for(int i=1 ; i<=n ; i++){
        int u1,u2;cin>>u1>>u2;
        if(u1>u2)swap(u1,u2);
        a[u1]++;a[u2]++;naf[u1]++;naf[u2]++;
        if(mp.find(pii(u1,u2))!=mp.end())
            inmap[mp[pii(u1,u2)]].yy++;
        else{
            k++;
            mp[pii(u1,u2)]=k;
            inmap[k]=mk(mk(u1,u2),1);
        }
    }
    sort(a+1,a+1+n);
    cout<<go()<<endl;
    return 0;
}
