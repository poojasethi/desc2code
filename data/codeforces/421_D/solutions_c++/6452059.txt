//gskhirtladze

#include <iostream>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <map>
#include <queue>
#include <string>

#define fi first
#define se second
#define pb push_back
#define mk make_pair
#define Pii pair < int , int >
#define Nmax 300010

using namespace std;

bool f[Nmax];
map < Pii, int > mp;
vector < int > g[Nmax];
long long nm[Nmax],kk[Nmax],x,y,p;
long long ans,n,i;

void go(int now)
 {
  f[now]=1;
  for (int i=0;i<g[now].size();i++)
   if (!f[g[now][i]])
    if (nm[now]+nm[g[now][i]]-mp[mk(now,g[now][i])] < p && p <= nm[now]+nm[g[now][i]] ) ans-=2;
  for (int i=0;i<g[now].size();i++)
    if (!f[g[now][i]]) go(g[now][i]);
 }

main()
 {
  cin>>n>>p;
  for (i=1;i<=n;i++)
   {
    scanf("%d%d",&x,&y);
    mp[mk(x,y)]++;
    mp[mk(y,x)]++;
    if (mp[mk(x,y)] == 1)
     {
      g[x].pb(y);
      g[y].pb(x);
     }
    nm[x]++;
    nm[y]++;
   }
  for (i=1;i<=n;i++)
   if (2*nm[i] >= p) ans--;
  for (i=1;i<=n;i++)
   kk[nm[i]]++;
  for (i=300000;i>=0;i--)
   kk[i]+=kk[i+1];
  for (i=1;i<=n;i++)
   ans+=kk[max(0LL,p-nm[i])];
  for (i=1;i<=n;i++)
   if (!f[i]) go(i);
  
  cout<<ans/2<<endl;
 }
