#include <map>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int maxn = 3e5+100;
typedef long long int64;
map<int,int>F[maxn],v[maxn];
int n,p;
int x[maxn],y[maxn],vis[maxn],c[maxn];
int64 t[maxn];
int64 cnt;

int lowbit(int x){ return x & (-x); }

void add(int x,int y){
    for(; x <= n; x += lowbit(x)) t[x] += y;
}

int64 ask(int x){
    int64 sum = 0;
    for(; x; x -= lowbit(x)) sum += t[x];
    return sum;
}

int main(){
    scanf("%d %d",&n,&p);cnt = (int64)n * (n - 1) / 2;
    for(int i = 1; i <= n; i++) scanf("%d %d",&x[i],&y[i]),c[x[i]]++,c[y[i]]++;
    for(int i = 1; i <= n; i++) F[x[i]][y[i]]++,F[y[i]][x[i]]++;
    for(int i = 1; i <= n; i++){
        if(c[i] < p)    cnt -= ask(p - c[i]);
        add(c[i] + 1,1);
    }
    for(int i = 1; i <= n; i++){
        if(c[x[i]] + c[y[i]] >= p && !v[x[i]][y[i]] && c[x[i]] + c[y[i]] - F[x[i]][y[i]] < p) cnt--;
        v[x[i]][y[i]] = 1;v[y[i]][x[i]] = 1;
    }
    printf("%I64d",cnt);
    return 0;
}
