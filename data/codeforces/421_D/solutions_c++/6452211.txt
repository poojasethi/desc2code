#include <stdio.h>
#include <algorithm>
#include <set>
#include <map>
#include <vector>
#include <string.h>
#define LL long long
#define _LL __int64

using namespace std;
const int INF = 0x3f3f3f3f;

map < pair<int, int>, int > mp;
int n,p;
int c1[300010],c2[300010];
_LL ans;

int main()
{
    int i,j,a,b;
    scanf("%d %d",&n,&p);
    memset(c1,0,sizeof(c1));
    memset(c2,0,sizeof(c2));

    for(i = 1; i <= n; i++)
    {
        scanf("%d %d",&a,&b);
        if(a > b)
            swap(a,b);

        c1[a]++;
        c1[b]++;
        c2[a]++;
        c2[b]++;

        mp[ make_pair(a,b) ] += 1;
    }

    sort(c1+1,c1+1+n);
    map< pair<int,int>,int>::iterator it;
    ans = 0;
    for(i = 1; i <= n; i++)
    {
        int add = lower_bound(c1+1+i,c1+1+n,p-c1[i]) - c1;
        ans += n+1-add;
    }

    for(it = mp.begin(); it != mp.end(); it++)
    {
        a = it->first.first;
        b = it->first.second;
        if(c2[a]+ c2[b] >= p && c2[a] + c2[b] - mp[make_pair(a,b)] < p)
        {
            ans--;
        }
    }
    printf("%I64d\n",ans);
    return 0;
}
