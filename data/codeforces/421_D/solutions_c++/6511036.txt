#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#define sz 600500
using namespace std;
typedef long long int ll;
ll node[sz], next[sz], to[sz], app[sz];
ll deg[sz];
ll cnt[sz];
ll n, p, e;
void ins(ll x, ll y){
    ll j;
    for (j = node[x]; j; j = next[j]) if (to[j] == y){
        app[j]++; return;
    }
    e++; next[e] = node[x]; node[x] = e; to[e] = y; app[e] = 1;
}
void gi(ll &x){
    char ch = getchar(); x = 0;
    while (ch < '0' || ch > '9') ch = getchar();
    while (ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();
}
void init(){
    ll i, j, k;
    gi(n); gi(p);
    for (i = 1; i <= n; i++){
        gi(j); gi(k);
        ins(j, k); ins(k, j);
        deg[j]++; deg[k]++;
    }
    for (i = 1; i <= n; i++) cnt[deg[i]]++;
    for (i = n; i; i--) cnt[i] += cnt[i + 1];
}
ll count(ll x){
    ll j, s = 0;
    if (deg[x] + deg[x] >= p) s--;//I may count (x, x) later
    if (deg[x] >= p) s += n; else s += cnt[p - deg[x]];
    for (j = node[x]; j; j = next[j]) if (deg[to[j]] + deg[x] >= p && deg[to[j]] + deg[x] - app[j] < p) s--;
    return s;
}
int main(){
    ll s = 0, i;
    init();
    for (i = 1; i <= n; i++) s += count(i);
    cout << (s >> 1);
    return 0;
}
