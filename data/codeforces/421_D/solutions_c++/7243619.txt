#include<iostream>
#include<set>
#include<vector>
#include<algorithm>
#include<map>
using namespace std;
const int Maxn = int(3e5)+1000;
map <int , int > bad;
vector<int> ag[Maxn];
vector<int> ver[Maxn];
int per[Maxn] , s[Maxn], n , p;

int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);
	cin >> n >>p ;
	for(int i = 0; i<n ; i++){
		int a , b;
		cin >> a >> b;
		--a  , --b;
		ag[a].push_back(i);
		ag[b].push_back(i);
		per[a]++;
		per[b]++;
		ver[i].push_back(a);
		ver[i].push_back(b);
	}
	for(int i = 0 ; i<n ; i++)
		s[per[i]]++;
	for(int i = n-1 ; i>=0 ; i--)
		s[i]= s[i+1] + s[i];
	long long ans = 0 ; 

	for(int i = 0; i<n ; i++){
		    int megh = max(p - per[i], 0 );
			ans+= s[megh];
			if( megh <= per[i])
				ans --;
			
	 		bad.clear();
			for(int j = 0 ; j<ag[i].size() ; j++){
				int v = ag[i][j];
				for(int k = 0 ; k<ver[v].size() ; k++){
					int maz = ver[v][k];
					if(maz!=i)
						bad[maz]++;
				}
			}

			for( map<int , int >::iterator it = bad.begin() ; it!=bad.end() ; ++it){
				int u = it->first;int rem  = it->second;
				int ret = max(p - per[i] , 0);
				if((per[u] >=  ret) && ((per[u] - rem) < ret ))
					ans--;
			}
	}

	cout << ans/2 << endl;

}



