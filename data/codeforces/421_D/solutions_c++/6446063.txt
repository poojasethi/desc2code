#include <iostream>
#include <cstring>
#include <cstdio>
#include <map>
#include <algorithm>
using namespace std ;
int a[500000] ;
int b[500000] ;
struct node{
	int x ,y ;
	bool operator < ( const node &a ) const{
		if( x == a.x ) return y < a.y ;
		return x < a.x ;
	}
	node( int _x ,int _y ) : x(_x) ,y(_y){} ; 
};
map<node,int> ma ;
int main(){
	int n ,p ;
	int x ,y ;
	scanf( "%d %d", &n ,&p ) ;
	long long ans = 0 ;
	for( int i = 0 ;i < n ;i ++ ){
		scanf( "%d %d" ,&y ,&x ) ;
		if( x < y ) swap( x ,y ) ;
		ma[node(x,y)] ++ ;
		a[x]++ ;
		a[y]++ ;
	}
	int top = 0 ;
	for( int i = 1 ;i <= n ;i ++ )
		b[top++] = a[i] ;
	sort( b ,b + top ) ;
	for( int i = 0 ;i < top ;i ++ ){
		int u = lower_bound( b + i + 1 ,b + top ,p - b[i] ) - b ;
		ans += top - u ;
	}
//	cout << ans << endl ;
	map<node,int>::iterator it ;
	for( it = ma.begin() ;it != ma.end() ;it ++ ){
		node x = it->first ;
	//	cout << x.x << " " << x.y << endl ;
		if( a[x.x] + a[x.y] >= p && a[x.x] + a[x.y] - it->second < p )
			ans -- ;
	}
	cout << ans << endl ;

}
