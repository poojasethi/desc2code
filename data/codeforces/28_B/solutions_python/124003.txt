import sys

def main():
    N    = int(sys.stdin.readline())
    goal = [int(x)-1 for x in sys.stdin.readline().split(' ')]
    fav  = [int(x) for x in sys.stdin.readline().split(' ')]
    edge = {}
    for i in range(0,N):
        tmp = i + fav[i]
        if tmp < N:
            edge[(i,tmp)] = 1
            edge[(tmp,i)] = 1
        tmp = i - fav[i]
        if tmp >= 0:
            edge[(i,tmp)] = 1
            edge[(tmp,i)] = 1
    visited = []
    ls = []
    for i in range(0,N):
        if i in visited:
            continue
        l = []
        dfs(edge, i, l, N)
        ls.append(l)
        visited += l
    for l in ls:
        for x in l:
            if not (goal[x] in l):
                print "NO"
                return
    print "YES"

def dfs(edge, at, l, N):
    l.append(at)
    for i in range(0,N):
        if ((at,i) in edge) and (not (i in l)):
            dfs(edge, i, l, N)
    
if __name__ == '__main__':
    main()
