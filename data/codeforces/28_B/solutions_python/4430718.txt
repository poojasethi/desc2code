#!/usr/bin/python
from collections import deque
n = int(raw_input())
a = map(lambda x: int(x)-1, raw_input().split())
f = map(lambda x: int(x), raw_input().split())
b = [None for i in range(n)]
adj = [set() for i in range(n)]
for i in range(n):
    b[a[i]] = i
    neighbor = i + f[i]
    if neighbor < n:
        adj[i].add(neighbor)
        adj[neighbor].add(i)
    neighbor = i - f[i]
    if neighbor >= 0:
        adj[i].add(neighbor)
        adj[neighbor].add(i);

def isValid(i):
    visited = [False for k in range(n)]
    dq = deque([i])
    visited[i] = True
    while len(dq) > 0:
        pos = dq.popleft()
        for nextPos in adj[pos]:
            if not visited[nextPos]:
                visited[nextPos] = True
                dq.append(nextPos)
    return visited[b[i]]

for i in range(n):
    if not isValid(i):
        print "NO"
        exit(0)
print "YES"
