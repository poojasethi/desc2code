#include <iostream>

using namespace std;

const int MAXn = 100000 + 10;

#define int long long

int n, t;
long long x[2 * MAXn], y[2 * MAXn];
long long px, py;

bool rightTurn (int a, int b)
{
	return (y[b] - y[a]) * (px - x[a]) > (py - y[a]) * (x[b] - x[a]);
}

bool inPoly ()
{
	for (int i = 0; i < n; i++)
		if (!rightTurn (i, i+1))
			return false;
	return true;
}

main()
{
	ios::sync_with_stdio (false);

	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> x[i] >> y[i];

	copy (x, x + n, x + n);
	copy (y, y + n, y + n);
	
	for (cin >> t; t--; )
	{
		cin >> px >> py;
		if (!inPoly ())
		{
			cout << 0 << endl;
			continue;
		}

		unsigned long long ans = n * (n - 1) / 2 * (n - 2) / 3;
		for (int a = 0, b = 1; a < n; a++)
		{
			while (rightTurn (a, b))
				b++;
//			cerr << " ** " << a << ' ' << b << endl;
			long long d = b - a;
			ans -= (d - 1) * (d - 2) / 2;
		}
		cout << ans << endl;
	}
}

