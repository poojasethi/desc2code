#include <cstdio>
#include <utility>
#include <vector>

using namespace std;

typedef long long int ll;

inline pair<int,int> operator-(pair<int,int>a,pair<int,int>b) { return make_pair(a.first-b.first,a.second-b.second); }
inline ll il_wek(pair<int,int>a,pair<int,int>b) { return static_cast<ll>(a.first)*b.second-static_cast<ll>(a.second)*b.first; }
inline ll il_wek(pair<int,int>a,pair<int,int>b,pair<int,int>c) { return il_wek(b-a,c-a); }

int n;

vector<pair<int,int> >v;

void przyp()
{
	pair<int,int>p;
	scanf("%d%d",&p.first,&p.second);
	for(int i=0;i<n;i++)
	{
		if(il_wek(p,v[i],v[(i+1)%n])>0)
		{
			printf("0\n");
			return;
		}
	}
	ll wyn=((static_cast<ll>(n)*(n-1))*(n-2))/6;
	int k=0;
	for(int i=0;i<n;i++)
	{
		while(il_wek(v[i],v[(k+1)%n],p)<0) k=(k+1)%n;
		int x=(k-i+n)%n;
		wyn-=(x*static_cast<ll>(x-1))/2;
	}
	printf("%I64d\n",wyn);
}

int main()
{
	scanf("%d",&n);
	for(int i=0;i<n;i++)
	{
		int a,b;
		scanf("%d%d",&a,&b);
		v.push_back(make_pair(a,b));
	}
	int t;
	scanf("%d",&t);
	while(t--) przyp();
	return 0;
}
