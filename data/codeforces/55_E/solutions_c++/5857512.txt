// in the name of god

#include<iostream>
#include<cstring>
#include<algorithm>
#include<vector>
#include<cstdio>
#include<complex>
#include<cmath>

#define PII pair<int,int>
#define F first
#define S second
#define X real()
#define Y imag()
#define MP make_pair
#define PB push_back

using namespace std;

typedef long double ld;
typedef long long ll;
typedef complex<ll> point;

const int maxn=1000*100+100;

ll n,t,id,ans;

point a[maxn],b;

ll cross(point a,point b){
	return imag(conj(a)*b);
}

ll C(ll x){
	return (x*(x-1))/2;
}

bool check(point b){
	for(int i=0;i<n;i++)
		if(cross(a[(i+1)%n]-a[i],b-a[i])>0ll)
			return false;
	return true;
}

int main(){
	cin>>n;
	for(int i=0;i<n;i++)
		cin>>a[i].X>>a[i].Y;
	cin>>t;
	while(t--){
		cin>>b.X>>b.Y;
		if(!check(b)){
			cout<<0<<endl;
			continue;
		}
		id=0;
		ans=(n*(n-1)*(n-2))/6;
		for(int i=0;i<n;i++){
			id=max((ll)i,id);
			while(cross(a[i]-a[(id+1)%n],a[i]-b)<0ll)
				id++;
			ans-=C(id-i);
		}
		cout<<ans<<endl;
	}
	return 0;
}
