from math import ceil, floor, log

def solve(h, w):
    s1 = _solve(h, w)
    s2 = _solve(w, h)
    s2 = s2[1], s2[0]
    area = lambda s: s[0] * s[1]
    if area(s1) == area(s2):
        best = sorted([s1,s2], key=lambda x: x[0])[-1]
    else:
        best = sorted([s1,s2], key=area)[-1]

    return best
    
def _solve(h, w):
    h = 2 ** int(log(h, 2))
    wmin = int(ceil(h / 1.25))
    wmax = int(floor(h / 0.8))
    if w < wmin:
        return solve(h-1, w)
    else:
        return (h, min(w, wmax))

if __name__ == '__main__':
    h, w = map(int, raw_input().split())
    s = solve(h, w)
    print s[0], s[1]
