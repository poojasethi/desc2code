#include<bits/stdc++.h>
#define FT first
#define SC second
#define PB push_back
#define MP make_pair
#define REP(i, l, r) for(int i = (l); i <= (r); i++)
#define PER(i, r, l) for(int i = (r); i >= (l); i--)
#define DFOR(i, x) for(int i = hd[(x)]; i; i = e[i].nxt)
#define FOR(i, x) for(int i = 0; i < (x); i++)
#define VEP(i, x) for(int i = 0; i < x.size(); i++)
#define MEM(a) memset(a, 0, sizeof a)

using namespace std;
typedef long long LL;
typedef long double LD;
typedef pair<int, int> PI;
const int inf = 0x7fffffff;
const int N = 200000 + 5;
PI operator -(PI a, PI b){
	return MP(a.FT - b.FT, a.SC - b.SC);
}
LL operator *(PI a, PI b){
	return (LL)a.FT * b.SC - (LL)a.SC * b.FT;
}
PI a[N], b[N], s[N];
int main(){
	int n, m, x, y;
	scanf("%d%d%d%d", &n, &m, &x, &y);
	x = 0, y = 0;
	REP(i, 1, n){
		scanf("%d%d", &a[i].FT, &a[i].SC);
		a[i].SC = -a[i].SC;
	}
	REP(i, 1, m){
		scanf("%d%d", &b[i].FT, &b[i].SC);
		b[i].SC = -b[i].SC;
		x = max(x, b[i].FT), y = min(y, b[i].SC);
	}
	b[0] = MP(0, y);
	b[m + 1] = MP(x, 0);
	sort(b, b + m + 1);
	int top = 0;
	REP(i, 0, m + 1){
		while (top > 1 && (b[i] - s[top - 1]) * (s[top] - s[top - 1]) >= 0) top--;
		s[++top] = b[i];
	}
	REP(i, 1, n){
		int k = lower_bound(s + 1, s + top + 1, a[i]) - s;
		if (k == 1 || k == top + 1 || (a[i] - s[k - 1]) * (s[k] - s[k - 1]) >= 0){
			puts("Max"); return 0;
		}
	}
	puts("Min");
}
