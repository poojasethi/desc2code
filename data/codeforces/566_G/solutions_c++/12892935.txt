#include<cstdio>
#include<algorithm>
#define N 100005
using namespace std;
struct data{
    int x,y;
    void read(){scanf("%d%d",&x,&y);}
    friend data operator - (const data &a,const data &b){
        return (data){a.x-b.x,a.y-b.y};
  }
  friend long long operator * (const data &a,const data &b){
    return 1ll*a.x*b.y-1ll*b.x*a.y;
  }
    friend int operator < (const data &a,const data &b){
        return a.x<b.x;
  }
}a[N],b[N];int i,n,m,t,x,y;
int First(){puts("Max");exit(0);}
int Second(){puts("Min");exit(0);}
const int cmp(const data &a,const data &b){
    return a.y>b.y||a.y==b.y&&a.x>b.x;
}
int check(const data &a){
    if (a.x<b[1].x) return (a.y>=b[1].y);
    if (a.x>=b[m].x) return 1;
    int t=lower_bound(b+1,b+m+1,a)-b;
    return (b[t-1]-a)*(b[t]-a)>=0;
}
int main()
{
    scanf("%d%d",&n,&m);
    scanf("%d%d",&x,&y);
    for (i=1;i<=n;i++) a[i].read();
    for (i=1;i<=m;i++) b[i].read();
    sort(b+1,b+m+1,cmp);t=m;m=1;
    for (i=2;i<=t;i++) 
        if (b[i].x>b[m].x) b[++m]=b[i];
    t=m;m=1;
    for (i=2;i<=t;i++){
        while (m>1&&(b[m-1]-b[m])*(b[i]-b[m])<=0) m--;
        b[++m]=b[i];
  }
    for (i=1;i<=n;i++)
        if (check(a[i])) First();
    Second();
}