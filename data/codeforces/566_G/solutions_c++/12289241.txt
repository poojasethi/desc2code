#include<cstdio>
#include<cassert>
#include<cstring>
#include<algorithm>
#define rep(i,a,b) for(int i=a;i<=b;i++)
using namespace std;
const int maxn=1e5+5;
typedef pair<int,int> pii;
pii a[maxn+1],b[maxn+1];
pii q[maxn+1];
int tq=0,n,m,x,y;
void read()
{
	scanf("%d%d%d%d",&n,&m,&x,&y);
	rep(i,1,n)scanf("%d%d",&a[i].first,&a[i].second);
	rep(i,1,m)scanf("%d%d",&b[i].first,&b[i].second);
}
typedef long long ll;
ll cross(int a,int b,int c,int d)
{
	return 1ll*a*d-1ll*b*c;
}
bool ok(pii a,pii b,pii c)
{
	return cross(b.first-a.first,b.second-a.second,c.first-a.first,c.second-a.second)<0;
}
bool over(pii a,pii b,pii c)
{
	//printf("%d %d %d %d %d %d\n",a.first,a.second,b.first,b.second,c.first,c.second);
	//printf("%lld\n",cross(c.first-b.first,c.second-b.second,a.first-b.first,a.second-b.second));
	return cross(c.first-b.first,c.second-b.second,a.first-b.first,a.second-b.second)>=0;
}
typedef long double ld;
bool bad(pii a,pii b,pii c)
{
	return (ld)cross(a.first,a.second,b.first,b.second)*(ld)cross(a.first,a.second,c.first,c.second)>0;
}
bool cmp(pii a,pii b)
{
	return cross(a.first,a.second,b.first,b.second)<=0;
}
void work()
{
	sort(a+1,a+1+n,cmp);
	sort(b+1,b+1+m);
	q[++tq]=pii(0,0);
	rep(i,1,m)q[1].second=max(q[1].second,b[i].second);
	q[++tq]=b[1];
	rep(i,2,m)
	{
		while(tq>1&&ok(q[tq-1],q[tq],b[i])==0)tq--;
		q[++tq]=b[i];
	}
	tq++;
	q[tq]=pii(q[tq-1].first,0);
	int j=1;
	rep(i,1,n)
	{
		for(;bad(a[i],q[j],q[j+1]);j++)assert(j+1<=tq);
		if(over(a[i],q[j],q[j+1]))
		{
			//printf("%d %d %d %d %d\n",a[i].first,a[i].second);
			puts("Max");
			return;
		}
		//if(j+1<tq&&a[i].first==q[j+1].first&&over(a[i],q[j+1],q[j+2]))
		//{
		//	puts("Max");
		//	return;
		//}
	}
	puts("Min");
}
int main()
{
	read();
	work();
	return 0;
}
