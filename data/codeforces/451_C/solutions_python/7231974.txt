from itertools import product

def try_all(n, k, d1, d2):
    for k1, k2 in filter(lambda (k1, k2): (k - k1 - k2) % 3 == 0, set(product((-d1, d1), (-d2, d2)))):
        w2 = (k - k1 - k2) / 3
        w1 = w2 + k1
        w3 = w2 + k2
        if w1 >= 0 and w2 >= 0 and w3 >= 0:
            winamax = max(w1, w2, w3)
            necessaire = 3 * winamax - w1 - w2 - w3
            if n - k >= necessaire and (n - k - necessaire) % 3 == 0:
                return 'yes'
    return 'no'

t = int(raw_input())
for _ in range(t):
	n, k, d1, d2 = map(int, raw_input().split())
	print try_all(n, k, d1, d2)
