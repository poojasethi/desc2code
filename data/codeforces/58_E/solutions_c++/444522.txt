#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <stack>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

int A,B,C;
int a[10],b[10],c[10];
bool dp[30][2][10][10][10]; // pos, carry, a, b, c
vector <int> prev[30][2][10][10][10];

bool func(int alen, int blen, int clen){
    int i,j,c,x,y,z;
    
    int L = max(alen,max(blen,clen));
    
    REP(i,L+1) REP(c,2) REP(x,A+1) REP(y,B+1) REP(z,C+1) dp[i][c][x][y][z] = false;
    dp[0][0][0][0][0] = true;
    
    REP(i,L) REP(c,2) REP(x,A+1) REP(y,B+1) REP(z,C+1) if(dp[i][c][x][y][z]){
        int x2,y2,z2,c2;
        
        REP(x2,10) REP(y2,10){
            z2 = x2+y2+c; c2 = 0;
            if(z2 >= 10) {z2 -= 10; c2++;}
            if(i >= alen && x2 != 0) continue;
            if(i >= blen && y2 != 0) continue;
            if(i >= clen && z2 != 0) continue;
            
            int x3 = x + ((x < A && a[x] == x2) ? 1 : 0);
            int y3 = y + ((y < B && b[y] == y2) ? 1 : 0);
            int z3 = z + ((z < C && ::c[z] == z2) ? 1 : 0);
            
            dp[i+1][c2][x3][y3][z3] = true;
            int st[] = {i, c, x, y, z, x2, y2, z2};
            vector <int> state(8);
            REP(j,8) state[j] = st[j];
            prev[i+1][c2][x3][y3][z3] = state;
        }
    }
    
    return dp[L][0][A][B][C];
}

void print(int alen, int blen, int clen){
    int L = max(alen,max(blen,clen));
    int i=L,c=0,x=A,y=B,z=C;
    string sa,sb,sc;
    
    while(i > 0){
        vector <int> st = prev[i][c][x][y][z];
        i = st[0]; c = st[1]; x = st[2]; y = st[3]; z = st[4];
        if(i < alen) sa += (char)('0' + st[5]);
        if(i < blen) sb += (char)('0' + st[6]);
        if(i < clen) sc += (char)('0' + st[7]);
    }
    
    cout << sa << '+' << sb << '=' << sc << endl;
}

int main(void){
    int i,alen,blen,clen,sum;
    
    string s,sa,sb,sc;
    cin >> s;
    REP(i,s.length()) if(s[i] == '+' || s[i] == '=') s[i] = ' ';
    istringstream ss(s);
    ss >> sa >> sb >> sc;
    A = sa.length(); REP(i,A) a[A-1-i] = sa[i] - '0';
    B = sb.length(); REP(i,B) b[B-1-i] = sb[i] - '0';
    C = sc.length(); REP(i,C) c[C-1-i] = sc[i] - '0';
    
    for(sum=0;;sum++) REP(alen,sum+1) REP(blen,sum+1) REP(clen,sum+1) if(alen+blen+clen == sum){
        int tmp = clen - max(alen,blen);
        if(tmp != 0 && tmp != 1) continue;
        if(alen < A || blen < B || clen < C) continue;
        if(func(alen,blen,clen)) {print(alen,blen,clen); return 0;}
    }
    
    return 0;
}
