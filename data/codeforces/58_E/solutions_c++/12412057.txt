#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int oo=1e+9;
ll a,b,c,ansForA,ansForB,length;
ll getLength(ll n)
{
	ll len=0;
	while(n)    ++len,n/=10;
	return len;
}
ll power10[20];
void dfs(ll a,ll b,ll c,ll car,ll A, ll B, ll lenc, ll idx)
{
	ll len = getLength(A) + getLength(B) + getLength(A+B);
	if(lenc > 12 || len >= length ) return;
	if(a+b+c+car==0 && len < length)
    {
		length = len;
		ansForA=A;
		ansForB=B;
		return;
	}
	if(c == 0)
		return dfs(0, 0, 0, 0, A + a*power10[idx], B + b*power10[idx], lenc+  getLength(a+b+car), idx);
	if((a%10+b%10+car)%10 == c%10)
		dfs(a/10,b/10,c/10,(a%10+b%10+car)/10,A+(a%10)*power10[idx],B+(b%10)*power10[idx],
				lenc,idx+1);
	ll n=(a%10+b%10 + car)%10;
	if(n!=c%10)
		dfs(a,b,c*10+n,car,A,B,lenc+1,idx);
	n=(c%10 + 10 -a%10 - car)%10;
	if(n!=b%10)
		dfs(a,b*10+n,c,car,A, B,lenc+1,idx);
	n=(c%10 + 10 -b%10 - car)%10;
	if(n!=a%10)
		dfs(a*10+n,b,c,car,A, B,lenc+1,idx);
    return;
}
int main()
{
	char temp;
	cin>>a>>temp>>b>>temp>>c;
	length = oo;
	power10[0] = 1;
	for(int i=1;i<20;i++)
        power10[i]=10*power10[i-1];
	dfs(a,b,c,0,0,0,0,0);
	cout << ansForA << "+" << ansForB << "=" << ansForA+ansForB << endl;
	return 0;
}

                                                      