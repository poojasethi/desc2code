#include <iostream>
#include <algorithm>
#include <string>
#include <cstdio>
#include <cstdlib>
#include <cstring>
using namespace std;

string a, b, c;

string conv(int a) {
    string ret = "";
    if (a == 0) return "0";
    while (a) {
        ret += a % 10 + '0';
        a /= 10;
    }
    return ret;
}

const int MAXL = 10;

int f[MAXL][MAXL][MAXL][2][8];
string ans[MAXL][MAXL][MAXL][2][8][3];

int main() {
    int na, nb, nc;
    scanf("%d+%d=%d", &na, &nb, &nc);
    a = conv(na);
    b = conv(nb);
    c = conv(nc);
    int la = a.length(), lb = b.length(), lc = c.length();
    memset(f, 0x3f, sizeof f);
    f[0][0][0][0][0] = 0;
    for (int i = 0; i <= la; ++i) {
    for (int j = 0; j <= lb; ++j) {
    for (int k = 0; k <= lc; ++k) {
    for (int l = 0; l <= 1; ++l) {
    for (int s = 0; s < 8; ++s) {
        int enda = s & 1, endb = s & 2, endc = s & 4;
        if (i < la && enda || j < lb && endb || k < lc && endc) {
            continue;
        }
        if (f[i][j][k][l][s] == 0x3f3f3f3f) continue;
        for (int da = 0; da < (enda ? 1 : 10); ++da) {
        for (int db = 0; db < (endb ? 1 : 10); ++db) {
        for (int dc = 0; dc < (endc ? 1 : 10); ++dc) {
            if ((da + db + l) % 10 != dc) continue;
            int inci = i < la && da == a[i] - '0';
            int incj = j < lb && db == b[j] - '0';
            int inck = k < lc && dc == c[k] - '0';
            int nl = (da + db + l) / 10;
            for (int ni = i; ni <= i + inci; ++ni) {
            for (int nj = j; nj <= j + incj; ++nj) {
            for (int nk = k; nk <= k + inck; ++nk) {
            for (int ns = 0; ns < 8; ++ns) {
                int nenda = ns & 1, nendb = ns & 2, nendc = ns & 4;
                if (ni < la && nenda || enda && !nenda) continue;
                if (nj < lb && nendb || endb && !nendb) continue;
                if (nk < lc && nendc || endc && !nendc) continue;
                int ins = (!enda && ni == i) + (!endb && nj == j) + (!endc && nk == k);
                if (ins == 3) continue;
                if (f[i][j][k][l][s] + ins < f[ni][nj][nk][nl][ns]) {
                    f[ni][nj][nk][nl][ns] = f[i][j][k][l][s] + ins;
                    ans[ni][nj][nk][nl][ns][0] = ans[i][j][k][l][s][0];
                    ans[ni][nj][nk][nl][ns][1] = ans[i][j][k][l][s][1];
                    ans[ni][nj][nk][nl][ns][2] = ans[i][j][k][l][s][2];
                    if (!enda) ans[ni][nj][nk][nl][ns][0] += da + '0';
                    if (!endb) ans[ni][nj][nk][nl][ns][1] += db + '0';
                    if (!endc) ans[ni][nj][nk][nl][ns][2] += dc + '0';
                }
            }
            }
            }
            }
        }
        }
        }
    }
    }
    }
    }
    }
    for (int i = 0; i < 3; ++i) {
        reverse(ans[la][lb][lc][0][7][i].begin(), ans[la][lb][lc][0][7][i].end());
    }
    //cout << f[la][lb][lc][0][7] << endl;
    cout << ans[la][lb][lc][0][7][0] << "+" << ans[la][lb][lc][0][7][1] << "=" << ans[la][lb][lc][0][7][2] << endl;
    return 0;
}
