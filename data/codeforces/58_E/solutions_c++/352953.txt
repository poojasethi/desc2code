#ifdef ONLINE_JUDGE
#pragma comment(linker, "/STACK:16777216")
#endif

#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <queue>
#include <stack>
#include <sstream>
#include <cstring>
#include <numeric>
#include <ctime>

#define re return
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int) (x).size())
#define rep(i, n) for (int i = 0; i < (n); i++)
#define rrep(i, n) for (int i = (n) - 1; i >= 0; i--)
#define y0 y32479
#define y1 y95874
#define fill(x, y) memset(x, y, sizeof(x))
#define sqr(x) ((x) * (x))
#define prev prev239
#define next next239
#define hash hash239
#define rank rank239

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef long long ll;
typedef double D;
typedef long double LD;
typedef pair<ii, ii> iiii;

template<class T> T abs(T x) {return x > 0 ? x : -x;}

int n;
int m;

int ans[10][10][10][2][8];
int was[10][10][10][2][8];
iiii prev[10][10][10][2][8];
int pflag[10][10][10][2][8];
int ppa[10][10][10][2][8], ppb[10][10][10][2][8], ppc[10][10][10][2][8];

int len1, len2, len3;
int mas1[10], mas2[10], mas3[10];

int parse(int x, int *mas) {
    int n = 0;
    if (!x) {
        mas[0] = 0;
        re 1;
    }
    while (x) {
        mas[n++] = x % 10;
        x /= 10;
    }
    //reverse(mas, mas + n);
    re n;
}

ll aa, bb, cc;


void out(int cp1, int cp2, int cp3, int cf, int cflag) {
//  cout << cp1 << ' ' << cp2 << ' ' << cp3 << ' ' << cf << ' ' << cflag << endl;

    if (!cp1 && !cp2 && !cp3 && !cf && cflag == 7)
        re;

    iiii o = prev[cp1][cp2][cp3][cf][cflag];
    int p1 = o.fi.fi;
    int p2 = o.fi.se;
    int p3 = o.se.fi;
    int f = o.se.se;
    int flag = pflag[cp1][cp2][cp3][cf][cflag];

/*  int zlo = 0;

    for (int a = 0; a < 10 && zlo == 0; a++)
    rep(b, 10) {
        int c = (a + b + f) % 10;
        int nf = (a + b + f) / 10;

        int np1 = p1, np2 = p2, np3 = p3;
        if (p1 < len1 && a == mas1[p1])
            np1++;
        if (p2 < len2 && b == mas2[p2])
            np2++;
        if (p3 < len3 && c == mas3[p3])
            np3++;

        if (np1 == cp1 && np2 == cp2 && np3 == cp3 && nf == cf) {
            aa = aa * 10 + a;
            bb = bb * 10 + b;
            cc = cc * 10 + c;
            zlo = 1;
            break;
        }
    }
*/
    int a = ppa[cp1][cp2][cp3][cf][cflag];
    int b = ppb[cp1][cp2][cp3][cf][cflag];
    int c = ppc[cp1][cp2][cp3][cf][cflag];

    aa = aa * 10 + a;
    bb = bb * 10 + b;
    cc = cc * 10 + c;

    out(p1, p2, p3, f, flag);
}


void go(int p1, int p2, int p3, int f, int flag) {
    was[p1][p2][p3][f][flag] = 1;
    if (p1 >= len1 && p2 >= len2 && p3 >= len3 && f == 0 && flag == 0)
        re;

    int d = ans[p1][p2][p3][f][flag];
    int o1 = flag & 1;
    int o2 = (flag >> 1) & 1;
    int o3 = (flag >> 2) & 1;
    rep(a, 10)
    rep(b, 10) {
        int c = (a + b + f) % 10;
        int nf = (a + b + f) / 10;
        if (a && !o1 || b && !o2 || c && !o3)
            continue;

        int np1 = p1, np2 = p2, np3 = p3;
        if (p1 < len1 && a == mas1[p1])
            np1++;
        if (p2 < len2 && b == mas2[p2])
            np2++;
        if (p3 < len3 && c == mas3[p3])
            np3++;

        int len = o1 + o2 + o3;
        rep(nflag, 8) {
            if ((nflag & flag) != nflag)
                continue;
            int no1 = nflag & 1;
            int no2 = (nflag >> 1) & 1;
            int no3 = (nflag >> 2) & 1;
            if (!no1 && np1 < len1 || !no2 && np2 < len2 || !no3 && np3 < len3)
                continue;
            if (ans[np1][np2][np3][nf][nflag] == -1 || ans[np1][np2][np3][nf][nflag] > d + len) {
                ans[np1][np2][np3][nf][nflag] = d + len;
                prev[np1][np2][np3][nf][nflag] = mp(mp(p1, p2), mp(p3, f));
                pflag[np1][np2][np3][nf][nflag] = flag;
                ppa[np1][np2][np3][nf][nflag] = a;
                ppb[np1][np2][np3][nf][nflag] = b;
                ppc[np1][np2][np3][nf][nflag] = c;
            }
        }
    }
}

void hate() {
    while (1) {
        int ff = 0;
        int ba, bb, bc, bf, bflag;
        int bd = 1000000000;
        rep(a, len1 + 1) rep(b, len2 + 1) rep(c, len3 + 1) rep(f, 2) rep(flag, 8) {
            if (ans[a][b][c][f][flag] != -1 && ans[a][b][c][f][flag] < bd && !was[a][b][c][f][flag]) {
                bd = ans[a][b][c][f][flag];
                ba = a;
                bb = b;
                bc = c;
                bf = f;
                bflag = flag;
                ff = 1;
            }
        }

        if (ff)
            go(ba, bb, bc, bf, bflag);
        else
            break;
    }
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
#endif

    string s;
    cin >> s;
    replace(all(s), '+', ' ');
    replace(all(s), '=', ' ');
    istringstream sin(s);
    int a, b, c;
    sin >> a >> b >> c;
    len1 = parse(a, mas1);
    len2 = parse(b, mas2);
    len3 = parse(c, mas3);

    //cout << len1 << ' ' << len2 << ' ' << len3 << endl;

    fill(ans, -1);
    ans[0][0][0][0][7] = 0;

    hate();

    int d = ans[len1][len2][len3][0][0];
    //cout << d << endl;
    out(len1, len2, len3, 0, 0);
    cout << aa << "+" << bb << "=" << cc << endl;

    re 0;
}
