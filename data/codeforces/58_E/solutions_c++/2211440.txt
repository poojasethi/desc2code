#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <set>
#include <map>

const int N=100010;
const int inf=0x3f3f3f3f;

using namespace std;

#define sz(x) ((x).size())

int la,lb,lc;
int a[11],b[11],c[11];
int dp[8][8][8][2][20][20][20];

long long  reta,retb,retc,pow[21];
int dfs(int A,int B,int C,int D,int n,int na,int nb)
{
	//cout<<A<<" "<<B<<" "<<C<<" "<<D<<" "<<n<<" "<<na<<" "<<nb<<" "<<la<<" "<<lb<<" "<<lc<<endl;
	if(A>la) A=la;
	if(B>lb) B=lb;
	if(C>lc) C=lc;
	int &ret=dp[A][B][C][D][n][na][nb];
	if(ret+1) return ret;
	if(C>=lc)
	{
		ret=la-A+lb-B;
		long long tmp=D;
		for(int i=0;i<la-A;i++)
			tmp+=pow[i+1]*a[i+A];
		for(int i=0;i<lb-B;i++)
			tmp+=pow[i+1]*b[i+B];
		while(tmp) ret++,tmp/=10;
		return ret;
	}
	if(A>=la && B>=lb) 
	{
		long long tmp=0;
		for(int i=0;i<lc-C;i++)
			tmp+=pow[i+1]*c[i+C];
		tmp-=D;
		ret=lc-C;
		while(tmp) ret++,tmp/=10;
		return ret;
	}
	ret=inf;
	if(A<la && B<lb)
	{
		if((a[A]+b[B]+D)%10==c[C]) ret=min(ret,dfs(A+1,B+1,C+1,a[A]+b[B]+D>=10,n+1,n,n)+3);
		else ret=min(ret,dfs(A+1,B+1,C,a[A]+b[B]+D>=10,n+1,n,n)+3);
		for(int i=0;i<10;i++)
			ret=min(ret,dfs(A,B+1,C+((i+b[B]+D)%10==c[C]),i+b[B]+D>=10,n+1,n,n)+3);
		for(int i=0;i<10;i++)
			ret=min(ret,dfs(A+1,B,C+((i+a[A]+D)%10==c[C]),i+a[A]+D>=10,n+1,n,n)+3);
		for(int i=0;i<10;i++)
			for(int j=0;j<10;j++)
				if((i+j+D)%10==c[C]) ret=min(ret,dfs(A,B,C+1,i+j+D>=10,n+1,n,n)+3);
	}
	else if(B<lb)
	{
		if((b[B]+D)%10==c[C]) ret=min(ret,dfs(A,B+1,C+1,b[B]+D>=10,n+1,na,n)+2);
		else ret=min(ret,dfs(A,B+1,C,b[B]+D>=10,n+1,na,n)+2);
		for(int i=0;i<10;i++)
			ret=min(ret,dfs(A,B+1,C+((i+b[B]+D)%10==c[C]),i+b[B]+D>=10,n+1,n,n)+2+n-na);
		for(int i=0;i<10;i++)
			if(c[C]==(i+D)%10) ret=min(ret,dfs(A,B,C+1,i+D>=10,n+1,na,n)+2);
		for(int i=0;i<10;i++)
			for(int j=0;j<10;j++)
				if((i+j+D)%10==c[C]) ret=min(ret,dfs(A,B,C+1,i+j+D>=10,n+1,n,n)+1+n-na+n-nb);
	}
	else if(A<la)
	{
		if((a[A]+D)%10==c[C]) ret=min(ret,dfs(A+1,B,C+1,a[A]+D>=10,n+1,n,nb)+2);
		else ret=min(ret,dfs(A+1,B,C,a[A]+D>=10,n+1,n,nb)+2);
		for(int i=0;i<10;i++)
			ret=min(ret,dfs(A+1,B,C+((i+a[A]+D)%10==c[C]),i+a[A]+D>=10,n+1,n,n)+1+1+n-nb);
		for(int i=0;i<10;i++)
			if(c[C]==(i+D)%10) ret=min(ret,dfs(A,B,C+1,i+D>=10,n+1,n,nb)+2);
		for(int i=0;i<10;i++)
			for(int j=0;j<10;j++)
				if((i+j+D)%10==c[C]) ret=min(ret,dfs(A,B,C+1,i+j+D>=10,n+1,n,n)+1+n-na+n-nb);
	}
	return ret;
}


void display(int A,int B,int C,int D,int n,int na,int nb)
{
	//cout<<A<<" "<<B<<" "<<C<<" "<<D<<" "<<n<<" "<<reta<<" "<<retb<<" "<<reta+retb<<" "<<dfs(A,B,C,D,n,na,nb)<<endl;
	if(A>la) A=la;
	if(B>lb) B=lb;
	if(C>lc) C=lc;
	if(C>=lc)
	{
		for(int i=0;i<la-A;i++)
			reta+=pow[i+n]*a[i+A];
		for(int i=0;i<lb-B;i++)
			retb+=pow[i+n]*b[i+B];
		return ;
	}
	if(A>=la && B>=lb)
	{
		long long tmp=0;
		for(int i=0;i<lc-C;i++)
			tmp+=pow[n+i]*c[i+C];
		if(reta>=retb)
			reta+=tmp-D*pow[n];
		else retb+=tmp-D*pow[n];
		return ;
	}
	int ret=dfs(A,B,C,D,n,na,nb);
	if(A<la && B<lb)
	{
		if((a[A]+b[B]+D)%10==c[C])
		{
			if(ret==dfs(A+1,B+1,C+1,a[A]+b[B]+D>=10,n+1,n,n)+3)
			{
				reta+=a[A]*pow[n],retb+=b[B]*pow[n];
				display(A+1,B+1,C+1,a[A]+b[B]+D>=10,n+1,n,n);
				return ;
			}
		}
		else
		{
			if(ret==dfs(A+1,B+1,C,a[A]+b[B]+D>=10,n+1,n,n)+3)
			{
				reta+=a[A]*pow[n],retb+=b[B]*pow[n];
				display(A+1,B+1,C,a[A]+b[B]+D>=10,n+1,n,n);
				return ;
			}
		}
		for(int i=0;i<10;i++)
			if(ret==dfs(A,B+1,C+((i+b[B]+D)%10==c[C]),i+b[B]+D>=10,n+1,n,nb+(B<lb))+1+(B<lb)+n-na)
			{
				reta+=i*pow[n],retb+=b[B]*pow[n];
				display(A,B+1,C+((i+b[B]+D)%10==c[C]),i+b[B]+D>=10,n+1,n,nb+(B<lb));
				return ;
			}
		for(int i=0;i<10;i++)
			if(ret==dfs(A+1,B,C+((i+a[A]+D)%10==c[C]),i+a[A]+D>=10,n+1,na+(A<la),n)+1+(A<la)+n-nb)
			{
				reta+=a[A]*pow[n],retb+=i*pow[n];
				display(A+1,B,C+((i+a[A]+D)%10==c[C]),i+a[A]+D>=10,n+1,na+(A<la),n);
				return ;
			}
		for(int i=0;i<10;i++)
			for(int j=0;j<10;j++)
				if((i+j+D)%10==c[C]) 
				{
					if(ret==dfs(A,B,C+1,i+j+D>=10,n+1,n,n)+1+n-na+n-nb)
					{
						reta+=i*pow[n];
						retb+=j*pow[n];
						display(A,B,C+1,i+j+D>=10,n+1,n,n);
						return ;
					}
				}
	}
	else if(B<lb)
	{
		if((b[B]+D)%10==c[C])
		{
			if(ret==dfs(A,B+1,C+1,b[B]+D>=10,n+1,na,n)+2)
			{
				retb+=b[B]*pow[n];
				display(A,B+1,C+1,b[B]+D>=10,n+1,na,n);
				return ;
			}
		}
		else
		{
			if(ret==dfs(A,B+1,C,b[B]+D>=10,n+1,na,n)+2)
			{
				retb+=b[B]*pow[n];
				display(A,B+1,C,b[B]+D>=10,n+1,na,n);
				return ;
			}
		}
		for(int i=0;i<10;i++)
			if(ret==dfs(A,B+1,C+((i+b[B]+D)%10==c[C]),i+b[B]+D>=10,n+1,n,n)+2+n-na)
			{
				reta+=i*pow[n],retb+=b[B]*pow[n];
				display(A,B+1,C+((i+b[B]+D)%10==c[C]),i+b[B]+D>=10,n+1,n,n);
				return ;
			}
		for(int i=0;i<10;i++)
			if((c[C]==(i+D)%10) && ret==dfs(A,B,C+1,i+D>=10,n+1,na,n)+2)
			{
				retb+=i*pow[n];
				display(A+1,B,C+1,i+D>=10,n+1,na,n);
				return ;
			}
	}
	else if(A<la)
	{
		if((a[A]+D)%10==c[C])
		{
			if(ret==dfs(A+1,B,C+1,a[A]+D>=10,n+1,n,nb)+2)
			{
				reta+=a[A]*pow[n];
				display(A+1,B,C+1,a[A]+D>=10,n+1,n,nb);
				return ;
			}
		}
		else
		{
			if(ret==dfs(A+1,B,C,a[A]+D>=10,n+1,n,nb)+2)
			{
				reta+=a[A]*pow[n];
				display(A+1,B,C,a[A]+b[B]+D>=10,n+1,n,nb);
				return ;
			}
		}
		for(int i=0;i<10;i++)
			if(ret==dfs(A+1,B,C+((i+a[A]+D)%10==c[C]),i+a[A]+D>=10,n+1,n,n)+2+n-nb)
			{
				reta+=a[A]*pow[n],retb+=i*pow[n];
				display(A+1,B,C+((i+a[A]+D)%10==c[C]),i+a[A]+D>=10,n+1,n,n);
				return ;
			}
		for(int i=0;i<10;i++)
			if((c[C]==(i+D)%10) && ret==dfs(A,B,C+1,i+D>=10,n+1,n,nb)+2)
			{
				reta+=i*pow[n];
				display(A,B,C+1,i+D>=10,n+1,n,nb);
				return ;
			}
	}
	return ;
}
int main()
{
	int ta,tb,tc;
	scanf("%d+%d=%d",&ta,&tb,&tc);
	while(ta) a[la++]=ta%10,ta/=10;
	while(tb) b[lb++]=tb%10,tb/=10;
	while(tc) c[lc++]=tc%10,tc/=10;
	//cout<<la<<" "<<lb<<" "<<lc<<endl;
	memset(dp,-1,sizeof(dp));
	pow[1]=1;
	for(int i=2;i<21;i++)
		pow[i]=pow[i-1]*10;
	//cout<<dfs(0,0,0,0,1,0,0)<<endl;
	display(0,0,0,0,1,0,0);
	cout<<reta<<"+"<<retb<<"="<<reta+retb<<endl;
	return 0;
}
