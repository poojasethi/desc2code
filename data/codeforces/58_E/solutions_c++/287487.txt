#include<cstdio>
#include<iostream>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#define vi vector<int>
#define sz size()
#define pb push_back
#define ll long long
using namespace std;
char inp[50];
ll p10[20];
void init()
{
    p10[0]=1;
    for(int i=1;i<20;i++) p10[i]=p10[i-1]*10;
}
bool isDigit(char x)
{
    return x>='0' && x<='9';
}
ll ba,bb,bc;int lan;
int getLength(ll a)
{
    int ret=0;
    while(a){
        ret++;
        a/=10;
    }
    return ret;
}
void go(int a,int b,int c,ll ga,ll gb,int len,int car,int lleft,int ta,int tb,int tc)
{
    ll gc = ga+gb;
    int tlen=ta+tb+tc;
    //cout<<lleft<<endl;
    //if(lleft==3 && a==1 && b==1 && c==1 && tlen+lleft==9)
    //cout<<a<<" "<<b<<"asd  "<<c<<" "<<car<<" "<<(tlen+lleft)<<endl;
    
    if(tlen+lleft>=lan) return; 
    if(a==0 && b==0 && c==0 && car==0){
        //if(len==1)cout<<" "<<ga<<" "<<gb<<" "<<gc<<" "<<len<<endl;
        //get the current length of the solution so found 
        //cout<<ga<<" "<<gb<<" "<<gc<<" "<<lleft<<endl;
        //int tlen=lleft;
        if(tlen<lan){
            lan=tlen;
            ba=ga;
            bb=gb;
            bc=gc;
        }
    }
    else{
        int la=a%10;
        int lb=b%10;
        int lc=c%10;
        int elen=0;
        if(a) elen++;
        if(b) elen++;
        if(c) elen++;
        if((lc==(la+lb+car)%10)){
                int na=a,nb=b,nc=c;
                int fta=ta,ftb=tb,ftc=tc;
                if(la) fta=len;
                if(lb) ftb=len;
                if(lc) ftc=len;
                int mat=0;
                if(a!=0) {na/=10;mat++;} 
                if(b!=0) {nb/=10;mat++;}
                if(c!=0) {nc/=10;mat++;}
                go(na,nb,nc,la*p10[len]+ga,lb*p10[len]+gb,len+1,(la+lb+car)/10,lleft-mat,fta,ftb,ftc);
                return;
        }
        for(int ia=0;ia<=9;ia++){
            for(int ib=0;ib<=9;ib++){
                int sum=(ia+ib+car);
                int ic=sum%10;
                int ncar=sum/10;
                int mat=0;
                //see the max matching now 
                int na=a,nb=b,nc=c;
                int fta=ta,ftb=tb,ftc=tc;
                if(ia) fta=len;
                if(ib) ftb=len;
                if(ic) ftc=len;
                if(a!=0 && la==ia) {mat++;na/=10;} 
                if(b!=0 && lb==ib) {mat++;nb/=10;}
                if(c!=0 && lc==ic) {mat++;nc/=10;}
                if(mat && elen-mat<=1){
                    go(na,nb,nc,ia*p10[len]+ga,ib*p10[len]+gb,len+1,ncar,lleft-mat,fta,ftb,ftc);
                }
            }
        }
    }
}
int main()
{
    init();
    int a,b,c;
    gets(inp);
    lan=strlen(inp);
    for(int i=0;i<lan;i++){
        if(!isDigit(inp[i])) inp[i]=' '; 
    }
    sscanf(inp,"%d%d%d",&a,&b,&c);
    lan=40;
    go(a,b,c,0,0,0,0,getLength(a)+getLength(b)+getLength(c),0,0,0);
    //cout<<ba<<" "<<bb<<" "<<bc<<" "<<lan<<endl;
    cout<<ba<<"+"<<bb<<"="<<bc<<endl;
    return 0;
}