#coding=utf-8


MOD = 10**9 + 7

def Pow(p, n):
  s = 1
  while n:
    if n % 2 == 1: s = (s * p) % MOD;
    p = (p * p) % MOD
    n = n / 2;
  return s

#p^0 + p^1 + p^2 + ... + p^n
def Sum(p, n):
  if n == 0:
    return 1
  if n % 2 == 1:
    return Sum(p, n / 2) * (1 + Pow(p, n / 2 + 1))
  else:
    return Sum(p, n / 2 - 1) * (1 + Pow(p, n / 2)) + Pow(p, n)

#print Sum(2, 3)

a = raw_input()
k = input()

s = 0
power2 = 1
for c in a:
  if c == '0' or c == '5':
    s = (s + power2) % MOD
  power2 = (power2 * 2) % MOD

L = power2

#print s, L

print (s * Sum(L, k - 1)) % MOD
