def modInverse(a,m):
  '''solves for a*x = 1 (mod m)'''
  return egcd(a,m)[1]%m

def egcd(a, b):
  '''solves for a*x+b*y = gcd(a,b)'''
  x,y, u,v = 0,1, 1,0
  while a != 0:
    q, r = b//a, b%a
    m, n = x-u*q, y-v*q
    b,a, x,y, u,v = a,r, u,v, m,n
  gcd = b
  return gcd, x, y

mod  = 1000000007
pow2 = [1]
for i in xrange(10**5):
  pow2.append((pow2[-1]*2)%mod)

s  = map(int, raw_input())
k  = input()
a  = sum(pow2[i] for i,v in enumerate(s) if v%5==0)%mod
a *= (pow(2,k*len(s),mod)-1)
a %= mod
d  = pow(2,len(s),mod)-1
d %= mod
d  = modInverse(d,mod)
a *= d
print a%mod
