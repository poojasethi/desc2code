#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#define inf 0x3f3f3f3f
using namespace std;
const int N=400010;
int n,m,i,len,pos;
int a[N],c[N],d[N],l[N],r[N],lis[N];
struct node{int x,y,z,w;}b[N];
int calc(int x)
{
    return lower_bound(lis,lis+n,x)-lis;
}
int cmp1(const node&a,const node&b){return a.x<b.x;}
int cmp2(const node&a,const node&b){return a.z<b.z;}
int main()
{
    scanf("%d%d",&n,&m);
    for (i=0;i<n;i++) scanf("%d",&a[i]);
    for (i=0;i<m;i++)
    {
        scanf("%d%d",&b[i].x,&b[i].y);
        b[i].x--; b[i].z=i;
    }
    sort(b,b+m,cmp1);
    memset(lis,inf,sizeof(lis));
    for (pos=0,i=0;i<n;i++)
    {
        while (pos<m && b[pos].x==i) b[pos].w=calc(b[pos].y),pos++;
        l[i]=calc(a[i]); lis[l[i]++]=a[i];
    }
    len=calc(inf);
    memset(lis,inf,sizeof(lis));
    for (pos=m-1,i=n-1;i>=0;i--)
    {
        while (pos>=0 && b[pos].x==i) b[pos].w+=calc(-b[pos].y),pos--;
        r[i]=calc(-a[i]); lis[r[i]++]=-a[i];
    }
    memset(c,0,sizeof(c));
    for (i=0;i<n;i++) if (l[i]+r[i]-1==len) c[l[i]]++;
    for (i=0;i<n;i++) if (l[i]+r[i]-1==len) d[i]=c[l[i]]==1;
    sort(b,b+m,cmp2);
    for (i=0;i<m;i++) printf("%d\n",max(b[i].w+1,len-d[b[i].x]));
    return 0;
}
