#include  <bits/stdc++.h>
#define  i64  long long
#define  PB push_back
#define  MP make_pair
#define  F  first
#define  S  second
#define  N  400010
using  namespace  std;

int  n,m,x,y,ans1[N],ans2[N],d1[N],d2[N],h[N],cnt[N],res[N];
vector<int>  lis,lds;
vector< pair<int,int> >  Q[N];

int  main(){
	scanf("%d%d",&n,&m);
	for  (int  i = 1;i <= n; i++)  scanf("%d",&h[i]);
	for  (int  i = 1;i <= m; i++){
		scanf("%d%d",&x,&y);
		Q[x].PB(MP(y,i));
	}
	for  (int  i = 1;i <= n; i++){
		for  (int  j = 0,ed = Q[i].size();j < ed; j++){
			int  low = lower_bound(lis.begin(), lis.end(), Q[i][j].F)-lis.begin();
			ans1[Q[i][j].S] = low;
		}
		int  low = lower_bound(lis.begin(), lis.end(), h[i])-lis.begin();
		if  (low == lis.size())  lis.PB(h[i]);
		else  lis[low] = h[i];//
		d1[i] = low;
	}
	for  (int  i = n;i >= 1; i--){
		for  (int  j = 0,ed = Q[i].size();j < ed; j++){
			int  low = lower_bound(lds.begin(), lds.end(), -Q[i][j].F)-lds.begin();
			ans2[Q[i][j].S] = low;
		}
		int  low = lower_bound(lds.begin(), lds.end(), -h[i])-lds.begin();
		if  (low == lds.size())  lds.PB(-h[i]);
		else  lds[low] = -h[i];//
		d2[i] = low;
	}
	int  ans = lis.size();
	for  (int  i = 1;i <= n; i++)
		if  (d1[i] + d2[i] + 1 == ans)  cnt[d1[i]]++;
	for  (int  i = 1;i <= n; i++)
		for  (int  j = 0,ed = Q[i].size(); j < ed; j++)
			if  (d1[i] + d2[i] + 1 == ans && cnt[d1[i]] == 1)
				res[Q[i][j].S] = max(ans-1, ans1[Q[i][j].S] + ans2[Q[i][j].S] + 1);
			else  res[Q[i][j].S] = max(ans, ans1[Q[i][j].S] + ans2[Q[i][j].S] + 1);
	for  (int  i = 1;i <= m; i++)  printf("%d\n",res[i]);
    return 0;
}

 		    	   					   	 		  		 			