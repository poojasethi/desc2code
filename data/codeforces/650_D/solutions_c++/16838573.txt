#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int inf=1000000005;
struct tnode{
	int ls,rs,v;
}t[16000001];
int i,j,k,n,m,fl[510001],fr[510001],a[510001],b[510001],rt1[510001],rt2[510001],w,ans,tot;
int change(int p,int x,int v,int tp,int lc,int rc){
	t[++tot]=t[p];p=tot;
	if (lc==rc){
		if (tp) t[p].v=max(t[p].v,v);else t[p].v=min(t[p].v,v);
		return p;
	}
	int m=(lc+rc)>>1;
	if (x<=m) t[p].ls=change(t[p].ls,x,v,tp,lc,m);else t[p].rs=change(t[p].rs,x,v,tp,m+1,rc);
	if (tp) t[p].v=max(t[t[p].ls].v,t[t[p].rs].v);else t[p].v=min(t[t[p].ls].v,t[t[p].rs].v);
	return p;
}
int query(int p,int x,int tp,int lc,int rc){
	if (!p) return 1;
	if (lc==rc) return lc;
	int m=(lc+rc)>>1;
	if (tp) return (t[t[p].rs].v>x)?query(t[p].rs,x,tp,m+1,rc):query(t[p].ls,x,tp,lc,m);
	else return (t[t[p].rs].v<x)?query(t[p].rs,x,tp,m+1,rc):query(t[p].ls,x,tp,lc,m);
}
int work(int x,int y){
	int t1=query(rt1[x-1],y,0,1,n+1),t2=query(rt2[x+1],y,1,1,n+1);
	if (t1+t2-1>=w) return t1+t2-1;
	if (fl[x]+fr[x]-1<w) return w;
	return (b[fl[x]]==1)?w-1:w;
}
int main(){
	scanf("%d%d",&n,&m);tot=1;w=0;memset(b,0,sizeof(b));
	rt1[0]=0;t[0].v=inf;t[0].ls=t[0].rs=0;
	rt2[n+1]=1;t[1].v=0;t[1].ls=t[1].rs=1;
	for (i=1;i<=n;i++) scanf("%d",&a[i]);
	for (i=1;i<=n;i++){
		k=query(rt1[i-1],a[i],0,1,n+1);fl[i]=k;w=max(w,fl[i]);
		rt1[i]=change(rt1[i-1],k+1,a[i],0,1,n+1);
	}
	for (i=n;i;i--){
		k=query(rt2[i+1],a[i],1,1,n+1);fr[i]=k;
		rt2[i]=change(rt2[i+1],k+1,a[i],1,1,n+1);
	}
	for (i=1;i<=n;i++){
		if (fl[i]+fr[i]-1<w) continue;
		b[fl[i]]++;
	}
	for (i=1;i<=m;i++){
		scanf("%d%d",&j,&k);
		ans=work(j,k);
		printf("%d\n",ans);
	}
	return 0;
}