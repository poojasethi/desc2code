#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int maxn=400000+500;
int n,m,tot,a[maxn],b[maxn],f[maxn],First[maxn],Next[maxn];
int ca[maxn],cb[maxn],cf[maxn],cg[maxn];
int l,s[maxn],sm[maxn];
bool vis[maxn];
void add(int u,int v)
{
	Next[v]=First[u];
	First[u]=v;
}
int find(int x,bool p)
{
	int l=1,r=tot,mid,k=0;
	while (l<=r)
	{
		mid=(l+r)/2;
		if (b[mid]<x)
		{
			k=mid;
			l=mid+1;
		}
		else
		    r=mid-1;
	}
	if (p)
	{
	    if (k==tot) {tot++;b[tot]=x;}
	    else
	        b[k+1]=x;
	}
	return k+1;
}
int find_(int x,bool p)
{
	int l=1,r=tot,mid,k=0;
	while (l<=r)
	{
		mid=(l+r)/2;
		if (b[mid]>x)
		{
			k=mid;
			l=mid+1;
		}
		else
		    r=mid-1;
	}
	if (p)
	{
	    if (k==tot) {tot++;b[tot]=x;}
	    else
	        b[k+1]=x;
	}
	return k+1;
}
int main()
{
	cin>>n>>m;
	for (int i=1;i<=n;i++)
	    scanf("%d",&a[i]);
	for (int i=1;i<=m;i++)
	{
		scanf("%d%d",&ca[i],&cb[i]);
		add(ca[i],i);
	}
	for (int i=1;i<=n;i++)
	{
	    int e=First[i];
	    while (e)
	    {
	    	cf[e]=find(cb[e],0);
	    	e=Next[e];
		}
		f[i]=find(a[i],1);
	}
	l=tot;
	tot=0;
	for (int i=n;i>0;i--)
	{
		int e=First[i];
		while (e)
		{
			cg[e]=find_(cb[e],0);
			e=Next[e];
		}
		find_(a[i],1);
	}
	for (int i=n;i>0;i--)
	    if (f[i]==l||(s[f[i]+1]&&a[i]<a[sm[f[i]+1]]))
	    {
	    	s[f[i]]++;
	    	if (s[f[i]]==1||a[sm[f[i]]]<a[i])
	    	    sm[f[i]]=i;
		}
	for (int i=l;i>=1;i--)
	    if (s[i]==1)
	        vis[sm[i]]=1;
	int ans;
	//cout<<l<<endl;
	/*for (int i=1;i<=m;i++)
	    cout<<cf[i]<<" "<<cg[i]<<endl;
	for (int i=1;i<=n;i++)
	    cout<<vis[i]<<" ";
	cout<<endl;*/
	for (int i=1;i<=m;i++)
	    if (vis[ca[i]])
	        printf("%d\n",max(l-1,cf[i]+cg[i]-1));
	    else
	        printf("%d\n",max(l,cf[i]+cg[i]-1));
	return 0;
}
