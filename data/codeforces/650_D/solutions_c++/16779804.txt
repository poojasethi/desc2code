#include <bits/stdc++.h>
using namespace std;
typedef pair <int, int> PII;

#define M 1000010
#define X first
#define Y second

const int INF = 1e9 + 1;

PII op[M];

struct dat {
	int x, y, id;
	dat (int x = 0, int y = 0, int id = 0) : x(x), y(y), id(id) {}
} q[M];

bool cmp(dat a, dat b) {return a.x < b.x;}

int n, Q, a[M], m, b[M], f[M], h[M], ans[M], H[M], F[M], cnt[M];

void init() {
	int i, j;
	for (i = 1; i <= n; i++) b[i] = INF - a[i];
	reverse(b + 1, b + n + 1);
	for (m = 0, i = 1; i <= n; i ++) {
		j = lower_bound(H, H + m, b[i]) - H;
		m += (j == m); f[i] = m; F[i] = j + 1;
		op[i] = PII(j, H[j]); H[j] = b[i];
	}
	int t = m;
	for (m = 0, i = 1; i <= n; i++) {
	    j = lower_bound(h, h + m, a[i]) - h;
	    m += (j == m); if (j + 1 + F[n+1-i] == t + 1) cnt[j+1]++;
	    h[j] = a[i];
	}
}

int main() {
//	freopen("D.in", "r", stdin);
	int x, y, id, z;
	scanf("%d %d", &n, &Q);
    for (int i = 1; i <= n; i++) scanf("%d", a + i);
    init();
    for (int i = 0; i < Q; i++) {scanf("%d %d", &x, &y); q[i] = dat(x, y, i);}
    sort(q, q + Q, cmp);
    int i = 1, L = 0;
    for (int t = 0; t < Q; t++) {
		x = q[t].x, y = q[t].y, id = q[t].id;
    	for ( ; i < x; i++) {
			int j = lower_bound(h, h + L, a[i]) - h;
			L += (j == L); h[j] = a[i];
			H[op[n-i+1].X] = op[n-i+1].Y;
    	}
    	H[op[n-i+1].X] = op[n-i+1].Y;
    	ans[id] = lower_bound(h, h + L, y) - h + lower_bound(H, H + f[n-x], INF - y) - H + 1;
    	z = m;
    	int j = lower_bound(h, h + L, a[x]) - h;
    	if ((j + 1 + F[n+1-x] == m + 1) && cnt[j+1] == 1) z--;
    	ans[id] = max(ans[id], z);
    }
    for (int i = 0; i < Q; i++) printf("%d\n", ans[i]);
}