#include<bits/stdc++.h>
#define eps 1e-6
#define LL long long
#define pii pair<int, int>
#define pb push_back
#define mp make_pair
//#pragma comment(linker, "/STACK:1024000000,1024000000")
using namespace std;

const int MAXN = 500000;
const int INF = 0x3f3f3f3f;

struct Query {
	int id;
	int pos, val;
	int l, r;
	bool operator < (const Query& Q) const {
		return pos < Q.pos;
	}
} q[MAXN];

int n, m, h[MAXN];
int lisL[MAXN], lisR[MAXN];
int g[MAXN];
int maxlen;
int ans[MAXN];
int posCnt[MAXN];

void get_lisL() {
	maxlen = 0;
	int pointer = 1;
	for (int i = 1; i <= n; i++) 
		g[i] = INF;
	for (int i = 1; i <= n; i++) {
		while (pointer <= m && q[pointer].pos == i) {
			int pos = lower_bound(g+1, g+n+1, q[pointer].val) - g;
			q[pointer].l = pos;
			pointer++;
		}
		int pos = lower_bound(g+1, g+n+1, h[i]) - g;
		lisL[i] = pos;
		g[pos] = h[i];
		maxlen = max(pos, maxlen);
	}
}

void get_lisR() {
	int pointer = m;
	for (int i = 1; i <= n; i++) 
		g[i] = INF;
	for (int i = n; i > 0; i--) {
		while (pointer > 0 && q[pointer].pos == i) {
			int pos = lower_bound(g+1, g+n+1, -q[pointer].val) - g;
			q[pointer].r = pos;
			pointer--;
		}
		int pos = lower_bound(g+1, g+n+1, -h[i]) - g;
		lisR[i] = pos;
		g[pos] = -h[i];
	}
}

int get_posCnt() {
	for (int i = 1; i <= n; i++) {
		if (lisL[i]+lisR[i] > maxlen)
			posCnt[lisL[i]]++;
	}
}

int main()
{
    //freopen("input.txt", "r", stdin);
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; i++)
		scanf("%d", &h[i]);
	for (int i = 1; i <= m; i++) {
		scanf("%d%d", &q[i].pos, &q[i].val);
		q[i].id = i;
	}
	sort(q+1, q+m+1);
	get_lisL();
	get_lisR();
	get_posCnt();
	for (int i = 1; i <= m; i++) {
		int pos = q[i].pos;
		if (q[i].l+q[i].r > maxlen) 
			ans[q[i].id] = q[i].l + q[i].r - 1;
		else if (lisL[pos]+lisR[pos] > maxlen && posCnt[lisL[pos]]==1)
			ans[q[i].id] = maxlen - 1;
		else 
			ans[q[i].id] = maxlen;

	}
	for (int i = 1; i <= m; i++)
		printf("%d\n", ans[i]);
    return 0;
}















