#include<cstdio>
#include<cstdlib>
#include<cstring>

#include<vector>
#include<iostream>
#include<algorithm>
using namespace std;

const int _N=400010;
const int INF=2000000000;

int n,m,s[_N],t[_N];
int o[_N],f[_N],g[_N];
int qp[_N],qv[_N],r0[_N],r1[_N];
vector<int> ask[_N];

void calc0()
{
    for(int i=1;i<=n;i++)
        o[i]=INF;
    o[0]=0;
    for(int i=1;i<=n;i++)
    {
        f[i]=lower_bound(o,o+n,s[i])-o;
        for(int j=0,k=ask[i].size();j<k;j++)
            r0[ask[i][j]]=lower_bound(o,o+n,qv[ask[i][j]])-o;
        o[f[i]]=min(o[f[i]],s[i]);
    }
}

void calc1()
{
    for(int i=1;i<=n;i++)
        o[i]=0;
    o[0]=-INF;
    for(int i=1;i<=n;i++)
    {
        g[i]=lower_bound(o,o+n,t[i])-o;
        for(int j=0,k=ask[n-i+1].size();j<k;j++)
            r1[ask[n-i+1][j]]=lower_bound(o,o+n,-qv[ask[n-i+1][j]])-o;
        o[g[i]]=min(o[g[i]],t[i]);
    }
}

int main()
{
    scanf("%d%d",&n,&m);
    for(int i=1;i<=n;i++)
        scanf("%d",s+i),t[n-i+1]=-s[i];
    for(int i=1;i<=m;i++)
        scanf("%d%d",qp+i,qv+i),ask[qp[i]].push_back(i);
    calc0(),calc1();
    static int ans,num[_N];
    for(int i=1;i<=n;i++)
        ans=max(ans,f[i]);
    for(int i=1;i<=n;i++)
        if(f[i]+g[n-i+1]==ans+1)
            ++num[f[i]];
    for(int i=1;i<=m;i++)
    {
        static int now;
        now=ans;
        if(f[qp[i]]+g[n-qp[i]+1]==ans+1&&num[f[qp[i]]]==1)
            --now;
        now=max(now,r0[i]+r1[i]-1);
        printf("%d\n",now);
    }
    return 0;
}