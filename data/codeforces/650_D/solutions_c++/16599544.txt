#include<bits/stdc++.h>
#define N 800005
#define M 16000005
using namespace std;
int U[N],num[N],c[N],u[N],v[N],a[N],F[N],G[N],ok[N];
int n,m,i,x,y,LIS,ans;
int root[N],L[M],R[M],sum[M],tot,ql,qr;
void Update(int &x,int l,int r,int pos,int value){
	int y=x;sum[x=++tot]=sum[y];
	L[x]=L[y];R[x]=R[y];sum[x]=max(sum[x],value);
	if (l==r) return;int mid=(l+r)>>1;
	if (pos<=mid) Update(L[x],l,mid,pos,value);
					else  Update(R[x],mid+1,r,pos,value);
}
int Query(int x,int l,int r){
	if (ql<=l&&r<=qr||!x) return sum[x];
	int mid=(l+r)>>1,ret=0;
	if (ql<=mid) ret=Query(L[x],l,mid);
	if (qr>mid)  ret=max(ret,Query(R[x],mid+1,r));
	return ret;
}
void add(int x,int v){for (;x<=*U;x+=x&-x) c[x]=max(c[x],v);}
int ask(int x){int s=0;for (;x;x-=x&-x) s=max(s,c[x]);return s;}
int main(){
	scanf("%d%d",&n,&m);
	for (i=1;i<=n;i++)
		scanf("%d",&a[i]),U[++*U]=a[i];
	for (i=1;i<=m;i++)
		scanf("%d%d",&u[i],&v[i]),U[++*U]=v[i];
	sort(U+1,U+*U+1);
	*U=unique(U+1,U+*U+1)-(U+1);
	for (i=1;i<=n;i++)
		a[i]=lower_bound(U+1,U+*U+1,a[i])-U;
	for (i=1;i<=m;i++)
		v[i]=lower_bound(U+1,U+*U+1,v[i])-U;
	for (i=1;i<=*U;i++) c[i]=0;
	for (i=1;i<=n;i++){
		F[i]=ask(a[i]-1)+1;
		root[i]=root[i-1];
		Update(root[i],1,*U,a[i],F[i]);
		add(a[i],F[i]);LIS=max(LIS,F[i]);
  }
  for (i=1;i<=m;i++){
  	x=u[i];y=v[i];
  	ql=1;qr=y-1;
  	num[i]=(ql<=qr?Query(root[x-1],1,*U):0);
  }
	for (i=1;i<=*U;i++) c[i]=0;
	for (i=1;i<=tot;i++) L[i]=R[i]=sum[i]=0;tot=0;
	for (i=1;i<=n;i++) root[i]=0;
  for (i=n;i;i--){
  	G[i]=ask((*U)-a[i])+1;
  	root[i]=root[i+1];
  	Update(root[i],1,*U,a[i],G[i]);
  	add((*U)-a[i]+1,G[i]);
  }for (i=1;i<=n;i++)
  	if (F[i]+G[i]-1==LIS) ok[F[i]]++;
  for (i=1;i<=m;i++){
  	x=u[i];y=v[i];
	  ql=y+1;qr=*U;
	  ans=num[i]+(ql<=qr?Query(root[x+1],1,*U):0)+1;
	  ans=max(ans,LIS-(F[x]+G[x]-1==LIS)*(ok[F[x]]==1));
	  printf("%d\n",ans);
  }
}