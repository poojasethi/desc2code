#include"cstdio"
#include"cstring"
#include"iostream"
#include"algorithm"
#include"vector"
#include"queue"
#include"stack"
#include"list"
#include"set"
#include"map"
#define LL long long
#define PII pair<int,int>
#define PPI pair<PII,int>
#define PIP pair<int,PII>
#define PPP pair<PII,PII>
#define X first
#define Y second
#define mid ((l+r)>>1)
#define INF 1000000007
#define FOR(a,b,c) for(int a=b;a<=c;a++)
#define FO_(a,b,c) for(int a=b;a>=c;a--)
#define REP(i,u,v) for(int i=H[u],v=to[i];i;i=nxt[i],v=to[i])
using namespace std;
const int N = 400100;
const int M = N << 5;

int r1[N],r2[N];
int Max[M],L[M],R[M],cnt;
int query(int k,int l,int r,int t,int v) {
	if(!k) return 0;
	if(v<=l||r<=t) return 0;
	if(t<=l&&r<=v) return Max[k];
	int x=query(L[k],l,mid,t,v);
	int y=query(R[k],mid,r,t,v);
	return max(x,y);
}
void maintain(int k) {
	Max[k]=max(Max[L[k]],Max[R[k]]);
}
int update(int k,int l,int r,int t,int v) {
	int p=++cnt;
	L[p]=L[k], R[p]=R[k];
	if(l==r-1) {
		Max[p]=v;
		return p;
	}
	if(t<mid) L[p]=update(L[k],l,mid,t,v);
	else R[p]=update(R[k],mid,r,t,v);
	maintain(p);
	return p;
}

int n,m,A;
int a[N],b[N];
int val[N],imp[N];
int len1[N],len2[N];
int res1[N],res2[N];
vector<int> vec[N];
void init() {
	FOR(i,1,n) A=max(A,len1[i]);
	FOR(i,1,n) {
		if(len1[i]+len2[i]==A+1)
			vec[len1[i]].push_back(i);
	}
	FOR(i,1,A) {
		if(vec[i].size()==1)
			imp[vec[i][0]]=1;
	}
}
int main() {
	cin>>n>>m;
	FOR(i,1,n) scanf("%d",val+i);
	FOR(i,1,m) scanf("%d%d",a+i,b+i);
	FOR(i,1,n) {
		len1[i]=query(r1[i-1],1,INF,1,val[i])+1;
		r1[i]=update(r1[i-1],1,INF,val[i],len1[i]);
	}
	FOR(i,1,m) {
		int j=a[i],v=b[i];
		res1[i]=query(r1[j-1],1,INF,1,v);
	}
	cnt=0;
	FO_(i,n,1) {
		len2[i]=query(r2[i+1],1,INF,val[i]+1,INF)+1;
		r2[i]=update(r2[i+1],1,INF,val[i],len2[i]);
	}
	FOR(i,1,m) {
		int j=a[i],v=b[i];
		res2[i]=query(r2[j+1],1,INF,v+1,INF);
	}
	init();
	FOR(i,1,m) {
		printf("%d\n",max(res1[i]+res2[i]+1,A-imp[a[i]]));
	}
	return 0;
}