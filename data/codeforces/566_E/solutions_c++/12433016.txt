#include <stdio.h>
#include <map>

using namespace std;

const int maxn = 1010;
const int len = 31;

map<int, int> fan;
int yhwz[maxn+1];
int yhmi[maxn+1];
int n;
int top;
int g[maxn+1][35+1];
int ge[maxn+1], sjd[maxn+1];
bool lian[maxn+1][maxn+1];
bool nb[maxn+1];
int xiao[maxn+1], xiaotop;

void init() {
	int i, j, x;
	scanf("%d", &n);
	top = 0;
	for (i=1; i<=n; ++i) {
		yhwz[i] = (i - 1) / len;
		yhmi[i] = (i - 1) % len;
		if (yhwz[i] > top) top = yhwz[i];
	}
	for (i=0; i<len; ++i)
		fan[1<<i] = i;
	for (i=1; i<=n; ++i) {
		scanf("%d",&ge[i]);
		for (j = 0; j <= top; ++j) g[i][j] = 0;
		for (j=1; j<=ge[i]; ++j) {
			scanf("%d", &x);
			g[i][yhwz[x]] |= (1 << yhmi[x]);
		}
	}
}

inline int yuan(int &wz, int &num) {
	return wz * len + fan[num] + 1;
}

void calc_lian_nb() {
	int i,j,k,x,w,n1,n2,qq,yu;
	for (i=1; i<=n; ++i)
		for (j=1; j<=n; ++j) 
			lian[i][j] = false;
	for (i=1; i<=n; ++i)
		nb[i] = false;

	for (i=1; i<=n; ++i)
		for (j=i+1; j<=n; ++j) 
			if (ge[i] + ge[j] - n <= 2) {
				n1=n2=-1;
				qq=0;
				for (k=0; k<=top; ++k) {
					x = (g[i][k] & g[j][k]);
					while (x) {
						yu = (x&(x^(x-1)));
						w = yuan(k,yu);
						++qq;
						if (qq>2) break;
						if (n1==-1) n1 = w;
						else n2 = w;
						x-=yu;
					}
					if (qq>2) break;
				}
				if (qq==2) {
					// printf("<%d %d>\n",n1,n2);
					lian[n1][n2]=lian[n2][n1]=true;
					nb[n1]=nb[n2]=true;
				}
			}
	for (i=1; i<=n; ++i) {
		sjd[i] = 0;
		for (j=1; j<=n; ++j)
			if (lian[i][j]) ++sjd[i];
		// printf("sjd[%d]=%d\n",i,sjd[i]);
	}
}

bool star() {
	int i;
	for (i=1; i<=n; ++i)
		if (ge[i]!=n) return false;
	return true;
}

void work() {
	int i, j, k, x, w1, w2, s;
	bool done;
	if (n==2) {
		printf("1 2\n");
		return;
	}
	if (n==3) {
		printf("1 2\n");
		printf("2 3\n");
		return;
	}
	if (star()) {
		for (i=2; i<=n; ++i)
			printf("1 %d\n", i);
		printf("\n");
		return;
	}
	calc_lian_nb();
	k = 0;
	w1 = w2 = -1;
	for (i=1; i<=n; ++i)
		if (nb[i]) {
			++k;
			if (w1==-1) w1 = i;
			else w2 = i;
		}
	// dumb-bell	
	if (k==2) {
		i = 1;
		while (ge[i]==n) ++i;
		printf("%d %d\n", w1, w2);
		for (j=1; j<=n; ++j)
			if ((j!=w1)&&(j!=w2)) {
				if (g[i][yhwz[j]] & (1<<yhmi[j])) printf("%d %d\n",j,w1);
				else printf("%d %d\n",j,w2);
			}
		return;
	}

	for (i=1; i<=n; ++i)
		for (j=i+1; j<=n; ++j) 
			if (lian[i][j]) printf("%d %d\n",i,j);
	
	for (i=1; i<=n; ++i)
		if (!nb[i]) {
			k=-1;
			for (j=1; j<=n; ++j)
				if ((g[j][yhwz[i]] & (1<<yhmi[i])))
					if ((k==-1)||(ge[j]<ge[k])) k = j;
			xiaotop = 0;
			// printf("%d: ", i);
			for (j=1; j<=n; ++j)
				if ((g[k][yhwz[j]] & (1<<yhmi[j])) && nb[j]) {
					xiao[++xiaotop] = j;
					// printf("%d ", j);
				}
			// printf("\n");
			done = false;
			for (j=1; j<=xiaotop; ++j) {
				s = 0;
				for (k=1; k<=xiaotop; ++k)
					if (lian[xiao[j]][xiao[k]]) ++s;
				if (s>1) {
					printf("%d %d\n", i, xiao[j]);
					done = true;
					break;
				}				
			}
			if (!done) {
				for (k=1; k<=xiaotop; ++k)
					if (sjd[xiao[k]] == 1) {
						printf("%d %d\n", i, xiao[k]);
						break;
					}
			}
		}
}

int main() {
	//freopen("E.in", "r", stdin);
	init();
	work();
	return 0;
}