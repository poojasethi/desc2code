#include <cstdio>
#include <cstdlib>
typedef unsigned int u;
int count[65777];

int n, len;
u a[1020][33];

#define get(a, i) (a[(i) >> 5] & (1 << ((i) & 31)))
#define set1(a, i) a[(i) >> 5] |= (1 << ((i) & 31))
#define cnt(x) (count[(x) & 65535] + count[(x) >> 16])

void init(){
  int i, j, k;
  scanf("%d", &n);
  if (n == 2){
    printf("1 2\n"); exit(0);
  } else if (n == 3){
    printf("1 2\n2 3\n"); exit(0);
  }
  len = 1 + (n >> 5);
  for (i = 1; i < 65536; i++) count[i] = count[i >> 1] + (i & 1);
  for (i = 1; i <= n; i++){
    scanf("%d", &k);
    while (k--){
      scanf("%d", &j);
      set1(a[i], j);
    }
  }
  for (i = 1; i <= n; i++) for (j = 1; j <= n; j++) if (!get(a[i], j)) return;
  for (i = 2; i <= n; i++) printf("%d 1\n", i);
  exit(0);
}

int f[1020][1020], x[1020], y[1020], e;
void ins(int a, int b){
  if (!f[a][b]){e++; x[e] = a; y[e] = b; f[a][b] = f[b][a] = 1;}
}

int isleaf[1020];
u ILF[33];
void getbone(){
  int i, j, k, s = 0, x, y, l;
  for (i = 1; i <= n; i++) isleaf[i] = 1;
  for (i = 1; i <= n; i++)
    for (j = i + 1; j <= n; j++){
      s = 0;
      for (k = 0; k < len; k++)
	s += cnt(a[i][k] & a[j][k]);
      if (s == 2){
	x = y = 0;
	for (k = 0; k < len; k++)
	  if (a[i][k] & a[j][k]){
	    for (l = 0; l < 32; l++)
	      if (get(a[i], l + (k << 5)))
		if (get(a[j], l + (k << 5))){
		  if (x == 0) x = l + (k << 5);
		  else if (y == 0) y = l + (k << 5);
		}
	  }
	ins(x, y); isleaf[x] = 0; isleaf[y] = 0;
      }
    }
  for (i = 1; i <= n; i++) if (isleaf[i]) set1(ILF, i);
}

u q[33];
int deg[1020];
void getleaf(int L){
  int i, j, mx = 0, se = 0, i1, i2;
  for (i = 0; i < 33; i++) q[i] = 0;
  for (i = 1; i <= n; i++) deg[i] = 0;
  for (i = 1; i <= n; i++) if (!isleaf[i]) set1(q, i);
  for (i = 1; i <= n; i++)
    if (get(a[i], L)){
      for (j = 0; j < 33; j++) q[j] &= a[i][j];
    }
  for (i = 1; i <= e; i++)
    if (get(q, x[i]) && get(q, y[i]))
      deg[x[i]]++, deg[y[i]]++;
  for (i = 1; i <= n; i++)
    if (deg[i] > deg[mx] || (mx == 0 && get(q, i)))
      se = mx, mx = i;
    else if (deg[i] > deg[se] || (se == 0 && get(q, i)))
      se = i;
  if (se == 0 || deg[mx] != deg[se]) ins(mx, L);
  else {
    i1 = i2 = 0;
    for (i = 1; i <= n; i++)
      if (get(a[i], mx) && !get(a[i], se)) i2 = 1;
      else if (get(a[i], se) && !get(a[i], mx)) i1 = 1;
    if (i2 && !i1) ins(se, L);
    else if (i1 && !i2) ins(mx, L);
    else {
      for (i = 1; i <= n; i++){
	for (j = 1; j <= n; j++)
	  if (!get(a[i], j)) break;
	if (j <= n) break;
      }
      for (j = 1; j <= n; j++)
	if (j == mx) printf("%d %d\n", mx, se);
	else if (j == se);
	else if (get(a[i], j)) printf("%d %d\n", j, mx);
	else printf("%d %d\n", j, se);
      exit(0);
    }
  }
}

int main(){
  init();
  getbone();
  for (int i = 1; i <= n; i++) if (isleaf[i]) getleaf(i);
  for (int i = 1; i <= e; i++) printf("%d %d\n", x[i], y[i]);
  return 0;
}
