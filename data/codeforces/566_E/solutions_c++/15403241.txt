#include <bitset>
#include <stdio.h>
#include <algorithm>
using namespace std;

#define n	1005
#define Bit	bitset<n>
#define For(i,a,b)	for(int i=a;i<=b;i++)

int		N,M,V[n];
Bit		T,A[n],E[n],G[n];

#define CH	(ch=getchar())
int		IN(){
		int x=0,ch;
		for	(;CH<'0'||ch>'9';);
		for	(;ch>='0'&&ch<='9';CH)	(x*=10)+=ch-'0';
		return	x;
}

int		main(){
	//	freopen("tree.in","r",stdin);
	//	freopen("tree.out","w",stdout);

		N=IN();
		For(i,1,N)	{
			int k=IN(),x;
			for	(;k--;)	x=IN(),A[i][x]=1;
		}

		For(i,1,N)	For(j,i+1,N)	{
			Bit	t=A[i]&A[j];
			if	(t.count()==2)	{
				int u,v;
				for	(u=1;!t[u];u++);
				for	(v=u+1;!t[v];v++);
				if	(!E[u][v])	E[u][v]=E[v][u]=1,M++;
			}
		}

		if	(!M)	{
			For(i,2,N)	printf("%d %d\n",1,i);
			return	0;
		}
		For(i,1,N)	if	(E[i].count())	T[i]=1,V[i]=(E[i].count()==1),G[i]=E[i],G[i][i]=1;

		if	(T.count()==2)	{
			int u,v;
			for	(u=1;!T[u];u++);
			for	(v=N;!T[v];v--);
			printf("%d %d\n",u,v);

			For(i,1,N)	if	(!T[i])	{
				Bit	t;
				For(j,1,N)	if	(A[j][i]&&A[j].count()!=N)	{t=A[j];break;}

				For(j,1,N)	if	(t[j]&&!T[j])
					T[j]=1,printf("%d %d\n",j,u);	u=v;
			}
			return	0;
		}

		For(i,1,N)	if	(!T[i])	{
			Bit	t=T;
			For(j,1,N)	if	(A[j][i])	t&=A[j];

			if	(t.count()==2)	{
				For(j,1,N)	if	(t[j]&&V[j])	E[i][j]=E[j][i]=1;
			}	else	{
				For(j,1,N)	if	(t[j]&&((G[j]&t)==t))	E[i][j]=E[j][i]=1;
			}
		}

		For(i,1,N)	For(j,i+1,N)
			if	(E[i][j])	printf("%d %d\n",i,j);
}