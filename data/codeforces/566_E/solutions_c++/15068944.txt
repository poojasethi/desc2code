#include<stdio.h>
#define N 1005
using namespace std;
int init[1<<17],cnt[1<<17],del[N],d[N];
int S[N],num,n,m,i,j,ok,x,y;
struct Bitset{
  int f[N/16+2];
  Bitset(){for (int i=0;i<=m;i++) f[i]=0;}
  friend Bitset operator & (const Bitset &a,const Bitset &b){
    Bitset c;
    for (int i=0;i<=m;i++)
      c.f[i]=a.f[i]&b.f[i];
    return c;
  }friend int operator == (const Bitset &a,const Bitset &b){
    for (int i=0;i<=m;i++)
      if (a.f[i]!=b.f[i]) return 0;
    return 1;
  }
  void set(int x){f[x>>4]^=1<<(x-(x>>4<<4));}
  int boo(int x){return (f[x>>4]>>(x-(x>>4<<4)))&1;}
  int Find(){
    for (int i=0;i<=m;i++)
      if (f[i])
        return (i<<4)+init[f[i]&-f[i]];
    return -1;
  }
  int Count(){
    int ret=0;
    for (int i=0;i<=m;i++)
      ret+=cnt[f[i]];
    return ret;
  }
}one,zero,com,now,tmp,Link[N],a[N];
void Print(int x,int y){printf("%d %d\n",x+1,y+1);}
int main(){
  for (i=0;i<16;i++) init[1<<i]=i;
  for (i=0;i<1<<16;i++) cnt[i]=cnt[i>>1]+(i&1);
  scanf("%d",&n);m=n>>4;
  for (i=0;i<n;i++) one.set(i);
  for (i=0,ok=1;i<n;i++){
    scanf("%d",&x);
    while (x--) 
      scanf("%d",&y),--y,a[i].set(y);
    ok&=(a[i]==one);
  }if (ok){
    for (i=1;i<n;i++)
      Print(0,i);
    return 0;
  }for (i=0;i<n;i++)
    for (j=i+1;j<n;j++){
      com=a[i]&a[j];
      if (com.Count()!=2) continue;
      x=com.Find();com.set(x);
      y=com.Find();
      if (!Link[x].boo(y)){
        Link[x].set(y),Link[y].set(x);
        d[x]++,d[y]++,del[x]=del[y]=1;
        Print(x,y),num++;
      }
  }if (num==1){
    for (i=0;i<n;i++)
      if (!(a[i]==one)) break;
    for (j=0;j<n;j++)
      if (a[i].boo(j)&&j!=x&&j!=y)
        Print(j,x),del[j]=1;
    for (j=0;j<n;j++)
      if (!del[j]) Print(y,j);
    return 0;
  }
  for (i=0;i<n;i++)
    if (!del[i]){
      com=one;now=zero;
      for (j=0;j<n;j++)
        if (a[j].boo(i))
          com=com&a[j];
      *S=0;while (true){
      	x=com.Find();
      	if (x==-1) break;
      	com.set(x);if (x==i||!del[x]) continue;
      	S[++*S]=x;now.set(x);
      }if ((*S)==2){
        Print(i,d[S[1]]==1?S[1]:S[2]);
        continue;
      }for (j=1;j<=*S;j++){
         tmp=now;tmp.set(S[j]);
        if ((Link[S[j]]&tmp)==tmp) break;
      }Print(i,S[j]);
    }
}