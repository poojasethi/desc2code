#include <cstdio>
#include <iostream>
#include <cstring>
#include <cmath>
#include <map>

using namespace std;

const int N=200012;
map<int,int> M;
int n,m,h,fa[N],st[N],en[N],pos[N],tot,top=0,a[N],c[N],id,hash,past[N];
long long ans=0;

void add(int x,int t)
  {
    while (x<=top) 
      {
        c[x]+=t;x+=x&(-x);
      }
  }
int sum(int x)
  {
    int ans=0;
    while (x)
      {
        ans+=c[x];
        x-=x&(-x);
      }
    return ans;
  }
void work(int k)
  {
    fa[k]=tot,pos[k]=++top;past[top]=k;
    for (k=(k+m)%h;fa[k]==0;k=(k+m)%h) fa[k]=tot,pos[k]=++top,past[top]=k;
  }
int find(int hash)
  {
    int l=pos[hash],r=en[fa[hash]],res=-1,s=sum(l-1),u=l-1;
    while (l<=r)
      {
        int mid=(l+r)>>1;
        if (sum(mid)-s<mid-u) res=mid,r=mid-1;else l=mid+1;
      }
    if (res!=-1)
      {
        ans+=res-u-1;add(res,1);//printf("%d %d %d %d %d\n",res,u,past[res],past[u],res-u-1);
        return res;
      }
    l=st[fa[hash]];r=pos[hash]-1;s=sum(l-1);u=l-1;
    while (l<=r)
      {
        int mid=(l+r)>>1;
        if (sum(mid)-s<mid-u) res=mid,r=mid-1;else l=mid+1;
      }
    ans+=res-u+en[fa[hash]]-pos[hash];add(res,1);return res;
  }
int main()
  {
    scanf("%d%d%d",&h,&m,&n);
    for (int i=0;i<h;++i)
      if (fa[i]==0) ++tot,st[tot]=top+1,work(i),en[tot]=top;
    for (int i=1;i<=n;++i)
      {
        getchar(); char ch=getchar();
        if (ch=='+')
          {
            scanf("%d%d",&id,&hash);
            M[id]=find(hash);
          }
        else scanf("%d",&id),add(M[id],-1);
      }
    printf("%I64d\n",ans);
  }