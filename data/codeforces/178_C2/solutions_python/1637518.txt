#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<map>
#include<set>
#include<queue>
#include<vector>

using namespace std;
#define For(i,l,r) for(int i=l;i<=r;++i)
#define Cor(i,l,r) for(int i=l;i>=r;--i)
#define Fill(a,b) memset(a,b,sizeof(a))
#define PII pair<int,int>
#define INF
#define MaxN 1000200
#define FI first
#define SE second
#define MP make_pair
#define sit set<int>::iterator
typedef long long lint;
lint ans;
vector<set<int> > S;
PII belong[MaxN];
map<int ,PII >where;
int h,n,m,Q,tot,len[MaxN];
bool vis[MaxN];
int next(int a,int b){
    sit ne=S[a].lower_bound(b);
    if(ne==S[a].end())return *S[a].begin();else return *ne;
}

PII ins(int hash){
    int z=next(belong[hash].FI,belong[hash].SE);
    S[belong[hash].FI].erase(z);
    int t;
    if(belong[hash].SE<=z)ans+= -(belong[hash].SE-z);
    else ans += len[belong[hash].FI]-abs(belong[hash].SE-z);
    return MP(belong[hash].FI,z);
}

void era(int id){
     PII t=where[id];
     S[t.FI].insert(t.SE);
}

int main(){//freopen("temp.in", "r", stdin); freopen("temp.out", "w", stdout);
    scanf("%d%d%d",&h,&m,&Q);
    For(i,0,h-1)if(!vis[i]){
        int now=i,num=0;vis[now]=true;
        do{
            ++num;
            belong[now]=MP(tot,num);
            now=(now+m)%h;
            vis[now]=true;
        }while(now!=i);
        len[tot]=num;
        S.push_back(set<int>());
        ++tot;
    }
    For(i,0,tot-1){
        For(j,1,len[i])S[i].insert(j);
    }
    while(Q--){
        getchar();char ch = getchar();
        if(ch=='+'){
            int who,hash;
            scanf("%d%d",&who,&hash);
            where[who]=ins(hash);
        }
        if(ch=='-'){
            int who;scanf("%d",&who);
            era(who);
        }
    }
    cout<<ans<<endl;
}
