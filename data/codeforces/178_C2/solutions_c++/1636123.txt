#include <cstdio>
#include <iostream>
#include <cstring>
#include <cmath>
#include <map>
using namespace std;

const int N=200012;
map<int,int> M;
int n,m,f[N],st[N],en[N],pos[N],tot,h,num=0,a[N],c[N],id,p,past[N];
long long ans=0;

void add(int x,int t)
  { while (x<=num) {c[x]+=t;x+=x&(-x);} }
int sum(int x)
  { int ans=0; while (x) {ans+=c[x]; x-=x&(-x);} return ans;}
void work(int k)
  {
    f[k]=tot,pos[k]=++num;past[num]=k;
    for (k=(k+m)%h;f[k]==0;k=(k+m)%h) 
	  f[k]=tot,pos[k]=++num,past[num]=k;
  } 
//��״����
  
int find(int p)
  {
    int l=pos[p],r=en[f[p]],res=-1,s=sum(l-1),u=l-1;
    while (l<=r)  {
      int mid=(l+r)>>1;
      if (sum(mid)-s<mid-u) res=mid,r=mid-1;else l=mid+1;
    }
    if (res!=-1)  {
      ans+=res-u-1;add(res,1);
	  return res;
    }
    l=st[f[p]];r=pos[p]-1;s=sum(l-1);u=l-1;
    while (l<=r)  {
      int mid=(l+r)>>1;
      if (sum(mid)-s<mid-u) res=mid,r=mid-1;else l=mid+1;
    }
    ans+=res-u+en[f[p]]-pos[p];
	add(res,1);
	return res;
  }
//����
int main()
  {
    scanf("%d%d%d",&h,&m,&n);
    for (int i=0;i<h;++i)
      if (f[i]==0) ++tot,st[tot]=num+1,work(i),en[tot]=num;
    for (int i=1;i<=n;++i)
      {
        getchar(); char ch=getchar();
        if (ch=='+')
          {
            scanf("%d%d",&id,&p);
            M[id]=find(p);
          }
        else scanf("%d",&id),add(M[id],-1);
      }
    printf("%I64d\n",ans);
  }