#include <cstdio>
#include <algorithm>
#include <set>
#include <map>
using namespace std;

const int MX = 200007;

typedef pair<int,int> PI;
int h,m,n,ts;
int hash,id;
char c;

PI trans[MX];
bool V[MX];
set<int> DP[MX];
map<int,PI> id2hash;

int main() {
  scanf("%d%d%d", &h,&m,&n);
  int tn = 0;
  for(int i=0; i<h; ++i) {
    if(!V[i]) {
      int in = 0;
      int x = i;
      do {
        V[x] = 1; 
        trans[x] = PI(tn,in++);
        x=(x+m)%h;
      } while(x!=i);
      ts=in;
      ++tn;
    }
  }
  for(int i=0; i<tn; ++i)
    for(int j=0; j<ts; ++j) DP[i].insert(j);
  long long res = 0;
  while(n--) {
    scanf(" %c", &c);
    if(c=='-') {
      scanf("%d", &id);
      PI addr = id2hash[id];
      DP[addr.first].insert(addr.second);
    } else {
      scanf("%d%d", &id,&hash);
      PI addr = trans[hash];
      set<int>::iterator it = DP[addr.first].upper_bound(addr.second-1);
      if(it == DP[addr.first].end()) {
        it = DP[addr.first].begin();
        res+=ts-addr.second+(*it);
      } else {
        res+=*it-addr.second;
      }
      id2hash[id] = PI(addr.first, *it);
      DP[addr.first].erase(it);
    }
  }

  printf("%I64d\n", res);

}
