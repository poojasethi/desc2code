#include <cstdio>
#include <cstring>
#include <algorithm>
#define CH getchar()
using namespace std;

int p=1,cnt=1;
int tree[100005][26];
int f[100005],g[100005];

void init()
{
	char ch=CH;
	while(ch<'a'||ch>'z')ch=CH;
	int p=1;
	while(ch>='a'&&ch<='z')
	{
		int &x=tree[p][ch-'a'];
		if(!x) x=++cnt;
		p=x;
		ch=CH;
	}
}

void dfs(int x)
{
	int A=0,B=0,tA=0,tB=0,cnt=0;
	int flag=1;
	for(int ch=0;ch<26;ch++)
	if(tree[x][ch])
	{
		flag=0;
		++cnt;
		int y=tree[x][ch];
		dfs(y);
		if(!f[y])f[x]=1;
		if(!g[y])g[x]=1;
	}
	if(flag){f[x]=0;g[x]=1;return;}	
}

int n,m;
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)init();
	dfs(1);
	if(!f[1]){puts("Second");return 0;}
	if(g[1]){puts("First");return 0;}
	printf("%s\n", (m&1)?("First"):("Second"));
	return 0;
}
