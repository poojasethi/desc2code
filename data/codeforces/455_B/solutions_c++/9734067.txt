#include<iostream>

using namespace std;

const int MAXN = 1e5 + 10;
int next[MAXN][30], last = 1, w[MAXN], l[MAXN];

void add(string s)
{
	int now = 0;
	for(int i = 0; i < s.length(); i++)
		if(next[now][s[i] - 'a'])
			now = next[now][s[i] - 'a'];
		else
			now = next[now][s[i] - 'a'] = last++;
}

void DFS(int n)
{
	bool flag = false;
	for(int i = 0; i < 26; i++)
	{
		int x = next[n][i];
		if(x)
		{
			DFS(x);
			if(!l[x])
				l[n] = true;
			if(!w[x])
				w[n] = true;
			flag = true;
		}
	}
	if(!flag)
		l[n] = true;
}

int main()
{
	int n, k;
	cin >> n >> k;
	for(int i = 0; i < n; i++)
	{
		string s;
		cin >> s;
		add(s);
	}
	DFS(0);
	if(l[0] && w[0])
		cout << "First" << endl;
	else if(w[0])
		if(k % 2 == 1)
			cout << "First" << endl;
		else
			cout << "Second" << endl;
	else
		cout << "Second" << endl;
	return 0;
}
