import sys
from random import randint
from time import time

last=time()

def interval():
    global last
    print time()-last
    last=time()

def readIn():
    return map(lambda x:int(x),sys.stdin.readline().strip("\n").split(" "))

def getScore(node):
    childScore=map(getScore,node.children)
    for x in childScore:
        if x[0]==2:
            wScore=1
            break
    else:
        wScore=2
    if len(childScore)==0:
        lScore=2
    else:
        for x in childScore:
            if x[1]==1:
                lScore=2
                break
        else:
            lScore=1
    return (wScore,lScore)
            

class node():    
    def __init__(self,parent,string):
        self.parent=parent
        self.string=string
        self.children=[]
        self.childStrings=[]

    def addChild(self,child):
        self.children.append(child)
        self.childStrings.append(child.string)

    def getChild(self,childString):
        for i in xrange(len(self.children)):
            if childString==self.childStrings[i]:
                return self.children[i]
        return False
        
def main():
    root=node(None, " ")
    n,k=readIn()
    for _ in xrange(n):
        string=sys.stdin.readline().strip("\n")
        last=root
        for i in xrange(len(string)):
            currString=string[0:i+1]
            temp=last.getChild(currString)
            if temp!=False:
                last=temp
            else:
                temp=node(last,currString)
                last.addChild(temp)
                last=temp
    
    gameScore=getScore(root)
    #print gameScore
    if gameScore==(1,2):
        print 'First'
        return
    elif gameScore==(1,1):
        if (k%2)==0:
            print 'Second'
            return
        else:
            print 'First'
            return
    else:
        print 'Second'
        return

main()
