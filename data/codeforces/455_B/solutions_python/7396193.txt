import sys

sys.setrecursionlimit(100001)

n, k = [int(x) for x in raw_input().strip().split()]

trie = {}

def addtotrie(s):
    currnode = trie
    for i in range(len(s)):
        if s[i] not in currnode:
            currnode[s[i]] = {}
            currnode = currnode[s[i]]
        else:
            currnode = currnode[s[i]]
            
for i in range(n):
    addtotrie(raw_input().strip())

def winning(node):
    if 'win' in node:
        return node['win']
    if node == {}:
        node['win'] = False
        return False
    onlywinningchildren = True
    for k in node.keys():
        if not winning(node[k]):
            onlywinningchildren = False
    res = not onlywinningchildren
    node['win'] = res
    return res

def losing(node):
    if 'lose' in node:
        return node['lose']
    k = node.keys()
    if len(k) == 0 or len(k) == 1 and k[0] == 'win':
        node['lose'] = True
        return True
    onlywinningchildren = True
    for k in node.keys():
        if k == 'win':
            continue
        if not losing(node[k]):
            onlywinningchildren = False
    res = not onlywinningchildren
    node['lose'] = res
    return res

winning(trie)
losing(trie)

if trie['win'] and trie['lose']:
    print "First"
elif trie['win'] and not trie['lose']:
    if k % 2 == 1:
        print "First"
    else:
        print "Second"
elif trie['lose'] and not trie['win']:
    print "Second"
else:
    print "Second"
    

