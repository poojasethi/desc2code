def make_trie(words):
	trie = {'' : {}}
	for word in words:
		tmp_trie = trie['']
		for c in word:
			tmp_trie = tmp_trie.setdefault(c, {})
	return trie

def move_to_result(trie, node, result):
	if not trie[node]:
		return not result
	if any(not move_to_result(trie[node], c, result) for c in trie[node]):
		return True
	return False

n, k = map(int, raw_input().split())
words = []
for _ in xrange(n):
	words.append(raw_input())
t = make_trie(words)
w = move_to_result(t, '', True)
f = move_to_result(t, '', False)

if (w and f) or (w and not f and k%2 == 1):
	print "First"
else:
	print "Second"