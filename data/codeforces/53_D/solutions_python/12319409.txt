from itertools   import *
from collections import *
from operator    import *
from bisect      import *
from fractions   import *

Ii = lambda: map(int, raw_input().split())
Is = lambda: raw_input().split()
ri = raw_input

n = input()
A = Ii()
B = Ii()

mm = 0
moves = []
while 1:
  while mm<n and A[mm]==B[mm]: mm+=1
  if mm==n: break
  to_swap = min(j for j in xrange(mm+1,n) if B[j]==A[mm])
  for x in xrange(to_swap,mm,-1):
    B[x],B[x-1] = B[x-1],B[x]
    moves.append(x)

print len(moves)
for x in moves:
  print x,x+1