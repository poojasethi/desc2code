

stdin_flag=1
if not stdin_flag:
  read_line_index=0
  testcasefilename="test.txt"
  Stestcase=open(testcasefilename).read()
  read_line_datas=Stestcase.split("\n")


def debugs(s):
  if not stdin_flag:
    print ";;;",s

#####################################
######################################

def read_line():
  global read_line_index
  if stdin_flag:
    return raw_input()
  else:
    s=read_line_datas[read_line_index]
    read_line_index+=1
    return s

def answer():
  if stdin_flag:
    return solve()
  else:
    while read_line_proceed():
      solve()
      

def read_line_proceed():
  global read_line_index
  print"##################"
  while 1:
    if read_line_index>= len (read_line_datas ):
      return False
    if read_line_datas[read_line_index]=="%%%":
      read_line_index+=1
      return True
    read_line_index+=1


def readint():
  return int (read_line() )


def readints():
  return map(int, read_line().split(" "))

def reads():
  return read_line()




###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################

def compute(m,n,d):
  pass

def makelist(n):
  return [random.randint(1,500) for i in xrange(n)]

def center(x):
  x0=0
  y0=0
  for x1,y1,x2,y2 in x:
    x0+=x1+x2
    y0+=y1+y2
  return (x0/(2.0*len(x)), y0/(2.0*len(x)))

def bet(x,y,z):
  return x<=y<=z or z<=y<=x

def getspace(m):
  res=[]
  for i in xrange(len(m)-1):
    res.append( ( m[i][2],m[i+1][1] ) )
  return res

def swap(i,j,m):
  m[i],m[j]=m[j],m[i]

def solve():
  mm=[]
  n=readint()
  aa=readints()
  bb=readints()
  for i in xrange(n):
    for j in xrange(i,n):
      if aa[i]==bb[j]:nj=j;break
    for k in xrange(nj,i,-1):
      mm.append((k-1,k))
      swap(k,k-1,bb)
  debugs(bb)
  print len(mm)
  for i,j in mm:
    print"%s %s"%(i+1,j+1)

def test():
  pass

test()
answer()
