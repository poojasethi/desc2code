#pragma comment(linker, "/STACK:102400000,102400000")
#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
//#define dprintf(...) 
#define hash _hash
//#define dprintf(...) fprintf(outFile,__VA_ARGS__)

#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 1000005

template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}

//FILE* outFile;

inline void add(int &a,int b){a+=b;if(a>=mod)a-=mod;}


char s[202][202],t[N];
int dx[10],dy[10],to[40005],on[40005],digit[40005],vis[40005];
vi rev[40005];
bool found;
bool dfs(int x,int pos){
    if(pos<0){found=true;return 1;}
    FOREACH(it,rev[x]){
        int y=*it;
        if(on[y]!=-1)continue;
        if(dfs(y,pos-(digit[y]==t[pos]-'0')))return 1;
    }
    return 0;
}
int main(){
    //ios::sync_with_stdio(0);
    //cout<<fixed<<setprecision(10);
    //outFile=fopen("2.txt","w");
    int T,i,j,k,n,m;
    int q;
    scanf("%d%d%d",&n,&m,&q);
    for(i=0;i<n;i++)scanf("%s",s[i]);
    for(i=0;i<10;i++)scanf("%d%d",&dx[i],&dy[i]);
    for(i=0;i<n;i++)
        for(j=0;j<m;j++){
            int d=s[i][j]-'0';
            int x=i+dx[d],y=j+dy[d];
            if(x<0||x>=n||y<0||y>=m)x=i,y=j;
            digit[i*m+j]=d;
            to[i*m+j]=x*m+y;
        }
    n=n*m;
    for(i=0;i<n;i++)rev[to[i]].pb(i),on[i]=-1,vis[i]=0;
    vi v;
    for(i=0;i<n;i++)if(!vis[i]){
        int x=i;
        vi cycle;
        while(!vis[x]){
            vis[x]=1;
            cycle.pb(x);
            x=to[x];
        }
        int id=-1;
        for(j=0;j<cycle.size();j++)if(cycle[j]==x){id=j;break;}
        if(id==-1)continue;
        int mask=0;
        for(j=id;j<cycle.size();j++)mask|=1<<digit[cycle[j]];
        for(j=id;j<cycle.size();j++)on[cycle[j]]=mask,v.pb(cycle[j]);
    }
    while(q--){
        scanf("%s",t);
        int last[10];
        for(i=0;i<=9;i++)last[i]=-1;
        for(i=0;t[i];i++){
            last[t[i]-'0']=i;
        }
        found=false;
        FOREACH(it,v){
            int pos=-1;
            for(i=0;i<=9;i++){
                if(on[*it]&(1<<i))continue;
                Max(pos,last[i]);
            }
            if(pos==-1||dfs(*it,pos)){found=true;break;}
        }
        if(found)puts("YES");else puts("NO");
    }
    return 0;
}