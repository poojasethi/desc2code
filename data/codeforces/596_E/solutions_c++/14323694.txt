#include <cstdio>
#include <algorithm>
#include <iostream>
#include <vector>
#include <string>
using namespace std;
#define MAXN 205*205
#define pb push_back
string s;
int n,m,q,mp[MAXN],ways[15][2],loophas[MAXN][15],NO[MAXN];
int st[MAXN],dis[MAXN],low[MAXN],tim,lst,teams,team[MAXN],tsiz[MAXN],trsiz[MAXN];
vector <int> v[MAXN],teamv[MAXN];
int scc(int x)
{
	low[x]=dis[x]=++tim;
	st[++lst]=x;
	for(int i=0;i<(int)v[x].size();i++)
		if(dis[v[x][i]]) low[x]=min(low[x],dis[v[x][i]]);
		else low[x]=min( low[x],scc( v[x][i]) );
	if(low[x]==dis[x])
	{
		++teams;
		int tem,siz=0;
		do
		{
			tem=st[lst];
			team[tem]=teams;
			loophas[teams][mp[tem]]=1;
			siz++;
			lst--;
		}
		while(tem!=x);
		trsiz[teams]=siz;
	}
	dis[x]=1000000000;
	return low[x];
}
int dfs(int tpos,int spos)
{
	int res=0;
	if(loophas[tpos][s[spos]-'0']) spos--;
	if(spos==-1) return 1;
	for(int i=0;i<(int)teamv[tpos].size();i++)
		res=max(res,dfs(teamv[tpos][i],spos));
	return res;
}
int pos(int i,int j)
{
	return (i-1)*m+j-1;
}
int main()
{
	scanf("%d %d %d",&n,&m,&q);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
		{
			char c;
			scanf(" %c",&c);
			mp[pos(i,j)]=c-'0';
		}
	for(int i=0;i<10;i++)
		scanf("%d %d",&ways[i][0],&ways[i][1]);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			if(i+ways[mp[pos(i,j)]][0]<=n && i+ways[mp[pos(i,j)]][0]>0 && j+ways[mp[pos(i,j)]][1]>0 &&j+ways[mp[pos(i,j)]][1]<=m)
			{
				//~ printf("(%d,%d) %d -> (%d,%d) %d\n",i+ways[mp[pos(i,j)]][0],j+ways[mp[pos(i,j)]][1],pos(i+ways[mp[pos(i,j)]][0],j+ways[mp[pos(i,j)]][1]),i,j,pos(i,j));
				v[ pos(i+ways[mp[pos(i,j)]][0],j+ways[mp[pos(i,j)]][1]) ].pb(pos(i,j));
			}
	for(int i=pos(1,1);i<=pos(n,m);i++)
		if(!dis[i])
			scc(i);
	//~ for(int i=pos(1,1);i<=pos(n,m);i++)
		//~ printf(" %d's team is %d\n",i,team[i]);
	//~ for(int i=1;i<=teams;i++)
	//~ {
		//~ printf("team %d HAS\n",i);
		//~ for(int j=0;j<10;j++)
			//~ if(loophas[i][j])
				//~ printf("%d ",j);
		//~ puts("");
	//~ }
	for(int i=pos(1,1);i<=pos(n,m);i++)
		for(int j=0;j<(int)v[i].size();j++)
			if(team[i]!=team[v[i][j]])
			{
				int y=v[i][j];
				//~ printf("CHECK %d %d\n",team[i],team[y]);
				teamv[team[i]].pb(team[y]);
				tsiz[team[y]]++;
			}
	for(int i=1;i<=q;i++)
	{
		cin >> s;
		int yes=0;
		for(int j=1;j<=teams;j++)
			if(!tsiz[j])
			{
				//~ printf("CHECKING %d: ",j);
				int e=s.size()-1;
				//if(trsiz[j]>1)
					while(loophas[j][s[e]-'0'] && e>=0) e--;
				//~ printf("FIRST LOOP %d\n",e);
				if(e==-1) {yes=1; break;}
				yes=dfs(j,e);
				if(yes) break;
			}
		if(yes) puts("YES");
		else puts("NO");
	}
	
}/*
3 4 0
1 0 2 3
0 2 2 3
0 1 1 3
1 1
1 0
0 1
-2 -1
0 0
0 0
0 0
0 0
0 0
0 0

4 2 5
01
23
45
67
0 1
0 -1
0 1
0 -1
0 1
0 -1
0 1
0 -1
0 1
0 -1
0000000000
010101011101
32232232322
44343222342444324
6767

*/
