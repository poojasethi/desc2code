#include<set>
#include<map>
#include<list>
#include<cmath>
#include<queue>
#include<ctime>
#include<stack>
#include<bitset>
#include<string>
#include<vector>
#include<cstdio>
#include<climits>
#include<cstring>
#include<iomanip>
#include<iostream>
#include<algorithm>
using namespace std;

typedef pair<int,int> pii;

int maze[210][210];
int next[12][2];

pii dp[210][210][12];
bool vis[210][210][12];

int n,m,q;

pii dfs(int x,int y,int z)
{
    if(dp[x][y][z]!=pii(0,0))
        return dp[x][y][z];
    if(vis[x][y][z])
        return dp[x][y][z]=pii(-1,-1);

    vis[x][y][z]=1;

    int newx=x+next[maze[x][y]][0];
    int newy=y+next[maze[x][y]][1];

    if(newx<1||newx>n||newy<1||newy>m)
    {
        for(int i=0;i<=9;i++)
            dp[x][y][i]=pii(-1,-1);
        dp[x][y][maze[x][y]]=pii(x,y);
        return dp[x][y][z];
    }

    if(maze[newx][newy]==z)
        return dp[x][y][z]=pii(newx,newy);
    else
        return dp[x][y][z]=dfs(newx,newy,z);
}

int main()
{
    scanf("%d%d%d",&n,&m,&q);
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            char c;
            scanf(" %c",&c);
            maze[i][j]=c-'0';
        }
    }
    for(int i=0;i<=9;i++)
        scanf("%d%d",&next[i][0],&next[i][1]);

    for(int i=1;i<=n;i++)
        for(int j=1;j<=m;j++)
            for(int k=0;k<=9;k++)
                dp[i][j][k]=pii(0,0);

    for(int i=1;i<=n;i++)
        for(int j=1;j<=m;j++)
            for(int k=0;k<=9;k++)
                dfs(i,j,k);

    map<string,bool> mp;
    while(q--)
    {
        string s;
        cin>>s;
        int ok=0;
        if(!mp.count(s))
        {
            int l=s.size();
            for(int i=1;i<=n;i++)
            {
                for(int j=1;j<=m;j++)
                {
                    if(maze[i][j]==s[0]-'0')
                    {
                        int pos=1;
                        pii tmp(i,j);
                        while(pos<l)
                        {
                            tmp=dp[tmp.first][tmp.second][s[pos]-'0'];
                            if(tmp==pii(-1,-1))
                                break;
                            pos++;
                        }
                        if(pos==l)
                        {
                            ok=1;
                            break;
                        }
                    }
                }
                if(ok)
                    break;
            }
            mp[s]=ok;
        }

        ok=mp[s];
        if(ok)
            printf("YES\n");
        else
            printf("NO\n");
    }

    return 0;
}
