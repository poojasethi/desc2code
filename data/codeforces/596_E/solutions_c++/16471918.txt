#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
using namespace std;
const int maxn = 205;
int n, m, q, nxt[maxn*maxn][10], a[10], b[10]; string t[maxn], s;
bool vis[maxn][maxn]; vector<int> start;
inline int pos(int x, int y){
	return x*m+y;
}
inline bool valid(int x, int y){
	return (x>=0 && x<n && y>=0 && y<m);
}
void dfs(int x, int y){
	vis[x][y] = 1;
	int u = pos(x,y);
	int d = t[x][y]-'0';
	int xx = x + a[d], yy = y + b[d];
	if(valid(xx,yy)){
		int v = pos(xx,yy);
		nxt[u][d] = v;
		if(!vis[xx][yy]) dfs(xx,yy);
		for(int i=0;i<10;i++)
			if(i != d) nxt[u][i] = nxt[v][i];
	} else nxt[u][d] = u;
}
bool query(){
	for(int i=0;i<(int)start.size();i++){
		int u = start[i];
		// cout << i << " " << u/m << " " << u%m << ": ";
		for(int j=0;j<(int)s.length() && u!=-1;j++){
			// cout << u << ":" << s[j] << ":" << nxt[u][s[j]-'0'] << " ";
			u = nxt[u][s[j]-'0'];
		}
		// cout << endl;
		if(u!=-1) return 1;
	}
	return 0;
}
int main(){
	cin >> n >> m >> q;
	for(int i=0;i<n;i++) cin >> t[i];
	for(int i=0;i<10;i++) cin >> a[i] >> b[i];
	memset(nxt,-1,sizeof nxt);
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++){
			if(vis[i][j]) continue;
			dfs(i,j); start.pb(pos(i,j));
		}
	while(q--){
		cin >> s; bool ans = query();
		if(ans) cout << "YES\n";
		else cout << "NO\n";
	}
	return 0;
}