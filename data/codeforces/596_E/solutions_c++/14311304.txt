//#pragma comment(linker, "/STACK:1024000000,1024000000")
#include <cstring>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <string>
#include <cstdio>
#include <stack>
#include <map>
#include <vector>
#include <set>
#include <bitset>
#include <string>
#include <queue>
using namespace std;
#define rep(i,l,r) for(i = l; i <= r; i++)
#define red(i,l,r) for(i=(l);i>=(r);i--)
#define u_long unsigned long long
#define fff(i, u) for(i = head[u]; i != -1; i = nxt[i])
#define fin() freopen("in.txt", "r", stdin)
#define fout() freopen("out.txt", "w", stdout)
#define clr(vis, a) memset(vis, a, sizeof(vis))
#define LL long long
#define ls id << 1
#define rs id << 1 | 1
#define lson id << 1, l, mid
#define rson id << 1 | 1, mid + 1, r
#define mid ( (l + r) >> 1 )
#define pb push_back
#define mp make_pair
#define pii pair<int, int>
#define X first
#define Y second
#define eps 1e-9
#define pi acos(-1)
const int maxn = 2e2 + 10;
const int maxm = maxn * 4 + 10;
const int inf = 1e9;
const LL mod = 1e9 + 7;
int getint() {char c;while((c = getchar()) && !(c >= '0' && c <= '9') && c != '-');int ret = c - '0', sgn = 0;if(c == '-') sgn = 1, ret = 0;while((c = getchar()) && c >= '0' && c <= '9')ret = ret * 10 + c - '0';if(sgn) ret = -ret;return ret;}
char  s[maxn][maxn];
int dx[10], dy[10];
char t[1000000 + 10];
int vis[maxn][maxn], is[maxn * maxn][10];
int n, m, q;
vector<int>g;
void dfs(int x, int y){
    vis[x][y] = 1;
    int pos = x * m + y;
    int c = (s[x][y] - '0');
    int nx = x + dx[c], ny = y + dy[c];
    if(nx < 0 || nx >= n || ny < 0 || ny >= m) is[pos][c] = pos;
    else{
        int xpos = nx * m + ny;
        is[pos][c] = xpos;
        if(!vis[nx][ny]) dfs(nx, ny);
        for(int i = 0; i < 10; i ++) if(i != c)is[pos][i] = is[xpos][i];
    }
}
bool judge(){
    int sz = g.size();
    int len = strlen(t);
    for(int i = 0; i < sz; i ++){
        int u = g[i];
        for(int j = 0; j < len; j ++){
            int v = (t[j] - '0');
            u = is[u][v];
            if(u == -1) break;
        }
        if(u != -1) return true;
    }
    return false;
}
int main(){
    while(scanf("%d%d%d", &n, &m, &q) == 3){
        int i;
        rep(i, 0, n - 1){
            scanf("%s", s[i]);
        }
        for(int i = 0; i < 10; i ++) scanf("%d%d", &dx[i], &dy[i]);
        clr(vis, 0);
        clr(is, -1);
        g.clear();
        for(int i = 0; i < n; i ++){
            for(int j = 0; j < m; j ++){
                if(vis[i][j]) continue;
                dfs(i, j);
                g.pb(i * m + j);
            }
        }
        while(q --){
            scanf("%s", t);
            if(judge()) puts("YES");
            else puts("NO");
        }
    }
    return 0;
}








