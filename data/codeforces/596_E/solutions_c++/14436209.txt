#include <cstdio>

#include <cmath>

#include <cstring>

#include <iostream>

#include <algorithm>

#include <queue>

#include <vector>

#include <map>



using namespace std;



typedef long long LL;


int n,m,q,dx[15],dy[15];
char g[205][205];
char s[1000005];
vector<pair<int,int> >v;
bool vis[205][205];
pair<int,int> nxt[205][205][15];

void dfs(int x,int y)
{
    int dq,xx,yy;
    vis[x][y]=true;
    dq=g[x][y]-'0';
    xx=x+dx[dq];yy=y+dy[dq];
    if (xx>=1&&xx<=n&&yy>=1&&yy<=m)
    {
        nxt[x][y][dq]=make_pair(xx,yy);
        if (!vis[xx][yy]) dfs(xx,yy);
        for (int i=0;i<10;++i) nxt[x][y][i]=nxt[xx][yy][i];
        nxt[x][y][dq]=make_pair(xx,yy);
    }else nxt[x][y][dq]=make_pair(x,y);
}
bool check(char s[])
{
    int x,y,len,dqx,dqy;
    len=strlen(s);
    for (int i=0;i<v.size();++i)
    {
        x=v[i].first;y=v[i].second;
        for (int j=0;j<len;++j)
        {
            if (x==-1||y==-1) break;
            dqx=x;dqy=y;
            x=nxt[dqx][dqy][s[j]-'0'].first;
            y=nxt[dqx][dqy][s[j]-'0'].second;
        }
        if (x!=-1&&y!=-1) return true;
    }
    return false;
}

int main()

{
    scanf("%d%d%d",&n,&m,&q);
    for (int i=1;i<=n;++i) scanf("%s",g[i]+1);
    for (int i=0;i<10;++i) scanf("%d%d",&dx[i],&dy[i]);
    memset(vis,false,sizeof(vis));
    for (int i=1;i<=n;++i)
        for (int j=1;j<=m;++j)
            for (int k=0;k<10;++k) nxt[i][j][k]=make_pair(-1,-1);
    for (int i=1;i<=n;++i)
        for (int j=1;j<=m;++j)
        {
            if (vis[i][j]) continue;
            dfs(i,j);
            v.push_back(make_pair(i,j));
        }
    for (int i=1;i<=q;++i)
    {
        scanf("%s",s);
        if (check(s)) printf("YES\n");
        else printf("NO\n");
    }

    return 0;

}