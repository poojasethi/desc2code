#include <set>
#include <map>
#include <list>
#include <stack>
#include <queue>
#include <deque>
#include <vector>
#include <bitset>
#include <string>
#include <iomanip>
#include <complex>
#include <utility>
#include <iostream>
#include <iterator>
#include <algorithm>
#include <functional>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <cctype>
#include <cstdlib>
#include <cstring>
#include <cassert>
#define INF 0x3F3F3F3F
#define sqr(x) ((x)*(x))
#define MP make_pair
#define PB push_back
#define F first
#define S second
typedef long long LL;
typedef long double LD;
typedef std::pair<int, int> PII;
using namespace std;
const int MOD = 1e9+7;
const int maxn = 200+5;
const LD eps = 1e-6;
LD PI = acos((LD)(-1));

int n, m, q;
char s2[10000005];
char s[maxn][maxn];
int vis[maxn][maxn];
int dp[maxn*maxn][20];
int dx[10], dy[10];
vector<int> Q;

inline int id(int x, int y) { return x*m + y; }

void dfs(int x, int y) {
    vis[x][y] = 1;
    int t = (s[x][y]-'0'), p = id(x, y);
    int xx = x+dx[t], yy = y+dy[t];
    if (xx<0||xx>=n||yy<0||yy>=m) dp[p][t] = p;
    else {
        int v = id(xx, yy);
        dp[p][t] = id(xx, yy);
        if (vis[xx][yy] == 0) dfs(xx, yy);
        for (int i = 0; i < 10; i++)
            if (i != t) dp[p][i] = dp[v][i];
    }
}

int check(char *s2) {
    int sz = strlen(s2);
    for (int i = 0; i < Q.size(); i++) {
        int x = Q[i];
        for (int j = 0; j < sz; j++) {
            x = dp[x][s2[j]-'0'];
            if (x < 0) break;
        }
        if (x >= 0) return 1;
    }
    return 0;
}

int main() {
    //freopen("input.in", "r", stdin);
    //std::ios_base::sync_with_stdio(false);

    memset(dp, -1, sizeof(dp));
    scanf("%d%d%d", &n, &m, &q);
    for (int i = 0; i < n; i++)
        scanf("%s", s[i]);
    for (int i = 0; i < 10; i++)
        scanf("%d%d", &dx[i], &dy[i]);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            if (!vis[i][j]) {
                dfs(i, j);
                Q.PB(id(i, j));
            }
        }
    }
    for (int i = 0; i < q; i++) {
        scanf("%s", s2);
        if (check(s2)) puts("YES");
        else puts("NO");
    }

    return 0;
}

