#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;
#define MAXN 201

int N,M,Q;
char mat[MAXN][MAXN];
int dx[10],dy[10];
vector<pair<int,int> > con[MAXN][MAXN];
pair<int,int> nxt[MAXN][MAXN];
char s[1000001];
int vis[MAXN][MAXN];
int cnt = 1;
bool cyc[MAXN * MAXN][10];
int last[10];

int go (int i,int j) {
    vis[i][j] = -1;
    int x = nxt[i][j].first, y = nxt[i][j].second;
    int t = vis[x][y];
    if (t == 0) {
        int r = go(x,y);
        if (r) {
            if (vis[i][j] > 1) r = 0;
            else vis[i][j] = r, cyc[r][mat[i][j]] = 1;
        }
        else vis[i][j] = 1;
        return r;
    }
    if (t == -1) {
        vis[x][y] = vis[i][j] = ++cnt;
        cyc[cnt][mat[x][y]] = cyc[cnt][mat[i][j]] = 1;
        if (nxt[i][j] != make_pair(i,j)) return cnt;
        return 0;
    }
    vis[i][j] = 1;
    return 0;
}

bool dfs (int x,int y, int idx) {
    if (s[idx] == mat[x][y] + '0') --idx;
    if (idx == -1) return 1;
    for (int i=0;i<con[x][y].size();++i) {
        pair<int,int> t = con[x][y][i];
        if (dfs(t.first,t.second,idx)) return 1;
    }
    return 0;
}

int main () {
    scanf("%d %d %d",&N,&M,&Q);
    for (int i=0;i<N;++i) scanf("%s",mat[i]);
    for (int i=0;i<10;++i) scanf("%d %d",&dx[i],&dy[i]);
    for (int i=0;i<N;++i) for (int j=0;j<M;++j) {
        mat[i][j] -= '0';
        int x = i + dx[mat[i][j]], y = j + dy[mat[i][j]];
        if (x >= 0 && x < N && y >= 0 && y < M) con[x][y].push_back(make_pair(i,j)),nxt[i][j]=make_pair(x,y);
        else con[i][j].push_back(make_pair(i,j)), nxt[i][j]=make_pair(i,j);
    }
    for (int i=0;i<N;++i) for (int j=0;j<M;++j) if (!vis[i][j]) go(i,j);
    while (Q--) {
        scanf("%s",s);
        int n = strlen(s);
        for (int j=0;j<10;++j) {
            last[j] = -1;
            for (int i=n-1;i>=0;--i) if (s[i] == j + '0') {
                last[j] = i;
                break;
            }
        }
        bool done = 0;
        for (int i=0;i<N&&!done;++i) for (int j=0;j<M&&!done;++j) if (vis[i][j] > 1) {
            int idx = -1;
            for (int c=0;c<10;++c) if (!cyc[vis[i][j]][c]) idx=max(idx,last[c]);
            if (idx == -1) {
                done = 1;
                break;
            }
            for (int k=0;k<con[i][j].size();++k) {
                pair<int,int> x = con[i][j][k];
                if (vis[x.first][x.second] > 1) continue;
                if (dfs(x.first,x.second,idx)) {
                    done = 1;
                    break;
                }
            }
        }
        if (done) printf("YES\n");
        else printf("NO\n");
    }
    return 0;
}
