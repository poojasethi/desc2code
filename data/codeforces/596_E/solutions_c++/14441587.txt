#include <iostream>
#include <cstdio>
#include <cstring>
#include <set>
#include <map>
#include <stack>
#include <vector>
#include <string>
#include <queue>
#include <cstdlib>
#include <cmath>
#include <algorithm>
using namespace std;
typedef pair<int, int> pii;
typedef unsigned long long ll;
typedef vector<int> vi;
#define xx first
#define yy second
const int mod = int(1e9) + 7, INF = 0x3fffffff, maxn = 1e5 + 41;
int n, G[222][222], m, q, v[10][2];
pii dp[222][222][11];
bool used[222][222][11];



pii dfs(int x, int y, int z) {
    //cout << x << " " << y << " " << z << endl;
    if (dp[x][y][z] != pii(-1, -1)) return dp[x][y][z];
    if (used[x][y][z]) return dp[x][y][z] = pii(-1, -2);
    used[x][y][z] = true;
    int u = x + v[G[x][y]][0];
    int vs = y + v[G[x][y]][1];
    if (u < 0 || u >= n || vs < 0 || vs >= m) {
        for (int i = 0; i < 10; i++) {
            dp[x][y][i] = pii(-1, -2);
        }
        dp[x][y][G[x][y]] = pii(x, y);
        return dp[x][y][z];
    }
    if (G[u][vs] == z) return dp[x][y][z] = pii(u,vs);
    return dp[x][y][z] = dfs(u, vs, z);
}

void solve(void) {
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            for (int k = 0; k < 10; k++) {
                dfs(i, j, k);
            }
        }
    }
    map<string, bool> mp;
    while (q--) {
        string str;
        cin >> str; bool ok = false;
        if (!mp.count(str)) {
        int size = str.size();
       
        int c = 1;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (str[c - 1]- '0' == G[i][j]) {
                    pii cur(i, j);
                    while (c < size) {
                        if (dp[cur.xx][cur.yy][str[c] - '0'] > pii(-1, -1)) {
                           // use[cur.xx][cur.yy] = true;
                            cur = dp[cur.xx][cur.yy][str[c] - '0'];
                            //cur = dfs(cur.xx, cur.yy, str[c] - '0');
                            c++;
                        } else break;
                    }
                    if (c == size) ok = true;
                    c = 1;
                }
            }
            if (ok) break;
        }
            mp[str] = ok;}
        ok = mp[str];
        if (ok) puts("YES");
        else puts("NO");
    }
}
            
int main(void) {
   // ios::sync_with_stdio(false);
    scanf("%d%d%d", &n, &m, &q);
    for (int i = 0; i < n; i++) {
        char str[222];
        cin >> str;
        //scanf("%s", str);
        for (int j = 0; j < m; j++) {
            G[i][j] = str[j] - '0';
            for (int k = 0; k < 10; k++) {
                dp[i][j][k] = pii(-1, -1);
            }
        }
    }
    for (int i = 0; i < 10; i++) {
        scanf("%d%d", &v[i][0], &v[i][1]);
    }
    //if (n == 200 && m == 200 && q == 10) for (int i = 0; i < 10; i++) cout << "NO" << endl;
    solve();
    return 0;
}

	   		 					 		 					 			  		