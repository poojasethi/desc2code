a, b = map(int, raw_input().split())

def find_power(n, p):
	z = 0
	while n % p == 0:
		n //= p
		z += 1
	return z

primes = (2, 3, 5)
powers_a = [find_power(a, p) for p in primes]
powers_b = [find_power(b, p) for p in primes]

powers_min = [min(p1, p2) for (p1, p2) in zip(powers_a, powers_b)]

da = reduce(lambda x, y: x * y, (p**(pa - pm) for (p, pa, pm) in zip(primes, powers_a, powers_min)))
db = reduce(lambda x, y: x * y, (p**(pb - pm) for (p, pb, pm) in zip(primes, powers_b, powers_min)))

a //= da
b //= db

if a != b:
	print -1
else:
	print sum(pa - pm for (pa, pm) in zip(powers_a, powers_min)) + sum(pb - pm for (pb, pm) in zip(powers_b, powers_min))