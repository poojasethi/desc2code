#!/usr/bin/env python

def get_power(x, d):
    n = 0
    while x % d == 0:
        x /= d
        n += 1
    return n

def get_rem(x, divs):
    for d in divs:
        while x % d == 0:
            x /= d
    return x
    
def get_powers(x, divs):
    f = []
    for d in divs:
        f.append(get_power(x, d))
    rem = get_rem(x, divs)
    return (rem, f[0], f[1], f[2])

def get_min_eats(a, b):
    divs = [2, 3, 5]
    x, a1, a2, a3 = get_powers(a, divs)
    y, b1, b2, b3 = get_powers(b, divs)

    if x != y:
        return -1

    return abs(a1 - b1) + abs(a2 - b2) + abs(a3 - b3)

if __name__ == '__main__':
    a, b = map(int, raw_input().split())
    print get_min_eats(a, b)
