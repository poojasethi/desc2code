from Queue import * # Queue, LifoQueue, PriorityQueue
from bisect import * #bisect, insort
from datetime import * 
from collections import * #deque, Counter,OrderedDict,defaultdict
import calendar
import heapq
import math
import copy
import itertools
myread = lambda : map(int,raw_input().split())

def cheese_div(num):
    x = [0,0,0]

    while num % 2 == 0:
        num /= 2
        x[0] += 1

    while num % 3 == 0:
        num /= 3
        x[1] += 1

    while num % 5 == 0:
        num /= 5
        x[2] += 1


    return num,x




def solver():
    a,b = myread()
    
    now_a,div_a = cheese_div(a)
    now_b,div_b = cheese_div(b)
    #print div_a
    #print div_b

    
    if now_a == now_b:
        print abs(div_a[0]-div_b[0]) + abs(div_a[1] - div_b[1]) + abs(div_a[2] - div_b[2])
    else:
        print -1


if __name__ == "__main__":
    solver()
    
