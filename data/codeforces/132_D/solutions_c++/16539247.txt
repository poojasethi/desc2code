/*/**/

#include <bits/stdc++.h>

using namespace std;

const int N = 1e6 + 21;

string s;

int dp[N][2], way[N][2], n;

int calc(int pos, int z) {
	int &ret = dp[pos][z];
	if(pos == n) {
		return ret = z;
	}
	if(ret != -1) {
		return ret;
	}
	if(s[pos] - '0' == z) {
		ret = calc(pos + 1, z);
	}
	else {
		ret = min(calc(pos + 1, z), calc(pos + 1, 1 - z)) + 1;
	}
	return ret;
}

void pw(int p, int s) {
	cout << (s ? '-' : '+') << "2^" << p << endl;
}

void print(int pos, int z) {
	if(pos == n) {
		if(z) {
			pw(0, z);
		}
		return;
	}
	if(s[pos] - '0' == z) {
		print(pos + 1, z);
	}
	else if(dp[pos][z] == dp[pos + 1][z] + 1) {
		pw(n - pos - 1, z);
		print(pos + 1, z);
	}
	else {
		pw(n - pos, z);
		print(pos + 1, 1 - z);
	}
}

int main() {
	cin >> s;
	n = s.size();
	memset(dp, -1, sizeof dp);
	cout << calc(0, 0) << endl;
	print(0, 0);
	return 0;
}

 				 	 	  		 	 				  				  		