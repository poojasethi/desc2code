#!/usr/bin/python
import sys

MOD = 10 ** 9 + 7

def powmod (a, b, c):
	res = 1
	cur = a
	p = 1
	while p <= b:
		if p & b > 0:
			res = (res * cur) % c
		cur = (cur * cur) % c
		p <<= 1
	return res

def binom (n, k, c):
	k = min (k, n - k)
	f = 1
	for i in range (1, k + 1):
		f = (f * i) % c
	g = f
	for i in range (k + 1, n - k + 1):
		g = (g * i) % c
	h = g
	for i in range (n - k + 1, n + 1):
		h = (h * i) % c
	f = powmod (f, MOD - 2, MOD)
	g = powmod (g, MOD - 2, MOD)
	return (h * f * g) % MOD

while True:
	s = sys.stdin.readline ().strip ()
	if s == '':
		s = sys.stdin.readline ().strip ()
		if s == '':
			break
	n, = [int (x) for x in s.split ()]
	r = binom (n + n - 1, n, MOD)
	r = r * 2 - n
	print ((r % MOD) + MOD) % MOD
