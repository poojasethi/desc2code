#include <bits/stdc++.h>

using namespace std;

const int maxn = 20;

int n;
string s;
long long dp[maxn][maxn], p[maxn];

int main()
{
	cin.tie(0);
	ios::sync_with_stdio(false);

	cin >> n >> s;

	p[1] = 1;
	for(int i = 2; i < maxn; i++)
		p[i] = p[i-1] * 10ll;

	for(int i = 0; i <= n; i++){
		for(int j = 0; j <= n; j++){
			long long x = s[2*n-i-j] - int('0');

			if(i)
				dp[i][j] = dp[i-1][j] + p[i]*x;
			if(j)
				dp[i][j] = max(dp[i][j], dp[i][j-1] + p[j]*x);
		}
	}

	int i = n, j = n;

	while(i || j){
		long long x = s[2*n-i-j] - int('0');
		if(i && dp[i][j] == dp[i-1][j] + p[i] * x){
			i--;
			cout << 'H';
		}
		else{
			j--;
			cout << 'M';
		}
	}

	return 0;
}
	 	 	 	  	  	   				   					