#include <stdio.h>
#define NMAX 128
int n;
char s[NMAX];
long long a[NMAX][NMAX];
long long v10[18];
int pre[NMAX][NMAX];
void afisare(int x, int y){
	if(x) afisare(x-1, y-pre[x][y]);
	else return;
	if(pre[x][y]) printf("H");
	else printf("M");
}
int main(){

	scanf("%d\n", &n);
	fgets(s+1, NMAX, stdin);
	v10[0] = 1;
	for(int i = 1; i <= 18; ++i)
		v10[i] =v10[i-1]* 10;
	a[1][1] = a[1][0] = (s[1] - '0') * v10[n-1];
	pre[1][1] =  1;
	
	for(int i = 2; i <= 2*n; ++i){
		if(i <= n) {
			a[i][0] = a[i-1][0] + (s[i]-'0') * v10[n-i];
			a[i][i] = a[i-1][i-1] + (s[i] - '0') * v10[n-i];
			pre[i][i] = 1;
			
		}
		for(int p1 = 1; p1 <= n && p1 <= i; ++p1){
			if(i-1 >= p1) if(a[i-1][p1-1] + (s[i]-'0')*v10[n-p1] > a[i-1][p1] + (s[i]-'0')*v10[n-i+p1]){
				a[i][p1] = a[i-1][p1-1] + (s[i]-'0')*v10[n-p1];
				pre[i][p1] = 1;
			}
			else a[i][p1] = a[i-1][p1] + (s[i]-'0')*v10[n-i+p1];
		}
	}
//	printf("%I64d\n", a[2*n][n]);
	afisare(2*n, n);
//	printf("\n");
	return 0;
}