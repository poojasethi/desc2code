#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

const long long inf=0x3f3f3f3f3f3f3f3fll;

using namespace std;

typedef long long ll;

ll dp[21][21],p[21];
int n;
char s[41];

ll dfs(int x,int y)
{
	ll &ret=dp[x][y];
	if(ret+1) return ret;
	ret=0;
	if(x<n) ret=max(ret,dfs(x+1,y)+p[n-1-x]*(s[x+y]-'0'));
	if(y<n) ret=max(ret,dfs(x,y+1)+p[n-1-y]*(s[x+y]-'0'));
	return ret;
}

void display(int x,int y)
{
	if(x<n && dfs(x,y)==dfs(x+1,y)+p[n-1-x]*(s[x+y]-'0')) cout<<'H',display(x+1,y);
	else if(y<n && dfs(x,y)==dfs(x,y+1)+p[n-1-y]*(s[x+y]-'0')) cout<<'M',display(x,y+1);
}

int main()
{
	p[0]=1;
	for(int i=1;i<=18;i++)
		p[i]=p[i-1]*10;
	scanf("%d%s",&n,s);
	memset(dp,-1,sizeof(dp));
	display(0,0);
	cout<<endl;
	return 0;
}
