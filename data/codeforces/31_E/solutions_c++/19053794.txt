#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
using namespace std;
typedef long long LL;
#define INF 0x3f3f3f3f
#define eps 1e-8

int n;
char s[40], ans[40], f[40];
LL m[20][20];

void Dfs(int cur, int a, int b, LL x)
{
	if (a < 0 || b < 0) return;
	if (x > m[a][b]) m[a][b] = x;
	else return;
	if (cur == 2*n)
	{
		for (int i = 0; i < 2*n; i++)
			ans[i] = f[i];
		return;
	}
	LL c = 1, d = 1;
	for (int i = 0; i < a-1; i++)
		c *= 10;
	for (int i = 0; i < b-1; i++)
		d *= 10;
	f[cur] = 'H';
	Dfs(cur+1, a-1, b, x+c*(s[cur]-'0'));
	f[cur] = 'M';
	Dfs(cur+1, a, b-1, x+d*(s[cur]-'0'));
}

int main()
{
	scanf("%d%s", &n, s);
	for (int i = 0; i < 20; i++)
	for (int j = 0; j < 20; j++)
		m[i][j] = -1;
	memset(ans, 0, sizeof(ans));
	Dfs(0, n, n, 0);
	printf("%s\n", ans);
	return 0;
}
