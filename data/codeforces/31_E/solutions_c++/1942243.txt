#include <iostream>

using namespace std;

const int MAXN = 20;

int n;
string A;
long long pow[MAXN], dp[MAXN][MAXN];

int main()
{
	cin >> n >> A;
	pow[1] = 1;
	for (int i = 2 ; i < 20 ; i++)
		pow[i] = 10 * pow[i-1];
	for (int i = 0 ; i <= n ; i++)
		for (int j = 0 ; j <= n ; j++)
		{
			int dig = A[2*n-i-j]-'0';
			if (i)
				dp[i][j] = dp[i-1][j] + pow[i]*dig;
			if (j)
				dp[i][j] = max(dp[i][j], dp[i][j-1] + pow[j]*dig);
		}
	int i = n, j = n;
	while (i || j)
	{
		int dig = A[2*n-i-j]-'0';
		if (i && dp[i][j] == dp[i-1][j] + pow[i]*dig)
		{
			i--;
			cout << 'H';
		}
		else
		{
			j--;
			cout << 'M';
		}
	}
	cout << endl;
	return 0;
}
		 	 		 	  	   		 			 	