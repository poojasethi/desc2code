#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<string>
using namespace std;

int n;
char s[55];
long long dp[20][20], octs[20];
string ans[20][20];

void getans(const int i, const int j) {
	if (dp[i][j] != -1) return;
	if (i == 0 && j == 0) {
		dp[i][j] = 0;
		return ;
	}
	int nowdig = s[2 * n - i - j] - '0';
	long long c1 = 0, c2 = 0;
	if (i > 0) {
		getans(i - 1, j);
		c1 = dp[i - 1][j] + nowdig * octs[i - 1];
	}
	if (j > 0) {
		getans(i, j - 1);
		c2 = dp[i][j - 1] + nowdig * octs[j - 1];
	}
	string ept;
	dp[i][j] = max(c1, c2);
	if (c1 > c2 || j == 0) {
		ans[i][j] = ept + 'H' + ans[i - 1][j];
	} else {
		ans[i][j] = ept + 'M' + ans[i][j - 1];
	}
//cout << i << ' ' << j << ' ' << dp[i][j] << endl; 
}

int main() {
	octs[0] = 1;
	for (int i = 1; i <= 18; ++i) {
		octs[i] = octs[i - 1] * 10;
	}
	scanf("%d", &n);
	scanf("%s", s);
	memset(dp, -1, sizeof(dp));
	getans(n, n);
	cout << ans[n][n] << endl;
	return 0;
}

	   			    	 		  					    	