def val(pair):
    s = 0
    if pair[0] != '':
        s += int(pair[0])
    if pair[1] != '':
        s += int(pair[1])
    return s
 
def solve(n_homer=0, n_medea=0):
    global number, length
    
    mem[length, length] = [['', ''], 'Crap']
    
    for n_homer in range(length-1, -1, -1):
        aux = mem[n_homer+1, length][0][:]
        aux[0] = number[n_homer+length] + aux[0]
        mem[n_homer, length] = [aux, 'H']
    
    for n_medea in range(length-1, -1, -1):
        aux = mem[length, n_medea+1][0][:]
        aux[1] = number[n_medea+length] + aux[1]
        mem[length, n_medea] = [aux, 'M']
    
    for n_homer in range(length-1, -1, -1):
        for n_medea in range(length-1, -1, -1):
            homer = mem[n_homer+1, n_medea][0][:]
            homer[0] = number[n_homer+n_medea] + homer[0]
            
            medea = mem[n_homer, n_medea+1][0][:]
            medea[1] = number[n_medea+n_homer] + medea[1]
            
            if val(homer) < val(medea):
                mem[n_homer, n_medea] = [medea, 'M']
            else:
                mem[n_homer, n_medea] = [homer, 'H']
   
   
mem = {}
length = input()
number = raw_input()

solve()

# for k in sorted(mem.keys()):
#     print k, mem[k]


solution = ""
n_homer, n_medea = 0, 0

while n_homer < length or n_medea < length:
    # print solution
    if mem[n_homer, n_medea][1] == 'H':
        n_homer += 1
        solution += 'H'
    else:
        n_medea += 1
        solution += 'M'

print solution
