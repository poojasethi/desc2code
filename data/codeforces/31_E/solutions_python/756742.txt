import sys
INF = 10000000000000000000
N = int(raw_input())
s = raw_input()

done = [[[False for i in xrange(N + 1)] for i in xrange(N + 1)] for i in  xrange(N + N + 1)]
dp = [[[0 for i in xrange(N + 1)] for i in xrange(N + 1)] for i in  xrange(N + N + 1)]
pre = [[[0 for i in xrange(N + 1)] for i in xrange(N + 1)] for i in  xrange(N + N + 1)]

def gao(p, l, r):
    #print p, l, r
    if done[p][l][r]: 
        return dp[p][l][r]
    done[p][l][r] = True
    if min(l, r) + p < max(l, r):
        dp[p][l][r] = -INF
        return -INF
    dp[p][l][r] = -INF
    if p == 0:
        dp[p][l][r] = 0
        return 0
    num = int(s[p - 1])
    if l + 1 <= N:
        tmp = pow(10, l) * num + gao(p - 1, l + 1, r);
        if tmp > dp[p][l][r]:
            dp[p][l][r] = tmp
            pre[p][l][r] = 0
    if r + 1 <= N:
        tmp = pow(10, r) * num + gao(p - 1, l, r + 1);
        if tmp > dp[p][l][r]:
            dp[p][l][r] = tmp
            pre[p][l][r] = 1
    return dp[p][l][r]

def show(p, l, r):
    if p == 0: return
    if pre[p][l][r] == 0:
        show(p - 1, l + 1, r)
        sys.stdout.write("M")
    else:
        show(p - 1, l, r + 1)
        sys.stdout.write("H")

gao(N + N, 0, 0)
#print dp[N + N][0][0]
show(N + N, 0, 0)
