#!/usr/bin/python

def mul(l,r,mod):
    c = [ (l[0] * r[0] + l[1] * r[1]) % mod,
         (l[0] * r[1] + l[1] * r[3]) % mod,
         (l[2] * r[0] + l[3] * r[2]) % mod,
         (l[2] * r[1] + l[3] * r[3]) % mod ]
    return c

def power(m,n,mod):
    b = [1,0,0,1]
    while n > 0:
        if (n & 1):
            n -= 1
            b = mul(b,m,mod)
        else:
            n >>= 1
            m = mul(m,m,mod)
    return b

def fibs(n,mod):
    if n == 1:
        return (0,1)
    else:
        m = [1,1,1,0]
        return power(m,n,mod)

def fib(n,mod):
    if n == 0:
        return 0
    else:
        res = fibs(n,mod)
        return res[1]

check_me = int (raw_input())
periods = { 10 : 60,
            100 : 300,
            1000 : 1500,
            10000 : 15000,
            100000 : 150000,
            1000000 : 1500000,
            10000000 : 15000000,
            100000000 : 150000000,
            1000000000 : 1500000000,
            10000000000 : 15000000000,
            100000000000 : 150000000000,
            1000000000000 : 1500000000000,
            10000000000000 : 15000000000000
}
mod = 10
resnumbers = []
i = 0
while i < periods[mod]:
    if check_me % mod == fib(i,mod):
        resnumbers.append(i)
    i += 1
    
mod = 100
while mod <= 10000000000000:
    newres =[]
    per = periods[mod/10]
    for j in resnumbers:
        while j < periods[mod]:
            if check_me % mod == fib(j,mod):
                newres.append(j)
            j += per
    resnumbers = newres
    mod *= 10

if resnumbers:
    print min(resnumbers)
else:
    print -1
