#include <cstdio>
#define MOD 10000000000000ll
#define BASE 10000000ll
long long pro(long long a,long long b){
	long long a1=a/BASE,a2=a%BASE,
			  b1=b/BASE,b2=b%BASE;
	return ((a1*b2+a2*b1)%BASE*BASE+a2*b2)%MOD;
}
struct mat{
	long long a[2][2];
	mat(){}
	mat(long long a00,long long a01,long long a10,long long a11){
		a[0][0]=a00;a[0][1]=a01;a[1][0]=a10;a[1][1]=a11;
	}
	mat operator*(mat B){
		mat C;
		for(int i=0;i<2;i++)
			for(int j=0;j<2;j++)
				C.a[i][j]=(pro(a[i][0],B.a[0][j])+pro(a[i][1],B.a[1][j]))%MOD;
		return C;
	}
	long long operator()(long long x,long long y){
		return (pro(a[1][0],x)+pro(a[1][1],y))%MOD;
	}
};
mat A[1000010];
long long F[15000010];
int main(){
	long long f;scanf("%I64d",&f);
	A[0]=mat(1,0,0,1);
	A[1]=mat(1,0,0,1);
	mat B(1,1,1,0);
	for(int i=15000000;i;i>>=1){
		if(i%2)A[1]=A[1]*B;
		B=B*B;
	}
	for(int i=2;i<1000000;i++)A[i]=A[1]*A[i-1];
	F[1]=1;
	for(int i=2;i<15000000;i++)F[i]=(F[i-2]+F[i-1])%MOD;
	int g=f%BASE;
	long long ans=1ll<<62,a;
	for(int i=0;i<15000000;i++)if(F[i]%BASE==g){
		long long tmp=i;
		for(int j=0;j<1000000&&tmp<ans;j++,tmp+=15000000){
			a=A[j](F[i+1],F[i]);
			if(a==f)ans=tmp;
		}
	}
	if(ans==(1ll<<62))printf("-1");
	else printf("%I64d",ans);
}