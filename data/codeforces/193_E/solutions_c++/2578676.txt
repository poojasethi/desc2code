//program 193-E

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

using namespace std;

struct Matrix
{
  long long a,b,c,d;
};

bool operator ==(Matrix A,Matrix B)
{
  return A.a==B.a&&A.b==B.b&&A.c==B.c&&A.d==B.d;
}

const long long Mod=10000000000000LL;
const int A=1953125,B=8192,L0=7812500,L1=12288;
const Matrix I={1,0,0,1},U={0,1,1,1};

long long Time(long long A,long long B)
{
  if(!B)return 0;
  long long T=Time(A*2%Mod,B/2);
  if(B&1)T=(T+A)%Mod;
  return T;
}

Matrix operator *(Matrix A,Matrix B)
{
  Matrix T;
  T.a=(Time(A.a,B.a)+Time(A.b,B.c))%Mod;
  T.b=(Time(A.a,B.b)+Time(A.b,B.d))%Mod;
  T.c=(Time(A.c,B.a)+Time(A.d,B.c))%Mod;
  T.d=(Time(A.c,B.b)+Time(A.d,B.d))%Mod;
  return T;
}

Matrix operator ^(Matrix A,long long B)
{
  if(!B)return I;
  Matrix T=(A*A)^(B/2);
  if(B&1)T=T*A;
  return T;
}

int main()
{
  long long M;cin>>M;
  int M0=M%A,M1=M%B,N0=0,N1=0;
  static int P[10],Q[10];
  for(int N=0,a=0,b=1;;N++)
    {
      if(a==M0)P[N0++]=N;
      int c=(a+b)%A;a=b;b=c;
      if(a==0&&b==1)break;
    }
  for(int N=0,a=0,b=1;;N++)
    {
      if(a==M1)Q[N1++]=N;
      int c=(a+b)%B;a=b;b=c;
      if(a==0&&b==1)break;
    }
  long long Ans=-1;
  Matrix Step=U^24000000000LL;
  for(int i=0;i<N0;i++)
    for(int j=0;j<N1;j++)
      {
        int Delta=(Q[j]-P[i])%L1;
        if(Delta<0)Delta+=L1;
        if(Delta&3)continue;
        long long K=Delta/4*1133%(L1/4);
        if(K<0)K+=L1/4;
        long long T=K*L0+P[i];
        Matrix G=U^T,Change=I;
        while(Ans==-1||T<Ans)
          {
            if(G.c==M){Ans=T;break;}
            G=G*Step;Change=Change*Step;
            T+=24000000000LL;
            if(Change==I)break;
          }
      }
  cout<<Ans<<endl;
  return 0;
}
