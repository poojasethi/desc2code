#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
#define rep(i,j) for (int i=1; i<=j; i++)
using namespace std;
long long f[10005],s[1000005],S[1000005],m[3][3],M[3][3],A[3][3],B[3][3],C[3][3],g,X,now,ans;
int i,p[1005],j,cnt,r,R,k;
long long pl(long long a,long long b,long long MOD)
{
    long long ans=0;
    while (b) {if (b&1) ans=(ans+a)%MOD; a=(a+a)%MOD; b/=2;}
    return ans;
}
void WORK(long long x)
{
    rep(i,2) rep(j,2)
    {
        C[i][j]=0;
        rep(k,2)
          C[i][j]=(C[i][j]+pl(A[i][k],B[k][j],x))%x;
    }
}
void ksm(long long a,long long b)
{
    if (a==1) return;
    ksm(a/2,b);
    rep(i,2) rep(j,2) {A[i][j]=m[i][j]; B[i][j]=m[i][j];}
    WORK(b);
    rep(i,2) rep(j,2) m[i][j]=C[i][j];
    if (a%2==1)
    {
        rep(i,2) rep(j,2) A[i][j]=m[i][j],B[i][j]=M[i][j];
        WORK(b);
        rep(i,2) rep(j,2) m[i][j]=C[i][j];
    }
}
long long work(long long a,long long b)
{
    m[1][1]=0; m[1][2]=m[2][1]=m[2][2]=1;
    rep(i,2) rep(j,2) M[i][j]=m[i][j];
    ksm(a,b);
    return m[2][1];
}
int main()
{
    f[1]=f[2]=1;
    for (i=3; i<=1500; i++) f[i]=(f[i-1]+f[i-2])%1000;
    cin>>g;
    while (g) {p[++cnt]=g%10; g/=10;}
    now=p[1]+p[2]*10;
    X=100;
    for (i=3; i<=13; i++)
    {
        if (i!=3 && !r) {cout<<-1; return 0;}
        now+=p[i]*X;
        X*=10;
        if (i==3) {for (j=1; j<=1500; j++) if (f[j]==now) s[++r]=j; continue;}
        R=0;
        for (j=1; j<=r; j++)
        {
            for (k=0; k<10; k++)
              if (work(s[j]+X*k/20*3,X)==now) S[++R]=s[j]+X*k/20*3;

        }
        r=R;
        for (j=1; j<=r; j++) s[j]=S[j];
    }
    if (!r) {cout<<-1; return 0;} ans=s[1];
    for (j=1; j<=r; j++) ans=min(ans,s[j]);
    cout<<ans;
    return 0;
}
