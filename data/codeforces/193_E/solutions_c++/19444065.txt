#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#define  ll long long
using namespace std;

vector<ll> V[50];
ll n, ans=-1, p=10, lim=60, key=65535;

ll mul(ll x, ll y)
{
	ll res=0;
	for (int i=0; i<3; ++i)
		res+=(x&key)*y%p, x>>=16, y=(y<<16)%p;
	return res%p;
}

pair<ll,ll> get(ll n)
{
	if (n==1) return make_pair(0,1);
	pair<ll,ll> A; if (n&1) A=get(n-1); else A=get(n/2);
	if (n&1) return make_pair(A.second,(A.first+A.second)%p);
	return make_pair((mul(A.first,A.first)+mul(A.second,A.second))%p,
                  mul(A.first*2+A.second,A.second)%p);
}

int main()
{
	while(~scanf("%I64d", &n))
    {
        for(int i=0;i<15;i++)
            V[i].clear();
        ans=-1, p=10, lim=60, key=65535;
        for (int i=1; i<=60; i++)
            if (get(i).first==n%p)
                V[0].push_back(i);
        for (int t=0; t<12; t++)
        {
            p*=10;
            for (int k=0; k<V[t].size(); ++k)
            {
                ll i = V[t][k];
                for (ll j=0; j<10; j++)
                    if (get(lim*j+i).first==n%p) V[t+1].push_back(lim*j+i);
            }
            lim*=10;
        }
        for (int k=0; k<V[12].size(); ++k)
        {
            ll i=V[12][k];
            if ((ans<0)||(i-1<ans)) ans=i-1;
        }
        printf("%I64d\n", ans);
	}
}

		 	 	    		 					     		 		