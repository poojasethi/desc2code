//#define FILE_IO
#define LLD "%I64d"

#include<iostream>
#include<algorithm>
#include<vector>
#include<cstdio>
#include<cstring>

using std::vector;
  #define pb push_back
  #define forI(it,V) \
    for(typeof(V.begin())it=V.begin();it!=V.end();++it)

typedef long long ll;

const ll P=10000000000000LL;
ll R;
vector<ll> V[14];

ll mul(ll x,ll y){
  ll e=0;
  while(y){
    if(y&1)e=(e+x)%P;
    x=(x+x)%P;
    y>>=1;
  }
  return e;
}

struct mat{
  int n,m;
  ll a[2][2];
  mat(int n,int m):n(n),m(m){memset(a,0,sizeof(a));}
}A(1,2),T(2,2);

mat operator *(const mat &a,const mat &b){
  mat c(a.n,b.m);
  for(int i=0;i<a.n;++i)
    for(int j=0;j<b.m;++j)
      for(int k=0;k<a.m;++k)
        c.a[i][j]=(mul(a.a[i][k],b.a[k][j])+c.a[i][j])%P;
  return c;
}

mat pow(mat a,ll x){
  mat e(a.n,a.n);
  e.a[0][0]=e.a[1][1]=1;
  while(x){
    if(x&1)e=e*a;
    a=a*a;
    x>>=1;
  }
  return e;
}

bool check(ll x,ll P){
  ll t=(A*pow(T,x)).a[0][0]%P;
#ifdef FILE_IO
  printf("check %I64d %I64d : %I64d\n",x,P,t);
#endif
  return t%P==R%P;
}

int main(){
#ifdef FILE_IO
  freopen("t.in","r",stdin);
  freopen("t.out","w",stdout);
#endif
  ll t=60,M;
  int i,j;
  A.a[0][1]=T.a[0][0]=T.a[0][1]=T.a[1][0]=1;
  scanf(LLD,&R);
  for(i=0;i<t;++i)
    if(check(i,10))V[1].pb(i);
  for(M=100,i=1;i<13;++i,M*=10,t*=10)
    for(j=0;j<10;++j)
      forI(it,V[i])
        if(check(t*j+*it,M))V[i+1].pb(t*j+*it);
  printf(LLD,V[13].empty()?-1:V[13][0]);
  return 0;
}
