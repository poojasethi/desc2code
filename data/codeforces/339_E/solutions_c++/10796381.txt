#include <stdio.h>
#include <algorithm>

#define ff first
#define ss second
#define mp make_pair

using namespace std;
const int MAXN = 1009;
typedef pair<int,int> pii;

int n;
int A[MAXN];
pii sol[10];

void dfs(int k)
{
    if (k <= 3)
    {
        bool ok = 1;
        
        for (int i=1; i<=n; i++)
            ok = ok & (A[i]==i);
        
        if (ok)
        {
            printf("%d\n" ,k);
            for (int i=0; i<k; i++)
                printf("%d %d\n" ,sol[k-i-1].ff ,sol[k-i-1].ss);
            exit(0);
        }
        
        if (k==3)
            return;
    }
    
    for (int i=1; i<=n; i++)
        for (int j=i+1; j<=n; j++)
            if (abs(A[i]-A[j+1])==1 || abs(A[i-1]-A[j])==1) {
                sol[k] = mp(i,j);
                reverse(A+i, A+j+1);
                dfs(k+1);
                reverse(A+i, A+j+1);
            }
}

int main()
{
    scanf("%d" ,&n);
    
    for (int i=1; i<=n; i++)
        scanf("%d" ,&A[i]);
        
    dfs(0);
}
