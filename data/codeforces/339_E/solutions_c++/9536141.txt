#include<cstdio>
#include<algorithm>
using namespace std;
const int N = 1050;
const int M = 5;
int n;
int data[N];
int l[M],r[M];
int cc=0;
bool can()
{
	int i;
	for(i=1;i<=n;i++)
	{
		if(data[i]!=i)
			return 0;
	}
	return 1;
}
bool dfs(int x)
{
	if(can())
		return 1;
	if(x<=3)
	{
		int i,j,k;
		for(i=1;i<=n;i++)
		{
			for(j=i+1;j<=n;j++)
			{
				if(data[i-1]-data[j]==1 || data[j]-data[i-1]==1 || data[i]-data[j+1]==1 || data[j+1]-data[i]==1)
				{
					cc++;
					l[cc]=i;
					r[cc]=j;
					for(k=i;k<=(i+j)/2;k++)
						swap(data[k],data[i+j-k]);
					if(dfs(x+1))
						return 1;
					cc--;
					for(k=i;k<=(i+j)/2;k++)
						swap(data[k],data[i+j-k]);
				}
			}
		}
	}
	return 0;
}
int main()
{
	int i;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
		scanf("%d",data+i);
	data[0]=0;
	data[n+1]=n+1;
	i=dfs(1);
	printf("%d\n",cc);
	for(i=cc;i>0;i--)
		printf("%d %d\n",l[i],r[i]);
	return 0;
}
