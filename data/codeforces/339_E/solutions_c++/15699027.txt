#include <stdio.h>
#include <algorithm>
using namespace std;
int n,a[1002],l[10],r[10];
bool dfs(int step)
{
    int k;
    for (k=1;k<=n;k++)
        if (a[k]!=k)
            break;
    if (k==n+1)
    {
        printf("%d\n",step-1);
        for (int i=step-1;i>=1;i--)
            printf("%d %d\n",l[i],r[i]);
        return true;
    }
    if (step==4)
        return false;
    for (int i=1;i<=n;i++)
        if (a[i]!=i&&(abs(a[i]-a[i-1])!=1||abs(a[i]-a[i+1])!=1))
            for (int j=i+1;j<=n;j++)
                if (a[j]!=j&&(abs(a[j]-a[j+1])!=1||abs(a[j]-a[j-1])!=1))
                {
                    reverse(a+i,a+j+1);
                    l[step]=i;
                    r[step]=j;
                    if (dfs(step+1))
                        return true;
                    reverse(a+i,a+j+1);
                }
    return false;
}
int main()
{
    scanf("%d",&n);
    for (int i=1;i<=n;i++)
        scanf("%d",a+i);
    a[0]=a[n+1]=-1;
    dfs(1);
    return 0;
}
