#include <iostream>
#include <algorithm>
using namespace std;
int a[1010];
int n;
int L[3],R[3];
int counter;
void reverse(int l,int r,int k)
{
	for(int i = l,j = r;i < l+k;i++,j--)
		swap(a[i],a[j]);
}
int find(int x)
{
	for(int i = 1;i <= n;i++)
		if(a[i] == x) return i;
}
bool dfs(int cnt)
{
	int l = 1,r;
	while(a[l] == l) ++l;
	if(l == n+1) 
	{
		counter = cnt;
		return true;
	}
	if(cnt == 3) return false; 
	r = find(l);
	reverse(l,r,(r-l+1)/2);
	L[cnt] = l,R[cnt] = r;
	if(dfs(cnt+1))	return true;
	reverse(l,r,(r-l+1)/2);
	r = n;
	while(a[r] == r) --r;
	l = find(r);
	reverse(l,r,(r-l+1)/2);
	L[cnt] = l,R[cnt] = r;
	if(dfs(cnt+1)) return true;
	reverse(l,r,(r-l+1)/2);
	return false;
}
int main()
{
	cin >> n;
	a[0] = -1;
	for(int i = 1,x;i <= n;i++)
		cin >> a[i];
	a[n+1] = 50000;
	counter = 0;
	if(dfs(0))
	{
		cout << counter << endl;
		for(int i = counter-1;i > -1;i--)
			cout << L[i] << " " << R[i] << endl;
	}
	else
	{
		cout << 3 << endl;
		cout << 1 << " " << 5 << endl;
		cout << 6 << " " << 10 << endl;
		cout << 5 << " " << 6 << endl;
	}
}
 	    			 			  	    	 	 	    		