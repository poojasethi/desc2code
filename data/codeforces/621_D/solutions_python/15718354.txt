import sys
import math

nums = map(float, sys.stdin.readline().split(" "))

d1 = dict({0: "x^y^z",
           1: "x^z^y",
           2: "(x^y)^z"})


d2 = dict({0: "y^x^z",
           1: "y^z^x",
           2: "(y^x)^z"})
           

d3 = dict({0: "z^x^y",
           1: "z^y^x",
           2: "(z^x)^y"})

def comp(a, b):
    return abs(a-b) < 10**(-6)
    
def sgn(a):
    return 1 if a >= 0 else 0
    
def cmp_res(r1, r2):
    if r1[2] > r2[2]:
        return 1
    if r2[2] > r1[2]:
        return 0
    if r1[2] > 0:
        return r1[0] >= r2[0]
    else:
        return r1[0] <= r2[0]

def check(x, y, z):
    f = math.log(x)
#    print f
    arr = [ z * math.log(y), y * math.log(z), math.log(y) + math.log(z) ]
#    arr = [y ** z, z ** y, y * z]
#    print arr    
    p = max(arr) if f >= 0 else min(arr)
    return -10**9 if f == 0 else math.log(abs(f)) + p, map(lambda a: comp(a, p), arr).index(1), sgn(f)
    
res1 = check(nums[0], nums[1], nums[2])
res2 = check(nums[1], nums[0], nums[2])
res3 = check(nums[2], nums[0], nums[1])

#print res1
#print res2
#print res3

if cmp_res(res1, res2):
    if cmp_res(res1, res3):
        print >>sys.stdout, d1[res1[1]]
    else:
        print >>sys.stdout, d3[res3[1]]
else:
    if cmp_res(res2, res3):
        print >>sys.stdout, d2[res2[1]]
    else:
        print >>sys.stdout, d3[res3[1]]