#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<cstdio>
#include<vector>
using namespace std;
int next[2200],head[220],e[2200],c[2200],bfs[220],dis[220],
    a[220][220],ans[220],num,fans,len,i,j,k,l,n,m,s,t,x,y;
void addedge(int x,int y,int k){
    next[++len]=head[x]; head[x]=len; e[len]=y; c[len]=k;
    next[++len]=head[y]; head[y]=len; e[len]=x; c[len]=k;
}
bool build(){
    int l,r,i;
    for(i=1;i<=n;++i)dis[i]=0;
    bfs[l=r=1]=s;
    dis[s]=1;
    while(l<=r){
        x=bfs[l];
        for(i=head[x];i;i=next[i]) if(c[i]&&!dis[e[i]]){
            dis[e[i]]=dis[x]+1;
            bfs[++r]=e[i];
            if(e[i]==t)return(1);
        }
        l++;
    }
    return(0);
}
int dinic(int x,int v){
    int flow=0;
    if(x==t)return v;
    for(int i=head[x];i;i=next[i])if(c[i]&& dis[x]+1==dis[e[i]]){
        int res=dinic(e[i],min(v-flow,c[i]));
        c[i]-=res; c[i^1]+=res; flow+=res;
        if(flow==v)break;
    }
    if(!flow)dis[x]=-1;
    return flow;
}
void work(vector <int> q){
    vector <int> q1,q2;
    int i,j,k,minn=10000000,n=q.size();
    bool bo[210]={0};
    if(n==1){
        ans[++num]=q[0];
        return;
    }
    q1.push_back(q[0]);
    bo[0]=1;
    for(i=0;i<n;++i)
        for(j=0;j<n;++j)if(i!=j)minn=min(minn,a[q[i]][q[j]]);
    for(i=0;i<q1.size();++i)
        for(j=0;j<n;++j)if(!bo[j] && a[q1[i]][q[j]]!=minn)
            q1.push_back(q[j]),bo[j]=1;
    for(i=0;i<n;++i)if(!bo[i])q2.push_back(q[i]);
    fans+=minn;
    work(q1);
    work(q2);
}
void pret(vector <int> q){
    int i,k=0,j;
    if(q.size()==1)return;
    for(i=2;i<=len;i+=2)c[i]=c[i+1]=(c[i]+c[i+1])/2;
    s=q[0]; t=q[1];
    while(build()) k+=dinic(s,1000000);
    for(i=1;i<=n;++i)
        for(j=1;j<=n;++j)if((dis[i]>0) != (dis[j]>0))a[i][j]=min(a[i][j],k);
    vector <int> q1,q2;
    for(i=0;i<q.size();++i)if(dis[q[i]]>0)q1.push_back(q[i]);
    else q2.push_back(q[i]);
    pret(q1);
    pret(q2);
}
int main(){
    scanf("%d%d",&n,&m);
    len=1;
    for(i=1;i<=m;++i){
        scanf("%d%d%d",&x,&y,&k);
        addedge(x,y,k);
    }
    memset(a,3,sizeof(a));
    vector <int> res;
    for(i=1;i<=n;++i)res.push_back(i);
    pret(res);
    work(res);
    printf("%d\n",fans);
    for(i=1;i<=n;++i)printf("%d ",ans[i]);
}