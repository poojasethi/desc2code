#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cmath>
#include<cstring>
using namespace std;
#define N 210
#define M 10000
#define INF 1000000000
int v[M],next[M],cost[M],head[N],d[N],vd[N],q[N],num,n,m,st,ed,a[N],len[N],ans;
bool ok[M],vis[N];
void add(int x,int y,int z){
     v[++num]=y;next[num]=head[x];head[x]=num;cost[num]=z;
     }
int dfs(int u,int flow){
    if(u==ed)return flow;
    int flowt=0;
    for(int i=head[u];i;i=next[i])
      if(cost[i] && d[v[i]]+1==d[u]){
        int tmp=dfs(v[i],min(cost[i],flow-flowt));
        cost[i]-=tmp;
        cost[i^1]+=tmp;
        flowt+=tmp;
        if(flow==flowt)return flowt;
      }
    if(d[st]>=n)return flowt;
    vd[d[u]]--;
    if(!vd[d[u]])d[st]=n;
    d[u]++;
    vd[d[u]]++;
    return flowt; 
}
int Flow(){
     memset(d,0,sizeof d);
     memset(vd,0,sizeof vd);
     vd[0]=n;
     int ans=0;
     while(d[st]<n)ans+=dfs(st,INF);
     return ans;
}
void bfs(int u){
     vis[u]=1;
     for(int i=head[u];i;i=next[i])
       if(cost[i]>0 && !vis[v[i]])bfs(v[i]);
}
int get(int u){
    int t=0,w=1,ans=-1;
    q[1]=u;vis[u]=1;
    while(t<w){
      u=q[++t];
      for(int i=head[u];i;i=next[i])
        if(ok[i]){
          if(!vis[v[i]])q[++w]=v[i],vis[v[i]]=1;
          if(ans==-1 || cost[i]<cost[ans])ans=i;
        }
    }
    for(int i=1;i<=w;i++)vis[q[i]]=0;
    return ans;
}
void pri(int u){
     int t=get(u);
     ok[t]=ok[t^1]=0;
     if(t==-1){
               printf("%d ",u);
               return;
               }
     pri(v[t]);pri(v[t^1]);
}
int main(){
    scanf("%d%d",&n,&m);
    memset(head,0,sizeof head);num=1;
    for(int i=1;i<=m;i++){
      int x,y,z;
      scanf("%d%d%d",&x,&y,&z);
      add(x,y,z);add(y,x,z);
    }
    for(int i=2;i<=n;i++)a[i]=1;
    for(int i=2;i<=n;i++){
      st=i;ed=a[i];
      len[i]=Flow();
      ans+=len[i];
      memset(vis,0,sizeof vis);
      bfs(st);  
      for(int j=i+1;j<=n;j++)
        if(vis[j] && a[j]==a[i])a[j]=i;  
      for(int j=2;j<=num;j+=2)cost[j]=cost[j^1]=(cost[j]+cost[j^1])/2; 
    }
    memset(head,0,sizeof head);num=1;
    for(int i=2;i<=n;i++)add(i,a[i],len[i]),add(a[i],i,len[i]);
    for(int i=2;i<=num;i++)ok[i]=1;
    memset(vis,0,sizeof vis);
    cout<<ans<<endl;
    pri(1);
    return 0;
}
