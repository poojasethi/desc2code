#include <functional>
#include <algorithm>
#include <memory.h>
#include <string.h>
#include <ctype.h>
#include <stdio.h>
#include <bitset>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <map>
#include <set>

using namespace std;

typedef long long INT;
typedef pair <int, int> pii;
typedef pair <int, pii> p3i;


#define inf 0x3f3f3f3f
#define NN 210
#define MM 2010

int N, M, qf, qb, top;
int fir[NN], cur[NN], qu[NN], dep[NN], f[NN][NN], ans[NN], vst[NN];
int fr[MM], to[MM], next[MM], cap[MM], tcap[MM];

void AddEdge(int u, int v, int c) {
    fr[M]=u; to[M]=v; cap[M]=c; next[M]=fir[u]; fir[u]=M++;
    fr[M]=v; to[M]=u; cap[M]=c; next[M]=fir[v]; fir[v]=M++;
}

int flow(int src, int tar) {
    int i, u, v, f, bot, res=0;
    while (1) {
        memset(dep, 0xff, sizeof(dep));
        qf=qb=0; qu[qb++]=src; dep[src]=0;
        while (qf!=qb) {
            for (i=fir[u=qu[qf++]]; i!=-1; i=next[i]) {
                if (cap[i] && dep[v=to[i]]==-1) {
                    dep[v]=dep[u]+1; qu[qb++]=v;
                    if (v==tar) { qf=qb; break; }
                }
            }
        }
        if (dep[tar]==-1) break;

        memcpy(cur, fir, sizeof(fir));
        for (u=src, top=0; ; ) {
            if (u==tar) {
                for (i=0, bot=inf; i<top; i++)
                    if (cap[qu[i]]<bot) bot=cap[qu[f=i]];
                for (i=0; i<top; i++)
                    cap[qu[i]]-=bot, cap[qu[i]^1]+=bot;
                res+=bot; u=fr[qu[top=f]];
            }
            for (i=cur[u]; i!=-1; i=cur[u]=next[i])
                if (cap[i] && dep[u]+1==dep[to[i]]) break;
            if (cur[u]!=-1) u=to[qu[top++]=cur[u]];
            else if (top==0) break;
            else dep[u]=-1, u=fr[qu[--top]];
        }
    }
    return res;
}

int main() {
  	int m, u, v, d, i, j, res, mm;

	scanf("%d %d ", &N, &m);
	M=0;
	memset(fir, 0xff, sizeof(fir));
	for (i=0; i<m; i++) {
		scanf("%d %d %d ", &u, &v, &d);
		u--; v--;
		AddEdge(u, v, d);
	}
	
	memcpy(tcap, cap, sizeof(cap));

	for (i=0; i<N; i++) for (j=i+1; j<N; j++) {
		memcpy(cap, tcap, sizeof(cap));
		f[i][j]=f[j][i]=flow(i, j);
	}
	
	memset(vst, 0, sizeof(vst));
	res=0;
	for (j=0, vst[ans[j++]=u=0]=1; j<N; vst[ans[j++]=u=v]=1) {
		mm=0;
		for (i=0; i<N; i++) if (!vst[i] && f[u][i]>mm) mm=f[u][i], v=i;
		res+=mm;
	}
	
	printf("%d\n", res);
	for (i=0; i<N; i++) printf("%d%c", ans[i]+1, i<N-1?' ':'\n');
	
    return 0;
}
