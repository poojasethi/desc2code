#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;
const int maxn=11111;
int used[maxn];
int n;
typedef struct data{
	int a,b;
}data;
data node[maxn];
bool comp(data A,data B)
{
	return A.b<B.b;
}
bool check(int time)
{
	memset(used,0,sizeof(used));		
	for(int i=0;i<n;i++){
		int _time=0;
		if(node[i].b-node[i].a<time)return 0;
		for(int j=node[i].a;j<node[i].b;j++){
			if(!used[j]){
				_time++;
				used[j]=1;
			}
			if(_time==time)break;
		}
		if(_time<time)return 0;
	}
	return true;
}
int main()
{
	cin>>n;
	for(int i=0;i<n;i++){
		cin>>node[i].a>>node[i].b;
	}
		sort(node,node+n,comp);
		int l=0,r=maxn;
		int ans=0;
		while(l<=r){
			int m=(l+r)>>1;
			if(check(m)){
				l=m+1;
				ans=m;
			}
			else{
				r=m-1;
			}
		}
		cout<<ans*n<<endl;
}
	  					   	   		  	 	    	 		