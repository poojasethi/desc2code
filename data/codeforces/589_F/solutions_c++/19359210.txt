#include <bits/stdc++.h>
using namespace std;
const int MAXN=1e5;
struct dish
{
	int a, b;
} d[105];
bool vis[MAXN+5]={0};
bool cmp(dish a, dish b)
{
	if (a.b!=b.b)
		return a.b<b.b;
	else
		return a.a<b.a;
}
bool judge(int x, int n)
{
	memset(vis, 0, sizeof(vis));
	for (int i=1; i<=n; i++)
	{
		int cnt=0;
		for (int j=d[i].a+1; j<=d[i].b; j++)
		{
			if (!vis[j])
			{
				vis[j]=true;
				cnt++;
				if (cnt==x)
					break;
			}
		}
		if (cnt<x)
			return false;
	}
	return true;
}
int main()
{
	int n;
	cin >> n;
	for (int i=1; i<=n; i++)
		cin >> d[i].a >> d[i].b;
	sort(d+1, d+n+1, cmp);
	
	int l=1, r=MAXN+1;
	while (l<r-1)
	{
		int mid=(l+r)/2;
		if (judge(mid, n))
			l=mid;
		else
			r=mid;
	}
	if (judge(l, n))
		cout << l*n << endl;
	else
		cout << 0 << endl;
	return 0;
} 
 	  			  		 			    		 		 	 	 	