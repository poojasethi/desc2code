#include<stdio.h>
#include<queue>
#include<algorithm>
using namespace std;
vector<pair<int,int> > Ins[10100];
int ans;
int n;
int c[101];
bool check(int mid){
	priority_queue<pair<int,int> > PQ;
	for(int i=0;i<n;++i) c[i]=0;
	for(int i=0;i<=10000;++i){
		for(int j=0;j<int(Ins[i].size());++j){
			PQ.push(Ins[i][j]);
		}
		pair<int,int> ch=make_pair(-1,-1);
		while(!PQ.empty()){
			if(c[PQ.top().second]==mid) PQ.pop();
			else{
				ch=PQ.top();
				break;
			}
		}
		if(ch.second!=-1&&-ch.first<=i){
			return false;
		}
		++c[ch.second];
	}
	return true;
}
int main(){
	scanf("%d",&n);
	for(int i=0;i<n;++i){
		int x,y;
		scanf("%d%d",&x,&y);
		Ins[x].push_back(make_pair(-y,i));
	}
	int l=0,r=10001;
	while(l+1!=r){
		int mid=(l+r)>>1;
		if(check(mid)) l=mid;
		else r=mid;
	}
	printf("%d\n",n*l);
	return 0;
}
