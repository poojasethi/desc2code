#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<cmath>
using namespace std;
typedef long long ll;
const ll N = 1e5 + 10;
int n, cnt;
int arr[N];
struct node
{
	int a, b;
	bool operator<(const node &rhs) const{
		return b < rhs.b;
	}
}p[105];

bool ok(int d)
{
	cnt++;
	for(int i = 0; i < n; i++)
	{
		int tmp = 0;
		for(int j = p[i].a; j < p[i].b; j++)
		{
			if(tmp == d)break;
			if(arr[j] != cnt) 
				arr[j] = cnt, tmp++;
		}
		if(tmp < d) return 0;
	}
	return 1;
}

int main()
{
	while(~scanf("%d", &n))
	{ 
		for(int i = 0; i < n; i++)
		{
			scanf("%d%d", &p[i].a, &p[i].b);
		}
		sort(p, p + n);
		cnt = 0;
		memset(arr, 0, sizeof(arr));
		int l = 0, r = 10000;
		while(l < r - 1)
		{
			int mid = (l + r) >> 1;
			if(ok(mid)) l = mid;
			else r = mid;
		}
		printf("%d\n", l * n);
	}
	return 0;
} 
	  	 				 	  		  	 		  					 		