import bisect

n, m = map(int, raw_input().split())
a = sorted(map(int, raw_input().split()))
b = sorted(map(int, raw_input().split()))

def cut(array, target, lte):
    toReturn = 0
    for i in array:
        if lte:
            if i > target:
                toReturn += i - target
        else:
            if i < target:
                toReturn += target - i
    return toReturn



asums = [0] * (len(a)+1)
asums[0] = sum(a)
for i in range(1, len(a)):
    asums[i] = asums[i-1] - a[i-1]

bsums = [0] * (len(b)+1)
bsums[0] = sum(b)
for i in range(1, len(b)):
    bsums[i] = bsums[i-1] - b[i-1]

best = 1000000000000000000000000

for i in b + a:
    lowera = bisect.bisect_left(a, i)
    upperb = bisect.bisect_right(b, i)
    incrementacost = lowera * i - (asums[0] - asums[lowera])
    decrementbcost = bsums[upperb] - (len(b) - upperb) * i
    best = min(best, incrementacost + decrementbcost)

print best
     
