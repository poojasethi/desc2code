from collections import defaultdict, Counter

n, m = tuple( [int(t) for t in raw_input().split() ] )
D_F, D_K = defaultdict(list), defaultdict(list)

for i in range(n):
	c, d = tuple( [int(t) for t in raw_input().split() ] )
	D_F[d].append(c)

for j in range(m):
	c, d = tuple( [int(t) for t in raw_input().split() ] )
	D_K[d].append(c)

n_eq_d = sum([ min(len(D_K[d]),len(D_F[d])) for d in set(D_K.keys()) & set(D_F.keys()) ])

n_good = 0
for d in set(D_K.keys()) & set(D_F.keys()):
	F, K = D_F[d], D_K[d]
	Fcolor = Counter( F )
	Kcolor = Counter( K )
	n_good += sum([ min(Fcolor[c], Kcolor[c]) for c in set(F) ])

print n_eq_d, n_good
