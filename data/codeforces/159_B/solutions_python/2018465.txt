from collections import defaultdict as dd
r=lambda x:map(int,raw_input().split())
n,m=r('')
a=sorted([(i,j) for j,i in map(r, ' '*n)])
b=sorted([(i,j) for j,i in map(r, ' '*m)])
i=0
j=0
c=0
C=0

#print a,b
while i < n and j < m:
    #print a[j],b[j],i,j
    while i < n and j < m and  a[i][0] > b[j][0]:
        j+=1
    while i < n and j < m and  a[i][0] < b[j][0]:
        i+=1
    #print a[i],b[j]
        
    F=0
    K=0
    p=0
    P=0
    #print i,j
    while  i < n and j < m and a[i][0]==b[j][0]:
        P = a[i][0]
        if p != P:
            c += min(F,K)
            F=0
            K=0
            
        #print "in",P,i,j,K,F
        if b[j][1] == a[i][1]:
            C+=1
            i+=1
            j+=1
        elif b[j][1] > a[i][1]:
            i+=1
            K+=1
        elif b[j][1] < a[i][1]:
            j+=1
            F+=1
        p = P
    #print i,j, K,F
    while i < n and a[i][0] == P:
        K+=1
        i+=1
    while j < m and b[j][0] == P :
        F+=1
        j+=1
    #print i,j, K,F
    c+=min(F,K)        

print C+c,C