def init():
    mark = [[] for i in xrange(0, 1000)]
    cap = [[] for i in xrange(0, 1000)]
    s = raw_input().split()
    n = int(s[0])
    m = int(s[1])
    for i in xrange(0, n):
        s = raw_input().split()
        x = int(s[0])
        y = int(s[1]) - 1
        mark[y].append(x)
    for j in xrange(0, m):
        s = raw_input().split()
        x = int(s[0])
        y = int(s[1]) - 1
        cap[y].append(x)
    return n, m, mark, cap

def solve(n, m, mark, cap):
    ret = 0
    close = 0
    for d in xrange(0, 1000):
        mark[d].sort()
        cap[d].sort()
        mlen = len(mark[d])
        mcap = len(cap[d])
        ret = ret + min(mlen, mcap)
        j = 0
        for i in xrange(0, mlen):
            while j < mcap and cap[d][j] < mark[d][i]:
                j = j + 1
            if j == mcap:
                break
            if cap[d][j] == mark[d][i]:
                close = close + 1
                j = j + 1
    return ret, close

if __name__ == "__main__":
    n, m, mk, cp = init()
    u, v = solve(n, m, mk, cp)
    print u, v
