n, m = list(map(int, raw_input().split()))
N = []
M = []
res_a, res_b = 0, 0

for i in xrange(n):
    N.append(list(map(int, raw_input().split())))

for i in xrange(m):
    M.append(list(map(int, raw_input().split())))

 
def mapping(array):
    #array.sort(key = lambda x: x[0])
    array.sort(key = lambda x: x[1])
    
    i = 0
    res = {}
    
    while i < len(array):
        j = i
        buf = {}
        sum = 0
        while j < len(array) and array[j][1] == array[i][1]:
            x = buf.setdefault(array[j][0], 0)
            buf[array[j][0]] = x + 1
            sum += 1
            j += 1
        buf["sum"] = sum
        res[array[i][1]] = buf
        i = j
        
    return res
    
    #for i in xrange(len(array)):
    #    x = res.setdefault(array[i], 0)
    #    res[array[i] = x + 1
     
dict_N = mapping(N)
dict_M = mapping(M)

for diam, val_N in dict_N.iteritems():
    if dict_M.has_key(diam):
        val_M = dict_M[diam]
        good = 0
        bad  = 0
        for color, count_N in val_N.iteritems():
            if color!= "sum" and val_M.has_key(color):
                count_M = val_M[color]
                good += min(count_N, count_M)
        bad = min(val_N["sum"], val_M["sum"]) - good
        #print "for",diam,val_N,val_M,"good:", good, "bad:", bad
        res_a += good + bad
        res_b += good
        
print res_a, res_b
