import sys
import math

def readints() :
    l = sys.stdin.readline()
    return map(int, l.split(' '))

def readstring() :
    l = sys.stdin.readline()[:-1]
    return l

def readint() :
    l = sys.stdin.readline()
    return int(l)

def clearchars(s, chars) :
    for c in chars :
        s = s.replace(c, '')
    return s

def gcd(a, b) :
    if (a < b ) :
        a, b = b, a
    if b == 0 :
        return a
    return gcd(b, a % b)

def hist(a) :
    h = {}
    for x in a :
        try : 
            h[x] += 1
        except KeyError :
            h[x] = 1
    return h

def lucky(n) :
    s = set(str(n))
    return all(map(lambda x: x in '47', s))    

def yslice(a, j) :
    return map(lambda x: x[j], a)

def dist2(a, b) :
    return ((a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2) ** 0.5

def chain_len(a) :
    l = .0
    for d, e in zip(a, a[1:]) :
        l += dist2(d, e)
    return l

def is_prime(x) :
    if x == 1 :
        return False
    sq = int(x ** 0.5) 
    for i in [2] + range(3, sq + 1, 2) :
        if x % i == 0 :
            return False
    return True


digits = '0123456789'

def noe() :
    print "NO"
    exit(0)

def yese() :
    print "YES"
    exit(0)

n, m = readints()
a, b = [], []
sa, sb = [], []
for i in range(n) :
    x, y = readints()
    a.append((x, y))
    sa.append(y)

for i in range(m) :
    x, y = readints()
    b.append((x, y))
    sb.append(y)

a, b, sa, sb = map(hist, [a, b, sa, sb])

s = 0
for x in sa.keys() :
    s += min(sa[x], sb.get(x, 0))

f = 0
for x in a.keys() :
    f += min(a[x], b.get(x, 0))
   
#print a, b
#print sa, sb
print s, f

