#include <stdio.h>
#include <vector>
#include <queue>
using namespace std;

#define FOREACH(it,vec) for(typeof((vec).begin()) it = (vec).begin(); it != (vec).end(); it++)

int hat[200000];

typedef pair<int,int> PII;
priority_queue<PII> qu;
vector<PII> sw;

int main() {
	int N, S;
	scanf("%d %d", &N, &S);
	for (int i = 0; i < N; i++) {
		scanf("%d", &hat[i]);
		qu.push(PII(hat[i],i));
	}
	while(!qu.empty()) {
		int a = qu.top().second;
		qu.pop();
		vector<int> hier;
		for (int k = 0; k < hat[a]; k++) {
			if (qu.empty()) {
				printf("No\n");
				return 0;
			}
			int b = qu.top().second;
			qu.pop();
			if (hat[b] == 0) {
				printf("No\n");
				return 0;
			}
			hat[b]--;
			hier.push_back(b);
			sw.push_back(PII(a,b));
		}
		FOREACH(b,hier)
			qu.push(PII(hat[*b],*b));
	}
	printf("Yes\n%d\n",S/2);
	FOREACH(i,sw)
		printf("%d %d\n", i->first+1, i->second+1);
	return 0;
}
