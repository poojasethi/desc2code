# include <iostream>
# include <vector>
# define PII pair<int,int>
# include <queue>
using namespace std;
const int MAX_N=200*1000+5;
PII per[MAX_N];
int N;
int S;
vector<PII> ans;
bool solve()
{
	priority_queue<PII> q;
	for(int i=0;i<N;i++)
		if(per[i].first>0)
			q.push(per[i]);
	for(int i=0;i<N-1;i++)
	{
		vector<PII> tmp;
		if(q.empty())
			return true;
		PII p=q.top();
		q.pop();
		if((int)q.size()<p.first)
			return false;
		for(int j=0;j<p.first;j++)
		{
			PII r=q.top();
			q.pop();
			ans.push_back(make_pair(p.second+1,r.second+1));
			if(--r.first>0)
				tmp.push_back(r);
		}
		for(int j=0;j<(int)tmp.size();j++)
			q.push(tmp[j]);
	}
	return (int)ans.size()*2==S;
}
int main()
{
	ios::sync_with_stdio(false);
	cin >> N >> S;
	for(int i=0;i<N;i++)
	{
		int tmp;
		cin >> tmp;
		per[i]=make_pair(tmp,i);
	}
	if(solve())
	{
		cout <<"Yes"<<endl;
		cout << ans.size()<<endl;
		for(int i=0;i<(int)ans.size();i++)
			cout<<ans[i].first<<" "<<ans[i].second<<endl;
	}
	else
		cout << "No"<<endl;
	return 0;
}

	  	 	     	  	 						    	