#include <cstdio>
#include <vector>
#include <algorithm>
#include <iostream>
using namespace std;

#define pii pair<int,int>
#define MAX 500005
#define ll long long

char s[MAX];

ll need(int m){
    int i, lo = 0, n;
    vector<pii> mark;

    for( i = 0; s[i]; i ++){
        if ( s[i] == 'H' ) if ( m -- == 0) lo = i;
        if ( s[i] == 'S' ) if ( ++ m == 0) mark.push_back(make_pair(lo, i));
    }
    if ( m < 0) return 1 << 30;
    n = i - 1;
    while( s[n] != 'H' && (mark.empty() || mark.back().second < n)) n --;
    ll total = n + 1;
    for( i = 0; i <(int) mark.size(); i ++)
        total += (mark[i].second - mark[i].first) << 1;
    ll ans = total;
    for( i = mark.size() - 1; i >= 0; i --){
        total -= (mark[i].second - mark[i].first) << 1;
        ans = min( ans, total + n - mark[i].first);
    }
    return ans;
}

int main(){

    int N, T;
    scanf("%d%d%s", &N, &T, s);
    need(0);
    int lo = 0, hi = N + 1, m;
    while( lo < hi){
        m = (lo + hi) >> 1;
        if ( need(m) > 1LL * T)
            lo = m + 1;
        else
            hi = m;
    }

    if ( lo <= N )
        printf("%d\n", lo);
    else
        printf("-1\n");

    return 0;
}
