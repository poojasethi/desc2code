#include<cstdio>
#include<cstring>
#include<algorithm>
#define fou(i,j,k) for (int i=j;i<=k;i++)
#define fod(i,j,k) for (int i=j;i>=k;i--)
using namespace std;

const int maxn=55;
const int maxk=30;

int len1,len2,n;
int f[maxn][maxn];
bool f1[maxn][maxn][maxk],f2[maxn][maxn][maxk];
char ch[maxn][10],s1[maxn],s2[maxn];

void init()
{
	scanf("%s%s",s1+1,s2+1);
	scanf("%d",&n);
	fou(i,1,n) scanf("%s",ch[i]);
}

void make(int len,char s[maxn],bool f[maxn][maxn][maxk])
{
	fou(i,1,len) f[i][i][s[i]-'a']=true;
	fou(t,1,len-1)
		fou(i,1,len-t){
			int j=i+t;
			fou(k,i,j-1)
				fou(p,1,n)
					if (f[i][k][ch[p][3]-'a'] && f[k+1][j][ch[p][4]-'a'])
						f[i][j][ch[p][0]-'a']=true;
		}
}

void dp()
{
	memset(f,-1,sizeof(f));
	f[0][0]=0;
	fou(i,1,len1)
		fou(j,1,len2)
			fou(k,0,25)
				fou(x,0,i-1) if (f1[x+1][i][k])
					fou(y,0,j-1) if (f2[y+1][j][k])
						if (f[x][y]!=-1 && (f[i][j]==-1 || f[i][j]>f[x][y]+1))
							f[i][j]=f[x][y]+1;
	printf("%d\n",f[len1][len2]);
}

void solve()
{
	memset(f1,false,sizeof(f1));
	memset(f2,false,sizeof(f2));
	len1=strlen(s1+1);
	len2=strlen(s2+1);
	make(len1,s1,f1);
	make(len2,s2,f2);
	dp();
}

int main()
{
    init();
    solve();
	return 0;
}
