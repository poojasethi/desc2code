#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <map>
#include <queue>
#include <vector>
#include <cstdlib>
#include <string>
#define N 55
using namespace std;
int f1[N][N][27],f2[N][N][27],dp[N][N];
char s1[N],s2[N],ch[N][8];
int n;
void sol(char *s,int f[N][N][27])
{
    memset(f,0,sizeof(f));
    int len=strlen(s);
    for(int i=0;i<len;i++)
     f[i][i][s[i]-'a']=1;
    for(int l=1;l<=len;l++)
     for(int i=0;i+l-1<len;i++)
     {
         int j=i+l-1;
         for(int k=i;k<j;k++)
          for(int ii=1;ii<=n;ii++)
           if(f[i][k][ch[ii][3]-'a']&&f[k+1][j][ch[ii][4]-'a'])
            f[i][j][ch[ii][0]-'a']=1;
     }
}
int main()
{
    scanf("%s%s",s1,s2);
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
     scanf("%s",ch[i]);
    sol(s1,f1);
    sol(s2,f2);
    int len1=strlen(s1),len2=strlen(s2);
    for(int i=0;i<=len1;i++)
     for(int j=0;j<=len2;j++)
      dp[i][j]=1000;
    dp[0][0]=0;
    for(int i=0;i<len1;i++)
     for(int j=0;j<len2;j++)
      for(int c=0;c<26;c++)
       for(int k1=i;k1<len1;k1++)
        if(f1[i][k1][c])
         for(int k2=j;k2<len2;k2++)
          if(f2[j][k2][c])
           dp[k1+1][k2+1]=min(dp[k1+1][k2+1],dp[i][j]+1);
    if(dp[len1][len2]>=1000)puts("-1");
    else printf("%d\n",dp[len1][len2]);
    return 0;
}

 	 	   		 					 		 	 					