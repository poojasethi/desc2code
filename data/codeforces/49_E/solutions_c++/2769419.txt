#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>

using namespace std;

enum {MAXN = 55,alpha = 26};
char sa[MAXN],sb[MAXN];
char chg[MAXN][3];

typedef int arr[MAXN][MAXN];
arr fa,fb;

void solve(char *s,arr &dp,int n)
{
  int len = strlen(s);
  for(int i = 0;i < len;i++) s[i] -= 'a';

  memset(dp,0,sizeof(dp));
  for(int i = 0;i < len;i++) dp[i][i] = (1 << s[i]);
  for(int d = 1;d < len;d++)
    for(int i = 0;i + d < len;i++)
      {
	const int j = i + d;
	for(int k = i;k < j;k++)
	  for(int p = 0;p < n;p++)
	    if ((dp[i][k] >> chg[p][0]) & (dp[k + 1][j] >> chg[p][1]) & 1)
	      dp[i][j] |= (1 << chg[p][2]);
      }
}

int dp[MAXN][MAXN];

int main()
{
  scanf("%s%s",sa,sb);
  
  int n;
  scanf("%d",&n);
  char t[10];
  for(int i = 0;i < n;i++)
    {
      scanf("%s",t);
      chg[i][0] = t[3] - 'a';
      chg[i][1] = t[4] - 'a';
      chg[i][2] = t[0] - 'a';
    }
  
  int la = strlen(sa),lb = strlen(sb);
  solve(sa,fa,n);
  solve(sb,fb,n);

  for(int i = 0;i <= la;i++) dp[i][0] = MAXN;
  for(int j = 0;j <= lb;j++) dp[0][j] = MAXN;
  dp[0][0] = 0;

  for(int i = 1;i <= la;i++)
    for(int j = 1;j <= lb;j++)
      {
	dp[i][j] = MAXN; 
	for(int li = 0;li < i;li++)
	  for(int lj = 0;lj < j;lj++)
	    if (fa[li][i - 1] & fb[lj][j - 1])
	      dp[i][j] = min(dp[i][j],dp[li][lj] + 1);
      }

  if (dp[la][lb] == MAXN) puts("-1");
  else printf("%d\n",dp[la][lb]);
  return 0;
}
