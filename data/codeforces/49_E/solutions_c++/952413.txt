#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>
using namespace std;

int g[55], va[55], vb[55], next[55], f[55][55], p[26][55][55], q[26][55][55];
char s1[55], s2[55];

void Work(char *s, int d[26][55][55])
{
	memset(d, 0, sizeof(d));
	int n = strlen(s);
	for (int i = 0; i < n; i++)
		d[s[i]-'a'][i][0] = 1;
	for (int j = 1; j < n; j++)
		for (int i = 0; i < n-j; i++)
			for (int c = 0; c < 26; c++)
				for (int o = g[c]; o != -1; o = next[o])
					for (int k = 0; k < j; k++)
						if (d[va[o]][i][k] && d[vb[o]][i+k+1][j-k-1]) {
							d[c][i][j] = 1;
							break;
						}
}
int main()
{
	int n, m;
	scanf("%s%s", s1, s2);
	scanf("%d", &n);
	memset(g, -1, sizeof(g));
	for (int i = 0; i < n; i++) {
		char c1, c2, c3;
		while ((c1 = getchar()) && (c1 < 'a' || c1 > 'z'));
		while ((c2 = getchar()) && (c2 < 'a' || c2 > 'z'));
		while ((c3 = getchar()) && (c3 < 'a' || c3 > 'z'));
		va[i] = c2-'a', vb[i] = c3-'a', next[i] = g[c1-'a'], g[c1-'a'] = i;
	}
	Work(s1, p);
	Work(s2, q);
	n = strlen(s1), m = strlen(s2);
	memset(f, -1, sizeof(f));
	f[0][0] = 0;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++) if (f[i][j] != -1)
			for (int c = 0; c < 26; c++)
				for (int x = 0; x < n-i; x++) if (p[c][i][x])
					for (int y = 0; y < m-j; y++) if (q[c][j][y])
						if (f[i+x+1][j+y+1] == -1 || f[i][j]+1 < f[i+x+1][j+y+1])
							f[i+x+1][j+y+1] = f[i][j]+1;
	printf("%d\n", f[n][m]);
	return 0;
}
