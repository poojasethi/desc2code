#include<cstdio>
#include<cstring>
#include<iostream>
using namespace std;
inline int min(int a,int b){return a<b?a:b;}
const int N_MAX=50+10,INF=~0u>>2;
string s1,s2;
int trans[26][26],aSet[N_MAX][N_MAX],bSet[N_MAX][N_MAX],N;
void calc(string str,int Set[N_MAX][N_MAX]){
	int len=str.size();
	for (int i=0; i<len; ++i) Set[i][i]=1<<(str[i]-'a');
	for (int i=len-1; i>=0; --i)
		for (int j=i+1; j<=len; ++j){
			Set[i][j]=0;
			for (int k=i; k<j; ++k)
				for (int a=0; a<26; ++a)if (Set[i][k]>>a&1){
					for (int b=0; b<26; ++b)if (Set[k+1][j]>>b&1){
						Set[i][j]|=trans[a][b];
					}
				}
		}
}
int dp[N_MAX][N_MAX];
int main(){
	ios::sync_with_stdio(false);
	cin>>s1>>s2>>N;
	for (int i=0; i<N; ++i){
		string s;cin>>s;
		int from,c1,c2;
		from=s[0]-'a';
		c1=s[3]-'a';c2=s[4]-'a';
		trans[c1][c2]|=1<<from;
	}
	calc(s1,aSet);
	calc(s2,bSet);
	for (int i=0; i<=s1.size(); ++i)
		for (int j=0; j<=s2.size(); ++j)
			if (!i && !j){
				dp[i][j]=0;
			}
			else if (!i || !j){
				dp[i][j]=INF;
			}
			else{
				dp[i][j]=INF;
				for (int pi=0; pi<i; ++pi)
					for (int pj=0; pj<j; ++pj)
						if (aSet[pi][i-1]&bSet[pj][j-1])
							dp[i][j]=min(dp[i][j],dp[pi][pj]+1);
			}
	if (dp[s1.size()][s2.size()]!=INF)
		cout<<dp[s1.size()][s2.size()]<<endl;
	else puts("-1");
	return 0;
}
	 		 	    				  	 	  	  	 	