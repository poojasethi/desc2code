#include <cstdio>
#include <cstring>

const int maxn = 52;
int n, len[2], cnt[26], opt[maxn][maxn];
char s[2][maxn], gen[26][maxn][2], g;
bool f[2][26][maxn][maxn];

inline int min(int x, int y){return x < y ? x : y;}

void dp(char s[], int len, bool f[][maxn][maxn]){
	for (int i = 1; i <= len; i++) f[s[i] - 'a'][i][i] = true;
	for (int w = 2; w <= len; w++)
		for (int l = 1, r; r = l + w - 1, l <= len - w + 1; l++)
			for (int c = 0; c < 26; c++)
				for (int s = 0; s < cnt[c]; s++)
					for (int k = l; k < r; k++)
						if (f[gen[c][s][0] - 'a' ][l][k] && f[gen[c][s][1] - 'a'][k + 1][r])
							f[c][l][r] = true;
}

int main(){
	for (scanf("%s\n%s\n%d", s[0] + 1, s[1] + 1, &n); n--;){
		scanf("\n%c", &g);
		scanf("->%c%c", &gen[g - 'a'][cnt[g - 'a']][0], &gen[g - 'a'][cnt[g - 'a']][1]), cnt[g - 'a']++;
	}
	len[0] = strlen(s[0] + 1); len[1] = strlen(s[1] + 1);
	dp(s[0], len[0], f[0]); dp(s[1], len[1], f[1]);
	memset(opt, 60, sizeof(opt));
	int inf = opt[0][0]; opt[0][0] = 0;
	for (int i = 0; i <= len[0]; i++)
		for (int j = 0; j <= len[1]; j++)
			if (opt[i][j] != inf)
				for (int x = i + 1; x <= len[0]; x++)
					for (int y = j + 1; y <= len[1]; y++)
						for (int c = 0; c < 26; c++)
							if (f[0][c][i + 1][x] && f[1][c][j + 1][y])
								opt[x][y] = min(opt[x][y], opt[i][j] + 1);
	if (opt[len[0]][len[1]] == inf) printf("-1"); else printf("%d", opt[len[0]][len[1]]);
}
