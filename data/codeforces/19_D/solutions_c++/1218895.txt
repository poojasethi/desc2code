#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>

#define dbg(...) fprintf(stderr, __VA_ARGS__)

using namespace std;

const int n = 1<<18;

int t, x[n+5], y[n+5], xMax[n*2+5], yMax[n*2+5], type[n+5], w[n+5], pos[n+5];
char buf[20];

bool cmp(int i, int j)
{
	return (x[i] < x[j] || (x[i] == x[j] && y[i] < y[j]));
}

void Upd(int i, int x, int y)
{
	i += n;
	xMax[i] = x;
	yMax[i] = y;
	for (i >>= 1; i > 0; i >>= 1)	
		xMax[i] = max(xMax[i*2], xMax[i*2+1]),
		yMax[i] = max(yMax[i*2], yMax[i*2+1]);
}

int Get(int v, int x, int y)
{
	if (xMax[v] < x || yMax[v] < y) return -1;
	if (v >= n) return v;
	int k = Get(v*2, x, y);
	if (k != -1) return k;
	return Get(v*2+1, x, y);
}

int main()
{
#ifndef ONLINE_JUDGE
	dbg("\n");
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif	
	
	scanf("%d", &t);
	
	for (int i = 0; i < t; ++i)
	{
		scanf("%s%d%d", buf, &x[i], &y[i]); int n = strlen(buf);
		type[i] = n==3 ? 0 : n==6 ? 1 : 2;
		w[i] = i;
	}
	
	sort(w, w+t, cmp);
	
	int r = 1;
	for (int i = 1; i < t; ++i)
	{
		if (x[w[i]] != x[w[i-1]] || y[w[i]] != y[w[i-1]]) ++r;
		pos[w[i]] = r-1;
	}
	
	for (int i = 0; i < t; ++i)
	{
		if (type[i] != 2)
		{
			Upd(pos[i], !type[i] ? x[i] : 0, !type[i] ? y[i] : 0);
// 			if (type[i] == 1)
// 			{
// 				for (int j = 0; j < n+t; ++j)	
// 					printf("%d %d\n", xMax[j], yMax[j]);
// 				puts("");
// 			}
		}
		else
		{
			int pos = Get(1, x[i]+1, y[i]+1);
			if (pos == -1)
				puts("-1");
			else
				printf("%d %d\n", xMax[pos], yMax[pos]);
//				dbg("%d\n", pos);
		}
	}
	
	return 0;
}