#include<iostream>
#include<cstdio>
#include<algorithm>
#include<climits>
#include<utility>
#include<vector>
#include<set>
#include<cstring>
using namespace std;

#define ALL(v) (v).begin(),(v).end()
#define MAXN 200010

set < pair <int ,int> > sets[MAXN];
int n,x[MAXN],y[MAXN];
char type[MAXN];

int main(){
    scanf("%d",&n);
    vector <int> values;
    for(int i=0;i<n;i++){
        char buffer[7];
        scanf("%s%d%d",buffer,x+i,y+i);
        type[i]= *buffer;
        values.push_back(y[i]);
    }
    sort(ALL(values));
    values.erase(unique(ALL(values)),values.end());
    for(int i=0;i<n;i++){
     pair <int, int> p(x[i],y[i]);
        if(type[i]=='f'){
            pair <int ,int> q(INT_MAX,INT_MAX);
           for(int k= upper_bound(ALL(values),y[i]) - values.begin();k < (int)values.size();k+=~k & k +1){
            set < pair <int, int > > ::iterator iter=sets[k].upper_bound(make_pair(x[i],INT_MAX));
            if(iter!=sets[k].end())
               q= min(q,*iter);
        }   
         if(q.first==INT_MAX){
            puts("-1");
           }else{
            printf("%d %d\n",q.first,q.second);
         } 
        }
        else{
            for(int k=lower_bound(ALL(values),y[i])-values.begin();k>=0 ;k-=~k & k +1){
                if(type[i]=='a'){
                    sets[k].insert(p);
                }else{
                    sets[k].erase(p);
                }
            }
        }
    }
 return 0;  
}