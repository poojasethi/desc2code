#include<cstdio>
#include<vector>
#include<sstream>
#include<algorithm>
#include<numeric>
#include<cstdlib>
#include<complex>
#include<set>
#include<map>
#include<queue>
#include<cassert>

using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define rp(i,c) rep(i,(c).size())
#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
#define dbg(x) cerr<<#x<<" = "<<(x)<<endl

typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int,int> pi;
typedef long long ll;

const int MX=1<<18;
int maxx[2*MX], maxy[2*MX];
char q[200000][9]; int x[200000],y[200000];
map<pi,int> m;

void add(int x,int y){
	int i=MX+m[mp(x,y)];
	maxx[i]=x; maxy[i]=y;
	for(i/=2; i; i/=2){
		maxx[i]=max(maxx[2*i], maxx[2*i+1]);
		maxy[i]=max(maxy[2*i], maxy[2*i+1]);
	}
}
void remove(int x,int y){
	int i=MX+m[mp(x,y)];
	maxx[i]=maxy[i]=0;
	for(i/=2; i; i/=2){
		maxx[i]=max(maxx[2*i], maxx[2*i+1]);
		maxy[i]=max(maxy[2*i], maxy[2*i+1]);
	}
}
int find(int i,int x,int y){
	if(maxx[i]<x||maxy[i]<y)return -1;
	if(i>=MX)return i;
	int tmp=find(2*i,x,y);
	return tmp!=-1?tmp:find(2*i+1,x,y);
}
void run()
{
	int n; scanf("%d",&n);
	rep(i,n){
		scanf("%s%d%d",q[i],x+i,y+i);
		if(q[i][0]!='f')m[mp(x[i],y[i])]=0;
	}
	int k=0;
	fr(i,m)i->second=k++;
	
	rep(i,n){
		if(q[i][0]=='a')add(x[i],y[i]);
		else if(q[i][0]=='r')remove(x[i],y[i]);
		else{
			int ans=find(1,x[i]+1,y[i]+1);
			if(ans==-1)puts("-1");
			else printf("%d %d\n",maxx[ans],maxy[ans]);
		}
	}
}

int main()
{
#ifndef ONLINE_JUDGE
	int cs=3;rep(i,cs)
#endif
	run();
}
  			 	  	 	 	   	 					  	