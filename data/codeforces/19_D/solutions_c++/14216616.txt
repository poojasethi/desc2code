//In the Name of God

#include<iostream>
#include<algorithm>
#include<set>
#include<cstring>

using namespace std;

const int maxn=131072*2;
const int inf=1e9+7;
int n,N;
int x[maxn],y[maxn],X[maxn],maxi[maxn*2];
string t[maxn];
set<int> s[maxn];

int find(int seg,int fs,int ls,int f,int l,int v)
{
  if(l<=fs or ls<=f)
    return inf;
  if(f<=fs and ls<=l)
    {
      if(maxi[seg]<=v)
	return inf;
      if(fs==ls-1)
	return fs;
    }
  int mid=(fs+ls)>>1;
  int ret=find(seg*2+1,fs,mid,f,l,v);
  if(ret==inf)
    ret=find(seg*2+2,mid,ls,f,l,v);
  return ret;
}

void change(int seg,int fs,int ls,int f,int l,int v)
{
  if(l<=fs or ls<=f)
    return;
  if(f<=fs and ls<=l)
    {
      maxi[seg]=v;
      return;
    }
  int mid=(fs+ls)>>1;
  change(seg*2+1,fs,mid,f,l,v);
  change(seg*2+2,mid,ls,f,l,v);
  maxi[seg]=max(maxi[seg*2+1],maxi[seg*2+2]);
}

void upd(int ind)
{
  int c=-1;
  if(s[ind].size())
    c=*(s[ind].rbegin());
  change(0,0,N,ind,ind+1,c);
}

int main()
{
  ios_base::sync_with_stdio(0);
  cin>>n;
  for(int i=0;i<n;i++)
    {
      cin>>t[i]>>x[i]>>y[i];
      X[i]=x[i];
    }
  sort(X,X+n);
  N=unique(X,X+n)-X;
  for(int ID,i=0;i<n;i++)
    {
      ID=lower_bound(X,X+N,x[i])-X;
      if(t[i][0]=='a')
	{
	  s[ID].insert(y[i]);
	  upd(ID);
	}
      else if(t[i][0]=='r')
	{
	  s[ID].erase(y[i]);
	  upd(ID);
	}
      else
	{
	  ID=find(0,0,N,ID+1,N,y[i]);
	  if(ID!=inf)
	    cout<<X[ID]<<" "<<*(s[ID].upper_bound(y[i]))<<endl;
	  else
	    cout<<-1<<endl;
	}
    }
  return 0;
}
