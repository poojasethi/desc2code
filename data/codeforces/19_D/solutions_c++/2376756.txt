#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>
#include <assert.h>
#include <sstream>
#include <set>
#include <list>

const int N=200010;
const int inf=0x3f3f3f3f;

using namespace std;

struct data
{
	int a,x,y;
}da[N];
int x[N];
map<int,int> h;

#define mp make_pair
#define f first
#define s second
typedef pair<int,int> pr;

set<pr> st[N];

int lowbit(int x) { return x&(-x);}

void add(int id,pr p)
{
	for(int i=id;i>0;i-=lowbit(i))
		st[i].insert(p);
}

void del(int id,pr p)
{
	for(int i=id;i>0;i-=lowbit(i))
		st[i].erase(p);
}

void find(int id,pr p)
{
	pr ret(inf,inf);
	for(int i=id;i<N;i+=lowbit(i))
	{
		set<pr >::iterator it=st[i].lower_bound(p);
		if(it!=st[i].end()) ret=min(ret,*it);
	}
	if(ret.s==inf) puts("-1");
	else printf("%d %d\n",ret.f,ret.s);
}

int main()
{
	int n;
	scanf("%d",&n);
	for(int i=0;i<n;i++)
	{
		char s[11];
		scanf("%s%d%d",s,&da[i].x,&da[i].y);
		x[i]=da[i].y;
		if(s[0]=='a') da[i].a=-1;
		else if(s[0]=='r') da[i].a=0;
		else da[i].a=1;
	}
	sort(x,x+n);
	for(int i=0;i<n;i++)
		h[x[i]]=i+1;
	for(int i=0;i<n;i++)
	{
		int t=h[da[i].y];
		if(da[i].a==-1)
			add(t,mp(da[i].x,da[i].y));
		else if(da[i].a==0)
			del(t,mp(da[i].x,da[i].y));
		else
		{
			if(t==n)
			{
				puts("-1");
				continue;
			}
			find(h[x[t]],mp(da[i].x+1,da[i].y+1));
		}
	}
	return 0;
}
