#include <cstdio>
#include <set>
#include <algorithm>
using namespace std;

const int MAXI = 200005;

typedef pair<int, int> pii;
set<pii> bit[200010];
void add(pii p) {
	for (int x = MAXI - p.second; x <= MAXI; x += x & -x) {
		bit[x].insert(p);
	}
}
void rem(pii p) {
	for (int x = MAXI - p.second; x <= MAXI; x += x & -x) {
		bit[x].erase(p);
	}
}
pii query(pii p) {
	pii res(1.2e9, -1);
	for (int x = MAXI - p.second; x; x -= x & -x) {
		set<pii>::iterator it = bit[x].lower_bound(p);
		if (it != bit[x].end()) {
			res = min(res, *it);
		}
	}
	return res;
}
char type[200010];
pii cur[200010];

int z;
int norm[200010];
int main() {
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%s%d%d", type + i, &cur[i].first, &cur[i].second);
		if (type[i] == 'f') {
			cur[i].first++;
			cur[i].second++;
		}
		norm[i] = cur[i].second;
	}
	sort(norm, norm + n);
	z = unique(norm, norm + n) - norm;
	for (int i = 0; i < n; i++) {
		cur[i].second = lower_bound(norm, norm + z, cur[i].second) - norm;
		if (type[i] == 'a') {
			add(cur[i]);
		} else if (type[i] == 'r') {
			rem(cur[i]);
		} else {
			pii t = query(cur[i]);
			if (t.first > 1.1e9) {
				puts("-1");
			} else {
				printf("%d %d\n", t.first, norm[t.second]);
			}
		}
	}
}
