#include <cstdio>
#include <cstring>
using namespace std;

const int N = 5000, oo = 1 << 28;
int n, w[N + 1], h[N + 1], dp[N + 1], to[N + 1];

int dfs(int u) {
	if (dp[u])
		return dp[u];
	dp[u] = 1;
	for (int v = 1; v <= n; ++v)
		if (w[u] < w[v] && h[u] < h[v] && dp[u] < dfs(v) + 1) {
			dp[u] = dfs(v) + 1;
			to[u] = v;
		}
	return dp[u];
}

int main() {
	scanf("%d", &n);
	for (int i = 0; i <= n; ++i)
		scanf("%d%d", w + i, h + i);
	//memset(dp + 1, -1, sizeof(dp[0]) * n);
	printf("%d\n", dfs(0) - 1);
	for (int i = dfs(0) - 1, u = to[0]; i; --i, u = to[u])
		printf("%d ", u);
	printf("\n");
	return 0;
}
