from bisect import bisect_left

n, w, h = map(int, raw_input().split())

lopes = []

for i in xrange(n):
	x, y = map(int, raw_input().split())
	if x > w and y > h:
		lopes.append((x,y,i + 1))

n = len(lopes)
lopes.sort(key=lambda v:v[1],reverse=True)
lopes.sort(key=lambda v:v[0])

dp = []
d = [0] * n;
for i, key in enumerate(lopes):
	k = bisect_left(dp,key[1])
	d[i] = k
	if k < len(dp):
		dp[k] = key[1]
	else:
		dp.append(key[1])

print len(dp)

r = []
l = len(dp)

for i in xrange(n-1,-1,-1):
	if d[i] == l - 1:
		r.append(lopes[i][2])
		l -= 1
		if l < 0:
			break
if r:
	print ' '.join(map(str,r[::-1]))