import bisect
n, w, h = map(int, raw_input().split())

arr = []
for i in xrange(n):
    a, b = map(int, raw_input().split())

    if a > w and b > h:
        arr.append( (a, b, i+1) )


n = len(arr)

def compare(a, b):
    if a[0] == b[0]:
        return -cmp(a[1], b[1])
    return cmp(a[0], b[0])
    
arr.sort(compare)

dp = [0] * n
ans, ansi = 0, -1
LIS = []
for i in xrange(n):
    t = arr[i][1]

    if len(LIS) == 0 or t > LIS[-1]:
        LIS.append(t)
        dp[i] = len(LIS)
    else:
        idx = bisect.bisect_left(LIS, t)
        LIS[idx] = t
        dp[i] = idx + 1
    
    #print LIS

t = ans = len(LIS)
ansrr = []
for i in xrange(n-1, -1, -1):
    if t == dp[i]:
        ansrr.append(arr[i][2]) 
        t -= 1

ansrr.reverse()

print ans
print ' '.join( map(str, ansrr) )

