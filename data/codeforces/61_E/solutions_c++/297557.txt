#include <stdio.h>
#include <algorithm>
using namespace std;

#define maxn 1111111

int a[maxn], b[maxn], c[maxn], n, i, j;
long long A[4][maxn];

void modify(int i, int j, long long k){
	while (j<=n){
		A[i][j] += k;
		j = (j | (j-1))+1;
	}
}

long long findsum(int ind, int j){
	long long res = 0;
	while(j){
		res += A[ind][j];
		j = (j & (j-1));
	}
	return res+(!ind);
}

int main(){
	scanf("%d", &n);
	for(i = 1; i<=n; i++){
		scanf("%d", &a[i]);
		b[i] = -a[i];
	}
	sort(b+1, b+n+1);
	for(i = 1; i<=n; i++){
		a[i] = lower_bound(b+1, b+n+1, -a[i])-b;
	}
//	memset(A, 0, sizeof(A));
	for(i = 1; i<=n; i++){
		for(j = 1; j<=3; j++) modify(j, a[i], findsum(j-1, a[i]-1));
	}
	printf("%I64d\n", findsum(3, n));
	return 0;
}