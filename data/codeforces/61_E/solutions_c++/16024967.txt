#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#define T int
#define oset tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>
typedef long long ll;
const int maxn = 1e6+6;
int a[maxn], l[maxn];
int main(){
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	int n; cin >> n;
	oset s;
	for(int i=0;i<n;i++){
		cin >> a[i];
		s.insert(-a[i]); l[i] = s.order_of_key(-a[i]);
	}
	s.clear();
	ll ans = 0;
	for(int i=n-1;i>=0;i--){
		s.insert(a[i]); int r = s.order_of_key(a[i]);
		ans += l[i]*1ll*r;
	}
	cout << ans << endl;
	return 0;
}