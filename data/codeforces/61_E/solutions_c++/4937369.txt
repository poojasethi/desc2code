#include <cstdio>
#include <algorithm>
#include <iostream>
using namespace std;

// Global variables
int n, tree[1000010], a[1000010], b[1000010];
long long ans;

bool CmpFn(int elem1, int elem2) {
  return a[elem1] < a[elem2];
}

void Update(int idx, int add) {
  while (idx <= n) {
    tree[idx] += add;
    idx += idx & (-idx);
  }
}

int Query(int idx) {
  int ans = 0;
  
  while (idx) {
    ans += tree[idx];
    idx -= idx & (-idx);
  }
  
  return ans;
}

int main() {
  cin >> n;
  
  for (int i = 1; i <= n; ++i)
    cin >> a[i];
  
  for (int i = 1; i <= n; ++i)
    b[i] = i;
  
  sort(b + 1, b + 1 + n, CmpFn);
  
  for (int i = 1; i <= n; ++i)
    a[b[i]] = i;
  
  for (int idx = 2; idx < n; ++idx) {
    int temp;
    Update(a[idx - 1], 1);
    temp = Query(a[idx]);
    ans += (long long)(idx - 1 - temp) * (a[idx] - 1 - temp);
  }
  
  cout << ans << endl;
}