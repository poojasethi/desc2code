#include <iostream>
#include <cstdio>
#include <map>
#include <algorithm>
using namespace std;

int N,S[1000001],P[1000001];
long long int T[2][1000001],dp[1000001],tmp,sum,ans;
map <int,int> M;

void update(int a,int x,long long int t){
	while(x <= N){
		T[a][x] += t;
		x += (x&-x);
	}
}

long long int query(int a,int x){
	sum = 0;
	while(x > 0){
		sum += T[a][x];
		x -= (x&-x);
	}
	return sum;
}

int main(){
	scanf("%d",&N);
	for(int i=1;i<=N;++i){
		scanf("%I64d",&S[i]);
		M[S[i]] = 1;
	}
	reverse(S+1,S+N+1);
	N = 0;
	for(map<int,int>::iterator it=M.begin();it!=M.end();++it)it->second = ++N;
	for(int i=1;i<=N;++i) P[i] = M[S[i]];
	for(int i=1;i<=N;++i){
		dp[i] = query(0,P[i]);
		update(0,P[i],1);
	}
	for(int i=1;i<=N;++i){
		ans += query(1,P[i]);
		update(1,P[i],dp[i]);
	}
	printf("%I64d\n",ans);
}
