#include <algorithm>
#include <iostream>
#include <set>

using namespace std;

#define FORIT(it, v) for (typeof((v).begin()) it = (v).begin(); it != (v).end(); ++it)

typedef long long int64;

const int N = 1000005;

int n;
int v[N], aib[N];
int64 ans;
set <pair <int, int> > s;

inline int lsb(int x) {
    return x ^ (x & (x - 1));
}

inline void update(int x) {
    if (x > n)
        return;

    ++aib[x];
    update(x + lsb(x));
}

inline int64 query(int x) {
    if (x == 0)
        return 0;

    return aib[x] + query(x - lsb(x));
}

int main() {
    cin >> n;
    for (int i = 0; i < n; ++i) {
        cin >> v[i];
        s.insert(make_pair(v[i], i));
    }
    
    FORIT(it, s) {
        update(it->second + 1);
        ans += ((it->second) - query(it->second)) * (query(n) - query(it->second + 1));
    }

    cout << ans;
}
