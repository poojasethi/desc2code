#include <bits/stdc++.h>
using namespace std;
int n;
#define ll long long
int a[1000009],b[1000009];
set<int> s;
ll tree1[1000009],tree2[1000009],ans;
void update(ll tree[],int idx,ll val)
{
	for(;idx<=1000005;idx+=idx&-idx)tree[idx]+=val;
}
ll read(ll tree[],int idx)
{
	ll sum=0;
	for(;idx>0;idx-=idx&-idx)sum+=tree[idx];
	return sum;
}
int main() 
{
	cin>>n;
	for(int i=1;i<=n;i++){scanf("%d",&a[i]);s.insert(a[i]);}
	int k=0;
	for(set<int>::iterator it=s.begin();it!=s.end();it++)
		b[++k]=*it;
	for(int i=1;i<=n;i++)
		a[i]=(int)(lower_bound(b+1,b+k+1,a[i])-b);
	for(int i=n;i>=1;i--)
	{
		update(tree2,a[i]+1,read(tree1,a[i]));
		ans+=read(tree2,a[i]);
		update(tree1,a[i]+1,1);
	}
	cout<<ans;
	return 0;
}