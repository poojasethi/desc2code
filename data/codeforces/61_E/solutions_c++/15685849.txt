#include <bits/stdc++.h>
using namespace std;

#define int long long

int n;

int sum(int B[], int idx)
{
	int ans = 0;
	while(idx > 0)
	{
		ans += B[idx];
		idx -= (idx&(-idx));
	}

	return ans;
}

void update(int B[], int idx, int value)
{
	while(idx <= n)
	{
		B[idx] += value;
		idx += (idx&(-idx));
	}
}

main()
{
	cin >> n;
	
	int v[n], b[n];

	for(int i = 0; i < n; i++)
	{
		cin >> v[i];
		b[i] = v[i];
	}

	sort(b, b+n);

	for(int i = 0; i < n; i++)
	{
		int idx = (lower_bound(b, b+n, v[i]) - b);
		v[i] = idx+1;
	}

	int tree[n+2];
	memset(tree, 0, sizeof(tree));

	int f[n+1];
	for(int i = n-1; i >= 0; i--)
	{
		f[v[i]] = sum(tree, v[i]-1);
		update(tree, v[i], 1);
	}

	memset(tree, 0, sizeof(tree));
	int ans = 0;

	for(int i = 0; i < n; i++)
	{
		ans += ((i - sum(tree, v[i])) * f[v[i]]);
		update(tree, v[i], 1);
	}

	cout << ans << '\n';
}
