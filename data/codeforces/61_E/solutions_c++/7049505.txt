#include <iostream>
#include <map>
using namespace std;

const int MAXN = 1000005;
int N;
int A[MAXN];
map<int, int> mp;
int BIT[MAXN][2];
int total[MAXN][2];

void add(int idx, int type)
{
	for (; idx < MAXN; idx += idx&-idx)
		BIT[idx][type]++;
}

int get(int idx, int type)
{
	int cnt = 0;
	for (; idx > 0; idx -= idx&-idx)
		cnt += BIT[idx][type];
	return cnt;
}

int main()
{
	cin >> N;
	for (int i = 0; i < N; i++)
	{
		cin >> A[i];
		mp[A[i]] = i;
	}

	int idx = 1;
	for (map<int, int>::iterator it = mp.begin(); it != mp.end(); it++)
		A[it->second] = idx++;

	for (int i = 0; i < N; i++)
	{
		total[i][0] = i - get(A[i], 0);
		total[N-1-i][1] = get(A[N-1-i], 1);
		add(A[i], 0);
		add(A[N-1-i], 1);
	}

	long long ans = 0;
	for (int i = 0; i < N; i++)
		ans += (long long)total[i][0]*total[i][1];

	cout << ans << "\n";

	return 0;
}