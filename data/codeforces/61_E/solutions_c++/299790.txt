#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define lowbit(x) (x&-x)
#define MAXN 1000010

typedef long long ll;
int n;
ll tree[3][MAXN];
int a[MAXN],b[MAXN];

void update(int j,int x,ll k)
{
	while(x<=n)
	{
		tree[j][x]+=k;
		x+=lowbit(x);
	}
}

ll Sum(int j,int x)
{
	ll res=0;
	while(x>0)
	{
		res+=tree[j][x];
		x-=lowbit(x);
	}
	return res;
}

int main()
{
	while(scanf("%d",&n)!=EOF)
	{
		for(int i=1;i<=n;i++)
		{
			scanf("%d",&a[i]);
			b[i]=-a[i];
		}
		sort(b+1,b+n+1);
		memset(tree,0,sizeof(tree));
		for(int i=1;i<=n;i++)
			a[i]=lower_bound(b+1,b+n+1,-a[i])-b;
		for(int i=1;i<=n;i++)
		{
			update(0,a[i],1);
			update(1,a[i],Sum(0,a[i]-1));
			update(2,a[i],Sum(1,a[i]-1));
		}
		printf("%I64d\n",Sum(2,n));
	}
	return 0;
}
