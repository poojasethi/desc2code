#include<iostream>
#include<cstdio>
#include<algorithm>
using namespace std;
int n,r;
int ans;
int res[10];
int now[10];
struct node
{
    int x,y;
}a[10005];
int g;
node o;
int dis(node a,node b)
{
    return (a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y);
}
bool cmp(node a,node b)
{
    return dis(a,o)>dis(b,o);
}
int m;
void dfs(int x,int cnt,int sum)
{
    if(cnt==n)
    {
        if(sum>ans)
        {
            ans=sum;
            for(int i=1;i<=n;i++)
            res[i]=now[i];
        }
        return;
    }
    for(int i=x;i<=m;i++)
    {
        now[cnt+1]=i;
        int tmp=0;
        for(int j=1;j<=cnt;j++)
        tmp+=dis(a[i],a[now[j]]);
        dfs(i,cnt+1,tmp+sum);
    }
}
int main()
{
    scanf("%d%d",&n,&r);
    for(int i=-r;i<=r;i++)
    {
        for(int j=-r;j<=r;j++)
        {
            node tmp;
            tmp.x=i;tmp.y=j;
            if(dis(tmp,o)<=r*r)
            {
                a[++g]=tmp;
            }
        }
    }
    sort(a+1,a+g+1,cmp);
    m=min(18,max(n,g));
    dfs(1,0,0);
    printf("%d\n",ans);
    for(int i=1;i<=n;i++)
    {
        printf("%d %d\n",a[res[i]].x,a[res[i]].y);
    }
    return 0;
}