#include <iostream>
#include <cstdio>
#include <string.h>
#include <string>
#include <vector>

#define REP(i,a,b) for(int i=a;i<=b;i++)
#define sf scanf
#define pf printf
#define lson rt<<1
#define rson rt<<1|1
#define LL long long 

using namespace std;
const int MAXN = 80;

int n,r , m;
int ans;
int ansx[10],ansy[10];
vector<int> x , y;


int xx(int x){
	return x*x;
}

int a[10];
int dis(int i, int j){
	return xx(x[i]-x[j])+xx(y[i]-y[j]);
}
void dfs(int now , int p){
	if ( now==n ) {
	
		int sum = 0;
		REP(i,1,n) REP(j,i+1,n)
			sum += dis(a[i],a[j]);
		if ( ans<sum ) {
			ans = sum;
			REP(i,1,n) 
				ansx[i] = x[a[i]] , ansy[i] = y[a[i]];
		}
		return ;
	}
	REP(i,p,m-1){
		a[now+1] = i;
		dfs(now+1,i);
	}
}

int from0(int id){
	return xx(x[id])+xx(y[id]);
}


int main(){
	
	while ( scanf("%d%d",&n,&r)!=EOF){ 
		x.clear() , y.clear();
		REP(i,-r,r){
			int j = r;
			while ( i*i+j*j>r*r ) j--;
			x.push_back(i) , y.push_back( j);
			if ( j!=0 )x.push_back(i) , y.push_back(-j);
		}
		m = x.size();
		REP(i,0,m-1) REP(j,i+1,m-1){
			if ( from0(i)<from0(j) ) {
				swap(x[i] , x[j]);
				swap(y[i] , y[j]);
			}
		}
		
		ans = -1; 
		m = min(20 , m);
//		cout<<m<<endl; REP(i,0,m-1) cout<<x[i]<<' '<<y[i]<<endl;
		dfs(0,0);
		printf("%d\n" , ans);
		REP(i,1,n){
			printf("%d %d\n" , ansx[i] , ansy[i]);
		}
	}
	
	return 0;
}