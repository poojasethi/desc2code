#include <set>
#include <map>
#include <cmath>
#include <ctime>
#include <cctype>
#include <cstdio>
#include <vector>
#include <cassert>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#define fi first
#define se second
#define mk make_pair
#define pb push_back
#define For(i,a,n)  for(int i=(a);i<=(n);i++)
#define Forn(i,a,n) for(int i=(a);i>=(n);i--)
using namespace std;
typedef long long ll;
typedef long double db;

inline int IN(){
	char ch=getchar(); int f=1,x=0;
	while((ch<'0'||ch>'9')&&(ch!='-')) ch=getchar();
	if(ch=='-') f=-1,ch=getchar();
	while(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+ch-'0',ch=getchar();
	return x*f;
}

struct po{
	int x,y,r;
	int operator <(const po &A)const{
		return r>A.r;
	}
}a[100005];int n,r,tot,Q,mx;
vector<po>ans,now;

int sqr(int x){return x*x;}

int dist(po A,po B){
	return sqr(A.x-B.x)+sqr(A.y-B.y);
}

void dfs(int x,int y,int z){
	if(x>Q)return;
	if(z>n)return;
	if(z==n){
		if(y>mx){
			mx=y;
			ans=now;
		}
		return;
	}
	dfs(x+1,y,z);
	int t=0;
	for(int i=0;i<(int)now.size();i++){
		t+=dist(a[x],now[i]);
	}
	now.pb(a[x]);
	dfs(x,y+t,z+1);
	dfs(x+1,y+t,z+1);
	now.pop_back();
}

int main(){
	scanf("%d%d",&n,&r);
	for(int i=-r;i<=r;i++){
		for(int j=-r;j<=r;j++){
			if(i*i+j*j<=r*r) a[++tot]=(po){i,j,i*i+j*j};
		}
	}
	sort(a+1,a+tot+1);
	Q=min(18,max(n,tot));
	dfs(1,0,0);
	printf("%d\n",mx);
	for(int i=0;i<(int)ans.size();i++) printf("%d %d\n",ans[i].x,ans[i].y);
	return 0;
}
