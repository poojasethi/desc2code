#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>
#include <cmath>
#include <stack>
#include <map>
#include <deque>
#include <cstring>

using namespace std;

int n,r;
int quad_size;
int maxx=0;
vector<int> id;
vector<int> maxv;
vector<int> px,py;

int maxy(int x){
	return (int)floor(sqrt(r*r-x*x));
}

void check(int suma,int sumx,int sumy){
	 if(id.size()==n){
	 //printf("%d\n",id.size());
	 				int sum=n*suma-sumx*sumx-sumy*sumy;
	 				if(sum>maxx){
								 maxx=sum;
								 maxv=id;
					}
     }else{
	 	   for(int a=id[id.size()-1];a<px.size();a++){
		   		   id.push_back(a);
		   		   check(suma+px[a]*px[a]+py[a]*py[a],sumx+px[a],sumy+py[a]);
		   		   id.pop_back();
 		   }
 	 }
}

int main(){
	scanf("%d%d",&n,&r);
	for(int x=-r;x<=0;x++){
			if(x>-r+1)while((maxy(x)-py[py.size()-1])*(x-px[py.size()-2])>=(maxy(x)-py[py.size()-2])*(x-px[py.size()-1])){
	           px.pop_back();
			   py.pop_back();																										     
			}																										   
			px.push_back(x);
			py.push_back(maxy(x));
	}
	px.pop_back();
	py.pop_back();
	quad_size=px.size();
	for(int a=0;a<quad_size;a++){
					px.push_back(py[a]);
					py.push_back(-px[a]);
			for(int b=0;b<2;b++){
					px.push_back(py[py.size()-1]);
					py.push_back(-px[px.size()-2]);
			}
	}
	for(int a=0;a<quad_size;a++){
			id.push_back(a);
			check(px[a]*px[a]+py[a]*py[a],px[a],py[a]);
			id.pop_back();
	}
	printf("%d\n",maxx);
	for(int a=0;a<n;a++)printf("%d %d\n",px[maxv[a]],py[maxv[a]]);
	//system("pause");	
    return 0;
}
