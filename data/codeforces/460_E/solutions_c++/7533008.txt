#include <bits/stdc++.h>
#define long long long
#define ii pair<int, int>
#define X first
#define Y second
const int N = 9;
const int oo = 1000000000;
using namespace std;

int n, r, lim;
ii point[N], out[N];
vector<ii> p;
int res;

bool cmp(ii A, ii B) {
    return pow(A.X, 2) + pow(A.Y, 2) > pow(B.X, 2) + pow(B.Y, 2);
}

int dist(ii A, ii B) {
    return pow(A.X - B.X, 2) + pow(A.Y - B.Y, 2);
}

void Back(int i, int nn, int total) {
    if (i >= lim) return;
    if (nn == n) {
        if (res < total) {
            res = total;
            for(int j = 0; j < n; j++)
                out[j] = point[j];
        }
        return;
    }
    Back(i + 1, nn, total);
    point[nn] = p[i];
    int now = 0;
    for(int j = 0; j < nn; j++)
        now += dist(p[i], point[j]);
    Back(i, nn + 1, total + now);
}

int main()
{
    scanf("%d %d", &n, &r);
    for(int i = -r; i <= r; i++) for(int j = -r; j <= r; j++)
        if (pow(i, 2) + pow(j, 2) <= r * r) p.push_back(ii(i, j));
    sort(p.begin(), p.end(), cmp);
    lim = min(27, (int)p.size());
    Back(0, 0, 0);
    cout << res << endl;
    for(int i = 0; i < n; i++)
        cout << out[i].X << " " << out[i].Y << endl;
    return 0;
}
