import sys
import Queue

class pythonin:
    _data = []
    _cur = 0
    def __init__(self):
        while True:
            try: sm = raw_input().split(" ") 
            except EOFError: break
            for x in sm :
                if x != "" and x != "\t" :
                    self._data.append(x)
                
    def eof(self) : 
        return self._cur == len(self._data)

    def nextToken(self) :
        self._cur += 1
        return self._data[self._cur - 1]
    
    def nextInt(self) :
        return (int)(self.nextToken())
    
    def nextFloat(self) :
        return (float)(self.nextToken())
    
#sys.stdin = open("input.txt", "r")
#sys.stdout = open("output.txt", "w")

pin = pythonin()

n = pin.nextInt()
r1 = pin.nextInt() - 1
r2 = pin.nextInt() - 1

p = [0 for i in xrange(0, n)]

for i in xrange(0, n) :
    if i == r1 : p[i] = -1
    else       : p[i] = pin.nextInt() - 1

G = [[] for i in xrange(0, n)]

for i in xrange(0, n) :
    if i != r1 :
        G[i].append(p[i])
        G[p[i]].append(i)
    
used = [False for i in xrange(0, n)]

p = [-1 for i in xrange(0, n)]

q = Queue.Queue()
q.put(r2)
used[r2] = True

while not q.empty() :
    u = q.get()
    q.task_done()
    for v in G[u] :
        if not used[v] :
            used[v] = True
            p[v] = u
            q.put(v)


for x in p :
    if x != -1:
        print x + 1,

#print ("Press any key to continue")
#raw_input() 
