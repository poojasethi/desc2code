

stdin_flag=1
if not stdin_flag:
  read_line_index=0
  testcasefilename="test.txt"
  Stestcase=open(testcasefilename).read()
  read_line_datas=Stestcase.split("\n")


#####################################
######################################

def read_line():
  global read_line_index
  if stdin_flag:
    return raw_input()
  else:
    s=read_line_datas[read_line_index]
    read_line_index+=1
    return s

def answer():
  if stdin_flag:
    return solve()
  else:
    while read_line_proceed():
      solve()
      

def read_line_proceed():
  global read_line_index
  print"##################"
  while 1:
    if read_line_index>= len (read_line_datas ):
      return False
    if read_line_datas[read_line_index]=="%%%":
      read_line_index+=1
      return True
    read_line_index+=1


def readint():
  return int (read_line() )


def readints():
  return map(int, read_line().split(" "))

def reads():
  return read_line()

###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################

def compute(n,r1,r2,mm):
  x=[]
  for index,s in enumerate(mm):
    i=index+1
    if i==r1:
      x.append(None)
    x.append(s)
  if r1==1+len(mm):
    x.append(None)
  #print x
  return compute2(r1,r2,x)
  pass

def compute2(r1,r2,x):
  y=list(x)
  t=r2
  while 1:
    if t==r1:
      break
    s=x[t-1]
    y[s-1]=t
    t=s
  y[r2-1]=None
  m=[]
  for i in y:
    if i:m.append(str(i))
  print" ".join(m)
  pass

def solve():
  n,r1,r2=readints()
  mm=readints()
  compute(n,r1,r2,mm)

def test():
  pass

test()
answer()
