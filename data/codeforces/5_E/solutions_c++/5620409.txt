#include <iostream>
#include <algorithm>

using namespace std;

typedef pair<int, int> pii;

const int MAXN = 1000010, INF = 1000000010;
int a[MAXN], s, e, n;
pii st[MAXN];
bool mark[MAXN];

int main()
{
	cin >> n;
	for (int i = 0; i < n; i++) cin >> a[i];
	rotate(a, max_element(a, a + n), a + n);
	long long ans = 0;
	st[e++] = pii(INF, 0);
	st[e++] = pii(a[0], 1);
	int mx = -1;
	for (int i = 1; i < n; i++)
	{
		while (st[e].first < a[i]) ans += st[e--].second;
		if (st[e].first == a[i]) ans += st[e].second++;
		else st[++e] = pii(a[i], 1);
		ans += min(st[e - 1].second, 1);
		mx = max(mx, a[i]);
		if (a[i] == mx) mark[i] = true;
	}
	mx = -1;
	for (int i = n - 1; i > 0; i--)
	{
		mx = max(mx, a[i]);
		ans += (mx == a[i] && !mark[i]);
	}
	cout << ans << endl;
	return 0;
}
