#include <iostream>
#include <algorithm>

using namespace std;

const int maxN = 1000*1000 + 10;

int n, a[maxN], r[maxN], l[maxN], cnt[maxN];
long long ans;

int main()
{
	ios::sync_with_stdio(0);
	cin >> n;
	for (int i = 0 ; i < n ; i++)
		cin >> a[i];
	rotate(a, max_element(a, a+n), a+n);
	a[n] = a[0];
	for (int i = n-1 ; i >= 0 ; i--)
	{
		r[i] = i+1;
		while (r[i] <= n-1 && a[i] > a[r[i]])
			r[i] = r[r[i]];
		if (r[i] < n && a[i] == a[r[i]])
		{
			cnt[i] = 1 + cnt[r[i]];
			r[i] = r[r[i]];
		}
	}
	for (int i = 0 ; i < n ; i++)
	{
		ans += cnt[i];
		if (a[i] != a[0])
		{
			ans += 2;
			l[i] = i-1;
			while (l[i] > 0 && a[i] >= a[l[i]])
				l[i] = l[l[i]];
			if (l[i] == 0 && r[i] == n)
				ans--;
		}
	}
	cout << ans << endl;
	return 0;
}
