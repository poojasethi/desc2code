#include <stdio.h>
#include <algorithm>

using namespace std;

#define MAXN 1000010
int arr[MAXN], r[MAXN], l[MAXN], c[MAXN];

int main(void) {
	int n;
	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		scanf("%d", &arr[i]);
	}

	rotate(arr, max_element(arr, arr + n), arr + n);
	arr[n] = arr[0];

	for (int i = n - 1; i > 0; i--) {
		r[i] = i + 1;
		while (r[i] < n && arr[i] > arr[r[i]]) r[i] = r[r[i]];
		if (r[i] < n && arr[i] == arr[r[i]]) {
			c[i] = c[r[i]] + 1;
			r[i] = r[r[i]];
		}
	}

	long long sol = 0;
	for (int i = 1; i < n; i++) {
		sol += c[i];
		l[i] = i - 1;
		while (l[i] > 0 && arr[i] > arr[l[i]]) l[i] = l[l[i]];
		if (l[i] > 0 && arr[i] == arr[l[i]]) {
			l[i] = l[l[i]];
		}
		if (l[i] == 0 && r[i] == n) sol += 1;
		else sol += 2;
	}

	printf("%I64d\n", sol);

	return 0;
}