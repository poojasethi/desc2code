#!/usr/bin/python

import os
import sys
import itertools
import collections
import copy

def solve(f):
    old = f.read_str()
    sub = f.read_str()

    if old in ["01", "10"]: return 0

    l = len(old)
    c = collections.Counter(old)

    if l < 12:
        k = l-1
    elif l < 103:
        k = l-2
    elif l < 1004:
        k = l-3
    elif l < 10005:
        k = l-4
    elif l < 100006:
        k = l-5
    else:
        k = l-6

    for i in str(k):
        c[i] -= 1
    for i in sub:
        c[i] -= 1
    c[sub] += 1

    first = min(filter(lambda x: x[0][0] != "0" and x[1] > 0, c.items()))[0]
    c[first] -= 1

    ans = first + "".join(sorted([k*v for k,v in c.items() if v > 0], cmp=lambda a,b: cmp(a+b,b+a)))

    if sub[0] != "0":
        c[first] += 1
        c[sub] -= 1
        ans2 = sub + "".join(sorted([k*v for k,v in c.items() if v > 0], cmp=lambda a,b: cmp(a+b,b+a)))
        ans = min(ans, ans2)

    return ans

class Reader(object):
    def __init__(self, filename=None):
        self.test_mode = filename is not None
        self.cases = 1
        self.buffer = []
        if self.test_mode:
            with open(filename) as f:
                blank_flg = False
                for line in f:
                    line = line.strip()
                    if line:
                        self.buffer.append(line)
                        blank_flg = False
                    else:
                        if not blank_flg: self.cases += 1
                        blank_flg = True

    def __readline(self):
        return self.buffer.pop(0) if self.test_mode else raw_input()

    def read_int(self):
        return int(self.__readline())
    def read_float(self):
        return float(self.__readline())
    def read_long(self):
        return long(self.__readline())
    def read_str(self):
        return self.__readline()

    def read_int_list(self):
        return [int(item) for item in self.__readline().split()]
    def read_float_list(self):
        return [float(item) for item in self.__readline().split()]
    def read_long_list(self):
        return [long(item) for item in self.__readline().split()]
    def read_str_list(self):
        return self.__readline().split()

if __name__ == '__main__':
    filename = sys.argv[1] if len(sys.argv)>1 else None
    f = Reader(filename)
    if f.test_mode:
        for c in xrange(f.cases):
            print "Case #%d"%(c+1)
            print solve(f)
    else:
        print solve(f)
