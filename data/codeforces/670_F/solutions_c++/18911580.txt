#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cctype>
#include<ctime>
#include<cstdlib>
#include<string>
#include<queue>
#include<cmath>
#include<set>
#include<map>
#include<bitset>
#include<vector>
#define Rep(x,a,b) for (int x=a;x<=(int)b;x++)
#define Drp(x,a,b) for (int x=a;x>=(int)b;x--)
#define Cross(x,a) for (int x=Hd[a];~x;x=Nx[x])
#define ll long long
#define INF (1<<29)
#define PII pair<int,int>
#define PDD pair<double,double>
#define mk(a,b) make_pair(a,b)
#define fr first
#define sc second
using namespace std;
inline ll Rd(){
	ll x=0;int ch=getchar(),f=1;
	while (!isdigit(ch)&&(ch!='-')&&(ch!=EOF)) ch=getchar();
	if (ch=='-'){f=-1;ch=getchar();}
	while (isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}
	return x*f;
}
inline void Rt(ll x){
	if (x<0) putchar('-'),x=-x;
	if (x>=10) Rt(x/10),putchar(x%10+'0');
		else putchar(x+'0');
}
const int N=1001000;
char n[N],sub[N];
int Getdigit(int n){
	int Ret=0;
	while (n) n/=10,Ret++;
	return Ret;
}
int Ex[10];
string Ans1,Ans2,Ans3;
int main(){
	scanf("%s%s",n+1,sub+1);
	int dig=strlen(n+1),Yd;
	Drp(i,dig-1,1) if (i+Getdigit(i)==dig){
		Yd=i;break;
	}
	Rep(i,1,dig) Ex[n[i]-'0']++;
	int Mns=Yd;
	while (Mns) Ex[Mns%10]--,Mns/=10;
	int Ds=strlen(sub+1);
	Rep(i,1,Ds) Ex[sub[i]-'0']--;
	int Fir=0;
	Rep(i,1,9) if (Ex[i]){Fir=i;break;}
	if (!Fir){
		printf("%s",sub+1);
		Rep(i,0,9) while (Ex[i]--) Rt(i);
		return 0; 
	}
	Ex[Fir]--;
	Ans1+=Fir+'0';
	Rep(i,0,sub[1]-'0'-1) Rep(j,1,Ex[i]) Ans1+=i+'0';
	Ans1+=string(sub+1);
	Rep(i,sub[1]-'0',9) Rep(j,1,Ex[i]) Ans1+=i+'0';
	
	Ans2+=Fir+'0';
	Rep(i,0,sub[1]-'0') Rep(j,1,Ex[i]) Ans2+=i+'0';
	Ans2+=string(sub+1);
	Rep(i,sub[1]-'0'+1,9) Rep(j,1,Ex[i]) Ans2+=i+'0';
	Ex[Fir]++;
	if (Ans2<Ans1) Ans1=Ans2;
	
	if (sub[1]!='0'){
		Ans2.clear();
		Ans2+=string(sub+1);
		Rep(i,0,9) Rep(j,1,Ex[i]) Ans2+=i+'0';
		if (Ans2<Ans1) Ans1=Ans2;
	}
	printf("%s",Ans1.c_str());
}
