#include<bits/stdc++.h>
using namespace std;

int a[11];
bool kt = false;
string parent, child, trc, sau;

int main()
{
	cin >> parent >> child;
	int n = parent.size(), k;
	int tmp = 1;
	for(int i=1;i<=7;i++)
	{
		tmp *= 10;
		if(n - i <= tmp - 1)
		{
			k = n - i;
			break;
		}
	}
	for(int i=0;i<parent.size();i++) a[parent[i] - 48]++;
	int res = 0;
	for(int i=0;i<child.size();i++)
	{
		a[child[i] - 48]--;
		if(i > 0 && (child[i] - 48) != 0) kt = true;
		if((child[i] - 48) == 0 && kt == false) ++res; 
	}
	int dd = k;
	while(dd ^ 0)
	{
		a[dd % 10]--;
		dd /= 10;		
	}
	for(char c = '0';c <= '9';c++)
	{
		if((child + c) >= (c + child))
		{
			for(int j=1;j<=a[c - 48];j++)
				trc += c;
		}
		else
		{
			for(int j=1;j<=a[c - 48];j++)
				sau += c;
		} 
	}
	string ans = trc + child + sau;
	int top = trc.size(), bot = child.size() + trc.size();
	if(ans[0] == '0' && ans.size() > 1)
	{
		for(int i=0;i<k;i++)
		{
			if(res != child.size() - 1 && child[0] == ans[bot] && i == top)
			{
				if(trc.size() >= res)
				{
					cout << ans[bot] << trc << child;
					for(int j=bot+1;j<k;j++) cout << ans[j];
					return 0;
				}
			}
			else if(ans[i] != '0' && i < top)
			{
				cout << ans[i];
				for(int j=0;j<trc.size();j++)
					if(j != i)
						cout << trc[j];
				cout << child << sau;
				return 0;
			}
			else
			{
				if(ans[i] != 0 && i >= top && i < bot && child[0] != '0')
				{
						cout << child << trc << sau;
						return 0;
				}
				else if(ans[i] != '0' && i >= bot)
				{
					cout << ans[i];
					cout << trc << child;
					for(int j=0;j<sau.size();j++)
						if(i != j + bot)
							cout << sau[j];
					return 0;
				}
			}
		}
	}
	else
	cout << ans;
}