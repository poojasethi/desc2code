#include <bits/stdc++.h>

using namespace std;

#define FOR(i,a,b) for(int i = a; i < b; i++)
#define FORR(i,b) FOR(i, 0, b)
#define sz(e) (int)e.size()
#define CLR(x,v) memset (x, v, sizeof x)
#define pb push_back
#define all(e) e.begin(), e.end()

typedef long long ll;
typedef pair<int, int> ii;

const int MAXN = 200005;
const int INF = 1000000000;

int hash[50];

int main () {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	
	string s, t;
	cin>>s>>t;
	string k;
	FOR (i, 1, 10) {
		int aux = sz(s)-i;
		stringstream ss; ss<<aux;
		ss>>k;
		if (sz(k)==i) break;
	}
	CLR (hash, 0);
	FORR (i, sz(s)) hash[s[i]-'0']++;
	FORR (i, sz(k)) hash[k[i]-'0']--;
	FORR (i, sz(t)) hash[t[i]-'0']--;
	int tipo = 0;
	FOR (i, 1, sz(t)) {
		if (t[i]>t[i-1]) {
			tipo = 1;
			break;
		} else if (t[i]<t[i-1]) {
			break;
		}
	}
	string res1, res2;
	bool gamb = true;
	if (hash[0]!=0) {
		gamb = false;
		if (t[0]!='0') {
			res2 += t;
			FORR (i, 10) {
				FORR (j, hash[i]) {
					res2 += '0'+i;
				}
			}
		}
		FOR (i, 1, 10) {
			if (hash[i]!=0) {
				res1 += '0'+i;
				hash[i]--; gamb = true;
				break;
			}
		}
	}
	bool used = false;
	FORR (i, 10) {
		while (hash[i]!=0) {
			if (used) {
				res1 += i+'0';
				hash[i]--;
			} else {
				if (i<t[0]-'0' || (t[0]=='0'&&res1.empty())) {
					res1 += i+'0';
					hash[i]--;
				} else if (i>t[0]-'0') {
					res1 += t;
					used = true;
				} else {
					if (tipo==0) {
						res1 += t;
						used = true;
					} else {
						res1 += i+'0';
						hash[i]--;
					}
				} 
			}
		}
	} if (!used) res1 += t;
	if (!gamb) res1 = res2;
	if (res2.compare("") != 0) if (res2.compare(res1)<0) res1 = res2;
	cout << res1 << endl;
	
	
	
}