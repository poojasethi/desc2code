#include <bits/stdc++.h>
using namespace std;

char s[1000004];

int main ()
{
  int h[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, c, i, t = 0, j;
  while ((c = getchar ()) >= '0' && c <= '9') {
    h[c - '0']++;
    t++;
  }
  for (i = t - 1; i > pow (10, t - i) - 0.5; i--) {}
  //printf ("%d digits, removing %d\n", i, i);
  for (; i; i /= 10) h[i % 10]--;
  fgets (s, 1000000, stdin);
  //for (i = 0; i < 10; i++) printf ("%d ", h[i]);
  //printf ("\n.%s.\n", s);
  for (i = 1; isdigit(s[i]); i++) h[s[i] - '0']--;
  
  for (i = 1; !h[i]; i = (i + 1) % 10) {}
  for (j = 1; s[j] == s[j-1]; j++) {}
  int when = s[j] < s[0] ? h[s[0] - '0'] : 1;
  if (i == s[0] - '0') {
    int z = strspn (s + 1, "0"), o = 1;
    while (s[o] - '0' == i) o++;
    //if (!isdigit (s[z + 1])) fprintf (stderr, "Yes\n");
    if (!isdigit (s[z + 1])) when = h[i];
    else {
      if (s[o] < s[0]) when = h[i] > 1 && h[0] && z <= h[0] ? h[i] - 1 : h[i];
      else when = 1;
    }
  }
  while (i < 10) {
    putchar (i + '0');
    if (h[i]-- == when && i == s[0] - '0') {
      //putchar ('*');
      for (j = 1; isdigit (s[j]); j++) putchar (s[j]);
      //putchar ('*');
      s[0] = 'x';
    }
    while (!h[i]) i++;
    if (h[0]) i = 0;
    if (i > 9) break;
  }
  putchar ('\n');
  return 0;
}