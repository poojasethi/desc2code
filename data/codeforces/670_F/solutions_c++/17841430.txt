#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int N = 1100005;
const int M = 1000000007;

int n, len;
char s[N], b[N];
int cnt[15];

int main() {
  while (~scanf("%s%s", s, b)) {
    memset(cnt, 0, sizeof(cnt));
    len = strlen(s);
    if (len == 2) { puts(b); continue; }
    if (len <= 10) { n = len - 1; }
    else if (len <= 101) { n = len - 2; }
    else if (len <= 1002) { n = len - 3; }
    else if (len <= 10003) { n = len - 4; }
    else if (len <= 100004) { n = len - 5; }
    else { n = len - 6; }
    for (int i = 0; i < len; i++) { cnt[s[i] - '0']++; }
    for (int t = n; t; t /= 10) { cnt[t % 10]--; }
    for (int i = 0; b[i]; i++) { cnt[b[i] - '0']--; }
    string ans, t1, t2;
    if (b[0] != '0') {
      ans = b;
      for (int i = 0; i <= 9; i++) { ans.append(cnt[i], i + '0'); }
    }
    for (int i = 1; i <= 9; i++) {
      if (cnt[i]) { t1 += i + '0'; t2 += i + '0'; cnt[i]--; break; }
    }
    if (ans.empty() || !t1.empty()) {
      for (int i = 0; i <= 9; i++) {
        if (i == b[0] - '0') { t1 += b; }
        t1.append(cnt[i], i + '0');
      }
      ans = ans.empty() ? t1 : min(ans, t1);
    }
    if (ans.empty() || !t2.empty()) {
      for (int i = 0; i <= 9; i++) {
        t2.append(cnt[i], i + '0');
        if (i == b[0] - '0') { t2 += b; }
      }
      ans = ans.empty() ? t2 : min(ans, t2);
    }
    puts(ans.c_str());
  }
}
