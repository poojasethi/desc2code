#include<bits/stdc++.h>
#define L 11
using namespace std;
string s , ans , t , curr;
int n , c[L + 5] , rem , _c[L + 5] , id;
vector < string > all;
int cal(int x){
    int ret = 0;
    while(x > 0){
        ret++; x /= 10;
    }
    return ret;
}
bool leading_zero(string x){
    return (x[0] == '0');
}
void solve(int l){
    if(rem - l < 0) return;
    if(cal(rem - l) != l) return;
    for(int i = 0 ; i < 10 ; i++)   _c[i] = c[i];
    int x = rem - l;
    while(x > 0){
        _c[x % 10]--; if(_c[x % 10] < 0)    return ;
        x /= 10;
    }
    for(int start = 0 ; start < 10 ; start++){
        if(start == 0 && leading_zero(t))    continue;
        if(start > 0  && _c[start] == 0)     continue;
        curr = "";
        if(start == 0)  curr += t;
        else curr += (char) (start + '0');
        if(start > 0) _c[start]--;
        for(int i = 0 ; i < all.size() ; i++){
            if(i == id){
                if(start != 0)  curr += t;
            }
            else for(int j = 1 ; j <= _c[all[i][0] - '0'] ; j++) curr += all[i];
        }
        if(start > 0)_c[start]++;
        if(ans == "" || curr.size() < ans.size() || (curr.size() == ans.size() && curr < ans)) ans = curr;
    }
}
void input(){
    cin>>s;
    for(int i = 0 ; i < s.size() ; i++) c[s[i] - '0']++;
    cin>>t;
    if(t == "0" && (s == "01" || s == "10")) ans = "0";
    for(int i = 0 ; i < t.size() ; i++) c[t[i] - '0']--;
    rem = s.size();
}
void prepare(){
    bool ok = false;
    for(int i = 0 ; i < 10 ; i++){
        string tmp = "";
        tmp += (char) (i + '0');
        if(t + tmp < tmp + t && !ok)   { id = all.size() ; all.push_back(t); ok = true; }
        all.push_back(tmp);
    }
    if(all.size() == 10) { id = all.size() ; all.push_back(t); }
}
void process(){
    for(int i = 1 ; i <= 6 ; i++)   solve(i);
    cout<<ans;
}
main(){
   // freopen("test.inp","r",stdin);
    ios::sync_with_stdio(false);
    input();
    prepare();
    process();
}
