//in the name of God

#include <iostream>
#include <string>
using namespace std;

string s, res, t, num[11];
int d[11], ll, rr;

int main()
{
	ios_base::sync_with_stdio(0);
	cin >> s >> t;
	int n = s.size();

	if(s == "01")
	{
		cout << "0" << endl;
		return 0;
	}

	for(int i=0; i<n; i++)
		d[s[i]-'0']++;
	for(int i=0; i<t.size(); i++)
		d[t[i]-'0']--;

	int l = 1, p = 1;
	while(1)
	{
		if(p <= n-l && n-l < p*10)
			break;
		l++;
		p*=10;
	}

	if(n-l == t.size())
	{
		cout << t << endl;
		return 0;
	}

	int foo = n-l;
	while(foo)
	{
		d[foo%10]--;
		foo /= 10;
	}
	// string L = to_string(n-l);
	// for(int i=0; i<L.size(); i++)

	// 	d[L[i]-'0']--;

	int x = 0;
	while(x<t.size() && t[x] == t[0])
		x++;


	for(char i='0'; i<='9'; i++)
		for(int j=0; j<d[i-'0']; j++)
			num[i-'0'].push_back(i);

	if(x >= t.size())
	{
		for(int i=0; i<t[0]-'0'; i++)
			res += num[i];
		ll = res.size();
		res += t;
		rr = res.size();
		for(int i=t[0]-'0'; i<10; i++)
			res += num[i];
	}
	else if(t[x] <= t[0])
	{
		for(int i=0; i<t[0]-'0'; i++)
			res += num[i];
		ll = res.size();
		res += t;
		rr = res.size();
		for(int i=t[0]-'0'; i<10; i++)
			res += num[i];
	}
	else
	{
		for(int i=0; i<=t[0]-'0'; i++)
			res += num[i];
		ll = res.size();
		res += t;
		rr = res.size();
		for(int i=t[0]-'0'+1; i<10; i++)
			res += num[i];
	}

	rr--;

	if(res[0] == '0')
	{
		int D=1;
		while(d[D]==0)
			D++;
		string res1(1, char('0'+D));
		bool flag = 0;
		for(int i=0; i<res.size(); i++)
		{
			if((ll <= i && i <= rr) || (res[i] != '0'+D) || flag)
				res1.push_back(res[i]);

			if((ll > i || i > rr) && res[i] == '0'+D)
				flag = 1;
		}

		if(t[0] != '0')
		{
			string res2 = t;
			for(int i=0; i<10; i++)
				res2 += num[i];
			res = min(res1, res2);
		}
		else
			res = res1;
	}

	cout << res << endl;

	return 0;
}