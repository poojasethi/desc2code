#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>
#include <vector>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <string>
#include <iostream>
#include <algorithm>
using namespace std;

#define getmid(l,r) ((l) + ((r) - (l)) / 2)
#define MEM(a,b) memset(a,b,sizeof(a))
#define MP(a,b) make_pair(a,b)
#define PB push_back

typedef long long ll;
typedef pair<int,int> pii;
const double eps = 1e-8;
const int INF = (1 << 30) - 1;
const int MAXN = 1000010;

char s[MAXN],t[MAXN];
int cnt[10],L,flag,f,val,len,len2;

void Go(){
	for(int i = 0; i < 10; ++i){
		char cc = i + '0';
		if(i == val && !flag){
			if(f <= 0) printf("%s",t + 1);
			for(int j = 0; j < cnt[i] - 1; ++j) printf("%c",cc);
			if(f == 1) printf("%s",t + 1);
		}
		else for(int j = 0; j < cnt[i]; ++j) printf("%c",cc);
	}
	puts("");
}

int main(){
	scanf("%s",s + 1);
	scanf("%s",t + 1);
	len = strlen(s + 1);
	for(int i = 1; i <= len; ++i){
		int v = s[i] - '0';
		cnt[v]++;
	}
	int cur = 1;
	for(L = 1; L < len; ++L){
		cur *= 10;
		if(len - L < cur) break;
	}
	L = len - L;
	int tL = L;
	while(tL){
		cnt[tL % 10]--;
		tL /= 10;
	}
	len2 = strlen(t + 1);
	val = t[1] - '0';
	f = -1;
	for(int i = 1; i <= len2; ++i){
		int v = t[i] - '0';
		if(f == -1){
			if(v > val) f = 1;
			else if(v < val) f = 0;
		}
		cnt[v]--;
	}
	int zero = 0;
	for(int i = 2; i <= len2; ++i){
		if(t[i] - '0' == 0) zero++;
		else break;
	}
	cnt[val]++;
	flag = 0;
	int first = -1,second = -1;
	for(int i = 0; i < 10; ++i) if(cnt[i]){
		if(first == -1) first = i;
		else if(second == -1) second = i;
	}
	if(second == -1){
		Go();
		return 0;
	}
	if(first == 0){
		// put a second
		if(second == val && cnt[val] == 1){
			if(cnt[val] == 1){
				printf("%s",t + 1);
				flag = 1;
				cnt[val] = 0;
				Go();
			}
		}
		else if(second == val && cnt[val] > 1){
			if(zero > cnt[0]){
				printf("%s",t + 1);
				flag = 1;
				cnt[val]--;
				Go();
			}
			else{
				printf("%c",second + '0');
				cnt[second]--;
				Go();
			}
		}
		else{
			printf("%c",second + '0');
			cnt[second]--;
			Go();
		}
	}
	else Go();
	return 0;
}