#include <cstdio>
#include <iostream>
#include <cstring>
#define FOR(x, a, b) for(int x = a; x <= b; ++x)
#define REP(x, a, b) for(int x = a; x < b; ++x)
using namespace std;
string s, lock;

int main()
{
    /*freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);*/
    cin >> s;
    cin.get();
    cin >> lock;
    int lens = s.length(), lenans;
    if (lens == 2) {cout << lock; return 0;}
    if (lens <= 10) lenans = lens - 1; else
        if (lens <= 101) lenans = lens - 2; else
           if (lens <= 1002) lenans = lens - 3; else
             if (lens <= 10003) lenans = lens - 4; else
               if (lens <= 100004) lenans = lens - 5; else lenans = lens - 6;
    int digit = lens - lenans;
    int needadd = lens - digit;
    int tanso[11], temp[11];
    memset(tanso, 0, sizeof tanso);
    REP(i, 0, lens) tanso[s[i] - 48]++;

    REP(i, 0, lock.length()) tanso[lock[i] - 48]--;
    string ans, t1, t2;
    while (needadd)
    {
        tanso[needadd % 10]--;
        needadd /= 10;
    }
    FOR(i, 0, 9) temp[i] = tanso[i];
    if (lock[0] != '0')
    {
        ans = lock;
        FOR(i, 0, 9) while (temp[i] > 0) ans += (char) (i + 48), temp[i]--;
    }
    FOR(i, 0, 9) temp[i] = tanso[i];
    FOR(i, 1, 9) if (temp[i] != 0)
    {
        t1 += (char)(i + 48);
        t2 += (char)(i + 48);
        temp[i]--;
        break;
    }
    bool ok = 0;
    FOR(i, 0, 9) tanso[i] = temp[i];
    if (!t1.empty())
    {
        FOR(i, 0, 9)
        {
            if (i == lock[0] - 48) t1 += lock;
            while (temp[i] > 0)
            {
                temp[i]--;
                t1 += (char)(i + 48);
            }
        }
        if (!ans.empty()) ans = min(ans, t1); else ans = t1;
    }
    if (!t2.empty())
    {
        FOR(i, 0, 9)
        {
            while (tanso[i] > 0)
            {
                tanso[i]--;
                t2 += (char)(i + 48);
            }
            if (i == lock[0] - 48) t2 += lock;

        }
        if (!ans.empty()) ans = min(ans, t2); else ans = t2;
    }
    cout << ans;





}
