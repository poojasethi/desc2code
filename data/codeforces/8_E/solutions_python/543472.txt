from itertools import *

def foo(i, rev, inv):
    j = n - 1 - i
    if i > j: return 1
    if (i, rev, inv) in cache: return cache[i, rev, inv]
    ret = 0
    for a, b in product((0, 1), repeat = 2):
        if (i < j or a == b) and s[i] in (None, a) and s[j] in (None, b) and (a <= b or rev) and (a <= (b ^ 1) or inv):
            ret += foo(i + 1, rev or a < b, inv or a < (b ^ 1))
    cache[i, rev, inv] = ret
    return ret

n, k = map(int, raw_input().split())
k += 1
s = [None] * n
for i in xrange(n):
    cache = {}
    s[i] = 0
    t = foo(0, False, False)
    if k > t:
        k -= t
        s[i] = 1
print ''.join(map(str, s)) if s[0] == 0 else -1
