//start 2013.11.16 15:34
//end 2013.11.16 15:50 by Du Xiancheng
#include <stdio.h>
#include <cstring>
#include <iostream>
typedef long long ll;

using namespace std;

ll i,N,M,Opt[1001][2][2],Num[1001];

ll Dp(ll Con,ll X,ll Y){
   ll &Ans=Opt[Con][X][Y];
   if (2*Con>=N) return 1;
   if (Ans!=-1) return Ans;
   Ans=0;
   for (int i=0;i<=1;i++)
	 if (Num[Con]==-1 || Num[Con]==i)
	   for (int j=0;j<=1;j++)
		 if ((Con*2+1!=N || i==j) && (Num[N-Con-1]==j || Num[N-Con-1]==-1) && (X || (i<=j)) && (Y || (i+j<2)))
			Ans+=Dp(Con+1,(X || (i<j)),(Y || (i+j==0)));
   return Ans;
}

int main(){
	cin>>N>>M;
	memset(Opt,-1,sizeof(Opt));
	memset(Num,-1,sizeof(Num));
	if (Dp(0,0,0)<=M){
		printf("-1\n");
		return 0;
	}
	for (i=0;i<N;i++){
		memset(Opt,-1,sizeof(Opt));
		Num[i]=0;
		long long k=Dp(0,0,0);
		if(k<=M)
		{
			Num[i]=1;
			M-=k;
		}
	}
	for (int i=0;i<N;i++) cout<<Num[i];
	cout<<endl;
	return 0;
}
