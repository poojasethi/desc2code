#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<cstdlib>
using namespace std;

const int maxn=52;
typedef long long LL;
int n;
int s[maxn];
LL f[maxn][2][2];
LL k;
LL DFS(int pos,int rev,int inv){
	if(f[pos][rev][inv]!=-1)return f[pos][rev][inv];
	if(pos*2>=n)return f[pos][rev][inv]=1;
	LL tmp=0;
	for(int i=0;i<2;++i){
		if(s[pos]<0||s[pos]==i){
			for(int j=0;j<2;++j){
				if(s[n-pos-1]<0||s[n-pos-1]==j){
					if((i==j||pos*2+1!=n)&&(rev||i<=j)&&(inv||!i||!j)){
						tmp+=DFS(pos+1,rev||i<j,inv||(!i&&!j));
					}
				}
			}
		}
	}return f[pos][rev][inv]=tmp;
}
int main(){
	scanf("%d",&n);
	scanf("%I64d",&k);k++;
	memset(f,-1,sizeof(f));
	memset(s,-1,sizeof(s));
	if(DFS(0,0,0)<k){printf("-1\n");return 0;}
	for(int i=0;i<n;++i){
		s[i]=0;
		memset(f,-1,sizeof(f));
		if(DFS(0,0,0)<k)s[i]=1,k-=DFS(0,0,0);
		printf("%d",s[i]);
	}return 0;
}
