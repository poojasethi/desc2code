# include <iostream>
# include <vector>
# define LL long long
using namespace std;
const int MAX_N=1000*1000+100;
vector<int> adj[MAX_N];
int Comp[MAX_N];
int N,M,K;
bool mrk[MAX_N];
int Tempcomp;
void DFS(int x)
{
	mrk[x]=true;
	Tempcomp++;
	for(int i=0;i<(int)adj[x].size();i++)
			if(!mrk[adj[x][i]])
					DFS(adj[x][i]);
}
int main()
{
	ios::sync_with_stdio(false);
	cin >> N >> M >> K;
	for(int i=0;i<M;i++)
	{
		int u,v;
		cin >> u >> v;
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
	int SZ=0;
	LL Sum=0;
	for(int i=1;i<=N;i++)
		if(!mrk[i])
		{
			Tempcomp=0;
			DFS(i);
			Tempcomp=min(Tempcomp,K);
			Comp[SZ++]=Tempcomp;
			Sum+=Tempcomp;
		}
	if(K==1)
	{
		cout<<max(0,SZ-2)<<endl;
	}
	else if(Sum>=2*(SZ-1))
			cout<<0<<endl;
	else
			cout<<(2*(SZ-1)-Sum+1)/2<<endl;
	return 0;
}
