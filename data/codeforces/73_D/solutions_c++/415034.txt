#include <cstdio>
#include <vector>
#include <cstring>
#define MAXN 1000010
using namespace std;
int n, m, k;
vector<int> g[MAXN];
int vis[MAXN];
int dfs(int u) {
	vis[u] = 1;
	int ret = 1;
	for(vector<int>::iterator it = g[u].begin(); it != g[u].end(); ++it) {
		if(!vis[*it]) {
			ret += dfs(*it);
		}
	}
	return ret;
}
int main() {
	while(scanf("%d%d%d", &n, &m, &k) != EOF) {
		for(int i = 0; i < n; ++i)
			g[i].clear();
		for(int i = 0; i < m; ++i) {
			int u, v;
			scanf("%d%d", &u, &v);
			--u, --v;
			g[u].push_back(v);
			g[v].push_back(u);
		}
		memset(vis, 0, sizeof(int) * n);
		int sum = 0, cnt = 0;
		for(int i = 0; i < n; ++i) {
			if(!vis[i]) {
				sum += min(dfs(i), k);
				++cnt;
			}
		}
		if(k == 1) {
			printf("%d\n", cnt == 1 ? 0 : cnt - 2);
		}
		else if(n - cnt + sum / 2 > n - 1)
			printf("0\n");
		else
			printf("%d\n", cnt - sum / 2 - 1);
	}
	return 0;
}
