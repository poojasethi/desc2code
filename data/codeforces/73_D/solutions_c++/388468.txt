#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

const int MAX_N = 1000005;

bool vis[MAX_N];
vector < int > adj[MAX_N];

int dfs(int u) {
	int ans = 1;
	vis[u] = true;
	for (int i = 0; i < (int) adj[u].size(); i++) {
		int v = adj[u][i];
		if (!vis[v])
			ans += dfs(v);
	}
	return ans;
}

int main() {
	int n, m, k; scanf("%d %d %d", &n, &m, &k);
	for (int i = 0; i < m; i++) {
		int u, v; scanf("%d %d", &u, &v);
		u--, v--;
		adj[u].push_back(v);
		adj[v].push_back(u);
	}

	int ncomp = 0, ones = 0, sum = 0;
	for (int i = 0; i < n; i++) if (!vis[i]) {
		ncomp++;
		int sz = dfs(i);
		if (sz == 1)
			ones++;
		else
			sum += min(sz, k);
	}

	int ans = 0;
	if (ncomp > 2) {
		if (k == 1)
			ans = ncomp - 2;
		else if (ones > (sum - 2*(ncomp - ones - 1)))
			ans = ((ones - (sum - 2*(ncomp - ones - 1))) + 1)/2;
	}

	printf("%d\n", ans);

	return 0;
}
