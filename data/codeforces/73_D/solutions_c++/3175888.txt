#include<iostream>
#include<vector>
#include<cstring>
//#include<algorithm>
#define ll long long
using namespace std;

int sgu(int abc){
    if(abc>0) return abc;
	return 0;
} 
int max(int a,int b)
{
	if(a>b) return a;
	else return b;
}
int min(int a,int b)
{
	if(a<b) return a;
	else return b;
}
vector<int>g[1000001];
bool u[1000001];
int  n,m,k,p,num;

void dfs(int z){
	u[z]=true;
	for(int i=0;i<g[z].size();i++)
	   if(!u[g[z][i]]) {dfs(g[z][i]);num++;}
}

int main()
{
	int shitd;
	memset(u,false,sizeof(u));
	int x,y,maxx=0;
	cin>>n>>m>>k;
	for(int i=1;i<=m;i++)
	{
		cin>>x>>y;
		g[x].push_back(y);
		g[y].push_back(x);
	}
	for(int i=1;i<=n;i++)
	   if(!u[i])
	   {
	   	  num=1;
	      p++;
	      dfs(i);
		  maxx+=min(k,num);
	   }
	if(k==1) cout<<sgu(p-k-1);
	else cout<<sgu(p-maxx/2-1);
	return 0;
}
