//In the name of God

#include <iostream>
#include <vector>
using namespace std;
const int MAXN=1e6+10;
vector <int> g[MAXN];
int c[MAXN];
bool mark[MAXN];

void dfs(int v,int ind)
{
  c[ind]++;
  mark[v]=true;
  for(int i=0;i<g[v].size();i++)
    {
      int u=g[v][i];
      if(mark[u]==false)
	dfs(u,ind);
    }
}

int main()
{
  ios::sync_with_stdio(false);
  int n,k,m;
  cin>>n>>m>>k;
  for(int i=1;i<=m;i++)
    {
      int v,u;
      cin>>v>>u;
      g[v].push_back(u);
      g[u].push_back(v);
    }
  int ans=0,ind=1,e=0;
  for(int i=1;i<=n;i++)
    if(!mark[i])
      dfs(i,ind++);
  ind--;
  for(int i=1;i<=ind;i++)
    c[i]=min(c[i],k),e+=c[i];
  e/=2;
  if(ind==1)
    cout<<0<<endl;
  else if(k==1)
    cout<<max(0,ind-2)<<endl;
  else
    cout<<max(0,ind-e-1)<<endl;
  return 0;
}
