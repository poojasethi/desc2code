#include <iostream>
#include <cstdio>
#include <string>
#include <string.h>
#include <algorithm>
#include <vector>
#include <map>
using namespace std;

#define fi first
#define se second
vector<pair<int,int> > shoe;
vector<pair<int,int> > ans;
vector<pair<int,int> > goes;
int match[120000];
map<int,int> ma;
vector<int> e[120000];
long long ans1,ans2;
int n,m;

bool find(int k){
	for (int i=0;i<e[k].size();++i){
		if (match[e[k][i]]==k) continue;
		if (match[e[k][i]]==-1 || find(match[e[k][i]])){ 
			match[e[k][i]]=k;
			return true;
		}
	}
	return false;
}

int main(){
	while (scanf("%d",&n)==1){
		int p1,p2;
		shoe.clear();
		ma.clear();
		for (int i=1;i<=n;++i){ 
			e[i].clear();
			scanf("%d%d",&p1,&p2);
			shoe.push_back(make_pair(p1,p2));
			ma[p2]=i-1;
		}

		scanf("%d",&m);
		for (int i=1;i<=m;++i){ 
			scanf("%d%d",&p1,&p2);
			if (ma.find(p2)!=ma.end()){ 
				int p3=ma[p2];
				if (shoe[p3].fi<=p1) e[p3+1].push_back(i);
			}
			p2++;
			if (ma.find(p2)!=ma.end()){ 
				int p3=ma[p2];
				if (shoe[p3].fi<=p1) e[p3+1].push_back(i);
			}
		}
		
		goes.clear();
		for (int i=1;i<=n;++i)
			goes.push_back(make_pair(shoe[i-1].fi,i));
		

		ans.clear();
		ans1=ans2=0;
		
		sort(goes.begin(),goes.end());

		memset(match,-1,sizeof(match));
		for (int i=n;i>=1;--i)
			if (find(goes[i-1].se)){
				ans1+=goes[i-1].fi;
				ans2++;
			}
		
		cout << ans1 << endl;
		cout << ans2 << endl;
		for (int i=1;i<=m;++i)
			if (match[i]!=-1)
				printf("%d %d\n",i,match[i]);
		
	}
	return 0;
}

