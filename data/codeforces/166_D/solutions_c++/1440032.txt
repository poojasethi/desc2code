#include<iostream>
#include<cstdio>
#include<string.h>
#include<string>
#include<math.h>
#include<algorithm>
#include<vector>
#include<map>
using namespace std;
#define maxn 100009
struct node{
    int d,s;
    int id;
};
node a1[maxn],b[maxn];
map<int,int> Map;
vector<int> a[maxn];
int match[maxn];
int n,m;
bool cmp1(node x,node y){
    return x.d>y.d;
}
bool find(int x){
    for(int i=0;i<a[x].size();i++){
        if(match[a[x][i]]==x) continue;
        if(match[a[x][i]]==0||find(match[a[x][i]])){
            match[a[x][i]]=x;
            return true;
        }
    }
    return false;
}
int main(){
        
    int d,s;
    scanf("%d",&n);
    memset(match,0,sizeof(match));
    for(int i=1;i<=n;i++){
        //cin >> a[i].d >> a[i].s;
        scanf("%d%d",&d,&s);        
    a1[i].id=i,a1[i].d=d,a1[i].s=s;
        Map[s]=i;
    }
    cin >> m;
    for(int i=1;i<=m;i++){
       //cin >> b[i].d >> b[i].s;
    scanf("%d%d",&d,&s);        
    /*if(Map.find(b[i].s)!=Map.end()){
            if(a[Map[b[i].s]].d<=b[i].d) e[Map[b[i].s]].push_back(i);
        }
        if(Map.find(b[i].s+1)!=Map.end()){
            if(a[Map[b[i].s+1]].d<=b[i].d) e[Map[b[i].s+1]].push_back(i);
        }*/
    if(Map.find(s)!=Map.end()){
        if(a1[Map[s]].d<=d) a[Map[s]].push_back(i);
        }
    if(Map.find(s+1)!=Map.end()){
        if(a1[Map[s+1]].d<=d) a[Map[s+1]].push_back(i); 
    }   
    
    }
    sort(a1+1,a1+1+n,cmp1);
    long long ans1=0,ans2=0;
    for(int i=1;i<=n;i++){  
        if(find(a1[i].id)){
            ans1++;
            ans2+=a1[i].d;
        }
    }
    cout << ans2 << endl;
    cout << ans1 << endl;
    for(int i=1;i<=m;i++){
        if(match[i]!=0) cout << i << " " << match[i] << endl;
    }
    return 0;
}