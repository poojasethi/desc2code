#include<iostream>
#include<cstdio>
#include<string.h>
#include<string>
#include<math.h>
#include<algorithm>
#include<vector>
#include<map>
using namespace std;
#define maxn 100009
struct node{
    int d,s;
    int id;
};
node a[maxn],b[maxn];
map<int,int> Map;
vector<int> e[maxn],vec;
int match[maxn];
int vis[maxn];
int n,m;
bool cmp(node x,node y){
    return x.d>y.d;
}
bool find(int x){
    for(int i=0;i<e[x].size();i++){
        if(match[e[x][i]]==x) continue;
        if(match[e[x][i]]==-1||find(match[e[x][i]])){
            match[e[x][i]]=x;
            return true;
        }
    }
    return false;
}
int main(){
    cin >> n;
    memset(match,-1,sizeof(match));
    for(int i=1;i<=n;i++){
        cin >> a[i].d >> a[i].s;
        a[i].id=i;
        Map[a[i].s]=i;
    }
    cin >> m;
    for(int i=1;i<=m;i++){
        cin >> b[i].d >> b[i].s;
        if(Map.find(b[i].s)!=Map.end()){
            if(a[Map[b[i].s]].d<=b[i].d) e[Map[b[i].s]].push_back(i);
        }
        if(Map.find(b[i].s+1)!=Map.end()){
            if(a[Map[b[i].s+1]].d<=b[i].d) e[Map[b[i].s+1]].push_back(i);
        }
    }
    sort(a+1,a+1+n,cmp);
    long long ans1=0,ans2=0;
    for(int i=1;i<=n;i++){  
        if(find(a[i].id)){
            ans1++;
            ans2+=a[i].d;
        }
    }
    cout << ans2 << endl;
    cout << ans1 << endl;
    for(int i=1;i<=m;i++){
        if(match[i]!=-1) cout << i << " " << match[i] << endl;
    }
    return 0;
}