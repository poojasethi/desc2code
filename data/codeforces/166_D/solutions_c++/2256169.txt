#include <iostream>
#include <algorithm>
#include<stdio.h>
#include<string.h>
#include<queue>
#include<cmath>
#include<list>
#include<set>
#include<map>
#include<vector>
#define N 100005
#define inf 1000000013
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define x first
#define y second
#define lst p<<1,l,mid
#define rst p<<1|1,mid+1,r
#define ll long long
using namespace std;
const int maxn=100;
int f[N],p[N];
vector<int>v[N];
int find(int u)
{
 for(int i=0;i<v[u].size();i++)
 {
  int j=v[u][i];
  if(p[j]==u)continue;
  if(p[j]==-1||find(p[j]))
  {
   p[j]=u,f[u]=j+1;return 1;
  }
  //}
 }
 return 0;
}
struct node
{
 ll c,s;
 int id;
}a[N];
int cmp(node a,node b)
{return a.c>b.c;}
int main()
{
   // freopen("in.txt","r",stdin);
    int n,m,i,j;
    while(~scanf("%d",&n))
    {
     for(i=1;i<=n;i++)
     {
      scanf("%I64d%I64d",&a[i].c,&a[i].s);
      a[i].id=i;
     }
     sort(a+1,a+n+1,cmp);
     scanf("%d",&m);
     ll d,x;
     map<ll,int>g;
     for(i=1;i<=n;i++)
     {v[i].clear();g[a[i].s]=i;}
     for(i=0;i<m;i++)
     {
      scanf("%I64d%I64d",&d,&x);
      j=g[x];
      if(j&&a[j].c<=d)v[j].pb(i);
      j=g[x+1];
      if(j&&a[j].c<=d)v[j].pb(i);
     }
     //printf("%d\n",v[1].size());
     ll ans=0;int num=0;
     memset(f,0,sizeof(f));
     memset(p,-1,sizeof(p));
     for(i=1;i<=n;i++)
     {
        //memset(vv,0,sizeof(vv));
        if(find(i))ans+=a[i].c,num++;
     }
     printf("%I64d\n%d\n",ans,num);
     for(i=1;i<=n;i++)
     if(f[i])
     printf("%d %d\n",f[i],a[i].id);
    }
    return 0;
}
