#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <map>
using namespace std;
map<int,int>hash;
int n,m,tot,match[200005],choose[200005],son[200005],pre[200005],last[200005],money[200005],size[200005];
struct node
{
	int id,size,cost;	
}d[200005];
void add(int a,int b){son[++tot]=b;pre[tot]=last[a];last[a]=tot;}
bool find(int k)
{
	for(int x=last[k];x!=0;x=pre[x])
	{
		if(match[son[x]]==k) continue;
		if(match[son[x]]==0 || find(match[son[x]]))
		{
			match[son[x]]=k;
			choose[k]=son[x];
			return 1;	
		}	
	}	
	return 0;
}
bool com(node a,node b){return a.cost>b.cost;}
int main()
{
	scanf("%d",&n);
	for(int i=1;i<=n;i++) scanf("%d %d",&d[i].cost,&d[i].size),d[i].id=i;
	sort(d+1,d+1+n,com);
	for(int i=1;i<=n;i++) hash[d[i].size]=i;
	scanf("%d",&m);
	for(int i=1;i<=m;i++) scanf("%d %d",&money[i],&size[i]);
	for(int i=m;i>=1;i--)
	{
		int tmp=0;
		if((tmp=hash[size[i]+1])!=0) 
			if(d[tmp].cost<=money[i]) add(tmp,i);
		if((tmp=hash[size[i]])!=0) 
			if(d[tmp].cost<=money[i]) add(tmp,i);
	}	
	__int64 ans=0;int cnt=0;
	for(int i=1;i<=n;i++)
	{
		if(find(i)) ans+=d[i].cost,cnt++;	
	}
	printf("%I64d\n%d\n",ans,cnt);
	for(int i=1;i<=n;i++)
	{
		if(choose[i]==0) continue;
		if(match[choose[i]]==i) printf("%d %d\n",choose[i],d[i].id);	
	}
//	system("pause");
	return 0;
}
