/*
* Problem: Codeforces 152D Frames
* Author: Leo Yu
* Time: 08-12-12 15:48
* State: SOLVED
* Memo: 
*/
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
typedef long long LL;
inline int   read()
{
    int x = 0;  char ch = getchar(); bool positive = 1;
    for (; ch < '0' || ch > '9'; ch = getchar())  if (ch == '-')  positive = 0;
    for (; ch >= '0' && ch <= '9'; ch = getchar())    x = x * 10 + ch - '0';
    return positive ? x : -x;
}

int N, M, K, T, k, visit[1005][1005], pos[8];
char	a[1005][1005];
vector<int>	can[2];

inline bool	paint(int x, int y)
{
	if (a[x][y] != '#')	return 0;
	if (visit[x][y] != T)	++ k;
	visit[x][y] = T;
	return 1;
}

inline bool	paint(int x1, int y1, int x2, int y2)
{
	if (abs(x1 - x2) < 2)	return 0;
	if (abs(y1 - y2) < 2)	return 0;
	for (int i = x1; i <= x2; ++ i)
	{
		if (!paint(i, y1))	return 0;
		if (!paint(i, y2))	return 0;
	}
	for (int j = y1; j <= y2; ++ j)
	{
		if (!paint(x1, j))	return 0;
		if (!paint(x2, j))	return 0;
	}
	return 1;
}

inline bool	check()
{
/*	if (pos[0] == 1 && pos[1] == 1 && pos[2] == 3 && pos[3] == 3 &&
		pos[4] == 1 && pos[5] == 1 && pos[6] == 4 && pos[7] == 5)
	{
		int Leo = 1;
	}
*/	
	++ T; k = 0;
	if (!paint(pos[0], pos[1], pos[2], pos[3]))	return 0;
	if (!paint(pos[4], pos[5], pos[6], pos[7]))	return 0;
	if (k != K)	return 0;
	printf("YES\n");
	printf("%d %d %d %d\n%d %d %d %d\n", pos[0], pos[1], pos[2], pos[3], pos[4], pos[5], pos[6], pos[7]);
	return 1;
}

inline bool	DFS(int step)
{
	if (step == 8)
		return check();
	pos[step] = can[step & 1][0];
	if (DFS(step + 1))	return 1;
	pos[step] = can[step & 1][1];
	if (DFS(step + 1))	return 1;
	int size = can[step & 1].size();
	pos[step] = can[step & 1][size - 1];
	if (DFS(step + 1))	return 1;
	pos[step] = can[step & 1][size - 2];
	if (DFS(step + 1))	return 1;
	return 0;
}

int main()
{
	#ifndef ONLINE_JUDGE
	freopen("a.in", "r", stdin);
	freopen("a.out", "w", stdout);
	#endif
	
	N = read(); M = read();
	for (int i = 1; i <= N; ++ i)	scanf("%s", a[i] + 1);
	
	for (int i = 1; i <= N; ++ i)
		for (int j = 1; j <= M; ++ j)
			if (a[i][j] == '#')
				++ K;
	
	for (int i = 1; i <= N; ++ i)
		for (int j = 2; j < M; ++ j)
			if (a[i][j] == '#' && a[i][j - 1] == '#' && a[i][j + 1] == '#')
			{
				can[0].push_back(i);
				break;
			}
	
	for (int j = 1; j <= M; ++ j)
		for (int i = 2; i < N; ++ i)
			if (a[i - 1][j] == '#' && a[i][j] == '#' && a[i + 1][j] == '#')
			{
				can[1].push_back(j);
				break;
			}
	
	if (can[0].size() < 2 || can[1].size() < 2 || !DFS(0))
		printf("NO\n");
	
	return 0;
}
