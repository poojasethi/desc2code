#include <iostream>
#include <stdio.h>
#include <set>

using namespace std;

char grid[1000][1000 + 1];
int n, m, nov;

bool paint(int x1, int y1, int x2, int y2) {
	int n1 = x2 - x1 + 1;
	int m1 = y2 - y1 + 1;

	for (int j = 0; j < m1; j++) {
		if (grid[x1][y1 + j] == '.' || grid[x2][y2 - j] == '.') return false;
		if (grid[x1][y1 + j] != '%')  {
			grid[x1][y1 + j] = '%'; 
			nov++;
		}
		if (grid[x2][y2 - j] != '%') {
			grid[x2][y2 - j] = '%';
			nov++;
		}
	}

	for (int i = 0; i < n1; i++) {
		if (grid[x1 + i][y1] == '.' || grid[x2 - i][y2] == '.') return false;
		if (grid[x1 + i][y1] != '%') {
			grid[x1 + i][y1] = '%';
			nov++;
		}
		if (grid[x2 - i][y2] != '%') {
			grid[x2 - i][y2] = '%';
			nov++;
		}
	}

	return true;
}

void repaint(int x1, int y1, int x2, int y2) {
	int n1 = x2 - x1 + 1;
	int m1 = y2 - y1 + 1;

	for (int j = 0; j < m1; j++) {
		if (grid[x1][y1 + j] == '.' || grid[x2][y2 - j] == '.') return;
		if (grid[x1][y1 + j] == '%')  {
			grid[x1][y1 + j] = '#'; 
			nov--;
		}
		if (grid[x2][y2 - j] == '%') {
			grid[x2][y2 - j] = '#';
			nov--;
		}
	}

	for (int i = 0; i < n1; i++) {
		if (grid[x1 + i][y1] == '.' || grid[x2 - i][y2] == '.') return;
		if (grid[x1 + i][y1] == '%') {
			grid[x1 + i][y1] = '#';
			nov--;
		}
		if (grid[x2 - i][y2] == '%') {
			grid[x2 - i][y2] = '#';
			nov--;
		}
	}

}

int main(void) {
	set < int > R, C;
	int cnt = 0;
	scanf("%d %d", &n, &m);

	for (int i = 0; i < n; i++) {
		scanf("%s", grid[i]);
		for (int j = 0; j < m; j++) {
			if (grid[i][j] != '#') continue;
			cnt++;
			if (j >= 2 && grid[i][j - 1] == '#' && grid[i][j - 2] == '#') {
				R.insert(i);
			}
			if (i >= 2 && grid[i - 1][j] == '#' && grid[i - 2][j] == '#') {
				C.insert(j);
			}
		}
	}    

	if (R.size() > 4) {
		R.erase(++++R.begin(), ----R.end());
	}
	if (C.size() > 4) {
		C.erase(++++C.begin(), ----C.end());
	}

	set < int >::iterator ax1, ay1, ax2, ay2;
	set < int >::iterator bx1, by1, bx2, by2;

	for (ax1 = R.begin(); ax1 != R.end(); ax1++) {
		for (ay1 = C.begin(); ay1 != C.end(); ay1++) {
			for (ax2 = R.begin(); ax2 != R.end(); ax2++) {
				for (ay2 = C.begin(); ay2 != C.end(); ay2++) {
					for (bx1 = R.begin(); bx1 != R.end(); bx1++) {
						for (by1 = C.begin(); by1 != C.end(); by1++) {
							for (bx2 = R.begin(); bx2 != R.end(); bx2++) {
								for (by2 = C.begin(); by2 != C.end(); by2++) {
									if (*ax2 - *ax1 >= 2 && *ay2 - *ay1 >= 2 && *bx2 - *bx1 >= 2 && *by2 - *by1 >= 2) {
										if (paint(*ax1, *ay1, *ax2, *ay2) && paint(*bx1, *by1, *bx2, *by2) && nov == cnt) {
											printf("YES\n");
											printf("%d %d %d %d\n%d %d %d %d\n",
												*ax1 + 1, *ay1 + 1, *ax2 + 1, *ay2 + 1,
												*bx1 + 1, *by1 + 1, *bx2 + 1, *by2 + 1);
											return 0;
										}
										repaint(*ax1, *ay1, *ax2, *ay2);
										repaint(*bx1, *by1, *bx2, *by2);
									}
								}
							}
						}
					}
				}
			}
		}
	}

	printf("NO\n");

	return 0;
}
