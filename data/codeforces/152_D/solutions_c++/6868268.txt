#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#define For1(u,d,p) for (int i=u; i<=d; i++) if (!B[i][p])  return 0; else if (b[i][p]!=tot) b[i][p]=tot,s++
#define For2(l,r,p) for (int i=l; i<=r; i++) if (!B[p][i])  return 0; else if (b[p][i]!=tot) b[p][i]=tot,s++
using namespace std;

struct st
{
	int l,r,x;
} X[1005],Y[1005];
const int D[4][2]={{1,0},{0,1},{-1,0},{0,-1}};
int S,N,M,tot,b[1005][1005],q[105][2],U[1005],V[1005];
bool B[1005][1005],f[1005],g[1005];
char a[1005][1005];

void init()
{
	scanf("%d%d",&N,&M);
	for (int i=1; i<=N; i++) scanf("%s",a[i]+1);
	for (int i=1; i<=N; i++)
		for (int j=1; j<=M; j++) B[i][j]=a[i][j]=='#',S+=B[i][j];
}

bool check(int x1,int y1,int x2,int y2,int x3,int y3,int x4,int y4)
{
	if (x2-x1<2||y2-y1<2||x4-x3<2||y4-y3<2) return 0;
	if (!B[x1][y1]||!B[x2][y2]||!B[x3][y3]||!B[x4][y4]) return 0;
	int s=0; tot++;
	
	For1(x1,x2,y1); For1(x1,x2,y2);
	For1(x3,x4,y3); For1(x3,x4,y4);
	
	For2(y1,y2,x1); For2(y1,y2,x2);
	For2(y3,y4,x3); For2(y3,y4,x4);
	
	return s==S;
}

void doit()
{
	for (int i=1; i<=N; i++)
		for (int j=1; j<=M; j++) if (B[i][j])
		{
			int s=0;
			for (int k=0; k<4; k++) if (B[i+D[k][0]][j+D[k][1]]) s++;
			if (s<2) {puts("NO"); return;}
		}
	int n=0,m=0,t=0;
	for (int i=1; i<=N; i++)
		for (int j=1,k; j<=M; j++) if (B[i][j])
		{
			for (k=j; k<=M&&B[i][k]; k++);
			if (k-j>=3) X[++n].x=i,X[n].l=j,X[n].r=k-1;
			j=k-1;
		}
	for (int i=1; i<=M; i++)
		for (int j=1,k; j<=N; j++) if (B[j][i])
		{
			for (k=j; k<=N&&B[k][i]; k++);
			if (k-j>=3) Y[++m].x=i,Y[m].l=j,Y[m].r=k-1;
			j=k-1;
		}
	int xx=0,yy=0;
	for (int i=1; i<=n; i++) U[++xx]=X[i].x;
	for (int i=1; i<=m; i++) V[++yy]=Y[i].x;
	sort(U+1,U+xx+1),xx=unique(U+1,U+xx+1)-U-1;
	sort(V+1,V+yy+1),yy=unique(V+1,V+yy+1)-V-1;
	for (int i=1; i<=n; i++) if (X[i].x==U[1]||X[i].x==U[2]||X[i].x==U[xx]||X[i].x==U[xx-1]) f[X[i].x]=g[X[i].l]=g[X[i].r]=1;
	for (int i=1; i<=m; i++) if (Y[i].x==V[1]||Y[i].x==V[2]||Y[i].x==V[yy]||Y[i].x==V[yy-1]) f[Y[i].l]=f[Y[i].r]=g[Y[i].x]=1;
	for (int i=1; i<=N; i++)
		for (int j=1; j<=M; j++) if (f[i]&&g[j]) q[++t][0]=i,q[t][1]=j;
	for (int i=1; i<=t; i++)
		for (int j=i+1; j<=t; j++)
			for (int k=1; k<=t; k++)
				for (int l=k+1; l<=t; l++) if (check(q[i][0],q[i][1],q[j][0],q[j][1],q[k][0],q[k][1],q[l][0],q[l][1]))
				{
					puts("YES");
					printf("%d %d %d %d\n%d %d %d %d\n",q[i][0],q[i][1],q[j][0],q[j][1],q[k][0],q[k][1],q[l][0],q[l][1]);
					return;
				}
	puts("NO");
}

int main()
{
	init();
	doit();
	return 0;
}