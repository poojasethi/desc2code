#include<iostream>
#include<set>
#include<cstring>
#include<cstdio>
#include<algorithm>
#define foru(i,x) for(set<int>::iterator i=x.begin();i!=x.end();i++)
using namespace std;
int now;int map[1010][1010];
bool find(int x1,int x2,int y1,int y2)
{
     for(int i=x1;i<=x2;i++)
     {
             if(map[i][y1]==0 || map[i][y2]==0)return false;
             if(map[i][y1]==1)now++,map[i][y1]=2;
             if(map[i][y2]==1)now++,map[i][y2]=2;
     }
     for(int i=y1;i<=y2;i++)
     {
             if(map[x1][i]==0 || map[x2][i]==0)return false;
             if(map[x1][i]==1)now++,map[x1][i]=2;
             if(map[x2][i]==1)now++,map[x2][i]=2;
     }
     return true;
}
void re(int x1,int x2,int y1,int y2)
{
     for(int i=x1;i<=x2;i++)
     {
             if(map[i][y1]==2)map[i][y1]=1;
             if(map[i][y2]==2)map[i][y2]=1;
     }
     for(int i=y1;i<=y2;i++)
     {
             if(map[x1][i]==2)map[x1][i]=1;
             if(map[x2][i]==2)map[x2][i]=1;
     }
}
int n,m;set<int>r,c;

int main()
{
    //freopen("check.in","r",stdin);
    //freopen("check.out","w",stdout);
    scanf("%d%d",&n,&m);
    memset(map,0,sizeof(map));
    int sum=0;
    for(int i=1;i<=n;i++)
    {
            getchar();
            for(int j=1;j<=m;j++)
            {
                    char ch=getchar();
                    if(ch=='#'){map[i][j]=1;sum++;}
                    if(j>=3)
                    if(map[i][j] && map[i][j-1] && map[i][j-2])r.insert(i);
                    if(i>=3)
                    if(map[i][j] && map[i-1][j] && map[i-2][j])c.insert(j);
            }
    }
    if(r.size()>4)r.erase(++++r.begin(),----r.end());
    if(c.size()>4)c.erase(++++c.begin(),----c.end());
  /*  foru(i,r)cout<<*i<<endl;
    cout<<endl;
    foru(i,c)cout<<*i<<endl;
    cout<<endl;*/
    foru(x1,r) foru(x2,r) foru(y1,c)  foru(y2,c)
    foru(a1,r) foru(a2,r) foru(b1,c)  foru(b2,c)
    {

       if(*x2-*x1<2 || *y2-*y1<2 || *a2-*a1<2 || *b2-*b1<2)
       continue;
     //            printf("%d %d %d %d\n",*x1,*y1,*x2,*y2);
    //      printf("%d %d %d %d\n",*a1,*b1,*a2,*b2);
     
       now=0;
       if(find(*x1,*x2,*y1,*y2)&&find(*a1,*a2,*b1,*b2))
       if(now==sum)
       {
          printf("YES\n");
          printf("%d %d %d %d\n",*x1,*y1,*x2,*y2);
          printf("%d %d %d %d\n",*a1,*b1,*a2,*b2);
          return 0;
       }
       re(*x1,*x2,*y1,*y2);
       re(*a1,*a2,*b1,*b2);
    }
    printf("NO\n");
    return 0;
}
