#include<iostream>
#include<algorithm>
#include<cstring>
#include<cstdio>
#include<vector>
#include<set>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define lb lower_bound
#define ub upper_bound
typedef pair<int,int> pa;
const int maxn=1011;
int m,n,step,total,R,C,h[maxn],l[maxn];
int maxl[maxn],maxh[maxn],d[maxn][maxn];
char a[maxn][maxn];

int check(int x,int x2,int y,int y2) {
	int cnt=0;
	for (int i=x+1;i<x2;i++) {
		if (a[i][y]=='.' || a[i][y2]=='.') return 7654321;
		cnt+=(d[i][y]!=step)+(d[i][y2]!=step);
		d[i][y]=d[i][y2]=step;
	}
	for (int j=y;j<=y2;j++) {
		if (a[x][j]=='.' || a[x2][j]=='.') return 7654321;
		cnt+=(d[x][j]!=step)+(d[x2][j]!=step);
		d[x][j]=d[x2][j]=step;
	}
	return cnt;
}

void get(int x1,int x2,int y1,int y2,int x3,int x4,int y3,int y4) {
	if (x2-x1<2 || y2-y1<2 || x4-x3<2 || y4-y3<2) return;
	++step;
	if (check(x1,x2,y1,y2)+check(x3,x4,y3,y4)==total) {
		puts("YES");
		cout << x1+1 << ' ' << y1+1 << ' ' << x2+1 << ' ' << y2+1 << endl;
		cout << x3+1 << ' ' << y3+1 << ' ' << x4+1 << ' ' << y4+1 << endl;
		exit(0);
	}
}

void adjust(int m,int h[],int maxh[],int &R) {
	for (int i=0;i<m;i++)
		if (maxh[i]>=3) 
			h[R++]=i;
	if (R>4) {
		for (int i=2;i;i--) h[4-i]=h[R-i];
		R=4;
	}
}

int main() {
    //freopen("AC.in","r",stdin);
    //freopen("AC.out","w",stdout);
    
	cin >> m >> n;
	for (int i=0;i<m;i++) {
		cin >> a[i];
		for (int j=0;j<n;j++) total+=a[i][j]=='#';
	}
	
	for (int i=0;i<m;i++)
		for (int j=0,cnt=0;j<n;j++) 
			if (a[i][j]=='#') {
				cnt++;
				maxh[i]=max(maxh[i],cnt);
			}
			else cnt=0;		
	adjust(m,h,maxh,R);
	
	for (int j=0;j<n;j++)
		for (int i=0,cnt=0;i<m;i++)
			if (a[i][j]=='#') {
				cnt++;
				maxl[j]=max(maxl[j],cnt);
			}
			else cnt=0;	
	adjust(n,l,maxl,C);	
	
    for (int x1=0,x2=1;x2<R;x2++)
    for (int y1=0;y1<C;y1++)
    for (int y2=y1+1;y2<C;y2++)
    for (int x3=0;x3<R;x3++)
    for (int x4=x3+1;x4<R;x4++)
    for (int y3=0;y3<C;y3++)
    for (int y4=y3+1;y4<C;y4++)
        get(h[x1],h[x2],l[y1],l[y2],h[x3],h[x4],l[y3],l[y4]);
	puts("NO");
}
