//By Lin
#include<cstdio>
#include<cstring>
#include<algorithm>
#define maxn 1005
using namespace std;

int n ,m; 
char s[maxn][maxn];
int	r[maxn*maxn] , l[maxn*maxn],tol;

bool 	pan(int x1 , int y1 , int x2 ,int y2 )
{
	for (int i = y1; i<=y2; i++)
	{
		if ( s[x1][i] == '.' ) return false; 
		if ( s[x2][i] == '.' ) return false; 
		if ( s[x1][i] == '#' ) {
			s[x1][i] = '%'; 
			tol++;
		}
		if ( s[x2][i] == '#' ) {
			s[x2][i] = '%';
			tol++;
		}
	}
	for (int i = x1; i<=x2; i++)
	{
		if ( s[i][y1] == '.' ) return false; 
		if ( s[i][y2] == '.' ) return false; 
		if ( s[i][y1] == '#' ) {
			s[i][y1] = '%'; 
			tol++;
		}
		if ( s[i][y2] == '#' ) {
			s[i][y2] = '%';
			tol++;
		}
	}
	return true; 
}

void 	reset(int x1 , int y1 , int x2 ,int y2 )
{
	for (int i = y1; i<=y2; i++)
	{
		if ( s[x1][i] == '%' ) s[x1][i] = '#'; 
		if ( s[x2][i] == '%' ) s[x2][i] = '#';
	}
	for (int i = x1; i<=x2; i++)
	{
		if ( s[i][y1] == '%' ) s[i][y1] = '#'; 
		if ( s[i][y2] == '%' ) s[i][y2] = '#';
	}
}
int main()
{
	scanf("%d%d"  ,&n ,&m );
	for (int i = 0; i<n; i++) scanf("%s" , s[i] );
	int cnt = 0; 
	for (int i = 0; i<n; i++)
		for (int j = 0; j<m; j++)
		{
			if ( s[i][j] != '#' ) continue; 
			cnt ++; 
			if ( i>1 && s[i-1][j] == '#' && s[i-2][j] == '#' ) l[++l[0]] = j; 
			if ( j>1 && s[i][j-1] == '#' && s[i][j-2] == '#' ) r[++r[0]] = i; 
		}
	sort( r+1, r+r[0]+1 );
	int k = 1; 
	for( int i = 2; i<=r[0]; i++)
		if ( r[i] != r[k] ) r[++k] = r[i];
	r[0] = k; 
	sort( l+1, l+l[0]+1 );
	k = 1; 
	for( int i = 2; i<=l[0]; i++)
		if ( l[i] != l[k] ) l[++k] = l[i];
	l[0] = k; 
	if ( r[0] > 4 ){
		r[3] = r[r[0]-1]; 
		r[4] = r[r[0]];
		r[0] = 4; 
	}
	if ( l[0] > 4 ){
		l[3] = l[l[0]-1]; 
		l[4] = l[l[0]];
		l[0] = 4; 
	}
	for (int x1 = 1; x1 <=r[0]; x1++) 	for (int x2 = x1+1; x2 <=r[0]; x2 ++ )
	for (int y1 = 1; y1 <=l[0]; y1++) 	for (int y2 = y1+1; y2 <=l[0]; y2 ++ )
	for (int x3 = 1; x3 <=r[0]; x3++) 	for (int x4 = x3+1; x4 <=r[0]; x4 ++ )
	for (int y3 = 1; y3 <=l[0]; y3++) 	for (int y4 = y3+1; y4 <=l[0]; y4 ++ )
	{
		if ( r[x2]-r[x1] < 2 || r[x4]-r[x3] < 2 || l[y2] - l[y1] < 2 || l[y4] - l[y3] < 2 ) continue; 

			if ( pan(r[x1],l[y1],r[x2],l[y2]) && pan(r[x3],l[y3],r[x4],l[y4]) && tol == cnt )
			{
				printf("YES\n%d %d %d %d\n%d %d %d %d\n",r[x1]+1,l[y1]+1,r[x2]+1,l[y2]+1,r[x3]+1,l[y3]+1,r[x4]+1,l[y4]+1);
				return 0; 
			}
			reset(r[x1],l[y1],r[x2],l[y2]);
			reset(r[x3],l[y3],r[x4],l[y4]);
			tol = 0; 
	}
	printf("NO\n");
	return 0; 
}
