# -*- coding: UTF-8 -*-

# from itertools import *
# from collections import defaultdict

# def gcd(a,b):
#     while b > 0: a,b = b, a%b
#     return a

# def baseN(num,b,numerals="0123456789abcdefghijklmnopqrstuvwxyz"):
#     return ((num == 0) and  "0" ) or ( baseN(num // b, b).lstrip("0") + numerals[num % b])

T = input()
# St = raw_input()
# data1 = map(int, raw_input().split())
# data2 = [ map(int, raw_input().split()) for i in xrange(T) ]
d1, d2, d3, d4 = 1, 2, 3, 4
l1 = l2 = l3 = l4 = ""
if T == 1:
    print "a\na\nb\nb"
elif T == 2:
    print "aa\nbb\ncc\ndd"
elif T%2 == 0:
    if T%4 == 0:
        l1 = "aabb"*(T/4)
        j = T-2
        while j > 0:
            if j >= 4:
                l2 += "ccdd"
                l3 += "ddcc"
                j -= 4
            else:
                l2 += "cc"
                l3 += "dd"
                j = 0
    else:
        j = T
        while j > 0:
            if j >= 4:
                l1 += "aabb"
                j -= 4
            else:
                l1 += "aa"
                j = 0
        l2 = l3 = "ccdd"*((T-2)/4)
    print l1
    print "e"+l2+"e"
    print "e"+l3[::-1]+"e"
    print l1
elif (T-1) % 4 == 0:
    l1 = "aabb"*((T-1)/4)+"c"
    l2 = "bbaa"*((T-1)/4)+"c"
    l3 = "d"+"eeff"*((T-1)/4)
    l4 = "d"+"ffee"*((T-1)/4)
    print l1
    print l2
    print l3
    print l4
elif (T-1) % 2 == 0:
    j = T-1
    while j > 0:
        if j >= 4:
            l1 += "aabb"
            l2 += "bbaa"
            l3 += "ccdd"
            l4 += "ddcc"
            j -= 4
        else:
            l1 += "aa"
            l2 += "bb"
            l3 += "cc"
            l4 += "dd"
            j = 0
    print l1+"e"
    print l2+"e"
    print "e"+l3
    print "e"+l4
else:
    print "-1"
