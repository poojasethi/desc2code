import sys

n=int(sys.stdin.readline().strip())

res = [[False]*n for i in range(4)]

def bestc(r1,c1,r2,c2):
	for ch in map(chr,range(ord('a'),ord('z')+1)):
		if r1>0 and res[r1-1][c1]==ch: continue
		if r1<3 and res[r1+1][c1]==ch: continue
		if c1<n-1 and res[r1][c1+1]==ch: continue
		if c1>0 and res[r1][c1-1]==ch: continue
		if r2>0 and res[r2-1][c2]==ch: continue
		if r2<3 and res[r2+1][c2]==ch: continue
		if c2>0 and res[r2][c2-1]==ch: continue
		if c2<n-1 and res[r2][c2+1]==ch: continue
		return ch
	return -1

def even_solve(n):	
	global res
	r,c=0,0
	while r<4:
		c=0
		while c<n:
			if r==1 and (c==0 or c==n-1):
				cur=bestc(r,c,r+1,c)
				res[r][c]=cur
				res[r+1][c]=cur
			elif r==1 or r==2:
				if c%2==1 and c<n-1:
					cur=bestc(r,c,r,c+1)
					res[r][c]=cur
					res[r][c+1]=cur
			elif r==0 or r==3:
				if c%2==0:
					cur=bestc(r,c,r,c+1)
					res[r][c]=cur
					res[r][c+1]=cur
			c+=1
		r+=1
	return

def odd_solve(n):
	global res
	r,c=0,0
	while r<4:
		c=0
		while c<n:
			if r==0 and c==n-1:
				cur=bestc(r,c,r+1,c)
				res[r][c]=cur
				res[r+1][c]=cur
			elif r==2 and c==0:
				cur=bestc(r,c,r+1,c)
				res[r][c]=cur
				res[r+1][c]=cur
			elif (r==0 or r==1) and c%2==0 and c<n-1:
				cur=bestc(r,c,r,c+1)
				res[r][c]=cur
				res[r][c+1]=cur
			elif (r==2 or r==3) and c%2==1 and c>0:
				cur=bestc(r,c,r,c+1)
				res[r][c]=cur
				res[r][c+1]=cur
			c+=1
		r+=1
	return
	
if n%2==0:
	even_solve(n)
else:
	odd_solve(n)

for r in res:
	print ''.join(map(str,r))
