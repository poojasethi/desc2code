#include<iostream>
#include<cstdio>
#include<string>
#include<cassert>
#include<vector>
using namespace std;
int n,m,succ[50010],cnt[50010],len[50010],succ2[50010],active[50010];
bool ok[50010];
string s[50010];
long long ans;
void small_n(){
  for(int start=0;start<n;start++){
    for(int end=start;end<n;end++){
      cnt[m]=0;
      for(int i=m-1;i>=0;i--){
        cnt[i]=cnt[i+1]+(s[end][i]==')'?1:-1);
      }
      int size=1;
      active[0]=m;
      succ[m]=m+1;
      for(int i=m-1;i>=0;i--){
        while(size&&cnt[active[size-1]]>cnt[i]){
          --size;
        }
        if(start==end){
          succ2[i]=!size||cnt[active[size-1]]<cnt[i]?m+1:active[size-1];
          active[size++]=i;
          continue;
        }
        if(size){
          if(succ[i]==m+1||cnt[active[size-1]]<cnt[i]){
            succ2[i]=m+1;
          }else{
            while(succ[i]<m+1&&size&&cnt[active[size-1]]==cnt[i]&&succ[i]!=active[size-1]){
              if(succ[i]<active[size-1]){
                succ[i]=succ[succ[i]];
              }else{
                --size;
              }
            }
            if(succ[i]<m+1&&size&&cnt[active[size-1]]==cnt[i]){
              succ2[i]=succ[i];
            }else{
              succ2[i]=m+1;
            }
          }
        }else{
          succ2[i]=m+1;
        }
        active[size++]=i;
      }
      len[m+1]=-1;
      for(int i=m-1;i>=0;i--){
        succ[i]=succ2[i];
        len[i]=1+len[succ[i]];
        ans+=len[i];
      }
    }
  }
}
void small_m(){
  for(int start=0;start<m;start++){
    for(int i=0;i<n;i++){
      cnt[i]=0;
      ok[i]=true;
    }
    for(int end=start;end<m;end++){
      int cur=0;
      //cout<<start<<" "<<end<<endl;
      for(int i=0;i<n;i++){
        cnt[i]+=s[i][end]=='('?1:-1;
        ok[i]&=cnt[i]>=0;
        if(ok[i]&&cnt[i]==0){
          ++cur;
          ans+=cur;
        }else{
          cur=0;
        }
        //cout<<"i="<<i<<" "<<cur<<endl;
      }

    }
  }
}
int main(){
  cin>>n>>m;
  for(int i=0;i<n;i++){
    cin>>s[i];
  }
  if(m<=1500){
    small_m();
  }else {
    small_n();
  }
  /*if(n<=1000){
    small_n();
  }else{
    small_m();
  }*/
  cout<<ans<<endl;
  
  return 0;
}

