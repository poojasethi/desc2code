#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <cmath>

using namespace std;

#ifdef WIN32
	#define LL "%I64d"
#else
	#define LL "%lld"
#endif

#ifdef Lightning
	#define debug(orz...) printf(orz)
	const int DEBUG = 1;
#else
	#define debug(...)
	const int DEBUG = 0;
#endif

#define file_able if (0)
#define setfile(pro_name) freopen(pro_name".in", "r", stdin), freopen(pro_name".out", "w", stdout)
#define closefile() fclose(stdin), fclose(stdout)

#define cmax(_x, _y) (_x < (_y) ? _x = _y : 0)
#define cmin(_x, _y) (_x > (_y) ? _x = _y : 0)
#define gmax(_x, _y) ((_x) > (_y) ? (_x) : (_y))
#define gmin(_x, _y) ((_x) < (_y) ? (_x) : (_y))

namespace defs
{
	#define getc() getchar()

	long long read()
	{
		long long aa, bb = 1, ch;
		while (ch = getc(), (ch < '0' || ch > '9') && ch != '-');
		ch == '-' ? aa = 0, bb = -1 : aa = ch - '0';
		while (ch = getc(), ch >= '0' && ch <= '9') aa = aa * 10 + ch - '0';
		return aa * bb;
	}

	const unsigned int rand_x = 1401010315;
	const unsigned int rand_y = 1000000019;
	
	unsigned int rand_cur;

	unsigned int rand_int()
	{
		return rand_cur = rand_cur * rand_x + rand_y;
	}

	const int inf = 1071026353;
	const int mod = 1000000007;
	const int modx = 998244353;
	
	const int maxn = 500050;
}

namespace lightningwork
{
	// my space

	using namespace defs;

	int n;
	long long sum, num[maxn], g[64];
	
	void work()
	{
		n = read();
		for (int i = 1; i <= n; ++i)
		{
			long long a = read();
			long long b = read();
			sum ^= a;
			a = a ^ b;
			for (long long j = 0; j < 60; ++j)
			{
				if (a & (1ll << j))
				{
					a = a ^ g[j];
				}
			}
			if (a != 0)
			{
				int t;
				for (long long j = 59; j >= 0; --j)
					if (a & (1ll << j)) t = j;
				g[t] = a;
				for (long long j = 0; j < 60; ++j)
				{
					if (j != t && g[j] && (a & (1ll << j)))
					{
						g[j] ^= a;
					}
				}
			}
		}
		long long len = 0;
		for (long long i = 0; i < 60; ++i)
		{
			if (g[i]) ++len;
			if (sum & (1ll << i)) sum ^= g[i];
		}
		if (sum)
		{
			puts("1/1");
		} else
		{
			printf(LL"/"LL"\n", (1ll << len) - 1, 1ll << len);
		}
	}
}

int main()
{
	file_able setfile("work");
	lightningwork::work();
	file_able closefile();
	return 0;
}

