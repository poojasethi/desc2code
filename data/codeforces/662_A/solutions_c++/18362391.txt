#include<stdio.h>

typedef unsigned long long ll;

int n;
ll a, b, s, I;
char mat[64][500005];

int swap(int r1, int r2)
{
	char tmp;
	for (int i=0; i<=n; i++)
	{
		tmp = mat[r1][i];
		mat[r1][i] = mat[r2][i];
		mat[r2][i] = tmp;
	}
}

int add(int r1, int r2)
{
	for (int i=0; i<=n; i++)
		mat[r1][i] ^= mat[r2][i];
}

int main()
{
	scanf("%d",&n);
	s = 0;
	I = 1;
	for (int i=0; i<n; i++)
	{
		scanf("%I64d %I64d", &a, &b);
		s ^= a;
		for (int j=0; j<64; j++)
		{
			if ((a^b)&(I<<j))
				mat[j][i] = 1;
			else
				mat[j][i] = 0;
		}
	}
	
	for (int j=0; j<64; j++)
	{
		if (s&(I<<j))
			mat[j][n] = 1;
		else
			mat[j][n] = 0;
	}
	
	//Do row reduction
	for (int i=0, var=0; i<64 && var<n; var++)
	{
		//Find row with i set
		int row=-1;
		for (int j=i; j<64; j++)
		{
			if (mat[j][var])
			{
				row = j;
				break;
			}
		}
		
		//Didn't find that row
		if (row == -1)
			continue;
		
		//Swap and Cancel
		swap(row,i);
		for (int j=0; j<64; j++)
			if (i != j && mat[j][var])
				add(j,i);
		
		i++;
	}
	
	//Count dependent variables
	int dep=0;
	for (int i=0; i < 64; i++)
	{
		int j;
		for (j=0; j<=n; j++)
			if (mat[i][j])
				break;
			
		if (j < n)
		{
			dep++;
		}
		else if (j == n)
		{
			dep = -1;
			break;
		}
	}
	
	//printf("%d\n", (I<<dep));
	
	if (dep == -1)
		printf("1/1\n");
	else
		printf("%I64d/%I64d\n", (I << dep)-1, (I<<dep));
}