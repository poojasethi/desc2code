#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cctype>
#include<ctime>
#include<cstdlib>
#include<string>
#include<queue>
#include<cmath>
#include<set>
#include<map>
#include<bitset>
#include<vector>
#define Rep(x,a,b) for (int x=a;x<=(int)b;x++)
#define Drp(x,a,b) for (int x=a;x>=(int)b;x--)
#define Cross(x,a) for (int x=Hd[a];~x;x=Nx[x])
#define ll long long
#define INF (1<<29)
#define PII pair<int,int>
#define PDD pair<double,double>
#define mk(a,b) make_pair(a,b)
#define fr first
#define sc second
using namespace std;
inline ll Rd(){
	ll x=0;int ch=getchar(),f=1;
	while (!isdigit(ch)&&(ch!='-')&&(ch!=EOF)) ch=getchar();
	if (ch=='-'){f=-1;ch=getchar();}
	while (isdigit(ch)){x=(x<<1)+(x<<3)+ch-'0';ch=getchar();}
	return x*f;
}
inline void Rt(ll x){
	if (x<0) putchar('-'),x=-x;
	if (x>=10) Rt(x/10),putchar(x%10+'0');
		else putchar(x+'0');
}
const int N=500005;
ll a[N],b[N],c[N],S,Pw[65];
int n;
void Solve(int Cs){
	Rep(i,1,n) if (c[i]&Pw[Cs]&&c[i]<=Pw[Cs+1]){
		Rep(j,i+1,n) if (c[j]&Pw[Cs]) c[j]^=c[i];
		return;
	}
}
int main(){
	n=Rd();
	Pw[0]=1;Rep(i,1,60) Pw[i]=Pw[i-1]<<1;
	Rep(i,1,n) a[i]=Rd(),b[i]=Rd(),c[i]=a[i]^b[i],S^=a[i]; 
	Drp(i,59,0) Solve(i);
	sort(c+1,c+n+1);
	int Bg=n;
	Drp(i,59,0) if (S>=Pw[i]){
		while (Bg>=1&&(!(c[Bg]&Pw[i])&&c[Bg]>=Pw[i])||(c[Bg]>=Pw[i+1])) Bg--;
		if (!Bg || !(c[Bg]&Pw[i])) break;
		S^=c[Bg];
	}
	if (S) return puts("1/1"),0;
	int k=0;
	Drp(i,n,1) if (c[i]) k++;else break;
	Rt(Pw[k]-1),putchar('/'),Rt(Pw[k]); 
}
