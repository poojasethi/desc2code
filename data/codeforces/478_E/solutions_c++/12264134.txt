#include <cstdio>
#include <cstdlib>
typedef long long LL;
const int maxS1 = 830169, maxS2 = 755478;
const LL maxL = 10000000, maxR = 100000000000000LL;
int cnt[maxS2 + 1][10][2], que1[maxS1 + 1], que2[maxS2 + 1], tot, id[maxL];
LL n, k;
bool check(LL x)
{
	for(int last = 0; x >= 10; x /= 10)
	{
		if(x % 10 == x / 10 % 10 || last && last * (x % 10 - x / 10 % 10) > 0)
			return 0;
		last = x % 10 - x / 10 % 10;
	}
	return 1;
}
int main()
{
	//freopen("B.out", "w", stdout);
	scanf("%lld%lld", &n, &k);
	if(n >= maxL)
	{
		for(LL i = n; i < maxR; i += n)
			if(check(i))
			{
				--k;
				if(!k)
				{
					printf("%lld\n", i);
					return 0;
				}
			}
		puts("-1");
		return 0;
	}
	for(int i = 1; i < maxL; ++i)
	{
		if(!check(i))
			continue;
		if(i % n == 0)
		{
			--k;
			if(!k)
			{
				printf("%d\n", i);
				return 0;
			}
		}
		que1[++que1[0]] = i;
		if(i >= maxL / 100)
		{
			if(i < maxL / 10 && i * 1000 / maxL % 10 - i * 100 / maxL % 10 > 0)
				continue;
			que2[++que2[0]] = i;
			id[i % n] = 1;
		}
	}
	//printf("high.size = %d, low.size = %d\n", que1[0], que2[0]);
	for(int i = 0; i < n; ++i)
		if(id[i])
			id[i] = ++tot;
	for(int i = 1; i <= que2[0]; ++i)
	{
		//printf("%d %lld %d\n", que2[i], que2[i] * 10 / maxL % 10, (int)((que2[i] * 100 / maxL % 10 - que2[i] * 10 / maxL % 10) < 0));
		++cnt[id[que2[i] % n]][que2[i] * 10 / maxL % 10][(que2[i] * 100 / maxL % 10 - que2[i] * 10 / maxL % 10) < 0];
	}
	for(int i = 1; i <= que1[0]; ++i)
	{
		int val = maxL * que1[i] % n;
		if(val)
			val = n - val;
		if(!id[val])
			continue;
		for(int j = 0; j < 10; ++j)
		{
			if(j == que1[i] % 10 || que1[i] >= 10 && (que1[i] % 10 - que1[i] / 10 % 10) * (j - que1[i] % 10) > 0)
				continue;
			int sum = cnt[id[val]][j][j > que1[i] % 10];
			//printf("%d %d %d\n", que1[i], j, sum);
			if(sum < k)
			{
				k -= sum;
				continue;
			}
			for(int t = 1; t <= que2[0]; ++t)
				if(que2[t] % n == val && que2[t] * 10 / maxL % 10 == j
				&& (j - que1[i] % 10) * (que2[t] * 100 / maxL % 10 - j) < 0)
				{
					--k;
					if(!k)
					{
						printf("%lld\n", que1[i] * maxL + que2[t]);
						return 0;
					}
				}
		}
	}
	puts("-1");
	return 0;
}
		 	       			 	  	      	 	 		