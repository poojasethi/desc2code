#include <bits/stdc++.h>
#define rep(i,j,k)	for (int i = j; i <= k; i++)
#define dep(i,j,k)	for (int i = j; i >= k; i--)
using namespace std;
typedef long long ll;
const int N = 1e7;
const ll inf = 1e14;
inline void get(int &x)
{
	char ch = getchar();	x = 0;
	while (ch < '0')	ch = getchar();
	while (ch >= '0')	x = x*10+ch-'0', ch = getchar();
}
ll n, m, val[N];
int tt, ver[N], nxt[N], head[N];
int tot, f[10], sum[N], cnt[15][15];
inline int cmp(int a, int b){return (a==b)?0:((a>b)?1:-1);}
void dfs(int p, int n)
{
	if (p > n)
	{
		if (n==2 && f[1]==f[2])	return;	tot++;
		rep(i,1,n)	val[tot] = val[tot]*10+f[i];
    	return;
	}
	rep(i,0,9)
	{
		f[p] = i;
		if (p>=3 && (!cmp(f[p-2],f[p-1])
		||cmp(f[p],f[p-1])!=cmp(f[p-2],f[p-1])))	continue;
		dfs(p+1,n);
	}
}
inline void add(int x, int y){ver[++tt] = y, nxt[tt] = head[x], head[x] = tt;}
inline void ycl(){rep(i,1,7)	for(f[1] = 1; f[1] <= 9; f[1]++)	dfs(2,i);}
inline bool check(ll p)
{
	int zc = 0, st[20];
	for (; p; p /= 10)	st[++zc] = p%10;
	rep(i,2,zc-1)	if (!cmp(st[i],st[i-1]) || cmp(st[i],st[i-1])!=cmp(st[i],st[i+1]))	return 0;
	return 1;
}
int main()
{
	ycl();
	cin >> n >> m;
	if (n > N)
	{
		for (ll i = n; i <= inf; i += n)
			if (check(i) && --m==0)
			{
				cout << i << endl;
				return 0;
			}
		puts("-1");
		return 0;
	}
	else
	{
		rep(i,1,tot)
			if (val[i]%n==0 && --m==0)
			{
				cout << val[i] << endl;
				return 0;
			}
		dep(i,tot,1)	add(val[i]%n,i);
		rep(i,0,n-1)	if (head[i])
		{
			int v = (n-(ll)i*N%n)%n;
			if (!head[v])	continue;
			memset(cnt,0,sizeof(cnt));
			for (int j = head[v]; j; j = nxt[j])
			{
				int t = val[ver[j]];
				if (t > N/10)	cnt[t/(N/10)][t/(N/100)%10]++;
				else if (t>N/100 && t/(N/1000)%10<t/(N/100)%10)
					cnt[0][t/(N/100)%10]++;
			}
			for (int j = head[i]; j; j = nxt[j])
			{
				int p = ver[j], a = val[p]%10, b = val[p]/10%10;
				if (val[p] < 10)
				{
					rep(t1,a+1,9)	dep(t2,t1-1,0)	sum[p] += cnt[t1][t2];
					dep(t1,a-1,0)	rep(t2,t1+1,9)	sum[p] += cnt[t1][t2];
				}
				else if (b > a)	rep(t1,a+1,9)	dep(t2,t1-1,0)	sum[p] += cnt[t1][t2];
				else	dep(t1,a-1,0)	rep(t2,t1+1,9)	sum[p] += cnt[t1][t2];
			}
		}
		rep(i,1,tot)
		{
			if (m > sum[i])	m -= sum[i];
			else
			{
				rep(j,1,tot)	if ((val[i]*N+val[j])%n==0
				&& check(val[i]*N+val[j]) && --m==0)
				{
					if (val[i]*N+val[j] > inf)	puts("-1");
					else	printf("%I64d%07I64d\n", val[i], val[j]);
					return 0;
				}
			}
		}
	}
	puts("-1");
}