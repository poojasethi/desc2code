#include<cstdio>
#include<string>
#include<cstring>
#include<algorithm>
#include<queue>
#include<cmath>
#include<iostream>
#include<cstdlib>

#define FOR(i,a,b) for(int i=(a);i<=(b);i++)
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)
#define MS0(x) memset(x,0,sizeof(x));

using namespace std;
typedef long long LL;
const int N=200002;
const int mo=1000000007;

int fx[N],pre[N],ev[N],la[N],mk[N],tot,ki[N],kv[N],dl[N],ct[N],fa[N],deep[N],ans;
int p[N][20],an[N][20];
int n,m;

void add(int a,int b){
  ev[++tot]=b;
  pre[tot]=la[a];
  la[a]=tot;
}

void huan(int x,int y){
  while(x!=y){
    mk[y]=x;
    y=fa[y];
    ct[x]++;
  }
}

void dfs(int v){
  int j,y;
  dl[++dl[0]]=v;
  kv[v]=1;
  for(j=la[v];j;j=pre[j]){
    if(ki[j]==0){
      ki[j]=1;
      ki[fx[j]]=1;
      y=ev[j];
      if(kv[y]==0){fa[y]=v;dfs(y);}else huan(y,v);
    }
  }
}
      
      
int geta(int a,int b){
  if(deep[a]>deep[b])swap(a,b);
  FORD(i,19,0)if(deep[b]-deep[a]>=1<<i)ans=LL(ans)*an[b][i]%mo,b=p[b][i];
  if(a==b)return(a);
  FORD(i,19,0)if(p[a][i]!=p[b][i])ans=LL(ans)*an[a][i]%mo*an[b][i]%mo,a=p[a][i],b=p[b][i];
  ans=LL(ans)*an[a][0]%mo*an[b][0]%mo;
  return(p[a][0]);
}


int main(){
  tot=0;
  scanf("%d%d",&n,&m);
  FOR(i,1,m){
    int a,b;
    scanf("%d%d",&a,&b);
    add(a,b);add(b,a);
  }
  FOR(i,1,tot){
    if(i%2==1)fx[i]=i+1;else fx[i]=i-1;
  }
  
  //------main------------------V
  FOR(i,1,n)mk[i]=i,ct[i]=1;

  dfs(1);
  FOR(i,1,n)if(mk[dl[i]]==dl[i]){
    int x=dl[i];
    //cout<<x<<endl;
    if(ct[x]==1)an[x][0]=1;else an[x][0]=2;
    
    if(i!=1)deep[x]=deep[mk[fa[x]]]+1;
    p[x][0]=mk[fa[x]];
    FOR(j,1,19){
      p[x][j]=p[p[x][j-1]][j-1];
      an[x][j]=(LL(an[x][j-1])*an[p[x][j-1]][j-1])%mo;
    }
  }
  scanf("%d",&m);
  FOR(i,1,m){
    int a,b;
    scanf("%d%d",&a,&b);
    ans=1;
    int v=geta(mk[a],mk[b]);
    ans=LL(ans)*an[v][0]%mo;
    printf("%d\n",ans);
  }
}
  



