#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <set>
#include <vector>
#define N 100009
#define mod 1000000007
using namespace std;

vector<int> a[N],b[N];
vector<pair<int ,int > > ask[N];
int f[N],s[N],sum[N],used[N],node[N],ans[N],pow[N];
int root(int x){
	return (f[x]==x)?x: f[x]=root(f[x]);
}

void dfs(int x){
	int i;
	used[x]=2;
	for (i=0;i<b[x].size();i++){
		int j=b[x][i];
		if (used[j]==2){
			if (f[x]==j) continue;
			for(int k=x;k!=j;k=f[k]) node[k]=j;
			s[j]=1;
			continue;
		}
		f[j]=x;
		dfs(j);
	}
	used[x]=1;
}

void tarjan(int x){
	int i;
	used[x]=1;
	for (i=0;i<ask[x].size();i++){
		pair<int,int> tmp;
		tmp=ask[x][i];
		if (used[tmp.second]) {
			int t=root(tmp.second);
			ans[tmp.first]=pow[sum[x]+sum[tmp.second]-2*sum[t]+s[t]];
		}
	}
	for (i=0;i<a[x].size();i++){
		int tmp=a[x][i];
		if (!used[tmp]){
			sum[tmp]=sum[x]+s[tmp];
			tarjan(tmp);
			f[tmp]=x;
		}
	}
	
}

main(){
	int n,m,j,k,i;
	cin>>n>>m;
	pow[0]=1;
	for (i=1;i<=n;i++)
		pow[i]=(pow[i-1]*2)%mod;
	for (i=1;i<=m;i++){
		int x,y;
		scanf("%d%d",&x,&y);
		b[x].push_back(y);
		b[y].push_back(x);
	}
	
	for (i=1;i<=n;i++) node [i]=i;
	
	dfs(1);
	
	for (i=1;i<=n;i++)
	for (j=0;j<b[i].size();j++)
	if (node[i]!=node[b[i][j]])	a[node[i]].push_back(node[b[i][j]]);
	cin>>k;
	for(i=1;i<=k;i++){
		int x,y;
		scanf("%d%d",&x,&y);
		x=node[x];
		y=node[y];
		ask[x].push_back(make_pair(i,y));
		ask[y].push_back(make_pair(i,x));
	}
	for (i=1;i<=n;i++) f[i]=i;
	memset(used,0,sizeof(used));
	sum[1]=s[1];
	tarjan(1); 
	for (i=1;i<=k;i++)
	printf("%d\n",ans[i]);
}
