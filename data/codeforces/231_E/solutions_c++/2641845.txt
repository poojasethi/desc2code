#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;

const int MAX=2000000+100;
const int Mod=1000000007;

int n,m;
int s[MAX],begin[MAX],next[MAX],t[MAX],tot;

void addedge(int x,int y)
{
	t[++tot]=y;
	s[tot]=x;
	next[tot]=begin[x];
	begin[x]=tot;
}

int dfn[MAX],low[MAX],lab,instack[MAX],st[MAX];
int fa[MAX],num,cou[MAX];

void dfs(int u,int pp)
{
	int i,v;
	dfn[u]=low[u]=++lab;
	instack[u]=1;
	st[++st[0]]=u;
	for(i=begin[u];i;i=next[i])
	{
		v=t[i];
		if(v==pp)
			continue;
		if(instack[v])
			low[u]=min(dfn[v],low[u]);
		else if(!dfn[v])
		{
			dfs(v,u);
			low[u]=min(low[v],low[u]);
		}
	}
	if(dfn[u]==low[u])
	{
		++num;
		do
		{
			++cou[num];
			fa[st[st[0]]]=num;
			instack[st[st[0]]]=0;
			--st[0];
		}while(st[st[0]+1]!=u);
	}
}

int T,ans[MAX],x[MAX],y[MAX];

vector<int> e[MAX],other[MAX],quest[MAX];
int hash[MAX],father[MAX],sum[MAX];

int findfather(int u)
{
	if(father[u]==u)
		return u;
	else
	{
		int p=findfather(father[u]);
		father[u]=p;
		return p;
	}
}

void Tarjan(int u)
{
	hash[u]=1;
	int v,i,xx,yy;
	for(i=0;i<(int)other[u].size();++i)
	{
		int now=other[u][i];
		xx=x[now];yy=y[now];
		if(xx!=u)
			swap(xx,yy);
		if(hash[yy])
		{
			int lca=findfather(yy);
			quest[lca].push_back(now);
		}
	}
	for(i=0;i<(int)e[u].size();++i)
	{
		v=e[u][i];
		if(hash[v])continue;
		sum[v]=cou[v]>2;
		sum[v]+=sum[u];
		Tarjan(v);
		father[v]=u;
	}
	for(i=0;i<(int)quest[u].size();++i)
	{
		int now=quest[u][i];
		xx=x[now];yy=y[now];
		ans[now]=sum[xx]+sum[yy]-sum[u]*2+(cou[u]>2);
	}
}

int power[MAX];

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
	int i,a,b;
	scanf("%d %d",&n,&m);
	for(i=1;i<=m;++i)
	{
		scanf("%d %d",&a,&b);	
		addedge(a,b);addedge(b,a);
	}
	dfs(1,0);
	for(i=1;i<=tot;i+=2)
		if(fa[s[i]]!=fa[t[i]])
		{
			a=fa[s[i]];b=fa[t[i]];
			e[a].push_back(b);
			e[b].push_back(a);
		}
	/*
	for(i=1;i<=n;++i)
		printf("%d ",fa[i]);
	printf("\n");
	*/
	for(i=1;i<=num;++i)
		father[i]=i;
	scanf("%d",&T);
	for(i=1;i<=T;++i)
	{
		scanf("%d %d",&a,&b);
		a=fa[a];b=fa[b];
		x[i]=a;y[i]=b;
		other[a].push_back(i);other[b].push_back(i);
	}
	sum[1]=(cou[1]>2);
	Tarjan(1);
	power[0]=1;
	for(i=1;i<MAX;++i)
		power[i]=power[i-1]*2%Mod;
	for(i=1;i<=T;++i)
		printf("%d\n",power[ans[i]]);
}
