//In the Name of God

#include<iostream>
#include<vector>
#include<cstring>
#include<cstdio>
#define pb push_back

using namespace std;

const int maxn=100100,maxlog=18,M=1e9+7;
int n,m,q,color[maxn],d[maxn][maxlog],dp[maxn][maxlog],dis[maxn];
int ret,p[maxn],D,cnt;
bool vis[maxn];
vector<int> g[maxn];

void find_cycles(int v)
{
  vis[v]=true;
  for(int i=1;i<maxlog;i++)
    d[v][i]=d[d[v][i-1]][i-1];
  for(int i=0;i<g[v].size();i++)
    if(!vis[g[v][i]])
      {
	dis[g[v][i]]=dis[v]+1;
	d[g[v][i]][0]=v;
	find_cycles(g[v][i]);
      }
    else if(d[v][0]!=g[v][i] and dis[g[v][i]]<dis[v])
      {
        cnt++;
	for(int u=v,E=d[g[v][i]][0];u!=E;u=d[u][0])
	  color[u]=cnt;
      }
}

void dfs(int v)
{
  vis[v]=true;
  dp[v][0]=(color[v] and 1)+(color[d[v][0]] and color[d[v][0]]!=color[v]);
  for(int i=1;i<maxlog;i++)
    dp[v][i]=dp[v][i-1]+dp[d[v][i-1]][i-1]-(color[d[v][i-1]] and 1);
  for(int i=0;i<g[v].size();i++)
    if(!vis[g[v][i]])
      dfs(g[v][i]);
}

inline int dad(int v,int H)
{
  for(int i=maxlog-1;~i;i--)
    if(dis[d[v][i]]>=H)
      v=d[v][i];
  return v;
}

inline int lca(int v,int u)
{
  if(dis[u]<dis[v])
    swap(v,u);
  u=dad(u,dis[v]);
  if(u==v)
    return v;
  for(int i=maxlog-1;~i;i--)
    if(d[v][i]!=d[u][i])
      v=d[v][i],u=d[u][i];
  return d[v][0];
}

inline void add(int v,int H)
{
  for(int i=maxlog-1;~i;i--)
    if(d[v][i])
      if(dis[d[v][i]]>H)
        ret+=dp[v][i]-(color[d[v][i]] and 1),v=d[v][i];
      else if(dis[d[v][i]]==H)
	ret+=dp[v][i],v=d[v][i];
}

inline int ans(int v,int u)
{
  D=lca(v,u);
  ret=0;
  if(v!=D)
    add(v,dis[D]);
  if(u!=D)
    add(u,dis[D]);
  if(v!=D and u!=D and color[D])
    ret--;
  return p[ret];
}

int main()
{
  ios_base::sync_with_stdio(0);
  p[0]=1;
  for(int i=1;i<maxn;i++)
    p[i]=(p[i-1]+p[i-1])%M;
  scanf("%d%d",&n,&m);
  for(int v,u,i=0;i<m;i++)
    {
      scanf("%d%d",&v,&u);
      g[v].pb(u);
      g[u].pb(v);
    }
  dis[1]=1;
  find_cycles(1);
  memset(vis,false,sizeof vis);
  dfs(1);
  scanf("%d",&q);
  for(int v,u;q--;)
    {
      scanf("%d%d",&v,&u);
      printf("%d\n",ans(v,u));
    }
  return 0;
}
