#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
typedef long long ll;
using namespace std;
const int oo=1000000007;
const int maxn=100002;
const int maxm=200005;
int a[maxm][3],b[maxn],p2[maxn];
int aa[maxm][2],bb[maxn],sum[maxn];
int dfn[maxn],low[maxn],stack[maxn],id[maxn],f[maxn];
bool v[maxn];
int n,m,q,s,top,ss;

void add(int i,int j,int k){
  a[++s][0]=b[i];
  b[i]=s;
  a[s][1]=j;
  a[s][2]=k;
}

void addb(int i,int j){
  aa[++ss][0]=bb[i];
  bb[i]=ss;
  aa[ss][1]=j;
}

void tarjan(int k,int father){
  int i,j;
  dfn[k]=low[k]=++ss;
  stack[++top]=k;
  for (i=b[k];i;i=a[i][0]){
    j=a[i][1];
    if (!dfn[j]){
      tarjan(j,k);
      low[k]=min(low[k],low[j]);
    }
    else if (j!=father) low[k]=min(low[k],dfn[j]);
  }
  if (dfn[k]==low[k]){
    m++;
    do{
      j=stack[top--];
      id[j]=m;
      sum[m]++;
    }while (j!=k);
  }
}

void bridge(){
  int i;
  memset(low,0,sizeof(low));
  memset(dfn,0,sizeof(dfn));
  m=0;
  for (i=1;i<=n;i++)
    if (!dfn[i]){
      ss=0;
      tarjan(i,0);
    }
}

int getfather(int k){
  if (f[k]==k || f[k]==0) return k;
  f[k]=getfather(f[k]);
  return f[k];
}

void lca(int k,int dd){
  int i,j;
  dfn[k]=dd;
  for (i=bb[k];i;i=aa[i][0]){
    j=aa[i][1];
    if (!v[j]){
      v[j]=1;
      lca(j,(sum[j]>2)+dd);
      f[getfather(j)]=getfather(k);
    }
  }
  for (i=b[k];i;i=a[i][0]){
    j=a[i][1];
    low[a[i][2]]=dfn[k]+dfn[j]-2*dfn[getfather(j)]+(sum[getfather(j)]>2);
  }
}

int main(){
  int i,j,k;
  p2[0]=1;
  for (i=1;i<maxn;i++) p2[i]=((ll)p2[i-1]*2)%oo;
  scanf("%d%d",&n,&m);
  while (m--){
    scanf("%d%d",&i,&j);
    add(i,j,0);
    add(j,i,0);
  }
  bridge();
  ss=0;
  for (k=1;k<=s;k+=2){
    i=id[a[k][1]];
    j=id[a[k+1][1]];
    if (i!=j) addb(i,j),addb(j,i);
  }
  scanf("%d",&q);
  memset(b,0,sizeof(b));
  for (s=k=0;k<q;k++){
    scanf("%d%d",&i,&j);
    i=id[i];
    j=id[j];
    add(i,j,k);
    add(j,i,k);
  }
  memset(stack,0,sizeof(stack));
  memset(dfn,0,sizeof(dfn));
  dfn[1]=(sum[1]>2);
  v[1]=1;
  lca(1,0);
  for (i=0;i<q;i++) printf("%d\n",p2[low[i]]);
  return 0;
}
	  	  		  		 			  		   		