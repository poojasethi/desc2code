s, k = map(int, raw_input().split())
F = [1]
total = 1
while len(F) < k and F[-1] <= s :
    val = F[-1]
    F.append(total + val)
    total += val

while F[-1] <= s:
    val = sum(F[-k:])
    F.append(val)
    total += val

C = []
F = F[::-1]
def find_recur(n):
    if n > 0:
        if n in F:
            C.append(n)
        else:
            x = next(x for x in F if x < n)
            if x is not None:
                C.append(x)
                y = find_recur(n - x)
                if y is not None:
                    C.append(y)
    return None
if s in F:
    print 2
    print 0, s
    exit()
else:
    find_recur(s)
    print(len(C))
    print " ".join(map(str, C))