//Yet Another Number Sequence
#include<cstdio>
#include<iostream>
#include<algorithm>
#define rep(i,l,r) for(int i=l;i<=r;i++)
#define re(i,n) for(int i=0;i<n;i++)
#define db(x) cout<<#x<<"="<<(x)<<" "
#define el cout<<endl
using namespace std;
typedef long long ll;
const int MXM=85,mol=1e9+7;

ll N;int M;

void init(){
	cin>>N>>M;
}

void ad(ll&x,const ll&y){
	x=(x+y)%mol;
}


namespace solve{
	int C[MXM][MXM];
	struct mat{
		ll a[MXM][MXM];
	};
	int m;
	mat operator *(const mat&a,const mat&b){
		static mat c;
		re(i,m)
		re(j,m) c.a[i][j]=0;
		re(k,m)
		re(i,m)
		re(j,m) ad(c.a[i][j],a.a[i][k]*b.a[k][j]);
		return c;
	}
	mat Ma={};
	void solve(){
		rep(i,0,M){
			C[i][0]=1;
			rep(j,1,i){
				C[i][j]=(C[i-1][j]+C[i-1][j-1])%mol;
			}
		}
		m=M+1+M+1+1;
		rep(i,0,M)
		rep(j,0,i){
			ad(Ma.a[j+1+(M+1)][i+1],C[i][j]);
			ad(Ma.a[j+1][i+1+(M+1)],C[i][j]);
			ad(Ma.a[j+1+(M+1)][i+1+(M+1)],C[i][j]);
		}
		Ma.a[m-1][0]=1;
		Ma.a[0][0]=1;
		static mat R={};
		re(i,m) R.a[i][i]=1;
		for(ll n=N;n;n>>=1,Ma=Ma*Ma)if (n&1){
			R=R*Ma;
		}
		ll answer=0;
		rep(i,1,m-1) ad(answer,R.a[i][0]);
		cout<<answer<<endl;
	}
}


int main(){
	init();
	solve::solve();
	return 0;
}
