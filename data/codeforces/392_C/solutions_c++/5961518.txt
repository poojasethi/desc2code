#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
typedef long long ll;
const int mod=1000000007;
ll n,m,lim;
ll C[41][41],a[90],b[90][90];
inline void mul1(ll a[90], ll b[90][90])
{
	int i,j;
	ll c[90];
	memset(c,0,sizeof(c));
	for (int i=0; i<=lim; i++)
	{
		for (int j=0; j<=lim; j++)
		{
			c[j]=(a[i]*b[i][j]+c[j])%mod;
		}
	}
	for (int i=0; i<=lim; i++)
	{
		a[i]=c[i];
	}
}
inline void mul2(ll a[90][90], ll b[90][90])
{
	int i,j,k;
	ll c[90][90];
	memset(c,0,sizeof(c));
	for (int i=0; i<=lim; i++)
	{
		for (int j=0; j<=lim; j++)
		{
			for (int k=0; k<=lim; k++)
			{
				c[i][k]=(a[i][j]*b[j][k]+c[i][k])%mod;
			}
		}
	}
	for (int i=0; i<=lim; i++)
	{
		for (int j=0; j<=lim; j++)
		{
			a[i][j]=c[i][j];
		}
	}
}
int main()
{
	scanf("%I64d%I64d",&n,&m);
	lim=m+m+2;
	for (int i=0; i<=m; i++)
	{
		C[i][0]=1;
		for (int j=1; j<=i; j++)
		{
			C[i][j]=(C[i-1][j-1]+C[i-1][j])%mod;
		}
	}
	for (int i=0; i<lim; i++) a[i]=1;
	b[lim-1][lim]=b[lim][lim]=1;
	for (int i=0; i<=m; i++)
	{
		for (int j=i; j<=m; j++)
		{
			b[i][j+m+1]=b[i+m+1][j+m+1]=b[i+m+1][j]=C[j][i];
		}
	}
	while (n)
	{
		if (n&1) mul1(a,b);
		mul2(b,b);
		n>>=1;
	}
	printf("%I64d\n",a[lim]);
	return 0;
}