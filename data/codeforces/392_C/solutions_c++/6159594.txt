#include<iostream>
#include<cstdio>
using namespace std;

const int mod=1000000007;

struct mat {
	long long a[90][90];
};

mat mul(mat A,mat B,int n) {
	mat C;
	int i,j,k;
	for(i=0;i<n;i++)
		for(j=0;j<n;j++) {
			C.a[i][j]=0;
			for(k=0;k<n;k++) {
				C.a[i][j]=(C.a[i][j]+A.a[i][k]*B.a[k][j])%mod;
			}
		}
	return C;
}

long long C[50][50];

void init() {
	int i,j;
	for(i=0;i<50;i++) C[i][0]=1;
	for(i=1;i<50;i++)
		for(j=1;j<=i;j++) {
			C[i][j]=(C[i-1][j]+C[i-1][j-1])%mod;
		}
}

int main() {
	init();
	mat S,D;
	int k,i,j;
	long long m;
	cin>>m>>k;
	int n=2*k+3;
	for(i=0;i<n;i++) for(j=0;j<n;j++) {
		S.a[i][j]=D.a[i][j]=0;
		if(i==j) S.a[i][j]=1;
	}
	for(i=0;i<=k;i++) {
		int d=k+1;
		for(j=0;j<=i;j++) {
			D.a[i][j+d]=C[i][j];
		}
	}
	for(i=k+1;i<=2*k+1;i++) {
		int d=k+1;
		for(j=0;j<=i-k-1;j++) {
			D.a[i][j+d]=D.a[i][j]=C[i-k-1][j];
		}
	}
	D.a[2*k+2][2*k+1]=D.a[2*k+2][2*k+2]=1;
	while(m) {
		if(m&1) S=mul(S,D,n);
		m>>=1;
		D=mul(D,D,n);
	}
	long long ans=0;
	for(i=0;i<=2*k+1;i++) ans=(ans+S.a[2*k+2][i])%mod;
	cout<<ans<<endl;
}





