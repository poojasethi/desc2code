#include<stdio.h>
#include<memory.h>
#define LL __int64
	
LL mod=1000000007,m,n,c[51][51];
struct matrix{
	LL m[101][101];
}A,B;	
	
matrix multi(matrix a,matrix b){	
	matrix c;
	int i,j,k;
	for(i=0;i<m+1;i++){
		for(j=0;j<m+1;j++)
			for(c.m[i][j]=k=0;k<m+1;k++)
				c.m[i][j]=(c.m[i][j]+a.m[i][k]*b.m[k][j])%mod;
	}
	return c;
}	
	
matrix power(LL cf){
	matrix y=B,ret=A;
	for(;cf;cf=cf>>1){
		if(cf&1) ret=multi(ret,y);
		y=multi(y,y);
	}
	return ret;
}	
int main(){
	LL i,j,k;
	for(i=c[0][0]=1;i<=45;i++){
		for(j=c[i][0]=1;j<=i;j++)
			c[i][j]=(c[i-1][j]+c[i-1][j-1])%mod;
	}
	scanf("%I64d%I64d",&n,&k);m=(k+1)<<1;
	for(i=0;i<k+1;i++) A.m[0][i]=1;
	for(i=0;i<k+1;i++) A.m[0][i+k+1]=1;
	A.m[0][m]=0;
	for(i=0;i<=k;i++){
		for(j=i;j<=k;j++)
			B.m[j][i+k+1]=B.m[j+k+1][i]=B.m[j][i]=c[k-i][j-i];
	}
	B.m[m][m]=1,B.m[0][m]=1;
	A=power(n);
	printf("%I64d\n",A.m[0][m]);
	return 0;
}	