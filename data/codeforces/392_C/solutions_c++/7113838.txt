#include <cstdio>
#include <iostream>
#include <vector>
using namespace std;

const int mod = 1e9 + 7;

struct Matrix{
	int n, m;
	vector < vector<int> > a;
	Matrix(int x=0, int y=0, bool t = 0){
		n=x; m=y;
		a.assign(n, vector<int> (m, 0));
		if(t) for(int i=0; i<n; i++) a[i][i] = 1;
	}
	Matrix operator * (const Matrix &x){
		const vector < vector<int> > &b = x.a;
		Matrix res(n, x.m);
		vector < vector<int> > &c = res.a;
		for(int i=0; i<n; i++)
			for(int j=0; j<x.m; j++)
				for(int k=0; k<m; k++)
					c[i][j] = (c[i][j] + 1ll*a[i][k]*b[k][j]) % mod;
		return res;
	}
};

Matrix Pow(const Matrix &a, long long b){
	if(b == 0) return Matrix(a.n, a.n, 1);
	if(b == 1) return a;
	Matrix t = Pow(a, b/2);
	if(b%2) return t*t*a;
	return t*t;
}

int c[100][100];

int main(){
	//freopen("input.in", "r", stdin);
	long long n;
	int k;
	cin >> n >> k;
	Matrix Unit(2*k+3, 2*k+3);
	for(int i=0; i<=k; i++) c[i][0] = c[i][i] = 1;
	for(int i=2; i<=k; i++)
		for(int j=1; j<i; j++) c[i][j] = (c[i-1][j]+c[i-1][j-1]) % mod;
	for(int i=0; i<=k; i++)
		for(int j=0; j<=i; j++) Unit.a[i][j+k+1] = Unit.a[i+k+1][j] = Unit.a[i+k+1][j+k+1] = c[i][j];
	Unit.a[2*k+2][2*k+1] = Unit.a[2*k+2][2*k+2] = 1;
	
	Matrix f0(2*k+3, 1);
	for(int i=0; i<=2*k+1; i++) f0.a[i][0] = 1;
	cout << ( Pow(Unit, n)*f0 ).a[2*k+2][0];

}
