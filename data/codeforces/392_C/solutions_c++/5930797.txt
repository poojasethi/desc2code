#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

long long a[105][105],x[105][105],y[105][105],z[105][105],c[50][50],b[105],an[105],f[50],p2[50],n;
int k,m;
#define mo 1000000007
#define rep(i,j,k)	for(int i=j;i<=k;i++)
void getans(){
	long long t=n-2;
	memset(y,0,sizeof(y));
	rep(i,1,m)	y[i][i]=1;
	while(t){
		if(t&1){
			memset(x,0,sizeof(x));
			rep(i,1,m)	rep(j,1,m)	rep(p,1,m)	x[i][j]=(x[i][j]+a[i][p]*y[p][j])%mo;
			memcpy(y,x,sizeof(x));
		}
		t>>=1;
		memcpy(x,a,sizeof(a));
		memset(z,0,sizeof(z));
		rep(i,1,m)	rep(j,1,m)	rep(p,1,m)	z[i][j]=(z[i][j]+a[i][p]*x[p][j])%mo;
		memcpy(a,z,sizeof(a));
	}
	memset(an,0,sizeof(an));
	rep(i,1,m)	rep(j,1,m)	an[j]=(an[j]+b[i]*y[i][j])%mo;
	cout << (an[m]+an[m-1])%mo << endl;
}
int main(){
	cin >> n >> k;	m=2*k+3;
	f[1]=1;f[2]=2;	rep(i,3,k)	f[i]=(f[i-1]+f[i-2])%mo;
	p2[0]=1;	rep(i,1,k)	p2[i]=p2[i-1]*2%mo;
	int t=0;
	b[++t]=1;	rep(i,1,k)	b[++t]=1;	b[++t]=2;	rep(i,1,k)	b[++t]=2*p2[i]%mo;	b[++t]=1;
	if(n<=2){
		if(n==1)	cout << 1 << endl;	else	cout << (1+2*p2[k])%mo << endl;
		return 0;
	}
	rep(i,0,k)	c[i][0]=c[i][i]=1;
	rep(i,1,k)	rep(j,1,k)	c[i][j]=(c[i-1][j]+c[i-1][j-1])%mo;
	memset(a,0,sizeof(a));
	a[2*k+2][m]=a[2*k+3][m]=1;
	rep(i,k+2,2*k+2)	a[i][i-k-1]=1;
	a[1][k+2]=a[k+2][k+2]=1;
	rep(i,k+3,2*k+2){
		int nk=i-k-3+1;
		rep(j,0,nk){
			a[k+2+j][i]=c[nk][j];
			a[j+1][i]=c[nk][j]*p2[nk-j]%mo;
		}
	}
	getans();
	return 0;	
}