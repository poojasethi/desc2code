n, m = map(int, raw_input().split())
a = m*[None]
b = m*[None]
for i in range(m):
    u, v = map(lambda s: int(s)-1, raw_input().split())
    if u > v: u, v = v, u
    a[i], b[i] = u, v

def adj(i, j):
    if a[i] == a[j] or a[i] == b[j] or b[i] == a[j] or b[i] == b[j]: return False
    if a[j] > b[i] or a[i] > b[j]: return False
    if a[i] > a[j] and b[i] < b[j] or a[j] > a[i] and b[j] < b[i]: return False
    return True

ans = m*[-1]
bad = False

def dfs(i, color):
    global bad
    if bad or ans[i] == color:
        return
    if ans[i] != -1:
        bad = True
        return
    ans[i] = color
    for j in range(m):
        if adj(i, j):
            dfs(j, 1-color)

for i in range(m):
    if ans[i] == -1:
        dfs(i, 0)
if bad:
    print "Impossible"
else:
    print ''.join(map(lambda x: "i" if x == 0 else "o", ans))