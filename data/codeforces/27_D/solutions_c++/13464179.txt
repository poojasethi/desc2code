#include <stdio.h>
#include <algorithm>
#include <iostream>
#include <memory.h>
using namespace std;
int adj[100][100],rr[100],m;
bool dfs(int u,int tr){
	rr[u]=tr;
	for(int i=0;i<m;++i){
		if(adj[u][i]){
			if(rr[i]==-1) if(!dfs(i,tr^1)) return false;
			if(rr[i]==tr)return false;
		}
	}
	return true;
}
int main(){
	int n,a,b,c,d;pair<int,int>pp[100];
	scanf("%d %d",&n,&m);
	memset(adj,0,sizeof(adj));memset(rr,-1,sizeof(rr));
	for(int i=0;i<m;++i){
		scanf("%d %d",&a,&b);
		if(a>b)swap(a,b);
		pp[i]= make_pair(a,b);
	}
	for(int i=0;i<m;++i)
		for(int j=i+1;j<m;++j){
			a=pp[i].first,b= pp[i].second,c= pp[j].first,d= pp[j].second;
			if( ( a<c && c<b && b<d) || ( c<a && a<d && d<b)){
				adj[i][j]=1;adj[j][i]=1;
			}
		}
	for(int i=0;i<m;++i)
		if(rr[i]==-1)
			if(!dfs(i,0)){
				cout<<"Impossible\n"; return 0;
			}
	for(int i=0;i<m;++i)if(rr[i]==0)cout<<"o";else cout<<"i";
	cout<<endl;
}
