#include<bits/stdc++.h>
using namespace std;
const int maxn = 110;
int n,m;
struct Edge
{
    int u,v;
}tt[maxn];
vector<int> G[maxn];
int co[maxn];
bool flag;
void dfs(int u,int c)
{
    co[u]=c;
    for(int i=0;i<G[u].size();i++)
    {
        int v=G[u][i];
        if(co[v]==-1)
            dfs(v,3-c);
        else if(co[v]+co[u]!=3)
            flag=false;
    }
}
int main()
{
    scanf("%d%d",&n,&m);
    for(int i=1;i<=m;i++)
        G[i].clear();
    for(int i=1;i<=m;i++)
    {
        scanf("%d%d",&tt[i].u,&tt[i].v);
        if(tt[i].u>tt[i].v)
            swap(tt[i].u,tt[i].v);
    }
    for(int i=1;i<=m;i++)
        for(int j=i+1;j<=m;j++)
            if((tt[i].u<tt[j].u&&tt[j].u<tt[i].v&&tt[i].v<tt[j].v)||(tt[j].u<tt[i].u&&tt[i].u<tt[j].v&&tt[j].v<tt[i].v))
            {
                G[i].push_back(j);
                G[j].push_back(i);
            }
    memset(co,-1,sizeof(co));
    flag=true;
    for(int i=1;i<=m;i++)
        if(co[i]==-1)
            dfs(i,1);
    if(!flag)
        puts("Impossible");
    else
    {
        for(int i=1;i<=m;i++)
            if(co[i]==1)
                printf("i");
            else
                printf("o");
        puts("");
    }
    return 0;
}
