#include <iostream>
#include <map>
#include <algorithm>
#include <sstream>
#include <cstring>
#include <vector>

#define ff first
#define ss second

using namespace std;

const int maxN = 100 + 10;

int n, m;
pair <int, int> e[maxN];
vector <int> a[maxN];

bool bein (int i, int x) { return e[i].ff < x && x < e[i].ss; }

int f[maxN], fsck = 0;

void dfs (int v, int col)
{
	f[v] = col;
	for (int i = 0; i < a[v].size(); i++)
		if (f[a[v][i]] == col) fsck = 1;
		else if (!f[a[v][i]]) dfs (a[v][i], 3 - col);
}

int main()
{
	cin >> n >> m;
	for (int i = 0; i < m; i++)
	{
		cin >> e[i].ff >> e[i].ss;
		if (e[i].ff > e[i].ss)
			swap (e[i].ff, e[i].ss);
		for (int j = 0; j < i; j++)
			if ((bein (i, e[j].ff) && bein (j, e[i].ss)) ||
				(bein (j, e[i].ff) && bein (i, e[j].ss)) )
				a[j].push_back (i), a[i].push_back (j);
	}

	for (int i = 0; i < m; i++) if (!f[i]) dfs (i, 1);
	if (fsck) cout << "Impossible" << endl;
	else { for (int i = 0; i < m; i++) cout << (f[i] == 1 ? "i" : "o"); cout << endl; }

	return 0;
}
