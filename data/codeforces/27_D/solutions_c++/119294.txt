#include<iostream>
#include<cstdio>

using namespace std;

int s[100];
int d[100];
int m;
bool ins[100][100];

char r[101];

bool between(int p,int q,int r)
{
	return (p<r&&r<q)||(p>r&&r>q);
}

bool intersect(int x,int y)
{
	if (s[x]==s[y]||s[x]==d[y]||d[x]==s[y]||d[x]==d[y]) return false;
	if (between(s[x],d[x],s[y])^between(s[x],d[x],d[y])) return true;
	return false;
}

bool dfs(int x,char sol)
{
	r[x] = sol;
	char rsol = sol=='i'?'o':'i';
	for(int i=0;i<m;i++)
	{
		if (i==x) continue;
		if (ins[i][x])
		{
			if (r[i]==sol) return false;
			if (r[i]==0)
				if (!dfs(i,rsol)) return false;
		}
	}
	return true;
}

int main()
{
	int n;
	scanf("%d%d",&n,&m);

	for(int i=0;i<m;i++)
	{
		scanf("%d%d",&s[i],&d[i]);
		--s[i];--d[i];
	}

	for(int i=0;i<m;i++)
	{
		for(int j=i+1;j<m;j++)
		{
			if (intersect(i,j))
				ins[i][j] = ins[j][i]=1;
		}
	}

	for(int i=0;i<m;i++)
	{
		if (r[i]==0)
			if (!dfs(i,'i'))
			{
				printf("Impossible\n");
				return 0;
			}
	}
	printf("%s\n",r);

	return 0;
}
