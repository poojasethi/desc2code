#include <iostream>

using namespace std;

const int MAXM = 101;
const int UNDEF = -1;
const int IN = 1;
const int OUT = 2;

int n, m;
int edges[MAXM][2];
int colour[MAXM];

bool cross(int u, int v)
{
	int maxu, minu, maxv, minv;
	
	maxu = max(edges[u][0], edges[u][1]);
	maxv = max(edges[v][0], edges[v][1]);
	minu = min(edges[u][0], edges[u][1]);
	minv = min(edges[v][0], edges[v][1]);
	
	return !((maxu >= maxv) && (minu <= minv) || (maxu <= maxv) && (minu >= minv) ||
			 (minu >= maxv) || (maxu <= minv));
}	

bool mark(int v, int c)
{
	if (colour[v] == c)
		return true;
	
	if ((colour[v] != UNDEF) && (colour[v] != c))
		return false;
		
	colour[v] = c;
	
	for (int i = 0; i < m; i++)
		if ((i != v) && cross(v, i) && !mark(i, 3-c))
			return false;
				
	return true;
}
	
int main()
{
	cin >> n >> m;

	for (int i = 0; i < m; i++)
		cin >> edges[i][0] >> edges[i][1];
		
	for (int i = 0; i < m; i++)
		colour[i] = UNDEF;	
	
	for (int i = 0; i < m; i++)
		if (colour[i] == UNDEF)
			if (!mark(i, IN))
			{
				cout << "Impossible";
				return 0;
			}
			
	for (int i = 0; i < m; i++)
		if (colour[i] == IN)
			cout << "i";
		else
			cout << "o";

	return 0;
}
