//Jakub Sygnowski
#include <cstdio>
#include <vector>
using namespace std;
#define REP(I,N) for(int I=0;I<(N);I++)
#define PB push_back
#define MAXV 107
vector<int> adj[MAXV];
int kol[MAXV]; //1,2
bool zeps;
void dfs(int x,int k){
	if (kol[x] && kol[x]!=k){
		zeps=true;
		return;	
	}
	kol[x]=k;
	REP(i,adj[x].size()){
		if (!kol[adj[x][i]]){
			if (k==1)
				dfs(adj[x][i],2);
			else
				dfs(adj[x][i],1);
		}
		else {
			if (kol[adj[x][i]]==k){
				zeps=true;
				return;
			}
		}
	}
}
#define F first
#define S second
pair<int,int> tab[MAXV];
bool kloc(int a,int b){
	if (tab[a].F<tab[b].F && tab[a].S>tab[b].F && tab[a].S<tab[b].S)
		return true;
	return false;
}
void praw(int a,int b){
	if (kloc(a,b) || kloc(b,a)){
	//	if (kloc(a,b))
	//		printf("%d %d\n",a,b);
	//	else
	//		printf("%d %d\n",b,a);

		adj[a].PB(b);
		adj[b].PB(a);
	}
}
int n,m;
char t[]={'x','o','i'};
int main(){
	scanf("%d%d",&n,&m);
	REP(i,m){
		scanf("%d%d",&tab[i].F,&tab[i].S);
		if (tab[i].S<tab[i].F)
			swap(tab[i].F,tab[i].S);
	}
	REP(i,m){
		for(int j=i+1;j<m;j++)
			praw(i,j);
	}
	REP(i,m){
		if (!kol[i])
			dfs(i,1);
	}
	if (zeps)
		printf("Impossible\n");
	else{
		REP(i,m)
			printf("%c",t[kol[i]]);
		printf("\n");
	}
}
