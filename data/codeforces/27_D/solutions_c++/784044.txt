#include <cstdio>
#include <algorithm>
using namespace std;
bool g[103][103];
int a[103], b[103], m, n;
char ans[103];
const char opt[2] = {'o','i'};

bool cross(int a, int b, int c, int d) {
	if (b < a) swap(a, b);
	if (d < c) swap(c, d);
	return (a < c && c < b && b < d) || (c < a && a < d && d < b);
}

bool noans = false;
void dfs(int t, int x) {
	if (ans[t] != 0) {
		if (ans[t] != opt[x]) 
			noans = true;
		return;
	}
	ans[t] = opt[x];
	for (int p = 1; p <= n; ++p) if (g[t][p])
		dfs(p, 1 - x);
}

int main() {
	scanf("%d%d", &m, &n); 
	for (int i = 1; i <= n; ++i) scanf("%d%d", a+i,b+i);
	for (int i = 1; i <= n; ++i) 
		for (int j = 1; j <= n; ++j) if (i != j) 
			g[i][j] = cross(a[i], b[i], a[j], b[j]);
	for (int i = 1; i <= n; ++i) if (ans[i] == 0) dfs(i, 0);
	if (noans) puts("Impossible"); else
		for (int i = 1; i <= n; ++i) putchar(ans[i]);
	return 0;
}

