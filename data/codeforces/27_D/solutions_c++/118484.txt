#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <string>
#include <algorithm>

using namespace std;

int n, m;
int a[100][100];
vector<int> u, v;
int c[100] = {0};

void dfs(int v, int color)
{
	if (c[v] != 0)
	{
		if (c[v] != color)
		{
			cout << "Impossible" << endl;
			exit(0);
		}
		return;
	}

	c[v] = color;
	for (int u = 0; u < m; ++u)
		if (a[v][u])
			dfs(u, color ^ 3);
}

int main()
{
	cin >> n >> m;
	for (int i = 0; i < m; ++i)
	{
		int a, b;
		cin >> a >> b;
		if (a > b)
		{
			int t = a;
			a = b;
			b = t;
		}
		u.push_back(a);
		v.push_back(b);
	}

	for (int i = 0; i < m; ++i)
		for (int j = 0; j < m; ++j)
			a[i][j] = (i != j) && (u[i] != u[j]) && (u[i] != v[j]) && (v[i] != u[j]) && (v[i] != v[j]) && ((u[i] < v[j] && v[j] < v[i]) ^ (u[i] < u[j] && u[j] < v[i]));
	
	for (int i = 0; i < m; ++i)
		if (c[i] == 0)
			dfs(i, 1);

	for (int i = 0; i < m; ++i)
		if (c[i] == 1)
			cout << "i";
		else
			cout << "o";

	cout << endl;
	return 0;
}
