#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <queue>
using namespace std;

int im = 0, m;

struct load{
    int s, e;
    int ans;
}l[510];

bool judge(load a, load b) {
    if (b.s>a.s && b.s<a.e && b.e>a.e) return true;
    if (a.s>b.s && a.s<b.e && a.e>b.e) return true;
    return false;
}

void dfs(int i, int col) {
    if (l[i].ans == -1) {
        l[i].ans = col;
        for (int j = 0; j < m; j++) {
            if (judge(l[i], l[j])) {
                if (col == 0) dfs(j, 1);
                else dfs(j, 0);
            }
        }
    }
    else if (l[i].ans != col) im = 1;
}

int main() {
    ios::sync_with_stdio(false);
    int n;
    cin>>n>>m;
    for (int i = 0; i < m; i++) {
        cin>>l[i].s>>l[i].e;
        if (l[i].s > l[i].e) swap(l[i].s, l[i].e);
        l[i].ans = -1;
    }
    for (int i = 0; i < m; i++)
        if (l[i].ans == -1) dfs(i, 0);
    if (im == 1) cout<<"Impossible";
    else {
        for (int i = 0; i < m; i++) {
            if (l[i].ans == 0) cout<<'i';
            else cout<<'o';
        }
    }
    cout<<endl;

    return 0;
}



  	 						 		  			 	  	 					