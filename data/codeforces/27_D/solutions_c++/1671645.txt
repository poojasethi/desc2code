#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

#define MAXN 200

int adj[MAXN][MAXN], nadj[MAXN], x[MAXN], y[MAXN], vis[MAXN],ok;

void dfs(int u, int c) {
	vis[u] = c;
	
	for (int i=0; i<nadj[u]; i++) {
		int v = adj[u][i];
		if (!vis[v]) dfs(v,3-c);
		else if (vis[v] == c) ok = 0;
	}
	
	return;
}

int main() {
	int n,m;
	scanf("%d%d",&n,&m);
	n = m;
	
	for (int i=0; i<n; i++) {
		int a,b;
		scanf("%d%d",&a,&b);
		if (a>b) { int aux = a;	a = b;	b = aux;	}
		x[i] = a;	y[i] = b;
	}
	
	for (int i=0; i<n; i++)
		for (int j=i+1; j<n; j++)
			if ((x[i] < x[j] && y[i] > x[j] && y[i] < y[j]) || 
				(x[j] < x[i] && y[j] > x[i] && y[j] < y[i])) {
				adj[i][nadj[i]++] = j;	adj[j][nadj[j]++] = i;
			}
	
	ok = 1;
	memset(vis,0,sizeof(vis));
	for (int i=0; i<n; i++)
		if (!vis[i]) {
			dfs(i,1);
		}
	
	if (!ok) printf("Impossible\n");
	else {
		for (int i=0; i<n; i++)
			vis[i] == 1 ? printf("i") : printf("o");
		printf("\n");
	}
	
	return 0;
}