#include<cstdio>
#include<algorithm>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

int m;
bool adj[100][100];

bool cross(int a1,int b1,int a2,int b2){
	if(a1<=a2 && b2<=b1) return false;
	if(a2<=a1 && b1<=b2) return false;
	if(b1<=a2 || b2<=a1) return false;
	return true;
}

bool dfs(int u,int c,int *color){
	if(~color[u]) return true;

	color[u]=c;
	rep(v,m) if(adj[u][v]) {
		if(color[v]==-1){
			if(!dfs(v,1-c,color)) return false;
		}
		else if(color[v]==c) return false;
	}
	return true;
}

int main(){
	int n; scanf("%d%d",&n,&m);
	int a[100],b[100];
	rep(i,m){
		scanf("%d%d",a+i,b+i);
		a[i]--, b[i]--;
		if(a[i]>b[i]) swap(a[i],b[i]);
	}

	rep(u,m) rep(v,m) {
		if(cross(a[u],b[u],a[v],b[v])) adj[u][v]=adj[v][u]=true;
	}

	bool ans=true;
	int color[100];
	fill(color,color+m,-1);
	rep(u,m) ans&=dfs(u,0,color);

	if(!ans) puts("Impossible");
	else{
		rep(u,m) putchar(color[u]==0?'i':'o');
		putchar('\n');
	}

	return 0;
}
