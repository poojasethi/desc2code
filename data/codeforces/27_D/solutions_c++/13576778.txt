#include <bits/stdc++.h>
#define fi first
#define se second

using namespace std;

typedef pair <int,int> ii;

const int maxn=110;

int N,M,mark[maxn];
ii ar[maxn];
vector <int> komsu[maxn];

bool kes(int i,int j){
	int a=ar[i].fi,b=ar[i].se , c=ar[j].fi,d=ar[j].se;
	
	if(a>b) swap(a,b);
	if(c>d) swap(d,c);
	
	if(b>d) swap(a,c) , swap(b,d);
	
	return (a<c && c<b && b<d);
}

void dfs(int node,int make){
	if(mark[node]!=-1){
		if(mark[node]!=make){
			printf("Impossible\n");
			exit(0);
		}
		return;
	}
	
	mark[node]=make;
	
	for(int i=0;i<komsu[node].size();i++)
		dfs(komsu[node][i],!make);
}

int main(){
	scanf("%d %d",&M,&N);
	
	for(int i=1;i<=N;i++)
		scanf("%d %d",&ar[i].fi,&ar[i].se);
	
	for(int i=1;i<=N;i++)
		for(int j=i+1;j<=N;j++)
			if(kes(i,j))
				komsu[i].push_back(j) , komsu[j].push_back(i);
	
	memset(mark,-1,sizeof mark);
	for(int i=1;i<=N;i++)
		if(mark[i]==-1)
			dfs(i,1);
	
	for(int i=1;i<=N;i++)
		if(mark[i]==0)
			printf("o");
		else
			printf("i");
	puts("");
	
	return 0;
}
