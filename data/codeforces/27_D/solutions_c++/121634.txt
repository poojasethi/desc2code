//#include <fstream>
#include <iostream>
using namespace std;
//ifstream cin("input.txt");
//ofstream cout("output.txt");
struct node {
	int x,y;
};
bool b=true;
void dfs (int, int);
int ms [101][101]={0};
int ns [101]={-1};
int N,M;
int main () {
	node edges [101];
	for (int i=0; i<=101; i++) ns[i]=-1;
	cin>>N>>M;
	int a,d;
	for (int i=1; i<=M; i++) {
		cin>>a>>d;
		edges[i].x=min(a,d);
		edges[i].y=max(a,d);
	}
	for (int i=1; i<M; i++) {
		for (int j=i+1; j<=M; j++) {
			if ((edges[i].x>edges[j].x && edges[i].x<edges[j].y && edges[i].y>edges[j].y) ||
				(edges[i].y>edges[j].x && edges[i].y<edges[j].y && edges[i].x<edges[j].x)) {
					ms[i][j]=1;
					ms[j][i]=1;
			}
		}
	}
	for (int i=1; i<=M; i++) 
		if (ns[i]==-1) {
			dfs(i,0);
		}
	if (b==true) {
		for (int i=1; i<=M; i++) {
			if (ns[i]==1) cout<<"o";
			else cout<<"i";
		}
	} else {cout<<"Impossible";}

	return 0;
}
void dfs (int v, int c) {
	if ( b==true){

		ns[v]=c;
		for (int i=1; i<=M; i++) {
			if (ms[v][i]==1)
				if (ns[i]==-1) {
				dfs(i,c ^ 1);
				} else {
					if (ns[v]==ns[i]) {
						b=false;
						break;
					}
			}
		}
	}
}