#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <cstring>
using namespace std;
#define REP(i,n) for(i=0;i<(n);i++)

const char col[]="BRWY";
set< vector<int> > VIS;
vector<int> need(10,0);
int S,T,best;
int F[22][22],u[22];
int A[10],a[10],C[10][10],fir[10],sec[10],num[4][4];
char ans[13][15],tmp[13][15];
int tr[7][8],td[7][8],s[7][8],vis[7][8];

void init(){
        S=20;T=21;
        int i,j;
        REP(i,22)REP(j,22)F[i][j]=0;
}

int find(int x,int flow){
        if (x==T) return flow;
        u[x]=1;
        int i;
        REP(i,22)if (F[x][i]&&!u[x]){
                int tmp=find(i,min(flow,F[x][i]));
                F[x][i]-=tmp;F[i][x]+=tmp;
                return tmp;
        }
        return 0;
}

void maxflow(int &ret){
        memset(u,0,sizeof u);
        int flow=find(S,56);
        while (flow){
                memset(u,0,sizeof u);ret+=flow;
                flow=find(S,56);
        }
}

void solve(){
        int i,j,k,l;
        if (VIS.count(need)) return;
        VIS.insert(need);
        REP(i,10) A[i]=a[i];
        REP(i,10)REP(j,10) C[i][j]=0;
        int ret=0;
        REP(i,10) {
                C[i][i]=min(need[i],A[i]);
                ret+=2*C[i][i];
        }
        if (ret/2+28<=best) return;
        init();
        REP(i,10){
                if (A[i]>need[i]) F[S][i]+=A[i]-need[i];
                if (A[i]<need[i]) F[i+10][T]+=need[i]-A[i];
        }
        REP(i,10)REP(j,10)if (fir[i]==fir[j]||fir[i]==sec[j]||sec[i]==fir[j]||sec[i]==sec[j]) {
                k=min(F[S][i],F[j+10][T]);
                F[S][i]-=k;F[j+10][T]-=k;
                F[i][j+10]+=56;ret+=k;C[i][j]+=k;
        }
        maxflow(ret);
        if (ret>best){
                //bool flag=false;if (ret==41) flag=true;
                best=ret;
                REP(i,13)REP(j,15) ans[i][j]=tmp[i][j];
                REP(i,10)REP(j,10)C[i][j]+=F[j+10][i];
                REP(i,7)REP(j,8)if (tr[i][j]){
                        k=num[s[i][j]][s[i][j+1]];
                        REP(l,10) if (C[l][k]){
                                C[l][k]--;A[l]--;
                                if (s[i][j]==fir[l]||s[i][j+1]==sec[l]){
                                        ans[i+i][j+j]=col[fir[l]];ans[i+i][j+j+2]=col[sec[l]];
                                        //cout<<1<<' '<<col[s[i][j]]<<' '<<ans[i+i][j+j]<<ans[i+i][j+j+2]<<endl;
                                }else {
                                        ans[i+i][j+j]=col[sec[l]];ans[i+i][j+j+2]=col[fir[l]];
                                        //cout<<2<<' '<<col[s[i][j]]<<' '<<ans[i+i][j+j]<<ans[i+i][j+j+2]<<endl;
                                }
                                break;
                        }
                }
                //cout<<endl;
                REP(i,7)REP(j,8)if (td[i][j]){
                        k=num[s[i][j]][s[i+1][j]];
                        REP(l,10) if (C[l][k]){
                                C[l][k]--;A[l]--;
                                if (s[i][j]==fir[l]||s[i+1][j]==sec[l]){
                                        ans[i+i][j+j]=col[fir[l]];ans[i+i+2][j+j]=col[sec[l]];
                                        //cout<<1<<' '<<col[s[i][j]]<<' '<<ans[i+i][j+j]<<ans[i+i+2][j+j]<<endl;
                                }else {
                                        ans[i+i][j+j]=col[sec[l]];ans[i+i+2][j+j]=col[fir[l]];
                                        //cout<<2<<' '<<col[s[i][j]]<<' '<<ans[i+i][j+j]<<ans[i+i+2][j+j]<<endl;
                                }
                                break;
                        }
                }
                REP(i,7)REP(j,8)if(ans[i+i][j+j]=='.')
                REP(l,10)if (A[l]){
                        if (tr[i][j]){
                                A[l]--;ans[i+i][j+j]=col[fir[l]];ans[i+i][j+j+2]=col[sec[l]];
                        }else{
                                A[l]--;ans[i+i][j+j]=col[fir[l]];ans[i+i+2][j+j]=col[sec[l]];
                        }
                        break;
                }
        }
}

void dfs(int x,int y){
        if (x==7) {solve();return;}
        if (y==8) {dfs(x+1,0);return;}
        if (vis[x][y]) {dfs(x,y+1);return;}
        if (y<7&&!vis[x][y+1]){
                vis[x][y]=vis[x][y+1]=1;
                need[num[s[x][y]][s[x][y+1]]]++;
                tmp[x+x][y+y+1]='-';
                tr[x][y]=1;
                dfs(x,y+1);
                vis[x][y]=vis[x][y+1]=0;
                need[num[s[x][y]][s[x][y+1]]]--;
                tmp[x+x][y+y+1]='.';
                tr[x][y]=0;
        }
        if (x<6&&!vis[x+1][y]){
                vis[x][y]=vis[x+1][y]=1;
                need[num[s[x][y]][s[x+1][y]]]++;
                tmp[x+x+1][y+y]='|';
                td[x][y]=1;
                dfs(x,y+1);
                vis[x][y]=vis[x+1][y]=0;
                need[num[s[x][y]][s[x+1][y]]]--;
                tmp[x+x+1][y+y]='.';
                td[x][y]=0;
        }
}

int main(){
        int i,j;
        REP(i,7)REP(j,8) {
                char x;
                cin>>x;
                if (x=='B') s[i][j]=0;
                if (x=='R') s[i][j]=1;
                if (x=='W') s[i][j]=2;
                if (x=='Y') s[i][j]=3;
        }
        int tt=0;
        REP(i,4)for(j=3;j>=i;j--){
                cin>>a[tt];
                fir[tt]=i;sec[tt]=j;num[i][j]=num[j][i]=tt++;
        }
        //REP(i,10)cout<<a[i]<<endl;
        memset(tmp,'.',sizeof tmp);
        best=-1;
        dfs(0,0);
        cout<<best<<endl;
        REP(i,13){
                REP(j,15) cout<<ans[i][j];
                cout<<endl;
        }
}
