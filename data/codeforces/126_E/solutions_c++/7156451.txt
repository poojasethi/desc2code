#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <set>

using namespace std;

#define FOR(i,l,r) for(int i=l;i<r;i++)

vector<int> st;
set< vector<int> > hsh;

char col[5]="BRWY";
int g[25][25];
char board[10][10];
char fin[20][20],tmp[20][20];
int a[10][10],num[10][10],cnt[10],tc[10],x[10],y[10],tot;
int ans=0,S=21,T=22;
int vis[10][10];
int R[10][10],D[10][10],C[10][10],u[25];

inline int MAP(char t){return t=='B'?0:t=='R'?1:t=='W'?2:3;}

int Dfs(int t,int flow){
	if(t==T) return flow;
	u[t]=1;
	FOR(i,0,25) if(g[t][i] && !u[i]){
		int tmp=Dfs(i,min(flow,g[t][i]));
		g[t][i]-=tmp;g[i][t]+=tmp;return tmp;
	}
	return 0;
}
int maxFlow(){
	int res=0;
	while(1){
		memset(u,0,sizeof(u));int dt=Dfs(S,56);
		if(!dt) break;res+=dt;
	}
	return res;
}
void deal(){
	int res=0;
	if(hsh.count(st)) return;hsh.insert(st);
	memcpy(tc,cnt,sizeof(tc));
	memset(C,0,sizeof(C));
	FOR(i,0,10) C[i][i]=min(st[i],tc[i]),res+=2*C[i][i];
	if(res/2+28<=ans) return;
	memset(g,0,sizeof(g));
	FOR(i,0,10) tc[i]>st[i] ? (g[S][i]=tc[i]-st[i]) : (g[i+10][T]=st[i]-tc[i]);
	FOR(i,0,10) FOR(j,0,10) if(x[i]==x[j] || x[i]==y[j] || y[i]==x[j] || y[i]==y[j]){
		int k=min(g[S][i],g[j+10][T]);
		g[S][i]-=k;g[j+10][T]-=k;
		g[i][j+10]+=56;res+=k;C[i][j]+=k;
	}
	res+=maxFlow();
	//printf("%d\n",res);
	if(res<=ans) return;
	
	ans=res;
	memcpy(fin,tmp,sizeof(tmp));
	FOR(i,0,10) FOR(j,0,10) C[i][j]+=g[j+10][i];
	FOR(i,0,7) FOR(j,0,8) if(R[i][j]){
		int k=num[a[i][j]][a[i][j+1]];
		FOR(l,0,10) if(C[l][k]){
			C[l][k]--;tc[l]--;
			if(a[i][j]==x[l]||a[i][j+1]==y[l]) fin[i+i][j+j]=col[x[l]],fin[i+i][j+j+2]=col[y[l]];
			else fin[i+i][j+j]=col[y[l]],fin[i+i][j+j+2]=col[x[l]];
			break;
		}
	}
	FOR(i,0,7) FOR(j,0,8) if(D[i][j]){
		int k=num[a[i][j]][a[i+1][j]];
		FOR(l,0,10) if(C[l][k]){
			C[l][k]--;tc[l]--;
			if(a[i][j]==x[l]||a[i+1][j]==y[l]) fin[i+i][j+j]=col[x[l]],fin[i+i+2][j+j]=col[y[l]];
			else fin[i+i][j+j]=col[y[l]],fin[i+i+2][j+j]=col[x[l]];
			break;
		}
	}
	//printf("%d\n",res);
	//FOR(i,0,13) {FOR(j,0,15) putchar(fin[i][j]);puts("");}
	FOR(i,0,7) FOR(j,0,8) if(fin[i+i][j+j]=='.')
		FOR(l,0,10) if(tc[l]){
			if(R[i][j]) tc[l]--,fin[i+i][j+j]=col[x[l]],fin[i+i][j+j+2]=col[y[l]];
			else tc[l]--,fin[i+i][j+j]=col[x[l]],fin[i+i+2][j+j]=col[y[l]];
			break;
		}
}
void dfs(int x,int y){
	if(x>=7) deal();
	else if(y>=8) dfs(x+1,0);
	else if(vis[x][y]) dfs(x,y+1);
	else{
		if(x<6 && !vis[x+1][y]){
			vis[x][y]=vis[x+1][y]=1;
			st[num[a[x][y]][a[x+1][y]]]++;
			tmp[x+x+1][y+y]='|';
			D[x][y]=1;dfs(x,y+1);D[x][y]=0;
			tmp[x+x+1][y+y]='.';
			st[num[a[x][y]][a[x+1][y]]]--;
			vis[x][y]=vis[x+1][y]=0;
		}
		if(y<7 && !vis[x][y+1]){
			vis[x][y]=vis[x][y+1]=1;
			st[num[a[x][y]][a[x][y+1]]]++;
			tmp[x+x][y+y+1]='-';
			R[x][y]=1;dfs(x,y+1);R[x][y]=0;
			st[num[a[x][y]][a[x][y+1]]]--;
			tmp[x+x][y+y+1]='.';
			vis[x][y]=vis[x][y+1]=0;
		}
	}
}
int main()
{
	FOR(i,0,7) scanf("%s",board[i]);
	FOR(i,0,7) FOR(j,0,8) a[i][j]=MAP(board[i][j]);
	FOR(i,0,4) for(int j=3;j>=i;j--){
		st.push_back(0);scanf("%d",&cnt[tot]),x[tot]=i,y[tot]=j;num[i][j]=num[j][i]=tot++;
	}
	memset(tmp,'.',sizeof(tmp));
	ans=-1;dfs(0,0);printf("%d\n",ans);
	FOR(i,0,13) {FOR(j,0,15) putchar(fin[i][j]);puts("");}
	return 0;
}
