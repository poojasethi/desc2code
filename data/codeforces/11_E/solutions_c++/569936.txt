#include <iostream>
#include <string>
#include <vector>
#include <cmath>

using namespace std;

int eleva(int x,int e)
{
  int r=1;
  while (e>0) {
    e--;
    r=r*x;
  }
  return r;
}

double maxsol(vector<char> &v)
{
  int n=int(v.size());
  /*
  for (int i=0;i<n;i++) {
    cout<<v[i];
  }
  cout<<endl;
  */

  int numnox=0;
  for (int i=0;i<n;i++) {
    if (v[i]!='X') numnox++;
  }
  
  //cout<<"numox "<<numnox<<endl;

  double pimpar;
  if (n%2==0) {
    pimpar=double(numnox)/(2.0*(n+1));
  } else {
    pimpar=double(numnox)/(2.0*n);
  }

  //cout<<"pimpar "<<pimpar<<endl;

  vector<int> signo;
  for (int i=0;i<n;i++) {
    if (v[i]=='L') {
      if (i%2==0) {
	signo.push_back(1);
      } else {
	signo.push_back(-1);
      }
    } else if (v[i]=='R') {
      if (i%2==0) {
	signo.push_back(-1);
      } else {
	signo.push_back(1);
      }
    }
  }
  /*
  cout<<"signo ";
  for (int i=0;i<int(signo.size());i++) {
    cout<<signo[i]<<",";
  }
  cout<<endl;
  */
  vector<int> acum;
  for (int i=0;i<int(signo.size());i++) {
    int suma=signo[i];
    while (i<int(signo.size())-1 and signo[i]==signo[i+1]) {
      i++;
      suma+=signo[i];
    }
    acum.push_back(suma);
  }
  /*
  cout<<"acum ";
  for (int i=0;i<int(acum.size());i++) {
    cout<<acum[i]<<",";
  }
  cout<<endl;
  */

  int sig=1;
  int nummenos1=0;
  int aciertos=0;
  int ultimomenos1=false;
  for (int i=0;i<int(acum.size());i++) {
    acum[i]=acum[i]*sig;
    if (acum[i]<-1) {
      sig=-sig;
      acum[i]=-acum[i];
      n++;
      aciertos+=acum[i];
    } else if (acum[i]==-1) {
      if (i==int(acum.size())-1) {
	ultimomenos1=true;
      } else {
	nummenos1++;
      }
    } else {
      aciertos+=acum[i];
    }
  }
  
  //cout<<aciertos<<","<<nummenos1<<endl;

  if (n%2==1 and ultimomenos1) {
    n++;
    aciertos++;
  } else if (ultimomenos1) {
    nummenos1++;
  }
  if (n%2==1) n++;
  if (2*aciertos<n) {
    aciertos+=nummenos1;
    n+=2*nummenos1;
  }
  double ppar=double(aciertos)/double(n);

  //cout<<"ppar "<<ppar<<endl;
  return int(1000000*100.0*max(ppar,pimpar))/1000000.0;
}

double maxsoltot(string &s)
{
  vector<char> v1;
  for (int i=0;i<int(s.size());i++) {
    v1.push_back(s[i]);
    if ((s[i]=='R' or s[i]=='L') and s[(i+1)%int(s.size())]==s[i]) {
      v1.push_back('X');
    }
  }
  vector<char> v2;
  for (int i=0;i<int(s.size());i++) {
    if ((s[i]=='R' or s[i]=='L') and
	s[(i+int(s.size())-1)%int(s.size())]==s[i]) {
      v2.push_back('X');
    }
    v2.push_back(s[i]);
  }
  return max(maxsol(v1),maxsol(v2));
}


double maxsolbis(string &s)
{
  double maxim=0;
  //cout<<(1<<(int(s.size())+1))<<endl;
  for (int cas=0;cas<(1<<(int(s.size())+1));cas++) {
    vector<char> v;
    int c=cas;
    if (c%2==1) v.push_back('X');
    c=c/2;
    for (int i=0;i<int(s.size());i++) {
      v.push_back(s[i]);
      if (c%2==1) v.push_back('X');
      c=c/2;
    }
    int n=v.size();
    for (int i=0;i<n;i++) {
      v.push_back(v[i]);
      //cout<<v[i];
    }
    //cout<<",";
    bool error=false;
    int aciertos=0;
    for (int i=0;i<int(v.size()) and not error;i++) {
      error=(v[i]!='X') and (v[i]==v[(i+1)%(int(v.size()))]);
      if (v[i]=='L' and i%2==0) aciertos++;
      else if (v[i]=='R' and i%2==1) aciertos++;
    }
    if (not error) {
      maxim=max(maxim,double(aciertos)/double(v.size()));
    }
    //cout<<maxim<<endl;
  }
  return 100*maxim;
}

/*
int main()
{
  int n;
  cin>>n;
  string s(n,'X');
  int casos=eleva(3,n);
  for (int cas=0;cas<casos;cas++) {
    int c=cas;
    for (int i=0;i<n;i++) {
      if (c%3==0) s[i]='L';
      else if (c%3==1) s[i]='R';
      else s[i]='X';
      c=c/3;
    }
    //cout<<"tratando: "<<s<<endl;
    if (maxsolbis(s)!=maxsoltot(s)) {
      cout<<"error: "<<s<<endl;
      cout<<"maxsolbis: "<<maxsolbis(s)<<endl;
      cout<<"maxsoltot: "<<maxsoltot(s)<<endl;
    }
  }
}
*/

int main()
{
  cout.setf(ios::fixed);
  cout.precision(6);
  string s;
  getline(cin,s);
  if (s=="") cout<<0.0<<endl;
  else {
    vector<char> v1;
    for (int i=0;i<int(s.size());i++) {
      v1.push_back(s[i]);
      if ((s[i]=='R' or s[i]=='L') and s[(i+1)%int(s.size())]==s[i]) {
	v1.push_back('X');
      }
    }
    vector<char> v2;
    for (int i=0;i<int(s.size());i++) {
      if ((s[i]=='R' or s[i]=='L') and
	  s[(i+int(s.size())-1)%int(s.size())]==s[i]) {
	v2.push_back('X');
      }
      v2.push_back(s[i]);
    }
    cout<<max(maxsol(v1),maxsol(v2))<<endl;
  }
}

