#include <bits/stdc++.h>

using namespace std;

string s, t;
double best[2005000][2];

int main() {
  ios_base::sync_with_stdio(0);
  int n;
  cin >> s;
  n = s.size();
  for (int i = 0; i < n; i++) {
    t += s[i];
    if (i + 1 < n && s[i] != 'X' && s[i] == s[i+1]) t += 'X';
  }
  if (s[0] == s[n - 1] && s[0] != 'X') {
    if (s[0] == 'L') t += 'X';
    else t = "X" + t;
  }
  s = t;
  n = s.size();
  //  cout << s << endl;
  double lo = 0, hi = 1;
  while (hi - lo > 1e-10) {
    double mid = (lo + hi) / 2;
    best[0][0] = 0.0;
    best[0][1] = -mid;
    for (int i = 0; i < n; i++) {
      best[i+1][0] = best[i][1] - mid;
      best[i+1][1] = best[i][0] - mid;
      if (s[i] != 'X') {
        for (int k = 0; k < 2; k++) {
          if ((k == 0) ^ (s[i] == 'L')) {
            best[i+1][k] = max (best[i+1][k], best[i][k^1] + 1 - mid);
          }
        }
      }
      best[i+1][0] = max (best[i+1][0], best[i+1][1] - mid);
      best[i+1][1] = max (best[i+1][1], best[i+1][0] - mid);
    }
    if (best[n][0] > 0) {
      lo = mid;
    }
    else {
      hi = mid;
    }
  }
  int x = 1e8 * (lo + 1e-10);
  printf ("%d.%06d\n", x / 1000000, x % 1000000);
}
