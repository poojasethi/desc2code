#include <string.h>
#include <stdio.h>
#include <algorithm>

using namespace std;

const long long BIG = 100000000;
char p[1000005], s[2000005];
long long D[2000005];


int main() {
    gets(p);
    int sz = 0, g = 0, n = 0, i;

    for (i = 0; p[i]; i++) {
        s[n++] = p[i];
        if (p[i] != 'X' && p[i] == p[i+1])
            s[n++] = 'X';
    }
    if (s[0] == s[n-1]) {
        if (s[0] == 'L') s[n++] = 'X';
        if (s[0] == 'R') {
            for (i = n; i >= 1; i--)
                s[i] = s[i - 1];
            s[0] = 'X';
            n++;
        }
    }

    int L = 0, R = BIG, M;
    while (L < R) {
        M = (L + R + 1) / 2;
        for (i = 1; i <= n; i++) {
            D[i] = D[i-1] + BIG * ( s[i-1] != 'X' ) - 2 * M;
            if (i >= 2) {
                D[i] = max(D[i], D[i-2] + BIG * ((s[i-2] == 'L') + (s[i-1] == 'R')) - 2 * M);
            }
        }
        if (D[n] >= 0) L = M; else R = M - 1;
    }
    printf("%.6lf\n", L / 1000000.0);
    return 0;
}