// In the name of God

#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstring>
#include <string>
#include <set>
#include <map>
#include <complex>
#include <cmath>
#include <fstream>
#include <iomanip>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<ld> point;
typedef pair<int,int> pii;

string s;
double ans = -1;

inline void make_good()
{
  string s_ = "";
  for(int i=0;i<s.size();++i){
    s_ += s[i];
    if(i < s.size()-1 && s[i] != 'X' && s[i+1] == s[i])
      s_ += 'X';
  }
  s = s_;
}

inline ld solve(string p)
{
  ld nol = 0;
  ld nog = 0;
  int cnt = 0;
  int cur = 0;
  for(int i=0;i<p.size();++i){
    char now;
    if((int)nol % 2 == 0)
      now = 'L';
    else
      now = 'R';
    
    if(p[i] == 'X')
      nol++;
    
    else if(now == p[i]){
      nol++;
      nog++;
      cur = 0;
    }

    else {
      nol += 2;
      nog++;
      cnt += cur;
      cur = 1 - cur;
    }
    
  }
  
  if( (int)nol % 2 == 1){
    nol++;
    cnt += cur;
  }
  
  if(nog * 2 > nol){
    nog -= cnt;
    nol -= 2 * cnt;
  }

  return nog / nol;
}

int main()
{
  cin >> s;
  make_good();

  if(s[0] == s[s.size()-1] && s[0] != 'X')
    ans = max(solve(s + 'X') , solve('X' + s) );
  else
    ans = solve(s);

  ans = floor(ans * 1e8) / 1e8;
  printf("%0.6lf\n", ans*100);

  return 0;
}
