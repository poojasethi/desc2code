def solve(n, points, specialVals):
	pointOrder = []
	specialToPoint = {}
	for i in specialVals:
		specialToPoint[i] = []

	for i in points:
		special = i[1] - i[0]
		if special in specialToPoint:
			specialToPoint[special].append(i)
		else:
			return "NO"

	for i in specialToPoint:
		xs = [specialToPoint[i][x][0] for x in range(len(specialToPoint[i]))]
		xs.sort()
		newPoints = []
		for x in xs:
			newPoints.append([x, x + i])

		specialToPoint[i] = newPoints

	for i in range(len(specialVals)):
		if len(specialToPoint[specialVals[i]]) > 0:
			pointOrder.append(specialToPoint[specialVals[i]][0])
			specialToPoint[specialVals[i]].pop(0)
		else:
			return "NO"

	for i in range(len(pointOrder) - 1):
		if isP1GreaterThanP2(pointOrder[i], pointOrder[i + 1]):
			return "NO"


	return pointOrder

def isP1GreaterThanP2(p1, p2):
	if p1[0] >= p2[0] and p1[1] >= p2[1]:
		return True
	return False




n = int(raw_input())
points = [map(int, raw_input().split()) for i in range(n)]
specialVals = map(int, raw_input().split())

ans = solve(n, points, specialVals)
if ans != "NO":
	print "YES"
	for i in range(len(ans)):
		print " ".join(map(str, ans[i]))
else:
	print ans
