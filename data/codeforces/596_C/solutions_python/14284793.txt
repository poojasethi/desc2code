from collections import defaultdict

n = int(raw_input())
points = {}
for i in range(n):
    x, y = map(int, raw_input().split())
    points[(x, y)] = y - x
ws = map(int, raw_input().split())

possibles = {0:(0,0)}
marked = {}
ans = []

for i in range(n):
    w = ws[i]
    if w not in possibles:
        break
    p = possibles.pop(w)
    ans.append(p)
    marked[p] = True
    x, y = p
    opened = filter(lambda p: p in points, [(x+1,y),(x,y+1)])
    for xx, yy in opened:
        if ((xx == 0 and (xx, yy-1) in marked) or
            (yy == 0 and (xx-1, yy) in marked) or
            ((xx-1, yy) in marked and (xx, yy-1) in marked)):
            possibles[yy-xx] = (xx, yy)


if len(ans) < n:
    print "NO"
else:
    print "YES"
    print "\n".join(map(lambda (x,y): "%d %d" % (x, y), ans))

