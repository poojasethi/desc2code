from collections import defaultdict

n = int(input())

coord = defaultdict(lambda: False)
for i in xrange(n):
  x, y = map(int, raw_input().split())
  coord[(x, y)] = True

warr = map(int, raw_input().split())
wlen = len(warr)

possibilityDiff = defaultdict(lambda: [])
possibilityDiff[0] = [(0, 0)]
numbered = defaultdict(lambda: False)

ind = 0
answer = []
while ind < wlen:
  if len(possibilityDiff[warr[ind]]) == 0:
    break
  pnt = possibilityDiff[warr[ind]].pop(0)
  answer.append(pnt)
  numbered[pnt] = True
  
  p1 = (pnt[0]+1, pnt[1])
  p2 = (pnt[0], pnt[1]+1)
  if coord[p1] and (p1[1] - 1 < 0 or numbered[(p1[0], p1[1]-1)]) and not numbered[p1]:
    possibilityDiff[p1[1] - p1[0]].append(p1)
  if coord[p2] and (p2[0] - 1 < 0 or numbered[(p2[0]-1, p2[1])]) and not numbered[p2]:
    possibilityDiff[p2[1] - p2[0]].append(p2) 
  ind += 1

if ind < wlen:
  print "NO"
else:
  print "YES"
  for item in answer:
    print item[0], item[1]
