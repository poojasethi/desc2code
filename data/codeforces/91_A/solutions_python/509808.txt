#!/usr/bin/env python2
# -*- coding: utf-8 -*-
import sys
from bisect import bisect_left
input = sys.stdin
output = sys.stdout

NO_SOLUTION = -1

def solve(title,word):
    #print title,word
    
    Symbols = {}
    for i,c in enumerate(title):
        if c not in Symbols:
            Symbols[c] = [i]
        else:
            Symbols[c].append(i)
    #print Symbols
    
    n = 0
    prev_pos = len(title)
    for c in word:
        if c not in Symbols:
            return NO_SOLUTION
        positions = Symbols[c]
        #print
        #print 'symbol:', c, 'positions:', positions
        ip = bisect_left(positions, prev_pos+1)
        found = (ip < len(positions))
        if found:
            p = positions[ip]
            #print 'found. ip:', ip, 'p:',p
            #print 'prev:', prev_pos, 'p:', p
            prev_pos = p
        else:
            prev_pos = positions[0]
            #print 'not found. p:', prev_pos
            n += 1
    
    return n

s1 = input.readline().strip()
n = len(s1)
assert 1<=n and n<=10**4

s2 = input.readline().strip()
n = len(s2)
assert 1<=n and n<=10**6

answer = solve(s1,s2)
output.write('%s\n' % (answer))
