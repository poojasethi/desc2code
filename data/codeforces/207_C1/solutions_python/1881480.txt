#include <cstdio>
#include <iostream>
#include <cstdlib>
#include <cmath>
#include <cassert>
#include <cstring>
#include <algorithm>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <sstream>
using namespace std;
#pragma comment(linker, "/STACK:255000000")

typedef long long ll;

#define rep(i, a, b) for(i = (a); i < (b); ++i)
#define repb(i, a, b) for(i = (a) - 1; i >= (b); --i)
#define repd(i, a, b, d) for(i = (a); i < (b); i += (d))
#define repbd(i, a, b, d) for(i = (a) - 1; i >= (b); i -= (d))
#define reps(i, s) for(i = 0; (s)[i]; ++i)
#define repl(i, l) for(i = l.begin(); i != l.end(); ++i)

#define in(f, a) scanf("%"#f, &(a))

bool firstout = 1;

#define out(f, a) printf("%"#f, (a))
#define outf(f, a) printf((firstout) ? "%"#f : " %"#f, (a)), firstout = 0
#define nl printf("\n"), firstout = 1

#define all(x) (x).begin(),(x).end()
#define sqr(x) ((x) * (x))
#define mp make_pair

template<class T>
T &minn(T &a, T b)
{
	if(b < a) a = b;
	return a;
}

template<class T>
T &maxx(T &a, T b)
{
	if(a < b) a = b;
	return a;
}

#define inf 1012345678
#define eps 1e-9


#ifdef XDEBUG
#define mod 23
#else
#define mod 1000000009
#endif

int &madd(int &a, int b)
{
	a += b;
	if(a >= mod) a -= mod;
	return a;
}

int &msub(int &a, int b)
{
	a -= b;
	if(a < 0) a += mod;
	return a;
}

int &mmult(int &a, int b)
{
	return a = (ll)a * b % mod;
}

int mdiv(ll a, ll b, ll m)
{
	a = (a % m + m) % m;
	b = (b % m + m) % m;
	if(a % b == 0) return a / b;
	return (a + m * mdiv(-a, m, b)) / b;
}

#define N 7012
#define M 1012

#define bor bora

char C[N];
int P[N];

struct bora
{
	int d, dd;
	bora *A[26];

	bora()
	{
		int i;
		d = dd = 0;
		for(i = 0; i < 26; ++i) A[i] = NULL;
	}

	bor * add(char cc)
	{
		int c = cc - 'a';
		if(!A[c]) A[c] = new bora();
		++A[c]->d;
		return A[c];
	}

	ll add(int i)
	{
		++dd;
		ll res = d;
		if(P[i] == -1) return res;
		int c = C[i] - 'a';
		if(!A[c]) A[c] = new bora();
		return res + A[c]->add(P[i]);
	}
};


int n, m, q;
bor* B[N];

int main()
{
#ifdef XDEBUG
	freopen("in.txt", "rt", stdin);
#else
#endif

	int i, j, k;
	char c;
	int a, d;
	
	int ts;	
#if 0
	int tss;
	in(d, tss);
	rep(ts, 1, tss + 1)
#else
	for(ts = 1; in(d, q) > 0; ++ts)
#endif
	{
		ll res = 1;
		n = m = 1;
		B[0] = new bor();
		B[0]->d = B[0]->dd = 1;
		P[0] = -1;
		for(; q--;)
		{
			char s[5];
			char &c = s[0];
			in(d, k);
			in(d, i); --i;
			in(s, s);
			if(k == 1)
			{
				B[n++] = B[i]->add(c);
				res += B[n - 1]->dd;
			}
			else
			{
				C[m] = c;
				P[m] = i;
				res += B[0]->add(m++);
			}
			out(I64d, res); nl;
		}
	}

	return 0;
}

