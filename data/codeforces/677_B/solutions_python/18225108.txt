n,h,k=map(int,raw_input().split())
l=map(int,raw_input().split())
height_full=0
height_left_on_top=h
i=0
tim=0
if n==1:
	print (l[0]//k) if l[0]%k==0 else (l[0]//k)+1


else:
	# l.append(10**18)
	# n+=1
	while 1:
		if i>=n or l[i]>h:
			break

		if l[i]<=height_left_on_top:
			height_full+=l[i]
			height_left_on_top-=l[i]
			i+=1

		else:
			height_needed_to_be_crushed=l[i]-height_left_on_top



			if (height_needed_to_be_crushed%k==0):
				tim+=(height_needed_to_be_crushed//k)
				if (height_full-height_needed_to_be_crushed)<0:
					height_left_on_top=h
					height_full=0
				else:
					
					height_left_on_top+=height_needed_to_be_crushed
					height_full-=height_needed_to_be_crushed

			else:
				tim+=(height_needed_to_be_crushed//k)+1
				if (height_full-(k*(height_needed_to_be_crushed//k+1)))<0:
					height_left_on_top=h
					height_full=0
				else:
					height_left_on_top+=(k*((height_needed_to_be_crushed//k)+1))
					height_full-=k*((height_needed_to_be_crushed//k)+1)
					# height_left_on_top+=height_needed_to_be_crushed
					# height_full-=height_needed_to_be_crushed				
				
	if height_full%k==0:
		tim+=height_full//k

	else:
		tim+=height_full//k+1
	print tim		