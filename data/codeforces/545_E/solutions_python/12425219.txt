import heapq as hq

class edge(object):
    def __init__(self, to, w, nr):
        self.to = to
        self.w = w
        self.nr = nr
        
n, m = map(int, raw_input().split())
adj = [[] for _ in range(n + 1)]
for i in range(1, m+1):
    u, v, c = map(int, raw_input().split())
    adj[u].append((v, c, i))
    adj[v].append((u, c, i))
root = int(raw_input())
vis = [False] * (n+1)
q = [(0, 0, root, 0)]
ans = []
tot = 0
while q:
    d, c, n, e = hq.heappop(q)
    if vis[n]:
        continue
    ans.append(e)
    tot += c
    vis[n] = True
    for v, c, i in adj[n]:
        if not vis[v]:
            hq.heappush(q, (d+c, c, v, i))
ans = map(str, ans)
print tot
print " ".join(ans[1:])