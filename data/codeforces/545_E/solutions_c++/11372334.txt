#include <iostream>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <climits>
#include <queue>
#include <set>

using namespace std;

typedef long long ll;

const int N = 300009;

// Array of vectors
vector<pair<int, int> > g[N+1];
vector<int> id[N+1], p(N+1, -1), l(N+1, 0);
vector<ll> d(N+1, LLONG_MAX);

int main() {
  int n, m;
  cin >> n >> m;

  for (int i = 0; i < m; i++) {
    int v, w, c;
    cin >> v >> w >> c;
    g[v].push_back(make_pair(w, c));
    g[w].push_back(make_pair(v, c));
    id[v].push_back(i+1);
    id[w].push_back(i+1);
  }

  int s;
  cin >> s;

  set<pair<ll, int> > q;
  d[s] = 0;
  q.insert(make_pair(0, s));

  while (!q.empty()) {
    int v = (*q.begin()).second;
    q.erase(q.begin());

    for (int i = 0; i < g[v].size(); i++) {
      int to = g[v][i].first;
      ll len = g[v][i].second + d[v];
      if (d[to] > len || d[to] == len && g[v][i].second < l[to]) {
        p[to] = id[v][i];
        l[to] = g[v][i].second;
        q.erase(make_pair(d[to], to));
        d[to] = len;
        q.insert(make_pair(d[to], to));
      }
    }
  }

  ll ans = 0;
  for (int i = 1; i <= n; i++)
    if (i != s)
      ans += l[i];

  cout << ans << endl;

  for (int i = 1; i <= n; i++)
    if (i != s)
      cout << p[i] << " ";
  cout << endl;
}
