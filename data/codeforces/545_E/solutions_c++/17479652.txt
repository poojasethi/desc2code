#include "stdio.h"
#include "vector"
#include "queue"
#include "algorithm"
#define INF 1e16
using namespace std;
class edge{
    public: int x,y,w,index;
    public: long long d;
    public: bool operator<(edge const& x)const{
        return d>x.d||(d==x.d&&w>x.w);
    }
};
vector<edge> v[300001];
int main(){
    int n,m,s;
    edge x;
    scanf("%d %d",&n,&m);
    for(int i=0;i<m;i++){
        scanf("%d %d %d",&x.x,&x.y,&x.w);
        x.index=i+1,x.d=INF;
        v[x.x].push_back(x);
        swap(x.x,x.y);
        v[x.x].push_back(x);
    }
    scanf("%d",&s);
    vector<bool> check(n+1,false);
    vector<int> ans;
    priority_queue<edge> q;
    long long sum=0;
    for(int i=0;i<v[s].size();i++){
        edge temp=v[s][i];
        temp.d=temp.w;
        q.push(temp);
    }
    check[s]=true;
    int c=0;
    while(!q.empty()){
        edge p=q.top();
        q.pop();
        if(check[p.y]) continue;
        check[p.y]=true;
        sum+=p.w;
        ans.push_back(p.index);
        for(int i=0;i<v[p.y].size();i++){
            edge temp=v[p.y][i];
            temp.d=p.d+temp.w;
            q.push(temp);
        }
    }
    printf("%I64d\n",sum);
    for(int i=0;i<ans.size();i++) printf("%d ",ans[i]);
}
