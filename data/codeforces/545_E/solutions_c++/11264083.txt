#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define mp(i,j) make_pair(i,j)
#define MAX 10e+17

int main()
{
	ll i,e,n,m,u,v,w,cost,size;

	cin>>n>>m;

	vector <pair<ll,pair<ll,ll> > > graph[n+1];

	ll done[n+1];
	ll sp[n+1];
	vector <ll> taken;
	
	for(i=1;i<=m;i++) {
		cin>>u>>v>>w;

		graph[u].push_back(mp(i,mp(v,w)));
		graph[v].push_back(mp(i,mp(u,w)));
	}
	memset(done,0,sizeof(done));

	for(i=1;i<=n;i++) sp[i]= MAX;
	cin>>u;

	priority_queue <pair<pair<ll,ll>,pair<ll,ll> > > q;

	q.push(mp(mp(0,0),mp(u,-1)));
	sp[u] = 0;

	cost= 0;
	while(!q.empty()) {
		u = (q.top()).second.first;
		e = (q.top()).second.second;
		w = (-(q.top()).first.second);
		q.pop();
		

		if(done[u]==1) continue;
		done[u] = 1;

		cost += w;

		taken.push_back(e);

		size = graph[u].size();

		for(i=0;i<size;i++) {
			e = graph[u][i].first;
			v = graph[u][i].second.first;
			w = graph[u][i].second.second;

			if(done[v]==1) continue;
			if(sp[v] >= sp[u] + w) {
				sp[v] = sp[u] + w;
				q.push(mp(mp(-sp[v],-w),mp(v,e)));
			}
		}
	}
	cout<<cost<<endl;

	size = taken.size();
	for(i=1;i<size;i++) cout<<taken[i]<<" ";
	cout<<endl;

	return 0;
}
