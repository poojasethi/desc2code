#include <bits/stdc++.h>
using namespace std;

vector <pair <int, pair <int, int > > > g[300001]; // dokad waga numer

priority_queue <pair <long long , pair <int, pair <int, int> > > > Q;
// dlugosc sciezki v waga skad (numer krawedzi)
vector <int> kra;
long long res=0;

bool obsi[300001];

void dikstra () {
	while (!Q.empty()) {
		long long s=-Q.top().first;
		int w= -Q.top().second.first;
		int v=Q.top().second.second.first;
		int skad= Q.top().second.second.second;
		Q.pop();
		//cout << s << " " << w << " " << v << " " << skad << "\n";
		if (obsi[v]==false) {
			obsi[v]=true;
			res+=w;
			kra.push_back (skad);
			for (int i=0; i<g[v].size(); i++) {
				int x=g[v][i].first;
				int waga= g[v][i].second.first;
				int nr=g[v][i].second.second;
				if (obsi[x]==false) {
					Q.push (make_pair (-s-waga, make_pair ( -waga, make_pair (x, nr)))); 
				}
			}
		}
	}
}

int main () {
	int n, m, a, b, w, u;
	cin >> n >> m;
	for (int i=1; i<=m; i++) {
		cin >> a >> b >> w;
		g[a].push_back (make_pair (b, make_pair(w, i)));
		g[b].push_back (make_pair (a, make_pair(w, i)));
	}
	cin >> u;
	Q.push ( make_pair (0, make_pair(0, make_pair (u, 0))));
	dikstra ();
	cout << res << "\n";
	for (int i=1; i<kra.size(); i++) cout << kra[i] << " ";
	cout << "\n";
}