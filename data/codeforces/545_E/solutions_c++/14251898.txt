#include<bits/stdc++.h>
		 
using namespace std;
#define foreach(i,x) for(type(x)i=x.begin();i!=x.end();i++)
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define ROF(ii,aa,bb) for(int ii=aa;ii>=bb;ii--)
#define type(x) __typeof(x.begin())

#define dbg(x) cerr << (#x) << " --> " << (x) << endl
#define y1 sdfsdfsdf
#define int long long
#define pii pair<int,int>
#define mod 1000000007
#define N (int)(3e5+10)
#define mp make_pair
#define pb push_back
#define sd second
#define ft first
#define endll puts("")
#define endl '\n'
#define inf mod
int n,m,a,b,c,cost,x,ata,H[N],sumcost;
vector<pii >V[N];
vector<int>ans;
map<pii , pii >edge;
priority_queue<pair< pii  , pii > >Q;
 main(){
	cin >> n >> m;
	FOR(i,1,m){
		scanf("%lld %lld %lld",&a,&b,&c);
		V[a].pb(mp(b,c));
		V[b].pb(mp(a,c));
		edge[mp(a,b)] = mp(c,i);
		edge[mp(b,a)] = mp(c,i);
	}
	cin >> a;
	Q.push(mp(mp(0,0),mp(a,0)));
	while(!Q.empty()){
		cost = Q.top().ft.ft;
		x = Q.top().sd.ft;
		ata = Q.top().sd.sd;
		Q.pop();
		if(H[x]) continue;
		H[x] = 1;
		sumcost += edge[mp(ata,x)].ft;
		if(ata)
			ans.pb(edge[mp(ata,x)].sd);
		foreach(it,V[x])
			if(!H[it->ft])
				Q.push(mp(mp(cost - it->sd , -it->sd), mp(it->ft , x)));
	}
	cout << sumcost << endl;
	foreach(it,ans) printf("%lld ",*it);
}
