#include <iostream>
#include <queue>
#include <vector>
#include <utility>
using namespace std;

#define mk make_pair
#define fi first
#define se second

struct st
{
    int x,y,z;
} v[300005];

priority_queue < pair < pair < pair<long long,int>, int> , int> > h;
vector <int> a[300005];
int w[300005],p[300005],i,n,m,x,nr,t,y,d;
long long s,c;


int main()
{
    cin >> n >> m;
    for (i=1;i<=m;i++)
    {
        cin >> v[i].x >> v[i].y >> v[i].z;
        a[v[i].x].push_back(i);
        a[v[i].y].push_back(i);
    }
    cin >> x;
    h.push(mk(mk(mk(0,0),x),-1));
    s=0;
    nr=-1;
    while (!h.empty())
    {
        c=h.top().fi.fi.fi;
        d=h.top().fi.fi.se;
        x=h.top().fi.se;
        t=h.top().se;
        h.pop();
        if (w[x]==1)
            continue;
        w[x]=1;
        p[++nr]=t;
        s-=d;
        for (i=0;i<a[x].size();i++)
        {
            y=v[a[x][i]].x+v[a[x][i]].y-x;
            if (w[y]==0)
                h.push(mk(mk(mk(c-v[a[x][i]].z,-v[a[x][i]].z),y),a[x][i]));
        }
    }
    cout << s << "\n";
    for (i=1;i<=nr;i++)
        cout << p[i] << ' ';
    return 0;
}
