#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#define rep(i,a,b) for(int i=a;i<=b;i++)
using namespace std;
const int maxm=6e5,maxn=3e5;
const long long inf=1ll<<62;
int n,m,head[maxn+1],nexe[maxm+1],u[maxm+1],v[maxm+1],e[maxm+1],st;
int tt=0;
void add(int a,int b,int c)
{
	tt++;
	u[tt]=a;
	v[tt]=b;
	e[tt]=c;
	nexe[tt]=head[a];
	head[a]=tt;
}
void read()
{
	scanf("%d%d",&n,&m);
	rep(i,1,m)
	{
		int a,b,c;
		scanf("%d%d%d",&a,&b,&c);
		add(a,b,c);
		add(b,a,c);
	}
	scanf("%d",&st);
}
int pr[maxn+1];
long long d[maxn+1];
typedef pair<long long,int> pii;
priority_queue<pii, vector<pii>,greater<pii> > q;

void Dij()
{
	rep(i,1,n)if(i!=st)d[i]=inf;
	d[st]=0;
	q.push(pii(0,st));
	while(!q.empty())
	{
		pii a=q.top();
		q.pop();
		if(d[a.second]!=a.first)continue;
		int x=a.second,y;
		for(int i=head[x];i;i=nexe[i])
		{
			if(e[i]+d[x]<d[v[i]])
			{
				d[v[i]]=e[i]+d[x];
				pr[v[i]]=i;
				q.push(pii(d[v[i]],v[i]));
			}
			else if(d[x]+e[i]==d[v[i]]&&e[i]<e[pr[v[i]]])
			{
				pr[v[i]]=i;
			}
		}
	}
}
void work()
{
	Dij();
	long long ans=0;
	rep(i,1,n)if(i!=st)ans+=e[pr[i]];
	printf("%lld\n",ans);
	rep(i,1,n)
	{
		if(i!=st)printf("%d ",(pr[i]+1)/2);
	}
	printf("\n");
}
int main()
{
	read();
	work();
	return 0;
}
