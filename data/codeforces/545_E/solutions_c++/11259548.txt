#include <bits/stdc++.h>
using namespace std;

const int N=300010;
struct node
{
    int nd, edge, val;
    long long int dist;
    bool operator <(const node & an)const
    {
        if(dist!=an.dist)
            return dist>an.dist;
        return val>an.val;
    }
} tmp;
int n, m, u, v, w[N];
long long int sum;
vector< pair<int,int> >adj[N];
priority_queue<node>Q;
bool pr[N], vis[N];

int main()
{
   //freopen("r.txt","r",stdin);
   scanf("%d %d",&n,&m);
   for(int i=1;i<=m;i++)
   {
       scanf("%d %d %d",&u, &v, &w[i]);
       adj[u].push_back(make_pair(v, i)), adj[v].push_back(make_pair(u, i));
   }
   scanf("%d",&u);
   tmp.nd=u, tmp.dist=0, tmp.edge=0, tmp.val=0;
   Q.push(tmp);
   while(!Q.empty())
   {
       long long int nd=Q.top().nd, dist=Q.top().dist, edge=Q.top().edge;
       Q.pop();
       if(vis[nd])
          continue;
       vis[nd]=1, pr[edge]=1;
       sum+=w[edge];
       for(int j=0;j<adj[nd].size();j++)
       {
           int to=adj[nd][j].first, ed=adj[nd][j].second;
           tmp.nd=to, tmp.dist=dist+w[ed], tmp.edge=ed, tmp.val=w[ed];
           Q.push(tmp);
       }
   }
   printf("%I64d\n", sum);
   for(int i=1;i<=m;i++)
     if(pr[i])
        printf("%d ",i);

    return 0;
}
