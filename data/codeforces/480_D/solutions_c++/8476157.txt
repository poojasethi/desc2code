#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<time.h>
#include<string>
#define cl(a,b)	memset(a,b,sizeof(a))
#define max(x,y) ((x)>(y)?(x):(y))
#define min(x,y) ((x)<(y)?(x):(y))
#define REP(i,n) for(int i=0;i<n;++i)
#define REP1(i,a,b) for(int i=a;i<=b;++i)
#define REP2(i,a,b) for(int i=a;i>=b;--i)
#define MP make_pair
#define LL long long
#define ULL unsigned long long
#define X first
#define Y second
#define MAXN 100050
using namespace std;
int dp[505][1005];
int f[1005];
struct node
{
	int l,r,w,s,v;
	void in()
	{
		scanf("%d%d%d%d%d",&l,&r,&w,&s,&v);
	}
}a[1005];
bool cmp(node a,node b)
{
	return a.r<b.r||(a.r==b.r&&a.l>b.l);
}
int main() {
	int n,s;
	scanf("%d%d",&n,&s);
	for(int i=0;i<n;++i)
		a[i].in();
	a[n].l=0,a[n].r=n*2,a[n].w=a[n].v=0,a[n].s=s;
	sort(a,a+n+1,cmp);
	for(int i=0;i<=n;++i)
	{
		for(int j=a[i].w;j<=s;++j){
			int w=min(j-a[i].w,a[i].s);
			int now=a[i].l;
			f[now]=0;
			for(int k=0;k<i;++k)
			{
				if(a[k].l>=a[i].l){
					while(now<a[k].r)
					{
						now++;
						f[now]=f[now-1];
					}
					f[now]=max(f[now],f[a[k].l]+dp[k][w]);
				}
			}
			dp[i][j]=f[now]+a[i].v;
		}
	}
	printf("%d\n",dp[n][s]);
	return 0;
}
