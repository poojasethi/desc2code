#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <vector>
#include <cmath>
using namespace std;

const int MAXN = 1005;
struct node{
  int l,r,w,s,v;
};

node a[MAXN];
int dp[MAXN][MAXN];
int tem[MAXN][MAXN];

bool cmp(node a,node b)
{
    return a.r<b.r || a.r==b.r&&a.l>b.l;
}

int main()
{
    int n,m;
    scanf("%d%d",&n,&m);
    for(int i=1;i<=n;i++){
     scanf("%d%d%d%d%d",&a[i].l,&a[i].r,&a[i].w,&a[i].s,&a[i].v);
    }
    a[0].l=0 , a[0].r=2*n , a[0].w=0 , a[0].s=m , a[0].v=0;
    sort(a,a+n+1,cmp);
    for(int i=0;i<=n;i++){
        int mx=min(a[i].s,m-a[i].w),j;
        memset(tem,0,sizeof(tem));
        for(j=0;a[j].r<=a[i].l;j++);
        for(int k=a[i].l+1;k<=a[i].r;k++){
           for(int s=0;s<=mx;s++)tem[k][s]=tem[k-1][s];
           for(;j<i&&a[j].r==k;j++){
               if(a[j].l<a[i].l)continue;
               for(int s=0;s<=mx;s++)tem[k][s]=max(tem[k][s],tem[ a[j].l ][s] + dp[j][s]);
           }
        }
        for(int s=0;s<=mx;s++)dp[i][s+a[i].w]=tem[a[i].r][s]+a[i].v;
        for(int s=1;s<=m;s++)dp[i][s]=max(dp[i][s],dp[i][s-1]);
    }
    printf("%d\n",dp[n][m]);
    return 0;
}