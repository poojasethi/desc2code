#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <set>
#include <map>
#include <string>
#include <iostream>

using namespace std;

#define MAXN 510
#define MAXS 1010

int pd[MAXN][MAXS];
vector<int> vet[MAXN*2];
int n, tam;
int in[MAXN], out[MAXN], w[MAXN], s[MAXN], v[MAXN];

int busca(int pos, int atual) {
    if (pd[pos][atual]!=-1) {
        return pd[pos][atual];
    }
    int aux[2*MAXN];
    aux[in[pos]]=0;
    int i, j, k;
    for (i=in[pos]+1; i<=out[pos]; i++) {
        aux[i]=aux[i-1];
        for (j=0; j<vet[i].size(); j++) {
            int k=vet[i][j];
            if (k!=pos && in[k]>=in[pos] && w[k]<=atual) {
                int teste=busca(k, min(atual-w[k], s[k]));
                aux[i]=max(aux[i], teste+aux[in[k]]);
            }
        }
    }
    return pd[pos][atual] = aux[out[pos]]+v[pos];
}

int main() {
    scanf("%d %d", &n, &tam);
    int i, j;
    for (i=1; i<=n; i++) {
        scanf("%d %d %d %d %d", &in[i], &out[i], &w[i], &s[i], &v[i]);
        vet[out[i]].push_back(i);
    }
    in[0]=0;
    out[0]=2*n;
    v[0]=0;
    memset(pd, -1, sizeof(pd));
    printf("%d\n", busca(0, tam));
    return 0;
}































