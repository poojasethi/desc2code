#include <stdio.h>
#include <algorithm>
using namespace std;
struct Box
{
	int in, out, w, s, v;
	bool operator < (const Box &_box) const
	{
		if(in != _box.in)
			return in < _box.in;
		if(out != _box.out)
			return out > _box.out;
		return w + s > _box.w + _box.s;
	}
};
int n, ans, mw, nxt[500], f[500][1001], g[501];
Box box[500];
int main()
{
	scanf("%d%d", &n, &mw);
	for(int i = 0; i < n; i++)
		scanf("%d%d%d%d%d", &box[i].in, &box[i].out, &box[i].w, &box[i].s, &box[i].v);
	sort(box, box + n);
	for(int i = 0; i < n; i++)
	{
		nxt[i] = n;
		for(int j = n - 1; j > i; j--)
		{
			if(box[j].in >= box[i].out)
				nxt[i] = j;
		}
	}
	for(int i = n - 1; i >= 0; i--)
	{
		for(int j = 0; j <= mw; j++)
		{
			for(int k = n - 1; k > i; k--)
			{
				g[k] = g[k + 1];
				if(box[k].w <= j && box[k].out <= box[i].out)
					g[k] = max(g[k], g[nxt[k]] + f[k][min(j - box[k].w, box[k].s)]);
			}
			f[i][j] = g[i + 1] + box[i].v;
		}
	}
	for(int i = n - 1; i >= 0; i--)
	{
		g[i] = g[i + 1];
		if(box[i].w <= mw)
			g[i] = max(g[i], g[nxt[i]] + f[i][min(mw - box[i].w, box[i].s)]);
	}
	printf("%d\n", g[0]);
	getchar(); getchar();
	return 0;
}
