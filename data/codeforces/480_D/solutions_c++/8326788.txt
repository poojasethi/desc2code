#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;
int n,S,dp[505][1005],i,j,k,ans[2005],now,head[2005],next[2005],e[2005],chang[2005],o;
struct node {int x,y,w,s,v;} a[505];
int cmp(node i,node j) {return i.y-i.x<j.y-j.x;}
void add(int a,int b,int c,int d)
{
    e[a]=c;
    next[a]=head[b];
    head[b]=a;
    chang[a]=d;
}
int main()
{
    scanf("%d%d",&n,&S);
    for (i=1; i<=n; i++)
        {scanf("%d%d%d%d%d",&a[i].x,&a[i].y,&a[i].w,&a[i].s,&a[i].v); a[i].x++; a[i].y++;}
    sort(a+1,a+n+1,cmp);n++;
    a[n].x=1; a[n].y=2*n; a[n].s=S;
    for (i=1; i<=n; i++)
    {
        for (j=a[i].w; j<=S; j++)
        {
            o=0;
            for (k=1; k<i; k++)
            if (a[k].x>=a[i].x && a[k].y<=a[i].y)
                add(++o,a[k].y,a[k].x,dp[k][min(j-a[i].w,a[i].s)]);
            ans[0]=0;
            for (k=1; k<=2*n; k++)
            {
                ans[k]=ans[k-1];
                now=head[k];
                while (now!=0)
                {
                    ans[k]=max(ans[k],ans[e[now]]+chang[now]);
                    now=next[now];
                }
            }
            dp[i][j]=ans[2*n]+a[i].v;
            for (k=0; k<=2*n; k++) head[k]=next[k]=e[k]=0; o=0;
        }
    }
    cout<<dp[n][S];
    return 0;
}
