#include <cstdio>
#include <algorithm>
#define min(A,B) (((A)<(B))?(A):(B))
#define N 1111
struct fiv{
	int in,out,w,s,v;
	bool operator< (fiv k) const{
		return out < k.out || out == k.out && in > k.in;
	}
}a[N];
int d[N][N],dd[N],n,m;
int main(){
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; i ++ )
		scanf("%d%d%d%d%d", &a[i].in, &a[i].out, &a[i].w, &a[i].s, &a[i].v);
	a[0].out = 1000;
	a[0].s = m;
	std::sort(a, a + n + 1);
	for (int i = 0; i <= n; i ++ )
		for (int j = a[i].w; j <= m; j ++ ){
			int tmp = 0, ww = min(a[i].s, j - a[i].w);
			for (; a[tmp].out < a[i].in; tmp ++ );
			dd[a[i].in - 1] = 0;
			for (int k = a[i].in; k <= a[i].out; k ++ ){
				dd[k] = dd[k - 1];
				for (; a[tmp].out == k; tmp ++ ){
					if (a[tmp].in < a[i].in) continue;
					if (tmp == i) continue;
					if (dd[a[tmp].in] + d[tmp][ww] > dd[k])
						dd[k] = dd[a[tmp].in] + d[tmp][ww];
				}
			}
			d[i][j] = d[i][j - 1];
			if (dd[a[i].out] + a[i].v > d[i][j]) d[i][j] = dd[a[i].out] + a[i].v;
			//printf("%d %d %d\n",i,j,d[i][j]);
		}
	printf("%d\n", d[n][m]);
}
