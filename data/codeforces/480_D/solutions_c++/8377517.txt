#include <stdio.h>
#include <algorithm>
#include <vector>
#include <set>
#include <string.h>
using namespace std;
int n,total_w,last[501];
int tbl[501][1001];
struct q{
	int in,out,w,s,val;
	bool operator() (q a,q b){
		return a.out<b.out || (a.out==b.out && a.in>b.in);
	}
}su[501];
int back(int k,int total_w){
	if(k==0)
		return 0;
	if(tbl[k][total_w]==-1){
		vector<int> d(k,0);
		int i;
		for(i=0;i<k;i++){
			if(su[i].in>=su[k].in && total_w>=su[i].w){
				if(last[i]!=-1)
					d[i]=d[last[i]];
				d[i]+=back(i,min(su[i].s,total_w-su[i].w))+su[i].val;
			}
			if(i!=0 && d[i-1]>d[i])
				d[i]=d[i-1];
		}
		tbl[k][total_w]=d[k-1];
	}
	return tbl[k][total_w];
}
int main(){
	memset(tbl,-1,sizeof(tbl));
	scanf("%d %d",&n,&total_w);
	int i,j;
	for(i=0;i<n;i++)
		scanf("%d %d %d %d %d",&su[i].in,&su[i].out,&su[i].w,&su[i].s,&su[i].val);
	su[i].in=0;
	su[i].out=2*n;
	su[i].w=0;
	su[i].s=total_w;
	su[i].val=0;
	n++;
	std::sort(su,su+n,q());
	for(i=0;i<n;i++){
		for(j=i-1;j>=0;j--){
			if(su[j].out<=su[i].in)
				break;
		}
		last[i]=j;
	}
	printf("%d\n",back(n-1,total_w));
	return 0;
}
