#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <string>
using namespace std;

const int maxn=1022;
struct rectangle
{
	long long x1, x2, y1, y2;
	rectangle(){}
	rectangle(int ax, int ay, int bx, int by)
	{
		x1=min(ax, bx);
		x2=max(ax, bx);
		y1=min(ay, by);
		y2=max(ay, by);
	}
	long long dist2(rectangle u)
	{
		int dx=0, dy=0;
		if(x2<u.x1)
			dx=u.x1-x2;
		else
			if(u.x2<x1)
				dx=x1-u.x2;

		if(y2<u.y1)
			dy=u.y1-y2;
		else
			if(u.y2<y1)
				dy=y1-u.y2;

		return dx*dx+dy*dy;
	}
}p[maxn], last;

int n;
long long a, b;
long long ax, ay, bx, by;
bool linked[maxn][maxn];
long long dist[maxn];
int q[maxn*maxn], now, z;
long long maxint=2100000022;

int main()
{
	cin>>a>>b;
	cin>>ax>>ay>>bx>>by;
	cin>>n;
	p[0]=rectangle(ax, ay, ax, ay);
	p[n+1]=rectangle(bx, by, bx, by);
	for(int i=1;i<=n;++i)
	{
		int x1, y1, x2, y2;
		cin>>x1>>y1>>x2>>y2;
		p[i]=rectangle(x1, y1, x2, y2);
	}
	for(int i=0;i<=n+1;++i)
		for(int j=0;j<=n+1;++j)
			if(p[i].dist2(p[j])<=a*a)
				linked[i][j]=true;
			else
				linked[i][j]=false;
	q[0]=0;
	now=0;
	z=0;
	for(int i=1;i<=n+1;++i)
		dist[i]=maxint;
	dist[0]=0;
	while(now<=z)
	{
		int s=q[now];
		for(int i=0;i<=n;++i)
			if(linked[s][i])
				if(dist[i]>dist[s]+1)
				{
					dist[i]=dist[s]+1;
					q[++z]=i;
				}
		++now;
	}
	double ans=maxint;
	for(int i=0;i<=n;++i)
		if(linked[i][n+1])
		{
			double d=double(a+b)*dist[i];
			d+=sqrt(double(p[i].dist2(p[n+1])));
			ans=min(ans, d);
		}
	if(ans==maxint)
		cout<<-1<<endl;
	else
		cout<<ans<<endl;
	return 0;
}