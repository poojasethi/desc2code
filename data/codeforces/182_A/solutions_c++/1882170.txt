#include <cstdio>
#include <cstring>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <cstdlib>
#include <cmath>
#include <set>
#include <vector>
#include <utility>
#include <string>
#include <map>
using namespace std;
#define eps 1e-7
#define pw(x) ((x)*(x))
const double pi=acos(-1.0);
typedef long long LL;
struct P
{
    LL x,y;
    P () {}
    P(LL x,LL y) : x(x) ,y(y) {}
    P operator - (const P & b){
        return P (x-b.x,y-b.y);
    }
    P operator + (const P & b) {
        return P (x+b.x,y+b.y);
    }
    LL operator * (const P & b) {
        return x*b.y-y*b.x;
    }
    bool operator < (const P & b) const {
        return x<b.x;
    }
}p[1200],s[1200],st,ed;
int dis(P a,P b)
{
    return pw(a.x-b.x)+pw(a.y-b.y);
}
int cal(P a,P b,P c)
{
    if(a.y==b.y) {
        swap(a.x,a.y);
        swap(b.x,b.y);
        swap(c.x,c.y);
    }
    if(a.y>b.y) swap(a,b);
    if(c.y>=a.y&&c.y<=b.y) return pw(c.x-a.x);
    return min(dis(c,a),dis(c,b));
}
int is[1200][1200];
int vst[1200];
int q[1200][2],f,r;
int a,b,n;
double bfs()
{
    f=r=0;
    q[r][0]=0 , q[r++][1]=0;
    double ans=-1;
    while(f<r) {
        int id=q[f][0];
        int step=q[f][1];
        if(is[id][n+1]) {
            if(id==0) return sqrt(dis(st,ed));
            if(ans<-0.5||ans>step*(a+b)+sqrt(cal(p[id],s[id],ed))) {
                ans=step*(a+b)+sqrt(cal(p[id],s[id],ed));
            }
        }
        for(int i=1;i<=n;i++){
            if(!vst[i]&&is[id][i]){
                vst[i]=1;
                q[r][0]=i;
                q[r++][1]=step+1;
            }
        }
        f++;
    }
    return ans;
}
int main()
{
    cin >> a >> b;
    cin >> st.x >> st.y >> ed.x >> ed.y;
    cin >> n;
    for(int i=1;i<=n;i++) cin >> p[i].x >> p[i].y >> s[i].x >> s[i].y;
    for(int i=1;i<=n;i++) if(cal(p[i],s[i],st)<=a*a) is[0][i]=is[i][0]=1;
    for(int i=1;i<=n;i++) if(cal(p[i],s[i],ed)<=a*a) is[n+1][i]=is[i][n+1]=1;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++){
            if(cal(p[j],s[j],p[i])<=a*a||cal(p[j],s[j],s[i])<=a*a) is[i][j]=1;
        }
    }
    for(int i=1;i<=n;i++) for(int j=1;j<=n;j++) if(is[i][j]) is[j][i]=1;
    if(dis(st,ed)<=a*a) is[0][n+1]=is[n+1][0]=1;
    double ans=bfs();
    if(ans<-0.5) cout << "-1";
    else cout << ans;
    cout << endl;
}
