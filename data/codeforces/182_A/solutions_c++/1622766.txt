#include<stdio.h>
#include<string.h>
#include<cmath>

#define minn(a,b) (a>b?b:a)
#define maxx(a,b) (a>b?a:b)
#define abss(a) ((a)>0?(a):-(a))
#define swap(a,b) a=a^b,b=a^b,a=a^b
#define cls(a) memset(a,0,sizeof(a))
#define INF 0x1f1f1f1f

int ax,ay,bx,by;
int n;
int trax[1010],tray[1010],trbx[1010],trby[1010];
int A,B;

double dist(int a,int b)
{
	int x,y;
	if ((trax[a]<=trax[b] && trax[b]<=trbx[a]) || (trax[a]<=trbx[b] && trbx[b]<=trbx[a]) || (trax[a]>=trax[b] && trbx[a]<=trbx[b]) )
		x=0;
	else
		x=minn(abss(trax[a]-trbx[b]),abss(trbx[a]-trax[b]));
	if ((tray[a]<=tray[b] && tray[b]<=trby[a]) || (tray[a]<=trby[b] && trby[b]<=trby[a]) || (tray[a]>=tray[b] && trby[a]<=trby[b]) )
		y=0;
	else
		y=minn(abss(tray[a]-trby[b]),abss(trby[a]-tray[b]));
	return sqrt(x*x+y*y);
}

bool can(int a,int b)
{

	if (dist(a,b)<=A)
		return true;
	else
		return false;
}

bool visited[1010];
int list[2][1010];

int main()
{
//	freopen("1.txt","r",stdin);
	int i,j;
	scanf("%d%d",&A,&B);
	scanf("%d%d%d%d",&ax,&ay,&bx,&by);
	scanf("%d",&n);
	for (i=1;i<=n;i++)
	{
		scanf("%d%d%d%d",&trax[i],&tray[i],&trbx[i],&trby[i]);
		if (trbx[i]<trax[i])
			swap(trbx[i],trax[i]);
		if (trby[i]<tray[i])
			swap(trby[i],tray[i]);
	}

	trax[0]=trbx[0]=ax;
	tray[0]=trby[0]=ay;
	trax[n+1]=trbx[n+1]=bx;
	tray[n+1]=trby[n+1]=by;
	cls(visited);
	double ans=INF;
	int now=0,con=0;
	bool find=false;
	list[0][0]=1;
	list[0][1]=0;

	while (!find && list[now][0]>0)
	{
		list[1-now][0]=0;
		for (i=1;i<=list[now][0];i++)
		{
			for (j=1;j<=n;j++)
			{
				if (!visited[j] && can(list[now][i],j))
				{
					visited[j]=true;
					list[1-now][++list[1-now][0]]=j;
				}
			}
			if (can(list[now][i],n+1))
			{
				find=true;
				double tmp=dist(list[now][i],n+1)+con*(A+B);
				if (tmp<ans)
					ans=tmp;
			}
		}
		con++;
		now=1-now;
	}
	if (ans==INF)
		printf("-1\n");
	else
		printf("%f\n",ans);
	return 0;
}
