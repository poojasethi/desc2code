#include<cstdio>
#include<iostream>
#include<queue>
#include<cstring>
#include<cmath>
using namespace std;

const int MAXN = 1000 + 10;

struct haogou
{
	int x1,x2,y1,y2;
}hg[MAXN];

double dis[MAXN][MAXN],d[MAXN];
int f[MAXN];
bool vis[MAXN];
int n,t1,t2;


double hgdis(int i,int j){
  int x1,x2,y1,y2;
  x1=max(hg[i].x1,hg[j].x1);
  x2=min(hg[i].x2,hg[j].x2);
  y1=max(hg[i].y1,hg[j].y1);
  y2=min(hg[i].y2,hg[j].y2);
  x2=max(x1-x2,0);
  y2=max(y1-y2,0);
  return sqrt(x2*x2+y2*y2);
}//两个壕沟的最短距离

void bfs()
{
	int i,k;
	queue<int> q;
	for (i=0;i<=n;i++) d[i]=-1;
	vis[0]=1,d[0]=0,f[0]=0;
	q.push(0);
	while(!q.empty())
	{
		k=q.front();
		q.pop();
		for(i=0;i<n;i++)
		{
			if(dis[k][i]<=t1)
			{
				if(dis[k][i]+f[k]*t2<d[i] || d[i]<0)
				{
					d[i]=dis[k][i]+f[k]*t2;
					f[i]=f[k]+1;//每个壕沟长度都小于b,故走一个壕沟一定消耗a+b时间 
					if(!vis[i])
					{
						vis[i]=1;
						q.push(i);
					}
				}
			}
		}
		//vis[k]=0;
	}
	
}

int main()
{
	int i,j;
	scanf("%d%d",&t1,&t2);
  	t2+=t1;
  	scanf("%d%d%d%d%d",&hg[0].x1,&hg[0].y1,&hg[1].x1,&hg[1].y1,&n);
  	hg[0].x2=hg[0].x1,hg[0].y2=hg[0].y1;
  	hg[1].x2=hg[1].x1,hg[1].y2=hg[1].y1;
  	n+=2;
  	for(i=2;i<n;i++) 
  	{
  		scanf("%d%d%d%d",&hg[i].x1,&hg[i].y1,&hg[i].x2,&hg[i].y2);
  		if(hg[i].x1>hg[i].x2) swap(hg[i].x1,hg[i].x2);
  		if(hg[i].y1>hg[i].y2) swap(hg[i].y1,hg[i].y2);
  	}
  	for (i=1;i<n;i++)
    	for (j=0;j<i;j++)
      		dis[i][j]=dis[j][i]=hgdis(i,j);
	bfs();
	if (d[1]<0) cout<<"-1\n";
  	else printf("%.10f\n",d[1]);
	return 0;
}
				  	        	 	  				 	   		