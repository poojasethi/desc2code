#include<cstdio>
#include<cmath>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<queue>
using namespace std;
int a,b;

struct node{
    int lx,ly,rx,ry;
}s[1005];

int n,m;

double dist[1005];

int bj[1005];


bool Inqueue[1005];

int dis(node x,node y){


    int a=max(0,max(x.lx,y.lx)-min(x.rx,y.rx));
    int b=max(0,max(x.ly,y.ly)-min(x.ry,y.ry));

    return a*a+b*b;
}


double spfa()
{

    for(int i=0;i<m;i++){dist[i]=-1,bj[i]=Inqueue[i]=0;}

    dist[0]=0,Inqueue[0]=1;

    queue<int>q;

    q.push(0);

    while(!q.empty())
    {

        int u=q.front();q.pop();

        Inqueue[u]=0;

        for(int i=0;i<m;i++)
        {

           int tmp=dis(s[u],s[i]);
           if(tmp<=a*a)
           {
               if(dist[i]==-1||dist[i]>(a+b)*bj[u]+sqrt((double)tmp))
               {
                   dist[i]=(a+b)*bj[u]+sqrt((double)tmp);

                   bj[i]=bj[u]+1;
                   if(!Inqueue[i]) {Inqueue[i]=1,q.push(i);}
               }
           }
        }
    }
    return dist[1];

}

int main()
{

    scanf("%d%d",&a,&b);

    scanf("%d%d%d%d",&s[0].lx,&s[0].ly,&s[1].lx,&s[1].ly);
    s[0].rx=s[0].lx,s[0].ry=s[0].ly;
    s[1].rx=s[1].lx,s[1].ry=s[1].ly;
    scanf("%d",&m);

    for(int i=2;i<2+m;i++){
        scanf("%d%d%d%d",&s[i].lx,&s[i].ly,&s[i].rx,&s[i].ry);
        if(s[i].lx>s[i].rx) swap(s[i].lx,s[i].rx);
        if(s[i].ly>s[i].ry) swap(s[i].ly,s[i].ry);
    }

    m+=2;

    double ans=spfa();

    if(ans==-1) puts("-1");
    else printf("%.9lf\n",ans);

}
