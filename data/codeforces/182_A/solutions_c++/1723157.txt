#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
using namespace std;
#define MAXN 1005
#define INF 1e12
int a,b,n;
struct edge{
  int lx,ly,rx,ry;
  edge(){}
  edge(int a,int b,int c,int d):lx(a),ly(b),rx(c),ry(d){}
}list[MAXN];
double getdis(const edge& a,const edge& b){
  int t1=max(a.lx,b.lx)-min(a.rx,b.rx);
  int t2=max(a.ly,b.ly)-min(a.ry,b.ry);
  return sqrt(t1*t1+t2*t2);
}
double spfa(){
  int i,j;
  double dis[MAXN];
  int dfn[MAXN];
  int que[MAXN],in[MAXN],q1,q2;
  for(i=0;i<=n+1;i++)
    dis[i]=INF;
  dis[0]=0;
  memset(dfn,0,sizeof(dfn));
  memset(in,0,sizeof(in));
  q1=q2=0;
  in[que[q2++]=0]=1;
  while(q1<q2){
    int now;
    in[now=que[q1++]]=0;
    for(i=0;i<=n+1;i++){
      double tmp=getdis(list[now],list[i]);
      if(tmp<=a&&dis[i]>(a+b)*dfn[now]+tmp){
        dis[i]=(a+b)*dfn[now]+tmp;
        dfn[i]=dfn[now]+1;
        if(!in[i]) in[que[q2++]=i]=1;
      }
    }
  }
  return dis[1];
}
int main(){
  int i,j;
  scanf("%d%d",&a,&b);
  int t1,t2,t3,t4;
  scanf("%d%d%d%d",&t1,&t2,&t3,&t4);
  list[0]=edge(t1,t2,t1,t2);
  list[1]=edge(t3,t4,t3,t4);
  scanf("%d",&n);
  for(i=2;i<=n+1;i++){
    scanf("%d%d%d%d",&t1,&t2,&t3,&t4);
    if(t1>t3) swap(t1,t3);
    if(t2>t4) swap(t2,t4);
    list[i]=edge(t1,t2,t3,t4);
  }
  double res=spfa();
  if(res==INF) printf("-1\n");
  else printf("%.9lf\n",res);
  return 0;
}
    
