#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <queue>
#define INF 1<<25
using namespace std;
const int MAXn=1000+100;
int vis[MAXn];
int f[MAXn];//从起点到i所经过的壕沟数 
double dis[MAXn][MAXn],d[MAXn];//d[i]从起点到i的最短距离 
int a,b,n;

struct haogou{
	int x1,y1,x2,y2;
} hg[MAXn];



double hgdis(int i,int j){
	int a,b,c,d,X,Y;
	a=max(hg[i].x1,hg[j].x1);
	b=min(hg[i].x2,hg[j].x2);
	c=max(hg[i].y2,hg[j].y2);
	d=min(hg[i].y1,hg[j].y1);
	X=max(a-b,0);
	Y=max(c-d,0);
	return sqrt(X*X+Y*Y);
}

void bfs(){
	queue<int> q;
	q.push(0); 
	int k; 
	while(!q.empty()){
		k=q.front();
		vis[k]=1;
		q.pop();		
		for(int i=0;i<n+2;i++){
		    if(dis[k][i]<=a){
		    	if(dis[k][i]+f[k]*(a+b)<d[i] || d[i]==INF){
		    		d[i]=dis[k][i]+f[k]*(a+b);
		    		f[i]=f[k]+1;
                    q.push(i);
					
		    	}
		    	     
				//i访问
				//新的路径时间=dis[k][i]+从起点到K的时间 
				//d[i]=min(新的路径时间，原有路径时间) 
				//q.push
		    }	
		}
		vis[k]=0;
	}
	
	
} 
 
	
int main(){
	
	scanf("%d%d",&a,&b);
	scanf("%d%d%d%d",&hg[0].x1,&hg[0].y1,&hg[1].x1,&hg[1].y1);//将起点，终点看做点壕沟 
	hg[0].x2=hg[0].x1;hg[0].y2=hg[0].y1;hg[1].y2=hg[1].y1;hg[1].x2=hg[1].x1; 
	scanf("%d",&n);
	for(int i=2;i<n+2;i++){
		scanf("%d%d%d%d",&hg[i].x1,&hg[i].y1,&hg[i].x2,&hg[i].y2);
		if(hg[i].x1>hg[i].x2) swap(hg[i].x1,hg[i].x2);
		if(hg[i].y1<hg[i].y2) swap(hg[i].y1,hg[i].y2);
	} 	
	memset(vis,0,sizeof(vis));
	
	for(int i=0;i<n+2;i++)
	  for(int j=0;j<i;j++){
	  	dis[i][j]=dis[j][i]=hgdis(i,j);
	  }
	  
	d[0]=0; 
	f[0]=0;
	for(int i=1;i<n+2;i++) d[i]=INF;
	bfs();
	if(d[1]==INF) printf("-1\n");
	else printf("%.10f\n",d[1]);
	return 0;
}
	 	 	  				 		 		    	 						 	