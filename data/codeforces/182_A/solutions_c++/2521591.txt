#include <cstdio>
#include <cstring>
#include <algorithm>
#include <ctime>
#include <iostream>
#include <cmath>
using namespace std;

typedef unsigned int USN;
typedef long long LL;
typedef unsigned long long ULL;

#define rep(i,l,r) for (int i=(l); i<=(r); i++)
#define repd(i,r,l) for (int i=(r); i>=(l); i--)

#define maxn 1010
#define INF 1000000000
#define eps 1e-9

struct point
{
	int x,y;
};

struct trench
{
	point a,b;
};

trench p[maxn];

double pdis(point a, point b)
{
	return sqrt(double((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)));
}

double calc(point a, trench b)
{
	if (b.a.x==b.b.x)
		if ((b.a.y-a.y)*(b.b.y-a.y)<=0)
			return abs(b.a.x-a.x);
		else  return min(pdis(a,b.a),pdis(a,b.b));
	else  if ((b.a.x-a.x)*(b.b.x-a.x)<=0)
			return abs(b.a.y-a.y);
		else  return min(pdis(a,b.a),pdis(a,b.b));
}

double dis(trench a, trench b)
{
	return min(min(calc(a.a,b),calc(a.b,b)),min(calc(b.a,a),calc(b.b,a)));
}

int g[maxn][maxn];
int dist[maxn], vis[maxn];

void lemon()
{
	int delay, shooting; scanf("%d%d",&delay,&shooting); point e;
	scanf("%d%d%d%d",&p[0].a.x,&p[0].a.y,&e.x,&e.y); p[0].b=p[0].a;
	int n; scanf("%d",&n);
	rep(i,1,n) scanf("%d%d%d%d",&p[i].a.x,&p[i].a.y,&p[i].b.x,&p[i].b.y);
	
	rep(i,0,n)
		rep(j,0,n)
			if (dis(p[i],p[j])<=delay+eps)
				g[i][j]=1;
			else  g[i][j]=INF;
	
	rep(i,0,n) dist[i]=INF; dist[0]=0;
	memset(vis,0,sizeof vis);
	rep(i,0,n)
	{
		int mi=INF, mini=0;
		rep(i,0,n) if (!vis[i] && dist[i]<mi) mi=dist[i], mini=i;
		if (mi==INF) break;
		vis[mini]=1;
		rep(i,0,n) dist[i]=min(dist[i],dist[mini]+g[mini][i]);
	}
	
	double final=INF;
	rep(i,0,n)
	{
		double x=calc(e,p[i]);
		if (x<=delay+eps && dist[i]!=INF)
			final=min(final,double(dist[i])*(delay+shooting)+x);
	}
	if (final+eps>=INF) printf("-1\n"); else printf("%.20lf\n",final);
}

int main()
{
	ios::sync_with_stdio(true);
	#ifndef ONLINE_JUDGE
		freopen("182A.in","r",stdin);
	#endif
	lemon();
	return 0;
}