#include <stdio.h>
#include <math.h>
#include <algorithm>
using namespace std;

const int N=1000+10;
const double maxmax=2000000.0;
const double epsi=0.0000001;
struct point { double x,y; };
struct segment { point A,B; };
point A,B;
segment S,t[N];
int i,j,k,n,v;
double kk,run,hide,res,dx,dy,need[N][N],a[N],mmin;
bool f[N];

void read_data()
{
 scanf("%lf%lf",&run,&hide);
 scanf("%lf%lf%lf%lf",&A.x,&A.y,&B.x,&B.y);
 scanf("%d",&n);
 S.A=A; S.B=A; t[0]=S;
 S.A=B; S.B=B; t[n+1]=S;
 for (i=1;i<=n;i++ )
  {
   scanf("%lf%lf%lf%lf",&A.x,&A.y,&B.x,&B.y);
   if ( A.x>B.x ) { kk=A.x; A.x=B.x; B.x=kk; }
   if ( A.y>B.y ) { kk=A.y; A.y=B.y; B.y=kk; }
   S.A=A; S.B=B; t[i]=S;
  }
 n++;
}

double module(double x)
{
 if ( x>0 ) return x;
  else return -x;
}

void work()
{
 for ( i=0;i<=n;i++ )
  for ( j=0;j<=n;j++ )
   {
    if ( min(t[i].B.x,t[j].B.x)>=max(t[i].A.x,t[j].A.x) ) dx=0;
     else dx=min(module(t[i].B.x-t[j].A.x),module(t[j].B.x-t[i].A.x));
    if ( min(t[i].B.y,t[j].B.y)>=max(t[i].A.y,t[j].A.y) ) dy=0;
     else dy=min(module(t[i].B.y-t[j].A.y),module(t[j].B.y-t[i].A.y));
    if ( i==j || dx*dx+dy*dy > run*run ) need[i][j]=maxmax;
     else 
      if ( j<n ) need[i][j]=hide+run;
            else need[i][j]=sqrt(dx*dx+dy*dy);
   }
}

void dijikstra()
{
 f[0]=true;
 v=0;
 for ( i=1;i<=n;i++ )
  a[i]=maxmax;
 for ( i=1;i<=n;i++ )
  {
   for ( j=0;j<=n;j++ )
    if ( a[j]>a[v]+need[v][j] )
     a[j]=a[v]+need[v][j];
   
   mmin=maxmax;
   for ( j=0;j<=n;j++ )
    if ( !f[j] && mmin>a[j] )
     {
      mmin=a[j];
      v=j;
     }
   f[v]=true;
   if ( v==n ) break;
  }
 res=a[n];
}

void write_data()
{
 if ( res==maxmax ) printf("-1\n"); else
 printf("%.5lf\n",res);
}

main()
{
 read_data();
 work();
 dijikstra();
 write_data();
// system("A.exe");
}

