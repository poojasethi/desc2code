#include<cstdio>
#include<queue>
#include<utility>
#include<algorithm>
using namespace std;
typedef long long ll;
const int tt=250001;
ll d[tt],r[tt];
priority_queue<pair<ll,int> > q[tt];
int a[tt],c[tt],m[tt],p[tt],pd[tt];
ll sqr(int a){return a*ll(a);}
int main(){
    int tot=0,cnt=0,xp,yp,n,i=1,j,x,y;
    scanf("%d%d%d%I64d%d",&xp,&yp,p,r,&n);
    for ((*r)*=*r;i<=n;i++){
        scanf("%d%d%d%d%I64d",&x,&y,m+i,p+i,r+i);
        d[i]=sqr(x-xp)+sqr(y-yp),r[i]*=r[i],a[++tot]=m[i],pd[i]=true;
    }
    sort(a+1,a+tot+1);
    tot=unique(a+1,a+tot+1)-(a+1);
    for (i=1;i<=n;i++)
        for (j=lower_bound(a+1,a+tot+1,m[i])-a;j<=tot;j+=j&-j) q[j].push(make_pair(-d[i],i));
    for (c[0]=i=0;i<=cnt;i++) for (j=upper_bound(a+1,a+tot+1,p[c[i]])-a-1;j;j-=j&-j)
        for (;!q[j].empty() && -q[j].top().first<=r[c[i]];q[j].pop())
            if (pd[q[j].top().second]) pd[c[++cnt]=q[j].top().second]=false;
    printf("%d\n",cnt);
}