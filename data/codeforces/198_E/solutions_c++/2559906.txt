#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>

using std::sort;
typedef long long ll;

const int fin=0,maxn=250010,maxm=510;
int n,m;
struct rec{int m,p;ll r,d;}a[maxn];
int fs[maxm],h[maxm];
ll mr[maxm];
int q[maxn],head,tail;
bool v[maxn];

  inline bool cmp(const rec &a,const rec &b){
    return a.d<b.d;
  }
  inline bool cmp1(const rec &a,const rec &b){
    return a.m<b.m;
  }

  void sol(int x){
    int i,j;
    for(i=0;i<m;++i)
      if(mr[i]<=a[x].r){
        while(h[i]<fs[i+1])
          if(v[h[i]]||a[h[i]].m<=a[x].p){
            if(!v[h[i]])
              v[h[i]]=1,q[++tail]=h[i]++;
            else h[i]++;
          }else break;
      }else{
        for(j=h[i];j<fs[i+1];++j)
          if(!v[j]&&a[j].m<=a[x].p&&a[j].d<=a[x].r)
            v[j]=1,q[++tail]=j;
        break;
      }
  }

int main(){
  if(fin){
    freopen("t.in","r",stdin);
    freopen("t.out","w",stdout);
  }
  int x0,y0,x,y,len,i;
  scanf("%d%d%d%I64d%d",&x0,&y0,&a[0].p,&a[0].r,&n);
  a[0].r*=a[0].r;
  for(i=1;i<=n;++i){
    scanf("%d%d%d%d%I64d",&x,&y,&a[i].m,&a[i].p,&a[i].r);
    a[i].d=(ll)(x-x0)*(x-x0)+(ll)(y-y0)*(y-y0);
    a[i].r*=a[i].r;
  }
  sort(a+1,a+n+1,cmp);
  len=(int)sqrt((double)n);
  for(i=0;i*len+1<=n;++i)fs[i]=i*len+1;
  fs[m=i]=n+1;
  for(i=0;i<m;++i){
    mr[i]=a[fs[i+1]-1].d;
    sort(a+fs[i],a+fs[i+1],cmp1);
    h[i]=fs[i];
  }
  //for(i=0;i<=n;++i)
    //printf("%d %d %I64d %I64d\n",a[i].m,a[i].p,a[i].r,a[i].d);
  head=tail=0,q[0]=0,v[0]=1;
  while(head<=tail)
    sol(q[head++]);
  printf("%d",tail);
  return 0;
}
