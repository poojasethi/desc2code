#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<map>
#define maxn 250010
#define fst first
#define sec second
using namespace std;
typedef long long i64;
typedef pair<i64,int>pii;
priority_queue<pii>q[maxn<<1];
map<int,int>Hash;
struct node{i64 d,r;int p,m;}a[maxn];
int tot,cnt,mass[maxn<<1],que[maxn],n,vis[maxn];
void insert(int x,int id)
{
	for( ; x <= tot ; x += x&-x)
		q[x].push(make_pair(-a[id].d,id));
}

void handle(int x,i64 lim)
{
	for( ; x ; x -= x&-x){
		while(!q[x].empty() && -q[x].top().fst <= lim)
		{
			int y = q[x].top().sec;q[x].pop();
			if(vis[y]) continue; 
			que[++cnt] = y;vis[y] = 1;
		}
	}
}

int main()
{
	int x,y,x1,y1;
	scanf("%d%d%d%I64d%d",&x,&y,&a[0].p,&a[0].r,&n);
	a[0].r *= a[0].r;mass[++tot] = a[0].p;Hash[a[0].p] = 1;
	for(int i = 1; i <= n ; i ++ )
	{
		scanf("%d%d%d%d%I64d",&x1,&y1,&a[i].m,&a[i].p,&a[i].r);
		a[i].d = 1LL*(x-x1)*(x-x1) + 1LL*(y-y1)*(y-y1);
		a[i].r *= a[i].r;
		if(!Hash[a[i].m]) mass[++tot] = a[i].m,Hash[a[i].m] = 1;
		if(!Hash[a[i].p]) mass[++tot] = a[i].p,Hash[a[i].p] = 1; 
	}
	sort(mass + 1, mass + 1 + tot);
	for(int i = 1; i <= tot ; i ++)	Hash[mass[i]] = i;
	a[0].p = Hash[a[0].p];
	for(int i = 1 ; i <= n ; i ++ ) a[i].m = Hash[a[i].m],a[i].p = Hash[a[i].p];
	for(int i = 1 ; i <= n ; i ++)	insert(a[i].m,i);
	for(int i = 0 ; i <= cnt ; i ++ ){
			int x = que[i];
	    	handle(a[x].p,a[x].r);
	}
	printf("%d",cnt);
}
