#include <set>
#include <queue>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <vector>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#define LL long long
#define pow(_) ((_)*(_))
using namespace std;
const int MAXN=250005;
const int w=500;
struct mag{
    LL d,r;
    int m,p;
}d[MAXN];
LL D[MAXN],ex,ey,x,y,now;
int L[MAXN],R[MAXN],r[MAXN],v[MAXN],n,tot,fir,las,p;
bool cmp_d(mag a,mag b)
{
    return a.d<b.d;
}
bool cmp_m(mag a,mag b)
{
    return a.m<b.m;
}
int main()
{
    scanf("%I64d%I64d%d%I64d%d",&ex,&ey,&d[0].p,&d[0].r,&n);
    d[0].r=pow(d[0].r);
    for(int i=1;i<=n;i++)
    {
        scanf("%I64d%I64d%d%d%I64d",&x,&y,&d[i].m,&d[i].p,&d[i].r);
        d[i].r=pow(d[i].r);
        d[i].d=pow(x-ex)+pow(y-ey);
    }
    sort(d+1,d+n+1,cmp_d);
    for(int i=1;i<=n;i+=w)
    {
        L[++tot]=i,R[tot]=min(n,i+w-1),D[tot]=d[R[tot]].d;
        sort(d+L[tot],d+R[tot]+1,cmp_m);
    }
    fir=las=1,r[1]=0;
    while(fir<=las)
    {
        now=d[r[fir]].r,p=d[r[fir]].p,fir++;
        for(int i=1;i<=tot;i++)
        {
            if(D[i]>now)
            {
                for(int j=L[i];j<=R[i];++j)
                    if(!v[j]&&d[j].d<=now&&d[j].m<=p)
                        v[r[++las]=j]=1;
                break;
            }
            while(L[i]<=R[i]&&d[L[i]].m<=p)
            {
                if(!v[L[i]])
                    r[++las]=L[i];
                L[i]++;
            }
        }
    }
    printf("%d\n",las-1);
    return 0;
}
  	 	 	 	   		  					 			