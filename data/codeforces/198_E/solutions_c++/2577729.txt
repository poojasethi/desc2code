#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<time.h>
#include<algorithm>
using namespace std;
#define N 250005
#define ll long long
#define oo (1<<30)
struct P{ll d,r;int m,p;}p[N];
bool operator <(const P &a,const P &b){return a.d<b.d;}
int c[N*4],q[N],n,M;
#define update(a,b) if (p[a].m>p[b].m)a=b;
int query(int x){
	int s=0;
	for(int l=M,r=x+M+1;l^r^1;l>>=1,r>>=1){
		if(~l&1)update(s,c[l^1]);
		if(r&1)update(s,c[r^1]);
	}
	return s;
}
void modify(int x,int v){
	for(p[x].m=v,(x+=M)>>=1;x;x>>=1){
		c[x]=c[x+x];update(c[x],c[x+x+1]);
	}
}
int main()
{
	//freopen("1.in","r",stdin);
	//freopen("1.out","w",stdout);
	int x,y;scanf("%d%d%d%d%d",&x,&y,&p[0].p,&p[0].r,&n);p[0].m=oo;
	for (int i=1;i<=n;++i){
		ll X,Y;scanf("%I64d%I64d%d%d%d",&X,&Y,&p[i].m,&p[i].p,&p[i].r);
		p[i].d=(X-x)*(X-x)+(Y-y)*(Y-y);
	}
	for (int i=0;i<=n;++i)p[i].r*=p[i].r;
	sort(p,p+n+1);
	for(M=1;M-2<n+1;M<<=1);for (int i=0;i<=n;++i)c[i+M]=i;
	for (int i=0;i<=n;++i)modify(i,p[i].m);
	q[1]=0;int t=1;
	for (int h=1;h<=t;++h){
		P tmp=p[q[h]];tmp.d=tmp.r;
		int l=upper_bound(p,p+n+1,tmp)-p-1;
		while (1){
			int d=query(l);
			if (p[d].m<=p[q[h]].p)modify(d,oo),q[++t]=d;
				else break;
		}
	}
	printf("%d\n",t-1);
	//system("pause");for (;;);
	return 0;
}


