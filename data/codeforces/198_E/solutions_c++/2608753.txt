#include<cstdio>
#include<queue>
#include<utility>
#include<algorithm>
using namespace std;
typedef long long ll;
const int tt=250001;
struct poi{
    ll d,r;
    int m,p;
} v[tt];
priority_queue<pair<ll,int> > q[tt];
bool p[tt];
int a[tt],c[tt];
ll sqr(int a){
    return a*ll(a);
}
int main(){
//  freopen("198e.in","r",stdin);
//  freopen("198e.out","w",stdout);
    int tot,cnt,xp,yp,n,i,j,x,y;
    scanf("%d%d%d%I64d%d",&xp,&yp,&v[0].p,&v[0].r,&n);
    v[0].r*=v[0].r,tot=0;
    for (i=1;i<=n;i++){
        scanf("%d%d%d%d%I64d",&x,&y,&v[i].m,&v[i].p,&v[i].r);
        v[i].d=sqr(x-xp)+sqr(y-yp),v[i].r*=v[i].r;
        a[++tot]=v[i].m;
    }
    sort(a+1,a+tot+1);
    tot=unique(a+1,a+tot+1)-(a+1);
    for (i=1;i<=n;i++){
        for (j=lower_bound(a+1,a+tot+1,v[i].m)-a;j<=tot;j+=j&-j)
            q[j].push(make_pair(-v[i].d,i));
        p[i]=true;
    }
    c[cnt=0]=0;
    for (i=0;i<=cnt;i++)
        for (j=upper_bound(a+1,a+tot+1,v[c[i]].p)-a-1;j;j-=j&-j)
            for (;!q[j].empty() && -q[j].top().first<=v[c[i]].r;q[j].pop())
                if (p[q[j].top().second]) p[c[++cnt]=q[j].top().second]=false;
    printf("%d\n",cnt);
    return 0;
}