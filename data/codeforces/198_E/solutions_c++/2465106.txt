#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<algorithm>
using namespace std;
typedef long long LL;
const int N=250010,inf=2100000000;
int X,Y,n,P[N],R[N];
struct PR{
	int m,p,r;
	LL d;
	void init(){
		int x,y;
		scanf("%d%d",&x,&y);
		d=(LL)(x-X)*(x-X)+(LL)(y-Y)*(y-Y);
		scanf("%d%d%d",&m,&p,&r);
	}
}a[N];
bool cmp(const PR &A,const PR&B )
{
	return A.d<B.d;
}
int l[N<<2],r[N<<2],cnt[N<<2],w[N];
void build(const int x,const int y,const int z)
{
	l[z]=x,r[z]=y;
	if ( x==y )
	{
		w[x]=z;
		cnt[z]=x;
		return;
	}
	int mid=(x+y)>>1,A=z<<1;
	build(x,mid,A),build(mid+1,y,A+1);
	cnt[z]=(a[cnt[A]].m<a[cnt[A+1]].m?cnt[A]:cnt[A+1]);
}
int find(const int A)
{
	LL B=(LL)A*A;
	int L=0,R=n+1,mid;
	while ( L+1<R )
	{
		mid=(L+R)>>1;
		if ( a[mid].d<=B ) L=mid;else R=mid;
	}
	return L;
}
int ask(const int x,const int y,const int z)
{
	if ( x==l[z] && r[z]==y ) return cnt[z];
	int mid=(l[z]+r[z])>>1,A=z<<1;
	if ( y<=mid ) return ask(x,y,A);
	if ( x>mid ) return ask(x,y,A+1);
	int B=ask(x,mid,A),C=ask(mid+1,y,A+1);
	return a[B].m<a[C].m?B:C;
}
void _del(const int x)
{
	a[x].m=inf;
	for(int z=w[x]>>1,A;z>0;z>>=1) 
	{
		A=z<<1;		
		cnt[z]=(a[cnt[A]].m<a[cnt[A+1]].m?cnt[A]:cnt[A+1]);
	}
}
int main()
{
	scanf("%d%d%d%d%d",&X,&Y,&P[1],&R[1],&n);
	for(int i=1;i<=n;++i)
		a[i].init();
	sort(a+1,a+1+n,cmp);
	build(1,n,1);
	int h=1,t=1;
	for(int i,j;h<=t;++h)
	{
		j=find(R[h]);
		if ( j>0 ) 
			for(i=ask(1,j,1);a[i].m<=P[h];i=ask(1,j,1)) 
				++t,P[t]=a[i].p,R[t]=a[i].r,_del(i);
	}
	cout<<t-1<<endl;
	return 0;
}