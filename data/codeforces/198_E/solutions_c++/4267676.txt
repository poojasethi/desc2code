#include<iostream>
#include<cstdio>
#include<algorithm>

using namespace std;

#define N 250010
#define w 505

typedef long long LL;

struct node
{
	LL d,r; 
	int m,p;
}a[N];

LL D[N],x0,y0,rad;
int L[N],R[N],q[N],v[N],n,tot,l,r,p,x,y;

bool cmp_d(node a,node b){return a.d<b.d;}
bool cmp_m(node a,node b){return a.m<b.m;}

int main()
{
	cin>>x0>>y0>>a[0].p>>a[0].r>>n;
	a[0].r*=a[0].r;
	for(int i=1;i<=n;i++)
	{
		scanf("%d%d%d%d%I64d",&x,&y,&a[i].m,&a[i].p,&a[i].r);
		a[i].r*=a[i].r;
		a[i].d=(x0-x)*(x0-x)+(y0-y)*(y0-y);
	}
	sort(a+1,a+n+1,cmp_d);
	for(int i=1;i<=n;i+=w)
	{
		L[++tot]=i,R[tot]=min(n,i+w-1),D[tot]=a[R[tot]].d;
		sort(a+L[tot],a+R[tot]+1,cmp_m);
	}
	l=r=1,q[1]=0; 
	while(l<=r)
	{
		rad=a[q[l]].r,p=a[q[l]].p,l++;
		for(int i=1;i<=tot;++i)
		{
			if(D[i]>rad)
			{
				for(int j=L[i];j<=R[i];++j)
					if(!v[j]&&a[j].d<=rad&&a[j].m<=p) v[q[++r]=j]=1;
				break;
			}
			while(L[i]<=R[i]&&a[L[i]].m<=p)
			{
				if(!v[L[i]]) q[++r]=L[i];
				++L[i];
			}
		}
	}
	printf("%d\n",r-1);
	return 0;
}
					 		 		 		 	 	 				  	