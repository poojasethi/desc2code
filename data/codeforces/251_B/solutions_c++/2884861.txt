#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
#define REP(i,n) for (int i=0; i<n; i++)
int n;
vector<int> q;
void permute(vector<int>& p);
void inverse(vector<int>& p);

int main() {
	int k;
	cin >> n >> k;
	vector<int> p(n), s(n), temp(n);
	q.assign(n,0);
	REP(i,n) {
		p[i]=i;
	}
	REP(i,n) {
		cin >> q[i];
		q[i]--;
		temp[i]=q[i];
	}
	REP(i,n) {
		cin >> s[i];
		s[i]--;
	}

	if (equal(p.begin(),p.end(),s.begin())) {
		cout << "NO";
		return 0;
	}
	permute(temp);
	if (equal(p.begin(),p.end(),temp.begin())) {
		if (k==1 && equal(q.begin(),q.end(),s.begin())) cout << "YES";
		else cout << "NO";
		return 0;
	}
	REP(i,k) inverse(p);
	REP(i,k+1) {
		if (equal(p.begin(),p.end(),s.begin())) {
			cout << "YES";
			return 0;
		}
		permute(p);
		permute(p);
	}
	cout << "NO";
	return 0;
}

void permute(vector<int>& p) {
	vector<int> temp(n);
	REP(i,n) temp[i]=p[q[i]];
	p=temp;
	return;
}

void inverse(vector<int>& p) {
	vector<int> temp(n);
	REP(i,n) temp[q[i]]=p[i];
	p=temp;
	return;
}
