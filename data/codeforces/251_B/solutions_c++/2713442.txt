#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int kMaxN = 110;

int P[kMaxN], Q[kMaxN];
int dst[kMaxN];
int n, k;

void init()
{
	scanf("%d%d", &n, &k);
	for (int i = 1; i <= n; ++i) {
		scanf("%d", P + i);
		Q[P[i]] = i;
	}
	for (int i = 1; i <= n; ++i) scanf("%d", dst + i);
}

inline int check_seq(int t[], int d[])
{
	int flag = 1;
	for (int j = 1; j <= n; ++j) {
		if (t[j] != d[j]) { flag = 0; break; }
	}
	return flag;
}

int check(int p[], int q[])
{
	static int cur[kMaxN], tmp[kMaxN];
	for (int i = 1; i <= n; ++i) cur[i] = i;
	
	if (check_seq(cur, dst)) return 0;

	for (int i = 0; i < k; ++i) {
		for (int j = 1; j <= n; ++j) tmp[j] = cur[p[j]];
		if (check_seq(tmp, dst) && ((k-i-1)&1) == 0) {
			return (i==k-1) || check_seq(q, dst) == 0 || check_seq(p, dst) == 0;
		}
		memcpy(cur, tmp, (n+1)*sizeof(int));
	}
	return 0;
}

void solve()
{
	if (check(P, Q) || check(Q, P)) { puts("YES"); return; }
	puts("NO");
}

int main()
{
	init();
	solve();
	return 0;
}
