#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>
#include <cmath>
#include <stack>
#include <map>
#include <set>
#include <deque>
#include <cstring>
#include <functional>
#include <climits>
#include <list>
#include <ctime>
#include <complex>

#define F1(x,y,z) for(int x=y;x<z;x++)
#define F2(x,y,z) for(int x=y;x<=z;x++)
#define F3(x,y,z) for(int x=y;x>z;x--)
#define F4(x,y,z) for(int x=y;x>=z;x--)
#define pb push_back
#define LL long long
#define co complex<double>
 
#define MAX 100005
#define AMAX 1500
#define MOD 1000000007

#define f(c,d) ((1<<(c))*(d))

using namespace std;

int n,m,s,ia[MAX*4],ib[MAX*4],ta,tb;
char x[MAX*4];
vector<int> v[MAX*4];
LL y[20][MAX*4],z[20][MAX*4];

void dfs(int a,int b){
	ia[a]=s++;
	y[0][ia[a]]=1LL<<x[a];
	F1(c,0,v[a].size())if(v[a][c]!=b)dfs(v[a][c],a);
	ib[a]=s;
}

void f1(int a,int b,int c,int d){
	if(f(c,d)==a&&f(c,d+1)==b){
		y[c][d]=z[c][d]=1LL<<tb;
		return;
	}
	c--;
	d=(d<<1)|1;
	if(z[c+1][d>>1]){
		z[c][d-1]=z[c][d]=y[c][d-1]=y[c][d]=z[c+1][d>>1];
		z[c+1][d>>1]=0;
	}
	if(b<=f(c,d))f1(a,b,c,d-1);
	else if(a>=f(c,d))f1(a,b,c,d);
	else{
		f1(a,f(c,d),c,d-1);
		f1(f(c,d),b,c,d);
	}
	y[c+1][d>>1]=y[c][d-1]|y[c][d];
}

LL f2(int a,int b,int c,int d){
	if(f(c,d)==a&&f(c,d+1)==b)return y[c][d];
	c--;
	d=(d<<1)|1;
	if(z[c+1][d>>1]){
		z[c][d-1]=z[c][d]=y[c][d-1]=y[c][d]=z[c+1][d>>1];
		z[c+1][d>>1]=0;
	}
	if(b<=f(c,d))return f2(a,b,c,d-1);
	if(a>=f(c,d))return f2(a,b,c,d);
	return f2(a,f(c,d),c,d-1)|f2(f(c,d),b,c,d);
}

int main(){
	scanf("%d%d",&n,&m);
	F2(a,1,n)scanf("%d",&x[a]);
	F2(a,2,n){
		scanf("%d%d",&ta,&tb);
		v[ta].pb(tb);
		v[tb].pb(ta);
	}
	dfs(1,0);
	F1(a,1,20)for(int b=0;f(a,b)<s;b++)y[a][b]=y[a-1][b<<1]|y[a-1][(b<<1)|1];
	while(m--){
		scanf("%d",&ta);
		if(ta==1){
			scanf("%d%d",&ta,&tb);
			f1(ia[ta],ib[ta],19,0);
		}else{
			scanf("%d",&ta);
			y[19][1]=f2(ia[ta],ib[ta],19,0);
			tb=0;
			F2(a,1,60)if(y[19][1]&(1LL<<a))tb++;
			printf("%d\n",tb);
		}
	}
	//system("pause");
	return 0;
}
