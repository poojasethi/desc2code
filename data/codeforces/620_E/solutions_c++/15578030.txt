// be ghole aghamoon HAMID khare SEGMENT o taki ro baham ...
# include <bits/stdc++.h>

using namespace std;

typedef long long int LL;

const int maxn = 4e5 + 100;

vector <int> adj[maxn];

int n, Tim, st[maxn], fi[maxn];

LL seg[4 * maxn], lzy[4 * maxn], col[maxn];

void dfs(int v,int par = -1){
	st[v] = Tim++;
	for (int i = 0; i < adj[v].size(); i++){
		int u = adj[v][i];
		if(u - par)
			dfs(u, v);
	}
	fi[v] = Tim;
}

void pull(int id){
	if(lzy[id] == 0)
		return;
	lzy[id * 2 + 0] = lzy[id]; lzy[id * 2 + 1] = lzy[id];
	seg[id * 2 + 0] = lzy[id]; seg[id * 2 + 1] = lzy[id];
	lzy[id] = 0;
}

void add(LL val, int l,int r,int L=0,int R=n,int id=1){
	if(l == L && r == R){
		lzy[id] = val; seg[id] = val;
		return;
	}
	pull(id);
	int mid = (L + R) >> 1;
	if(l < mid)
		add(val, l, min(mid, r), L, mid, id * 2 + 0);
	if(r > mid)
		add(val, max(l, mid), r, mid, R, id * 2 + 1);
	seg[id] = (seg[id * 2 + 0] | seg[id * 2 + 1]);
}

LL get(int l,int r,int L=0,int R=n,int id=1){
	if(l == L && r == R)
		return seg[id];
	pull(id);
	int mid = (L + R) >> 1; LL ret = 0;
	if(l < mid)
		ret |= get(l, min(mid, r), L, mid, id * 2 + 0);
	if(r > mid)
		ret |= get(max(l, mid), r, mid, R, id * 2 + 1);
	seg[id] = (seg[id * 2 + 0] | seg[id * 2 + 1]);
	return ret;
}

int popcount(LL x){
	int ret = 0;
	while(x != 0)
		ret += (x & 1), (x >>= 1);
	return ret;
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	
	int m;
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		cin >> col[i];
	for (int i = 1; i < n; i++){
		int v, u;
		cin >> v >> u;
		v--, u--;
		adj[v].push_back(u);
		adj[u].push_back(v);
	}
	dfs(0);
	
	for (int i = 0; i < n; i++)
		add((1LL << col[i]), st[i], st[i] + 1);
	
	while(m--){
		int t; cin >> t;
		if(t == 2){
			int v; cin >> v; v--;
			int tmp = popcount(get(st[v], fi[v]));
			cout << tmp << '\n';
		}
		else{
			int v; cin >> v; v--;
			LL c; cin >> c;
			add((1LL << c), st[v], fi[v]);
		}
	}

	return 0;
}
