#include<cstdio>
#include<bitset>
#define N 3000000
using namespace std;
int dp,pre[N],p[N],tt[N],l[N],r[N],L[N],R[N],tot,e[N],flag[N];
bitset<100> s[N],ans;
int n,m,i,u,v,a,b,T;
void link(int x,int y)
{
	dp++;pre[dp]=p[x];p[x]=dp;tt[dp]=y;
}
void dfs(int x,int fa)
{
	int i;
	i=p[x];
	tot++;L[x]=tot;
	while (i)
	{
		if (tt[i]!=fa) dfs(tt[i],x);
		i=pre[i];
	}
	R[x]=tot;
}
void build(int x,int a,int b)
{
	int m;
	if (x>T) T=x;
	l[x]=a;r[x]=b;s[x].reset(); 
	if (b-a>1)
	{
		m=(a+b)>>1;
		build(2*x,a,m);
		build(2*x+1,m,b);
	}
}
void clean(int x)
{
	if (flag[x])
	{
		s[x].reset();
		s[x].set(flag[x]);
		if (2*x<=T)flag[2*x]=flag[x];
		if (2*x+1<=T) flag[2*x+1]=flag[x];
		flag[x]=0;
	}
}
void change(int x,int a,int b,int c)
{
	clean(x);
	if ((a<=l[x])&&(r[x]<=b))
	{
		flag[x]=c;
		return;
	}
	int m=(l[x]+r[x])>>1;
	if (a<m) change(2*x,a,b,c);
	if (m<b) change(2*x+1,a,b,c);
	clean(2*x);clean(2*x+1);
	s[x]=(s[2*x]|s[2*x+1]);
}
void query(int x,int a,int b)
{
	int m;
	clean(x);
	if ((a<=l[x])&&(r[x]<=b))
	{
		ans=(ans|s[x]);
		return;
	}
	m=(l[x]+r[x])>>1;
	if (a<m) query(2*x,a,b);
	if (m<b) query(2*x+1,a,b);
}
int main()
{
	scanf("%d%d",&n,&m);
	for (i=1;i<=n;i++)
	{
		scanf("%d",&e[i]);
		e[i]++;
	}
	for (i=1;i<n;i++)
	{
		scanf("%d%d",&u,&v);
		link(u,v);
		link(v,u);
	}
	dfs(1,0);
	build(1,0,tot);
	for (i=1;i<=n;i++)
	change(1,L[i]-1,L[i],e[i]);
	for (i=1;i<=m;i++)
	{
		scanf("%d",&a);
		if (a==1)
		{
			scanf("%d%d",&a,&b);b++;
			change(1,L[a]-1,R[a],b);
		}
		else
		{
			scanf("%d",&a);
			ans.reset();
			query(1,L[a]-1,R[a]);
			printf("%d\n",ans.count());
		}
	}
}
				 			  	  	  	  	 	 	   				