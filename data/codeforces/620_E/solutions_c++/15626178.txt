#include<bits/stdc++.h>

#define FI(i,a,b) for(int i=(a);i<=(b);i++)
#define FD(i,a,b) for(int i=(a);i>=(b);i--)

#define LL long long

using namespace std;

int n,m,cp[404040],cr[404040],col[404040],cc[404040],p=0;
LL seg[1100000],rot[1100000];
vector<int> V[404040];
void dfs(int id,int prev){
  cp[id]=++p;
  FI(i,0,(int)V[id].size()-1){
    int to=V[id][i];
    if(to==prev) continue;
    dfs(to,id);
  }
  cr[id]=p;
  return;
}
int f(LL x){
  if(!x) return 0;
  else return (x&1)+f(x>>1);
}
void rr(int id,int l,int r){
  if(rot[id]){
    seg[id]=rot[id];
    if(l<r){
    	rot[id*2]=rot[id];
    	rot[id*2+1]=rot[id];
    }
    rot[id]=0;
  }
  return;
}
void init(int id,int l,int r){
  rot[id]=0;
  if(l==r) seg[id]=1LL<<(cc[l]-1);
  else{
    int m=(l+r)>>1;
    init(id*2,l,m);
    init(id*2+1,m+1,r);
    seg[id]=seg[id*2]|seg[id*2+1];
  }
  return;
}
void upd(int id,int l,int r,int L,int R,int v){
  rr(id,l,r);
  if(L>r || l>R) return;
  else if(L<=l && r<=R){
    rot[id]=1LL<<(v-1);
    rr(id,l,r);
  }else{
    int m=(l+r)>>1;
    upd(id*2,l,m,L,R,v);
    upd(id*2+1,m+1,r,L,R,v);
    seg[id]=seg[id*2]|seg[id*2+1];
  }
  return;
}
LL query(int id,int l,int r,int L,int R){
  rr(id,l,r);
  if(L>r || l>R) return 0;
  else if(L<=l && r<=R) return seg[id];
  else{
    int m=(l+r)>>1;
    return query(id*2,l,m,L,R)|query(id*2+1,m+1,r,L,R);
  }
}
int main(){
  scanf("%d %d",&n,&m);
  FI(i,1,n) scanf("%d",&col[i]);
  FI(i,2,n){
    int a,b;
    scanf("%d %d",&a,&b);
    V[a].push_back(b);
    V[b].push_back(a);
  }
  dfs(1,-1);
  //FI(i,1,n) printf("%d (%d): %d %d\n",i,col[i],cp[i],cr[i]);
  FI(i,1,n) cc[cp[i]]=col[i];
  init(1,1,n);
  FI(i,1,m){
    int a,b,c;
    scanf("%d %d",&a,&b);
    if(a==1){
      scanf("%d",&c);
      upd(1,1,n,cp[b],cr[b],c);
    }else{
      LL res=query(1,1,n,cp[b],cr[b]);
      printf("%d\n",f(res));
    }
  }
  return 0;
}