
#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#define N 400005
#define for(x,y) for(int i=x;i<y;i++)
#define LL rt<<1,l,m
#define RR rt<<1|1,m+1,r

using namespace std;

typedef long long ll;

int s[N],e[N],c[N];
vector<int> son[N];
int t,n;
ll tree[N<<2],color[N<<2];

void dfs(int rt,int b)
{
    s[rt]=++t;
    for(0,son[rt].size()) if(son[rt][i]!=b) dfs(son[rt][i],rt);
    e[rt]=t;
}

void down(int rt)
{
    if(color[rt])
    {
        color[rt<<1]=color[rt<<1|1]=tree[rt<<1]=tree[rt<<1|1]=color[rt];
        color[rt]=0;
    }
}

void up(int rt)
{
    tree[rt]=tree[rt<<1]|tree[rt<<1|1];
}

void update(ll val,int x,int y,int rt=1,int l=1,int r=n)
{
    if(r<x||y<l) return;
    if(x<=l&&r<=y)
    {
        color[rt]=tree[rt]=val;
        return;
    }
    down(rt);
    int m=(l+r)>>1;
    update(val, x, y,LL);
    update(val, x, y,RR);
    up(rt);
}

ll find(int x,int y,int rt=1,int l=1,int r=n)
{
    if(r<x||y<l) return 0;
    if(x<=l&&r<=y) return tree[rt];
    int m=(l+r)>>1;
    down(rt);
    return find(x,y,LL)|find(x,y,RR);
}

int main()
{
    int m,temp,x,y;
    scanf("%d%d",&n,&m);
    for(0,n) scanf("%d",&c[i]);
    for(0,n-1) {scanf("%d%d",&x,&y);son[x].push_back(y);son[y].push_back(x);}
    dfs(1,0);
    for(0,n) update(1ll<<c[i], s[i+1],s[i+1]);
    while(m--)
    {
        scanf("%d",&temp);
        if(temp==1) {scanf("%d%d",&x,&y);update(1ll<<y, s[x], e[x]);}
        else {scanf("%d",&x);cout<<__builtin_popcountll(find(s[x],e[x]))<<endl;}
    }
}
 		 				 	    	 	    	     		 	