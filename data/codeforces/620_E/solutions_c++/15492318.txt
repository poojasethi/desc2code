#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<vector>
#include<map>
#define ll long long
#define ls id<<1,l,mid
#define rs id<<1|1,mid+1,r
#define Maxn 400010
using namespace std;

int v[Maxn];
int c;
int L[Maxn],R[Maxn];
vector<int> dv[Maxn];
void dfs(int u,int fa){
    L[u]=++c;
    for(int i=0;i<dv[u].size();i++)
        if(dv[u][i]!=fa) dfs(dv[u][i],u);
    R[u]=++c;
}
ll tr[Maxn<<3];
ll tg[Maxn<<3];
void pushdown(int id){
    if(tg[id]){
        tg[id<<1]=tg[id<<1|1]=tg[id];
        tr[id<<1]=tr[id<<1|1]=tg[id];
        tg[id]=0;
    }
}
void pushup(int id){
    tr[id]=tr[id<<1]|tr[id<<1|1];
}
void update(int id,int l,int r,int a,int b,ll c){
    if(a<=l&&r<=b){
        tr[id]=c;
        tg[id]=c;
        return;
    }
    int mid=l+r>>1;
    pushdown(id);
    if(a<=mid) update(ls,a,b,c);
    if(b>mid) update(rs,a,b,c);
    pushup(id);
}
ll query(int id,int l,int r,int a,int b){
    if(a<=l&&r<=b)
        return tr[id];
    int mid=l+r>>1;
    pushdown(id);
    ll ans=0;
    if(a<=mid) ans|=query(ls,a,b);
    if(b>mid) ans|=query(rs,a,b);
    return ans;
}
int main()
{
    int n,m,a,b,op;
    cin>>n>>m;
    for(int i=1;i<=n;i++) scanf("%d",v+i);
    for(int i=1;i<n;i++){
        scanf("%d%d",&a,&b);
        dv[a].push_back(b);
        dv[b].push_back(a);
    }
    dfs(1,0);
    for(int i=1;i<=n;i++){
        update(1,1,n<<1,L[i],L[i],1LL<<v[i]);
        update(1,1,n<<1,R[i],R[i],1LL<<v[i]);
    }
    while(m--){
        scanf("%d",&op);
        if(op==1){
            scanf("%d%d",&a,&b);
            update(1,1,n<<1,L[a],R[a],1LL<<b);
        }
        else{
            scanf("%d",&a);
            ll ans=query(1,1,n<<1,L[a],R[a]);
            int cnt=0;
            while(ans){
                cnt++;
                ans-=ans&-ans;
            }
            printf("%d\n",cnt);
        }
    }
	return 0;
}
