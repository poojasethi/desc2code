#include<bits/stdc++.h>
#define N 400005
using namespace std;
int Go[N<<1],Next[N<<1],End[N],cnt;
bitset<61>num[N<<2],ans,space;
int size[N<<2],lazy[N<<2];
int C[N],data[N],L[N],R[N];
int tot,n,i,m,k,x,y,opt,ql,qr;
void add(int u,int v){
	Go[++cnt]=v;Next[cnt]=End[u];End[u]=cnt;
}
void DFS(int x,int Fa){
	C[L[x]=++tot]=data[x];
	for (int i=End[x],y;i;i=Next[i])
		if ((y=Go[i])!=Fa)
			DFS(y,x);
	R[x]=tot;
}

void Clear(int x,int y){
	num[x]=space;
	num[x][y]=1;lazy[x]=y;
}
inline void down(int x){
	if (!lazy[x]) return;
	Clear(x<<1,lazy[x]);
	Clear(x<<1|1,lazy[x]);lazy[x]=0;
}
#define up(x) num[x]=num[x<<1]|num[x<<1|1]
void build(int x,int l,int r){
	size[x]=r-l+1;if (l==r) {num[x][C[l]]=1;return;}
	int mid=(l+r)>>1;
	build(x<<1,l,mid);build(x<<1|1,mid+1,r);up(x);
}
void Update(int x,int l,int r){
	if (ql<=l&&r<=qr){
		Clear(x,y);return;
  }int mid=(l+r)>>1;down(x);
  if (ql<=mid) Update(x<<1,l,mid);
  if (qr>mid)  Update(x<<1|1,mid+1,r);up(x);
}void Query(int x,int l,int r){
	if (ql<=l&&r<=qr){
		ans|=num[x];return;
  }int mid=(l+r)>>1;down(x);
  if (ql<=mid) Query(x<<1,l,mid);
  if (qr>mid)  Query(x<<1|1,mid+1,r);
}
int main(){
	scanf("%d%d",&n,&m);
	for (i=1;i<=n;i++)
		scanf("%d",&data[i]);
	for (i=1;i<n;i++)
		scanf("%d%d",&x,&y),add(x,y),add(y,x);
	DFS(1,0);
	build(1,1,n);
	while (m--){
		scanf("%d",&opt);
		scanf("%d",&x);ql=L[x];qr=R[x];
		if (opt==2){
			ans=space;Query(1,1,n);
			cnt=0;for (i=1;i<=60;i++) cnt+=ans[i];
			printf("%d\n",cnt);
		}else scanf("%d",&y),Update(1,1,n);
  }
}