#include <bits/stdc++.h>
using namespace std;
const int N = 250;
int flow[N][N],parent[N],V;
bool visit[N];
bool bfs(int s,int t){
	memset(visit,false,sizeof(visit));
	queue<int> q;
	q.push(s);
	visit[s]=true;
	parent[s]=-1;int u,v;
	while(!q.empty()){
		u = q.front();
		q.pop();
		for(v=0;v<V;++v)
			if(!visit[v] && flow[u][v]>0){
				q.push(v);
				parent[v]=u;
				visit[v]=true;
			}
	}
	return visit[t];
}
int maxflow(int s,int t){
	int u,v,i,ret=0,cand;
	while(bfs(s,t)){
		cand = 1e9;
		for(v=t;v!=s;v=parent[v]){
			u = parent[v];
			cand = min(cand,flow[u][v]);
		}
		for(v=t;v!=s;v=parent[v]){
			u = parent[v];
			flow[u][v]-=cand;
			flow[v][u]+=cand;
		}
		ret+=cand;
	}
	return ret;
}
int main(){
	int j,s=0,t,i,n,m,a,b,sa=0,sb=0;
	cin>>n>>m;t=2*n+1;
	for(i=1;i<=n;++i)
		cin>>a,sa+=a,flow[s][i]=a;
	for(i=n+1;i<=2*n;++i)
		cin>>b,sb+=b,flow[i][t]=b;
	if(sa!=sb){
		cout<<"NO"<<endl;return 0;
	}
	for(i=0;i<m;++i)
		cin>>a>>b,flow[a][n+b]=1e9,flow[b][n+a]=1e9;
	for(i=1;i<=n;++i)
		flow[i][n+i]=1e9;
	V= 2*n+2;
	int ret= maxflow(s,t);
	if(ret!=sb)
		cout<<"NO\n";
	else{
		cout<<"YES\n";
		for(i=1;i<=n;++i){
			for(j=n+1;j<=2*n;++j){
				cout<<flow[j][i]<<" ";
			}
			cout<<endl;
		}
	}
}
