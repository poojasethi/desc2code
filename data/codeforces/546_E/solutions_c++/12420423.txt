#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
#define inf (int)1e9
#define N 204
 
int con[N][N], n;
int path[N][N];
bool vis[N];
 
int find(int u, int f) {
    int c, i;
    for (i = 0; i <= 2 * n + 1; i++) {
        if (!vis[i] && con[u][i] > 0) {
            vis[i] = true;
            c = con[u][i];
            if (i == 2 * n + 1 || (c = find(i, min(f, c))) > 0) {
                if (i == 2 * n + 1) c = min(f, c);
                con[u][i] -= c;
                con[i][u] += c;
                path[u][i] += c;
                path[i][u] -= c;
                return c;
            }
        }
    }
    return -1;
}
 
void print() {
    int i, j;
    for (i = 1; i <= n; i++) {
        for (j = n + 1; j <= 2 * n; j++) {
            if (j != n + 1) printf(" ");
            if (path[i][j] < 0) printf("0");
            else printf("%d", path[i][j]);
        }
        puts("");
    }
}
 
int main() {
     
    int m;
    int i, j, p, q, s1(0), s2(0);
     
    scanf("%d%d", &n, &m);
    for (i = 1; i <= n; i++) 
        scanf("%d", &p), con[0][i] = p, s1 += p, con[i][i + n] = inf;
    for (i = 1; i <= n; i++) 
        scanf("%d", &p), con[n + i][2 * n + 1] = p, s2 += p;
    if (s1 != s2) {printf("NO"); return 0;}
    for (i = 0; i < m; i++) {
        scanf("%d%d", &p, &q);
        con[p][q + n] = inf;
        con[q][p + n] = inf;
    }
    int t(0), c;
    while (true) {
        memset (vis, 0, sizeof vis);
        if ((c = find(0, inf)) > 0) t += c;
        else break;
    }
    if (t != s1) {printf("NO"); return 0;}
     
    puts("YES");
    print();
     
    return 0;
} 

	  					  	   	 		 				 	 			