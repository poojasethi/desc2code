#include <bits/stdc++.h>

#define	st first
#define	nd second
#define	mp make_pair
#define	pb push_back
#define	lli long long int
#define	all( gg )	gg.begin(),gg.end()
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	FP( ii,aa,bb ) for( lli ii=aa;ii<=bb;ii++ )
#define	FM( ii,aa,bb ) for( lli ii=aa;ii>=bb;ii-- )
#define	debug(ccc)	cout << #ccc << " = " << ccc << endl;

#define	mod	1000000007LL

#define	beg	0
#define	end	1005
#define	in(xx)	((xx)*2-1)
#define	out(xx)	((xx)*2)

using namespace std;

int	n,m,adj[end+5][end+5],h[end+5],vis;

int	dfs( int nod,int a ){
	if( nod==end )	return	a;
	h[nod] = vis;
	int	temp;
	FP( i,0,end )
		if( h[i]!=vis and adj[nod][i] and (temp=dfs(i,min(a,adj[nod][i]))) ){
			adj[nod][i] -= temp;
			adj[i][nod] += temp;
			return	temp;
		}
	return	0;
}

int main(){
	int	x,y,s=0,sum=0,res=0,t;
	cin >> n >> m;
	FP( i,1,n ){
		cin >> x;
		s += x;
		adj[beg][in(i)] = x;
		adj[in(i)][out(i)] = mod;
	}
	FP( i,1,n ){
		cin >> x;
		sum += x;
		adj[out(i)][end] = x;
	}
	FP( i,1,m ){
		cin >> x >> y;
		adj[in(x)][out(y)] = mod;
		adj[in(y)][out(x)] = mod;
	}
	if( s!=sum )	return	puts("NO"),0;
	++vis;
	while( (t=dfs( beg,mod )) )	res += t , ++vis;
	if( res==sum )	puts("YES");
	else	return	puts("NO"),0;
	FP( i,1,n ){
		FP( j,1,n )
			cout << adj[ out(j) ][ in(i) ] << " ";
		cout << endl;
	}
}
