#include <iostream>
#include <cstdlib>
#include <cstring>
#include <cstdio>
#include <vector>
#include <cmath>
#include <algorithm>
#include <map>
#include <queue>
#include <complex>
using namespace std;
#define ll long long
#define x first
#define y second
#define pii pair<int, int>
#define pdd pair<double, double>
#define L(s) (int)(s).size()
#define VI vector<int>
#define all(s) (s).begin(), (s).end()
#define pb push_back
#define mp make_pair
#define pi 2 * acos(0.)
const int N = 5000005;
int c[222][222], u[222], f[222][222];
int s, t, sm_a, sm_b, n, m;
int dfs(int v, int cur) {
	if (v == t) return cur;
	if (u[v]) return 0;
	u[v] = 1;
	for(int i = 0; i <= t; ++i) {
		if (c[v][i] > f[v][i]) {
			int upd = min(cur, c[v][i] - f[v][i]);
			upd = dfs(i, upd);
			if (upd) {
				f[v][i] += upd;
				f[i][v] -= upd;
				return upd;
			}
		}
	}
	return 0;
}
int main() {
	cin >> n >> m;
	s = 2 * n;
	t = 2 * n + 1;
	for(int i = 0; i < n; ++i) {
		int x; cin >> x; c[s][i] = x; sm_a += x;
	}
	for(int i = 0; i < n; ++i) {
		int x; cin >> x; c[i + n][t] = x; sm_b += x;
	}
	for(int i = 0; i < n; ++i) {
		c[i][i + n] = 1e5;
	}
	while(m--) {
		int x, y;
		cin >> x >> y; --x; --y;
		c[x][y + n] = 1e5;
		c[y][x + n] = 1e5;
	}
	int fl = 0;
	memset(f, 0, sizeof(f));
	while(1) {
		memset(u, 0, sizeof(u));
		int add = dfs(s, 1e5);
		if (!add) break;
		fl += add;
	}
//	cerr << fl << endl;
	if (fl != sm_a || fl != sm_b) {
		cout << "NO\n";
		return 0;
	}
	cout << "YES\n";
	for(int i = 0; i < n; ++i) {
		for(int j = 0; j < n; ++j) {
			if (j) cout << " ";
			cout << max(0, f[i][j + n]);
		}
		cout << endl;
	}
}

