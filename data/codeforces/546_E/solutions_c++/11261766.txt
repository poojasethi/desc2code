#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<list>
#define INF 20002
using namespace std;
int n,m,res[205][205],pv[205];
int st[105],ed[105],f=0,df,x;
list<int> L[205],Q;
int main(){
  scanf("%d %d",&n,&m);
  int cur=0;
  for(int i=1;i<=n;i++){
    scanf("%d",&st[i]);
    cur+=st[i];
  }
  int tmp=0;
  for(int i=1;i<=n;i++){
    scanf("%d",&ed[i]);
    tmp+=ed[i];
  }
  if(cur!=tmp){printf("NO\n");return 0;}
  memset(res,0,sizeof(res));
  for(int i=1;i<=n;i++){
    res[0][i]=st[i];
    res[n+i][n+n+1]=ed[i];
    res[i][n+i]=INF;
    L[0].push_back(i);
    L[n+i].push_back(n+n+1);
    L[i].push_back(n+i);
    L[n+i].push_back(i);
  }
  for(int i=1;i<=m;i++){
    int a,b;
    scanf("%d %d",&a,&b);
    res[a][b+n]=res[b][a+n]=INF;
    L[a].push_back(b+n);
    L[b].push_back(a+n);
    L[a+n].push_back(b);
    L[b+n].push_back(a);
  }
  while(1){
    memset(pv,-1,sizeof(pv));
    pv[0]=-2;
    Q.clear();
    Q.push_back(0);
    while(!Q.empty()){
      int cur=Q.front();
      Q.pop_front();
      for(list<int>::iterator it=L[cur].begin();it!=L[cur].end();it++){
        int to=*it;
        if(pv[to]==-1 && res[cur][to]>0){
          pv[to]=cur;
          Q.push_back(to);
        }
      }
    }
    if(pv[n+n+1]==-1) break;
    df=INF,x=n+n+1;
    while(x!=0){
      df=min(df,res[pv[x]][x]);
      x=pv[x];
    }
    if(df==0) break;
    f+=df;
    x=n+n+1;
    while(x!=0){
      res[pv[x]][x]-=df;
      res[x][pv[x]]+=df;
      x=pv[x];
    }
  }
  if(f!=cur){printf("NO\n");return 0;}
  printf("YES\n");
  for(int i=1;i<=n;i++)
    for(int j=1;j<=n;j++)
      printf("%d%c",res[j+n][i],j==n?'\n':' ');
  return 0;
}