#include <stdio.h>
#include <string.h>
#include <vector>
#define pb push_back
using namespace std;
const int X=202,oo=1000000;
int ar[X],br[X],A,B,cap[X][X],val[X][X],vis[X],ant[X];
vector<int> adj[X];
typedef vector<int>::iterator vi;

int dfs(int s){
	if(s==B)return 1;
	vis[s]=1;
	int t;
	for(vi i=adj[s].begin();i!=adj[s].end();i++)if(!vis[*i]){
		if(val[s][*i]<cap[s][*i]){
			ant[*i]=s;
			t=dfs(*i);
			if(t)return 1;
		}
	}
	return 0;
}

void back(int s){
	if(s==A)return;
	int sp=ant[s];
	val[sp][s]++; val[s][sp]--;
	back(sp);
}

int flow(){
	int fm,f=0;
	while(dfs(A)){
		f++;
		back(B);
		memset(vis,0,sizeof(vis));
	}
	return f;
}

int main(){
	int N,M,mp=0,np=0;
	scanf("%d%d",&N,&M);
	A=0; B=2*N+1;
	for(int i=1;i<=N;i++){
		scanf("%d",&ar[i]);
		adj[A].pb(i); cap[A][i]=ar[i];
		adj[i].pb(A); cap[i][A]=0;
		np+=ar[i];
	}
	for(int i=1;i<=N;i++){
		scanf("%d",&br[i]);
		adj[i+N].pb(B); cap[i+N][B]=br[i];
		adj[B].pb(i+N); cap[B][i+N]=0;
		mp+=br[i];
	}
	for(int i=1;i<=N;i++){
		adj[i].pb(i+N); cap[i][i+N]=oo;
		adj[i+N].pb(i); cap[i+N][i]=0;
	}
	while(M--){
		int a,b;
		scanf("%d%d",&a,&b);
		adj[a].pb(b+N); cap[a][b+N]=oo;
		adj[b].pb(a+N); cap[b][a+N]=oo;
		adj[a+N].pb(b); cap[a+N][b]=0;
		adj[b+N].pb(a); cap[b+N][a]=0;
	}
	M=flow();
	//printf("%d %d\n",M,mp);
	if(M!=mp || np!=mp){printf("NO\n");return 0;}
	printf("YES\n");
	for(int i=1;i<=N;i++){
		for(int j=1;j<=N;j++)
			printf("%d%c",val[i][j+N], j==N ? '\n':32);
	}
	return 0;
}