#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;
#define maxn 300
#define maxm 10000
struct edges{
	int to,next,cap;
}edge[maxm*2];
int next[maxn],L,Cnt;
#define inf 0x7fffffff
inline void addedge(int x,int y,int z){
	L++;
	edge[L*2]=(edges){y,next[x],z};next[x]=L*2;
	edge[L*2+1]=(edges){x,next[y],0};next[y]=L*2+1;
}
int h[maxn],gap[maxn],p[maxn],s,t;
int sap(int u,int flow){
	if (u==t) return flow;
	int cnt=0;
	for (int i=p[u];i;i=edge[i].next) 
		if (edge[i].cap&&h[edge[i].to]+1==h[u]) {
			int cur=sap(edge[i].to,min(flow-cnt,edge[i].cap));
			edge[i].cap-=cur;edge[i^1].cap+=cur;
			p[u]=i;
			if ((cnt+=cur)==flow) return flow;
		}
	if (!(--gap[h[u]])) h[s]=Cnt;
	gap[++h[u]]++;p[u]=next[u];
	return cnt;
}
inline int maxflow(){
	for (int i=1;i<=Cnt;i++) p[i]=next[i];
	memset(h,0,sizeof(h));
	memset(gap,0,sizeof(gap));
	gap[0]=Cnt;
	int flow=0;
	while (h[s]<Cnt) flow+=sap(s,inf);
	return flow;
}
#define maxk 110
int a[maxk][2],ans[maxk][maxk];
int main(){
	int n,m,sum=0,tmp=0;
	scanf("%d%d",&n,&m);
	s=++Cnt,t=++Cnt;
	for (int i=1;i<=n;i++) a[i][0]=++Cnt,a[i][1]=++Cnt;
	for (int i=1;i<=n;i++) {
		int x;
		scanf("%d",&x);
		tmp+=x;
		addedge(s,a[i][0],x);	
	}
	for (int i=1;i<=n;i++) {
		int x;
		scanf("%d",&x);
		sum+=x;
		addedge(a[i][0],a[i][1],inf);
		addedge(a[i][1],t,x);
	}
	for (int i=1;i<=m;i++) {
		int x,y;
		scanf("%d%d",&x,&y);
		addedge(a[x][0],a[y][1],inf);
		addedge(a[y][0],a[x][1],inf);
	}
	if (maxflow()!=sum||sum!=tmp) {
		printf("NO\n");
		return 0;
	}
	puts("YES");
	for (int i=1;i<=L;i++) {
		ans[(edge[i*2+1].to-1)>>1][(edge[i*2].to-1)>>1]=edge[i*2+1].cap;
	}
	for (int i=1;i<=n;i++,puts("")) 
		for (int j=1;j<=n;j++) printf("%d ",ans[i][j]);
	return 0;
}
   			 						    	   				  	 	