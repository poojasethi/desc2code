#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<numeric>
#include<queue>
using namespace std;
#define inf 1000000000
int n,m,s,t,i,a,b,res,x,y,j;
int A[210][210],B[210][210],P[210];
queue<int> Q;
void push(int x,int y)
{
  if(P[x]==-1)
  {
    P[x]=y;
    Q.push(x);
  }
}
int bfgs()
{
  int x,i,mn;
  memset(P,-1,sizeof P);
  push(s,s);
  while(!Q.empty())
  {
    x=Q.front();
    Q.pop();
    for(i=0;i<=t;i++)
      if(A[x][i]>0)
        push(i,x);
  }
  if(P[t]==-1)
    return 0;
  x=t;
  mn=A[P[x]][x];
  while(x!=s)
  {
    mn=min(mn,A[P[x]][x]);
    x=P[x];
  }
  x=t;
  while(x!=s)
  {
    A[P[x]][x]-=mn;
    A[x][P[x]]+=mn;
    x=P[x];
  }
  return mn;
}
int main()
{
  scanf("%d%d",&n,&m);
  s=2*n;
  t=s+1;
  for(i=0;i<n;i++)
    scanf("%d",&A[s][i]);
  a=accumulate(A[s],A[s]+n,0);
  for(i=0;i<n;i++)
  {
    scanf("%d",&A[n+i][t]);
    b+=A[n+i][t];
  }
  for(i=0;i<n;i++)
    A[i][n+i]=inf;
  while(m--)
  {
    scanf("%d%d",&x,&y);
    x--;
    y--;
    A[x][n+y]=A[y][n+x]=inf;
  }
  memcpy(B,A,sizeof A);
  while(x=bfgs())
    res+=x;
  if(res==a && a==b)
  {
    printf("YES\n");
    for(i=0;i<n;i++)
    {
      for(j=n;j<2*n;j++)
      {
        if(j)
          printf(" ");
        printf("%d",B[i][j]-A[i][j]);
      }
      printf("\n");
    }
  }
  else
    printf("NO\n");
	return 0;
}
