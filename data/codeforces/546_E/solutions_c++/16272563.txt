#include <cstdio>
#include <queue>
#include <cstring>
#define INF 1000000000

using namespace std;

int n,m,juma,jumb,adm[220][220],jar[220],p[220];
int f,a,b;

void augment(int v, int w){
	if (v == 0) f = w; else
	if (p[v] != -1){
		augment(p[v], min(w,adm[p[v]][v]));
		adm[p[v]][v] -= f;
		adm[v][p[v]] += f;
	}
}

int flow(int s, int t){
	int mf = 0;
	while (true){
		memset(p,-1,sizeof(p));
		for (int i = 0; i <= 2*n + 1; i++) jar[i] = INF;
		queue<int> q;
		q.push(s);
		while (!q.empty()){
			int x = q.front();
			q.pop();
			for (int i = 0; i <= 2*n + 1; i++){
				if (adm[x][i] > 0 && jar[i] == INF){
					p[i] = x;
					jar[i] = jar[x] + 1;
					q.push(i);
				}
			}
		}
		f = 0;
		augment(t,INF);
		if (f == 0) break;
		mf += f;
	}
	return mf;
}

int main(){
	scanf("%d %d",&n,&m);
	for (int i = 1; i <= n; i++){
		scanf("%d",&adm[0][i]);
		juma += adm[0][i];
		adm[i][i + n] = INF;
	}
	for (int i = 1; i <= n; i++){
		scanf("%d",&adm[i + n][2*n + 1]);
		jumb += adm[i + n][2*n + 1];
	}
	for (int i = 1; i <= m; i++){
		scanf("%d %d",&a,&b);
		adm[a][b + n] = INF;
		adm[b][a + n] = INF;
	}
	int mf = flow(0, 2*n + 1);
	if (mf == juma && juma == jumb){
		puts("YES");
		for (int i = 1; i <= n; i++){
			for (int j = n + 1; j <= 2*n; j++){
				printf("%d",adm[j][i]);
				if (j < 2*n) printf(" ");
			}
			puts("");
		}
	} else puts("NO");
}