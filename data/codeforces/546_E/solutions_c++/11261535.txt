#include<bits/stdc++.h>
using namespace std;
int d[300],n;
int c[300][300];
int f[300][300];
int next[300];
bool bfs(int s,int t)
{
    queue<int> qu;
    int i;
    memset(d,-1,sizeof d);
    d[s]=0; qu.push(s);
    while(!qu.empty())
    {
        s=qu.front(); qu.pop();
        for(i=1;i<=2*n+1;i++)
        {
            if(d[i]==-1 && c[s][i]>f[s][i])
            {
                d[i]=d[s]+1; qu.push(i);
            }
        }
    }
   // printf("%d %d\n",s,t);
    return d[t]!=-1;
}
int dfs(int s,int t,int flow)
{
    if(s==t) return flow;
   // printf("%d %d\n",s,t);
    for(;next[s]<=2*n+1;next[s]++)
    {
        int i=next[s];
        int tmp;
        if(c[s][i]>f[s][i] && d[i]==d[s]+1 && (tmp=dfs(i,t,min(flow,c[s][i]-f[s][i])))!=0)
        {
            f[s][i]+=tmp;
            f[i][s]-=tmp;
            return tmp;
        }
    }
    return 0;
}
int main()
{
    int m,i,x,flow=0,floww=0,y;
    //freopen("test.inp","r",stdin);
    scanf("%d %d",&n,&m);
    for(i=1;i<=n;i++)
    {
        scanf("%d",&x);
        c[0][i]=x;
        c[i][i+n]=123456789;
        floww-=x;
    }
    for(i=n+1;i<=n+n;i++)
    {
        scanf("%d",&x);
        c[i][n*2+1]=x;
        flow-=x;
    }
    if(flow!=floww) {printf("NO"); return 0;}
    while(m--)
    {
        scanf("%d %d",&x,&y);
        c[x][y+n]=c[y][x+n]=1999999999;
    }
    while(bfs(0,n*2+1))
    {
        int tmp;
        memset(next,0,sizeof next);
        while((tmp=dfs(0,n*2+1,123456791))!=0)
        {
            flow+=tmp;
        }
    }
    if(flow) {printf("NO"); return 0;}
    printf("YES\n");
    for(i=1;i<=n;i++)
    {
        for(int j=n+1;j<=n*2;j++)
        printf("%d ",f[i][j]);
        printf("\n");
    }
}
