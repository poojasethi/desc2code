#include <cstdio>
#include <queue>
using namespace std;

const int B = 100, S = 0, T = 201, M = 202;
int c[M][M], f[M][M];

int main(){
	int n, m;
	scanf("%d%d", &n, &m);
	int b = 0, s = 0, t = 0;
	for (int i = 1, j; i <= n; i++) {
		scanf("%d", &j);
		s += j;
		c[S][i] = c[i][S] = f[i][S] = j;
	}
	for (int i = 1+B, j; i <= n+B; i++) {
		scanf("%d", &j);
		t += j;
		c[i][T] = c[T][i] = f[T][i] = j;
	}
	for (int i = 1; i <= n; i++) {
		c[i][i+B] = c[i+B][i] = f[i+B][i] = 100;
	}
	for (int i = 0, j, k; i < m; i++) {
		scanf("%d%d", &j, &k);
		c[j][k+B] = c[k+B][j] = f[k+B][j] = 100;
		c[k][j+B] = c[j+B][k] = f[j+B][k] = 100;
	}
	while (true) {
		queue<int> q;
		bool visit[M];
		int pre[M];
		for (int i = 0; i < M; i++) {
			visit[i] = false;
			pre[i] = i;
		}
		while (!q.empty()) q.pop();
		q.push(S);
		while (!q.empty() && !visit[T]) {
			int u = q.front();
			visit[u] = true;
			for (int i = 0; i < M; i++) {
				if (f[i][u] > 0 && !visit[i]) {
					q.push(i);
					pre[i] = u;
				}
			}
			q.pop();
		}
		if (visit[T]) {
			int min = 100;
			for (int i = T; i; ) {
				int j = pre[i];
				if (f[i][j] < min) {
					min = f[i][j];
				}
				i = j;
			}
			for (int i = T; i; ) {
				int j = pre[i];
				f[j][i] += min;
				f[i][j] -= min;
				i = j;
			}
			b += min;
		} else {
			break;
		}
	}
	if (b != s || b != t) {
		printf("NO\n");
	} else {
		printf("YES\n");
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= n; j++) {
				printf("%d%c", f[i][j+B], j==n?'\n':' ');
			}
		}
	}
	return 0;
}
