n = input ()
g = [[] for _ in xrange (n)]
for _ in xrange (n - 1):
    u, v = map (lambda x: int (x) - 1, raw_input ().split ())
    g[u].append (v)
    g[v].append (u)

def dfs (u, p):
    color[u] = 1
    for v in g[u]:
        if v == p:
            continue
        elif color[v] == 0:
            dfs (v, u)
        elif color[v] == 1:
            queue.append ((u, v))    
    color[u] = 2
    
queue = []
roots = []
color = [0 for u in xrange (n)]
for u in xrange (n):
    if color[u] == 0:
        roots.append (u)
        dfs (u, -1)    
print len (roots) - 1
for old, new in zip (queue, zip (roots[:-1], roots[1:])):
    print old[0] + 1, old[1] + 1, new[0] + 1, new[1] + 1
    
    
    
    
    
    
    
    
    
    
    
    

