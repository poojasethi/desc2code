#define problem "25D"
#include <cstdio>
#include <vector>
#define FOR(i,l,r) for(int i=int(l); i<=int(r); i++)
using namespace std;
const int maxn=1e3+10;
int N, cnect[maxn][maxn], P[maxn];
vector<int> node;

void DFS(int u){
    FOR(v,1,N) if(cnect[u][v]==1 && !P[v]){
        cnect[u][v]=cnect[v][u]=2;
        P[v]=u;
        DFS(v);
    }
}

int main(){

    scanf("%d\n",&N);
    for(int i=1, u, v; i<=N-1 && scanf("%d%d\n",&u,&v); i++) cnect[u][v]=cnect[v][u]=1;
    int ans=0;
    FOR(i,1,N) if(!P[i]){
        node.push_back(i);
        P[i]=-1;
        ans++;
        DFS(i);
    }
    printf("%d\n",ans-1);
    int k=0;
    FOR(i,1,N-1) FOR(j,i+1,N) if(cnect[i][j]==1) printf("%d %d %d %d\n",i,j,node[++k],node[k]);
}
