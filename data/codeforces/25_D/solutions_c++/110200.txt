#include <iostream>

using namespace std;

int pset[ 2001 ];
int X[ 2001 ];
int Y[ 2001 ];
int findSet(int i){
	return ( pset[i] == i ) ? i : ( pset[i] = findSet( pset[i] ) );
}

void unionSet(int i, int j){
	pset[ findSet(i) ] = findSet(j);
}

int main(){
	int n;
	
	cin >> n;
	for (int i=1; i<=n; i++) pset[i] = i;
	
	int sz = 0;
	for (int i=1; i<n; i++){
		int u,v;
		cin >> u >> v;
		
		if ( findSet(u)==findSet(v) ){
			X[ sz ] = u;
			Y[ sz ] = v;
			sz++;
		}
		else unionSet( u, v );
	}
	
	cout << sz << endl;
	for (int i=0; i<sz; i++)
		for (int j=1; j<=n; j++)
			if ( findSet(X[i]) != findSet(j) ){
				cout << X[i] << " " << Y[i] << " " << X[i] << " " << j << endl;
				unionSet( X[i], j );
				break;
			}

	return 0;
}
