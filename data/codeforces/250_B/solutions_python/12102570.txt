def f(s):
    l = len(s)
    if l>=4:
        return s
    else:
        return '0'*(4-l)+s

def solve_(s):
    return map(
        lambda ss: '0'*max(0,4-len(ss))+ss, s.split(':')
    )
    
def solve1(s):
    ':: in s'
    s0,s1 = s.split("::")[:2]
    #print s0, s1
    r0 = solve_(s0) if s0 else []
    r2 = solve_(s1) if s1 else []
    n = 8 - len(r0) - len(r2)
    r1 = ["0000"] * n
    r = r0 + r1 + r2
    print ':'.join(r)
    
def solve2(s):
    "no :: is s"
    print ':'.join(solve_(s))
    
def solve(s):
    if "::" in s:
        solve1(s)
    else:
        solve2(s)

t = int(raw_input())
while t > 0:
    t -= 1
    solve(raw_input())
    