#include<cstdio>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
using namespace std;

int a[100010],n,ans[100010];
bool f[100010][10][2][2]; 
char c;

bool dfs(int k,int r1,int r2,int x){
	if((n&1)==0&&k>n/2) return r1==r2;
	else if((n&1)==1&&k>n/2){
		if((r2*10+a[k]-r1)&1)return f[k][x][r1][r2]=true,false;
		ans[k]=(r2*10+a[k]-r1)/2;
		return true;
	}
	if(f[k][x][r1][r2]) return false;
	for(int i=0;i<10;i++){
		if(k==1&&i==0) continue;
		int t1=(a[k]-r1-i)<0,t2=(a[k]-r1-i+10)%10;
		if(r2*10+a[n-k+1]-i-t2>1||r2*10+a[n-k+1]-i-t2<0) continue;
		ans[k]=i; ans[n-k+1]=t2;
		if(dfs(k+1,t1,r2*10+a[n-k+1]-i-t2,i)) return true;
	}
	f[k][x][r1][r2]=true;
	return false;
}

int main(){
	for(c=getchar();'0'<=c&&c<='9';c=getchar()) a[++n]=c-'0';
	for(int i=1;i<=n/2;i++) swap(a[i],a[n-i+1]);
	if(dfs(1,0,0,0)){
		for(int i=1;i<=n;i++) printf("%d",ans[i]);
	} else {
		if(a[n]!=1) puts("0");
		else {
			n--;
			memset(f,false,sizeof(f));
			if(dfs(1,0,1,0)){
				for(int i=1;i<=n;i++) printf("%d",ans[i]);
			} else puts("0");
		}
	}
	return 0;
}
