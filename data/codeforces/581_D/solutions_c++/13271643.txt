#include <cstdio>
#include <algorithm>
using namespace std;
#define rep(i, n) for(int i = 0; i < (n); ++i)
#define rep1(i, n) for(int i = 1; i <= (n); ++i)

void pt(char c, int t){
    while(t--) putchar(c);
}


int x[3], y[3];

bool flag;

void f1(int i, int j, int k){
    if(x[i] == x[j] && x[j] == x[k] && y[i] + y[j] + y[k] == x[i]){
        printf("%d\n", x[i]);
        rep(_, y[i]) pt('A' + i, x[i]), puts("");
        rep(_, y[j]) pt('A' + j, x[j]), puts("");
        rep(_, y[k]) pt('A' + k, x[k]), puts("");
        flag = true;
    }
}

void f2(int i, int j, int k){
    if(x[i] == x[j] + x[k] && y[j] == y[k] && y[j] + y[i] == x[i]){
        printf("%d\n", x[i]);
        rep(_, y[i]) pt('A' + i, x[i]), puts("");
        rep(_, y[j]) pt('A' + j, x[j]), pt('A' + k, x[k]), puts("");
        flag = true;
    }
}

int a[3];

void dfs(int i){
    if(flag) return;
    if(i < 3){
        dfs(i + 1);
        swap(x[a[i]], y[a[i]]);
        dfs(i + 1);
        swap(x[a[i]], y[a[i]]);
    }
    else{
        if(!flag)f1(a[0], a[1], a[2]);
        if(!flag)f2(a[0], a[1], a[2]);
    }
}

int main(){
    while(true){
        int _ = 0;
        rep(i, 3) _ += scanf("%d%d", &x[i], &y[i]);
        if(_ != 6) break;
        rep(i, 3) a[i] = i;
        flag = false;
        do dfs(0); while(!flag && next_permutation(a, a + 3));
        if(!flag) puts("-1");
    }
    return 0;
}