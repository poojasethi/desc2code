from math import *
from Queue import *
from sys import *
from datetime import *



def firstFree(table):
    for i in range(len(table)):
        for j in range(len(table)):
            if table[i][j] == '':
                return i, j

def implement(s,r,c):
    global table
    for i in range(side):
        for j in range(side):
            table[i][j] = ''
    for i in range(3):
        num = ord(s[i]) - ord('A') + 1
        x, y = firstFree(table)
        for j in range(x,x+c[num][r[num-1]]):
            for k in range(y,y+c[num][1-r[num-1]]):
                if (j >= side) or (k >= side) or (table[j][k] != ''):
                    return False
                table[j][k] = s[i]
    return True

c = [[0 for j in range(2)] for i in range(4)]
c[1][0], c[1][1], c[2][0], c[2][1], c[3][0], c[3][1] = map(int, raw_input().split())
area = 0
for i in range(1,4):
    area += c[i][0]*c[i][1]
side = int(sqrt(area))
if area != side**2:
    print(-1)
    exit(0)
table = [['' for j in range(side)] for i in range(side)]
for s in ['ABC', 'ACB', 'BAC', 'BCA', 'CAB', 'CBA']:
    for r in [[0,0,0],[0,0,1],[0,1,0],[1,0,0],[0,1,1],[1,0,1],[1,1,0],[1,1,1]]:
        if implement(s,r,c):
            print(len(table))
            for row in table:
                print(''.join(row))
            exit(0)
print(-1)

