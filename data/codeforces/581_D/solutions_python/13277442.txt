#!/usr/bin/env python

import sys

I = raw_input
def ia(): return map(int, I().split())
def na(n): return [ia() for _ in range(n)]

arr = ia()
logos = [(arr[i], arr[i+1]) for i in range(0, len(arr), 2)]

rectarea = 0
for x, y in logos:
    rectarea += x*y

sidelen = pow(rectarea, 0.5)
if not sidelen.is_integer(): print -1
else:
    sidelen = int(sidelen)
    for x, y in logos:
        if max(x, y) > sidelen:
            print -1
            sys.exit(0)

    logos = dict(zip(['A', 'B', 'C'], logos))

    first = None
    for logo in logos.items():
        if max(logo[1]) == sidelen:
            first = logo
            del logos[logo[0]]
            break
    else:
        print -1
        sys.exit(0)

    board = []
    for i in range(min(first[1])):
        board.append([first[0]]*sidelen)

    val, dim = logos.popitem()
    while len(board) < sidelen:
        board.append([val]*sidelen)

    val, dim = logos.popitem()
    if max(dim)+i+1 > sidelen:
        for x in range(i+1, min(dim)+i+1):
            for y in range(max(dim)):
                board[x][y] = val
    elif max(dim)+i+1 == sidelen:
        for x in range(i+1, sidelen):
            for y in range(min(dim)):
                board[x][y] = val
    else:
        print -1
        sys.exit(0)

    print sidelen
    for row in board:
        print ''.join(row)

