from itertools import permutations
import math


x1, y1, x2, y2, x3, y3 = [int(x) for x  in raw_input().split()]

# x1, y1, x2, y2, x3, y3 = 4, 4, 2, 6, 4, 2

area = x1 * y1 + x2 * y2 + x3 * y3
side = int(math.sqrt(area))
if side * side != area:
    print -1
else:
    seq = [(x1, y1, 'A'), (x2, y2, 'B'), (x3, y3, 'C')]

    s = False

    def pprint1(x1, y1, x2, y2, x3, y3, c1, c2, c3):
        print side
        s1 = c1 * x1
        for i in xrange(y1):
            print s1
        s2 = c2 * x1
        for i in xrange(y2):
            print s2
        s3 = c3 * x1
        for i in xrange(y3):
            print s3

    def pprint2(x1, y1, x2, y2, x3, y3, c1, c2, c3):
        print side
        s1 = c1 * y1
        s2 = c2 * y2
        s3 = c3 * y3
        for i in xrange(x1):
            print(s1 + s3)
        for i in xrange(x2):
            print (s2 + s3)

    for a, b, c in permutations(seq):
        aa = a[0:2]
        bb = b[0:2]
        cc = c[0:2]
        for x1, y1 in permutations(aa):
            for x2, y2 in permutations(bb):
                for x3, y3 in permutations(cc):
                    if x1 == x2 and x2 == x3 and x1 == side:
                        if not s:
                            s = True
                            pprint1(x1, y1, x2, y2, x3, y3, a[2], b[2], c[2])
                    if x1 + x2 == x3 and y1 == y2 and x3 == side:
                        if not s:
                            s = True
                            pprint2(x1, y1, x2, y2, x3, y3, a[2], b[2], c[2])

    if not s:
        print -1




