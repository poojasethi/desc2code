def process(t):
    if t[0] > t[1]:
        return ("x", t[0])
    elif t[1] > t[0]:
        return ("y", t[1])
    else:
        return ("b", t[0])

logos = [int(x) for x in raw_input().split()]
fst = max(logos[0], logos[1]), min(logos[0], logos[1]), "A"
snd = max(logos[2], logos[3]), min(logos[2], logos[3]), "B"
trd = max(logos[4], logos[5]), min(logos[4], logos[5]), "C"

lst = [fst, snd, trd]

max_x = max([fst[0], snd[0], trd[0]])

square_size = max_x

sum = 0

primary = []
secondary = []

secondary_bound = 0

for e in lst:
    sum += e[0] * e[1]
    
if sum == square_size ** 2:
    print square_size
    for e in lst:
        p = process(e)
        if p[1] == square_size:
            primary.append((e, p))
        else:
            secondary.append((e, p))
            
    remain = square_size
            
    for ee in primary:
        for i in range(0, ee[0][1]):
            print ee[0][2]*square_size
            remain -= 1
    for i in range(0, remain):
        l = []
        for ee in secondary:
            if ee[0][0] == remain:
                secondary_bound = 1
            elif ee[0][1] == remain:
                secondary_bound = 0
            l.append(ee[0][2]*ee[0][secondary_bound])
        print "".join(l)
else:
    print -1