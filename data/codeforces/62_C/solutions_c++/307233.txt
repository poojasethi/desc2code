#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker,"/STACK:16777216")
#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <cstdlib>
#define FOR(i,a,n) for(int i=(a);i<(n);i++)
#define REP(i,n) FOR(i, 0, n)
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
#define lint long long
#define PII pair <int,int>
#define PDD pair <double,double>
#define VI vector <int>
#define VII vector < PII >
#define X first
#define Y second
#define sz(a) (int)(a.size())
using namespace std;

const double eps = 1e-8;
const int DIM=110;
int n;
PDD p[DIM][4];
double ch, ans;
double an[3];
vector < double > vec;
double sqr(double q){return q*q;}
double dist(PDD A, PDD B){
	return sqrt(sqr(A.X-B.X)+sqr(A.Y-B.Y));
}
double vect(PDD A, PDD B){
	return A.X*B.Y - A.Y*B.X;
}
bool inter(PDD A, PDD B, PDD C, PDD D){
	PDD CA = mp(C.X - A.X, C.Y - A.Y);
	PDD BA = mp(B.X - A.X, B.Y - A.Y);
	PDD DC = mp(D.X - C.X, D.Y - C.Y);
	double zn = vect(BA, DC);
	if (abs(zn) < eps) return false;
	ch = vect(CA, DC);
	ch /= zn;
	return (-eps < ch && ch < 1+eps);
}
bool inside(PDD E, int nn){
	REP(i, n)if (i != nn){
		REP(j, 3){
			PDD C = p[i][j];
			PDD D = p[i][j+1];
			PDD DC = mp(D.X-C.X, D.Y-C.Y);
			PDD EC = mp(E.X-C.X, E.Y-C.Y);
			an[j] = vect(DC, EC);
		}
		bool g1 = 1, g2 = 1;
		REP(j, 3){
			if (an[j] < eps) g1 = 0;
			if (an[j] > -eps) g2 = 0;
		}
		if (g1 || g2) return true;
	}
	return false;
}
void cut(PDD A, PDD B, int nn){
	REP(i, n)if (i != nn){
		REP(j, 3){
			PDD C = p[i][j];
			PDD D = p[i][j+1];
			if (inter(C, D, A, B) && inter(A, B, C, D)){
				vec.pb(ch);
			}
		}
	}
}
void solve(){
	REP(i, n){
		REP(j, 3){
			PDD A = p[i][j];
			PDD B = p[i][j+1];
			vec.clear();
			cut(A, B, i);
			vec.pb(0.0);
			vec.pb(1.0);
			sort(all(vec));
			REP(it, sz(vec)-1){
				PDD C = mp(A.X + vec[it]*(B.X - A.X), A.Y + vec[it]*(B.Y - A.Y));
				PDD D = mp(A.X + vec[it+1]*(B.X - A.X), A.Y + vec[it+1]*(B.Y - A.Y));
				if (dist(C, D) > eps){
					PDD E = mp((C.X+D.X)/2, (C.Y+D.Y)/2);
					if (!inside(E, i)){
						ans += dist(C, D);
					}
				}
			}
		}
	}
	printf("%.7lf\n", ans);
}
int main(){
	//freopen("t.in","r",stdin);
	scanf("%d",&n);
	REP(i, n){
		REP(j, 3){
			scanf("%lf%lf", &p[i][j].X, &p[i][j].Y);
		}
		p[i][3] = p[i][0];
	}
	solve();
	return 0;
}

