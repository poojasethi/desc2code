#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstring>
#include<vector>
#include<algorithm>
#include<map>
#include<set>

using namespace std;

#define y1 fndjifhwdn
#define ws vfsdkofsjd
#define fs first
#define sc second
#define pb push_back
#define mp make_pair

typedef long long ll;
typedef long double ld;
typedef pair<ld,ld> pi;
typedef pair<pi,int> pii;

int x1[200], y1[200], x2[200], y2[200], x3[200], y3[200];
int n;
bool f[200];
int cc[200];
vector<pii> p; 
ld ans = 0;
ld eps = 1e-8;

void inter(int l, ll A, ll B, ll C, int x1, int y1, int x2, int y2) {
    ll A2 = y1-y2;
    ll B2 = x2-x1;
    ll C2 = -(A2*x1+B2*y1);
    ll d = A*B2-A2*B;
    if (d==0) return;
    ll d1 =B*C2-B2*C;
    ll d2 =C*A2-C2*A;
    ld px = (ld)d1/d;
    ld py = (ld)d2/d;
    if (x1>x2) swap(x1,x2);
    if (y1>y2) swap(y1,y2);

    if (x1<=px+eps && px<=x2+eps && y1<=py+eps && py<=y2+eps) {
        //cerr << x1 << " " << y1 << " " << px << " " << py << " " << x2 << " " << y2 << endl; 
        p.pb(mp(mp(px, py), l));
        cc[l]++;
    }
}


ld dist(ld x1, ld y1, ld x2, ld y2) {
    return sqrt((ld)(x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
}

void check(int l, int sx, int sy, int ex, int ey) {
    //cerr << "! " << sx << " " << sy << " " << ex << " " << ey << endl; 
    p.clear();
    for(int i=0;i<n;i++) f[i] = false;
    for(int i=0;i<n;i++) cc[i] = 0;
    p.pb(mp(mp(sx,sy),l));
    p.pb(mp(mp(ex,ey),l));
    ll A = sy-ey;
    ll B = ex-sx;
    ll C = -(A*sx+B*sy);
    for (int i=0; i<n; i++) {
        if (i==l) continue;
        inter(i, A,B,C, x1[i], y1[i], x2[i], y2[i]);
        inter(i, A,B,C, x1[i], y1[i], x3[i], y3[i]);
        inter(i, A,B,C, x3[i], y3[i], x2[i], y2[i]);
    }   
    sort(p.begin(), p.end());
    int cnt = 0;
    bool fl = false;
    int t;
    for (int i=0; i<p.size(); i++) {
        t = p[i].sc;
        if (t==l) {
            fl = not fl;
        } else {       
            if (!f[t])  {
                cnt++;
                f[t] = true;
            }
            cc[t]--;
            if (!cc[t]) {
                cnt--;
                f[t] = false;
            }
            //f[t] = not f[t]; 
        }   
        if ((i<((int)(p.size()))-1) && fl && (cnt == 0)) {
            ans += dist(p[i].fs.fs, p[i].fs.sc, p[i+1].fs.fs, p[i+1].fs.sc);
        //  cerr << p[i].fs.fs<< " " <<  p[i].fs.sc<<" " << p[i+1].fs.fs<< " " << p[i+1].fs.sc << " " << ans << endl;
        }
    }
}


int main(){
    scanf("%d", &n);
    for (int i=0; i<n; i++) scanf("%d%d%d%d%d%d", &x1[i], &y1[i], &x2[i], &y2[i], &x3[i], &y3[i]);
    for (int i=0; i<n; i++) {
        check(i, x1[i], y1[i], x2[i], y2[i]);
        check(i, x1[i], y1[i], x3[i], y3[i]);
        check(i, x3[i], y3[i], x2[i], y2[i]);
    }
    printf("%.18lf\n",(double)ans); 
    return 0;
}