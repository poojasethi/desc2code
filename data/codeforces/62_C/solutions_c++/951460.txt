#include<cstdio>
#include<cmath>
#include<algorithm>
using namespace std;
struct point{
    double x,y;
}p1,p2;
struct line{
    point a,b;
    line(){}
    line(point x,point y){a=x;b=y;}
}l[310];
struct tri{
    point a,b,c;
}t[110];
struct bracket{
    double s;int x;
}br[610];
const double eps=1e-10;
int n,tot;
double ans;
bool operator==(point a,point b){
    return a.x==b.x&&a.y==b.y;
}
bool cmp(bracket a,bracket b){
    return a.s<b.s;
}
double cross(point a,point b,point o){
    double x1=a.x-o.x,y1=a.y-o.y,x2=b.x-o.x,y2=b.y-o.y;
    return x1*y2-x2*y1;
}
bool same(tri a,tri b){
    if(a.a==b.a&&a.b==b.b&&a.c==b.c)return 1;
    if(a.b==b.a&&a.c==b.b&&a.a==b.c)return 1;
    if(a.c==b.a&&a.a==b.b&&a.b==b.c)return 1;
    return 0;
}
int sign(double x){
    if(fabs(x)<=eps)return 0;
    if(x<0)return -1;
    else return 1;
}
bool check(line l1,line l2){
    return sign(cross(l2.b,l1.a,l2.a)*cross(l2.b,l1.b,l2.a))<=0;
}
double getradio(line l1,line l2){
    double s1=cross(l2.a,l1.b,l1.a),s2=cross(l1.b,l2.b,l1.a);
    if(sign(s1)==0)return 0.0;
    return s1/(s1+s2);
}
void calc(line l1,line l2,line l3){
    if(check(l1,l3)&&check(l2,l3)){
        double l=getradio(l1,l3),r=getradio(l2,l3);
        if(l>r)swap(l,r);
        l = max(l, (double)0);
        l = min(l, (double)1);
        r = max(r, (double)0);
        r = min(r, (double)1);
        if(sign(l-r)==0)return;
        br[++tot].s=l;br[tot].x=1;
        br[++tot].s=r;br[tot].x=-1;
    }
}
int main(){
    scanf("%d",&n);
    for(int i=1;i<=n;++i){
        scanf("%lf%lf%lf%lf%lf%lf",&t[i].a.x,&t[i].a.y,&t[i].b.x,&t[i].b.y,&t[i].c.x,&t[i].c.y);
        if(sign(cross(t[i].b,t[i].c,t[i].a))<=0)swap(t[i].b,t[i].c);
        for(int j=1;j<i;++j)
            if(same(t[i],t[j])){
                --i;--n;break;
            }
    }
    for(int i=1;i<=n;++i){
        l[i*3-2]=line(t[i].a,t[i].b);
        l[i*3-1]=line(t[i].b,t[i].c);
        l[i*3]=line(t[i].c,t[i].a);
    }
    for(int i=1;i<=3*n;++i){
        tot=0;
        for(int j=1;j<=n;++j)
            if((i+2)/3!=j){
                calc(l[j*3-2],l[j*3-1],l[i]);
                calc(l[j*3-1],l[j*3],l[i]);
                calc(l[j*3],l[j*3-2],l[i]);
            }
        sort(br+1,br+tot+1,cmp);
        br[++tot].s=1.0;br[tot].x=0;
        int x=0;
        double xx=l[i].b.x-l[i].a.x,yy=l[i].b.y-l[i].a.y,len=sqrt(xx*xx+yy*yy);
        for(int j=1;j<=tot;++j){
            if(!x)ans+=(br[j].s-br[j-1].s)*len;
            x+=br[j].x;
        }
    }
    printf("%.10lf\n",ans);
    return 0;
}
