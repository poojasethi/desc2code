#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())

#define MAX 1000005
li rem[MAX],memo[MAX],a,b,n,s,num[MAX];
vector<li> edge[MAX];

void recur(li pos,li parent){
	li remain=0;
	num[pos]--;
	vector<li> vec;
	rep(i,sz(edge[pos]))if(edge[pos][i]!=parent){
		recur(edge[pos][i],pos);
		vec.pb(memo[edge[pos][i]]);
		remain+=rem[edge[pos][i]];
	}
	sort(vec.begin(),vec.end());
	reverse(vec.begin(),vec.end());
	rep(i,sz(vec)){
		if(num[pos]==0) return;
		memo[pos]+=vec[i]+2;
		num[pos]--;
	}
	if(remain>num[pos]){
		memo[pos]+=2*num[pos];
	}else{
		memo[pos]+=2*remain;
		rem[pos]=num[pos]-remain;
	}
}
int main(){
	scanf("%I64d",&n);
	rep(i,n) scanf("%I64d",&num[i+1]);
	rep(i,n-1){
		scanf("%I64d %I64d",&a,&b);
		edge[a].pb(b);
		edge[b].pb(a);
	}
	scanf("%I64d",&s);
	num[s]++;
	recur(s,-1);
	cout<<memo[s]<<endl;
}
