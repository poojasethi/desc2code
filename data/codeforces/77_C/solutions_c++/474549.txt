#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;

const int maxn=100000+10;
vector<int> e[maxn];
int s[maxn];
long long opt[maxn],tmp[maxn];
int n,root;

void dp(int u,int father)
{
    for (int v=0;v<e[u].size();v++)
    if (e[u][v]!=father)
        dp(e[u][v],u);
    int cnt=0;
    for (int v=0;v<e[u].size();v++)
    if (e[u][v]!=father) tmp[cnt++]=-opt[e[u][v]];
    sort(tmp,tmp+cnt);
    for (int i=0;i<cnt && s[u];i++)
    {
        opt[u]+=-tmp[i]+2;s[u]--;
    }
    for (int v=0;v<e[u].size();v++)
    if (e[u][v]!=father && s[u] && s[e[u][v]])
    {
        int k=min(s[u],s[e[u][v]]);
        s[u]-=k;opt[u]+=k*2;
    }
}

int main()
{
    scanf("%d",&n);
    for (int i=1;i<=n;i++) scanf("%d",&s[i]);
    for (int i=1,u,v;i<n;i++)
    {
        scanf("%d%d",&u,&v);
        e[u].push_back(v);
        e[v].push_back(u);
    }
    scanf("%d",&root);
    for (int i=1;i<=n;i++)
    if (i!=root) s[i]--;
    dp(root,0);
    printf("%I64d\n",opt[root]);
}
