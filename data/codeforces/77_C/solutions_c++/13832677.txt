#include<cstdio>
#include<vector>
#include<numeric>
#include<algorithm>
#include<functional>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

typedef long long ll;

int a[100000];
vector<int> tree[100000];

ll dfs(int u,int prev){
	vector<ll> tmp;
	rep(i,tree[u].size()){
		int v=tree[u][i];
		if(v!=prev && a[v]>=1){
			a[v]--;
			tmp.push_back(1+dfs(v,u)+1);
		}
	}
	sort(tmp.begin(),tmp.end(),greater<ll>());

	int lim=min(a[u],(int)tmp.size());
	ll res=accumulate(tmp.begin(),tmp.begin()+lim,0LL);
	a[u]-=lim;

	rep(i,tree[u].size()){
		int v=tree[u][i];
		if(v!=prev){
			ll m=min(a[u],a[v]);
			res+=2*m;
			a[u]-=m;
			a[v]-=m;
		}
	}

	return res;
}

int main(){
	int n; scanf("%d",&n);
	rep(i,n) scanf("%d",a+i);

	rep(i,n-1){
		int u,v; scanf("%d%d",&u,&v); u--; v--;
		tree[u].push_back(v);
		tree[v].push_back(u);
	}

	int s; scanf("%d",&s); s--;
	printf("%I64d\n",dfs(s,-1));

	return 0;
}
