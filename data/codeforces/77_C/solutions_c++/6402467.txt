#include <cstdio>
#include <algorithm>
#include <cstring>
#include <cmath>
#define N 100005
#define FOR(i,s,e) for (int i=(s); i<(int)(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(int)(e); i++)
using namespace std;

int n,x,y,t,b[N],l[N],qd[N*2],qn[N*2],root;
long long dp[N],a[N];

void dfs(int x, int y){

	for (int i=l[x]; i; i=qn[i]){
		if (qd[i]!=y) dfs(qd[i], x);
	}
	
	int cnt = 0;
	for (int i=l[x]; i; i=qn[i]){
		if (qd[i]!=y) a[cnt++] = dp[qd[i]];
	}
	
	sort(a, a+cnt);
	dp[x]=0;
	if (y!=-1) b[x]--;
	
	for (int i=cnt-1; b[x]>0 && i>=0; i--){
		dp[x] += a[i] + 2;
		b[x]--;
	}
	
	for (int i=l[x]; i; i=qn[i]){
		if (qd[i]==y) continue;
		int t = min(b[x], b[qd[i]]);
		b[x] -= t;
		b[qd[i]] -= t;
		dp[x] += t*2;
	}
	
}


int main(){

	scanf("%d", &n);
	FOE(i,1,n) scanf("%d", &b[i]);
	FOR(i,1,n){
		scanf("%d%d",&x,&y);
		qd[++t]=y, qn[t]=l[x], l[x]=t;
		qd[++t]=x, qn[t]=l[y], l[y]=t;
	}
	scanf("%d", &root);
	
	dfs(root, -1);
	printf("%I64d\n", dp[root]);
	
	return 0;
}