//			be name khoda

#include <bits/stdc++.h>

using namespace std;

#define int long long

const int N = 200002;

vector <int> g[N];
int a[N], n, m, root;

pair<int, int> dfs(int v, int p)
{
	int kollan = 0, ans = 0;
	set <pair<int, int> > fs;
	for(int i = 0; i < g[v].size(); i++)
		if(g[v][i] != p)
		{
			pair<int, int> nw = dfs(g[v][i], v);
			fs.insert(make_pair(nw.first, g[v][i]));
			kollan += nw.second;
		}
	while(fs.size() && fs.rbegin()->first && a[v] > (p > 0 ? 1 : 0))
	{
		ans += fs.rbegin()->first;
		fs.erase(*fs.rbegin());
		ans++;
		ans++;
		a[v]--;
		kollan--;
	}
	if(p > 0)
	{
		ans += min(kollan, a[v] - 1) * 2;
		a[v] = max(1LL, a[v] - kollan);
	}
	else
	{
		ans += min(a[v], kollan) * 2;
		a[v] = max(0LL, a[v] - kollan);
	}
	return make_pair(ans, a[v]);
}

main()
{
	cin >> n;
	for(int i = 1; i <= n; i++)
		cin >> a[i];
	for(int i = 1; i < n; i++)
	{		
		int l, r;
		cin >> l >> r;
		g[l].push_back(r);
		g[r].push_back(l);
	}
	cin >> root;
	cout << dfs(root, -1).first << endl;
}
