#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <queue>
#include <vector>
using namespace std;
#define N 100005
typedef __int64 ll;
ll val[N],dp[N];
int vis[N];
int n;
vector<int> e[N];
void dfs(int u)
{
    ll tmp =0;
    priority_queue<ll> Q;
    while(!Q.empty()) Q.pop();
    for(int i=0; i<e[u].size(); i++)
    {
        int v = e[u][i];
        if(vis[v]) continue;
        vis[v] = 1;
        val[v]--;
        dfs(v);
        Q.push(dp[v]);
        tmp += val[v];
    }
    while(!Q.empty()&&val[u])
    {
        val[u]--;
        dp[u] += Q.top()+2;
        Q.pop();
    }
    dp[u] += min(tmp,val[u])*2;
    val[u] -= min(tmp,val[u]);
}
int main()
{
    scanf("%d",&n);
    for(int i=1; i<=n; i++) scanf("%I64d",&val[i]);
    for(int i=1; i<n; i++)
    {
        int u,v;
        scanf("%d%d",&u,&v);
        e[u].push_back(v);
        e[v].push_back(u);
    }
    int rt;
    scanf("%d",&rt);
    vis[rt] = 1;
    dfs(rt);
    printf("%I64d\n",dp[rt]);
    return 0;
}