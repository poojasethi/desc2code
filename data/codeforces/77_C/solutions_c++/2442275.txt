#include <stdio.h>
#include <iostream>
#include <string>
#include <string.h>
#include <set>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#define ll long long
using namespace std;

const ll N=100005;
ll n,val[N],s,cnt[N];
vector<ll>gra[100005],num[100005];

bool cmp(ll a,ll b){
    return a>b;
}

void dfs(ll s,ll f){
    num[s].clear();ll tot=0;
    for(ll i=0;i<gra[s].size();i++){
        ll e=gra[s][i];if(e==f)continue;
        val[e]--;dfs(e,s);num[s].push_back(cnt[e]);tot+=val[e];
    }
    cnt[s]=0;
    sort(num[s].begin(),num[s].end(),cmp);
    for(ll i=0;i<num[s].size();i++){
        if(val[s]==0)break;
        val[s]--;cnt[s]+=num[s][i]+2;
    }
    if(tot<=val[s])cnt[s]+=2*tot,val[s]-=tot;
    else cnt[s]+=2*val[s],val[s]=0;
}

int main(){
//    freopen("d:\\in.txt","r",stdin);
    cin>>n;
    for(ll i=1;i<=n;i++)gra[i].clear();
    for(ll i=1;i<=n;i++)cin>>val[i];
    for(ll i=1;i<n;i++){
        ll a,b;cin>>a>>b;
        gra[a].push_back(b);
        gra[b].push_back(a);
    }
    cin>>s;
    dfs(s,-1);
    cout<<cnt[s]<<endl;
}

   		 		 		 	     	    	  	