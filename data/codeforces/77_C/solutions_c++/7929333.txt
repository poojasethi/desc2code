#include <bits/stdc++.h>

using namespace std;

typedef pair<long long, long long> pie;

#define L first
#define R second
#define MP make_pair
#define PB push_back

const long long maxn = 1e5 + 100;

bool mark[maxn];
long long a[maxn];
vector<pie> v[maxn];
vector<long long> adj[maxn];

pie dfs(long long x){
	a[x]--;
	mark[x] = true;
	for(long long i=0;i<adj[x].size();i++){
		long long child = adj[x][i];
		if(!mark[child]){
			v[x].PB(dfs(child));
		}
	}
	sort(v[x].begin(), v[x].end());
	reverse(v[x].begin(), v[x].end());
	long long cur = 0;
	for(long long i=0;i<v[x].size() and a[x] > 0;i++){
		a[x]--;
		cur += v[x][i].L + 2;
	}
	for(int i=0;i<v[x].size();i++){
		int now = min(v[x][i].R, a[x]);
		a[x] -= now;
		cur += 2 * now;
	}
	return MP(cur, a[x]);
}

int main(){
	ios_base::sync_with_stdio(false);
	long long n;
	cin>>n;
	for(long long i=1;i<=n;i++)
		cin>>a[i];
	for(long long i=1;i<n;i++){
		long long fi, se;
		cin>>fi>>se;
		adj[fi].PB(se);
		adj[se].PB(fi);
	}
	long long st;
	cin>>st;
	a[st]++;
	cout <<	dfs(st).L << endl;
}
