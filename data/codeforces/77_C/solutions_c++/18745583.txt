#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int MAXN=1e5+5;
vector<int>edges[MAXN];
ll val[MAXN];
ll dp[MAXN];
int n;
void dfs(int u, int b){
	ll s=0;
	vector<ll>tmp;
	for(int i=0;i<edges[u].size();i++){
		int v=edges[u][i];
		if(v!=b){
			val[v]--;
			dfs(v,u);
			tmp.push_back(dp[v]);
			s+=val[v];
		}
	}
		sort(tmp.begin(),tmp.end());
		while(val[u] && tmp.size()){
			val[u]--;
			dp[u]+=tmp.back()+2;
			tmp.pop_back();
		}
		ll l=min(s,val[u]);
		dp[u]+=2*l;
		val[u]-=l;
}	
int main(){
	cin>>n;
	for(int i=1;i<=n;i++)	cin>>val[i];
	int a,b;
	for(int i=1;i<n;i++){
	
		cin>>a>>b;
		edges[a].push_back(b);
		edges[b].push_back(a);	
	}
	cin>>a;
	dfs(a,0);
	cout<<dp[a];
	return 0;
}
