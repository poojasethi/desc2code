#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

#define REP(i,a,b) for(i=(int)a;i<(int)b;i++)
#define rep(i,n) REP(i,0,n)

typedef long long ll;

const int MAX = 100000;

int v[MAX+1];
vector<int> edge[MAX+1];

pair<ll,int> dfs(int s, int p) {
  int i;
  ll res = 0;
  vector<pair<ll,int> > ps;
  rep(i,edge[s].size()) if(edge[s][i] != p) {
    v[edge[s][i]]--;
    ps.push_back(dfs(edge[s][i],s));
  }
  sort(ps.rbegin(), ps.rend());
  rep(i,ps.size()) if(v[s] > 0) {
    v[s]--;
    res += ps[i].first + 2;
  }
  rep(i,ps.size()) {
    res += 2*min(v[s],ps[i].second);
    v[s] -= min(v[s],ps[i].second);
  }
  return make_pair(res,v[s]);
}

int main() {
  int i,n; scanf("%d", &n);
  rep(i,n) scanf("%d", &v[i]);
  rep(i,n-1) {
    int a, b; scanf("%d%d", &a, &b); a--; b--;
    edge[a].push_back(b);
    edge[b].push_back(a);
  }
  int s; scanf("%d", &s);
  cout << dfs(s-1,-1).first << endl;
  return 0;
}
