#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <vector>
using namespace std;
#define N 100005
typedef __int64 ll;
ll val[N],dp[N];
vector<int> e[N];
void dfs(int u,int f)
{
    ll s = 0;
    vector<ll> tmp;
    for(int i=0; i<e[u].size(); i++)
    {
        int v = e[u][i];
        if(v!=f)
        {
            val[v]--;
            dfs(v,u);
            tmp.push_back(dp[v]);
            s += val[v];
        }
    }
    sort(tmp.begin(),tmp.end());
    while(val[u]&&tmp.size())
    {
        val[u]--;
        dp[u] += tmp.back()+2;
        tmp.pop_back();
    }
    ll y = min(s,val[u]);
    dp[u] += y*2;
    val[u] -= y;
}
int main()
{
    int n;
    cin>>n;
    for(int i=1; i<=n; i++) cin>>val[i];
    for(int i=1; i<n; i++) 
    {
        int u,v;
        cin>>u>>v;
        e[u].push_back(v);
        e[v].push_back(u);
    }
    int rt;
    cin>>rt;
    dfs(rt,0);
    cout<<dp[rt]<<endl;
    return 0;
}