#include <bits/stdc++.h>

using namespace std;
const int N = 1e5 + 10, sq = 320, M = 15;
int nx[N][M], ny[N][M], n, m, q;
char a[N][M];
bool isin(int x, int y){ return(x>=1 && x<n && y>=1 && y<m ? 1 : 0);}
void upd(int b){
    int l = b, r = min(b +sq, n);
    for(int i = l; i < r; i++){
        for(int j=m+1; ~j; --j){
            if(!isin(i, j)){
                nx[i][j] = i;
                ny[i][j] = j;
                continue;
            }
            int cx = i, cy = j, cnt = 15; bool fin = 0;
            while(!fin && cnt--){
                char t = a[cx][cy];
                if(t != '^'){
                    if(t == '>')
                        cy++;
                    else
                        cy--;
                    if(!isin(cx, cy))
                        fin = 1, nx[i][j] = cx, ny[i][j] = cy;
                }
                else{
                    fin = 1;
                    cx--;
                    if(!isin(cx, cy) || i % sq == 0)
                        nx[i][j] = cx, ny[i][j] = cy;
                    else
                        nx[i][j] = nx[cx][cy], ny[i][j] = ny[cx][cy];
                }
            }
            if(!fin)
                nx[i][j] = -1, ny[i][j] = -1;
        }
    }
}
int main(){
    ios::sync_with_stdio(false),  cin.tie(false);
    cin >> n >> m >> q;
    n++, m++;
    for(int i=1; i<n; i++)
        for(int j=1; j<m; j++)
            cin >> a[i][j];
    for(int i=0; i<n; i+=sq)
        upd(i);
    while(q--){
        char tp, nw;
        int x, y;
        cin >> tp >> x >> y;
        if(tp == 'C'){
            cin >> nw;
            a[x][y] = nw;
            upd( x / sq * sq);
        }
        else{
            while(!(nx[x][y] == -1 && ny[x][y] == -1) && !(nx[x][y] == x && ny[x][y] == y)){
                int tmp = y;
                y = ny[x][y];
                x = nx[x][tmp];
            }
            cout << nx[x][y] << " " << ny[x][y] << endl;
        }
    }
}
 	 			 					  				  			 			 	