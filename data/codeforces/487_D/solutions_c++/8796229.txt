#include <string.h>
#include <cstdio>

#define MOD 1000000007
const int maxn = 100100;
int ta[maxn][11], to[maxn][11];
int n, m, nq;
char mp[maxn][11];

inline int abs(int x) { return x > 0 ? x  : -x; }
int inline lowb(int x) { return x & (-x); }
int dfs(int x, int y) {
	if(y < 0) return -n - x;
	if(y >= m) return -n * 2 - x;
	if(to[x][y] < MOD) return to[x][y];
	if(mp[x][y] == '^') return to[x][y] = y;
	to[x][y] = m + n + x;
	return to[x][y] = dfs(x, (mp[x][y] == '>' ? 1 : -1) + y);
}
inline int get(int x) {
	if(x < 0) x += n;
	if(x < 0) x += n;
	if(x < 0) x = -x;
	else x -= m + n;
	return x;
}
int main() {
	scanf("%d%d%d", &n, &m, &nq);
	for(int i = 1; i <= n; i++) scanf("%s", mp[i]);

	memset(to, 0x3f, sizeof(to));
	for(int i = 1; i <= n; i++) for(int j = 0; j < m; j++) {
		dfs(i, j);
		ta[i][j] = to[i][j];
		for(int p = i - 1; p && lowb(p) < lowb(i) && ta[i][j] >= 0 && ta[i][j] < m; p -= lowb(p))
			ta[i][j] = ta[p][ta[i][j]];
	}

	for(int i = 0; i < nq; i++) {
		char cate[2];
		int x, y;
		scanf("%s%d%d", cate, &x, &y);
		y--;
		if(cate[0] == 'A') {
			for(; x && y >= 0 && y < m; x -= lowb(x))
				y = ta[x][y];
			if(y < 0) {
				if(y < -n * 2) printf("%d %d\n", -(y + n * 2), m + 1);
				else printf("%d %d\n", -(y + n), 0);
			} else if(y > m) printf("-1 -1\n");
			else printf("%d %d\n", 0, y + 1);
		} else {
			char change[2];
			scanf("%s", change);
			mp[x][y] = change[0];
			memset(to[x], 0x3f, sizeof(to[x]));
			for(int i = 0; i < m; i++) dfs(x, i);
			int px = x;
			for(; x <= n; x += lowb(x)) for(int j = 0; j < m; j++) if((ta[x][j] < m && ta[x][j] >= 0)
				|| get(ta[x][j]) <= px){
				ta[x][j] = to[x][j];
				for(int rx = x - 1; rx && lowb(rx) < lowb(x) && ta[x][j] >= 0 && ta[x][j] < m; rx -= lowb(rx))
					ta[x][j] = ta[rx][ta[x][j]];
			}
		}
	}
    return 0;
}
