#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;
const int N=100005;
char c[N][15];
int n,m,Q,px[N*8][15],py[N*8][15];
int move(int &x,int &y)
{
	while(x>=1&&y>=1&&y<=m){
		if(c[x][y]=='>'&&c[x][y+1]=='<'){x=y=-1;break;}
		if(c[x][y]=='<'&&c[x][y-1]=='>'){x=y=-1;break;}
		if(c[x][y]=='>')y++;else if(c[x][y]=='<')y--;else x--;
	}
}
int upd(int k,int x)
{
	int l=k*2,r=l+1;
	for(int i=1;i<=m;i++)
		if(px[r][i]==x&&1<=py[r][i]&&py[r][i]<=m)
			px[k][i]=px[l][py[r][i]],py[k][i]=py[l][py[r][i]];
		else px[k][i]=px[r][i],py[k][i]=py[r][i];
}
int newnode(int k,int a,int b)
{
	for(int i=1;i<=m;i++){
		int x=b,y=i;
		while(x>=1&&y>=1&&y<=m){
			if(c[x][y]=='>'&&c[x][y+1]=='<'){x=y=-1;break;}
			if(c[x][y]=='<'&&c[x][y-1]=='>'){x=y=-1;break;}
			if(x==a&&c[x][y]=='^')break;
			if(c[x][y]=='>')y++;else if(c[x][y]=='<')y--;else x--;
		}
		px[k][i]=x;py[k][i]=y;
	}
}
int build(int k,int a,int b)
{
	if(a+1==b){
		newnode(k,a,b);
		return 0;
	}
	build(k*2,a,(a+b)>>1);
	build(k*2+1,(a+b)>>1,b);
	upd(k,(a+b)>>1);
}
int change(int i,int a,int b,int x)
{
	if(a+1==b){
		newnode(i,a,b);
		return 0;
	}
	int m=(a+b)>>1;
	if(x<=m)change(i*2,a,m,x);
	if(x>=m)change(i*2+1,m,b,x);
	upd(i,m);
}
int ask(int i,int a,int b,int &x,int &y)
{
	if(x==1||y>m||y<1)return 0;
	if(x==b){
		x=px[i][y];y=py[i][y];
		return 0;
	}
	int l=i*2,r=l+1,m=(a+b)>>1;
	if(x>m)ask(r,m,b,x,y);
	ask(l,a,m,x,y);
}
int main()
{
	cin>>n>>m>>Q;
	for(int i=1;i<=n;i++)scanf("%s",&c[i][1]);
	if(n>1)build(1,1,n);
	while(Q--){
		char p[2];int x,y;
		scanf("%s%d%d",&p,&x,&y);
		if(p[0]=='C'){
			char s[2];scanf("%s",&s);c[x][y]=s[0];
			if(n>1)change(1,1,n,x);
		}
		else{
			if(n>1)ask(1,1,n,x,y);
			move(x,y);
			printf("%d %d\n",x,y);
		}
	}
	return 0;
}
