#include <iostream>
using namespace std;
const int MAX = 100005;
const int SQRT = 350;
string a[MAX];
pair<int, int> pos[MAX][10];
int mark[MAX][10], n, m, q, mm = 1;
bool isav(int x, int y)
{
	return (0 <= x && x < n && 0 <= y && y < m);
}
void set(int x, int y)
{
	if (mark[x][y] == mm)
		return;
	mark[x][y] = mm;
	if (a[x][y] == '^')
	{
		if (x % SQRT == 0)
			pos[x][y] = make_pair(x - 1, y);
		else
			pos[x][y] = pos[x - 1][y];
	}
	if (a[x][y] == '<')
	{
		if (isav(x, y - 1))
		{
			if (a[x][y - 1] == '>')
				pos[x][y] = make_pair(-2, -2);
			else
			{
				set(x, y - 1);
				pos[x][y] = pos[x][y - 1];
			}
		}
		else
			pos[x][y] = make_pair(x, y - 1);
	}
	if (a[x][y] == '>')
	{
		if (isav(x, y + 1))
		{
			if (a[x][y + 1] == '<')
				pos[x][y] = make_pair(-2, -2);
			else
			{
				set(x, y + 1);
				pos[x][y] = pos[x][y + 1];
			}
		}
		else
			pos[x][y] = make_pair(x, y + 1);
	}
}
int main()
{
	ios::sync_with_stdio(false);
	cin >> n >> m >> q;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			set(i, j);
	while (q--)
	{
		char c;
		cin >> c;
		if (c == 'A')
		{
			pair<int, int> p;
			cin >> p.first >> p.second;
			p.first--;
			p.second--;
			while (isav(p.first, p.second))
				p = pos[p.first][p.second];
			cout << p.first + 1 << " " << p.second + 1 << '\n';
		}
		else
		{
			pair<int, int> p;
			cin >> p.first >> p.second >> c;
			p.first--;
			p.second--;
			a[p.first][p.second] = c;
			mm++;
			int end = (p.first / SQRT + 1) * SQRT;
			for (int i = p.first; i < min(n, end); i++)
				for (int j = 0; j < m; j++)
					set(i, j);
		}
	}
	return 0;
}
