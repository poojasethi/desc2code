#include <iostream>
#include <stdio.h>
#include <vector>
#define MAXN 3011
using namespace std;

int N;
int dad[MAXN];
int len[MAXN];
vector<int>adj[MAXN];

int DFS(int node , int uz)
{
  len[node]=uz;
  for(int i=0 ; i<adj[node].size() ; i++)
  {
    if(adj[node][i]==node || dad[node]==adj[node][i])   continue;
    if(len[adj[node][i]])                               return len[adj[node][i]];
    dad[adj[node][i]]=node;
    int tmp=DFS(adj[node][i] , uz+1);
    if(tmp > -1)                                        return tmp;
  }
  return -1;
}
int main()
{
  cin >> N;
  for(int i=0 ; i<N ; i++)
  {
    int x,y;
    cin >> x >> y;
    adj[x].push_back(y);
    adj[y].push_back(x);
  }
  for(int i=1 ; i<=N ; i++)
  {
    cout << DFS(i , 1) - 1 << " ";
    for(int j=1 ; j<=N ; j++)
      len[j]=dad[j]=0;
  }
  cout << endl;
  return 0;
}
