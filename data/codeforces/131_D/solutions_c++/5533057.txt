#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>

using namespace std;

vector<int> graph[3001];
int visited[3001];
int dist[3001];

int dfs(int root, int used){
    dist[root]=used;
    int temp = 0;
    for(int i=0; i<graph[root].size(); i++){
        if(graph[root][i] == root || visited[root] == graph[root][i]) continue;
        if(dist[graph[root][i]]) return dist[graph[root][i]];
        visited[graph[root][i]] = root;
        temp = dfs(graph[root][i], used+1);
        if(temp > -1) return temp;
    }
    return -1;
}

int main(){
    int n, a, b;
    scanf("%d", &n);
    for(int i=1; i<= n; i++){
        scanf("%d%d", &a, &b);
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    for(int i=1; i<=n; i++){
        printf("%d ", dfs(i,1)-1);
        memset(visited, 0, sizeof(visited));
        memset(dist, 0 , sizeof(dist));
    }
    return 0;
}