#include <map>
#include <set>
#include <queue>
#include <vector>
#include <cstdio>
#include <climits>
#include <cstring>
#include <utility>
#include <iterator>
#include <iostream>
#include <algorithm>
using namespace std;
#define MAX 3001
#define INF (1<<20)
#define ff first
#define ss second
#define pii pair<int,int>
#define pi2 pair<pii,int>
#define MOD 1000000007
std::vector< std::vector<int> > G(MAX);
int len[MAX];
int dfs(int x,int l,int par)
{
	len[x]=l;
	for(int i=0;i<G[x].size();i++)
	{
		int v=G[x][i];
		if(v==par)continue;
		if(len[v]>0)
			return len[v];
		int t=dfs(v,l+1,x);
		if(t>-1)
			return t;
	}
	return -1;
}
int main()
{
	int n;
	cin>>n;
	for(int i=1;i<=n;i++)
	{
		int x,y;
		cin>>x>>y;
		G[x].push_back(y);
		G[y].push_back(x);
	}
	memset(len,0,sizeof len);
	for(int i=1;i<=n;i++)
	{
		cout<<dfs(i,1,0)-1<<" ";
		memset(len,0,sizeof len);
	}
	cout<<endl;
}
	
	