//ahmet
#include <stdio.h>
#define MAXN 3004
int map[MAXN][MAXN];
int t;
int used[MAXN];
int flag[MAXN];
int N;
int q[MAXN],at,al;
int mark[MAXN];
void bfs()
{
	int node,i;
	while(at!=al){
		node=q[++al];
		for(i=1;i<=N;i++)
			if(map[node][i]&&!used[i]){
				used[i]=1;
				q[++at]=i;
				mark[i]=mark[node]+1;
			}
	}
}
int dfs(int node,int dad)
{
	used[node]=1;
	for(int i=1;i<=N;i++)
		if(map[node][i]&&used[i]&&dad!=i){
			t=i;
			flag[node]=1;
			used[node]=0;
			return 1;
		}
		else if(map[node][i]&&!used[i]&&dfs(i,node)){
			flag[node]=1;
			used[node]=0;
			if(t==node)
				return 0;
			return 1;
		}
	used[node]=0;
	return 0;
}
int main()
{
	int a,b;
	scanf(" %d",&N);
	for(int i=1;i<=N;i++){
		scanf(" %d %d",&a,&b);
		map[a][b]=map[b][a]=1;
	}
	dfs(1,0);
	for(int i=1;i<=N;i++)
		if(flag[i])
			q[++at]=i,used[i]=1;
	bfs();
	for(int i=1;i<N;i++)
		printf("%d ",mark[i]);
	printf("%d\n",mark[N]);
	return 0;
}
