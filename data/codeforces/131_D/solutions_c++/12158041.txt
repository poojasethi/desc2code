#include<bits/stdc++.h>
using namespace std;
int *level;
int dfs(int src,vector<int> a[],int parent,int lev)
{
	level[src]=lev;
	for(int i=0;i<a[src].size();i++)
	{
		if(a[src][i]==parent)
			continue;
		if(level[a[src][i]])
			return level[a[src][i]];
		int ans=dfs(a[src][i],a,src,lev+1);
		if(ans)
			return ans;
	}
	return 0;
}
int main()
{
	int edges,v1,v2;
	cin>>edges;
	vector<int> a[edges+1];
	int *visited=new int [edges+1];
	level=new int [edges+1];
	for(int j=0;j<=edges;j++)
		level[j]=0;
	for(int i=0;i<edges;i++)
	{
		cin>>v1>>v2;
		a[v1].push_back(v2);
		a[v2].push_back(v1);
	}
	for(int i=1;i<=edges;i++)
	{
		for(int j=0;j<=edges;j++)
			level[j]=0;
		cout<<dfs(i,a,-1,1)-1<<" ";
	}
	cout<<endl;
	return 0;
}

