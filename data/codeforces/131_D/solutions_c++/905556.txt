#include <iostream>
#include <fstream>
#include <vector>
#include <memory.h>

using namespace std;

int n, pt;
vector <int> a[3333];
bool p[3333] = {};

int dfs(int t, int pr){
    if (p[t]) {pt = t; return 0;}

    p[t] = true;
    for (int i = 0; i < a[t].size(); i++)
    if (a[t][i] != pr){
        int x = dfs(a[t][i], t);
        if (x >= 0){
            p[t] = false;
            if (pt == t) return 1;
            if (x == 0) return 0;
            if (x > 0) return x + 1;
        }
    }
    p[t] = false;
    return -1;
}

int main(){
    cin >> n;
    for (int i = 0; i < n; i++){
        int x, y;
        cin >> x >> y;
        x--; y--;
        a[x].push_back(y); a[y].push_back(x);
    }

    for (int i = 0; i < n; i++){
        pt = -1;
        cout << dfs(i, -1) - 1 << " ";
        memset(p, 0, n);
    }
}
