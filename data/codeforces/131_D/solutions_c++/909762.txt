#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<vector>
#include<string>
#include<queue>
using namespace std;
const int N=6500;
int v[N],next[N],head[N];
int t=1;
int f[N],de[N];
bool vis[N],tr[N];
queue<int>q;
int n;
void add(int a,int b)
{
	next[++t]=head[a];v[t]=b;head[a]=t;
}
void dfs(int x)
{
	for(int i=head[x];i;i=next[i])if(tr[v[i]]&&!f[v[i]])
	{
		f[v[i]]=f[x]+1;
		dfs(v[i]);
	}
}
int main()
{
	int s,i,a,b;
	cin>>n;
	for(i=1;i<=n;i++)
	{
		cin>>a>>b;
		add(a,b);
		add(b,a);
		de[a]++;de[b]++;
	}
	for(i=1;i<=n;i++)if(de[i]==1)q.push(i),tr[i]=true;
	while(!q.empty())
	{
		s=q.front();q.pop();
		for(i=head[s];i;i=next[i])
		if(!tr[v[i]]&&--de[v[i]]==1)q.push(v[i]),tr[v[i]]=true;
	}
	for(i=1;i<=n;i++)if(!tr[i])dfs(i);
	for(i=1;i<=n;i++)cout<<f[i]<<' ';
}
