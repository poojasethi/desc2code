#include<stdio.h>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string.h>
using namespace std;
vector<int>ad[3005];
int l[3005];
int dfs(int node ,int dist ,int parent)
{
    int i,t=-1;
    l[node]=dist;
    int s=ad[node].size();
    for(i=0;i<s;i++)
    {
        if(ad[node][i]!=parent)
        {
            //cout<<ad[node][i]<<" "<<l[ad[node][i]]<<"\n";
            if(l[ad[node][i]]>-1)
                return l[ad[node][i]];
            t=dfs(ad[node][i],dist+1,node);
            if(t>-1)
                return t;
        }
    }
    return t;
}
int main()
{
    int i,j,k,m,n;
    cin>>n;
    for(i=0;i<n;i++)
    {
        cin>>j>>k;
        ad[j].push_back(k);
        ad[k].push_back(j);
    }
    memset(l,-1,sizeof(l));
    for(i=1;i<=n;i++)
    {
        cout<<dfs(i,1,0)-1<<" ";
        //cout<<"@\n";
        memset(l,-1,sizeof(l));

    }
}
