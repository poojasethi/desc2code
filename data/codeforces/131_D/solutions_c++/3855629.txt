#include <iostream>
#include <vector>

using namespace std;

#define f(i,a,b) for(int i=a;i<b;i++)
#define fr(i,n)  f(i,0,n)

vector<int> A[3003];
int dist[3003], start;

void fill(int u, int p){
	fr(i, A[u].size()){
		int v = A[u][i];
		if (v == p) continue;
		if (dist[v] != 0){
			dist[v] = dist[u] + 1;
			fill(v, u);
		}
	}
}

int dfs(int u, int p){
	dist[u] = -1;
	fr(i, A[u].size()){
		int v = A[u][i];
		if (v == p) continue;
		if (dist[v] == -1){
			//cout<<u<<" ";
			start = v;
			dist[u] = 0;
			return 1;
		} else{
			int ret = dfs(v, u);
			if (ret){
				//cout<<u<<" ";
				dist[u] = 0;
				return (u == start ? 0 : 1);
			}
		}
	}
	return 0;
}

int main(){
	int n, x, y;
	cin>>n;
	f(i, 1, n+1){
		dist[i] = -2;
		cin>>x>>y;
		A[x].push_back(y);
		A[y].push_back(x);
	}
	dfs(1, 0);
	//cout<<"!\n";
	f(i, 1, n+1) if (dist[i] == 0) fill(i, 0);
	f(i, 1, n+1) cout<<dist[i]<<" ";
}