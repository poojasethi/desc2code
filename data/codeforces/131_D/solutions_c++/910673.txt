// 97d KuroNeco
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <vector>
#include <queue>
#include<stack>

#include <cstring>
using namespace std;
int p[3001],d[3001];
vector <int> e[3001];
int dfs(int x,int len){
 p[x]=len;
  for(size_t i=0; i<e[x].size();i++){
   int y=e[x][i];
   if (p[y]<0) dfs(y,len+1);
  }
}
int main()
{int n;
 cin>>n;
 for(int i=1;i<=n;i++){
  int x,y; cin>>x>>y;
  e[x].push_back(y);e[y].push_back(x);
  d[x]++;d[y]++;
  }
queue <int> q;
for(int i=1;i<=n;i++) if (d[i]<=1) q.push(i);
while (!q.empty()){
 int x=q.front();d[x]=-1;q.pop();
  for (size_t i=0; i<e[x].size();i++)
   {
       int y=e[x][i];
       d[y]--;
       if (d[y]==0||d[y]==1) q.push(y);
   }
}
 memset(p,-1,sizeof(p));
 for(int i=1;i<=n;i++) if(d[i]>=0) p[i]=0;
 for(int i=1;i<=n;i++) if(d[i]>=0) dfs(i,0);
 for(int i=1;i<=n;i++) cout<<p[i]<<" ";
 return 0;
}
