#include<iostream>
#include<vector>

using namespace std;

const int maxn=3010;

vector<int> a[maxn];
int mark[maxn],mark1[maxn];
int saf[maxn];
int p[maxn];
int n,h[maxn];

bool dfs(int k){
	mark[k]=1;
	for(int i=0;i<a[k].size();i++)
		if(!mark[a[k][i]]){
			p[a[k][i]]=k;
			if(dfs(a[k][i]))
				return 1;
		}else if(a[k][i] != p[k]){
			int x=k;
			int head=0,tail=0;
			while(x != a[k][i]){
				saf[tail++]=x;
				mark1[x]=1;
				x=p[x];
			}
			mark1[x]=1;
			saf[tail++]=x;
			while(head != tail){
				int v=saf[head++];
				for(int j=0;j<a[v].size();j++)
					if(!mark1[a[v][j]]){
						mark1[a[v][j]]=1;
						saf[tail++]=a[v][j];
						h[a[v][j]]=h[v]+1;
					}
			}
			return 1;
		}
	return 0;
}

int main(){
	cin >> n;
	for(int i=0;i<n;i++){
		int x,y;
		cin >> x >> y;
		x--;y--;
		a[x].push_back(y);
		a[y].push_back(x);
	}
	p[0]=-1;
	dfs(0);
	for(int i=0;i<n;i++)
		cout << h[i] << " ";
	cout << endl;
	
	return 0;
}
