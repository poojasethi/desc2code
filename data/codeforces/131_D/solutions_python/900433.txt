n = int(raw_input())
adj = {}
for i in xrange(n):
	adj[i] = []
for i in xrange(n):
	v1, v2 = map(int, raw_input().split())
	v1, v2 = v1 - 1, v2 - 1
	adj[v1].append(v2)
	adj[v2].append(v1)

def find_loop():
	que = [0]
	path = [-1] * n
	path[0] = 0

	found = False
	while que and not found:
		v1 = que.pop(0)
		for v2 in adj[v1]:
			if path[v1] != v2:
				if path[v2] >= 0:
					found = True
					break
				que.append(v2)
				path[v2] = v1
	def track(v):
		ans = []
		while 1:
			ans.append(v)
			if v == path[v]: break
			v = path[v]
		ans.reverse()
		return ans
	tk1 = track(v1)
	tk2 = track(v2)
	for i in xrange(min(len(tk1), len(tk2))):
		if tk1[i] != tk2[i]:
			break
	tk = tk1[i-1:] + list(reversed(tk2[i:]))
	return tk

def solve(loop):
	vis = [False] * n
	for i in loop:
		vis[i] = True

	dist = [0] * n
	for r in loop:
		que = [(r, 0)]
		while que:
			v1, dis = que.pop(0)
			for v2 in adj[v1]:
				if not vis[v2]:
					que.append((v2, dis+1))
					vis[v2] = True
					dist[v2] = dis+1
	print ' '.join(map(str, dist))

solve(find_loop())

	
	
