try:
  import sys
  sys.setrecursionlimit(10000)
  #"""
  n = int(raw_input())
  data = []
  for x in xrange(n):
    data.append(raw_input())

  """
  n = 5
  data ='''2 5
  4 5
  4 3
  4 2
  1 4'''.split("\n")

  n = 3000
  data = []
  for x in range(1, n):
    data.append("%s %s" % (x, x+1))
  data.append("%s %s" % (n, 1))
  #"""

  roads = {}
  for x in xrange(n+1):
    roads[x] = []

  for x in xrange(n):
    a, b = [int(_) for _ in data[x].split(" ")]
    roads[a].append(b)
    roads[b].append(a)


  used = [False] * (n+1)
  stack = []

  ring_data = None
  found = False

  def ring(pos):
    global found
    if found:
      return

    used[pos] = True
    stack.append(pos)
    for child in roads[pos]:
      if found:
        return
      if used[child]:
        if len(stack) > 1 and stack[-2] != child:
          global ring_data
          found = True
          ring_data = [child]
          i = 1
          while stack[-i] != child:
            ring_data.append(stack[-i])
            i += 1
        else:
          continue
      else:
        ring(child)
      if found:
        return

    if found:
      return
    stack.pop()
    used[pos] = False

  ring(1)

  level = [-1] * (n+1)
  stack = ring_data
  for x in ring_data:
    level[x] = 0

  while len(stack) > 0:
    pos = stack.pop()
    lvl = level[pos]
    for child in roads[pos]:
      if level[child] == -1:
        level[child] = lvl + 1
        stack.append(child)

  print ' '.join(str(_) for _ in level[1:])
except Exception as e:
  print "ERROR3"
  print e
  exit()
