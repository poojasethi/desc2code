import sys, math
def rs():
    return sys.stdin.readline().strip()
def ri():
    return int(sys.stdin.readline().strip())
def ras():
    return list(sys.stdin.readline().strip())
def rai():
    return map(int,sys.stdin.readline().strip().split())



def solve():

    n = ri()
    boms = [0]*n
    for x in xrange(n):
        bom = rai()
        boms[x] = bom

    def cmp(x,y):
        t1,t2,t3,t4 = abs(x[0]), abs(y[0]), abs(x[1]), abs(y[1])
        if t1 > t2:
            return 1
        elif t1 < t2:
            return -1
        elif t3 > t4:
            return 1
        elif t3 < t4:
            return -1
        return 0

        
    boms = sorted(boms, key=lambda x: abs(x[0])+abs(x[1]))

    k = 6*n
    result = [0]*k

    r = [0]

    def gotobom(x):
        if x[0] != 0:
            result[r[0]] = "1 %s %s"%(str(abs(x[0])), ("R" if x[0] > 0 else "L"))
            r[0] += 1
        if x[1] != 0:
            result[r[0]] = "1 %s %s"%(str(abs(x[1])),  ("U" if x[1] > 0 else "D"))
            r[0] += 1

        result[r[0]] = "2"
        r[0] += 1

        if x[0] != 0:
            result[r[0]] = "1 %s %s"%(str(abs(x[0])),("L" if x[0] > 0 else "R"))
            r[0] += 1
        if x[1] != 0:
            result[r[0]] = "1 %s %s"%(str(abs(x[1])),("D" if x[1] > 0 else "U"))
            r[0] += 1

        result[r[0]] = "3"
        r[0]+=1


    for x in boms:
        gotobom(x)


    result = filter(lambda x: x!=0, result)
    print len(result)
    print "\n".join(result)

solve()