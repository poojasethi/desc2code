#include <cstdio>
#include <cmath>
#include <algorithm>

typedef struct
{
	int x,y;
}pto;

pto p[100005];

bool comp(pto a, pto b)
{
	if(a.y==b.y)
		return fabs(a.x)<fabs(b.x);
	return fabs(a.y)<fabs(b.y);
}

inline char letra(int xy, char c)
{
	if(c == 'x')
		return xy<0?'L':'R';
	return xy<0?'D':'U';
}

int main()
{
	int n;
	scanf(" %d",&n);
	int r=n;
	for(int i=0; i<n; i++)
	{
		scanf(" %d %d",&p[i].x,&p[i].y);
		r+=(p[i].x!=0)+(p[i].y!=0);
	}
	std::sort(p,p+n,comp);
	printf("%d\n",2*r);
	for(int i=0; i<n; i++)
	{
		int x = p[i].x;
		int y = p[i].y;
		if(x) printf("1 %d %c\n",int(fabs(x)),letra(x,'x'));
		if(y) printf("1 %d %c\n",int(fabs(y)),letra(y,'y'));
		printf("2\n");
		if(y) printf("1 %d %c\n",int(fabs(y)),letra(-y,'y'));
		if(x) printf("1 %d %c\n",int(fabs(x)),letra(-x,'x'));
		printf("3\n");
	}
	return 0;
}
