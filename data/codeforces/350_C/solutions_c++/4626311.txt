#include <stdio.h>
#include <algorithm>

const int N = 111111;
inline int abs(int x) { return x<0 ? -x : x; }

struct point { point(){} int x,y; };
bool operator<( const point &p1, const point &p2 ) { return abs(p1.x)+abs(p1.y) < abs(p2.x)+abs(p2.y); }

int n;
point pp[N];

int main()
{
	scanf("%d", &n);
	int ans = n+n;
	for (int i = 0; i < n; ++i) {
		scanf("%d%d", &pp[i].x, &pp[i].y);
		if (pp[i].x!=0) ans += 2;
		if (pp[i].y!=0) ans += 2;
	}
	std::sort(pp,pp+n);
	
	printf("%d\n",ans);
	for (int i = 0; i < n; ++i) {
		if (pp[i].x!=0) printf("1 %d %c\n", abs(pp[i].x), pp[i].x<0 ? 'L' : 'R' );
		if (pp[i].y!=0) printf("1 %d %c\n", abs(pp[i].y), pp[i].y<0 ? 'D' : 'U' );
		printf("2\n");
		if (pp[i].y!=0) printf("1 %d %c\n", abs(pp[i].y), pp[i].y<0 ? 'U' : 'D' );
		if (pp[i].x!=0) printf("1 %d %c\n", abs(pp[i].x), pp[i].x<0 ? 'R' : 'L' );
		printf("3\n");
	}
	return 0;
}
