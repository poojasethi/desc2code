
#include <cstdio>
#include <algorithm>

struct dot{
	int x, y ;
} ;

dot ds[100010] ;

int absv(int i){
	return i > 0 ? i : -i ;
}

bool cmp(dot d1, dot d2){
	if(absv(d1.x) == absv(d2.x))	return absv(d1.y) < absv(d2.y) ;
	return absv(d1.x) < absv(d2.x) ;
}

int main(){
	int n ;
	scanf("%d", &n) ;
	for(int i = 0 ; i != n ; i++)
		scanf("%d%d", &ds[i].x, &ds[i].y) ;
	std::sort(ds, ds+n, cmp) ;
	int k = 0 ;
	for(int i = 0 ; i != n ; i++){
		dot& d = ds[i] ;
		int cnt = 0 ;
		if(d.x)	cnt++ ;
		if(d.y)	cnt++ ;
		k += cnt*2 + 2 ;
	}
	printf("%d\n", k) ;
	for(int i = 0 ; i != n ; i++){
		dot& d = ds[i] ;
		if(d.x)	printf("1 %d %c\n", absv(d.x), d.x > 0 ? 'R' : 'L') ;
		if(d.y)	printf("1 %d %c\n", absv(d.y), d.y > 0 ? 'U' : 'D') ;
		puts("2") ;
		if(d.y)	printf("1 %d %c\n", absv(d.y), d.y > 0 ? 'D' : 'U') ;
		if(d.x)	printf("1 %d %c\n", absv(d.x), d.x > 0 ? 'L' : 'R') ;
		puts("3") ;
	}
	return 0 ;
}
