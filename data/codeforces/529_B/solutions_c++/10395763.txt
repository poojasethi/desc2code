#include <iostream>
#include <set>
#include <algorithm>

using namespace std;

#define N 1000

int n, hf, ans;
int w[N], h[N];

void tryHeight(int height) {
	multiset<int> s;

	int cnt = 0;
	int width = 0;
	for (int i = 0; i < n; i++)
		if (h[i] > height) {
			if (w[i] > height || cnt >= hf)
				return;
			width += h[i];
			cnt++;
		}
		else {
			width += w[i];
			if (w[i] <= height)
				s.insert(h[i] - w[i]);
		}
	for (multiset<int>::iterator it = s.begin(); it != s.end(); it++) {
		if (cnt >= hf || *it > 0)
			break;
		width += *it;
		cnt++;
	}

	ans = min(ans, width * height);
}

int main() {
	ios::sync_with_stdio(0);

	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> w[i] >> h[i];

	hf = n >> 1;
	ans = 0x7fffffff;
	for (int i = 1; i <= 1000; i++)
		tryHeight(i);

	cout << ans << endl;

	return 0;
}