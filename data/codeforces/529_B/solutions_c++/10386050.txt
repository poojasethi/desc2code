#include <map>
#include <queue>
#include <cstdio>
#include <cstring>
#include <iostream>
using namespace std;

const int N = 1005;
int wid, n;
pair<int,int> e[N];
priority_queue<int> S;
int solve(int h){
  while(!S.empty()) S.pop();
  int tot = wid; 

  int i, lie=0;
  for(i=1;i<=n;++i){
     if(e[i].first > h && e[i].second > h) return -1;
     if(e[i].first > h){
       lie++;
       tot += e[i].first;
       tot -= e[i].second;
     } else {
       if(e[i].second <= h){
         S.push(e[i].second-e[i].first);
       }
     }
  }
  if(lie > n/2) return -1;
  int res = n/2-lie;
  while(res-- && !S.empty()){
    int cur = S.top();
    S.pop();
    if(cur <= 0) break;
    tot -= cur;
  }
  return tot*h;
}

int main(){
  scanf("%d",&n);
  int i;
  
  wid=0;
  for(i=1;i<=n;++i){
    scanf("%d%d",&e[i].second,&e[i].first);
    wid += e[i].second;
  }
  int ans = 1e9;
  for(int h=1;h<=1000;++h){
    int cur=solve(h);
    if(cur!=-1)
    ans= min(ans, cur);
  }
  printf("%d\n", ans);
  return 0;
}
