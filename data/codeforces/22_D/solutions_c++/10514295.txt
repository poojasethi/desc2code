#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;
vector <int> v;

struct Segment
{
	int s, e;
}Wood[1010];

bool cmp(Segment i, Segment j)
{
	return (i.e < j.e);
}

int main()
{
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> Wood[i].s >> Wood[i].e;
		if (Wood[i].s > Wood[i].e)
			swap(Wood[i].s, Wood[i].e);
	}
	sort(Wood, Wood + n, cmp);
	int cnt = 0, num = Wood[0].e;
	v.push_back(num);
	for (int i = 1; i < n; i++)
	{
		if (num < Wood[i].s)
		{
			num = Wood[i].e;
			v.push_back(num);
		}
	}
	
	cout << v.size() << endl;
	for (int i = 0; i < v.size(); i++)
		cout << v[i] << ' ' << endl;
}

	 			   	  					   	  	  	 		 	