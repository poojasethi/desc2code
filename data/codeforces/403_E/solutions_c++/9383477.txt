#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <vector>
#define N 200010
#define fi first
#define se second
#define PA pair<int,int>
#define VI vector<int>
#define VP vector<PA >
#define mk(x,y) make_pair(x,y)
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int x,y,z;
};

VI bl,re,a,tmp;
int i,j,k,n,m,_;


inline bool cc1(const ww &a,const ww &b) {
	return a.y<b.y;
}
inline bool cc2(const ww &a,const ww &b) {
		return a.x>b.x;
}

struct tree {
	int t,s;
	int L[N],R[N];
	VI a[N],biu;
	ww b[N];
	VP tr[N*4][2];
	bool use[N];
	void dfs(int x,int y) {
		int i;
		L[x]=++t;
		for (i=0;i<a[x].size();i++) {
			int A=a[x][i];
			if (A==y) continue;
			dfs(A,x);
		}
		R[x]=t;
	}
	void inc(int q,int x,int y,int k,int a1,int a2,int _) {
		tr[q][_].push_back(mk(a1,a2));
		if (x==y) return;
		int mid=(x+y)/2;
		if (k<=mid) inc(q*2,x,mid,k,a1,a2,_);
		else inc(q*2+1,mid+1,y,k,a1,a2,_);
	}
	inline void into(VI x,VI y) {
		int i;
		biu=x;
		for (i=0;i<x.size();i++) {
			int A=i+2,B=x[i];
			a[A].push_back(B);
			a[B].push_back(A);
		}
		dfs(1,0);
		for (i=0;i<y.size();i++) {
			int A=i+2,B=y[i];
			A=L[A],B=L[B];
			if (A>B) swap(A,B);
			b[++s]=(ww){A,B,i};
		}
		sort(b+1,b+s+1,cc1);
		For(i,1,s) inc(1,1,n,b[i].x,b[i].y,b[i].z,0);
		sort(b+1,b+s+1,cc2);
		For(i,1,s) inc(1,1,n,b[i].y,b[i].x,b[i].z,1);
	}
	inline void ju(int x) {
		if (!use[x]) {
			use[x]=1;
			tmp.push_back(x);
		}
	}
	void cal(int q,int x,int y,int l,int r) {
		if (l<=x&&y<=r) {
			for (;;) {
				int s=tr[q][0].size();
				if (!s) break;
				PA A=tr[q][0][s-1];
				if (A.fi>r) {
					ju(A.se);
					tr[q][0].pop_back();
				} else break;
			}
			for (;;) {
				int s=tr[q][1].size();
				if (!s) break;
				PA A=tr[q][1][s-1];
				if (A.fi<l) {
					ju(A.se);
					tr[q][1].pop_back();
				} else break;
			}
			return;
		}
		int mid=(x+y)/2;
		if (l<=mid) cal(q*2,x,mid,l,r);
		if (mid<r) cal(q*2+1,mid+1,y,l,r);
	}
	inline void work(VI x) {
		int i;
		for (i=0;i<x.size();i++) {
			int A=x[i],B=biu[A];
			A+=2;
			if (L[A]<L[B]) A=B;
			int l=L[A],r=R[A];
			cal(1,1,n,l,r);
		}
	}
} blue,red;
int main() {
	scanf("%d",&n);
	For(i,1,n-1) scanf("%d",&k),bl.push_back(k);
	For(i,1,n-1) scanf("%d",&k),re.push_back(k);
	blue.into(bl,re);
	red.into(re,bl);
	scanf("%d",&k); a.push_back(k-1); _=0; red.use[k-1]=1;
	for (;a.size();) {
		printf("%s\n",!_?"Blue":"Red");
		for (i=0;i<a.size();i++) printf("%d ",a[i]+1); printf("\n");
		tmp.clear();
		if (!_) blue.work(a);
		else red.work(a);
		sort(tmp.begin(),tmp.end());
		a=tmp; _^=1;
	}
	return 0;
}
