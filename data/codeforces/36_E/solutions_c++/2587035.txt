#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
const int mn=200010;
int E=2,ne[mn],fir[mn],pt[mn];
int p,odd,four,s[mn],deg[mn],n,m,t,f[mn];
bool ans[mn];
vector<int> a[3],b;
void add(int u,int v){
    pt[E]=v;
    ne[E]=fir[u];
    fir[u]=E++;
}
void dfs(int x){
    f[x]=t;
    a[t].push_back(x);
    odd+=deg[x]&1;
    for(int k=fir[x];k;k=ne[k])
        if(!f[pt[k]])dfs(pt[k]);
}
void print(int k){
    cout<<k-(s[k]==0)<<endl;
    for(int i=1;i<=k;i++)
        if(s[i]){
            printf("%d\n",s[i]/2);
            deg[pt[s[i]]]--;
            deg[pt[s[i]^1]]--;
        }
    if(k<p){
        cout<<p-k<<endl;
        for(k++;k<=p;k++){
            printf("%d\n",s[k]/2);
            deg[pt[s[k]]]--;
            deg[pt[s[k]^1]]--;
        }
    }
    p=0;
}
void road(int x){
    for(int k=fir[x];k;k=ne[k])
        if(!ans[k]){
            ans[k]=ans[k^1]=1;
            road(pt[k]);
            s[++p]=k;
        }
}
void euler(int x){
    for(int i=0;i<a[x].size();i++)
        if(deg[a[x][i]]&1){
            road(a[x][i]);
            return;
        }
    for(int i=0;i<a[x].size();i++)
        if(deg[a[x][i]]){
            road(a[x][i]);
            return;
        }
}
int main(){
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    scanf("%d",&m);
    for(int i=1;i<=m;i++){
        int x,y;
        scanf("%d%d",&x,&y);
        add(x,y),add(y,x);
        deg[x]++,deg[y]++;
        n=max(n,x);
        n=max(n,y);
    }
    for(int i=1;i<=n;i++)
        if(!f[i]&&deg[i]){
            t++;
            odd=0;
            dfs(i);
            if(odd&1||odd>4)return puts("-1"),0;
            if(odd==4)four=1;
        }
    if(t>2||t>1&&four||t==1&&m==1)return puts("-1"),0;
    if(t==2){
        euler(1);
        print(p);
        euler(2);
        print(p);
    }
    else{
        for(int i=0;i<a[1].size();i++)
            if(deg[a[1][i]]&1)b.push_back(a[1][i]);
        if(b.size()==4){
            add(b[0],b[1]),add(b[1],b[0]);
            deg[b[0]]++;
            deg[b[1]]++;
            euler(1);
            int flag=0;
            for(int i=1;i<=p;i++)
                if(s[i]==E-1||s[i]==E-2){
                    flag=i;
                    break;
                }
            s[flag]=0;
            print(flag);
        }
        else euler(1),print(p-1);
    }
    return 0;
}
