#include <cstdio>
#include <algorithm>
using namespace std;
#define rep(i,a,n) for (int i=a;i<n;i++)
#define Rep(i,u) for (int i=fst[u];i;i=nxt[i])
const int N=20010;
int n,m,tot,u,w,ot,to,ct,y[N],nxt[N],fst[N],po[N],fg[N],f[N],g[N],c[N],v[N],d[N];
void add(int u,int v) {y[++tot]=v;nxt[tot]=fst[u];fst[u]=tot;}
void dfs2(int u) {
	if (v[u]) return;v[u]=1;if (d[u]) po[to++]=u,ot++;
	Rep(j,u) dfs2(y[j]);
}
void dfs(int u,int *f) {
	v[u]=1;
	Rep(j,u) if (!fg[j/2]) fg[j/2]=1,dfs(y[j],f),f[++f[0]]=j/2;
}
void spt(int v) {
	if (v) {
		rep(i,1,m+2) if (f[i]==v) {f[0]=i-1;break;}
		rep(i,f[0]+2,m+2) g[++g[0]]=f[i];
	} else g[g[0]=1]=f[f[0]--];
}
int main() {
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d",&m);tot=1;
	rep(i,0,m) scanf("%d%d",&u,&w),add(u,w),add(w,u),n=max(n,max(u,w)),c[u]=c[w]=1,d[u]^=1,d[w]^=1;
	rep(i,1,n+1) if (c[i]&&!v[i]) ct++,ot=0,dfs2(i),ct+=(ot>=4);
	if (m<2||to>4||ct>2) return puts("-1"),0;
	rep(i,1,n+1) v[i]=0;
	if (ct==1) if(to==2) dfs(po[0],f),spt(0);else dfs(y[2],f),spt(0);
	else if (ot==4) add(po[1],po[2]),add(po[2],po[1]),dfs(po[0],f),spt(tot/2);
	else if (to==4) {dfs(po[0],f);rep(i,0,4) if (!v[po[i]]) dfs(po[i],g);}
	else if (to==2) {dfs(po[0],f);rep(i,1,n+1) if (c[i]&&!v[i]) dfs(i,g);}
	else {dfs(y[2],f);rep(i,1,n+1) if (c[i]&&!v[i]) dfs(i,g);}
	printf("%d\n",f[0]);rep(i,1,f[0]+1) printf("%d ",f[i]);
	printf("\n%d\n",g[0]);rep(i,1,g[0]+1) printf("%d ",g[i]);
}