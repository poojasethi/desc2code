#include<cstdio>
#include<set>
#include<vector>
#include<algorithm>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define fo(i,a,b) for(i=a;i<=b;++i)
using namespace std;
const int mn=101000;
typedef pair<int,int> edge;
set<edge>e[mn];
vector<int>cur,path;
vector< vector<int> >ans;
int n,m,lp;
int d[mn],p[mn];
void dfs(int r)
{
    int i,p;
    while(!e[r].empty())
    {
        i=e[r].begin()->fi,p=e[r].begin()->se;
        e[r].erase(mp(i,p));
        e[i].erase(mp(r,p));
        dfs(i);
        path.pb(p);
    }
}
void split(vector<int>path)
{
    int i,j,n=path.size();
    for(i=n-1;i&&path[i]!=-1;--i);
    for(j=0;j<n;++i,++j)
    {
        if(path[i%n]==-1)
        {
            if(cur.size())ans.push_back(cur);
            cur.clear();
        }
        else cur.pb(path[i%n]);
    }
    if(cur.size())ans.pb(cur),cur.clear();
}
int main()
{
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    scanf("%d",&m);
    int i,j,x,y;
    fo(i,1,m)
    {
        scanf("%d%d",&x,&y);
        n=max(n,max(x,y));
        e[x].insert(mp(y,i));
        e[y].insert(mp(x,i));
        ++d[x],++d[y];
    }
    fo(i,1,n)if(d[i]%2)p[++lp]=i;
    for(i=1;i<=lp;i+=2)
        e[p[i]].insert(mp(p[i+1],-1)),e[p[i+1]].insert(mp(p[i],-1));
    fo(i,1,n)
    {
        dfs(i);
        if(path.size())split(path),path.clear();
    }
    if(ans.size()==1&&ans[0].size()>1)
    {
        ans.pb(vector<int>(ans[0].begin(),ans[0].begin()+1));
        ans.pb(vector<int>(ans[0].begin()+1,ans[0].begin()+ans[0].size()));
        ans.erase(ans.begin());
    }
    if(ans.size()==2)
    {
        for(i=0;i<ans.size();++i)
        {
            printf("%d\n%d",ans[i].size(),ans[i][0]);
            for(j=1;j<ans[i].size();++j)
                printf(" %d",ans[i][j]);
            printf("\n");
        }
    }
    else puts("-1");
    return 0;
}