#include<cstdio>
const int t=10000;
const int tt=t+10;
struct edge{
	edge *nxt;
	int des;
	void maker(edge *&a,int b){
		nxt=a,des=b;
		a=this;
	}
} w[tt*2],*tot,*sta[tt],*res1,*res2,res[tt];
bool pp[tt];
int cnt[tt],edg[tt],od[5];
int tn,tm;
int dfs1(int now){
	pp[now]=false;
	int ans=(cnt[now]&1);
	if (cnt[now]&1) od[tm++]=now;
	for (edge *e=sta[now];e;e=e->nxt)
		if (pp[e->des]) ans+=dfs1(e->des);
	return ans;
}
void dfs2(int now){
	for (edge *e=sta[now];e;e=e->nxt) if (pp[e-w>>1]){
		pp[e-w>>1]=false;
		dfs2(e->des);
		edg[tn++]=e-w>>1;
	}
}
int main(){
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int n,i,a,b,ans,tp,pr[5];
	scanf("%d",&n);
	if (n==1) {puts("-1"); return 0;}
	for (i=1;i<=t;i++) pp[i]=true,sta[i]=NULL,cnt[i]=0;
	for (tot=w,i=0;i<n;i++){
		scanf("%d%d",&a,&b);
		(tot++)->maker(sta[a],b);
		(tot++)->maker(sta[b],a);
		cnt[a]++,cnt[b]++;
	}
	tp=tn=0;
	for (ans=0,i=1;i<=t;i++) if (cnt[i] && pp[i]){
		a=dfs1(i)/2;
		ans+=a?a:1;
		if (tp<=2) pr[tp++]=i;
	}
	if (ans>2) {puts("-1"); return 0;}
	for (i=0;i<=n;i++) pp[i]=true;
	if (tp==1 || tm==4){
		if (tm==0) a=pr[0]; else if (tm==2) a=od[0]; else{
			(tot++)->maker(sta[od[2]],od[1]);
			(tot++)->maker(sta[od[1]],od[2]);
			a=od[0];
		}
		dfs2(a);
		for (res1=NULL,tot=res,i=0;i<tn-1-(tm==4) && edg[i]!=n;i++)
			(tot++)->maker(res1,edg[i]);
		for (res2=NULL;i<tn;i++) if (edg[i]!=n)
			(tot++)->maker(res2,edg[i]);
	} else{
		if (tm==0) dfs2(pr[0]); else dfs2(od[0]);
		for (res1=NULL,tot=res,i=0;i<tn;i++)
			(tot++)->maker(res1,edg[i]);
		tn=0;
		if (pp[sta[pr[1]]-w>>1]) dfs2(pr[1]); else dfs2(pr[0]);
		for (res2=NULL,i=0;i<tn;i++)
			(tot++)->maker(res2,edg[i]);
	}
	ans=0;
	for (edge *e=res1;e;e=e->nxt) ans++;
	printf("%d\n",ans);
	for (edge *e=res1;e;e=e->nxt)
		printf(e->nxt?"%d ":"%d\n",e->des+1);
	printf("%d\n",n-ans);
	for (edge *e=res2;e;e=e->nxt)
		printf(e->nxt?"%d ":"%d\n",e->des+1);
	return 0;
}
