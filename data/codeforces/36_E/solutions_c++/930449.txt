#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li       	long long int
#define rep(i,to)	for(li i=0;i<((li)(to));++i)
#define pb       	push_back
#define sz(v)    	((li)(v).size())
#define bit(n)   	(1ll<<(li)(n))
#define all(vec)	(vec).begin(),(vec).end()
#define each(i,c)	\
for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define MP make_pair
#define F first
#define S second



typedef pair<li,li> PI;
#define MAX 10005
vector<PI> E[MAX];
vector<li> now;
vector<vector<li> > loop;
li x[MAX],y[MAX];

void recur(li pos){
	while(sz(E[pos])){
		li num=E[pos].back().F;
		li to=E[pos].back().S;
		E[pos].pop_back();
		E[to].erase(find(all(E[to]),MP(num,pos)));
		recur(to);
		now.pb(num);
	}
}

	

int main(){
	ofstream ofs("output.txt");
	ifstream ifs("input.txt");
	li n;
	ifs>>n;
	rep(i,n) ifs>>x[i]>>y[i];
	if(n<2){ ofs<<-1<<endl; return 0; }
	rep(i,n) E[x[i]].pb(MP(i,y[i]));
	rep(i,n) E[y[i]].pb(MP(i,x[i]));
	vector<li> odd;
	rep(i,MAX)if(sz(E[i])%2) odd.pb(i);
	for(li i=0;i+1<sz(odd);i+=2){
		E[odd[i]].pb(MP(-1,odd[i+1]));
		E[odd[i+1]].pb(MP(-1,odd[i]));
	}
	
	rep(i,MAX)while(sz(E[i])){
		now.clear();
		recur(i);
		li start=-1;
		rep(j,sz(now))if(now[j]==-1) start=(j+1)%sz(now);
		if(start==-1) start=0;
		vector<li> vec;
		rep(j,sz(now)){
			if(now[(j+start)%sz(now)]==-1){
				if(sz(vec)) loop.pb(vec);
				vec.clear();
			}else{
				vec.pb(now[(j+start)%sz(now)]);
			}
		}
		if(sz(vec)) loop.pb(vec);
	}
	
	
	if(sz(loop)==1){
		loop.pb(vector<li>(1,(loop[0].back())));
		loop[0].pop_back();
	}
	if(sz(loop)==2){
		rep(i,2){
			ofs<<sz(loop[i])<<endl;
			rep(j,sz(loop[i])) ofs<<loop[i][j]+1<<" "; ofs<<endl;
		}
	}else{
		ofs<<-1<<endl;
	}
}
