#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
const int u=20010;
vector<int> a[u],b;
int ver[u],next[u],head[u],v[u],s[u],du[u],ans[u],n,m,tot,p,t,odd,x,y,i,four;

void add(int x,int y)
{
	ver[++tot]=y,next[tot]=head[x],head[x]=tot;
}

void dfs(int x)
{
	v[x]=t,a[t].push_back(x),odd+=du[x]&1;
	for(int i=head[x];i;i=next[i])
		if(!v[ver[i]]) dfs(ver[i]);
}

void print(int k)
{
	cout<<k-(s[k]==0)<<endl;
	for(int i=1;i<=k;i++)
		if(s[i]) printf("%d\n",s[i]>>1),du[ver[s[i]]]--,du[ver[s[i]^1]]--;
	if(k<p)
	{
		cout<<p-k<<endl;
		for(k++;k<=p;k++) printf("%d\n",s[k]>>1),du[ver[s[k]]]--,du[ver[s[k]^1]]--;
	}
	p=0;
}

void road(int x)
{
	for(int i=head[x];i;i=next[i])
		if(!ans[i]) ans[i]=ans[i^1]=1,road(ver[i]),s[++p]=i;
}

void euler(int x)
{
	for(int i=0;i<a[x].size();i++)
		if(du[a[x][i]]&1) {road(a[x][i]); return;}
	for(int i=0;i<a[x].size();i++)
		if(du[a[x][i]]) {road(a[x][i]); return;}
}

int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	cin>>m;
	for(tot=i=1;i<=m;i++)
	{
		scanf("%d%d",&x,&y);
		add(x,y),add(y,x),du[x]++,du[y]++;
		n=max(n,x),n=max(n,y);
	}
	for(i=1;i<=n;i++)
		if(!v[i]&&du[i])
		{
			t++,odd=0;
			dfs(i);
			if(odd&1||odd>4) {puts("-1"); return 0;}
			if(odd==4) four=1;
		}
	if(t>2||t>1&&four||t==1&&m==1) {puts("-1"); return 0;}
	if(t==2) euler(1),print(p),euler(2),print(p);
	else{
		for(i=0;i<a[1].size();i++)
			if(du[a[1][i]]&1) b.push_back(a[1][i]);
		if(b.size()==4)
		{
			add(b[0],b[1]),add(b[1],b[0]),du[b[0]]++,du[b[1]]++;
			euler(1);
			for(i=1;i<=p;i++)
				if(s[i]==tot||s[i]==tot-1) break;
			s[i]=0,print(i);
		}
		else euler(1),print(p-1);
	}
	return 0;
}
	  	   							  	 	  				