#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

int N,M,S,s[10005],head[10005],next[20005],lk[20005],p[2][10005],q[10005],X[10005],Y[10005],pp[10005];
bool b[10005],c[10005];

void add(int u,int v,int t) {lk[t]=v,next[t]=head[u],head[u]=t,s[u]++;}

void dfs(int u)
{
	b[u]=1;
	if (s[u]&1) p[S][++p[S][0]]=u;
	for (int i=head[u],v; v=lk[i],i; i=next[i]) if (!b[v]) dfs(v);
}

void Eular(int u) {for (int i=head[u],v; v=lk[i],i; i=next[i]) if (!c[i/2]) c[i/2]=1,Eular(v),q[++q[0]]=i/2;}

int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d",&M);
	for (int i=1,t=1,u,v; i<=M; i++) scanf("%d%d",&u,&v),add(u,v,++t),add(v,u,++t),N=max(N,max(u,v));
	for (int i=1; S<3&&i<=N; i++) if (s[i]&&!b[i]) pp[S]=i,dfs(i),S++;
	if (S>2||p[0][0]+p[1][0]>4||(S==2&&(p[0][0]>2||p[1][0]>2))) {puts("-1"); return 0;}
	if (S==1)
		if (p[0][0]==4)
		{
			add(p[0][1],p[0][2],2*M+2),add(p[0][2],p[0][1],2*M+3),Eular(p[0][3]);
			for (int i=1,t=0; i<=q[0]; i++) if (q[i]>M) t=1;
			else if (!t) X[++X[0]]=q[i]; else Y[++Y[0]]=q[i];
		}
		else
		{
			if (!p[0][0]) Eular(pp[0]); else Eular(p[0][1]);
			memcpy(X,q,sizeof(q)),Y[++Y[0]]=X[X[0]--];
		}
	else
	{
		if (!p[0][0]) Eular(pp[0]); else Eular(p[0][1]);
		memcpy(X,q,sizeof(q)),q[0]=0;
		if (!p[1][0]) Eular(pp[1]); else Eular(p[1][1]);
		memcpy(Y,q,sizeof(q));
	}
	if (!X[0]||!Y[0]) puts("-1"); else
	{
		printf("%d\n",X[0]);
		for (int i=1; i<=X[0]; i++) printf("%d%c",X[i],i==X[0]?'\n':' ');
		printf("%d\n",Y[0]);
		for (int i=1; i<=Y[0]; i++) printf("%d%c",Y[i],i==Y[0]?'\n':' ');
	}
}