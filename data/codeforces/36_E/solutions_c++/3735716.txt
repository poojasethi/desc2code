#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#define add(a,b) (e[++m]=b,pre[m]=last[a],last[a]=m)
using namespace std;
vector<int> a[20005];
vector<int> b;
int last[20005];
int pre[20005];
int deg[20005];
int ans[20005];
int e[20005];
int v[20005];
int s[20005];
int n,m=1,p,t,odd;
void dfs(int x)
{	int i;
	v[x]=t;
	a[t].push_back(x);
	odd+=deg[x]&1;
	for(i=last[x];i!=0;i=pre[i])
		if(!v[e[i]])
			dfs(e[i]);
}
void print(int k)
{	int i;
	printf("%d\n",k-(s[k]==0));
	for (i=1;i<=k;++i)
		if (s[i])
		{	printf("%d\n",s[i]>>1);
			--deg[e[s[i]]];
			--deg[e[s[i]^1]];
		}
	if (k<p)
	{	printf("%d\n",p-k);
		for (++k;k<=p;++k)
		{	printf("%d\n",s[k]>>1);
			--deg[e[s[k]]];
			--deg[e[s[k]^1]];
		}
	}
	p=0;
}
void trav(int x)
{	int i;
	for (i=last[x];i!=0;i=pre[i])
		if (!ans[i])
		{	ans[i]=ans[i^1]=1;
			trav(e[i]);
			s[++p]=i;
		}
}
void euler(int x)
{	int i;
	for (i=0;i<a[x].size();++i)
		if (deg[a[x][i]]&1)
		{	trav(a[x][i]);
			return ;
		}
	for (i=0;i<a[x].size();++i)
		if (deg[a[x][i]])
		{	trav(a[x][i]);
			return ;
		}
}
void work()
{	int i,four=0;
	for (i=1;i<=n;++i)
		if (!v[i]&&deg[i])
		{	++t,odd=0;
			dfs(i);
			if (odd&1||odd>4)
			{	puts("-1");
				return ;
			}
			if (odd==4)
				four=1;
		}
	if (t>2||t>1&&four||t==1&&m/2==1)
	{	puts("-1");
		return ;
	}
	if (t==2)
	{	euler(1);
		print(p);
		euler(2);
		print(p);
	}
	else
	{	for (i=0;i<a[1].size();++i)
			if (deg[a[1][i]]&1)
				b.push_back(a[1][i]);
		if (b.size()==4)
		{	add(b[0],b[1]);
			add(b[1],b[0]);
			++deg[b[0]];
			++deg[b[1]];
			euler(1);
			for (i=1;i<=p;++i)
				if (s[i]==m||s[i]==m-1)
					break;
			s[i]=0;
			print(i);
		}
		else euler(1),print(p-1);
	}
}
int main()
{	int i,x,y,tm;
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d",&tm);
	for (i=1;i<=tm;++i)
	{	scanf("%d%d",&x,&y);
		add(x,y),add(y,x);
		++deg[x],++deg[y];
		n=max(n,x),n=max(n,y);
	}
	work();
	return 0;
}
			  	    	 			 			  				