#include <iostream>
#include <cstdio>
#include <cstring>
#define MAXN 10005
using namespace std;

struct node
{
	int v, id, next;
}edge[MAXN<<1];
int adj[MAXN], pos, du[MAXN], vis[MAXN], road[3][MAXN], len[3];
int tmp[MAXN], ll;
bool cap[MAXN];

inline void add(int u,int v,int id)
{
	++pos;
	edge[pos].v=v, edge[pos].id=id, edge[pos].next=adj[u];
	adj[u]=pos;
}

void dfs(int u,int cnt)
{
	vis[u]=cnt;
	for(int p=adj[u], v;p;p=edge[p].next)
		if(!vis[(v=edge[p].v)])
			dfs(v,cnt);
}

void dfs2(int u,int road[],int &len)
{
	for(int p=adj[u], id;p;p=edge[p].next)
		if(cap[(id=edge[p].id)])
		{
			cap[id]=0;
			dfs2(edge[p].v,road,len);
			road[++len]=id;
		}
}

void work1()
{
	int c=1, b=0, pos;
	for(int i=1;i<=10000;++i)
		if(du[i]&&vis[i]==c)
		{
			pos=b=0;
			for(int j=1;j<=10000;++j)
				if(vis[j]==c&&du[j]&1)++pos, b=j;
			if(pos!=0&&pos!=2){puts("-1");return;}
			if(!b)for(int j=1;j<=10000;++j)if(vis[j]==c){b=j;break;}
			dfs2(b,road[c],len[c]);
			++c;
		}
	printf("%d\n",len[1]);
	for(;len[1];--len[1])printf("%d ",road[1][len[1]]);
	printf("\n%d\n",len[2]);
	for(;len[2];--len[2])printf("%d ",road[2][len[2]]);
}

void work2()
{
	int pos=0, b=0;
	for(int i=1;i<=10000;++i)
		if(du[i]&1)++pos, b=i;
	if(pos>4){puts("-1");return;}
	if(pos<=2)
	{
		if(!b)for(int i=1;i<=10000;++i)if(du[i]){b=i;break;}
		dfs2(b,road[1],len[1]);
		puts("1");printf("%d\n",road[1][len[1]]);
		--len[1];
		printf("%d\n",len[1]);
		for(;len[1];--len[1])printf("%d ",road[1][len[1]]);
	}
	else if(pos==4)
	{
		int t=0, q[6]={0};
		for(int i=1;i<=10000;++i)
			if(du[i]&1)q[++t]=i;
		add(q[1],q[2],0), add(q[2],q[1],0);cap[0]=1;
		dfs2(q[3],road[1],len[1]);
		for(int i=1;i<=len[1];++i)
			if(road[1][i]==0)
			{
				printf("%d\n",len[1]-i);
				for(;len[1]>i;--len[1])printf("%d ",road[1][len[1]]);
				--len[1];
				printf("\n%d\n",len[1]);
				for(;len[1];--len[1])printf("%d ",road[1][len[1]]);
			}
	}
	else puts("-1");
}

int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int m, u, v;
	scanf("%d",&m);
	if(m==1){puts("-1");return 0;}
	for(int i=1;i<=m;++i)
	{
		scanf("%d%d",&u,&v);
		add(u,v,i), add(v,u,i);
		++du[v], ++du[u], cap[i]=1;
	}
	int cnt=0;
	for(int i=1;i<=10000;++i)
		if(du[i]&&!vis[i])
			dfs(i,++cnt);
	if(cnt>2)puts("-1");
	else if(cnt==2)work1();
	else work2();
	return 0;
}
 	 				 		 	 	  	 			  	 		  	