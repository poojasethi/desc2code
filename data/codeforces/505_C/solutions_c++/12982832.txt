#include <bits/stdc++.h>
using namespace std;
int a[30050],dp[30050][501],n,d,k;
int solve(int i,int j){
	if(i>30000){
		return 0;
	}
	else if(dp[i][j-k]==-1){
		if(j>1)
			dp[i][j-k] = max(solve(i+j,j),max(solve(i+j+1,j+1),solve(i+j-1,j-1)));
		else
			dp[i][j-k] = max(solve(i+j,j),solve(i+j+1,j+1));
		dp[i][j-k]+=a[i];
	}
	return dp[i][j-k];
}
int main(){
	memset(dp,-1,sizeof(dp));
	scanf("%d%d",&n,&d);
	for(int i=0;i<n;i++){
		int x;
		scanf("%d",&x);
		a[x]++;
	}
	k = max(0,d-245);
	cout << solve(d,d) << endl;
	return 0;
}
