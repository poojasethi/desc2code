#include <iostream>
#include <algorithm>
#include <cstring>

using namespace std;

#define M 30005

int gem[M] = {}, dp[M][500], d, x, n;

int dfs(int a, int b) {
	if(dp[a][b] + 1) return dp[a][b];
	
	int res = 0, i, v;
	for(i = -1; i < 2; i++) {
		v = a + d + b + i;
		if(v > 30001 | v <= a)
			continue;
		
		res = max(res, dfs(v, b + i));
	}
	
	return dp[a][b] = res + gem[a];
}

int main() {
	cin >> n >> d;
	
    for (int i = 0; i < n; i++) {
        cin >> x;
		gem[x]++;
    }
	
	memset(dp, -1, sizeof dp);
	
	cout << dfs(d, 0) << endl;
    return 0;
}
