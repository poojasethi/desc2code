#include <iostream>
#include <algorithm>
using namespace std;
int dp[30001][1005], gems[30001], N, D;

int DP(int i, int j) {
	if(dp[i][j] >= 0)
		return dp[i][j];

	int res = 0;
	for (int k=-1; k<=1; k++) {
		int v = j + D + k;
		if(v > 0 && i + v < 30001)
			res = max(res, DP(i+v, j+k));
	}

	return dp[i][j] = res + gems[i];
}

int main() {
	cin >> N >> D;
	int a;

	fill((int*)dp, (int*)dp + 30001 * 1005, -1);
	for (int i=0; i<N; i++) {
		cin >> a; gems[a]++;
	}

	cout << DP(D, 0) << endl;
	return 0;
}