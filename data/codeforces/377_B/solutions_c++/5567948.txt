#include <iostream>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>

using namespace std;

int n,m,s,a[100010],b[100010],c[100010];
int x[100010],y[100010];
int ans[100010];

bool cmpa(int lhs, int rhs) { //bugs
	return a[lhs] > a[rhs];
}

bool cmpb(int lhs, int rhs) { //skill
	return b[lhs] > b[rhs];
}


bool check(int d, int flag) {
	priority_queue<pair<int,int> > pq;
	for (int pa=0,pb=0,cur=0; pa < m; pa+=d) {
		for (;pb < n && b[y[pb]] >= a[x[pa]]; pb++)
			pq.push(make_pair(-c[y[pb]],y[pb]));
		if (pq.empty()) return false;
		cur += -pq.top().first;
		if (cur > s) return false;
		if (flag) {
			for (int i = pa; i < pa+d && i < m; i++)
				ans[x[i]] = pq.top().second + 1;
		}
		pq.pop();
	}
	return true;
}

int main() {
	cin >> n >> m >> s;
	for (int i = 0; i < m; i++) {
		cin >> a[i];
		x[i] = i;
	}
	for (int i = 0; i < n; i++) {
		cin >> b[i];
		y[i] = i;
	}
	for (int i = 0; i < n; i++) {
		cin >> c[i];
	}
	sort(x,x+m,cmpa);
	sort(y,y+n,cmpb);
	int l = 0, r = m+1, mid;
	while (r-l > 1) {
		mid = (l+r)/2;
		if (check(mid,0)) r = mid;
		else l = mid;
	}
	if (r == m+1) cout << "NO";
	else {
		check(r,1);
		cout << "YES\n";
		for (int i = 0; i < m; i++) cout << ans[i] << " ";
	}
}