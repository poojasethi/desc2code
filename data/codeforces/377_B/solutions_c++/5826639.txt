//In the name of God
#include <algorithm>
#include <iostream>
#include <set>
using namespace std;
typedef pair<int, int> pii;
const int N = 1e5 + 5;

int n, m, val, ans[N];
pii a[N]; pair<pii, int> b[N];

bool acc(int t) {
	set<pii> s; int val = ::val;
	for (int i = 0; i < m; i++)
		if (!(i % t))
			s.insert(a[i]);
	for (int i = 0; i < n && !s.empty() && val >= 0; i++) {
		set<pii>::iterator it = s.upper_bound(pii(b[i].first.second, m));
		if (it != s.begin()) {
			it--;
			ans[it-> second] = b[i].second + 1;
			val -= b[i].first.first;
			s.erase(it);
		}
	}
	if (!s.empty() || val < 0)
		return false;
	for (int i = 0; i < m; i++)
		ans[a[i].second] = ans[a[i / t * t].second];
	return true;
}
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> m >> val;
	for (int i = 0; i < m; i++)
		cin >> a[i].first, a[i].second = i;
	for (int i = 0; i < n; i++)
		cin >> b[i].first.second;
	for (int i = 0; i < n; i++)
		cin >> b[i].first.first, b[i].second = i;
	sort(a, a + m, greater<pii>());
	sort(b, b + n);
	int st = 0, ed = m + 1;
	while (ed - st > 1) {
		int mid = st + ed >> 1;
		(acc(mid)? ed: st) = mid;
	}
	if (ed == m + 1)
		cout << "NO\n";
	else {
		acc(ed);
		cout << "YES\n";
		for (int i = 0; i < m; i++)
			cout << ans[i] << ' ';
		cout << '\n';
	}
	return 0;
}
