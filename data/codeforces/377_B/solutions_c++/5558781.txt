#include <cstdio>
#include <cstring>
#include <algorithm>
#include <queue>
#include <utility>

using namespace std;

const int MaxN = 100010;

typedef pair<int,int> PII;

vector<PII> v[MaxN];
int n,m,s,ans;
PII a[MaxN];
int b[MaxN];
int list[MaxN];
int cost[MaxN];

int calc(int lim) {
	int ret=0;
	for(int i=(1<<20);i;i>>=1)
		if(ret+i<=m && a[ret+i].first<=lim) ret+=i;
	return ret;
}

bool check(int len) {
	int sum=0,s2=s,t2;
	priority_queue<PII> q;
	while(!q.empty()) q.pop();
	for(int i=m;i;i--) {
		for(vector<PII> :: iterator p=v[i].begin();p!=v[i].end();p++) q.push(*p);
		if (sum) sum--;
		else {
			if (q.empty()) return 0;
			s2+=q.top().first;
			t2=q.top().second;
			if (s2<0) return 0;
			q.pop(),sum+=len-1;
		}
		list[a[i].second]=t2;
	}
	return 1;
}

int main() {
	scanf("%d%d%d",&n,&m,&s);
	for(int i=1;i<=m;i++) scanf("%d",&a[i].first),a[i].second=i;
	sort(a+1,a+m+1);
	for(int i=1;i<=n;i++) scanf("%d",&b[i]);
	for(int i=1;i<=n;i++) scanf("%d",&cost[i]);
	for(int i=1;i<=n;i++) v[calc(b[i])].push_back(make_pair(-cost[i],i));
	if (!check(1<<20)) {puts("NO");return 0;}
	puts("YES");
	for (int i=(1<<20);i;i>>=1)
		if (!check(ans+i)) ans+=i;
	check(ans+1);
	for(int i=1;i<=m;i++) printf("%d ",list[i]);
	return 0;
}

