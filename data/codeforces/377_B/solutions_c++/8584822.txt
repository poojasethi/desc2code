#include <iostream>
#include <algorithm>
#include <queue>

using namespace std;

int n,m,s;

pair<int,int> est[1000000];
pair<int,int> tas[1000000];
int assig[1000000];
int c[1000000];

bool puede(int d)
{
  int itas=m-1;
  int iest=n-1;
  priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > q;
  int ss=s;
  while (0<=itas) {
    while (iest>=0 and est[iest].first>=tas[itas].first) {
      int id=est[iest].second;
      q.push(pair<int,int> (c[id],id));
      iest--;
    }
    if (q.empty())
      return false;
    pair<int,int> p=q.top();
    q.pop();
    ss-=p.first;
    if (ss<0) return false;
    int id=p.second;
    for (int i=0;i<d and 0<=itas;i++,itas--)
      assig[tas[itas].second]=id;
  }
  return true;
}

int main()
{
  cin>>n>>m>>s;
  for (int i=0;i<m;i++) {
    cin>>tas[i].first;
    tas[i].second=i;
  }
  sort(tas,tas+m);
  for (int i=0;i<n;i++) {
    cin>>est[i].first;
    est[i].second=i+1;
  }
  sort(est,est+n);
  for (int i=1;i<=n;i++)
    cin>>c[i];
  int inf=0,sup=m+1;
  while (inf+1<sup) {
    int med=(inf+sup)/2;
    if (puede(med))
      sup=med;
    else
      inf=med;
  }
  if (inf==m)
    cout<<"NO"<<endl;
  else {
    cout<<"YES"<<endl;
    puede(sup);
    for (int i=0;i<m;i++) {
      if (i>0) cout<<" ";
      cout<<assig[i];
    }
    cout<<endl;
  }
}

