#include<cstdio>
#include<algorithm>
#include<queue>
int n, m, k;
struct bug{
	int d, i, x;
	bool operator<(bug b)const{
		return d < b.d;
	}
} b[100005];

struct student {
	int a, c, i;
	bool operator<(student s)const{
		return a < s.a;
	}
} s[100005];

struct comp {
	bool operator () (int a, int b)const{
		return s[a].c > s[b].c;
	}
};

bool ok(int r){
	int bi = m - 1, si = n - 1, bani = k;
	std::priority_queue<int, std::vector<int>, comp> q;
	while(bi >= 0){
		while(si >= 0 && s[si].a >= b[bi].d)
			q.push(si--);
		if(q.empty())
			return 0;
		int st = q.top();
		q.pop();

		bani -= s[st].c;
		if(bani < 0)
			return 0;

		for(int i=0;i<r && bi >= 0;i++,bi--)
			b[bi].x = s[st].i;
	}

	return 1;
}

bool comp2(bug a, bug b){
	return a.i < b.i;
}

int main(void){
	scanf("%d%d%d", &n, &m, &k);
	for(int i=0;i<m;i++){
		scanf("%d", &b[i].d);
		b[i].i = i;
	}
	for(int i=0;i<n;i++){
		scanf("%d", &s[i].a);
		s[i].i = i + 1;
	}
	for(int i=0;i<n;i++)
		scanf("%d", &s[i].c);

	std::sort(s, s+n);
	std::sort(b, b+m);

	int s = 1, e = m;
	while(s < e){
		int mid = (s+e)/2;
		if(ok(mid))
			e = mid;
		else
			s = mid + 1;
	}

	if(ok(s)){
		std::sort(b, b+m, comp2);

		puts("YES");
		for(int i=0;i<m;i++)
			printf("%d ", b[i].x);
	} else
		puts("NO");
	return 0;
}
