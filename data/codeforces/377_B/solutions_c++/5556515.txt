#include <cstdio>
#include <queue>
#include <utility>
#include <algorithm>
#define LL long long
#define REP(i,n) for (int i=1;i<=n;++i)
#define FOR(i,n) for (__typeof(n.begin())i=n.begin();i!=n.end();++i)
using namespace std;

const int MAXN=100010;
vector< pair<int,int> > v[MAXN];
int n,m,s,ans;
pair<int,int> a[MAXN];
int b[MAXN];
int list[MAXN];
int cost[MAXN];

int Test(int lim) {
	int ret=0;
	for (int i=(1<<20);i;i>>=1)
		if (ret+i<=m)
			if (a[ret+i].first<=lim) ret+=i;
	return ret;
}

bool Check(int len) {
	int hav=0,ss=s,tt;
	priority_queue< pair<int,int> > pq;
	while (!pq.empty()) pq.pop();
	for (int i=m;i;--i) {
		FOR(p,v[i]) pq.push(*p);
		if (hav) --hav;
		else {
			if (pq.empty()) return false;
			ss+=pq.top().first;
			tt=pq.top().second;
			if (ss<0) return false;
			pq.pop();
			hav+=len-1;
		}
		list[a[i].second]=tt;
	}
	return true;
}

int main() {
	scanf("%d%d%d",&n,&m,&s);
	REP(i,m) {scanf("%d",&a[i].first);a[i].second=i;}
	sort(a+1,a+m+1);
	REP(i,n) scanf("%d",&b[i]);
	REP(i,n) scanf("%d",&cost[i]);
	REP(i,n) v[Test(b[i])].push_back(make_pair(-cost[i],i));
	if (!Check(1<<20)) {puts("NO");return 0;}
	puts("YES");
	for (int i=(1<<20);i;i>>=1)
		if (!Check(ans+i)) ans+=i;
	Check(ans+1);
	REP(i,m) printf("%d ",list[i]);
	return 0;
}
