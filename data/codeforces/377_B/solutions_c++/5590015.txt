#include <iostream>
#include <algorithm>
#include <set>

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<pii, int> ppi;

const int MAXN = 1000 * 100 + 10;
pii a[MAXN];
int ans[MAXN], n, m, sum;
ppi all[MAXN];
set<ppi> que;

bool check(int x)
{
	que.clear();
	int ind = 0, cur = 0;
	ll xsum = 0ll;
	while (cur < m)
	{
		while (ind < n && all[ind].first.first >= a[cur].first)
		{
			que.insert(ppi(pii(all[ind].first.second, all[ind].first.first), all[ind].second));
			ind++;
		}
		if (que.empty())
			return false;
		ppi t = *que.begin();
		que.erase(que.begin());
		for (int i = 0; i < x && cur < m; i++)
			ans[a[cur++].second] = t.second;
		xsum += t.first.first;
	}
	return (xsum <= sum);
}

int main()
{
	cin >> n >> m >> sum;
	for (int i = 0; i < m; i++)
		cin >> a[i].first, a[i].second = i;
	sort(a, a + m);
	reverse(a, a + m);
	for (int i = 0; i < n; i++)
		cin >> all[i].first.first, all[i].second = i;
	for (int i = 0; i < n; i++)
		cin >> all[i].first.second;
	sort(all, all + n);
	reverse(all, all + n);
	int s = 0, e = MAXN;
	while (e > s)
	{
		int mid = (s + e) / 2;
		if (check(mid))
			e = mid;
		else
			s = mid + 1;
	}
	if (check(e))
	{
		cout << "YES" << endl;
		for (int i = 0; i < m; i++)
			cout << ans[i] + 1 << " ";
		cout << endl;
		return 0;
	}
	cout << "NO" << endl;
	return 0;
}
