#include <cstdio>
#include <vector>
#include <algorithm>
#include <set>
using namespace std;

const int MAXN = 100100;

int n, m, s, bug[MAXN];
pair<int,int> a[MAXN];
pair<int,pair<int,int> > b[MAXN];

bool can (int X) {
    int j = n - 1;
    set<pair<int,int> > S;

    long long ans = 0;
    for (int i = m - 1; i >= 0;) {
        while (j >= 0 && b[j].first >= a[i].first) {
            S.insert( make_pair(b[j].second.first, b[j].second.second) );
            --j;
        }
        if (!S.size()) return 0;
        pair<int,int> t = *S.begin(); S.erase(S.begin());
        ans += t.first;
        for (int J = i, k = 0; J >= 0 && k < X; ++k, --J) bug[a[J].second] = t.second;
        i -= X;
    }

    return ans <= s;
}

int main ()
{

    scanf ("%d%d%d", &n ,&m, &s);

    for (int i = 0; i < m; ++i) scanf ("%d", &a[i].first), a[i].second = i;
    sort (a, a + m);

    for (int i = 0; i < n; ++i) scanf ("%d", &b[i].first), b[i].second.second = i;
    for (int i = 0; i < n; ++i) scanf ("%d", &b[i].second.first);
    sort (b, b + n);

    int lo = 0, hi = m + 2, mid;
    while (lo < hi) {
        mid = (lo + hi) / 2;
        if ( can(mid) ) hi = mid;
        else lo = mid + 1;
    }
    can(lo);

    if (lo == m + 2) return printf ("NO\n"), 0;
    printf ("YES\n");
    for (int i = 0; i < m; ++i) printf ("%d ", bug[i] + 1);

    return 0;
}

