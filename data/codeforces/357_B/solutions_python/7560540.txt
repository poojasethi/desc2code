from __future__ import division
from collections import defaultdict

n, m = map(int, raw_input().split())
dances = []
dd = defaultdict(list)
for i in range(m):
    x, y, z = map(int, raw_input().split())
    dd[x].append((y, z))
    dd[y].append((x, z))
    dd[z].append((y, x))
colours = [0] * (n + 1)
unvisited = set(range(1,n + 1))
open_list = []
while unvisited:
    if not open_list:
        x = unvisited.pop()
        open_list.append((x, 1))
    while open_list:
        x, c = open_list.pop()
        colours[x] = c
        for p1, p2 in dd[x]:
            if p1 in unvisited:
                col = (c + 1) % 3
                if col == 0:
                    col = 3
                open_list.append((p1, col))
                unvisited.discard(p1)
            if p2 in unvisited:
                col = (c + 2) % 3
                if col == 0:
                    col = 3
                open_list.append((p2, col))
                unvisited.discard(p2)
print " ".join(str(c) for c in colours[1:])
        
        
