from collections import deque
import itertools

def min_quantity(numbers):
    pairs = deque()
    for number, group in itertools.groupby(numbers):
        pairs.append((number, len(list(group))))
    current_index = 0
    to_be_filled = 0
    while pairs:
        value, counts = pairs.popleft()
        if current_index < value:
            to_be_filled += value - current_index
        if counts > 1:
            if counts % 2 == 0:
                to_be_filled += 1
            counts /= 2
            if pairs and pairs[0][0] == value + 1:
                pairs[0] = (pairs[0][0], pairs[0][1] + counts)
            else:
                pairs.appendleft((value + 1, counts))
        current_index = value + 1
    return to_be_filled

def main():
    number_count = int(raw_input())
    numbers = map(int, raw_input().split())
    print min_quantity(numbers)

if __name__ == '__main__':
    main()
