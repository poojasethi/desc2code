#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<queue>
#include<vector>
#include<map>
#include<algorithm>
using namespace std;

#define INF 0x3f3f3f3f
#define N 300333
vector<int> to[N],dist[N];
int main()
{
    int n,m,k;
    int u,v,w;
    int s,y;
    cin>>n>>m>>k;
    for(int i=0;i<m;i++)
    {
        cin>>u>>v>>w;
        to[u].push_back(v);
        to[v].push_back(u);
        dist[u].push_back(w);
        dist[v].push_back(w);
    }
    priority_queue<pair<long long,int> >q;
    q.push(make_pair(0,1));
    for(int i=0;i<k;i++)
    {
        cin>>s>>y;
        q.push(make_pair(-y,s-n));
    }
    int ans=0;
    bool vis[N];
    memset(vis,0,sizeof(vis));
    while(!q.empty())
    {
        pair<long long,int> t;
        t=q.top();
        q.pop();
        u=t.second;
        w=t.first;
        if(u<1)
        {
            u+=n;
            if(vis[u]) ++ans;
        }
        if(vis[u]) continue;
        vis[u]=1;
        for(int i=0;i<to[u].size();i++)
        {
            q.push(make_pair(w-dist[u][i],to[u][i]));
        }
    }
    cout<<ans<<endl;
    return 0;
}
