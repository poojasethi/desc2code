#include <algorithm>
#include <stdio.h>
#include <vector>
#include <queue>
#define  maxn      100003
#define  pb        push_back
using    namespace std;

struct data
{
  int to,len,way;
  data(int _to , int _len , int _way) { to=_to; len=_len; way=_way; }
  friend bool operator<(const data &a , const data &b)
  {
    if(a.len!=b.len) return a.len>b.len;
    return a.way>b.way;
  }
};

int n,m,k,ans;
bool mark[maxn];
vector<data>adj[maxn];
priority_queue<data>heap;

int main()
{
  scanf("%d%d%d",&n,&m,&k);
  for(int i=0,x,y,z ; i<m ; i++)
  {
    scanf("%d%d%d",&x,&y,&z);
    adj[x].pb(data(y,z,0));
    adj[y].pb(data(x,z,0));
  }
  for(int i=0,x,y ; i<k ; i++)
  {
    scanf("%d%d",&x,&y);
    adj[1].pb(data(x,y,1));
  }
  heap.push(data(1,0,0));
  while(!heap.empty())
  {
    data tmp=heap.top();
    heap.pop();
    if(mark[tmp.to])
    {
      if(tmp.way) ans++;
      continue;
    }
    mark[tmp.to]=true;
    int sz=adj[tmp.to].size();
    for(int i=0 ; i<sz ; i++)
      if(!mark[adj[tmp.to][i].to])
        heap.push(data(adj[tmp.to][i].to,tmp.len+adj[tmp.to][i].len,adj[tmp.to][i].way));
  }
  printf("%d\n",ans);
  return 0;
}
