#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
typedef long long LL;
typedef pair<int,int> I;
typedef pair<LL,I> P;
const int N=100100;
int n,m,k,t,s[N];
vector<P> g[N];
P h[N*8];
int main(){
  cin>>n>>m>>k;
  for(int i=0,u,v,w;i<m&&cin>>u>>v>>w;++i)
    g[u].push_back(P(w,I(0,v))),g[v].push_back(P(w,I(0,u)));
  for(int i=0,v,w;i<k&&cin>>v>>w;++i)
    g[1].push_back(P(w,I(-1,v)));
  h[t++]=P(0,I(0,1)),push_heap(h,h+t);
  while(t>0){
    P p=h[0];
    pop_heap(h,h+t--);
    int u=p.second.second;
    if(s[u]++)continue;
    k+=p.second.first;
    for(int i=0;i<g[u].size();++i){
      h[t++]=P(p.first-g[u][i].first,g[u][i].second);
      push_heap(h,h+t);
    }
  }
  cout<<k<<endl;
}
