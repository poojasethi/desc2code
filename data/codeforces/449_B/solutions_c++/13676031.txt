#include <bits/stdc++.h>

using namespace std;

const int N = 1e5 + 10;
const long long INF = 1e18;

int n, m, k;
vector<pair<int, int> > g[N];
long long dis[N];
bool vis[N];

int main() {
  scanf("%d%d%d", &n, &m, &k);
  for (int i = 0; i < m; ++i) {
    int u, v, x;
    scanf("%d%d%d", &u, &v, &x);
    g[u].push_back(make_pair(v, x));
    g[v].push_back(make_pair(u, x));
  }
  priority_queue<pair<int, int> > pq;
  fill(dis, dis + N, INF);
  dis[1] = 0;
  pq.push(make_pair(0, 1));
  for (int i = 0; i < k; ++i) {
    int s, y;
    scanf("%d%d", &s, &y);
    pq.push(make_pair(-y, s - n));
  }
  int cnt = 0;
  while (!pq.empty()) {
    pair<int, int> t = pq.top();
    pq.pop();
    int u = t.second, x = t.first;
    if (u < 1) {
      u += n;
      if (vis[u])
        ++cnt;
    }
    if (vis[u])
      continue;
    vis[u] = 1;
    for (int i = 0; i < g[u].size(); ++i) {
      pq.push(make_pair(x - g[u][i].second, g[u][i].first));
    }
  }
  printf("%d\n", cnt);
  return 0;
}
