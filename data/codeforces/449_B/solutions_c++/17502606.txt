#include <stdio.h>
#include <algorithm>
#include <vector>
#include <queue>
#define pli pair<long long,int>
#define ppi pair<pli,int>
#define F first
#define S second
#define mp make_pair
using namespace std;
vector <ppi> e[100005];
bool p[100005];
priority_queue <ppi,vector<ppi>,greater<ppi> > heap;
int main(){
    int n,m,k,g1,g2,g3;
    scanf("%d %d %d",&n,&m,&k);
    for(int i=0;i<m;i++){
        scanf("%d %d %d",&g1,&g2,&g3);
        e[g1].push_back(mp(mp((long long)g3,0),g2));
        e[g2].push_back(mp(mp((long long)g3,0),g1));
    }
    for(int i=0;i<k;i++){
        scanf("%d %d",&g1,&g2);
        e[1].push_back(mp(mp((long long)g2,1),g1));
        e[g1].push_back(mp(mp((long long)g2,1),1));
    }
    heap.push(mp(mp(0LL,0),1));
    while(!heap.empty()){
        ppi g4=heap.top();
        heap.pop();
        if(p[g4.S]){
            continue;
        }
        p[g4.S]=true;
        if(g4.F.S){
            k--;
        }
        for(int i=0;i<e[g4.S].size();i++){
            heap.push(mp(mp(g4.F.F+e[g4.S][i].F.F,e[g4.S][i].F.S),e[g4.S][i].S));
        }
    }
    printf("%d",k);
}

	   	   	    	  				 	 	 	 			