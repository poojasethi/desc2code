#include<cstdio>
#include<cctype>
#include<cstring>
#include<queue>
#include<vector>
using namespace std;
#define pb push_back
#define mk make_pair
typedef long long ll;
typedef pair<ll, int> ele;
const int maxn = 100002;

int n, m, k;

void read(int &x)
{
	x = 0;
	static char c;
	do c = getchar(); while (!isdigit(c));
	do x = x * 10 + c - 48, c = getchar(); while (isdigit(c));
}

vector< pair<int, int> > g[maxn];
priority_queue<ele> q;
void init()
{
	read(n), read(m), read(k);
	for (int i = 0; i < m; ++i)
	{
		int u, v, l;
		read(u), read(v), read(l);
		g[u].pb(mk(v, l));
		g[v].pb(mk(u, l));
	}
	q.push(mk(0, 1));
	for (int i = 0; i < k; ++i)
	{
		int u, y;
		read(u), read(y);
		q.push(mk(-y, u - n));
	}
}

bool v[maxn];
void dijkstra()
{
	int ans = 0;
	memset(v, 0, sizeof(v));
	while (!q.empty())
	{
		ele t = q.top();
		q.pop();
		int u = t.second;
		ll w = t.first;
		if (u < 1)
		{
			u += n;
			if (v[u]) ++ans;
		}
		if (v[u]) continue;
		v[u] = 1;
		for (int i = 0; i < g[u].size(); ++i)
			q.push(mk(w - g[u][i].second, g[u][i].first));
	}
	printf("%d\n", ans);
}

int main()
{
	init();
	dijkstra();
	return 0;
}
