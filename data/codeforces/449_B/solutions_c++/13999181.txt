#include<cstdio>
#include<utility>
#include<vector>
#include<queue>
#include<cstring>
using namespace std;
const int maxn=1e5+5;
const long long INF=0x3f3f3f3f3f3f3f3f;
int n,m,k,p[maxn],vis[maxn];
long long d[maxn];
vector<pair<int,int> > g[maxn]; 
int main(){
    scanf("%d%d%d",&n,&m,&k);
    int u,v,x;
    for(int i=0;i<m;i++){
	scanf("%d%d%d",&u,&v,&x);
	g[u].push_back(make_pair(v,x));
	g[v].push_back(make_pair(u,x));
    }
    for(int i=0;i<=maxn;i++) d[i]=INF;
    d[1]=0;
    memset(p,0,sizeof(p));
    queue<int> que;
    vis[1]=1;
    que.push(1);
    for(int i=1;i<=k;i++){
	int u,x;
	scanf("%d%d",&u,&x);
	if(d[u]>x){
	    d[u]=x; p[u]=1;
	    if(vis[u]==0){
		vis[u]=1;
		que.push(u);
	    }
	}
    }
    while(!que.empty()){
	int u=que.front();
	que.pop();
	for(int i=0;i<g[u].size();i++){
	    int v=g[u][i].first,x=g[u][i].second;
	    if(d[v]>=d[u]+x && p[v])
		p[v]=0;
	    if(d[v]>d[u]+x){
		d[v]=d[u]+x;
		if(vis[v]==0){
		    vis[v]=1;
		    que.push(v);
		}
	    }
	}
	vis[u]=0;
    }
    for(int i=1;i<=n;i++) k-=p[i];
    printf("%d\n",k);
    return 0;
}
