#include <bits/stdc++.h>
#define X first
#define Y second
#define MP make_pair
using namespace std;
typedef pair<int, int> ii;

const int N = 1e5+5;
vector<ii> E[N];
int n, m, k;
long long d[N];

void dijkstra(){
	priority_queue<pair<long long, int> > q;
	for(int i=0; i<n; i++) if(d[i] != 1e15) q.push(MP(-d[i], i));
	while(!q.empty()){
		long long r = -q.top().X, u = q.top().Y;
		q.pop();
		if(r != d[u]) continue;
		for(unsigned i=0; i<E[u].size(); i++){
			int v=E[u][i].X; r = E[u][i].Y;
			if(d[u] + r < d[v]){
				d[v] = d[u]+r;
				q.push(MP(-d[v], v));
			}
		}
	}
}


int main(){
	//freopen("input.in", "r", stdin);
	int a, b, c, res = 0;
	scanf("%d %d %d", &n, &m, &k);
	while(m--){
		scanf("%d %d %d", &a, &b, &c);
		a--; b--;
		E[a].push_back(ii(b, c));
		E[b].push_back(ii(a, c));
	}
	for(int i=0; i<n; i++) d[i] = 1e15;
	d[0] = 0;
	for(int i=0; i<k; i++){
		scanf("%d %d", &a, &b);
		a--;
		d[a] = min(d[a], b*1ll);
	}
	dijkstra();
	for(int i=1; i<n; i++){
		bool t= 1;
		for(unsigned j = 0; j<E[i].size(); j++){
			int v=E[i][j].X, r=E[i][j].Y;
			if(d[i] == d[v] + r){
				t=0;
				break;
			}
		}
		res+=t;
	}
	printf("%d", k-res);
}
