#include <bits/stdc++.h>

using namespace std;

typedef pair <int, int> pii;

vector <vector <pii> > graph;
bool visited [500000];
priority_queue <pii> pq;

int main () {
	ios_base::sync_with_stdio(false);
	int n, m, k;
	cin >> n >> m >> k;
	graph.clear();
	graph.resize (n+1);
	for (int i = 1; i <= m; i++) {
		int u,v,w;
		cin >> u >> v >> w;
		graph[u].push_back ({v,w});
		graph[v].push_back({u,w});
	}
	for (int i = 0; i < k; ++i)
	{
		int v, w;
		cin >> v >> w;
		pq.push ({-w, -v});
	}
	int ans = 0;
	pq.push ({0,1});
	while (!pq.empty() ) {
		int x = pq.top().first;
		int y = pq.top().second;
		pq.pop();
		if (y < 0 ) {
			y = -y;
			if (visited[y]) {
				ans++;
				continue;
			}
		}
		if (visited[y] )
			continue;
		visited[y] = 1;
		for (int i = 0; i < graph[y].size(); i++) {
			if (!visited[graph[y][i].first])

			pq.push ( {x -graph[y][i].second, graph[y][i].first });
		}
	}
	cout <<ans <<endl;
	return 0;
}