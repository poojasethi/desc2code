#ifdef ONLINE_JUDGE
#define NDEBUG
#endif
#include <iostream>
#include <cassert>
#include <vector>
#include <queue>
#include <climits>
#include <map>
#include <algorithm>

#define mp make_pair
#define pb push_back
#define ii pair<int,int>
using namespace std;
vector<ii> graph[100000];
int N,M,K;
bool visited[100000];
int main(){
	cin >> N >> M >> K;
	for(int i=0,a,b,c;i<M;i++){
		cin >> a >> b >> c;
		a--;b--;
		graph[a].pb(mp(b,-c));
		graph[b].pb(mp(a,-c));
	}
	priority_queue<pair<long long,int> > pq;//dist,to
	pq.push(mp(0ll,0));
	for(int i=0,b,c;i<K;i++){
		cin >> b >> c;
		b--;
		pq.push(mp(-(long long)c,b-N));
	}
	int ans=0;
	while(!pq.empty()){
		pair<long long,int> temp=pq.top();pq.pop();
		if(temp.second<0){
			temp.second+=N;
			if(visited[temp.second])
				ans++;
		}
		if(visited[temp.second])
			continue;
		visited[temp.second]=true;
		for(vector<ii>::iterator it=graph[temp.second].begin();it!=graph[temp.second].end();it++)
			pq.push(mp(it->second+temp.first,it->first));
	}
	cout << ans << endl;
	return 0;
}
