#include <iostream>
#include <cstring>
#include <cmath>
using namespace std; 
const int M = 110; 
int g[M][M], add[M], dis[M], n, d; 
struct Node{
	int x, y; 
}node[M]; 

inline int cal(Node a, Node b){
	return abs(a.x-b.x)+abs(a.y-b.y); 
}
int main(){
	cin >> n >> d; 
	for(int i = 2; i<n; i++)
		cin >> add[i];  
	for(int i = 1; i <= n; i++)
		cin >> node[i].x >> node[i].y; 
	for(int i = 1; i <= n; i++)
		for(int j = 1; j <= n; j++)
			if(i != j)
				g[i][j] = cal(node[i], node[j])*d-add[i]; 
	for(int i = 1; i <= n; i++){
		for(int j = 1; j <= n; j++){
			for(int k = 1; k <= n; k++){
				g[j][k] = min(g[j][k], g[j][i]+g[i][k]); 
			}
		}
	}	
	cout << g[1][n] << endl; 
	return 0; 
}
