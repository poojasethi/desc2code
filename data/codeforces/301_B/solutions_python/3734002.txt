from collections import defaultdict
def main():
    n, d = map(int, raw_input().split())
    a = [0] + map(int, raw_input().split()) + [0]
    t = [map(int, raw_input().split()) for i in xrange(n)]
    edge = [[0] * n for i in xrange(n)]
    def go(x, y):
        return sum(abs(x[k] - y[k]) for k in [0, 1])
    for i in xrange(n):
        for j in xrange(n):
            if i != j:
                l = go(t[i], t[j])
                edge[i][j] = l * d - a[j]
                edge[j][i] = l * d - a[i]
    for i in xrange(n):
        for j in xrange(n):
            for k in xrange(n):
                edge[j][k] = min(edge[j][k], edge[j][i] + edge[i][k])
    print edge[0][n-1]
main()
