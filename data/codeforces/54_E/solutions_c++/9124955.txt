#include<stdio.h>
#include<math.h>
#include<iostream>
#include<algorithm>
using namespace std;
struct P
{
    double x,y;
    P(double a=0,double b=0):x(a),y(b){}
    P operator +(const P &a)const{
        return P(x+a.x,y+a.y);
    }
    P operator -(const P &a)const{
        return P(x-a.x,y-a.y);
    }
    P operator *(const double a)const{
        return P(x*a,y*a);
    }
    P operator /(const double a)const{
        return P(x/a,y/a);
    }
    double operator *(const P &a)const{
        return x*a.x+y*a.y;
    }
    double operator ^(const P &a)const{
        return x*a.y-y*a.x;
    }
};
double dis(P a,P b)
{
    return sqrt((b-a)*(b-a));
}
P p[100100];
int n;
double sum[100100];
double solve()
{
    for(int i=n;i<n+n;i++) p[i]=p[i-n];
    sum[0]=0;
    for(int i=1;i<2*n;i++) {sum[i]=sum[i-1]+(p[i]^p[i-1])/2.0;}
    int j=0;
    double ans=1e18;
    for(int i=0;i<n;i++)
    {
        if(j<=i) j=i+1;
        while(j+1<2*n&&(((p[j+1]-p[i])*(p[i+1]-p[i]))>=((p[j]-p[i])*(p[i+1]-p[i])))) j++;
        //cout<<"j="<<j<<endl;
        if(j==i+1) ans=0;
        if(j>=2*n) break;
        double s=sum[j]-sum[i];

        s+=(p[i]^p[j])/2.0;

        double x=((p[j]-p[i])*(p[i+1]-p[i]))/dis(p[i],p[i+1]);
        double y=sqrt(((p[i]-p[j])*(p[i]-p[j]))-x*x);
        //cout<<"s="<<s<<" x="<<x;
        //printf(" y=%.10lf\n",y);
        ans=min(ans,x*y/2.0-fabs(s));
    }
    return ans;
}
int main()
{
    while(scanf("%d",&n)!=EOF)
    {
        for(int i=0;i<n;i++)
            scanf("%lf%lf",&p[i].x,&p[i].y);
        double ans=solve();
        for(int i=0;i<n/2;i++)
            swap(p[i],p[n-i-1]);
        ans=min(ans,solve());
        //printf("%.10lf\n",solve());
        printf("%.10lf\n",ans);
    }
    return 0;
}
