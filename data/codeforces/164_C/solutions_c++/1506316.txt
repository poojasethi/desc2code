#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstring>
#define Rep(i,j,k) for (int i=(j); i<=(k); i++)
#define Repd(i,j,k) for (int i=(j); i>=(k); i--)
using namespace std;
typedef long long LL;

int n,k,a[10000],tot,S,T,id[10000];
int q[10000],head,tail,d[10000],pre[10000],fl[10000];
bool inq[10000];
struct TT{ int x,y,c; } seg[10000];
struct Te{ 
	int x,y,c,f,op,next; 
	Te(){}
	Te(int xx,int yy,int cc,int ff,int oo,int nn):
		x(xx),y(yy),c(cc),f(ff),op(oo),next(nn){}
} e[20000];
int g[10000],etot;

void builde(int x, int y, int c, int f){
	etot++, e[etot]=Te(x,y,c,f,etot+1,g[x]), g[x]=etot;
	etot++, e[etot]=Te(y,x,0,-f,etot-1,g[y]), g[y]=etot;
}

int main(){
	
	scanf("%d%d",&n,&k);
	tot=0;
	Rep(i,1,n)
		scanf("%d%d%d",&seg[i].x,&seg[i].y,&seg[i].c), 
		seg[i].y+=seg[i].x-1,
		a[++tot]=seg[i].x, a[++tot]=seg[i].y;
	
	sort(a+1,a+tot+1);
	tot=unique(a+1,a+tot+1)-a-1;
	
	memset(g,0xff,sizeof(g)); etot=0;
	S=tot*2+1, T=S+1;
	Rep(i,1,tot*2-1) builde(i,i+1,10000,0);
	builde(S,1,k,0);
	builde(tot*2,T,k,0);
	
	Rep(i,1,n)
		id[i]=etot+1,
		builde((lower_bound(a+1,a+tot+1,seg[i].x)-a)*2-1,
				(lower_bound(a+1,a+tot+1,seg[i].y)-a)*2,1,-seg[i].c);
				
	while(1){
		memset(d,32,sizeof(d));
		memset(inq,0,sizeof(inq));
		head=0, tail=1; q[1]=S; d[S]=0; inq[S]=1; fl[S]=k;
		while (head!=tail){
			head++; if (head>5000) head=0;
			int x=q[head];
			for(int k=g[x],y; k!=-1; k=e[k].next)if(e[k].c>0){
				y=e[k].y;
				int tmp=d[x]+e[k].f;
				if (tmp<d[y]){
					d[y]=tmp;
					pre[y]=k;
					fl[y]=min(fl[x],e[k].c);
					if (!inq[y]){
						inq[y]=1;
						tail++; if (tail>5000) tail=0;
						q[tail]=y;
					}						
				}
			}
			inq[x]=0;
		}
		if (d[T]==d[0]) break;
		int y=T;
		while (y!=S){
			int x=e[pre[y]].x;
			e[pre[y]].c-=fl[T];
			e[e[pre[y]].op].c+=fl[T];
			y=x;
		}
	}	
				
	Rep(i,1,n)
		printf("%d ",e[id[i]].c==0);

    return 0;
}




