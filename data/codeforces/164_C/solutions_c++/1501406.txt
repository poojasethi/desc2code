#include <cstdio>
#include <cstring>
#include <algorithm>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define CLR(a,x) memset(a, x, sizeof(a))
#define EXP(i,l) for (int i=(l); i; i=qn[i])
#define N 2005
#define M 10005
using namespace std;

int n, m, S, T, V, ed, x, y, t;
int a[N], b[N], c[N], l[N], v[N], u[N], q[N], f[N], rem[N], dis[N];
int qd[M], qn[M], qc[M], ql[M];

void doit(){
	for (int i=0; i<V; i++) v[i] = -(1<<30), u[i] = 0;
	v[S] = 0, q[0] = S;

	for (int i=0, j=0, s=1; s; i++){
		if (i == N) i = 0;
		u[q[i]] = 0;
		s--;
		for (int k=l[q[i]]; k; k=qn[k])
		if (qc[k] && v[q[i]] + ql[k] > v[qd[k]]){
			v[qd[k]] = v[q[i]] + ql[k];
			f[qd[k]] = k;
			if (!u[qd[k]]){
				if (++j == N) j = 0;
				s++;
				u[q[j]=qd[k]] = 1;
			}
		}
	}

	if (v[T] == -(1<<30)) return;
	for (int i=T; i!=S; i=qd[f[i]^1]) qc[f[i]]--, qc[f[i]^1]++;
}

void bd(int x, int y, int c, int s){
	qd[++ed] = y, qn[ed] = l[x], qc[ed] = c, ql[ed] = s, l[x] = ed;
	qd[++ed] = x, qn[ed] = l[y], qc[ed] = 0, ql[ed] = -s, l[y] = ed;
}

int main(){
	scanf("%d%d", &n, &m);
	FOR(i,0,n){
		scanf("%d%d%d", a+i, b+i, c+i);
		dis[t++] = a[i];
		dis[t++] = a[i] + b[i];
	}
	
	sort(dis, dis + t);
	V = unique(dis, dis + t) - dis;
	S = 0, T = V - 1;
	ed = 1;
	
	FOR(i,0,T) bd(i, i+1, m, 0);
	
	FOR(i,0,n){
		x = lower_bound(dis, dis + V, a[i]) - dis;
		y = lower_bound(dis, dis + V, a[i] + b[i]) - dis;
		bd(x, y, 1, c[i]);
		rem[i] = ed - 1;
	}
	
	FOR(i,0,m) doit();
	FOR(i,0,n) printf("%d ", 1 - qc[rem[i]]);
	return 0;
}
