#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
struct nod2{
int a,b,c;
}cz[110000];
struct nod{
int qian,lian,now,zhi,rong,liu,fan;
}bian[110000];
int ji[110000],a,b,from[110000],use[110000],p,qn,wei[110000],dist[110000],num[110000],dl[1100000],ans,n,k,i,s,t;
void quchong()
{
 int n,r,l;
 l=1; n=qn; qn=0;
 while (l<=n)
 {
   r=l;
   while (r<=n && num[l]==num[r]) r++;
   num[++qn]=num[l];
   l=r;
 }
}

int fen(int a)
{
 int l,r,mid;
 l=1; r=qn;
 while (l!=r)
 {
   mid=(l+r)/2;
   if (num[mid]>=a) r=mid; else l=mid+1;
 }
 return l;
}

void build(int a,int b,int c,int d)
{
 p++;
 bian[p].qian=wei[a];
 bian[p].now=a;
 bian[p].lian=b;
 bian[p].rong=c;
 bian[p].liu=0;
 bian[p].zhi=d;
 bian[p].fan=p+1;
 wei[a]=p;
}

void buildfan(int a,int b,int c,int d)
{
 p++;
 bian[p].qian=wei[a];
 bian[p].now=a;
 bian[p].fan=p-1;
 bian[p].lian=b;
 bian[p].rong=c;
 bian[p].liu=c;
 bian[p].zhi=d;
 wei[a]=p;
}

bool can()
{
 int w,k,l,r;
 l=1; r=1; dl[1]=s; use[s]=1;
 for (i=0;i<=t;i++) dist[i]=-1; 
 dist[0]=0;
 while (l<=r)
 {
   k=dl[l];
   for (w=wei[k];w;w=bian[w].qian)
   if (bian[w].liu!=bian[w].rong && dist[k]+bian[w].zhi>dist[bian[w].lian])
   {
   	 dist[bian[w].lian]=dist[k]+bian[w].zhi;
   	 from[bian[w].lian]=w;
   	 if (use[bian[w].lian]==0)
   	 {
   	   use[bian[w].lian]=1;
   	   dl[++r]=bian[w].lian;
	 }
   }
   use[k]=0;
   l++;
 }
 if (dist[t]<=0) return false;
 k=t;
 while (k!=s)
 {
   w=from[k];
   bian[w].liu++; bian[bian[w].fan].liu--; 
   k=bian[w].now;
 }
 return true;
}

int main()
{
  scanf("%d%d",&n,&k);
  for (i=1;i<=n;i++)
  {
    scanf("%d%d%d",&cz[i].a,&cz[i].b,&cz[i].c);
    cz[i].b=cz[i].a+cz[i].b-1;
    num[++qn]=cz[i].a; num[++qn]=cz[i].b;
  }
  num[++qn]=1000000002;
  sort(num+1,num+qn+1);
  quchong();
  s=0; t=qn+1;
  for (i=1;i<=n;i++)
  {
    a=fen(cz[i].a);  b=fen(cz[i].b); b++;
	build(a,b,1,cz[i].c);
	ji[i]=p;
    buildfan(b,a,1,-cz[i].c);
  }
  for (i=1;i<qn;i++)
  {
    build(i,i+1,k,0);
    buildfan(i+1,i,k,0);
  }
  build(s,1,k,0); buildfan(1,s,k,0);
  for(i=1;i<=qn;i++)
  {
   build(i,t,k,0);
   buildfan(t,i,k,0);
  }
   while (can());
   for (i=1;i<=n;i++) printf("%d ",bian[ji[i]].liu); 
}
				    	  		   	  	  									