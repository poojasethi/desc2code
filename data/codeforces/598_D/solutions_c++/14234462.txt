#include <iostream>
#include <cstring>
#include <cstdio>
#include <algorithm>
using namespace std;
const int N = 1e3 + 5;
char M[N][N];
int f[N][N];
int* ans[N][N];
bool v[N][N];
int dfs(int x, int y, int *src)
{
	if (v[x][y]) return 0;
	if (M[x][y] == '*') return 1;
	ans[x][y] = src;
	v[x][y] = 1;
	return dfs(x + 1, y, src) + dfs(x - 1, y, src) + dfs(x, y + 1, src) + dfs(x, y - 1, src);
}
int main()
{
	int n, m, q;
	scanf("%d%d%d", &n, &m, &q);
	for (int i = 1; i <= n; ++ i) scanf("%s", M[i] + 1);
	for (int i = 1; i <= n; ++ i)
	{
		for (int j = 1; j <= m; ++ j)
		{
			if (M[i][j] == '.' && !v[i][j])
			{
				f[i][j] = dfs(i, j, &f[i][j]);
			}
		}
	}
	for (int i = 1; i <= q; ++ i)
	{
		int x, y;
		scanf("%d%d", &x, &y);
		printf("%d\n", *ans[x][y]);
	}
	return 0;
}
