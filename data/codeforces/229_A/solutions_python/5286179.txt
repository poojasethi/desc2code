G = [[], [1], [1, 1], [1, 2, 1], [1, 2, 2, 1], [1, 2, 3, 2, 1]] 
def g(k):
    global G
    if k < 6: return G[k]
    return list(range(1, (k + 1) // 2 + 1)) + list(range(k // 2, 0, -1))

def f():
    n, m = map(int, raw_input().split())
    s, p = [0] * m, [0] * m
    for i in range(n):
        q = [j for j, x in enumerate(raw_input()) if x == '1']
        if not q: return -1
        c = q.pop(0)
        p[c], a = 0, c + 1
        for b in q:
            p[b] = 0
            if b > a: p[a: b] = g(b - a)
            a = b + 1
        if c + m > a:
            t = g(c + m - a)
            p[a: ], p[: c] = t[: m - a], t[m - a: ]
        for j, x in enumerate(p): s[j] += x
    return min(s)
print f()