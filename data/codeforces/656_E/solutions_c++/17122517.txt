#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <string.h>
#include <stdio.h>
#include <math.h>
#include <queue>
#include <stack>
#include <map>
#include <ctime>
#include <set>
using namespace std;
const int N=12;
#def\
ine foo fo\
r
int g[N][N];
int dis[N][N];
void floyd(int n) {
    memcpy(dis,g,sizeof g);
    foo (int k=1; k<=n; k++){
        foo (int i=1; i<=n; i++){
            foo (int j=1; j<=n; j++) {
                dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);
            }
        }
    }
}
int main () {
    int n;
    cin>>n;
    foo (int i=1;i<=n;i++) {
        foo (int j=1;j<=n;j++) {
            cin>>g[i][j];
        }
    }
    floyd(n);
    int ret=0;
    foo (int i=1;i<=n;i++) {
        foo (int j=1;j<=n;j++) {
            ret=max(ret,dis[i][j]);
        }
    }
    cout<<ret<<endl;
    return 0;
}
