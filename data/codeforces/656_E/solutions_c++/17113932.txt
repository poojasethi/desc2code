#include <iostream>
#include <cmath>
using namespace std;
int n;
int map[100][100];
int ans;
int ii(int i, int j)
{
	cin >> map[i][j];
	((i == n && j == n) ? 0: ((j == n)? ii(i + 1, 1): ii(i, j + 1)));
}
int floyd(int i, int j, int k)
{
	map[j][k] = min(map[j][i] + map[i][k], map[j][k]);
	((i == n && j == n && k == n) ? 0: ((j == n && k == n)? floyd(i + 1, 1, 1): ((k == n)? floyd(i, j + 1, 1): floyd(i, j, k + 1))));
}
int ij(int i, int j)
{
	ans = max(ans, map[i][j]);
	((i == n && j == n) ? 0: ((j == n)? ij(i + 1, 1): ij(i, j + 1)));
}
int main()
{
	cin >> n;
	ii(1, 1);
	floyd(1, 1, 1);
	ij(1, 1);
	cout << ans;
}