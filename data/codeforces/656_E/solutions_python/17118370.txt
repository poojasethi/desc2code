#!/usr/bin/python

import sys
sys.setrecursionlimit(100000)

n = int(raw_input())

def read(i, L, D):
    L.append(map(int, raw_input().split()))
    D.append(L[-1])
    return len(L) == n or read(i+1, L, D)

L = []
D = []
read(0, L, D)

def memoize(f):
    cache= {}
    def memf(*x):
        def compute(x):
            cache[x] = f(*x)
        (x in cache) or (compute(x))
        return cache[x]
    return memf

@memoize
def rec(i, j, k):
    D[k][j] = min(D[k][j], D[k][i] + D[i][j])
    ((k < n-1 and rec(i, j, k+1))) or \
    ((j < n-1) and rec(i, j+1, 0)) or \
    ((i < n-1) and rec(i+1, 0, 0))
    return True

rec(0, 0, 0)

print max(map(max, D))
