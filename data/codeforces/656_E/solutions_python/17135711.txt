N = int(raw_input())

m = map(lambda i: map(int,raw_input().split(' ')), range(N))

def compute_shortest_double_path(i,j):
	distance = map(lambda x,y: x+y, m[i],m[j])
	# print i, j, distance
	return min(distance)

def update_distance_each(i,j):
	global m
	distance = compute_shortest_double_path(i,j)
	m[i][j] = m[j][i] = distance

def update_distance(dummy = None):
	x = sum(map(lambda x: [x]*N, range(N)),[])
	map(update_distance_each, x ,range(N) * N)

map(update_distance, range(N))

ans = max(map(max,m))

print ans
