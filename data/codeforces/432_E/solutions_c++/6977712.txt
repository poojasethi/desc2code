#include <iostream>
#include <cstring>

using namespace std;

const int MAXN = 105;

int N, M;
char ar[MAXN][MAXN];

char lowest(int r, int c) {
  char cur = 'A';
  while (cur == ar[r - 1][c] || cur == ar[r][c - 1] || cur == ar[r + 1][c] || cur == ar[r][c + 1]) ++cur;
  return cur;
}

void fill_at(int r, int c) {
  char cur = lowest(r, c); 
  int len = 1;
  while (r + len <= N && c + len <= M && ar[r][c + len] == '0' && lowest(r, c + len) == cur) ++len;
  
  for (int i = r; i < r + len; ++i) {
    for (int k = c; k < c + len; ++k) {
      ar[i][k] = cur;
    }
  }
}

void fill() {
  memset(ar, '0', sizeof(ar));
  
  for (int i = 1; i <= N; ++i) {
    for (int k = 1; k <= M; ++k) {
      if (ar[i][k] == '0') {
        fill_at(i, k);
      }
    }
  }
}

void disp() {
  for (int i = 1; i <= N; ++i) {
    for (int k = 1; k <= M; ++k) {
      cout << ar[i][k];
    }
    cout << '\n';
  }
}

int main() {
  cin >> N >> M;

  fill();
  disp();
  return 0;
}


