// ITNOG

#include <iostream>
#include <algorithm>
#include <memory.h>

using namespace std;

const int maxN = 105;

int n, m;
char ans[maxN][maxN];

int dx[4] = {0, 0, 1, -1};
int dy[4] = {1, -1, 0, 0};

bool valid(int x, int y)
{
  return x >= 0 && x < n && y >= 0 && y < m;
}

char best(int x, int y)
{
  for (char c = 'A'; c <= 'Z'; ++c)
    {
      bool flag = false;
      for (int i = 0; i < 4 && !flag; ++i)
	{
	  int xx = dx[i] + x;
	  int yy = dy[i] + y;
	  if (valid(xx, yy) && ans[xx][yy] == c)
	    flag = true;
	}
      if (!flag)
	return c;
    }
}

int main()
{
  cin >> n >> m;
  memset(ans, '*', sizeof ans);
  for (int i = 0; i < n; ++i)
    for (int j = 0; j < m; ++j)
      if (ans[i][j] == '*')
	{
	  char c = best(i, j);
	  int k;
	  for (k = j + 1; k < m && k - j + i < n && ans[i][k] == '*' && best(i, k) == c; ++k)
	    if (best(i, k) < c)
	      break;
	  k --;
	  for (int p = i; p < k - j + i + 1; ++p)
	    for (int q = j; q <= k; ++q)
	      ans[p][q] = c;
	}
  for (int i = 0; i < n; ++i)
    {
      for (int j = 0; j < m; ++j)
	cout << ans[i][j];
      cout << '\n';
    }
  return 0;
}
