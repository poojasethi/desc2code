#include<cstdio>
#include<algorithm>
#define C 21
#define N 1100005
using namespace std;
typedef long long LL;
int a[N],n,i,nn,Q,x;
LL f[C][2],ans;
void dfs(int l,int r,int deep)
{
  if (l==r) return;
  int mid=(l+r)>>1;
  dfs(l,mid,deep-1);dfs(mid+1,r,deep-1);
  for(int i=l;i<=mid;i++)
  {
    f[deep][0]+=lower_bound(a+mid+1,a+r+1,a[i])-(a+mid+1);
    f[deep][1]+=r-mid-(upper_bound(a+mid+1,a+r+1,a[i])-(a+mid+1));
  }
  inplace_merge(a+l,a+mid+1,a+r+1);
}
int main()
{
  scanf("%d",&nn);n=1<<nn;
  for (i=1;i<=n;i++)
    scanf("%d",&a[i]);
  dfs(1,n,nn);
  scanf("%d",&Q);
  while (Q--)
  {
    scanf("%d",&x);ans=0;
    for (i=1;i<=x;i++) swap(f[i][0],f[i][1]);
    for (i=0;i<=20;i++) ans+=f[i][0];
    printf("%I64d\n",ans);
  }
  return 0;
}
