#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#define sz (1<<n)
using namespace std;
typedef long long ll;
const int maxn = 2010;
const int mod   = 1e9+7;
int n, a[1<<21], m;
ll f[30], g[30];
void mergesort(int l , int r, int dep){
if( l >= r) return;
int mid = (l + r)>>1;
mergesort(l, mid, dep-1), mergesort(mid + 1, r, dep - 1);
for(int i = l ; i <= mid; i++){
    f[dep] += lower_bound(a+mid+1, a+r+1, a[i]) - (a+mid+1);
    g[dep] += r - mid - (upper_bound(a+mid+1, a+r+1, a[i]) - (a+mid+1) );
  }
sort(a+l, a+r+1);
}
int main()
{
    memset(f, 0, sizeof(f)), memset(g, 0, sizeof(g));
    scanf("%d", &n);
    for(int i = 1; i <= sz; i++) scanf("%d", &a[i]);
    mergesort(1, sz, n);
    int q, x;
    scanf("%d", &q);
    while(q--){
        scanf("%d", &x);
        for(int i = 1; i <= x; i++) swap(f[i], g[i]);
        ll ans = 0;
        for(int i = 1; i <= n; i++) ans += f[i];
        printf("%lld\n", ans);
    }

    return 0;
}
