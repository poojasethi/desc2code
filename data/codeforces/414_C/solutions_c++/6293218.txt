#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

#define MAXN 20

typedef long long ll;

int a[1<<MAXN];
int n,m;
ll ans[MAXN+1][2];
int rev[MAXN+1];

void merge(int l,int r,int level)
{
  if (l+1>=r) return;
  int mid;
  mid=l+r>>1;
  merge(l,mid,level-1);
  merge(mid,r,level-1);
  ll cnt;
  int i;
  cnt=0;
  for (i=l;i<mid;i++)
    cnt+=lower_bound(a+mid,a+r,a[i])-(a+mid);
  ans[level][0]+=cnt;
  cnt=0;
  for (i=mid;i<r;i++)
    cnt+=lower_bound(a+l,a+mid,a[i])-(a+l);
  ans[level][1]+=cnt;
  inplace_merge(a+l,a+mid,a+r);
}

int main()
{
  int i,x;
  ll cnt;
  scanf("%d",&n);
  for (i=0;i<1<<n;i++)
    scanf("%d",&a[i]);
  memset(ans,0,sizeof(ans));
  merge(0,1<<n,n);
  memset(rev,0,sizeof(rev));
  scanf("%d",&m);
  while (m--)
  {
    scanf("%d",&x);
    while (x)
    {
      rev[x]^=1;
      x--;
    }
    cnt=0;
    for (i=n;i;i--)
      cnt+=ans[i][rev[i]];
    printf("%I64d\n",cnt);
  }
  return 0;
}