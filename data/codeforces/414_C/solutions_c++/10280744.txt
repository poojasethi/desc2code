#include<cstdio>
#include<algorithm>
#include<cstdlib>
#include<cstring>
using namespace std;

#define MAX  (int)(1<<21)
typedef long long LL;
int N, limit, arr[MAX];
LL t1[31];
LL t2[31];

void build(int low, int high, int index) {
  if(low >= high)
    return;
  int mid = (low + high) >> 1;
  build(low, mid, index-1);
  build(mid+1, high, index-1);
//  sort(arr+mid+1, arr+high+1);
  for(int i=low;i<=mid;++i) {
    t1[index] += (lower_bound(arr+mid+1, arr+high+1, arr[i]) - (arr+mid+1));
    t2[index] += (high-mid)-(upper_bound(arr+mid+1, arr+high+1, arr[i]) - (arr+mid+1));
  }
  inplace_merge(arr+low, arr+mid+1, arr+high+1);
}

int main() {
  memset(t1, 0, sizeof t1);
  memset(t2, 0, sizeof t2);
  scanf("%d",&N);
  limit = 1 << N;
  for(int i=1;i<=limit;++i)
    scanf("%d", &arr[i]);
  build(1, limit, N);
  int M;
  scanf("%d",&M);
  while(M--) {
    int q;
    LL ans = 0;
    scanf("%d",&q);
    for(int x=q;x>=1;--x)
      swap(t1[x], t2[x]);
    for(int i=1;i<=N;++i)
      ans += t1[i];
    printf("%I64d\n",ans);
  }
}
