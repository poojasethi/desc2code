#include <cstdio>
#include <algorithm>
using namespace std;

typedef long long LL;
const int N = 1 << 20;
int n, m, a[N], b[N];
LL f[20][2], g[N];

void build(int l, int r) {
    if (l + 1 == r) return ;
    int x = __builtin_popcount(r - l - 1) - 1;
    int m = (l + r) / 2;
    build(l, m);
    build(m, r);
    for (int i = l, j = m, k = l, u = l, v = m; k < r; ++k) {
        int t = i == m ? 1 : j == r ? 0 : a[i] > a[j];
        b[k] = t ? a[j++] : a[i++];
        while (u < m && a[u] < b[k]) ++u;
        while (v < r && a[v] < b[k]) ++v;
        f[x][t] += t ? u - l : v - m;
    }
    for (int i = l; i < r; ++i) a[i] = b[i];
}

int main() {
    scanf("%d", &n);
    for (int i = 0; i < 1 << n; ++i) scanf("%d", a+i);
    build(0, 1 << n);
    for (int i = 0; i < 1 << n; ++i)
        for (int j = 0; j < n; ++j)
            g[i] += f[j][i >> j & 1];
    scanf("%d", &m);
    for (int q, x = 0, i = 0; i < m; ++i) {
        scanf("%d", &q);
        x ^= (1 << q) - 1;
        printf("%I64d\n", g[x]);
    }
}