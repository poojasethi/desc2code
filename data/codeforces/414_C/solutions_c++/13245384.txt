// :-) 
#include <bits/stdc++.h>
using namespace std;
#define sz(x) ((int)x.size())
typedef long long ll;

const int N = (1<<22);

int n, a[N];
ll inv[25][2];

void Msort(int s = 0, int e = (1<<n), int dep = n) {
	if(!dep) return;
	int mid = (s+e)/2;
	Msort(s, mid, dep-1);
	Msort(mid, e, dep-1);
	for(int i = s; i < mid; i++) {
		inv[dep][0] += (ll)(lower_bound(a+mid, a+e, a[i])-a-mid);
		inv[dep][1] += (ll)(e - mid - (upper_bound(a+mid, a+e, a[i])-a-mid));
	}
    inplace_merge(a+s,a+mid,a+e);
}

int32_t main() {
	//ios::sync_with_stdio(0);

	scanf("%d", &n);
	for(int i = 0; i < (1<<n) ; i++)
		scanf("%d", &a[i]);
	Msort();
	int q; cin >> q;
	while(q--) {
		int x; scanf("%d", &x);
		for(int i = 1; i <= x; i++)
			swap(inv[i][1], inv[i][0]);
		ll ans = 0;
		for(int i =1; i <= n; i++)
			ans += inv[i][0];
		printf("%I64d\n", ans);
	}
}
