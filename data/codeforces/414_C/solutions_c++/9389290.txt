#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
int n,a[1555555];
long long f[55],g[55];
void solve(int l,int r,int x){
    if(l>=r)return;
    int md=(l+r)>>1;
    solve(l,md,x-1);solve(md+1,r,x-1);
    for(int i=l;i<=md;i++){
        f[x]+=lower_bound(a+md+1,a+r+1,a[i])-(a+md+1);//really smaller  than me
        g[x]+=r-md-(upper_bound(a+md+1,a+r+1,a[i])-(a+md+1));//(all - <=me )= really larger than me
    }
    sort(a+l,a+r+1);//****must ,recover order for upper layer
}
int main(){
    scanf("%d",&n);
    int sz=(1<<n);
    for(int i=1;i<=sz;i++)scanf("%d",&a[i]);
    solve(1,sz,n);
    //for(int i=1;i<=n;++i)printf("%I64d %I64d\n",f[i],g[i]);
    int q;
    scanf("%d",&q);
    while(q--){
        int x;
        long long ans=0;
        scanf("%d",&x);
        for(int i=1;i<=x;i++)swap(f[i],g[i]);
        for(int i=1;i<=n;i++)ans+=f[i];
        printf("%I64d\n",ans);
    }
}
