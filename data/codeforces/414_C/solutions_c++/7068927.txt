#include <iostream>
#include <cstdio>
#include <algorithm>

using namespace std;

int nn, n, m, a[1 << 21], k;
long long f[21], g[21];

void solve(int l, int r, int dep) {
    if (l >= r) return;
    int m = (l + r) / 2;
    solve(l, m, dep - 1); solve(m + 1, r, dep - 1);
    for (int i = l; i <= m; i++) {
        f[dep] += lower_bound(a + m + 1, a + r + 1, a[i]) - (a + m + 1);
        g[dep] += r - m - (upper_bound(a + m + 1, a + r + 1, a[i]) - (a + m + 1));
    }
    sort(a + l, a + r + 1);
}

int main() {
    cin >> n; nn = 1 << n;
    for (int i = 1, sz = (1 << n); i <= sz; i++) scanf("%d", a + i);
    solve(1, nn, n);
    cin >> m;
    while (m--) {
        long long ans = 0;
        scanf("%d", &k);
        for (int i = 1; i <= k; i++) swap(f[i], g[i]);
        for (int i = 1; i <= n; i++) ans += f[i];
        printf("%I64d\n", ans);
    }
    return 0;
}
