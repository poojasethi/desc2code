#include <cstdio>
#include <cstring>
#include <cmath>
#include <iostream>
#include <algorithm>
typedef long long LL;
int n,x,k,a[2000000];
LL ans,sum[2000000][2];
using namespace std;
void work(int l,int r,int dq)
{
	if (l==r) return;
	int mid=(l+r)/2;
	work(l,mid,dq-1);
	work(mid+1,r,dq-1);
	//cout<<dq<<mid<<endl;
	LL now=0;
	for (int i=l;i<=mid;++i) now+=lower_bound(a+mid+1,a+r+1,a[i])-(a+mid+1);
	sum[dq][0]+=now;
	now=0;
	for (int i=mid+1;i<=r;++i) now+=lower_bound(a+l,a+mid+1,a[i])-(a+l);
	sum[dq][1]+=now;
	inplace_merge(a+l,a+mid+1,a+r+1);
}
int main()
{
	scanf("%d",&n);
	for (int i=0;i<(1<<n);++i) scanf("%d",&a[i]);
	memset(sum,0,sizeof(sum));
	work(0,(1<<n)-1,n);
	//for (int i=0;i<=n;++i) cout<<sum[i][0]<<" "<<sum[i][1]<<endl;
	scanf("%d",&k);
	for (int i=1;i<=k;++i)
	{
		scanf("%d",&x);
		for (int j=0;j<=x;++j) swap(sum[j][0],sum[j][1]);
		LL ans=0;
		for (int i=0;i<=n;++i) ans+=sum[i][0];
		printf("%I64d\n",ans);
	}
	return 0;
}
	 				   		  		  	 	  	 	 	   	