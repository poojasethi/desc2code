#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<iostream>
using namespace std;
#define N 1<<20
int i,j,k,m,n,x,y,z;
int a[N+1],f[30];
__int64 ans[40][3];
void work(int l,int r,int level)
{
    if (l==r-1)return;
    int m=(l+r)>>1;
    work(l,m,level-1);
    work(m,r,level-1);
    __int64 cnt=0;
    for (i=m;i<r;i++)
        cnt+=lower_bound(a+l,a+m,a[i])-(a+l);
    ans[level][1]+=cnt;
    cnt=0;
    for (i=l;i<m;i++)
        cnt+=lower_bound(a+m,a+r,a[i])-(a+m);
    ans[level][0]+=cnt;
    inplace_merge(a+l,a+m,a+r);
}
int main()
{
    scanf("%d",&n);
    for (i=0;i<(1<<n);i++)
        scanf("%d",&a[i]);
    work(0,(1<<n),n);
    cin>>m;
    while (m--)
    {
        int q;
        cin>>q;
        while (q>=0)
        {
            f[q]^=1;q--;
        }
        __int64 sum=0;
        for (int i=n;i>=0;i--)
            sum+=ans[i][f[i]];
        cout<<sum<<endl;
    }
}
