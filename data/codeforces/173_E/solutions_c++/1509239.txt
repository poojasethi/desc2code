#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

using namespace std;
vector<int> a,t1,t2;
int x[100100];
int y[100100];
int ans[100100];
int res[100100];
vector<pair<pnt ,int > > b;
vector<pair<pnt,pnt> > c;
int nk;
void mod1(int p)
{
	p+=nk;
	t1[p]++;
	p>>=1;
	while (p)
	{
		t1[p]=t1[p+p]+t1[p+p+1];
		p>>=1;
	}
}
void mod2(int p, int v)
{
	p+=nk;
	t2[p]=max(t2[p],v);
	p>>=1;
	while (p)
	{
		t2[p]=max(t2[p+p],t2[p+p+1]);
		p>>=1;
	}
}
int gs(int l, int r)
{
	l+=nk;
	r+=nk;
	int res=0;
	for(; l<=r; l=((l+1)>>1),r=((r-1)>>1))
	{
		if (l&1)
			res+=t1[l];
		if (!(r&1))
			res+=t1[r];
	}
	return res;
}
int gm(int l, int r)
{
	l+=nk;
	r+=nk;
	int res=0;
	for(; l<=r; l=((l+1)>>1),r=((r-1)>>1))
	{
		res=max(t2[l],res);
		res=max(res,t2[r]);
	}
	return res;
}
int main()
{
	//freopen("in.txt","r",stdin);
	int n,k;
	scanf("%d%d",&n,&k);
	FOR(i,0,n)
		scanf("%d",&y[i]);
	FOR(i,0,n)
		scanf("%d",&x[i]);
	FOR(i,0,n)
	{
		a.push_back(x[i]);
		b.push_back(mp(mp(y[i],x[i]),i));
		a.push_back(x[i]-k);
		a.push_back(x[i]+k);
	}
	sort(a.begin(),a.end());
	a.resize(unique(a.begin(),a.end())-a.begin());
	sort(b.begin(),b.end());
	nk=1;
	while (nk<a.size())
		nk+=nk;
	t1.resize(nk+nk);
	t2.resize(nk+nk);
	int l=0,r=0;
	FOR(i,0,b.size()+1)
	{
		if ((i==b.size()) || ((i) && (b[i].first.first!=b[i-1].first.first)))
		{
			FOR(j,l,r)
			{
				int v1=lower_bound(a.begin(),a.end(),b[j].first.second-k)-a.begin();
				int v2=lower_bound(a.begin(),a.end(),b[j].first.second+k)-a.begin();
				ans[b[j].second]=gs(v1,v2);
			}
			l=i; r=i+1;
		}
		else
			r++;
		if (i!=b.size())
		{
			int v=lower_bound(a.begin(),a.end(),b[i].first.second)-a.begin();
			mod1(v);
		}
	}
	int m;
	scanf("%d",&m);
	FOR(i,0,m)
	{
		int x1,y1;
		scanf("%d%d",&x1,&y1);
		x1--; y1--;
		c.push_back(mp(mp(max(y[x1],y[y1]),i),mp(x[x1],x[y1])));
	}
	sort(c.rbegin(),c.rend());
	int j=(int)b.size()-1;
	FOR(i,0,c.size())
	{
		while ((j>=0) && (b[j].first.first>=c[i].first.first))
		{
			int v=lower_bound(a.begin(),a.end(),x[b[j].second])-a.begin();
			mod2(v,ans[b[j].second]);
			j--;
		}
		int x1=c[i].second.first;
		int x2=c[i].second.second;
		if (x1>x2)
			swap(x1,x2);
		int v1=lower_bound(a.begin(),a.end(),x2-k)-a.begin();
		int v2=lower_bound(a.begin(),a.end(),x1+k)-a.begin();
		int q=gm(v1,v2);
		if (q==0)
			q=-1;
		res[c[i].first.second]=q;
	}
	FOR(i,0,m)
		printf("%d\n",res[i]);
	return 0;
}