#include<bits/stdc++.h>
#define MAXN 300009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int n,k,x,c,ans[MAXN],cc,s[MAXN<<2],group[MAXN];
PII r[MAXN];
vector<PII>adj[MAXN];
map<int,int>pm,cm;
set<int>sg;
vector<pair<PII,int> >dj[MAXN];
void upd(int p,int nd,int x,int y){
	if(x==y){
		s[nd]++;
		return;
	}
	int mid=(x+y)>>1;
	if(p<=mid)
		upd(p,nd<<1,x,mid);
	else
		upd(p,nd<<1|1,mid+1,y);
	s[nd]=s[nd<<1]+s[nd<<1|1];		
}
int tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return 0;
	if(l<=x and y<=r)
		return s[nd];
	int mid=(x+y)>>1;		
	int i1=tap(l,r,nd<<1,x,mid);
	int i2=tap(l,r,nd<<1|1,mid+1,y);
	return i1+i2;
}
void mod(int p,int v,int nd,int x,int y){
	if(x==y){
		umax(s[nd],v);
		return;
	}
	int mid=(x+y)>>1;
	if(p<=mid)	
		mod(p,v,nd<<1,x,mid);
	else
		mod(p,v,nd<<1|1,mid+1,y);
	s[nd]=max(s[nd<<1],s[nd<<1|1]);		
}
int bul(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return 0;
	if(l<=x and y<=r)
		return s[nd];
	int mid=(x+y)>>1;		
	int i1=bul(l,r,nd<<1,x,mid);
	int i2=bul(l,r,nd<<1|1,mid+1,y);
	return max(i1,i2);
}
int main(){
	scanf("%d%d",&n,&k);
	for(int i=1;i<=n;i++)
		scanf("%d",&r[i].ff),pm[r[i].ff]=1;
	tr(it,pm)
		it->ss=++c;	
	for(int i=1;i<=n;i++){
		scanf("%d",&r[i].ss);
		cm[r[i].ss]=1;sg.insert(r[i].ss);
		adj[pm[r[i].ff]].pb(mp(r[i].ss,i));	
	}
	tr(it,cm)
		it->ss=++cc;sg.insert(INT_MAX);
	for(int i=1;i<=c;i++){
		if(adj[i].size()==0)
			continue;
		for(int j=0;j<adj[i].size();j++){
			PII to=adj[i][j]; 
			upd(cm[to.ff],1,1,cc);
		}
		for(int j=0;j<adj[i].size();j++){
			PII to=adj[i][j];	
			int kh=cm[*sg.lower_bound(to.ff-k)];
			int uh=cm[*(--sg.upper_bound(to.ff+k))];
			ans[to.ss]=tap(kh,cm[to.ff]-1,1,1,cc)+tap(cm[to.ff],uh,1,1,cc);
		}
	}
	int q;
	scanf("%d",&q);
	for(int i=1;i<=q;i++){
		int x,y;
		scanf("%d%d",&x,&y);
		PII bx=r[x],by=r[y];
		dj[pm[max(bx.ff,by.ff)]].push_back(mp(mp(min(bx.ss,by.ss),max(bx.ss,by.ss)),i));
	}
	memset(s,0,sizeof(s));
	for(int i=c;i>=1;i--){
		for(int j=0;j<adj[i].size();j++){
			PII to=adj[i][j];
			mod(cm[to.ff],ans[to.ss],1,1,cc);
		}
		for(int j=0;j<dj[i].size();j++){
			int x=dj[i][j].ff.ff,y=dj[i][j].ff.ss,ind=dj[i][j].ss,ret;
			if(y-x>2*k)
				ret=-1;
			else{
				int kh=cm[*sg.lower_bound(y-k)];
				int uh=cm[*(--sg.upper_bound(x+k))];
				ret=bul(kh,uh,1,1,cc);
				if(!ret)
					ret=-1;
			}
			group[ind]=ret;
		}
	}
	for(int i=1;i<=q;i++)
		printf("%d\n",group[i]);
	return 0;
}