#include<cstdio>
#include<algorithm>
using namespace std;
char s[1005][1005];
int vis[1005][1005];
int in[1005][1005];
int dx[]={1,-1,0,0};
int dy[]={0,0,1,-1};
int dx2[]={1,-1,0,0,1,1,-1,-1};
int dy2[]={0,0,1,-1,1,-1,1,-1};
int now=1,nowx,nowy,cntnow,cntnow2;
int n,m;
bool check(int x,int y)
{
    if (x<0||y<0||y>=m||x>=n) return 0;
    return 1;
}
int dfs0(int x,int y)
{
    vis[x][y]=1;
    int flag=1;
    for(int d=0;d<8;d++)
    {
        int nx=x+dx2[d];
        int ny=y+dy2[d];
        if (check(nx,ny)) if (!vis[nx][ny]&&s[nx][ny]=='0') flag&=dfs0(nx,ny);
        if (!check(nx,ny))
        {
            //printf("%d %d\n",x,y);
            return 0;
        }
    }
    for(int d=0;d<8;d++)
    {
        int nx=x+dx2[d];
        int ny=y+dy2[d];
        if (check(nx,ny)&&s[nx][ny]=='1'&&vis[nx][ny]!=now)
        {
            cntnow++;
            vis[nx][ny]=now;
            in[nx][ny]=0;
            nowx=nx;
            nowy=ny;
        }
    }
    return flag;
}
int dfs1(int x,int y)
{
    cntnow2++;
    in[x][y]=1;
    //printf("%d %d\n",x,y);
    int cnt=0;
    int flag=1;
    for(int d=0;d<4;d++)
    {
        int nx=x+dx[d];
        int ny=y+dy[d];
        if (check(nx,ny)&&vis[nx][ny]==now)
        {
            if (!in[nx][ny])
            {
                flag&=dfs1(nx,ny);
                cnt++;
            }
            else
            {
                cnt++;
            }
        }
    }
    if (cnt!=2) return 0;
    if (!flag) return 0;
    return 1;
}
int main()
{

    int ans=0;
    scanf("%d%d",&n,&m);
    for(int i=0;i<n;i++) scanf("%s",s[i]);
    for(int i=0;i<n;i++)
    for(int j=0;j<m;j++)
    {
        if (s[i][j]=='0'&&!vis[i][j])
        {
            cntnow=0;
            now++;
            nowx=-1;
            nowy=-1;
            if (!dfs0(i,j)) continue;
            //printf("%d\n",cntnow);
            if (nowx>=0)
            {
                cntnow2=0;
                if (dfs1(nowx,nowy))
                {
                    //printf("%d %d\n",cntnow,cntnow2);
                    if (cntnow2==cntnow) ans=max(cntnow,ans);
                }
            }
        }
    }
    for(int i=0;i<n-1;i++)
    for(int j=0;j<m-1;j++)
    {
        if (s[i][j]=='1'&&s[i][j+1]=='1'&&s[i+1][j]=='1'&&s[i+1][j+1]=='1')
        {
            ans=max(ans,4);
        }
    }
    printf("%d\n",ans);
}
