#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 1010
#define M N*N
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
const int a1[8]={-1,1,0,0,-1,-1,1,1},a2[8]={0,0,1,-1,-1,1,-1,1};
struct ww {
	int x,y;
} g[M];
int i,j,k,n,m,an,num,K,flag,t;
int F[N][N],id[N][N];
char p[N][N];
void Dfs(int x,int y) {
	int i;
	if (id[x][y]) return;
	id[x][y]=K;
	For(i,0,3) {
		int A=x+a1[i],B=y+a2[i];
		if (A&&B&&A<=n&&B<=m&&p[A][B]=='1') Dfs(A,B);
	}
}
void dfs(int x,int y) {
	int i;
	F[x][y]=num;
	if (p[x][y]=='1') {
		g[++t]=(ww){x,y};
		return;
	}
	For(i,0,7) {
		int A=x+a1[i],B=y+a2[i];
		if (A&&B&&A<=n&&B<=m) {
			if (F[A][B]!=num) dfs(A,B);
		} else flag=1;
	}
}
int main() {
	scanf("%d%d",&n,&m);
	For(i,1,n) scanf("%s",p[i]+1);
	For(i,1,n)For(j,1,m) if (p[i][j]=='1'&&!id[i][j]) {
		++K;
		Dfs(i,j);
	}
	For(i,1,n)For(j,1,m) if (p[i][j]=='1'&&p[i+1][j]=='1'&&p[i][j+1]=='1'&&p[i+1][j+1]=='1') an=4;
	For(i,1,n)For(j,1,m) if (p[i][j]=='0'&&!F[i][j]) {
		num++;
		flag=t=0;
		dfs(i,j);
		if (flag) continue;
		int last=0;
		For(k,1,t) {
			int x=g[k].x,y=g[k].y;
			if (!last) last=id[x][y];
			if (last!=id[x][y]) goto fail;
			int u,s=0;
			For(u,0,3) {
				int A=x+a1[u],B=y+a2[u];
				if (p[A][B]=='1'&&F[A][B]==num) s++;
			}
			if (s!=2) goto fail;
		}
		an=max(an,t);
		fail:;
	}
	printf("%d\n",an);
	return 0;
}
