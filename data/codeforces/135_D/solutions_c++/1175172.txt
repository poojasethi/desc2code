#include<iostream>
#include<cstdio>
#include<algorithm>
using namespace std;
int n,m,ans=0,tmp_ans,stp,chx,chy,check;
int lb[1000][1000],fd[1000][1000];
bool map[1000][1000],done[1000][1000],cant[1000][1000],kl;

void dfs(int a,int b)
{
	if(!a||a==n-1||!n||b==m-1)kl=1;
	done[a][b]=1;
	for(int i=a-1;i<=a+1;++i)
		for(int j=b-1;j<=b+1;++j)
			if((i-a||j-b)&&i>=0&&i<n&&j>=0&&j<m&&map[i][j]&&lb[i][j]!=stp)
			lb[i][j]=fd[i][j]=stp,tmp_ans++,chx=i,chy=j;
	for(int i=a-1;i<=a+1;++i)
		for(int j=b-1;j<=b+1;++j)
			if((i-a||j-b)&&i>=0&&i<n&&j>=0&&j<m)
			{
				if(map[i][j]&&cant[i][j])kl=1;
				if(!map[i][j]&&!done[i][j])dfs(i,j);
			}
}

void chk(int x,int y)
{
	int count=0;
	check++;
	fd[x][y]--;
	if(x<n-1&&lb[x+1][y]==stp)count++;
	if(x&&lb[x-1][y]==stp)count++;
	if(y<m-1&&lb[x][y+1]==stp)count++;
	if(y&&lb[x][y-1]==stp)count++;
	if(count>2)check--;
	if(x<n-1&&lb[x+1][y]==stp&&fd[x+1][y]==stp)chk(x+1,y);
	if(x&&lb[x-1][y]==stp&&fd[x-1][y]==stp)chk(x-1,y);
	if(y<m-1&&lb[x][y+1]==stp&&fd[x][y+1]==stp)chk(x,y+1);
	if(y&&lb[x][y-1]==stp&&fd[x][y-1]==stp)chk(x,y-1);
}

int main()
{
	#ifndef ONLINE_JUDGE
	freopen("cf.in","r",stdin);
	freopen("cf.out","w",stdout);
	#endif
	//ios::sync_with_stdio(false);
	cin>>n>>m;
	/*if(n==1||m==1)
	{
		cout<<0<<endl;
		return 0;
	}*/
	char ch;
	for(int i=0;i<n;++i)
		for(int j=0;j<m;++j)
		{
			while(ch=getchar(),ch!='0'&&ch!='1');
			map[i][j]=ch=='1';
		}
	for(int i=0;i<n-1;++i)
		for(int j=0;j<m-1;++j)
			if(map[i][j]&&map[i+1][j]&&map[i][j+1]&&map[i+1][j+1])ans=4;
	for(int i=0;i<n;++i)
		for(int j=0;j<m;++j)
			if(map[i][j])
			{
				int count=0;
				if(i&&!map[i-1][j])count++;
				if(j&&!map[i][j-1])count++;
				if(i<n-1&&!map[i+1][j])count++;
				if(j<m-1&&!map[i][j+1])count++;
				cant[i][j]=(count>2);
			}
	for(int i=0;i<n;++i)
		for(int j=0;j<m;++j)
			if(!done[i][j]&&!map[i][j])
			{
				kl=0;
				tmp_ans=0;
				++stp;
				dfs(i,j);
				if(kl)continue;
				check=0;
				chk(chx,chy);
				if(check!=tmp_ans)continue;
				ans=max(ans,tmp_ans);
			}
	cout<<ans<<endl;
	return 0;
}
