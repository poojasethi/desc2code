//By Lin
#include<cstdio>
#include<cstring>
#include<algorithm>
#define maxn 1005
using	namespace std;

struct Point{
	int x ,y; 
}que[maxn*maxn]; 
const	int mm[8][2] = {{0,1},{0,-1},{1,0},{-1,0},
						{1,1},{1,-1},{-1,1},{-1,-1}}; 
int	n,m,data[maxn][maxn]; 
int  mark[maxn][maxn]; 
char  s[maxn]; 
int	st , ed; 
int id; 

int	floorfill(int x ,int y )
{
	id++; 
	int g = 0 , h = 1,ret = 0; 
	que[0].x = x; que[0].y = y; 
	data[x][y] = -1; 
	while ( g < h )
	{
		int xx = que[g].x , yy = que[g++].y; 
		for (int i = 0; i<8; i++)
		{
			int p = xx+mm[i][0] , q = yy + mm[i][1]; 
			if ( data[p][q] == 3  ) ret = -1; 
			else if ( data[p][q] == 0 ){
				que[h].x = p ;  que[h++].y = q; 
				data[p][q] = -1; 
			} 
			else if ( data[p][q] == 1 && mark[p][q] != id ){
				mark[p][q] = id; 
				st = p; ed = q; 
				if ( ret != -1 ) ret ++;
			}
		}
	}
	return ret; 
}

int main()
{
	scanf("%d%d" , &n ,&m ); 
	for (int i = 1; i<=n; i++)
	{
		scanf("%s" , s ); 
		for (int j = 1; j<=m; j++) data[i][j] = s[j-1] -'0'; 
	}
	for (int i = 0; i<=n+1; i++) data[i][0] = data[i][m+1] = 3;
	for (int j = 0; j<=m+1; j++) data[0][j] = data[n+1][j] = 3; 
	int ans = 0; 
	for (int i = 1; i<=n-1; i++)
		for (int j = 1; j<=m-1; j++)
			if ( data[i][j] && data[i+1][j] && data[i][j+1] && data[i+1][j+1] ) ans = 4;

	for (int i = 1; i<=n; i++)
		for (int j = 1; j<=m; j++)
		{
			if ( data[i][j] != 0 ) continue; 
			int cnt = floorfill(i,j); 
			if ( cnt <= ans ) continue; 
			int g = 0 , h = 1; 
			que[0].x = st; que[0].y = ed; 
			mark[st][ed] = -id; 
			while ( g < h && cnt != -1)
			{
				int now = 0; 
				for (int i = 0; i<4; i++)
				{
					int p = que[g].x + mm[i][0] , q = que[g].y + mm[i][1];
					if ( mark[p][q] == id || mark[p][q] == -id ) now++; 
					if ( mark[p][q] == id )
					{
						que[h].x = p; 
						que[h++].y = q; 
						mark[p][q] = -id; 
					}
				}
				if ( now != 2 ) {
					cnt = -1; 
					break; 
				}
				g++; 
			}
			if ( h == cnt ) ans = max(ans,cnt); 
		}
	printf("%d\n" , ans ); 
	return 0; 
}
