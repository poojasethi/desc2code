#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <algorithm>

using namespace std;

int s[1005][1005],k;
bool p[1005][1005];
int n,m,ans,r,xx,yy,X,Y,now,mm;
int f[8][2]= {{-1,-1},{-1,0},{-1,1},{0,-1},{0,1},{1,-1},{1,0},{1,1}};
int h[4][2]={{-1,0},{1,0},{0,-1},{0,1}};
bool flag;

void dfs(int x,int y)
{
    if(x==1||x==n||y==1||y==m)flag=0;
    s[x][y]=k;
    for(int i=0; i<8; i++)
        if(s[x+f[i][0]][y+f[i][1]]==0)dfs(x+f[i][0],y+f[i][1]);
        else if(!p[x+f[i][0]][y+f[i][1]] && s[x+f[i][0]][y+f[i][1]]==1)
        {
            r++;
            xx=x+f[i][0];
            yy=y+f[i][1];
            p[x+f[i][0]][y+f[i][1]]=1;
        }
}

void dfs3(int x,int y)
{
    mm++;
    p[x][y]=0;
    r--;
    int ss=0;
    X=x,Y=y;
    int xx,yy;
    bool q;
    for(int j=0;j<4;j++)
    {
        xx=x+h[j][0];
        yy=y+h[j][1];
        if(s[xx][yy]!=1)continue;
        q=0;
        for(int i=0;i<8;i++)
            if(s[xx+f[i][0]][yy+f[i][1]]==k)q=1;
        ss+=q;
    }
    //printf("[(%d,%d)%d]",x,y,ss);
    if(ss!=2)r=-1;
    if(p[x-1][y])dfs3(x-1,y);
    else if(p[x+1][y])dfs3(x+1,y);
    else if(p[x][y-1])dfs3(x,y-1);
    else if(p[x][y+1])dfs3(x,y+1);
}

void dfs4(int x,int y)
{
    s[x][y]=-1;
    for(int i=0; i<8; i++)
        p[x+f[i][0]][y+f[i][1]]=0;
    for(int i=0; i<8; i++)
        if(s[x+f[i][0]][y+f[i][1]]==k)dfs4(x+f[i][0],y+f[i][1]);
}

int main()
{
    memset(s,1,sizeof(s));
    memset(p,0,sizeof(p));
    scanf("%d%d",&n,&m);
    k=0;
    for(int i=1; i<=n; i++)
        for(int j=1; j<=m; j++)
            scanf("%1d",&s[i][j]);
    ans=0;
    for(int i=1; i<n; i++)
        for(int j=1; j<m; j++)
            if(s[i][j]&&s[i+1][j]&&s[i][j+1]&&s[i+1][j+1])ans=4;
    k=2;
    for(int i=1; i<=n; i++)
        for(int j=1; j<=m; j++)
            if(s[i][j]==0)
            {
                flag=1;
                k++;
                r=0;
                dfs(i,j);
                //puts("2");
                now=r;
                mm=0;
                dfs3(xx,yy);
                //puts("3");
                if(r==0 && flag)ans=max(ans,now);
                dfs4(i,j);
                //puts("4");
                //puts("");
            }
    printf("%d\n",ans);
    return 0;
}

 		   		  	 	  		  			 	 	