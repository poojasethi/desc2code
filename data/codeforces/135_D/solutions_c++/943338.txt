#include <stdio.h>

char str[1100][1100];
int que[2000000][2];
int mm[8][2]={{1,0},{-1,0},{0,1},{0,-1},{1,1},{1,-1},{-1,-1},{-1,1}};
int u[1100][1100];
int list[2000000][2];

int main(){
    int n,m,i,j,p,q,k,h,x,y,dx,dy,r,z,d,mz,f;
    scanf("%d %d",&n,&m);
    for(i=1;i<=n;i++){
        scanf("%s",str[i]+1);
    }
    mz=0;
    for(i=1;i<n;i++){
        for(j=1;j<m;j++){
            if(str[i][j]=='1' && str[i+1][j]=='1' && str[i][j+1]=='1' && str[i+1][j+1]=='1'){
                mz=4; goto out;
            }
        }
    }
out:
    r=0;
    for(i=1;i<=n;i++){
        for(j=1;j<=m;j++){
            if(str[i][j]!='0') continue;
            que[0][0]=i;
            que[0][1]=j;
            str[i][j]='2';
            p=0;
            q=-1;
            r++;
            z=0;
            f=0;
            while(p!=q){
                x=que[++q][0];
                y=que[q][1];
                for(k=0;k<8;k++){
                    dx=x+mm[k][0];
                    dy=y+mm[k][1];
                    if(str[dx][dy]=='0'){
                        que[++p][0]=dx;
                        que[p][1]=dy;
                        str[dx][dy]='2';
                    }else if(str[dx][dy]=='1' && u[dx][dy]!=r){
                        u[dx][dy]=r;
                        list[z][0]=dx;
                        list[z++][1]=dy;
                    }else if(str[dx][dy]==0){
                        f=1; break;
                    }
                }
                if(f) break;
            }
            if(f) continue;
            if(z<=mz) continue;
            for(k=0;k<z;k++){
                x=list[k][0];
                y=list[k][1];
                d=0;
                for(h=0;h<4;h++){
                    if(u[x+mm[h][0]][y+mm[h][1]]==r && str[x+mm[h][0]][y+mm[h][1]]=='1') d++;
                }
                if(d!=2) break;
            }
            if(k!=z) continue;
            p=0;
            q=-1;
            que[0][0]=list[0][0];
            que[0][1]=list[0][1];
            u[list[0][0]][list[0][1]]=-1;
            while(p!=q){
                x=que[++q][0]; y=que[q][1];
                for(k=0;k<4;k++){
                    dx=x+mm[k][0]; dy=y+mm[k][1];
                    if(u[dx][dy]==r){
                        u[dx][dy]=-1;
                        que[++p][0]= dx; que[p][1]=dy;
                    }
                }
            }
            if(q+1==z){
                mz=z;
            }
        }
    }
    printf("%d\n",mz);
    return 0;
}
