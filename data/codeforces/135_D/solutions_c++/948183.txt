#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li        int
#define rep(i,to) for(li i=0;i<((li)(to));++i)
#define pb        push_back
#define sz(v)     ((li)(v).size())
#define bit(n)    (1ll<<(li)(n))
#define all(vec)  (vec).begin(),(vec).end()
#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define MP        make_pair
#define F         first
#define S         second






#define MAX 1050
char mp[MAX][MAX];
li n,m,stamp=1,res=0;
li dx[]={1,0,-1,0};
li dy[]={0,1,0,-1};
li used[MAX][MAX];
li used_row[MAX];
li R[MAX][MAX];
li dat[MAX][MAX];
li cnt;
vector<pair<li,li> > path[MAX];
vector<li> row;

void recur(li bx,li by,li bef){
	li x=bx+dx[bef];
	li y=by+dy[bef];
	if(sz(path[bx])!=0 && dat[bx][path[bx][0].F]!=stamp) path[bx].clear();
	if(used_row[bx]!=stamp) row.pb(bx);
	path[bx].pb(MP(by,bef));
	used_row[bx]=stamp;
	cnt++;
	dat[bx][by]=dat[x][y]=stamp;
	
	if(used[x][y]==stamp){
		if(bef<2) return;
		rep(i,sz(row)){
			li r=row[i];
			sort(all(path[r]));
			rep(j,sz(path[r])-1){
				if(R[r][path[r][j].F]==path[r][j+1].F) continue;
				if(path[r][j+0].S!=2) continue;
				if(path[r][j+1].S!=0) continue;
				return;
			}
			rep(j,sz(path[r])){
				li tmp=0;
				rep(k,4){
					li xx=r+dx[k];
					li yy=path[r][j].F+dy[k];
					if(xx<0 || yy<0 || n<=xx || m<=yy) continue;
					if(dat[xx][yy]==stamp) tmp++;
				}
				if(tmp!=2) return;
			}
		}
		res=max(res,cnt);
		return;
	}
	
	if(used[bx][by] && bef==1) return;
	
	if(bef==1) used[bx][by]=stamp;
	
	rep(i,3){
		li dir=(i+bef+3)%4;
		li xx=x+dx[dir];
		li yy=y+dy[dir];
		if(xx<0 || n<=xx || yy<0 || m<=yy) continue;
		if(mp[xx][yy]=='0') continue;
		recur(x,y,dir);
		return;
	}
}

int main(){
	scanf("%d%d",&n,&m);
	rep(i,n) scanf("%s",mp[i]);
	memset(used,0,sizeof(used));
	memset(used_row,0,sizeof(used_row));
	memset(R,-1,sizeof(R));
	for(li i=0,bef=-1;i<n;i++){
		rep(j,m)if(mp[i][j]=='1'){
			if(bef!=-1) R[i][bef]=j;
			bef=j;
		}
	}
	
	rep(i,n)rep(j,m){
		if(used[i][j]!=0 || mp[i][j]=='0') continue;
		stamp++; 
		cnt=0;
		row.clear();
		li x=i+dx[1];
		li y=j+dy[1];
		if(x<0 || n<=x || y<0 || m<=y || mp[x][y]=='0') continue;
		recur(i,j,1);
	}
	printf("%d\n",res);
}
