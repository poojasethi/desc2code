#include<iostream>
#include<vector>
#include<sstream>
#include<algorithm>
#include<numeric>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<complex>
#include<set>
#include<map>
#include<queue>
#include<cassert>

using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define rp(i,c) rep(i,(c).size())
#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
#define dbg(x) cerr<<#x<<" = "<<(x)<<endl

typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int,int> pi;
typedef long long ll;

const int inf=1<<28;
const double INF=1e12,EPS=1e-9;

const int dy[]={-1,0,1,0},dx[]={0,-1,0,1};
int h,w;
string in[1002];
int color[1002][1002],C;
bool v[1002][1002];
void paint(int y,int x,int c){
	color[y][x]=c;
	rep(d,4){
		int ny=y+dy[d], nx=x+dx[d];
		if(in[ny][nx]=='1'&&color[ny][nx]<0)paint(ny,nx,c);
	}
}
bool ok;
set<int> s;
int st[1010*1010],sz;
bool cycle[1002][1002];
void rec(int y,int x){
	v[y][x]=1;
	for(int dy=-1;dy<2;dy++)for(int dx=-1;dx<2;dx++)if(dy||dx){
		int ny=y+dy, nx=x+dx;
		if(ny<0||nx<0||ny>=h||nx>=w){
			ok=0; continue;
		}
		if(in[ny][nx]=='0'&&!v[ny][nx])rec(ny,nx);
		if(in[ny][nx]=='1'){
			s.insert(color[ny][nx]);
			if(!cycle[ny][nx])cycle[ny][nx]=1,st[sz++]=ny*1010+nx;
		}
	}
}
bool iscycle(int y,int x){
	v[y][x]=1;
	int deg=0;
	rep(d,4){
		int ny=y+dy[d], nx=x+dx[d];
		if(ny<0||nx<0||ny>=h||nx>=w||!cycle[ny][nx])continue;
		deg++;
		if(!v[ny][nx]&&!iscycle(ny,nx))return 0;
	}
	return deg==2;
}

void run()
{
	cin>>h>>w;
	rep(i,h){
		cin>>in[i+1];
		in[i+1]="0"+in[i+1]+"0";
	}
	h+=2; w+=2;
	in[0]=in[h-1]=string(w,'0');
	
	int ans=0;
	rep(i,h-1)rep(j,w-1){
		if(in[i][j]=='1'&&in[i+1][j]=='1'&&in[i][j+1]=='1'&&in[i+1][j+1]=='1')
			ans=4;
	}
	
	memset(color,-1,sizeof(color));
	memset(v,0,sizeof(v));
	memset(cycle,0,sizeof(cycle));
	C=0;
	rep(i,h)rep(j,w)if(in[i][j]=='1'&&color[i][j]<0)paint(i,j,C++);
	rep(i,h)rep(j,w)if(in[i][j]=='0'&&!v[i][j]){
		s.clear();
		ok=1;
		sz=0;
		rec(i,j);
		ok&=s.size()==1;
		rep(k,sz)v[st[k]/1010][st[k]%1010]=0;
		ok&=iscycle(st[0]/1010,st[0]%1010);
		if(ok)ans=max(ans,sz);
		rep(k,sz)cycle[st[k]/1010][st[k]%1010]=0;
	}
	cout<<ans<<endl;
}

int main()
{
#ifndef ONLINE_JUDGE
	int cs=3;rep(i,cs)
#endif
	run();
}
