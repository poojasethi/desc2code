#include <bits/stdc++.h>
//Damned if I don't take what I want.

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int S = 210, B = 8, MAXMSK = 1 << B;
#define smin(a, b) if (a > b) a =b

int dp[MAXMSK][S];

int n, m, s;
int dis[S][S], x[S], sr[S], sc[S], spec[S];
int a[S][S];
string ans[S];

void trace(int msk, int u){
	///cerr << msk << ", " << u << endl;
	int val = dp[msk][u];
	ans[u / m][u % m] = 'X';
	if (val == x[u]) return;

	if (u % m && val == dp[msk][u - 1] + x[u]){ trace(msk, u - 1); return; }
	if (u % m + 1 < m && val == dp[msk][u + 1] + x[u]){ trace(msk, u + 1); return; }
	if (u - m >= 0 && val == dp[msk][u - m] + x[u]){ trace(msk, u - m); return; }
	if (u + m < s && val == dp[msk][u + m] + x[u]){ trace(msk, u + m); return; }

	for (int sub = (msk - 1) & msk; sub; sub = (sub - 1) & msk)
		if (val == dp[sub][u] + dp[msk ^ sub][u] - x[u]){
			trace(sub, u);
			trace(msk ^ sub, u);
		}
}

int main(){
	ios::sync_with_stdio( false );
	cout.tie(0); cin.tie(0);

	int k;
	cin >> n >> m >> k; s = n * m;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			cin >> a[i][j], x[i * m + j] = a[i][j];

	memset(dis, 63, sizeof dis);
	memset(dp, 63, sizeof dp);
	for (int i = 0; i < s; i++)
		for (int j = 0; j < s; j++){
			if (i == j) dis[i][j] = 0;
			else if (i / m == j / m && abs(i - j) == 1) dis[i][j] = x[j];
			else if (i % m == j % m && abs(i - j) == m) dis[i][j] = x[j];
		}

	for (int k = 0; k < s; k++)
		for (int i = 0; i < s; i++)
			for (int j = 0; j < s; j++)
				smin(dis[i][j], dis[i][k] + dis[k][j]);


	for (int i = 0; i < k; i++){
		cin >> sr[i] >> sc[i]; sr[i]--; sc[i]--;
		spec[i] = sr[i] * m + sc[i];
	}
	
	int MSK = 1 << k;
	for (int msk = 1; msk < MSK; msk++)
		if (__builtin_popcount(msk) == 1){
			int u = spec[__builtin_ctz(msk)];
			for (int i = 0; i < s; i++)
				dp[msk][i] = x[u] + dis[u][i];
		}else{
			for (int i = 0; i < s; i++)
				for (int sub = (msk - 1) & msk; sub; sub = (sub -1) & msk)
					smin(dp[msk][i], dp[msk ^ sub][i] + dp[sub][i] - x[i]);
			for (int i = 0; i < s; i++)
				for (int j = 0; j < s; j++)
					smin(dp[msk][i], dp[msk][j] + dis[j][i]);
		}
	
	int ind = 0;
	for (int i = 0; i < s; i++) if (dp[MSK - 1][i] < dp[MSK - 1][ind]) ind = i;
	cout << dp[MSK - 1][ind] << "\n";

	for (int i = 0; i < n; i++) ans[i] = string(m, '.');
	trace(MSK - 1, ind);
	for (int i = 0; i < n; i++) cout << ans[i] << "\n";
}
