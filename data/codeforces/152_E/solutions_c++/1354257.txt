//By Lin
#include<cstdio>
#include<cstring>
#define maxn 205
using namespace std; 

const	int mm[4][2] = {0,1,0,-1,1,0,-1,0};
int	a[maxn],n,m,k,data[7];
int	dp[1<<7][maxn],from[1<<7][maxn][3],g[maxn][maxn],h[maxn][maxn];
bool mark[maxn];


bool check(int &x ,int y )
{
	if ( x == 0 || x > y ) { x = y; return true; }
	return false; 
}

void	dfs(int x ,int y )
{
	if ( h[x][y] == 0 ) mark[x] = mark[y] = true; 
	else 
	{
		dfs( x , h[x][y] );
		dfs(h[x][y],  y  );
	}
}

void	solve(int i , int k )
{
	if ( from[i][k][0] == 0 ) 
	{
		solve(from[i][k][1],k);
		solve(from[i][k][2],k);
	}
	else if ( from[i][k][0] == 1 )
	{
		dfs( from[i][k][1], k );
		solve( i, from[i][k][1] );
	}
	else dfs( from[i][k][1], from[i][k][2] );
}

int main()
{
	scanf("%d%d%d",&n ,&m  , &k);
	for (int i = 0; i<n; i++)
		for (int j = 0; j<m; j++)
			scanf("%d" , &a[i*m+j] );
	for (int i = 0; i<k; i++)
	{
		int x ,y; 
		scanf("%d%d" ,&x ,&y ); 
		x--; 
		y--;
		data[i] = x*m + y; 
	}
	for (int i = 0; i<n; i++)
		for (int j =0; j<m; j++)
			for (int k = 0; k<4; k++)
			{
				int x = i+mm[k][0] , y = j+mm[k][1];
				if ( x < 0 || x == n || y<0 || y == m ) continue; 
				g[i*m+j][x*m+y] = a[i*m+j]+a[x*m+y]; 
			}

	for (int i = 0; i<n*m; i++) g[i][i] = a[i];
	for (int kk = 0; kk<n*m; kk++)
		for (int i = 0; i<n*m; i++)
			for (int j = 0; j<n*m; j++)
			{
				if ( i == j || g[i][kk] == 0 || g[kk][j] == 0 ) continue; 
				if ( g[i][j] == 0 || g[i][j] > g[i][kk] + g[kk][j] - a[kk] )
				{
					g[i][j] = g[i][kk] + g[kk][j] - a[kk];
					h[i][j] = kk; 
				}
			}


	for (int i = 0; i<k; i++)
		for (int j = 0; j<n*m; j++)
		{
			dp[(1<<i)][j] = g[data[i]][j]; 
			from[1<<i][j][0] = -1; 
			from[1<<i][j][1] = data[i];
			from[1<<i][j][2] = j;
		}
	for (int i = 1; i<(1<<k); i++)
	{
		for (int k = 0; k<n*m;k++)
		{
			for (int j = 1; j<i; j++)
			{
				if ( (i|j)!= i ) continue; 
				if ( check( dp[i][k] , dp[j][k] + dp[i^j][k] - a[k] ) )
				{
					from[i][k][0] = 0; 
					from[i][k][1] = j; 
					from[i][k][2] = i^j; 
				}
			}
			for (int k1 = 0; k1<n*m; k1++)
				if ( check( dp[i][k1] , dp[i][k]+g[k][k1] - a[k] ) )
				{
					from[i][k1][0] = 1; 
					from[i][k1][1] = k; 
				}
		}
	}
	int w = 0; 
	for (int i = 0; i<n*m; i++)
		if ( dp[(1<<k)-1][i] < dp[(1<<k)-1][w] ) w = i; 
	printf("%d\n" , dp[(1<<k)-1][w] );
	solve((1<<k)-1, w );
	for (int i = 0; i<n; i++)
	{
		for (int j = 0; j<m; j++)
			if ( mark[i*m+j] ) printf("X");
			else printf(".");
		printf("\n");
	}
	return 0;
}
