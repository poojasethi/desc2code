#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <vector>

const int inf=0x3f3f3f3f;

using namespace std;

#define sz(x) ((x).size())
#define pb push_back

int w[210][210];

int n,m,k,h[110][110],a[210];
int dp[1<<7|1][210];
bool vis[1<<7|1][210];

bool check(int x,int y)
{
	if(x<0 || x>=n || y<0 || y>=m) return 0;
	return 1;
}

char c[210];

void display(int s,int u)
{
	if(s==0) return ;
	c[u]='X';
	for(int i=(s-1)&s;i;i=(i-1)&s)
	{
		if(dp[s][u]==dp[i][u]+dp[s^i][u]-a[u])
		{
			display(i,u);display(s^i,u);
			return ;
		}
	}
	vector<int> vt;
	if(u%m) vt.pb(u-1);
	if(u%m<m-1) vt.pb(u+1);
	if(u/m) vt.pb(u-m);
	if(u/m<n-1) vt.pb(u+m);
	for(int i=0;i<sz(vt);i++)
	{
		int v=vt[i];
		if(dp[s][u]==dp[s][v]+a[u])
		{
			display(s,v);
			return ;
		}
	}
}

int main()
{
	memset(w,0x3f,sizeof(w));
	memset(dp,0x3f,sizeof(dp));
	scanf("%d%d%d",&n,&m,&k);
	for(int i=0;i<n*m;i++)
		scanf("%d",a+i);
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++)
		{
			int x=i*m+j;
			w[x][x]=a[x];
			if(j) w[x][(x-1)]=a[x]+a[x-1];
			if(j<m-1) w[x][(x+1)]=a[x]+a[x+1];
			if(i) w[x][(x-m)]=a[x]+a[x-m];
			if(i<n-1) w[x][(x+m)]=a[x]+a[x+m];
			dp[0][x]=a[x];
		}
	//cout<<w[0][1]<<endl;
	for(int x=0;x<n*m;x++)
		for(int i=0;i<n*m;i++)
			for(int j=0;j<n*m;j++)
				w[i][j]=min(w[i][x]+w[x][j]-a[x],w[i][j]);
	//for(int i=0;i<1;i++)
		//for(int j=0;j<n*m;j++)
			//cout<<i<<" "<<j<<" "<<w[i][j]<<endl;
	for(int i=0;i<k;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		x--,y--;
		dp[1<<i][x*m+y]=a[x*m+y];
	}
	for(int i=1;i<1<<k;i++)
	{
		for(int j=0;j<n*m;j++)
		{
			for(int sub=(i-1)&i;sub;sub=(sub-1)&i)
			{
				int t=dp[sub][j]+dp[i^sub][j]-a[j];
				if(t>=dp[i][j]) continue;
				dp[i][j]=t;
			}
			for(int y=0;y<n*m;y++)
			{
				int t=dp[i][y]+w[j][y]-a[y];
				dp[i][j]=min(t,dp[i][j]);
			}
			for(int y=0;y<n*m;y++)
			{
				int t=dp[i][j]+w[j][y]-a[j];
				dp[i][y]=min(t,dp[i][y]);
			}
			//if(j==0) printf("dp[%d][%d]=%d\n",i,j,dp[i][j]);
		}
	}
	int ret=inf;
	for(int i=0;i<n*m;i++)
		ret=min(ret,dp[(1<<k)-1][i]);
	printf("%d\n",ret);
	memset(c,'.',sizeof(c));
	for(int i=0;i<n*m;i++)
		if(ret==dp[(1<<k)-1][i])
		{
			display((1<<k)-1,i);
			break;
		}
	for(int i=0;i<n;i++,puts(""))
		for(int j=0;j<m;j++)
		{
			printf("%c",c[i*m+j]);
		}
	return 0;
}
