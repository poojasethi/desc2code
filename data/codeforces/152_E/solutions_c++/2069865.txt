#include<stdio.h>
#include<string.h>
const int MAXN=105;
const int INF=1000000000;
int dx[]={-1,1,0,0};
int dy[]={0,0,-1,1};
struct Node
{
    int c,op,i,j;
    Node(){c=INF;}
    Node(int c,int op,int i,int j):c(c),op(op),i(i),j(j){}
}dp[1<<7][MAXN][MAXN];
int c[MAXN][MAXN];
char map[MAXN][MAXN];
void build(int sub,int i,int j)
{
    map[i][j]='X';
    if(dp[sub][i][j].op==0)
        return ;
    if(dp[sub][i][j].op==1)
    {
        build(dp[sub][i][j].i,i,j);
        build(dp[sub][i][j].j,i,j);
    }
    else
        build(sub,dp[sub][i][j].i,dp[sub][i][j].j);
}
int main()
{
    int n,m,p,i,j,k;
    scanf("%d%d%d",&n,&m,&p);
    for(i=1;i<=n;i++)
        for(j=1;j<=m;j++)
        {
            scanf("%d",&c[i][j]);
            map[i][j]='.';
        }
    int x,y;
    for(i=0;i<p;i++)
    {
        scanf("%d%d",&x,&y);
        dp[1<<i][x][y]=Node(c[x][y],1,0,0);
    }
    int mark=1<<p;
    int nn=n*m;
    for(i=0;i<mark;i++)
    {
        for(j=1;j<=n;j++)
            for(k=1;k<=m;k++)
                for(int sub=i;sub;sub=i&(sub-1))
                    if(dp[i][j][k].c>dp[sub][j][k].c+dp[i^sub][j][k].c-c[j][k])
                        dp[i][j][k]=Node(dp[sub][j][k].c+dp[i^sub][j][k].c-c[j][k],1,sub,i^sub);
        for(int L=0;L<nn;L++)
            for(j=1;j<=n;j++)
                for(k=1;k<=m;k++)
                    for(int dir=0;dir<4;dir++)
                    {
                        int fx=j+dx[dir];
                        int fy=k+dy[dir];
                        if(fx==0||fx>n||fy==0||fy>m)
                            continue;
                        if(dp[i][fx][fy].c>dp[i][j][k].c+c[fx][fy])
                            dp[i][fx][fy]=Node(dp[i][j][k].c+c[fx][fy],2,j,k);
                    }
    }
    int ans=INF,ti,tj;
    for(i=1;i<=n;i++)
        for(j=1;j<=m;j++)
            if(ans>dp[mark-1][i][j].c)
            {
                ans=dp[mark-1][i][j].c;
                ti=i;
                tj=j;
            }
    printf("%d\n",ans);
    build(mark-1,ti,tj);
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=m;j++)
            printf("%c",map[i][j]);
        printf("\n");
    }
    return 0;
}