//In the name of GOD
//YFZSYAAYMAJ
//Cfe


#include<iostream>

using namespace std; 

const int Maxn = 100+10 ; 
const int Maxmask =(1<<7); 
const int INF = 1000*1000 ; 

int a[Maxn][Maxn] ; 
int d[Maxmask][Maxn][Maxn] ;
int k ; 
int n , m ;
int outval;
bool out[Maxn][Maxn] ; 

void smn(int & a, const int & b){	if(a>b)	a=b;	}

void prnt(int mask){
	cerr<<mask<<":\n";
	for(int i=0;i<=n+1;i++){
		for(int j=0;j<=m+1;j++)
			cerr<<d[mask][i][j]<<" ";
		cerr<<"\n";
	}
	cerr<<"\n";
}

void prepare(){
	for(int i=0;i<Maxmask;i++)
		for(int j=0;j<Maxn;j++)
			for(int q=0;q<Maxn;q++)
				d[i][j][q]=INF;
}

void belmanford(int mask){
	for(int msk=((mask-1)&mask);msk>0;msk=((msk-1)&mask))
		for(int i=1;i<=n;i++)
			for(int j=1;j<=m;j++)
			smn(d[mask][i][j],d[msk][i][j]+d[mask-msk][i][j]-a[i][j]);
	for(int q=0;q<m*n;q++)
		for(int i=1;i<=n;i++)
			for(int j=1;j<=m;j++){
				smn(d[mask][i][j],d[mask][i-1][j]+a[i][j]);
				smn(d[mask][i][j],d[mask][i+1][j]+a[i][j]);
				smn(d[mask][i][j],d[mask][i][j-1]+a[i][j]);
				smn(d[mask][i][j],d[mask][i][j+1]+a[i][j]);
			}
}


void calc_all(){
	for(int i=1;i<(1<<k);i++)
		belmanford(i);
}

void input(){
	cin>>n>>m>>k;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			cin>>a[i][j];
	int tx,ty;
	for(int i=0;i<k;i++){
		cin>>tx>>ty;
		d[(1<<i)][tx][ty]=a[tx][ty];
	}
}

void get_o(int mask,int x,int y){
	out[x][y]=true;	
	if	   (d[mask][x][y]==d[mask][x-1][y]+a[x][y])	get_o(mask,x-1,y);
	else if(d[mask][x][y]==d[mask][x+1][y]+a[x][y])	get_o(mask,x+1,y);
	else if(d[mask][x][y]==d[mask][x][y-1]+a[x][y])	get_o(mask,x,y-1);
	else if(d[mask][x][y]==d[mask][x][y+1]+a[x][y])	get_o(mask,x,y+1);
	else{
		for(int msk=mask;msk>0;msk=((msk-1)&mask))
			if(d[mask][x][y]==d[msk][x][y]+d[mask-msk][x][y]-a[x][y]){
				get_o(msk,x,y) ;
				get_o(mask-msk,x,y);
				return ;
			}
	}
}

void make_output(){
	int msk=(1<<k)-1;
	int mn=INF; 
	int tx,ty;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			if(d[msk][i][j]<mn){
				mn=d[msk][i][j];
				tx=i;	ty=j;
			}
	get_o(msk,tx,ty);
	outval=mn;
}

void output(){
	cout<<outval<<"\n";
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++)
			if(out[i][j])
				cout<<'X';
			else
				cout<<'.';
		cout<<'\n';
	}
}

int main(){
	prepare();
	input();
	calc_all();
	make_output();
	output();
	return 0;
}
