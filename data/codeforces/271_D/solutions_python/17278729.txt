s = raw_input()
t = raw_input()
k = input()
str_length = len(s)
suffixes = [s[i:] for i in range(str_length)] # Get all suffixes
suffixes.sort()
result = 0
previous_suffux = ''
for suffix in suffixes:
	current_suffix_length = len(suffix)
	previous_suffux_length = len(previous_suffux)
	bad_symbol_counter = 0
	i = 0
	while i < min(current_suffix_length, previous_suffux_length):	# Go through small suffix to skip the same substring matches
		if previous_suffux[i] != suffix[i]: break # Find the place when they differ
		if t[ord(suffix[i]) - ord('a')] == '0': bad_symbol_counter += 1 # increase bad counter
		i += 1
	while i < current_suffix_length:
		if t[ord(suffix[i]) - ord('a')] == '0': bad_symbol_counter += 1
		if bad_symbol_counter > k: break # skip options if already more then enogh bad symbols
		result += 1
		i += 1
	previous_suffux = suffix
print result