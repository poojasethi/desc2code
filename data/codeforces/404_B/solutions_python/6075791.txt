# CF237B

def point(a, dist): # returns point [_, _] form, after running dist meters
    sides = int(float(dist)/float(a))
    if (sides % 4 == 0):
        return [((float(dist)/float(4*a))-int(float(dist)/float(4*a)))*float(4*a), 0.0]
    if (sides % 4 == 1):
        return [float(a), ((float(dist)/float(4*a))-int(float(dist)/float(4*a)))*float(4*a)-a]
    if (sides % 4 == 2):
        return [a-(((float(dist)/float(4*a))-int(float(dist)/float(4*a)))*float(4*a)-2*a), float(a)]
    if (sides % 4 == 3):
        return [0.0, a-(((float(dist)/float(4*a))-int(float(dist)/float(4*a)))*float(4*a)-3*a)]

def positions(a, d, n):
    ans = []
    for i in xrange(n):
        ans += [point(a, d*(i+1))]
    return ans

x = raw_input("").split(' ')
a = float(x[0])
d = float(x[1])
n = raw_input("")
n = int(n)
answer = positions(a, d, n)
for i in xrange(n):
    print str(answer[i][0]) + " " + str(answer[i][1])
