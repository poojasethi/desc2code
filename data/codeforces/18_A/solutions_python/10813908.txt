from decimal import Decimal, DivisionByZero, InvalidOperation

MARGIN = Decimal('0.00000000000000000001')

x1, y1, x2, y2, x3, y3 = map(int, raw_input().split())

def is_right(x1, y1, x2, y2, x3, y3):

	try:
		line1_slope = (y1 - y2) / Decimal((x1 - x2))
	except (DivisionByZero, InvalidOperation):
		line1_slope = Decimal('Infinity')

	try:
		line2_slope = (y2 - y3) / Decimal((x2 - x3))
	except (DivisionByZero, InvalidOperation):
		line2_slope = Decimal('Infinity')

	try:
		line3_slope = (y3 - y1) / Decimal((x3 - x1))
	except (DivisionByZero, InvalidOperation):
		line3_slope = Decimal('Infinity')


	line1_recip = -1 / line1_slope if line1_slope != 0 else Decimal('Infinity')
	line2_recip = -1 / line2_slope if line2_slope != 0 else Decimal('Infinity')

	try:
		line1_2_diff = line1_recip - line2_slope
	except InvalidOperation:
		line1_2_diff = Decimal(0)

	try:
		line1_3_diff = line1_recip - line3_slope
	except InvalidOperation:
		line1_3_diff = Decimal(0)

	try:
		line2_3_diff = line2_recip - line3_slope
	except InvalidOperation:
		line2_3_diff = Decimal(0)


	if (abs(line1_2_diff) < MARGIN or 
		abs(line1_3_diff) < MARGIN or 
		abs(line2_3_diff) < MARGIN):
		return True
	else:
		return False


x_movements = [-1, 0, 1, 0]
y_movements = [0, 1, 0, -1]

if is_right(x1, y1, x2, y2, x3, y3):
	print 'RIGHT'
else:
	for x in xrange(4):
		if (is_right(x1 + x_movements[x], y1 + y_movements[x], x2, y2, x3, y3) or
			is_right(x1, y1, x2 + x_movements[x], y2 + y_movements[x], x3, y3) or
			is_right(x1, y1, x2, y2, x3 + x_movements[x], y3 + y_movements[x])):
			print 'ALMOST'
			exit()
	print 'NEITHER'
