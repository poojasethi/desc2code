def almosts(pts):
	x1, y1, x2, y2, x3, y3 = pts
	
	for i in [1,-1]:
		yield x1+i, y1, x2, y2, x3, y3
		yield x1, y1+i, x2, y2, x3, y3
		yield x1, y1, x2+i, y2, x3, y3
		yield x1, y1, x2, y2+i, x3, y3
		yield x1, y1, x2, y2, x3+i, y3
		yield x1, y1, x2, y2, x3, y3+i





def is_triangle(pts):
	x1, y1, x2, y2, x3, y3 = pts
	return (x2-x1)*(y3-y1) - (x3-x1)*(y2-y1)
	



def is_right_triangle(pts):
	x1, y1, x2, y2, x3, y3 = pts
	sq_lens = []
	sq_lens.append((x1-x2)**2 + (y1-y2)**2)
	sq_lens.append((x1-x3)**2 + (y1-y3)**2)
	sq_lens.append((x2-x3)**2 + (y2-y3)**2)
	sq_lens.sort()
	if (sq_lens[0] + sq_lens[1] == sq_lens[2]):
		return True
	else:
		return False




def main():
	x1, y1, x2, y2, x3, y3 = [int(i) for i in raw_input().split()]
	if is_right_triangle((x1, y1, x2, y2, x3, y3)):
		print 'RIGHT'
		return
	if any((is_right_triangle(pts) for pts in almosts((x1, y1, x2, y2, x3, y3)) if is_triangle(pts))):
		print 'ALMOST'
		return
	print 'NEITHER'





main()