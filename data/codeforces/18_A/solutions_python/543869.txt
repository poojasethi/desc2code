#coding: utf-8

mv = [[1,0],[0,-1],[-1,0],[0,1]]

def isRight(ls):
    dist = []
    for i in xrange(len(ls)):
        for j in xrange(i+1, len(ls)):
            dist.append(sum(map(lambda x,y: (x-y)**2, ls[i], ls[j])))
    mx = dist.index(max(dist))
    if dist[mx] == sum([dist[i] for i in xrange(len(dist)) if i != mx]):
        return True
    else:
        return False

def main():
    xy = map(int, raw_input().split())
    inp = [[] for i in xrange(3)]
    [inp[i/2].append(xy[i]) for i in xrange(len(xy))] 
    if isRight(inp):
        print "RIGHT"
        return 0
    for i in xrange(len(inp)):
        for j in xrange(len(mv)):
            cp = inp[:]
            cp[i] = map(lambda x,y:x+y, cp[i], mv[j])
            if cp[i] in inp:
                continue
            if isRight(cp):
                print "ALMOST"
                return 0
    print "NEITHER"
    return 0
main()
