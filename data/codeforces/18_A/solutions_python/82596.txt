#!/usr/bin/python
import sys

def newpoints (x,y):
    point = []
    point.append([x + 1, y])
    point.append([x - 1, y])
    point.append([x, y + 1])
    point.append([x, y - 1])
    return point

def isright(x1, y1, x2, y2, x3, y3):
    d1 = sdistance (x1, y1, x2, y2)
    d2 = sdistance (x1, y1, x3, y3)
    d3 = sdistance (x2, y2, x3, y3)
    l = sorted([d1, d2, d3])
    area = x1*(y2-y3) + x2*(y3-y1) + x3*(y1 - y2)
    if area == 0:
        return False
    if (l[2] == (l[0] + l[1])):
        return True
    else:
        return False

def sdistance (x1, y1, x2, y2):
    return ((x1 - x2)*(x1 - x2) + (y1 - y2)*(y1 - y2))


def main ():
    (x1, y1, x2, y2, x3, y3) = map(int, sys.stdin.next().strip().split())
    ans = None
    if (isright(x1, y1, x2, y2, x3, y3)):
        ans = "RIGHT"
    else:
        npoints = newpoints(x1, y1)
        for i in npoints:
            if (isright(i[0], i[1], x2, y2, x3, y3)):
                ans = "ALMOST"
                break

        npoints = newpoints(x2, y2)
        for i in npoints:
            if (isright(x1, y1, i[0], i[1], x3, y3)):
                ans = "ALMOST"
                break

        npoints = newpoints(x3, y3)
        for i in npoints:
            if (isright(x1, y1, x2, y2, i[0], i[1])):
                ans = "ALMOST"
                break
    if (ans):
        print ans
    else:
        print "NEITHER"

if __name__ == "__main__":
    main()


