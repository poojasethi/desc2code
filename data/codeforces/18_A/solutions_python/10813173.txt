class Answer:
	def __init__(self):
		self.answer = "NEITHER"

	def testForSquare(self,p1x,p1y,p2x,p2y,p3x,p3y):
		s1s = (p1x-p2x)**2 + (p1y-p2y)**2
		s2s = (p1x-p3x)**2 + (p1y-p3y)**2
		s3s = (p2x-p3x)**2 + (p2y-p3y)**2

		if s1s+s2s == s3s or s1s+s3s == s2s or s2s+s3s == s1s:
			self.answer = "RIGHT"
		else:
			self.testForSquare2(p1x+1,p1y,p2x,p2y,p3x,p3y)
			self.testForSquare2(p1x-1,p1y,p2x,p2y,p3x,p3y)
			self.testForSquare2(p1x,p1y+1,p2x,p2y,p3x,p3y)
			self.testForSquare2(p1x,p1y-1,p2x,p2y,p3x,p3y)
			self.testForSquare2(p1x,p1y,p2x+1,p2y,p3x,p3y)
			self.testForSquare2(p1x,p1y,p2x-1,p2y,p3x,p3y)
			self.testForSquare2(p1x,p1y,p2x,p2y+1,p3x,p3y)
			self.testForSquare2(p1x,p1y,p2x,p2y-1,p3x,p3y)
			self.testForSquare2(p1x,p1y,p2x,p2y,p3x+1,p3y)
			self.testForSquare2(p1x,p1y,p2x,p2y,p3x-1,p3y)
			self.testForSquare2(p1x,p1y,p2x,p2y,p3x,p3y+1)
			self.testForSquare2(p1x,p1y,p2x,p2y,p3x,p3y-1)

	def testForSquare2(self,p1x,p1y,p2x,p2y,p3x,p3y):
		s1s = (p1x-p2x)**2 + (p1y-p2y)**2
		s2s = (p1x-p3x)**2 + (p1y-p3y)**2
		s3s = (p2x-p3x)**2 + (p2y-p3y)**2

		if p1x == p2x == p3x or p1y == p2y == p3y:
			pass
		elif (p1x,p1y) == (p2x,p2y) or (p1x,p1y) == (p3x,p3y) or (p3x,p3y) == (p2x,p2y):
			pass
		elif s1s+s2s == s3s or s1s+s3s == s2s or s2s+s3s == s1s:
			self.answer = "ALMOST"

myAnswer = Answer()
line = [int(x) for x in raw_input().split()]
px1 = line[0]
py1 = line[1]
px2 = line[2]
py2 = line[3]
px3 = line[4]
py3 = line[5]
myAnswer.testForSquare(px1,py1,px2,py2,px3,py3)

print myAnswer.answer

