#include <cstdio>
#include <cstring>
using namespace std;
#define maxn 1000005
#define maxd 22
#define maxc 2
int n;
char s[maxn];
int up[maxn][maxd];
int St[maxn]={0},top=0;
namespace SAM{
	int trans[maxn][maxc],fa[maxn],len[maxn],pos[maxn];
	int last=1,cnt=1,p,q,np,nq;
	void extend(int x,int ps){
		p=last,np=last=++cnt;
		len[np]=len[p]+1,pos[np]=ps;
		while(!trans[p][x]&&p)trans[p][x]=np,p=fa[p];
		if(!p)fa[np]=1;
		else{
			q=trans[p][x];
			if(len[q]==len[p]+1)fa[np]=q;
			else{
				nq=++cnt;
				len[nq]=len[p]+1;
				memcpy(trans[nq],trans[q],sizeof(trans[nq]));
				pos[nq]=pos[q],fa[nq]=fa[q],fa[q]=fa[np]=nq;
				while(trans[p][x]==q)trans[p][x]=nq,p=fa[p];
			}
		}
	}
}
void pre(){
	memset(up,-1,sizeof(up));
	for(int i=1;i<=n;i++){
		if(s[i]=='(')St[++top]=i;
		else if(top){
			up[i][0]=St[top--];
			for(int j=1;j<22&&up[i][j-1]>0;j++)up[i][j]=up[up[i][j-1]-1][j-1];
		}
	}
}
int cal(int p,int len){
	int cnt=0;
	for(int i=21;~i;i--){
		if(up[p][i]!=-1&&p-up[p][i]+1<=len){
			cnt+=1<<i;
			len-=p-up[p][i]+1;
			p=up[p][i]-1;
		}
	}
	return cnt;
}
int main(){
	scanf("%d%s",&n,s+1);
	for(int i=1;i<=n;i++)SAM::extend(s[i]=='('?0:1,i);
	pre();
	long long ans=0;
	for(int i=2;i<=SAM::cnt;i++)ans+=cal(SAM::pos[i],SAM::len[i])-cal(SAM::pos[i],SAM::len[SAM::fa[i]]);
	printf("%lld\n",ans);
}