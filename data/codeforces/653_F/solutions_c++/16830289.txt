#include<bits/stdc++.h>
#define inf 0x3f3f3f3f
#define lowbit(a) ((a)&-(a))
#define LL long long
#define N 500010
using namespace std;
int n,sum[N];


	//fa[0]=-1;
	int last,cnt_sam,ch[N<<1][2],fa[N<<1],len[N<<1],R[N<<1];
	int add(int c,int pos) {
		int q=++cnt_sam;
		len[q]=len[last]+1;
		R[q]=pos;
		int x=last;
		for (;x!=-1&&!ch[x][c];x=fa[x]) ch[x][c]=q;
		if (x==-1) return last=q;
		int p=ch[x][c];
		if (len[x]+1==len[p]) fa[q]=p;
		else {
			int np=++cnt_sam;
			R[np]=pos;
			len[np]=len[x]+1;
			fa[np]=fa[p],fa[p]=fa[q]=np;
			memcpy(ch[np],ch[p],sizeof(ch[p]));
			for (;x!=-1&&ch[x][c]==p;x=fa[x]) ch[x][c]=np;
		}
		return last=q;
	}



char s[N];


struct node {
	int p,v,fg;
	bool operator < (const node &ano) const {return p<ano.p;}
}T[N<<2];int cnt_T;

//int cnt[N<<1];



int bit[N<<1],first_pos[N];
int Ask(int i) {
	int res=inf;
	for (;i;i-=lowbit(i)) res=min(res,bit[i]);
	return res;
}
int fix(int i,int v) {
	for (;i<=n+n+1;i+=lowbit(i)) bit[i]=min(bit[i],v);
} 
int cnt[N<<1];
int main()
{
//	freopen("F.in","r",stdin); 
	fa[0]=-1;
	scanf("%d%s",&n,s+1);
	for (int i=1;i<=n;++i) sum[i]=sum[i-1]+(s[i]=='('? 1:-1);
	for (int i=n;i;--i) add((s[i]=='('? 0:1),n-i+1);
	
	memset(bit,0x3f,sizeof(bit));
	for (int i=n;i;--i) {
		fix(sum[i] +n+1,i);
		first_pos[i]=Ask(sum[i-1]-1 +n+1);
//		printf("%d %d\n",i,first_pos[i]);
	}
	
	
	for (int u=1;u<=cnt_sam;++u) {
		int l=R[u]-len[u]+1,r=R[u]-(len[fa[u]]+1)+1,G=R[u];
		l=n-l+1,r=n-r+1; swap(l,r); G=n-G+1;
		r=min(r,first_pos[G]-1);
		if (l>r) continue;
		T[++cnt_T]=(node){r,sum[G-1],1};
		T[++cnt_T]=(node){l-1,sum[G-1],-1};
//		printf("%d %d %d\n",G,l,r);
	}
	
	

	LL ans=0;
	sort(T+1,T+cnt_T+1);
	int j=0;
	for (int i=1;i<=cnt_T;++i) {
		for (;j<=n&&j<=T[i].p;++j) ++cnt[sum[j]+n];
		ans+=T[i].fg*cnt[T[i].v+n];
	}
	printf("%I64d\n",ans);
	return 0;
}
