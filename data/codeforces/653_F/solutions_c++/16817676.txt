#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <climits>
#include <algorithm>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <cassert>
#include <vector>
#define all(x) x.begin() , x.end()
#define fi first
#define se second
#define pb push_back
#define umax( x , y ) x = max( x , (y) )
#define umin( x , y ) x = min( x , (y) )
#define For( i , a ) for(int i=1;i<=a;i++)
#define ort (((b+s) < 0 )? (b+s)/2-1:(b+s)/2)
#define y2 asrwjaelkf
#define y1 asseopirwjaelkf

using namespace std;

inline int read() {
	int res = 0 ;int neg ;
	while(true){char ch = getchar();if(ch>='0' && ch<='9' || ch=='-'){if(ch=='-') neg = -1;else neg = 1 , res = ch-'0';break;} }
	while(true){char ch = getchar();if(ch>='0' && ch<='9') res*=10 , res+=ch-'0';else break;}
	return res*neg;
}

const int maxn = 1000020;
const int MOd = 1e9+7;

typedef long long Lint;
typedef double db;
typedef pair<int,int> ii;
typedef pair<ii,int> iii;

int a;
char ch[maxn];
int s[maxn], lca[maxn];
iii ar[maxn];
int bs[maxn], lat[maxn];
ii st[maxn];
int at;
Lint ans;
vector<int> v[maxn];

void add( int t, int b, int s ) {
	//~ printf("%d -- %d %d\n",t-8,b,s);
	if( b > s ) return;
	ans += upper_bound( all( v[t] ), s ) - lower_bound( all( v[t] ), b );
}

int main() {
	
	scanf("%d",&a);
	
	scanf(" %s",ch+1);
	
	s[0] = a + 1;
	v[0].pb( 0 );
	
	for(int i=1;i<=a;i++) {
		if( ch[i] == '(' ) {
			s[i] = s[i-1] + 1;
		} else {
			s[i] = s[i-1] - 1;
		}
		//~ printf("asd %d %d\n",i,s[i]);
		v[s[i]].pb( i );
	}
	priority_queue<ii> q;
	q.push( ii( s[0], 0 ) );
	for(int i=1;i<=a+1;i++) {
		while( !q.empty() ) {
			if( q.top().fi > s[i] ) {
				lat[q.top().se] = i;
				q.pop();
			} else break;
		}
		q.push( ii( s[i], i ) );
	}	
	
	//~ for(int i=1;i<=a;i++) printf("%d %d\n",i,lat[i]);
	for(int i=1;i<=a;i++) ar[i].se = i, ar[i].fi.fi = ch[i], ar[i].fi.se = 0;
	
	for(int k=0;(1<<k)<=a+a;k++) {
		sort( ar+1, ar+1+a );
		for(int i=1;i<=a;) {
			int j = i;
			while( j <= a && ar[i].fi == ar[j].fi ) bs[ar[j].se] = i, j++;
			i = j;
		}
		if( (1<<k) > a ) break;
		for(int i=1;i<=a;i++) {
			ar[i].fi.fi = bs[i];
			ar[i].fi.se = bs[i+(1<<k)];
			ar[i].se = i;
		}
	}
	
	for(int i=1,p=0;i<=a;i++) {
		//~ printf("asd %d %d\n",i,ar[i].se);
		if( p < 0 ) p = 0;
		if( bs[i] == a ) { p--; continue; }
		int j = ar[bs[i]+1].se;
		while( i+p <= a && j+p <= a && ch[j+p] == ch[i+p] ) p++;
		lca[bs[i]] = p;
		p--;
	}
	
	for(int i=1;i<=a;i++) {
		//~ printf("------------ %d %d\n",i,lca[i]);
		int t = max( lca[i], lca[i-1] );
		add( s[ar[i].se-1], ar[i].se+t, lat[ar[i].se-1] - 1 );
	}
	//~ printf("%d\n",ans);
	st[++at] = ii( 0, 0 );
	for(int i=1;i<=a;i++) {
		while( at > 1 && lca[i] <= st[at].fi ) {
			int t = st[at].se;
			//~ printf("------------------------ %d %d %d\n",i,t,ar[t].se);
			add( s[ar[t].se-1], ar[t].se + max( st[at-1].fi, lca[i] ), min( lat[ar[t].se-1] - 1, ar[t].se + st[at].fi - 1 ) );
			at--;
		}
		st[++at] = ii( lca[i], i );
	}
	
	cout << ans << endl;
	
	return 0;
}
