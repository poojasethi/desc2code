#include <bits/stdc++.h>
#define fi first
#define se second
using namespace std;
typedef pair<int, int> ii;
typedef pair<ii, int> iii;
const int N=500010;
const int LOG=20;
const int inf=0x7fffffff;
int n;
string s;
int sa[N][LOG],id[N],b[N];
iii l[N];
int lcp[N],sum[N];
vector<int> t[N*2];
void buildSA(){
    for(int i=0;i<n;++i)
        sa[i][0]=s[i];
    for(int log=1;log<LOG;++log){
        int offset=1<<(log-1);
        for(int i=0;i<n;++i){
            l[i].se=i;
            l[i].fi.fi=sa[i][log-1];
            l[i].fi.se=i+offset<n?sa[i+offset][log-1]:-1;
        }
        sort(l,l+n);
        int cnt=0;
        sa[l[0].se][log]=0;
        for(int i=1;i<n;++i){
            if(l[i].fi!=l[i-1].fi)++cnt;
            sa[l[i].se][log]=cnt;
        }
    }
}

bool cmp(int i, int j){
    return sa[i][LOG-1]<sa[j][LOG-1];
}

void buildLCP(){
    for(int i=0;i<n;++i)
        id[i]=i;
    sort(id,id+n,cmp);
    for(int i=1;i<n;++i){
        int i1=id[i];
        int i2=id[i-1];
        if(i1>i2)swap(i1,i2);
        for(int j=LOG-1;j>=0;--j)
        if(i2+(1<<j)-1<n&&sa[i1][j]==sa[i2][j]){
            lcp[i]+=1<<j;
            i1+=1<<j;
            i2+=1<<j;
        }
    }
}

void prepare(){
    for(int i=0;i<n;++i){
        sum[i+1]=sum[i]+(s[i]==')'?-1:1);
        t[sum[i+1]+N].push_back(i);
    }
    sum[n+1]=-inf;
    stack<int>st;
    st.push(n+1);
    for(int i=n-1;i>=0;--i){
        while(sum[st.top()]>=sum[i])
            st.pop();
        b[i+1]=st.top()-1;
        st.push(i);
    }
}

void solve(){
    long long ans=0;
    for(int i=1;i<=n;++i){
        int index=id[i-1]+1;
        int ss=sum[index-1]+N;
        ans+=upper_bound(t[ss].begin(), t[ss].end(), b[index])
        -lower_bound(t[ss].begin(), t[ss].end(), index);
        int next=min(index+lcp[i]-1,b[index]);
        ans-=upper_bound(t[ss].begin(), t[ss].end(), next)
        -lower_bound(t[ss].begin(), t[ss].end(), index);

    }
    cout<<ans;
}

void init(){
    buildSA();
    buildLCP();
    prepare();
    solve();
}

int main(){
//    freopen("input.txt", "r", stdin);
    ios_base::sync_with_stdio(false);
    cin>>n;
    cin>>s;
    init();
    return 0;
}
