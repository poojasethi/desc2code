#include<cstring>
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<queue>
#include<cmath>
#define rep(i,l,r) for (int i=l;i<=r;i++)
#define down(i,l,r) for (int i=l;i>=r;i--)
#define clr(x,y) memset(x,y,sizeof(x))
#define maxn 1005000
#define inf 2000000000
#define mm 1024523
#define eps 1e-6
#define uint unsigned int
#define ll long long
using namespace std;
int pos[maxn],go[maxn][2],fa[maxn],len[maxn];
int n,last,tot,s[maxn],f[maxn][22];
char ch[maxn];
int read(){
	int x=0,f=1; char ch=getchar();
	while (!isdigit(ch)){if (ch=='-') f=-1; ch=getchar();}
	while (isdigit(ch)){x=x*10+ch-'0'; ch=getchar();}
	return x*f;
}
void add(int c){
	int p,np,q,nq; 
	p=last; last=np=++tot; len[np]=pos[np]=len[p]+1;
	for (;p&&!go[p][c];p=fa[p]) go[p][c]=np;
	if (!p) fa[np]=1;
	else {
		q=go[p][c]; 
		if (len[q]==len[p]+1) {
			fa[np]=q; return;
		}
		else {
			nq=++tot;
			len[nq]=len[p]+1; pos[nq]=pos[q];
			memcpy(go[nq],go[q],sizeof(go[q]));
			fa[nq]=fa[q]; fa[q]=fa[np]=nq;
			for (;p&&go[p][c]==q;p=fa[p]) go[p][c]=nq;
		}
	}
}
void pre(){
	vector<int> q;
	rep(i,1,n){
		if (!s[i]) q.push_back(i);
		else {
			if (!q.empty()) {
				int pos=q.back(); q.pop_back();
				f[i][0]=pos;
				for (int j=1;j<=20;j++) 
					if (f[i][j-1]>0) f[i][j]=f[f[i][j-1]-1][j-1];
			}
		}
	}
}
int ask(int pos,int len){
	int ans=0;
	down(i,20,0) if (f[pos][i]>0&&pos-f[pos][i]+1<=len) {
		ans+=1<<i;
		len-=pos-f[pos][i]+1;
		pos=f[pos][i]-1;
	}
	return ans;
}
int main(){
//	freopen("in.txt","r",stdin);
	n=read(); last=tot=1;
	scanf("%s",ch+1);
	rep(i,1,n) if (ch[i]=='(') s[i]=0; else s[i]=1;
    rep(i,1,n) add(s[i]);
    pre();
    ll ans=0;
    rep(i,2,tot) ans+=1LL*(ask(pos[i],len[i])-ask(pos[fa[i]],len[fa[i]])); 
	printf("%lld\n",ans);
	return 0;
}
