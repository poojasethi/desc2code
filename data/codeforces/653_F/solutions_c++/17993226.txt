#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<vector>
#include<cmath>
#include<stack>
#define ll long long
#define ld long double
using namespace std;
const int maxn= 1e6+2,M= 20;
stack<int> S;
char s[maxn];
int X[maxn],Y[maxn],sa[maxn],height[maxn],c[maxn];
int f[maxn][25],fin[maxn],rank[maxn];
int dp[maxn];
ll ans;
int n,i;
void build(int m){
	int i;
	for (i= 0;i<=m;i++) c[i]= 0;
	for (i= 1;i<=n;i++) c[X[i]]++;
	for (i= 1;i<=m;i++) c[i]+= c[i-1];
	for (i= n;i>0;i--) sa[c[X[i]]--]= i;
	for (int k= 1;k<=n;k<<= 1){
		int p= 0;
		for (i= n-k+1;i<=n;i++) Y[++p]= i;
		for (i= 1;i<=n;i++)
			if (sa[i]>k)
				Y[++p]= sa[i]-k;
		for (i= 0;i<=m;i++) c[i]= 0;
		for (i= 1;i<=n;i++) c[X[i]]++;
		for (i= 1;i<=m;i++) c[i]+= c[i-1];
		for (i= n;i>0;i--) sa[c[X[Y[i]]]--]= Y[i];
		swap(X,Y);
		p= 1;
		X[sa[1]]= 1;
		for (i= 2;i<=n;i++)
			if (Y[sa[i-1]]==Y[sa[i]]&&Y[sa[i-1]+k]==Y[sa[i]+k]) X[sa[i]]= p;
			else X[sa[i]]= ++p;
		if (p==n) break;
		m= p;
	}
}
void getHeight(){
	int i,j,k= 0;
	for (i= 1;i<=n;i++){
		if (k) k--;
		j= sa[rank[i]-1];
		while (s[i+k]==s[j+k]) k++;
		height[rank[i]]= k;
		fin[i]= i+k;
	}
}
void anc(int o,int b){
	f[o][0]= b;
	for (int i= 1;i<=M;i++)
		f[o][i]= f[f[o][i-1]][i-1];
}
int get(int o,int b){
	int i;
	for (i= M;i>=0;i--)
		if (f[o][i]!=0&&f[o][i]<=b)
			o= f[o][i];
	return o;
}
int main()
{
#ifndef ONLINE_JUDGE	
	freopen("1.in","r",stdin);
	freopen("1.out","w",stdout);
#endif
	scanf("%d",&n);
	scanf("%s",s+1);
	for (i= 1;i<=n;i++)
		X[i]= s[i];
	build(100);
	for (i= 1;i<=n;i++)
		rank[sa[i]]= i;
	getHeight();
	for (i= n;i>0;i--)
		if (s[i]==')') S.push(i);
		else {
			int nx= 0;
			if (!S.empty()){
				nx= S.top();
				S.pop();
			}
			if (nx!=0){
				nx++;
				anc(i,nx);
				dp[i]= dp[nx]+1;
				ans+= dp[get(i,fin[i])];
			}
		}
	printf("%I64d",ans);
	return 0;
}
