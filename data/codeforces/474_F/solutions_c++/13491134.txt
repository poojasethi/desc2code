#include <bits/stdc++.h>
using namespace std;

int N, a[100010], T, L, R, RMQ[100010][20];
pair <int, int> data[100010];

int GCD(int l, int r)
{
    int k = log2(r - l + 1);
    return __gcd(RMQ[r][k], RMQ[l + (1 << k) - 1][k]);
}

main()
{
    scanf("%d", &N);
    for (int i = 1; i <= N; i++)
    {
        scanf("%d", &a[i]);
        data[i] = make_pair(a[i], i);
        RMQ[i][0] = a[i];
    }

    sort(data + 1, data + N + 1);
    for (int i = 1; i <= N; i++)
        for (int j = 1; (1 << j) <= i; j++)
            RMQ[i][j] = __gcd(RMQ[i][j - 1], RMQ[i - (1 << (j - 1))][j - 1]);

    scanf("%d", &T);
    while (T--)
    {
        scanf("%d %d", &L, &R);
        int gcd = GCD(L, R);
        printf("%d\n", (R - L + 1) - (upper_bound(data + 1, data + N + 1, make_pair(gcd, R)) - lower_bound(data + 1, data + N + 1, make_pair(gcd, L))));
    }
}
