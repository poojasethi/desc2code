#include <bits/stdc++.h>

using namespace std;

int n, t;
int g[20][200000];
map <int, vector <int> > rr;

int range_gcd (int l, int r) {
  int x = 0;
  while ((1 << (x+1)) <= r -l + 1) x++;
  return __gcd (g[x][l], g[x][r - (1 << x) + 1]);
}

int freq (vector <int> &v, int l, int r) {
  int lo = 0, hi = (int) v.size();
  int lo2 = 0, hi2 = (int) v.size();
  while (lo != hi) {
    int mid = (lo + hi) / 2;
    if (v[mid] >= l) {
      hi = mid;
    }
    else {
      lo = mid + 1;
    }
  }
  while (lo2 != hi2) {
    int mid = (lo2 + hi2) / 2;
    if (v[mid] > r) {
      hi2 = mid;
    }
    else {
      lo2 = mid + 1;
    }
  }
  return lo2 - lo;
}

int main() {
  scanf ("%d", &n);
  for (int i = 0; i < n; i++) {
    scanf ("%d", &g[0][i]);
    rr[g[0][i]].push_back(i);
  }
  for (int i = 1; i < 20; i++) {
    for (int j= 0; j < n - (1 << i) + 1; j++) {
      g[i][j] = __gcd(g[i-1][j], g[i-1][j+(1<<(i-1))]);
    }
  }
  scanf ("%d", &t);
  for (int i = 0; i < t; i++) {
    int l, r;
    scanf ("%d%d", &l, &r);    
    int gg = range_gcd (l-1, r-1);
    printf ("%d\n", r - l + 1 - freq (rr[gg], l-1, r-1));
  }
}
