#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
const int nmax = 1e5+5;
int st[nmax][20];
vector<pair<int,int> > arr;
int gcd(int a, int b){
	if(a<b)
		swap(a,b);
	if(b==0)
		return a;
	return gcd(b,a%b);
}
int main(){
	int n;
	cin >> n;
	for(int i = 0; i < n; ++i){
		cin >> st[i][0];
		arr.push_back({st[i][0],i});
	}
	sort(arr.begin(),arr.end());
	for(int s = 1; s < 20; ++s){
		for(int i = 0; i < n; ++i){
			if(i+(1<<s)-1<n){
				st[i][s]=gcd(st[i][s-1],st[i+(1<<(s-1))][s-1]);
			}
		}
	}
	int m;
	cin >> m;
	for(int i = 0; i < m; ++i){
		int l,r;
		cin >> l >> r;
		l--;
		r--;
		int p = 19;
		while(l+(1<<p)-1>r)
			p--;
		int g = gcd(st[l][p],st[r-(1<<p)+1][p]);
		int cnt = upper_bound(arr.begin(),arr.end(),make_pair(g,r))-lower_bound(arr.begin(),arr.end(),make_pair(g,l));
		cout << r-l+1-cnt << '\n';
	}
}
