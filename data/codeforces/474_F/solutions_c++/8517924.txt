#include<cstdio>
#include<algorithm>
using namespace std;
const int pot=131072;
pair<int, int> drzewko[2*pot];
pair<int, int> lacz(pair<int, int> x, pair<int, int> y){
	int h=__gcd(x.first, y.first);
	int h1=0;
	if(x.first==h)
		h1+=x.second;
	if(y.first==h)
		h1+=y.second;
	return make_pair(h, h1);
}
pair<int, int> licz(int gdzie, int pp, int kp, int pz, int kz){
	if(pz<=pp && kz>=kp)
		return drzewko[gdzie];
	int r=(pp+kp)/2;
	pair<int, int> x=make_pair(0,0);
	if(pz<=r)
		x=lacz(x, licz(2*gdzie, pp, r, pz, kz));
	if(kz>r)
		x=lacz(x, licz(2*gdzie+1, r+1, kp, pz, kz));	
	return x;
}
int main(){
	int n;
	scanf("%d", &n);
	for(int i=1; i<=n; i++){
		int a;
		scanf("%d", &a);
		drzewko[i+pot-1]=make_pair(a,1);
	}
	for(int i=pot-1; i>=1; i--)
		drzewko[i]=lacz(drzewko[2*i], drzewko[2*i+1]);
	int t;
	scanf("%d", &t);
	for(int i=1; i<=t; i++){
		int a,b;
		scanf("%d%d", &a, &b);
		printf("%d\n", b-a+1-licz(1, 1, pot, a, b).second);
	}


}
//9:40
