 #include<bits/stdc++.h>
 using namespace std;

 const int maxn = 1e5 + 10;

 int dp[maxn][22],data[maxn];

 #define pii pair<int,int>

pii p[maxn];

int main(){
    int n;
    while(scanf("%d",&n) != EOF){
        for(int i = 1; i<= n; ++ i){
            scanf("%d",&dp[i][0]);
            p[i] = make_pair(dp[i][0],i);
        }
        sort(p + 1 ,p + n + 1);
        for(int i = 1;i <= 20; ++ i){
            for(int j = 1; j<= n; ++j){
                if(j + (1 << i - 1) > n) continue;
                dp[j][i] = __gcd(dp[j][i-1],dp[j + (1 << (i - 1))][i - 1]);
            }
        }
        int q;
        scanf("%d",&q);
        while(q --){
            int l,r;
            scanf("%d%d",&l,&r);
            int k = 0;
            while(1 << (k + 1) <= (r - l + 1)) ++ k;
            int d = __gcd(dp[l][k],dp[r - (1<<k) + 1][k]);
            int low = lower_bound(p + 1, p + n + 1, make_pair(d,l)) - (p + 1);
            int upper = upper_bound(p + 1,p + n + 1,make_pair(d,r)) - (p + 1);
            int ans = (r - l + 1) - (upper - low);
            printf("%d\n",ans);
        }
    }
    return 0;
}
