#include <cstdio>
#include <utility>
#include <algorithm>

#define N 100000

using namespace std;

pair<int,int> b[N+10];
int n,q,x,y,a[N+10],seg[N*4+10];

int gcd(int a,int b){
	return b?gcd(b,a%b):a;
}

inline void update(int k){
	seg[k]=gcd(seg[k<<1],seg[k<<1|1]);
}

void build(int k,int l,int r){
	if (l==r){
		seg[k]=a[l];
		return;
	}
	int mid=l+r>>1;
	build(k<<1,l,mid);
	build(k<<1|1,mid+1,r);
	update(k);
}

int query(int k,int lc,int rc,int l,int r){
	if (l==lc && r==rc) return seg[k];
	int mid=lc+rc>>1;
	if (r<=mid) return query(k<<1,lc,mid,l,r);
	if (l>mid) return query(k<<1|1,mid+1,rc,l,r);
	return gcd(query(k<<1,lc,mid,l,mid),query(k<<1|1,mid+1,rc,mid+1,r));
}

inline int query(int x,int y){
	int t=query(1,1,n,x,y);
	return y-x+1-(upper_bound(b+1,b+n+1,make_pair(t,y))-lower_bound(b+1,b+n+1,make_pair(t,x)));
}

int main(){
	scanf("%d",&n);
	for (int i=1;i<=n;++i) scanf("%d",&a[i]);
	build(1,1,n);
	for (int i=1;i<=n;++i) b[i]=make_pair(a[i],i);
	sort(b+1,b+n+1);
	scanf("%d",&q);
	for (int i=1;i<=q;++i){
		scanf("%d%d",&x,&y);
		printf("%d\n",query(x,y));
	}
	return 0;
}
