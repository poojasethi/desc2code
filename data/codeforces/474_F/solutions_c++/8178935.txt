#include<cstdio>
#include<map>
#include<vector>
#include<algorithm>
#define nn 100010
using namespace std;
map<int,int>m;
int i,n,tot,t,c,T,l,r,L,R,tem,er,a;
int f[18][nn],lo2[nn];
vector<int>b[nn];

int gcd(int a,int b){return (a%b==0)?b:(gcd(b,a%b));}
void ST()
 {int i,j;
  for (i=1;i<=lo2[n];i++)
  for (j=1;j+(1<<i)-1<=n;j++)
   f[i][j]=gcd(f[i-1][j],f[i-1][j+(1<<(i-1))]);
 }
int ask(int l,int r)
 {int le=lo2[r-l+1];
  return gcd(f[le][l],f[le][r-(1<<le)+1]);
 }
int main()
{
 scanf("%d",&n);tot=0;
 for (i=1;i<=n;i++)
  {scanf("%d",&a);f[0][i]=a;
   if (!(t=m[a])){m[a]=t=++tot;}
   b[t].push_back(i);
  }
 for (i=1,tem=-1,er=1;i<=n;i++){
        if (er==i)tem++,er<<=1;
        lo2[i]=tem;
                               }
 ST();
 scanf("%d",&T);
 while (T--){
      scanf("%d%d",&l,&r);
      c=ask(l,r);
      if (!(c=m[c])){printf("%d\n",r-l+1);continue;}
      R=lower_bound(b[c].begin(),b[c].end(),r)-b[c].begin();
      if (b[c][R]!=r)R--;
      L=lower_bound(b[c].begin(),b[c].end(),l)-b[c].begin();
      if (R>=L)printf("%d\n",r-l+1-(R-L+1));
       else    printf("%d\n",r-l+1);
            }
//for(;;);
return 0;
}
