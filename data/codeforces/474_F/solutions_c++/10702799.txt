#include <bits/stdc++.h>
using namespace std;
int n,m;
int ql,qr,c;
int g[400005];
int s[100005];
vector<pair<int,int> >V;
void build(int l,int r,int d){
	if(l==r)g[d]=s[l];
	else{
		int mid=l+r>>1;
		build(l,mid,d+d);
		build(mid+1,r,d+d+1);
		g[d]=__gcd(g[d+d],g[d+d+1]);
	}
}
int find(int l,int r,int d){
	if(r<ql||qr<l)return 0;
	if(ql<=l&&r<=qr)return g[d];
	int mid=l+r>>1;
	return __gcd(find(l,mid,d+d),find(mid+1,r,d+d+1));
}
int main(){
	scanf("%d",&n);
	V.clear();
	for(int i=1;i<=n;i++)scanf("%d",&s[i]),V.push_back(make_pair(s[i],i));
	build(1,n,1);
	scanf("%d",&m);
	sort(V.begin(),V.end());
	while(m--){
		scanf("%d%d",&ql,&qr);
		c=find(1,n,1);
		printf("%d\n",qr-ql+1-(upper_bound(V.begin(),V.end(),make_pair(c,qr))-lower_bound(V.begin(),V.end(),make_pair(c,ql))));
	}
	return 0;
}
