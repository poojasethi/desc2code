#include<bits/stdc++.h>

using namespace std;

#define st first
#define nd second
#define mp make_pair
#define sol root<<1
#define sag sol|1
#define orta (bas+son>>1)

const int N=1e5+5;

int St[4*N];

int A[N];

pair<int,int> B[N];

int gcd(int x,int y){
	return !y ? x : gcd(y,x%y);
}

int query(int root,int bas,int son,int x,int y){

	if(bas>y or son<x)
		return 0;

	if(x<=bas and son<=y)
		return St[root];

	return gcd(query(sol,bas,orta,x,y),query(sag,orta+1,son,x,y));
}

int init(int root,int bas,int son){
	
	if(bas==son)
		return St[root]=A[bas];

	return St[root]=gcd(init(sol,bas,orta),init(sag,orta+1,son));
}

int main(){

	int n,i,l,r,q,t,r1,r2;

	pair<int,int> t1,t2;

	cin>>n;

	for(i=1 ; i<=n ; i++){
		cin>>A[i];
		B[i-1].st=A[i];
		B[i-1].nd=i;
	}

	sort(B,B+n);

	init(1,1,n);

	cin>>q;

	for(i=1 ; i<=q ; i++){
		cin>>l>>r;

		t=query(1,1,n,l,r);
		
		r1=lower_bound(B,B+n,mp(t,l))-B;
		r2=lower_bound(B,B+n,mp(t,r))-B;

		t1=B[r1];
		t2=B[r2];

		if(t1.st!=t){
			cout<<r-l+1<<endl;
			continue;
		}
		if(t2.st!=t or t2.nd > r)
			r2--;

		cout<<(r-l+1)-(r2-r1+1)<<endl;
	}
	
	return 0;
}
