//in the name of God

#include <bits/stdc++.h>
using namespace std;

const int N = 2000000;

int t[N], s[N/10];
pair<int, int> a[N/10];

int make(int id, int l, int r)
{
	if(l+1 == r)
		return t[id] = s[l];
		
	int m = (l+r)/2;
	
	int u = make(id*2, l, m);
	int v = make(id*2+1, m, r);
	
	return t[id] = __gcd(u, v);
}


int get(int id, int beg, int end, int l, int r)
{
	if(beg == l && end == r)
		return t[id];
	
	int mid = (beg+end)/2;
	
	if(r <= mid)
		return get(id*2, beg, mid, l, r);
	else if(l >= mid)
		return get(id*2+1, mid, end, l, r);
	else
		return __gcd(get(id*2, beg, mid, l, mid), get(id*2+1, mid, end, mid, r));	
}

int main()
{
	int n, t;
	cin >> n;
	for(int i=0; i<n; i++)
	{
		cin >> s[i];
		a[i] = make_pair(s[i], i);
	}
	
	sort(a, a+n);
	
	make(1, 0, n);
		
	cin >> t;
	while(t--)
	{
		int l, r;
		cin >> l >> r;
		l--;
		
		int g = get(1, 0, n, l, r);
		
		int ll = upper_bound(a, a+n, make_pair(g, r-1)) - lower_bound(a, a+n, make_pair(g, l));
		
		cout << r-l-ll << endl;	
	}
	
	return 0;
}