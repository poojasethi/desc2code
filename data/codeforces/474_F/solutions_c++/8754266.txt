#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <string>
#include <cstring>

using namespace std;

inline int gcd(int a, int b) {
    while (a && b) {      
        if (a>b) a%=b;
        else b%=a;
    }
    return a+b;
}

const int N = 1<<17;

int a[N], n,m, t[N+N];

pair<int, int> b[N];

int get(int l, int r) {
    l += N; r += N;
    int ans = 0;
    
    while (l<=r) {
        if (l&1) ans = gcd(t[l++], ans);
        if (!(r&1)) ans = gcd(t[r--], ans);
        l/=2;
        r/=2;
    }

    return ans;
}

int main(){                         

//  freopen("a", "r", stdin);
                    
    cin >> n;
    for(int i=0; i<n; i++) {
        cin >> a[i];
        b[i] = make_pair(a[i],i);
        t[i+N] = a[i];
    }
    
    for (int i=N-1; i>0; --i) 
        t[i] = gcd(t[i*2], t[i*2+1]);
    
    sort(b, b+n);

    cin >> m;
    while (m--) {
        int l, r;
        cin >> l >> r;
        
        l--; r--;

        int g = get(l, r);
        int ans = r-l+1 - (upper_bound(b, b+n, make_pair(g, r)) - lower_bound(b, b+n, make_pair(g, l)));

        cout << ans << endl;
    }
}
