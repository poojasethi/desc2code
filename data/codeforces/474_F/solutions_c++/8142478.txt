#include <bits/stdc++.h>

#define mp make_pair
#define st first
#define nd second
#define pb push_back

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair< ll,ll > pll;

const int inf = 1000000000;

int n,m,a[100005];
pii table[25][100005];
map< int,vector<int> > Map;

int gcd(int a,int b){
	return !b ? a : gcd(b,a%b);
}

pii merge(pii a,pii b){
	return mp( min(a.st,b.st),gcd(a.nd,b.nd) );
}

pii query(int x,int y){
	int lg = log2(y-x+1);
	return merge(table[lg][x],table[lg][y-(1<<lg)+1]);
}

int cnt(int a,int x,int y){
	vector<int> &v = Map[a];
	return upper_bound(v.begin(),v.end(),y) - lower_bound(v.begin(),v.end(),x);
}

int main()
{
	int x,y;

	scanf("%d",&n);
	for (int i = 1; i <= n; i++) {
		scanf("%d",a+i);
		table[0][i] = mp(a[i],a[i]);
		Map[a[i]].pb(i);
	}

	for(int i = 1; i <= 20; i++) {
		for (int j = 1; j <= n; j++) {
			table[i][j] = merge( table[i-1][j] , table[i-1][j+(1<<(i-1))] );
		}
	}

	scanf("%d",&m);

	while (m--) {
		scanf("%d %d",&x,&y);
		pii t = query(x,y);
		if(t.nd % t.st == 0){
			printf("%d\n",y-x+1-cnt(t.st,x,y));
		}
		else{
			printf("%d\n",y-x+1);
		}
	}

	return 0;
}
