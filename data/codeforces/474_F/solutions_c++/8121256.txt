#include <bits/stdc++.h>
using namespace std;

#define two(x) ( 1LL<<(x) )

int a[100010];
int tree[18][1<<18];
vector < int > adj[1<<18];
map < int , int > mp;
int size = 0;

int GCD( int l , int r )
{
	int n = r - l + 1, g = a[l];
	for( int i = 18 ; i >= 0 ; i -- )
		if( n >= two(i) )
			g = __gcd( g , tree[i][l] ), l += two(i), n -= two(i);
	return g;
}

int main()
{
	int n;
	cin >> n;
	for( int i = 0 ; i < n ; i ++ )
	{
		scanf( "%d" , a+ i ), tree[0][i] = a[i];
		if( !mp[ a[i] ] )
			mp[ a[i] ] = ++ size;
		adj[ mp[ a[i] ] ].push_back( i );
	}
	for( int i = 1 ; two(i) <= n ; i ++ )
		for( int j = 0 ; j + two(i) <= n ; j ++ )
			tree[i][j] = __gcd( tree[i-1][j] , tree[i-1][j+two(i-1)] );
	int q, l, r;
	cin >> q;
	while( q -- )
	{
		scanf( "%d%d" , &l , &r );
		l --, r --;
		int g = GCD( l , r );
		int x = mp[g];
		int ans = r - l + 1 - ( upper_bound( adj[x].begin() , adj[x].end() , r ) - lower_bound( adj[x].begin() , adj[x].end() , l ) );
		printf( "%d\n" , ans );
	}
	return 0;
}

