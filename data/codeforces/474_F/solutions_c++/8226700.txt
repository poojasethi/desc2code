#include <bits/stdc++.h>
#define	lc	p<<1
#define	rc	(p<<1)|1
#define	rep(i,j,k)	for (int i = j; i <= k; i++)
using namespace std;
const int N = 100100;
pair<int,int> b[N];
inline void get(int &x)
{
	char ch = getchar();	x = 0;
	while (ch < '0')	ch = getchar();
	while (ch >= '0')	x = x*10+ch-'0', ch = getchar();
}
int n, m, s[N], g[N<<2];
int gcd(int x, int y){return y?gcd(y,x%y):x;};
void build(int l, int r, int p)
{
	if (l == r)
	{
		g[p] = s[l];
		return ;
	}
	int mid = (l+r)>>1;
	build(l,mid,lc), build(mid+1,r,rc);
	g[p] = gcd(g[lc],g[rc]);
}
int query(int u, int v, int l, int r, int p)
{
	if (r<u || l>v)	return 0;
	if (u<=l && r<=v)	return g[p];
	int mid = (l+r)>>1;
	return gcd(query(u,v,l,mid,lc),query(u,v,mid+1,r,rc));
}
int main()
{
	cin >> n;
	rep(i,1,n)	get(s[i]), b[i] = (make_pair(s[i],i));
	sort(b+1,b+1+n), build(1,n,1);
	cin >> m;
	while (m--)
	{
		int u, v;
		get(u), get(v);
		int q = query(u,v,1,n,1);
		int st = lower_bound(b+1,b+n+1,make_pair(q,u))-(b+1);
		int ed = lower_bound(b+1,b+1+n,make_pair(q,v+1))-(b+1);
		printf("%d\n", v-u+1+st-ed);
	}
	return 0;
}
