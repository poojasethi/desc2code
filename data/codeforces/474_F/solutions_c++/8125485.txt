#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
typedef pair<int, int> pii;
#define N 100005
#define P 18
int f[P][N];
int b[N];
pii a[N];
int n, m;

void st()
{
    int i, j, k;
    b[0] = b[1] = 0;
    for (i = 1; i <= (n >> 1); ++i)
    {
        b[i << 1] = b[i << 1 | 1] = b[i] + 1;
    }
    for (i = 0; i < n; ++i)
    {
        scanf("%d", &f[0][i]);
        a[i] = pii(f[0][i], i);
    }
    for (i = k = 1; i <= b[n]; ++i, k <<= 1)
    {
        for (j = 0; j + k <= n + 1; ++j)
        {
            f[i][j] = __gcd(f[i - 1][j], f[i - 1][j + k]);
        }
    }
}

int query(int l, int r)
{
    int k = b[r - l];
    r += 1 - (1 << k);
    return __gcd(f[k][l], f[k][r]);
}

int main()
{
    scanf("%d", &n);
    st();
    sort(a, a + n);
    scanf("%d", &m);
    while (m--)
    {
        int x, y;
        scanf("%d%d", &x, &y);
        --x, --y;
        int g = query(x, y);
        int ans = upper_bound(a, a + n, pii(g, y)) - lower_bound(a, a + n, pii(g, x));
        printf("%d\n", y - x + 1 - ans);
    }
    return 0;
}