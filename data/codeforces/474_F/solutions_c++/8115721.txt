#include <cstdio>
#include <map>
#include <vector>
#include <utility>
#define X first
#define Y second
#define MP make_pair
#define REP(i,n) for (int i=1;i<=n;++i)
#define FOR(i,n) for (__typeof(n.begin())i=n.begin();i!=n.end();++i)
using namespace std;

const int MAXN=200020;
map< pair<int,int>,int > mp;
map<int,int> sum;
vector<int> v[MAXN];
int n,m;
int a[MAXN];
int g[MAXN];
int quc[MAXN];
int ll[MAXN],rr[MAXN];
int st[MAXN][20];

int Gcd(int x,int y) {
	if (!y) return x;
	return Gcd(y,x%y);
}

int main() {
	scanf("%d",&n);
	REP(i,n) scanf("%d",&a[i]);
	REP(i,n) st[i][0]=a[i];
	REP(j,16) REP(i,n) if (i+(1<<j)-1<=n)
		st[i][j]=Gcd(st[i][j-1],st[i+(1<<(j-1))][j-1]);
	quc[1]=0;
	for (int i=2,j=1;i<=n;++i) {
		quc[i]=quc[i-1];
		if (i==j+j) {
			++quc[i];
			j+=j;
		}
	}
//	printf("%d %d\n",quc[3],quc[4]);
//	return 0;
	scanf("%d",&m);
	REP(i,m) {
		int l,r;
		scanf("%d%d",&l,&r);
		ll[i]=l; rr[i]=r;
		g[i]=Gcd(st[l][quc[r-l+1]],st[r-(1<<(quc[r-l+1]))+1][quc[r-l+1]]);
		if (l) v[l-1].push_back(g[i]);
		v[r].push_back(g[i]);
	}
	REP(i,n) {
		++sum[a[i]];
		FOR(p,v[i]) mp[MP(i,*p)]=sum[*p];
	}
	REP(i,m) printf("%d\n",rr[i]-ll[i]+1-mp[MP(rr[i],g[i])]+mp[MP(ll[i]-1,g[i])]);
	return 0;
}