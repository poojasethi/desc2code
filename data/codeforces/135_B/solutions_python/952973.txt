
def read_array(convertor=None):
  ret = raw_input().split()
  if convertor: ret = map(convertor, ret)
  return ret



dis = lambda x, y: (y[0]-x[0], y[1]-x[1])


def is_rect(p):
  p = sorted(p)
  dis1 = dis(p[0], p[1])
  dis2 = dis(p[0], p[2])
  dis3 = dis(p[1], p[3])
  dis4 = dis(p[2], p[3])
  #print p
  #print dis1, dis2, dis3, dis4
  #print '==='

  #x = sorted(dis1)
  #y = sorted(dis2)

  #if x != sorted(dis1): return False
  #if x != sorted(dis4): return False
  #if y != sorted(dis2): return False
  #if y != sorted(dis3): return False
  #return True
  return dis1 == dis4 and dis2 == dis3 and dis1[0] * dis2[0] + dis1[1] * dis2[1] == 0


def is_sq(p):
  p = sorted(p)
  dis1 = dis(p[0], p[1])
  dis2 = dis(p[0], p[2])
  dis3 = dis(p[1], p[3])
  dis4 = dis(p[2], p[3])

  #x = sorted(dis1)

  #if x != sorted(dis1): return False
  #if x != sorted(dis2): return False
  #if x != sorted(dis3): return False
  #if x != sorted(dis4): return False
  #return True
  dist_len = lambda pt: pt[0] ** 2 + pt[1] ** 2

  return is_rect(p) and dist_len(dis1) == dist_len(dis2) and dist_len(dis1) == dist_len(dis3) and dist_len(dis1) == dist_len(dis4)


def main():
  points = [tuple(read_array(int)) for _ in range(8)]

  ok = False
  ans_sq = []
  ans_rect = []
  for bt in xrange(1<<8):
    rect = []
    sq = []
    for i in range(8):
      if (1<<i) & bt:
        rect.append(points[i])
      else:
        sq.append(points[i])
    if len(rect) != 4: continue

    if is_rect(rect) and is_sq(sq):
      ok = True
      ans_sq = []
      ans_rect = []
      for i in range(8):
        if (1<<i) & bt:
          ans_rect.append(i+1)
        else:
          ans_sq.append(i+1)



  print ok and 'YES' or 'NO'
  if ok:
    print ans_sq[0], ans_sq[1], ans_sq[2], ans_sq[3]
    print ans_rect[0], ans_rect[1], ans_rect[2], ans_rect[3]


main()
