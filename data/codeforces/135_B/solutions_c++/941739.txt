#include<cstdio>
#include<cstring>
struct p{
	int x,y;
}point[10];
bool vis[10];
int a[10],b[10],flag;
__int64 dis(p c,p d)
{
	return (c.x-d.x)*(c.x-d.x)+(c.y-d.y)*(c.y-d.y);
}
bool rg(int r[])
{
	int i;
	for(i=0;i<4;i++)
	{
		if(dis(point[r[i]],point[r[(i+1)%4]])+
			dis(point[r[(i+1)%4]],point[r[(i+2)%4]])==
			dis(point[r[i]],point[r[(i+2)%4]]))
		continue;
		break;
	}
	if(i<4)return false;
	return true;
}
void lzs(int x)
{
	if(flag)return ;
	int i;
	if(x==8)
	{
		int j=0;
		for(i=4;i<8;i++)
		{
			b[j++]=a[i];
		}
		if(rg(a))
		{
		
			if(dis(point[a[0]],point[a[1]])!=dis(point[a[1]],point[a[2]]))return ;
		}
		else return;
		if(rg(b))
		{
			flag=1;
			puts("YES");
			for(i=0;i<3;i++)printf("%d ",a[i]+1);printf("%d\n",a[i]+1); 
			for(i=0;i<3;i++)printf("%d ",b[i]+1);printf("%d\n",b[i]+1); 
		}
		return ;
	}
	for(i=0;i<8;i++)
	{
		if(!vis[i])
		{
			a[x]=i;
			vis[i]=true;
			lzs(x+1);
			vis[i]=false;
		}
	}
}
int main()
{
	int i;
	flag=0;
	for(i=0;i<8;i++)scanf("%d%d",&point[i].x,&point[i].y);
	lzs(0);
	if(!flag)puts("NO");
	return 0;
}
