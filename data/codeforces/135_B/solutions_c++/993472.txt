#include<iostream>
#include<algorithm>
#include<complex>
#include<cmath>
using namespace std;
typedef complex<double> pt;

int p[8];
pt a[8];
bool test(int j) {
	for(int i=0;i<4;i++) {
		if(fabs(((a[p[j+(i+1)%4]]-a[p[j+i]])*conj(a[p[j+(i+2)%4]]-a[p[j+(i+1)%4]])).real())>1e-9) {
			return false;
		}
	}
	return j || fabs(norm(a[p[j+1]]-a[p[j]])-norm(a[p[j+2]]-a[p[j+1]]))<=1e-9;
}
int main() {
	for(int i=0;i<8;i++) {
		cin>>a[i].real()>>a[i].imag();
		p[i]=i;
	}
	do {
		if(test(0) && test(4)) {
			cout<<"YES\n";
			for(int i=0;i<8;i++) {
				cout<<p[i]+1<<((i%4==3)?'\n':' ');
			}
			return 0;
		}
	} while(next_permutation(p,p+8));
	cout<<"NO";
}
