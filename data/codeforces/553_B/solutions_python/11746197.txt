import itertools

def f(p):
  n = len(p)
  r = []
  u = set()
  for x in range(n-1,-1,-1):
    i = p.index(x)
    if i in u:
      continue
    u.add(i)
    if p[i] == i:
      r.append((i, ))
    else:
      j = p[i]
      c = [i]
      while j != i:
        c.append(j)
        u.add(j)
        j = p[j]
      mi = c.index(max(c))
      c = c[mi:] + c[:mi]
      r.append(tuple(c))
  ans = []
  for c in sorted(r):
    ans.extend(list(c))
  return ans

def g(n):
  for p in itertools.permutations(range(n)):
    if tuple(f(p)) == tuple(p):
      yield tuple(p)


if __name__ == "__main__":
  #print(f([3, 0, 5, 1, 4, 2]))
  #for n in range(1, 7):
  #  print(n, '->')
  #  for v in g(n):
  #    print(v)
  n, k = map(int, raw_input().split())
  d = [0] * n
  d[-1] = 1
  for i in range(n - 2, -1, -1):
    if i == n-2:
      d[i] = 1 + d[i+1]
    else:
      d[i] = d[i+1] + d[i+2]
  ans = list(range(n))
  i = 0
  while i < n:
    if i + 1 >= n or k <= d[i+1]:
      i += 1
    else:
      k -= d[i+1]
      ans[i], ans[i+1] = ans[i+1], ans[i]
      i += 2
  print(' '.join(map(str, [x + 1 for x in ans])))
