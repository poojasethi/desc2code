#include<cstdio>
#include<algorithm>

using namespace std;

const int MAX_N = 100005;
const int INF = -1u / 4;

int n, m;
int par[MAX_N];
int sz[MAX_N];
int cnt[MAX_N];
int dp[MAX_N];

inline int find_par(int x){
  return x == par[x]? x: par[x] = find_par(par[x]);
}

inline bool is_lucky(int x){
  for(; x; x /= 10){
    if(x % 10 != 4 and x % 10 != 7){
      return false;
    }
  }
  return true;
}

int main(){
  scanf("%d %d", &n, &m);
  for(int i = 1; i <= n; i++){
    par[i] = i;
  }
  for(int i = 0; i < m; i++){
    int u, v;
    scanf("%d %d", &u, &v);
    par[find_par(u)] = find_par(v);
  }
  for(int i = 1; i <= n; i++){
    sz[find_par(i)]++;
  }
  for(int i = 1; i <= n; i++){
    cnt[sz[i]]++;
  }
  fill(dp + 1, dp + n + 1, INF);
  dp[0] = -1;
  for(int i = 1; i <= n; i++){
    for(int x = 1; cnt[i]; x *= 2){
      x = min(cnt[i], x);
      cnt[i] -= x;
      int y = i * x;
      for(int j = n - y; j >= 0; j--){
	dp[j + y] = min(dp[j + y], dp[j] + x);
      }
    } 
  }
  int ans = INF;
  for(int i = 4; i <= n; i++){
    if(is_lucky(i)){
      ans = min(ans, dp[i]);
    }
  }
  printf("%d\n", ans == INF? -1: ans);
}
