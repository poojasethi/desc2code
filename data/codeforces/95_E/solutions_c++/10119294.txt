#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;
int fa[100005],f[100005],cnt[100005],c[100005],w[100005],tot;
int dp[100005],q[100005][2],head,tail;
int find(int x) {return fa[x]==x?x:fa[x]=find(fa[x]);}
int check(int x)
{
    while(x>0)
    {
        if(x%10==4||x%10==7) x/=10;
        else return 0;
    }
    return 1;
}
main()
{
    int n,m,s,t,x,y;
    scanf("%d%d",&n,&m);
    for(int i=1;i<=n;i++) fa[i]=i;
    for(int i=1;i<=m;i++)
    {
        scanf("%d%d",&s,&t);
        x=find(s);y=find(t);
        if(x!=y) fa[x]=y;
    }
    for(int i=1;i<=n;i++) f[find(i)]++;
    for(int i=1;i<=n;i++) if(f[i]>0) cnt[f[i]]++;
    for(int i=1;i<=n;i++) if(cnt[i]>0) {w[++tot]=i;c[tot]=cnt[i];}
    for(int i=1;i<=n;i++) dp[i]=1000000;dp[0]=0;
    for(int i=1;i<=tot;i++)
    for(int j=0;j<w[i];j++)
    {
        head=tail=0;
        for(int k=0;k*w[i]+j<=n;k++)
        {
            int low=max(0,k-c[i]);
            while(head!=tail&&q[head][0]<low) head++;
            while(head!=tail&&q[tail-1][1]>=dp[k*w[i]+j]-k) tail--;
            {q[tail][0]=k;q[tail++][1]=dp[k*w[i]+j]-k;}
            dp[k*w[i]+j]=q[head][1]+k;
        }
    }
    int ans=1000000;
    for(int i=1;i<=n;i++) if(check(i)) ans=min(ans,dp[i]);
    if(ans==1000000) printf("-1\n");
    else printf("%d\n",ans-1);

}

 		 	  		    			    			 	     	