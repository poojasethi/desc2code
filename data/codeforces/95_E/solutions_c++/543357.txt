#include <cstdio>
#include <cstring>
#include <algorithm>
#include <set>
#define N 100005
using namespace std;

int n, m, x, y, t, size, hd, tl;
int l[N], q[N], v[N], dp[N], qd[N+N], qn[N+N], u[N], temp[N], ret;

void bd(int x, int y){
	qd[++t]=y, qn[t]=l[x], l[x]=t;
}

void bfs(int x){
	q[0] = x;
	v[x] = 1;
	for (int i=0, j=0; j>=i; i++){
		size++;
		for (int k=l[q[i]]; k; k=qn[k]){
			if (!v[qd[k]]) v[q[++j] = qd[k]] = 1;
		}
	}
}

int isLucky(int x){
	if (!x) return 0;
	while (x > 0){
		int t = x % 10;
		if (t != 4 && t != 7) return 0;
		x /= 10;
	}
	return 1;
}

int main(){

	scanf("%d%d", &n, &m);
	while (m--) scanf("%d%d", &x, &y), bd(x, y), bd(y, x);
	
	m = 0;
	for (int i=1; i<=n; i++){
		if (v[i]) continue;
		size = 0;
		bfs(i);
		u[size]++;
	}
	
	memset(dp, 63, sizeof(dp));
	dp[0] = 0;
	for (int i=1; i<=n; i++){
		if (!u[i]) continue;

		for (int j=0; j<=n; j++) temp[j] = dp[j];
		for (int j=0; j<i; j++){
			hd=0, tl=-1;
			for (int k=j, l=0; k<=n; k+=i, l++){
				while (tl>=hd && temp[k]-l < q[tl]) tl--;
				q[++tl] = temp[k] - l;
				
				dp[k] = q[hd] + l;
				if (l>=u[i] && q[hd] == temp[k-i*u[i]] - (l-u[i])) hd++;
			}
		}
	}
	
	ret = N;
	for (int i=1; i<=n; i++){
		if (isLucky(i) && dp[i]<ret) ret = dp[i];
	}
	
	if (ret < N) printf("%d\n", ret-1);
	else printf("-1\n");

	return 0;
}
