#include<cstdio>
#include<vector>
#include<cstring>
#include<queue>
using namespace std;
const int N=100001;
const int INF=0x7f7f7f7f;
int d[N],dp[N];
bool vis[N];
queue<int>q;
vector<int>edg[N];
int min(int a,int b){return a<b?a:b;}
bool f(int n)
{
	while(n)
	{
		if(n%10!=4&&n%10!=7)
			return 0;
		n/=10;
	}
	return 1;
}
int main()
{
	int i,j,k,n,m,a,b,s,ans;
	scanf("%d%d",&n,&m);
	for(i=1;i<=m;i++)
	{
		scanf("%d%d",&a,&b);
		edg[a].push_back(b);
		edg[b].push_back(a);
	}
	for(i=1;i<=n;i++)
	{
		if(vis[i])continue;
		q.push(i);
		vis[i]=1;
		s=0;
		while(!q.empty())
		{
			a=q.front();
			q.pop();
			s++;
			for(j=0;j<edg[a].size();j++)
			{
				b=edg[a][j];
				if(vis[b])continue;
				q.push(b);
				vis[b]=1;
			}
		}
		d[s]++;
	}
	memset(dp,127,sizeof(dp));
	dp[0]=0;
	for(i=1;i<=n;i++)
	{
		if(!d[i])continue;
		k=1;
		while(d[i])
		{
			k=k<d[i]?k:d[i];
			for(j=n;j>=k*i;j--)
				dp[j]=min(dp[j],dp[j-k*i]+k);
			d[i]-=k;
			k<<=1;
		}
	}
	for(ans=INF,i=1;i<=n;i++)
	{
		if(f(i))ans=min(ans,dp[i]);
	}
	if(ans==INF)printf("%d\n",-1);
	else printf("%d\n",ans-1);
	return 0;
}
							   		 		     	  	 	