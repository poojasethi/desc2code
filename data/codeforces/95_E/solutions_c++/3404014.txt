#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

using namespace std;

const int maxn=100010;
const int INF=0x3f3f3f3f;

int n,m,f[maxn],z[maxn];

struct rec
{
	int num,v;
	rec(){}
	rec(int a,int b)
	{
		v=a;num=b;
	}
}y[maxn];

int getf(int now)
{
	if (now==f[now]) return now;
	else return f[now]=getf(f[now]);
}

bool check(int v)
{
	while (v)
	{
		if (v%10!=4 && v%10!=7) return false;
		v/=10;
	}
	return true;
}

int main()
{
	scanf("%d%d",&n,&m);
	int nn=n;
	for (int a=1;a<=n;a++)
		f[a]=a;
	for (int a=1;a<=m;a++)
	{
		int s,e;
		scanf("%d%d",&s,&e);
		f[getf(s)]=getf(e);
	}
	for (int a=1;a<=n;a++)
		z[getf(a)]++;
	int cnt=0;
	for (int a=1;a<=n;a++)
		if (z[a]) z[++cnt]=z[a];
	n=cnt;
	sort(z+1,z+n+1);
	cnt=0;
	for (int a=1;a<=n;)
	{
		int b=a;
		while (b<=n && z[b]==z[a])
			b++;
		y[++cnt]=rec(z[a],b-a);
		a=b;
	}
	n=cnt;
	memset(f,0x3f,sizeof(f));
	f[0]=0;
	for (int a=1;a<=n;a++)
	{
		for (int b=1;b<=y[a].num;y[a].num-=b,b<<=1)
			for (int c=nn;c>=b*y[a].v;c--)
				f[c]=min(f[c],f[c-b*y[a].v]+b);
		if (y[a].num)
		{
			for (int c=nn;c>=y[a].num*y[a].v;c--)
				f[c]=min(f[c],f[c-y[a].num*y[a].v]+y[a].num);
		}
	}
	int ans=INF;
	for (int a=4;a<=nn;a++)
		if (check(a)) ans=min(ans,f[a]);
	if (ans==INF) printf("-1\n");
	else printf("%d\n",ans-1);

	return 0;
}
