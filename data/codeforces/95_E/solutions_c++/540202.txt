#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
using namespace std;
const int V=100100;
const int oo=100000000;
int set[V],dp[V],nu[V],ct[V];
int find(int x)
{
	if(x!=set[x])set[x]=find(set[x]);
	return set[x];
}
void U(int x,int y)
{
	int p=find(x);
	set[p]=y;
}
int n,m,i,j,k,x,y,ans,te,top,tail,q[V],id[V];
int main()
{
	while(~scanf("%d%d",&n,&m))
	{
		for(i=1;i<=n;i++)set[i]=i;
		for(i=0;i<m;i++)
		{
			scanf("%d%d",&x,&y);
			if(find(x)!=find(y))U(x,y);
		}
		memset(nu,0,sizeof(nu));
		for(i=1;i<=n;i++)nu[find(i)]++;
		memset(ct,0,sizeof(ct));
		for(i=1;i<=n;i++)ct[nu[i]]++;
		for(i=0;i<=n;i++)dp[i]=oo;
		dp[0]=0;
		for(i=1;i<=n;i++)
		{
	//		printf("%d %d\n",i,ct[i]);
			if(ct[i]==0)continue;
			if(ct[i]==1)
			{
				for(j=n;j>=i;j--)
				dp[j]=min(dp[j],dp[j-i]+1);
				continue;
			}
			for(j=0;j<=n;j++)id[j]=0;
			for(j=i;j<=n;j++)
			{
				if(dp[j]>dp[j-i]+1&&id[j-i]<ct[i])
				{
					dp[j]=dp[j-i]+1;
					id[j]=id[j-i]+1;
				}
				else id[j]=1;
			}
		}
		ans=oo;
		for(i=1;i<=5;i++)
		{
			for(j=0;j<(1<<i);j++)
			{
				te=0;
				for(k=0;k<i;k++)
				{
					te*=10;
					if((j&(1<<k)))te+=4;
					else te+=7;
				}
				if(te<=n)ans=min(ans,dp[te]);
			}
		}
		if(ans>=oo)puts("-1");
		else printf("%d\n",ans-1);
	}
}
  	 	 		  	   			 	 	 	 		