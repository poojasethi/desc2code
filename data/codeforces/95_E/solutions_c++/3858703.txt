#include <iostream>

using namespace std;

#define f(i,a,b) for(int i=a;i<b;i++)
#define fr(i,n)  f(i,0,n)

int n, m, p[100005], sz[100005], cnt[100005], dp[100005], a, b;
int root(int x){
	if (p[x] == x) return x;
	else return p[x] = root(p[x]);
}

int W[100005], V[100005], N = 0;
int split(int v, int w){
	int m = 1;
	while((m<<1) <= w){
		V[N] = m*v;
		W[N++] = m;
		m <<= 1;
	}
	V[N] = (w - m + 1)*v;
	W[N++] = (w - m + 1);
}

bool lucky(int x){
	while (x){
		if (x%10 != 4 && x%10 != 7) return false;
		x /= 10;
	}
	return true;
}

int main(){
	cin>>n>>m;
	fr(i, n+1){
		p[i] = i;
		sz[i] = 0;
		cnt[i] = 0;
		dp[i] = n+1;
	}
	fr(i, m){
		cin>>a>>b;
		p[root(a-1)] = root(b-1);
	}
	fr(i, n) sz[root(i)]++;
	fr(i, n) if (sz[i]) cnt[sz[i]]++;
	//fr(i, n+1) cout<<i<<" : "<<sz[i]<<endl;
	fr(i, n+1) if (cnt[i]) split(i, cnt[i]);
	dp[0] = 0;
	fr(i, N) for (int j = n; j >= V[i]; j--) dp[j] = min(dp[j], dp[j - V[i]] + W[i]);
	int res = n + 1;
	f(i, 1, n+1) if (lucky(i)) res = min(res, dp[i]);
	if (res < n+1) cout<<res-1<<endl;
	else cout<<-1<<endl;
}