#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<queue>
#include<map>
#include<vector>
#include<algorithm>
#include<cmath>
using namespace std;

const int N = 100100;

int n, m, f[N], c[N], d[N];

int ff(int x) {
	if (x != f[x])
		f[x] = ff(f[x]);
	return f[x];
}

bool luck(int i) {
	if (i == 0) return false;
	for (; i > 0; i /= 10)
		if (i % 10 != 4 && i % 10 != 7)
			return false;
	return true;
}

int main() {
	cin >> n >> m;
	for (int i = 1; i <= n; i++)
		f[i] = i;
	for (; m--; ) {
		int a, b;
		cin >> a >> b;
		a = ff(a);
		b = ff(b);
		if (a != b)
			f[a] = b;
	}
	for (int i = 1; i <= n; i++)
		c[ff(i)]++;
	vector<int> w, q;
	for (int i = 1; i <= n; i++) 
		if (c[i])
			d[c[i]]++;
	for (int i = 1; i <= n; i++)
		if (d[i]) {
			for (; d[i] > 1; d[i] -= d[i] / 2) {
				w.push_back(d[i] / 2 * i);
				q.push_back(d[i] / 2);
			}
			if (d[i]) {
				w.push_back(d[i] * i);
				q.push_back(d[i]);
			}
		}
	vector<int> z;
	for (int i = n; i >= 0; i--)
		if (luck(i))
			z.push_back(i);
	memset(f, 31, sizeof(f));
	int inf = f[0] - 1;
	f[0] = -1;
	int ans = inf;
	for (int i = 0; i < int(w.size()); i++) {
		for (int j = n; j >= w[i]; j--)
			f[j] = min(f[j], f[j - w[i]] + q[i]);
	}
	for (int j = 0; j < int(z.size()); j++)
		ans = min(ans, f[z[j]]);
	if (ans >= inf) puts("-1");
	else cout << ans << endl;
}

		 	 	  			   			  	 	 	 	