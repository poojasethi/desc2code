
def proceed_items(items):
    result = -1

    current_items = set()
    in_subset_now = False
    current_subset_start = 1
    subsets = []

    for position, item in enumerate(items):
        if not in_subset_now:
            in_subset_now = True
            current_items.clear()
            current_items.add(item)
            current_subset_start = position + 1

        elif item in current_items:
            in_subset_now = False
            subset = [current_subset_start, position + 1]
            subsets.append(subset)

        else:
            current_items.add(item)

    if subsets:
        # Force last subset to cover rest of the items
        last_subset = subsets[-1]
        last_subset[-1] = len(items)

        print len(subsets)
        for start, finish in subsets:
            print '{0} {1}'.format(start, finish)

        return

    print result


if __name__ == '__main__':
    raw_input()  # Skip number of items

    user_input = raw_input()
    parsed_input = user_input.split()
    parsed_input = map(int, parsed_input)

    proceed_items(parsed_input)
