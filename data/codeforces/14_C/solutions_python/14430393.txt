from collections import defaultdict
segments = []
next_of = defaultdict(list)
for _ in xrange(4):
	numbers = map(int,raw_input().split()[:4])
	a,b = tuple(numbers[:2]), tuple(numbers[-2:])
	segment = tuple(sorted([a,b]))
	next_of[a].append(b)
	next_of[b].append(a)
	segments.append(segment)

a,b,c,d = segments
vertices = set(a+b+c+d)
vertices = sorted(list(vertices))

def move(f): 
	def _func(p):
		if p is None: return None
		for q in next_of[p]:
			if f(p,q):
				return q
		return None 
	return _func

up = move(lambda p,q: q[0] == p[0] and q[1] > p[1])
down = move(lambda p,q: q[0] == p[0] and q[1] < p[1])
left = move(lambda p,q: q[1] == p[1] and q[0] < p[0])
right = move(lambda p,q: q[1] == p[1] and q[0] > p[0])

if len(vertices) == 4 and left(down(right(up(vertices[0])))):
	print 'YES'
else:
	print 'NO'
