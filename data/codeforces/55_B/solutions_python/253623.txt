

stdin_flag=1
if not stdin_flag:
  read_line_index=0
  testcasefilename="test.txt"
  Stestcase=open(testcasefilename).read()
  read_line_datas=Stestcase.split("\n")


def debugs(s):
  if not stdin_flag:
    print ";;;",s

def puts(s):
  import sys
  sys.stdout.write(str(s))

#####################################
######################################

def read_line():
  global read_line_index
  if stdin_flag:
    return raw_input()
  else:
    s=read_line_datas[read_line_index]
    read_line_index+=1
    return s

def answer():
  if stdin_flag:
    return solve()
  else:
    while read_line_proceed():
      solve()
      

def read_line_proceed():
  global read_line_index
  print"##################"
  while 1:
    if read_line_index>= len (read_line_datas ):
      return False
    if read_line_datas[read_line_index]=="%%%":
      read_line_index+=1
      return True
    read_line_index+=1


def readint():
  return int (read_line() )


def readints():
  return map(int, read_line().split(" "))

def reads():
  return read_line()




###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################

def compute(ss):
  m={}
  for s in ss:
    if s==" ":continue
    if s in m:
      m[s]+=1
    else:
      m[s]=1
  return m

  pass

def pos(s):
  return (ord(s[0])-ord("a") , int(s[1])-1)

def m2p(n):
  s=1
  while s<=n:s*=2
  return s/2

def check(x1,x2):
  if x1 not in pow2 and x2 not in pow2:
    return False
  if not 0.8*x1<=x2<=1.25*x1:
    return False
  if n1<x1 or n2<x2:
    return False
  return True

def divs(n):
  return[i for i in xrange(1,n+1) if n%i==0]

def news(xx,op):
  m=[]
  l=len(xx)
  for i in xrange(l):
    for j in xrange(i+1,l):
      if op=="+":
        nk=xx[i]+xx[j]
      else:
        nk=xx[i]*xx[j]
      m.append((nk,)+tuple(xx[k] for k in xrange(l) if k!=i and k!=j) )
  return m

def solve():
  x=tuple(readints())
  ops=reads().split()
  m=[x]
  for op in ops:
    nm=[]
    for xx in m:
      nm.extend(news(xx,op))
    m=nm
  print min(xx[0] for xx in m)



def test():
  pass

test()
answer()
