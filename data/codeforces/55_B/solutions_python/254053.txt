lst = [0] * 10
L = [0] * 10
ans = 10000000000000


def Min(a, b):
    if a < b:
         return a
    return b
    
    
def dfs(item, ch, d):
    global L
    global ans
    LEN = len(item)
    if LEN == 0:
        num = [0] * 3
        if ch[0] == '+':
            num[0] = L[0] + L[1]
        else:
            num[0] = L[0] * L[1]
        num[1] = L[2]
        num[2] = L[3]
        for i in range(3):
            for j in range(i + 1, 3):
                res1 = 0
                if ch[1] == '+':
                    res1 = num[i] + num[j]
                else:
                    res1 = num[i] * num[j]
                for k in range(3):
                    if k != i and k != j:
                        if ch[2] == '+':
                            ans = Min(ans, res1 + num[k])
                        else:
                            ans = Min(ans, res1 * num[k])
        return 
        
    for i in range(LEN):
        r = [] 
        for j in range(LEN):
            if j != i:
                r.append(item[j])
        L[d+1] = item[i]
        dfs(r, ch, d + 1)
        
def main():
    
    lst = map(int, raw_input().split())
    ch = raw_input().split()

    for i in range(4):
        r = []
        for j in range(4):
            if j != i:
                r.append(lst[j])
        L[0] = lst[i]
        dfs(r, ch, 0)
    
    print ans
    return 0

if __name__ == '__main__': main()
