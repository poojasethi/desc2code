[n, k, p, x, y]= map(int,raw_input().split(' '))
if k > 0:
	known_scores = map(int,raw_input().split(' '))
else:
	known_scores = []
remain_sum = x - sum(known_scores)

gt_median = filter(lambda score: score > y, known_scores)
lt_median = filter(lambda score: score < y, known_scores)
eq_median = filter(lambda score: score == y, known_scores)
 
# print lt_median, eq_median, gt_median

if len(lt_median) > n / 2:
	print -1
elif len(gt_median) > n / 2:
	num_one = n - k
	if num_one > remain_sum:
		print -1
	else:
		print ' '.join(map(str, [1]  * num_one))
else:
	num_one = n - len(lt_median) - max(n/2+1, len(eq_median)+len(gt_median))
	num_median = n - k - num_one
	# print num_one, num_median
	if num_one + num_median * y > remain_sum:
		print -1
	else:
		solution = [1]  * num_one
		temp = [y] * num_median
		solution.extend(temp)
		print ' '.join(map(str, solution))