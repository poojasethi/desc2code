#include <cstring>
#include <cstdio>
using namespace std;
const int mod = 1000000007;
const int N = 1005;
int dp[N][N * 2];
int bit[N];
int k;
int dfs(int i, int j, int e)
{
    if (i == 0)
        return j == 0;
    if (!e && dp[i][j] != -1)
        return dp[i][j];
    int u = e ? bit[i] : 9;
    int num = 0;
    for (int v = 0; v <= u; v++)
    {
        int ndist = j == 0 ? 0 : j + 1;
        if (v == 4 || v == 7)
        {
            if (j <= k)
                ndist = 0;
            else
                ndist = 1;
        }
        num = (num + dfs(i - 1, ndist, e && v == u)) % mod;
    }
    if (!e)
        dp[i][j] = num;
    return num;
}
int cal(char str[])
{
    int pos = 0;
    int len = strlen(str);
    for (int i = len - 1; i >= 0; i--)
        bit[++pos] = str[i] - '0';
    return dfs(pos, k + 2, 1);
}
bool check(char str[])
{
    int dist = k + 1;
    for (int i = 0; str[i]; i++)
    {
        if (dist == 0) break;
        if (str[i] == '4' || str[i] == '7')
        {
            if (dist <= k) dist = 0;
            else dist = 1;
        }
        else dist++;
    }
    return dist == 0;
}
int main()
{
    //freopen("in.txt", "r", stdin);

    memset(dp, -1, sizeof(dp));
    int T;
    scanf("%d%d",&T,&k);
    char s1[N], s2[N];
    while (T--)
    {
        scanf("%s%s", s1, s2);
        int b = cal(s2);
        int a = cal(s1);
        if (check(s1)) a--;
        b = ((b - a) % mod + mod) % mod;
        printf("%d\n",b);
    }
}

	 	  			 	 		   			 		    	 	