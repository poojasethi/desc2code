#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li       	long long int
#define rep(i,to)	for(li i=0;i<((li)(to));i++)
#define pb       	push_back
#define sz(v)    	((li)v.size())
#define bit(n)   	(1ll<<(li)(n))


#define MAX 1005ll
li dp[MAX][MAX][2],k,mod=1000000007ll;

li recur(li pos,li dis,li ok){
	dis=min(k,dis);
	li &res=dp[pos][dis][ok];
	if(res!=-1) return res;
	if(pos==0) return res=ok;
	return res=(recur(pos-1,dis+1,ok)*8+recur(pos-1,0,ok|(dis<k))*2)%mod;
}

li cal(string str,bool include){
	li dis=bit(60),ok=0,res=0;
	rep(i,sz(str)){
		for(li j=0;j<str[i]-'0';j++){
			if(j!=4 && j!=7) res+=recur(sz(str)-1-i,dis+1,ok);
			else res+=recur(sz(str)-1-i,0,ok|(dis<k));
		}
		if(str[i]=='4' || str[i]=='7'){ ok|=(dis<k); dis=0; }
		else dis++;
	}
	if(include) res+=ok;
	return res%mod;
}

int main(){
	memset(dp,-1,sizeof(dp));
	li n;
	scanf("%I64d%I64d",&n,&k);
	rep(i,n){
		char low[MAX],high[MAX];
		scanf("%s%s",low,high);
		cout<<(cal(high,true)-cal(low,false)+mod)%mod<<endl;
	}
}
