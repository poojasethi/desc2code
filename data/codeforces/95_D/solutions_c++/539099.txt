#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())

#define MAX 4005
li mod=1000000007;
li k;
li dp[2][MAX][MAX];
li recur(li ok,li rem,li near){
	li &res=dp[ok][rem][near];
	if(res!=-1) return res;
	if(rem==0) return res=ok;
	res=0;
	rep(i,10){
		if(i==4 || i==7) res=(res+recur(ok|near<=k,rem-1,1))%mod;
		else res=(res+recur(ok,rem-1,near+1))%mod;
	}
	res%=mod;
	return res;
}

li cal(string base){
	li res=0,near=k+1,ok=0;
	rep(i,sz(base)){
		rep(j,base[i]-'0'){
			if(j==4 || j==7) res=(res+recur(ok|near<=k,sz(base)-1-i,1))%mod;
			else res=(res+recur(ok,sz(base)-1-i,near+1))%mod;
		}
		if(base[i]=='4' || base[i]=='7'){
			if(near<=k) ok=1;
			near=1;
		}else{
			near=(near+1);
		}
	}
	res%=mod;
	return res;
}

li check(string base){
	li res=0;
	li before=-k-1;
	rep(i,sz(base))if(base[i]=='4' || base[i]=='7'){
		if(i-before<=k) res=1;
		before=i;
	}
	return res;
}
	

int main(){
	rep(i,2)rep(j,MAX)rep(k,MAX) dp[i][j][k]=-1;
	li t;
	cin>>t>>k;
	while(t--){
		string l;
		cin>>l;
		li res0=cal(l);
		cin>>l;
		li res1=cal(l);
		cout<<(((res1-res0+check(l))%mod+mod)%mod)<<endl;
	}
}
