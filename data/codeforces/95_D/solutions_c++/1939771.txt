#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const long long p=1000000007;
int n,m,q,d;
long long t[1001],s[1001],g[1001],f[1001][1001];
char s1[1005],s2[1005];

long long cal(int x,int y,bool flag)
{
  if(x==0)
    return 0;
  if((flag)&&(f[x][y]>-1))
    return f[x][y];
  long long res=0;
  for(int z=0;z<10;++z)
  {
    if((!flag)&&(z>g[x]))
      break;
    if((z==4)||(z==7))
    {
      if(y>0)
      {
        if((flag)||(z<g[x]))
          res=(res+t[x-1])%p;
        else
          res=(res+s[x-1])%p;
      }
      else
        res=(res+cal(x-1,1,flag||(z<g[x])))%p;
    }
    else if((y>0)&&(y<d))
      res=(res+cal(x-1,y+1,flag||(z<g[x])))%p;
    else
      res=(res+cal(x-1,0,flag||(z<g[x])))%p;
  }
  if(flag)
    f[x][y]=res;
  return res;
}

int main(void)
{
  scanf("%d %d",&q,&d);
  memset(f,-1,sizeof(f));
  t[0]=1;
  s[0]=1;
  for(int i=1;i<=1000;++i)
    t[i]=t[i-1]*10%p;
  for(int i=1;i<=q;++i)
  {
    scanf("%s %s",s1+1,s2+1);
    n=(int)strlen(s1+1);
    reverse(s1+1,s1+n+1);
    m=(int)strlen(s2+1);
    reverse(s2+1,s2+m+1);
    --s1[1];
    for(int i=1;i<=n;++i)
    {
      if(s1[i]>='0')
        break;
      s1[i]='9';
      --s1[i+1];
    }
    if(s1[n]=='0')
      --n;
    for(int i=1;i<=n;++i)
    {
      g[i]=s1[i]-'0';
      s[i]=(s[i-1]+g[i]*t[i-1])%p;
    }
    long long l=cal(n,0,false);
    for(int i=1;i<=m;++i)
    {
      g[i]=s2[i]-'0';
      s[i]=(s[i-1]+g[i]*t[i-1])%p;
    }
    long long r=cal(m,0,false);
    printf("%I64d\n",(r-l+p)%p);
  }
  return 0;
}