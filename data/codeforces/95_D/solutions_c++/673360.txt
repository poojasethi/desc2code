#include <iostream>
#include <fstream>
#include <algorithm>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iomanip>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <sstream>
#include <string>
#include <vector>
using namespace std;

#define EPS 1e-9
#define INF 1e9
#define MOD 1000000007LL
#define P complex<double>
#define fir first
#define iss istringstream
#define ite iterator
#define ll long long
#define mp make_pair
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<n;i++)
#define pi pair<int,int>
#define pb push_back
#define sec second
#define sz size()
#define vi vector<int>
#define vc vector
#define vs vector<string>

int t,k,flag=1;
ll dp[1002][2002][2];
string l,r;

ll c(int dig,int dis,int ok){
	ll& res=dp[dig][dis][ok];
	if(res>-1)return dp[dig][dis][ok];
	if(!dig)return ok;
	return res=(c(dig-1,1,ok||dis<=k)*2+c(dig-1,dis+1,ok)*8)%MOD;
}

ll f(int dig,int dis,int ok){
	int s=r.sz;
	if(dig==s)return 0;
	ll res=0;
	rep(i,r[dig]-'0'+1){
		if(i==r[dig]-'0'&&!(dig==s-1&&flag))continue;
		if(i==4||i==7){
			res=(res+c(s-dig-1,1,ok||dis<=k))%MOD;
		}
		else res=(res+c(s-dig-1,dis+1,ok))%MOD;
	}
	if(r[dig]=='4'||r[dig]=='7')res=(res+f(dig+1,1,ok||dis<=k))%MOD;
	else res=(res+f(dig+1,dis+1,ok))%MOD;
	return res;
}

int main(){
	memset(dp,-1,sizeof(dp));
	cin>>t>>k;
	rep(i,t){
		flag=1;
		cin>>l>>r;
		int a=f(0,k+1,0);
		r=l,flag=0;
		cout<<(MOD+a-f(0,k+1,0))%MOD<<endl;
	}
}
