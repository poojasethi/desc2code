#include <bits/stdc++.h>

using namespace std;
const int mod = 1e9 + 7;
const int maxn = 1e3 + 15;
int Case,K,dp[maxn][maxn][2],len;
char str[maxn];

int dfs(int x,int y,int z,int f){
	if(x==0) return (z==1);
	if(f&&~dp[x][y][z]) return dp[x][y][z];
	int ed = f ? 9 : str[x] - '0' , res = 0;
	for(int i = 0 ; i <= ed ; ++ i){
		int newf = f | ( i < ed );
		if(z==1) res += dfs(x-1,0,1,newf);
		else if(i==4||i==7){
			if(y<=K) res+= dfs(x-1,0,1,newf);
			else res += dfs(x-1,1,z,newf);
		}else{
			int newy = min( y + 1 , 1002 );
			res += dfs( x - 1 , newy , z , newf );
		}
		if(res >= mod) res -= mod;
	}
    if(f) dp[x][y][z] = res;
    return res;
}

int solve(){
	scanf("%s",str + 1);
	len = strlen( str + 1 );
	reverse( str + 1 , str + 1 + len );
	return dfs( len , 1002 , 0 , 0 );
}

int solve_str(){
	int pre = -1;
	for(int i = 1 ; i <= len ; ++ i){
		if(str[i]=='4'||str[i]=='7'){
			if(i-pre<=K&&~pre) return 1;
			else pre = i;
		}
	}
	return 0;
}

int main(int argc,char *argv[]){
	scanf("%d%d",&Case,&K);
	memset(dp,-1,sizeof(dp));
	while(Case--){
		int Lans = solve();
		int Rans = solve_str();
		Rans += solve();
		printf("%d\n", ( Rans - Lans + mod ) % mod);
	}
	return 0;
}
 	  		  	  		 			 		   	   	