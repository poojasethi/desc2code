#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li       	long long int
#define rep(i,to)	for(li i=0;i<((li)(to));i++)
#define pb       	push_back
#define sz(v)    	((li)v.size())
#define bit(n)   	(1ll<<(li)(n))


#define MAX 1005
li dp[2][MAX][MAX];
li mod=1000000007;
li k;

li recur(li ok,li pos,li dis){
	dis=min(dis,MAX-1ll);
	li &res=dp[ok][pos][dis];
	if(res!=-1) return res;
	if(pos==0) return res=ok;
	return res=(recur(ok,pos-1,dis+1)*8+recur(ok|(dis<=k),pos-1,1)*2)%mod;
}

li cal(string str,bool include){
	li res=0,dis=MAX,ok=0;
	rep(i,sz(str)){
		for(li j=0;j<str[i]-'0';j++){
			if(j!=4 && j!=7) res=(res+recur(ok,sz(str)-i-1,dis+1))%mod;
			else res=(res+recur(ok|(dis<=k),sz(str)-i-1,1))%mod;
		}
		if((str[i]=='4' || str[i]=='7') && dis<=k) ok=1;
		dis=(str[i]=='4' || str[i]=='7')?1:(dis+1);
	}
	if(include) res=(res+ok)%mod;
	return res;
}

int main(){
	memset(dp,-1,sizeof(dp));
	li n;
	cin>>n>>k;
	rep(i,n){
		string low,high;
		cin>>low>>high;
		cout<<(cal(high,true)-cal(low,false)+mod)%mod<<endl;
	}
}
