#include"stdio.h"
#include"string.h"
#include"algorithm"
#include"queue"
#include"map"
using namespace std;
const long long mod=1000000007;
char s[1243];
bool vis[1234][2234][2];
long long dp[1234][2234][2];
int n,k;
long long dfs(int pos,int st,int last,int ha)
{
//	printf("ttt %d %d %d %d\n",pos,st,last,ha);
	if(pos<0)
	return ha==1;
	if(vis[pos][last][ha]&&st)
	return dp[pos][last][ha];
	if(st)
	vis[pos][last][ha]=1;
	int u=st?9:s[pos]-'0';
	int ans=0;
	for(int i=0;i<=u;i++)
	{
	//	if(i<[i]-'9')
		if(i==4||i==7)
		{
			//printf("%d %d\n",last,pos);
			if(last-pos<=k)
			ans=(ans+dfs(pos-1,st|i<s[pos]-'0',pos,1))%mod;
			else ans=(ans+dfs(pos-1,st|i<s[pos]-'0',pos,ha))%mod;
		} 
		else ans=(ans+dfs(pos-1,st|i<s[pos]-'0',last,ha))%mod;
	}
//	printf("%d %d %d %d %d %d\n",pos,st,last,ha,ans,k);
	if(st)
	dp[pos][last][ha]=ans;
	return ans;
}
int main()
{
    //int n,k;
    //	freopen("1.in","r",stdin);
	//freopen("2.out","w",stdout);
    scanf("%d %d",&n,&k);
    for(int i=0;i<n;i++)
    {
    	memset(s,0,sizeof(s));
    	scanf("%s",s);
    	int l=strlen(s);
    	reverse(s,s+l);
    	if(l==1&&s[0]=='0')
    	goto st;
    	for(int i=0;i<l;i++)
    	if(s[i]>='0')
    	{
	    	s[i]-=1;
	    	break;
	    }
		else
	    {
    		s[i]='9';
    	}
    	while(l&&s[l-1]=='0')
    	l--;
    	s[l]=0;
    	//puts(s);
    	st:;
    	long long  d1=dfs(l-1,0,2200,0);
   		memset(s,0,sizeof(s));
   		scanf("%s",s);
    	l=strlen(s);
    	reverse(s,s+l);
    	//puts("a");
    	long long  d2=dfs(l-1,0,2200,0);
    	printf("%I64d\n",(d2-d1+mod)%mod);
    }
	return 0;
}
	  	 	 		  				   			 	   	