#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <bitset>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li       	long long int
#define rep(i,to)	for(li i=0;i<((li)(to));i++)
#define pb       	push_back
#define sz(v)    	((li)v.size())
#define bit(n)   	(1ll<<(li)(n))

#define MAX 1005ll
li mod=1000000007;
li dp[2][2][MAX][MAX];
li num[MAX];
li n,k;

li recur(li full,li ok,li pos,li before){
	if(pos==-1) return (ok)?1:0;
	li &res=dp[full][ok][pos][(full)?0:before];
	if(res!=-1) return res;
	res=0;
	
	for(li i=0;i<10;i++){
		if(full && num[pos]<i) continue;
		bool fulled=full&(i==num[pos]);
		if(i!=4 && i!=7) res=(res+recur(fulled,ok,pos-1,min(MAX-1,before+1)))%mod;
		else res=(res+recur(fulled,ok|(before<k),pos-1,0))%mod;
	}
	return res;
}

li check(string str){
	li bef=-bit(60);
	rep(i,sz(str))if(str[i]=='4' || str[i]=='7'){
		if(i-bef<=k) return 1;
		bef=i;
	}
	return 0;
}

li cal(string str){
	rep(i,MAX) num[i]=0;
	rep(i,sz(str)) num[i]=str[sz(str)-i-1]-'0';
	rep(i,2)rep(j,MAX) dp[1][i][j][0]=-1;
	return recur(1,0,sz(str),MAX-1);
}

int main(){
	cin>>n>>k;
	memset(dp,-1,sizeof(dp));
	rep(i,n){
		string s0,s1;
		cin>>s0>>s1;
		cout<<(cal(s1)-cal(s0)+check(s0)+mod)%mod<<endl;
	}
}
