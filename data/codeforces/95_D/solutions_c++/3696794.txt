#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#define MOD 1000000007
using namespace std;
typedef long long LL;
int const N = 2010;
int ln,k;
char bitl[N],bitr[N];
LL pow10[N],dp[N][N];
void pre()
{
     pow10[0]=1;
     for(int i=1;i<=1010;i++)pow10[i]=(pow10[i-1]*10)%MOD;
}
LL getsum1(int t,int limit,int flag,char b[])
{
   if(t==ln)
   {
       return (flag==0);
   }
   int up=(limit?(b[t]-'0'):9);
//   if(!limit&&flag)
//   {
//       //cout<<pow10[ln-t]<<endl;system("pause");
//       return pow10[ln-t];
//   }
   if(!limit&&dp[ln-t][flag]!=-1)return dp[ln-t][flag];
   LL ans=0;
   for(int i=0;i<=up;i++)
   {

       int f=(flag==0?0:flag+1);
       if((i==4||i==7))
       {
          if(flag<=k)f=0;
          else f=1;
       }
       ans=(ans+getsum1(t+1,limit&&i==up,f,b))%MOD;
   }
   if(!limit&&dp[ln-t][flag]==-1)dp[ln-t][flag]=ans;
   return ans;
}
int main()
{
    int n;
    pre();
    memset(dp,-1,sizeof(dp));
    scanf("%d %d",&n,&k);
    for(int i=0;i<n;i++)
    {
        scanf("%s",bitl);
        ln=strlen(bitl);
        int j=0;
        while(bitl[ln-j-1]<'1')bitl[ln-j-1]='9',j++;
        bitl[ln-j-1]=bitl[ln-j-1]-1;
        for(j=0;bitl[j]=='0';j++);
        //printf("%s",bitl+j);system("pause");
        LL ans1=getsum1(j,1,k+2,bitl);
        scanf("%s",bitr);
        ln=strlen(bitr);
        LL ans2=getsum1(0,1,k+2,bitr);
        printf("%I64d\n",((ans2-ans1)%MOD+MOD)%MOD);
    }
    return 0;
}
