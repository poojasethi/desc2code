#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li       	long long int
#define rep(i,to)	for(li i=0;i<((li)(to));i++)
#define pb       	push_back
#define sz(v)    	((li)v.size())
#define bit(n)   	(1ll<<(li)(n))


#define MAX 1005
string str;
li n,k,mod=1000000007;
li dp[2][MAX][MAX][2];

li recur(li full,li pos,li dis,li ok){
	dis=min(MAX-1ll,dis);
	li &res=dp[full][pos][full?0:dis][ok];
	if(res!=-1) return res;
	if(pos==0) return res=ok;
	res=0;
	if(!full){
		res=(res+2*recur(full,pos-1,1,ok|(dis<=k)))%mod;
		res=(res+8*recur(full,pos-1,dis+1,ok))%mod;
		return res;
	}
	for(li i=0;i<=str[sz(str)-pos]-'0';i++){
		bool flag=(i==str[sz(str)-pos]-'0');
		if(i!=4 && i!=7) res=(res+recur(flag,pos-1,dis+1,ok))%mod;
		else res=(res+recur(flag,pos-1,1,ok|(dis<=k)))%mod;
	}
	return res;
}

li cal(string s){
	str=s;
	rep(i,MAX)rep(j,2) dp[1][i][0][j]=-1;
	return recur(1,sz(str),MAX,0);
}

li check(string s){
	li bef=-bit(60);
	rep(i,sz(s))if(s[i]=='4' || s[i]=='7'){
		if(i-bef<=k) return 1;
		bef=i;
	}
	return 0;
}

int main(){
	memset(dp,-1,sizeof(dp));
	cin>>n>>k;
	rep(i,n){
		string low,high;
		cin>>low>>high;
		cout<<((cal(high)-cal(low)+check(low))%mod+mod)%mod<<endl;
	}
}
