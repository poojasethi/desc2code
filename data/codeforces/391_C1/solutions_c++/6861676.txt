/*
ID: allen.c1
PROG: 391c
LANG: C++
 */
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<set>
#include<utility>
#include<cstring>
#include<stack>
#include<queue>

using namespace std;

typedef pair<int, int> pii;
typedef pair<int, pii> edge;
const int maxn = 17;
typedef struct {
	int pt, ef, flag, beat;

} st;
int bit;
int n, k;
st mat[maxn];
st tp[maxn];
bool comp(const st &a, const st &b) {
	if (a.pt > b.pt) return true;
	if (a.pt == b.pt) {
		return b.beat;
	}
	return false;
}
int main() {
	scanf("%d%d", &n, &k);
	for (int i = 0; i< n; i++) {
		scanf("%d%d", &mat[i].pt, &mat[i].ef); mat[i].flag = 0; mat[i].beat = 0;
	}
	int ans = 1 << 30;
	for (bit = 0; bit < (1 << n); bit++) {
		int e = 0;
		int pts = 0;
		memcpy(tp, mat, sizeof(mat));
		for (int i = 0; i < n; i++) {
			tp[i].beat = bit & (1 << i);
			if (bit & (1 << i)) {
				e += mat[i].ef;
				pts++;
			}
			else {
				tp[i].pt++;
			}
		}
		tp[n].pt = pts; tp[n].ef = e; tp[n].flag = 1;
		sort(tp, tp + n + 1, comp);
		int j = 0;
		while (tp[j].flag == 0) {
			j++;
		}
		if (j + 1 <= k) {
			ans = min(ans, e);
		}
	}
	printf("%d\n", ans == 1 << 30 ? -1 : ans);
}
