#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#define mm 301000
struct cc
{
  int n,e;
}a[mm];
int num[mm],b[mm],t[mm];
int top,dn,mn,maxp,un,i,rank,j,k,m,n,p,e;
long long ans;
void init()
{
  memset(a,0,sizeof(a));
  memset(t,0,sizeof(t));
  memset(num,0,sizeof(num));
  top=0;
  scanf("%d%d",&n,&k);
  rank=n-k+1;
  for (i=1;i<=n;i++)
  {scanf("%d%d",&p,&e);
   maxp=maxp<p?p:maxp;
   num[p]++;
   a[++top].e=e;a[top].n=t[p];t[p]=top;
  }
}
void add(int b[],int k)
{
   int e;
   k=t[k];
   while(k)
   {
     e=a[k].e;
     if (b[mm-1]>e)b[mm-1]=e;
     b[e]++;
     k=a[k].n;
   }
}
int del(int b[])
{
   int i;
   for (i=b[mm-1];i<=mm;i++)
       if (b[i]){b[i]--;b[mm-1]=i;return i;}
}
long long calc(int k)
{
int take,i,j;
long long ans=0;
memset(b,0,sizeof(b));
b[mm-1]=mm;
take=rank-dn; 
if (take<0)take=0;
add(b,k);add(b,k-1);
for (i=1;i<=take;i++)
   ans+=del(b);
for (i=0;i<=k-2;i++)add(b,i);
for (i=k+1;i<=maxp;i++)add(b,i);
for (i=1;i<=k-take;i++)
   ans+=del(b);
return ans;   
}
void solve()
{
  ans=0;
  int i;
  dn=0;
  if (rank==0){printf("0\n");return ;}
  for (i=1;i<=n;i++)
  {
     if (i>1)dn+=num[i-2];
     if (num[i]+num[i-1]+dn>=rank&&rank-dn<=i)
     {
      long long aa=calc(i),bb,cc;
      if (i<n){dn+=num[i-1];bb=calc(i+1);if (aa>bb)aa=bb;}
      if (i<n-1){
                 dn+=num[i];cc=calc(i+2);if (aa>cc)aa=cc;}
      printf("%I64d\n",aa);
      return;
     }
  }
  printf("-1\n");
}
int main()
{
    init();
    solve();
    //system("pause");
    return 0;
}
