#include<iostream>
#include<algorithm>
#include<cstdio>
#define lld long long
using namespace std;
const int MaxN = 200000 + 10;
struct Person
{
	int e, p;
}arr[MaxN];
bool cmpE(Person a, Person b){return a.e < b.e;}
bool cmpP(Person a, Person b){return a.p > b.p;}

int n, k, sl;
lld ans;int sc;

bool exist()
{
	int v = 0;
	for(int i = 1; i <= n; ++i) if(arr[i].p > n) ++v;
	if(v > k - 1) return false;
	return true;
}

lld case1()
{
	//score equ sc + 2
	lld ret = 0;
	for(int i = 1; i <= sc + 2 && i <= n; ++i) ret += (lld)arr[i].e;
	return ret;
}

bool vis[MaxN];

lld case2()
{
	//score equ sc + 1 && win sl (equ sc or equ sc + 1)
	lld ret = 0;
	int tsl = sl, nsc = sc + 1;
	for(int i = 1; i <= n; ++i) vis[i] = 0;
	for(int i = 1; i <= n && tsl; ++i)
		if(arr[i].p == sc || arr[i].p == sc + 1)
		{
			--tsl;--nsc;
			ret += (lld)arr[i].e;
			vis[i] = true;
		}
	for(int i = 1; i <= n && nsc > 0; ++i)
		if(!vis[i])
		{
			ret += (lld)arr[i].e;
			--nsc;
		}
	return ret;
}

lld case3()
{
	//score equ sc && (win sl (equ sc) and all (equ sc - 1))
	lld ret = 0;
	int tsl = sl, t2l = 0, nsc = sc;
	for(int i = 1; i <= n; ++i)
	{
		vis[i] = 0;
		if(arr[i].p == sc - 1) ++t2l;
	}
	for(int i = 1; i <= n && tsl; ++i)
		if(arr[i].p == sc)
		{
			--tsl;--nsc;
			ret += (lld)arr[i].e;
			vis[i] = true;
		}
	for(int i = 1; i <= n && t2l; ++i)
		if(!vis[i] && (arr[i].p == sc || arr[i].p == sc - 1))
		{
			--nsc;--t2l;
			ret += (lld)arr[i].e;
			vis[i] = true;
		}
	for(int i = 1; i <= n && nsc > 0; ++i)
		if(!vis[i])
		{
			ret += (lld)arr[i].e;
			--nsc;
		}
	return ret;
}

int main()
{
	scanf("%d%d", &n, &k);
	for(int i = 1; i <= n; ++i)	scanf("%d%d", &arr[i].p, &arr[i].e);
	
	if(!exist()) {printf("-1");return 0;}
	
	sort(arr + 1, arr + n + 1, cmpP);
	
	sc = arr[k].p;sl = 1;
	while(arr[k + sl].p == arr[k].p) ++sl;
	
	sort(arr + 1, arr + n + 1, cmpE);
	
	ans = min(case1(), min(case2(), case3()));
	
	cout << ans << endl;
	
	return 0;
}
