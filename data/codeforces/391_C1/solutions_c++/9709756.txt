#include <cstdio>
#include <cstring>
#include <queue>
#include <cmath>
#include <cstdlib>
#include <algorithm>
#include <iostream>
using namespace std;
int n,m;
struct node
{
    int val,w;
}e[20];
int ans;
int a[20],b[20];
int vis[20];
bool cmp(int a,int b)
{
    return a > b;
}
void dfs(int *a,int cnt,int sum,int num)
{
    int i;
    if(cnt == n)
    {
        int kk = 0;
        for(i = 0; i < n; i++)
        {
            if(a[i] < num)
            {
                kk++;
            }
            if(a[i] == num && vis[i] == 0)
            {
                kk++;
            }
        }
        if(kk > n - m)
        {
            if(sum < ans)
                ans = sum;
        }
        return;
    }

    a[cnt] = e[cnt].val + 1;
    vis[cnt] = 1;
    dfs(a,cnt+1,sum,num);
    a[cnt] = e[cnt].val;
    vis[cnt] = 0;
    dfs(a,cnt+1,sum + e[cnt].w,num+1);
}
int main()
{
    while(scanf("%d %d",&n,&m)!=EOF)
    {
         int i;
         for(i = 0; i < n; i++)
         {
             scanf("%d %d",&e[i].val,&e[i].w);
         }
         ans = 222222222;
         dfs(a,0,0,0);
         if(ans == 222222222)
            printf("-1\n");
         else
         printf("%d\n",ans);
    }
    return 0;
}
