#define _CRT_SECURE_NO_WARNINGS
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <math.h>
#include <vector>
#include <bitset>
#include <string>
#include <ctype.h>
#include <stdio.h>
#include <sstream>
#include <fstream>
#include <utility>
#include <limits.h>
#include <stdlib.h>
#include <string.h>
#include <iterator>
#include <iostream>
#include <algorithm>
using namespace std;

#define MAX 1e9
#define mp make_pair
#define pii pair<int,int>

bool con[16];
vector<pii> list;
int contestants , rnk , res = MAX;

void sol ( int inx , vector<pii> &pt , bool wl[] );

int main(){

    //freopen("file.txt","r",stdin);

    scanf("%i %i",&contestants,&rnk);

    list.resize(contestants);

    for ( int a = 0 ; a < contestants ; a++ )
        scanf("%i %i",&list[a].first,&list[a].second);

    sol ( 0 , list , con );

    printf("%i\n",res == MAX ? -1 : res);

    return 0;
}

void sol ( int inx , vector<pair<int,int> > &pt , bool wl[] ){

    if ( inx == contestants ){

        int w = 0 , p = 0 , r = 0;

        for ( int a = 0 ; a < contestants ; a++ ){
            if ( wl[a] ){

                w++;
                p += list[a].second;
            }
        }

        for ( int a = 0 ; a < contestants ; a++ )
            if ( pt[a].first > w )
                r++;
            else
                if ( pt[a].first == w && !wl[a] )
                    r++;
        
        if ( r + 1 <= rnk )
            if ( p < res )
                res = p;
    }
    else
    {
        wl[inx] = 1;
        sol ( inx + 1 , pt , wl );

        wl[inx] = 0;
        pt[inx].first++;
        sol ( inx + 1 , pt , wl );
        pt[inx].first--;
    }
}