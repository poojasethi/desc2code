#include <cstdio>
using namespace std;
const int N=10004,M=20004;
int n,m,K,s1,s2,f,q[1000004],ans[M],state[N];
int E,first[N],next[M],des[M],dl[M],dr[M],num[M];
long long dis[N];
bool inqueue[N];
void add(int u,int v,int w1,int w2,int p)
{
	next[++E]=first[u]; first[u]=E;
	des[E]=v; dl[E]=w1; dr[E]=w2; num[E]=p;
}
void bfs()
{
	int head=1,tail=2,i;
	if (s1==s2)
	{
		printf("DRAW\n");
		for (i=1;i<=K;i++) printf("%d",ans[i]),putchar((i==K)?'\n':' ');
		return;
	}
	q[1]=s1; state[s1]=1; q[2]=s2; state[s2]=2;
	for (i=1;i<=n;i++) dis[i]=1000000000000000000LL,inqueue[i]=false;
	inqueue[s1]=inqueue[s2]=true; dis[s1]=dis[s2]=0;
	while (head<=tail)
	{
		int u=q[head++]; inqueue[u]=false;
		for (i=first[u];i;i=next[i])
		{
			int v=des[i],w=ans[num[i]]=(state[u]==1)?dl[i]:dr[i];
			if (dis[u]+w<dis[v])
			{
				dis[v]=dis[u]+w; state[v]=state[u];
				if (!inqueue[v]) inqueue[v]=true,q[++tail]=v;
			}
			else if (dis[u]+w==dis[v])
			{
				if ((state[u])&&(state[u]==state[v])) continue;
				state[v]=0;
			}
		}
	}
	if (state[f]<2)
	{
		if (state[f]) printf("WIN\n"); else printf("DRAW\n");
		for (i=1;i<=K;i++) printf("%d",ans[i]),putchar((i==K)?'\n':' ');
	}
	else printf("LOSE\n");
}
int main()
{
	int i; scanf("%d%d%d%d%d%d",&n,&m,&K,&s1,&s2,&f);
	E=0; for (i=1;i<=n;i++) first[i]=0;
	for (i=1;i<=m;i++)
	{
		int u,v,w; scanf("%d%d%d",&u,&v,&w);
		add(u,v,w,w,0);
	}
	for (i=1;i<=K;i++)
	{
		int u,v,w1,w2; scanf("%d%d%d%d",&u,&v,&w1,&w2);
		add(u,v,w1,w2,i);
		ans[i]=w2;
	}
	bfs();
	return 0;
}