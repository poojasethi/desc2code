#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long LL;

const int N = 10005;
const int M = 10205;

int n, m, k;
int to[M], next[M], end[N], d[M], tms; 
int ord[M], a[M], b[M], l[M];
int P, Q, F, vs[N], q[N];
LL disp[N], disq[N];

void spfa(LL *dis, int S)
{
	for(int i=1; i<=n; i++) vs[i] = 0, dis[i] = LL(1e18);
	q[1] = S, vs[S] = 1, dis[S] = 0;
	
	for(int h=0, t=1, x; h!=t; )
	{
		if(++h==N) h=0; x=q[h];
		for(int p=end[x]; p; p=next[p]) if(dis[x]+d[p]<dis[to[p]]) 
		{
			dis[to[p]] = dis[x]+d[p];
			if(!vs[to[p]])
			{
				if(++t==N) t=0; q[t] = to[p];
				vs[to[p]] = 1;
			}
		}
		vs[x] = 0;
	}
}

void spfa(){ spfa(disp, P), spfa(disq, Q); }

int win()
{
	for(;;)
	{
		bool cg(0);
		for(int i=1; i<=k; i++) if(d[ord[i]]!=l[i] && disp[a[i]]<disq[a[i]])
		{d[ord[i]] = l[i], spfa(), cg = 1; break;}
		if(!cg) break;
	}
	if(disp[F] < disq[F])
	{
		puts("WIN");
		for(int i=1; i<k; i++) printf("%d ", d[ord[i]]);
		return printf("%d\n", d[ord[k]]), 1;
	}
	return 0;
}

int draw()
{
	for(;;)
	{
		bool cg(0);
		for(int i=1; i<=k; i++) if(d[ord[i]]!=l[i] && disp[a[i]]<=disq[a[i]])
		{d[ord[i]] = l[i], spfa(), cg = 1; break;}
		if(!cg) break;
	}
	if(disp[F] == disq[F])
	{
		puts("DRAW");
		for(int i=1; i<k; i++) printf("%d ", d[ord[i]]);
		return printf("%d\n", d[ord[k]]), 1;
	}
	return 0;
}

int main()
{
	
	scanf("%d%d%d", &n, &m, &k);
	scanf("%d%d%d", &P, &Q, &F);
	
	for(int i=1, x,y,z; i<=m; i++) 
	{
		scanf("%d%d%d", &x, &y, &z);
		to[++tms]=y, next[tms]=end[x], end[x]=tms, d[tms]=z;
	}
	
	for(int i=1, r; i<=k; i++)
	{
		scanf("%d%d%d%d", &a[i], &b[i], &l[i], &r);
		to[++tms]=b[i], next[tms]=end[a[i]], end[a[i]]=tms, d[tms]=r, ord[i]=tms;
	}
	
	spfa();
	if(!win() && !draw()) puts("LOSE");
	
	return 0;
}



