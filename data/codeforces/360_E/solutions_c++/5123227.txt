#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<queue>
#define pr pair<LL, LL>
#define x first
#define y second
#define mp make_pair
#define MAXN 20005
using namespace std ;
typedef long long LL ;

struct road {
	LL fr, x, next, dis ;
} r[MAXN] ;

LL N, M, K, P ;
LL st[MAXN], w, vis[MAXN] ;
LL d1[MAXN], d2[MAXN] ;
LL lt[MAXN], rt[MAXN] ;
LL S1, S2, T ;
priority_queue< pr > q ;

void add(LL x, LL y, LL dis)
{
	r[++w].fr = x, r[w].x = y, r[w].next = st[x] ;
	r[w].dis = dis, st[x] = w ;
}
void D(LL* dis, LL x)
{
	q.push(mp(dis[x]=0, x)) ;
	LL i, now, tmp ;
	while(!q.empty())
	{
		now = -q.top().x, x = q.top().y, q.pop() ;
		if(dis[x] < now) continue ;
		for(i = st[x]; i; i = r[i].next)
			if(dis[tmp=r[i].x] > dis[x]+r[i].dis)
			{
				dis[tmp] = dis[x]+r[i].dis ;
				q.push(mp(-dis[tmp], tmp)) ;
			}
	} 
}
int main()
{
	LL i, j, flag = 1 ;
	LL fr, to, dt ;
	scanf("%I64d %I64d %I64d", &N, &M, &K) ;
	scanf("%I64d %I64d %I64d", &S1, &S2, &T) ;
	for(i = 1; i <= M; i ++)
	{
		scanf("%I64d %I64d %I64d", &fr, &to, &dt) ;
		add(fr, to, dt) ;
	}
	for(i = 1; i <= K; i ++)
	{	
		scanf("%I64d %I64d %I64d %I64d", &fr, &to, &lt[i], &rt[i]) ;
		add(fr, to, rt[i]) ;
	}
	while(flag)
	{
		flag = 0 ;
		memset(d1, 120, sizeof(d1)) ;
		memset(d2, 120, sizeof(d2)) ;
		D(d1, S1), D(d2, S2) ;
		for(i = 1; i <= K; i ++)
		{
			to = r[i+M].fr ;
			if(d1[to] < d2[to] && r[i+M].dis != lt[i]) {flag = 1, r[i+M].dis = lt[i] ;}
		}
	}
	flag = (d1[T]<d2[T]?1:(d1[T]==d2[T]?0:-1)) ;
	printf("%s\n", flag==1?"WIN":(flag==0?"DRAW":"LOSE")) ;
	if(flag >= 0) for(i = 1; i <= K; i ++)
		printf("%I64d%c", r[i+M].dis, i==K?'\n':' ') ;
	return 0 ;
}
