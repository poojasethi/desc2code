#include <cstdio>
#include <vector>
#include <utility>
#include <set>
using namespace std;

#define st first
#define nd second
#define mp(a,b) make_pair(a,b)

const int N = 10004;

vector <pair<int,int> > G[N];
long long int inf = 1LL<<60, d[N];
int w[2*N], R[N], n,m,k,f,s1,s2, jak[N], skad[N];
set <pair<long long int,int> > kol;
bool uzyte[N];

void Dijkstra()
{
	int a;
	for (int i=1;i<=n;i++) d[i] = inf;
		d[f] = 0;
	kol.insert( mp(0,f) );
	while( !kol.empty() )
	{
		a = kol.begin()->nd;
		kol.erase( kol.begin() );
		for (int i=0;i<G[a].size();i++)
			if ( d[ G[a][i].st ] > d[a] + w[ G[a][i].nd ] )
			{
				kol.erase( mp(d[G[a][i].st], G[a][i].st ) );
				d[ G[a][i].st ] = d[a] + w[ G[a][i].nd ];
				jak[ G[a][i].st ] = G[a][i].nd;
				skad[ G[a][i].st ] = a;
				kol.insert( mp( d[G[a][i].st], G[a][i].st) );
			}
	}
	a = s1;
	while( 1 )
	{
		uzyte[a] = 1;
		if (a==f) break;
		a = skad[a];
	}
}

int main()
{
	int a,b;
	scanf("%d%d%d",&n,&m,&k);
	scanf("%d%d%d",&s1,&s2,&f);
	for (int i=0;i<m;i++)
	{
		scanf("%d%d%d",&a,&b,&w[i]);
		G[b].push_back( mp(a,i) );
	}
	for (int i=0;i<k;i++)
	{
		scanf("%d%d%d%d",&a,&b,&w[m+i],&R[i]);
		G[b].push_back( mp(a,m+i) );
	}
	Dijkstra();
	bool dalej; 
	while( 1 )
	{
		a = s2;
		dalej = 0;
		while( uzyte[a]==0 )
		{
			if ( jak[a] >= m && w[ jak[a] ] < R[ jak[a]-m ] )
			{
				dalej = 1;
				w[ jak[a] ] = R[ jak[a]-m ];
			}
			a = skad[a];
		}
		if (dalej == 0) break;
		Dijkstra();
	}
	if ( d[s1] < d[s2] )
	{
		printf("WIN\n");
		for (int i=0;i<k;i++) printf("%d ",w[i+m] );
	}
	else if ( d[s1] == d[s2] )
	{
		printf("DRAW\n");
		for (int i=0;i<k;i++) printf("%d ",w[i+m] );
	}
	else printf("LOSE\n");
}
