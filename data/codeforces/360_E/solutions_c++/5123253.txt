#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<queue>
#define pr pair<LL, LL>
#define x first
#define y second
#define mp make_pair
#define rp(q,z) for(q=1;q<=z;q++)
#define O 20005
using namespace std ;
typedef long long LL ;
struct road {
	LL fr, x, next, d ;
} r[O] ;
LL N, M, K, P ;
LL st[O], w, vis[O] ;
LL W[O], E[O] ;
LL lt[O], rt[O] ;
LL S1, S2, T ;
priority_queue< pr > q ;
void add(LL x, LL y, LL d)
{
	r[++w].fr = x, r[w].x = y, r[w].next = st[x] ;
	r[w].d = d, st[x] = w ;
}
void D(LL* d, LL x)
{
	q.push(mp(d[x]=0, x)) ;
	LL i, now, t ;
	while(!q.empty())
	{
		now = -q.top().x, x = q.top().y, q.pop() ;
		if(d[x] < now) continue ;
		for(i = st[x]; i; i = r[i].next)
			if(d[t=r[i].x] > d[x]+r[i].d)
				d[t] = d[x]+r[i].d, 
				q.push(mp(-d[t], t)) ;
	} 
}
int main()
{
	LL i, j, flag = 1 ;
	LL fr, to, dt ;
	scanf("%I64d %I64d %I64d", &N, &M, &K) ;
	scanf("%I64d %I64d %I64d", &S1, &S2, &T) ;
	rp(i,M) scanf("%I64d %I64d %I64d", &fr, &to, &dt), 
		add(fr, to, dt) ;
	rp(i,K)	scanf("%I64d %I64d %I64d %I64d", &fr, &to, &lt[i], &rt[i]), 
		add(fr, to, rt[i]) ;
	while(flag)
	{
		flag = 0 ;
		memset(W, 120, sizeof(W)) ;
		memset(E, 120, sizeof(E)) ;
		D(W, S1), D(E, S2) ;
		rp(i,K) {
			to = r[i+M].fr ;
			if(W[to] < E[to] && r[i+M].d != lt[i]) {flag = 1, r[i+M].d = lt[i] ;}
		}
	}
	flag = (W[T]<E[T]?1:(W[T]==E[T]?0:-1)) ;
	printf("%s\n", flag==1?"WIN":(flag==0?"DRAW":"LOSE")) ;
	if(flag >= 0) for(i = 1; i <= K; i ++)
		printf("%I64d%c", r[i+M].d, i==K?'\n':' ') ;
	return 0 ;
}
