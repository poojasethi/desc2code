#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<queue>
#define pr pair<I, I>
#define x first
#define y second
#define mp make_pair
#define rp(q,z) for(q=1;q<=z;q++)
#define O 20005
using namespace std ;
typedef long long I ;
struct road {
	I S, x, next, d ;
} r[O] ;
I N, M, K, P ;
I st[O], w, V[O] ;
I W[O], E[O] ;
I L[O], R[O] ;
I S1, S2, T ;
priority_queue< pr > q ;
void add(I x, I y, I d)
{
	r[++w].S = x, r[w].x = y, r[w].next = st[x] ;
	r[w].d = d, st[x] = w ;
}
void D(I* d, I x)
{
	q.push(mp(d[x]=0, x)) ;
	I i, now, t ;
	while(!q.empty())
	{
		now = -q.top().x, x = q.top().y, q.pop() ;
		if(d[x] < now) continue ;
		for(i = st[x]; i; i = r[i].next)
			if(d[t=r[i].x] > d[x]+r[i].d)
				d[t] = d[x]+r[i].d, 
				q.push(mp(-d[t], t)) ;
	} 
}
int main()
{
	I i, j, f = 1 ;
	I S, U ;
	scanf("%I64d %I64d %I64d", &N, &M, &K) ;
	scanf("%I64d %I64d %I64d", &S1, &S2, &T) ;
	rp(i,M) scanf("%I64d %I64d %I64d", &S, &j, &U), 
		add(S, j, U) ;
	rp(i,K)	scanf("%I64d %I64d %I64d %I64d", &S, &j, &L[i], &R[i]), 
		add(S, j, R[i]) ;
	while(f)
	{
		f = 0 ;
		memset(W, 120, sizeof(W)) ;
		memset(E, 120, sizeof(E)) ;
		D(W, S1), D(E, S2) ;
		rp(i,K) {
			j = r[i+M].S ;
			if(W[j] < E[j] && r[i+M].d != L[i]) {f = 1, r[i+M].d = L[i] ;}
		}
	}
	f = (W[T]<E[T]?1:(W[T]==E[T]?0:-1)) ;
	printf("%s\n", f==1?"WIN":(f==0?"DRAW":"LOSE")) ;
	if(f >= 0) for(i = 1; i <= K; i ++)
		printf("%I64d%c", r[i+M].d, i==K?'\n':' ') ;
	return 0 ;
}
