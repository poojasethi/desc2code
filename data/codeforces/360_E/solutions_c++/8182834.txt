#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <vector>
#include <queue>
#define N 10010
#define int64 long long
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int x,y,z,id;
};
struct dui {
	int64 x;
	int y;
	inline bool operator < (const dui &A) const {
		return x>A.x;
	}
};
int i,j,k,n,m,K,x,y,z,s1,s2,S;
int ty[N],an[N],F[N];
vector<ww> a[N];
int64 gg[N];
priority_queue<dui> q;
int main() {
	scanf("%d%d%d",&n,&m,&K);
	scanf("%d%d%d",&s1,&s2,&S);
	For(i,1,m) {
		scanf("%d%d%d",&x,&y,&z);
	 	a[x].push_back((ww){y,z});
	}
	For(i,1,K) {
		scanf("%d%d%d%d",&x,&y,&z,&k);
		a[x].push_back((ww){y,z,k,i});
	}
	memset(gg,120,sizeof(gg));
	gg[s1]=gg[s2]=0;
	ty[s1]|=1,ty[s2]|=2;
	q.push((dui){gg[s1],s1});
	q.push((dui){gg[s2],s2});
	for (;!q.empty();) {
		dui A=q.top();
		q.pop();
		int C=A.y;
		if (F[C]) continue;
		F[C]=1;
		for (i=0;i<a[C].size();i++) {
			ww D=a[C][i];
			int w=D.x,len=!D.z?D.y:(ty[C]&2)?D.z:D.y;
			if (gg[C]+len==gg[w]) ty[w]|=ty[C];
			if (gg[C]+len<gg[w]) {
				gg[w]=gg[C]+len;
				ty[w]=ty[C];
				q.push((dui){gg[w],w});
			}
		}
	}
	printf("%s\n",ty[S]==3?"DRAW":ty[S]==1?"WIN":"LOSE");
	if (ty[S]&1) {
		For(i,1,n) for (j=0;j<a[i].size();j++) {
			ww A=a[i][j];
			if (A.id) {
				if (gg[i]<=gg[A.x]) {
					if (ty[i]&2) an[A.id]=A.z;
					else an[A.id]=A.y;
				} else an[A.id]=A.y;
			}
		}
		For(i,1,K) printf("%d ",an[i]); printf("\n");
		/*if (n==44) {
			int64 f[100][100];
			memset(f,60,sizeof(f));
			For(i,1,n) f[i][i]=0;
			For(i,1,n) for (j=0;j<a[i].size();j++) {
				ww A=a[i][j];
				if (A.id) f[i][A.x]=an[A.id];
				else f[i][A.x]=A.y;
			}
			For(k,1,n)For(i,1,n)For(j,1,n) f[i][j]=min(f[i][j],f[i][k]+f[k][j]);
			printf("%I64d %I64d\n",f[s1][S],f[s2][S]);
		}*/
	}
	return 0;
}
