#include <cstdio>
#include <cstdlib>
#include <algorithm>
#define int64 long long
const int inf = (int) 1e9 + 10;
using namespace std;

typedef int arr32[200010];

arr32 q, c, next, g, st, et, e, slf, in, t;
int64 d1[200010], d2[200010];
int n, ap, Y;

void link(int x, int y, int s, int t)  {
	c[++ap] = y, next[ap] = g[x], g[x] = ap;
	st[ap] = s, et[ap] = t, e[ap] = s;
}
void spfa(int st, int64 *d)  {
	for (int i = 1; i <= n; ++i)  d[i] = inf;
	
	int tA = st;  slf[st] = d[st] = 0;  t[st] = ++Y, in[st] = 1;
	for (int z = st; z; in[z] = 0, z = slf[z])
		for (int x = g[z]; x; x = next[x])
			if (t[c[x]] < Y  ||  d[c[x]] > d[z] + e[x])
				if (d[c[x]] = d[z] + e[x], t[c[x]] = Y, !in[c[x]])
					if (in[c[x]] = 1, tA != z  &&  d[slf[z]] > d[c[x]])
						slf[c[x]] = slf[z], slf[z] = c[x];
					else  slf[c[x]] = 0, tA = slf[tA] = c[x];
}
bool error_edge()  {
	for (int i = 1; i <= n; ++i)
		for (int x = g[i]; x; x = next[x])
			if (st[x] != et[x])
				if (d1[i] <= d2[i]  &&  e[x] != st[x])
				  return 1;
				else  if (d1[i] > d2[i]  &&  e[x] != et[x])
					return 1;
	return 0;
}
int main()  {
	//freopen("E.in", "r", stdin);
	//freopen("E.out", "w", stdout);

	int m, k, s1, s2, f, x, y, z, ace;
	
	scanf("%d %d %d %d %d %d", &n, &m, &k, &s1, &s2, &f);
	for (int i = 1; i <= m; ++i)  {
		scanf("%d %d %d", &x, &y, &z);
		link(x, y, z, z);
	}
	for (int i = 1; i <= k; ++i)  {
		scanf("%d %d %d %d", &x, &y, &z, &ace);
		link(x, y, z, ace);  q[i] = ap;
	}
	while (spfa(s1, d1), spfa(s2, d2), error_edge())  {
		for (int i = 1; i <= n; ++i)
			for (int x = g[i]; x; x = next[x])
				if (st[x] != et[x])
					if (d1[i] <= d2[i]  &&  e[x] != st[x])
						e[x] = st[x];
					else  if (d1[i] > d2[i]  &&  e[x] != et[x])
						e[x] = et[x];
	}

	if (d1[f] <= d2[f])  {
		if (d1[f] < d2[f])  printf("WIN\n");
		else  printf("DRAW\n");
		for (int i = 1; i <= k; ++i)
			printf("%d ", e[q[i]]);
	}
	else  printf("LOSE\n");
}
