#include <iostream>
#include <algorithm>
#include <set>
#include <string>
#include <map>
#include <vector>


using namespace std;
bool filter(string &s,string &a) {
	s =s.substr(7);
	int sl = s.find('/');
	if(sl<0)
	{
		a=s;
		s="";
		return true;
	}
	a = s.substr(0,sl);
	s = s.substr(sl);


	if(a.length()>0 && a.length()<=20 && a[0]!='.' && a[a.length()-1]!='.' && a.find("..")==string::npos)
		;
	else {
		//cout<<"F > "<<a<<endl;
		return false;
	}
	//cout<<">"<<a<<"/"<<s<<","<<s.length()<<endl;
	if(s.length()<=21 && s[1]!='/' && s.find("//")==string::npos)
		;
	else {
		//cout<<"FF > "<<s<<endl;
		return false;
	}
	return true;
}
int main(int argc, char const *argv[])
{
    int N;
    cin>>N;
    map<string,set<string> > m;
    for (int i = 0; i < N; ++i)
    {
    	string s,a;
    	cin>>s;

    	if(filter(s,a)) {
    	//	cout<<">>> "<<a<<"   "<<s<<endl;
    			m[a].insert(s);
    		
    	}
    }
    

    map<set<string>,set<string> > m2;
    for (std::map<string,std::set<string> >::iterator it = m.begin(); it != m.end(); ++it)
   {

   		std::set<string> &v = it->second;
    string s2 = it->first;
  /** 	cout<<"_____ "<<s2<<" ______\n";
   	for (std::set<string>::iterator i = v.begin(); i != v.end(); ++i)
   	{
   		cout<<*i<<'\n';
   	}
   	cout<<endl<<endl;
/**/
  // 	if(m2.find(v)!=m2.end()) 
   		m2[v].insert(s2);
   /*else {
   	std::set<string> v2;
    			v2.insert(s2);
    			m2[v] = v2;
   }*/
	}
	std::vector<string> ans;
    for (std::map<set<string>,std::set<string> >::iterator it = m2.begin(); it != m2.end(); ++it)
    {
    	std::set<string> &v = it->second;
    	
    	if(v.size()>1)
    	{
    		string anss="";
	    		for (set<string>::iterator it =v.begin(); it != v.end(); ++it)
	    	{
	    		anss+="http://"+(*it)+' ';

	    	}
	    	ans.push_back(anss);
	   	}	
    }
    cout<<ans.size()<<endl;
    for (int i = 0; i < ans.size(); ++i)
    {
    	cout<<ans[i]<<endl;
    }
    return 0;
}