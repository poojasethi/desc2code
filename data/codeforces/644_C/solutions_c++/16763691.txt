#include <map>
#include <set>
#include <deque>
#include <queue>
#include <bitset>
#include <vector>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;
#define X first
#define Y second
#define mp make_pair
#define pb push_back
#define INF 0x3f3f3f3f
#define mem(a,x) memset(a,x,sizeof(a))
#define REP(i,n) for (int i=0; i<(n); i++)
#define rep(i,n) for (int i=1; i<=(n); i++)
#define For(i,s,t) for (int i=(s); i<=(t); i++)
#define FOR(i,s,t) for (int i=(s); i>=(t); i--)
#define foreach(j,x) for (int j=adj[x]; j>=0; j=E[j].nxt)
#define Foreach(it,v) for (__typeof((v).begin()) it=(v).begin(); it!=(v).end(); it++)
typedef long long lld;
typedef unsigned long long uLL;

int n,cnt;
string st;
map< string, set<string> > hs,same;

int main() {
    #ifndef ONLINE_JUDGE
        freopen("in.txt","r",stdin);
    #endif
    ios_base::sync_with_stdio(false); cin.tie(0);
    cin >> n;
    rep(i,n) {
        cin >> st;
        int j=7,len=st.size();
        while (j<len && st[j]!='/') j++;
        string host,path;
        host=st.substr(7,j-7);
        path="~";
        if (j<len) path+=st.substr(j,len-j);
        hs[host].insert(path);
    }
    Foreach(it,hs) {
        set<string> &S = it->Y;
        st.clear();
        Foreach(i,S) st+=(*i);
        same[st].insert(it->X);
    }

    Foreach(it,same)
        if ((it->Y).size()>1) cnt++;
    cout << cnt << endl;
    Foreach(it,same) {
        set<string> &S = it->Y;
        if (S.size()>1) {
            Foreach(i,S) {
                st=(*i);
                cout<<"http://"<<st<<"  ";
            }
            cout<<endl;
        }
    }
    return 0;
}
