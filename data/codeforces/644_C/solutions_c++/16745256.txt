#define _USE_MATH_DEFINES
#define _CRT_SECURE_NO_WARNINGS

#include <cstdio>
#include <algorithm>
#include <map>
#include <vector>
#include <iostream>
#include <set>
#include <cmath>
#include <cstring>
#include <bitset>
#include <deque>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef pair<int, int> pii;
typedef vector<pii> vpii;

#define bpc(a) __builtin_popcount(a)
#define debug(x) { cerr<<#x<<" = "<<(x)<<endl; }

const int mod = 1e9 + 7;
const int inf = 1e9;
const ll linf = 1e18;

ll powm(ll a,ll p,ll m){ll r=1 % m;while(p){if(p&1)r=r*a%m;p>>=1;a=a*a%m;}return r;}

int main()
{
    int n;
    scanf("%d", &n);
    string url;
    map<string, int> pathrename;
    map<string, set<int> > paths;
    for(int i = 0; i < n; ++i)
    {
        cin >> url;
        url = url.substr(7);
        int j = find(url.begin(), url.end(), '/') - url.begin();
        string hostname = url.substr(0, j);
        string path = url.substr(j);
        int index;
        if(pathrename.count(path) > 0)
            index = pathrename[path];
        else
            pathrename[path] = index = pathrename.size();
        paths[hostname].insert(index);
    }
    map<set<int>, vs> ans;
    for(map<string, set<int> >::iterator it = paths.begin(); it != paths.end(); ++it)
        ans[it->second].push_back(it->first);
    int cnt = 0;
    for(map<set<int>, vs>::iterator it = ans.begin(); it != ans.end(); ++it)
        cnt += it->second.size() > 1;
    printf("%d\n", cnt);
    for(map<set<int>, vs>::iterator it = ans.begin(); it != ans.end(); ++it)
        if(it->second.size() > 1)
        {
            for(int i = 0; i < it->second.size(); ++i)
                cout << "http://" << it->second[i] << " ";
            puts("");
        }
    return 0;
}
