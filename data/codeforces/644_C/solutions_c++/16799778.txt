#include <bits/stdc++.h>
using namespace std;

const int MAX = 1e5 + 100;
int n, cnt, pos, tt;
string s, pre, str[MAX];
map <string, int> mp;
vector <int> res[MAX];

typedef pair <int, set <string> > pis;
pis data[MAX];

bool cmp(const pis& x, const pis& y){
	return x.second < y.second;
}

int main(){
	ios_base::sync_with_stdio(0);
	cin >> n;
	while (n--){
		cin >> s;
		s.erase(0, 7);
		if ((pos = s.find('/')) == -1){
			pre = s;
			s = "";
		}
		else{
			pre = s.substr(0, pos);
			s.erase(0, pos);
		}

		if (mp.find(pre) == mp.end())
			str[tt = mp[pre] = ++cnt] = pre;
		else
			tt = mp[pre];


		data[tt].second.insert(s);
	}

	for (int i = 1; i <= cnt; ++i)
		data[i].first = i;

	sort(data + 1, data + 1 + cnt, cmp);
	res[n = 1].push_back(data[1].first);
	for (int i = 2; i <= cnt; ++i){
		if (data[i].second != data[i - 1].second)
			++n;
		res[n].push_back(data[i].first);
	}

	cnt = 0;
	for (int i = 1; i <= n; ++i)
	if (res[i].size() > 1)
		++cnt;

	cout << cnt << endl;
	for (int i = 1; i <= n; ++i)
	if (res[i].size() > 1){
		for (int j = 0; j < res[i].size(); ++j)
			cout << "http://" + str[res[i][j]] << ' ';
		cout << endl;
	}

	return 0;
}
