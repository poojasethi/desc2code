#include<stdio.h>
#include<string>
#include<set>
#include<map>
#include<algorithm>
using namespace std;

map<string,int> mh,mp;
string hh[100000];
set<int> ss[100000];
int a[100000];

int getidx(map<string,int>& mm,const string& name) {
	map<string,int>::iterator it=mm.find(name);
	if (it==mm.end()) {
		int ret=mm.size();
		mm.insert(make_pair(name,ret));
		return ret;
	} else return it->second;
}

bool cmp(int a,int b) {
	if (ss[a].size()!=ss[b].size()) return ss[a].size()<ss[b].size();
	else return ss[a]<ss[b];
}

int main() {
	char str[128];
	int n;
	scanf("%d",&n);
	for(int i=0;i<n;i++) {
		scanf("%s",str);
		string s=str,host,path;
		int idx=s.find('/',7);
		if (idx==string::npos) host=s,path="";
		else {
			host=s.substr(0,idx);
			path=s.substr(idx);
		}
		int s1=getidx(mh,host),s2=getidx(mp,path);
		hh[s1]=host;
		ss[s1].insert(s2);
	}
	int m=mh.size();
	for(int i=0;i<m;i++) a[i]=i;
	sort(a,a+m,cmp);
	int ret=0;
	for(int i=0,j=0;i<m;i=j) {
		for(;j<m && ss[a[i]]==ss[a[j]];j++);
		if (j-i>1) ret++;
	}
	printf("%d\n",ret);
	for(int i=0,j=0;i<m;i=j) {
		for(;j<m && ss[a[i]]==ss[a[j]];j++);
		if (j-i>1) {
			for(int k=i;k<j;k++) printf("%s%c",hh[a[k]].c_str(),k==j-1?'\n':' ');
		}
	}
	return 0;
}