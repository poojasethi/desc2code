#include <bits/stdc++.h>
using namespace std;

typedef long long LL;

#define PII       pair<int,int>
#define all(c)    c.begin(),c.end()
#define sz(c)     (int)c.size()
#define clr(c)    c.clear()
#define pb        push_back
#define mp        make_pair
#define cin(x)    scanf("%d",&x)
#define MOD		1000000007
#define EPS		1E-10

vector<string> revMap;
int last = 0;
map<string,int> mapper;

vector< pair<string,int> > arr;

int getID(string &a)
{
	if(mapper.find(a) == mapper.end())
	{
		revMap.pb(a);
		mapper[a] = last++;
		arr.pb(mp("" , last - 1));
	}
	return mapper[a];
}

void magic(string &s)
{
	string host = "http://";
	int i;
	for(i = 7; i < sz(s); i++)
	{
		if(s[i] == '/') break;
		host += s[i];
	}
	int id = getID(host);
	while(i < sz(s))
	{
		arr[id].first += s[i];
		i += 1;
	}
	arr[id].first += "$";
}

vector<string> temp;
vector< vector<int> > groups;

int main()
{
	int n;
	cin >> n;
	temp.resize(n);
	for(int i = 0; i < n; i++)
		cin >> temp[i];
	sort(all(temp));
	for(int i = 0; i < sz(temp); i++)
	{
		if(i && temp[i] == temp[i-1]) continue;
		magic(temp[i]);
	}
	clr(temp);
	sort(all(arr));

	int i = 0;
	while(i < sz(arr))
	{
		int j = i;
		vector<int> f;
		while(j < sz(arr) && arr[j].first == arr[i].first)
		{
			f.pb(arr[j].second);
			j += 1;
		}
		i = j;
		if(sz(f) > 1)
			groups.pb(f);
	}
	cout << sz(groups) << "\n";
	for(int i = 0; i < sz(groups); i++)
	{
		for(int j = 0; j < sz(groups[i]); j++)
			cout << revMap[ groups[i][j] ] << " ";
		cout << "\n";
	}
	return 0;
}