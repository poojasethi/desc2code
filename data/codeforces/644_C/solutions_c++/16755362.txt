#include <iostream>
#include <algorithm>
#include <fstream>
#include <cstdio>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <iomanip>
#include <cassert>
#include <set>
#include <map>
#include <stdlib.h>
#include <string.h>


#define show(x) cerr << "# " << #x << " = " << (x) << endl

#define FOR(i, a, b) for(__typeof(a) i = a; i != b; i++)
#define FR(i, a) FOR(i, 0, a)
#define FOREACH(i, t) FOR(i, t.begin(), t.end())
#define ALL(x) (x).begin(), (x).end()
#define SZ(a) int(a.size())
#define PB push_back
#define MP make_pair
#define F first
#define S second


#define _USE_MATH_DEFINES
using namespace std;

inline bool ascending(int i, int j) { return (i < j); }
inline bool descending(int i, int j) { return (i > j); }

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

const int MN = 200000 + 10;


map<set<string >  , vector<string> > mmap , finalmap;
map<set<string >  , vector<string> > :: iterator  it1;
set<set<string > > fset;
map<string , set<string> > premap;
map<string , set<string> > :: iterator  it;
int main(){
	int _;
	cin  >> _;
	while(_--)
	{
		string s ,res = "";
		cin >> s;
		int i;
		for (i = 7; i < SZ(s); ++i)
		{
			if (s[i] == '/'){
				
				// cout << s.substr(i , SZ(s) - i) << " | " << s.substr(0 , i) <<endl;
				break;
			}
		}
		premap[s.substr(0 , i)].insert(s.substr(i , SZ(s) - i));
	}
	for(it = premap.begin() ; it != premap.end() ; ++it)
	{
		mmap[it->S].PB(it->F);
	}
	for(it1 = mmap.begin() ; it1 != mmap.end() ; it1++)
	{
		if (SZ(it1->S) != 1){
			finalmap[it1->F] = it1->S;
		}
	}
	cout << SZ(finalmap) <<endl;	
	for(it1 = finalmap.begin() ; it1 != finalmap.end() ; it1++)
	{
		if (SZ(it1->S) != 1){
			FR(j , SZ(it1->S))
				cout << (it1->S)[j] << ' ';
			cout << endl;
		}
	}
	return 0;
}
