#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#define ll long long
#define pb push_back
#define mp make_pair
#define M_PI 3.14159265358979323846
using namespace std;
int main() {
    srand(time(NULL));
    ios_base::sync_with_stdio(false);
    int n;
	cin >> n;
	map <string, set <string> > s;
	for (int i = 0; i < n; i++) {
		string t;
		cin >> t;
		for (int j = 7; j < t.size(); j++) {
			if (t[j] == '/') {
				string u = t.substr(0, j);
				string v = t.substr(j, t.size() - j);
				if (s.find(u) == s.end()) {
					set <string> w;
					w.insert(v);
					s.insert(mp(u, w));
				}
				else {
					if (s[u].find(v) == s[u].end()) s[u].insert(v);
				}
				break;
			}
			if (j == t.size() - 1) {
				if (s.find(t) == s.end()) {
					set <string> w;
					w.insert("");
					s.insert(mp(t, w));
				}
				else {
					if (s[t].find("") == s[t].end()) s[t].insert("");
				}
				break;
			}
		}
	}
	map <set <string>, set <string> > b;
	while (s.size() > 0) {
		string t = (*(s.begin())).first;
		set <string> a = s[t];
		s.erase(t);
		if (b.find(a) != b.end()) b[a].insert(t);
		else {
			set <string> v;
			v.insert(t);
			b.insert(mp(a, v));
		}
	}
	vector <vector <string> > ans;
	while (b.size() > 0) {
		set <string> u = (*(b.begin())).first;
		set <string> v = b[u];
		b.erase(u);
		if (v.size() > 1) {
			vector <string> c;
			while (v.size() > 0) {
				string t = *(v.begin());
				c.pb(t);
				v.erase(t);
			}
			ans.pb(c);
		}
	}
	cout << ans.size() << "\n";
	for (int i = 0; i < ans.size(); i++) {
		for (int j = 0; j < ans[i].size(); j++) cout << ans[i][j] << " ";
		cout << "\n";
	}
    return 0;
}