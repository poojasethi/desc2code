#include<iostream>
#include<string>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
using namespace std;
string str;
int n;
string fir,sec;
inline void depart()
{
	int ll=str.length();
	for (int i=7;i<ll;i++)
	{
		if(str[i]=='/')
		{
			fir=str.substr(0,i);
			sec=str.substr(i);
			return;
		}
	}
	fir=str;
	sec="";
}
map<string,int>mpfir,mpsec;
string list[120000];
int a[120000][2],cntfir,cntsec;
vector<int>ans[120000],cnt[120000];
map<int,int>mp[120000];
int siz,res;
inline void insert(int x)
{
	int tmp=1;
	for (int i=0;i<cnt[x].size();i++)
	{
		if(mp[tmp].count(cnt[x][i])==0)
		{
			siz++;
			mp[tmp][cnt[x][i]]=siz;
		}
		tmp=mp[tmp][cnt[x][i]];
//		printf("%d %d %d\n",x,i,cnt[x][i]);
	}
//	printf("%d %d\n",x,tmp);
	ans[tmp].push_back(x);
}
set<int>cntt[120000];
int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	siz=1;
	cin>>n;
	for (int i=1;i<=n;i++)
	{
		cin>>str;
		depart();
		if(mpfir.count(fir)==0)
		{
			cntfir++;
			mpfir[fir]=cntfir;
			list[cntfir]=fir;
		}
		if(mpsec.count(sec)==0)
		{
			cntsec++;
			mpsec[sec]=cntsec;
		}
		a[i][0]=mpfir[fir];
		a[i][1]=mpsec[sec];
		cntt[a[i][0]].insert(a[i][1]);
//		cout<<fir<<" ---- "<<sec<<endl;
//		cout<<a[i][0]<<' '<<a[i][1]<<endl;
	}
	for (int i=1;i<=cntfir;i++)
	{
		for (set<int>::iterator it=cntt[i].begin();it!=cntt[i].end();it++)
		{
			cnt[i].push_back((*it));
		}
		insert(i);
	}
	for (int i=1;i<=siz;i++)
	{
		if(ans[i].size()>1)res++;
	}
	cout<<res<<endl;
	for (int i=1;i<=siz;i++)
	{
		if(ans[i].size()>1)
		{
			for (int j=0;j<ans[i].size();j++)
			{
				if(j!=0)cout<<' ';
				cout<<list[ans[i][j]];
			}
			cout<<endl;
		}
	}
	return 0;
}
