#include<bits/stdc++.h>

#define FI(i,a,b) for(int i=(a);i<=(b);i++)
#define FD(i,a,b) for(int i=(a);i>=(b);i--)

#define LL long long

#define PII pair<int,int>
#define mp make_pair
#define fi first
#define se second

using namespace std;

#define K 100005

int par[K],len;

int n,p,q;

string cm[K],ct[K];
map<string,int> M,T;
map<int,bool> ms[K];
map<int,bool>::iterator it;

string s,t;

int rp;
PII res[K];

struct kk{
  int id;
  vector<int> V;
  bool operator<(const kk &k) const{
    int sa=V.size();
    int sb=(k.V).size();
    for(int i=0;i<sa && i<sb;i++){
      if(V[i]>k.V[i]) return false;
      if(V[i]<k.V[i]) return true;
    }
    return sa<sb;
  }
}r[K];

int main(){
  scanf("%d",&n);
  while(n--){
    cin >> s;
    len=s.length();
    
    int sep=len;
    FD(j,len-1,7) if(s[j]=='/') sep=j;
    
    t="";
    FI(j,7,sep-1) t=t+s[j];
    if(!M.count(t)){
      M[t]=++p;
      cm[p]=t;
    }
    
    int ind=M[t];
    
    t="";
    FI(j,sep,len-1) t=t+s[j];
    if(!T.count(t)){
      T[t]=++q;
      ct[q]=t;
    }
    
    int jnd=T[t];
     
    ms[ind][jnd]=true;
  }
  FI(i,1,p){
    r[i].id=i;
    for(it=ms[i].begin();it!=ms[i].end();it++){
      r[i].V.push_back((*it).first);
    }
  }
  sort(r+1,r+p+1);
  /*
  FI(i,1,p){
    printf("%d (ID = %d): ",i,r[i].id);
    FI(j,0,(int)r[i].V.size()-1){
      printf("%d ",r[i].V[j]);
    }
    printf("\n");
  }
  */
  int pv=1;
  FI(i,2,p){
    if(r[i-1]<r[i]){
      if(pv<i-1) res[++rp]=mp(pv,i-1);
      pv=i;
    }
  }
  if(pv<p) res[++rp]=mp(pv,p);
  printf("%d\n",rp);
  FI(i,1,rp){
    FI(j,res[i].fi,res[i].se){
      cout << "http://" << cm[r[j].id];
      printf("%c",j==res[i].se?'\n':' ');
    }
  }
  return 0;
}