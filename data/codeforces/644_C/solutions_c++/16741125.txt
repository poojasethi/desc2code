#include <bits/stdc++.h>
using namespace std;

#define M1 100003
#define M2 10000007

char S[60];
string A, B;
map<string, int> M;
map<int, string> Y;
map<unsigned long long, int> K;
vector<string> X[100005];
vector<int> Z[100005];
unsigned long long C[100005];

int main()
{
    int N;
    scanf("%d", &N);

    int k = 0;

    for(int i=1; i<=N; i++)
    {
        scanf(" %s", S);

        A.clear();
        B.clear();

        int j;

        for(j=7; S[j]!='/' && S[j]!='\0'; j++)
            A.push_back(S[j]);
        for(; S[j]!='\0'; j++)
            B.push_back(S[j]);

        if(M.count(A)==0)
        {
            Y[k] = A;
            M[A] = k++;
        }
        
        if(B.size()==0)
            B.push_back('$');
    
        X[M[A]].push_back(B);
    }

    int m = 0;

    for(int i=0; i<k; i++)
    {
        unsigned long long hashx = 0;

        sort(X[i].begin(), X[i].end());

        for(vector<string>::iterator it=X[i].begin(); it!=X[i].end(); it++)
        {
            if(it!=X[i].begin() && *it==*(it-1))
                continue;

            unsigned long long tmp_hash = 0;

            for(int j=0; j<(*it).size(); j++)
                tmp_hash = tmp_hash*M1 + (*it)[j];

            hashx = hashx*M2 + tmp_hash;
        }

        if(K.count(hashx)==0)
            K[hashx] = m++;

        Z[K[hashx]].push_back(i);
    }

    int ans = 0;

    for(int i=0; i<m; i++)
        if(Z[i].size()>1)
            ans++;

    printf("%d\n", ans);

    for(int i=0; i<m; i++)
        if(Z[i].size()>1)
        {
            for(int j=0; j<Z[i].size(); j++)
            {
                printf("http://");
                cout << Y[Z[i][j]] <<" ";
            }
            printf("\n");
        }

    return 0;
}
