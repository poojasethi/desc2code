#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>
#include <cmath>
#include <stack>
#include <map>
#include <set>
#include <deque>
#include <cstring>
#include <functional>
#include <climits>
#include <list>
#include <ctime>
#include <complex>

#define F1(x,y,z) for(int x=y;x<z;x++)
#define F2(x,y,z) for(int x=y;x<=z;x++)
#define F3(x,y,z) for(int x=y;x>z;x--)
#define F4(x,y,z) for(int x=y;x>=z;x--)
#define pb push_back
#define LL long long
#define co complex<double>

#define MAX 100005
#define AMAX 1500
#define MOD 1000000007

#define f(c,d) ((1<<(c))*(d))

using namespace std;

int n,i,j;
char x[100];
pair<vector<char>,vector<char> > y[MAX];
vector<pair<vector<vector<char> >,vector<char> > > z;
vector<vector<vector<char> > > ans;

int main(){
	scanf("%d",&n);
	F1(a,0,n){
		i=j=0;
		scanf("%s",x);
		while(x[i]){
			if(x[i]=='/')j++;
			if(j<=2)y[a].first.pb(x[i]);
			else y[a].second.pb(x[i]);
			x[i++]=0;
		}
	}
	sort(y,y+n);
	F1(a,0,n)if(!a||y[a]!=y[a-1]){
		if(!a||y[a].first!=y[a-1].first)z.pb(make_pair(vector<vector<char> >(),y[a].first));
		z.back().first.pb(y[a].second);
	}
	sort(z.begin(),z.end());
	F1(a,0,z.size()){
		if(!a||z[a].first!=z[a-1].first){
			if(ans.size()&&ans.back().size()==1)ans.pop_back();
			ans.pb(vector<vector<char> >());
		}
		ans.back().pb(z[a].second);
	}
	if(ans.size()&&ans.back().size()==1)ans.pop_back();
	printf("%d\n",ans.size());
	F1(a,0,ans.size()){
		F1(b,0,ans[a].size()){
			if(b)printf(" ");
			F1(c,0,ans[a][b].size())printf("%c",ans[a][b][c]);
		}
		printf("\n");
	}
	//system("pause");
	return 0;
}
