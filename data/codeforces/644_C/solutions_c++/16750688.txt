#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<set>
#include<map>
using namespace std;
int n, m, mh, mp, cnt;
char host[100010][100];
map<string, int> hh, hp;
map<unsigned long long, int> h;
set<int> a[100010];
vector<int> ans[100010];

int main()
{
	cin >> n;
	for (int i = 1; i <= n; i++)
	{
		char addr[100], path[100];
		scanf("%s", addr);
		strcat(addr, "/");
		char *pos = strchr(addr + 7, '/');
		strcpy(path, pos);
		*pos = 0;
		if (!hh[addr])
		{
			hh[addr] = ++mh;
			strcpy(host[mh], addr);
		}
		if (!hp[path])
			hp[path] = ++mp;
		a[hh[addr]].insert(hp[path]);
	}
	for (int i = 1; i <= mh; i++)
	{
		unsigned long long val = 0;
		for (set<int>::iterator it = a[i].begin(); it != a[i].end(); it++)
		{
			char num[10];
			sprintf(num, "%d/", *it);
			int len = strlen(num);
			for (int j = 0; j < len; j++) val = val * 131 + num[j];
		}
		if (!h[val]) h[val] = ++m;
		ans[h[val]].push_back(i);
	}
	for (int i = 1; i <= m; i++)
		if (ans[i].size()>1) cnt++;
	cout << cnt << endl;
	for (int i = 1; i <= m; i++)
		if (ans[i].size()>1)
		{
			for (int j = 0; j < ans[i].size(); j++)
				printf("%s ", host[ans[i][j]]);
			puts("");
		}
}