#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <set>
#include <map>
#include <vector>
using namespace std;

template <typename T>
T next_int() {
	T x = 0, p = 1;
	char ch;
	do { ch = getchar(); } while(ch <= ' ');
	if(ch == '-') {
		p = -1;
		ch = getchar();
	}
	while(ch >= '0' && ch <= '9') {
		x = x * 10 + (ch - '0');
		ch = getchar();
	}
	return p * x;
}

const int max_int = (int)1e9 + 228;
const int max_n = (int)1e5 + 228;

char fast_string[max_n];

string next_string() {
	scanf("%s", &fast_string);

	return fast_string;
}

map<string, set<string> > b;

map<set<string>, vector<string> > c;

vector<vector<string> > ans;

int main() {
//	freopen(".in", "r", stdin);
//	freopen(".out", "w", stdout);

	int n = next_int<int>();

	for(int i = 0; i < n; i++) {
		string a = next_string();

		int j;
		string f = "";
		string s = "";
		for(j = 7; j < a.size(); j++) {
			if(a[j] == '/') break;
			f += a[j];
		}

		for(; j < a.size(); j++) s += a[j];

		b[f].insert(s);
	}

	for(map<string, set<string> > :: iterator i = b.begin(); i != b.end(); i++) {
		c[i -> second].push_back(i -> first);
	}

	for(map<set<string>, vector<string> > :: iterator i = c.begin(); i != c.end(); i++) {
		if((i -> second).size() == 1) continue;

		ans.push_back(i -> second);
	}

	cout << ans.size() << "\n";
	for(int i = 0; i < ans.size(); i++) {
		for(int j = 0; j < ans[i].size(); j++) cout << "http://" << ans[i][j] << " ";
		puts("");
	}
}
