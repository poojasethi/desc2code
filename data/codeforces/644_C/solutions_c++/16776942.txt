#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>
#include <queue>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define S(x) scanf("%d",&x)
#define S2(x,y) scanf("%d%d",&x,&y)
#define P(x) printf("%d\n",x)
#define all(v) v.begin(),v.end()
#define FF first
#define SS second

typedef long long int LL;
typedef pair<int, int > pii;
typedef vector<int > vi;

map<string, set<string > > M;
map<string, set<string > >::iterator it;

map<set<string >, vector<string > > ans;
map<set<string >, vector<string > >::iterator it1;

int main() {
  int n;
  S(n);
  string s;
  rep(i,0,n) {
    cin >> s;
    string host,path;
    host = ""; path = "";
    int cnt = 0;
    rep(i,0,s.size()) {
      if(s[i] == '/') cnt++;
      if(cnt > 2) {
        path += s[i];
      } else {
        host += s[i];
      }
    }
    M[host].insert(path);
  }

  for(it = M.begin(); it != M.end(); it++) {
    ans[it->SS].push_back(it->FF);
  }
  int cnt = 0;
  for(it1 = ans.begin(); it1 != ans.end(); it1++) {
    if(it1->SS.size() > 1) cnt++;
  }
  P(cnt);
  for(it1 = ans.begin(); it1 != ans.end(); it1++) if(it1->SS.size() > 1) {
    vector<string > v = it1->SS;
    rep(i,0,v.size()) cout << v[i] << " "; printf("\n");
  }
  return 0;
}