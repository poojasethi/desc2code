// Claris you are our red sun, I can not live without you.
// NanoApe you are our red sun, I can not live without you.
// YJQ you are our red sun, I can not live without you.
#include <bits/stdc++.h>
using namespace std;
const int N=100005, M=65, p[2]={1000000087, 1000000093};
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<int> vi;
char a[N][M], _s[M];
int len[N], pos[N], tot, fid;
map<string, int> mp, id;
vi path[N];
map<pii, vi> hs;
int main() {
	int n;
	scanf("%d", &n);
	tot=1;
	for(int i=1; i<=n; ++i) {
		scanf("%s", _s);
		char *s=_s+7;
		len[i]=strlen(s);
		pos[i]=0;
		for(; pos[i]<len[i] && s[pos[i]]!='/'; ++pos[i]);
		int &x=id[string(s, s+pos[i])];
		if(!x) {
			x=++fid;
			memcpy(a[x], s, sizeof(char)*pos[i]);
		}
		if(pos[i]!=len[i]) {
			int &t=mp[string(s+pos[i], s+len[i])];
			if(!t) {
				t=++tot;
			}
			path[x].push_back(t);
		}
		else {
			path[x].push_back(1);
		}
	}
	for(int i=1; i<=fid; ++i) {
		sort(path[i].begin(), path[i].end());
		int h[2];
		h[0]=h[1]=0;
		for(int k=0; k<2; ++k) {
			for(int j=0, g=path[i].size(); j<g; ++j) {
				if(j==0 || path[i][j]!=path[i][j-1]) {
					h[k]=((ll)h[k]*100000007+path[i][j])%p[k];
				}
			}
		}
		hs[pii(h[0], h[1])].push_back(i);
	}
	int ans=0;
	for(map<pii, vi>::iterator it=hs.begin(); it!=hs.end(); ++it) {
		if(it->second.size()>1) {
			++ans;
		}
	}
	printf("%d\n", ans);
	for(map<pii, vi>::iterator it=hs.begin(); it!=hs.end(); ++it) {
		if(it->second.size()>1) {
			for(int j=0, g=it->second.size(); j<g; ++j) {
				printf("http://%s%c", a[it->second[j]], " \n"[j==g-1]);
			}
		}
	}
	return 0;
}
