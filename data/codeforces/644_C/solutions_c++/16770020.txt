#include <cstdio>
#include <string>
#include <map>
#include <set>

using namespace std;

char add[100], host[30], path[30];

int main(){
    int n;
    scanf("%d", &n);
    
    int cnt = 0;
    map<string, int> id_path;
    map< string, set<int> > queries_host;
    
    while(n--){
        scanf("%s", add);
        
        int i = 0;
        while(add[i] != '/') i++;
        i += 2;
        
        int j = 0;
        while(add[i] != '\0' and add[i] != '/'){
            host[j++] = add[i++];
        }
        host[j] = '\0';
        
        j = 0;
        while(add[i] != '\0'){
            path[j++] = add[i++];
        }
        path[j] = '\0';
        
        if(!id_path.count(path)){
            id_path[path] = cnt++;
        }
        
        queries_host[host].insert(id_path[path]);
    }
    
    map< set<int>, set<string> > groups;
    cnt = 0;
    
    for(map< string, set<int> >::iterator i=queries_host.begin(); i!=queries_host.end(); i++){
        groups[i->second].insert(i->first);        
        if(groups[i->second].size() == 2) cnt++;
    }
    
    printf("%d\n", cnt);
    
    for(map< set<int>, set<string> >::iterator i=groups.begin(); i!=groups.end(); i++){
        if((i->second).size() > 1){
            set<string> tmp = i->second;
            
            set<string>::iterator j=tmp.begin();
            printf("http://%s", (*j).c_str()); j++;
            
            while(j != tmp.end()){
                printf(" http://%s", (*j).c_str()); j++;
            }
            
            printf("\n");
        }
    }
}