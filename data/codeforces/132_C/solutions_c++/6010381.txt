#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>

using namespace std;
const int N = 105;
char work[N];
int len, n;
int dp[2][N<<1][N][52];
int dfs(bool dre,int pos,int i,int cn) {
    if(cn<0) return 0;
    if(!work[i]) return cn>0 ? 0 : abs(pos);
    int &ret = dp[dre][pos+100][i][cn];
    if(ret != -1) return ret;
    int mv = dre ? 1 : -1;
    return ret = max( dfs(dre, pos+mv, i+1, cn-(work[i]!='F')),
					  dfs(!dre, pos, i+1, cn-(work[i]!='T')) );
}
int main() {
    int ans = 0;
    scanf("%s%d", work, &n);
    memset(dp, -1, sizeof(dp));
    for( ; n>=0 ; n -= 2) ans = max(ans, dfs(1,0,0,n));
    printf("%d\n",ans);
    return 0;
}
