#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#define N 51
using namespace std;
int dp[N*2][2][N][N*4];
char a[N*2];
int n,len,ans;
int dfs(int idx,int j,int t,int cur)
{
    if(j>n) return 0;
    if(idx==len)
    {
        ans=max(ans,abs(cur)-((n-j)&1));
        return ans;
    }
    int &res=dp[idx][(t-j)&1][n-j][cur+100];
    if(res!=-1) return res;
    if(a[idx]=='F') return res=dfs(idx+1,j,t,cur+(((t-j)&1)?-1:1));
    if(a[idx]=='T')
    {
        return res=max(dfs(idx+1,j,t+1,cur),dfs(idx+1,j+1,t+1,cur+(((t-j)&1)?-1:1)));
    }
}
int main()
{
    memset(dp,-1,sizeof dp);
    scanf("%s",a);
    len=strlen(a);
    scanf("%d",&n);

    dfs(0,0,0,0);
    cout<<ans<<endl;
    return 0;
}
