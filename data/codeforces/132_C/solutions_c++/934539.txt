#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
using namespace std;
bool vis[103][103][203][2];
string s;
int n,best;
int abs(int x)
{
    if(x < 0) return -x;
    return x;
}
void dp(int x,int step,int dis,int dir)
{
    if(vis[x][step][dis + 100][dir]) return;
    vis[x][step][dis + 100][dir] = true;
    if(x == s.size())
    {
        if(step == 1 && best < abs(dis)) best = abs(dis);
        return;
    }
    for(int i = 0; i < step; ++i)
    {
        dp(x + 1, step - i, dis + (((s[x] == 'F') ^ (i & 1)) ? dir * 2 - 1 : 0), (dir ^ (i & 1) ^ (s[x] == 'T')));
    }

}
int main()
{
    cin>>s>>n;
    dp(0,n + 1,0,1);
    cout<<best<<endl;
    return 0;
}
