#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <string.h>
#include <iostream>
#include <math.h>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <stack>
#include <queue>

using namespace std;

#define rep(i,n) for( i=0; i<(n); i++ )
#define VI vector<int>
#define PB push_back

class EG{
    public:
        int x,y,z;
        void input() {
            scanf("%d %d %d",&x,&y,&z);
            x--; y--;
        }
        bool operator<(const EG& e) const {
            return z<e.z;
        }
};

EG eg[200000];
int st[100000];
int list[100000][2];
int last[100000];
int pos[100000];
int c[18][100000];

int find(int x) {
    return x==st[x]?x:st[x]=find(st[x]);
}

int main() {
    int n,m,i,j,qq,QQ,x,y,r,z;
    long long sum;
    scanf("%d %d",&n,&m);
    rep(i,m) eg[i].input();
    rep(i,n) {
        st[i] = i;
        list[i][0] = -1;
        last[i] = i;
    }
    sort(eg,eg+m);
    sum = 0;
    r = 0;
    rep(i,m) {
        x = find(eg[i].x);
        y = find(eg[i].y);
        if(x!=y) {
            st[x] = y;
            list[last[y]][0] = x;
            list[last[y]][1] = eg[i].z;
            last[y] = last[x];
            sum+=eg[i].z;
            r++;
        }
    }
    scanf("%d",&QQ);
    if(r==n-2) {
        rep(qq,QQ) {
            scanf("%d %d",&x,&y);
            x--; y--;
            if(find(x)==find(y)) {
                puts("-1");
            }else {
                printf("%I64d\n",sum);
            }
        }
    }else if(r==n-1) {
        x = find(0);
        j = x;
        rep(i,n) {
            pos[j] = i;
            c[0][i] = list[j][1];
            j = list[j][0];
        }
        for( i=1; (1<<i)<=n; i++ ) {
            z = (1<<i);
            rep(j,n-z+1) {
                c[i][j] = max(c[i-1][j],c[i-1][j+(z>>1)]);
            }
        }
        rep(qq,QQ) {
            scanf("%d %d",&x,&y);
            x = pos[x-1];
            y = pos[y-1];
            if(x>y) swap(x,y);
            z = y-x;
            for( i=0; (1<<i)<=z; i++ );
            z = i-1;
            printf("%I64d\n",sum-max(c[z][x],c[z][y-(1<<z)]));
        }
    }else {
        rep(qq,QQ) {
            scanf("%d %d",&x,&y);
            puts("-1");
        }
    }
    return 0;
}
