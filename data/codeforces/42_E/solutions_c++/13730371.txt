#include <iostream>
#include <vector>
#include <set>
#define MP make_pair
#define F first
#define S second
#include <climits>
#include <algorithm>
#define LL long long

using namespace std;

const LL maxn=100000+100;
LL inf=LONG_LONG_MAX;
LL ans=0,con=0;
vector<pair<LL,LL> >adj[maxn];
LL minimom[maxn];
set<pair<LL,LL> >s;
LL cont[maxn];
LL lg[maxn];
LL h[maxn];
pair<LL,LL> lca[maxn][20];


void dfs(LL v)
{
    cont[v]=con;
    for(LL i=0;i<adj[v].size();i++)
        if(!cont[adj[v][i].S])
            dfs(adj[v][i].S);
}

int main()
{

    LL n,m;
    cin>>n>>m;
    lg[1]=0;
    for(LL i=2;i<=n;i++)
        lg[i]=lg[i/2]+1;
    for(LL i=0;i<m;i++){
        LL v1,v2,w;
        cin>>v1>>v2>>w;
        v1--;
        v2--;
        adj[v1].push_back(make_pair(w,v2));
        adj[v2].push_back(make_pair(w,v1));
    }
    for(LL i=0;i<n;i++)
        if(!cont[i]){
            con++;
            if(con==3){
                LL q;
                cin>>q;
                for(LL j=0;j<q;j++)
                    cout<<-1<<endl;
                return 0;
            }
            dfs(i);
        }
    if(con==2){
        for(LL i=0;i<n;i++){
            minimom[i]=inf;
            s.insert(MP(inf,i));
        }
        LL mini=0;
        for(LL i=0;i<n-1;i++){
            s.erase(MP(minimom[mini],mini));
            minimom[mini]=0;
            for(LL j=0;j<adj[mini].size();j++)
                if(adj[mini][j].first<minimom[adj[mini][j].second]){
                    s.erase(MP(minimom[adj[mini][j].second],adj[mini][j].second));
                    minimom[adj[mini][j].second]=adj[mini][j].first;
                    s.insert(MP(minimom[adj[mini][j].second],adj[mini][j].second));
                }
            mini=(*s.begin()).S;
            if(minimom[mini]<inf)
                ans+=minimom[mini];
        }
        LL q;
        cin>>q;
        for(LL i=0;i<q;i++){
            LL v1,v2;
            cin>>v1>>v2;
            v1--;
            v2--;
            if(cont[v1]==cont[v2])
                cout<<-1<<endl;
            else
                cout<<ans<<endl;
        }
    }
    else{
        for(LL i=0;i<n;i++)
            minimom[i]=inf;
        LL mini=0;
        h[0]=0;
        for(LL i=0;i<n-1;i++){
            s.erase(MP(minimom[mini],mini));
            minimom[mini]=0;
            for(LL j=0;j<adj[mini].size();j++)
                if(adj[mini][j].first<minimom[adj[mini][j].second]){
                    s.erase(MP(minimom[adj[mini][j].second],adj[mini][j].second));
                    minimom[adj[mini][j].second]=adj[mini][j].first;
                    s.insert(MP(minimom[adj[mini][j].second],adj[mini][j].second));
                }
            LL last=mini;
            mini=(*s.begin()).S;
            h[mini]=h[last]+1;
            lca[mini][0].F=last;
            lca[mini][0].S=minimom[mini];
            ans+=minimom[mini];
        }
        for(LL i=1;i<=lg[n-1];i++)
            for(LL j=0;j<n;j++)
                if(h[j]>=(1<<i)){
                    lca[j][i].F=lca[lca[j][i-1].F][i-1].F;
                    lca[j][i].S=max(lca[lca[j][i-1].F][i-1].S,lca[j][i-1].S);
                }
        LL q;
        cin>>q;
        for(LL i=0;i<q;i++){
            LL v1,v2;
            cin>>v1>>v2;
            v1--;
            v2--;
            LL tmp=0;
            while(h[v1]!=h[v2]){
                if(h[v1]<h[v2]){
                    tmp=max(tmp,lca[v2][lg[h[v2]-h[v1]]].S);
                    v2=lca[v2][lg[h[v2]-h[v1]]].F;
                }
                else{
                    tmp=max(tmp,lca[v1][lg[h[v1]-h[v2]]].S);
                    v1=lca[v1][lg[h[v1]-h[v2]]].F;
                }
            }
            if(v1!=v2){
                for(LL j=lg[h[v1]];j>=0 && lca[v1][0].F!=lca[v2][0].F;j--)
                    if(lca[v1][j].F!=lca[v2][j].F && h[v1]>=(1<<j)){
                        tmp=max(tmp,lca[v1][j].S);
                        v1=lca[v1][j].F;
                        tmp=max(tmp,lca[v2][j].S);
                        v2=lca[v2][j].F;
                    }
                tmp=max(tmp,lca[v1][0].S);
                tmp=max(tmp,lca[v2][0].S);
            }
            cout<<ans-tmp<<endl;
        }
    }
    return 0;
}
