#include <iostream>
#include <sstream>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <vector>

const int N = 30005;

int n;
int cnt[N];
struct Operation {
    int a, b, c;
};
Operation opt[N << 2];
bool used[N << 2];

void init() {
    std::cin >> n;
    for (int i = 1; i <= n << 2; i ++) {
        scanf("%d%d%d", &opt[i].a, &opt[i].b, &opt[i].c);
    }
}

bool check(int a, int b, int c) {
    if (cnt[a] < 0) {
        return false;
    }
    cnt[a] --;
    cnt[b] ++;
    cnt[c] ++;
    if (cnt[a] > 0 && cnt[b] <= 9 && cnt[c] <= 9) {
        return true;
    }
    cnt[a] ++;
    cnt[b] --;
    cnt[c] --;
    return false;
}

void work() {
    static std::vector<int> answer;
    answer.clear();
    
    for (int i = 1; i <= n; i ++) {
        cnt[i] = 4;
    }
    
    while (true) {
        bool flag = true;
        for (int i = 1; i <= n << 2; i ++) {
            if (used[i] == true) {
                continue;
            }
            flag = false;
            if (check(opt[i].a, opt[i].b, opt[i].c)) {
                used[i] = true;
                answer.push_back(i);
            }
        }
        if (flag == true) {
            break;
        }
    }
    
    puts("YES");
    for (int i = 0; i < (int)answer.size(); i ++) {
        printf("%d ", answer[i]);
    }
    printf("\n");
}

int main() {
    //freopen("B.in", "r", stdin);
    
    init();
    work();
    
    return 0;
}