#include <iostream>
#include <cstdlib>
#include <iomanip>
#include <cstring>
#include <string>
#include <algorithm>
#include <queue>
#include <map>
#include <set>
#include <stack>
#include <vector>
#include <cstdlib>
#include <iomanip>
#include <ctime>
#include <fstream>
#include <string>
#include <cstring>
#include <cmath>
#include <functional>

using namespace std;

#define pb push_back
#define mp make_pair
#define F first
#define S second

#define RT fprintf(stderr, "\nTIME = %lf\n", 1.0 * clock()/CLOCKS_PER_SEC);

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<int> vi;
typedef vector<pii > vpii;

const int INFint = 2147483647;
const ll INF = 9223372036854775807ll;
const ll MOD = 1000000009ll;
const ld EPS = 1e-9;

vector< vector<pair<pii, int> > > g;

int main(){
    ios_base::sync_with_stdio(0);
#ifdef LOCAL
    freopen("/Users/qjex/prj/olymp/olymp0/olymp0/input.txt", "r", stdin); freopen("/Users/qjex/prj/olymp/olymp0/olymp0/output.txt", "w", stdout);
#else
//    freopen("FILE.in", "r", stdin); freopen("FILE.out", "w", stdout);
//    freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
#endif
    int n, m;
    cin >> n;
    vector<int> cnt(n+1);
    for(int i = 1; i <= n; i++) cnt[i] = 4;
    vector<pair<pii, pii> > q(4 * n);
    for(int i = 0; i < 4 * n; i++){
        cin >> q[i].F.F >> q[i].F.S >> q[i].S.F;
        q[i].S.S = i ;
    }
    cout << "YES" << endl;
    int i = 0;
    while(!q.empty()){
        if (i == q.size()) i = 0;
        int a = q[i].F.F;
        int b = q[i].F.S;
        int c = q[i].S.F;
        int id = q[i].S.S;
        cnt[a]--;
        cnt[b]++;
        cnt[c]++;
//        cerr << q.size() << ' ' << i << ' ' <<a << ' ' << b <<  ' ' << c << ' ' << id << endl;
        if (cnt[a] >= 0 && cnt[b] <= 9 && cnt[c] <= 9){
//                    cnt[a]--;
//                    cnt[b]++;
//                    cnt[c]++;

            cout << id + 1<< ' ';
            q[i] = q.back();
            q.pop_back();
        } else{
            cnt[a]++;
            cnt[b]--;
            cnt[c]--;
            i++;
        }
    }
    RT
    return 0;
}
