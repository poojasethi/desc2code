#include <bits/stdc++.h>

using namespace std;
const int N = 30005;
struct data {
    int a,b,c;
    data(){};
    data(int _a, int _b, int _c) {
        a = _a; b = _b; c = _c;
    }
};
int n;
vector <data> server;
vector <int> space,ans;
vector <int> dd;

bool check(int pos) {
    space[server[pos].a]--;
    space[server[pos].c]++;
    space[server[pos].b]++;
    int A = space[server[pos].a], B = space[server[pos].b], C = space[server[pos].c];
    space[server[pos].a]++;
    space[server[pos].c]--;
    space[server[pos].b]--;
    if (A < 0 || B > 9 || C > 9) return false;
    return true;
}

int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0);
    //freopen("Socialnet.inp","r",stdin);
    //freopen("Socialnet.out","w",stdout);
    cin >> n;
    for (int a,b,c,i=1; i<=4*n; i++) {
        cin >> a >> b >> c;
        server.push_back(data(a,b,c));
    }
    space.resize(n+1); dd.resize(4*n);
    for (int i=1; i<=n; i++) space[i]=4;
    for (int i=0; i<4*n; i++) dd[i]=0;
    for (int i=1; i<=4*n;) {
        for (int j=0; j<4*n; j++)
            if (check(j) && !dd[j]) {
                dd[j]=1;
                ans.push_back(j+1);
                space[server[j].a]--;
                space[server[j].b]++;
                space[server[j].c]++;
                i++;
            }
    }
    cout << "YES\n";
    for (int i=0; i<4*n; i++) cout << ans[i] << ' ';
    return 0;
}
