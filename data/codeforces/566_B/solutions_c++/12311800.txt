#include <set>
#include <map>
#include <cmath>
#include <ctime>
#include <queue>
#include <cctype>
#include <cstdio>
#include <vector>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#define fi first
#define se second
#define mk make_pair
#define pb push_back
#define CH (ch=getchar())
#define dprintf(...) fprintf(stderr,__VA_ARGS__)
#define For(i,a,b)   for(int i=(int)a;i<=(int)b;i++)
#define Forn(i,a,b)  for(int i=(int)a;i>=(int)b;i--)
#define pend(x)    	 ((x)=='\n'||(x)=='\r'||(x)=='\t'||(x)==' ')
using namespace std;
typedef long long ll;
typedef long double db;
const int N=100005;

inline int IN(){
	char ch;CH; int f=0,x=0;
	for(;pend(ch);CH); if(ch=='-')f=1,CH;
	for(;!pend(ch);CH) x=x*10+ch-'0';
	return (f)?(-x):(x);
}

int n;
vector<int> Ans;
int A[N][5],B[N][5],C[N][5],D[N],E[N];
priority_queue<pair<int,int> >Q;

int main(){
	scanf("%d",&n);
	For(i,1,n<<2){
		int x,y,z;
		scanf("%d%d%d",&x,&y,&z);
		++D[x];
		A[x][D[x]]=y;
		B[x][D[x]]=z;
		C[x][D[x]]=i;
	}
	For(i,1,n) E[i]=8;
	For(i,1,n) D[i]=0;
	For(i,1,n) Q.push(mk(-8,i));
	while(!Q.empty()){
		int u=Q.top().se; Q.pop();
		++D[u];
		if(D[u]>4 || E[u]>9)continue;
		int y=A[u][D[u]],z=B[u][D[u]],Id=C[u][D[u]];
		Ans.pb(Id);
		++E[u];--E[y];--E[z];
		Q.push(mk(-E[u],u));
		Q.push(mk(-E[y],y));
		Q.push(mk(-E[z],z));
	}
	reverse(Ans.begin(),Ans.end());
	puts("YES");
	For(i,0,Ans.size()-1) printf("%d ",Ans[i]);
	return 0;
}

