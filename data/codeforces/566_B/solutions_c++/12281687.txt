#include<cstdio>
#include<iostream>
#include<queue>
#include<map>
#include<set>
#include<algorithm>
#include<cmath>
#include<cstdlib>
using namespace std;

#define inf 1023456789
#define linf 1023456789123456789ll
#define pii pair<int,int>
#define pipii pair<int, pii >
#define pll pair<long long,long long>
#define vint vector<int>
#define vvint vector<vint >
#define ll long long
#define pdd pair<double, double>

#define DEBUG
#ifdef DEBUG
#define db(x) cerr << #x << " = " << x << endl
#else
#define db(x)
#endif

vint a,b,c;
vvint zaujimave;
vint proc;
set<int> mozem;
vector<bool> done;

bool da_sa(int x)
{
	if(done[x])return 0;
	bool ok = 1;
	proc[a[x]]--;
	proc[b[x]]++;
	if(proc[b[x]] > 9)ok = 0;
	proc[c[x]]++;
	if(proc[c[x]] > 9)ok = 0;
	proc[a[x]]++;
	proc[b[x]]--;
	proc[c[x]]--;
	return ok;
}

void check(int x)
{
	for(int i=0; i<zaujimave[x].size(); i++)
	{
		if(da_sa(zaujimave[x][i]))mozem.insert(zaujimave[x][i]);
		else mozem.erase(zaujimave[x][i]);
	}
}

int main()
{
	int n;
	scanf("%d",&n);
	
	a = vint(4*n);
	b = vint(4*n);
	c = vint(4*n);
	zaujimave.resize(n);
	for(int i=0; i<4*n; i++)
	{
		scanf("%d %d %d",&a[i], &b[i], &c[i]);
		a[i]--;
		b[i]--;
		c[i]--;
		zaujimave[a[i]].push_back(i);
		zaujimave[b[i]].push_back(i);
		zaujimave[c[i]].push_back(i);
	}
	printf("YES\n");
	proc = vint(n,4);
	done.resize(4*n, 0);
	for(int i=0; i<4*n; i++)mozem.insert(i);
	for(int i=0; i<4*n; i++)
	{
		int cur = *(mozem.begin());
		done[cur] = 1;
		printf("%d%c",cur+1, " \n"[i == 4*n-1]);
		proc[a[cur]]--;
		proc[b[cur]]++;
		proc[c[cur]]++;
		mozem.erase(cur);
		check(a[cur]);
		check(b[cur]);
		check(c[cur]);
	}
	
	return 0;
}