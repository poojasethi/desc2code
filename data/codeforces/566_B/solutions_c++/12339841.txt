#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<set>
#define MAXN 120005
#define pr pair<int, int>
#define mp make_pair
#define ft first
#define sd second
using namespace std ;
typedef long long LL ;

struct road {
	int x, y ;
	int next ;
} r[MAXN*4] ;

int N ; 
int d[MAXN], ans[MAXN], sum ;
int st[MAXN], w ;
set< pr > s ;
set< pr >::iterator it ;

void add(int x, int y, int z)
{
	r[++w].x = y, r[w].y = z ;
	r[w].next = st[x], st[x] = w ;
}

int main()
{
	int i, j ;
	int x, y, z, tmp ;
	scanf("%d", &N) ;
	for(i = 1; i <= N; i ++)
		d[i] = 8, s.insert(mp(8, i)) ;
	for(i = 1; i <= 4*N; i ++)
	{
		scanf("%d %d %d", &x, &y, &z) ;
		add(x, y, z) ;
	} 
	while(!s.empty())
	{
		x = (*s.begin()).sd ;
		if(d[x] == 9) break ;
		tmp = st[x] ;
		s.erase(mp(d[x], x)) ;
		if(!tmp) continue ;
		ans[++sum] = st[x] ;
		st[x] = r[tmp].next ;
		s.insert(mp(++d[x], x)) ;
		y = r[tmp].x, z = r[tmp].y ;
		if(y != z)
		{
			s.erase(mp(d[y], y)), s.erase(mp(d[z], z)) ;
			s.insert(mp(--d[y], y)), s.insert(mp(--d[z], z)) ;
		}
		else s.erase(mp(d[y], y)), s.insert(mp(--(--d[y]), y)) ;
	}
	if(sum != 4*N) printf("NO\n") ;
	else 
	{
		printf("YES\n") ;
		for(i = 4*N; i >= 1; i --)
			printf("%d ", ans[i]) ;
	}
	//system("pause") ;
	return 0 ;
}
