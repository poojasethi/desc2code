//2016-05-26 18:27:12.571000
#include <algorithm>
#include <cstdio>
#include <memory.h>
#include <set>
#include <queue>
#include <string.h>
#include <vector>
#include <cmath>
#include <bitset>
#include <map>

using namespace std;

#define NN 150010
#define rep(i, a, b) for (int i = (a); i < (b); i ++)
#define clr(a, b) memset(a, b, sizeof(a))
#define eps 1e-10
#define inf 1000000000

typedef long long INT;
typedef pair<int, int> pii;
typedef pair<pii, int> pi3;

set<pii> s;
set<pii> :: iterator it;

int cnt[NN];
int a[NN], b[NN], c[NN];
int ans[NN];
int adj[NN][5], vst[NN], deg[NN];
queue<int> q;
int hop[NN];

int main() {

	int N, ct, u, r;
	
	scanf("%d", &N);
	clr(vst, 0); clr(hop, 0); clr(deg, 0);
	rep(i, 1, N + 1) cnt[i] = 4;
	ct = 0;
	rep(i, 1, 4 * N + 1) {
		scanf("%d%d%d", a + i, b + i, c + i);
		adj[a[i]][deg[a[i]] ++] = i;
	}
	
	while (1) {
		if (ct == 4 * N) break ;
		q = queue<int> ();
		bool ok = false ;
		rep(i, 1, 4 * N + 1) {
			if (hop[i]) continue ;
			if (cnt[b[i]] == 9) continue ;
			if (cnt[c[i]] == 9) continue ;
			if (cnt[b[i]] == 8 && b[i] == c[i] && b[i] != a[i]) continue ;
			ans[ct ++] = i;
			cnt[a[i]] --; cnt[b[i]] ++; cnt[c[i]] ++;
			hop[i] = 1;
			if (!vst[b[i]]) {
				q.push(b[i]); vst[b[i]] = 1;
			}
			if (!vst[c[i]]) {
				q.push(c[i]);
				vst[c[i]] = 1;
			}
			ok = true ;
		}
		if (!ok) break ;
		
		while (!q.empty()) {
			u = q.front(); q.pop();
			vst[u] = 0;
			rep(i, 0, 4) {
				r = adj[u][i];
				if (hop[r]) continue ;
				if (cnt[b[r]] == 9) continue ;
				if (cnt[c[r]] == 9) continue ;
				if (cnt[b[r]] == 8 && b[r] == c[r] && b[r] != a[r]) continue ;
				cnt[a[r]] --; cnt[b[r]] ++; cnt[c[r]] ++;
				hop[r] = 1;
				ans[ct ++] = r;
				if (!vst[b[r]]) {
					vst[b[r]] = 1;
					q.push(b[r]);
				}
				if (!vst[c[r]]) {
					vst[c[r]] = 1;
					q.push(c[r]);
				}
			}
		}
	}
		
	if (ct < 4 * N) puts("NO");
	else {
		puts("YES");
		rep(i, 0, ct) 
			if (i == ct - 1) printf("%d\n", ans[i]);
			else printf("%d ", ans[i]);
	}
	
	return 0;
}