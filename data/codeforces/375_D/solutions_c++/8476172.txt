#include<cstdio>
#include<algorithm>
#include<cmath>
#define N 200005
using namespace std;
struct arr{int go,next;}a[N];
struct node{int l,r,k,c,id;}Q[N];
int b[N],L[N],R[N],end[N],C[N],f[N],num[N],ans[N];
int tot,n,m,i,s,cnt,l,r,x,y;
void dfs(int k,int fa)
{
  L[k]=++tot;C[tot]=b[k];int go;
  for (int i=end[k];i;i=a[i].next)
    if ((go=a[i].go)!=fa)
      dfs(go,k);
  R[k]=tot;
}
inline int cmp(const node &a,const node &b){return a.c!=b.c?a.c<b.c:a.r<b.r;}
inline void add(int u,int v){a[++cnt]=(arr){v,end[u]};end[u]=cnt;}
int main()
{
  scanf("%d%d",&n,&m);
  for (i=1;i<=n;i++)
    scanf("%d",&b[i]);
  for (i=1;i<n;i++)
    scanf("%d%d",&x,&y),add(x,y),add(y,x);
  dfs(1,-1);s=(int)sqrt(tot);int P;
  for (i=1;i<=m;i++)
  {
    scanf("%d%d",&x,&y);
    Q[i].l=L[x],Q[i].r=R[x];
    Q[i].k=y;Q[i].c=Q[i].l/s;Q[i].id=i;
  }
  sort(Q+1,Q+m+1,cmp);
  l=r=0;
  for (i=1;i<=m;i++)
  {
    while (r<Q[i].r) r++,num[++f[C[r]]]++;
    while (l>Q[i].l) l--,num[++f[C[l]]]++;
    while (r>Q[i].r) num[f[C[r]]--]--,r--;
    while (l<Q[i].l) num[f[C[l]]--]--,l++;
    ans[Q[i].id]=num[Q[i].k];
  }
  for (i=1;i<=m;i++) printf("%d\n",ans[i]);
  return 0;
}
