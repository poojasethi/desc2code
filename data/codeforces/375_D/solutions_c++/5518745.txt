#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;
const int D=316;
struct Ask{
	int x,y,k,d;
}dd[100005];
int n,Q,top,tot;
int c[100005];
int s[100005];
int a[100005],col[100005];
int L[100005],R[100005],ans[100005];
vector<int> v[100005];
void dfs(int x,int fa)
{
	col[L[x]=++tot]=a[x];
	for(int i=0;i<v[x].size();i++)
		if(v[x][i]!=fa)
			dfs(v[x][i],x);
	R[x]=tot;
}
void Add(int x,int y)
{
	for(;x<=n;x+=x&-x)
		c[x]+=y;
}
void CC(int x,int y)
{
	Add(n-s[x]+1,-1);
	s[x]+=y;
	Add(n-s[x]+1,1);
}
int Query(int x)
{
	int ret=0;
	for(;x;x-=x&-x)
		ret+=c[x];
	return ret;
}
bool cmp(const Ask &x,const Ask &y)
{
	return x.x/D-y.x/D?x.x/D<y.x/D:x.y-y.y?x.y<y.y:x.x<y.x;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif
	scanf("%d%d",&n,&Q);
	for(int i=1;i<=n;i++)
		scanf("%d",&a[i]);
	for(int i=1,x,y;i<n;i++)
		scanf("%d%d",&x,&y),
		v[x].push_back(y),
		v[y].push_back(x);
	dfs(1,0);
	for(int i=1;i<=Q;i++)
		scanf("%d%d",&dd[i].x,&dd[i].k),
		dd[i].y=R[dd[i].x],
		dd[i].x=L[dd[i].x],
		dd[i].d=i;
	sort(dd+1,dd+1+Q,cmp);
	int l=1,r=0;
	for(int i=1;i<=Q;i++)
	{
		while(l>dd[i].x)
			CC(col[--l],1);
		while(r<dd[i].y)
			CC(col[++r],1);
		while(l<dd[i].x)
			CC(col[l++],-1);
		while(r>dd[i].y)
			CC(col[r--],-1);
		if(dd[i].k<=n)
			ans[dd[i].d]=Query(n-dd[i].k+1);
	}
	for(int i=1;i<=Q;i++)
		printf("%d\n",ans[i]);
}