// by Î¾

#include <cstdio>
#include <algorithm>

#define rep(i,l,r) for(int i=l;i<=r;++i)

using namespace std;

typedef int __[200005];

__ he,ne,pp,col,L,R,l,r,K,ak,s,a,fa,id;

int S=316,n,m,cnt,tot,ll,rr;

void dfs(int u){
    l[u]=++cnt;
    for(int e=he[u];e;e=ne[e]){
        int v=pp[e];
        if(v^fa[u])fa[v]=u,dfs(v);
    }r[u]=cnt;
}

inline void add(int u,int v){pp[++tot]=v;ne[tot]=he[u];he[u]=tot;}

inline bool cmp(const int &i,const int &j){
    return L[i]/S==L[j]/S?L[i]/S&1?R[i]<R[j]:R[i]>R[j]:L[i]<L[j];
}

int main(){
    scanf("%d%d",&n,&m);
    rep(i,1,n)scanf("%d",col+i);
    for(int i=1,u,v;i<n;++i)scanf("%d%d",&u,&v),add(u,v),add(v,u);
    dfs(1);
    rep(i,1,n)a[l[i]]=col[i];
    for(int i=1,x,y;i<=m;++i){
        scanf("%d%d",&x,&y);
        L[i]=l[x];R[i]=r[x];K[i]=y;id[i]=i;
    }
    sort(id+1,id+m+1,cmp);
    ++ak[++s[a[ll=rr=1]]];
    rep(j,1,m){
        int i=id[j];
        while(ll<L[i])--ak[s[a[ll++]]--];
        while(ll>L[i])++ak[++s[a[--ll]]];
        while(rr<R[i])++ak[++s[a[++rr]]];
        while(rr>R[i])--ak[s[a[rr--]]--];
        K[i]=ak[K[i]];
    }
    rep(i,1,m)printf("%d\n",K[i]);
}