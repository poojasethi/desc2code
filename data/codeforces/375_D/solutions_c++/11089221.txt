#include <cstdio>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <cstring>

using namespace std;

struct Node
{
	int l,r,k,id;
}q[100005];
int nn;
bool cmp(Node a,Node b)
{
	if (a.l/nn==b.l/nn)
		return a.r<b.r;
	return a.l<b.l;
}
int n,m,sum,c[100005],x,y;
int l[100005],r[100005];
int ll,rr;
int dql,dqr;
int s[100005],v[100005],jsq[100005];
int ans[100005],a[200005],next[200005],b[100005];
int num;
void addedge(int x,int y)
{
	++num;a[num]=y;next[num]=b[x];b[x]=num;
}
void dfs(int x,int fa)
{
	++sum;l[x]=sum;v[sum]=c[x];
	for (int i=b[x];i!=0;i=next[i])
	{
		int y=a[i];
		if (y==fa) continue;
		dfs(y,x);
	}
	r[x]=sum;
}
int main()
{
	scanf("%d%d",&n,&m);
	sum=0;
	for (int i=1;i<=n;++i)
		scanf("%d",&c[i]);
	for (int i=1;i<n;++i)
	{
		scanf("%d%d",&x,&y);
		addedge(x,y);
		addedge(y,x);
	}
	dfs(1,-1);
	for (int i=1;i<=m;++i)
	{
		scanf("%d%d",&x,&y);
		q[i].l=l[x];
		q[i].r=r[x];
		q[i].k=y;
		q[i].id=i;
	}
	nn=(int)(sqrt(n*1.0));
	sort(q+1,q+1+m,cmp);	
	ll=1;
	rr=0;
	for (int i=1;i<=m;++i)
	{
		dql=q[i].l;
		dqr=q[i].r;
		while (ll>dql) ++jsq[++s[v[--ll]]];
		while (rr<dqr) ++jsq[++s[v[++rr]]];
		while (ll<dql) --jsq[s[v[ll++]]--];
		while (rr>dqr) --jsq[s[v[rr--]]--];
		ans[q[i].id]=jsq[q[i].k];
	}
	for (int i=1;i<=m;++i) printf("%d\n",ans[i]);
	return 0;
}
		 				  		 	 					 		  			 			