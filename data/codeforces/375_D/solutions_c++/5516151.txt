#include<cstdio>
#include<algorithm>
using namespace std;
#define rep(i,n) for (int i=1;i<=n;++i)
const int N=200005;
int n,m,x,y,D,e;
int a[N],lst[N],nxt[N],ed[N],next[N],son[N],L[N],R[N],l[N],r[N],k[N],v[N],c[N],s[N],ans[N];
void read(int &x)
{
	#define CH getchar()
	char ch; x=0; for (ch=CH;ch<'0' || ch>'9';ch=CH);
	for (;ch>='0' && ch<='9';x=x*10+ch-48,ch=CH);
}
void dfs(int x,int fa)
{
	v[L[x]=++D]=a[x]; int last,sz=0,bg;
	for (int p=son[x],y;p;last=p,p=next[p]) if ((y=ed[p])!=fa){
		dfs(y,x); if (R[y]-L[y]+1>sz) sz=R[y]-L[y]+1,bg=p;
	}
	if (last!=bg && sz){
		if (son[x]==bg) son[x]=next[bg];
		else for (int p=son[x];p;p=next[p]) if (next[p]==bg){next[p]=next[bg]; break;}
		next[bg]=0,next[last]=bg;
	}
	R[x]=D;
}
void work(int x,int fa,bool flag)
{
	for (int p=son[x],y;p;p=next[p]) if ((y=ed[p])!=fa) work(y,x,next[p]);
	for (int p=son[x],y;next[p];p=next[p]) if ((y=ed[p])!=fa)
		for (int i=L[y];i<=R[y];++i) ++c[++s[v[i]]];
	++c[++s[a[x]]]; for (int p=lst[x];p;p=nxt[p]) ans[p]=c[k[p]];
	if (flag) for (int i=L[x];i<=R[x];++i) --c[s[v[i]]--];
}
int main()
{
	read(n),read(m); rep(i,n) read(a[i]);
	rep(i,n-1) read(x),read(y),
		ed[++e]=y,next[e]=son[x],son[x]=e,
		ed[++e]=x,next[e]=son[y],son[y]=e;
	rep(i,m) read(x),read(k[i]),nxt[i]=lst[x],lst[x]=i;
	dfs(1,-1),work(1,-1,0); rep(i,m) printf("%d\n",ans[i]);
	return 0;
}
