#pragma warning(disable:4996)
#include<stdio.h>
#include<algorithm>
#include<vector>
using namespace std;
#define N_ 100100
struct A{ int a, b; } tp;
vector<A>Q[N_];
vector<int>E[N_];
int n, m, C[N_], Sum[N_], SZ[N_], Cnt[N_], r[N_];
bool v[N_];
void Do(int a){
	v[a] = true;
	SZ[a] = 1;
	int i;
	for (i = 0; i < E[a].size(); i++){
		if (!v[E[a][i]]){
			Do(E[a][i]);
			SZ[a] += SZ[E[a][i]];
		}
	}
}
void Add(int a, int x){
	if (x == -1)Sum[a]--;
	else Sum[a + 1]++;
}
void Pro(int a, int p, int ck){
	Add(Cnt[C[a]], ck);
	Cnt[C[a]]+=ck;
	int i;
	for (i = 0; i < E[a].size(); i++){
		if (E[a][i] != p)Pro(E[a][i], a, ck);
	}
}
void DFS(int a, int p){
	int i, MX = 0, x = -1;
	for (i = 0; i < E[a].size(); i++){
		if (p != E[a][i] && MX < SZ[E[a][i]]){
			MX = SZ[E[a][i]], x = i;
		}
	}
	for (i = 0; i < E[a].size(); i++){
		if (p != E[a][i] && x != i){
			DFS(E[a][i], a);
			Pro(E[a][i], a, -1);
		}
	}
	if(x != -1)DFS(E[a][x], a);
	for (i = 0; i < E[a].size(); i++){
		if (p != E[a][i] && x != i){
			Pro(E[a][i], a, 1);
		}
	}
	Add(Cnt[C[a]], 1);
	Cnt[C[a]]++;
	for (i = 0; i < Q[a].size(); i++){
		r[Q[a][i].b] = Sum[Q[a][i].a];
	}
}
int main()
{
	int i, a, b;
	scanf("%d%d", &n, &m);
	for (i = 1; i <= n; i++)scanf("%d", &C[i]);
	for (i = 1; i < n; i++){
		scanf("%d%d", &a, &b);
		E[a].push_back(b);
		E[b].push_back(a);
	}
	for (i = 0; i < m; i++){
		scanf("%d%d", &a, &b);
		tp.a = b, tp.b = i;
		Q[a].push_back(tp);
	}
	Do(1);
	DFS(1, -1);
	for (i = 0; i < m; i++)printf("%d\n", r[i]);
}