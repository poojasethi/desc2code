#include<cstdio>
#include<cmath>
#include<algorithm>
#define nn 100010
using namespace std;

struct node{int end,next;
}g[nn*2];
struct qur{int l,r,id,k;
}q[nn];

int X,i,n,r,x,y,m,l,k,tot,tt;
int st[nn],ed[nn],ans[nn],f[nn],sum[nn],fa[nn],C[nn],c[nn];

void link(int a,int b)
 {g[++tot].end=b;
  g[tot].next=fa[a];fa[a]=tot;
 }
void dfs(int w,int pre)
 {st[w]=++tt;C[tt]=c[w];
  for (int i=fa[w];i;i=g[i].next)
   if (g[i].end!=pre)
    dfs(g[i].end,w);
  ed[w]=tt;
 }
bool cmp(const qur&a,const qur&b)
 {if (a.l/X!=b.l/X)return a.l<b.l;
  if ((a.l/X)&1)return a.r<b.r;else return a.r>b.r;
 }
void add(int w)
 {f[C[w]]++;sum[f[C[w]]]++;
 }
void dec(int w)
 {sum[f[C[w]]]--;f[C[w]]--;
 }
int main()
{
 scanf("%d%d",&n,&m);
 for (i=1;i<=n;i++)scanf("%d",&c[i]);
 for (i=1;i<n;i++)
   {scanf("%d%d",&x,&y);
    link(x,y);
    link(y,x);
   }
  dfs(1,-1);
 for (i=1;i<=m;i++){
  scanf("%d%d",&l,&k);
  q[i].l=st[l];q[i].r=ed[l];
  q[i].k=k;q[i].id=i;
                   } 
 X=(int)(sqrt(n));
 sort(q+1,q+m+1,cmp);
 l=1;r=0;
 for (i=1;i<=m;i++){
	 while (r<q[i].r)add(++r);
	 while (l<q[i].l)dec(l++);
	 while (r>q[i].r)dec(r--);
	 while (l>q[i].l)add(--l);
	 ans[q[i].id]=sum[q[i].k];
				   }
 for (i=1;i<=m;i++)printf("%d\n",ans[i]);
 //for(;;);
 return 0;
}
