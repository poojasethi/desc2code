#include <cmath>
#include <cstdio>
#include <algorithm>
#define maxn 200005
#define ins(x) s[++c[x]]++
#define del(x) s[c[x]--]--
using namespace std;

struct query
{
	int l,r,k,x,p;
	bool operator <(const query&B) const {return x<B.x||(x==B.x&&r<B.r);}
} b[maxn];
int N,M,K,S,a[maxn],head[maxn],lk[maxn*2],next[maxn*2],L[maxn],R[maxn],q[maxn],ans[maxn],c[maxn],s[maxn];

void add(int u,int v,int t) {lk[t]=v,next[t]=head[u],head[u]=t;}

void init()
{
	scanf("%d%d",&N,&M),K=sqrt(N)+1;
	for (int i=1; i<=N; i++) scanf("%d",&a[i]);
	for (int i=1,u,v; i<N; i++) scanf("%d%d",&u,&v),add(u,v,i),add(v,u,i+N-1);
}

void dfs(int u,int fa)
{
	q[L[u]=++S]=a[u];
	for (int i=head[u],v; v=lk[i],i; i=next[i]) if (v!=fa) dfs(v,u);
	R[u]=S;
}

void doit()
{
	dfs(1,0);
	for (int i=1,x,y; i<=M; i++) scanf("%d%d",&x,&y),b[i].l=L[x],b[i].r=R[x],b[i].k=y,b[i].p=i,b[i].x=L[x]/K;
	sort(b+1,b+M+1);
	for (int i=1,l=1,r=0; i<=M; i++)
	{
		for (;l>b[i].l;) ins(q[--l]);
		for (;r<b[i].r;) ins(q[++r]);
		for (;l<b[i].l;) del(q[l++]);
		for (;r>b[i].r;) del(q[r--]);
		ans[b[i].p]=s[b[i].k];
	}
	for (int i=1; i<=M; i++) printf("%d\n",ans[i]);
}

int main()
{
	init();
	doit();
	return 0;
}