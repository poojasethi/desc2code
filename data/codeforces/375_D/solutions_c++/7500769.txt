#include <cstdio>
#include <cstdlib>
using namespace std;

int n,m,cnt,qcnt,x,y;
int son[500001],next[500001],ed[500001],num[500001],t[500001],a[500001];
int qson[500001],qnext[500001],qed[500001],fa[500001],size[500001];
int zson[500001],ans[500001],q[500001];

void add(int x,int y)
{
	next[++cnt]=son[x]; son[x]=cnt; ed[cnt]=y;
}

void qadd(int x,int y)
{
	qnext[++qcnt]=qson[x]; qson[x]=qcnt; qed[qcnt]=y;
}

void dfs(int u)
{
	size[u]=1;
	int Max=0,Maxt=0;
	for (int j=son[u];j;j=next[j])
	{
		int v=ed[j];
		if (!fa[v]) 
		{
			fa[v]=u; dfs(v); 
			if (size[v]>Max) Max=size[v],Maxt=v;
			size[u]+=size[v];
		}
	}
	zson[u]=Maxt;
}

void calc(int u,int f)
{
	if (f<0)
	{
		num[t[a[u]]]--; t[a[u]]--; //num[t[a[u]]]++;
	} else {
		t[a[u]]++; num[t[a[u]]]++;
	}
	for (int j=son[u];j;j=next[j])
	{
		int v=ed[j];
		if (fa[v]==u) calc(v,f);
	}
}

void work(int u)
{
	for (int j=son[u];j;j=next[j])
	{
		int v=ed[j];
		if (fa[v]==u&&zson[u]!=v)
		{
			work(v);
			calc(v,-1);
		}
	}
	if (zson[u]) work(zson[u]);
	num[++t[a[u]]]++;
	for (int j=son[u];j;j=next[j])
	{
		int v=ed[j];
		if (fa[v]==u&&zson[u]!=v) calc(v,1);
	}
	for (int j=qson[u];j;j=qnext[j])
	{
		int v=qed[j];
		ans[v]=num[q[v]];
	}
}

int main()
{
//	freopen("375D.in","r",stdin);
//	freopen("375D.out","w",stdout);	
	scanf("%d%d",&n,&m);
	for (int i=1;i<=n;i++) scanf("%d",&a[i]);
	for (int i=1;i<n;i++)
	{
		scanf("%d%d",&x,&y);
		add(x,y); add(y,x);
	}
	for (int i=1;i<=m;i++)
	{
		scanf("%d%d",&x,&q[i]);
		qadd(x,i);
	}
	fa[1]=-1; dfs(1);
	work(1);
	for (int i=1;i<=m;i++) printf("%d\n",ans[i]);
}
