#include<cstdio>
#include<cmath>
#include<algorithm>
using namespace std;
#define rep(i,n) for (int i=1;i<=n;++i)
const int N=200005;
int n,m,x,y,S,D,e,a[N],ed[N],next[N],son[N],L[N],R[N],l[N],r[N],k[N],id[N],v[N],c[N],s[N],ans[N];
void read(int &x)
{
	#define CH getchar()
	char ch; x=0; for (ch=CH;ch<'0' || ch>'9';ch=CH);
	for (;ch>='0' && ch<='9';x=x*10+ch-48,ch=CH);
}
void dfs(int x,int fa)
{
	v[L[x]=++D]=a[x];
	for (int p=son[x];p;p=next[p]) if (ed[p]!=fa) dfs(ed[p],x);
	R[x]=D;
}
bool cmp(const int i,const int j){return l[i]/S==l[j]/S?(l[i]/S&1)?r[i]<r[j]:r[i]>r[j]:l[i]<l[j];}
int main()
{
	read(n),read(m),S=int(sqrt(n+0.)); rep(i,n) read(a[i]);
	rep(i,n-1) read(x),read(y),
		ed[++e]=y,next[e]=son[x],son[x]=e,
		ed[++e]=x,next[e]=son[y],son[y]=e;
	dfs(1,-1);
	rep(i,m) read(x),read(y),l[i]=L[x],r[i]=R[x],k[i]=y,id[i]=i;
	sort(id+1,id+m+1,cmp); int L=1,R=0;
	rep(j,m){
		int i=id[j];
		while (L>l[i]) ++c[++s[v[--L]]];
		while (R<r[i]) ++c[++s[v[++R]]];
		while (L<l[i]) --c[s[v[L++]]--];
		while (R>r[i]) --c[s[v[R--]]--];
		ans[i]=c[k[i]];
	}
	rep(i,m) printf("%d\n",ans[i]);
	return 0;
}
