#include <cstdio>
#include <algorithm>
using namespace std;
const int N = 100010;
#define min(x,y) ((x)>(y)?(y):(x))
#define max(x,y) ((x)>(y)?(x):(y))
int x[N],y[N],cx[N],cy[N],s[2][2];
int n,m,vx,vy,dx,dy;
long long ans=0;
int read_int(){
	int a=0;
	int b=1,c=getchar();
	if(c=='-')b=-1;
	else a=c-48;
	while((c=getchar())!=' '&&c!='\n')
		a=a*10+c-48;
	a*=b;
	return a;
}
int main()
{
    n=read_int();
    m=(n-1)/2;
    for(int i=0;i<n;++i){x[i]=read_int();y[i]=read_int();cx[i]=x[i],cy[i]=y[i];}
    sort(x,x+n); dx = x[m+1]-x[m];
    sort(y,y+n); dy = y[m+1]-y[m];
    if(n%2){
        dx = min(dx,x[m]-x[m-1]);
        dy = min(dy,y[m]-y[m-1]);
    }
    vx = x[m],vy = y[m];

    bool exist=false;
    for(int i=0;i<n;++i){
        ans += abs(x[i]-vx)+abs(y[i]-vy);
        s[cx[i]<=vx][cy[i]<=vy]=1;
        if(vx==cx[i]&&vy==cy[i])exist=true;
    }

    if( (n%2==0 || exist) && s[0][0]&s[0][1]) ans = max( ans-dx, ans-dy );
    printf("%I64d\n",ans*2);
    return 0;
}