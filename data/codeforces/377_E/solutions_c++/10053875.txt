#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <vector>
#include <ctime>
#define fi first
#define se second
#define PA pair<int,int>
#define VI vector<int>
#define VP vector<PA >
#define mk(x,y) make_pair(x,y)
#define N 200010
#define int64 long long
#define lb long double
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int64 v,c;
	inline bool operator < (const ww &A) const {
		return v<A.v||v==A.v&&c>A.c;
	}
} a[N],g[N];
int i,j,k,n,m,t;
int64 ti[N];
inline bool cc1(const ww &a,const ww &b) {
	return a.v<b.v||a.v==b.v&&a.c<b.c;
}
inline lb jiao(ww a,ww b) {
	lb t=1;
	return t*(b.c-a.c)/(a.v-b.v);
}
inline void into(int64 k,int64 b) {
	for (;t>1&&jiao(g[t-1],g[t])>=jiao(g[t-1],(ww){k,b});t--);
	g[++t]=(ww){k,b};
}
inline ww suan(int x,int64 y) {
	int64 k=g[x].v,b=g[x].c;
	int64 cha=y-b;
	int64 tim=cha/k+(cha%k>0);
	int64 sh=tim*k-cha;
	return (ww){tim,sh};
}
int main() {
	{
		int64 x;
		scanf("%d%I64d",&n,&x);
		a[++n]=(ww){(int64)1e9,x};
	}
	For(i,1,n-1) {
		int x,y;
		scanf("%d%d",&x,&y);
		a[i]=(ww){x,y};
	}
	sort(a+1,a+n+1,cc1);
	for (i=n;i;i--)
	if (!a[i].c) break;
	into(a[i].v,0);
	for (i++;i<=n;i++) if (a[i].v>a[i-1].v) {
		int l=1,r=t,mid1,mid2;
		for (;l+3<r;) {
			mid1=(r-l)/3+l; mid2=(r-l)/3*2+l;
			if (suan(mid1,a[i].c)<suan(mid2,a[i].c)) r=mid2;
			else l=mid1;
		}
		int id=l;
		For(j,l+1,r) if (suan(j,a[i].c)<suan(id,a[i].c)) id=j;
		ww A=suan(id,a[i].c);
		ti[i]=A.v;
		into(a[i].v,A.c-ti[i]*a[i].v);
	}
	printf("%I64d\n",ti[n]);
	return 0;
}
