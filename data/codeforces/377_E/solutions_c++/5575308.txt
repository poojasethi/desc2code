#include <cmath>
#include <map>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <set>
#include <bitset>
#include <memory.h>
#include <functional>
#include <queue>
#include <fstream>
#include <ctime>
#include <deque>
#include <utility>
#include <stack>
#include <sstream>
#include <list>
#include <cctype> 
#include <numeric> 
#include <iomanip>
using namespace std;
#define sqr(_) ((_)*(_))


typedef long long LL;
typedef pair<LL, LL> Pii;
#define x first
#define y second
#define mp make_pair

const int MAXN = 100000 * 2 + 10;

int n, top;
LL s, a[MAXN], t[MAXN], Tohka = (LL)1e+18;
double B[MAXN];
Pii b[MAXN], stk[MAXN];

double calc(int id, LL x)
{
	return 1.0 / b[id].x * x + B[id];
}
LL Find(LL l, LL r, int a, int b)
{
	while (l <= r)
	{
		LL mid = (l + r) >> 1;
		if (calc(a, mid) + 1e-10 < calc(b, mid))
			l = mid + 1;
		else
		r = mid - 1;
	}
	return r;
}
void Push(int id)
{
	for (; top >= 1 && stk[top].x >= a[id] && calc(id, stk[top].x) < calc(stk[top].y, stk[top].x) + 1e-10; --top);
	stk[++top].y = id;
	if (top == 1)
		stk[top].x = 0;
	else
	stk[top].x = Find(max(stk[top - 1].x, a[id]), (LL)1e+18, stk[top - 1].y, stk[top].y);
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout);
#endif
	cin >> n >> s;
	for (int i = 1; i <= n; ++i)
		scanf("%I64d%I64d", &b[i].x, &b[i].y);
	sort(b + 1, b + n + 1);
	for (int i = 1; i <= n; ++i)
	{
		int p = lower_bound(stk + 1, stk + top + 1, mp(b[i].y, 0ll)) - stk - 1;
		if (stk[p].y)
		{
			int j = stk[p].y;
			t[i] = (LL)calc(j, b[i].y) + 1;
			if ((t[i] - t[j] - 1) * b[j].x + a[j] >= b[i].y)
				--t[i];
			int S = j;
			Pii c = mp(t[i], -((t[i] - t[j]) * b[j].x + a[j]));

			while ((t[i] - t[j]) * b[j].x + a[j] >= stk[p + 1].x && p < top)
			{
				++p;
				j = stk[p].y, t[i] = (LL)calc(j, b[i].y) + 1;
				if ((t[i] - t[j] - 1) * b[j].x + a[j] >= b[i].y)
					--t[i];
				if (c > mp(t[i], -((t[i] - t[j]) * b[j].x + a[j])))
					S = j, c = mp(t[i], -((t[i] - t[j]) * b[j].x + a[j]));
			}

			t[i] = c.x, j = S;
			a[i] = (t[i] - t[j]) * b[j].x + a[j] - b[i].y;
			B[i] = (double)t[i] - 1.0 / b[i].x * a[i];
			Push(i);
//			cout << t[i] << " " << (s - a[i]) / b[i].x << " " << (s - a[i]) % b[i].x << endl;
			Tohka = min(Tohka, t[i] + (s - a[i]) / b[i].x + ((s - a[i]) % b[i].x > 0));
		}
		if (b[i].y == 0)
		{
			Push(i);
			Tohka = min(Tohka, t[i] + (s - a[i]) / b[i].x + ((s - a[i]) % b[i].x > 0));
		}
	}
	cout << Tohka << endl;
	fclose(stdin);
	fclose(stdout);
	return 0;
}
