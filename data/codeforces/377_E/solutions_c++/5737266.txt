#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef long double ld;

const int MAX=2e5+10;

int n;
LL s;
pair<LL,LL> build[MAX],st[MAX];
//f_i 表示最早买下k的时刻
//f_i=f_j + ceil( (v[i]-res[j])/c[j] )
//得到了时刻。。
//(t-f_j)*c[j] - v[i] + res[j] 最大的玩意儿
//二分时刻
//(t-f_j) * c[j] - v[i] + res[j] 最大值
//t * c[j] + res[j] - f_j * c[j]  -v[i] 
//ax+b
//a递增  求最大值

pair<LL,LL> f[MAX];
pair<LL,LL> q[MAX];
int head,end;

ld get(int l,int r)
{
	return ld(q[l].y-q[r].y)/(q[r].x-q[l].x);
}

void init( LL a, LL b)
{
	while(head<end-1)
	{
		int l=end-2;
		int r=end-1;
		//q[l].x * t
		ld x=get(l,r);
		if(x * q[r].x + q[r].y <= x* a + b)
			--end;
		else break;
	}
	q[end++] = mp(a,b);
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
	int i;
	cin>>n>>s;
	REP(i,1,n)
	{
		cin>>build[i].y>>build[i].x;
		build[i].y*=-1;
	}
	sort(build+1,build+n+1);

	int top=0;
	REP(i,1,n)
	{
		build[i].y*=-1;
		if(build[i].x>=s)
			continue;
		if(top && build[i].y<=st[top].y)
			continue;
		st[++top]=build[i];
	}
	n=top;
	REP(i,1,n)
		build[i]=st[i];
	build[++n]=mp(s,0);

	f[1]=mp(0,0);
	init(build[1].y,0);

	REP(i,2,n)
	{
		while(head<end-1)
		{
			int l=head;
			int r=head+1;
			ld x=floor( get(l,r) );
			if(x*q[l].x+q[l].y>=build[i].x)
				break;
			head++;
		}
		LL t=ceil(ld(build[i].x-q[head].y)/q[head].x);
		f[i].x=t;
		f[i].y=t*q[head].x + q[head].y - build[i].x;
		init(build[i].y , - build[i].y * f[i].x + f[i].y);
	}
	cout<<f[n].x<<endl;
	return 0;
}
