#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
typedef long long LL;
inline void readi(int &x);
inline void readll(LL &x);
const int maxn=200005;
int n,top;
LL e,ans;

struct BD{int v,c;}p[maxn];
bool cmp1(const BD &a,const BD &b){return a.v==b.v?a.c>b.c:a.v<b.v;}

struct line
{
    LL k,b;
    line (const LL &kk=0,const LL &bb=0){k=kk,b=bb;}
    LL calc()
    {return (e-b-1)/k+1;}
}l[maxn];
LL w[maxn];

void init()
{
    readi(n);readll(e);
    for(int i=1;i<=n;i++)
        readi(p[i].v),readi(p[i].c);
    sort(p+1,p+n+1,cmp1);
    int t=0;
    for(int i=1;i<=n;i++)
    {
        while(t&&p[i].c<=p[t].c)t--;
        p[++t]=p[i];
    }
    n=t;
}

void add(const BD &p)
{
    int low=0,high=top,mid;
    while(low+1<high)
    {
        mid=low+high>>1;
        if(l[mid].k*(w[mid+1]-1)+l[mid].b>=p.c)high=mid;
        else low=mid;
    }
    LL x=(p.c-l[high].b-1)/l[high].k+1,s;
    line t=line(p.v,l[high].k*x+l[high].b-p.c-x*p.v);
    while(top&&(s=(l[top].b-t.b-1)/(t.k-l[top].k)+1)<=w[top])top--;
    l[++top]=t;
    w[top]=s;
}

void work()
{
    l[top=1]=line(p[1].v,-p[1].c);
    ans=l[1].calc();
    for(int i=2;i<=n;i++)
    {
        add(p[i]);
        ans=min(ans,l[top].calc());
    }
    printf("%I64d\n",ans);
}

int main()
{
    init();
    work();
    return 0;
}
inline void readi(int &x)
{char c;for(c=getchar();c>'9'||c<'0';c=getchar());
x=c^'0';for(c=getchar();c>='0'&&c<='9';c=getchar())x=x*10+(c^'0');}
inline void readll(LL &x)
{char c;for(c=getchar();c>'9'||c<'0';c=getchar());
x=c^'0';for(c=getchar();c>='0'&&c<='9';c=getchar())x=x*10+(c^'0');}