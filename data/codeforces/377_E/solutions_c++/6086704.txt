//Cookie Clicker
#include<cstdio>
#include<iostream>
#include<algorithm>
#define rep(i,l,r) for(int i=l;i<=r;i++)
#define re(i,n) for(int i=0;i<n;i++)
#define db(x) cout<<#x<<"="<<(x)<<" "
#define el cout<<endl
#define PII pair<int,int>
#define c0 first
#define c1 second
using namespace std;
typedef long long ll;
const int MXN=200010;ll inf=1e17;

int N;ll S;

PII A[MXN];//c0 C  c1 V

void init(){
	scanf("%d%I64d",&N,&S);
	rep(i,1,N) scanf("%d%d",&A[i].c1,&A[i].c0);
	sort(A+1,A+N+1);
	int n=0;
	rep(i,1,N)if (n==0||A[i].c1>A[n].c1){
		A[++n]=A[i];
	}
	N=n;
	//rep(i,1,N) cout<<A[i].c0<<" "<<A[i].c1<<endl;
}


namespace solve{
	PII F[MXN];//c0 T  c1 -R
	int q[MXN],tim[MXN],t,w;
	PII G(int i,int j){
		static int t;
		//db(i),db(j),el;
		t=(A[i].c0+F[j].c1+ A[j].c1-1)/A[j].c1;
		return PII(F[j].c0+t,-(A[j].c1*t-F[j].c1-A[i].c0));
	}
	int Time(int i,int j){
		static int X,Y,M;
		X=i+1,Y=N+1;
		while (Y-X>1){
			M=(X+Y)>>1;
			if (G(M,i)<=G(M,j)) Y=M; else X=M;
		}
		return X;
	}
	ll answer=inf;
	void solve(){
		t=1,w=0;
		rep(i,1,N){
			//db(i),el;
			while (t<w&&i>tim[t]) t++;
			if (A[i].c0==0) F[i]=PII(0,0);
			else{
				if (t>w) cout<<"ERROR"<<endl;
				F[i]=G(i,q[t]);
			}
			//db(F[i].c0),db(-F[i].c1),el;
			//db(1),el;
			if (i==N) break;
			
			//db(t),db(w),el;
			
			while (t<=w&&G(i+1,q[w])>=G(i+1,i)) w--;
			while (t<w&&tim[w-1]>=Time(i,q[w])) w--;
			if (t<=w) tim[w]=Time(i,q[w]);
			q[++w]=i;
			//db(1),el;el;
		}
		rep(i,1,N){
			answer=min(answer,F[i].c0+(S+F[i].c1+ A[i].c1-1)/A[i].c1);
		}
		cout<<answer<<endl;
	}
}


int main(){
	init();
	solve::solve();
	return 0;
}
