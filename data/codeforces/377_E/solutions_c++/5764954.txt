#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<vector>
#include<deque>
#define N 300005
using namespace std;
typedef long long LL;
typedef pair<LL,LL> Pair;
LL a,b,c,d,e,f,g,h,i,j,k;
Pair H[N];
LL F[N],G[N];
LL tar,last,an;
LL que[N],l,r;

bool cmp(Pair x,Pair y)
{
    return x.second < y.second;
}
LL Div(LL x,LL y)
{
    return x / y + (x % y != 0);
}
Pair Make(LL x,LL y)
{
    Pair R;
    R.first = F[x] + Div(max(y - G[x], 0LL), H[x].first);
    R.second = G[x] + H[x].first * (R.first - F[x]) - y;
    return R;
}
LL Find(LL x,LL y)
{
    LL low,high,mid;
    LL R = 10000000000000009LL;
    low = 0LL; high = 10000000000000009LL;
    while(low <= high)
    {
        mid = (low + high) >> 1;
        Pair t1 = Make(x,mid), t2 = Make(y,mid);
        if(t2.first < t1.first || (t2.first == t1.first && t2.second > t1.second))
        {
            R = min(R, mid);
            high = mid - 1;
        }
        else low = mid + 1;
    }
    return R;
}

int main()
{
    cin >> a >> tar;
    for(i = 1; i <= a; i ++)
        cin >> H[i].first >> H[i].second;
    sort(H + 1, H + a + 1, cmp);
    l = 1;que[++r] = 1;
    F[1] = G[1] = 0;
    last = H[1].first;
    an = Div(tar, H[1].first);
    for(i = 2; i <= a; i ++)
    {
        if(H[i].first <= last) continue;
        while(l < r)
        {
            Pair t1 = Make(que[l], H[i].second), t2 = Make(que[l + 1], H[i].second);
            if(t2.first < t1.first || (t2.first == t1.first && t2.second >= t1.second)) l ++;
            else break;
        }
        Pair tt = Make(que[l],H[i].second);
        F[i] = tt.first; G[i] = tt.second;
        while(r > l)
        {
            LL yy = Find(que[r - 1], que[r]);
            Pair t1 = Make(i, yy), t2 = Make(que[r], yy);
            if(t1.first < t2.first || (t1.first == t2.first && t1.second >= t2.second)) r --;
            else break;
        }
        que[++r] = i;
        last = H[i].first;
        an = min(an, F[i] + Div(max(tar - G[i], 0LL), H[i].first));
    }
    cout << an << endl;
    return 0;
}