/*
    Problem:
    Algorithm:
    Note:
*/
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<vector>
#include<map>
#include<queue>
#include<string>
#include<bitset>
#include<iomanip>
#include<iostream>
#include<cmath>
#include<complex>
using namespace std;

#define rep(i,x,y) for(i=x;i<=y;i++)
#define _rep(i,x,y) for(i=x;i>=y;i--)
#define CL(S,x) memset(S,x,sizeof(S))
#define CP(S1,S2) memcpy(S1,S2,sizeof(S2))
#define ALL(x,S) for(x=S.begin();x!=S.end();x++)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define fi first
#define se second
#define upmin(x,y) x=min(x,y)
#define upmax(x,y) x=max(x,y)
#define pb push_back
//#define I64d lld

typedef long long ll;
typedef long double real;
typedef pair<ll,ll> pii;

template<class T> inline void read(T&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};
char getc(){char c;for(c=getchar();c<=32;c=getchar());return c;}

const int N=200010;
const int inf=int(2e9);
const ll INF=ll(1e18);
int n,tn,i,j,g;ll T,p,s,tY,tB,tK;pii a[N];
ll ceil(ll a,ll b){return a%b==0?a/b:a/b+1;}
ll B[N],K[N],X[N],Y[N];

int main()
{
    //freopen("1.in","r",stdin);
    //freopen("1.out","w",stdout);
	
	read(n);read(s);
	rep(i,1,n)read(a[i].fi),read(a[i].se);
	sort(a+1,a+1+n);
	
	rep(i,1,n)
	{
		while(tn>0&&a[i].se<a[tn].se)tn--;
		if(tn==0||a[i].fi>a[tn].fi)a[++tn]=a[i];
	}
	n=tn;
	a[++n]=mp(inf,s);
	
	g=1;X[1]=Y[1]=B[1]=0;K[1]=a[1].fi;
	
	rep(i,2,n)
	{
		p=upper_bound(Y+1,Y+1+g,a[i].se)-Y-1;
		T=ceil(a[i].se-B[p],K[p]);
		if(p<g&&X[p+1]<T)T=X[p+1];
		if(i==n)break;
		
		tY=B[p]+T*K[p];
		if(p<g&&X[p+1]==T)upmax(tY,Y[p+1]);
		
		tY-=a[i].se;tK=a[i].fi;tB=tY-tK*T;
	
		for(;g>0&&tK*X[g]+tB>K[g]*X[g]+B[g];g--);
		
		++g;
		X[g]=(B[g-1]-tB)/(tK-K[g-1])+1;
		B[g]=tB;K[g]=tK;Y[g]=K[g]*X[g]+B[g];
		
		//rep(j,1,g)cout<<X[j]<<' ';cout<<endl;
	}
	
	cout<<T<<endl;
	

    scanf("\n");
    return 0;
}
