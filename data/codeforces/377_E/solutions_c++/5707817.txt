
#include <cstdio>
#include <iostream>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <cstring>
#define ll long long
#define ld long double
#define pb push_back
#define ci const int&
#define rep(i,n) for( int i = 0; i < n; ++i )
#define REP(i,n) for ( int i = 1; i <= n; ++i )
#define fo(i,j,k) for ( int i = j; i <= k; ++i )
#define sqr(x) ((x)*(x))
#define Abs(x) ((x)>0?(x):-(x))
#define inf 100000201200000000LL
#define eps 1e-8
#define Maxn 202013
#define Maxm
#define Mod 20101009
#define rev 15075757
 
 
using namespace std;

int N, ed;
ll S, ans;

struct Node{
	ll v, c;
	bool operator==( Node y ){
		return c<=y.c&& v>=y.v;
	}
} s[Maxn];
struct fun{
	ll k, b, x, y;
	inline ll ask(ll c){
		return (c-b)/k + (((c-b)%k)>0);
	}
} f[Maxn];

ll askcp(ll k1, ll k2, ll c1, ll c2){
	return (c1-c2)/(k2-k1);
}

inline bool cmp(Node x, Node y){
	return (x.c==y.c)?(x.v>y.v):(x.c<y.c);
}

 
int main(){
    //freopen("t.in","r",stdin);freopen("t.out","w",stdout);

	cin>>N>>S;
	ans = inf;
	rep(i,N) scanf( "%I64d%I64d", &s[i].v, &s[i].c );
	sort(s,s+N,cmp);
	N = unique(s,s+N)-s;
	f[0].k = s[0].v;
	REP(i,N-1){
		ll &y0 = s[i].c;
		f[i].k = s[i].v; 
		int l = 0, r = ed, ret = 0;
		while ( l <= r ){
			int mid = (l+r)>>1;
			if ( f[mid].y<=y0 ){
				ret = mid;
				l = mid+1;
			}
			else{
				r = mid-1;
			}
		}
		f[i].x = f[ret].ask(y0);
		f[i].b = f[ret].k*f[i].x + f[ret].b - s[i].c - s[i].v*f[i].x;
		f[i].x = askcp(f[i].k,f[ed].k,f[i].b,f[ed].b);
		while ( ed&& f[ed].x >= f[i].x ){
			--ed;
			f[i].x = askcp(f[i].k,f[ed].k,f[i].b,f[ed].b);
		}
		f[i].y = f[ed].k*f[i].x + f[ed].b + 1;
		f[++ed] = f[i];
	}
	rep(i,ed+1)
		ans = min(ans, f[i].ask(S));
	cout<<ans<<endl;

    //fclose(stdin);fclose(stdout);
    return 0;
}
