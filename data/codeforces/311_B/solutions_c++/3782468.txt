#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#define int64 long long
#define N 120000
using namespace std;
int64 d[N],s[N],a[N],q1[N],q2[N],ans=1e16,f[N],g[N],K,B;
double L[N];
int x,y,l,r,n,m,p,i,j;
long double jiao(int64 k1,int64 b1,int64 k2,int64 b2){
	if(k1==k2){
		if(b1<b2)return -1e15;
		return 1e15;
	}
	return double(b1-b2)/(k2-k1);
}
int main(){
	scanf("%d%d%d",&n,&m,&p);
	for(i=2;i<=n;++i)scanf("%d",&d[i]),d[i]+=d[i-1];
	for(i=1;i<=m;++i){
		scanf("%d%d",&x,&y);
		a[i]=y-d[x];
	}
	sort(a+1,a+m+1);
	for(i=1;i<=m;++i)s[i]=s[i-1]+a[i];
	memset(f,3,sizeof(f));
	f[0]=0;
	for(i=1;i<=p;++i){
		l=1; r=0;
		for(j=0;j<m;++j){
			K=-j;
			B=f[j]+s[j];
			while(l<=r && jiao(K,B,q1[r],q2[r])<L[r])r--;
			if(l>r)q1[++r]=K,q2[r]=B,L[r]=-1e10;
			else {
				L[r+1]=jiao(K,B,q1[r],q2[r]);
				q1[++r]=K;
				q2[r]=B;
			}
			while(l+1<=r && L[l+1]<=a[j+1])l++;
			g[j+1]=a[j+1]*(j+1)-s[j+1]+q1[l]*a[j+1]+q2[l];
		}
		for(j=0;j<=m;++j)f[j]=g[j];
		ans=min(ans,f[m]);
	}
	printf("%I64d\n",ans);
}
