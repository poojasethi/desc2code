#include <cstdio>
#include <algorithm>
using namespace std;
typedef long long ll;
const int N=1e5+5,M=N;
int F;
ll f[M];
int n,m,p,d[N],t[M],last[M];
typedef pair<int,ll> vec;
vec q[M];
inline double cross(vec &i,vec &j,vec &k){
	return double(j.first-i.first)*(k.second-i.second)
	      -double(k.first-i.first)*(j.second-i.second);
}
int main(){
	scanf("%d%d%d",&n,&m,&p);
	for(int i=2;i<=n;i++){
		scanf("%d",d+i);
		d[i]+=d[i-1];
	}
	for(int i=1;i<=m;i++){
		int a;
		scanf("%d%d",&a,t+i);
		f[0]-=t[i]-=d[a];
	}
	sort(t+1,t+m+1);
	for(int k=0;k<p;k++){
		q[0]=vec(0,f[0]);
		int top=0;
		for(int i=1,j=0;i<=m;i++){
			if(k){
				vec now(i,f[i]);
				for(;top>1&&cross(q[top-1],q[top],now)<0;top--);
				if(j>top) j=top;
				q[++top]=now;
				for(;j<top&&q[j+1].second-(ll)q[j+1].first*t[i]<q[j].second-(ll)q[j].first*t[i];j++);
			}
			f[i]=q[j].second+ll(i-q[j].first)*t[i];
		}
	}
	printf("%I64d\n",f[m]);
}
