#include <cstdio>
#include <algorithm>
#define N 100005
#define LL long long
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int n, m, p, a[N], x[N], l, r, hd, tl, q[N];
LL dp[2][N], s[N];

LL cons(int t){
	return dp[r][t] + s[t];
}

LL fuck(int t, int i){
	return (LL) -t * x[i] + cons(t);
}

int main(){
	scanf("%d %d %d", &n, &m, &p);
	FI(i, 2, n){
		scanf("%d", &a[i]);
		a[i] += a[i - 1];
	}
	FI(i, 1, m){
		int c, d;
		scanf("%d %d", &c, &d);
		x[i] = d - a[c];
	}
	sort(x + 1, x + m + 1);
	FI(i, 1, m) s[i] = s[i - 1] + x[i];
	
	l = 0; r = 1;
	FI(i, 1, m) dp[r][i] = 1e13;
	
	while(p--){
		hd = 0; tl = 0;
		q[tl++] = 0;
		FI(i, 1, m){
			while(hd + 1 < tl && fuck(q[hd], i) > fuck(q[hd + 1], i)) hd++;
			dp[l][i] = fuck(q[hd], i) + (LL) x[i] * i - s[i];
			while(hd + 1 < tl && (cons(q[tl - 1]) - cons(i)) * (q[tl - 2] - q[tl - 1]) <= (cons(q[tl - 2]) - cons(q[tl - 1])) * (q[tl - 1] - i)) tl--;
			q[tl++] = i;
		}
		l ^= 1; r ^= 1;
	}
	
	printf("%I64d\n", dp[r][m]);
	scanf("\n");
}
