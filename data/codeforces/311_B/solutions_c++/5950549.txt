#include<bits/stdc++.h>
#define pb push_back
#define sz(x) (int)x.size()
#define scf scanf                              
#define ptf printf
#define fst first
#define scd second
#define forp(i,j,k) for(int i=j;i<k;i++)
#define form(i,j,k) for(int i=j;i>k;i--)
using namespace std;
typedef long long LL;

const int N=1e5+10,M=1e5+10;
      
int q[M],l,r,i0,i1;
LL t[M],f[2][M],s[M],d[N],dis[N];


inline void push(int x)
{
	for(;r-l>1&&(f[i1][q[r-1]] +s[q[r-1]]-f[i1][q[r-2]]-s[q[r-2]])*(x-q[r-1])>(f[i1][x]+s[x]-f[i1][q[r-1]]-s[q[r-1]])*(q[r-1]-q[r-2]);r--);
	q[r++]=x;
}

int main()
{
    int n,m,p;
	scf("%d%d%d",&n,&m,&p);
	forp(i,2,n+1)scf("%I64d",d+i);
	dis[1]=0;
	forp(i,2,n+1)dis[i]=dis[i-1]+d[i];
	int x,y;
	forp(i,0,m)
	{
		scf("%d%d",&x,&y);
		t[i]=y-dis[x];
	}
	sort(t,t+m);
	s[0]=t[0];
	forp(i,1,m)s[i]=s[i-1]+t[i];
	memset(f,0,sizeof(f));
	forp(i,0,m)f[0][i]=(i+1)*t[i]-s[i];
	forp(i,1,p)
	{
		i0=i&1;i1=1-i0;
		l=r=0;                                         
		forp(j,i,m)                  
		{
			push(j-1);
			for(;r-l>1&&f[i1][q[l+1]]+s[q[l+1]]-f[i1][q[l]]-s[q[l]]<t[j]*(q[l+1]-q[l]);l++);
			f[i0][j]=f[i1][q[l]]+(j-q[l])*t[j]-s[j]+s[q[l]];
		}
	}
	ptf("%I64d\n",f[(p-1)&1][m-1]);
    return 0;
}
	 	  		   		 				  	 		   	