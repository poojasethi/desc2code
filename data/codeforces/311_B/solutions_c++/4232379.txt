#include<cstdio>
#include<cstring>
#include<algorithm>
#include<functional>
#define ll long long

const int Maxn=100005;
int n,m,p,q[Maxn],l,r;
ll h,t,d,s[Maxn],a[Maxn],f[105][Maxn];

void init()
{
	scanf("%d%d%d",&n,&m,&p);
	s[1]=0;
	for(int i=2;i<=n;i++)
	{
		scanf("%I64d",&d);
		s[i]=s[i-1]+d;
	}
	for(int i=1;i<=m;i++)
	{
	    scanf("%I64d%I64d",&h,&t);
		a[i]=t-s[h];
	}
	std::sort(a+1,a+m+1,std::less<ll>());
	s[0]=0;
	for(int i=1;i<=m;i++)
	  s[i]=s[i-1]+a[i];
}

ll dy(int i,int fir,int nxt)
{
	return f[i-1][nxt]+s[nxt]-f[i-1][fir]-s[fir];
}

ll dx(int fir,int nxt) {return nxt-fir;}

void slove()
{
	memset(f[0],0,sizeof(f[0]));
	a[0]=0;
	for(int j=1;j<=m;j++)
	  f[1][j]=j*a[j]-s[j];

	for(int i=2;i<=p;i++)
	{
		l=0,r=-1;
		for(int j=1;j<=m;j++)
		{
			while(l<r&&dy(i,q[r-1],q[r])*dx(q[r],j)>=dy(i,q[r],j)*dx(q[r-1],q[r]))
			  r--;
			q[++r]=j;
			while(l<r&&dy(i,q[l],q[l+1])<=dx(q[l],q[l+1])*a[j])
			  l++;
			int k=q[l];
			f[i][j]=f[i-1][k]+a[j]*(j-k)-(s[j]-s[k]);
		}
	}

	printf("%I64d\n",f[p][m]);
}

int main()
{
	init();
	slove();
	return 0;
}


