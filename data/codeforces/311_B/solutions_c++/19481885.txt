#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
const long long oo=1000000000233333;
int i,que[100010];
long long len[100010],a[100010],s[100010],dp[110][100010];
long long g(int k)
{
    return dp[i-1][k]+s[k];
}
int main()
{
    int j,k,m,n,p,q,x,y,z,hd,tl;
    scanf("%d%d%d",&n,&m,&p);
    for (i=2;i<=n;i++)
    {
        scanf("%d",&x);
        len[i]=len[i-1]+x;
    }
    for (i=1;i<=m;i++)
    {
        scanf("%d%d",&x,&y);
        a[i]=y-len[x];
    }
    sort(a+1,a+m+1);
    for (i=1;i<=m;i++)
      s[i]=s[i-1]+a[i];
    for (i=1;i<=m;i++)
      dp[0][i]=oo;
    for (i=1;i<=p;i++)
    {
        hd=1;
        tl=0;
        for (j=0;j<=m;j++)
        {
            while (hd<tl&&
              g(que[hd+1])-g(que[hd])<=
              a[j]*(que[hd+1]-que[hd]))
                hd++;
            dp[i][j]=g(que[hd])+a[j]*(j-que[hd])-s[j];
            while (hd<tl&&
              (g(j)-g(que[tl]))*
              (que[tl]-que[tl-1])<=
              (g(que[tl])-g(que[tl-1]))*
              (j-que[tl]))
                tl--;
            que[++tl]=j;
        }
    }
    printf("%I64d\n",dp[p][m]);
}
