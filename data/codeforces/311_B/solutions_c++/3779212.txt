#include <cstdio>
#include <algorithm>
#define LL long long
#define REP(i,n) for (int i=1;i<=n;++i)
using namespace std;

const int MAXN=100010;
const int MAXP=110;
const LL INF=1999999999999999999ll;
int T,n,m,p,l,r;
LL x,a[MAXN],b[MAXN],c[MAXN],f[MAXP][MAXN],q[MAXN][2];

LL F(int i,int j,int k) {
	return f[i-1][k]+b[j]*(LL)(j-k)-c[j]+c[k];
}

int main() {
	scanf("%d%d%d",&n,&p,&m);
	REP(i,n-1) scanf("%I64d",&a[i+1]);
	REP(i,n) a[i]+=a[i-1];
	REP(i,p) {
		scanf("%I64d%I64d",&x,&b[i]);
		b[i]-=a[x];
	}
	sort(b+1,b+p+1);
	REP(i,p) c[i]=c[i-1]+(LL)b[i];
	for (int i=0;i<=m;++i)
		for (int j=0;j<=p;++j) f[i][j]=INF;
	f[0][0]=0;
	for (int i=1;i<=m;++i) {
		q[l=r=1][0]=q[1][1]=0;
		for (int j=1;j<=p;++j) {
			LL x=j,y=f[i-1][j]+c[j];
			while ((l<r)&&(q[l+1][1]-q[l][1])<b[j]*(q[l+1][0]-q[l][0])) ++l;
			f[i][j]=-b[j]*q[l][0]+q[l][1]+b[j]*(LL)j-c[j];
			while ((l<r)&&((q[r][1]-q[r-1][1])*(x-q[r][0])>(y-q[r][1])*(q[r][0]-q[r-1][0]))) --r;
			if (y<INF) q[++r][0]=x,q[r][1]=y;
		}
	}
	printf("%I64d\n",f[m][p]);
	return 0;
}
