#include <iostream>
#include <cstdio>
#include <algorithm>
using namespace std;

#define maxn 100005

struct lin{long long a,b;}line[maxn];

int n,m,p,i,x,pos[maxn],hi,ti,qb,qe,j,k;
long long d,a[maxn],F[105][maxn];

bool ccw(lin a,lin b,lin c){return (b.b-a.b)*(b.a-c.a)<=(c.b-b.b)*(a.a-b.a);}

void addLine(long long a,long long b){
	++qe;line[qe].a=a,line[qe].b=b;
	while(qe-qb>1&&ccw(line[qe-2],line[qe-1],line[qe])){
		swap(line[qe],line[qe-1]);
		--qe;
	}
}

int main (int argc, char * const argv[]) {
//	freopen("in.txt","r",stdin);
	scanf("%d%d%d",&n,&m,&p);
	for(i=2;i<=n;i++){
		scanf("%d",&x);
		pos[i]=pos[i-1]+x;
	}
	for(i=1;i<=m;i++){
		scanf("%d%d",&hi,&ti);
		ti-=pos[hi];
		d+=ti;
		a[i]=ti;
	}
	sort(a+1,a+m+1);
	for(i=1;i<=p;i++){
		qb=1,qe=0;
		addLine(0,0);
		for(j=1;j<=m;j++){
			F[i][j]=line[qb].b-line[qb].a*a[j]+j*a[j];
			for(k=qb+1;k<=qe;k++)if(F[i][j]>line[k].b-line[k].a*a[j]+j*a[j]){
				F[i][j]=line[k].b-line[k].a*a[j]+j*a[j];
				qb=k;
			}else break;
			if(i>1)addLine(j,F[i-1][j]);
		}
	}
	cout<<F[p][m]-d<<endl;
    return 0;
}
