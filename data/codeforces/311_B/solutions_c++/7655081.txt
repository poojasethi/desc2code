#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#define maxn 100009
using namespace std;
int n,m,p,cur,d[maxn],q[maxn];
__int64 a[maxn],dp[maxn][2],sum[maxn];
int sgn(double x)
{
	if(fabs(x)<1e-9)
		return 0;
	else if(x>0)
		return 1;
	else
		return -1;
}
__int64 f(int k,int i)
{
	return dp[k][cur^1]+a[i]*(i-k)-(sum[i]-sum[k]);
}
bool Cross(double x1,double y1,double x2,double y2)
{
	return sgn(x1*y2-y1*x2)>=0;
}
__int64 Y(int x)
{
	return dp[x][cur^1]+sum[x];
}
int main()
{
	scanf("%d%d%d",&n,&m,&p);
	for(int i=2;i<=n;i++)
	{
		scanf("%d",&d[i]);
		d[i]+=d[i-1];
	}
	for(int i=1;i<=m;i++)
	{
		int h,t;
		scanf("%d%d",&h,&t);
		a[i]=t-d[h];
	}
	sort(a+1,a+1+m);
	for(int i=1;i<=m;i++)
	{
		sum[i]=sum[i-1]+a[i];
		dp[i][cur]=a[i]*i-sum[i];
	}
	cur^=1;
	for(int j=2;j<=p;j++)
	{
		dp[cur][1]=0;
		int h=0,t=0;
		q[t++]=1;
		for(int i=2;i<=m;i++)
		{
			while(t-h>=2&&f(q[h],i)>=f(q[h+1],i))
				h++;
			dp[i][cur]=f(q[h],i);
			while(t-h>=1&&Cross(i-q[t-1],Y(i)-Y(q[t-1]),q[t-1]-q[t-2],Y(q[t-1])-Y(q[t-2])))
				t--;
			q[t++]=i;
		}
		cur^=1;
	}
	printf("%I64d\n",dp[m][cur^1]);
	//system("pause");
	return 0;
}