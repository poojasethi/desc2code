#include <cstdio>
#include <cstring>
#include<algorithm>
using namespace std;

const int maxn=100010;

int a[maxn],b[maxn],q[maxn],f,r;
long long dp[maxn],dp1[maxn],A[maxn],s[maxn];

int main()
{
    int n,m,p,i,j,k;
    scanf("%d%d%d",&n,&m,&p);
    for(i=2;i<=n;i++)
	scanf("%d",&b[i]),b[i]+=b[i-1];
    for(i=1;i<=m;i++)
    {
	scanf("%d%d",&j,&k);
	a[i]=k-b[j];
    }
    sort(a+1,a+1+m);

    for(i=1;i<=m;i++)
	s[i]=s[i-1]+a[i];

    for(i=1;i<=m;i++)
	dp[i]=(i+0ll)*a[i]-s[i];
    p--;

    while(p--)
    {
	dp1[1]=0;
	f=1,r=0;
	for(i=1;i<=m;i++)
	    A[i]=dp[i]+s[i];
	for(i=2;i<=m;i++)
	{
	    while(f<r&&(A[q[r-1]]-A[q[r]])*(q[r]-i+1)>=(A[q[r]]-A[i-1])*(q[r-1]-q[r]))
		r--;
	    q[++r]=i-1;
	    while(f<r&&a[i]*(q[f+1]-q[f]+0ll)>A[q[f+1]]-A[q[f]])
		f++;
	    j=q[f];
	    dp1[i]=dp[j]+s[j]+a[i]*(i-j+0ll)-s[i];
	}
	memcpy(dp,dp1,sizeof(dp));
    }
    printf("%I64d\n",dp[m]);
}
