#include<stdio.h>
#include<algorithm>
using namespace std;
typedef long long int lnt;
typedef double dou;

int n,m,p;
lnt d[100514];
lnt h[100514];
lnt t[100514];
lnt dp[2][100514];
lnt sum[100514];

lnt x[100514];
lnt y[100514];
lnt qs;
lnt top;
lnt cross(lnt nx,lnt ny){return (nx-x[top-1])*(y[top-1]-y[top-2])-(x[top-1]-x[top-2])*(ny-y[top-1]);}
void truli(){
	scanf("%d %d %d",&n,&m,&p);
	for(int i=2;i<=n;i++){
		scanf("%I64d",d+i);
		d[i]+=d[i-1];
		}
	for(int i=1;i<=m;i++){
		scanf("%I64d %I64d",h+i,t+i);
		t[i]-=d[h[i]];
		}
	sort(t+1,t+m+1);
	for(int i=1;i<=m;i++)
		sum[i]+=sum[i-1]+t[i];
	int cr=0,nx=1;
	dp[cr][0]=0;
	for(int j=1;j<=m;j++){
		dp[cr][j]=(lnt)j*t[j]-sum[j];
		}
	for(int i=2;i<=p;i++){
		qs=top=0;
		dp[nx][0]=0;
		x[top++]=-0;
		y[top++]=dp[cr][0]+sum[0];
		for(int j=1;j<=m;j++){
			for(;qs+1<top&&-x[qs]*t[j]+y[qs]>=-x[qs+1]*t[j]+y[qs+1];qs++);
			dp[nx][j]=(-x[qs]*t[j]+y[qs])-sum[j]+(lnt)j*t[j];
			lnt nxx=j,nyy=dp[cr][j]+sum[j];
			for(;top>=2&&cross(nxx,nyy)>=0;top--);
			x[top]=nxx;
			y[top++]=nyy;
			}
		swap(nx,cr);
		}
	printf("%I64d\n",dp[cr][m]);
	}

int main(){
	
	truli();
	
	return 0;
	}
