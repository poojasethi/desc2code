#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <stdio.h>
#include <cmath>
using namespace std;
typedef long double ld;
const ld eps=2e-6;
ld a[1003],s[1003],h[2][3];
ld l(ld e,ld r,ld c,ld v){
  return sqrt((e-c)*(e-c)+(r-v)*(r-v));
}
ld f1[2000],f2[2000];
int cmp(ld e,ld r,ld c,ld v){
  if(e<c-eps)
   return -1;
  if(e>c+eps)
   return 1;
  if(r<v-eps)
   return -1;
  if(r>v+eps)
   return 1;
  return 0;
}
void qs(int q,int w){
  int e=q,r=q+(rand()%(w-q+1));
  ld t1=f1[r],t2=f2[r],y;r=w;
  do{
  while(cmp(f1[e],f2[e],t1,t2)<0)e++;
  while(cmp(f1[r],f2[r],t1,t2)>0)r--;
  if(e<=r){
   y=f1[e];f1[e]=f1[r];f1[r]=y;
   y=f2[e];f2[e]=f2[r];f2[r]=y;
   e++;r--;}
  }while(e<=r);
  if(q<r)qs(q,r);
  if(e<w)qs(e,w);
}
ld pov(ld q,ld w,ld e,ld r,ld t,ld y){
  return (e-q)*(y-w)-(t-q)*(r-w);
}
int main(){
  //freopen("input.txt","r",stdin);
  //freopen("output.txt","w",stdout);
  int q,w,e,r,t,o;
  ld c,c1,c2,v,v1,v2,c9,v9,ans,lr;
  bool b;
  cin>>q>>o;
  for(w=0;w<q;w++)
   cin>>a[w]>>s[w];
  a[q]=a[0];
  s[q]=s[0];
  a[q+1]=a[1];
  s[q+1]=s[1];
  t=1;
  for(w=1;w<=q;w++)
   if(abs(pov(a[t-1],s[t-1],a[w],s[w],a[w+1],s[w+1]))>eps){
    a[t]=a[w];
    s[t]=s[w];
    t++;
   }
  q=t-1;
  for(w=q-1;w>=0;w--){
   a[w+2]=a[w];
   s[w+2]=s[w];
  }
  a[0]=a[q];
  s[0]=s[q];
  a[1]=a[q+1];
  s[1]=s[q+1];
  t=1;
  for(w=1;w<=q;w++)
   if(abs(pov(a[t-1],s[t-1],a[w],s[w],a[w+1],s[w+1]))>eps){
    a[t]=a[w];
    s[t]=s[w];
    t++;
   }
  q=t-1;
  a[q+1]=a[1];
  s[q+1]=s[1];
  a[q+2]=a[2];
  s[q+2]=s[2];
  r=1;
  for(w=1;w<=q;w++)
   if((a[r]>a[w])||((a[r]==a[w])&&(s[r]>s[w])))
    r=w;
  lr=pov(a[r-1],s[r-1],a[r],s[r],a[r+1],s[r+1]);
  for(;o;o--){
   t=0;
   cin>>c1>>v1>>c2>>v2;
   for(w=2;w<=q+1;w++){
    h[0][1]=c2-c1;
    h[0][0]=-(v2-v1);
    h[0][2]=c1*h[0][0]+v1*h[0][1];
    h[1][1]=a[w]-a[w-1];
    h[1][0]=-(s[w]-s[w-1]);
    h[1][2]=a[w]*h[1][0]+s[w]*h[1][1];
    if(abs(h[0][0]*h[1][1]-h[0][1]*h[1][0])<=eps){
     if(abs(pov(c1,v1,c2,v2,a[w],s[w]))<=eps){
      c=pov(a[w-2],s[w-2],a[w-1],s[w-1],a[w],s[w]);
      if(((c<-eps)&&(lr>eps))||((c>eps)&&(lr<-eps))){
       f1[t]=a[w-1];
       f2[t]=s[w-1];
       t++;
      }
      c=pov(a[w-1],s[w-1],a[w],s[w],a[w+1],s[w+1]);
      if(((c<-eps)&&(lr>eps))||((c>eps)&&(lr<-eps))){
       f1[t]=a[w];
       f2[t]=s[w];
       t++;
      }
     }
     continue;
    }
    if(abs(h[0][0])<=eps)
     for(e=0;e<3;e++){
      c=h[0][e];h[0][e]=h[1][e];h[1][e]=c;
     }
    for(e=2;e>=0;e--)
     h[1][e]-=h[0][e]*h[1][0]/h[0][0];
    h[1][2]/=h[1][1];
    h[1][1]=1;
    h[0][2]-=h[1][2]*h[0][1];
    h[0][1]=0;
    h[0][2]/=h[0][0];
    h[0][0]=1;
    c=h[0][2];
    v=h[1][2];
    if(abs(l(a[w],s[w],a[w-1],s[w-1])-l(c,v,a[w],s[w])-l(c,v,a[w-1],s[w-1]))>eps)
     continue;
    f1[t]=c;
    f2[t]=v;
    t++;
   }
   for(w=1;w<=q;w++){
    h[0][1]=c2-c1;
    h[0][0]=-(v2-v1);
    h[0][2]=c1*h[0][0]+v1*h[0][1];
    if(abs(a[w]*h[0][0]+s[w]*h[0][1]-h[0][2])>eps)
     continue;
    c=a[w]+c2-c1;
    v=s[w]+v2-v1;
    c9=pov(c,v,a[w],s[w],a[w-1],s[w-1]);
    v9=pov(c,v,a[w],s[w],a[w+1],s[w+1]);
    if(((c9<-eps)&&(v9>eps))||((c9>eps)&&(v9<-eps))){
     f1[t]=a[w];
     f2[t]=s[w];
     t++;
    }
   }
   if(t)
    qs(0,t-1);
   ans=0;
   for(w=0;w<t-1;w+=2)
    ans+=l(f1[w+1],f2[w+1],f1[w],f2[w]);
   if((-eps<=ans)&&(ans<=0))
    ans=0;
   printf("%.10f\n",((float)ans));
  }
  return 0;
}
