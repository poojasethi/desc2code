#include <algorithm>
#include <iostream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <list>
#include <set>
#include <map>
using namespace std;

#define N  256
#define ALL(x)     x.begin(),x.end()
#define CLR(x,a)   memset(x,a,sizeof(x))
typedef long long    ll;
typedef pair<int,int> PI;
const int INF    = 0x3fffffff;
const int MOD    = 100000007;
const double EPS = 1e-7;

int a[N],op[N],who[N];
int dp[1<<20];

int main()
{
	int n,m;
	char c[2];
	scanf("%d",&n);
	for(int i=0;i<n;i++) scanf("%d",a+i);
	sort(a,a+n,greater<int>());
	scanf("%d",&m);
	for(int i=0;i<m;i++){
		scanf("%1s %d",c,who+i);
		if(who[i]==2) who[i]=-1;
		op[i]=(c[0]=='p');
	}
	for(int i=1;i<(1<<m);i++){
		int x=m-__builtin_popcount(i);
		dp[i]= who[x]==1?-INF:INF;
		for(int j=0;j<m;j++) if(i&(1<<j)){
			int v=dp[i^(1<<j)];
			if(who[x]==1)
				dp[i]=max(dp[i],v+op[x]*a[j]*who[x]);
			else  
				dp[i]=min(dp[i],v+op[x]*a[j]*who[x]);;
		}
	}
	printf("%d\n",dp[(1<<m)-1]);
	return 0;
}
