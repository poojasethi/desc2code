#include <cstdio>
#include <cstring>
#include <algorithm>
#define maxn 100009
#define MOD 1000000007
#define INF 1e9
using namespace std;
int a[maxn],n,m;
int dp[25][1<<20];
struct node
{
	char s[5];int t;
}p[30];
bool cmp(int x,int y)
{
	return x>y;
}
int dfs(int i,int st)
{
	if(i==n+1)
		return 0;
	int &ans=dp[i][st];
	if(ans!=-INF)
		return ans;
	else
	{
		int inv=1;
		if(p[i].t!=p[i+1].t)
		{
			inv=-1;
		}
		if(p[i].s[0]=='p')
		{
			for(int j=0;j<n;j++)
			{
				if((st&(1<<j))==0)
				{
					ans=max(ans,a[j]+inv*dfs(i+1,st^(1<<j)));
				}
			}
		}
		else
		{
			for(int j=0;j<n;j++)
			{
				if((st&(1<<j))==0)
				{
					ans=max(ans,inv*dfs(i+1,st^(1<<j)));
				}
			}
		}
		return ans;
	}
}
int main()
{
	scanf("%d",&m);
	for(int i=0;i<m;i++)
		scanf("%d",&a[i]);
	sort(a,a+m,cmp);
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%s%d",p[i].s,&p[i].t);
	for(int i=0;i<=n+1;i++) for(int j=0;j<1<<n;j++) dp[i][j]=-INF;
	int ans=dfs(1,0);
	if(p[1].t==2)
		ans=-ans;
	printf("%d\n",ans);
	//system("pause");
	return 0;
}