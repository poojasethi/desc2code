#include <iostream>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <utility>
#include <algorithm>
#include <cmath>
#define INF 1000000000

using namespace std;

int n,m,s[1000010],dp[1<<20];
char action[25],team[25];
bool vis[1<<20];

bool cmp(int lhs, int rhs) {
	return lhs > rhs;
}

int recurse(int st, int turn) {
	if (vis[st]) return dp[st];
	vis[st] = true;
	if (action[turn] == 'p') {
		int i;
		for (i=0; st & (1<<i); i++);
		dp[st] = recurse(st | (1<<i), turn+1) + (team[turn]=='1'?s[i]:-s[i]);
	}
	else {
		dp[st] = (team[turn]=='1'?-INF:INF);
		for (int i = 0; i < m; i++) {
			if ((st & (1<<i)) == 0) {
				if (team[turn]=='1')
					dp[st] = max(dp[st],recurse(st | (1<<i), turn+1));
				else
					dp[st] = min(dp[st],recurse(st | (1<<i), turn+1));
			}
		}
	}
	return dp[st];
}

int main() {
	cin >> n;
	for (int i = 0; i < n; i++) cin >> s[i];
	sort(s,s+n,cmp);
	cin >> m;
	for (int i = 0; i < m; i++) cin >> action[i] >> team[i];
	vis[(1<<m)-1] = true;
	cout << recurse(0,0);
}