#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <iostream>

using namespace std;

const int inf = 0x3f3f3f3f;

int dp[21][1 << 20];
bool vis[21][1 << 20];
int n, m, s[101], op[21], who[21], S[101];

int dfs(int a, int b){
	if(a == m) return 0;
	int &ret = dp[a][b];
	if(vis[a][b]) return ret;
	vis[a][b] = true;
	if(who[a] == 1){
		ret = -inf;
		for(int i = 0; i < m; i++){
			if(b & (1 << i)) continue;
			ret = max(ret, dfs(a + 1, b | (1 << i)) + s[i] * op[a]);
		}
	}
	else{
		ret = inf;
		for(int i = 0; i < m; i++){
			if(b & (1 << i)) continue;
			ret = min(ret, dfs(a + 1, b | (1 << i)) - s[i] * op[a]);
		}
	}
	return ret;
}

int main(){
	scanf("%d", &n);
	for(int i = 0; i < n; i++)
		scanf("%d", &s[i]);
	sort(s, s + n);
	reverse(s, s + n);
	scanf("%d", &m);
	for(int i = 0; i < m; i++){
		char c[2];
		scanf("%s%d", c, &who[i]);
		op[i] = c[0] == 'p';
	}
	int ret = dfs(0, 0);
	cout << ret << endl;
	return 0;
}
