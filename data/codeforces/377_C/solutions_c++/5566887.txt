#include <iostream>
#include <cstring>
#include <stdio.h>
#include <fstream>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;

#define REP(i,n) for(int i=0;i<(n);i++)
#define base 20

int n,m;
char op[22];
int team[22],s[111],dp[1<<base];
bool vis[1<<base];

int Dfs(int st,int x){
    if(x==m) return 0;
    if(vis[st]) return dp[st];
    bool flag=0;
    if(op[x]=='p') flag=1;
    if(team[x]==1){
        dp[st]=(int)-1e9;
        REP(i,m) if(st&(1<<i))
            dp[st]=max(flag*s[i]+Dfs(st^(1<<i),x+1),dp[st]);
    }
    else if(team[x]==2){
        dp[st]=(int)1e9;
        REP(i,m) if(st&(1<<i))
            dp[st]=min(flag*-1*s[i]+Dfs(st^(1<<i),x+1),dp[st]);
    }
    vis[st]=1;
    return dp[st];
}

int main(){
    cin>>n;
    REP(i,n) cin>>s[i];
    sort(s,s+n);
    reverse(s,s+n);
    cin>>m;
    REP(i,m) cin>>op[i]>>team[i];
    memset(vis,0,sizeof(vis));
    cout<<Dfs((1<<m)-1,0);
    return 0;
}
