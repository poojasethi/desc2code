#include <cstdio>
#include <cstring>
#include <algorithm>
#include <functional>

using namespace std;

const int INF = 0x3f3f3f3f;

int n,m,s[110];
int op[25][2],f[1<<20],used[1<<20];
char buf[10];

int F(int i,int mask){
	if(used[mask]) return f[mask];
	used[mask]=1;int &T=f[mask];
	T=op[i][0] ? INF : -INF;
	for(int j=0;j<m;j++) if(!(mask&(1<<j))){
		if(!op[i][0]) T=max(T,F(i+1,mask|(1<<j))+op[i][1]*s[j+1]);
		else T=min(T,F(i+1,mask|(1<<j))-op[i][1]*s[j+1]);
	}
	return T;
}
int main()
{
	scanf("%d",&n);
	for(int i=1;i<=n;i++) scanf("%d",&s[i]);
	sort(s+1,s+n+1,greater<int>());
	scanf("%d",&m);
	for(int i=1;i<=m;i++){
		scanf("%s%d",buf,&op[i][0]);
		op[i][0]-=1;
		op[i][1]=(buf[0]=='p');
	}
	used[(1<<m)-1]=1;
	printf("%d\n",F(1,0));
	return 0;
}
