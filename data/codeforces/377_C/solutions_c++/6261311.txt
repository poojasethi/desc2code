#include<iostream>
#include <algorithm>
using namespace std;

int main()
{
	int N;
	cin >> N;
	
	int S[105];
	for (int i = 0; i < N; i++)
		cin >> S[i];

	int M;
	cin >> M;

	int W[20], P[20];
	for (int i = 0; i < M; i++)
	{
		char c;
		cin >> c >> P[i];
		W[i] = (c == 'p');
	}

	sort(S, S + N);
	reverse(S, S + N);

	int dp[1<<20];
	dp[0] = 0;
	for (int i = 1; i < (1<<M); i++)
		dp[i] = -1000000000;

	for (int mask = 1; mask < (1<<M); mask++)
	{
		int setbits = 0;
		for (int i = 0; i < M; i++)
			setbits += (mask>>i) % 2;
		setbits = M - setbits;

		for (int i = 0; i < M; i++)
			if (mask&(1<<i))
			{
				if (P[setbits] != P[setbits + 1])
					dp[mask] = max(dp[mask], -dp[mask^(1<<i)] + W[setbits]*S[i]);
				else
					dp[mask] = max(dp[mask], dp[mask^(1<<i)] + W[setbits]*S[i]);
			}
	}

	if (P[0] == 1)
		cout << dp[(1<<M)-1] << "\n";
	else
		cout << -dp[(1<<M)-1] << "\n";

	return 0;
}