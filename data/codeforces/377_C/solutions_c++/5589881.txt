#include<algorithm>
#include<iostream>
using namespace std;

template<class T> bool checkMax(T &a, const T &b) {
	if(a < b) return a = b, true;
	return false;
}

template<class T> bool checkMin(T &a, const T &b) {
	if(b < a) return a = b, true;
	return false;
}

const int N = 100, M = 20, INF = 1e9;
int n, m, s[N], team[M], f[1 << M];
char action[M];

void enter() {
	cin >> n;
	for(int i = 0; i < n; ++i) cin >> s[i];
	cin >> m;
	for(int i = 0; i < m; ++i) cin >> action[i] >> team[i];
}

void solve() {
	sort(s, s + n, greater<int>());
	n = m;
	for(int set = (1 << n) - 2; set >= 0; --set) {
		int i = __builtin_popcount(set);
		f[set] = team[i] == 1 ? -INF : INF;
		for(int x = 0; x < n; ++x) if((set & 1 << x) == 0) {
			int ff = f[set | 1 << x] + (action[i] == 'p' ? team[i] == 1 ? s[x] : -s[x] : 0);
			if(team[i] == 1)
				checkMax(f[set], ff);
			else
				checkMin(f[set], ff);
		}
	}
	cout << f[0] << endl;
}

int main() {
	ios::sync_with_stdio(false);
	enter();
	solve();
	return 0;
}
