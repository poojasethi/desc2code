//In the name of God
#include <algorithm>
#include <iostream>
using namespace std;

int a[120], dp[1 << 21], n, p[21], oo = 1e9 + 2; char c[21];
int go_for(int mask) {
	int dep = n - __builtin_popcount(mask);
	if (dp[mask] != oo)
		return dp[mask];
	if (c[dep] == 'p')
		for (int i = 0; i < n; i++)
			if (mask & 1 << i)
				return dp[mask] = p[dep] * a[i] + go_for(mask - (1 << i));
	dp[mask] = -p[dep] * oo;
	for (int i = 0; i < n; i++)
		if (mask & 1 << i)
			if (p[dep] == 1)
				dp[mask] = max(dp[mask], go_for(mask - (1 << i)));
			else
				dp[mask] = min(dp[mask], go_for(mask - (1 << i)));
	return dp[mask];
}
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	sort(a, a + n), reverse(a, a + n);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> c[i] >> p[i], p[i] = (p[i] == 1? 1: -1);
	fill(dp + 1, dp + (1 << n), oo);
	go_for((1 << n) - 1);
	cout << dp[(1 << n) - 1] << '\n';
	return 0;
}
