#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
using namespace std;
struct ppp{
	int x,id;
}a[120000];
bool cmp(const ppp&a,const ppp&b){
	return a.x>b.x;
}
int n,x,bo[120000],j,tot,i,v,last;
int main(){
	scanf("%d",&n);
	tot=0;
	for(i=1;i<=n;++i){
		scanf("%d",&x);
		if(!x){
			sort(a+1,a+tot+1,cmp);
			for(j=1;j<=tot;++j)bo[j]=0;
			for(j=1;j<=tot && j<=3;++j)bo[a[j].id]=1;
			v=0;
			for(j=1;j<=tot;++j){
				if(bo[j]){
					if(!v)printf("pushStack\n");
					if(v==1)printf("pushQueue\n");
					if(v==2)printf("pushFront\n");
					v++;
				}else printf("pushBack\n");
			}
			printf("%d",v);
			if(v>=1)printf(" popStack");
			if(v>=2)printf(" popQueue");
			if(v>=3)printf(" popFront");
			puts("");
			last=i;
			tot=0;
		}else a[++tot].x=x,a[tot].id=i-last;
	}
	for(i=last+1;i<=n;++i)printf("pushStack\n");
	return 0;
}