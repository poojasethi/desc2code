#include <cstdio>
#include <algorithm>
#include <map>
#include <set>
using namespace std;
#define N 100001
#define F first
#define S second
#define mp make_pair
int vet[N], n, usa[N];
char str1[3][100] = {"pushStack", "pushQueue", "pushFront"};
char str2[3][100] = {"popStack", "popQueue", "popFront"};

void solve()
{
	set<pair<int, int> > s;
	for (int i = 0; i < n; ++i)
	{
		if (vet[i] == 0)
		{
			for (int j = 0; j < 3 && !s.empty(); ++j)
			{
				pair<int, int> p = *s.begin();
				usa[p.S] = 1;
				s.erase(s.begin());
			}
			s.clear();
		}
		else
		{
			s.insert(mp(-vet[i], i));
		}
	}
	int l = 0;
	for (int i = 0; i < n; ++i)
	{
		if (vet[i] == 0)
		{
			int k = min(3, l);
			printf("%d", l);
			for (int j = 0; j < k; ++j)
			{
				--l;
				printf(" %s", str2[l%3]);
			}
			printf("\n");
		}
		else
		{
			if (usa[i])
			{
				printf("%s\n", str1[l%3]); 
				++l;
			}
			else printf("pushBack\n");
		}
	}
}

int main()
{
	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
		scanf("%d", vet+i);
	solve();
}

