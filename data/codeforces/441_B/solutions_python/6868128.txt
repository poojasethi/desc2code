def func():
    def reducing(value0,key1):
        value1=trees[key1]
        if value1[1]>v:
            if value1[0] != 0:
                trees[key1+1] = map(lambda x,y:x+y,trees.get(key1+1,[0,0]),[0,value1[0]])
            return value0+v
        elif value1[1]+value1[0]>v:
            trees[key1+1] = map(lambda x,y:x+y,trees.get(key1+1,[0,0]),[0,value1[1]+value1[0]-v])
            return value0+v
        return value0+value1[1]+value1[0]
            
    n,v = map(int,raw_input().split())
    trees={}
    for i in xrange(n):
        a,b=map(int,raw_input().split())
        trees[a]=map(lambda x,y:x+y,trees.get(a,[0,0]),[b,0])
        trees[a+1] = trees.get(a+1,[0,0])
    collected = reduce(reducing,sorted(trees.keys()),0)
    print collected

func()


        
        
    
