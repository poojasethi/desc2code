#!/usr/bin/python

import sys
from math import *

def memoize(f):
    cache= {}
    def memf(*x):
        if x not in cache:
            cache[x] = f(*x)
        return cache[x]
    return memf

def Nf(): return tuple(map(float, sys.stdin.readline().split()))
def Ni(): return tuple(map(int, sys.stdin.readline().split()))
def Nil(): return map(int, sys.stdin.readline().split())
def Ns(): return tuple(sys.stdin.readline().split())

n, v = Ni()
ab = [Ni() for i in range(n)]
ab.sort()

c = 0
C = [v] * 3002
for i in range(len(ab)):
    a, b = ab[i]
    if C[a] > 0:
        _c = min(b, C[a])
        c += _c
        C[a] -= _c
        ab[i] = a, b - _c

    a, b = ab[i]
    if C[a+1] > 0:
        _c = min(b, C[a+1])
        c += _c
        C[a+1] -= _c
        ab[i] = a, b - _c

print c
