#include <iostream>
#include <string>
using namespace std;
string S;
int K;
int N;
int get[256][256];
const int AS = 'z'-'a'+1;

int dp[128][128][32];
bool done[128][128][32];
int dfs(int n, int k, int p) {
	if (n>=(int)S.size()) return 0;
	if (done[n][k][p]) return dp[n][k][p];
	int c = S[n]-'a';
	int r = get[p][c] + dfs(n+1, k, c);
	if (k) {
		for(int i=0; i<AS; ++i) {
			r = max(r, get[p][i] + dfs(n+1, k-1, i));
		}
	}
	done[n][k][p]=1;
	return dp[n][k][p] = r;
}

int main()
{
	cin>>S>>K>>N;
	for(int i=0; i<N; ++i) {
		char x,y;
		int c;
		cin>>x>>y>>c;
		x-='a', y-='a';
		get[x][y]=c;
	}
	cout<<dfs(0, K, 30)<<'\n';
}
