#include <iostream>
#include <cstdio>
#include <string>
#include <algorithm>
using namespace std;
string s;
const int inf=-(1<<30);
int i,k,n,c[30][30],ans,r;
char x,y;
int dp[111][30][111],us[111][30][111];
int DP(int p,char t,int k)
{
	if (p>=s.size()-1) return 0;
	if (us[p][t-'a'][k]!=0)
		return dp[p][t-'a'][k];
us[p][t-'a'][k]=1;
int ans=inf;
for (char t1='a';t1<='z';t1++) {
if (t1==s[p+1])
	ans=max(ans,DP(p+1,t1,k)+c[t-'a'][t1-'a']);	
else if (k>0) ans=max(ans,DP(p+1,t1,k-1)+c[t-'a'][t1-'a']);  
}
dp[p][t-'a'][k]=ans;
return ans;
}
int main()
{
cin>>s>>r>>n;
for (i=0;i<n;i++) {cin>>x>>y>>k;c[x-'a'][y-'a']=k;}
ans=inf;
for (char t1='a';t1<='z';t1++)	{
if (s[0]==t1) ans=max(ans,DP(0,t1,r));
else if (r>0) ans=max(ans,DP(0,t1,r-1));
}
cout<<ans;

return 0;
}
