#include<cstdio>
#include<algorithm>
#include<cstring>
using namespace std;

int bonus[30][30];
char s[101];
int l;
int memo[111][111][27];
#define INF (int)1e6

int solve(int idx,int left,int prev)
{
	if(left < 0)
	return -INF;
	
	if(memo[idx][left][prev] != -1)
	return memo[idx][left][prev];
	
	if(idx == l)
	return memo[idx][left][prev] = 0;
	
	//keep same
	int curr = s[idx] - 'a';
	int ret = solve(idx+1,left,curr) + bonus[prev][curr];
	//change
	for(int i=0;i<26;i++)
	if(i != curr)
	ret = max(ret,solve(idx+1,left-1,i) + bonus[prev][i]);
	
	return memo[idx][left][prev] = ret;
}
int main()
{
	int K;
	int M;
	scanf("%s",s);
	l = strlen(s);
	scanf("%d",&K);
	scanf("%d",&M);
	while(M--)
	{
		char s1[2],s2[2];
		scanf("%s %s",s1,s2);
		int u = s1[0] - 'a';
		int v = s2[0] - 'a';
		scanf("%d",&bonus[u][v]);
	}
	memset(memo,-1,sizeof memo);
	printf("%d\n",solve(0,K,26));
	return 0;
}
