#include <bits/stdc++.h>
using namespace std;

#define LL long long
const int MAXN = 1e2 + 1;
const int ALPHABETSIZE = 27;
const int INF = (int)1e9;
inline int toInt(char c) { return (int)c - 'a'; }

int n, k, bonus[27][27], curbonus;
LL dp[MAXN][ALPHABETSIZE][MAXN];
string s, a, b;

LL rec(int idx, int prev, int k) {
	if (k < 0) return -INF;
	if (idx == s.size()) return 0;

	LL &ans = dp[idx][prev][k];
	if (ans != -1) return ans;
	ans = -INF;

	for (int i = 0; i < 26; i++)
		ans = max(ans, 
			rec(idx + 1, i, toInt(s[idx]) == i ? k : k - 1) + bonus[prev][i] );
	return ans;
}
int main() {
	cin >> s >> k;
	cin >> n;
	for (int i = 0 ; i < n ; i++ ) {
		cin >> a >> b >> curbonus;
		bonus[ toInt(a[0]) ][ toInt(b[0]) ] = curbonus;
	}
	memset(dp, -1, sizeof(dp));
	cout << rec(0, 26, k) << endl;
	return 0;
}