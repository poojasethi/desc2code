#include <cstdio>
#include <iostream>
#include <algorithm>
#include <string>

using namespace std;

const int MAX_N = 128;
const int MAX_C = 32;

string s;
int wins[256][256];
int memo[MAX_N][MAX_N][MAX_C];
bool done[MAX_N][MAX_N][MAX_C];

int solve(int n, int k, int last) {
	if (n >= (int) s.size())
		return 0;
	if (done[n][k][last])
		return memo[n][k][last];
	char now = s[n] - 'a';
	int ans = wins[last][now] + solve(n + 1, k, now);
	if (k)
		for (int x = 0; x < 'z' - 'a' + 1; x++)
			ans = max(ans, wins[last][x] + solve(n + 1, k - 1, x));
	done[n][k][last] = true;
	return memo[n][k][last] = ans;
}

int main() {
	int n, moves;
	cin >> s >> moves;
	cin >> n;
	for (int i = 0; i < n; i++) {
		char x, y; int c;
		cin >> x >> y >> c;
		x -= 'a';
		y -= 'a';
		wins[x][y] = c;
	}

	cout << solve(0, moves, 30) << "\n";

	return 0;
}
