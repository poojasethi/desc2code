#include <iostream>
#include <queue>
#include <vector>
#include <map>
#include <algorithm>

#define rep(i,n) for(int i=0;i<n;i++)
#define pb push_back

using namespace std;

int c[101][101][28];
bool used[101][101][28];
string s;
char x,y,c1,c2,t1,t2;
vector<int> str;
int b[28][28];
int n,m,k,sz,d,t3;

int dfs(int n,int k,int a){

  
  if(n>=sz)return 0;
  if(used[n][k][a])return c[n][k][a];

  int res=b[a][str[n]]+dfs(n+1,k,str[n]);
  
  if(k){
    rep(i,26){
      res=max(res,b[a][i]+dfs(n+1,k-1,i));
    }
  }
  used[n][k][a]=true;
  c[n][k][a]=res;

  return res;


}




int main(){

  cin>>s>>k>>n;sz=s.size();

  rep(i,sz)str.pb(s[i]-'a');
  rep(i,26)rep(j,26)b[i][j]=0;
  rep(i,n){
    cin>>t1>>t2>>t3;
    b[t1-'a'][t2-'a']=t3;
  }

  rep(i,sz)rep(j,k)rep(a,26)used[i][j][a]=false;
  cout<<dfs(0,k,27)<<endl;

  return 0;

}
