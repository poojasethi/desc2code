#include<iostream>
#include<algorithm>
#include<string.h>

using namespace std;

int dp[101][680][28];
int bonus[28][28];
string x;
int len,k;

int solve(int ind, int left, int last)
{
	if(ind==len) return 0;
	if(left==0) return bonus[last][x[ind]-'a'] + solve(ind+1,0,x[ind]-'a');
	if(dp[ind][left][last] != -1) return dp[ind][left][last];
	int maxi = -(1<<30);
	for(int i=0;i<26;i++)
		maxi = max(maxi,bonus[last][i] + solve(ind+1, (i== x[ind]-'a' ? left : left-1),i));
	return dp[ind][left][last] = maxi;
}

int main()
{
	cin >> x >> k;
	len = x.length();
	int n;
	cin >> n;
	for(int i=0;i<n;i++)
	{
		char x,y; int z;
		cin >> x >> y >> z;
		bonus[x-'a'][y-'a'] = z;
	}
	memset(dp,-1,sizeof(dp));
	cout << solve(0,k,26) << endl;
	return 0;
}
