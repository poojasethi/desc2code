#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstdio>
using namespace std;
#define REP(i,n) for(i=0;i<(n);i++)

struct point{double x,y,z;};

const double eps=1e-8;

point p[1000];
int x[1000],y[1000],z[1000];
int a,b,c;
int n,m;
bool flag,note=false;

void add(int i,int a,int b,int c,int x,int y,int z){
        double t=double(a*x+b*y+c*z)/double(a*a+b*b+c*c);
        p[i].x=double(x)-t*a;p[i].y=double(y)-t*b;p[i].z=double(z)-t*c;
}

point equa(const double &a0,const double &b0,const double &c0,const point &A,const point &B,const point &C){
        long double x[3][4],y[3];
        x[0][0]=a0;x[0][1]=b0;x[0][2]=c0;x[0][3]=0;
        x[1][0]=2*(A.x-B.x);x[1][1]=2*(A.y-B.y);x[1][2]=2*(A.z-B.z);x[1][3]=A.x*A.x-B.x*B.x+A.y*A.y-B.y*B.y+A.z*A.z-B.z*B.z;
        x[2][0]=2*(A.x-C.x);x[2][1]=2*(A.y-C.y);x[2][2]=2*(A.z-C.z);x[2][3]=A.x*A.x-C.x*C.x+A.y*A.y-C.y*C.y+A.z*A.z-C.z*C.z;
        int i,j,k;
        REP(i,3){
                k=-1;
                for (j=i;j<3;j++)if (abs(x[j][i])>eps) k=j;
                if (k==-1) {flag=false;return A;}
                REP(j,4) swap(x[i][j],x[k][j]);
                for (j=i+1;j<4;j++){
                        double t=x[j][i]/x[i][i];
                        for (k=i+1;k<4;k++) x[j][k]=x[j][k]-x[i][k]*x[j][i]/x[i][i];
                        x[j][i]=0;
                }
        }
        for(i=2;i>=0;i--){
                for (j=i+1;j<3;j++) x[i][3]-=y[j]*x[i][j];
                y[i]=x[i][3]/x[i][i];
        }
        point ret;
        ret.x=y[0];ret.y=y[1];ret.z=y[2];
        return ret;
}

double dist(const point &a,const point &b){
        return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)+(a.z-b.z)*(a.z-b.z));
}

void calc(double a0,double b0,double c0){
        int i,j,k;
        random_shuffle(p,p+n);
        double ret=0;
        point now=p[0];
        REP(i,n)if (i&&dist(now,p[i])>ret+eps){
                ret=0;now=p[i];
                REP(j,i)if (dist(now,p[j])>ret+eps){
                        now.x=(p[i].x+p[j].x)/2.0;now.y=(p[i].y+p[j].y)/2.0;now.z=(p[i].z+p[j].z)/2.0;
                        ret=dist(now,p[j]);
                        REP(k,j)if (dist(now,p[k])>ret+eps){
                                flag=true;
                                point tmp=equa(a0,b0,c0,p[i],p[j],p[k]);
                                if(flag){now=tmp;ret=dist(now,p[k]);}
                        }
                }
        }
        printf("%.10lf\n",ret);
}

int main(){
        //freopen("a.in","r",stdin);
        cin>>n>>m;
        int i,j;
        REP(i,n) cin>>x[i]>>y[i]>>z[i];
        REP(j,m){
                cin>>a>>b>>c;
                REP(i,n) add(i,a,b,c,x[i],y[i],z[i]);
                if (n==7&&j==2) note=true;else note=false;
                calc(a,b,c);
        }
}
