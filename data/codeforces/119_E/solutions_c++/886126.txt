//Edited By Hewr
#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define pb push_back
#define MP make_pair

#define fo(i,a,b) for (int i=a; i<=b; ++i)
#define fd(i,a,b) for (int i=a; i>=b; --i)
#define fe(i,x) for (int i=g[x],y=E[i].y; i; i=E[i].l,y=E[i].y)
#define forall(i,x) for (typeof(x.begin()) i=x.begin(); i!=x.end(); ++i)
#define inc(a,b) a=((LL)a+b)%mo
#define clr(a,x) memset(&a,x,sizeof(a));
#define sqr(x) ((double)(x)*(x))
#define UNIQUE(x) x.resize(unique(x.begin(),x.end())-x.begin())

template<class A,class B> A convert(B x) { stringstream ss; ss<<x; A ret; ss>>ret; return ret; }

const int oo=~0u>>2;
const double eps=1e-10;

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long LL;
typedef long double LD;
typedef unsigned long long ULL;
typedef pair<int,int> PII;

const int mn = 1000, mo = 100000007;
const int fx[8][2]={{-1,0},{1,0},{0,-1},{0,1},{-1,-1},{-1,1},{1,-1},{1,1}};

struct po{
double x, y, z;
po(){}
po(double X, double Y){ x = X, y = Y, z = 0; }
po(double X, double Y, double Z){ x = X, y = Y, z = Z; }
po operator / (double a){ return po(x / a, y / a, z / a); }
po operator + (po p){ return po(x + p.x, y + p.y, z + p.z); }
po operator - (po p){ return po(x - p.x, y - p.y, z - p.z); }
} a[mn], p[mn];

int n, m;

int sgn(double x){
    if (fabs(x) <= eps) return 0;
    if (x > -eps) return 1;
    return -1;
}

double dis(po a, po b){
    return sqrt(sqr(a.x - b.x) + sqr(a.y - b.y) + sqr(a.z - b.z));
}

po Project(po p, int A, int B, int C){
    if (!A && !B) return po(p.x, p.y);
    if (!B && !C) return po(p.y, p.z);
    if (!A && !C) return po(p.z, p.x);
    double alpha = (double) (A * p.x + B * p.y + C * p.z) / (sqr(A) + sqr(B) + sqr(C));
    po pA = po(p.x - alpha * A, p.y - alpha * B, p.z - alpha * C);
    po pO = po(0, 0), pB = po(0, -C, B);
    double a = dis(pO, pA), b = dis(pO, pB), c = dis(pA, pB);
    if (!sgn(a)) return po(0, 0);
    double t = (sqr(a) + sqr(b) - sqr(c)) / (2 * a * b), Ang;
    if (!sgn(t - 1)) Ang = acos(1); else
    if (!sgn(t + 1)) Ang = acos(-1);
    else Ang = acos(t);
    if (sgn(pA.x) < 0) Ang *= -1;
    return po(a * cos(Ang), a * sin(Ang));
}

po calc(po A, po B, po C){
    double a,b,c,d,e,f;
    a = B.x - A.x, b = B.y - A.y, c = (sqr(B.x) + sqr(B.y) - sqr(A.x) - sqr(A.y)) / 2.0;
    d = C.x - A.x, e = C.y - A.y, f = (sqr(C.x) + sqr(C.y) - sqr(A.x) - sqr(A.y)) / 2.0;
    return po((c * e - f * b) / (a * e - b * d), (c * d - f * a) / (b * d - e * a));
}

int main(){
    cin>>n>>m;
    fo (i,1,n) cin>>a[i].x>>a[i].y>>a[i].z;
    random_shuffle(a + 1, a + n + 1);
    while (m--){
        int A, B, C;
        cin>>A>>B>>C;
        fo (i, 1, n) p[i] = Project(a[i], A, B, C);
        po o = po(0, 0, 0); double R = 0;
        fo (i, 1, n) if (sgn(dis(o, p[i]) - R) > 0){
            o = p[i], R = 0;
            fo (j, 1, i - 1) if (sgn(dis(o, p[j]) - R) > 0){
                o = (p[i] + p[j]) / 2, R = dis(o, p[i]);
                fo (k, 1, j - 1) if (sgn(dis(o, p[k]) - R) > 0)
                    o = calc(p[i], p[j], p[k]), R = dis(o, p[i]);
            }
        }
        printf("%.10f\n", R);
    }
}
