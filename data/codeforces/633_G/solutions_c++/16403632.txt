#include <bits/stdc++.h>
using namespace std;
#define IOS std::ios::sync_with_stdio (false);std::cin.tie(0)
#define pb push_back
#define PB pop_back
#define bk back()
#define fs first
#define se second
#define sq(x) (x)*(x)
#define eps (1e-9)
#define INF (0x3f3f3f3f)
#define clr(x) memset((x),0,sizeof (x))
#define cp(a,b) memcpy((a),(b),sizeof (b))
#define mm(a,b) (a)=min((a),(b));

#define y1 sdfscxf
#define chl (o<<1)
#define chr ((o<<1)|1)
#define mi (l+((r-l)>>1))
#define ws dfsef

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> P;

#define bx bitset<bn>
const int bn=1005;
bx high[1005];
bx cp;
int n,m;
bool isp[bn];
void getp(){
	for(int i=2;i<bn;i++){
		for(int j=i+i;j<bn;j+=i){
			isp[j]=1;
		}
	}
}
void getHigh(){
	for(int i=1;i<=m;i++){
		for(int j=m-1;j>=m-i;j--){
			high[i][j]=1;
		}
	}
}
void shift(bx &a,int x){
	bx h=high[x]&a;
	h>>=m-x;
	a<<=x;
	a|=h;
}
void init(){
	getHigh();
	getp();
	for(int i=2;i<m;i++) if(!isp[i]){
		cp[i]=1;
	}
}
const int maxn=1e5+3000;
const int maxo=maxn*4;
int a[maxn];
bx val[maxo];
vector<int> G[maxn];
int dfn[maxn][2];
int dfx=0;
int id[maxn];
void dfs(int v,int f=-1){
	id[dfx]=v;
	dfn[v][0]=dfx++;
	for(int i=0;i<G[v].size();i++){
		int u=G[v][i];
		if(u==f) continue;
		dfs(u,v);
	}
	dfn[v][1]=dfx;
}
void _init(int o,int l,int r){
	if(r-l<=1){
		val[o][a[id[l]]]=1;
		return;
	}
	_init(chl,l,mi);
	_init(chr,mi,r);
	val[o]=val[chl]|val[chr];
}
int od[maxo];
void push(int o){
	if(od[o]){
		shift(val[chl],od[o]);
		shift(val[chr],od[o]);
		od[chl]=(od[chl]+od[o])%m;
		od[chr]=(od[chr]+od[o])%m;
		od[o]=0;
	}
}
void update(int o,int a,int b,int l,int r,int x){
	if(a>=r||b<=l) return;
	if(l>=a&&r<=b){
		shift(val[o],x);
		od[o]=(od[o]+x)%m;
		return;
	}
	push(o);
	update(chl,a,b,l,mi,x);
	update(chr,a,b,mi,r,x);
	val[o]=val[chl]|val[chr];
}
bx query(int o,int a,int b,int l,int r){
	if(a>=r||b<=l) return bx();
	if(l>=a&&r<=b) return val[o];
	push(o);
	return query(chl,a,b,l,mi)|query(chr,a,b,mi,r);
}
int main(){
	//freopen("/home/slyfc/CppFiles/in","r",stdin);
	//freopen("/home/slyfc/CppFiles/out","w",stdout);
	cin>>n>>m;
	init();
	for(int i=1;i<=n;i++){
		scanf("%d",&a[i]);
		a[i]%=m;
	}
	for(int i=0;i<n-1;i++){
		int x,y;
		scanf("%d%d",&x,&y);
		G[x].pb(y);
		G[y].pb(x);
	}
	dfs(1);
	_init(1,0,n);
	int q;
	scanf("%d",&q);
	while(q--){
		int t;
		scanf("%d",&t);
		if(t==1){
			int v,x;
			scanf("%d%d",&v,&x);
			update(1,dfn[v][0],dfn[v][1],0,n,x%m);
		}else{
			int v;
			scanf("%d",&v);
			bx ans=query(1,dfn[v][0],dfn[v][1],0,n);
			int res=(ans&cp).count();
			printf("%d\n",res);
		}
	}
	return 0;
}