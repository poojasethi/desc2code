#include <bits/stdc++.h>
using namespace std;
#define LL long long
int N,M,len,x,y,t,Q,pt;
bitset <1000> seg[400010],full[1010],ans,prim;
int mark[400010];
int a[100010];
int q[200010],in[100010],out[100010];
int st[100010],ne[200010],go[200010],fa[100010];
void Add(int x,int y){ne[++pt]=st[x];st[x]=pt;go[pt]=y;}
int lowbit(int x){return x&-x;}
void dfs(int x){
	in[x]=++len;
	q[len]=x;
	for (int i=st[x];i;i=ne[i])
		if (fa[x]!=go[i]){
			fa[go[i]]=x;
			dfs(go[i]);
		}
	out[x]=len;
}
void move(int x,int t){
	seg[x]=((seg[x]&full[M-t])<<t)|(seg[x]>>(M-t));
}
void build(int x,int l,int r){
	if (l<r){
		int mid=(l+r)>>1;
		build(x<<1,l,mid);
		build((x<<1)+1,mid+1,r);
		seg[x]=seg[x<<1]|seg[(x<<1)+1];
	}else seg[x][a[q[l]]]=1;
}
void mark_down(int x,int l,int r){
	if (l<r){
		mark[x<<1]=(mark[x<<1]+mark[x])%M;
		move(x<<1,mark[x]);
		mark[(x<<1)+1]=(mark[(x<<1)+1]+mark[x])%M;
		move((x<<1)+1,mark[x]);
	}
	mark[x]=0;
}
void change(int x,int l,int r,int ll,int rr,int t){
	mark_down(x,l,r);
	if (l==ll&&r==rr){
		mark[x]=(mark[x]+t)%M;
		move(x,t);
		return;
	}
	int mid=(l+r)>>1;
	if (rr<=mid)change(x<<1,l,mid,ll,rr,t);
	else if (ll>mid)change((x<<1)+1,mid+1,r,ll,rr,t);
	else change(x<<1,l,mid,ll,mid,t),change((x<<1)+1,mid+1,r,mid+1,rr,t);
	seg[x]=seg[x<<1]|seg[(x<<1)+1];
}
void ask(int x,int l,int r,int ll,int rr){
	mark_down(x,l,r);
	if (l==ll&&r==rr){
		ans=ans|seg[x];
		return;
	}
	int mid=(l+r)>>1;
	if (rr<=mid)ask(x<<1,l,mid,ll,rr);
	else if (ll>mid)ask((x<<1)+1,mid+1,r,ll,rr);
	else ask(x<<1,l,mid,ll,mid),ask((x<<1)+1,mid+1,r,mid+1,rr);
}
register char *_sp __asm__("rsp");
int main(){
	const int size=32*1024*1024;
	static char *sys, *mine(new char[size]+size-4096);
	sys=_sp;
	_sp=mine;
	
	scanf("%d%d",&N,&M);
	full[0].reset();
	for (int i=1;i<=M;i++){
		full[i]=full[i-1];
		full[i][i-1]=1;
	}
	prim.reset();
	for (int i=2;i<=M;i++){
		bool flag=1;
		for (int j=2;j<i;j++)
			if (i%j==0)flag=0;
		if (flag)
			prim[i]=1;
	}
	for (int i=1;i<=N;i++)scanf("%d",&a[i]),a[i]%=M;
	for (int i=1;i<N;i++){
		scanf("%d%d",&x,&y);
		Add(x,y);Add(y,x);
	}
	dfs(1);
	build(1,1,len);
	scanf("%d",&Q);
	for (;Q--;){
		scanf("%d",&t);
		if (t==1){
			scanf("%d%d",&x,&t);
			t=t%M;
			change(1,1,len,in[x],out[x],t);
		}else{
			scanf("%d",&x);
			ans.reset();
			ask(1,1,len,in[x],out[x]);
			ans=ans&prim;
			printf("%d\n",ans.count());
		}
	}
	
	_sp=sys;
}
