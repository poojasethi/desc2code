#include<bits/stdc++.h>
#define N 100005
using namespace std;
bitset<2005>a[N<<2],one,zero,choose,ans;
int End[N<<1],Next[N<<1],Go[N<<1],cnt;
int add[N<<2],flag[N],L[N],R[N],init[N],w[N];
int i,j,n,tot,P,z,S,T,k,Q,opt,x,y,ql,qr;
void Link(int u,int v){Go[++cnt]=v;Next[cnt]=End[u];End[u]=cnt;}
void DFS(int x,int Fa){
	init[L[x]=++tot]=w[x];
	for (int i=End[x],y;i;i=Next[i])
		if ((y=Go[i])!=Fa) DFS(y,x);
	R[x]=tot;
}
void renew(int x,int z){
	add[x]+=z;
	if (add[x]>=P) add[x]-=P;
	a[x]=a[x]<<z;
	a[x]|=a[x]>>P;
	a[x]&=one;
}
void down(int x){
	if (!add[x]) return;
	renew(x<<1,add[x]);
	renew(x<<1|1,add[x]);add[x]=0;
}
void build(int x,int l,int r){
	if (l==r) {a[x][init[l]]=1;return;}
	int mid=(l+r)>>1;
	build(x<<1,l,mid);build(x<<1|1,mid+1,r);
	a[x]=a[x<<1]|a[x<<1|1];
}
void Update(int x,int l,int r){
	if (ql<=l&&r<=qr) {renew(x,z);return;}
	int mid=(l+r)>>1;down(x);
	if (ql<=mid) Update(x<<1,l,mid);
	if (qr>mid)  Update(x<<1|1,mid+1,r);
	a[x]=a[x<<1]|a[x<<1|1];
}
void Query(int x,int l,int r){
	if (ql<=l&&r<=qr) {ans|=a[x];return;}
	int mid=(l+r)>>1;down(x);
	if (ql<=mid) Query(x<<1,l,mid);
	if (qr>mid)  Query(x<<1|1,mid+1,r);
}
int main(){
	flag[0]=flag[1]=1;
	for (i=2;i<=1000;i++)
		if (!flag[i])
			for (j=i+i;j<=1000;j+=i) flag[j]=1;
	scanf("%d%d",&n,&P);
	for (i=0;i<P;i++) one[i]=1;
	for (i=0;i<P;i++) if (!flag[i]) choose[i]=1;
	for (i=1;i<=n;i++) 
		scanf("%d",&w[i]),w[i]%=P;
	for (i=1;i<n;i++)
		scanf("%d%d",&x,&y),Link(x,y),Link(y,x);
	DFS(1,0);
	build(1,1,n);
	scanf("%d",&Q);
  while (Q--){
  	scanf("%d%d",&opt,&x);
  	if (opt==2){
  		ans=zero;
  		ql=L[x],qr=R[x];
			Query(1,1,n);
  		printf("%d\n",(ans&choose).count());
    }
  	else
  		scanf("%d",&z),z%=P,ql=L[x],qr=R[x],Update(1,1,n);
  }
}