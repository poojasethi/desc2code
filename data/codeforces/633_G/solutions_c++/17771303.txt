#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int arr[MAXN],cost[MAXN],in[MAXN],out[MAXN],T;
bitset<1009>s[MAXN<<2];
bitset<1009>z,pr;
vector<int>adj[MAXN];
int n,m,q,lazy[MAXN<<2];
int dfs(int nd,int pr){
	in[nd]=++T;
	cost[T]=arr[nd]%m;
	tr(it,adj[nd])
		if(*it!=pr)
			dfs(*it,nd);
	out[nd]=T;		
}
void build(int nd,int x,int y){
	if(x==y){
		s[nd][cost[x]]=1;
		return;	
	}
	int mid=(x+y)>>1;
	build(nd<<1,x,mid);
	build(nd<<1|1,mid+1,y);
	s[nd]=(s[nd<<1]|s[nd<<1|1]);
}
int prime(int x){
	for(int i=2;i<=sqrt(x);i++)
		if(x%i==0)
			return 0;
	return 1;		
}
void shift(int nd){
	int k=lazy[nd];
	if(!k)
		return;k%=m;
	s[nd<<1]=(s[nd<<1]<<k)|(s[nd<<1]>>(m-k));
	s[nd<<1|1]=(s[nd<<1|1]<<k)|(s[nd<<1|1]>>(m-k));
	lazy[nd<<1]+=k;lazy[nd<<1|1]+=k;
	lazy[nd]=0;
}
void inc(int l,int r,int v,int nd,int  x,int y){
	if(l>y or x>r)
		return;
	if(l<=x and y<=r){v%=m;
		lazy[nd]+=v;
		s[nd]=(s[nd]<<v)|(s[nd]>>(m-v));
		return;	
	}
	shift(nd);int mid=(x+y)>>1;
	inc(l,r,v,nd<<1,x,mid);
	inc(l,r,v,nd<<1|1,mid+1,y);
	s[nd]=(s[nd<<1]|s[nd<<1|1]);
}
void tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return;
	if(l<=x and y<=r){
		z=(z|s[nd]);	
		return;
	}shift(nd);
	int mid=(x+y)>>1;
	tap(l,r,nd<<1,x,mid);
	tap(l,r,nd<<1|1,mid+1,y);
}
int main(){
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)
		scanf("%d",arr+i);
	for(int i=2;i<m;i++)	
		if(prime(i))
			pr[i]=1;	
	for(int i=1;i<n;i++){
		int u,v;
		scanf("%d%d",&u,&v);
		adj[u].pb(v);
		adj[v].pb(u);
	}
	dfs(1,-1);build(1,1,n);
	scanf("%d",&q);
	while(q--){
		int type,v;
		scanf("%d%d",&type,&v);
		if(type==1){
			int x;scanf("%d",&x);
			inc(in[v],out[v],x,1,1,n);
		}
		else{
			z.reset();
			tap(in[v],out[v],1,1,n);z&=pr;
			printf("%d\n",z.count());		
		}
	}
	return 0;
}
//LooK aT mY COde ONlinE +_+
