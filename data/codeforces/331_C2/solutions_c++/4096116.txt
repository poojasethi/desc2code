/**
 * Copyright (c) 2013 Authors. All rights reserved.
 * 
 * FileName: c1.cpp
 * Author: Beiyu Li <sysulby@gmail.com>
 * Date: 2013-07-18
 */
#include <iostream>

using namespace std;

typedef long long LL;
typedef pair<int, int> Pii;

const int inf = 0x3f3f3f3f;
const int maxn = 1000000 + 5;
const int M = 1000000;

Pii opt[10][maxn];
bool vis[10][maxn];

Pii dp(int p, int x)
{
        //printf("%d %d\n", p, x);
        if (x < 0) return Pii(0, x);
        if (vis[p][x]) return opt[p][x];
        vis[p][x] = true;
        Pii &res = opt[p][x];

        if (p == 0 && x == 0) return opt[p][x] = Pii(0, x);

        int tmp = x, t = p;
        while (tmp) {
                t = max(t, tmp % 10);
                tmp /= 10;
        }
        res = dp(p, x - t);
        ++res.first;

        return res;
}

LL dfs(int pre, int x)
{
        if (pre == 0) return dp(0, x).first;
        int tmp = pre, p = 0;
        while (tmp) {
                p = max(p, tmp % 10);
                tmp /= 10;
        }

        return dp(p, x).first + dfs(pre - 1, M + dp(p, x).second);
}

int main()
{
        LL n;
        cin >> n;
        cout << dfs(n / M, n % M) << endl;

        return 0;
}
