#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <map>

typedef long long LL;

#define gr std::max
#define pr std::pair<LL,int>
#define mk(a,b) std::make_pair((a),(b))

using std::map;
using std::pair;

LL N, Pow[20];

typedef map<pr, pr> prpr;
prpr dp;

pr DP(LL N, int dep, int m) // N是当前表示的数， dep是位数    m是前面的最大数位 
{
	if (dep==1) return mk(1LL, int(N-gr(m*1ll, N)));
	if (N<Pow[dep-1]) return DP(N, dep-1, m);
	
	pr& ans=dp[mk(N, m)];
	if (ans.first) return ans; 
	
	pr tmp=DP(N%Pow[dep-1], dep-1, gr(m, static_cast<int>(N/Pow[dep-1]))); // 后面部分的结果 
	pr res=DP(N-N%Pow[dep-1]+tmp.second, dep, m);	
	
	return ans=mk(tmp.first + res.first, res.second);
}

int main()
{
	Pow[0]=1;
	for (int i=1; i<=18; i++) Pow[i]=Pow[i-1]*10;
	scanf("%I64d", &N);
	LL Other=N; int bit=0;
	for (; Other; Other/=10) bit++;
	LL Answer=(!N?0:DP(N, bit, 0).first);
	printf("%I64d\n", Answer);
	return 0;
}