#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <map>
using namespace std;

typedef long long LL;
typedef unsigned long long UL;
typedef pair<LL, LL> Pll;

const LL INF = 0x3f3f3f3f3f3f3f3fLL;
const int MAXN = 100000 * 3 + 10, MAXL = 10 + 2;

#define x first
#define y second
#define mp make_pair

map<LL, Pll> f[MAXL];

LL n;
Pll DFS(LL n, int Maxdigt)
{
	if (n == 0 && Maxdigt == 0)
		return mp(0, 0);
	if (n < 10)
		return mp(1LL, -(n - max((LL)Maxdigt, n)));
	if (f[Maxdigt].find(n) != f[Maxdigt].end())
		return f[Maxdigt][n];
	UL Pow = 1;
	LL N = n;
	for (; Pow <= N; Pow *= 10);
	Pow /= 10;
	Pll Tohka = mp(0, 0);
	while (N > 0)
	{
		LL k = N / Pow;
		Pll NC = DFS(N % Pow, max(k, (LL)Maxdigt));
		Tohka.x += NC.x;
		N -= N % Pow + NC.y;
	}
	Tohka.y = -N;
	f[Maxdigt][n] = Tohka;
	return Tohka;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout);
#endif
	
	cin >> n;
	cout << DFS(n, 0).x << endl;
	
	fclose(stdin);
	fclose(stdout);
	return 0;
}
