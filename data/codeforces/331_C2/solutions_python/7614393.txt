#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <map>
#define fst first
#define sed second
#define mk make_pair
using namespace std;

typedef pair <long long,long long> pr;

map < pr,pr > H;

long long n;

pr dfs(pr x)
{
    long long tmp=1,Ans;
    if (x.sed<10) return mk(x.fst || x.sed,min(x.sed-x.fst,0ll));
    if (H.find(x)!=H.end()) return H[x];
    while (tmp*10<=x.sed) tmp*=10;
    pr ttmp=dfs(mk(max(x.sed/tmp,x.fst),x.sed%tmp)); Ans=ttmp.fst;
    ttmp=dfs(mk(x.fst,(x.sed/tmp)*tmp+ttmp.sed));
    return H[x]=mk(Ans+ttmp.fst,ttmp.sed);
}

int main()
{
    scanf("%I64d",&n);
    printf("%I64d\n",dfs(mk(0,n)).fst); 
}
