#include<stdio.h>
#include<string.h>
#include<math.h>
#include<iostream>
#include<algorithm>
#include<map>
#include<set>
#include<vector>
#include<string>
using namespace std;
typedef long long lld;
#define pb push_back
#define mp make_pair
#define X first
#define Y second
map<pair<lld,lld> ,pair<lld,lld> >f;
void get(lld z,lld &x,lld &y)
{
	lld base=1;
	y=0;
	while(z >= 10)
	{
		y+=(z%10)*base;
		z/=10;
		base*=10;
	}
	x=z;
}
pair<lld,lld> dfs(lld now,lld digit)
{
	if(f.find(mp(now,digit)) != f.end())
		return f[mp(now,digit)];
	if(now <= 0)
		return mp(0,0);
	pair<lld,lld> key=mp(now,digit);
	pair<lld,lld> ans=mp(0,0);
	while(now >= 10)
	{
		lld x,y;
		get(now,x,y);
//		cout << now << " " << x << " " << y << endl;
		pair<lld,lld> add=dfs(y,max(x,digit));
		ans.X+=add.X;
		now-=y;
		if(add.Y > 0)
			now-=add.Y;
		else
		{
			now-=max(x,digit);
			ans.X++;
		}
	}
	if(now != 0)
	{
		ans.X++;
		if(digit > now)
			ans.Y=digit-now;
	}
	f[key]=ans;
	return ans;
}
int main()
{
	f.clear();
	lld s;
	cin >> s;
	cout << dfs(s,0).X << endl;
	return 0;
}
