#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<cctype>
#include<algorithm>
#include<map>

using namespace std;

typedef long long LL;
typedef pair<LL, LL> pll;

const LL Ten18 = 1000000000000000000LL;

LL N;
map<LL, pll> f[10];

LL getMo(LL x) {
    LL res = 1;
    while (res < Ten18 && res * 10 <= x) 
        res *= 10;
    return res;
}

pll dp(LL mx, LL now) {
    if (now == 0 && mx == 0) return pll(0, 0);
    if (now < 10) return pll(1, now - max(now, mx));
    if (f[mx].count(now)) return f[mx][now];
    pll ans(0, 0);
    LL tmp = now;
    while (now > 0) {
        LL mo = getMo(now); 
        LL head = now / mo, trail = now % mo;
        pll nxt = dp(max(mx, head), trail);
        now = now - now % mo + nxt.second;
        ans.first += nxt.first;
    }
    ans.second = now;
    return f[mx][tmp] = ans;
}

int main() {

    cin >> N;    
    for (int i = 0; i < 10; ++i) 
        f[i].clear();
    cout << dp(0, N).first << endl;

    return 0;

}
