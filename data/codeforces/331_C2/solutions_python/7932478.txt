#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <string>
#include <map>
using namespace std;
typedef long long LL;
typedef pair<LL,int> info;
const int Maxn=19;
LL n,p[Maxn];
map <info,info> f;

info calc(int idx,info x) {
    if (idx==1)
        return x.first>=x.second?info(1,0):info(0,x.first);
    if (f.find(x)!=f.end()) return f[x];
    int t=x.first/p[idx-1];
    LL num=x.first-t*p[idx-1];
    info ans(0,0);
    for (int i=t;i>0;i--) {
        info res=calc(idx-1,info(num,max(i,x.second)));
        ans.first+=res.first+1;
        num=p[idx-1]+res.second-max(i,x.second);
    }
    info res=calc(idx-1,info(num,x.second));
    ans.first+=res.first; ans.second+=res.second;
    return f[x]=ans;
}

int main() {
    cin>>n;
    p[0]=1;
    for (int i=1;i<=18;i++) p[i]=p[i-1]*10;
    int len=0;
    for (LL x=n;x;x/=10) ++len;
    cout<<(n==0?0:calc(len,info(n,0)).first)<<endl;
    return 0;
}
