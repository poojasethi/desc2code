#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <stack>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

int N,R; // 0: win, N: lose
vector <int> edge[41000];
int dist[41000];
queue <int> q;
int deg[41000];

int state(int h, int t){
    if(h + t > R) return N;
    return h * (R+1) + t;
}

void func(void){
    int i,j;
    
//  REP(i,N+1) REP(j,edge[i].size()) cout << i << ' ' << edge[i][j] << endl;
    
    q.push(0);
    while(!q.empty()){
        int x = q.front(); q.pop();
        REP(i,edge[x].size()){
            int y = edge[x][i];
            if(dist[y] == 0){
                dist[y] = dist[x] + 1;
                q.push(y);
            }
        }
    }
    
    for(i=1;i<N;i++) if(dist[i] == 0) REP(j,edge[i].size()) deg[edge[i][j]]++;
    for(i=1;i<N;i++) if(dist[i] == 0 && deg[i] == 0) {dist[i] = -1; q.push(i);}
    
    while(!q.empty()){
        int x = q.front(); q.pop();
        REP(i,edge[x].size()){
            int y = edge[x][i];
            deg[y]--;
            if(dist[y] == 0 && deg[y] == 0){
                dist[y] = dist[x] - 1;
                q.push(y);
            }
        }
    }
}

int main(void){
    int H,T,n,h,t,dh,dt,i;
    
    scanf("%d%d%d",&H,&T,&R);
    N = (R+1) * (R+1);
    
    scanf("%d",&n);
    for(i=1;i<=n;i++){
        scanf("%d%d",&dh,&dt);
        for(h=i;h<=R;h++) for(t=0;h+t<=R;t++){
            int h2 = h - i + dh, t2 = t + dt;
            edge[state(h2,t2)].push_back(state(h,t));
        }
    }
    
    scanf("%d",&n);
    for(i=1;i<=n;i++){
        scanf("%d%d",&dh,&dt);
        for(t=i;t<=R;t++) for(h=0;h+t<=R;h++){
            int h2 = h + dh, t2 = t - i + dt;
            edge[state(h2,t2)].push_back(state(h,t));
        }
    }
    
    func();
    int ans = dist[state(H,T)];
    if(ans > 0) cout << "Ivan" << endl << ans << endl;
    if(ans < 0) cout << "Zmey" << endl << -ans << endl;
    if(ans == 0) cout << "Draw" << endl;
    
    return 0;
}
