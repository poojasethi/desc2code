#include <cstdio>
#include <queue>
#include <algorithm>
#include <cstring>
using namespace std;

bool loop = false;
int H, T, R, win = -1, n, m;

int f[202][202], tc[202][2], hc[202][2];
bool vis[202][202], now[202][202];

int dfs(int h, int t)
{
    if (loop) return 0;
    //if (h > H) h = H; if (t > T) t = T;
    if (h + t > R) return 0;
    //printf("%d %d\n", h, t); 
    if (now[h][t]) {
        loop = true; 
        //printf("%d %d\n", h, t); 
        return 0;
    }
    
    if (vis[h][t]) 
        return f[h][t];
    vis[h][t] = true;
    now[h][t] = true;
    
    f[h][t] = 0;
    for (int i = min(h, n); i >= 1; --i)
        f[h][t] = max(f[h][t], 1 + dfs(h - i + hc[i][0], t + hc[i][1]));
    for (int i = min(t, m); i >= 1; --i)    
        f[h][t] = max(f[h][t], 1 + dfs(h + tc[i][0], t - i + tc[i][1]));
    now[h][t] = false;
    return f[h][t];
}

struct state
{ 
    int h, t;       
    state(int a = 0, int b = 0)
        {h = a; t = b;}
};

queue<state> q;

int bfs()
{
    q.push(state(H, T));
    memset(f, -1, sizeof(f));
    f[H][T] = 0;
    win = -1;
    while (!q.empty()){
        state x = q.front(); q.pop();
        int ss = f[x.h][x.t] + 1;
        if (x.h + x.t == 0) {return win = ss - 1;}      
        for (int i = min(n, x.h); i >= 1; --i){
            //if (x.h - i + x.t == 0) return win = ss;
            state y(x.h - i + hc[i][0], x.t + hc[i][1]);
            if (y.h + y.t > R) continue;
            if (f[y.h][y.t] == -1) {
                f[y.h][y.t] = ss;
                q.push(y);
            }
        }
        for (int i = min(x.t, m); i >= 1; --i){
            //if (x.h + x.t - i == 0) return win = ss;
            state y(x.h + tc[i][0], x.t - i + tc[i][1]);
            if (y.h + y.t > R) continue;
            if (f[y.h][y.t] == -1) {
                f[y.h][y.t] = ss;
                q.push(y);
            }
        }
    }
    return win;
}

int main()
{
    scanf("%d%d%d", &H, &T, &R);
    scanf("%d", &n);
    for (int i = 1; i <= n; ++i)
        scanf("%d%d", &hc[i][0], &hc[i][1]);
    scanf("%d", &m);
    for (int i = 1; i <= m; ++i)
        scanf("%d%d", &tc[i][0], &tc[i][1]);
            
    if (bfs() >= 0) printf("Ivan\n%d\n", win); else{
        int fail = dfs(H, T);
        if (loop) puts("Draw"); else 
            printf("Zmey\n%d\n", fail);
    }
}