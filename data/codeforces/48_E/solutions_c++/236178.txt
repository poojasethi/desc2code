#include<iostream>
#include<vector>
#include<algorithm>
#include<cstdio>
#include<cstring>
using namespace std;
typedef pair<int ,int> pii;
vector<pii> vc;
int n, m, h , t , r, a[210][2], b[210][2];
bool used[510][510];
int mark[510][510], dyn[510][510], dis[510][510];

int dfs(int h, int t){
    //cerr<<h<<" "<<t<<endl;
    if(h+t>r)   return 0;
    if(mark[h][t]==1){
        printf("Draw\n");
        exit(0);
    }
    
    if(dyn[h][t]!=-1)   return dyn[h][t];
    mark[h][t]=1;
    int ans=0;
    
    for(int i=0; i<min(n, h); i++){
        int x=h-i-1+a[i][0], y=t+a[i][1];
        
        ans=max(ans, 1+dfs(x, y));
    }
    for(int i=0; i<min(m, t); i++){
        int x=h+b[i][0], y=t-i-1+b[i][1];
        
        ans=max(ans, 1+dfs(x, y));
    }
    mark[h][t]=0;
    return dyn[h][t]=ans;
}

int main(){
    scanf("%d%d%d", &h, &t, &r);
    scanf("%d", &n);
    for(int i=0; i<n; i++)
        scanf("%d%d", &a[i][0], &a[i][1]);
    scanf("%d", &m);
    for(int i=0; i<m; i++)
        scanf("%d%d", &b[i][0], &b[i][1]);
        
    vc.push_back(pii(h, t));
    used[h][t]=1;
    dis[h][t]=0;
    int e=1, b=0;
    while(b<e){
        cerr<<b<<" "<<e<<endl;
        pii tmp=vc[b++];
        int d=dis[tmp.first][tmp.second];
        for(int i=0; i<min(n, tmp.first); i++){
            int x=tmp.first-i-1+a[i][0];
            int y=tmp.second+a[i][1];
            if(x+y<=r && !used[x][y]){
                dis[x][y]=d+1;
                used[x][y]=1;
                vc.push_back(pii(x, y));
                e++;
            }
        }
        for(int i=0; i<min(m, tmp.second); i++){
            int x=tmp.first+::b[i][0];
            int y=tmp.second-i-1+::b[i][1];
            if(x+y<=r && !used[x][y]){
                dis[x][y]=d+1;
                used[x][y]=1;
                vc.push_back(pii(x, y));
                e++;
            }
        }
    }
    if(used[0][0]){
        printf("Ivan\n%d\n", dis[0][0]);
        return 0;
    }
    
    memset(dyn, -1, sizeof dyn);
    int H=dfs(h, t);
    printf("Zmey\n%d\n", H);
    
    return 0;
}