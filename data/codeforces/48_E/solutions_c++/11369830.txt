#include <iostream>
#include <queue>
#include <cmath>
#include <cstdlib>

using namespace std;

const int infinito=1000000000;

int hini,tini,r;
int n,m;
int hn[201],tn[201];
int hm[201],tm[201];

int visto[201][201];
int pasos[201][201];

int memdistancia[201][201];
int calculado[201][201];

int distancia(int h,int t)
{
  if (h+t>r) return 0;
  int &mem=memdistancia[h][t];
  if (calculado[h][t]==1) {
    cout<<"Draw"<<endl;
    exit(0);
  }
  if (calculado[h][t]) return mem;
  calculado[h][t]=1;
  for (int i=1;i<=n and i<=h;i++) {
    int nexth=h-i+hn[i];
    int nextt=t+tn[i];
    mem=max(mem,1+distancia(nexth,nextt));
  }
  for (int i=1;i<=m and i<=t;i++) {
    int nexth=h+hm[i];
    int nextt=t-i+tm[i];
    mem=max(mem,1+distancia(nexth,nextt));
  }
  calculado[h][t]=2;
  return mem;
}

int main()
{
  cin>>hini>>tini>>r;
  cin>>n;
  for (int i=1;i<=n;i++)
    cin>>hn[i]>>tn[i];
  cin>>m;
  for (int i=1;i<=m;i++)
    cin>>hm[i]>>tm[i];
  queue<pair<int,int> > q;
  visto[hini][tini]=1;
  q.push(pair<int,int> (hini,tini));
  while (not q.empty()) {
    pair<int,int> p=q.front();
    q.pop();
    int h=p.first;
    int t=p.second;
    for (int i=1;i<=n and i<=h;i++) {
      int nexth=h-i+hn[i];
      int nextt=t+tn[i];
      if (nexth==0 and nextt==0) {
	cout<<"Ivan"<<endl;
	cout<<pasos[h][t]+1<<endl;
	exit(0);
      }
      if (nexth+nextt<=r and not visto[nexth][nextt]) {
	visto[nexth][nextt]=1;
	pasos[nexth][nextt]=pasos[h][t]+1;
	q.push(pair<int,int> (nexth,nextt));
      }
    }
    for (int i=1;i<=m and i<=t;i++) {
      int nexth=h+hm[i];
      int nextt=t-i+tm[i];
      if (nexth==0 and nextt==0) {
	cout<<"Ivan"<<endl;
	cout<<pasos[h][t]+1<<endl;
	exit(0);
      }
      if (nexth+nextt<=r and not visto[nexth][nextt]) {
	visto[nexth][nextt]=1;
	pasos[nexth][nextt]=pasos[h][t]+1;
	q.push(pair<int,int> (nexth,nextt));
      }
    }
  }
  int sol=distancia(hini,tini);
  cout<<"Zmey"<<endl;
  cout<<sol<<endl;
}


