#include <iostream>
using namespace std;
const int MAX = 1005;
int mark[MAX][MAX];
int hh[MAX], ht[MAX], th[MAX], tt[MAX];
int d[MAX][MAX];
int q[2][40005];
int r, n, m;
bool cycle;
void bfs(int h, int t)
{
	mark[h][t] = 1;
	d[h][t] = 0;
	q[0][0] = h;
	q[1][0] = t;
	int k = 1;
	for (int i = 0; i < k; i++)
	{
		int vh = q[0][i];
		int vt = q[1][i];
		for (int j = 1; (j <= n) && (j <= vh); j++)
		{
			int uh = vh - j + hh[j];
			int ut = vt + ht[j];
			if (mark[uh][ut] == 0)
			{
				mark[uh][ut] = 1;
				d[uh][ut] = d[vh][vt] + 1;
				if (uh + ut <= r)
				{
					q[0][k] = uh;
					q[1][k] = ut;
					k++;
				}
			}
		}
		for (int j = 1; (j <= m) && (j <= vt); j++)
		{
			int uh = vh + th[j];
			int ut = vt - j + tt[j];
			if (mark[uh][ut] == 0)
			{
				mark[uh][ut] = 1;
				d[uh][ut] = d[vh][vt] + 1;
				if (uh + ut <= r)
				{
					q[0][k] = uh;
					q[1][k] = ut;
					k++;
				}
			}
		}
	}
}
int dfs(int h, int t)
{
	mark[h][t] = 1;
	for (int j = 1; (j <= n) && (j <= h); j++)
	{
		int uh = h - j + hh[j];
		int ut = t + ht[j];
		if (uh + ut > r)
			continue;
		if (mark[uh][ut] == 0)
		{
			mark[uh][ut] = 1;
			d[h][t] = max(d[h][t], dfs(uh, ut) + 1);
		}
		else
		{
			if (mark[uh][ut] == 1)
				cycle = true;
			else
				d[h][t] = max(d[h][t], d[uh][ut] + 1);
		}
	}
	for (int j = 1; (j <= m) && (j <= t); j++)
	{
		int uh = h + th[j];
		int ut = t - j + tt[j];
		if (uh + ut > r)
			continue;
		if (mark[uh][ut] == 0)
		{
			d[h][t] = max(d[h][t], dfs(uh, ut) + 1);
		}
		else
		{
			if (mark[uh][ut] == 1)
				cycle = true;
			else
				d[h][t] = max(d[h][t], d[uh][ut] + 1);
		}
	}
	mark[h][t] = 2;
	return d[h][t];
}
int main()
{
	ios::sync_with_stdio(false);
	int h, t;
	cin >> h >> t >> r;
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> hh[i] >> ht[i];
	cin >> m;
	for (int i = 1; i <= m; i++)
		cin >> th[i] >> tt[i];
	bfs(h, t);
	if (mark[0][0])
		cout << "Ivan" << endl << d[0][0] << endl;
	else
	{
		for (int i = 0; i < MAX; i++)
			for (int j = 0; j < MAX; j++)
			{
				mark[i][j] = 0;
				d[i][j] = 0;
			}
		dfs(h, t);
		if (cycle)
			cout << "Draw" << endl;
		else
		{
			cout << "Zmey" << endl << d[h][t] + 1 << endl;
		}
	}
	return 0;
}
