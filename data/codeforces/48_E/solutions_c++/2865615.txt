//By Lin
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#define X first
#define Y second
#define mp(x,y) make_pair(x,y)
using namespace std;

int     cnt[2],R;
pair<int,int> data[2][205];
queue<pair<int,int> > que;
int     dp[205][205];
int     mark[205][205];

bool    clr(int x,int y){
    mark[x][y] = 1; 
    for (int k = 0; k<2; k++) 
        for (int i = 1; i<=min(k==0?x:y,cnt[k]); i++) {
            int g = x+data[k][i].X , h = y+data[k][i].Y;
            if ( k == 0 ) g -= i; else h -= i;
            if ( g+h > R ) continue;
            if ( mark[g][h] == 1 ) return true;
            if ( mark[g][h] == 0 && clr(g,h) ) return true;
        }
    mark[x][y] = -1; 
    return false;
}

int     dfs(int x,int y){
    if ( x + y > R ) return 0;
    if ( dp[x][y] ) return dp[x][y];
    int &ret = dp[x][y];
    for (int k = 0; k<2; k++) 
        for (int i = 1; i<=min(k==0?x:y,cnt[k]); i++) {
            int g = x+data[k][i].X , h = y+data[k][i].Y;
            if ( k == 0 ) g -= i; else h -= i;
            ret = max( ret , dfs(g,h)+1 );
        }
    return ret;
}

int     main(){
    int stx,sty;
    scanf("%d%d%d", &stx , &sty , &R );
    for (int k = 0; k<2; k++) {
        scanf("%d" , &cnt[k] );
        for (int i = 1; i<=cnt[k]; i++) scanf("%d%d", &data[k][i].X , &data[k][i].Y );
    }
    que.push( mp(stx,sty) );
    dp[stx][sty] = 1; 
    while ( !que.empty() ) {
        int x = que.front().X , y = que.front().Y; que.pop();
        for (int k = 0; k<2; k++) 
            for (int i = 1; i<=min(k==0?x:y,cnt[k]); i++) {
                int g = x+data[k][i].X , h = y+data[k][i].Y;
                if ( k == 0 ) g -= i; else h -= i;
                if ( g+h > R ) continue;
                if ( dp[g][h] == 0 ) {
                    dp[g][h] = dp[x][y]+1;
                    que.push( mp(g,h) );
                }
            }
    }
    if ( dp[0][0] ) { printf("Ivan\n%d\n", dp[0][0]-1 ); return 0; }
    if ( clr(stx,sty) ) { printf("Draw\n"); return 0; }
    memset( dp , 0 , sizeof(dp) );
    printf("Zmey\n%d\n",dfs(stx,sty) );
    return 0;
}
