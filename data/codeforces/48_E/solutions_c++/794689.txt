#include<cstdio>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#define MAXN 400050
using namespace std;
struct Edge{
	int v,next;
}edge[8000050];
int e,ft[MAXN];
void init()
{
	e=0;
	memset(ft,-1,sizeof(ft));
}
void add_edge(int u,int v)
{
	edge[e].v=v;
	edge[e].next=ft[u];
	ft[u]=e++;
}

struct Node{
	int x,y;
}cut[2][MAXN];
int n,m,R,s;
int head,tail,queue[MAXN];
bool flag[MAXN];
int dist[MAXN];
int ref[MAXN],cnt,deg[MAXN];
bool in(int x,int y)
{
	return x>=0&&y>=0&&x+y<=R;
}
void solve()
{
	init();
	int x,y,xx,yy;
	head=tail=0;
	memset(flag,false,sizeof(flag));
	queue[tail++]=s;
	flag[s]=true;
	dist[s]=0;
	while(head<tail){
		int u=queue[head++];
		x=u/201;
		y=u%201;
		if(!u){
			puts("Ivan");
			printf("%d\n",dist[u]);
			return;
		}

		for(int i=1;i<=x&&i<=n;i++){
			xx=x-i+cut[0][i].x;
			yy=y+cut[0][i].y;
			int v=xx*201+yy;
			if(in(xx,yy)&&!flag[v]){
				flag[v]=true;
				queue[tail++]=v;
				dist[v]=dist[u]+1;
			}
		}
		for(int i=1;i<=y&&i<=m;i++){
			xx=x+cut[1][i].x;
			yy=y-i+cut[1][i].y;
			int v=xx*201+yy;
			if(in(xx,yy)&&!flag[v]){
				flag[v]=true;
				queue[tail++]=v;
				dist[v]=dist[u]+1;
			}
		}
	}
	cnt=tail;
	//printf("cnt=%d\n",cnt);
	memset(deg,0,sizeof(deg));
	memset(dist,0,sizeof(dist));
	for(int i=0;i<cnt;i++)
		ref[i]=queue[i];
	for(int i=0;i<cnt;i++){
		int u=ref[i];
		x=u/201;
		y=u%201;
		for(int i=1;i<=x&&i<=n;i++){
			xx=x-i+cut[0][i].x;
			yy=y+cut[0][i].y;
			int v=xx*201+yy;
			if(in(xx,yy)&&flag[v]){
				deg[u]++;
				add_edge(v,u);
			}
		}
		for(int i=1;i<=y&&i<=m;i++){
			xx=x+cut[1][i].x;
			yy=y-i+cut[1][i].y;
			int v=xx*201+yy;
			if(in(xx,yy)&&flag[v]){
				deg[u]++;
				add_edge(v,u);
			}
		}
	}
	head=tail=0;
	for(int i=0;i<cnt;i++){
		int u=ref[i];
		if(!deg[u])
			queue[tail++]=u;
	}
	while(head<tail){
		int u=queue[head++];
		for(int i=ft[u];i!=-1;i=edge[i].next){
			int v=edge[i].v;
			dist[v]=max(dist[v],dist[u]+1);
			deg[v]--;
			if(!deg[v])
				queue[tail++]=v;
		}
	}
	if(tail<cnt){
		puts("Draw");
		return;
	}
	puts("Zmey");
	printf("%d\n",dist[s]+1);
}
int main()
{
	//freopen("input.txt","r",stdin);
	int a,b;
	while(scanf("%d%d%d",&a,&b,&R)==3){
		s=a*201+b;
		scanf("%d",&n);
		for(int i=1;i<=n;i++)
			scanf("%d%d",&cut[0][i].x,&cut[0][i].y);
		scanf("%d",&m);
		for(int i=1;i<=m;i++)
			scanf("%d%d",&cut[1][i].x,&cut[1][i].y);
		solve();
	}
	return 0;
}

 		 		 	     		   			