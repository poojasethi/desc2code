#include <iostream>
#include <cstdio>
#include <map>

using namespace std;

struct case1
{
 long h,t;
}head[205]={0},tail[205]={0},node[200005]={0};

long out[2000005]={0};
long dui[2000005]={0};
long closed=0,open=0,r;
long e[20000005]={0},last[20000005]={0},now[2000005]={0},totm=0;

long step[405][405]={0};
long pos[405][405]={0};

long que[2000005]={0},top=0;
long f[2000005]={0};

int main()
{
 long h,t;
 long i,n,m,x,y,j;
 long temp;
 long o=0;
 
 scanf("%ld%ld%ld",&h,&t,&r);
 scanf("%ld",&n);
 for(i=1;i<=n;i++)
   scanf("%ld%ld",&head[i].h,&head[i].t);
 scanf("%ld",&m);
 for(i=1;i<=m;i++)
   scanf("%ld%ld",&tail[i].h,&tail[i].t);
   
 dui[open++]=(h<<15)+t;
 step[h][t]=1;
 for(;closed<open;)
   {
    x=dui[closed]>>15;
    y=dui[closed++]&32767;
    node[++o]=(struct case1){x,y};
    pos[x][y]=o;
    if(x+y>r)
     {
      que[top++]=o;
      continue;
     }
    if(x==0&&y==0)
     {
      printf("Ivan\n%ld\n",step[x][y]-1);
      return 0;
     }
    for(i=1;i<=x&&i<=n;i++)
      /*if(x-i==0&&y==0&&!step.count(0))
       {
        dui[open++]=0;
        step[0]=step[(x<<15)+y]+1;
       }
      else*/ if(!step[(x-i+head[i].h)][y+head[i].t])
       {
        dui[open++]=((x-i+head[i].h)<<15)+y+head[i].t;
        step[(x-i+head[i].h)][y+head[i].t]=step[x][y]+1;
       }
    for(i=1;i<=y&&i<=m;i++)
     /* if(x==0&&y-i==0&&!step.count(0))
       {
        dui[open++]=0;
        step[0]=step[(x<<15)+y]+1;
       }
      else*/ if(!step[(x+tail[i].h)][y-i+tail[i].t])
       {
        dui[open++]=((x+tail[i].h)<<15)+y-i+tail[i].t;
        step[(x+tail[i].h)][y-i+tail[i].t]=step[x][y]+1;
       }
   }
 
 for(j=1;j<=o;j++)
   {
    x=node[j].h;
    y=node[j].t;
    if(x+y>r)
     continue;
    for(i=1;i<=x&&i<=n;i++)
       {
        e[++totm]=j;
        last[totm]=now[pos[(x-i+head[i].h)][y+head[i].t]];now[pos[(x-i+head[i].h)][y+head[i].t]]=totm;
        out[j]++;
       }
    for(i=1;i<=y&&i<=m;i++)
       {
        e[++totm]=j;
        last[totm]=now[pos[(x+tail[i].h)][y-i+tail[i].t]];now[pos[(x+tail[i].h)][y-i+tail[i].t]]=totm;
        out[j]++;
       }
   }
 
 closed=0,open=top;
 for(;closed<open;)
   {
    x=que[closed++];
    for(i=now[x];i;i=last[i])
      {
       out[e[i]]--;
       if(out[e[i]]==0)
        que[open++]=e[i];
       if(f[x]+1>f[e[i]])
        f[e[i]]=f[x]+1;
      }
   }
 
 if(out[1])
  {
   printf("Draw\n");
   return 0;
  }
 else
  printf("Zmey\n%ld\n",f[1]);
 
 return 0;
}
