#include <bits/stdc++.h>

#define SZ(x) (( int(x.size()) ))

using namespace std;

const int maxn = 200 + 10;

vector < pair<int, int> > qeue;
int H, T, R, n, m, h1[maxn], t1[maxn], h2[maxn], t2[maxn], mark[maxn][maxn], dis[maxn][maxn];

void bfs()
{
	mark[H][T] = 1;
	qeue.push_back( make_pair(H, T) );

	for(int i = 0; i < SZ(qeue); i++){
		int x = qeue[i].first, y = qeue[i].second;

		for(int j = 1; j <= min(x, n); j++){
			int new_x = x - j + h1[j], new_y = y + t1[j];
			if( new_x + new_y <= R && !mark[new_x][new_y] ){
				mark[new_x][new_y] = 1;
				dis[new_x][new_y] = dis[x][y] + 1;
				qeue.push_back( make_pair(new_x, new_y) );
			}
		}
		for(int j = 1; j <= min(y, m); j++){
                        int new_x = x + h2[j], new_y = y - j + t2[j];
                        if( new_x + new_y <= R && !mark[new_x][new_y] ){
                                mark[new_x][new_y] = 1;
                                dis[new_x][new_y] = dis[x][y] + 1;
                                qeue.push_back( make_pair(new_x, new_y) );
                        }
                }
	}
	return;
}

void dfs(int h, int t)
{
	mark[h][t] = 1;
	for(int i = 1; i <= min(h, n); i++){
		int x = h - i + h1[i], y = t + t1[i];

		if(x + y <= R){
			if(mark[x][y] == 1){
				cout << "Draw" << endl;
				exit(0);
			}
			if(mark[x][y] == 0)
				dfs(x, y);
		}

		dis[h][t] = max( dis[h][t], dis[x][y] + 1 );
	}

	for(int i = 1; i <= min(t, m); i++){
                int x = h + h2[i], y = t - i + t2[i];

                if(x + y <= R){
                        if(mark[x][y] == 1){
                                cout << "Draw" << endl;
                                exit(0);
                        }
                        if(mark[x][y] == 0)
                                dfs(x, y);
                }

                dis[h][t] = max( dis[h][t], dis[x][y] + 1 );
        }
	mark[h][t] = 2;
	return;
}

void input()
{
	cin >> H >> T >> R;
	cin >> n;
	for(int i = 1; i <= n; i++)
		cin >> h1[i] >> t1[i];
	cin >>m;
	for(int i = 1; i <= m; i++)
		cin >> h2[i] >> t2[i];
	return;
}

int main()
{
	ios::sync_with_stdio(false);
	input();
	bfs();
	if(dis[0][0]){
		cout << "Ivan" << endl << dis[0][0] << endl;
		return(0);
	}
	memset(dis, 0, sizeof dis);
	memset(mark, 0, sizeof mark);
	dfs(H, T);
	cout << "Zmey" << endl << dis[H][T] << endl;
	return 0;
}

		      		 	 			 	 	     		   	