#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<cmath>
#include<algorithm>
#include<set>
using namespace std;
int n,q;
int ans[100000+10];
int head[100000+10],tail=0;
struct E
{
	int v,next;
}e[100000*2+10];
void add(int u,int v)
{
	e[tail].v=v;
	e[tail].next=head[u];
	head[u]=tail++;
}
const int inf=0x3f3f3f3f;
set<int>query[100000+10];
set<int>res[100000+10];
set<int>lca[100000+10];
set<int>::iterator it;
void dfs(int u,int fa)
{
	for(int i=head[u];i!=-1;i=e[i].next)
	{
		int v=e[i].v;
		if(v==fa)continue;
		dfs(v,u);
		for(it=query[v].begin();it!=query[v].end();it++)
		{
			if(query[u].count(*it))ans[*it]=inf;
		}
		if(res[v].size()>res[u].size())swap(res[u],res[v]);
		for(it=res[v].begin();it!=res[v].end();it++)
		{
			if(query[u].count(*it))ans[*it]++;
			else if(res[u].count(*it))lca[u].insert(*it);
			else res[u].insert(*it);
		}
	}
	for(it=lca[u].begin();it!=lca[u].end();it++){ans[*it]++;if(res[u].count(*it))res[u].erase(*it);}
	for(it=query[u].begin();it!=query[u].end();it++)
	{
		if(res[u].count(*it))ans[*it]++;
		res[u].insert(*it);
	}
}
int main()
{
	memset(head,-1,sizeof(head));
	scanf("%d",&n);
	for(int i=1;i<n;i++)
	{
		int u,v;
		scanf("%d%d",&u,&v);
		add(u,v);add(v,u);
	}
	scanf("%d",&q);
	for(int i=1;i<=q;i++)
	{
		int k;scanf("%d",&k);
		while(k--)
		{
			int xx;
			scanf("%d",&xx);
			query[xx].insert(i);
		}
	}
	dfs(1,-1);
	for(int i=1;i<=q;i++)
	{
		if(ans[i]<inf)printf("%d\n",ans[i]);
		else printf("-1\n");
	}
	return 0;
}