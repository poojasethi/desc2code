#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<queue>
#include<set>
#include<stack>
#include<map>
#include<vector>
#define fi first
#define se second
#define pb push_back
#define mk make_pair
using namespace std;
typedef long long ll;
int read()
{
	char ch=getchar();int x,f=1;
	while(ch<'0'||ch>'9')
	{
		if(ch=='-') f=-1;
		ch=getchar();
	}
	x=ch-'0';
	while(1)
	{
		ch=getchar();
		if(ch<'0'||ch>'9') break;
		x=x*10+ch-'0';
	}
	return x*f;
}
const int maxn=250010;
vector<int> g[maxn],e[maxn];
int cnt,st[maxn],ed[maxn],d[maxn],p[maxn][21];
int now,a[maxn],f[maxn],vis[maxn],ans,s[maxn];
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
void dfs(int u,int fa)
{
	st[u]=++cnt;
	FOREACH(it,g[u])
	{
		int j=*it;
		if(j==fa) continue;
		d[j]=d[u]+1;p[j][0]=u;
		dfs(j,u);
	}
	ed[u]=cnt;
}
int lca(int x,int y)
{
	if(d[x]<d[y]) swap(x,y);
	int de=d[x]-d[y];
	for(int i=0;i<=20;i++)
		if(de>>i&1) x=p[x][i];
	if(x==y) return x;
	for(int i=19;i>=0;i--)
		if(p[x][i]!=p[y][i]) x=p[x][i],y=p[y][i];
	return p[x][0];
}
bool cmp(int i,int j)
{
	return st[i]<st[j];
}
bool dp(int u)
{
	int f1=0;f[u]=0;
	 FOREACH(it,e[u])
	{
		int j=*it;
		if(vis[j]==now&&p[j][0]==u&&vis[u]==now) return 0;
		if(!dp(j)) return 0;
		if(vis[j]==now||f[j]) f1++;
	}
	if(vis[u]==now) ans+=f1;
	else 
	{
		if(f1==1) f[u]=1;
		if(f1>1) ans++;
	}
	return 1;
}
int main()
{
	//freopen(".in","r",stdin);
	//freopen(".out","w",stdout);
	int n=read();
	for(int i=1;i<n;i++)
	{
		int x=read(),y=read();
		x--;y--;
		g[x].pb(y);g[y].pb(x);
	}	 
	dfs(0,-1);
	for(int i=1;i<=20;i++)
		for(int j=0;j<n;j++) 
			p[j][i]=p[p[j][i-1]][i-1];
	int m=read();
	while(m--)
	{
		int k=read();now++;
		for(int i=0;i<k;i++)
			a[i]=read(),vis[--a[i]]=now;
		if(k==1) {puts("0");continue;}
		sort(a,a+k,cmp);
		int t=k;
		for(int i=0;i<k-1;i++)
			a[t++]=lca(a[i],a[i+1]);
		sort(a,a+t,cmp);
		k=unique(a,a+t)-a;
		int top=0;
		for(int i=0;i<k;i++)
		{
			while(top&&!(st[a[i]]>=st[s[top]]&&st[a[i]]<=ed[s[top]])) top--;
			if(top) e[s[top]].pb(a[i]);
			s[++top]=a[i];
		}
		ans=0;
		if(!dp(a[0])) puts("-1");
		else printf("%d\n",ans);
		for(int i=0;i<k;i++) e[a[i]].clear();

	}
	//fclose(stdin);
	//fclose(stdout);
	return 0;
}
