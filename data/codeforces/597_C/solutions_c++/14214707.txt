#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long LL;
const int maxn = 100000 + 10;

int n, k;
int a[maxn];

int inline lowbit(int x) { return x & (-x); }

LL C[12][maxn];

void update(int x, int k, LL v) {
	while(x <= n) {
		C[k][x] += v;
		x += lowbit(x);
	}
}

LL query(int x, int k) {
	LL ans = 0;
	while(x) {
		ans += C[k][x];
		x -= lowbit(x);
	}
	return ans;
}

int main()
{
	scanf("%d%d", &n, &k); k++;
	for(int i = 1; i <= n; i++) scanf("%d", a + i);

	for(int i = 1; i <= n; i++) {
		update(a[i], 1, 1);
		for(int j = 2; j <= k; j++) {
			LL t = query(a[i] - 1, j - 1);
			update(a[i], j, t);
		}
	}

	LL ans = query(n, k);
	printf("%lld\n", ans);

	return 0;
}
