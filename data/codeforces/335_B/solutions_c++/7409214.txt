#include <iostream>
#include <algorithm>
#include <string>
using namespace std;

string S, T;
int N;
int occ[26];
int dp[2600][2600];

int main()
{
	cin >> S;
	N = S.size();

	if (N > 2574)
	{
		for (int i = 0; i < N; i++)
			occ[S[i]-'a']++;

		char c = 'a';
		for (; c <= 'z'; c++)
			if (occ[c-'a'] >= 100)
				break;

		for (int i = 0; i < 100; i++)
			cout << c;
		return 0;
	}

	T = "";
	for (int i = N - 1; i >= 0; i--)
		T += S[i];

	for (int i = 1; i <= N; i++)
		for (int j = 1; j <= N; j++)
		{
			if (S[i-1] == T[j-1])
				dp[i][j] = 1 + dp[i-1][j-1];
			else
				dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
		}

	int len = dp[N][N];
	string ans = "";
	for (int i = N, j = N; i > 0 && j > 0 && len > 0;)
	{
		if (S[i-1] == T[j-1])
		{
			ans += S[i-1];
			len--, i--, j--;
		}
		else if (dp[i-1][j] > dp[i][j-1])
			i--;
		else
			j--;
	} 

	if (dp[N][N] > 100)
		cout << ans.substr(0, 50) + ans.substr(dp[N][N]-50, 50) << "\n";
	else
		cout << ans << "\n";

	return 0;
}