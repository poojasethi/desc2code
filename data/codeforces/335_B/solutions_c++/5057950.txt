#include <iostream>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <utility>
#include <algorithm>
#include <cmath>

using namespace std;

int ct[26];
string s,dp[2600][2600];

int main() {
	memset(ct,0,sizeof(ct));
	cin >> s;
	for (int i = 0; i < s.length(); i++) {
		ct[(int)(s[i]-'a')]++;
		if (ct[(int)(s[i]-'a')]==100) {
			for (int j = 0; j < 100; j++) cout << s[i];
			return 0;
		}
		if (s.length() <= 2574) {
			dp[0][i] = s[i];
			if (i!=s.length()-1 && s[i]==s[i+1]) {
				dp[1][i] = s[i];
				dp[1][i] += s[i];
			} else dp[1][i] = s[i];
		}
	}
	for (int i = 2; i < s.length(); i++) {
		for (int j = 0; j < s.length()-i; j++) {
			if (s[j]==s[j+i]) dp[i][j] = s[j] + dp[i-2][j+1] + s[j];
			if (dp[i-1][j].length() > dp[i][j].length()) dp[i][j] = dp[i-1][j];
			if (dp[i-1][j+1].length() > dp[i][j].length()) dp[i][j] = dp[i-1][j+1];
			if (dp[i][j].length()>=100) {
				cout << dp[i][j].substr(0,50);
				cout << dp[i][j].substr(dp[i][j].length()-50,50);
				return 0;
			}
		}
	}
	cout << dp[s.length()-1][0];
}