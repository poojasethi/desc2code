#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>

using namespace std;

int DP[2605][2605];
string S,ans;
int N,u;

bool bak();
int solve(int bas,int son)
{
	if(bas > son) return 0;
	if(bas == son) return 1;	
	
	if(DP[bas][son] != -1) return DP[bas][son];
	if(S[bas] == S[son]) return DP[bas][son] = solve(bas+1,son-1)+2;

	int a,b;
	a = solve(bas+1,son);
	b = solve(bas,son-1);

	return DP[bas][son] = max(a,b);
}

int main()
{
	int i,j;

	cin >> S;
	N=S.size();

	if(!bak()) return 0;
	memset(DP,-1,sizeof(DP));
	solve(0,N-1);

	i=0; j=N-1; u=0;

	while(i < j)
	{
		if(u == 100) break;
		if(S[i] == S[j]) { ans+=S[i]; i++; j--; u+=2; continue; }
		if(DP[i+1][j] > DP[i][j-1]) i++;
		else j--;
	}
	cout << ans;
	if(u < 100 && i==j) cout << S[i];
	reverse(ans.begin(),ans.end());
	cout << ans << endl;

	return 0;
}

bool bak()
{
	int i,j,h[35]={0};

	for(i=0;i<N;i++)
	{
		h[S[i]-'a']++;
		if(h[S[i]-'a'] >= 100) 
		{
			for(j=0;j<100;j++)
				printf("%c",S[i]);
			puts("");
			return false;
		}
	}
	return true;
}
