#include <algorithm>
#include <iostream>
#include <string>
#include <vector>

using namespace std;

int main() {
  string s;
  cin >> s;

  int length = s.size();
  if (length >= 26 * 100) {
    vector<int> freq(26);
    for (int i = 0; i < length; ++i)
      ++freq[s[i] - 'a'];
    string res(100,
        'a' + (max_element(freq.begin(), freq.end()) - freq.begin()));
    cout << res << endl;
  } else {
    vector<vector<int> > dp(length, vector<int>(length));
    for (int i = 0; i < length; ++i)
      dp[i][i] = 1;
    for (int len = 2; len <= length; ++len)
      for (int i = 0; i + len <= length; ++i) {
        int j = i + len - 1;
        if (s[i] == s[j])
          dp[i][j] = 2 + dp[i + 1][j - 1];
        else
          dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]);
      }
    int l_dp = 0, r_dp = length - 1;
    length = min(100, dp[l_dp][r_dp]);
    string res(length, ' ');
    int l = 0, r = length - 1;
    while (l <= r) {
      if (s[l_dp] == s[r_dp]) {
        res[l] = res[r] = s[l_dp];
        ++l; --r;
        ++l_dp; --r_dp;
      } else if (dp[l_dp][r_dp] == dp[l_dp + 1][r_dp])
        ++l_dp;
      else
        --r_dp;
    }
    cout << res << endl;
  }
  return 0;
}
