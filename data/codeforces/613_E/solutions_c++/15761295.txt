///Coded by RnS\
	2016/2/2 20:26~ 2/3 10:29

#include <bits/stdc++.h>
using namespace std;
#define M 2020
const int hashmod = 100000007;
const long long hashmulti = 31;
const int mod = 1000000007;

int n, m;
char strs[2][M], strt[M];
int S[2][M][M], T[M][M];

void input(char*s, int S[][M], int &n) {
	scanf("%s", s);
	n = strlen(s);
	for (int i = 0; i < n; i++) {
		S[i][i] = s[i] - 'a' + 1;
		for (int j = i + 1; j < n; j++) S[i][j] = (hashmulti * S[i][j-1] + s[j] - 'a' + 1) % hashmod;
		for (int j = i - 1; j >=0; j--) S[i][j] = (hashmulti * S[i][j+1] + s[j] - 'a' + 1) % hashmod;
	}
}
void Reverse(char*s, int S[][M]) {
	strrev(s);
	for (int i = 0; i < n; i++) {
		S[i][i] = s[i] - 'a' + 1;
		for (int j = i + 1; j < n; j++) S[i][j] = (hashmulti * S[i][j-1] + s[j] - 'a' + 1) % hashmod;
		for (int j = i - 1; j >=0; j--) S[i][j] = (hashmulti * S[i][j+1] + s[j] - 'a' + 1) % hashmod;
	}
}
int rlt;
void add(int &x, int y) {x += y; while (x >= mod) x -= mod;}

void init() {
	for (int r = 0; r < 2; r++) {
		for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) {
			int l = j > i ? j - i + 1: i - j + 1;
			if (l == m) {
				rlt += S[r][i][j] == T[0][m-1];
			} else if (l == m - 1) {
				rlt += (S[r][i][j] == T[0][m-2]) && (S[!r][j][j] == T[m-1][m-1]);
			}
		}
	}
}

int gas[2][M][2*M];
void prepare() {
	memset(gas, 0, sizeof gas);
	for (int r = 0; r < 2; r++) for (int j = n - 1; j >= 0; j--) for (int i = j; i >= 0; i--) {
		int l = j - i + 1;
		gas[r][j][l + j] = gas[r][j+1][l + j];
		if (S[r][j][i] == T[m-l][m-1]) gas[r][j][l + j]++;
	}
}

int F[2][M][M];
int Sum[2][M][M];
void Insert(int r, int i, int l, int J, int plus) {
	int J0 = i + (m - l + 1) / 2;
	if (J0 > --J) return;

	if (l + J - i == m) {
		add(rlt, plus);
		J--;
	}
	int L0 = m - (l + J0 - i);
	int L = m - (l + J - i);
	add(rlt, (1ll * mod + gas[!r][J0][m+i-l] - gas[!r][J+1][m+i-l]) * plus % mod);
}
void Update(int r, int i, int l, int J, int plus) {
	add(Sum[!r][i+1][l+2], plus);
	add(Sum[!r][J][l+J-i+1], mod - plus);
}
void solve(int type) {
	if (type) {
		memset(S, -1, sizeof S);
		Reverse(strs[0], S[0]);
		Reverse(strs[1], S[1]);
	}
	prepare();
    memset(F, 0, sizeof F);
    memset(Sum, 0, sizeof Sum);
    for (int r = 0; r < 2; r++) for (int i = 0; i < n; i++) for (int j = 0; j < n; j++) {
		int l = j > i ? j - i + 1 : i - j + 1;
		if (l + 1 >= m) continue;
        if (S[r][i][j] != T[0][l-1] || S[!r][j][j] != T[l][l]) continue;
        if (i <= j) {
			F[!r][j][l+1]++;
			continue;
        }
        int jj = j + m - l - 1;
        if (jj <= i) {
			if (S[!r][j][jj] == T[l][m-1]) rlt++;
			continue;
        }
        if (S[!r][j][i] == T[l][l+i-j]) F[!r][i][l+i-j+1]++;
    }


	for (int i = 0; i < n; i++) for (int l = 1; l < m; l++) for (int r = 0; r < 2; r++) {
		if (i) add(Sum[r][i][l], Sum[r][i-1][l-1]);
		add(F[r][i][l], Sum[r][i][l]);
		int plus = F[r][i][l];
		if (T[l-1][l-1] != S[r][i][i] || !plus) continue;
		int j = i, J = n;
		while (j < J - 1) {
			int jj = (j + J) >> 1;
			if (S[r][i][jj] == T[l-1][l+jj-i-1]) j = jj;
			else J = jj;
		}
		if (J == i + 1) continue;
		Update(r, i, l, J, plus);
		Insert(r, i, l, J, plus);
    }
}

int main() {
//	freopen("339_E.in", "r", stdin);
	memset(S, -1, sizeof S);
	input(strs[0], S[0], n); input(strs[1], S[1], n);
	input(strt, T, m);
	init();
	if (m > 2 && n * 2 >= m) solve(0), solve(1);
	printf("%d\n", (rlt % mod + mod) % mod);
	return 0;
}
