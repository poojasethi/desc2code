#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int mod=1e9+7;
const int maxn=2000+10;
int n,m,ans;
int s[2][maxn],w[maxn];
char a[maxn],b[maxn],c[maxn];
int suf[2][maxn][maxn],dp[2][maxn][maxn];
int left[2][maxn][maxn],right[2][maxn][maxn];
inline void solve(bool r)
{
    for (int i=0;i<=1;i++)
        for (int j=n-1;j>=0;j--)
            for (int k=m-1;k>=0;k--)
                if (s[i][j]==w[k])
                    suf[i][j][k]=suf[i][j+1][k+1]+1;
    for (int i=0;i<2;i++)
    {
        for (int j=0,pos,len;j<n;j++)
        {
            pos=j,len=0;
            while (pos>=0)
            {
                if (s[i][pos]!=w[len++]||(len<<1)>m)
                    break;
                if (len!=1)
                    left[i^1][j+1][len<<1]=(pos+suf[i^1][pos][len])>j;
                pos--;
            }
        }
        for (int j=n-1,pos,len;j>=0;j--)
        {
            pos=j,len=m;
            while (pos<n)
            {
                if (s[i][pos]!=w[--len]||(len<<1)<m)
                    break;
                if (len!=m-1)
                    right[i^1][j][(len<<1)-m]=(j+suf[i^1][j][(len<<1)-m])>pos;
                pos++;
            }
        }
    }
    for (int j=0;j<=n;j++)
        for (int i=0;i<=1;i++)
            for (int k=0;k<=m;k++)
            {
                if (!k||left[i][j][k])
                    (dp[i][j][k]+=1)%=mod;
                if (dp[i][j][k])
                {
                    if (j<n)
                        if (k<m&&s[i][j]==w[k])
                        {
                            (dp[i][j+1][k+1]+=dp[i][j][k])%=mod;
                            if (r&&k&&k+1==m)
                                (ans+=dp[i][j][k])%=mod;
                            if (k+1<m&&s[i^1][j]==w[k+1])
                            {
                                (dp[i^1][j+1][k+2]+=dp[i][j][k])%=mod;
                                if (r&&k&&k+2==m)
                                    (ans+=dp[i][j][k])%=mod;
                            }
                        }
                    if (!r&&(k==m||right[i][j][k]))
                        (ans+=dp[i][j][k])%=mod;
                    if (r&&k&&k<m&&right[i][j][k])
                        (ans+=dp[i][j][k])%=mod;
                }
            }
}
int main()
{
    if (fopen("in.in","r")!=NULL)
    {
        freopen("in.in","r",stdin);
        freopen("out.out","w",stdout);
    }
    scanf("%s%s%s",a,b,c);
    n=strlen(a);
    m=strlen(c);
    for (int i=0;i<n;i++)
    {
        s[0][i]=a[i]-'a';
        s[1][i]=b[i]-'a';
    }
    for (int i=0;i<m;i++)
        w[i]=c[i]-'a';
    solve(0);
    reverse(w,w+m);
    memset(dp,0,sizeof(dp));
    memset(left,0,sizeof(left));
    memset(right,0,sizeof(right));
    memset(suf,0,sizeof(suf));
    solve(1);
    printf("%d\n",ans);
    return 0;
}

			 			    	     	   		 	  		