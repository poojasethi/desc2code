
if __name__ == '__main__':
    n = input()
    adj = [[] for _ in range(n + 1)]
    for i in range(n - 1):
        a, b = [int(x) for x in raw_input().split()]
        adj[a].append(b)
        adj[b].append(a)

    v = [0] + [int(x) for x in raw_input().split()]
    minus = [0] * (n + 1)
    plus = [0] * (n + 1)
    vis = [False] * (n + 1)
    parent = [0] * (n + 1)

    stack = [1]
    vis[1] = True
    while len(stack) != 0:
        top = stack[-1]
        unvisited = False
        for adj_node in adj[top]:
            if vis[adj_node] == False:
                vis[adj_node] = True
                unvisited = True
                parent[adj_node] = top
                stack.append(adj_node)

        if unvisited == False:
            minus_this, plus_this = 0, 0
            pop = stack.pop()
            for adj_node in adj[pop]:
                if adj_node == parent[pop]:
                    continue
                minus_this = max(minus_this, minus[adj_node])
                plus_this = min(plus_this, plus[adj_node])

            minus[pop] = minus_this
            plus[pop] = plus_this
            final_val = v[pop] - (minus_this + plus_this)
            if final_val > 0:
                minus[pop] += final_val
            else:
                plus[pop] += final_val

    # rec(1, adj, minus, plus, vis, v)
    # print minus
    # print plus

    print minus[1] - plus[1]
