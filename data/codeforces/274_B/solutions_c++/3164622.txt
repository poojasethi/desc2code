//By momo
#include <cstdio>
#include <vector>
#include <algorithm>
#define N 100010
#define LL long long
#define FOR(it, c) for(__typeof((c).begin())it=(c).begin();it!=(c).end();it++)
using namespace std;

vector<LL> G[N];
LL sub[N], add[N], a[N];
void dfs(LL p, LL f){
	FOR(it, G[p]){
		if(*it == f) continue;
		dfs(*it, p);
		sub[p] = max(sub[p], sub[*it]);
		add[p] = max(add[p], add[*it]);
	}
	a[p] += add[p]-sub[p];
	if(a[p] < 0) add[p] += -a[p];
	else sub[p] += a[p];
}

int main (){
	LL n; scanf("%I64d", &n);
	for(LL i = 0; i < n-1; i++){
		LL u, v; scanf("%I64d%I64d", &u, &v);
		G[u].push_back(v); G[v].push_back(u);
	}
	for(LL i = 1; i <= n; i++)
		scanf("%I64d", &a[i]);
	dfs(1, 0);
	printf("%I64d\n", add[1]+sub[1]);
}
