//BE NAME DOOST
#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

long int s[100001];
vector <int> T[100001];

long long in[100001]={0},de[100001]={0};
bool mark[100001]={false};

void DFS(int v)
{
	mark[v]=true;
	
	for(int i=0;i<T[v].size();i++)
		if(!mark[ T[v][i] ] ){
			DFS( T[v][i] );
			if(in[T[v][i]]>in[v])
				in[v]=in[T[v][i]];
			if(de[T[v][i]]>de[v])
				de[v]=de[T[v][i]];
		}
	//cout<<in[v]<<" "<<de[v]<<endl;
	long int x=s[v]-de[v]+in[v];
	if(x>0)
		de[v]+=x;
	else
		in[v]-=x;
	//cout<<in[v]<<" "<<de[v]<<endl;
	
}

int main()
{
	int n;
	cin>>n;
	
	for(int i=0;i<n-1;i++)
	{
		int a,b;
		cin>>a>>b;
		T[a-1].push_back(b-1);
		T[b-1].push_back(a-1);
	}
	
	for(int i=0;i<n;i++)
		cin>>s[i];

	DFS(0);
	
	cout<<in[0]+de[0];
}
