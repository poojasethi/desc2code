#include<bits/stdc++.h>
using namespace std;
#define Int long long
bool vis[100005];
vector<Int> G[100005];Int val[100005],X[100005][2];
void DFS(Int p){
	vis[p] = 1;
	for(int i=0;i<G[p].size();i++){
		if(!vis[G[p][i]]){
			DFS(G[p][i]);
			X[p][0] = max(X[p][0],X[G[p][i]][0]);
			X[p][1] = min(X[p][1],X[G[p][i]][1]);
		}
	}

	val[p] += X[p][0]+X[p][1];

	if(val[p]>0){
		X[p][1] += -1*val[p];
	}else{
		X[p][0] += -1*val[p];
	}
}
int main(){
	ios_base::sync_with_stdio(0);
	cin.tie(0);cout.tie(0);
	Int i,j,n,u,v;
	cin>>n;
	for(i=1;i<n;i++){
		cin>>u>>v;
		G[v].push_back(u);
		G[u].push_back(v);
	}
	for(i=1;i<=n;i++){
		cin>>val[i];
	}
	DFS(1);
	cout<<abs(X[1][1]) + X[1][0]<<endl;
	return 0;
}