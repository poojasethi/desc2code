#include <iostream>
#include <string>
#include <vector>
using namespace std;

vector <vector <int> > G;
long long w[200000], a[100010], b[100010], c[100010];
int n;
void dfs(int i, int p){
    for(int j = 0; j < G[i].size(); j++){
        int k = G[i][j];
        if(k == p) continue;
        dfs(k,i);
        a[i] = max(a[i],a[k]);
        b[i] = max(b[i],b[k]);
    }
    w[i] = w[i] + a[i] - b[i];
    if( w[i] < 0) a[i] += -w[i]; else b[i] += w[i];
    return;
}

int main(){
    
    cin >> n; G.resize(2*n);
    for(int i = 1, x, y; i < n; i++){
        cin >> x >> y;
        G[x].push_back(y);
        G[y].push_back(x);
    }
    for(int i = 1; i <= n; i++) cin >> w[i]; 
    dfs(1,1);
    cout << a[1] + b[1] << endl;
}
    

        

