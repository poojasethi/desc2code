#include <iostream>
#include <algorithm>
#include <vector>
#define INF 100001
using namespace std;

int n,x,y,to;
vector<vector<int> >g;
long long c[INF];
long long a[INF];
long long b[INF];
int dfs(int i, int p) {
  for (int j=0; j<g[i].size(); j++) {
    int k=g[i][j];
	if (k==p) continue;
	dfs(k,i);
	a[i]=max(a[i],a[k]);
	b[i]=max(b[i],b[k]);
  }
  c[i]+=a[i];
  c[i]-=b[i];
  if (c[i]<0){ a[i]+=-c[i];}
  if(c[i]>=0){ b[i]+=c[i];}
}
main(){
    g.resize(INF);
    cin>>n;
    for(int k=1;k<=n-1;k++){
     cin>>x;cin>>y;
     g[x].push_back(y);
     g[y].push_back(x);        
    }
    for(int k=1;k<=n;k++){
      cin>>c[k];
      }
    dfs(1,-1);
    cout<<a[1]+b[1]<<endl;
}
