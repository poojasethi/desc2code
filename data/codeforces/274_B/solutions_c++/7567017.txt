#include<cstdio>
#include<algorithm>
#define N 100005
using namespace std;
typedef long long LL;
int end[N];LL add[N],val[N],del[N];
int n,x,y,i,cnt;
struct arr{int go,next;}a[N*2];
inline void adj(int u,int v){a[++cnt].go=v;a[cnt].next=end[u];end[u]=cnt;}
void dfs(int k,int fa)
{
  for (int i=end[k];i;i=a[i].next)
  {
    int go=a[i].go;if (go==fa) continue;
    dfs(go,k);
    add[k]=max(add[go],add[k]);del[k]=max(del[go],del[k]);
  }
  if (add[k]+val[k]<del[k]) add[k]+=del[k]-val[k]-add[k];
  else del[k]+=add[k]+val[k]-del[k];
}
int main()
{
  scanf("%d",&n);
  for (i=1;i<n;i++)
    scanf("%d%d",&x,&y),adj(x,y),adj(y,x);
  for (i=1;i<=n;i++) scanf("%I64d",&val[i]);
  dfs(1,-1);
  printf("%I64d\n",add[1]+del[1]);
  return 0;
}
