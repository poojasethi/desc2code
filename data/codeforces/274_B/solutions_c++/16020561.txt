#include <bits/stdc++.h>
using namespace std;
int n;
vector<int> v[100009];
long long a[100009];
long long add[100009],sub[100009];
void dfs(int id,int par)
{
	if(v[id].size()==1 && id!=1)
	{
		if(a[id]<0)add[id]=-a[id];
		else sub[id]=a[id];return;
	}
	for(int i=0;i<v[id].size();i++)
	{
		int k=v[id][i];
		if(k==par)continue;
		dfs(k,id);
		add[id]=max(add[id],add[k]);
		sub[id]=max(sub[id],sub[k]);
	}
	a[id]+=add[id]-sub[id];
	if(a[id]<0)add[id]-=a[id];
	else sub[id]+=a[id];
}
int main() 
{
	cin>>n;
	for(int i=1;i<n;i++)
	{
		int x,y;
		cin>>x>>y;
		v[x].push_back(y);
		v[y].push_back(x);
	}
	for(int i=1;i<=n;i++)cin>>a[i];
	dfs(1,0);
	cout<<add[1]+sub[1];
	return 0;
}