#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
#define N 200005
int n,x,y,l,ed[N],next[N],son[N];
long long v[N],m0[N],m1[N],ans;
void dfs(int x,int fa)
{
	for (int p=son[x];p;p=next[p]){
		int y=ed[p]; if (y==fa) continue; dfs(y,x);
		m0[x]=min(m0[x],m0[y]),m1[x]=max(m1[x],m1[y]);
		}
	v[x]-=m0[x]+m1[x];
	if (v[x]<0) m0[x]+=v[x]; else m1[x]+=v[x];
}
int main()
{
	scanf("%d",&n);
	for (int i=1;i<n;i++) scanf("%d%d",&x,&y),
		ed[++l]=y,next[l]=son[x],son[x]=l,
		ed[++l]=x,next[l]=son[y],son[y]=l;
	for (int i=1;i<=n;i++) scanf("%I64d",&v[i]);
	dfs(1,0); printf("%I64d\n",m1[1]-m0[1]); return 0;
}
