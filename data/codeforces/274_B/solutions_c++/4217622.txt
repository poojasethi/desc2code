#include<iostream>
#include<vector>
using namespace std;
#define int long long
const int maxn=1000*100+100;
int n,m,a[maxn],d[maxn][2],x,y;
vector<int>v[maxn];
bool mark[maxn];
void dfs(int x){
	mark[x]=true;
	for(int i=0;i<v[x].size();i++){
		int next=v[x][i];
		if(!mark[next]){
			dfs(next);
			d[x][0]=max(d[x][0],d[next][0]);
			d[x][1]=max(d[x][1],d[next][1]);
		}
	}
	int y=d[x][0]-d[x][1];
	y+=a[x];
	if(y<0)
		d[x][0]+=-y;
	else
		d[x][1]+=y;
}
main(){
	cin>>n;
	for(int i=1;i<n;i++){
		cin>>x>>y;
		v[x].push_back(y);
		v[y].push_back(x);
	}
	for(int i=1;i<=n;i++)
		cin>>a[i];
	dfs(1);
	cout<<d[1][0]+d[1][1]<<endl;
	return 0;
}
