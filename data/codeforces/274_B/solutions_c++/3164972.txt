#include <iostream>
#include <vector>
using namespace std;
typedef long long ll;
int par[100001], v[100001];
vector<int> adj[100001];
int n; 
long long dfs(int i, ll &a, ll &b) {
    ll aa, bb; a = 0, b = 0;
    for (int j=0; j < adj[i].size(); j++) if(adj[i][j] != par[i]) {
        par[adj[i][j]] = i;
        dfs(adj[i][j], aa, bb);
        a = max(a,aa);
        b = max(b,bb);
    }
    v[i] += a - b;
    if (v[i] < 0) a += -v[i];
    else b += v[i];
    return a+b;
}
int main() {
    cin >> n;
    for (int i=0; i < n-1; i++) {
        int a,b; cin>>a>>b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    for (int i=1; i <= n; i++) cin >> v[i];
    par[1] = 1;
    ll a, b;
    cout << dfs(1, a, b) << endl;
    return 0;
}

