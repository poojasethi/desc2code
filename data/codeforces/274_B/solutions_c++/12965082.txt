#include <bits/stdc++.h>
using namespace std;

vector<int> g[100010];
long long w[100010],incr[100010],decr[100010];

void dfs(int x,int p) {
    int i,y;
    for(i=0;i<(int)g[x].size();i++) {
        y=g[x][i];
        if(y==p) continue;
        dfs(y,x);
        incr[x]=max(incr[x],incr[y]);
        decr[x]=max(decr[x],decr[y]);
    }
    w[x]=w[x]+incr[x]-decr[x];
    if(w[x]>0) decr[x]+=w[x];
    else incr[x]+=(-w[x]);
}
int main() {
    int i,n,a,b;
    cin>>n;
    for(i=0;i<n-1;i++) { 
        cin>>a>>b;
        g[a].push_back(b);
        g[b].push_back(a);
    }
    for(i=1;i<=n;i++) cin>>w[i];
    dfs(1,0);
    cout<<(incr[1]+decr[1])<<'\n';
    return 0;
}
