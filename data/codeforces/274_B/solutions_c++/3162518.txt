#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#define MAXN 100010
typedef long long int LL;
typedef unsigned long long int ULL;
using namespace std;

int n;
vector <int> aa[MAXN];
LL vv[MAXN];

pair <LL,LL> dfs(int v,int p){
	LL x=0,y=0;
	for (int i=0; i<int(aa[v].size()); i++) {
		if (aa[v][i]!=p) {
			pair <LL,LL> r=dfs(aa[v][i],v);
			x=max(x,r.first);
			y=max(y,r.second);
		}
	}
	if (vv[v]>x-y) x+=vv[v]-x+y;
	if (vv[v]<x-y) y+=x-y-vv[v];
	return make_pair(x,y);
}

int main(){
	cin >> n;
	for (int i=0; i<n-1; i++) {
		int a,b;
		cin >> a >> b;
		aa[a].push_back(b);
		aa[b].push_back(a);
	}
	for (int i=1; i<=n; i++) cin >> vv[i];
	pair <LL,LL> res=dfs(1,-1);
	cout << res.first+res.second << endl;
}
