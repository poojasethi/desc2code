#include<stdio.h>
#include<iostream>
#include<vector>
#include<algorithm>

#define LL long long int

using namespace std;

vector<int> a[100001];
LL val[100001];
bool f[100001];

void dfs(int x, LL *ans)
{
	f[x]=true;
	LL i,j=0,k=0;
	LL s[2]={0};
	for(i=0;i<a[x].size();i++)
	{
		if(f[a[x][i]])
			continue;
		dfs(a[x][i],s);
		j=max(j,s[0]);
		k=max(s[1],k);
	}
	LL temp = val[x]+j-k;
	ans[0]=j+((temp<0)?(-temp):0);
	ans[1]=k+((temp>0)?(temp):0);
}

int main()
{
	int i,j,k;
	int n;
	cin>>n;
	for(i=0;i<n-1;i++)
	{
		cin>>j>>k;
		a[j].push_back(k);
		a[k].push_back(j);
	}
	for(i=0;i<n;i++)
		cin>>val[i+1];
	LL c[2]={0};
	dfs(1,c);
	cout<<c[0]+c[1]<<'\n';
	return 0;
}
