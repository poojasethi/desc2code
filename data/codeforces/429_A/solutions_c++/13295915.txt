#include <iostream>
#include <vector>

int n,f[100001],s[100001];
std::vector<int>adj[100001];
std::vector<int>ans;
bool mark[100001];

void dfs(int x,int a,int b){
  mark[x]=1;
  if((f[x]^a)!=s[x]){
    a^=1;
    ans.push_back(x);
  }
  for(int i=0;i<adj[x].size();i++)
    if(!mark[adj[x][i]])
      dfs(adj[x][i],b,a);
}

int main() {
  std::cin>>n;       
  for (int x,y,i=1;i<n;i++){
    std::cin>>x>>y;
    adj[x].push_back(y);
    adj[y].push_back(x);
  }
  for(int i=1;i<=n;i++)
    std::cin>>f[i];
  for (int i=1;i<=n;i++)
    std::cin>>s[i];
  dfs (1,0,0);
  std:: cout<<ans.size()<<std::endl;
  for (int i = 0; i < ans.size(); i++)
    std::cout << ans[i] <<std::endl;
}
