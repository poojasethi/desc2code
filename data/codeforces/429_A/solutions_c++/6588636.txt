#include<iostream>
#include<vector>
using namespace std;
const int MAX_N=100010;
vector<int>v[MAX_N],o;
int init[MAX_N],goal[MAX_N],used[MAX_N];
void dfs(int x,int fr,int sr)
{
	int i,sz=v[x].size();
	used[x]=1;
	if(goal[x]!=(init[x]^fr))
	{
		o.push_back(x);
		fr^=1;
	}
	for(i=0;i<sz;i++)
		if(used[v[x][i]]==0)dfs(v[x][i],sr,fr);
}
int main()
{
	int i,n,a,b;
	cin>>n;
	for(i=1;i<n;i++)
	{
		cin>>a>>b;
		v[a].push_back(b);
		v[b].push_back(a);
	}
	for(i=1;i<=n;i++)
		cin>>init[i];
	for(i=1;i<=n;i++)
		cin>>goal[i];
	dfs(1,0,0);
	n=o.size();
	cout<<n<<endl;
	for(i=0;i<n;i++)
		cout<<o[i]<<endl;
}
