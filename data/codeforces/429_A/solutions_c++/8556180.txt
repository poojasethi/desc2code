#include <iostream>
#include <algorithm>
#include <vector>
#define pb push_back
using namespace std;
int dp[100010],ans, par [100010];
vector<int>javab,g[100010];
int init[100010],goal[100010];
void dfs(int v){
	if(dp[v]%2)	init[v]=!init[v];
	if(init[v]!=goal[v]){
		javab.pb(v);
		dp[v]++;
	}
	for(int i=0;i<g[v].size();i++){
		if(g[v][i] != par [v]){
			par [g [v][i]] = v;
			dp[g[v][i]]=dp[par[v]];
			dfs(g[v][i]);
		}
	}
}
int main(){
	int n;
	cin>>n;
	for(int i=0;i<n-1;i++){
		int x,y;
		cin>>x>>y;
		g[x].pb(y);
		g[y].pb(x);
	}
	for(int i=1;i<=n;i++)cin>>init[i];
	for(int i=1;i<=n;i++)cin>>goal[i];
	dfs(1);
	cout<<javab.size()<<endl;
	for(int i=0;i<javab.size();i++)	cout<<javab[i]<<endl;
}

			
