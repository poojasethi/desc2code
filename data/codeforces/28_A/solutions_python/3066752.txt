n, m = map(int, raw_input().split())
p = []
for i in xrange(n):
  p.append(map(int, raw_input().split()))
r = map(int, raw_input().split())

def l(p1, p2):
  return abs(p1[0] - p2[0] + p1[1] - p2[1])
def lr(i, j, k):
  return l(p[i], p[j]) + l(p[j], p[k % n])

def solve(a_p):
  l_p = a_p[:]
  tmp = []
  for rod_length in r:
    for j in range(len(l_p)):
      if l_p[j][1] == rod_length:
        break
    else:
      j = -1
    tmp.append(j if j == -1 else l_p[j][0])
    if j != -1:
      del l_p[j]
  res = []
  for i in range(n):
    if i in tmp:
      res.append(tmp.index(i) + 1)
    else:
      res.append(-1)
  return res
  
p1 = [(i, lr(i - 1, i, i + 1)) for i in xrange(0, n, 2)]
p2 = [(i, lr(i - 1, i, i + 1)) for i in xrange(1, n, 2)]

r1 = solve(p1)
r2 = solve(p2)

if sum([1 for i in r1 if i != -1]) == len(p1):
  print "YES"
  print " ".join(map(str, r1))
elif sum([1 for i in r2 if i != -1]) == len(p2):
  print "YES"
  print " ".join(map(str, r2))
else:
  print "NO"