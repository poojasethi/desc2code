#include <cstdio>
#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <cassert>
#include <sstream>
#include <numeric>
#include <climits>
#include <string>
#include <cctype>
#include <ctime>
#include <cmath>
#include <vector>
#include <queue>
#include <list>
#include <map>
#include <set>
using namespace std;

#define x first
#define y second

typedef pair<int, int> Point;

const int N = 555;

int n, m;
int len[N];
int ans[N];
bool visited[N];
Point a[N];

int dist(const Point &a, const Point &b, const Point &c) {
	return abs(a.x - b.x) + abs(a.y - b.y) + abs(b.x - c.x) + abs(b.y - c.y);
}

bool check(bool flag) {
	memset(visited, 0, sizeof(visited));
	memset(ans, -1, sizeof(ans));
	for (int i = flag; i < n; i += 2) {
		int need = dist(a[(i - 1 + n) % n], a[i], a[(i + 1) % n]);
		flag = false;
		for (int j = 0; j < m; ++j)
			if (!visited[j] && len[j] == need) {
				flag = true;
				visited[j] = true;
				ans[i] = j + 1;
				break;
			}
		if (!flag)
			return false;
	}
	return true;
}

int main() {
	scanf("%d%d", &n, &m);
	for (int i = 0; i < n; ++i)
		scanf("%d%d", &a[i].x, &a[i].y);
	for (int i = 0; i < m; ++i)
		scanf("%d", len + i);
	if (check(0) || check(1)) {
		puts("YES");
		for (int i = 0; i < n; ++i)
			printf("%d%c", ans[i], i < n - 1 ? ' ' : '\n');
	} else {
		puts("NO");
	}
}

