#include <iostream>
#include <algorithm>
using namespace std;
typedef pair<int, int> pt;

int dif(pt a, pt b) {
	return abs(a.first - b.first) + abs(a.second - b.second);
}

pt pts[1000];
int bends[1000];
bool mark[1000];
int n, m;
int mark1[1000];
bool test(int a) {
	fill(mark, mark + m, false);
	fill(mark1, mark1 + n, -1);
	for (int i = a; i < n; i += 2) {
		int d = dif(pts[i], pts[(i + 1) % n]) + dif(pts[(i + n - 1) % n], pts[i]);
		bool f = false;
		for (int j = 0; j < m; j++) {
			if (!mark[j] && bends[j] == d) {
				mark1[i] = j + 1;
				mark[j] = true;
				f = true;
				break;
			}
		}
		if (!f) return false;
	}
	cout << "YES\n";
	for (int i = 0; i < n; i++) {
		if (i) cout << ' ';
		cout << mark1[i];
	}
	return true;
}

int main() {
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		cin >> pts[i].first >> pts[i].second;
	}
	for (int i = 0; i < m; i++) {
		cin >> bends[i];
	}
	if (test(0)) return 0;
	if (test(1)) return 0;
	cout << "NO\n";
}
