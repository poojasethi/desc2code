#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
int n,m;
pair<int,int> N[502];
int R[502];
inline int Abs(int x)
{
	if (x<0) return  -x;
	return x;
}
bool Pick[502];
inline int Dist(int A,int B)
{
	return Abs(N[A].first-N[B].first)+Abs(N[A].second-N[B].second);
}
int Ans[502];
int main()
{
	scanf("%d%d",&n,&m);
	for (int i=0;i<n;i++)
		scanf("%d%d",&N[i].first,&N[i].second);
	for (int i=1;i<=m;i++)
		scanf("%d",R+i);
	for (int i=0;i<n;i+=2)
	{
		int L=Dist(i,(i+1)%n)+Dist(i,(i+n-1)%n);
		int P=0;
		for (int j=1;j<=m;j++)
			if (!Pick[j] && R[j]==L)
			{
				P=j;
				break;
			}
		if (!P) break;
		Ans[i]=P;
		Pick[P]=true;
			if (i==n-2)
			{
				puts("YES");
				printf("%d",Ans[0]);
				for (int j=1;j<n;j++)
					if (j&1) printf(" -1");
					else printf(" %d",Ans[j]);
				return 0;
			}
	}
	memset(Pick,0,sizeof Pick);
	for (int i=1;i<n;i+=2)
	{
		int L=Dist(i,(i+1)%n)+Dist(i,(i+n-1)%n);
		int P=0;
		for (int j=1;j<=m;j++)
			if (!Pick[j] && R[j]==L)
			{
				P=j;
				break;
			}
		if (!P) break;
		Ans[i]=P;
		Pick[P]=true;
			if (i==n-1)
			{
				puts("YES");
				printf("-1");
				for (int j=1;j<n;j++)
					if (j&1) printf(" %d",Ans[j]);
					else printf(" -1");
				return 0;
			}
	}
	puts("NO");
	return 0;
}
