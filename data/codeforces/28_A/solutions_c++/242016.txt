#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

int n,m;
int x[510],y[510],d[510];
int a[510];
int ans[510];
bool used[510];

bool can(int p){
    int i,j;
    
    REP(i,m) used[i] = false;
    REP(i,n) ans[i] = -1;
    
    REP(i,n/2){
        int sum = d[i*2+p] + d[i*2+p+1];
        REP(j,m) if(a[j] == sum && !used[j]){
            ans[(i*2+p+1)%n] = j+1; used[j] = true;
            break;
        }
        if(j == m) return false;
    }
    
    cout << "YES" << endl;
    REP(i,n){
        cout << ans[i];
        if(i == n-1) cout << endl; else cout << ' ';
    }
    
    return true;
}

int main(void){
    int i,j;
    
    cin >> n >> m;
    REP(i,n) cin >> x[i] >> y[i];
    REP(i,m) cin >> a[i];
    x[n] = x[0]; y[n] = y[0];
    REP(i,n) d[i] = abs(x[i+1]-x[i]) + abs(y[i+1]-y[i]);
    d[n] = d[0];
    
    if(!can(0) && !can(1)) cout << "NO" << endl; 
    
    return 0;
}
