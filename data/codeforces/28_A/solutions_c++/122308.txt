#include <iostream>
#include <map>
#include <queue>
#include <vector>

using namespace std;

int abs (int n)
{
	return n < 0 ? -n : n;
}

int dist (const pair<int, int> &a, const pair<int, int> &b)
{
	return abs(a.first - b.first) + abs(a.second - b.second);
}

int main ()
{
	int n, m; cin >> n >> m;
	vector<pair<int, int> > p(n);
	for(int i = 0; i < n; i++)
		cin >> p[i].first >> p[i].second;
	map<int, queue<int> > l;
	for(int i = 1; i <= m; i++)
	{
		int a; cin >> a;
		l[a].push(i);
	}

	bool ok = true;
	vector<int> r(n, -1);
	for(int i = 0; i < n && ok; i += 2)
	{
		int d = dist(p[(n + i - 1) % n], p[i]) + dist(p[i], p[i + 1]);
		if(!l[d].empty())
		{
			r[i] = l[d].front();
			l[d].pop();
		}
		else
			ok = false;
	}

	if(ok)
	{
		cout << "YES" << endl;
		for(int i = 0; i < n; i++)
			cout << r[i] << ' ';
		cout << endl;
	}
	else
	{
		ok = true;
		r.assign(n, -1);
		for(int i = 1; i < n && ok; i += 2)
		{
			int d = dist(p[i - 1], p[i]) + dist(p[i], p[(i + 1) % n]);
			if(!l[d].empty())
			{
				r[i] = l[d].front();
				l[d].pop();
			}
			else
				ok = false;
		}

		if(ok)
		{
			cout << "YES" << endl;
			for(int i = 0; i < n; i++)
				cout << r[i] << ' ';
			cout << endl;
		}
		else
			cout << "NO" << endl;
	}
}

