#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

int n, m;
int ans[2000], s[2000], x[1000], y[1000], w[1000], val[1000];
int cnt[400000];

int main ()
{
	scanf ("%d%d", &n, &m);

	for (int i = 1; i <= n; i++)
		scanf ("%d%d", &x[i], &y[i]);
	x[n + 1] = x[1]; y[n + 1] = y[1];
	x[0] = x[n]; y[0] = y[n];

	for (int j = 1; j <= m; j++)
		scanf ("%d", &val[j]),
		cnt[val[j]]++;

	for (int i = 1; i <= n + 1; i++)
		s[i] = s[i - 1] + abs (x[i] - x[i - 1]) + abs (y[i] - y[i - 1]);

	bool ok = 1;
	memset (w, 0, sizeof (w));
	memset (ans, -1, sizeof (ans));
	for (int i = 1; i <= n && ok; i += 2)
	{
		int found = 0;

		for (int j = 1; j <= m; j++)
			if (!w[j] && val[j] == s[i + 1] - s[i - 1])
			{
				w[j] = 1;
				found = 1;
				ans[i] = j;
				break;
			}
		if (!found) ok = 0;
	}

	if (!ok)
	{
		memset (ans, -1, sizeof (ans));
		memset (w, 0, sizeof (w));

		ok = 1;

		for (int i = 2; i <= n && ok; i += 2)
		{
		 	int found = 0;
		 	for (int j = 1; j <= m; j++)
		 		if (!w[j] && val[j] == s[i + 1] - s[i - 1])
		 		{
		 		 	w[j] = 1;
		 		 	found = 1;
		 		 	ans[i] = j;
		 		 	break;
		 		}
		 	if (!found) ok = 0;
		}
	}

	if (ok)
	{
		puts ("YES");
		for (int i = 1; i <= n; i++)
			printf ("%d ", ans[i]);
		puts ("");
	}
	else
		puts ("NO");

	return 0;
}
