#include <algorithm>
#include <bitset>
#include <cassert>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <iterator>
#include <limits>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;


/* Prewritten code begins */
#define VI          vector<int>
#define PII         pair<int,int>
#define X           first
#define Y           second
#define REP(i,n)    for(int i=0; i<(n); ++i)
#define PB          push_back
/* Prewritten code ends */

map<int,VI> rods, aux;
vector<PII> nails;
int dist(int a, int b) {
	return abs(nails[a].X-nails[b].X)+abs(nails[a].Y-nails[b].Y);
}
int main() {
	int n, m, x;
	cin >> n >> m;
	nails.resize(n);
	REP(i,n) cin >> nails[i].X >> nails[i].Y;
	REP(i,m) cin >> x, aux[x].PB(i+1);
	REP(st,2) {
		rods = aux;
		VI res;
		for(int i = st; i < n; i += 2) {
			int d = dist((i+n-1)%n, i)+dist(i,(i+1)%n);
			if(!rods[d].empty()) res.PB(rods[d].back()), rods[d].pop_back(); else goto C;
		}
		cout << "YES" << endl;
		REP(i,n) {
			if((i&1)==st) cout << res[i/2]; else cout << -1;
			if(i+1==n) cout << endl; else cout << " ";
		}
		return 0;
C:;	}
  	cout << "NO" << endl;
	return 0;
}
