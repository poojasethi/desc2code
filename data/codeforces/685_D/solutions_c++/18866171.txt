#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <string>
#include <iostream>
#include <algorithm>
#include <set>
#include <vector>
#include <queue>
#include <map>
#include <math.h>
#define fi first
#define se second
using namespace std;
typedef long long ll;
typedef pair<int, int> PII;
const int inf = 0x3f3f3f3f;

const int maxn=100000+10;
int n,k;
PII p[maxn];
int x[maxn],y[maxn];
int numx,numy;

map<int,int> mpx,mpy;
pair<PII,int> info[maxn*2];
PII dat[maxn*300];

ll ans[maxn];

bool cmp(pair<PII,int> a, pair<PII,int> b){
	return a.fi.fi<b.fi.fi;
}

void myhash(){
    int top=-inf, tail=-1;
    for (int i = 0; i < numy; ++i)
    {
    	tail+=(y[i]-top>k?k:y[i]-top);
    	mpy[y[i]]=tail;
    	top=y[i];
    }

    for (int i = 0; i < n; ++i)
    {
    	info[i*2]=make_pair(make_pair(p[i].fi-k+1,mpy[p[i].se]),1);
    	info[i*2+1]=make_pair(make_pair(p[i].fi+1,mpy[p[i].se]),-1);
    }
    sort(info,info+2*n,cmp);
}

void solve(){
	memset(ans,0,sizeof ans);
	memset(dat,0,sizeof dat);

	for (int i = 0; i < 2*n; ++i)
	{
		for (int j = info[i].fi.se-k+1; j <= info[i].fi.se; ++j)
		{
			ans[dat[j].fi]+=(info[i].fi.fi-dat[j].se);
			dat[j].fi+=info[i].se;
			dat[j].se=info[i].fi.fi;
		}
	}

	for (int i = 0; i < n; ++i)
	{
		printf("%I64d ",ans[i+1]);	
	}
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("test.in", "r", stdin);
#endif

    scanf("%d%d",&n,&k);
    for (int i = 0; i < n; ++i)
    {
    	scanf("%d%d",&x[i], &y[i]);
    	p[i]=make_pair(x[i],y[i]);
    }
    sort(x,x+n);
    sort(y,y+n);

    numx=unique(x,x+n)-x;
    numy=unique(y,y+n)-y;

    myhash();

    /*for (int i = 0; i < 2*n; ++i)
    {
    	printf("%d %d %d\n",info[i].fi.fi,info[i].fi.se,info[i].se);
    }*/
    solve();
    return 0;
}
