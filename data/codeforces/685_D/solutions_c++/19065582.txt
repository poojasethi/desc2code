#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int> ii;
typedef pair<ii,int> iii;
#define st first
#define nd second
vector <iii> pos;
const int N=100005;
int n,k,cnt[30000189],limit=2e9,now;
vector <int> tmp;
long long ans[N];
ii a[N];
map<int,int> mp;

int main() {
    ios::sync_with_stdio(0);
    cin>>n>>k;
    for(int i=1;i<=n;i++) {
        cin>>a[i].st>>a[i].nd;
        tmp.push_back(a[i].nd);
    }
    sort(tmp.begin(),tmp.end());
    tmp.resize(unique(tmp.begin(),tmp.end())-tmp.begin());
    //for(int i=0;i<tmp.size();i++) cout<<tmp[i]<<endl;
    mp[tmp[0]]=1;
    for(int i=1;i<tmp.size();i++) {
        mp[tmp[i]]=mp[tmp[i-1]]+tmp[i]-tmp[i-1];
        if(mp[tmp[i-1]]+k-1<mp[tmp[i-1]]+tmp[i]-tmp[i-1]) mp[tmp[i]]=mp[tmp[i-1]]+k;
    }
    //mp[4]=11;
    //for(int i=0;i<tmp.size();i++) cout<<tmp[i]<<' '<<mp[tmp[i]]<<endl;
    for(int i=1;i<=n;i++) {
        pos.push_back(iii(ii(a[i].st-k+1,1),mp[a[i].nd]));
        pos.push_back(iii(ii(a[i].st+1,-1),mp[a[i].nd]));
    }
    limit=pos[pos.size()-1].st.st;
    sort(pos.begin(),pos.end());
    //for(int i=0;i<pos.size();i++) cout<<pos[i].st.st<<' '<<pos[i].st.nd<<' '<<pos[i].nd.st<<' '<<pos[i].nd.nd<<endl;
    //for(int i=0;i<upd.size();i++) cout<<upd[i]<<' ';
    for(int i=0;i<pos.size();i++) {
        for(int j=pos[i].nd;j<=pos[i].nd+k-1;j++) {
            ans[cnt[j]]-=limit-pos[i].st.st+1;
            cnt[j]+=pos[i].st.nd;
            ans[cnt[j]]+=limit-pos[i].st.st+1;
        }
    }
    for(int i=1;i<=n;i++) cout<<ans[i]<<' ';

}

/*
50 10
33 -72
48 -28
26 -67
94 37
-95 53
-84 -94
-52 21
-83 60
50 -81
-98 -55
91 -91
-62 -46
-82 46
-39 -93
-52 35
-59 -92
41 -69
-10 -9
-12 -73
69 -2
-52 -18
-50 -98
9 0
-90 57
90 -13
-6 -68
-88 17
38 21
-27 15
-83 -36
75 -15
-45 -46
-64 76
-34 11
-1 -18
-16 -93
-71 -66
-73 1
-9 -99
30 26
2 43
-12 -77
5 -77
-23 96
-37 20
4 63
39 80
23 -62
53 -11
-79 -32




*/
