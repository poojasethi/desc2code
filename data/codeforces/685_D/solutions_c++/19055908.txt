#include <iostream>
#include <map>
#include <vector>
#include <algorithm>

#define st first
#define nd second
using namespace std;

typedef pair<int, int> ii;
typedef pair<int, ii> II;

int a[100005], b[100005], c[100005], cnt[30000505], cur, last[30000505];
long long ans[100005];
map<int, int> pos;
vector<II> qu;

int main() {
	ios::sync_with_stdio(false); cin.tie(0);
	int n, k;
	cin >> n >> k;
	for(int i = 1; i <= n; ++i) cin >> a[i] >> b[i], c[i] = a[i];
	sort(c + 1, c + n + 1);
	c[n + 1] = 2e9;
	for(int i = 1; i <= n; ++i) {
		if(c[i] == c[i + 1]) continue;
		pos[c[i]] = cur + 1;
		cur += min(c[i + 1] - 1, c[i] + k - 1) - c[i] + 1;
	}
	for(int i = 1; i <= n; ++i) {
		qu.push_back(II(b[i], ii(pos[a[i]], 1)));
		qu.push_back(II(b[i] + k, ii(pos[a[i]], -1)));
	}
	sort(qu.begin(), qu.end());
	for(int i = 0; i < qu.size(); ++i) {
		for(int j = qu[i].nd.st; j <= qu[i].nd.st + k - 1; ++j) {
			ans[cnt[j]] += qu[i].st - last[j];
			cnt[j] += qu[i].nd.nd;
			last[j] = qu[i].st;
		}
	}
	for(int i = 1; i <= n; ++i) cout << ans[i] << ' ';
}
