#include<bits/stdc++.h>
using namespace std;
const int N=100010;
struct point
{
	int x,y;
}p[N]={};
struct event
{
	int x,l,r,add;
}q[N+N]={};
bool event_cmp(const event &e1,const event &e2)
{
	return e1.x<e2.x;
}
int n,m,k,vx[N+N]={},vy[N+N]={},tot[N+N]={},last[N+N]={};
long long ans[N]={};
void init()
{
	scanf("%d%d",&n,&k);
	for(int i=1;i<=n;++i)
	{
		scanf("%d%d",&p[i].x,&p[i].y);
		int lx=p[i].x-k+1,rx=p[i].x+1;
		int ly=p[i].y-k+1,ry=p[i].y+1;
		vx[i*2-1]=lx,vx[i*2]=rx , vy[i*2-1]=ly,vy[i*2]=ry;
		q[i*2-1]=(event){lx,ly,ry,1};
		q[i*2]=(event){rx,ly,ry,-1};
	}
	//for(int i=1;i<=n+n;++i)
	//	cout<<q[i].x<<' '<<q[i].l<<' '<<q[i].r<<' '<<q[i].add<<endl;
	sort(vy+1,vy+n+n+1);
	m=unique(vy+1,vy+n+n+1)-vy-1;
	for(int i=1;i<=n+n;++i)
	{
		q[i].l=lower_bound(vy+1,vy+m+1,q[i].l)-vy;
		q[i].r=lower_bound(vy+1,vy+m+1,q[i].r)-vy;
	}
	sort(q+1,q+n+n+1,event_cmp);
	//cout<<endl;
	
	//for(int i=1;i<=n+n;++i)
	//	cout<<q[i].x<<' '<<q[i].l<<' '<<q[i].r<<' '<<q[i].add<<endl;
}
void work()
{
	for(int i=1;i<=n+n;++i)
		for(int j=q[i].l;j<q[i].r;++j)
		{
			ans[tot[j]]+=(vy[j+1]-vy[j])*1ll*q[i].x;
			tot[j]+=q[i].add;
			last[j]=q[i].x;
			ans[tot[j]]-=(vy[j+1]-vy[j])*1ll*last[j];
		}
	//for(int i=1;i<=m;++i)
	//	cout<<tot[i]<<' ';
	//cout<<endl;
	for(int i=1;i<=n;++i)
		printf("%I64d ",ans[i]);
	printf("\n");
}
int main()
{
	init();
	work();
}