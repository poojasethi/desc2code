#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <math.h>
#define pre xco
using namespace std;
const int maxn=100010,maxk=310,inf=0x7fffffff;
int n,k,board,xco[maxn*maxk],xsz,cnt[maxn*maxk],l[maxn<<2],r[maxn<<2];
long long sum[maxn];
struct poi
{
    int x,y,flag;
}p[maxn<<2];
int shiina(const poi &a,const poi &b)
{return a.x<b.x;}
int mashiro(const poi &a,const poi &b)
{return a.y<b.y;}
int main()
{
#ifdef sherco
    freopen("wtf.txt","r",stdin);
    freopen("a.txt","w",stdout);
#endif
    scanf("%d%d",&n,&k);
    for(int i=1;i<=n;i++)
        scanf("%d%d",&p[i].x,&p[i].y);
    sort(p+1,p+n+1,shiina);
    board=-inf;
    for(int i=1;i<=n;i++)
    {
        int cur=max(board+1,p[i].x-k+1);
        for(int j=cur;j<=p[i].x;j++)
            xco[++xsz]=j;
        board=p[i].x;
    }
    for(int i=n+1;i<=n*2;i++)
        p[i]=(poi){p[i-n].x,p[i-n].y-k+1,1};
    for(int i=n*2+1;i<=n*3;i++)
        p[i]=(poi){p[i-n*2].x,p[i-n*2].y+1,-1};
    sort(p+n+1,p+n*3+1,mashiro);
    for(int i=n+1;i<=n*3;i++)
    {
        l[i]=lower_bound(xco+1,xco+xsz+1,p[i].x-k+1)-xco;
        r[i]=upper_bound(xco+1,xco+xsz+1,p[i].x)-xco;
    }
    for(int i=1;i<=xsz;i++)
        pre[i]=-inf;
    for(int i=n+1;i<=n*3;i++)
        for(int j=l[i];j<r[i];j++)
        {
            if(pre[j]!=inf)
                sum[cnt[j]]+=p[i].y-pre[j];
            cnt[j]+=p[i].flag;
            pre[j]=p[i].y;
        }
    for(int i=1;i<=n;i++)
        printf("%I64d ",sum[i]);
    return 0;
}

                                        