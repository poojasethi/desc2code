#include <bits/stdc++.h>
using namespace std;

struct dat{
    int x, l, r, val;
    dat(int x = 0, int l = 0, int r = 0, int val = 0):x(x), l(l), r(r), val(val){}
};

bool operator < (dat a, dat b) {
    return a.x < b.x;
}
#define N 101000
int x[N], y[N], A[N * 2];
vector<dat> v;
int sum[N * 2], last[N * 2];
long long ans[N];
int main() {
    //freopen("1.in", "r", stdin);
    int n, K;
    scanf("%d%d", &n, &K);
    for(int i = 1; i <= n; i ++) scanf("%d%d", &x[i], &y[i]);
    int cnt = 0;
    for(int i = 1; i <= n; i ++) A[cnt ++] = y[i], A[cnt ++] = y[i] + K;
    sort(A, A + cnt);
    cnt = unique(A, A + cnt) - A;
    for(int i = 1; i <= n; i ++) {
        int l = lower_bound(A, A + cnt, y[i]) - A + 1;
        int r = lower_bound(A, A + cnt, y[i] + K) - A + 1;
        v.push_back(dat(x[i], l, r, 1));
        v.push_back(dat(x[i] + K, l, r, -1));
    }
    sort(v.begin(), v.end());
    for(int i = 1; i <= n; i ++) last[i] = -1000100000;
    for(int i = 0; i < v.size(); i ++) {
        dat aa = v[i];
        for(int j = aa.l; j < aa.r; j ++) {
            ans[sum[j]] += 1ll * (aa.x - last[j]) * (A[j] - A[j - 1]);
            sum[j] += aa.val;
            last[j] = aa.x;
        }
    }
    for(int i = 1; i <= n; i ++) printf("%I64d ", ans[i]);
    return 0;
}
