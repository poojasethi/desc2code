/*input
10 5
-7 -3
-2 7
4 4
-1 5
9 4
-2 -3
-5 8
8 -4
-6 -6
8 8
*/
#include <iostream>
#include <cstdio>
#include <vector>
#include <functional>
#include <math.h>
#include <string.h>
#include <utility>
#include <algorithm>
#include <iomanip>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <stdlib.h>
#include <list>
#include <assert.h>
#include <time.h>
#include <fstream>
using namespace std;
#define sp ' '
#define endl '\n'
#define fi first
#define se second
#define mp make_pair
#define ll long long
#define N 100005
#define W(...) cout << __VA_ARGS__ , endl
template<typename t> ostream& operator, (ostream& os, t x) {
	return os << ' ' << x;
}
int cnt[30000005];
int last[30000005];
ll ans[N];
int a[N], b[N], c[N];
int n, k;
map<int, int> pos;
vector<pair<int, pair<int, int> > > qu;

int main() {
	ios_base::sync_with_stdio(false); cin.tie(0);
	cin >> n >> k;
	for (int i = 1; i <= n; i++) {
		cin >> a[i] >> b[i];
		c[i] = a[i];
	}
	sort(c + 1, c + n + 1);
	int cur = 0;
	for (int i = 1; i <= n; i++) {
		if (c[i] != c[i + 1]) {
			pos[c[i]] = cur;
			cur += min(k, c[i + 1] - c[i]);
		}
	}
	for (int i = 1; i <= n; i++) {
		qu.push_back(mp(b[i], mp(pos[a[i]], 1)));
		qu.push_back(mp(b[i] + k, mp(pos[a[i]], -1)));
	}
	sort(qu.begin(), qu.end());
	for (int i = 0; i < qu.size(); i++) {
		int X = qu[i].se.fi;
		int Y = qu[i].fi;
		int Z = qu[i].se.se;
		for (int j = X; j < X + k; j++) {
			ans[cnt[j]] += Y - last[j];
			cnt[j] += Z;
			last[j] = Y;
		}
	}
	for (int i = 1; i <= n; i++) cout << ans[i] << sp;
}