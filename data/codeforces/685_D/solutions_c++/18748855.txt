#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <set>
#include <map>
#include <vector>

#define mp make_pair
#define pb push_back

using namespace std;

typedef long long ll;

const int inf = 0x3f3f3f3f;

const int maxn = 200005;
int n, k;
int a[maxn], b[maxn];
int x[maxn], y[300 * 100000 + 2];
ll ans[maxn];
int l[maxn], r[maxn];

vector<int> v[maxn];
int c[300 * 100000 + 2];

int main( )
{
	scanf("%d %d", &n, &k);
	int N = 0;
	for (int i = 1; i <= n; i ++)
	{
		scanf("%d %d", &a[i], &b[i]);
		x[2 * i - 1] = a[i] - k + 1, x[2 * i] = a[i] + 1;
		for (int j = -k + 1; j <= 0; j ++)
			y[++ N] = b[i] + j;
	}
	int top = N;
	sort(y + 1, y + 1 + top);
	top = (int )(unique(y + 1, y + 1 + N) - y - 1);
	for (int i = 1; i <= n; i ++)
	{
		l[i] = (int )(lower_bound(y + 1, y + 1 + top, b[i] - k + 1) - y);
		r[i] = (int )(lower_bound(y + 1, y + 1 + top, b[i]) - y);
	}
	for (int i = 1; i <= top; i ++) y[i] = 0;
	sort(x + 1, x + 1 + n * 2);
	top = (int )(unique(x + 1, x + 1 + n * 2) - x - 1);
	for (int i = 1; i <= n; i ++)
	{
		int xx = (int )(lower_bound(x + 1, x + 1 + top, a[i] - k + 1) - x);
		int yy = (int )(lower_bound(x + 1, x + 1 + top, a[i] + 1) - x);
		v[xx].pb(i);
		v[yy].pb(-i);
	}

	x[0] = x[1];
	for (int i = 1; i <= top; i ++)
		for (int j = 0; j < (int )v[i].size(); j ++)
		{
			int tmp = v[i][j];
			if (tmp > 0)
			{
				for (int k = l[tmp]; k <= r[tmp]; k ++)
				{
					ans[c[k]] += x[i] - x[y[k]];
					y[k] = i;
					c[k] ++;
				}
			}
			else
			{
				tmp = -tmp;
				for (int k = l[tmp]; k <= r[tmp]; k ++)
				{
					ans[c[k]] += x[i] - x[y[k]];
					y[k] = i;
					c[k] --;
				}
			}
		}
	for (int i = 1; i <= n; i ++)
		printf("%I64d ", ans[i]);
	return 0;
}