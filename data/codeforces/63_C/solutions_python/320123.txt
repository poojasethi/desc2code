import math, time, re

ln = lambda : raw_input()
cnv = lambda s: map(int, s.split())
rInt = lambda s: int(s)
rFloat = lambda s: float(s)
rLong = lambda s: long(s)
rLine = lambda f: f.readline()

b = [True for i in xrange(0, 10)]

llong = []
def per(s):
    if len (s) == 4:
        llong.append(s)
        return
    else:
        for i in xrange(0, 10):
            if b[i]:
                b[i] = False
                per(s + str(i))
                b[i] = True

def check(s1, s2):
    return (len([i for i in xrange(0, 4) if (s1[i] in s2 and s1[i] == s2[i])])), \
(len([i for i in xrange(0, 4) if (s1[i] in s2 and s1[i] != s2[i])]))


start = time.time()
k, t = 0, 0
n = int(raw_input())
l = []
per("")
#print llong
for i in xrange(0,n):
    l.append(ln().split())
for i in xrange(0, len(llong)):
    b = True
    for j in xrange(0, n):
        if (check(llong[i], l[j][0]) != (int(l[j][1]), int(l[j][2]))):
            b = False
            break
    if b:
        k += 1
        t = llong[i]
    if k > 1:
        break
#print l[0][0]
#print l[0][1]
#print l[0][2]
#print llong[0]
if k > 1:
    print 'Need more data'
elif k == 1:
    print t
else:
    print 'Incorrect data'
#per(s)
#print llong
#print check (s1, s2)
#print 'Time exceeded:', time.time() - start