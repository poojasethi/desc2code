#include <algorithm>
#include <cstdio>
#include <cstring>
#include <vector>
#include <string>
#include <cmath>
using namespace std;
typedef struct node
{
	char num[5];
	int a,b;
}node;
bool cmp(node x,node y)
{
	if(x.a!=y.a)return x.a>y.a;
	return x.b>y.b;
}
int n;
node p[11];
bool can(int x)
{
	char t[6];
	sprintf(t,"%04d",x);
	for(int i=0;i<4;i++)
	for(int j=0;j<4;j++)
	if(i!=j&&t[i]==t[j])return false;
	for(int i=0;i<n;i++)
	{
		int aa=0,bb=0;
		for(int j=0;j<4;j++)
		{
			for(int k=0;k<4;k++)
			{
				if(t[j]==p[i].num[k])
				{
					if(j==k)aa++;
					else bb++;
				}
			}
		}
		if(aa!=p[i].a||bb!=p[i].b)return false;
	}
	return true;
}
int ch()
{
	int cnt=0,ret;
	for(int x=123;x<=9876;x++)
	{
		if(can(x))
		{
			cnt++;
			ret=x;
		}
	}
	if(cnt==0)return -2;
	else if(cnt>1)return -1;
	else return ret;
}
int main()
{
	while(~scanf("%d",&n))
	{
		for(int i=0;i<n;i++)
		{
			scanf("%s%d%d",p[i].num,&p[i].a,&p[i].b);
		}
		int ans=ch();
		if(ans==-1)puts("Need more data");
		else if(ans==-2)puts("Incorrect data");
		else printf("%04d\n",ans);
	}
}

	 	 	  	 			 			  		  	 	