#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

const int N=100010;
const int inf=0x3f3f3f3f;

using namespace std;

struct data
{
	int x,b,c;
}a[N];

bool work(int i,int x,int b,int c)
{
	int x1[11]={0},x2[11]={0};
	int cnt=0;
	while(i)
	{
		x1[cnt++]=i%10;
		i/=10;
	}
	cnt=0;
	while(x)
	{
		x2[cnt++]=x%10;
		x/=10;
	}
	int bb=0;
	for(int j=0;j<4;j++)
		bb+=(x1[j]==x2[j]);
	int cc=0;
	int a1[10]={0};
	for(int j=0;j<4;j++)
		a1[x1[j]]++;
	for(int j=0;j<10;j++)
		if(a1[j]>1) return 0; 
	for(int j=0;j<4;j++)
		if(a1[x2[j]]) cc++,a1[x2[j]]--;
	cc-=bb;
	if(bb!=b) return 0;
	if(c!=cc) return 0;
	return 1;
}

int main()
{
	int n;
	scanf("%d",&n);
	for(int i=0;i<n;i++)
		scanf("%d%d%d",&a[i].x,&a[i].b,&a[i].c);
	int cnt=0,ret=-1;
	for(int i=100;i<10000;i++)
	{
		int f=1;
		for(int j=0;j<n;j++)
			if(!work(i,a[j].x,a[j].b,a[j].c)) f=0;
		if(f)
		{
			cnt++;ret=i;
		}
	}
	if(cnt>1) puts("Need more data");
	else if(cnt==1) printf("%04d\n",ret);
	else puts("Incorrect data");
	return 0;
}
