#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<iostream>
using namespace std;
const int N = 155;
const int M = 50000;
long long xu[N];
long long dp[N][M];
int n, m, p;

int main()
{
//	freopen("soldier.in", "r", stdin);
//	freopen("soldier.out", "w", stdout);
	scanf("%d %d %d", &n, &m, &p);
	for(int i = 1; i <= n; i++) {
		scanf("%I64d", xu + i);
	}
	p = min(p, m * (n - m));
	memset(dp, 0x3f, sizeof dp);
	dp[0][0] = 0;
	for(int i = 1; i <= n; i++) {
		for(int j = m; j >= 1; j--) {
			for(int k = p; k >= i - j; k--) {
				dp[j][k]=min<long long>(dp[j][k], dp[j - 1][k - (i - j)] + xu[i]);
			}
		}
	}
	long long ans = 1e16;
	for(int i = 0; i <= p; i++) {
		ans = min<long long>(ans, dp[m][i]);
	}
	printf("%I64d\n",ans);
	return 0;
}