#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;
typedef long long LL;

const int maxn = 155;
const int INF = 0x3f3f3f3f;
int dp[maxn][maxn*maxn];
int n,K,s;

int main()
{
	cin >>n>>K>>s;
	memset(dp,INF,sizeof(dp));
	dp[0][0] = 0;
	for(int i=1;i<=n;i++) 
	{
		int x;
		cin >>x;
		for(int j=i-1;j>=0;j--) 
			for(int k=0;k<=i*j;k++) 
				if(dp[j][k]!=INF) 
					dp[j+1][k+i-j-1]=min(dp[j+1][k+i-j-1],dp[j][k]+x);
	}
	int ans=INF;
	for(int i=0;i<=min(s,n * n);i++) ans=min(ans,dp[K][i]);
	cout <<ans;
	return 0;
}
	  			 		 			    			 		 		   	