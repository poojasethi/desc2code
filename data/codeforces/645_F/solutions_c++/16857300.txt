#include<bits/stdc++.h>

using namespace std;

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define sol (root+root)
#define sag (root+root+1)
#define orta ((bas+son)/2)
#define ll long long
#define pii pair<int,int>
#define type(x) __typeof((x).begin())
#define foreach(it, x) for(type(x) it = (x).begin(); it != (x).end(); it++)
#define div asd

const int N=1e6+5;
const int N2=2e5+5;
const int mod=1e9+7;
const int inf=1e9+7;

int n,i,k,q,j,ans,x;
int comb[N2],fact[N2],A[N],phi[N];

vector<int> div[N];

int FE(int x,int k){
	if(k==1)
		return x;
	int temp=FE(x,k/2);
	temp=(ll)temp*temp%mod;
	if(k&1)
		temp=(ll)temp*x%mod;
	return temp;
}

main(){

	for(i=1 ; i<N ; i++){
		phi[i]+=i;
		for(j=i ; j<N ; j+=i){
			if(i!=j)
				phi[j]-=phi[i];
			div[j].pb(i);
		}
	}

	scanf("%d %d %d",&n,&k,&q);

	fact[0]=1;

	fact[1]=1;

	for(i=2 ; i<=n+q ; i++)
		fact[i]=(ll)fact[i-1]*i%mod;

	for(i=k ; i<=n+q ; i++)
		comb[i]=(ll)fact[i]*FE(fact[i-k],mod-2)%mod*FE(fact[k],mod-2)%mod;

	for(i=1 ; i<=n+q ; i++){
		scanf("%d",&x);
		for(j=0 ; j<div[x].size() ; j++){
			ans=(ans-(ll)comb[A[div[x][j]]]*phi[div[x][j]]%mod+mod)%mod;
			ans=(ans+(ll)comb[++A[div[x][j]]]*phi[div[x][j]]%mod)%mod;
		}
		if(i>n)
			printf("%d\n",ans);
	}
}
