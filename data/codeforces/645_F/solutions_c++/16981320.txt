#include <set>
#include <map>
#include <cmath>
#include <cstdio>
#include <vector>
#include <cstring>
#include <iostream>
#include <algorithm>

using namespace std;

#define pb push_back
#define mp make_pair
#define x first
#define y second

typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector<pii> vpii;

template <class T>
void read(T &x)
{
	char ch;
	for (ch=getchar();(ch<'0'||ch>'9')&&ch!='-';) ch=getchar();
	x=0;int t=1;if (ch=='-') {ch=getchar();t=-1;}
	for (;ch>='0'&&ch<='9';ch=getchar()) x=x*10+ch-'0';
	x*=t;
}

const int mod=1000000007;
const int N=1000000;

struct edge
{
	int to,next;
}e[30000010];

int head[N+10],w[N+10],s[N+10],fac[200010],inv[200010];

int power(int x,int y)
{
	if (!y) return 1;
	int tmp=power(x,y>>1);
	tmp=ll(tmp)*tmp%mod;
	if (y&1) tmp=ll(tmp)*x%mod;
	return tmp;
}

int cc(int n,int m)
{
	if (n<m) return 0;
	return ll(fac[n])*inv[m]%mod*inv[n-m]%mod;
}

int add(int x,int k)
{
	int p=head[x],tmp=0;
	while (p)
	{
		int y=e[p].to;
		tmp=(ll(cc(s[y]+1,k)-cc(s[y],k))*w[y]+tmp)%mod;
		s[y]++;p=e[p].next;
	}
	return (tmp+mod)%mod;
}

void push(int k,int x,int y)
{
	e[k].to=y;e[k].next=head[x];head[x]=k;
}

int main()
{
	#ifndef ONLINE_JUDGE
		freopen("input.txt","r",stdin);
		freopen("output.txt","w",stdout);
	#endif
	int n,k,q;read(n);read(k);read(q);
	for (int i=1;i<=N;i++) w[i]=i;
	int cnt=0;
	for (int i=1;i<=N;i++)
		for (int j=i;j<=N;j+=i)
		{
			push(++cnt,j,i);
			if (i!=j) w[j]-=w[i];
		}
	fac[0]=1;for (int i=1;i<=n+q;i++) fac[i]=ll(fac[i-1])*i%mod;
	for (int i=0;i<=n+q;i++) inv[i]=power(fac[i],mod-2);
	int ans=0;
	memset(s,0,sizeof(s));
	for (int i=1;i<=n;i++)
	{
		int x;read(x);
		ans=(ans+add(x,k))%mod;
	}
	for (int i=1;i<=q;i++)
	{
		int x;read(x);
		ans=(ans+add(x,k))%mod;
		printf("%d\n",ans);
	}
	return 0;
}
