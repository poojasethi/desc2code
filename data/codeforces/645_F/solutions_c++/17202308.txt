#ifndef ONLINE_JUDGE
#include<windows.h>
#endif







#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <map>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <vector>
#include <queue>
#include <stack>
#include <functional>
#include <set>
#include <cmath>
using namespace std;
#define IOS std::ios::sync_with_stdio (false);std::cin.tie(0)
#define pb push_back
#define PB pop_back
#define bk back()
#define fs first
#define se second
#define sq(x) (x)*(x)
#define eps (1e-8)
#define INF (1000000300)
#define clr(x) memset((x),0,sizeof (x))
#define cp(a,b) memcpy((a),(b),sizeof (b))

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> P;

const int maxn=1e6+30000;
const ll mod=1e9+7;
ll phi[maxn];
ll notp[maxn],pri[maxn];
ll cnt[maxn];
ll fac[maxn];
void getPhi(){
	phi[1]=1;
	for(int i=2;i<maxn;i++){
		if(!notp[i]) pri[++pri[0]]=i,phi[i]=i-1;
		for(int j=1;j<=pri[0];j++){
			int x=pri[j];
			if(x*i>=maxn) break;
			notp[x*i]=1;
			if(i%x==0){
				phi[i*x]=phi[i]*x;
				break;
			}else phi[i*x]=phi[i]*(x-1);
		}
	}
}
ll qpow(ll a,ll p){
	ll ans=1;
	while(p>0){
		if(p&1) ans=(ans*a)%mod;
		a=a*a%mod;p>>=1;
	}
	return ans;
}
ll inv[maxn];
void init(){
	getPhi();
	fac[0]=inv[0]=1;
	for(int i=1;i<maxn;i++) fac[i]=fac[i-1]*i%mod,inv[i]=qpow(fac[i],mod-2);
}
int n,k,q;
ll C(int x){
	if(x<k) return 0;
	return fac[x]*inv[x-k]%mod*inv[k]%mod;
}
int main(){
	#ifndef ONLINE_JUDGE
	freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	#endif
	

	init();
	cin>>n>>k>>q;
	for(int i=0;i<n;i++){
		int a;
		scanf("%d",&a);
		for(int d=1;d*d<=a;d++){
			if(a%d==0){
				cnt[d]++;
				if(d*d!=a) cnt[a/d]++;
			}
		}
	}
	ll ans=0;
	for(int i=0;i<maxn;i++)
		ans=(ans+C(cnt[i])*phi[i])%mod;
	while(q--){
		int a;
		scanf("%d",&a);
		for(int d=1;d*d<=a;d++){
			if(a%d==0){
				ans=(ans-C(cnt[d])*phi[d])%mod;
				cnt[d]++;
				ans=(ans+C(cnt[d])*phi[d])%mod;
				if(ans<0) ans+=mod;
				if(d*d!=a){
					ans=(ans-C(cnt[a/d])*phi[a/d])%mod;
					cnt[a/d]++;
					ans=(ans+C(cnt[a/d])*phi[a/d])%mod;
					if(ans<0) ans+=mod;
				}
			}
		}
		printf("%lld\n",ans);
	}


	#ifndef ONLINE_JUDGE
	cerr<<"\n\n--------------END---------------"<<endl;
	Sleep(300000000);
	#endif
	return 0;	
}
	 	 	 	 	 				  	 		   			   	