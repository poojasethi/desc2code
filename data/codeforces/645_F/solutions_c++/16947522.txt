//#pragma comment(linker, "/STACK:1024000000,1024000000")
#include<algorithm>
#include<iostream>
#include<cstring>
#include<cstdio>
#include<vector>
#include<cmath>
#include<queue>
#include<stack>
#include<set>
#include<map>
#define xx first
#define yy second
#define LL long long
#define MP make_pair
#define INF 0x3f3f3f3f
#define lson l, m, rt << 1
#define rson m + 1, r, rt << 1|1
#define CLR(a, b) memset(a, b, sizeof(a))
#define PII pair<int,int>

using namespace std;

const int maxn=2000000;
const LL MOD=1000000007;

LL C[maxn+10],F[maxn+10],inv[maxn+10],cnt[maxn+10],phi[maxn+10];
int n,k,q;

LL mp(LL a,int n){
    LL ret=1;a%=MOD;
    while(n){
        if(n&1) ret=ret*a%MOD;
        n>>=1;a=a*a%MOD;
    }
    return ret;
}

LL Inv(LL n){
    return mp(n,MOD-2);
}

LL query(int x,int d){
    return C[cnt[d]]*phi[d]%MOD;
}

int main(){
    F[0]=inv[0]=1;
    for(int i=1;i<=maxn;i++){
        F[i]=F[i-1]*i%MOD;
        inv[i]=Inv(F[i]);
    }
    memset(phi,0,sizeof(phi));
    for(int i=1;i<=maxn;i++){
        phi[i]=(phi[i]+i)%MOD;
        for(int j=i+i;j<=maxn;j+=i) phi[j]=(phi[j]-phi[i]+MOD)%MOD;
    }
    while(scanf("%d%d%d",&n,&k,&q)!=EOF){
        for(int i=0;i<=n+q;i++){
            if(i<k-1) C[i]=0;
            else C[i]=F[i]*inv[k-1]%MOD*inv[i-k+1]%MOD;
        }
        memset(cnt,0,sizeof(cnt));
        LL ans=0;
        for(int j=1;j<=n+q;j++){
            int x;scanf("%d",&x);
            for(int i=1;i*i<=x;i++){
                if(x%i==0){
                    ans=(ans+query(x,i))%MOD;
                    if(i*i!=x) ans=(ans+query(x,x/i))%MOD;
                }
            }
            for(int i=1;i*i<=x;i++){
                if(x%i==0){
                    cnt[i]++;
                    if(i*i!=x) cnt[x/i]++;
                }
            }
            if(j>n) printf("%I64d\n",ans);
        }
    }
}
