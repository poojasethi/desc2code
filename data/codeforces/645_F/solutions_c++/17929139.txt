#include <bits/stdc++.h>
#define eps 1e-6
#define LL long long
#define pii pair<int, int>
#define pb push_back
#define mp make_pair
//#pragma comment(linker, "/STACK:1024000000,1024000000")
using namespace std;

const int MAXN = 1001000;
const int MOD = 1e9+7;
int n, k, q;
int phi[MAXN], cnt[MAXN];
LL fac[MAXN], inv[MAXN];
vector<int> factor[MAXN];

LL pow_mod(int a, int b) {
	if (!b) return 1;
	LL ans = pow_mod(a, b/2);
	ans = ans * ans % MOD;
	if (b&1) ans = ans * a % MOD;
	return ans;
}
void init_phi(int n) {
	memset(phi, 0, sizeof(phi));
	phi[1] = 1;
	for (int i = 2; i <= n; i++) if (!phi[i]) {
		for (int j = i; j <= n; j+=i) {
			if (!phi[j]) phi[j] = j;
			phi[j] = phi[j]/i*(i-1);
		}
	}
}
void init(int n) {
	fac[0] = inv[0] = 1;
	for (int i = 1; i <= n; i++) {
		fac[i] = fac[i-1] * i % MOD;
		inv[i] = pow_mod(fac[i], MOD-2);
	}
}
inline LL get_c(int n, int k) {
	return fac[n] * inv[k] % MOD * inv[n-k] % MOD;
}
void init_factor(int n) {
	for (int i = 1; i <= n; i++) {
		for (int j = i; j <= n; j+=i) {
			factor[j].pb(i);
		}
	}
}

int main()
{
	//freopen("input.txt", "r", stdin);
	init_phi(1000010);
	init(200010);
	init_factor(1000010);
	scanf("%d%d%d", &n, &k, &q);
	LL ans = 0;
	for (int i = 1; i <= n; i++) {
		int tmp;
		scanf("%d", &tmp);
		for (int j = 0; j < factor[tmp].size(); j++) {
			int u = factor[tmp][j];
			if (cnt[u] >= k) ans -= get_c(cnt[u], k) * phi[u];
			cnt[u]++;
			if (cnt[u] >= k) ans += get_c(cnt[u], k) * phi[u];
			ans %= MOD;
		}
	}
	for (int i = 1; i <= q; i++) {
		int tmp;
		scanf("%d", &tmp);
		for (int j = 0; j < factor[tmp].size(); j++) {
			int u = factor[tmp][j];
			if (cnt[u] >= k) ans -= get_c(cnt[u], k) * phi[u];
			cnt[u]++;
			if (cnt[u] >= k) ans += get_c(cnt[u], k) * phi[u];
			ans %= MOD;
		}
		if (ans < 0) ans += MOD;
		printf("%I64d\n", ans);
	}
	return 0;
}
















	 		  	 				  			   		 	 	 			