#!/usr/bin/python
from pprint import pprint
path=list(str(raw_input()))
pathStr=path
upMax=path.count('U')
downMax=path.count('D')
leftMax=path.count('L')
rightMax=path.count('R')

x=[['x']*200 for i in xrange(200)]
i,j=100,100

x[i][j]='.';
for c in path:
    if c=='L':
        j-=1
        x[i][j]='.'
    elif c=='R':
        j+=1
        x[i][j]='.'
    elif c=='U':
        i-=1
        x[i][j]='.'
    elif c=='D':
        i+=1
        x[i][j]='.'

#pprint(x)

def bfs(i,j):
    open_list=[[i,j]]
    path={}
    visited=[]
    path[(i,j)]=[]
    while len(open_list)>0:
        current = open_list[0]
        del open_list[0]
        if current not in visited:
            visited.append(current)
        
        for i in neighbors(current[0],current[1]):
            if i not in visited:
                path[(i[0],i[1])]=path[tuple(current)]+[i]
                open_list.append(i)
    return path

def neighbors(i,j):
    n=[]
    if x[i][j-1]=='.':
        n.append([i,j-1])
    if x[i][j+1]=='.':
        n.append([i,j+1])
    if x[i-1][j]=='.':
        n.append([i-1,j])
    if x[i+1][j]=='.':
        n.append([i+1,j])
    #print n
    return n

centery=100
centerx=100
path= bfs(centerx,centery)
y=centery-leftMax+rightMax
x=centerx+downMax-upMax
#print path[(x,y)]
if len(path[(x,y)])<len(pathStr):
    print "BUG"
else:
    print "OK"
