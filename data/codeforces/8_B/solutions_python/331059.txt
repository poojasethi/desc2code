
class coord:
    def __init__(self,x,y):
        self.x = x
        self.y = y

def searching(i,seq):
    for item in seq:
        if i.x == item.x and i.y == item.y:
            return True
    return False

line = raw_input()
l = [100]
l[0] = coord(0,0)
flag = True

for c in line:
    tmp = coord(l[len(l)-1].x , l[len(l)-1].y)
    if c == 'R':
        if searching(coord(l[len(l)-1].x+1 , l[len(l)-1].y), l):
            flag = False
            break
        else:
            l.append(coord(tmp.x-1 , tmp.y))
            l.append(coord(tmp.x , tmp.y+1))
            l.append(coord(tmp.x , tmp.y-1))
            l.append(coord(tmp.x+1 , tmp.y))
    elif c == 'L':
        if searching(coord(l[len(l)-1].x-1 , l[len(l)-1].y), l):
            flag = False
            break
        else:
            l.append(coord(tmp.x+1 , tmp.y))
            l.append(coord(tmp.x , tmp.y+1))
            l.append(coord(tmp.x , tmp.y-1))
            l.append(coord(tmp.x-1 , tmp.y))
    elif c == 'U':
        if searching(coord(l[len(l)-1].x , l[len(l)-1].y+1), l):
            flag = False
            break
        else:
            l.append(coord(tmp.x+1 , tmp.y))
            l.append(coord(tmp.x , tmp.y-1))
            l.append(coord(tmp.x-1 , tmp.y))
            l.append(coord(tmp.x , tmp.y+1))
    else:
        if searching(coord(l[len(l)-1].x , l[len(l)-1].y-1), l):
            flag = False
            break
        else:
            l.append(coord(tmp.x+1 , tmp.y))
            l.append(coord(tmp.x-1 , tmp.y))
            l.append(coord(tmp.x , tmp.y+1))
            l.append(coord(tmp.x , tmp.y-1))
            
if flag:
    print "OK"
else:
    print "BUG"