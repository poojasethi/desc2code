#include<cstdio>
#include<cstring>
#include<algorithm>
#include<map>
#define mod 1000000007
int tot[13];
using namespace std;

struct MAT
{
	int nn,mm;
	int mat[110][110];
	MAT()
	{
		memset(mat,0,sizeof(mat));
	}
	void init(int nnn)
	{
		mm = nn = nnn;
		for(int i = 0; i < nnn ; i ++ )
			mat[i][i] = 1; 
	}
	MAT operator*(MAT BB)
	{
		MAT CC;
		MAT AA = *this;
		CC.nn = CC.mm = AA.nn;
		for(int i = 0; i < AA.nn ; i ++ )
			for(int j = 0 ; j < BB.mm ; j ++ )
				for(int k = 0;  k < AA.nn ; k ++ )
					CC.mat[i][j] = (1LL*CC.mat[i][j] + 1LL*AA.mat[i][k] * BB.mat[k][j]%mod)%mod;
		return CC;
	}

}Ans,A;	


MAT ksm(MAT AA,int b)
{
	MAT Ret;Ret.init(AA.nn);
	MAT X = AA;
	while(b)
	{
		if(b&1) Ret = Ret *X;
		X = X*X;
		b >>= 1;
	}
	return Ret;
}

int main()
{
	int n,b,k,m,t,a;
	scanf("%d%d%d%d",&n,&b,&k,&m);
	for(int i = 1; i <= n ; i ++ )
	{
		scanf("%d",&a);
		tot[a] ++;
	}
	A.nn = A.mm = m;
	for(int j = 0 ; j < m ; j ++ )
		for(int i = 0 ; i <= 9 ; i ++ ) 
			A.mat[j][(10*j+i)%m] += tot[i];
	Ans=ksm(A,b);
	printf("%d",Ans.mat[0][k]);
}
