#include <cstdio>

const int X = 100, M = (int)1e9 + 7;

int n, m, k, x, l;
int f[X], g[X], c[X], ai;

int bin_pow(int a, int n) {
    int b = 1, c = a;
    while (n > 0) {
        if (n & 1)
            b = (b * 1LL * c) % x;
        c = (c * 1LL * c) % x;
        n >>= 1;
    }
    return b;
}

void combine(int *a, int *b, int l) {
    int p = bin_pow(10, l);
    for (int i = 0; i < x; i++)
        c[i] = 0;
    for (int i = 0; i < x; i++) {
        for (int j = 0; j < x; j++) {
            int k = (i * 1LL * p + j) % x;
            c[k] = (c[k] + a[i] * 1LL * b[j]) % M;
        }
    }
    for (int i = 0; i < x; i++)
        a[i] = c[i];
}

int main() {
    scanf("%d%d%d%d", &n, &m, &k, &x);

    for (int i = 0; i < n; i++)
        scanf("%d", &ai), f[ai % x]++;

    g[0] = 1, l = 1;

    while (m > 0) {
        if (m & 1)
            combine(g, f, l);
        combine(f, f, l);
        l <<= 1, m >>= 1;
    }

    printf("%d", g[k]);

    return 0;
}
