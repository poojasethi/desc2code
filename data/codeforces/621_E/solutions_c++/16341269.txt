#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
const long long P=1000000007;
int n,b,k,x;
struct Mat
{
	long long num[100+10][100+10];
	Mat operator *(const Mat &b)
	{
		Mat c;
		memset(c.num,0,sizeof(c.num));
		for(int i=0;i<x;i++)
		{
			for(int j=0;j<x;j++)
			{
				for(int k=0;k<x;k++)c.num[i][j]=(c.num[i][j]+num[i][k]*b.num[k][j]%P)%P;
			}
		}
		return c;
	}
}d,ele,ret;
int ways[15];
void qpow(long long c)
{
	ret=ele;
	while(c)
	{
		if(c&1)ret=ret*d;
		d=d*d;
		c>>=1;
	}
}
int main()
{
	scanf("%d%d%d%d",&n,&b,&k,&x);
	for(int i=1;i<=n;i++)
	{
		int hehe;
		scanf("%d",&hehe);
		ways[hehe]++;
	}
	memset(ele.num,0,sizeof(ele.num));
	for(int i=0;i<x;i++)ele.num[i][i]=1;
	memset(d.num,0,sizeof(d.num));
	for(int i=0;i<x;i++)
	{
		for(int j=0;j<=9;j++)
		{
			int next=(i*10+j)%x;
			d.num[next][i]+=ways[j];
		}
	}
	qpow(b);
	cout<<ret.num[k][0]<<endl;
	return 0;
}
