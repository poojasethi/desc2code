#include<iostream>
using namespace std;

const int maxn = 1000 * 1000;

int n, m;
string s[maxn], S;

struct Node{
	Node *ch[3];
	int e;
	Node(){
		ch[0] = ch[1] = ch[2] = NULL;
		e = 0;
	}	
};

Node *root;

void add(string &s){
	Node *x = root;
	for (int i=0 ; i<s.size() ; i++){
		if (x->ch[s[i]-'a'] == NULL)
			x->ch[s[i]-'a'] = new Node();
		x = x->ch[s[i]-'a'];
	}
	x->e = 1;
}

int find(Node *x, int I, int c){
	if (x==NULL || c>1) return 0;
	if (I==S.size())
		return x->e && c==1;
	for (int i=0 ; i<3 ; i++)
		if (find(x->ch[i], I+1, c + (S[I]-'a' != i)))
			return 1;
	return 0;
}

int main(){
	ios::sync_with_stdio(0);
	root = new Node();
	cin >> n >> m;
	for (int i=0 ; i<n ; i++){
		cin >> s[i];
		add(s[i]);
	}	
	for (int i=0 ; i<m ; i++){
		cin >> S;
		if (find(root, 0, 0))
			cout << "YES" << endl;
		else
			cout << "NO" << endl;
	}	
}
