#include <bits/stdc++.h>

using namespace std;

struct Trie {
	
	Trie *t[3];
	char c;
	bool end;

	Trie() {
		end = false;
		t[0] = t[1] = t[2] = NULL;
	}

	void insert(char *s, int i) {
		if (s[i] == 0) { end = true; return; }
		if (t[s[i] - 'a'] == NULL) {
			t[s[i] - 'a'] = new Trie();
		}
		t[s[i] - 'a']->insert(s, i + 1);
	}

	bool query(char *s, int i, bool flag) {
		if (s[i] == 0) return (end && flag);
		bool r = false;
		if (flag == false) {
			for (char cc = 'a'; cc <= 'c'; cc++) {
				r |= (s[i] == cc || t[cc - 'a'] == NULL) ? false : t[cc - 'a']->query(s, i + 1, true);
			}
		}
		return r || (t[s[i] - 'a'] ? t[s[i] - 'a']->query(s, i + 1, flag) : false);
		
	}

};

int main(){
	int n,k;
	char s[600006];
	cin>>n>>k;
	Trie *trie = new Trie;
	while(n--){
		cin >> s;
		trie->insert(s, 0);
	}
	while (k--) {
		cin >> s;
		puts(trie->query(s, 0, false) ? "YES" : "NO");
	}
	return 0;
}
