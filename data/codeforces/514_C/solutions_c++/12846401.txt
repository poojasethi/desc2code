#include<bits/stdc++.h>
using namespace std;

struct node
{
	node *nxt[3];
	bool leaf;
	node()
	{
		nxt[0]=nxt[1]=nxt[2]=NULL;
		leaf=false;
	}
};
node *root=new node();
string s;

bool insert()
{
	node *cur=root;
	for(int i=0;i<s.length();i++)
	{
		if(cur->nxt[s[i]-'a']==NULL)
		{
			cur->nxt[s[i]-'a']=new node();
		}
		cur=cur->nxt[s[i]-'a'];
	}
	cur->leaf=true;
}

bool check(int dif,int l,node *cur)
{
	if(dif>1)
	{
		return false;
	}
	if(l==s.size())
	{
		return dif==1;
	}
	for(int i=0;i<3;i++)
	{
		if(cur->nxt[i]!=NULL)
		{
			if(check(dif+(s[l]!='a'+i),l+1,cur->nxt[i]))
			{
				return true;
			}
		}
	}
	return false;
}

int main()
{
	ios::sync_with_stdio(false);
	int n,m;
	cin>>n>>m;
	for(int i=0;i<n;i++)
	{
		cin>>s;
		insert();
	}
	// cout<<"here"<//<endl;
	for(int i=0;i<m;i++)
	{
		cin>>s;
		if(check(0,0,root))
		{
			cout<<"YES\n";
		}
		else
		{
			cout<<"NO\n";
		}
	}
	return 0;
}