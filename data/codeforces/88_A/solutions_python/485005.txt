# -*- coding: UTF-8 -*-

from itertools import *
# from collections import defaultdict

# def gcd(a,b):
#     while b > 0: a,b = b, a%b
#     return a
alphabet = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "B", "H"]
# def baseN(num,b,numerals="0123456789abcdefghijklmnopqrstuvwxyz"):
#     return ((num == 0) and  "0" ) or ( baseN(num // b, b).lstrip("0") + numerals[num % b])

# T = input()
# St = raw_input()
data1 = raw_input().split()
# data2 = [ map(int, raw_input().split()) for i in xrange(T) ]
for i in permutations(data1):
    XY = alphabet.index(i[1])-alphabet.index(i[0])
    YZ = alphabet.index(i[2])-alphabet.index(i[1])
    if XY < 0:
        XY = 12+XY
    if YZ < 0:
        YZ = 12+YZ
    if XY == 4 and YZ == 3:
        print "major"
        exit()
    if XY == 3 and YZ == 4:
        print "minor"
        exit()
print "strange"
    
