#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>

using namespace std;

const int MAXN = 100;
const int INF = ~0U >> 1;;

bool ra[MAXN], ca[MAXN];
int N, M, rs[MAXN], cs[MAXN], a[MAXN][MAXN];

int main() {
	scanf("%d%d", &N, &M);
	for (int i = 0; i < N; ++i) {
		for (int j = 0; j < M; ++j) {
			scanf("%d", &a[i][j]);
			rs[i] += a[i][j];
			cs[j] += a[i][j];
		}
	}
	while (true) {
		int r_id = min_element(rs, rs + N) - rs;
		if (rs[r_id] < 0) {
			rs[r_id] = -rs[r_id];
			for (int j = 0; j < M; ++j) {
				cs[j] -= 2 * a[r_id][j];
				a[r_id][j] = -a[r_id][j];
			}
			ra[r_id] ^= 1;
			continue;
		}

		int c_id = min_element(cs, cs + M) - cs;
		if (cs[c_id] < 0) {
			cs[c_id] = -cs[c_id];
			for (int j = 0; j < N; ++j) {
				rs[j] -= 2 * a[j][c_id];
				a[j][c_id] = -a[j][c_id];
			}
			ca[c_id] ^= 1;
			continue;
		}

		break;
	}
	printf("%d", count(ra, ra + MAXN, true));
	for (int i = 0; i < MAXN; ++i) {
		if (ra[i]) {
			printf(" %d", i + 1);
		}
	}
	printf("\n");
	printf("%d", count(ca, ca + MAXN, true));
	for (int i = 0; i < MAXN; ++i) {
		if (ca[i]) {
			printf(" %d", i + 1);
		}
	}
	printf("\n");
	return 0;
}
