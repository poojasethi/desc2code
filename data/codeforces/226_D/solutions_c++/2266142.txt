#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int MAXN = 110;

int g[MAXN][MAXN];
int row[MAXN], col[MAXN];
int n, m;

void init()
{
  for (int i = 0; i < n; ++i)
    for (int j = 0; j < m; ++j) scanf("%d", g[i] + j);
}

void solve()
{
  for (int i = 0; i < n; ++i) row[i] = 1;
  for (int j = 0; j < m; ++j) col[j] = 1;
  
  int flag, res;
  for (;;) {
    flag = 0;
    for (int i = 0; i < n; ++i) {
      res = 0;
      for (int j = 0; j < m; ++j) res += g[i][j]*row[i]*col[j];
      if (res < 0) row[i] *= -1, flag = 1;
    }
    for (int j = 0; j < m; ++j) {
      res = 0;
      for (int i = 0; i < n; ++i) res += g[i][j]*row[i]*col[j];
      if (res < 0) col[j] *= -1, flag = 1;
    }
    if (!flag) break;
  }

  res = 0;
  for (int i = 0; i < n; ++i) res += row[i] == -1;
  printf("%d", res);
  for (int i = 0; i < n; ++i)
    if (row[i] == -1) printf(" %d", i+1);
  puts("");

  res = 0;
  for (int i = 0; i < m; ++i) res += col[i] == -1;
  printf("%d", res);
  for (int i = 0; i < m; ++i)
    if (col[i] == -1) printf(" %d", i+1);
  puts("");
}
;
int main()
{
  while (scanf("%d%d", &n, &m) != EOF) {
    init();
    solve();
  }
  return 0;
}
