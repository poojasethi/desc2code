def gcd(a,b):
    return a if b == 0 else gcd(b, a % b)
def lcm(a,b):
    return a*b/gcd(a,b)

def gcd_arr(a):
    g = 0
    for v in a:
        g = gcd(v, g)
    return g
def lcm_arr(a):
    l = 1
    for v in a:
        l = lcm(l, v)
    return l

def inp_arr():
    return map(lambda x: int(x), raw_input().split(' '))

def main():
    n = input()
    m = inp_arr()
    r = inp_arr()
    lc = lcm_arr(m)
    work = [0] * lc
    for i in xrange(0, n):
        for j in xrange(r[i], lc, m[i]):
            work[j] = 1
    ans = 0
    for w in work:
        ans += w
    ans = (ans * 1.) / lc
    print ans
main()
