import sys

def parse():
  return sys.stdin.readline()

def find_not_simple_bounds(s):
  before_c = None
  bounds = []
  left_bound = 0
  right_bound = 0
  while True:
    if right_bound >= len(s):
      break
    if s[left_bound] != s[right_bound]:
      if left_bound + 1 < right_bound:
        bounds.append((left_bound, right_bound))
      left_bound = right_bound
    right_bound += 1
  if left_bound + 1 < right_bound:
    bounds.append((left_bound, right_bound))
  return bounds

def change(s, i):
  if i == 0:
    if s[i+1] == s[i]:
      # Check left end
      s[i] = 'b' if s[i+1] == 'a' else 'a'
  elif i == len(s) - 1:
    if s[i-1] == s[i]:
      # Check right end
      s[i] = 'b' if s[i-1] == 'a' else 'a'
  else:
    if s[i+1] == s[i] or s[i-1] == s[i]:
      if s[i-1] != 'a' and s[i+1] != 'a':
        s[i] = 'a'
      elif s[i-1] != 'b' and s[i+1] != 'b':
        s[i] = 'b'
      else:
        s[i] = 'c'


def make_it_simple(s, bounds):
  for (left_bound, right_bound) in bounds:
    for i in range(left_bound + 1, right_bound):
      if (i - left_bound) % 2 == 1:
        change(s, i)
      if i == right_bound - 2 and (right_bound - left_bound) % 2 == 0:
        change(s, i)
  return s

def main():
  parsed_string = parse()
  parsed_string = list(parsed_string.rstrip())
  bounds = find_not_simple_bounds(parsed_string)
  print(''.join(make_it_simple(parsed_string, bounds)))

if __name__ == '__main__':
  main()
