#include <bits/stdc++.h>
using namespace std;
#define FREP(b) for(int i=0;i<b;i++)
#define REP(a,b,c) for(int a=b;a<c;a++)
#define asd(x) cout << "Here for " << #x << " :" <<x << endl;
#define asdf(x, y)  cout << "Here FOR " << #x << " :" << x << " " << #y  << " :" << y << endl;
typedef pair<int,int> ii;
typedef long long LL;
const int INF = INT_MAX;
const int MAX = 200008;
ii dp[MAX];
int vis[MAX], A[MAX], n;

ii rec(int idx){
    if(idx == 0) return ii(0,0);
    if(idx == 1) return ii(INF, -1);
    if(vis[idx])  return dp[idx];
    vis[idx] = 1;

    int num = 0;
    dp[idx] = ii(INF, -1);
    for(int j = idx, len = 1; len <=5 && j>=1; len++, j--){
        if(A[j] != 0)
            if(num != 0 && A[j] != num ) break;
            else num = A[j];

        if(len == 1) continue;

        dp[j-1] = rec(j-1);
        if(dp[j-1].first == INF) continue;

        int l = INF, r = -1;
        if(num == 0){ // start a new block here ... 
            l = dp[j-1].first+1, r = dp[j-1].second+1;
        }
        else if(dp[j-1].first <= num -1  && num - 1 <= dp[j-1].second){
            l = r = num;
        }
        dp[idx].first = min(dp[idx].first, l);
        dp[idx].second = max(dp[idx].second, r);
    }
    return dp[idx];
}

void print(int idx, int num){
    if(num == 0) return;
    for(int j = idx, len = 1; j >= 1 && len <= 5; len++, j--){
        if(len == 1) continue;
        if(dp[j-1].first <= num-1 && num-1 <= dp[j-1].second){
            print(j-1, num-1);
            while(len--){
                printf("%d ", num);
            }
            return;
        }
    }
}
int main()
{   

    cin >> n;
    REP(j,1,n+1) cin >> A[j];
    ii ret = rec(n);
    cout << ret.second << endl;
    if(ret.second != -1){
        print(n, ret.second);
        cout << endl;
    }
    return 0;
}

