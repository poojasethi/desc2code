#include<algorithm>
#include<iostream>
#include<fstream>
#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<cmath>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<set>
#include<map>
#include<ctime>

using namespace std;
#define FOR(i,a,b)    for(int i=a;i<b;i++)
#define FORD(i,a,b)    for(int i=a;i>b;i--)
#define MST(a,num)    memset(a,num,sizeof(a))
#define MCP(d,s)    memcpy(d,s,sizeof(s))
#define WH(n)         while(scanf("%d", &n) != EOF)
#define WHZ(n)         while(scanf("%d", &n) != EOF && n != 0)
#define SCF(a)        scanf("%d",&a)
#define PRF(a)        printf("%d",a)
#define PRS(a)        printf("%s",a)
#define PRFF(a)        printf("%d\n",a)
#define PRSF(a)        printf("%s\n",a)
#define PRFFU(a)        printf("%I64d\n",a)

#define PI acos(-1)
#define max3(a,b,c)     max(max(a,b),c)
#define max4(a,b,c,d)     max(max(a,b),max(c,d))

#define FORE(e,x) for(__typeof(x.begin()) e=x.begin(); e!=x.end(); e++) //foreach(it, ans ) cout<<*it<<" ";
#define all(a) (a).begin(),(a).end() //sort(all(v));
#define len(a) ((int)(a).size())
#define pb push_back
#define mk make_pair
#define V(etype) vector<etype>

typedef __int64 Uint;
typedef vector<int> Vint;
typedef pair<int,int>mypair;

#define INF 0x3f3f3f3f
#define eps 1e-9
const int N=201000+10;
int rt[N][2];//min max N
int p[N];
int n;
int solve(int a){
int add=0;
p[0]=-1;
FOR(i,0,a)p[i+1]=i+i+1;
FOR(i,1,a+1){
	p[i]=p[i]+add;
	if(p[i-1]+2>p[i])add+=p[i-1]+2-p[i],p[i]=p[i-1]+2;
	if(p[i]<rt[i][0])add+=rt[i][0]-p[i],p[i]=rt[i][0];
	}
if(p[a]>=n)return -1;
if(p[a]==n-2)p[a]=n-1;
for(int i=a;i>=2;i--)
	if(p[i-1]<p[i]-5)p[i-1]=p[i]-5;
if(a>=1 && p[1]>=5)return -1;

FOR(i,1,a+1)if(p[i]<rt[i][0] || p[i]>rt[i][1])return -1;
for(;p[a]<n;a++)p[a+1]=p[a]+2;
p[--a]=n-1;
return a;
}
int main()
{
int a,v,vi;
bool bad;
while(cin>>n){
MST(p,-1);
MST(rt,-1);
bad=v=rt[1][0]=rt[1][1]=0;
vi=-1;
FOR(i,0,n){
	SCF(a);
	if(a && !bad){
		bad=bad | (a<v) | (a>n);
		if(!bad && a<=n && v<a){
			for(int j=v;j<a;++j)rt[j][1]=i-1;
			for(int j=v+1;j<a;++j)rt[j][0]=vi+1;
			rt[v][0]=vi;
		}
		v=a;
		vi=i;
	}
}
rt[v][0]=vi;
rt[v][1]=n-1;

	if(bad)printf("-1\n");
	else if((a=solve(v))==-1)printf("-1\n");
	else{
	int j=1;
	printf("%d\n",a);
	for(int i=0;i<n;j++)
		for(;i<=p[j] && j<=a ;i++)
		printf("%d ",j);	
	printf("\n");
	}
}
return 0;
}
/*
7
0 1 0 0 0 3 0
*/