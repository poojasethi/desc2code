#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<ctime>
#include<cmath>
#include<iostream>
#include<string>
#include<deque>
#include<list>
#include<queue>
#include<vector>
#include<algorithm>
#include<map>
#include<stack>
#include<set>
using namespace std;
#define ll long long
#define lowbit(x) (x&-x)
#define f first
#define s second
#define pr pair<int,int>
#define mk(x,y) make_pair(x,y)
#define eps 1e-8
#define pi acos(-1.0)
#define square(x) ((x)*(x))
#define getvec(x,y) ((y)-(x))
#define xmul(x1,y1,x2,y2) ((x1)*(y2)-(x2)*(y1))
#define inf 0x3f3f3f3f
#define mod ((ll)1e9+7)
#define maxn 200010

int n,a[maxn],res[maxn],cnt[maxn];
pair<int, int> lef[maxn], rig[maxn];

bool sol() {
    if(a[0]>0&&a[0]!=1) return false;
    lef[0]=rig[0]=mk(1,1);
    for(int i=1;i<n;i++) {
        lef[i]=lef[i-1]; rig[i]=rig[i-1];
        lef[i].s++; rig[i].s++;
        if(lef[i].s>5) lef[i].f++,lef[i].s=1;
        if(rig[i].s>2) rig[i].f++,rig[i].s=1;

        if(a[i]>0) {
            if(a[i]<lef[i].f) return false;
            if(a[i]>rig[i].f) return false;
            lef[i]=max(lef[i],mk(a[i],1));
            rig[i]=min(rig[i],mk(a[i],5));
        }
    }
    res[n-1]=rig[n-1].f;
    if(rig[n-1].s<2) res[n-1]--;
    if(res[n-1]<lef[n-1].f) return false;
    cnt[res[n-1]]++;
    for(int i=n-2;i>=0;i--) {
        res[i]=min(res[i+1],rig[i].f);
        if(cnt[res[i]]==5) res[i]--;
        cnt[res[i]]++;
    }
    return true;
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("G:\\ACM\\inandout\\in.txt","r",stdin);
//	freopen("G:\\ACM\\inandout\\out.txt","w",stdout);
#endif
    scanf("%d",&n);
    for(int i=0;i<n;i++) scanf("%d",a+i);
    bool flag = sol();
    if(flag) {
        printf("%d\n",res[n-1]);
        for(int i=0;i<n;i++) printf("%d ",res[i]);
        printf("\n");
    } else  puts("-1");
	return 0;
}
