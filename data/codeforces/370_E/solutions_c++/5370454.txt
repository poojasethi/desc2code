// TwT514 {{{
#include <iostream>
#include <cstdlib>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <queue>
#include <map>
#define SZ(x) ((int)(x).size())
#define FOR(i,c) for (__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)
#define REP(i,n) for (int i=0; i<(n); i++)
#define REP1(i,a,b) for (int i=(int)(a); i<=(int)(b); i++)
#define ALL(x) (x).begin(),(x).end()
#define MS0(x,n) memset((x),0,(n)*sizeof(*x))
#define MS1(x,n) memset((x),-1,(n)*sizeof(*x))
#define MP make_pair
#define PB push_back
#define RI(a) scanf("%d",&(a))
#define RII(a,b) scanf("%d%d",&(a),&(b))
#define RIII(a,b,c) scanf("%d%d%d",&(a),&(b),&(c))
using namespace std;
typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
// }}}
#define N 200100
int n;
int a[N];
int r[N][2];

bool bad(){
	int mx=0;
	REP(i,n){
		if(a[i]==0)continue;
		if(mx>a[i])return true;
		mx = max(mx,a[i]);
	}
	return false;
}

void gogo(int t){
	int j=n-1;
	printf("%d\n",t);
	for(int i=t; i>=1; i--){
		//printf("[%d,%d]\n",r[i-1][0], r[i-1][1]);
		int s=0;
		while(s<2 || !(r[i-1][0] <= j && j <= r[i-1][1])){
			//printf("%d %d\n",i,j);
			a[j--]=i;
			s++;
		}
	}
	REP(i,n) printf("%d%c",a[i],i==n-1?'\n':' ');
} 

void print(){
	for(int i=n; i>=0; i--){
		if(r[i][0]<=n-1 && n-1<=r[i][1]){
			gogo(i);
			return;
		}
	}
	puts("-1");
}

int main() {
	RI(n);
	REP(i,n)RI(a[i]);

	if(bad()){
		puts("-1");
		return 0;
	}
	int i=0,j=0;
	r[0][0]=r[0][1]=-1;
	for(i=1;i<n;i++){
		int st=-1;
		while(j<n){
			if(a[j]>i)break;
			if(a[j]==0){j++; continue;}
			if(a[j]==i)st=j;
			j++;
		}
		r[i][0] = r[i-1][0]+2;
		if(st!=-1) r[i][0] = max(r[i][0], st);
		r[i][1] = min(r[i-1][1]+5,j-1);
		if(r[i][0]>=n || r[i][0]>r[i][1]) break;
	}
	print();
	return 0;
}






