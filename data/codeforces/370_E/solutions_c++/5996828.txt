#include <cstdio>
#include <algorithm>

using namespace std;

const int inf = 99999999;

int n;
int a[200001];
int d[200001][2];

void print(int m, int num) {
    if (m == 0) {
        return;
    }

    for (int i = 2; i <= 5 && m - i >= 0; ++i) {
        if (d[m - i][0] <= num - 1 && num - 1 <= d[m - i][1]) {
            print(m - i, num - 1);
            while (i--) {
                printf("%d ", num);
            }
            break;
        }
    }
}

int main() {
    scanf("%d", &n);
    for (int i = 1; i <= n; ++i) {
        scanf("%d", &a[i]);
    }

    d[1][0] = inf;
    d[1][1] = -inf;
    for (int i = 2; i <= n; ++i) {
        d[i][0] = inf;
        d[i][1] = -inf;
        int num = 0;
        for (int j = i, len = 1; j > i - 5 && j > 0; --j, ++len) {
            if (a[j] != 0) {
                if (num != 0 && num != a[j]) {
                    break;
                } else {
                    num = a[j];
                }
            }

            if (len < 2) {
                continue;
            }

            if (d[j - 1][0] == inf) {
                continue;
            }

            int l = inf;
            int r = -inf;
            if (num == 0) {
                l = d[j - 1][0] + 1;
                r = d[j - 1][1] + 1;
            } else {
                if (d[j - 1][0] <= num - 1 && num - 1 <= d[j - 1][1]) {
                    l = r = num;
                }
            }
            d[i][0] = min(d[i][0], l);
            d[i][1] = max(d[i][1], r);
        }
    }
    if (d[n][0] == inf) {
        printf("-1\n");
        return 0;
    }

    printf("%d\n", d[n][1]);
    print(n, d[n][1]);
    printf("\n");
}
