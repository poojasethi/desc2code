#include <cstdio>
#include <set>
#include <utility>
using namespace std;
#define MP make_pair
typedef long long int llint;
typedef pair<int,int> PII;
#define MAXN 200033

int n,num[MAXN],nxt[MAXN];
set<PII> vis[MAXN];

bool maybe(int idx,int cnt)
{
	int np,delta,length;
	if(cnt>5)return false;
	np=nxt[idx];
	if(np>n)return true;
	if(num[idx-1]>num[np])return false;
	delta=num[np]-num[idx-1];
	length=np-(idx-1)-1;
	if(length/2 < delta-1)return false;
	if(length/5 > delta)return false;
	return true;
}

int sol(int idx,int cnt)
{
	int i;

	if(maybe(idx,cnt)==false)return 0;
	if(idx>n)
	{
		if(cnt>=2 && cnt<=5)
		{
			printf("%d\n",num[n]);
			for(i=1;i<=n;i++)
			{
				if(i>1)putchar(' ');
				printf("%d",num[i]);
			}
			putchar('\n');
			return 1;
		}
		return 0;
	}
	if( vis[idx].count( PII(num[idx-1],cnt) ) == true )return 0;
	vis[idx].insert( PII(num[idx-1],cnt) );
	if(num[idx]>0)
	{
		if(num[idx]==num[idx-1])return sol(idx+1,cnt+1);
		else if(cnt>=2)return sol(idx+1,1);
	}
	else
	{
		if(cnt>=2)
		{
			num[idx]=num[idx-1]+1;
			if(sol(idx+1,1))return 1;
			num[idx]=0;
		}
		if(cnt<5)
		{
			num[idx]=num[idx-1];
			if(sol(idx+1,cnt+1))return 1;
			num[idx]=0;
		}
	}
	return 0;
}

int main()
{
	int i;

	while(scanf("%d",&n)!=EOF)
	{
		for(i=1;i<=n;i++)
		{
			scanf("%d",&num[i]);
			vis[i].clear();
		}
		if(num[1]>1)
		{
			puts("-1");
			continue;
		}
		nxt[n+1]=n+1;
		num[1]=1;
		for(i=n;i>=1;i--)
		{
			if(num[i]>0)nxt[i]=i;
			else nxt[i]=nxt[i+1];
		}
		if(sol(2,1)==0)puts("-1");
	}
	return 0;
}
