#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

int N,K;
int a[200010];
int low[200010],high[200010];
int ans[200010];

bool check(void){
    int i,j;
    
    if(K <= 0) return false;
    REP(i,N) if(a[i] >= K) return false;
    
    REP(i,K+1) low[i] = 0;
    REP(i,K+1) high[i] = N;
    high[0] = 0;
    low[K] = N;
    
    REP(i,N) if(a[i] != -1){
        high[a[i]] = min(high[a[i]], i);
        low[a[i]+1] = max(low[a[i]+1], i+1);
    }
    
    REP(i,K) low[i+1] = max(low[i+1], low[i] + 2);
    for(i=K;i>=1;i--) low[i-1] = max(low[i-1], low[i] - 5);
    REP(i,K+1) if(low[i] > high[i]) return false;
    
    REP(i,K) for(j=low[i];j<low[i+1];j++) ans[j] = i + 1;
}

void print(void){
    int i;
    cout << K << endl;
    REP(i,N){
        printf("%d", ans[i]);
        if(i == N-1) printf("\n"); else printf(" ");
    }
}

int main(void){
    int i;
    
    cin >> N;
    REP(i,N) scanf("%d", &a[i]);
    REP(i,N) a[i]--;
    
    for(i=N-1;i>=0;i--) if(a[i] != -1) break;
    int used = ((i == -1) ? 0 : (a[i] + 1));
    
    int K2 = used + (N - i) / 2;
    for(i=0;i>=-1;i--){
        K = K2 + i;
        if(check()){
            print();
            return 0;
        }
    }
    
    cout << -1 << endl;
    
    return 0;
}