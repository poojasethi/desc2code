#include<iostream>
#include<cstdlib>
#include<cstdio>
#define N 200010
using namespace std;
int f[N][6],g[N][6];
int n,A[N];

void print(int i,int j) {
	if (i==0) return;
	int k=g[i][j];
//	printf("ceck %d %d %d\n",i,j,k);
	for (int last=i-1;last>=0;--last) if (A[last]||last==0) {
		if (A[last]==A[i]) {k=g[last][k];continue;}
		
		int space=i-last-1-(j-1);
		int num=A[i]-A[last]-1;
		int l=(A[i]-A[last]-1)*2,r=(A[i]-A[last]-1)*5;
		if (num<0) print(last,k);
		else for (int t=(k==1);t<=5-k;++t) {
			int rest=space-t;
			if (l<=rest&&rest<=r) {
//				printf("   %d %d %d  %d\n",i,j,k,t);
//				printf("che %d %d\n",rest,num);
				
				print(last,k);
				for (int cas=1;cas<=t;++cas) printf("%d ",A[last]);
				for (int cas=1;cas<=num;++cas) {
					int ave=rest/(num-cas+1);
					for (int p=1;p<=ave;++p) printf("%d ",A[last]+cas);
					rest-=ave;
				}
				
//				for (int cas=1;cas<=rest;++cas) {
//					
//					printf("%d ",);
//				}
				
				break;
			}
		}

		break;
	}
	for (int p=1;p<=j;++p) printf("%d ",A[i]);
}
int main()
{
//	freopen("e.in","r",stdin);
	scanf("%d",&n);
	for (int i=1;i<=n;++i) scanf("%d",&A[i]);
	int last=0;
	f[0][5]=1;
//	A[0]=1;
	for (int i=1;i<=n;++i) if (A[i]) {
		int space=i-last-1;
		int l=(A[i]-A[last]-1)*2,r=(A[i]-A[last]-1)*5;
		for (int j=1;j<=5;++j) {
			for (int k=1;k<=5;++k) if (f[last][k]) {
				int L=space-(5-k)-(j-1),R=space-(k==1)-(j-1);
				
				
//				printf("%d %d\n",l,R);
				if (A[i]==A[last]) {if (j==space+1+k) f[i][j]=1,g[i][j]=k;}
				else if (R>=l&&r>=L) f[i][j]=1,g[i][j]=k;//printf("yes %d %d\n",i,j,k);
				
			}
		}
		last=i;
	}
	
	if (!A[n]) for (int cas=n;cas>A[last];--cas) {
		A[n]=cas;
		int space=n-last-1;
		int l=(A[n]-A[last]-1)*2,r=(A[n]-A[last]-1)*5;
		for (int j=2;j<=5;++j) {
			for (int k=1;k<=5;++k) if (f[last][k]) {
				int L=space-(5-k)-(j-1),R=space-(k==1)-(j-1);
				if (R>=l&&r>=L) {
					printf("%d\n",cas);
					g[n][j]=k;
					print(n,j);
					return 0;

				}
				
			}
		}
	}
	for (int k=1;k<=5;++k) if (f[last][k]&&n-last<=5-k) {
		if (k==1&&n-last==0) continue;
		printf("%d\n",A[last]);
		
		print(last,k);
		for (int p=1;p<=n-last;++p) printf("%d ",A[last]);
		return 0;
	}
	printf("-1\n");
	return 0;
}
