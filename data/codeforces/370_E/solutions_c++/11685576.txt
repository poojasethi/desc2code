#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
const int nmax = 2e5+10;
pair<int,int> l[nmax],r[nmax];
int main(){
	ios_base::sync_with_stdio(false);
	int n;
	cin >> n;
	vector<int> arr(n);
	for(int i = 0; i < n; ++i)
		cin >> arr[i];
	l[0]=make_pair(1,0);
	r[0]=make_pair(1,0);
	if(arr[0]>1){
		cout << "-1\n";
		return 0;
	}
	for(int i = 1; i < n; ++i){
		l[i]=l[i-1];
		r[i]=r[i-1];
		r[i].second++;
		if(r[i].second>=2){
			r[i].first++;
			r[i].second=0;
		}
		l[i].second++;
		if(l[i].second==5){
			l[i].first++;
			l[i].second=0;
		}
		if(arr[i]!=0){
			if(r[i].first<arr[i]||l[i].first>arr[i]){
				cout << "-1\n";
				return 0;
			}
			if(r[i].first>arr[i]){
				r[i].first=arr[i];
				r[i].second=4;
			}
			if(l[i].first<arr[i]){
				l[i].first=arr[i];
				l[i].second=0;
			}
		}
		//cout << l[i].first << ' ' << r[i].first << '\n';
	}
	if(r[n-1].first>r[n-2].first){
		if(arr[n-1]!=0){
			cout << "-1\n";
			return 0;
		}
		r[n-1]=r[n-2];
		r[n-1].second++;
		if(r[n-1].second==5)
			r[n-1].second=4;
	}
	arr[n-1]=r[n-1].first;
	for(int i = n-2; i >= 0; --i){
		pair<int,int> nxt = r[i+1];
		nxt.second--;
		if(nxt.second==-1){
			nxt.first--;
			nxt.second = 4;
		}
		r[i]=min(r[i],nxt);
		arr[i]=r[i].first;
	}
	cout << arr[n-1] << '\n';
	for(int i = 0; i < n; ++i)
		cout << arr[i] << " \n"[i==n-1];
}

