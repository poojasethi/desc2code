#include<bits/stdc++.h>
using namespace std;

#define int long long
typedef pair<int,int>pint;
typedef vector<int>vint;
typedef vector<pint>vpint;
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define all(v) (v).begin(),(v).end()
#define rep(i,n) for(int i=0;i<(n);i++)
#define reps(i,f,n) for(int i=(f);i<(n);i++)
#define each(it,v) for(__typeof((v).begin()) it=(v).begin();it!=(v).end();it++)
template<class T,class U>void chmin(T &t,U f){if(t>f)t=f;}
template<class T,class U>void chmax(T &t,U f){if(t<f)t=f;}

const int SIZE=100000;

int N,C[SIZE];
vint G[SIZE];
map<int,int>M[SIZE];
int ma[SIZE],sum[SIZE],ans[SIZE];

void f(int u,int v){
    if(M[u].size()<M[v].size()){
        swap(M[u],M[v]);
        swap(ma[u],ma[v]);
        swap(sum[u],sum[v]);
    }
    each(it,M[v]){
        int tmp=M[u][it->fi]+=it->se;
        if(tmp>ma[u]){
            ma[u]=tmp;
            sum[u]=it->fi;
        }
        else if(tmp==ma[u]){
            sum[u]+=it->fi;
        }
    }
}

void dfs(int v,int p){
    ma[v]=1;sum[v]=C[v];M[v][C[v]]++;
    rep(i,G[v].size()){
        int to=G[v][i];
        if(to==p)continue;
        dfs(to,v);
        f(v,to);
    }
    ans[v]=sum[v];
}

signed main(){
    scanf("%lld",&N);
    rep(i,N)scanf("%lld",&C[i]);
    rep(i,N-1){
        int a,b;scanf("%lld%lld",&a,&b);a--;b--;
        G[a].pb(b);G[b].pb(a);
    }
    dfs(0,-1);
    rep(i,N)printf("%lld ",ans[i]);
    puts("");
    return 0;
}
