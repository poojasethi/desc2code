// 小map往大map里merge似乎是一个没啥人懂的黑科技？
#include<cstdio>
#include<vector>
#include<map>
#include<algorithm>
using namespace std;

#define ran 111111

int n;
int c[ran];
int id[ran];
map<int, int> mp[ran];
map<int, int> ::iterator it;
int ma[ran]; // 最大count
long long tot[ran]; // 所有最大count的color和
vector<int> e[ran];
long long ans[ran];

void merge(int a, int b) {
	for(it=mp[b].begin(); it!=mp[b].end(); it++) {
		int key = (*it).first, value = (*it).second;
		
		mp[a][key]+=value;
		int s = mp[a][key];
		if(s>ma[a]) {
			ma[a] = s;
			tot[a] = key;
		} else if(s==ma[a]) {
			tot[a]+=key;
		}
	}
}

int dfs(int x, int p) {
	id[x]=x;
	ma[x]=1;
	tot[x]=c[x];
	mp[x][c[x]]=1;
	for(int i=0;i<e[x].size();i++) {
		int nxt = e[x][i];
		if(nxt==p) continue;
		dfs(nxt, x);
		int a = id[x], b = id[nxt];
		if(mp[a].size()>=mp[b].size()) merge(a, b);
		else {
			merge(b, a);
			id[x]=b;
		}
	}
	ans[x]=tot[id[x]];
}

int main() {
	scanf("%d", &n);
	for(int i=1;i<=n;i++) scanf("%d", &c[i]);
	for(int i=1;i<n;i++) {
		int x, y;
		scanf("%d%d", &x, &y);
		e[x].push_back(y);
		e[y].push_back(x);
	}
	dfs(1, 0);
	
	for(int i=1;i<=n;i++)
		printf("%I64d%c", ans[i], i<n ? ' ' : '\n');
	
	return 0;
}