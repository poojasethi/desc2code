#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <vector>
#include <map>
#define maxn 100005
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define pii pair < ll ,ll >
#define ll long long 
using namespace std;
vector < int > d[maxn];
int col[maxn],n,m,i,j,k,a,b,c;
map < int,int > yol[maxn];
ll ans[maxn];
pii tr[maxn];
void dfs(int x,int pa){
	 tr[x]=mp(1,col[x]);
	 yol[x][col[x]]+=1;
	 int i,nd;
	 map < int,int > :: iterator it;
	 for(i=0;i<d[x].size();i++){
		 int nd=d[x][i];
		 if(nd==pa)
		 continue;
		 dfs(nd,x);
		 if(yol[nd].size() > yol[x].size()){
			swap(yol[nd],yol[x]); 
			swap(tr[nd],tr[x]);
		 }
		 it=yol[nd].begin();
		 for(;it!=yol[nd].end();it++){
			  yol[x][it->fi]+=it->se;
			  if(yol[x][it->fi]==tr[x].fi)
			  tr[x].se+=it->fi;
			  else if(yol[x][it->fi] > tr[x].fi)
			  tr[x]=mp(yol[x][it->fi],it->fi);
		 }
	 }
	 ans[x]=tr[x].se;
}
int main(){
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	scanf("%d",&col[i]);
	for(i=1;i<=n-1;i++){
		scanf("%d %d",&a,&b);
		d[a].pb(b);
		d[b].pb(a);
	}
	dfs(1,0);
	for(i=1;i<=n;i++)
	printf("%lld ",ans[i]);
	return 0;
}
