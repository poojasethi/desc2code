#include <map>
#include <set>
#include <vector>
#include <cstdio>
#include <cstring>
#include <algorithm>
#define  iter map<int,int>::iterator
using namespace std;
typedef long long ll;
const int maxn = 1e5+10;

map<int,int> mp[maxn];
ll sum[maxn],ans[maxn];
int n,x,y,p[maxn],cnt[maxn],c[maxn];
vector<int> g[maxn];
bool V[maxn];

void dfs(int u){
    for(int i=0;i<g[u].size();i++){
        int v = g[u][i];
        if(V[v]) continue;
        V[v] = 1;
        dfs(v);
        if(mp[p[u]].size()<mp[p[v]].size()){
            swap(p[u],p[v]);
        }
        int a = p[u];
        int mx = cnt[a];
        for(iter it=mp[p[v]].begin();it!=mp[p[v]].end();it++){
            int x = it->first,y=it->second;
            mp[a][x]+=y;
            if(mx<mp[a][x]){
                mx = mp[a][x];
                sum[a] = x;
            }else if(mx==mp[a][x]) sum[a]+=(ll)x;
        }
        cnt[a] = mx;
    }
    ans[u] = sum[p[u]];
}

int main(){
    scanf("%d",&n);
    for(int i=1;i<=n;i++){
        scanf("%I64d",c+i);
        p[i] = i;
        mp[i][c[i]] = 1;
        cnt[i] =1;
        sum[i] = c[i];
    }
    for(int i=1;i<n;i++){
        scanf("%d%d",&x,&y);
        g[x].push_back(y);
        g[y].push_back(x);
    }
    V[1] = 1;
    dfs(1);
    for(int i=1;i<=n;i++){
        printf("%I64d ",ans[i]);
    }
    puts("");
    return 0;
}

                                             