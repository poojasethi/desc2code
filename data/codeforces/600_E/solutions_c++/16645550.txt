#include <bits/stdc++.h>

using namespace std;

#define int long long

#define mid (lf + rg >> 1)
#define right (left | 1)
#define left (v << 1)

#define pb push_back
#define mp make_pair
#define nd second
#define st first

typedef long long ll;
typedef pair < int, int > pii;

const ll linf = 1e18 + 9;
const int inf = 1e9 + 9;
const int N = 1e5 + 9;

vector < int > gr[N];

int n, a, u, v, ans[N];

map < int, int > cur[N], res[N];

void dfs(int v, int f) {
	for (int i = 0; i < gr[v].size(); i++) {
		if (gr[v][i] != f) {
			dfs(gr[v][i], v);
			if (cur[gr[v][i]].size() > cur[v].size()) {
				swap(cur[gr[v][i]], cur[v]);
				swap(res[gr[v][i]], res[v]);
			}
			map < int, int > :: iterator it;
			for (it = cur[gr[v][i]].begin(); it != cur[gr[v][i]].end(); it++) {
				cur[v][it -> first] += it -> second;
				res[v][cur[v][it -> first]] += it -> first;
			}
		}
	}
	ans[v] = res[v].rbegin() -> second;
}

main() {

	scanf("%lld", &n);

	for (int i = 1; i <= n; i++) {
		scanf("%lld", &a);
		res[i][1] += a;
		cur[i][a]++;
	}
	for (int i = 1; i < n; i++) {
		scanf("%lld %lld", &u, &v);
		gr[u].pb(v);
		gr[v].pb(u);
	}
	dfs(1, 0);
	for (int i = 1; i <= n; i++) {
		printf("%lld ", ans[i]);
	}

	return 0;
}
