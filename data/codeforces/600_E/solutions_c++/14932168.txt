#include <bits/stdc++.h>

using namespace std;

#define MAX 1000001
#define ll long long
#define vi vector <int>
#define vll vector < long long >
#define vvi vector< vector < int > >
#define pi pair <int,int>
#define vpi vector < pi >
#define pb(a) push_back(a)
#define mil map < int, long long > 

vi color(MAX),Parent(MAX),id(MAX);
vi adj[MAX];
mil freq[MAX];
vll ans(MAX),temp_ans(MAX);
vi mx_freq(MAX,0);

void combine(int&v,int u){
	if(freq[u].size() > freq[v].size())
		swap(u,v);
	mil::iterator it;
	for (it = freq[u].begin();it != freq[u].end();it++){
		//cout<<freq[v][it->first]<<"  "<<it->second<<endl;
		freq[v][it->first] += it->second;
		if(freq[v][it->first] > mx_freq[v]){
			mx_freq[v] = freq[v][it->first];
			temp_ans[v] = it->first;
		}
		else if(freq[v][it->first] == mx_freq[v]){
			temp_ans[v] += it->first;
		}
		//cout<<temp_ans[v]<<endl;
	}
}


void dfs(int n,int par){
	id[n] = n;
	freq[n][color[n]] = 1;
	temp_ans[n] = color[n];
	mx_freq[n] = 1;
	Parent[n] = par;
	int v;
	vi::iterator it;
	for ( it = adj[n].begin();it != adj[n].end();it++){
		v = *it;
		if(v != par){
			dfs(v,n);
			combine(id[n],id[v]);
		}
	}
	ans[n] = temp_ans[id[n]];
}

int main(){
//	freopen("input.txt","r",stdin);
	int n,u,v;
	cin >> n;
	for (int i = 1; i <= n; ++i){
		cin >> color[i];
	}
	for (int i = 1;i<n; ++i){
		cin >> u >> v;
		adj[u].pb(v);
		adj[v].pb(u);
	}
	dfs(1,0);

	for (int i = 1; i <= n; ++i)
	{
		cout<<ans[i]<<" ";
	}
	cout<<endl;

}