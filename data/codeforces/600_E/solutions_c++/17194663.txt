#include<bits/stdc++.h>
using namespace std;

#define pb push_back

typedef long long ll;
const int N = 100005;

int seen[N];
int col[N];
int mx[N];
int w[N];
ll ans[N];
ll cnt[N];
vector< int > g[N];
map< int,int > s[N];
map< int,int >::iterator it;

void Merge(int a,int b){
    if(s[w[a]].size() < s[w[b]].size()) swap(w[a],w[b]);
    int id = w[a];
    for(it = s[w[b]].begin();it != s[w[b]].end(); it++){
        int x = (*it).first;
        int y = (*it).second;
        s[id][x] += y;
        if(s[id][x] > mx[id]){
            mx[id] = s[id][x];
            cnt[id] = 0;
        }
        if(s[id][x] == mx[id]){
            cnt[id] += x;
        }
    }
}

void dfs(int u){
    seen[u] = 1;
    for(int i=0;i<(int)g[u].size();i++){
        int v = g[u][i];
        if(!seen[v]){
            dfs(v);
            Merge(u,v);
        }
    }
    ans[u] = cnt[w[u]];
}

int main(){
    int n; scanf("%d",&n);
    for(int i=1;i<=n;i++){
        scanf("%d",&col[i]);
        s[i][col[i]] = 1;
        mx[i] = 1; w[i] = i;
        cnt[i] = col[i];
    }
    for(int i=1;i<n;i++){
        int u,v; scanf("%d %d",&u,&v);
        g[u].pb(v); g[v].pb(u);
    }
    dfs(1);
    for(int i=1;i<=n;i++) printf("%I64d ",ans[i]); puts("");
    return 0;
}
