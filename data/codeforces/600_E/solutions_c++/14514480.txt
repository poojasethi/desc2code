#include <bits/stdc++.h>

using namespace std;

#define type(x) __typeof((x).begin())
#define foreach(it, x) for(type(x) it = (x).begin(); it != (x).end(); it++)
typedef long long ll;
typedef pair < int, int > ii;

const int inf = 1e9 + 333;
const ll linf = 1e18 + inf;

const int N = 1e5 + 5;

int n;
int a[N];
vector < int > v[N];
map < int, int > M[N];
ll ans[N], mx[N], res[N];

void swp(int x, int y) {
	swap(mx[x], mx[y]);
	swap(res[x], res[y]);
	M[x].swap(M[y]);
}

void add(int x, int y) {
	foreach(it, M[x]) {
		int u = it -> first;
		int cnt = it -> second;
		M[y][u] += cnt;
		cnt = M[y][u];
		if(cnt > mx[y]) {
			mx[y] = cnt;
			res[y] = u;
		}
		else if(cnt == mx[y]) {
			res[y] += u;
		}
	}
}

void dfs(int p, int x) {
	mx[x] = 1;
	res[x] = a[x];
	M[x][a[x]]++;
	foreach(it, v[x]) {
		int u = *it;
		if(u != p) {
			dfs(x, u);
			if(M[x].size() < M[u].size())
				swp(x, u);
			add(u, x);
		}
	}
	ans[x] = res[x];
}

int main() {

	scanf("%d", &n);
	
	for(int i = 1; i <= n; i++)
		scanf("%d", a + i);
	
	for(int i = 1; i < n; i++) {
		int x, y;
		scanf("%d %d", &x, &y);
		v[x].push_back(y);
		v[y].push_back(x);
	}
	
	dfs(0, 1);
	
	for(int i = 1; i <= n; i++) {
		printf("%lld ", ans[i]);
	}
	
	puts("");

	return 0;

}
