#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
using namespace std;
typedef long long ll;
struct edge{
	int t,next;
}g[410001];
struct data{
	int l,r,n;
}q[210001];
ll ans[210001],c[410001];
int t1,t2,i,j,k,n,m,now,tot,h[210001],sz,dfn[210001][2],a[210001],b[210001],w[210001];
void addedge(int x,int y){
	g[++tot].t=y;g[tot].next=h[x];h[x]=tot;
	g[++tot].t=x;g[tot].next=h[y];h[y]=tot;
}
bool cmp(data a,data b){
	int t1=a.l/sz,t2=b.l/sz;
	return t1<t2||t1==t2&&a.r<b.r;
}
void dfs(int x,int fa){
	int i;
	w[++now]=x;dfn[x][0]=now;
	for (i=h[x];i;i=g[i].next)
	 if (fa!=g[i].t) dfs(g[i].t,x);
	dfn[x][1]=now;q[x].l=dfn[x][0];q[x].r=dfn[x][1];q[x].n=x;
}
void inc(int x){
	b[x]++;c[b[x]-1+n]-=x;c[b[x]+n]+=x;
	k=max(k,b[x]);
}
void dec(int x){
	b[x]--;c[b[x]+1+n]-=x;c[b[x]+n]+=x;
	while (!c[k+n]) k--;
}
int main(){
	scanf("%d",&n);sz=ceil(sqrt(n));memset(h,0,sizeof(h));tot=0;memset(b,0,sizeof(b));memset(c,0,sizeof(c));now=0;
	for (i=1;i<=n;i++) scanf("%d",&a[i]);
	for (i=1;i<n;i++) scanf("%d%d",&j,&k),addedge(j,k);
	dfs(1,0);sort(q+1,q+1+n,cmp);
	for (k=0,i=q[1].l,c[n]=(ll)n*(ll)(n+1)/2;i<=q[1].r;i++) inc(a[w[i]]);
	for (i=1,t1=q[1].l,t2=q[1].r;i<=n;i++){
		while (t1<q[i].l) dec(a[w[t1++]]);
		while (t1>q[i].l) inc(a[w[--t1]]);
		while (t2<q[i].r) inc(a[w[++t2]]);
		while (t2>q[i].r) dec(a[w[t2--]]);
		ans[q[i].n]=c[n+k];
	}
	for (i=1;i<=n;i++) printf("%I64d ",ans[i]);
	return 0;
}