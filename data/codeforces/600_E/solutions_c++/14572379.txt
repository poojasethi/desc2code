#include<bits/stdc++.h>
typedef __int64 ll;
using namespace std;
const int maxn = 800005;
map<int, int>mm[maxn];
map<int, int>::iterator it;
vector<int>G[maxn];
int n;
int color[maxn];
int id[maxn];
ll ans[maxn], cnt[maxn], cur[maxn];

void work(int &u, int y)
{
    if(mm[u].size() < mm[y].size()) swap(u, y);
    for(it = mm[y].begin();it != mm[y].end();it++)
    {
        mm[u][it->first] += it->second;
        if(cur[u] == mm[u][it->first])
            cnt[u] += it->first;
        if(cur[u] < mm[u][it->first])
        {
            cur[u] = mm[u][it->first];
            cnt[u] = it->first;
        }
    }
}

void solve(int u, int fa)
{
    mm[u][color[u]] = 1;
    cnt[u] = color[u];  cur[u] = 1;
    for(int i = 0;i<G[u].size();i++)
    {
        int v = G[u][i];
        if(v == fa) continue;
        solve(v, u);
        work(id[u], id[v]);
    }
    ans[u] = cnt[id[u]];
}

int main()
{
    scanf("%d", &n);
    for(int i = 1;i<=n;i++)
    {
        id[i] = i;
        scanf("%d", &color[i]);
    }
    for(int i = 1;i<n;i++)
    {
        int u, v;
        scanf("%d%d", &u, &v);
        G[u].push_back(v);
        G[v].push_back(u);
    }
    solve(1, -1);
    for(int i = 1;i<=n;i++)
    {
        if(i == n)  printf("%I64d\n", ans[i]);
        else    printf("%I64d ", ans[i]);
    }
    return 0;
}