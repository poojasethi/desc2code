#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <cmath>

#define y1 y3223789

using namespace std;

const int MAXN = 10000;

int n;
double x1, y1, x2, y2;
double x[MAXN], y[MAXN], w[MAXN], a0[MAXN];
double t1[MAXN], t2[MAXN], d[MAXN], p[MAXN];
double pi = 2 * acos(0.0);

double cross(double x1, double y1, double x2, double y2) {
    return x1 * y2 - x2 * y1;
}

double getmin(double x) {
    while (x < 0)
        x += 2 * pi;
    while (x > 2 * pi)
        x -= 2 * pi;
    return min(x, 2 * pi - x);
}

double get_time(int i, double xx, double yy) {
    double ang = atan2(yy - y[i], xx - x[i]) - a0[i];
    return getmin(ang) / w[i];
}

double inter(double x1, double y1, double x2, double y2, double x3, double y3, double x4, double y4) {
    double d = cross(x2 - x1, y2 - y1, x3 - x4, y3 - y4);
    double p = cross(x2 - x1, y2 - y1, x3 - x1, y3 - y1);
    return p / d;
}

double nt;

int check(int i, double v) {
    if (get_time(i, x2, y2) < nt)
        return 1;
    if (p[i] < 0)
        return 0;
    double l = 0, r = min(1.0, p[i]);
    for (int o = 0; o < 40; o++) {
        double c1 = (l * 2 + r) / 3;
        double c2 = (l + 2 * r) / 3;
        double cx1 = x1 * (1 - c1) + x2 * c1;
        double cy1 = y1 * (1 - c1) + y2 * c1;
        double cx2 = x1 * (1 - c2) + x2 * c2;
        double cy2 = y1 * (1 - c2) + y2 * c2;
        double t1 = get_time(i, cx1, cy1);
        double t2 = get_time(i, cx2, cy2);
        t1 -= nt * c1;
        t2 -= nt * c2;
        if (t1 < 0 || t2 < 0)
            return 1;
        if (t1 < t2)
            r = c2;
        else
            l = c1;
    }
    return 0;
}

int getans(double v) {
    int ans = 0;
    nt = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) / v;
    for (int i = 0; i < n; i++)
        if (check(i, v))
            ans++;
    return ans;
}

int main() {
//  freopen("tanks.in", "r", stdin);
//  freopen("tanks.out", "w", stdout);

    cin >> x1 >> y1 >> x2 >> y2;
    double dist = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
    cin >> n;
    for (int i = 0; i < n; i++) {
        cin >> x[i] >> y[i] >> a0[i] >> w[i];
        double tmp = cross(x[i] - x1, y[i] - y1, x[i] - x2, y[i] - y2);
        t1[i] = get_time(i, x1, y1);
        t2[i] = get_time(i, x2, y2);
        p[i] = inter(x[i], y[i], x[i] + y2 - y1, y[i] + x1 - x2, x1, y1, x2, y2);
        d[i] = abs(tmp) / dist;
    }

    int k;
    cin >> k;

    double tt[MAXN];

    for (int i = 0; i < n; i++) {
        double l = 0, r = 4000000;
        while (r - l > 1e-5) {
            double v = (l + r) / 2;
            nt = sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) / v;
            if (check(i, v))
                l = v;
            else
                r = v;
        }
        tt[i] = (l + r) / 2;
    }

    sort(tt, tt + n);
    reverse(tt, tt + n);
    if (k == n)
        printf("%.4lf", 0.0);
    else
        printf("%.4lf", tt[k]);
    cout << endl;

    return 0;
}
