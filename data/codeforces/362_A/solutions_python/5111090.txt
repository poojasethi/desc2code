import sys, math
def rs():
    return sys.stdin.readline().strip()
def ri():
    return int(sys.stdin.readline().strip())
def ras():
    return list(sys.stdin.readline().strip())
def rai():
    return map(int,sys.stdin.readline().strip().split())

def solve():
    arr = []
    horses = []
    for x in xrange(8):
        ss = ras()
        arr.append(ss)
        for y in xrange(8):
            if ss[y] is "K":
                horses.append((x,y))


    def points(p, arr):
        mas = lambda x,y: [(x,y), (x-4,y), (x+4,y),(x,y-4), (x-4,y-4), (x+4,y-4),(x,y+4), (x-4,y+4), (x+4,y+4)]
        x,y = p
        res = []

        for t in mas(x,y):
            x1,y1 = t
            while x1 < 8:
                x1 += 2
                while y1 < 8:
                    y1 += 2
                    res = res + mas(x1,y1)
                while y1 >= 0:
                    y1 -= 2
                    res = res + mas(x1,y1)
            while x1 >= 0:
                x1 -= 2
                while y1 < 8:
                    y1 += 2
                    res = res + mas(x1,y1)
                while y1 >= 0:
                    y1 -= 2
                    res = res + mas(x1,y1)

        result = []

        for x in res:
            if x[0] >= 0 and x[0] < 8 and x[1] >= 0 and x[1] < 8 and arr[x[0]][x[1]] is not "#":
                result.append(x)
        return result

    if abs(horses[0][0] - horses[1][0]) % 4 is 0 and  abs(horses[0][1] - horses[1][1]) % 4 is 0 and len(points(horses[0], arr)) > 0:
#    if abs(horses[0][0] - horses[1][0]) % 4 is 0 and  abs(horses[0][1] - horses[1][1]) % 4 is 0:
        return "YES"
    
    return "NO"




def main():
    t = ri()

    for x in xrange(t):
        print solve()
        rs()



main()
