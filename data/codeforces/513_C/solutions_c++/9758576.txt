#include <cstdio>
#include <cstring>
#include <algorithm>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define FOD(i,s,e) for (int i=(s)-1; i>=(e); i--)
#define CLR(a,x) memset(a, x, sizeof(a))
#define EXP(i,l) for (int i=(l); i; i=qn[i])
#define LLD long long
using namespace std;

int n, a[9], b[9];
double P[10005], ret;

double lessthan(int x, int y, int k){
	if (k < x) return 0;
	if (k > y) return 1;
	return (double)(k - x) / (y - x + 1.);
}

int main(){
	scanf("%d", &n);
	FOR(i,0,n){
		scanf("%d%d", &a[i], &b[i]);
	}
	FOD(i,10001,1){
		double p = 1;
		FOR(j,0,n) p *= lessthan(a[j], b[j], i);
		P[i] += p;
		p = 1;
		FOR(j,0,n){
			p = 1;
			FOR(k,0,n){
				if (j == k) p *= (1. - lessthan(a[k], b[k], i));
				else p *= lessthan(a[k], b[k], i);
			}
			P[i] += p;
		}
		P[i] = 1. - P[i];
		ret += i * (P[i] - P[i+1]);
	}
	printf("%.12f\n", ret);
	return 0;
}
