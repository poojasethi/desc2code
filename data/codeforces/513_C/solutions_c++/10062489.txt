#include <bits/stdc++.h>
typedef long long LL;
#define rep(i,n) for(int i = 0;i < n;i ++)

const int N = 6;
int l[N], r[N], k, n;
double p;
void dfs(int i, double cur, int a, int b) {
	if(a > 1)	return;
	if(i == n) {
		if(a + b <= 1)	return;
		p += cur;
		return;
	}
	if(l[i] <= k && k <= r[i]) { // equal
		dfs(i + 1, cur / (r[i] - l[i] + 1), a, b + 1);
	}
	if(l[i] < k) {
		dfs(i + 1, cur * (std::min(k, r[i] + 1) - l[i]) / (r[i] - l[i] + 1), a, b);
	}
	if(k < r[i]) { // greater
		dfs(i + 1, cur * (r[i] - std::max(l[i] - 1, k)) / (r[i] - l[i] + 1), a + 1, b);
	}
}
int main() {
	scanf("%d", &n);
	rep(i, n)
		scanf("%d%d", l + i, r + i);
	double ans = 0;
	for(k = 1; k <= 10000; k ++) {
		p = 0.;
		dfs(0, 1., 0, 0);
		ans += k * p;
	}
	printf("%.10lf\n", ans);
	return 0;
}

