#include<cstdio>
#include<algorithm>
#define N 10005
using namespace std;
int L[N],R[N];double in[N],wri;
int ans,i,n,number;
double dfs(int i,int big,int equal,int small,double ex)
{
  if (i>n)
  {
    if (!equal) return 0;
    if (big>1) return 0;
    if (equal+big<2) return 0;
    return ex;
  }
  //if (number==i) return dfs(i+1,big,equal,small,ex);
  double tmp=in[R[i]-L[i]+1],res=0;
  if (L[i]<=ans&&R[i]>=ans) res+=dfs(i+1,big,equal+1,small,ex*tmp);
  if (R[i]>ans) res+=dfs(i+1,big+1,equal,small,ex*(R[i]-max(ans,L[i]-1))*tmp);
  if (L[i]<ans) res+=dfs(i+1,big,equal,small+1,ex*(min(ans,R[i]+1)-L[i])*tmp);
  return res;
}
inline double expect()
{
  double res=0;/*int ok=0;
  for (int i=1;i<=n;i++)
    if (L[i]<=ans&&R[i]>=ans) ok=1;
      number=i,res+=dfs(1,0,0,0,in[R[i]-L[i]+1]);*/
  res=dfs(1,0,0,0,1);
  return res;
}
int main()
{
  scanf("%d",&n);
  for (i=1;i<=10000;i++) in[i]=1.0/i;
  for (i=1;i<=n;i++)
    scanf("%d%d",&L[i],&R[i]);
  for (ans=1;ans<=10000;ans++)
    wri+=ans*expect();
  printf("%.15lf",wri);
}
