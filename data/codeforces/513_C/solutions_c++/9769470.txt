// waMachine
#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
int n;
int lft[6],rgt[6];
double rec(int pos,int tar,int exact,int large){
 if(pos==n){
   if((exact>=2)||(exact&&large)) return tar*1.0;
   else return 0.0;
 }
 double res = 0.0;
 int diff = rgt[pos]-lft[pos]+1;
 if(tar>=lft[pos] && tar<=rgt[pos])
   res += rec(pos+1,tar,exact+1,large);
 int p,q;
 p = lft[pos];
 q = min(rgt[pos],tar-1);
 if(p<=q)
  res += (q-p+1)*rec(pos+1,tar,exact,large);
 p = max(tar+1,lft[pos]);
 q = rgt[pos];
 if(large==0 && p<=q)
   res += (q-p+1)*rec(pos+1,tar,exact,1);
 return res/(diff*1.0);
}
int main(){
 cin >> n;
 for(int i=0;i<n;i++)
  cin >> lft[i] >> rgt[i];
 double res = 0.0;
 for(int i=1;i<=10000;i++)
  res += rec(0,i,0,0);
 printf("%.9lf\n",res);
 return 0;
}
