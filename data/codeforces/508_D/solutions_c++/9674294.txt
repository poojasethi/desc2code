#include<map>
#include<stack>
#include<queue>
#include<cstdio>
#include<cctype>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<algorithm>
#define MAXB 62
#define MAXN 200000

using namespace std;
stack<char>s;
int start[MAXB*MAXB+56];
char ch[]="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
int ord(char c)
{
	if(isdigit(c))
		return c-'0';
	if('A'<=c&&c<='Z')
		return c-'A'+10;
	if('a'<=c&&c<='z')
		return c-'a'+36;
	return -1;
}
int HASH(string s)
{
	return ord(s[0])*MAXB+ord(s[1]);
}
int edge[MAXB*MAXB+56][MAXB*MAXB+56];
void addedge(int u,int v)
{
	edge[u][v]++;
	return ;
}
void chk(int u)
{
	for(int v=0;v<MAXB*MAXB;v++)
	{
		if(edge[u][v])
		{
			edge[u][v]--;
			chk(v);
		}
	}
	s.push(ch[u%MAXB]);
	return ;
}
int main()
{
	int n,i,u,v,numberofsingularpoint=0;
	string st;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	{
		cin>>st;
		u=HASH(st.substr(0,2));
		v=HASH(st.substr(1,2));
		addedge(u,v);
		start[u]++;
		start[v]--;
	}
	for(i=0;i<MAXB*MAXB;i++)
		if(start[i]>0)
		{
			u=i;
			v=-1;
			numberofsingularpoint+=start[i];
		}
	if(numberofsingularpoint>1)
		printf("NO");
	else
	{
		chk(u);//u可能未被i赋值
		if(s.size()<n+1U)
			printf("NO");
		else
		{
			puts("YES");
			s.push(ch[u/MAXB]);
			while(s.size())
			{
				putchar(s.top());
				s.pop();
			}
		}
	}
	return 0;
}

  	 		  	 	 		 		 	 				 		 		