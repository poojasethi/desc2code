#include <iostream>
#include <vector>
#include <algorithm>
#include<cstdio>
#include<string>
#include<string.h>
using namespace std;
#define maxn 1000000
vector<int> G[maxn];
int cnt[maxn];
int in[maxn];
string ans;
string s;

void dfs(int u){
    while(cnt[u]<G[u].size())
        dfs(G[u][cnt[u]++]);
    s+=u%256;
}


int main()
{
    int n;
    scanf("%d",&n);
    char x[5];
    for(int i=0;i<n;i++){
        scanf("%s",x);
        int u=x[2]*256+x[1];
        int v=x[1]*256+x[0];
        G[u].push_back(v);
        in[v]++;
    }
    
    int inid=-1,outid=-1;
    int sign=1;
    for(int i=0;i<256*256;i++){
        if(!sign) break;
        if(G[i].size()!=in[i]){
            if(G[i].size()-in[i]==1){
                if(outid==-1) outid=i;
                else sign=0;
            }
            else if(G[i].size()-in[i]==-1){
                if(inid==-1) inid=i;
                else sign=0;
            }
            else sign=0;
        }
    }
    if(!sign){ printf("NO\n"); return 0;}
    memset(cnt, 0, sizeof(cnt));
    if(outid==-1) outid=x[2]*256+x[1];
    dfs(outid);
    s+=outid/256;
    if(s.size()!=n+2)
    {
        printf("NO\n");
    }
    else
    {
        printf("YES\n");
        cout<<s;
    }
}
