//Some idea from Osama

#include<bits/stdc++.h>

using namespace std;

vector<int> adj[70000];
int lst[70000];
int deg[70000];
vector<int> ans;

void euler(int cur)
{
    while(lst[cur]<adj[cur].size())
    {
        int to=adj[cur][lst[cur]];
        lst[cur]++;
        euler(to);
        ans.push_back(to);
    }
}

void print()
{
    cout<<"YES\n";
    reverse(ans.begin(),ans.end());
    string s;
    char c=ans[0]/266;
    s.push_back(c);
    for(int i=0;i<ans.size();i++)
    {
        c=ans[i]%266;
        s.push_back(c);
    }
    cout<<s<<endl;
}

int main()
{
//    freopen("in.txt","r",stdin);
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    int n;
    cin>>n;
    int st;
    for(int i=0;i<n;i++)
    {
        string s;
        cin>>s;
        int a=s[0]*266+s[1];
        st=a;
        int b=s[1]*266+s[2];
        adj[a].push_back(b);
        deg[a]++;
        deg[b]--;
    }
    int n_st=0,n_en=0;
    for(int i=0;i<70000;i++)
    {
        n_st+=(deg[i]==1);
        n_en+=(deg[i]==-1);
        if(deg[i]>1 || deg[i]<-1 || n_st>1 || n_en>1)
        {
            cout<<"NO\n";
            return 0;
        }
        if(deg[i]==1)
            st=i;
    }
    euler(st);
    ans.push_back(st);
    if(ans.size()!=n+1)
        cout<<"NO\n";
    else
        print();
    return 0;
}
