#include<cstdio>
#include<cstring>
#include<vector>
#include<algorithm>
#include<iostream>
using namespace std;
const int MAX=300000;
int n;
string s,ans;
vector <int> edge[MAX];
int in[MAX],out[MAX],cnt[MAX];
void dfs(int i){
	while(cnt[i]<edge[i].size()){
		dfs(edge[i][cnt[i]++]);
	}
	ans+=(char)i%256;
}
int main(){
	scanf("%d",&n);
	memset(in,0,sizeof(in));
	memset(out,0,sizeof(out));
	int u,v;
	for(int i=0;i<n;i++){
		edge[i].clear();
	}
	for(int i=0;i<n;i++){
		cin>>s;
		u=s[0]*256+s[1];
		v=s[1]*256+s[2];
		edge[u].push_back(v);
		in[v]++;out[u]++;
	}
	int start=u,l=0,r=0,flag=0;
	for(int i=0;i<MAX;i++){
		int d=in[i]-out[i];
		if(d==-1){
			l++;start=i;
		}
		else if(d==1){
			r++;
		}
		else if(d!=0){
			flag=1;break;
		}
		if(l>1||r>1){
			flag=1;break;
		}
	}
	if(flag){
		printf("NO\n");
		return 0;
	}
	ans="";
	dfs(start);
	ans+=(char)(start/256);
	reverse(ans.begin(),ans.end());
	if(ans.length()!=n+2){
		printf("NO\n");
	}
	else{
		printf("YES\n");
		cout<<ans<<endl;
	}
	return 0;
} 
 	   			 	   		 	 	 	  							