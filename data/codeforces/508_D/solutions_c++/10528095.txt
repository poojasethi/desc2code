#include<bits/stdc++.h>
using namespace std;

const int mx=1e5;
char s[5];
vector<int>g[mx];
int id[mx],od[mx],cnt=0;
list<int>ans;

void dfs(int u,list<int>::iterator it){
    cnt++;
    list<int>::iterator nx = ans.insert(it,u);
    while(!g[u].empty()){
        int v=g[u].back();
        if(g[v].empty()){
            v=g[u].front();
            swap(g[u].back(),g[u].front());
        }
        g[u].pop_back();
        dfs(v,nx);
    }
}
int main(){
    int n,u,v,no=0;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%s",s);
        u=s[0]*123+s[1];
        v=s[1]*123+s[2];
        g[u].push_back(v);
        od[u]++,id[v]++;
    }
    u=-1;
    for(int i=0;i<mx;i++){
        if(id[i]==od[i]){
            if(u==-1 && id[i]!=0)u=i;
        }
        else if(od[i]==id[i]+1) u=i,no++;
        else if(id[i]==od[i]+1) no++;
        else no=1e6;
    }
    if(u!=-1) dfs(u,ans.end());
    
    if(u==-1 || no>2 || cnt-1!=n){
        puts("NO");
        return 0;
    }
    reverse(ans.begin(),ans.end());
    list<int>::iterator it=ans.begin();
    puts("YES");
    printf("%c",(*it)/123);
    for(;it!=ans.end();it++){
        printf("%c",char((*it)%123));
    }
    printf("\n");
    return 0;
}
