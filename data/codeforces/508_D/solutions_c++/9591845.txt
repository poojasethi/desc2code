#include <iostream>
#include <vector>
using namespace std;



vector<int> a[70000];
vector<int> b[70000];
vector<int> nd;
bool is[70000];
bool c[70000];

void cky(int k){
  if (c[k]) return;
  c[k]=true;
  for (int i=0; i<a[k].size(); ++i){cky(a[k][i]);}
  for (int i=0; i<b[k].size(); ++i){cky(b[k][i]);}
}


void find(int c){
  while (b[c].size()){
    int t=b[c][b[c].size()-1];
    b[c].pop_back();
    find(t);
    cout << (char)(c/256);
  }
}


int main(){
  cin.sync_with_stdio(false);
  int n;
  cin >> n;
  string l;
  for (int i=0; i<n; ++i){
    cin >> l;
    if (!is[l[0]*256+l[1]]){
      is[l[0]*256+l[1]]=true;
      nd.push_back(l[0]*256+l[1]);
    }
    if (!is[l[1]*256+l[2]]){
     is[l[1]*256+l[2]]=true;
     nd.push_back(l[1]*256+l[2]);
    }
    a[l[0]*256+l[1]].push_back(l[1]*256+l[2]);
    b[l[1]*256+l[2]].push_back(l[0]*256+l[1]);
  }
  cky(nd[0]);
  for (int i=0; i<nd.size(); ++i) if (!c[nd[i]]){ cout << "NO"; return 0;}
  int aa=0; int bb=0; int ai=nd[0]; int bi=nd[0];
  for (int i=0; i<70000; ++i){
    if (a[i].size()<b[i].size()){ bb+=b[i].size()-a[i].size(); bi=i;}
    if (b[i].size()<a[i].size()){ aa+=a[i].size()-b[i].size(); ai=i;}
  }
  if (aa>1 || bb>1){ cout << "NO"; return 0; }
  

  cout << "YES" << endl;
  cout << (char)(ai/256);
  find(bi);
  cout << (char)(bi%256);
  cout << endl;
}