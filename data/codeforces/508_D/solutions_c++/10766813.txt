#include<iostream>
#include<cmath>
#include<cstdio>
#include<string>
#include<algorithm>
using namespace std;
int ind=0;
typedef struct node{
	int hash;
	struct node *next;
}node;
int in[1000000]={0},out[1000000]={0},ans[1000000];
node *lis[1000000]={NULL};
void insert(int a,int b){
	node *temp=(node *)malloc(sizeof(node));
	temp->hash=b;
	temp->next=lis[a];
	lis[a]=temp;
	in[b]++;
	out[a]++;
}
void dfs(int src){
	int val=src%256;
	while(lis[src]!=NULL){
		int p=lis[src]->hash;
		lis[src]=lis[src]->next;
		dfs(p);
	}
	ans[ind++]=val;
}
int main(){
	int i,n,j,s,c=0;
	cin>>n;
	for(i=0;i<n;i++){
		char c1,c2,c3;
		string str;
		cin>>str;
		c1=str[0];
		c2=str[1];
		c3=str[2];
		int l1= (c1*256+c2);
		int l2= (c2*256+c3);
		insert(l1,l2);
		s=l1;
	}
	for(i=0;i<=200000;i++){
		if(out[i]-in[i]==1){
			c++;
			s=i;
		}
		else if(in[i]-out[i]==1)c++;
		else if(out[i]-in[i]!=0){cout<<"NO\n";return 0;}
	}
	if(c!=0 && c!=2){cout<<"NO\n";return 0;}
	dfs(s);
	ans[ind++]=s/256;
	if(ind==n+2)cout<<"YES\n";
	else{cout<<"NO\n";return 0;}
	for(i=ind-1;i>=0;i--)printf("%c",ans[i]);cout<<endl;
	return 0;
}
