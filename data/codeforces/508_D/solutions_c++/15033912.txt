#include <bits/stdc++.h>
using namespace std;
const int N = 256*150;
vector<int> v[N];
string ret;
void dfs(int ind){
	int i,next;
	while(!v[ind].empty()){
		next= v[ind].back();
		v[ind].pop_back();
		dfs(next);
	}
	ret+=ind%256;
}
int cc[N];
int main(){
	int pre,suf,n,i;cin>>n;
	string s;//124 max 
	int maxi=0,mini = 1e9;
	memset(cc,0,sizeof(cc));
	for(i=0;i<n;++i){
		cin>>s;
		pre = 256*s[0]+s[1];
		suf = 256*s[1]+s[2];
		maxi = max(maxi,max(pre,suf));
		mini = min(mini,min(pre,suf));
		v[pre].push_back(suf);
		cc[pre]++;
		cc[suf]--;
	}
	int start=0,p=0;
	cc[start]=0;
	for(i=mini;i<=maxi;++i)
		if(cc[i]>=1)
			++p,start=i;
	if(cc[start]>1 || p>1){
		cout<<"NO\n";return 0;
	}
	if(start==0)
		for(i=0;i<N;++i)
			if(!v[i].empty()){
				start=i;break;//rotation. so choose anything.
			}
	dfs(start);
	reverse(ret.begin(),ret.end());
	ret= char((start/256))+ret;
	int size = ret.size();
	if(size!=n+2)
		printf("NO\n");
	else
		printf("YES\n"),cout<<ret<<endl;
}
