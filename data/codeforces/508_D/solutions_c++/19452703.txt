#include<bits/stdc++.h>
using namespace std;
const int N=20000,M=200040;
int n,m,tot,last[N]={},next[M]={},end[M]={},total_edge=0;
int in[N]={},out[N]={},path[M]={},len=0;
char ch[5]={};
inline void add_edge(int u,int v)
{
	next[++total_edge]=last[u];
	last[u]=total_edge;
	end[total_edge]=v;
	++out[u];
	++in[v];
}
void init()
{
	scanf("%d",&n);
	for(int i=1;i<=n;++i)
	{
		scanf("\n%s",ch);
		int u=ch[0]*140+ch[1];
		int v=ch[1]*140+ch[2];
		add_edge(u,v);
	}
}
void dfs(int s)
{
	while(last[s])
	{
		int i=last[s];
		last[s]=next[i];
		dfs(end[i]);
	}
	path[++len]=s;
}
void work()
{
	int s=0;
	for(int i=0;i<N;++i)
		if(out[i]>in[i])
		{
			if(s || out[i]-in[i]>=2)
			{
				puts("NO");
				return;
			}
			s=i;
		}
	if(s==0)
		s=ch[0]*140+ch[1];
	dfs(s);
	if(len<=total_edge)
	{
		puts("NO");
		return;
	}
	puts("YES");
	putchar(path[len]/140);
	for(int i=len;i>=1;--i)
		putchar(path[i]%140);
	putchar('\n');
}
int main()
{	
	init();
	work();
	return 0;
}