// waMachine
#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
const int mod = 1e9+7;
vector<pair<int,int> > G[200005];
int indeg[200005],outdeg[200005],k=0;
bool visit[200005];
map<string,int> ma;
map<int,string> mb;
string s;
bool flag = false;
int gone[200005];
int diff = 0;
int solve(string s){
 if(ma.find(s) == ma.end()){
   ma[s] = k;
   mb[k] = s;
   k++;
 }
 return ma[s];
}
void dfs(int u){
 for(;gone[u]<G[u].size();gone[u]++){
  if(!visit[G[u][gone[u]].second]){
    visit[G[u][gone[u]].second] = true;
    dfs(G[u][gone[u]].first);
  }
 }
 if(!flag){
  flag = true;
  s += mb[u][1];
 }
 s += mb[u][0];
}
int main(){
  //freopen("qns.txt","r",stdin);
  //freopen("ans.txt","w",stdout);
  int n;
  string str;
  cin >> n;
  for(int i=0;i<n;i++){
    cin >> str;
    int u = solve(str.substr(0,2));
    int v = solve(str.substr(1,2));
    indeg[v]++; outdeg[u]++;
    G[u].push_back(make_pair(v,i));
  }
  s = "";
  int strt = 0;
  for(int i=0;i<k;i++){
    if(outdeg[i]>indeg[i]){
      diff += outdeg[i]-indeg[i];
      if(diff>1){
        puts("NO"); return 0;
      }
      strt = i;
    }
  }
  dfs(strt);
  if(s.length()==n+2){
    puts("YES");
    for(int i=s.length()-1;i>=0;i--)
      cout << s[i];
    cout << endl;
  }
  else puts("NO");
  return 0;
}
