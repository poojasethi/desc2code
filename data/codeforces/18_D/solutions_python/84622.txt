def dp(w, n, m):
    last = [-1 for x in range(m + 1)]
    next = [-1 for x in range(n)]
    dp = [0 for x in range(n + 1)]

    for i in range(n - 1, -1, -1):
        if (w[i][0] == 0):
            if (last[w[i][1]] != -1):
                next[i] = last[w[i][1]]
        else:
            last[w[i][1]] = i


    for i in range(n - 1, -1, -1):
        dp[i] = dp[i + 1]
        if (next[i] != -1):
            dp[i] = max(dp[i], 2 ** w[i][1] + dp[next[i] + 1])

    return dp[0]

if __name__ == "__main__":
    n = int(raw_input())
    m = 0
    w = []

    for i in range(n):
        [a, b] = [x for x in raw_input().split()]
        w.append([0 if (a == "win") else 1, int(b)])
        m = max(m, int(b))

    print dp(w, n, m)
