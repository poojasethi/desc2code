#include <cstdio>
#include <cstring>
#include <iostream>
#include <string>
using namespace std;
const int MX = 5010;
const int MXPOW = 2010;
const int ARRSZ = 69;
const int MOD = 1000000000;

struct bigi {
	int dat[ARRSZ];
	bigi() {
		memset(dat, 0, sizeof(dat));
	}
	void mult2() {
		int carry = 0;
		for (int i = 0; i < ARRSZ; ++i) {
			dat[i] = dat[i] * 2 + carry;
			carry = dat[i] / MOD;
			dat[i] %= MOD;
		}
	}
	void add(const bigi& o) {
		int carry = 0;
		for (int i = 0; i < ARRSZ; ++i) {
			dat[i] += o.dat[i] +carry;
			carry = dat[i] / MOD;
			dat[i] %= MOD;
		}
	}
	void p() {
		int i = ARRSZ;
		while (--i && dat[i] == 0);
		printf("%d", dat[i]);
		while (--i >= 0) {
			printf("%09d", dat[i]);
		}
		putchar('\n');
	}
	bool operator<(const bigi& o) const {
		int i = ARRSZ;
		while (--i && dat[i] == o.dat[i]);
		return dat[i] < o.dat[i];
	}
};
int bck[MX], fwd[MX], fwdv[MX];
bigi mem[MX], pow2[MXPOW];
int main() {
	pow2[0].dat[0] = 1;
	for (int i = 1; i < MXPOW; ++i) {
		(pow2[i] = pow2[i - 1]).mult2();
	}
	int n;
	cin >> n;
	memset(bck, -1, sizeof(bck));
	memset(fwd, -1, sizeof(fwd));
	for (int i = 0; i < n; ++i) {
		string s;
		int v;
		cin >> s >> v;
		if (s[0] == 'w') {
			bck[v] = i;
			fwdv[i] = v;
		} else {
			if (bck[v] != -1) {
				fwd[bck[v]] = i;
				bck[v] = -1;
			}
		}
	}
	bigi cur;
	for (int i = 0; i < n; ++i) {
		if (fwd[i] != -1) {
			(mem[fwd[i]] = cur).add(pow2[fwdv[i]]);
		}
		cur = max(cur, mem[i]);
	}
	cur.p();
}
