#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
#include<vector>
using namespace std;
struct dian{
  int w,id;
}a[100005];
int cmp(dian n1,dian n2)
{
  if (n1.w==n2.w) return n1.id<n2.id;
  return n1.w>n2.w;
}
vector<int>two[5005];
vector<int>add(vector<int>v1,vector<int>v2)
{
  vector<int>v;
  int l=max(v1.size(),v2.size()); 
  int c=0;
  for (int i=0;i<l;i++)
  {
	int a1=i<v1.size()?v1[i]:0;
	int a2=i<v2.size()?v2[i]:0;
	v.push_back((a1+a2+c)%10);
	c=(a1+a2+c)/10;
  }
  if (c) v.push_back(c);
  return v;
}
int vis[5005],d[5005];
char s[5005][10];
int main()
{
  int i,j,k,n,cnt;
  two[0].push_back(1);
  for (i=1;i<=3001;i++)
	two[i]=add(two[i-1],two[i-1]);
  memset(vis,0,sizeof(vis));
  scanf("%d",&n);
  cnt=0;
  for (i=1;i<=n;i++)
  {
	scanf("%s%d",s[i],&d[i]);
	if (s[i][0]=='s'){
	  a[++cnt].w=d[i];
	  a[cnt].id=i;
	}
  }
  vector<int>ans;
  ans.push_back(0);
  if (cnt!=0)sort(a+1,a+cnt+1,cmp);
  for (i=1;i<=cnt;i++)
  {
	k=0;
	for (j=a[i].id;j>=1;j--)
	  if (vis[j]) k=1;
	  else if (s[j][0]=='w'&&d[j]==a[i].w) break;
	if (j==0||k) continue;
	for (k=a[i].id;k>=j;k--) vis[k]=1;
	ans=add(ans,two[a[i].w]);
  }
  for (i=ans.size()-1;i>=0;i--) printf("%d",ans[i]);
  printf("\n"); 
  return 0;
} 
