#include <cstdio>
#include <algorithm>
using namespace std;
int Pow[2003][1003],A[5003],Fcnt,n;
pair<int,int> F[5003];
char s[10];
int Ans[1003];
inline bool Cmp(const pair<int,int>& A,const pair<int,int>& B)
{
	return A.first>B.first || A.first==B.first && A.second<B.second;
}
int main()
{
	scanf("%d",&n);
	Ans[0]=1;
	Pow[0][0]=Pow[0][1]=1;
	for (int i=1;i<=2000;i++)
	{
		for (int j=1;j<=Pow[i-1][0];j++)
			Pow[i][j]=Pow[i-1][j]<<1;
		Pow[i][0]=Pow[i-1][0];
		for (int j=1;j<=Pow[i][0];j++)
			if (Pow[i][j]>=10) Pow[i][j+1]+=Pow[i][j]/10,Pow[i][j]=Pow[i][j]%10;
		while (Pow[i][Pow[i][0]+1]) Pow[i][Pow[i][0]+1]+=Pow[i][Pow[i][0]]/10,Pow[i][Pow[i][0]]%=10,Pow[i][0]++;
	}
	for (int i=1;i<=n;i++)
	{
		scanf("%s%d",s,A+i);
		if (s[0]=='s') F[++Fcnt]=pair<int,int>(A[i],i),A[i]=-1;
	}
	sort(F+1,F+Fcnt+1,Cmp);
	for (int i=1,pos;i<=Fcnt;i++)
	{
		bool ff=false;
		pos=0;
		for (int j=F[i].second;j;j--)
		{
			if (A[j]==-2) break;
			if (A[j]==F[i].first)
			{
				ff=true;
				pos=j;
				break;
			}
		}
		if (!ff) continue;
		for (int j=1;j<=Pow[F[i].first][0];j++)
			Ans[j]+=Pow[F[i].first][j];
		Ans[0]=max(Ans[0],Pow[F[i].first][0]);
		for (int j=1;j<=Ans[0];j++)
			if (Ans[j]>=10) Ans[j+1]+=Ans[j]/10,Ans[j]%=10;
		while (Ans[Ans[0]+1]) Ans[Ans[0]+1]+=Ans[Ans[0]]/10,Ans[Ans[0]]%=10,Ans[0]++;
		for (int j=pos;j<=F[i].second;j++) A[j]=-2;
	}
	printf("%d",Ans[Ans[0]]);
	for (int i=Ans[0]-1;i;i--) printf("%d",Ans[i]);
	return 0;
}
