#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <string>
#include <vector>
#include <map>
#include <queue>
#include <set>
#define DBLE 1e-8
#define PI 3.1415926535898
#define INF 1000000000
#define MAXX 2010
#define MAXN 5010
using namespace std;
struct _node
{
    bool x[MAXN];
    bool operator < (const _node b)const
    {
        for(int i=2000;i>=0;--i)
            if(x[i]!=b.x[i])
                return x[i]<b.x[i];
        return 0;
    }
}dp[MAXN];
int pos[MAXX],p=0;
char ans[800];
void mul(bool add)
{
    int prev=add;
    for(int i=0;i<=p;++i)
        ans[i]=(ans[i]*2+prev),prev=ans[i]/10,ans[i]%=10;
    if(prev)
        ans[++p]=prev;
}
int main()
{
    int n;
    _node best;
    char order[5];
    for(int i=0;i<MAXX;++i)
        best.x[i]=0;
    scanf("%d",&n);
    for(int i=1;i<=n;++i)
    {
        int tmp;
        dp[i]=best;
        scanf("%s%d",order,&tmp);
        if(order[0]=='w')
            pos[tmp]=i;
        else    if(pos[tmp])
        {
            bool tt=dp[pos[tmp]].x[tmp];
            dp[pos[tmp]].x[tmp]=1;
            dp[i]=max(dp[i],dp[pos[tmp]]);
            best=dp[i];
            dp[pos[tmp]].x[tmp]=tt;
        }
    }
    memset(ans,0,sizeof(ans));
    for(int i=2000;i>=0;--i)
        mul(best.x[i]);
    for(int i=p;i>=0;--i)
        putchar(ans[i]+'0');
    return 0;
}
