#include "bits\stdc++.h"
using namespace std;
int num[2010][700];
int n;
char cmd[7];
int Pow;
int lastpos_Pow[2010];
struct s
{
	int Pow, l, r;
}ans[2510];

bool cmp(s a, s b)
{
	return a.Pow > b.Pow; 
}

bool vis[5010];

int tot_ans;
int res[800];

void add(int n1[], int n2[], int n3[])
{
	int i, len = max(n1[0], n2[0]) + 1, c = 0;
	memset(n3, 0, sizeof(n3)); 
	for(i = 1; i <= len; ++i) {
		n3[i] = n2[i] + n1[i] + c;
		c = n3[i] / 10;
		n3[i] %= 10; 
	}
	n3[0] = len;
	if(!n3[len])
		--n3[0];
}

int main()
{
	int i;
	num[0][0] = 1, num[0][1] = 1;
	for(i = 1; i <= 2000; ++i) {
		add(num[i - 1], num[i - 1], num[i]); 
	} 
	scanf("%d", &n);
	for(i = 1; i <= n; ++i) {
		scanf("%s%d", cmd, &Pow);
		if(cmd[0] == 'w') {
			//��¼lastpos_Pow
			lastpos_Pow[Pow] = i; 
		}
		else {
			if(lastpos_Pow[Pow]) {
				//����һ�����;
				++tot_ans;
				ans[tot_ans].l = lastpos_Pow[Pow];
				ans[tot_ans].r = i;
				ans[tot_ans].Pow = Pow;
				lastpos_Pow[Pow] = 0; 
			}
		}
	}
	sort(ans + 1, ans + 1 + tot_ans, cmp);
	for(i = 1; i <= tot_ans; ++i) {
		bool ok = 1;
		//ɨ��һ��vis��䣬��fail���� bool ok = 1;
		for(int j = ans[i].l; j <= ans[i].r; ++j) {
			if(vis[j]) {
				ok = 0;
				break;
			}
		}
		if(ok) {
			add(res, num[ans[i].Pow], res);
			//����һ�� vis ��䣻
			for(int j = ans[i].l; j <= ans[i].r; ++j) {
				vis[j] = 1;
			}
		} 
	}
	if(res[0] == 0)
		res[0] = 1;
	for(int j = res[0]; j >= 1; --j) {
		printf("%d", res[j]);
	}
	puts("");
}
