#include <iostream>
#include<bitset>
#include<cstdio>
#include<cstring>
using namespace std;
#define maxn 5001
int st[2005];
int ss[2005];
bool sbool=false;
bitset<2001>dp[maxn];
bitset<2001>ans;
bitset<2001>temp;
bool tp[maxn];
int p[maxn],wp[maxn];
void mul()
{
    int i,res;
    if(!sbool)
    {
        st[0]=1;
        for(i=1;i<=2004;i++)st[i]=0;
        sbool=true;return ;
    }
    res=0;
    for(i=0;i<=2004;i++)
    {
        int u=(res+st[i]*2);
        res=u/10;
        st[i]=u%10;
    }
}
void add()
{
    int res,i;
    for(i=0,res=0;i<=2004;i++)
    {
        int u=(ss[i]+st[i]+res);
        ss[i]=u%10;
        res=u/10;
    }
}
bool cmp(bitset<2001>a,bitset<2001>b)
{
    for(int i=2000;i>=0;i--)
    {
        if(a[i]!=b[i]){
        return a[i]<b[i];
        }
    }
    return false;
}

int main()
{
    int i,n,k,pos;
    char s[6];
    scanf("%d",&n);
    memset(wp,0,sizeof(wp));
    ans.reset();
    temp.reset();
    for(i=1;i<=n;i++)
    {
        scanf("%s%d",s,&k);
        if(s[0]=='s')
        {
            pos=wp[k];
            if(pos!=0)
            {
                temp=dp[pos];
                temp.set(k);
                if(cmp(ans,temp))
                    ans=temp;
            }
        }
        else
        {
            wp[k]=i;
            dp[i]=ans;
        }
    }

    for(i=0;i<=2004;i++)st[i]=0;
    for(i=0;i<=2000;i++)
    {
        mul();
        if(ans.test(i))
        add();
    }
    pos=0;
    for(i=2004;i>=0;i--)
        if(ss[i]!=0)
        {
            pos=i;break;
        }
    for(i=pos;i>=0;i--)
        printf("%d",ss[i]);
    printf("\n");
    return 0;
}

 	 		    	 	   	 		 	  	  			