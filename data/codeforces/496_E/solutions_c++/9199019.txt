#include <bits/stdc++.h>
#define L first
#define R second
#define MP make_pair
#define LL long long
#define PB push_back

using namespace std;

typedef pair<LL, LL> pieL;

const int maxn = 1000 * 100 + 2;
LL n, m, par[maxn];
vector<pair<pieL, pieL> > v;
multiset<pair<LL, pair<LL, LL> > > st;

bool cmp(pair<pieL, pieL> a, pair<pieL, pieL> b){
	if(a.L.L == b.L.L && ((a.R.L == 0 && b.R.L != 0) || (a.R.L != 0 && b.R.L == 0)))
		return (b.R.L < a.R.L);
	return (a < b);
}

void bye(){
	cout << "NO" << endl;
	exit(0);
}

main(){
	LL l, r, k;
	cin >> n;
	for(int i = 0;i < n;i ++)
		cin >> l >> r,
		v.PB(MP(MP(l, r), MP(0, i)));
	cin >> m;
	for(int i = 0;i < m;i ++)
		cin >> l >> r >> k,
		v.PB(MP(MP(l, r), MP(k, i)));
	sort(v.begin(), v.end(), cmp);
	for(int i = 0;i < v.size();i ++){
		if(v[i].R.L != 0){
			st.insert(MP(v[i].L.R, MP(v[i].R.R, v[i].R.L)));
			continue;
		}
		multiset<pair<LL, pair<LL, LL> > >::iterator it = st.lower_bound(MP(v[i].L.R, MP(0, 0)));
		if(it == st.end())
			bye();
		pair<LL, pair<LL, LL> > an = *it;
		st.erase(it);
		par[v[i].R.R] = an.R.L;
		an.R.R --;
		if(an.R.R > 0)
			st.insert(an);
	}
	cout << "YES" << endl;
	for(int i = 0;i < n;i ++)
		cout << par[i] + 1 << " ";
	cout << endl;
	return 0;
}
