#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <set>
#define N 100010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
    int x,y,z,id;
    inline bool operator < (const ww &A) const {
        return x<A.x;
    }
} a[N],b[N];
int i,j,k,n,m;
int an[N];
multiset<ww> S;
typedef multiset<ww>::iterator w1;
inline bool cc1(const ww &a,const ww &b) {
    return a.y>b.y;
}
inline void fail() {
    printf("NO\n");
    exit(0);
}
int main() {
    scanf("%d",&n);
    For(i,1,n) scanf("%d%d",&a[i].x,&a[i].y),a[i].id=i;
    sort(a+1,a+n+1,cc1);
    scanf("%d",&m);
    For(i,1,m) scanf("%d%d%d",&b[i].x,&b[i].y,&b[i].z),b[i].id=i;
    sort(b+1,b+m+1,cc1);
    j=1;
    For(i,1,n) {
        ww A=a[i];
        for (;j<=m&&b[j].y>=A.y;j++) {
            ww B=b[j];
            S.insert(B);
        }
        w1 B=S.lower_bound((ww){A.x+1});
        if (B==S.begin()) fail();
        B--;
        ww C=*B;
        S.erase(B);
        an[A.id]=C.id;
        C.z--;
        if (C.z) S.insert(C);
    }
    printf("YES\n");
    For(i,1,n) printf("%d ",an[i]);
    printf("\n");
    return 0;
}