#include <cstdio>
#include <cstring>
#include <set>
#include <iostream>
#include <algorithm>
using namespace std;
#define MP(a,b) make_pair(a,b)
typedef pair<int,int> pii;
const int maxn = 100010;

struct node{
	int l,r,id,k;
	inline void in(){ scanf("%d%d",&l,&r);}
	friend bool operator < (const node & a,const node &b){ return (a.r == b.r) ? a.l < b.l : a.r < b.r;}
}a[maxn],b[maxn];

int n,m;
int ans[maxn];
set<pii> s;

int main(){
	scanf("%d",&n);
	for(int i = 1; i <= n; ++i) a[i].in(),a[i].id = i;
	scanf("%d",&m);
	for(int i = 1; i <= m; ++i) b[i].in(),b[i].id = i,scanf("%d",&b[i].k);
	sort(a + 1,a + n + 1),sort(b + 1,b + m + 1);
	int now = 1;
	for(int i = 1; i <= m; ++i){
		while(now <= n && a[now].r <= b[i].r) s.insert(MP(a[now].l,a[now].id)),now++;
		int cnt = 0;
		set<pii>::iterator it,st;
		st = it = s.lower_bound(MP(b[i].l,0));
		while(cnt < b[i].k && it != s.end()){
			ans[it->second] = b[i].id;
			it++,cnt++;
		}
		s.erase(st,it);
	}
	if(now >n && s.empty()){
        printf("YES\n");
        for(int i = 1; i <= n; ++i) printf("%s%d",i == 1 ? "" : " ",ans[i]);
        puts("");
	}
	else printf("NO\n");
	return 0;
}
