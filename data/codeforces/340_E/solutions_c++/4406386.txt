#include <iostream>
using namespace std;
typedef long long llint;
const llint MOD = 1000000007;

llint dp[2000+1][2000+1];
llint n, m, k;
llint a[2000];
bool num[2000];
bool pos[2000];

int main() {
	cin >> n;
	
	for (int i = 0; i < n; i++) {
		cin >> a[i];
		
		if (a[i] != -1) {
			num[a[i]-1] = true;
			pos[i] = true;
		}
		else
			m++;
	}
	
	for (int i = 0; i < n; i++)
		if (!num[i] && !pos[i])
			k++;
	
	dp[0][0] = 1;
	for (int i = 1; i <= m; i++) {
		dp[i][0] = (dp[i-1][0]*i) % MOD;
	}
	
	for (int i = 0; i <= m; i++) {
		for (int j = 1; j <= k; j++) {
			if (i < j) break;
			
			dp[i][j] = (dp[i][j-1] - dp[i-1][j-1] + MOD) % MOD;
		}
	}
	
	cout << dp[m][k];
	
	return 0;
}
