// 阶乘和错排数dp
#include <cstdio>
#include <cstring>
#include <set>
typedef long long LL;
const LL M=1000000007LL;
int a=0,b=0,n,in[2005];
LL dp[2005];
std::set<int>st;
inline LL f(int x)
{
    if(x<=1)return 1LL;
    return (LL)(x)*f(x-1)%M;
}
int main()
{
    int i,j,k;
    st.clear();
    scanf("%d",&n);
    for(i=1;i<=n;++i)
    {
        scanf("%d",in+i);
        if(in[i]!=-1)st.insert(in[i]);
    }
    for(i=1;i<=n;++i)
    {
        if(in[i]==-1)
            if(st.count(i))++a;
            else ++b;
    }
    dp[0]=f(a);
    dp[1]=dp[0]*a%M;
    for(i=2;i<=b;++i)
        dp[i]=((LL)a*dp[i-1]+(LL)(i-1)*(dp[i-1]+dp[i-2]))%M;
    printf("%I64d\n",dp[b]);
    return 0;
}

	  				 		 		 	   	   		 	   		