#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
const int MAXN=100005;
vector<int> v[MAXN];
long long a[MAXN],sum,q=1,ma=100000000000000000;
void dfs(int x,int fa,long long d)
{
    q=q/__gcd(q,d)*d;
    if(d>sum || d<0)
    {
        cout<<sum<<'\n';
        exit(0);
    }
    if(v[x].size()==1 && x>1)
        ma=min(ma,d*a[x]);
    for(int i=0; i<v[x].size(); i++)
        if(v[x][i]!=fa)
            dfs(v[x][i],x,d*(v[x].size()-(x!=1)));
}
int main()
{
    int n;
    cin>>n;
    for(int i=1; i<=n; i++)
    {
        cin>>a[i];
        sum+=a[i];
    }
    int x,y;
    for(int i=1; i<n; i++)
    {
        cin>>x>>y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    dfs(1,0,1);
    cout<<sum-ma/q*q<<'\n';
    return 0;
}

 	   				 							 						  	   	