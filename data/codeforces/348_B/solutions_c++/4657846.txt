#include <cstdio>
#include <vector>
#define X first
#define Y second
#define LL long long
#define REP(i,n) for (int i=1;i<=n;++i)
#define FOR(i,n) for (__typeof(n.begin())i=n.begin();i!=n.end();++i)
using namespace std;

const int MAXN=100010;
int n,x,y;
LL ans,w[MAXN];
vector<int> v[MAXN];

LL Gcd(LL a,LL b) {
	if (!b) return a;
	return Gcd(b,a%b);	
}

pair<LL,LL> Dfs(int k,int f) {
	pair<LL,LL> ret; ret.X=1;
	LL lim=999999999999999;
	int son=0;
	FOR(p,v[k]) if (*p!=f) {
		++son;
		pair<LL,LL> tmp=Dfs(*p,k);
		ret.X=ret.X*tmp.X/Gcd(ret.X,tmp.X);
		lim=min(lim,tmp.X*tmp.Y);
	}
	if (!son) return make_pair(1ll,(LL)w[k]);
	if (!ret.X) ret.Y=0;
	else ret.Y=lim/ret.X;
	ret.X=ret.X*son;
	return ret;
}

int main() {
	// freopen("d.in", "r", stdin);
	scanf("%d",&n);
	REP(i,n) scanf("%I64d",&w[i]);
	REP(i,n) ans+=(LL)w[i];
	REP(i,n-1) {
		scanf("%d%d",&x,&y);
		v[x].push_back(y);
		v[y].push_back(x);
	}
	pair<LL,LL> fin=Dfs(1,0);
	printf("%I64d\n",ans-fin.X*fin.Y);
	return 0;
}