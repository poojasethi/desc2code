#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <vector>
using namespace std;

typedef long long LL;
typedef vector<int> CHILDREN;

#define NMAX 100005
LL w[NMAX];
CHILDREN cl[NMAX];
bool visited[NMAX];
LL total = 0;

LL GCD(LL a, LL b) { if (b==0) return a; return GCD(b, a%b); }
LL LCM(LL a, LL b) { return a / GCD(a, b) * b; }

LL calc(int v) {
  visited[v] = true;

  int u, nc = 0;
  LL minw = 0x7FFFFFFFFFFFFFLL, lcm = 1;
  for (int i = 0; i < cl[v].size(); ++i) {
    u = cl[v][i];
    if (!visited[u]) {
      ++nc;
      lcm = LCM(lcm, calc(u));
      if (minw > w[u]) minw = w[u];
    }
  }

  if (nc > 0) {
    w[v] = minw/lcm*lcm*nc;
    lcm *= nc;
  }

  //cout << v << ": " << lcm << " " << w[v] << endl;
  if (w[v] == 0) { cout << total << endl; exit(0); }

  return lcm;
}

int main() {
  int n;
  cin >> n;
  for (int i = 1; i <= n; ++i) {
    cin >> w[i]; total += w[i];
  }
  int x, y;
  for (int i = 1; i <= n-1; ++i) {
    cin >> x >> y;
    cl[x].push_back(y);
    cl[y].push_back(x);
  }
  calc(1);
  cout << total - w[1] << endl;
}
