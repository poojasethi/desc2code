#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define int64 long long
#define N 100010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,t,x,y;
int a[N*2],next[N*2],head[N];
int64 d[N],s[N],f[N],sum;
inline void add(int x,int y) {
	a[++t]=y,next[t]=head[x],head[x]=t;
	a[++t]=x,next[t]=head[y],head[y]=t;
}
void dfs(int x,int y) {
	int v,F=0;
	int64 lcm=1,mi=sum,num=0;
	for (v=head[x];v;v=next[v])
	if (a[v]!=y) {
		dfs(a[v],x);
		if (!s[a[v]]) return;
		int64 A=__gcd(lcm,f[a[v]]);
		if (lcm/A>sum/f[a[v]]) return;
		lcm=lcm/A*f[a[v]];
	}
	for (v=head[x];v;v=next[v])
	if (a[v]!=y) {
		F=1;
		int A=a[v];
		mi=min(mi,s[A]/lcm*lcm);
		num++;
	}
	if (!F) s[x]=d[x],f[x]=1;
	else s[x]=mi*num,f[x]=lcm*num;
}
int main() {
	scanf("%d",&n);
	For(i,1,n) scanf("%I64d",&d[i]),sum+=d[i];
	For(i,1,n-1) {
		scanf("%d%d",&x,&y); add(x,y);
	}
	dfs(1,0);
	printf("%I64d\n",sum-s[1]);
	//for(;;);
	return 0;
}
