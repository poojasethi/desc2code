#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int mx=1e5+10;
const uli oo=2e13;
int a[mx];
vector<int>g[mx];
uli mini;
uli m=1;
uli gcd(uli a,uli b){
   return b==0?a:gcd(b,a%b);
}
void dfs(int u,int pu,uli x){
   uli sz=g[u].size();
   if(u!=pu)sz--;
   if(sz==0){
      if(a[u]<=mini/x)
         mini=uli(a[u])*x;
      //m=min{oo, lcm(x,m)};
      uli g=gcd(x,m);
      m/=g;
      if(x<=oo/m)m*=x;
      else m=oo;
      return;
   }
   x=x*sz;
   x=min(x,oo);
   for(int i=0;i<int(g[u].size());i++){
      int v=g[u][i];
      if(v!=pu)dfs(v,u,x);
   }
}
int main(){
   int n,u,v;
   uli s=0;
   scanf("%d",&n);
   for(int i=0;i<n;i++){
      scanf("%d",a+i);
      s+=uli(a[i]);
   }
   for(int i=0;i<n-1;i++){
      scanf("%d %d",&u,&v);
      g[--u].push_back(--v);
      g[v].push_back(u);
   }
   mini=s;
   dfs(0,0,1);
   if(m>=oo){
      cout<<s<<endl;
      return 0;
   }
   uli ans=m*(mini/m);
   cout<<s-ans<<endl;
   return 0;
}
