#include<cstdio>
#include<algorithm>
#define N 100005
using namespace std;
typedef long long LL;LL num[N],size[N],sum;
const LL INF=1ll<<60ll;
struct arr{int go,next;}a[N*2];
int end[N],P[N],x,y,n,i,cnt;
inline void add(int u,int v){a[++cnt]=(arr){v,end[u]};end[u]=cnt;}
void dfs(int k,int fa)
{
  num[k]=INF;size[k]=1;LL son=0;int go;
  for (int i=end[k];i;i=a[i].next)
  {
    if ((go=a[i].go)==fa) continue;
    dfs(go,k);son++;
    LL t=__gcd(size[k],size[go]);
    if(size[k]/t>num[k]/size[go]){printf("%I64d\n",sum);exit(0);}
    size[k]=size[k]/t*size[go];
    if (num[go]<num[k]) num[k]=num[go];
  }
  size[k]*=son;
  if (!son) {size[k]=1;num[k]=P[k];}
  else num[k]=num[k]*son/size[k]*size[k];
}
int main()
{
  scanf("%d",&n);
  for (i=1;i<=n;i++) scanf("%d",&P[i]),sum+=P[i];
  for (i=1;i<n;i++)
    scanf("%d%d",&x,&y),add(x,y),add(y,x);
  dfs(1,-1);printf("%I64d",sum-num[1]);
  return 0;
}
