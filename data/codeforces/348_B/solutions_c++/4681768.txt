#include<cstdio>
#include<algorithm>
#include<vector>
using namespace std;
int n,u,v,xxx;
long long a[100001],x[100001],ans;
vector <int> E[100001];
int dfs(int now,int head){
    int n_r = 0;
    for(int i=0;i<E[now].size();i++)
        if(E[now][i] != head)
            dfs(E[now][i],now),n_r++;
    if( xxx == 1){ xxx = 1; return 0; }
    if(n_r == 0){ x[now] = 1;return 0; }
    long long tmp = 1e17,sv = 1;
    for(int i=0;i<E[now].size();i++)
        if(E[now][i] != head){
            sv = sv*x[E[now][i]]/__gcd(sv,x[E[now][i]]);
            tmp = min(tmp,a[E[now][i]]);
        }
    if(sv > tmp || xxx == 1){ xxx = 1; return 0; }
    x[now] = sv*(long long)(n_r);
    a[now] = (tmp/sv)*sv*(long long)(n_r);
    return 0;
}
int main(){
    scanf("%d",&n);
    for(int i=1;i<=n;i++){
        scanf("%I64d",&a[i]);
        ans += a[i];
    }
    for(int i=0;i<n-1;i++){
        scanf("%d%d",&u,&v);
        E[u].push_back(v);
        E[v].push_back(u);
    }
    dfs(1,-1);
    if(xxx == 1) a[1] = 0;
    printf("%I64d\n",ans-a[1]);
    return 0;
}