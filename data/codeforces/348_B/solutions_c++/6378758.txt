#include<cstdio>
#include<vector>
#define maxn 100009
using namespace std;
int n;
bool ok=0;
vector<int>G[maxn];
__int64 a[maxn],sum=0;
__int64 gcd(__int64 a,__int64 b)
{
    return b?gcd(b,a%b):a;
}
__int64 lcm(__int64 a,__int64 b)
{
    return a/gcd(a,b)*b;
}
__int64 dfs(int x,int fa)
{
    if(ok)return 1;
    if(fa>0&&G[x].size()==1)
        return 1;
    __int64 L=1,cnt=0,key=(1LL<<62);
    for(int i=0;i<G[x].size();i++)
    {
        int v=G[x][i];
        if(v!=fa)
        {
            L=lcm(dfs(v,x),L);
            if(ok)return 1;
            cnt++;
            key=min(key,a[v]);
        }
    }
    __int64 tmp=key/L;
    a[x]=tmp*L*cnt;
    if(a[x]==0){ok=1;}
    return cnt*L;
}
int main()
{
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
        scanf("%I64d",&a[i]),sum+=a[i];
    for(int i=1;i<=n-1;i++)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        G[x].push_back(y);
        G[y].push_back(x);
    }
    dfs(1,-1);
    if(ok)a[1]=0;
    printf("%I64d\n",sum-a[1]);
}
