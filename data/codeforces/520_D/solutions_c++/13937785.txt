#include<bits/stdc++.h>
using namespace std;
map<pair<long long,long long>,long long>m;
set<long long>s;
#define mod 1000000009
struct po
{
    long long x;
    long long y;
} arr[100005];
long long tell_me(long long x,long long y)
{
    long long ans=0;
    if(m[make_pair(x-1,y-1)])
        ans++;
    if(m[make_pair(x,y-1)])
        ans++;
    if(m[make_pair(x+1,y-1)])
        ans++;
    return ans;
}
void is_possible(long long x,long long y)
{
    long long flag=0;
    if(m[make_pair(x-1,y+1)]&&tell_me(x-1,y+1)==1)
        flag=1;
    if(m[make_pair(x,y+1)]&&tell_me(x,y+1)==1)
        flag=1;
    if(m[make_pair(x+1,y+1)]&&tell_me(x+1,y+1)==1)
        flag=1;
    if(flag==1)
        s.erase(m[make_pair(x,y)]);
    else
        s.insert(m[make_pair(x,y)]);
}
int main()
{
    long long n;
    cin>>n;
    for(long long i=1;i<=n;i++)
    {
        cin>>arr[i].x>>arr[i].y;
        m[make_pair(arr[i].x,arr[i].y)]=i;
    }
    for(long long i=1;i<=n;i++)
        is_possible(arr[i].x,arr[i].y);
        long long ans=0;
    for(long long i=1;i<=n;i++)
    {
         long long k;
        if(i%2==1)
        {
            k=*s.rbegin();
            ans=(ans*n+k-1)%mod;
        }
        else
        {
            k=*s.begin();
            ans=(ans*n+k-1)%mod;
        }
        s.erase(k);
        m[make_pair(arr[k].x,arr[k].y)]=0;
        for(long long j=-2;j<=2;j++)
        {
            for(long long l=-2;l<=2;l++)
            {
                if(m[make_pair(arr[k].x+j,arr[k].y+l)])
                    is_possible(arr[k].x+j,arr[k].y+l);
            }
        }
    }
    cout<<ans<<endl;
}
