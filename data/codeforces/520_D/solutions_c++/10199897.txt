#include<stdio.h>
#include<string.h>
#include<iostream>
#include<algorithm>
#include<set>
#include<map>
using namespace std;
typedef __int64 ll;
#define mod 1000000009
int n,a[100005][2];
map<int,map<int,int> > mp;
set<int> s;		

int check(int x,int y){    //�뿪x,y�Ƿ�᲻�ȶ� 
	if(mp[x-1][y+1])
		if(!mp[x-1][y] && !mp[x-2][y]) return 0;
	if(mp[x][y+1])
		if(!mp[x-1][y]&& !mp[x+1][y]) return 0;
	if(mp[x+1][y+1])
		if(!mp[x+1][y] && !mp[x+2][y]) return 0;
	return 1;
}

int main(void){
	int i,j;
	while(~scanf("%d",&n)){
		mp.clear(); s.clear();
		for(i=0;i<n;i++){
			scanf("%d%d",&a[i][0],&a[i][1]);
			mp[a[i][0]][a[i][1]]=i+1;
		}
		for(i=0;i<n;i++){
			int x=a[i][0],y=a[i][1];
			if(check(x,y)) s.insert(i);
		}
		ll ans=0;
		set<int>::iterator it;
		for(i=0;i<n;i++){
			if(i&1) it=s.begin();
			else it=s.end(),it--;
			int k=*it; s.erase(it);
			ans=(ans*n+k)%mod;
			int x=a[k][0],y=a[k][1]; mp[x][y]=0;
			if(mp[x-1][y-1] && check(x-1,y-1)) s.insert(mp[x-1][y-1]-1); 
			if(mp[x][y-1] && check(x,y-1)) s.insert(mp[x][y-1]-1); 
			if(mp[x+1][y-1] && check(x+1,y-1)) s.insert(mp[x+1][y-1]-1); 
			if(mp[x-1][y] && !check(x-1,y)) s.erase(mp[x-1][y]-1); 
			if(mp[x+1][y] && !check(x+1,y)) s.erase(mp[x+1][y]-1); 
			if(mp[x-2][y] && !check(x-2,y)) s.erase(mp[x-2][y]-1); 
			if(mp[x+2][y] && !check(x+2,y)) s.erase(mp[x+2][y]-1); 
		}
		printf("%I64d\n",ans);
	}
	return 0;
}

