#include<iostream>
#include<string>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<utility>
#define PB push_back
#define pii pair<int,int>
#define MP make_pair
#define mod 1000000009
using namespace std;
typedef long long ll;
int n,a[100000][2];
map<int,map<int,int> > mp;
set<int> st;
bool canf(int x,int y)
{
	if(mp[x-1][y+1])
	{
		if((!mp[x-1][y])&&(!mp[x-2][y]))return false;
	}
	if(mp[x][y+1])
	{
		if((!mp[x-1][y])&&(!mp[x+1][y]))return false;
	}
	if(mp[x+1][y+1])
	{
		if((!mp[x+1][y])&&(!mp[x+2][y]))return false;
	}
	return true;
}
int main()
{
	int t,i,j,k;
	cin>>n;
	for(i=0;i<n;i++)
	{
		cin>>a[i][0]>>a[i][1];
		mp[a[i][0]][a[i][1]]=i+1;
	}
	for(i=0;i<n;i++)
	{
		int x=a[i][0],y=a[i][1];
		if(canf(x,y))
		st.insert(i);
	}
	ll ans=0;
	set<int>::iterator it;
	for(i=0;i<n;i++)
	{
		if(i%2)it=st.begin();
		else
		{
			it=st.end();it--;
		}
		k=*it;
		//cout<<k<<endl;
		ans=(ans*n+k)%mod;
		int x=a[k][0],y=a[k][1];
		mp[x][y]=0;
		st.erase(k);
		if(mp[x-1][y-1]&&canf(x-1,y-1))st.insert(mp[x-1][y-1]-1);
		if(mp[x][y-1]&&canf(x,y-1))st.insert(mp[x][y-1]-1);
		if(mp[x+1][y-1]&&canf(x+1,y-1))st.insert(mp[x+1][y-1]-1);
		if(mp[x-1][y]&&(!canf(x-1,y)))st.erase(mp[x-1][y]-1);
		if(mp[x+1][y]&&(!canf(x+1,y)))st.erase(mp[x+1][y]-1);
		if(mp[x-2][y]&&(!canf(x-2,y)))st.erase(mp[x-2][y]-1);
		if(mp[x+2][y]&&(!canf(x+2,y)))st.erase(mp[x+2][y]-1);
	}
	cout<<ans<<endl;
	return 0;
}
