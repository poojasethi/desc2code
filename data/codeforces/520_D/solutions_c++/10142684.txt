#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <stdio.h>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <string>

#define ll long long
#define ull unsigned long long
#define ld long double
#define mp make_pair
#define fst first
#define snd second
#define pshb push_back
#define ppb pop_back
#define pii pair <int, int>

using namespace std;

const int inf = 1e9 + 9;

map <pii, int> m;
bool used[100003];
set<int> s;
int x[100003], y[100003];

bool free(int t)
{
	for (int dx = -1; dx < 2; dx++)
	{
		int h = m[mp(x[t] + dx, y[t] + 1)] - 1;
		if (h > -1 && !used[h])
		{
			int ans = 0;
			for (int sdx = -1; sdx < 2; sdx++)
			{
				int h = m[mp(x[t] + dx + sdx, y[t])] - 1;
				if (h > -1 && !used[h])
				{
					ans++;
				}
			}

			if (ans == 1)
			{
				return false;
			}
		}
	}

	return true;
}

int main()
{
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> x[i] >> y[i];
		m[mp(x[i], y[i])] = i + 1;
	}

	for (int i = 0; i < n; i++)
	{
		if (free(i))
		{
			s.insert(i);
		}
	}

	ll ans = 0, step = 0;

	while (!s.empty())
	{
		int t;
		if (step % 2)
		{
			t = *s.begin();
		}
		else
		{
			t = *s.rbegin();
		}

		s.erase(t);
		if (!free(t))
		{
			continue;
		}
			
		step++;
		used[t] = true;
		ans = (1ll * ans * n + t) % inf;
		for (int dx = -1; dx < 2; dx++)
		{
			int h = m[mp(x[t] + dx, y[t] - 1)] - 1;
			if (h > -1 && free(h) && !used[h])
			{
				s.insert(h);
			}
		}
	}

	cout << ans;

	return 0;
}