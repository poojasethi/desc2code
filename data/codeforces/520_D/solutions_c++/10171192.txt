#include <bits/stdc++.h>
#define f(i,x,y) for (int i = x; i < y; i++)
#define fd(i,x,y) for(int i = x; i>= y; i--)
#define FOR(it,A) for(typeof A.begin() it = A.begin(); it!=A.end(); it++)
#define vint vector<int>
#define ll long long
#define clr(A,x) memset(A, x, sizeof A)
#define pb push_back
#define pii pair<int,int>
#define mp make_pair
#define fst first
#define snd second
#define ones(x) __builtin_popcount(x)
#define eps (1e-9)
#define NOsync ios_base::sync_with_stdio(0)
#define oo (1<<30)
#define OO (1LL<<60)
#define N 100005

using namespace std;

map<pii,int> M;
set<int> S;
int x[N],y[N];
ll mod = 1000000009;
bool isOK(int a){
    int X = x[a], Y=y[a]+1;
    --X;
    if( M.count(mp(X,Y)) && !M.count(mp(X,Y-1)) && !M.count(mp(X-1,Y-1)) ) return false;
    ++X;
    if( M.count(mp(X,Y)) && !M.count(mp(X-1,Y-1)) && !M.count(mp(X+1,Y-1)) ) return false;
    ++X;
    if( M.count(mp(X,Y)) && !M.count(mp(X,Y-1)) && !M.count(mp(X+1,Y-1)) ) return false;
    return true;
}

void add(int a,int b){
    if(M.count(mp(a,b))){
        int t = M[mp(a,b)];
        if(isOK(t)) S.insert(t);
    }
}

int main(){
    NOsync;
    int n;
    vint res;
    cin>>n;
    f(i,0,n){
        cin>>x[i]>>y[i];
        M[mp(x[i],y[i])]=i;
    }
    f(i,0,n) if(isOK(i)) S.insert(i);
    int k; 
    f(i,0,n){
        do{
            if(i&1) k = *S.begin();
            else k = *S.rbegin();
            S.erase(k);
        }while(!isOK(k));
        res.pb(k);
        M.erase(mp(x[k],y[k]));
        add(x[k]-1,y[k]-1);
        add(x[k],y[k]-1);
        add(x[k]+1,y[k]-1);
    }
    ll ans = 0;
    f(i,0,res.size()) ans = (ans*n+res[i])%mod;
    cout<<ans<<endl;
    return 0;
}
