#include <cstdio>
#include <algorithm>
#include <cstring>
#include <iostream>
typedef long long ll;
const ll Inf = 1e17;
const int S = 50 + 2;
const int N = 5000 + 2;

int a[N];
ll l[S], r[S], mx[S], sum[S];

int main() {
	int sz, n, m;
	ll v;
	scanf("%d%d", &n, &m);
	for (int i = 0; i < n; ++i) {
		scanf("%d", &sz);
		//cal l[]
		l[i] = -Inf;
		v = 0;
		for (int j = 0; j < sz; ++j) {
			scanf("%d", &a[j]);
			v += a[j];
			if (v > l[i])
				l[i] = v;
		}
		sum[i] = v;
		//cal r[]
		r[i] = -Inf;
		v = 0;
		for (int j = sz - 1; j >= 0; --j) {
			v += a[j];
			if (v > r[i])
				r[i] = v;
		}
		//cal mx[]
		mx[i] = -Inf;
		v = 0;
		for (int j = 0; j < sz; ++j) {
			v += a[j];
			if (v > mx[i])
				mx[i] = v;
			if (v < 0)
				v = 0;
		}
	}
	ll ans = -Inf, L = 0;
	int b;
	for (int i = 0; i < m; ++i) {
		scanf("%d", &b);
		-- b;
		ans = std::max(ans, mx[b]);
		ans = std::max(ans, L + l[b]);
		L = std::max(L + sum[b], r[b]);
	}
	printf("%I64d\n", ans);
	return 0;
}
