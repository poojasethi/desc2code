(n , m) = map(int,raw_input().split())

arr = []

for i in range (n):
    arr.append(map(int,raw_input().split())[1:])

seq = map(int,raw_input().split())

def gao(x):
    ans = - 2 ** 64
    now = 0
    for i in range (len(x)):
        now += x[i]
        ans = max(ans,now)
    return ans;
def gao2(x):
    now = x[0]
    ans = now
    for i in range(1,len(x)):
        now = max(x[i] , now + x[i]) 
        ans = max(ans,now)
    return ans
def doit(x):
    ans = - 2 ** 64
    now = 0
    for i in range (len(x) - 1, -1 , -1):
        now += x[i]
        ans = max(ans,now)
    return ans;

dp = []
pre = []
s = []
af = []
bak = []

for i in range (n):
    pre.append(doit(arr[i]))
    s.append(sum(arr[i]))
    af.append(gao(arr[i]))
    bak.append(gao2(arr[i]))
dp.append([sum(arr[seq[0] - 1]),pre[seq[0] - 1]])

for i in range (1,m):
    add = max(dp[-1][0],pre[seq[i-1] - 1])
    dp.append([ add + s[seq[i] - 1] , add + af[seq[i] - 1]  ]  )

ans = - 2 ** 64

for i in range (len(seq)):
    ans = max(ans,bak[seq[i] - 1])

for i in range (len(dp)):
    ans = max(ans,dp[i][0])
    ans = max(ans,dp[i][1])

print ans
