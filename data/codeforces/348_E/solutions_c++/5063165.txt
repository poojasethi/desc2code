#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#define N 120000
#define inf 1000000000
using namespace std;
struct Ans{
	int a1,a2;
}F[N],G[N];
struct ppp{
	int k,id,sta;
	void mk(int k_,int id_,int sta_){
		k=k_; id=id_; sta=sta_;
	}
}q[N];
int tot,fa[N],next[N*2],e[N*2],head[N],c[N*2],i,j,k,bo[N],f[N],g[N],sum[N],n,m,x,y,len;
bool cmp(const ppp&a,const ppp&b){
	return a.k>b.k;
}
void dfs1(int x){
	int i,num=0,id=0;
	f[x]=-inf;
	for(i=head[x];i;i=next[i])if(e[i]!=fa[x]){
		fa[e[i]]=x;
		dfs1(e[i]);
		if(f[e[i]]+c[i]>f[x]){
			id=e[i];
			num=1;
			f[x]=f[e[i]]+c[i];
		}else if(f[e[i]]+c[i]==f[x])num++;
	}
	if(f[x]<0 && bo[x]){
		f[x]=0;
		F[x].a1=F[x].a2=x;
		return;
	}
	if(num>1){
		F[x].a1=F[x].a2=x;
	}else{
		F[x].a1=x;
		F[x].a2=F[id].a2;
	}
}
void dfs2(int x){
	int i,j,s,id=0,n1,n2,y;
	tot=0;
	q[++tot].mk(g[x],x,1);
	for(i=head[x];i;i=next[i])if(e[i]!=fa[x])
		q[++tot].mk(f[e[i]]+c[i],e[i],0);
	sort(q+1,q+tot+1,cmp);
/*	if(x==1){
		puts("*");
	}*/
	for(i=head[x];i;i=next[i])if(e[i]!=fa[x]){
		y=e[i];
		s=1;
		if(q[1].id==y)s++;
		if(q[s].k<0 && bo[x]){
			g[y]=0;
			G[y].a1=G[y].a2=y;
			continue;
		}
		g[y]=q[s].k+c[i];
		n1=n2=0;
		for(j=s;j<=tot && n1+n2<=2;++j)if(j==s || q[j].k==q[j-1].k){
			if(q[j].id==y)continue;
			if(q[j].sta==1)n1++;
			else n2++;
			id=q[j].id;
		}else break;
		if(n1+n2>=2){
			G[y].a1=G[y].a2=x;
		}else if(n2){
			G[y].a1=x;
			G[y].a2=F[id].a2;
		}else{
			G[y]=G[id];
		}
	}
	for(i=head[x];i;i=next[i])if(e[i]!=fa[x])dfs2(e[i]);
}
int dfs3(int x){
	int i,s=0;
	s=sum[x];
	for(i=head[x];i;i=next[i])if(e[i]!=fa[x])
		s+=dfs3(e[i]);
	sum[x]=s;
	return s;
}
int main(){
	scanf("%d%d",&n,&m);
	for(i=1;i<=m;++i)scanf("%d",&x),bo[x]=1;
	for(i=1;i<n;++i){
		scanf("%d%d%d",&x,&y,&k);
		next[++len]=head[x]; head[x]=len; e[len]=y; c[len]=k;
		next[++len]=head[y]; head[y]=len; e[len]=x; c[len]=k;
	}
	dfs1(1);
	if(bo[1])g[1]=0;
	else g[1]=-inf;
	dfs2(1);
//	printf("%d %d\n",F[10].a2);
	for(i=1;i<=n;++i)if(bo[i]){
		Ans ans;
		if(f[i]==g[i])continue;
		if(f[i]>g[i])ans=F[i];
		if(f[i]<g[i])ans=G[i];
//		printf("%d %d %d\n",i,ans.a1,ans.a2);
		sum[i]++; sum[ans.a2]++;
		sum[ans.a1]--;
		sum[fa[ans.a1]]--;
	}
	dfs3(1);
	int ans=-10,fans;
	for(i=1;i<=n;++i)if(!bo[i]){
		if(sum[i]>ans)ans=sum[i],fans=1;
		else if(sum[i]==ans)fans++;
	}
	printf("%d %d\n",ans,fans);
}
