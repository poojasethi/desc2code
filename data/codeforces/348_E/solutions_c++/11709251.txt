#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<string>
#define inf 1000000000
#define maxn 300000+5
#define maxm 15000000+5
#define eps 1e-10
#define ll long long
#define pa pair<int,int>
#define for0(i,n) for(int i=0;i<=(n);i++)
#define for1(i,n) for(int i=1;i<=(n);i++)
#define for2(i,x,y) for(int i=(x);i<=(y);i++)
#define for3(i,x,y) for(int i=(x);i>=(y);i--)
#define for4(i,x) for(int i=head[x],y=e[i].go;i;i=e[i].next,y=e[i].go)
#define for5(k,i,x) for(int i=head[k][x],y=e[k][i].go;i;i=e[k][i].next,y=e[k][i].go)
#define mod 1000000007
#define mid (l+r>>1)
#define lch t[k].l,l,mid
#define rch t[k].r,mid+1,r
using namespace std;
inline int read()
{
    int x=0,f=1;char ch=getchar();
    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
    while(ch>='0'&&ch<='9'){x=10*x+ch-'0';ch=getchar();}
    return x*f;
}
int n,m,tot,head[maxn],p[maxn][19],f[maxn][2],g[maxn][2],fa[maxn],dep[maxn],s[maxn];
bool v[maxn];
struct edge{int go,next,w;}e[maxn];
inline void add(int x,int y,int w)
{
	e[++tot]=(edge){y,head[x],w};head[x]=tot;
	e[++tot]=(edge){x,head[y],w};head[y]=tot;
	
}
inline void dfs(int x)
{
	for1(i,18)p[x][i]=p[p[x][i-1]][i-1];
	if(v[x])f[x][0]=0,f[x][1]=x;
	else f[x][0]=-inf,f[x][1]=0;
	for4(i,x)if(y!=fa[x])
	{
		fa[y]=x;
		p[y][0]=x;
		dep[y]=dep[x]+1;
		dfs(y);
		if(f[y][0]+e[i].w>f[x][0])f[x][0]=f[y][0]+e[i].w,f[x][1]=f[y][1];
		else if(f[y][0]+e[i].w==f[x][0])f[x][1]=x;
	}
}
inline void dfss(int x)
{
	for4(i,x)if(y!=fa[x])
	{
		g[y][0]=g[x][0]+e[i].w;g[y][1]=g[x][1];
		for(int j=head[x],yy=e[j].go;j;j=e[j].next,yy=e[j].go)
		 if(yy!=fa[x]&&yy!=y)
		 {
		 	if(f[yy][0]+e[j].w+e[i].w>g[y][0])g[y][0]=f[yy][0]+e[j].w+e[i].w,g[y][1]=f[yy][1];
		 	else if(f[yy][0]+e[j].w+e[i].w==g[y][0])g[y][1]=x;
		 }
		dfss(y);
	}
}
inline void dfsss(int x)
{
	for4(i,x)if(y!=fa[x])dfsss(y),s[x]+=s[y];
}
inline int lca(int x,int y)
{
	if(dep[x]<dep[y])swap(x,y);
	int t=dep[x]-dep[y];
	for0(i,18)if(t>>i&1)x=p[x][i];
	if(x==y)return x;
	for3(i,18,0)if(p[x][i]!=p[y][i])x=p[x][i],y=p[y][i];
	return p[x][0];
}
int main()
{
    n=read();m=read();
    for1(i,m)v[read()]=1;
    for1(i,n-1){int x=read(),y=read(),w=read();add(x,y,w);}
    dfs(1);
    if(v[1])g[1][0]=0,g[1][1]=1;
    else g[1][0]=-inf,g[1][1]=0;
    dfss(1);
    for1(i,n)if(v[i])
    {
    //	cout<<i<<' '<<f[i][0]<<' '<<f[i][1]<<' '<<g[i][0]<<' '<<g[i][1]<<endl;
        if(f[i][0]==g[i][0])continue;
        int x,y;
        if(f[i][0]>g[i][0])x=i,y=f[i][1];
        else x=i,y=g[i][1];
      //  cout<<i<<' '<<x<<' '<<y<<endl;
        s[x]++;s[y]++;
        int t=lca(x,y);
       // if(n==100000&&m==2)cout<<i<<' '<<f[i][0]<<' '<<f[i][1]<<' '<<g[i][0]<<' '<<g[i][1]<<' '<<x<<' '<<y<<' '<<t<<' '<<dep[x]<<' '<<dep[y]<<' '<<dep[t]<<endl;
        s[t]--;
        s[fa[t]]--;
    }
    dfsss(1);
    int mx=0,ans=0;
    for1(i,n)if(!v[i])
    {
    	if(s[i]>mx)mx=s[i],ans=1;
    	else if(s[i]==mx)ans++;
    }
    cout<<mx<<' '<<ans<<endl;
    return 0;
}
