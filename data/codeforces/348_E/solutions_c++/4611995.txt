#include<iostream>
#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#define X first
#define Y second
#define pb push_back
#define fr(i,n) for(int i=1;i<=n;i++)
#define fo(i,n) for(int i=0;i<n;i++)

using namespace std;

typedef long long ll;

const int INF=0x3f3f3f3f;
const int mod=(int)1e9+7;
const int N=100010;

int n,m,v[N];
int head[N],next[N<<1],key[N<<1],len[N<<1],cnt;
int sdis[N],slca[N],fdis[N],flca[N];
int f[N][20],dep[N],w[N];

void add(int x,int y,int z){
	next[++cnt]=head[x];
	key[cnt]=y;
	len[cnt]=z;
	head[x]=cnt;
}

void update(int &ndis,int &nlca,int dis,int lca,int x){
	if(dis>ndis){
		ndis=dis;
		nlca=lca;
	}
	else if(ndis==dis){
		nlca=x;
	}
}

void sdfs(int x,int fa){
	slca[x]=x;
	if(v[x]) sdis[x]=0;
	for(int i=head[x];~i;i=next[i]){
		if(key[i]==fa) continue;
		f[key[i]][0]=x;
		dep[key[i]]=dep[x]+1;
		sdfs(key[i],x);
		update(sdis[x],slca[x],sdis[key[i]]+len[i],slca[key[i]],x);
	}
}

int getlca(int x,int y){
	if(dep[x]<dep[y]) swap(x,y);
	for(int i=19;i>=0;i--)
		if(dep[f[x][i]]>=dep[y])
			x=f[x][i];
	if(x==y) return x;
	for(int i=19;i>=0;i--)
		if(f[x][i]!=f[y][i])
			x=f[x][i],y=f[y][i];
	return f[x][0];
}

void add(int x,int y){
	int lca=getlca(x,y);
	w[f[lca][0]]-=1;
	w[lca]-=1;
	w[x]+=1;
	w[y]+=1;
}

typedef pair<int,int>pi;

void fdfs(int x,int fa){
	if(v[x])
		if(fdis[x]<0){
			fdis[x]=0;
			flca[x]=x;
		}
	if(v[x]){
		if(fdis[x]>sdis[x]){
			add(x,flca[x]);
		}
		if(sdis[x]>fdis[x]){
			add(x,slca[x]);
		}
	}
	vector<pi>son;
	for(int i=head[x];~i;i=next[i]){
		if(key[i]==fa) continue;
		son.pb(pi(key[i],len[i]));
	}
	int maxdis=-INF,lca=0;
	for(int i=0;i<son.size();i++){
		pi a=son[i];
		update(fdis[a.X],flca[a.X],maxdis+a.Y,lca,x);
		update(maxdis,lca,sdis[a.X]+a.Y,slca[a.X],x);
	}
	maxdis=-INF,lca=0;
	for(int i=son.size()-1;i>=0;i--){
		pi a=son[i];
		update(fdis[a.X],flca[a.X],maxdis+a.Y,lca,x);
		update(maxdis,lca,sdis[a.X]+a.Y,slca[a.X],x);
	}
	for(int i=head[x];~i;i=next[i]){
		if(key[i]==fa) continue;
		update(fdis[key[i]],flca[key[i]],fdis[x]+len[i],flca[x],x);
		fdfs(key[i],x);
	}
}

int ans,res;

int getans(int x,int fa){
	int tot=w[x];
	for(int i=head[x];~i;i=next[i])
		if(key[i]!=fa)
			tot+=getans(key[i],x);
	if(!v[x]){
		if(tot>ans){
			ans=tot;
			res=1;
		}
		else if(tot==ans){
			res++;
		}
	}
	return tot;
}

int main(){
	memset(head,-1,sizeof head);
	memset(fdis,0x3f,sizeof fdis);
	memset(sdis,0x3f,sizeof sdis);
	scanf("%d%d",&n,&m);
	for(int i=0;i<=n;i++)
		fdis[i]=-fdis[i],sdis[i]=-sdis[i];
	for(int i=1,x;i<=m;i++)
		scanf("%d",&x),v[x]=1;
	for(int i=1,x,y,z;i<n;i++){
		scanf("%d%d%d",&x,&y,&z);
		add(x,y,z),add(y,x,z);
	}
	dep[1]=1;
	sdfs(1,0);
	for(int i=1;i<20;i++)
		for(int j=1;j<=n;j++)
			f[j][i]=f[f[j][i-1]][i-1];
	fdfs(1,0);
	ans=-1;
	getans(1,0);
	cout<<ans<<' '<<res<<endl;
	return 0;
}
