#include <bits/stdc++.h>
#define fr(i,a,b) for(int i=a;i<b;i++)
#define rep(i,b) fr(i,0,b)
#define mp make_pair
#define F first
#define S second
#define N 100100
#define pb push_back

using namespace std;
typedef pair<int,int> pii;

struct OP{
    int w;
    int nod;
    int val;
    OP(int a, int b, int c){
        w=a, nod=b, val=c;
    }
};

list< pii > ls[N];
vector<int> adj[N];
vector< OP > ops[N];
int hei[N], anc[N][21];
int sum[N];
bool eh[N];

void rec(int v, int p, int& valo, int& node){
    for(list<pii>::iterator it = ls[v].begin();it!=ls[v].end();){
        int w = it->F;
        
        if(w==p)
            it++;
        else{
            int val,nod;
            rec(w,v,val,nod);
            val += it->S;
            if(nod){
                if(ops[v].size()<3)
                    ops[v].push_back(OP(w,nod,val));
                else{
                    OP op(w,nod,val);
                    rep(i,ops[v].size()){
                        if(op.val>ops[v][i].val) swap(op,ops[v][i]);
                    }
                }
            }
            it=ls[v].erase(it);
        }
    }
    
    valo=0;
    node=eh[v]?v:0;
    rep(i,ops[v].size()){
        if(ops[v][i].w!=p){
            if(valo<ops[v][i].val) valo=ops[v][i].val, node=ops[v][i].nod;
            else if(valo==ops[v][i].val) node = v;
        }
    }
}

void reclca(int v, int p, int h){
    anc[v][0] = p;
    hei[v] = h;
    rep(i,adj[v].size()){
        if(adj[v][i]!=p)
            reclca(adj[v][i],v,h+1);
    }
}

void prelca(int n){
    fr(j,1,21) fr(i,1,n+1) anc[i][j] = anc[anc[i][j-1]][j-1];
}

int lca(int a, int b){
    if(hei[a]<hei[b]) swap(a,b);
    for(int i=20;i>=0;i--){
        if(hei[anc[a][i]]>=hei[b]) a = anc[a][i];
    }
    if(a==b) return a;
    for(int i=20;i>=0;i--){
        if(anc[a][i]!=anc[b][i]) a = anc[a][i], b = anc[b][i];
    }
    return anc[a][0];
}

void rec(int v, int p){
    rep(i,adj[v].size()){
        if(adj[v][i]!=p){
            rec(adj[v][i],v);
            sum[v] += sum[adj[v][i]];
        }
    }
}

int main(){
    int n, m;
    scanf("%d %d",&n,&m);
    
    rep(i,m){
        int a;
        scanf("%d",&a);
        eh[a]=true;
    }
    
    fr(i,1,n){
        int a, b, c;
        scanf("%d %d %d",&a,&b,&c);             
        ls[a].push_front(mp(b,c));
        ls[b].push_front(mp(a,c));
        adj[a].pb(b);
        adj[b].pb(a);
    }
    
    reclca(1,0,0);
    prelca(n);
    
    fr(i,1,n+1){
        if(eh[i]){
            int vv, nn;
            rec(i,-1,vv,nn);            
            //printf("%d %d (%d)\n",i,nn,vv);
            if(nn != i){
                int w = lca(i,nn);
                if(w==i || w==nn) sum[w^i^nn]++, sum[anc[w][0]]--;
                else sum[i]++, sum[nn]++, sum[w]--, sum[anc[w][0]]--;               
            }
        }
    }
    
    rec(1,-1);
    
    int maxi=0, qtd=0;
    fr(i,1,n+1){
        if(!eh[i]){
            if(sum[i]>maxi) maxi=sum[i], qtd=1;
            else if(sum[i]==maxi) qtd++;
        }
    }
    
    printf("%d %d\n",maxi,qtd); 
    
    return 0;
}
