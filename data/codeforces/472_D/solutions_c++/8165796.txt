#include<cstdio>
#include<vector>
#include<cstring>
#define N 2005
#define pb push_back
using namespace std;
vector<int>road[N];
int a[N][N],id[N],dis[N],flag[N];
int n,i,j,sta,F;
void dfs(int k,int s,int fa)
{
  if (a[sta][k]!=s) F=0;
  for (int i=0;i<road[k].size();i++)
  {
    int go=road[k][i];//if (a[k][go]==s) F=0;
    if (go!=fa) dfs(go,s+a[k][go],k);
  }
}
inline void prim()
{
  memset(dis,60,sizeof(dis));
  dis[1]=0;
  for (int i=1;i<=n;i++)
  {
    int p=0;for (int j=1;j<=n;j++) if (!flag[j]&&dis[j]<dis[p]) p=j;
    flag[p]=1;if (id[p]) road[id[p]].pb(p),road[p].pb(id[p]);
    for (int j=1;j<=n;j++) if (!flag[j]&&a[p][j]<dis[j]) dis[j]=a[p][j],id[j]=p;
  }
}
int main()
{
  scanf("%d",&n);
  for (i=1;i<=n;i++)
    for (j=1;j<=n;j++)
      scanf("%d",&a[i][j]);
  for (i=1;i<=n;i++)
    for (j=1;j<=n;j++)
      if (a[i][j]!=a[j][i]||a[i][i]>0||a[i][j]==0&&i!=j) {puts("NO");return 0;}
  prim();F=1;
  for (sta=1;sta<=n&&F;sta++)
    dfs(sta,0,-1);
  if (F) puts("YES");else puts("NO");
}
