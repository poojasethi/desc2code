#include <cstdio>
#include <algorithm>
#include <utility>
using namespace std;

int n, m, o;
pair<int, int> a[100001], b[100000], c[100000];

int main() {
	scanf("%d%d", &n, &m);
	for (int i = 0; i < m; ++i)
		scanf("%d%d", &a[i].first, &a[i].second);
	sort(a, a + m);
	b[o++] = make_pair(1, n);
	if (a[0].first == 1)
		b[0].second = a[0].second - 1;
	for (int i = 0; i < m; ) {
		int j = i;
		while (j < m && a[j].first == a[i].first)
			++j;
		pair<int, int> tmp(a[i].first, n + 1);
		swap(tmp, a[j]);
		int k = 0, p = 0, q = 0;
		while (i <= j) {
			while (i <= j && a[i].second == k + 1)
				++k, ++i;
			if (i > j)
				break;
			while (p < o && b[p].second <= k)
				++p;
			if (p >= o)
				break;
			if (b[p].first < a[i].second)
				c[q++] = make_pair(max(b[p].first, k + 1), a[i].second - 1);
			k = a[i].second;
			++i;
		}
		i = j;
		swap(tmp, a[j]);
		if (!q) {
			puts("-1");
			return 0;
		}
		if (j < m && a[j - 1].first < a[j].first - 1 || j == m && a[j - 1].first < n) {
			o = 1;
			b[0] = make_pair(c[0].first, n);
		} else {
			for (o = 0; o < q; ++o)
				b[o] = c[o];
		}
	}
	if (b[o - 1].second < n)
		puts("-1");
	else
		printf("%d\n", n * 2 - 2);
}