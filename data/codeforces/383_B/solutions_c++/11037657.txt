#include <cstdio>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <queue>
#include <vector>
#include <map>
#define x first
#define y second
using namespace std;

typedef long long LL;

struct Node
{
	int x,y;
}a[100005];
bool cmp(Node a,Node b)
{
	if (a.x==b.x) return a.y<b.y;
	return a.x<b.x;
}
int n,m;
int main()
{
	scanf("%d%d",&n,&m);
	for (int i=1;i<=m;++i) scanf("%d%d",&a[i].x,&a[i].y);
	sort(a+1,a+m+1,cmp);
	vector<pair<int,int> > range;
	range.push_back(make_pair(1,1));
	int last=0;
	int dq=1;
	while (dq<=m)
	{
		if (a[dq].x!=last+1&&range.size()>0)
		{
			int start=range[0].x;
			range.clear();
			range.push_back(make_pair(start,n));
		}
		int now=dq;
		while (now<=m&&a[now].x==a[dq].x) now++;
		vector<pair<int,int> > dqrange;
		int start=1,idx=0;
		int end;
		for (int i=dq;i<=now;++i)
		{
			if (i<now) end=a[i].y-1;else end=n;
			while (idx<range.size()&&range[idx].y<start) idx++;
			if (idx<range.size()&&max(range[idx].x,start)<=end)
				dqrange.push_back(make_pair(max(range[idx].x,start),end));
			start=end+2;	
		}
		range=dqrange;
		last=a[dq].x;
		dq=now;
	}
	if (range.size()>0&&(last<n||range[range.size()-1].y==n))
		printf("%d\n",2*n-2);
	else printf("-1\n");
	return 0;
}
  		  	 						 			    	 	  	 	