#include <iostream>
#include <vector>
#include <queue>
#include <set>
using namespace std;

#define f(x, y) for (int x = 0; x < (int)y; ++x)

typedef pair<int, int> ii;
typedef pair<ii, int> iii;
typedef vector<ii> vii;
typedef queue<int> qi;
typedef set<iii> siii;
typedef siii::iterator siiii;
typedef vector<bool> vb;

int main() {
  ios::sync_with_stdio(false);
  int n, m; cin >> n >> m;
  siii p1, p2;
  vii v(m);
  vb vis(m, false);
  qi q;
  f(i, m) {
    int x, y; cin >> x >> y;
    p1.insert(iii(ii(x-1, y-1), i));
    p2.insert(iii(ii(y-1, x-1), i));
    v[i] = ii(x-1, y-1);
    if (x == n || y == 1) {
      vis[i] = true;
      q.push(i);
    }
  }
  while (!q.empty()) {
    ii x = v[q.front()]; q.pop();
    if (x.first == 0 || x.second == n-1) {
      cout << -1 << endl;
      return 0;
    }
    for (
      siiii it = p1.lower_bound(iii(ii(x.first-1,0),0));
      it->first.first < x.first && it->first.second-1 <= x.second;
      ++it
    ) {
      if (!vis[it->second]) {
        vis[it->second] = true;
        q.push(it->second);
      }
    }
    for (
      siiii it = --p2.lower_bound(iii(ii(x.second+2,0),0));
      it->first.first > x.second && it->first.second+1 >= x.first;
      --it
    ) {
      if (!vis[it->second]) {
        vis[it->second] = true;
        q.push(it->second);
      }
    }
  }
  cout << 2*(n-1) << endl;
}
