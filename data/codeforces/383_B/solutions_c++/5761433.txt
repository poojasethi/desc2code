#include <cstdio>
#include <algorithm>

#define N 100000

int b[2][N], c[2][N], n, m, i, j, p, z = 1;

struct cd
{
	int x, y;
}
a[N];

bool cmp(cd a, cd b)
{
	return a.x == b.x ? a.y < b.y : a.x < b.x;
}

int main()
{
	scanf("%d%d", &n, &m);

	for (i = 0; i < m; i ++)
	{
		scanf("%d%d", &a[i].x, &a[i].y);
		a[i].x --, a[i].y --;
	}

	std::sort(a, a + m, cmp);

	for (i = 1; i < m; i ++)
		if (a[i].x != a[i - 1].x)
			c[1][p++] = i - 1, c[0][p] = i;
	c[1][p++] = m - 1;

	for (i = 0; i < p; i ++)
		b[1][i] = n - 1;

	if (!a[0].x)
		b[1][0] = a[0].y, c[1][0] = 0;

	if (a[m - 1].x == n - 1)
		b[0][p - 1] = a[m - 1].y, c[0][p - 1] = m - 1;

	while (z)
	{
		z = 0;
		for (i = 0; i < p; i ++)
		{
			if (i && b[0][i - 1] > b[0][i])
				b[0][i] = b[0][i - 1], z = 1;
			for (j = c[0][i]; j <= c[1][i]; j ++)
			{
				if (a[j].y == b[0][i])
					b[0][i] = a[j].y + 1, c[0][i] = j, z = 1;
				if (i && a[c[0][i - 1]].x + 1 == a[c[0][i]].x && b[1][i - 1] < b[1][i] && a[j].y <= b[1][i] && a[j].y >= b[1][i - 1])
					b[1][i] = a[j].y - 1, c[1][i] = j, z = 1;
			}
		}
		for (i = p - 1; i >= 0; i --)
		{
			if (i != p - 1 && b[1][i + 1] < b[1][i])
					b[1][i] = b[1][i + 1], z = 1;
			for (j = c[1][i]; j >= c[0][i]; j --)
			{
				if (a[j].y == b[1][i])
					b[1][i] = a[j].y - 1, c[1][i] = j, z = 1;
				if (i != p - 1 && a[c[0][i + 1]].x - 1 == a[c[0][i]].x && b[0][i + 1] > b[0][i] && a[j].y >= b[0][i] && a[j].y <= b[0][i + 1])
					b[0][i] = a[j].y + 1, c[0][i] = j, z = 1;
			}
		}
	}

	for (i = 0; i < p; i ++)
		if (b[0][i] > b[1][i])
		{
			z = 1;
			break;
		}

	printf("%d\n", z ? -1 : n * 2 - 2);

	return 0;
}
