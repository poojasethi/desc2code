#include <vector> 
#include <list> 
#include <map> 
#include <set> 
#include <deque> 
#include <queue> 
#include <stack> 
#include <bitset> 
#include <algorithm> 
#include <functional> 
#include <numeric> 
#include <utility> 
#include <sstream> 
#include <iostream> 
#include <iomanip> 
#include <cstdio> 
#include <cmath> 
#include <cstdlib> 
#include <cctype> 
#include <string> 
#include <cstring> 
#include <ctime> 
using namespace std;
#define x first
#define y second
const int maxn=100100;
pair<int,int> obs[maxn];
vector<pair<int,int> > p,np;
 
int N,M;
int main() {
	//ios::sync_with_stdio(0);
	cin>>N>>M;
	for(int i=0;i<M;i++) cin>>obs[i].x>>obs[i].y;

	sort(obs,obs+M);
	p.push_back(make_pair(1,1));
	
	int cnt=0;
	int st,ed;
	int cur_x=0;
	while(cnt<M) {
		if(obs[cnt].x!=cur_x+1&&p.size()>0) {
			int tmp=p[0].x;
			p.clear();
			p.push_back(make_pair(tmp,N));
		}

		int l=cnt,r=cnt;
		while(r<M&&obs[r].x==obs[l].x) r++;
		np.clear();
		st=1;int cc=0;
		for(int i=l;i<=r;i++) {
			if(i==r) ed=N+1;
			else ed=obs[i].y;
			while(cc<p.size()&&p[cc].y<st) cc++;
			if(cc<p.size()&&max(st,p[cc].x)<ed) {
				np.push_back(make_pair(max(st,p[cc].x),ed-1));
			}
			st=obs[i].y+1;
		}
		p=np;
		cur_x=obs[l].x;
		cnt=r;
	}
	if(p.size()&&(cur_x<N||p[p.size()-1].y==N)) cout<<2*N-2<<endl;
	else cout<<"-1"<<endl;

	return 0;
}
