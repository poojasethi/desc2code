#include <cmath>
#include <ctime>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#define LL long long
using namespace std;
int N,M,len;
class rec{public:int x,y;}P[100010];
class line{public:int l,r;}q[1000010],qq[10000010];
bool cmp(const rec &a,const rec &b){return a.x<b.x||(a.x==b.x&&a.y<b.y);}
int main(){
	scanf("%d%d",&N,&M);
	for (int i=1;i<=M;i++)scanf("%d%d",&P[i].x,&P[i].y);
	sort(P+1,P+M+1,cmp);
	if (P[1].x==1)q[len=1].l=q[1].r=1;
	else q[len=1].l=1,q[len].r=N;
	if (P[1].x==1&&P[1].y==1){
		printf("-1\n");
		return 0;
	}
	if (P[M].x==N&&P[M].y==N){
		printf("-1\n");
		return 0;
	}
	for (int i=1;i<=M;i++){
		if (i!=1&&P[i].x!=P[i-1].x+1){
			len=1;
			q[len].l=q[1].l;q[len].r=N;
		}
		int j=i;
		while (j<=M&&P[j].x==P[i].x)j++;
		int ll=0;
		for (int k=1;k<=len;k++){
			while (i<j&&P[i].y<q[k].l)i++;
			qq[++ll].l=q[k].l;
			if (i<j)qq[ll].r=P[i].y-1;
			else{qq[ll].r=N;break;}
			if (qq[ll].l>qq[ll].r)ll--;
			while (i<j&&P[i].y<q[k].r){
				qq[++ll].l=P[i].y+1;
				if (i+1<j)qq[ll].r=P[i+1].y-1;
				else{qq[ll].r=N;break;}
				if (qq[ll].l>qq[ll].r)ll--;
				i++;
			}
			if (qq[ll].r==N)break;
			while (i<j&&P[i].y<=q[k].r)i++;
		}
		if (!ll){printf("-1");return 0;}
		len=1;q[1]=qq[1];
		for (int k=2;k<=ll;k++)
		if (q[len].r>=qq[k].l)
		q[k].r=max(qq[k].r,q[k].r);
		else q[++len]=qq[k];
		if (!len){printf("-1");return 0;}
		i=j-1;
	}
	if (P[M].x<N)q[len].r=N;
	if (q[len].r==N)printf("%d",2*N-2);
	else printf("-1");
}