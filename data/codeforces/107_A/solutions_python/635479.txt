#!/usr/bin/env python2
# -*- coding: utf-8 -*-
import sys
input = sys.stdin
output = sys.stdout

def solve(T):
    V = set()
    Next = {}
    Prev = {}
    for t in T:
        a,b,d = t
        V.add(a)
        V.add(b)
        Next[a] = (b,d)
        Prev[b] = (a,d)
#    print 'V:', V
#    print 'Next:', Next
#    print 'Prev:', Prev
    
    P = []
    while len(V) > 0:
        v = V.pop()
        #print 'start tracing path from:', v
        beg = end = v
        dmax = sys.maxint
        while end in Next:
            next,d = Next[end]
            dmax = min(dmax,d)
            end = next
            #print '   => %d' % beg
            if next in V:
                V.remove(next)
            else:
                break
        if beg==end:
            continue
        while beg in Prev:
            prev,d = Prev[beg]
            dmax = min(dmax,d)
            beg = prev
            #print '      %d <=' % beg
            if prev in V:
                V.remove(prev)
            else:
                break
        if beg != end:
            P.append((beg,end,dmax))
    
    P = sorted(P, key=lambda t: t[0])
    return P    

def numbers_from_line(d=' '):
    return [int(s) for s in input.readline().strip().split(d) if len(s.strip())>0]

A = numbers_from_line()
n,p = tuple(A)

T = []
for _ in range(p):
    A = numbers_from_line()
    T.append(tuple(A))

A = solve(T)
output.write('%d\n' % len(A))
for t in A:
    output.write('%d %d %d\n' % t)
