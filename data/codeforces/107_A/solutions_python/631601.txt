#!/usr/bin/env python2.6
# coding=utf-8
import sys

def compute(inP, outP, minC):
    res = []
    n = len(inP)
    vis = [False]*n
    for i in range(n):
        if inP[i] != -1: continue
        if outP[i] == -1: continue
        v = i
        m = minC[v]
        while not vis[v]:
            vis[v] = True
            if outP[v] == -1:
                break
            v = outP[v]
            m = min(m, minC[v])
        res.append((i+1, v+1, m))
    print(len(res))
    for a,b,m in res:
        print("{0} {1} {2}".format(a,b,m))

if __name__ == "__main__":
    n,p = map(int, sys.stdin.readline().split())
    minC = [2**20]*n
    inP = [-1]*n
    outP = [-1]*n
    for i in range(p):
        a,b,d = map(int, sys.stdin.readline().split())
        a -= 1
        b -= 1
        inP[b] = a
        outP[a] = b
        for j in (a,b):
            minC[j] = min(minC[j], d)
    compute(inP, outP, minC)
        
    
