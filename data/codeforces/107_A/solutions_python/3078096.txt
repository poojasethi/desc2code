from collections import deque
n, p = map(int, raw_input().split())

neighs = [None for _ in xrange(n)]
parents = [None for _ in xrange(n)]
for _ in xrange(p):
    a, b, d = map(int, raw_input().split())
    neighs[a-1] = (b-1,d)
    parents[b-1] = True


sols = []
for house in xrange(n):
    if not parents[house] and neighs[house]:
        q = deque()
        q.append((house, 1000005)) 
        while len(q):
            crt, flow = q.popleft()
            if neighs[crt]:
                child, capacity = neighs[crt]
                q.append((child, min(flow, capacity)))
            else:
                sols.append((house, crt, flow))
print len(sols)
for tank, tap, flow in sols:
    print tank+1, tap+1, flow


