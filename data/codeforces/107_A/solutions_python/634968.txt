debug = False

import sys

sys.setrecursionlimit(2000)

def out():
    FIN.close
    FOUT.close
    sys.exit

def dfs(v):
    #result = [10000000, v]
    was[v] = True
    if a[v] == -1:
        return [10000000, v]
    else:
        #result = [0, 0]
        res = dfs(a[v])
        #result[0] = min(res[0], d[v])
        #result[1] = res[1]
        return [min(res[0], d[v]), res[1]]

if debug:
    FIN = open('input.txt', 'r')
    FOUT = open('output.txt', 'w')
else:
    FIN = sys.stdin
    FOUT = sys.stdout
n, p = list(map(int, FIN.readline().split()))
a = (n + 1) * [-1]
d = (n + 1) * [-1]
was = (n + 1) * [False]
tap = (n + 1) * [-1]
diam = (n + 1) * [-1]
for i in range(p):
    ai, bi, di = list(map(int, FIN.readline().split()))
    a[ai] = bi
    d[ai] = di
    was[bi] = True
t = 0
for i in range(1, n + 1):
    if ((not was[i]) and (a[i] != -1)) :
        t += 1
        diam[i], tap[i] = dfs(i)
FOUT.write(str(t) + '\n')
for i in range(1, n + 1):
    if tap[i] != -1:
        FOUT.write(str(i) + ' ' + str(tap[i]) + ' ' + str(diam[i]) + '\n')
    
out()

