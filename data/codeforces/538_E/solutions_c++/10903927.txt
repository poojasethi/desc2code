#include <bits/stdc++.h>
#define L first
#define R second
#define MP make_pair
#define PB push_back

using namespace std;

const int maxn = 2 * 1000 * 100 + 10;
int dp[maxn][2], leaf;
vector<int> e[maxn];

void dfs(int source, int par, int h = 0) {
	if(source != 1 and e[source].size() < 2) {
		dp[source][0] = 1;
		dp[source][1] = 1;
		leaf ++;
		return;
	}
	int MN = 99999999, sum = 0;
	for(int i = 0;i < e[source].size();i ++)
		if(e[source][i] != par)
			dfs(e[source][i], source),
			MN = min(MN, dp[e[source][i]][1]),
			sum += dp[e[source][i]][0];
	dp[source][0] = MN;
	dp[source][1] = sum;
}

main() {
	int n, fi, se;
	cin >> n;
	for(int i = 0;i < n - 1;i ++)
		cin >> fi >> se,
		e[fi].PB(se), e[se].PB(fi);
	dfs(1, 0);
	if(n == 1) dp[1][0] = 1, dp[1][1] = 1, leaf = 1;
	cout << leaf - dp[1][0] + 1 << " " << dp[1][1] << endl;
	return 0;
}
