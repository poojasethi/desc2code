#include<cstdio>
#include<algorithm>
#include<cstring>
#include<iostream>
#include<queue>
#define SF scanf
#define PF printf
using namespace std;
typedef long long LL;
const int MAXN = 200000;
struct Node {
	int v, next;
} Edge[MAXN*2+10];
int adj[MAXN+10], ecnt;
int n, m;
void add(int u, int v) {
	Node &e = Edge[++ecnt];
	e.v = v; e.next = adj[u]; adj[u] = ecnt;
}
int dfs(int u, bool f) {
	int ret_min = n+1, ret_max = 0;
	if(!adj[u]) return 1;
	for(int i = adj[u]; i; i = Edge[i].next) {
		int v = Edge[i].v;
		if(f) ret_max += dfs(v, 0);
		else ret_min = min(ret_min, dfs(v, 1));
	}
	return f ? ret_max : ret_min;
}
int main() {
	SF("%d", &n);
	for(int i = 1; i < n; i++) {
		int u, v; SF("%d%d", &u, &v);
		add(u, v);
	}
	for(int i = 1; i <= n; i++) if(!adj[i]) m++;
	PF("%d %d\n", m+1-dfs(1, 0), dfs(1, 1));
}
	 		  					    	 	 		 	  			 	