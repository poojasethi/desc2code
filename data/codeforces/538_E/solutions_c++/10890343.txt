#include <bits/stdc++.h>
using namespace std;

const int MAXn = 2e5+10;

vector<int> child[MAXn];
int n, m;

int d[MAXn];

void dfs(int v, int h) {
    h = h%2;
    if(child[v].size() == 0) {
        d[v] = 1;
        return;
    }
    if(h == 0)
        d[v] = n;
    else
        d[v] = 0;
    for(int i = 0; i < (int)child[v].size(); i++) {
        int u = child[v][i];
        dfs(u, h+1);
        if(h == 0)
            d[v] = min(d[v], d[u]);
        else
            d[v] += d[u];
    } 
}


int main() {
    ios::sync_with_stdio(false);
    cin >> n;
    for(int i = 0; i < n-1; i++) {
        int v, u;
        cin >> v >> u;
        v--; u--;
        child[v].push_back(u);
    }
    for(int i = 0; i < n; i++)
        if(!child[i].size())
            m++;
    dfs(0, 0);
    cout << m-d[0]+1 << " ";
    dfs(0, 1);
    cout << d[0] << endl;
    return 0;
}
