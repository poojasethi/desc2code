#include <bits/stdc++.h>
using namespace std;
const int maxn = 200005;
vector <int> E[maxn];
int sz[maxn], dp_max[maxn], dp_min[maxn];
void dfs(int x, int fa) {
	sz[x] = 0;
	bool flag = 1;
	int sum = 0, t = INT_MAX;
	for(int i = 0; i < E[x].size(); i++) {
		int u = E[x][i];
		if(u != fa) {
			flag = 0;
			dfs(u, x);
			sz[x] += sz[u];
			t = min(t, dp_min[u]);
			sum += sz[u] - dp_max[u];
		}
	}
	if(flag) {
		sz[x] = 1;
		dp_max[x] = dp_min[x] = 0;
	} else {
		dp_max[x] = sz[x] - t - 1;
		dp_min[x] = sum - 1;
	}
}
int main() {
	int n, x, y;
	scanf("%d", &n);
	for(int i = 1; i < n; i++) {
		scanf("%d%d", &x, &y);
		E[x].push_back(y);
		E[y].push_back(x);
	}
	dfs(1, 0);
	printf("%d %d\n", dp_max[1] + 1, dp_min[1] + 1);
	return 0;
}
