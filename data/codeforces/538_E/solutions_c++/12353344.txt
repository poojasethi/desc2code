#include <cstdio>
#include <iostream>
#include <vector>

using namespace std;

const int maxn = 500005;

int N, M;
vector< int > graf[ maxn ];

int dfs( int cvor, bool mini ){
    if( graf[ cvor ].size() == 0 ) return 1;

    int mn = maxn, mx = 0;
    for( int i = 0; i < graf[ cvor ].size(); i ++ ){
        if( mini ) mx += dfs( graf[ cvor ][ i ], !mini );
        else mn = min( mn, dfs( graf[ cvor ][ i ], !mini ) );
    }

    return mini ? mx : mn;
}

void ucitaj(){
    scanf( "%d", &N );
    for( int i = 0; i < N - 1; i ++ ){
        int a, b;
        scanf( "%d%d", &a, &b );
        a --; b --;
        graf[ a ].push_back( b );
    }
    for( int i = 0; i < N; i ++ )
        if( graf[ i ].size() == 0 ) M ++;
}

int main( void ){
    ucitaj();
    printf( "%d %d\n", M - dfs( 0, 0 ) + 1, dfs( 0, 1 ) );

return 0;
}
