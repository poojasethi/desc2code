#include <bits/stdc++.h>
using namespace std;

const int MAXN = 2e5+10;

int n, w[MAXN][2], m;
vector<int> g[MAXN];

void solve(int u) {
	w[u][0] = MAXN;
	w[u][1] = 0;
	for (int i = 0; i < int(g[u].size()); i++) {
		int v = g[u][i];
		solve(v);
		w[u][0] = min(w[u][0], w[v][1]);
		w[u][1] += w[v][0];
	}
	if (g[u].empty()) {
		w[u][0] = w[u][1] = 1;
		m++;
	}
	//printf("%d: %d %d\n", u, w[u][0], w[u][1]);
}

int main() {
	scanf("%d", &n);
	for (int i = 1; i < n; i++) {
		int u, v; scanf("%d%d", &u, &v);
		g[u].push_back(v);
	}
	solve(1);
	//int p = 0;
	//for (int i = 0; i < int(g[1].size()); i++) p = max(p, w[g[1][i]][1]);
	//printf("%d %d\n", m-w[1][0], p);
	printf("%d %d\n", m-w[1][0]+1, w[1][1]);
	
	return 0;
}