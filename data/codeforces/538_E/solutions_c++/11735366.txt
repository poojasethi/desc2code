#define N (1<<18)
#include <bits/stdc++.h>

using namespace std;

vector<int> g[N];
int n,u,v,dp[N][2],sz[N];

void dfs(int x,int cur)
{
	sz[x]=0;
	dp[x][0]=cur?0:N;
	dp[x][1]=cur?N:0;

	for(int i=0;i<g[x].size();i++)
	{
		int v=g[x][i];

		dfs(v,!cur),sz[x]+=sz[v];
		if(cur==0)
		{
			dp[x][0]=min(dp[x][0],sz[v]-dp[v][0]);
			dp[x][1]+=dp[v][1];
		}
		else
		{
			dp[x][0]+=dp[v][0];
			dp[x][1]=min(dp[x][1],dp[v][1]);
		}
	}

	if(sz[x]==0)
		dp[x][0]=dp[x][1]=sz[x]=1;
	else if(cur==0)
		dp[x][0]=sz[x]-dp[x][0];
	else
		dp[x][0]-=g[x].size()-1;
}

int main()
{
	cin>>n;
	for(int i=1;i<n;i++)
		scanf("%d%d",&u,&v),g[u].push_back(v);

	dfs(1,0),cout<<dp[1][0]<<" "<<dp[1][1]<<endl;
}