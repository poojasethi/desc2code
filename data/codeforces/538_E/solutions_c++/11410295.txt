#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
typedef long long ll;
const int INF = 0x3f3f3f3f;
const int N = 200010;

int n, tot;
int hed[N], ver[N], nxt[N];

void add(int x, int y) { ver[++tot] = y; nxt[tot] = hed[x]; hed[x] = tot; }

int cnt = 0;
int d[N], f[N];

void dfs(int x)
{
	if(!hed[x])
	{
		cnt++;
		d[x] = f[x] = 1;
		return;
	}
	d[x] = INF;
	for(int i = hed[x]; i; i = nxt[i])
	{
		int y = ver[i];
		dfs(ver[i]);
		d[x] = min(d[x], f[y]);
		f[x] += d[y];
	}
}

int main()
{
	scanf("%d",&n);
	for(int i = 1; i < n; i++)
	{
		int x, y; scanf("%d%d",&x,&y);
		add(x, y);
	}
	dfs(1);
	printf("%d %d\n",cnt-d[1]+1, f[1]);
	return 0;
}

