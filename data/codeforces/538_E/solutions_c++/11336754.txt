#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
const int maxn=200005;
vector<int> a[maxn];

int n,dp[maxn][2],m;
void dfs(int x)
{
    if(a[x].empty())
    {
        dp[x][0]=dp[x][1]=1;
        m++;
        return;
    }
    dp[x][0]=n;
    for(int i=0;i<a[x].size();i++)
    {
        int y=a[x][i];
        dfs(y);
        dp[x][0]=min(dp[y][1],dp[x][0]);
        dp[x][1]+=dp[y][0];

    }
}
int main()
{
    int i;
    cin>>n;
    for(i=0;i<(n-1);i++)
    {
        int  temp1;
        int temp2;
        cin>>temp1>>temp2;
        temp1--;
        temp2--;
        a[temp1].push_back(temp2);
        //a[temp2].push_back(temp1);
    }
    dfs(0);
    cout<<m-dp[0][0]+1<<" "<<dp[0][1];


}