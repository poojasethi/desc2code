#include <bits/stdc++.h>
using namespace std;


const int MAX_N = 200 + 20;
int a[MAX_N];
double p[MAX_N];
double dp[MAX_N][MAX_N][2*MAX_N];
int len = 200;
int n , l , k;


inline int f ( const int &a )
	{ return a+len ; }

int main()
{
	ios::sync_with_stdio(false);

	cin >> n >> l >> k;
	for ( int i = 0 ; i < n ; ++i )
		cin >> p[i];
	for ( int i = 0 ; i < n ; ++i )
		cin >> a[i];

	for ( int i = 0 ; i <= 200 ; ++i )
		dp[n][0][f(i)] = 1.;
	for ( int i = n-1 ; i >= 0 ; i-- )
		for ( int j = 0 ; j <= l ; ++j )
			for ( int q = -200 ; q <= 200 ; ++q )
				dp[i][j][f(q)] = (100. - p[i])/100. * dp[i+1][j][f(q)] +
					p[i]/100. * dp[i+1][max(0 ,j-1)][f(min(200 , max(-200, q+a[i])))];
	cout << fixed << setprecision(12) << dp[0][l][f(k)] << endl;
	return 0;
}
