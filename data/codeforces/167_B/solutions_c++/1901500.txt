#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

const int N=210;
const int inf=0x3f3f3f3f;

using namespace std;

int n,l,k;
bool vis[N][N][N];
double dp[N][N][N],p[N],A[N];

double dfs(int a,int b,int c)
{
	if(vis[a][b][c]) return dp[a][b][c];
	if(a>=n) 
	{
		if(c<0) return 0;
		if(b==0) return 1;
		return 0;
	}
	vis[a][b][c]=1;
	dp[a][b][c]=0;
	dp[a][b][c]=p[a]*dfs(a+1,(b-1)<0?0:(b-1),(c+A[a])>200?200:(c+A[a]));
	dp[a][b][c]+=(1-p[a])*dfs(a+1,b,c);
	return dp[a][b][c];
}

int main()
{
	scanf("%d%d%d",&n,&l,&k);
	for(int i=0;i<n;i++)
		scanf("%lf",&p[i]),p[i]/=100;
	for(int i=0;i<n;i++)
		scanf("%lf",&A[i]);
	double ret=dfs(0,l,k);
	printf("%.11f\n",ret);
	return 0;
}
