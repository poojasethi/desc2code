#include <iostream>
#include <iomanip>
using namespace std;

double mem[215][215][415];
int n, lim, k;
int p[215];
int val[215];
double getdp(int ind, int wins, int cap) {
	if (cap > 205) cap = 205;
	if (ind == n) {
		if (wins < lim) return 0.0;
		return (cap >= 0) ? 1.0 : 0.0;
	} else {
		double& res = mem[ind][wins][cap + 205];
		if (res >= -1e-8) return res;
		res = (100 - p[ind]) * getdp(ind + 1, wins, cap);
		res += p[ind] * getdp(ind + 1, wins + 1, cap + val[ind]);
		res *= 0.01;
		return res;
	}
}
int main() {
	for (int i = 0; i < 215; i++) for (int j = 0; j < 215; j++) for (int k = 0; k < 415; k++) mem[i][j][k] = -1;
	cin >> n >> lim >> k;
	for (int i = 0; i < n; i++) cin >> p[i];
	for (int i = 0; i < n; i++) cin >> val[i];
	cout << fixed << setprecision(12) << getdp(0, 0, k);
}