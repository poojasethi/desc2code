#include <bits/stdc++.h>
#define N 3007
#define pii pair<int,int>
#define piii pair<pii,int>
using namespace std;

set<piii>st;
vector<int> g[N];
int n,vis[N][N],prev[N][N],dis[N][N];

piii triple(int x,int y,int z)
{
	return make_pair(make_pair(x,y),z);
}

void bfs()
{
	queue<pii>q;
	vis[0][1]=1;
	q.push(make_pair(0,1));
	for(;!q.empty();)
	{
		pii p=q.front(); q.pop();
		int pre=p.first,cur=p.second;
		for(int i=0;i<g[cur].size();i++)
		{
			int v=g[cur][i];
			if(st.find(triple(pre,cur,v))!=st.end()) continue;
			if(!vis[cur][v])
				q.push(make_pair(cur,v)),vis[cur][v]=1,dis[cur][v]=dis[pre][cur]+1,prev[cur][v]=pre;
		}
	}
}

void solve()
{
	stack<int> st;
	int res=N<<9,pre,cur=n,temp;
	for(int i=1;i<=n;i++)
		if(dis[i][n] && dis[i][n]<res) res=dis[i][n],pre=i;
	if(res==N<<9)
		puts("-1");
	else
	{
		cout<<res<<endl;
		for(;cur;temp=prev[pre][cur],cur=pre,pre=temp)
			st.push(cur);
		for(;!st.empty();)
		{
			int t=st.top(); st.pop();
			if(st.empty()) printf("%d\n",t); else printf("%d ",t);
		}
	}
}

int main()
{
	int m,k,u,v,a,b,c;
	cin>>n>>m>>k;
	for(;m--;)
	{
		scanf("%d%d",&u,&v);
		g[u].push_back(v),g[v].push_back(u);
	}
	for(;k--;)
	{
		scanf("%d%d%d",&a,&b,&c);
		st.insert(triple(a,b,c));
	}
	bfs(),solve();
	return 0;
}

	  	 				    	    	 			  	  		