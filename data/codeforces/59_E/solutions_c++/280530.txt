#include <cstdio>
#include <iostream>
#include <vector>

#define N 3005
#define pb push_back

using namespace std;

int pre_s[N][N], q[N * N], preq[N * N], n, m, k, to_v[N], d[N][N];
vector<int> ref[N][N], graph[N];

void ans(int v, int state)
{
    if (state)
        ans(state, pre_s[v][state]);
    cout << v << " ";
}

int main()
{
    cin >> n >> m >> k;
    for (int i = 0; i < m; i++)
    {
        int x, y;
        cin >> x >> y;
        graph[x].pb(y);
        graph[y].pb(x);
    }

    for (int i = 0; i < k; i++)
    {
        int a, b, c;
        cin >> a >> b >> c;
        ref[b][a].pb(c);
    }

    int mark = 0;

    int l = 0, r = 1;
    q[0] = 1;
    preq[0] = 0;
    d[1][0] = 1;

    while (l < r)
    {
        mark++;

        int v = q[l], state = preq[l];

        if (v == n)
        {
            cout << d[v][state] - 1 << endl;
            ans(v, state);
            return 0;
        }

        for (int i = 0; i < ref[v][state].size(); i++)
        {
            int u = ref[v][state][i];
            to_v[u] = mark; 
        }

        for (int i = 0; i < graph[v].size(); i++)
        {
            int u = graph[v][i];

            if (to_v[u] != mark && !d[u][v])
            {
                q[r] = u;
                preq[r] = v;

                pre_s[u][v] = state;
                d[u][v] = d[v][state] + 1;
                r++;
            }
        }

        l++;
    }
    
    cout << "-1";
    return 0;
}
