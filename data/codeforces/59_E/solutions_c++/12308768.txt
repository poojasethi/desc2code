#include <stdio.h>
#include <string.h>
#include <queue>
#include <algorithm>
#include <set>
#include <vector>
#define maxn 3007
using namespace std;
typedef vector<int> VI;
 
set<int> con[maxn];
int N,M,K;
int pre[maxn][maxn];
VI adj[maxn];
 
struct Edge {
    int u,v,w;
    Edge() {};
    Edge(int u,int v,int w):u(u),v(v),w(w) {};
};
void Print(int u,int v){
    if(pre[u][v]<0){
        printf("%d",v);
        return ;
    }
    Print(pre[u][v],u);
    printf(" %d",v);
}
void solve() {
    queue<Edge> Q;
    int i,j,k,u,v,pr;
    Edge tmp;
    memset(pre,-1,sizeof pre);
    Q.push(Edge(0,1,0));
    pre[0][1]=-2;
    while(!Q.empty()) {
        tmp=Q.front();
        Q.pop();
        pr=tmp.u;
        u=tmp.v;
        if(u==N) break;
        for(j=0; j<adj[u].size(); j++) {
            v=adj[u][j];
            if(pre[u][v]!=-1) continue;
            if(con[pr].count(u*maxn+v)) continue;
            pre[u][v]=pr;
            Q.push(Edge(u,v,tmp.w+1));
        }
 
    }
    if(u==N){
        printf("%d\n",tmp.w);
        Print(tmp.u,tmp.v);
        puts("");
    }else {
        puts("-1");
 
    }
 
 
 
}
int main() {
    scanf("%d%d%d",&N,&M,&K);
    int i,j,k,s,t,th;
    for(i=0; i<M; i++) {
        scanf("%d%d",&s,&t);
        adj[s].push_back(t);
        adj[t].push_back(s);
    }
    for(i=0; i<K; i++) {
        scanf("%d%d%d",&s,&t,&th);
        con[s].insert(t*maxn+th);
    }
    solve();
 
    return 0;
} 

 		  	  		   	  		 	 			  		  	