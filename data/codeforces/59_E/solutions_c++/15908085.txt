#include<bits/stdc++.h>
using namespace std;
const int maxn=30*100+10;
int par[maxn][maxn];
long long w[maxn][maxn];
vector<int> ans,adj[maxn];
queue<pair<int,int> > qe;
set<pair<pair<int,int>,int> > st;
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n,m,k;
    cin>>n>>m>>k;
    for(int i=1; i<=m; i++)
    {
        int v,u;
        cin>>v>>u;
        adj[v].push_back(u);
        adj[u].push_back(v);
    }
    for(int i=1; i<=k; i++)
    {
        int a,b,c;
        cin>>a>>b>>c;
        st.insert( {{a,b},c});
    }
    qe.push( {0,1});
    while(qe.size())
    {
        int p=qe.front().first,v=qe.front().second;
        long long d=w[p][v];
        qe.pop();
        for(int i=0; i<adj[v].size(); i++)
        {
            int u=adj[v][i];
            long long d2=w[v][u];
            if(d2==0 && st.find( {{p,v},u})==st.end())
            {
                w[v][u]=d+1;
                par[v][u]=p;
                qe.push( {v,u});
            }
        }
    }
    int v=0;
    long long mn=0;
    for(int i=0; i<adj[n].size(); i++)
    {
        int u=adj[n][i];
        long long d=w[u][n];
        if(d!=0)
            if(mn==0)
            {
                mn=d;
                v=u;
            }
            else if(d<mn)
            {
                mn=d;
                v=u;
            }
    }
    if(mn==0)
    {
        cout<<"-1\n";
        return 0;
    }
    cout<<mn<<'\n';
    int u=n;
    ans.push_back(n);
    while(v!=0)
    {
        ans.push_back(v);
        int p=par[v][u];
        u=v;
        v=p;
    }
    for(int i=ans.size()-1; i>=0; i--)
        cout<<ans[i]<<' ';
    cout<<'\n';
    return 0;
}

  		  							   				   		  		 	