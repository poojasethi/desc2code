//In the name of Allah
#include <bits/stdC++.h>

using namespace std;
#define PB push_back
#define ll long long
#define F first
#define S second
#define MP make_pair

const int N=(3e+3)+10;
vector<int> a[N];
set<pair<int,pair<int,int> > > b;
bool mark[N][N];
pair<int,int> p[N][N];

int main(){
    ios::sync_with_stdio(0);cin.tie(0);
    int n,m,k;
    cin>>n>>m>>k;
    for(int i=0,x,y;i<m;i++){
        cin>>x>>y;
        x--;y--;
        a[x].PB(y);
        a[y].PB(x);
    }
    for(int i=0,u,v,w;i<k;i++){
        cin>>u>>v>>w;
        u--;v--;w--;
        b.insert(MP(u,MP(v,w)));
    }
    queue<int> q;
    q.push(0);q.push(0);
    bool flag=false;
    p[0][0]=MP(-1,-1);
    int id=-1;

    while(q.size()){
        int u=q.front();q.pop();
        int v=q.front();q.pop();
        if(flag)break;

        for(int i=0;i<a[v].size();i++){
            if(!mark[v][a[v][i]] && b.find(MP(u,MP(v,a[v][i])))==b.end()){
                mark[v][a[v][i]]=true;
                p[v][a[v][i]]=MP(u,v);
                q.push(v);
                q.push(a[v][i]);
                if(a[v][i]==n-1){
                    flag=true;
                    id=v;
                    break;
                }
            }
        }
    }
    if(id==-1)return cout<<-1,0;
    vector<int> ans;

    pair<int,int> d=MP(id,n-1);
    while(d.F!=-1){
        ans.PB(d.S+1);
        d=p[d.F][d.S];
    }
    cout<<ans.size()-1<<"\n";
    for(int i=ans.size()-1;i>=0;i--)cout<<ans[i]<<" ";

    return 0;
}

	   	   		  		      	 	    	 	