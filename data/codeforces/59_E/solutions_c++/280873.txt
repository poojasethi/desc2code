#include<cstdio>
#include<cstring>
#include<set>

using namespace std;

#define MAXN 3010
#define MAXM 60000
#define MAXQ 10000000
#define MAXK 500000

int N,M,K;

struct Edge{
	int V[MAXM];
	int Ne[MAXM];
	int R[MAXN];
	int sz;

	void Add( int a, int b){
		V[++sz]=b;Ne[sz]=R[a];R[a]=sz;
	}
} E;

struct Tk{
	int V[MAXK];
	int Ne[MAXK];
	int R[MAXN][MAXN];
	int sz;

	void Add( int a, int b, int c){
		V[++sz]=c;Ne[sz]=R[a][b];R[a][b]=sz;
	}
} T;

struct queue{
	int v,last;
} Q[MAXQ];

int D[MAXN][MAXN];
int P[MAXN][MAXN];

void BFS(){
	int h,t,p;
	set<int> S;
	D[1][0]=1;
	Q[1].v=1;Q[1].last=0;
	for (h=t=1;h<=t;h++){
		S.clear();
		for (p=T.R[Q[h].last][Q[h].v];p;p=T.Ne[p])
			S.insert(T.V[p]);
		for (p=E.R[Q[h].v];p;p=E.Ne[p])
			if (!D[Q[h].v][E.V[p]]&&S.find(E.V[p])==S.end()){
				Q[++t].v=E.V[p];Q[t].last=Q[h].v;
				P[Q[h].v][E.V[p]]=Q[h].last;
				D[Q[h].v][E.V[p]]=D[Q[h].last][Q[h].v]+1;
			}
	}
}

void Print( int a, int b){
	if (a) Print(P[a][b],a);
	printf("%d ",b);
}


int main(){
	scanf("%d%d%d",&N,&M,&K);

	int a,b,c;
	for (int i=1;i<=M;i++){
		scanf("%d%d",&a,&b);
		E.Add(a,b);E.Add(b,a);
	}

	for (int i=1;i<=K;i++){
		scanf("%d%d%d",&a,&b,&c);
		T.Add(a,b,c);
	}

	BFS();
	
	int min=0x7ffffff,minsum;
	for (int i=1;i<=N;i++)
		if (D[i][N]&&D[i][N]<min)
			min=D[i][N],minsum=i;

	if (min==0x7ffffff){
		printf("-1\n");
		return 0;
	}
	printf("%d\n",min);
	Print(minsum,N);
}
