#include <cstdio>
#include <vector>
#include <set>
#include <queue>

using namespace std;

struct node
{
  int no,pre,d;
};

vector<int> f[3001];
set<pair<int,int> > ban[3001];
queue<node> q;
int p[3001][3001],ans[3001];
bool v[3001][3001];

int main(void)
{
  int n,m,s;
  scanf("%d %d %d",&n,&m,&s);
  for(int i=1;i<=m;++i)
  {
    int j,k;
    scanf("%d %d",&j,&k);
    f[j].push_back(k);
    f[k].push_back(j);
  }
  for(int i=1;i<=s;++i)
  {
    int j,k,l;
    scanf("%d %d %d",&j,&k,&l);
    ban[j].insert(make_pair(k,l));
  }
  for(int i=0;i<(int)f[1].size();++i)
  {
    node temp;
    temp.no=f[1][i];
    temp.pre=1;
    temp.d=1;
    q.push(temp);
    v[1][f[1][i]]=true;
  }
  while(!q.empty())
  {
    node h=q.front();
    if(h.no==n)
      break;
    int i=h.pre,j=h.no;
    for(int l=0;l<(int)f[j].size();++l)
    {
      int k=f[j][l];
      if((ban[i].count(make_pair(j,k))>0)||(v[j][k]))
        continue;
      node e;
      e.no=k;
      e.pre=j;
      e.d=h.d+1;
      p[j][k]=i;
      v[j][k]=true;
      q.push(e);
    }
    q.pop();
  }
  if(q.empty())
    printf("-1\n");
  else
  {
    printf("%d\n",q.front().d);
    int i=q.front().pre,j=q.front().no,k=2;
    ans[1]=j;
    ans[2]=i;
    while(p[i][j]>0)
    {
      ans[++k]=p[i][j];
      j=i;
      i=ans[k];
    }
    for(i=k;i>1;--i)
      printf("%d ",ans[i]);
    printf("%d\n",ans[1]);
  }
  return 0;
}