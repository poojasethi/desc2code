#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <vector>
#include <set>
#include <queue>
using namespace std;
#define p(x) cout<<#x<<":"<<x<<"\n"
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define lim 3001

int n,m,f,i,x,y,z;
vector <int> V[lim];
int S[lim],D[lim][lim],P[lim][lim];
set <pair<int,pair<int,int> > > T;
queue <pair<int,int> > Q;

void push(int x2,int y,int z)
{
  if(D[x2][y]==-1)
  {
    D[x2][y]=z;
    P[x2][y]=x;
    Q.push(mp(x2,y));
  }
}
int main()
{
  scanf("%d%d%d",&n,&m,&f);
  for(i=0;i<m;i++)
  {
    scanf("%d%d",&x,&y);
    x--;
    y--;
    V[x].pb(y);
    S[x]++;
    V[y].pb(x);
    S[y]++;
  }
  for(i=0;i<f;i++)
  {
    scanf("%d%d%d",&x,&y,&z);
    T.insert(mp(x-1,mp(y-1,z-1)));
  }
  memset(D,-1,sizeof D);
  push(0,0,0);
  while(!Q.empty())
  {
    x=Q.front().f;
    y=Q.front().s;
    if(y==n-1)
      break;
    Q.pop();
    for(i=0;i<S[y];i++)
    {
      z=V[y][i];
      if(T.find(mp(x,mp(y,z)))==T.end())
        push(y,z,D[x][y]+1);
    }
  }
  if(Q.empty())
    printf("-1");
  else
  {
    printf("%d\n",D[x][y]);
    V[0].clear();
    while(1)
    {
      V[0].pb(y+1);
      if(!y)
        break;
      z=x;
      x=P[x][y];
      y=z;
    }
    reverse(V[0].begin(),V[0].end());
    for(i=0;i<V[0].size();i++)
      printf("%d ",V[0][i]);
  }
  return 0;
}
