#include<stdio.h>
#include<vector>
#include<set>
#include<queue>
using namespace std;
typedef  pair<int,int> d2;
typedef pair<d2,int> d3;
vector<int> g[3010];
vector<int> ans;
set<d3> fb;
char color[3010][3010];
int p[3010][3010];
int n,m,k;
int cal_path(int u,int v)
{
    if(v==1)
    {
        ans.push_back(v);
        return 0;
    }
    cal_path(p[u][v],u);
    ans.push_back(v);
    return 0;
}
int bfs(void)
{
    int a,b,c,i,j;
    queue<d2> q;
    color[0][1]=1;
    q.push(d2(0,1));
    while(!q.empty())
    {
        d2 cur=q.front();
        q.pop();
        a=cur.first;
        b=cur.second;
        for(i=0;i<g[b].size();i++)
        {
            c=g[b][i];
            if(color[b][c] || fb.find(d3(d2(a,b),c))!=fb.end())
                continue;

            color[b][c]=1;
            p[b][c]=a;
            q.push(d2(b,c));
            if(c==n)
            {
                cal_path(b,c);
                printf("%d\n",ans.size()-1);
                printf("%d",ans[0]);
                for(j=1;j<ans.size();j++)
                {
                    printf(" %d",ans[j]);
                }
                printf("\n");
                return 0;
            }

        }
    }

    printf("-1\n");
    return 0;
}
int main()
{
    int u,v,i,a,b,c;
    scanf("%d%d%d",&n,&m,&k);

    for(i=0;i<m;i++)
    {
        scanf("%d%d",&u,&v);
        g[u].push_back(v);
        g[v].push_back(u);
    }
    for(i=0;i<k;i++)
    {
        scanf("%d%d%d",&a,&b,&c);
        fb.insert(d3(d2(a,b),c));
    }
    bfs();
    return 0;
}