#include <bits/stdc++.h>
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ll long long
#define inf 2000000000
#define sqr(a)  ((a)*(a))
#define pii pair<int,int>
#define pdd pair<double,double>
#define max3(a,b,c) max(a,max(b,c))
#define min3(a,b,c) min(a,min(b,c))
#define FOR(a,b,c) for(int a=b;a<=c;a++)
#define ROF(a,b,c) for(int a=b;a>=c;a--)
#define dbgs(x) cerr << (#x) << " --> " << (x) << ' '
#define dbg(x) cerr << (#x) << " --> " << (x) << endl
#define foreach(itit,gg) for(typeof(gg.begin())itit=gg.begin();itit!=gg.end();itit++)
#define TIME cerr << "\nTime: " << (double) clock() / CLOCKS_PER_SEC << " seconds." << endl
using namespace std;
int N,M,K;
int vis[3005][3005],dad[3005][3005];
vector<int> V[3005];
queue<pair<int,pii> > q;
set<pair<int,pii> > yasak;
int main(void)
{
	int x,y,z,s;
	int cost,node,ata;
	scanf("%d %d %d",&N,&M,&K);
	while(M--){
		scanf("%d %d",&x,&y);
		V[x].pb(y);
		V[y].pb(x);
	}

	while(K--){
		scanf("%d %d %d",&x,&y,&z);
		yasak.insert(mp(x,mp(y,z)));
	}
	
	q.push(mp(0,mp(1,-1)));
	
	while(!q.empty()){
		
		cost = q.front().f;
		node = q.front().s.f;
		ata  = q.front().s.s;
		q.pop();
		
		if(node == N){

			cout << cost << endl;	
			int u = node , v = ata ; 
			vector<int> res;
			
			do{
				
				res.push_back(u);
				int t = u ; 
				u = v ; 
				v = dad[t][v];		
				
			}while(u && v);  
			reverse(res.begin(),res.end());
			foreach(it,res)
				cout << *it << " ";
			return 0;
		}
		foreach(it,V[node])
			if(!vis[node][*it] && yasak.find(mp(ata,mp(node,*it))) == yasak.end()){		
					
				vis[node][*it] = 1;
				dad[*it][node] = ata;
				q.push(mp(cost+1,mp(*it,node)));
			}
	}
	cout << -1;
	TIME;	
	return 0;
}
