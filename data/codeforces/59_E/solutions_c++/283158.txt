// be name OO
#include <cstdio>
#include <vector>
#include <utility>
#include <cstring>
#include <queue>
#include <set>
using namespace std;
const int MN=3000+5;
typedef pair<int,int> pie;
typedef pair<pie,int> tp;
set <tp> ill;
bool mark[MN][MN];
int par[MN][MN];
vector <int> list[MN];
vector <int> sol;
queue<pie> Q;
int n,m,k;
// 1 BASE
void find(int a,int b)
{
	if (b!=1)
		find(par[a][b],a);
	sol.push_back(b);
}
bool bfs(int p,int v)
{
	memset(par,-1,sizeof(par));
	mark[p][v]=1;
	Q.push(pie(p,v));
	while (!Q.empty())
	{
		pie now=Q.front();
		Q.pop();
		int a=now.first,b=now.second;
		for (int i=0;i<list[b].size();i++)
		{
			int u=list[b][i];
			if (mark[b][u]==0)
			{
				if (ill.find(tp(pie(a,b),u))!=ill.end())
					continue;
				mark[b][u]=1;
				par[b][u]=a;
				Q.push(pie(b,u));
				if (u==n)
				{
					find(b,u);
					printf("%d\n",sol.size()-1);
					for (int i=0;i<sol.size();i++)
						printf("%d ",sol[i]);
					printf("\n");
					return 1;
				}
			}
		}
	}
	return 0;
}
int main()
{
	scanf("%d %d %d",&n,&m,&k);
	for (int i=0;i<m;i++)
	{
		int a,b;
		scanf("%d %d",&a,&b);
		list[a].push_back(b);
		list[b].push_back(a);
	}
	for (int i=0;i<k;i++)
	{
		int a,b,c;
		scanf("%d %d %d",&a,&b,&c);
		ill.insert(tp(pie(a,b),c));
	}
	if (!bfs(0,1))
	{
		printf("-1\n");
		return 0;
	}
	return 0;
}
