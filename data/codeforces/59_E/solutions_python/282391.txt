read = lambda: map (int, raw_input ().split ())
n, m, k = read ()
g = [[] for i in xrange (n + 2)]
for _ in xrange (m):
    u, v = read ()
    g[u].append (v)
    g[v].append (u)
g[n].append (n + 1)

triples = set (a + (b + c * n) * n for a, b, c in (read () for i in xrange (k)))
p = [[-1 for j in xrange (n + 2)] for i in xrange (n + 2)]
q = [(0, 1)]
p[0][1] = 0
while q and p[n][n + 1] == -1:
    w, u = q.pop (0)
    for v in g[u]:
        if p[u][v] != -1 or w + (u + v * n) * n in triples:
            continue
        p[u][v] = w
        if v == n + 1:
            break
        q.append ((u, v))
        
if p[n][n + 1] != -1:
    ans = []
    i, j = n, n + 1
    while i:
        ans.append (i)
        i, j = p[i][j], i
    print len (ans) - 1
    print ' '.join (map (str, reversed (ans)))
else:
    print -1         
            


