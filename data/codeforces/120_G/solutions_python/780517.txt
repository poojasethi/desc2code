import sys
from collections import defaultdict
from collections import deque
sys.stdin = open('input.txt', 'r')
sys.stdout = open('output.txt', 'w')

"""
states:

i,j
deck
d
a
b
point
"""
a = {}
b = {}

n,t = map(int, raw_input().split())
for i in xrange(1,n+1):
	a[i,1], b[i,1], a[i,2], b[i,2] = map(int, raw_input().split())
m = int(raw_input())
deck = deque()
for i in xrange(1,m+1):
	word = raw_input()
	c = int(raw_input())
	deck.append((word, c, i))

# game begin
def turn(n):
	while True:
		for j in (1, 2):
			for i in xrange(1, n+1):
				yield i, j

d = defaultdict(int)
point = [[] for i in xrange(n+1)]
for i, j in turn(n):
	rest = t
	q = j % 2 + 1
	while len(deck) > 0 and rest > 0:
		w, c, k = deck.popleft()
		needtime = max(1, c-(a[i,j]+b[i,q])-d[i,k])
		if needtime <= rest:
			rest -= needtime
			point[i].append(w)
		else:
			d[i,k] += rest
			rest = 0
			deck.append((w,c,k))
	if not deck: break

for l in point[1:]:
	print "%s %s"%(len(l), ' '.join(l))
