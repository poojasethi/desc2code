#include <iostream>
#include <cstdio>
#include <cstring>
#define N 110
using namespace std;
bool kill[N];
int d[110][110], a[110][3], b[110][3];
int f[N][N];
int c[N];
int killnum[N];
	int n, t, m;
int last;
int team = 0, pro = 0, j = 1;
char s[110][30];
int user[N];
void nextPro()
{
	pro++;
	while ( kill[pro] || pro == m )
	{
		if ( pro == m ) pro = 0;
		else ++pro;
	}
}
void nextTeam()
{
	++team;
	if ( team == n )
	{
		team = 0;
		j = 3-j;
	}
}
int main()
{
	freopen( "input.txt", "r", stdin);
	freopen( "output.txt", "w", stdout);
	scanf( "%d%d", &n, &t );
	for ( int i = 0; i < n; ++i )
		scanf( "%d%d%d%d", &a[i][1], &b[i][1], &a[i][2], &b[i][2] );
	scanf( "%d", &m );
	last = m;
	for ( int i = 0; i < m; ++i )
		scanf( "%s%d", s[i], &c[i] );

	memset( d, 0, sizeof(d));
	int turn = t;
	memset( killnum, 0, sizeof(killnum));
	memset( kill, 0, sizeof(kill));
	memset( f, 0, sizeof(f));
	while ( last > 0 )
	{
		int use = max( 1, c[pro]-(a[team][j]+b[team][3-j])-d[team][pro] );
		if ( use <= turn )
		{
			killnum[team]++;
			f[team][killnum[team]] = pro;
			last--;
			kill[pro] = true;
			turn -= use;
			if ( !last ) break;
			if ( turn != 0 ) nextPro();
		}
		else
		{
			d[team][pro]+= turn;
			nextPro();
			nextTeam();
			turn = t;
		}
	}
	for ( int i = 0; i < n; ++i )
	{
		printf( "%d", killnum[i] );
		for ( int j = 1; j <= killnum[i]; ++j )
			printf( " %s", s[f[i][j]] );
		printf( "\n");
	}

}

