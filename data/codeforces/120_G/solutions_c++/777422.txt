#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;

int n, m, t, cnt, card, a[105][2], b[105][2], c[105], d[105][105], v[105], score[105], rem, need;
char s[105][25];
vector<int> solve[105];

int findcard(int x){
	do{
		x = (x + 1) % m;
	}   while (v[x]);
	return x;
}

int main(){
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	scanf("%d%d", &n, &t);
	for (int i=0; i<n; i++) scanf("%d%d%d%d", &a[i][0], &b[i][0], &a[i][1], &b[i][1]);
	scanf("%d", &m);
	for (int i=0; i<m; i++) scanf("%s%d", s[i], &c[i]);
	
	cnt = 0;
	card = 0;
	while (cnt < m){
		for (int j=0; j<2 && cnt<m; j++){
			for (int i=0; i<n && cnt<m; i++){
				rem = t;
				while (rem > 0 && cnt<m){
					need = max(1, c[card] - a[i][j] - b[i][j^1] - d[i][card]);
					if (need <= rem) v[card]=1, rem -= need, score[i]++, cnt++, solve[i].push_back(card);
					else d[i][card] += rem, rem = 0;
					if (cnt < m) card = findcard(card);
				}
			}
		}
	}
	
	for (int i=0; i<n; i++){
		printf("%d", score[i]);
		for (int j=0; j<solve[i].size(); j++) printf(" %s", s[solve[i][j]]);
		printf("\n");
	}

	return 0;
}
