#include<stdio.h>
#include<string.h>
#include<queue>
#include<algorithm>
#include<vector>
using namespace std;

#define PB push_back

int a[111][2], b[111][2];
int c[111], d[111][111];
char s[111][25];

int main(){
	int i, j, k, m, n, t;
	freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
	scanf("%d%d", &n, &t);
	for(i = 0; i < n; i++){
		scanf("%d%d%d%d", &a[i][0], &a[i][1], &b[i][0], &b[i][1]);
	}
	deque<int> q;
	scanf("%d", &m);
	for(i = 0; i < m; i++){
		scanf("%s", s[i]);
		scanf("%d", c + i);
		q.push_back(i);
	}
	vector<int> ans[n];
	while(!q.empty()){
		for(j = 0; j < 2; j++){
			for(i = 0; i < n; i++){
				int tt = t;
				while(tt && !q.empty()){
					k = q.front();
					q.pop_front();
					int dt = max(1, c[k] - (a[i][j] + b[i][1-j]) - d[i][k]);
					if(tt >= dt){
						tt -= dt;
						ans[i].PB(k);
					}else{
						d[i][k] += tt;
						tt = 0;
						q.push_back(k);
					}
				}
			}
		}
	}
	for(i = 0; i < n; i++){
		printf("%d", ans[i].size());
		for(j = 0; j < ans[i].size(); j++){
			printf(" %s", s[ans[i][j]]);
		}
		puts("");
	}
}
