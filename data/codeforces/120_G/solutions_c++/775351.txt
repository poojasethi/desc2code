#include <iostream>
#include <fstream>
#include <vector>
#include <queue>
using namespace std;

vector<int> w[110];
int a[110][2], b[110][2], c[110], d[110][110];
vector<string> card;

int main() {
  ifstream in("input.txt");
  int n, t; in >> n >> t;
  for (int i = 0; i < n; i++)
    in >> a[i][0] >> b[i][0] >> a[i][1] >> b[i][1];

  int m; in >> m;
  for (int i = 0; i < m; i++) {
    string s; in >> s; card.push_back(s);
    in >> c[i];
  }

  for (int i = 0; i < n; i++)
    for (int j = 0; j < m; j++)
      d[i][j] = 0;

  queue<int> left;
  for (int i = 0; i < m; i++) left.push(i);

  int curn = 0, curp = 0;
  while (!left.empty()) {
    int curt = t;
    while (curt > 0 && !left.empty()) {
      int cur = left.front(); left.pop();
      int uset = max(1, c[cur] - a[curn][curp] - b[curn][1-curp] - d[curn][cur]);
      if (uset > curt) {
        d[curn][cur] += curt;
        curt = 0;
        left.push(cur);
      } else {
        curt -= uset;
        w[curn].push_back(cur);
      }
    }

    curn++;
    if (curn == n) { curn = 0; curp = 1-curp; }
  }

  ofstream out("output.txt");
  for (int i = 0; i < n; i++) {
    out << w[i].size();
    for (int j = 0; j < w[i].size(); j++)
      out << " " << card[w[i][j]];
    out << endl;
  }
  return 0;
}
