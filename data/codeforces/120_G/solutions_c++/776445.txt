#include <cstdio>
#include <string>
#include <vector>
#include <cstring>
#include <iostream>
#include <algorithm>

using namespace std ;

const int N = 110 ;

int n, m, ti ;
int a[N][2], b[N][2], has[N][N] ;
struct Str
{
    int c, p ;
    char s[25] ;
}q[1000000] ;
vector<int>ans[N] ;

int main ()
{
    freopen ("input.txt", "r", stdin) ;
    freopen ("output.txt", "w", stdout) ;
    scanf ("%d%d", &n, &ti) ;
    for (int i = 0; i < n; i ++ ) scanf ("%d%d%d%d", &a[i][0], &b[i][0], &a[i][1], &b[i][1]) ;
    scanf ("%d", &m) ;
    for (int i = 0; i < m; i ++ ) scanf ("%s%d", q[i].s, &q[i].c), q[i].p = i ;
    
    int hh = 0, tt = m - 1, x = 0, y = 0, t = ti ;
    while (hh <= tt)
    {
        Str s = q[hh ++ ] ;
        int v = max (1, s.c - (a[x][y] + b[x][!y]) - has[x][s.p]) ;
        if (v >= t)
        {
            if (v > t)
            {
                has[x][s.p] += t ;
                q[ ++ tt] = s ;
            }
            else ans[x].push_back (s.p) ;
            x ++ ;
            if (x == n) x = 0, y = !y ;
            t = ti ;
            continue ;
        }
        t -= v, ans[x].push_back (s.p) ;
    }
    
    for (int i = 0; i < n; i ++ )
    {
        printf ("%d ", ans[i].size ()) ;
        for (int j = 0, mj = ans[i].size (); j < mj; j ++ ) printf ("%s ", q[ans[i][j]].s) ;
        puts ("") ;
    }
    //system ("pause") ;
    fclose (stdin) ;
    fclose (stdout) ;
    return 0 ;
}
