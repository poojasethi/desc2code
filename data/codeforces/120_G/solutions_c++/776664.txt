#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <iostream>
#include <string>
#include <cctype>
#include <vector>

using namespace std;

#define PB push_back
#define MP make_pair
#define A first
#define B second
#define maxn (110)

int a[maxn][2], b[maxn][2], c[maxn], d[maxn][maxn];
bool flag[maxn];
int n, m, t;
string s[maxn];
vector<int> ans[maxn];

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	cin >> n >> t;
	for (int i = 0; i < n; ++i) cin >> a[i][0] >> b[i][0] >> a[i][1] >> b[i][1];
	cin >> m;
	for (int i = 0; i < m; ++i) cin >> s[i] >> c[i];

	for (int tot = m, i = 0, j = 0, k = 0; tot; ++i) {
		int rest = t;
		if (i >= n) i = 0, k ^= 1;

		//printf("%d %d: \n", i, k);

		while (tot && rest) {
			int v = max(1, c[j] - a[i][k] - b[i][k ^ 1] - d[i][j]);
			if (v > rest) {
				d[i][j] += rest; break;
			}

			//printf("%d %d %d\n", j, rest, v);

			rest -= v, ans[i].PB(j), flag[j] = true, tot--;

			if (!rest) break;

			(j += 1) %= m; while (flag[j] && tot) (j += 1) %= m;
		}

		(j += 1) %= m; while (flag[j] && tot) (j += 1) %= m;
	}

	for (int i = 0; i < n; ++i) {
		//sort(ans[i].begin(), ans[i].end());
		cout << ans[i].size();
		for (int j = 0; j < ans[i].size(); ++j) cout << ' ' << s[ans[i][j]];
		cout << endl;
	}

	return 0;
}
