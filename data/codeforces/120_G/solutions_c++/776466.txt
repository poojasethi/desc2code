#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <string>

using namespace std;

const int maxn = 100 + 10;
const int maxm = 100 + 10;
const int maxl = 20 + 5;

int a[maxn][2], b[maxn][2];
char words[maxm][maxl];
int c[maxm];
int d[maxn][maxm];
vector<string> ans[maxn];
int n, t, m;

void play() {
	int k = 0, left = m;
	memset(d, 0, sizeof(d));
	while (left > 0) {
		for (int j = 0; j < 2; ++j)
			for (int i = 0; i < n; ++i) {
				if (left == 0) return;
			
				int q = 1 - j;
			
				int remain = t;
			
				while (remain > 0 && left > 0) {
					while (c[k] == 0) k = (k + 1) % m;
			
					int tmp = max(1, c[k] - (a[i][j] + b[i][q]) - d[i][k]);
				
					if (remain >= tmp) {
						remain -= tmp;
						ans[i].push_back(words[k]);
						c[k] = 0;
						--left;
					}
					else {
						d[i][k] += remain;
						k = (k + 1) % m;
						break;
					}
				}
			}
	}
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	
	scanf("%d%d", &n, &t);
	for (int i = 0; i < n; ++i) scanf("%d%d%d%d", &a[i][0], &b[i][0], &a[i][1], &b[i][1]);
	scanf("%d", &m);
	for (int i = 0; i < m; ++i) scanf("%s%d", words[i], &c[i]);
	
	play();
	
	for (int i = 0; i < n; ++i) {
		printf("%d", ans[i].size());
		for (int j = 0; j < ans[i].size(); ++j) printf(" %s", ans[i][j].c_str());
		puts("");
	}
	
	return 0;
}
