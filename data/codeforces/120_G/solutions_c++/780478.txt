#include <iostream>
#include <cstring>
#include <cstdio>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;

int n,t,m;
struct Tp
{
	int a,b;
};
Tp ps[200][2];
struct Tcard
{
	string name;
	int c;
	int d[112];
	Tcard()
	{
		memset(d,0,sizeof(d));
	}
};

vector<Tcard> cards;
vector<string> ans[112];

int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d%d",&n,&t);
	for (int i=0;i<n;++i)
		scanf("%d%d%d%d",&ps[i][0].a,&ps[i][0].b,&ps[i][1].a,&ps[i][1].b);
	scanf("%d",&m);
	for (int i=0;i<m;++i)
	{
		Tcard temp;
		cin>>temp.name>>temp.c;
		cards.push_back(temp);
	}
	int nt=0,np=0;
	vector<Tcard>::iterator nc=cards.begin();
	bool flag=true;
	while(flag)
	{
		int iti=t;
		int need=max(1,nc->c-ps[nt][np].a-ps[nt][np^1].b-nc->d[nt]);
		while (iti-need>=0)
		{
			ans[nt].push_back(nc->name);
			cards.erase(nc);
			if (cards.empty())
			{
				flag=false;
				break;
			}
			iti-=need;
			if (nc==cards.end()) nc=cards.begin();
			need=max(1,nc->c-ps[nt][np].a-ps[nt][np^1].b-nc->d[nt]);
		}
		if (!flag) break;
		if (iti>0)
		{
			nc->d[nt]+=iti;
			nc++;if (nc==cards.end()) nc=cards.begin();
		}
		nt++;
		if (nt==n)
		{
			nt=0;np^=1;
		}
	}
	for (int i=0;i<n;++i)
	{
		cout<<ans[i].size();
		for (int j=0;j<ans[i].size();++j)
			cout<<' '<<ans[i][j];
		puts("");
	}
    return 0;
}
