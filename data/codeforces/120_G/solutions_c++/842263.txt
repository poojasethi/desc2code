#include <iostream>
#include <string>
#include <fstream>
#include <vector>
#include <queue>

using namespace std;

#define FOR(i, a, b) for (int i = (a); i < (b); i++)
#define MAXN 128

int a[MAXN][2], b[MAXN][2], c[MAXN], d[MAXN][MAXN];
string s[MAXN];
vector<string> res[MAXN];
int n, m, t;
queue<int> Q;

int main() {
	ifstream cin("input.txt");
	ofstream cout("output.txt");
	cin >> n >> t;
	FOR(i, 0, n) FOR(j, 0, 2) cin >> a[i][j] >> b[i][j];
	cin >> m;
	FOR(i, 0, m) cin >> s[i] >> c[i], Q.push(i);
	int cur = 0;
	while (!Q.empty()) {
		int team = cur%n;
		int player = (cur/n)%2;
		int rem = t;
		while (rem > 0 && !Q.empty()) {
			int word = Q.front();
			Q.pop();
			int spend = max(1, c[word]-(a[team][player]+b[team][1-player])-d[team][word]);
			if (rem >= spend) {
				res[team].push_back(s[word]);
			} else {
				Q.push(word);
				d[team][word] += rem;
			}
			rem -= spend;
		}
		cur++;
	}
	FOR(i, 0, n) {
		cout << res[i].size();
		FOR(j, 0, res[i].size()) cout << " " << res[i][j];
		cout << endl;
	}
}
