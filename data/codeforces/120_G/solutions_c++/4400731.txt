#include <iostream>
#include <vector>
#include <queue>
#include <fstream>

using namespace std;

#define cin fin
#define cout fout

ifstream fin("input.txt");
ofstream fout("output.txt");

int n;

void next(int& team, int& person)
{
	team++;
	if (team == n)
	{
		team = 0;
		person = 1 - person;
	}
}

int a[105][2], b[105][2], c[105], curr[105], d[105][105];
string name[105];
vector <string> ans[105];
queue <int> q;

int main()
{
	int t;
	cin >> n >> t;
	for (int i = 0; i < n; i++)
	{
		cin >> a[i][0] >> b[i][0] >> a[i][1] >> b[i][1];
		curr[i] = t;
	}
	int m;
	cin >> m;
	for (int i = 0; i < m; i++)
	{
		cin >> name[i];
		cin >> c[i];
		q.push(i);
	}
	int team = 0, person = 0;
	while (!q.empty())
		while (true)
		{
			int i = q.front();
			int need = max(1, c[i] - (a[team][person] + b[team][1 - person]) - d[team][i]);
//			cout << " team = " << team + 1 << " need = " << need << " current = " << curr[team] << endl;
			if (curr[team] >= need)
			{
				q.pop();
				curr[team] -= need;
				ans[team].push_back(name[i]);
				if (curr[team] == 0)
				{
					curr[team] = t;
					next(team, person);
				}
				break;
			}
			else
			{
				d[team][i] += curr[team];
				q.pop();
				q.push(i);
				curr[team] = t;
				next(team, person);
			}
		}
	for (int i = 0; i < n; i++)
	{
		cout << int(ans[i].size()) << " ";
		for (int j = 0; j < ans[i].size(); j++)
			cout << ans[i][j] << " ";
		cout << endl;
	}
}
