#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <cstring>
using namespace std;
int n,t,m;
int a[101][2],b[101][2];
int turn[101];
vector < int > ans[101];
int T[101];
int d[101][101];
int c[101];
string words[101];
bool completed[101];
bool found;

main()
{
 int i,j,k,dro,X;     
 freopen("input.txt","r",stdin);
 freopen("output.txt","w",stdout);
 scanf("%d %d",&n,&t);
 for(i=0;i<n;i++)
  scanf("%d %d %d %d",&a[i][0],&b[i][0],&a[i][1],&b[i][1]);
 scanf("%d",&m);
 for(i=0;i<m;i++)
 {
  cin >> words[i];               
  scanf("%d",&c[i]);
 }
 i=j=k=0;
 for(i=0;i<n;i++) T[i]=t;
 i=0;
 while(1>0)
 {
 // max(1,?ck?-?(aij?+?biq)?-?dik)     
  found = false;
  for(;k<m;k++)
  {
   if(!completed[k]){found= true; break;}
  }   
  if(!found)
  {
   for(k=0;k<m;k++)
    if(!completed[k]){ found = true; break;}
  }
  if(!found) break;
   if (turn[i]==0) X=1;
   else X=0;
  dro  = max(1,c[k]-(a[i][turn[i]]+b[i][X])-d[i][k]);
  
  if(dro<=T[i]){ completed[k]=true;   ans[i].push_back(k);   T[i]=(T[i]-dro); }else { d[i][k]+=T[i]; T[i]=-1; }
  if(T[i]<=0){ T[i]=t;turn[i]=X; i+=1;if(i==n)i=0;}
  k+=1;
 }
 for(i=0;i<n;i++)
 {
  
  printf("%d ",ans[i].size());
  for(k=0;k<ans[i].size();k++) printf("%s ",words[ans[i][k]].c_str());
  
  printf("\n");                
 }
 
}
