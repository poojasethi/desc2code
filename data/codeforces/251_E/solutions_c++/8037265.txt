#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 400010
#define mo 1000000007
#define int64 long long
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
const int a1[6][3]={{0,1,2},{0,2,1},{1,0,2},{1,2,0},{2,0,1},{2,1,0}};
int i,j,k,n,m,t,x,y;
int a[N],next[N],head[N],in[N],F[N],s[N],h[N],res[N];
inline void add(int x,int y) {
	a[++t]=y,next[t]=head[x],head[x]=t;
	a[++t]=x,next[t]=head[y],head[y]=t;
	in[x]++,in[y]++;
}
inline void print(int64 x) {
	x%=mo;
	if (x<0) x+=mo;
	printf("%I64d\n",x);
	exit(0);
}
int64 dfs_2(int x,int y,int fax,int fay);
int64 dfs_a2(int x,int fa) {
	if (s[x]&1) return 0;
	if (!F[x]) return s[x]/2;
	int w=x,last=fa,v,len=0,b[2],q=-1,i,j,an=0;
	for (;in[w]==2;) {
		for (v=head[w];v;v=next[v]) if (a[v]!=last) break;
		last=w,w=a[v];
		len++;
	}
	for (v=head[w];v;v=next[v]) if (a[v]!=last) b[++q]=a[v];
	{
		For(i,0,1) {
			int A=b[i];
		 	if (!F[A]&&s[A]<len) an=(an+dfs_2(b[i^1],0,w,0))%mo;
		 }
	}
	{
		For(i,0,1) {
			int A=b[i];
			if (in[A]==1&&len%2==0) an=(an+dfs_2(b[i^1],0,w,0))%mo;
			if (in[A]==2) {
				for (v=head[A];v;v=next[v]) if (a[v]!=w) break;
				int B=a[v];
				if (len%2==0) an=(an+dfs_2(b[i^1],B,w,A))%mo;
				if (!F[B]&&s[B]<=len) an=(an+dfs_2(b[i^1],0,w,0))%mo;
			}
			if (in[A]==3) {
				int c[2],t=-1;
				for (v=head[A];v;v=next[v]) if (a[v]!=w) c[++t]=a[v];
				For(j,0,1) {
					int B=c[j];
					if (!F[B]&&s[B]<=len) an=(an+dfs_2(b[i^1],c[j^1],w,A))%mo;
				}
			}
		}
	}
	return an;
}
int64 dfs_a3(int x,int fa) {
	if (s[x]&1) return 0;
	int w=-1,v,j,b[2],an=0;
	for (v=head[x];v;v=next[v]) if (a[v]!=fa) b[++w]=a[v];
	For(j,0,1) {
		if (j) swap(b[0],b[1]);
		if (in[b[0]]==1) an=(an+dfs_a2(b[1],x))%mo;
		if (in[b[0]]==2) {
			for (v=head[b[0]];v;v=next[v]) if (a[v]!=x) break;
			an=(an+dfs_2(b[1],a[v],x,b[0]))%mo;
		}
	}
	return an;
}
int64 dfs_2(int x,int y,int fax,int fay) {
	if ((s[x]+s[y])&1||F[x]&&F[y]) return 0;
	int v;
	for (;x&&y;) {
		if (in[x]==3||in[y]==3) return 0;
		for (v=head[x];v;v=next[v]) if (a[v]!=fax) break;
		fax=x,x=a[v];
		for (v=head[y];v;v=next[v]) if (a[v]!=fay) break;
		fay=y,y=a[v];
	}
	if (!x&&!y) return 1;
	if (!x) swap(x,y),swap(fax,fay);
	if (in[x]==1) return 0;
	if (h[x]) return res[x];
	h[x]=1;
	if (in[x]==2) res[x]=dfs_a2(x,fax);
	else res[x]=dfs_a3(x,fax);
	return res[x];
}
int64 dfs_1(int x) {
	int v,c[3],w=-1,i,j,an=0;
	for (v=head[x];v;v=next[v]) c[++w]=a[v];
	For(i,0,5) {
		int d[3];
		For(j,0,2) d[j]=c[a1[i][j]];
		int A=d[1];
		int e[2]={},q=-1;
		for (v=head[A];v;v=next[v]) if (a[v]!=x) e[++q]=a[v];
		For(j,0,1) {
			if (j) swap(e[0],e[1]);
			if (j&&q<0) continue;
			an=(dfs_2(d[0],e[0],x,d[1])*dfs_2(d[2],e[1],x,d[1])+an)%mo;
		}
	}
	return an;
}
void dfs(int x,int y) {
	int v;
	F[x]=in[x]==3; s[x]=1;
	for (v=head[x];v;v=next[v]) if (a[v]!=y) {
		dfs(a[v],x);
		F[x]|=F[a[v]];
		s[x]+=s[a[v]];
	}
}
int main() {
	scanf("%d",&n);
	For(i,1,2*n-1) {
		scanf("%d%d",&x,&y);
		add(x,y);
	}
	if (n==1) print(2);
	For(i,1,n*2) if (in[i]>3) print(0);
	k=0;
	For(i,1,n*2) if (in[i]==3) k=i;
	if (!k) print(2ll*n*n-2*n+4);
	dfs(k,0);
	print(dfs_1(k)*2);
	return 0;
}

                                                                                                                                            