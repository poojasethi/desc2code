#include <stdio.h>
#include <memory.h>
#include <string.h>

using namespace std;

int max(int a,int b) { return a>b?a:b; }

int D[5010][5010];
void lcp(char *s1, char *s2)
{
	for (int i=strlen(s1+1); i>0; i--) {
		for (int j=strlen(s2+1); j>0; j--) {
			D[i][j] = (s1[i]==s2[j])?1+D[i+1][j+1]:0; 
		}
	}
}
void min_l(int *M, int n)
{
	for (int i=1; i<=n; i++) {
		int mn=0;
		for (int j=1; j<=n; j++) {
			if (i==j) { continue; }
			mn = max(mn, D[i][j]);
		}
		M[i] = mn+1;
	}
}

int main()
{
	char s1[5010]={0},s2[5010]={0};
	scanf("%s%s",s1+1,s2+1);

	int min1[5010]={0},min2[5010]={0};
	lcp(s1,s1);
	min_l(min1, strlen(s1+1));
	memset(D,0,sizeof(D));
	lcp(s2,s2);
	min_l(min2, strlen(s2+1));
	memset(D,0,sizeof(D));
	lcp(s1,s2);
	
	int ret=1e9;
	for (int i=1; s1[i]; i++) {
		for (int j=1; s2[j]; j++) {
			int mx = max(min1[i],min2[j]);
			if (D[i][j] >= mx && ret > mx) { ret = mx; }
		}
	}
	printf("%d\n",(ret == 1e9)?-1:ret);
	
}
