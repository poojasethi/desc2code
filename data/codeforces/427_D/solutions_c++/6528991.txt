#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
using namespace std;

char S[5001], T[5001];
int N, m;
int f[5001];
int cnt[5001];
int ans;

int main() {
	scanf("%s", S); scanf("%s", T);
	N = strlen(S); m = strlen(T);
	ans = max(N, m) + 1;
	for (int I = 0; I < N; ++I) {
		int n = N - I;
		int t = 0;
		f[0] = 0; f[1] = 0;
		for (int i = 1; i < n; ++i) {
			int j = f[i];
			while (j && S[i + I] != S[j + I]) j = f[j];
			f[i + 1] = S[i + I] == S[j + I] ? j + 1 : 0;
		}
		int j = 0;
		for (int i = 0; i < N; ++i) {
			while (j && S[j + I] != S[i]) j = f[j];
			if (S[j + I] == S[i]) ++j;
			if (i - j + 1 == I) j = f[j];
			t = max(t, j);
		}
		++t;
		j = 0;
		memset(cnt, 0, sizeof(cnt));
		for (int i = 0; i < m; ++i) {
			while (j && S[j + I] != T[i]) j = f[j];
			if (S[j + I] == T[i]) ++j;
			++cnt[j];
		}
		for (int i = t; i <= m; ++i)
			if (cnt[i] == 1) ans = min(ans, i);
	}
	if (ans == max(N, m) + 1) ans = -1;
	printf("%d\n", ans);
	return 0;
}
