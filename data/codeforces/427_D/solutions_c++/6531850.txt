#include<iostream>
#include<cstdio>
#include<cstring>
#include<vector>
#include<string>
#include<queue>
#include<map>
#include<cstdio>
#include<algorithm>
#include<cmath>
using namespace std;

char s1[5005],s2[5005];
int dp[5005][5005];

int main() {
	int n,m,i,j,k;
	scanf("%s%s",s1+1,s2+1);
	n=strlen(s1+1);
	m=strlen(s2+1);
	for(i=1;i<=n;i++)
		for(j=1;j<=m;j++) if(s1[i]==s2[j]) {
			dp[i][j]=dp[i-1][j-1]+1;
		}
	int ans=-1;
	for(i=1;i<=n;i++) {
		int M=0,M1=0,num=0;
		for(j=1,k=0;j<=m;j++) {
			if(dp[i][j]>M) {
				M1=M;
				M=dp[i][j];
				num=1;
				k=j;
			} else if(dp[i][j]==M) {
				num++;
			} else if(dp[i][j]>M1) {
				M1=dp[i][j];
			}
		}
		int L1=M1+1,R1=M;
		if(L1>R1) continue;
		if(M>0&&num==1) {
			int MM=0,MM1=0; num=0;
			for(j=1;j<=n;j++) {
				if(dp[j][k]>MM) {
					MM1=MM;
					MM=dp[j][k];
					num=1;
				} else if(dp[j][k]==MM) {
					num++;
				} else if(dp[j][k]>MM1) {
					MM1=dp[j][k];
				}
			}
			int L2=MM1+1,R2=MM;
			if(L2>R2) continue;
			if(num==1) {
				L1=max(L1,L2);
				R1=min(R1,R2);
				if(L1<=R1&&(ans==-1||L1<ans)) ans=L1;
			}
		}
	}
	printf("%d\n",ans);
}
					




		

