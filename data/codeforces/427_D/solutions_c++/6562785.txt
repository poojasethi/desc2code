#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <climits>
#include <string.h>

using namespace std;

int lcp[5002][5002];
int minUnique1[5002];
int minUnique2[5002];

void mLCP(string s1, string s2)
{
	memset(lcp,0,sizeof(lcp));
	
	for(int i=s1.size()-1;i>=0;i--)
	{
		for(int j=s2.size()-1;j>=0;j--)
		{
			if(s1[i] == s2[j])
				lcp[i][j] = lcp[i+1][j+1]+1;
			else
				lcp[i][j] = 0;
		}
	}

}

int main()
{
	
	string s1,s2;
	cin >> s1 >> s2;

	
	mLCP(s1,s1);
	for(int i=0;i<s1.size();i++)
	{
		int mx = 0;
		for(int j=0;j<s1.size();j++)
		{
			if(i!=j)
			{
				mx = max(mx, lcp[i][j]);
			}
		}
		minUnique1[i] = mx + 1;
	}
	
	mLCP(s2,s2);
	for(int i=0;i<s2.size();i++)
	{
		int mx = 0;
		for(int j=0;j<s2.size();j++)
		{
			if(i!=j)
			{
				mx = max(mx, lcp[i][j]);
			}
		}
		minUnique2[i] = mx + 1;
	}
	
	int res = INT_MAX/2;

	mLCP(s1,s2);
	for(int i=0;i<s1.size();i++)
	{
		for(int j=0;j<s2.size();j++)
		{
			if(lcp[i][j] >= max(minUnique1[i] , minUnique2[j]))
				res = min(res, max(minUnique1[i] , minUnique2[j]));
		}
		
	}

	cout << (res == INT_MAX/2 ? -1 : res)<< endl;
	
}