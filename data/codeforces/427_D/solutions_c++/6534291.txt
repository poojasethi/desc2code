#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
using namespace std;

typedef int arr32[5010];

char s1[5010], s2[5010];
arr32 f[5010], L1, L2;
int n, m, ans = 5010;

void worker(char *s, int *L)  {
	int n = strlen(s + 1);
	for (int i = 1; i <= n; ++i)
		for (int j = 1; j <= n; ++j)
			if (s[i] == s[j])  f[i][j] = f[i - 1][j - 1] + 1;
			else  f[i][j] = 0;
	for (int i = 1; i <= n; ++i)  {
		L[i] = 1;
		for (int j = 1; j <= n; ++j)
			if (i != j)  L[i] = max(L[i], f[i][j] + 1);
	}
}
int main()  {
	//freopen("D.in", "r", stdin);
	//freopen("D.out", "w", stdout);

	scanf("%s", s1 + 1), n = strlen(s1 + 1);
	scanf("%s", s2 + 1), m = strlen(s2 + 1);

	worker(s1, L1), worker(s2, L2);

	for (int i = 1; i <= n; ++i)
		for (int j = 1; j <= m; ++j)
			if (s1[i] == s2[j])  {
				f[i][j] = f[i - 1][j - 1] + 1;
				if (L1[i] > i  ||  L2[j] > j)  continue;
				if (f[i][j] >= L1[i]  &&  f[i][j] >= L2[j])
					ans = min(ans, max(L1[i], L2[j]));
			}
			else  f[i][j] = 0;
	if (ans > 5000)  ans = -1;
	printf("%d\n", ans);
}
