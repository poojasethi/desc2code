#include <iostream>
#include <cstring>
using namespace std;

const int N = 5000 + 1, INF = (int) 1e9;
int f11[N][N], f22[N][N], f12[N][N], f1[N], f2[N], m, n;
char a[N], b[N];
bool mark[N];

int main() {
	ios::sync_with_stdio(false);
	cin >> a >> b;
	m = strlen(a);
	n = strlen(b);
	for(int i = m - 1; i >= 0; --i)
		for(int j = n - 1; j >= 0; --j)
			f12[i][j] = a[i] == b[j] ? f12[i + 1][j + 1] + 1 : 0;
	for(int i = m - 1; i >= 0; --i)
		for(int j = m - 1; j >= 0; --j)
			f11[i][j] = a[i] == a[j] ? f11[i + 1][j + 1] + 1 : 0;
	for(int i = n - 1; i >= 0; --i)
		for(int j = n - 1; j >= 0; --j)
			f22[i][j] = b[i] == b[j] ? f22[i + 1][j + 1] + 1 : 0;
	for(int i = 0; i < m; ++i) {
		memset(mark, 0, sizeof mark);
		for(int j = 0; j < m; ++j) if(i != j) mark[f11[i][j]] = true;
		f1[i] = INF;
		for(int j = m - i; j > 0 && !mark[j]; --j) f1[i] = j;
	}
	for(int i = 0; i < n; ++i) {
		memset(mark, 0, sizeof mark);
		for(int j = 0; j < n; ++j) if(i != j) mark[f22[i][j]] = true;
		f2[i] = INF;
		for(int j = n - i; j > 0 && !mark[j]; --j) f2[i] = j; 
	}
	int res = INF;
	for(int i = 0; i < m; ++i)
		for(int j = 0; j < n; ++j)
			if(f12[i][j] >= f1[i] && f12[i][j] >= f2[j])
				res = min(res, max(f1[i], f2[j]));
	cout << (res == INF ? -1 : res);
	return 0;
}
