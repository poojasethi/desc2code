#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cstdlib>
#include <cstring>
#include <string>

#define FOR(i, s, e) for (int i=(s);i<(e);i++)
#define FOE(i, s, e) for (int i=(s);i<=(e);i++)
#define FOD(i, s, e) for (int i=(s)-1;i>=(e);i--)
#define CLR(x, a) memset(x, a, sizeof(x))
#define LL long long int
using namespace std;

#define N 5005

int dp[N][N], f1[N], f2[N], f3[N];
char s1[N], s2[N];

void Calc(char *a, char *b, int dp[][N], int f[]){
	int n = strlen(a), m = strlen(b);
	for (int i=n;i>=0;i--)
		for (int j=m;j>=0;j--){
			if (i == n || j == m) dp[i][j] = 0;
			else if (a[i] == b[j]) dp[i][j] = 1 + dp[i + 1][j + 1];
			else dp[i][j] = 0;
		}
	
	FOR(i, 0, n){
		f[i] = 1;
		FOR(j, 0, n) if (j != i) f[i] = max(f[i], 1 + dp[i][j]);
	}
}

int main(){
	scanf("%s%s", s1, s2);
	Calc(s1, s1, dp, f1);
	Calc(s2, s2, dp, f2);
	Calc(s1, s2, dp, f3);
	int n = strlen(s1), m = strlen(s2), ret = n + m, f = 1;
	FOR(i, 0, n) FOR(j, 0, m)
		if (dp[i][j] >= f1[i] && dp[i][j] >= f2[j]){
			//printf("dp[%d][%d] = %d\n", i, j, dp[i][j]);
			f = 0;
			ret = min(ret, max(f1[i], f2[j]));
		}
	if (f) printf("-1\n");
	else printf("%d\n", ret);
	return 0;
}

