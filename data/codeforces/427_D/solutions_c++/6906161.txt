#include <stdio.h>
#include <string.h>
#include <algorithm>
using namespace std;
const int N = 5001;
char s1[N], s2[N];
int l1, l2;
int dp[3][N][N];
int mx[3][N];
void calcLCP(char *a, char *b, int l1, int l2, int dp[][N],int *mx){
    for (int i = l1 - 1; i >= 0;--i)
    for (int j = l2 - 1; j >= 0; --j)
    if (a[i] == b[j])
        dp[i][j] = 1 + dp[i + 1][j + 1];
    if (mx)
    for (int i = 0; i < l1; ++i){
        mx[i] = 0;
        for (int j = 0; j < l1; ++j)
            if (i != j)
                mx[i] = max(mx[i], dp[i][j]);
    }
}
int main()
{
    scanf("%s%s", s1, s2);
    l1 = strlen(s1);
    l2 = strlen(s2);
    calcLCP(s1, s1, l1, l1, dp[0], mx[0]);
    calcLCP(s2, s2, l2, l2, dp[1], mx[1]);
    calcLCP(s1, s2, l1, l2, dp[2], NULL);
    int res = l1+1;
    for (int a, b, c, i = 0; i < l1; ++i)
    for (int j = 0; j < l2; ++j){
        a = mx[0][i];
        b = mx[1][j];
        c = dp[2][i][j];
        if (a + 1 <= c && b + 1 <= c)
            res = min(res, max(a, b) + 1);
    }
    if (res == l1 + 1)
        res = -1;
    printf("%d\n", res);
    return 0;
}