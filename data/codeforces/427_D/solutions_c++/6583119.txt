#include<iostream>
#include<cstring>
using namespace std;

int lcp[5001][5001]={0};
int mUA[5001]={0},mUB[5001]={0};

inline void findLCP(string &a,string &b){
    for(int i=a.size()-1;i>=0;i--)
        for(int j=b.size()-1;j>=0;j--)
            if(a.at(i)==b.at(j))lcp[i][j]=lcp[i+1][j+1]+1;
}

int main(){
    string a,b;
    cin>>a>>b;
    findLCP(a,a);
    for(int i=0;i<a.size();i++){
        int c=0; 
        for(int j=0;j<a.size();j++){
            if(i==j)continue;
            c=max(c,lcp[i][j]);
        }
        c++;
        mUA[i]=c;
    }

    memset(lcp,0,sizeof(lcp));
    findLCP(b,b);
    for(int i=0;i<b.size();i++){
        int c=0; 
        for(int j=0;j<b.size();j++){
            if(i==j)continue;
            c=max(c,lcp[i][j]);
        }
        c++;
        mUB[i]=c;
    }

    int ans=5001;
    memset(lcp,0,sizeof(lcp));
    findLCP(a,b);
    for(int i=0;i<a.size();i++)
        for(int j=0;j<b.size();j++)
            if(lcp[i][j]>=max(mUA[i],mUB[j]))
                ans=min(ans,max(mUA[i],mUB[j]));

    if(ans>=5001)ans=-1;
    cout<<ans<<endl;
    return 0;
}
