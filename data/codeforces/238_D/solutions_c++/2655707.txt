#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <queue>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <ctime>

using namespace std;

bool v[100001], finish[100000], del[100001];
int ans[100000][10], l[100000], r[100000];
stack<int> start[100001], end[100002];
char str[100002];

int main() {
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	
	int n, q;
	scanf("%d%d%s", &n, &q, str + 1);
	for (int i = 0; i < q; i ++) {
		scanf("%d%d", &l[i], &r[i]);
		start[l[i]].push(i);
	}
	
	memset(v, false, sizeof(v));
	memset(del, false, sizeof(del));
	int cnt[10];
	memset(cnt, 0, sizeof(cnt));
	for (int i = 1; i <= n; i ++)
		if (! v[i]) {
			int p = i, d = 1;
			while (i <= p && p <= n) {
				v[p] = true;
				while (! start[p].empty()) {
					int t = start[p].top();
					start[p].pop();
					for (int j = 0; j < 10; j ++) ans[t][j] = -cnt[j];
					end[l[t] - 1].push(t);
					end[r[t] + 1].push(t);
				}
				if ('0' <= str[p] && str[p] <= '9') {
					cnt[str[p] - '0'] ++;
					if (str[p] > '0') str[p] --; else del[p] = true;
				} else if (str[p] == '<') {
					d = -1;
				} else if (str[p] == '>') {
					d = 1;
				}
				int bak = p;
				do {
					p += d;
					while (! end[p].empty()) {
						int t = end[p].top();
						end[p].pop();
						if (! finish[t]) {
							for (int j = 0; j < 10; j ++) ans[t][j] += cnt[j];
							finish[t] = true;
						}
					}
				} while (1 <= p && p <= n && del[p]);
				if (1 <= p && p <= n) {
					char a = str[p], b = str[bak];
					if ((a == '<' || a == '>') && (b == '<' || b == '>')) del[bak] = true;
				}
			}
		}
	
	for (int i = 0; i < q; i ++) {
		for (int j = 0; j < 9; j ++) printf("%d ", ans[i][j]);
		printf("%d\n", ans[i][9]);
	}
	
	return 0;
}
