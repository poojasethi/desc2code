#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <string>
using namespace std;
const int Maxn=100005,inf=999999999+208;
int n,q,t[Maxn][2],p[Maxn][2];
bool flag[Maxn];

struct event{
    int num;
    bool f;
}e[Maxn];

struct info{
    int c[10];
    void print(const info &rhs)const{
        for (int i=0;i<9;i++) printf("%d ",c[i]-rhs.c[i]);
        printf("%d\n",c[9]-rhs.c[9]);
    }
}cnt[Maxn*10],now;

void del(int x) {
    p[p[x][0]][1]=p[x][1];
    p[p[x][1]][0]=p[x][0];
}

void modify(int time,int dir,int &top,int stack[],int l,int r) {
    if (l>r) swap(l,r);
    while (top&&l<=stack[top]&&stack[top]<=r)
        t[stack[top--]][dir]=time;
}

void run(int s) {
    static int time=0,stack[2][Maxn],top[2];
    int cur=s,dir=1;
    top[0]=top[1]=0;
    while (cur>=s&&cur<=n) {
        if (e[cur].f) {
            dir=e[cur].num;
            if (p[cur][dir]&&e[p[cur][dir]].f) del(cur);
        }
        else {
            ++now.c[e[cur].num--];
            if (e[cur].num<0) del(cur);
        }
        cnt[++time]=now;
        if (!flag[cur]) {
            flag[cur]=true;
            stack[0][++top[0]]=cur;
            stack[1][++top[1]]=cur;
        }
        modify(time,dir,top[dir],stack[dir],cur,p[cur][dir]+(dir?-1:1));
        cur=p[cur][dir];
    }
}

int main() {
    scanf("%d%d",&n,&q);
    for (int i=1;i<=n;i++) {
        char ch=getchar();
        while (ch!='<'&&ch!='>'&&!isdigit(ch)) ch=getchar();
        if (isdigit(ch)) e[i].num=ch-48;
        else e[i].num=ch=='>',e[i].f=true;
        p[i][0]=i-1; p[i][1]=i+1;
        t[i][0]=t[i][1]=inf;
    }
    for (int i=1;i<=n;i++)
        if (!flag[i]) run(i);
    while (q--) {
        int l,r;
        scanf("%d%d",&l,&r);
        cnt[min(t[r][1],t[l][0])].print(cnt[min(t[l][1],t[l][0])-1]);
    }
    return 0;
}
