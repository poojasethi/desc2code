#include<bits/stdc++.h>
using namespace std;

typedef long long LL;

const int maxn=100010;
const int maxD=10;

int n,q;
char s[maxn];

template<typename T>bool updmn(T&A,const T&B){return A>B?A=B,1:0;}

int curS[maxD],fstS[maxn][maxD],sndS[maxn][maxD];
int fg[maxn];

int l[maxn],r[maxn];
inline void del(int o){l[r[o]]=l[o];r[l[o]]=r[o];}
inline char isdir(char x){return x=='<'||x=='>';}
void run(int p){
	char lc='?';
	int lp;
	char d='>';
	while(p!=0&&p!=n+1){
		if(!fg[p]){
			fg[p]=1;
			memcpy(fstS[p],curS,sizeof curS);
		}
		if(isdigit(s[p])){
			++curS[s[p]-'0'];
			if(s[p]-'0'==0)s[p]='X';else --s[p];
			lc=s[p];lp=p;
		}else if(isdir(s[p])){
			if(isdir(lc))s[lp]='X';
			d=lc=s[p];lp=p;
		}
		if(d=='<'&&fg[p]==1){
			fg[p]=2;
			memcpy(sndS[p],curS,sizeof curS);
		}
		p=(d=='>'?r[p]:l[p]);
	}
}

void solve(){
	scanf("%d%d%s",&n,&q,s+1);
	
	memset(fg,0,sizeof fg);
	for(int i=0;i<=n+1;++i)l[i]=i-1,r[i]=i+1;
	while(r[0]!=n+1){
		run(r[0]);
		while(r[0]!=n+1&&fg[r[0]])del(r[0]);
	}
	memcpy(fstS[n+1],curS,sizeof curS);
	while(q--){
		int ql,qr;scanf("%d%d",&ql,&qr);
		memcpy(curS,fstS[qr+1],sizeof curS);
		if(fg[ql]==2)
			for(int i=0;i<maxD;++i)updmn(curS[i],sndS[ql][i]);
		for(int i=0;i<maxD;++i)printf("%d ",curS[i]-fstS[ql][i]);
		putchar('\n');
	}
}

int main(){
//	freopen("in.txt","r",stdin);
	solve();
	return 0;
}
