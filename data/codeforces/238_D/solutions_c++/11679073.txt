#include <bits/stdc++.h>

using namespace std;

const int N = 100010;

int n,q;
char st[N];
int nxt[N],pre[N];
int pos[N*10],ct[N*10],last[N*10];
int cp,dp,cnt;
int x[N],y[N];
set<int> hsh;
vector<int> lst[N],lst2[N];
int res[N][10];
int sum[10];
bool calc[N];

int main()
{
	scanf("%d%d",&n,&q);
	scanf("%s",st+1);
	for(int i=1;i<=q;i++){
		scanf("%d%d",&x[i],&y[i]),lst[x[i]].push_back(i);
	}
	for(int i=0;i<=n+1;i++) nxt[i]=i+1,pre[i]=i-1;
	cp=1;dp=1;
	st[0]='>';st[n+1]='<';
	while(nxt[0]!=n+1){
		cnt++;
		pos[cnt]=cp;ct[cnt]=isdigit(st[cp]) ? st[cp]-'0' : -1;
//		printf("%d : %d %d\n",cnt,cp,ct[cnt]);
//		for(int i=0;i!=n+2;i=nxt[i]) putchar(st[i]);
//		puts("");
		if(isdigit(st[cp])) st[cp]--;
		else if(st[cp]=='<' || st[cp]=='>') dp=st[cp]=='<' ? 0 : 1;
		int np=dp==1 ? nxt[cp] : pre[cp];
		if(st[cp]=='/' || cp>=1 && cp<=n && (st[cp]=='<' || st[cp]=='>') && (st[np]=='<' || st[np]=='>'))
			nxt[pre[cp]]=nxt[cp],pre[nxt[cp]]=pre[cp],last[cnt]=1;
		cp=np;
	}
	pos[++cnt]=0;ct[cnt]=-1;
	for(int i=0;i<=n+1;i++) hsh.insert(i);
	for(int i=1;i<=cnt;i++){
		int u=pos[i];
//		printf("%d %d\n",u,ct[i]);
		for(vector<int> :: iterator p=lst[u].begin();p!=lst[u].end();p++){
			for(int j=0;j<10;j++) res[*p][j]-=sum[j];
			lst2[*--hsh.lower_bound(x[*p])].push_back(*p);
			lst2[*hsh.upper_bound(y[*p])].push_back(*p);
		}
		lst[u].clear();
		for(vector<int> :: iterator p=lst2[u].begin();p!=lst2[u].end();p++) if(!calc[*p]){
			calc[*p]=1;
			for(int j=0;j<10;j++) res[*p][j]+=sum[j];
		}
		lst2[u].clear();
		if(last[i]) hsh.erase(pos[i]);
		if(ct[i]!=-1) sum[ct[i]]++;
	}
	for(int i=1;i<=q;i++){
		for(int j=0;j<10;j++)
			printf("%d ",res[i][j]);
		puts("");
	}
	return 0;
}
