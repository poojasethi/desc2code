#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
const int N=(int)1e5+5;
int n,m,p,d,q;
char s[N];
int ans[10],t[N*40][10];
vector<int> occ[N];
void add(int i,int x){
	occ[i].push_back(++m);
	for(int j=0;j<10;j++) t[m][j]=t[m-1][j]+(j==x);
}
int get(vector<int> &a,int x){
	vector<int>::iterator it=lower_bound(a.begin(),a.end(),x);
	if(it==a.end()) return m+1;
	return *it;
}
int main(){
	scanf("%d%d",&n,&q);
	scanf("%s",s+1);
	int far=0;
	while(far<n){
		int bnd=far;
		p=far+1;
		d=1;
		int last=0;
		for(;p>bnd&&p<=n;p+=d){
			if(p>far) far=p;
			add(p,s[p]-'0');
			if(!s[p]) continue;
			if(s[p]>='0'&&s[p]<='9'){
				if(s[p]=='0')
					s[p]=0;
				else
					s[p]--;
			}
			else{
				if(s[last]=='<'||s[last]=='>') s[last]=0;
				if(s[p]=='<') d=-1; else d=1;
			}
			last=p;
		}
		add(p,-1);
	}
	while(q--){
		int l,r; scanf("%d%d",&l,&r);
		int x=get(occ[l],0),y=min(get(occ[l-1],x),get(occ[r+1],x));
		x--,y--;
		for(int j=0;j<10;j++) printf("%d ",t[y][j]-t[x][j]); puts("");
	}
}
