#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;

const int N=100000+5;

int n,cases,pre=1,now,d,cnt=0;
char op[N];
int sum[N*11][10],L[N],R[N],t[N];
vector<int> pos[N],part;
vector<int>::iterator tmp;

inline void cmin(int& x,int y){if (y<x) x=y;}

int main(int argc,char **argv)
{
	#ifndef ONLINE_JUDGE
		if (argc==1) freopen("238D.in","r",stdin),freopen("238D.out","w",stdout);
		else freopen(argv[1],"r",stdin),freopen(argv[2],"w",stdout);
	#endif
	scanf("%d%d%s",&n,&cases,op+1);
	for (int i=1;i<=n;++i) L[i]=i-1,R[i]=i+1;
	while (1)
	{
		for (now=pre;now<=n && !pos[now].empty();++now);
		if (now>n) break;
		part.push_back(cnt);
		for (L[now]=n+1,d=1;now<=n;)
		{
			pos[now].push_back(++cnt);
			if (pos[now].size()==1) t[now]=L[now];
			for (int i=0;i<10;++i) sum[cnt][i]=sum[cnt-1][i];
			if (isdigit(op[now]))
			{
				++sum[cnt][op[now]-'0'];
				if (op[now]!='0') --op[now];
				else R[L[now]]=R[now],L[R[now]]=L[now];
				if (d) now=R[now];else now=L[now];
			}else{
				d=(op[now]=='>');pre=now;
				if (d) now=R[now];else now=L[now];
				if (now<=n && !isdigit(op[now])) R[L[pre]]=R[pre],L[R[pre]]=L[pre];
			}
		}
	}
	for (int i=1,l,r,le,ri;i<=cases;++i)
	{
		scanf("%d%d",&l,&r);
		le=pos[l][0];ri=cnt;
		if (r<n) if ((tmp=upper_bound(pos[r+1].begin(),pos[r+1].end(),le))!=pos[r+1].end()) cmin(ri,(*tmp)-1);
		if (t[l]) if ((tmp=upper_bound(pos[t[l]].begin(),pos[t[l]].end(),le))!=pos[t[l]].end()) cmin(ri,(*tmp)-1);
		if ((tmp=lower_bound(part.begin(),part.end(),le))!=part.end()) cmin(ri,(*tmp));
		for (int j=0;j<=9;++j) printf("%d%c",sum[ri][j]-sum[le-1][j],j==9?'\n':' ');
	}
	return 0;
}
