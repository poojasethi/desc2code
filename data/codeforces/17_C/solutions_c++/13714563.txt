#include <bits/stdc++.h>

using namespace std;

typedef long long lint;

const int mod=51123987,maxn=152,maxm=51;

int N,dn[maxn][maxm][maxm][maxm],next[maxn][3];
char ar[maxn];

int top(int a,int b){
	a+=b;
	if(a>mod) a-=mod;
	return a;
}

bool check(int a,int b,int c){
	return (abs(a-b)<2 && abs(a-c)<2 && abs(b-c)<2);
}

int dfs(int pos,int a,int b,int c){
	if(a+b+c>N) return 0;
	
	if(a>50 || b>50 || c>50) return 0;
	
	if(a+b+c==N) return check(a,b,c);
	
	int &x=dn[pos][a][b][c];
	
	if(x!=-1) return x;
	
	x=0;
	
	if(next[pos][0]) x=top(x,dfs(next[pos][0],a+1,b,c));
	if(next[pos][1]) x=top(x,dfs(next[pos][1],a,b+1,c));
	if(next[pos][2]) x=top(x,dfs(next[pos][2],a,b,c+1));
	
	return x;
}

int main(){
	scanf("%d",&N);
	scanf(" %s",ar+1);
	
	for(int i=1;i<=N;i++)
		ar[i]-='a';
	
	ar[0]=3;
	for(int i=0;i<=N;i++){
		for(int j=0;j<3;j++)
			for(int k=i+1;k<=N;k++)
				if(ar[k]==j){
					next[i][j]=k;
					break;
				}
		if(i!=0)
			next[i][ar[i]]=i;
	}
	
	memset(dn,-1,sizeof dn);
	printf("%d\n",dfs(0,0,0,0));
	
	return 0;
}
