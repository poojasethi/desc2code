from sys import stdin
from collections import deque

def readnum():
    return [int(x) for x in stdin.readline().split()]

allowed = set()
startend = readnum()

segments = int(stdin.readline())
for _ in range(segments):
    row, a, b = readnum()
    for col in range(a, b+1):
        allowed.add((row, col))
        
def neighbors(xy):
    x, y = xy
    delta = [-1, 0, 1]
    return ((x+dx, y+dy) for dx in delta for dy in delta)
    
def cost(allowed, start, end):
    " Cost of going from start -> end using allowed tiles. -1 if no path "
    if start not in allowed or end not in allowed:
        return -1
    visited = set([start])
    Q = deque([(start, 0)])
    while Q:
        position, cost = Q.popleft()
        if position == end:
            return cost
        for nextpos in neighbors(position):
            if nextpos in allowed and nextpos not in visited:
                Q.append((nextpos, cost+1))
                visited.add(nextpos)
    return -1

print cost(allowed, tuple(startend[:2]), tuple(startend[2:]))
