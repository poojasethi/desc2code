//#define FILE_IO

#include<iostream>
#include<algorithm>
#include<utility>
#include<vector>
#include<cstdio>
#include<cstring>

using std::min;
using std::max;
using std::sort;
using std::unique;

using std::pair;
typedef pair<int,int> pii;
  #define X first
  #define Y second

using std::vector;
  #define pb push_back
  #define forI(x) for(typeof((x).begin()) it=(x).begin();it!=(x).end();++it)
  #define forE(x) forI(A[x])

const int maxn=100010;
const int inf=1000000001;
int n,L,R,m;
int tn,M,Lim;
int ans,ansx,ansy;
vector<pii> A[maxn];
bool cut[maxn];
int b[maxn],size[maxn],dize[maxn],ret[maxn];
int x[maxn],y[maxn],xp[maxn],yp[maxn],q[maxn];

inline void dfs_c(const int &x,const int &p,const int &sr){
  int t;
  size[x]=1,dize[x]=0;
  forE(x)
    if(t=it->X,!cut[t]&&p!=t){
      dfs_c(t,x,sr);
      size[x]+=size[t],dize[x]=max(dize[x],size[t]);
    }
  dize[x]=max(dize[x],sr-size[x]),ret[x]=x;
  forE(x)
    if(t=it->X,!cut[t]&&p!=t)
      if(dize[ret[t]]<dize[ret[x]])ret[x]=ret[t];
}

inline void dfs(const int &x,const int &p,const int &dep,const int &len){
  int t;
  M=max(dep,M),size[x]=1;
  if(len>y[dep])y[dep]=len,yp[dep]=x;
  forE(x)
    if(t=it->X,!cut[t]&&p!=t){
      dfs(t,x,dep+1,len+((it->Y>=Lim)?1:-1));
      size[x]+=size[t];
    }
}

void dac(int rt,int sr){
  dfs_c(rt,0,sr),rt=ret[rt];
  //printf("dac %d : %d %d\n",o,rt,sr);
  int l,r,mid,tx,ty,_x,_y,ts,u,t,i,head,tail;
  for(l=max(ans-1,0),r=m-1;l!=r;){
    mid=l+r+1>>1,Lim=b[mid],tn=0,ts=-inf;
    for(i=0;i<=sr;++i)x[i]=-inf;
    x[0]=0,xp[0]=rt;
    forE(rt)if(u=it->X,!cut[u]){
      M=0;
      for(i=0;i<=size[u];++i)y[i]=-inf;
      y[0]=0,yp[0]=rt;
      dfs(u,rt,1,it->Y>=Lim?1:-1);
      head=1,tail=0,t=0;
      for(i=min(R,M);i>=0&&L-i<=tn;--i){
        while(t<=R-i&&t<=tn){
          while(head<=tail&&x[q[tail]]<=x[t])--tail;
          q[++tail]=t++;
        }
        while(head<=tail&&q[head]<L-i)++head;
        if(head<=tail&&ts<y[i]+x[q[head]]){
          ts=y[i]+x[q[head]],tx=xp[q[head]],ty=yp[i];
        }
        if(ts>=0)break;
      }
      if(ts>=0)break;
      for(tn=max(tn,M),i=0;i<=tn;++i)
        if(x[i]<y[i])x[i]=y[i],xp[i]=yp[i];
    }
    if(ts>=0)_x=tx,_y=ty,l=mid;
    else r=mid-1;
  }
  if(l>ans)ans=l,ansx=_x,ansy=_y;
  cut[rt]=1;
  forE(rt)if(u=it->X,!cut[u])
    if(size[u]>=L)dac(u,size[u]);
  cut[rt]=0;
}

int main(){
#ifdef FILE_IO
  freopen("t.in","r",stdin);
  freopen("t.out","w",stdout);
#endif
  int i,x,y,w;
  scanf("%d%d%d",&n,&L,&R);
  for(i=1;i<n;++i){
    scanf("%d%d%d",&x,&y,&w);
    A[x].pb(pii(y,w)),A[y].pb(pii(x,w));
    b[i]=w;
  }
  b[0]=-1;
  sort(b,b+n);
  m=unique(b,b+n)-b;
  dac(1,n);
  printf("%d %d\n",ansx,ansy);
  return 0;
}
