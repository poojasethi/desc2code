#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
int n,Llimit,Rlimit,xx,yy,ans,mid,v[200010],w[200010],next[200010],head[100010],f[100010],ff[100010],who[100010];
int who2[100010],s[100010],fr[100010],ma[100010],q[100010],qh,qt,vt,cut[100010],id[100010],tot,limit,to[100010],wei[100010],inf=1000000;
bool cmp(int a,int b){return s[a]<s[b];}
void add(int u1,int v1,int w1){
	v[++vt]=v1;w[vt]=w1;next[vt]=head[u1];head[u1]=vt;
}
int root(int now,int size){
    qh=qt=0;
    q[++qt]=now;fr[now]=0;
    while(qh<qt){
        int x=q[++qh];s[x]=1;ma[x]=0;
        for(int i=head[x];i;i=next[i])
            if(!cut[v[i]]&&v[i]!=fr[x])
                fr[q[++qt]=v[i]]=x;
    }
    for(int i=qt;i>1;--i){
        s[fr[q[i]]]+=s[q[i]];
        ma[q[i]]=max(ma[q[i]],size-s[q[i]]);
        ma[fr[q[i]]]=max(ma[fr[q[i]]],s[q[i]]);
    }
    ma[now]=max(ma[now],size-s[now]);
    int res=-1;
    for(int i=1;i<=qt;++i)
        if(res==-1||ma[res]>ma[q[i]])
            res=q[i];
    return res;
}
void dfs(int x,int fa,int num,int sum){
	if(sum>ff[num]){ff[num]=sum;who2[num]=x;}
	for(int i=head[x];i;i=next[i])
		if(!cut[v[i]]&&v[i]!=fa)
			if(w[i]>=mid)dfs(v[i],x,num+1,sum+1);
			else dfs(v[i],x,num+1,sum-1); 
}
bool check(int x){
	who[0]=x;
	for(int i=1;i<=s[to[tot]];++i)f[i]=-inf;
	for(int i=1,j,k=0;i<=tot;++i){
		for(j=1;j<=s[to[i]];++j)ff[j]=-inf;
		if(wei[to[i]]>=mid)dfs(to[i],x,1,1);
		else dfs(to[i],x,1,-1);
		qh=1;qt=0;
		for(j=1;j<=s[to[i]];++j){
			if(ff[j]==-inf)break;
			while(k>=0&&j+k>=Llimit){
				while(qh<=qt&&f[q[qt]]<f[k])--qt;
				q[++qt]=k;--k;
			}
			while(qh<=qt&&j+q[qh]>Rlimit)++qh;
			if(qh<=qt&&ff[j]+f[q[qh]]>=0){
				xx=who[q[qh]];yy=who2[j];ans=mid;
				return 1; 
			}
		}
		for(k=1;k<j;++k)
			if(ff[k]>f[k]){
				f[k]=ff[k];who[k]=who2[k];
			}
		--k;
	}
	return 0;
}
void calc(int x,int size){
	tot=0;
	for(int i=head[x];i;i=next[i])
		if(!cut[v[i]]){
			if(s[v[i]]>s[x])s[v[i]]=size-s[x];
			to[++tot]=v[i];wei[v[i]]=w[i];
		}
	if(!tot)return;
	sort(to+1,to+tot+1,cmp);
	int l=ans+1,r=limit;
	mid=l;if(!check(x))return;
	while(l<=r){
		mid=(l+r)>>1;
		if(check(x))l=mid+1;
		else r=mid-1;
	}
}
void solve(int x,int size){
	x=root(x,size);cut[x]=1;calc(x,size);
	for(int i=head[x];i;i=next[i])
		if(!cut[v[i]])
			solve(v[i],s[v[i]]);
}
int main(){
	scanf("%d%d%d",&n,&Llimit,&Rlimit);
	for(int i=1;i<n;++i){
		int a,b,c;
		scanf("%d%d%d",&a,&b,&c);
		add(a,b,c);add(b,a,c);limit=max(limit,c);
	}
	ans=-1;solve(1,n);
	printf("%d %d\n",xx,yy);
	return 0;
}