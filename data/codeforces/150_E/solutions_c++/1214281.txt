//From WJMZBMR
#include<iomanip>
#include<cstdio>
#include<iostream>
#include<string>
#include<algorithm>
#include<cstring>
#include<set>
#define mp make_pair
#define x_ first
#define y_ second
using namespace std;
const int inf=1061109567;

int U,tmpU,V,tmpV,yoo;
int L_,R_,ans,ANS=-inf,s[200001];
int n,L,R,nx[400001],to[400001],fs[200001],vl[400001],e,l[200001],op,ed,q[200001];
int f[200001],sz[200001],dp[200001],or_;
int nw_,st_,st[200001],nw[200001];

bool Done[200001];
pair<int,int> Or[200001];
void Ins(int x,int y,int z)
{
	nx[++e]=fs[x];fs[x]=e;to[e]=y;vl[e]=z;
	nx[++e]=fs[y];fs[y]=e;to[e]=x;vl[e]=z;
}

inline int Val(int x){if(x>=ans)return 1;return -1;}

void scanInt(int &x)
{
	char ch;
	while(ch=getchar(),ch<'0');
	x=ch-'0';
	while(ch=getchar(),ch>='0')x*=10,x+=ch-'0';
}

void dfs(int now,int fat,int len,int sum)
{
	sz[now]=1;
	dp[now]=len;
	s[now]=sum;
	f[now]=fat;
	l[++ed]=now;
	for(int v=fs[now];v;v=nx[v])
		if(to[v]!=fat&&!Done[to[v]])
		{
			dfs(to[v],now,len+1,sum+Val(vl[v]));
			sz[now]+=sz[to[v]];
		}
}

bool check()
{
	int lf=st_,hj,ow;
	hj=0;ow=-1;
	for(int i=1;i<=nw_;++i)if(i<=R&&i+st_>=L)
	{
		for(;lf+i>=L&&lf>=0;--lf)
		{
			for(;ow>=hj&&s[st[lf]]>s[st[q[ow]]];ow--);
			q[++ow]=lf;
		}
		for(;q[hj]+i>R&&hj<=ow;hj++);
		if(hj<=ow&&s[st[q[hj]]]+s[nw[i]]>=0)
		{
			tmpU=st[q[hj]];
			tmpV=nw[i];
			return 1;
		}
	}
	for(int i=st_+1;i<=nw_;++i)st[i]=nw[i];
	for(int i=min(st_,nw_);i>=1;--i)
		if(s[nw[i]]>s[st[i]])st[i]=nw[i];
	st_=max(nw_,st_);
	return 0;
}

void Div(int now)
{
	ed=0;
	if(now==1)
	{
		for(l[op=ed=1]=now;op<=ed;++op)
			for(int v=fs[l[op]];v;v=nx[v])if(!Done[to[v]]&&to[v]!=f[l[op]])
			f[l[++ed]=to[v]]=l[op];
		for(int i=1;i<=ed;++i)sz[l[i]]=1;
		for(int i=ed;i>=1;--i)sz[f[l[i]]]+=sz[l[i]];
	}
	else dfs(now,0,0,0);
	int mn=inf,fn=0,tp;
	for(int i=1;i<=ed;++i)
	{
		tp=sz[now]-sz[l[i]];
		for(int v=fs[l[i]];v;v=nx[v])
			if(!Done[to[v]]&&to[v]!=f[l[i]])
				tp=max(sz[to[v]],tp);
		if(tp<mn)mn=tp,fn=l[i];
	}
	now=fn;
	ed=0;
	dfs(now,0,0,0);
	Done[now]=1;
	or_=0;
	for(int v=fs[now];v;v=nx[v])
			if(!Done[to[v]])
				Or[++or_]=mp(sz[to[v]],to[v]);
	sort(Or+1,Or+or_+1);
	L_=-1,R_=inf;
	for(;;)
	{
		ans=(L_+R_)/2;
		st[st_=0]=now;
		for(int v=fs[now];v;v=nx[v])s[to[v]]=Val(vl[v]);
		bool out=0;
		for(int i=1;i<=or_;++i)
			{
				ed=0;
				dfs(Or[i].y_,now,1,s[Or[i].y_]);
				nw_=1;
				for(int j=1;j<=ed;++j)nw_=max(nw_,dp[l[j]]);
				for(int j=1;j<=nw_;++j)nw[j]=-1;
				for(int j=1;j<=ed;++j)
					if(nw[dp[l[j]]]==-1||s[nw[dp[l[j]]]]<s[l[j]])nw[dp[l[j]]]=l[j];
				if(check())
				{
					out=1;
					break;
				}
			}
		if(L_+1==R_)break;
		if(out)L_=ans;else R_=ans;
	}
	if(L_>ANS)ANS=L_,U=tmpU,V=tmpV;
	for(int v=fs[now];v;v=nx[v])if(!Done[to[v]])Div(to[v]);
}

int main()
{
	#ifndef ONLINE_JUDGE
	freopen("cf.in","r",stdin);
	freopen("cf.out","w",stdout);
	#endif
	scanInt(n);
	scanInt(L);
	scanInt(R);
	for(int i=1,x,y,z;i<n;++i)
	{
		scanInt(x);
		scanInt(y);
		scanInt(z);
		Ins(x,y,z);
	}
	Div(1);
	cout<<U<<' '<<V<<endl;
	return 0;
}


