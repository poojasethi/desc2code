#include <cstdio>
#include <iostream>
#include <algorithm>
#define maxn 100005
using namespace std;

int N,L,R,U,V,M,n,mm,uu,vv,head[maxn],lk[maxn*2],next[maxn*2],bg[maxn],w[maxn*2],q[maxn],d[maxn],fa[maxn],e[maxn],s[maxn],f[maxn],ff[maxn],g[maxn],gg[maxn],h[maxn];
bool b[maxn];

void add(int u,int v,int x,int t) {lk[t]=v,w[t]=x,next[t]=head[u],head[u]=t;}

void init()
{
	scanf("%d%d%d",&N,&L,&R);
	for (int i=1,u,v; i<N; i++) scanf("%d%d%d",&u,&v,&bg[i]),add(u,v,bg[i],i),add(v,u,bg[i],i+N-1);
}

int bfs(int p)
{
	int l=1,r=1;
	for (q[1]=p,fa[p]=0; l<=r; l++)
		for (int u=q[l],i=head[u],v; v=lk[i],i; i=next[i]) if (!b[v]&&v!=fa[u]) fa[v]=u,q[++r]=v,d[v]=d[u]+1,e[v]=e[u]+(w[i]<bg[M]?-1:1);
	return r;
}

int find(int p)
{
	int mi=1e9,r=bfs(p),o;
	for (int x=r,u; u=q[x],x; x--)
	{
		int ma=0; s[u]=1;
		for (int i=head[u],v; v=lk[i],i; i=next[i]) if (!b[v]&&v!=fa[u]) s[u]+=s[v],ma=max(ma,s[v]);
		ma=max(ma,r-s[u]);
		if (ma<mi) mi=ma,o=u;
	}
	return o;
}

bool work(int u)
{
	int s=bfs(u),l=1,r=0; bool ok=0;
	for (int i=1; i<=s; i++) if (e[q[i]]>ff[d[q[i]]]) ff[d[q[i]]]=e[q[i]],gg[d[q[i]]]=q[i];
	for (int i=s,j=0,ll,rr; ll=L-i,rr=R-i,!ok&&i&&ll<=n; i--)
	{
		for (;j<ll; j++);
		for (;j<=rr&&j<=n; j++)
		{
			for (;l<=r&&f[j]>f[h[r]]; r--);
			h[++r]=j;
		}
		for (;l<=r&&h[l]<ll; l++);
		if (l<=r&&f[h[l]]+ff[i]>=0) U=g[h[l]],V=gg[i],ok=1;
	}
	n=max(n,s);
	for (int i=1; i<=s; i++)
	{
		if (ff[i]>f[i]) f[i]=ff[i],g[i]=gg[i];
		ff[i]=-1e9;
	}
	return ok;
}
bool check(int p)
{
	int s;
	d[p]=e[p]=0,s=bfs(p),n=0,f[0]=0,g[0]=p;
	for (int i=1; i<=s; i++) f[i]=ff[i]=-1e9;
	for (int i=head[p],v; v=lk[i],i; i=next[i]) if (!b[v]&&work(v)) return 1;
	return 0;
}

void dfs(int u)
{
	int p=find(u),l=1,r=N-1; b[p]=1;
	for (;l<=r;)
	{
		M=(l+r)/2;
		if (check(p)) l=M+1; else r=M-1;
	}
	M=r,check(p);
	if (M>mm) mm=M,uu=U,vv=V;
	for (int i=head[p],v; v=lk[i],i; i=next[i]) if (!b[v]) dfs(v);
}

void doit()
{
	sort(bg+1,bg+N),dfs(1);
	printf("%d %d\n",uu,vv);
}

int main()
{
	init();
	doit();
	return 0;
}
