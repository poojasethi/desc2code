#include<cstdio>
#include<cstring>
#include<algorithm>
#define MAXN 101000

int x[2*MAXN],y[2*MAXN],z[2*MAXN],T(2),f[MAXN],n,L,R,
	s[MAXN],F[MAXN],D[MAXN],b[MAXN],Peo[MAXN],Max[MAXN],
	Stack[MAXN],_Stack[MAXN],StackT,Mid,
	Seqt,D2Max,_D2[MAXN],_D[MAXN],Ansx,Ansy,D2[MAXN];

struct pt{int f,y,d,z;}Seq[20*MAXN];

bool cmp(pt a,pt b){return a.f!=b.f?_Stack[a.f]<_Stack[b.f]:a.d<b.d;}

int Dfs(int l)
{
	int i,j,k,_,Min(1000000000),_Min,DMax;
	D[l]=0;
	for(s[F[l]=i=0]=l,j=1;i<j;i++)
		for(k=f[s[i]];k;k=x[k])
			if(y[k]!=F[s[i]]&&!b[y[k]])
			{
				F[s[j++]=y[k]]=s[i];
				D[y[k]]=D[s[i]]+1;
			}
	DMax=D[s[j-1]]+1;
	for(i=0;i<j;i++)Peo[s[i]]=1,Max[s[i]]=0;
	for(i=j-1;i>=0;i--)
	{
		if(j-Peo[s[i]]>Max[s[i]])Max[s[i]]=j-Peo[s[i]];
		if(Max[s[i]]<Min)
		{
			Min=Max[s[i]];
			_Min=s[i];
		}
		Peo[F[s[i]]]+=Peo[s[i]];
		if(Peo[s[i]]>Max[F[s[i]]])Max[F[s[i]]]=Peo[s[i]];
	}
	b[Stack[_Stack[_Min]=StackT++]=_Min]=1;
	for(_=f[_Min];_;_=x[_])if(!b[y[_]]){Seqt++;Seq[Seqt-1]=(pt){_Min,y[_],Dfs(y[_]),z[_]};}
	return DMax;
}

void Bfs(int X)
{
	int i,j,k,l;
	D[l=Seq[X].y]=(Seq[X].z>=Mid)?1:-1;
	D2[l]=1;
	for(s[F[l]=i=0]=l,j=1;i<j;i++)
		for(k=f[s[i]];k;k=x[k])
			if(y[k]!=F[s[i]]&&!b[y[k]])
			{
				F[s[j++]=y[k]]=s[i];
				D[y[k]]=D[s[i]]+((z[k]>=Mid)?1:-1);
				D2[y[k]]=D2[s[i]]+1;
			}
	for(i=0;i<=Seq[X].d;i++)_D[i]=-1;
	for(i=0;i<j;i++)if(_D[D2[s[i]]]==-1||D[_D[D2[s[i]]]]<D[s[i]])_D[D2[s[i]]]=s[i];
}

bool Check(int M)
{
	memset(b,0,sizeof b);
	int i,j,k,l,D2Max,h,t;
	Mid=M;
	for(i=j=0;i<StackT;i++)
	{
if(Stack[i]==7)
{
Stack[i]=7;
}
		b[Stack[i]]=1;
		D2Max=0;
		for(;j<Seqt&&_Stack[Seq[j].f]<i;j++);
		for(;j<Seqt&&_Stack[Seq[j].f]==i;j++)
		{
			Bfs(j);
			h=t=0;
			for(k=1,l=D2Max;l>0;l--)
			{
				for(;k+l<=R&&k<=Seq[j].d;k++)
				{
					for(;h<t&&D[_D[s[t-1]]]<=D[_D[k]];t--);
					s[t++]=k;
				}
				for(;h<t&&s[h]+l<L;h++);
				if(h<t&&D[_D2[l]]+D[_D[s[h]]]>=0)
				{
					Ansx=_D2[l];
					Ansy=_D[s[h]];
					return 1;
				}
			}
			for(l=1;l<=Seq[j].d;l++)
			if(l>D2Max||D[_D[l]]>D[_D2[l]])
			{
				_D2[l]=_D[l];
				if(L<=l&&l<=R&&D[_D[l]]>=0)
				{
					Ansx=_D[l];
					Ansy=Stack[i];
					return 1;
				}
			}
			D2Max=Seq[j].d;
		}
	}
	return 0;
}

void IN(int a,int b,int c){x[T]=f[a];y[T]=b;z[T]=c;f[a]=T++;}

int main()
{
	int i,j,k,l,Left,Right;
	scanf("%d%d%d",&n,&L,&R);
	for(i=1;i<n;i++)
	{
		scanf("%d%d%d",&j,&k,&l);
		IN(j,k,l);
		IN(k,j,l);
	}
	Dfs(1);
	std::sort(Seq,Seq+Seqt,cmp);
	Left=0;Right=1000000000;
	for(;Left+1<Right;)
		if(Check((Left+Right)/2))Left=(Left+Right)/2;
			else Right=(Left+Right)/2;
	Check(Left);
	printf("%d %d\n",Ansx,Ansy);
	return 0;
}
