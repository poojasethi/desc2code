#include <iostream>
#include <cstring>
#include <cstdio>
#include <ctime>
using namespace std;
#define oo 1<<30
bool vy[30],vx[30];
int lx[30],ly[30],s[30][30],h[30][30],g[30][30],match[30],slack[30];
int n,Ans;
bool dfs(int x)
{
    if(x==-1)return false;
    vx[x]=1;
    for(int y=0;y<n;y++)
    {
        if(ly[y]+lx[x]==s[x][y]&&!vy[y])
        {
            vy[y]=1;
            if(match[y]==-1||dfs(match[y]))
            {
                match[y]=x;
                return true;
            }
        }
        else
        slack[y] = min(slack[y], lx[x] + ly[y] - s[x][y]);
    }
    return false;
}
int KM()
{
    int ans=0,d;
    memset(ly,0,sizeof(ly));
    memset(match,-1,sizeof(match));
    memset(lx,0,sizeof(lx));
    int magic=0;
    for(int i=0;i<n;i++)
    {
     for(int j=0;j<n;j++)
     lx[i]=max(lx[i],s[i][j]);
     magic+=lx[i];
    }
    if(magic<Ans)
    return 0;
    for(int i=0;i<n;i++)
    {
        while(1)
        {
            memset(vx,0,sizeof(vx));
            memset(vy,0,sizeof(vy));
            for(int i=0;i<n;i++)
                slack[i]=oo;
            if(dfs(i))break;
            int d=oo;
                    for ( int j = 0; j < n; ++j) if (!vy[j] && slack[j] < d)
                        d = slack[j];
            for(int j=0;j<n;j++)
            {
                if(vx[j])
                {
                    for(int k=0;k<n;k++)
                    {
                        if(!vy[k])
                        {
                            d=min(d,lx[j]+ly[k]-s[j][k]);
                        }
                    }
                }
            }
            magic=0;
            for(int j=0;j<n;j++)
            {
                if(vx[j])
                    lx[j]-=d;
                if(vy[j])
                    ly[j]+=d;
                    magic+=lx[j]+ly[j];
            }
            if(magic<Ans)
                return 0;
        }
    }

    return magic;
}
int main()
{
    while(cin>>n)
    {
        Ans=0;int a,b;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                scanf("%d",&g[i][j]);
            }
        }
        for(int i=0;i<n;i++)
            for(int j=0;j<n;j++)
            scanf("%d",&h[i][j]);
        int m=(1<<(n+1))-1;
        while(m>=0)
        {
            a=0,b=0;
            for(int i=0;i<n;i++)
            {
                if((m&(1<<i))!=0)
                {
                    a++;
                }
                else
                {
                    b++;
                }
            }
            if(a==b&&a==n/2)
            {
                for(int i=0;i<n;i++)
                {if((m&(1<<i))!=0)
                    for(int j=0;j<n;j++)
                    s[i][j]=g[i][j];
                else
                    for(int j=0;j<n;j++)
                    s[i][j]=h[i][j];
                }
                Ans=max(KM(),Ans);
                if  (clock() / (double)(CLOCKS_PER_SEC) >= 0.9)  break;
            }
            m--;

        }
        printf("%d\n",Ans);
    }
}

				  				    			  					 	 	 		