#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdlib>
#include <cmath>

using namespace std;

vector<int> a;

int dx[]={0,0,1,-1};
int dy[]={1,-1,0,0};
int n,m;


int mabs(int x)
{
  if (x<0)
    return -x;
  else
    return x;
}

int main()
{
  cin >> n >> m;
  
  a.resize(n*m);
  
  for (int i=0; i<n*m; i++)
    a[i]=i+1;
  
  for (int q=0; q<8000; q++)
  {
    random_shuffle(a.begin(), a.end());
    
    bool f  = true;
    for (int x=0; x<n && f; x++)
      for (int y=0; y<m && f; y++)
      {
	int mypos = x*m+y;
	for (int k=0; k<4 && f; k++)
	{
	  int newx = x + dx[k];
	  int newy = y + dy[k];
	  
	  if (newx<0 || newy<0 || newx>=n || newy>=m)
	    continue;
	  
	  int newpos = newx*m+newy;
	  
	  if (mabs(a[mypos]-a[newpos])<=1)
	    f=false;
	}
      }
     
      
    if (f)
    {
      for (int j=0; j<a.size(); j++)
      {
	cout << a[j] << ' ';
	if ((j+1)%m==0)
	  cout << endl;
      }
      
      return 0;
    }
  }
  
  cout << -1;
}