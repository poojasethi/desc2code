#include <iostream>
#include <string>
#include <vector>

using namespace std;

typedef long long int ll;

ll modulo=1e9+7;

ll eleva(ll b,ll e)
{
  if (e==0) return 1;
  if (e%2==0) return eleva(b*b%modulo,e/2);
  return b*eleva(b*b%modulo,e/2)%modulo;
}

ll inverso(ll x)
{
  return eleva(x,modulo-2);
}

const int limite=100005;

ll fact[limite],factinv[limite],e25[limite];

ll combi(int n,int k)
{
  return fact[n]*factinv[k]%modulo*factinv[n-k]%modulo;
}

vector<int> maneras[limite];
int calculado[limite];

void genera(int lens)
{
  calculado[lens]=1;
  vector<int> &man=maneras[lens];
  man=vector<int> (limite,0);
  man[lens]=1;
  for (int i=lens+1;i<limite;i++)
    man[i]=(ll(man[i-1])*26+combi(i-1,lens-1)*e25[i-lens])%modulo;
}

ll computamaneras(int lens,int n)
{
  if (not calculado[lens]) genera(lens);
  return maneras[lens][n];
}

int casos;
string s;

int main()
{
  ios::sync_with_stdio(false);
  fact[0]=factinv[0]=e25[0]=1;
  for (int i=1;i<limite;i++) {
    fact[i]=fact[i-1]*i%modulo;
    factinv[i]=inverso(fact[i]);
    e25[i]=e25[i-1]*25%modulo;
  }
  cin>>casos;
  cin>>s;
  for (int cas=0;cas<casos;cas++) {
    int tipo;
    cin>>tipo;
    if (tipo==1) {
      cin>>s;
    } else {
      int n;
      cin>>n;
      cout<<computamaneras(int(s.size()),n)<<endl;
    }
  }
}
