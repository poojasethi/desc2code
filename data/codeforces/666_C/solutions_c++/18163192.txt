#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <algorithm>

#define MAXN 110000
#define MOD 1000000007

using namespace std;

typedef long long int LL;

struct Query
{
    int cmd,x,lenT,id;
}querys[MAXN];

int stack[MAXN],top=0;
int initlen;
char S[MAXN];
LL ans[MAXN];

LL f[MAXN];
LL fact[MAXN],fact2[MAXN];
LL inv[MAXN];
LL pw[MAXN];

LL C(int n,int m)
{
    return fact2[n]*fact[m]%MOD*fact[n-m]%MOD;
}

void DP(int lenT,int id)
{
	int maxlen=100000;
    for(int i=1;i<lenT;i++)
        f[i]=0;
    for(int i=lenT;i<=maxlen;i++)
        f[i]=(f[i-1]*26LL%MOD+C(i-1,lenT-1)*pw[i-lenT]%MOD)%MOD;
}

bool cmp(Query a,Query b)
{
    return a.lenT<b.lenT;
}

int main()
{
	int maxlen=100000;
	inv[1]=1;
	for(int i=2;i<=maxlen;i++)
	{
		LL k=MOD/i,t=MOD%i;
		inv[i]=-k*inv[t]%MOD;
		if(inv[i]<0) inv[i]+=MOD;
	}
	pw[0]=1;
	for(int i=1;i<=maxlen;i++) pw[i]=pw[i-1]*25LL%MOD;
    fact[0]=fact[1]=inv[1];
	fact2[0]=fact2[1]=1;
    for(int i=2;i<=maxlen;i++)
        fact[i]=fact[i-1]*inv[i]%MOD,fact2[i]=fact2[i-1]*(LL)i%MOD;
	
	
    int TestCase,tot=0;
    scanf("%d",&TestCase);
    scanf("%s",S+1);
    initlen=strlen(S+1);
    stack[++top]=initlen;
    int nowlen=initlen;
    for(int i=1;i<=TestCase;i++)
    {
        int cmd;
        scanf("%d",&cmd);
        if(cmd==1)
        {
            scanf("%s",S+1);
            nowlen=strlen(S+1);
        }
        else scanf("%d",&querys[++tot].x),querys[tot].id=tot,querys[tot].lenT=nowlen;
    }
    sort(querys+1,querys+tot+1,cmp);
    for(int i=1,j;i<=tot;i=j+1)
    {
        j=i;
        while(j+1<=tot&&querys[j+1].lenT==querys[i].lenT) j++;
        DP(querys[i].lenT,1);
        for(int t=i;t<=j;t++)
            ans[querys[t].id]=f[querys[t].x];
    }
    for(int i=1;i<=tot;i++)
        printf("%I64d\n",ans[i]);
    return 0;
}