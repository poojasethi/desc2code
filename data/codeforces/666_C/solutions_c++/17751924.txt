#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;

#define MOD 1000000007
#define MAX 100005

long long powmod(long long a, int e) {
    long long ret = 1;
    for (; e; e >>= 1, a = a * a % MOD)
        if (e & 1)
            ret = ret * a % MOD;
    return ret;
}

long long fact[MAX], ifact[MAX];

long long comb(int n, int k) {
    return (fact[n] * ifact[k] % MOD) * ifact[n-k] % MOD;
}

long long pow25[MAX], ipow26[MAX];
long long ans[MAX];

void pre(int ns) {
    for (int k = 0; k < ns; k++)
        ans[k] = 0;
    for (int k = ns; k < MAX; k++)
        ans[k] = (ans[k-1] + (comb(k-1, ns-1) * pow25[k-ns] % MOD) * ipow26[k]) % MOD;
}

int main() {
    ios::sync_with_stdio(false);
    fact[0] = ifact[0] = 1;
    for (int i = 1; i < MAX; i++) {
        fact[i] = fact[i-1] * i % MOD;
        ifact[i] = powmod(fact[i], MOD-2);
    }
    long long i26 = powmod(26, MOD-2);
    pow25[0] = ipow26[0] = 1;
    for (int i = 1; i < MAX; i++) {
        pow25[i] = pow25[i-1] * 25 % MOD;
        ipow26[i] = ipow26[i-1] * i26 % MOD;
    }
    int q;
    char s[MAX];
    cin >> q;
    cin >> s;
    pre(strlen(s));
    while (q--) {
        int op;
        cin >> op;
        if (op == 1) {
            cin >> s;
            pre(strlen(s));
        }
        else {
            int n;
            cin >> n;
            cout << (powmod(26, n) * ans[n] % MOD) << endl;
        }
    }
}
