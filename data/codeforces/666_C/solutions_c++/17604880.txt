#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
using namespace std;
const int maxn=1e5+20;
const int base=1e9+7;
int f[500][maxn];
int pw25[maxn],sz,a[maxn];
int fct[maxn],t,type,invfct[maxn];
string s;
int C(int n, int k) {
    int zn=fct[n];
    zn=(1ll*zn*invfct[k])%base;
    zn=(1ll*zn*invfct[n-k])%base;
    return zn;
}
void answer(int m, int n) {
    if (m>n) {
        cout << "0\n";
        return;
    }
    for (int i=1;i<=sz;i++)
    if (a[i]==m) {
        cout << f[i][n-m] << "\n";
        break;
    }
}
int my_pw(int x, int y) {
    if (y==0) return 1;
    else
    if (y%2==0) {
        int g=my_pw(x,y/2);
        return (1ll*g*g)%base;
    }
    else {
        int g=my_pw(x,y-1);
        return (1ll*g*x)%base;
    }
}
void set_new_len(int m) {
    for (int i=1;i<=sz;i++)
        if (a[i]==m) return;
    sz++;
    a[sz]=m;
    f[sz][0]=1;
    for (int k=1;k<=100000-m;k++) {
        f[sz][k]=(26ll*f[sz][k-1])%base;
        int zn=C(m+k-1,m-1);
        zn=(1ll*zn*pw25[k])%base;
        f[sz][k]=(f[sz][k]+zn)%base;
    }
}
int main() {
    ios_base::sync_with_stdio(0);
    cin >> t;
    cin >> s;
    fct[0]=1;
    pw25[0]=1;
    invfct[0]=1;
    for (int i=1;i<=100000;i++) {
        fct[i]=(1ll*fct[i-1]*i)%base;
        pw25[i]=(25ll*pw25[i-1])%base;
        invfct[i]=my_pw(fct[i],base-2);
    }
    int m=s.size();
    set_new_len(m);
    for (int i=1;i<=t;i++) {
        int n,type;
        cin >> type;
        if (type==2) {
            cin >> n;
            answer(m,n);
        }
        else {
            cin >> s;
            m=s.size();
            set_new_len(m);
        }
    }
    return 0;
}
