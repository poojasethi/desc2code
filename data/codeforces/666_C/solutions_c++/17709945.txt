#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#define fo(i,a,b) for(int i=a;i<=b;i++)
#define fd(i,a,b) for(int i=a;i>=b;i--)
#define maxn 100005
#define maxp 605
#define ll long long
#define mo 1000000007
using namespace std;

int f[maxp][maxn];

int w[maxn];

int n,m,len;

ll inv26[maxn],m26[maxn],m25[maxn],mi[maxn],inv[maxn];

ll C(ll n,ll m){
	if (m==0) return 1;
	if (n==0) return 0;
	return mi[n]*inv[m] % mo*inv[n-m] % mo;
}

void calc(int len,int i){
	fo(j,len,100000) {
		f[i][j]=(f[i][j-1]+C(j-1,len-1)*m25[j-len] % mo*inv26[j] % mo)% mo;
	}
}

ll mul(ll x,ll y){
	ll ret=1;
	while (y) {
		if (y % 2==1) ret=ret*x % mo;
		x=x*x % mo;
		y /= 2;
	}
	return ret;
}

int main(){
	scanf("%d",&m);
	m26[0]=m25[0]=mi[0]=inv[0]=1;
	fo(i,1,100000) { 
		m26[i]=m26[i-1]*26 % mo;
		m25[i]=m25[i-1]*25 % mo;
		mi[i]=mi[i-1]*i % mo;
	}
	inv[100000]=mul(mi[100000],mo-2);
	inv26[100000]=mul(m26[100000],mo-2);
	fd(i,99999,1) {
		inv26[i]=inv26[i+1]*26 % mo;
		inv[i]=inv[i+1] * (i+1) % mo;
	}
	inv26[0]=1;
	char c=getchar();
	while (c<'a' || c>'z') c=getchar();
	len=0;
	while (c>='a' && c<='z') {
		len++;
		c=getchar();
	}
	if (w[len]==0) {
		w[len]=++w[0];
		calc(len,w[0]);
	}
	fo(i,1,m) {
		int T;
		scanf("%d",&T);
		if (T==1) {
			char c=getchar();
			while (c<'a'||c>'z') c=getchar();
			len=0;
			while (c>='a' && c<='z') {
				len++;
				c=getchar();
			}
			if (w[len]==0) {
				w[len]=++w[0];
				calc(len,w[0]);
			}
		}
		else {
			int x;
			scanf("%d",&x);
			ll ans=f[w[len]][x] * m26[x] % mo;
			printf("%I64d\n",ans);
		}
	}
	return 0;
}