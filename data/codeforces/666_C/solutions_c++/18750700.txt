#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iostream>
#include<algorithm>
#define maxn 100100
#define mod 1000000007

using namespace std;

int dp[310][maxn],fac[maxn],inv[maxn],pow1[maxn];
int n=100000,m,T;
char s[maxn];

int C(int x,int y) {return 1ll*fac[x]*inv[y]%mod*inv[x-y]%mod;}

int power(int x,int y)
{
	int ans=1;
	while (y)
	{
		if (y&1) ans=1ll*ans*x%mod;
		x=1ll*x*x%mod;
		y>>=1;
	}
	return ans;
}

int main()
{
	pow1[0]=1;for (int i=1;i<=n;i++) pow1[i]=25ll*pow1[i-1]%mod;
	fac[0]=1;for (int i=1;i<=n;i++) fac[i]=1ll*i*fac[i-1]%mod;
	inv[n]=power(fac[n],mod-2);for (int i=n-1;i>=0;i--) inv[i]=1ll*inv[i+1]*(i+1)%mod;
	for (int i=1;i<=300;i++)
	  for (int j=i;j<=n;j++)
	    dp[i][j]=(26ll*dp[i][j-1]%mod+1ll*pow1[j-i]*C(j-1,i-1)%mod)%mod;
	int block=300;
	scanf("%d",&T);
	scanf("%s",s+1);m=strlen(s+1);
	if (m>block)
	{
		memset(dp[0],0,sizeof(dp[0]));
		for (int i=m;i<=n;i++) dp[0][i]=(26ll*dp[0][i-1]%mod+1ll*pow1[i-m]*C(i-1,m-1)%mod)%mod;
	}
	while (T--)
	{
		int op;
		scanf("%d",&op);
		if (op==1)
		{
			scanf("%s",s+1);m=strlen(s+1);
			if (m>block)
			{
				memset(dp[0],0,sizeof(dp[0]));
				for (int i=m;i<=n;i++) dp[0][i]=(26ll*dp[0][i-1]%mod+1ll*pow1[i-m]*C(i-1,m-1)%mod)%mod;
			}
		}
		else
		{
			int x;
			scanf("%d",&x);
			if (m>block) printf("%d\n",dp[0][x]); else printf("%d\n",dp[m][x]);
		}
	}
	return 0;
}

