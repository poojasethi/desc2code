#include <bits/stdc++.h>
#define FOR(i, l, r) for (int i = l; i < r; i++)
#define FST first
#define SCD second
#define modp  1000000007
#define MAXN 100001
using namespace std;

typedef long long LL;
typedef unsigned int UI;
typedef pair<int, int> P;

int M;
vector<P> q[MAXN];
int ans[MAXN];
LL inv[MAXN];
char buf[MAXN];
int po(LL x, int k)
{
    LL res = 1;
    while (k) {
        if (k & 1) {
            res *= x;
            res %= modp;
        }
        x *= x;
        x %= modp;
        k >>= 1;
    }
    return res;
}

int main()
{
    inv[0] = 1;
    FOR(i, 1, MAXN) {
        inv[i] = po(i, modp - 2);
    }
    scanf("%d %s", &M, buf);
    int l = strlen(buf), num = 0;
    FOR(i, 0, M) {
        int k;
        scanf("%d", &k);
        if (k == 1) {
            scanf(" %s", buf);
            l = strlen(buf);
        }
        else {
            int n;
            scanf("%d", &n);
            q[l].push_back(P(n, num++));
        }
    }
    FOR(i, 1, MAXN) {
        if (!q[i].empty()) {
            sort(q[i].begin(), q[i].end());
            LL T = po(inv[26], i);
            LL S = T;
            int k = i + 1;
            FOR(j, 0, q[i].size()) {
                if (q[i][j].FST < i) {
                    ans[q[i][j].SCD] = 0;
                    continue;
                }
                if (q[i][j].FST == i) {
                    ans[q[i][j].SCD] = 1;
                    continue;
                }
                for (; k <= q[i][j].FST; k++) {
                    T = T * (k - 1) % modp * inv[k - i] % modp * (modp + 1 - inv[26]) % modp;
                    S += T;
                    S %= modp;
                }
                ans[q[i][j].SCD] = S * po(26, q[i][j].FST) % modp;
            }
        }
    }
    FOR(i, 0, num) {
        printf("%d\n", ans[i]);
    }
    return 0;
}
