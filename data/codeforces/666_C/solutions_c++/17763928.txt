#include <cstdio>
#include <vector>
using namespace std;
int l;
char s[100010];
vector<pair<int, int> > v[100010];
int ans[100010], tmp[100010], st[100010];
const int mod = 1000000007;
int f[200010], invf[200010], inv[200010];
int piv[200010], po[200010];
int comb(int n, int k) {
	return (long long)f[n] * invf[k] % mod * invf[n-k] % mod;
}
int main() {
	int m, c = 0;
	scanf("%d", &m);
	scanf("%s", s);
	for (l = 0; s[l]; l++) ;
	for (int i = 0; i < m; i++) {
		int t;
		scanf("%d", &t);
		if (t == 2) {
			int n;
			scanf("%d", &n);
			v[l].push_back(make_pair(n, c++));
		} else {
			scanf("%s", s);
			for (l = 0; s[l]; l++) ;
		}
	}
	f[0] = inv[0] = inv[1] = f[1] = invf[1] = invf[0] = 1;
	for (int i = 2; i < 200010; i++) {
		f[i] = 1ll * i * f[i-1] % mod;
		inv[i] = mod - 1ll * (mod / i) * inv[mod%i] % mod;
		invf[i] = 1ll * invf[i-1] * inv[i] % mod;
	}
	piv[0] = po[0] = 1;
	int pi = 25ll * inv[26] % mod;
	for (int i = 1; i < 100010; i++) {
		piv[i] = (long long)piv[i-1] * pi % mod;
		po[i] = (long long)po[i-1] * 26 % mod;
	}
	for (int i = 1; i < 100010; i++) {
		if (!v[i].size()) continue;
		tmp[i] = 1;
		st[i] = 1;
		for (int j = i + 1; j < 100010; j++) {
			tmp[j] = (long long)comb(j - 1, i - 1) * piv[j-i] % mod;
			st[j] = (st[j-1] + tmp[j]) % mod;
		}
		for (int j = 0; j < v[i].size(); j++) {
			int n = v[i][j].first, idx = v[i][j].second;
			if (n >= i) {
				ans[idx] = (long long)st[n] * po[n-i] % mod;
			} else {
				ans[idx] = 0;
			}
		}
	}
	for (int i = 0; i < c; i++) {
		printf("%d\n", ans[i]);
	}
	return 0;
}
