#include <cstdio>
#include <algorithm>
#include <cstring>
#include <map>
#define N 100005
#define LL long long
#define M 1000000007
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int tt, t, n, m, a[N], b[N], p, ans[N][505], cm[N], mm, ii[N];
char s[N];

LL inv(LL x){
	LL ret = 1, mul = x;
	for(int i = M - 2; i; i >>= 1){
		if(i & 1) ret = ret * mul % M;
		mul = mul * mul % M;
	}
	return ret;
}

int main(){
	fi(i, 1, N) ii[i] = inv(i);
	
	scanf("%d %s", &tt, s);
	m = strlen(s);
	cm[mm++] = m;
	
	while(tt--){
		scanf("%d", &t);
		if(t == 1){
			scanf("%s", s);
			m = strlen(s);
		}else{
			scanf("%d", &n);
			a[p] = n;
			b[p++] = m;
			cm[mm++] = m;
		}
	}
	
	sort(cm, cm + mm);
	mm = unique(cm, cm + mm) - cm;
	
	fi(i, 0, mm){
		int m = cm[i];
		ans[m][i] = 1;
		LL c = 1, p = 1;
		
		fi(j, m + 1, N){
			p = p * 25 % M;
			c = c * (j - 1) % M * ii[j - m] % M;
			ans[j][i] = (LL) ans[j - 1][i] * 26 % M;
			ans[j][i] = (p * c + ans[j][i]) % M;
		}
	}
	
	fi(i, 0, p){
		b[i] = lower_bound(cm, cm + mm, b[i]) - cm;
		printf("%d\n", ans[a[i]][b[i]]);
	}
	
	scanf("\n");
}
