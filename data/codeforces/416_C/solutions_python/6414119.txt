from operator import *
from sys import stdin


def read_ints():
    for line in stdin.readlines():
        for val in line.split():
            yield int(val)


def main():
    gen = read_ints()
    num_request = next(gen)
    request_w_idx = [
        (i + 1, next(gen), next(gen))
        for i in xrange(num_request)
    ]
    num_tables = next(gen)
    table_w_idx = [
        (i + 1, next(gen))
        for i in xrange(num_tables)
    ]
    table_w_idx.sort(key=itemgetter(1))
    request_w_idx.sort(key=itemgetter(1))
    request_w_idx.sort(key=itemgetter(2), reverse=True)
    profit = 0
    accepted = 0
    table_group = [0] * (num_tables + 1)
    for i, gs, pay in request_w_idx:
        # find a table with capacity >= sizes[i] and not used
        for j, ts in table_w_idx:
            if gs <= ts and table_group[j] == 0:
                table_group[j] = i
                accepted += 1
                profit += pay
                break
    print accepted, profit
    for gi, ti in sorted(enumerate(table_group), key=itemgetter(1)):
        if ti != 0:
            print ti, gi
    

if __name__ == '__main__':
    main()
