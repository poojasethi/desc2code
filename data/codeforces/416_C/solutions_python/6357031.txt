"""
3
10 50
2 100
5 30
3
4 6 9
"""

import bisect

n = int(raw_input())
groups = []
for i in xrange(1, n + 1, 1):
    groups.append(map(int, raw_input().split()) + [i])
k = int(raw_input())
tablesize_raw = map(int, raw_input().split())
tablesize = [i for i in sorted(enumerate(tablesize_raw, start=1), key=lambda x: x[1])]
tablenums = [i[0] for i in tablesize]
tablesize = [i[1] for i in tablesize]
groups.sort(key=lambda x: x[1], reverse=True)
aggregate_sum = 0
arrangements = []

for group in groups:
    groupsize, amount, groupnum = group
    idx = bisect.bisect_left(tablesize, groupsize)
    if idx > len(tablesize) - 1:
        pass
    else:
        tablesize.pop(idx)
        tablenum = tablenums.pop(idx)
        arrangements.append((groupnum, tablenum))
        aggregate_sum += amount
        if len(tablesize) == 0:
            break

print len(arrangements), aggregate_sum
for groupnum, tablenum in arrangements:
    print groupnum, tablenum