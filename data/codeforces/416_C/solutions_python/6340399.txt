import bisect
n = input()
C, P = [], []
Requests = []
for i in range(n):
    c, p = map(int, raw_input().split())
    Requests.append((p, c, i + 1))

k = input()
T = map(int, raw_input().split())

Requests.sort(reverse=True)
for i in range(len(T)):
    T[i] = (T[i], i + 1)
T.sort()
rest = len(T)
sum_price = 0
ret = []
for r in Requests:
    if rest == 0:
        break
    p, c, i = r
    idx = bisect.bisect_left(T, (c, 0))
    if idx < len(T):
        tmp = T.pop(idx)
        sum_price += p
        rest -= 1
        ret.append("%d %d" % (i, tmp[1]))

print len(ret), sum_price
for x in ret:
    print x