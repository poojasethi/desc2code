#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long ll;
#define MOD 1000000007ll

int N;
ll x[500010],y[500010];
ll s1[500010],s2[500010];
ll S;

ll xs[500010],ys[500010];

ll area(int p, int q){
    return y[p] * x[q] - x[p] * y[q];
}

ll area_polygon(int p, int len){
    int q = p + len;
    ll ans = 0;
    if(q > N){
        ans = s2[q-N] + s2[N] - s2[p];
    } else {
        ans = s2[q] - s2[p];
    }
    ans += area((p + len) % N, p);
    return ans;
}

ll input(void){
    int a;
    scanf("%d", &a);
    return a;
}

ll area_tri(ll x1, ll y1, ll x2, ll y2, ll x3, ll y3){
    x2 -= x1; y2 -= y1; // x3 -= x1; y3 -= y1;
    x2 = (x2 + MOD * 10) % MOD;
    y2 = (y2 + MOD * 10) % MOD;
    x3 = (x3 + MOD * 10) % MOD;
    y3 = (y3 + MOD * 10) % MOD;
    ll ans = ((y2 * x3 - x2 * y3) % MOD + MOD) % MOD;
    return ans;
}

int main(void){
    int i;
    
    cin >> N;
    REP(i,N){
        x[i] = input();
        y[i] = input();
    }
    
    REP(i,N) s1[i] = area(i, (i + 1) % N);
    REP(i,N) s2[i+1] = s2[i] + s1[i];
    S = s2[N];
    
    REP(i,N) xs[i+1] = (xs[i] + x[i] % MOD + MOD) % MOD;
    REP(i,N) ys[i+1] = (ys[i] + y[i] % MOD + MOD) % MOD;
    
    ll ans = 0, sum = 0;
    int j = 1;
    
    REP(i,N){
        while(1){
            ll tmp = area_polygon(i, j+1);
            if(tmp >= S - tmp) break;
            j++;
            sum = (sum + tmp % MOD) % MOD;
        }
        if(j > 1) ans = (ans + S % MOD * (j - 1) % MOD - 2 * sum % MOD + MOD) % MOD;
        
    //  cout << i << ' ' << j << ' ' << sum << endl;
        
        ll XS = ((i+j >= N) ? (xs[i+j-N+1] + xs[N] - xs[i]) : (xs[i+j+1] - xs[i]));
        ll YS = ((i+j >= N) ? (ys[i+j-N+1] + ys[N] - ys[i]) : (ys[i+j+1] - ys[i]));
    //  cout << XS << ' ' << YS << endl;
        XS -= (ll)(j + 1) * x[i] % MOD;
        YS -= (ll)(j + 1) * y[i] % MOD;
    //  cout << XS << ' ' << YS << endl;
        ll tmp2 = area_tri(x[i], y[i], x[(i+1)%N], y[(i+1)%N], XS, YS);
    //  cout << tmp2 << endl;
        sum = (sum - tmp2 + MOD) % MOD;
    //  cout << i << ' ' << j << ' ' << sum << endl;
        j--;
    }
    
    cout << ans << endl;
    
    return 0;
}
