#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <unistd.h>
#include  <sys/time.h>
#include <iomanip>
using namespace std;
#define li		 long long int
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())


struct _rect{
	int x0,y0,x1,y1,z,num;
	bool operator<(const _rect& r) const{
		return z<r.z;
	}
};


#define MAX 100005
_rect rect[MAX];
int used[MAX];
int bef[MAX],next[MAX];
int main(){
	int n,m;
//	cin>>n;
scanf("%d",&n);
//	rep(i,n) cin>>rect[i].x0>>rect[i].x1>>rect[i].y0>>rect[i].y1>>rect[i].z;
rep(i,n) scanf("%d%d%d%d%d",&rect[i].x0,&rect[i].x1,&rect[i].y0,&rect[i].y1,&rect[i].z);
	rep(i,n) rect[i].num=i;
	rep(i,MAX) next[i]=i+1;
	rep(i,MAX) bef[i]=i-1;
	li start=0;
	sort(rect,rect+n);
	rep(i,MAX) used[i]=false;
	for(scanf("%d",&m);m--;){
		int x,y,res=-1;
//		cin>>x>>y;
scanf("%d%d",&x,&y);
		for(int pos=start;pos<n;pos=next[pos]){
			if(x<rect[pos].x0 || rect[pos].x1<x) continue;
			if(y<rect[pos].y0 || rect[pos].y1<y) continue;
			res=rect[pos].num;
			if(bef[pos]==-1){
				start=next[pos];
				bef[next[pos]]=-1;
			}else{
				bef[next[pos]]=bef[pos];
				next[bef[pos]]=next[pos];
			}
			break;
		}
//		cout<<((res==-1)?0:(res+1))<<endl;
printf("%d\n",res+1);
	}
}
