#include <algorithm>
#include <iostream>
#include <cstring>

using namespace std;

#define INF 1000

int a[100][100];
int dp[100][100][11];
int n, m, k;

int f(int j, int bj, int kk)
{
	if (kk > k)
		return INF;
	else if (j == m)
		return kk;
	else if (dp[j][bj][kk] != -1)
		return dp[j][bj][kk];
	int k1 = 0, k2 = 0;
	for (int i = 0; i < n; ++i)
	{
		int b1 = a[i][bj];
		int b2 = a[i][j];
		if (b1 == b2)
			k1++;
		else
			k2++;
	}
	return dp[j][bj][kk] = f(j+1, bj, kk+min(k1,k2));
}

int main()
{
	cin.sync_with_stdio(false);
	memset(dp, -1, sizeof(dp));
	cin >> n >> m >> k;
	int zc = 0, oc = 0;
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < m; ++j)
		{
			cin >> a[i][j];
			if (a[i][j] == 0)
				zc++;
			else
				oc++;
		}
	int res = INF;
	for (int j = 0; j < m; ++j)
		res = min(res, f(0, j, 0));
	if (oc <= k)
		res = min(res, oc);
	if (zc <= k)
		res = min(res, zc);
	if (res == INF)
		res = -1;
	cout << res << "\n";
	return 0;
}
