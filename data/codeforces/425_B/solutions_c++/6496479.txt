#include <iostream>
using namespace std;

const int N = 100;
int a[N][N], m, n, k;

int main() {
	ios::sync_with_stdio(false);
	cin >> m >> n >> k;
	for(int i = 0; i < m; ++i)
		for(int j = 0; j < n; ++j)
			cin >> a[i][j];
	int best = m * n;
	if(k < m) {
		for(int pivot = 0; pivot <= k; ++pivot) {
			int cost = 0;
			for(int i = 0; i < m; ++i) {
				int row = 0;
				for(int j = 0; j < n; ++j)
					row += a[pivot][j] ^ a[i][j];
				cost += min(row, n - row);
			}
			best = min(best, cost);
		}
	} else {
		for(int mask = 0; mask < 1 << m; ++mask) {
			int cost = 0;
			for(int j = 0; j < n; ++j) {
				int col = 0;
				for(int i = 0; i < m; ++i)
					col += (mask >> i & 1) ^ a[i][j];
				cost += min(col, m - col);
			}
			best = min(best, cost);
		}
	}
	cout << (best <= k ? best : -1);
	return 0;
}
