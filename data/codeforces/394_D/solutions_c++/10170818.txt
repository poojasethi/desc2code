#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int n;
vector<int> arr;
int best = 20001, best_start, best_step;
void solve(int step){
	int lo = -40000, hi = 40000, mid;
	while(lo<hi){
		int mid = (lo+hi+1)/2;
		int d=0,u=0;
		int cur = mid;
		for(int i = 0; i < n; ++i){
			d=max(d,arr[i]-cur);
			u=max(u,cur-arr[i]);
			cur+=step;
		}
		if(d>=u)
			lo = mid;
		else
			hi = mid-1;
	}
	for(int i = -1; i <= 1; ++i){
		int d=0,u=0;
		int cur = lo+i;
		int cost = 0;
		for(int i = 0; i < n; ++i){
			cost = max(cost,arr[i]-cur);
			cost = max(cost,cur-arr[i]);
			cur+=step;
		}
		if(cost<best){
			best=cost;
			best_start = lo;
			best_step=step;
		}
	}
}
int main(){
	cin >> n;
	arr.resize(n);
	for(int i = 0; i < n; ++i)
		cin >> arr[i];
	sort(arr.begin(),arr.end());
	for(int step = 0; step*(n-1) <= 60000; ++step){
		solve(step);
	}
	cout << best << '\n';
	cout << best_start << ' ' << best_step << '\n';
}
