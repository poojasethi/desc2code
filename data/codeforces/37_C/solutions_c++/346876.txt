#include<iostream>
#include<string.h>
#include<stdio.h>
#include<list>
using namespace std;
list <int > lst[1001];
char ans[1001][1100];
int ml;
int n;
char path[1100];
void dfs(int leve){
    if(!lst[leve].empty()){
        int i=lst[leve].back();
        lst[leve].pop_back();
        path[leve]='\0';
        strcpy(ans[i],path);
        while(ml>0&&lst[ml].empty())ml--;
        return ;
    }
    path[leve]='0';
    if(ml>leve)
    dfs(leve+1);
    if(ml>leve){
        path[leve]='1';
        dfs(leve+1);
    }
}

bool solve(){
    dfs(0);
    return ml==0;
}

int main(){
    cin>>n;
    int a;
    ml=0;
    for(int i=1;i<=n;i++){
        cin>>a;
        lst[a].push_back(i);
        if(a>ml)ml=a;
    }
    solve();
    if(ml>0)cout<<"NO"<<endl;
    else {
        cout<<"YES"<<endl;
        for(int i=1;i<=n;i++)
            cout<<ans[i]<<endl;
    }
    return 0;
}