#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
struct node 
{
	int id,len;
	char str[1005];
}s[1005];
int n,now;
char x[1005];
int cmp(node a,node b)
{
	return a.len>b.len;
}
int cmp2(node a,node b)
{
	return a.id<b.id;
}
void dfs(int d)
{
	//cout<<d<<" "<<x<<endl;
	if(d==s[now].len)
	{
		x[d]=0;
		strcpy(s[now++].str,x);
		return;
	}
	if(d>s[now].len)
		return;
	if(d<s[now].len)
	{
		x[d]='0';
		dfs(d+1);
		x[d]='1';
		dfs(d+1);
	}
}
int main()
{
	int i;
	while(scanf("%d",&n)!=EOF)
	{
		for(i=0;i<n;i++)
		{
			scanf("%d",&s[i].len);
			s[i].id=i;
		}
		sort(s,s+n,cmp);
		now=0;
		dfs(0);
		if(now<n)
			puts("NO");
		else
		{
			puts("YES");
			sort(s,s+n,cmp2);
			for(i=0;i<n;i++)
				cout<<s[i].str<<endl;
		}
	}
	return 0;
}
   	  				  	  				 		  	 	