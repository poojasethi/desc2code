#include<cstdio>
#include<cstring>
#include<string>
#include<algorithm>
#include<iostream>
using namespace std;
const int N = 1000005;
int tri[N][2],b[N],a[N],k;
string s[N],t;
bool u[N];
bool cmp(int x,int y){return a[x]<a[y];}
void work(int x,int c)
{
	if(!x)
	{
		u[c]=false;
		return ;
	}
	if(!tri[c][0])tri[c][0]=k++;
	if(!tri[c][1])tri[c][1]=k++;
	int l=tri[c][0],r=tri[c][1];
	if(u[l])
	{
		t+="0";
		work(x-1,l);
	}
	else 
	{
		t+="1";
		work(x-1,r);
	}
	if(!u[l]&&!u[r])u[c]=false;
}
void get(int x)
{
	int len=a[x];
	t="";
	work(len,1);
	s[x]=t;
}
int main()
{
	int n,i;
	k=2;
	memset(u,true,sizeof(u));
	scanf("%d",&n);
	for(i=0;i<n;i++){scanf("%d",a+i);b[i]=i;}
	sort(b,b+n,cmp);
	for(i=0;i<n;i++)
	{
		if(!u[1])break;
		else get(b[i]);
	}
	if(i==n)
	{
		puts("YES");
		for(i=0;i<n;i++)cout << s[i] << endl;
	}
	else puts("NO");
	return 0;
}