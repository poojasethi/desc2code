#include<iostream>
#include<cstdio>
#include<cstring>
#include<vector>
#include<set>
#include<cmath>
#include<queue>
#include<algorithm>
#include<map>
#include<stack>
using namespace std;
int n;
int a[15],len,ans[15];
char buf[15];
vector<string> str;
inline bool check(int l,int r)
{
	if(ans[l]==0 && l<r)return false;
	int sum=0;
	for(int i=l;i<=r;i++)sum=sum*10+ans[i];
	return sum<256;
}
void dfs(int l,int r,int f)
{
	if(l>r)
	{
		if(f==(1<<n)-1)
		{
			for(int i=1;i<=3;i++)
			{
				for(int j=1;j<=3 && i+j<len;j++)
				{
					for(int k=1;k<=3 && i+j+k<len;k++)
					{
						if(len-i-j-k<=3 && check(0,i-1) && check(i,i+j-1) && check(i+j,i+j+k-1) && check(i+j+k,len-1))
						{
							int t1=0,t2=0;
							for(int x=0;x<i;x++)buf[t2++]=ans[t1++]+'0';
							buf[t2++]='.';
							for(int x=0;x<j;x++)buf[t2++]=ans[t1++]+'0';
							buf[t2++]='.';
							for(int x=0;x<k;x++)buf[t2++]=ans[t1++]+'0';
							buf[t2++]='.';
							for(int x=0;x<len-i-j-k;x++)buf[t2++]=ans[t1++]+'0';
							str.push_back(buf);
						}
					}
				}
			}
		}
	}
	else
	{
		for(int i=0;i<n;i++)
		{
			ans[l]=ans[r]=a[i];
			dfs(l+1,r-1,f|(1<<i));
		}
	}
}
int main()
{
	cin>>n;
	for(int i=0;i<n;i++)
	{
		cin>>a[i];	
	}
	for(int i=4;i<=12;i++)
	{
		len=i;
		dfs(0,i-1,0);
	}
	cout<<str.size()<<endl;
	for(int i=0;i<str.size();i++)
	{
		cout<<str[i]<<endl;
	}
	return 0;
}