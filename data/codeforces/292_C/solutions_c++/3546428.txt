#include <cstdio>
#include <algorithm>
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int n, s[13], tot;
bool u[10];
char ans[1000005][20];

void odp(int a, int b){
	if(a * 2 >= b){
		int c[10];
		fi(i, 0, 10) c[i] = 0;
		fi(i, 0, b) c[s[i]]++;
		fi(i, 0, 10) if(u[i] && !c[i]) return;
		
		fi(i, 0, 3) fi(j, i + 1, i + 4) fi(k, j + 1, j + 4){
			if(b - k > 4 || b - k < 2) continue;
			
			int t = 0;
			FI(x, 0, i) t = t * 10 + s[x];
			if(t > 255 || !s[0] && i) continue;
			
			t = 0;
			FI(x, i + 1, j) t = t * 10 + s[x];
			if(t > 255 || !s[i + 1] && j > i + 1) continue;
			
			t = 0;
			FI(x, j + 1, k) t = t * 10 + s[x];
			if(t > 255 || !s[j + 1] && k > j + 1) continue;
			
			t = 0;
			fi(x, k + 1, b) t = t * 10 + s[x];
			if(t > 255 || !s[k + 1] && b - 1 > k + 1) continue;
			
			bool d[b];
			fi(x, 0, b) d[x] = 0;
			d[i] = d[j] = d[k] = 1;
			
			t = 0;
			fi(x, 0, b){
				ans[tot][t++] = s[x] + '0';
				if(d[x]) ans[tot][t++] = '.';
			}
			tot++;
		}
		return;
	}
	
	fi(i, 0, 10) if(u[i]){
		s[a] = s[b - a - 1] = i;
		odp(a + 1, b);
	}
}

int main(){
	scanf("%d", &n);
	while(n--){
		int a;
		scanf("%d", &a);
		u[a] = 1;
	}
	
	FI(i, 4, 12) odp(0, i);
	printf("%d\n", tot);
	fi(i, 0, tot) puts(ans[i]);
	scanf("\n");
}
