#include <iostream>
#include <vector>
using namespace std;
struct Ans{long p[4];};
vector<Ans> ans;
Ans x={};
long n,i,a[20]={},s[20]={},v[20]={};
void print(Ans a) {
    cout << a.p[0];
    for (long i=1;i<4;i++) cout << '.' << a.p[i];
    cout << endl;
}
void get(long d,long n,long t,long l) {
    if (d==l) {
        if (n==3) {
            x.p[3]=t;
            ans.push_back(x);
        }
        return;
    }
    long next=t*10+s[d+1];
    if (next>255) return;
    if (!((n==3)||((n==2)&&(d+1==l)))) {
        x.p[n]=next;
        get(d+1,n+1,0,l);
    }
    if ((next!=0)||(d+1==l))
        get(d+1,n,next,l);
}       
void dfs(long d,long num,long l) {
    if (d>=(l+1)/2) {
        if (num==n) get (0,0,0,l);
        return;
    }
    for (long i=0;i<n;i++) {
        v[i]++;
        s[d+1]=s[l-d]=a[i];
        dfs(d+1,num+((v[i]==1)?1:0),l);
        v[i]--;
    }
}
int main() {
    cin >> n;
    for (i=0;i<n;i++) cin >> a[i];
    for (i=4;i<13;i++)
        dfs(0,0,i);
    cout << ans.size() << endl;
    for (i=0;i<ans.size();i++)
        print(ans[i]);
    return 0;
}