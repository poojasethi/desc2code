#include <map>
#include <set>
#include <list>
#include <ctime>
#include <cmath>
#include <queue>
#include <stack>
#include <bitset>
#include <vector>
#include <cstdio>
#include <string>
#include <cstring>
#include <sstream>
#include <iomanip>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;
struct node {
    int c[5];
}f;
int a[15],b[25],e[15],n,ans=0;
vector<node> p;
void ok (int x,int y,int l) {
	if (x==4) {
		if (y==l) p.push_back(f);
		return;
	}
	int d=0,t=y;
	while (y<l) {
		if (t!=y && d==0) break;
		d=d*10+b[y];
		if (d>=256) break;
		f.c[x]=d;
		ok(x+1,y+1,l);y++;
	}
}
void dfs (int l,int y) {
	int i;
	if (y==(l+1)/2) {
		if (ans==n) ok(0,0,l);
		return;
	}
	for (i=0;i<n;i++) {
		b[y]=a[i];b[l-y-1]=b[y];
		if (!e[i]) ans++;
		e[i]++;dfs(l,y+1);e[i]--;
		if (!e[i]) ans--;
	}
}
int main ( ) {
	int i,j;
	scanf("%d",&n);
	for (i=0;i<n;i++) scanf("%d",&a[i]);
	for (i=4;i<=12;i++) dfs(i,0);
	printf("%d\n",(int)p.size());
	for (i=0;i<(int)p.size();i++) {
		for (j=0;j<=3;j++) {
			if (j>0) printf(".");
			printf("%d",p[i].c[j]);
		}
		printf("\n");
	}
	return 0;
}
/*
Sample test(s)

input

6
0 1 2 9 8 7

output

6
78.190.209.187
79.180.208.197
87.190.209.178
89.170.207.198
97.180.208.179
98.170.207.189

input

1
4

output

16
4.4.4.4
4.4.4.44
4.4.44.4
4.4.44.44
4.44.4.4
4.44.4.44
4.44.44.4
4.44.44.44
44.4.4.4
44.4.4.44
44.4.44.4
44.4.44.44
44.44.4.4
44.44.4.44
44.44.44.4
44.44.44.44
*/
