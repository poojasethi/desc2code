
#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;

typedef long long i8;

int n, ok[10], alln;
vector<int> re;
char buf[105];
int pa[4];

void go(int f, int co, int le) {
	if (co==3) {
		if (f>=le || (f<le-1 && buf[f]=='0') || f+3<le) 
			return;
		int x=0;
		for (int p=f; p<le; p++) {
			x=x*10+buf[p]-'0';
		}
		if (x<256) {
			for (int i=0; i<3; i++)
				re.push_back(pa[i]);
			re.push_back(x);
		}
		return;
	}
	
	if (f>=le) return;
	
	if (buf[f]=='0') {
		pa[co]=0;
		go(f+1,co+1,le);
	} else {
		int x=0;
		for (int p=f; p<le; p++) {
			x=x*10+(buf[p]-'0');
			if (x>255) break;
			pa[co]=x;
			go(p+1,co+1,le);
		}
	}
}

void drop(int le) {
	//buf[le]=0;
	//printf("   '%s'\n", buf);
	go(0,0,le);
}

void rec(int le, int mask) {
	if (le>1 && mask==alln) {
		if (le*2<13) {
			for (int i=0; i<le; i++) {
				buf[le*2-i-1]=buf[i];
			}
			drop(le*2);
		}
		if (le*2-1>3) {
			for (int i=0; i<le-1; i++) {
				buf[le*2-i-2]=buf[i];
			}
			drop(le*2-1);
		}
	}
	
	if (le<7) {
		for (int i=0; i<n; i++) {
			buf[le]=ok[i]+'0';
			rec(le+1, mask | (1<<i));
		}
	}
}

main() {
	scanf("%d", &n);
	for (int i=0; i<n; i++) {
		scanf("%d", ok+i);
	}
	
	if (n>6) {
		printf("0\n");
		return 0;
	}
	
	alln=(1<<n)-1;
	rec(0,0);
	printf("%d\n", re.size()/4);
	for (int i=0; i<re.size(); i+=4) {
		printf("%d.%d.%d.%d\n",re[i],re[i+1],re[i+2],re[i+3]);
	}
}
