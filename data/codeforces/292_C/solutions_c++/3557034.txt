#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <vector>


using namespace std;
vector <int> vec[4];
int a[20],n,m;
int dig[20],num[20];
int bitcount(int cur){
    int tot=0;
    for (int i=0;i<n;i++)
        if ((1<<i)&cur) tot++;
    return tot;
}
void gene(int pos,int now,int seg){
    if (seg>3) return;
    if (pos==m){
        if (seg<3) return;
        else num[3]=now;
        for (int i=0;i<=3;i++)
            vec[i].push_back(num[i]);
        return;
    }
    if (now==0){
        num[seg]=0;
        gene(pos,-1,seg+1);
    }
    else if (now>0){
        num[seg]=now;
        gene(pos,-1,seg+1);
        int get=now*10+dig[pos];
        if (get<=255) gene(pos+1,get,seg);
    }
    else gene(pos+1,dig[pos],seg);
}
void search(int l,int r,int cur){
    int cnt=bitcount(cur);
    if (l>r){
        if (cnt==n) gene(0,-1,0);
        return;
    }
    if (cnt+(r-l+2)/2<n) return;
    for (int i=0;i<n;i++){
        dig[l]=dig[r]=a[i];
        search(l+1,r-1,cur|(1<<i));
    }
}
int main(){
    while (scanf("%d",&n)==1){
        for (int i=0;i<n;i++)
            scanf("%d",&a[i]);
        sort(a,a+n);
        for (int i=0;i<4;i++) vec[i].clear();
        for (m=4;m<=12;m++)
            search(0,m-1,0);
        int vsize=vec[0].size();
        printf("%d\n",vsize);
        for (int i=0;i<vsize;i++)
            printf("%d.%d.%d.%d\n",vec[0][i],vec[1][i],vec[2][i],vec[3][i]);
    }
    return 0;
}
