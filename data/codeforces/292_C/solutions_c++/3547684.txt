#include <cstdio>
#include <vector>
#include <string>

using namespace std;
int dn;
int ds[11];
int was[11];

int v[16];
int cur[4];

vector <string> res;
void out() {
  char buf[100];
  sprintf (buf, "%d.%d.%d.%d", cur[0], cur[1], cur[2], cur[3]);
  res.push_back (buf);
}
void gen2 (int i, int cur_i, int cur_v, int len) {
  if (i == len) {
    if (cur_i == 3) {
      cur[cur_i] = cur_v;
      out();
    }
    return;
  }
  cur_v = cur_v * 10 + v[i];
  if (cur_v > 255) {
    return;
  }
  if (cur_i != 3 && !(cur_i == 2 && i + 1 == len)) {
    cur[cur_i] = cur_v;
    gen2 (i + 1, cur_i + 1, 0, len);
  } 

  if (cur_v != 0 || i + 1 == len) {
    gen2 (i + 1, cur_i, cur_v, len);
  }
}

void gen (int i, int was_d, int len) {
  int j = len - i - 1;
  if (i > j) {
    if (was_d == dn) {
      gen2 (0, 0, 0, len);
    }
    return;
  }
  for (int di = 0; di < dn; di++) {
    int flag = !was[di];
    was[di] = 1;
    v[i] = ds[di];
    v[j] = ds[di];
    gen (i + 1, was_d + flag, len);
    if (flag) {
      was[di] = 0;
    }
  }
}

int main (void) {
  scanf ("%d", &dn);
  for (int i = 0; i < dn; i++) {
    scanf ("%d", &ds[i]);
  }


  for (int len = 4 * 1; len <= 4 * 3; len++) {
    gen (0, 0, len);
  }

  printf ("%d\n", (int)res.size());
  for (int i = 0; i < (int)res.size(); i++) {
    puts (res[i].c_str());
  }
  
  return 0;
}
