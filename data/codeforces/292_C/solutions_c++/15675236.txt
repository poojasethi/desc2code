    #include <iostream>
    #include <string>
    #include <set>  
    #include <algorithm>
    #include <vector>
    #include <queue>
    #include <cmath>
	#include <cstring>
    #include <cstdio>
    #include <map>
using namespace std;
int a[4],u[10],hav[10],n,k;
char s[99],t[99],tmp[99];
vector<string> ans;
void rec(int i,int j,int len)
{
	if(i==len&&j==4)
	{
		sprintf(tmp,"%d.%d.%d.%d",a[0],a[1],a[2],a[3]);
		ans.push_back(tmp);
	}
	if(i==len||j==4)return;
	if(i+4-j>len)return;
	if(i+3*(4-j)<len)return;
	if(i+1<=len)
	{
		a[j]=t[i];
		rec(i+1,j+1,len);
	}
	if(i+2<=len&&t[i]!=0)
	{
		a[j]=t[i]*10+t[i+1];
		rec(i+2,j+1,len);
	}
	if(i+3<=len&&t[i]!=0)
	{
		a[j]=(t[i]*10+t[i+1])*10+t[i+2];
		if(a[j]<256)
			rec(i+3,j+1,len);
	}
}
void go(int i)
{
	bool good=1;
	for(int j=0;j<10;j++)
		if(hav[j]&&!u[j])good=0;
	if(good&&i)
	{
		memcpy(t,s,i);
		memcpy(t+i,s,i);
		reverse(t+i,t+2*i);
		rec(0,0,2*i);
		memcpy(t+i-1,s,i);
		reverse(t+i-1,t+2*i-1);
		rec(0,0,2*i-1);
	}
	if(i==6)return;
	for(int j=0;j<10;j++)
	{
		if(hav[j]){
		s[i]=j;
		u[j]++;
		go(i+1);
		u[j]--;
				}
	}
}
int main()
{
	cin>>n;
	for(int i=0;i<n;i++)
	{
		cin>>k;
		hav[k]=1;
	}
	go(0);
	cout<<ans.size()<<endl;
	for(int i=0;i<(int)ans.size();i++)
		cout<<ans[i]<<endl;
	return 0;
}
