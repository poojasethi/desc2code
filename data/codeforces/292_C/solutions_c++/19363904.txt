#include<iostream>
#include<string>
#include<sstream>
#include<vector>
using namespace std;
int N,a[10];
string ip[4];
vector<string> vec;
bool u[10];
bool check(string str,int len){
	for(int i=0;i<10;i++) u[i]=0;
	for(int i=0;i<len;i++) u[str[i]-'0']=1;
	for(int i=0;i<N;i++) if(!u[a[i]]) return false;
	return true;
}
bool ok(string str){
	int res=0;
	for(int i=0;i<str.size();i++) res=res*10+(str[i]-'0');
	return res<256;
}
void toRes(){
	string str;
	for(int i=0;i<3;i++) str+=ip[i]+'.';
	str+=ip[3];
	vec.push_back(str);
}
void add_dot(string &str,int i,int start,int len){
	if(i==4){
		if(start==len) toRes();
		return ;
	}
	ip[i]="";
	for(int k=start;k<start+3&&k<str.size();k++){
		ip[i]+=str[k];
		if(!ok(ip[i])) return;
		add_dot(str,i+1,k+1,len);
		if(ip[i]=="0") return;
	}
}
string get_palin(string str,int len,int l){
	string res;
	for(int i=0;i<l;i++) res+=str[i];
	for(int i=l-1-(len&1);i>=0;i--) res+=str[i];
	return res;
}
void dfs(string &str,int i){
	if(i>6) return ;
	if(i>=N){
		if(check(str,i)){
			string t=get_palin(str,(i<<1)-1,i);
			add_dot(t,0,0,(i<<1)-1);
			t=get_palin(str,(i<<1),i);
			add_dot(t,0,0,(i<<1));
		}
	}
	for(int k=0;k<N;k++){
		str[i]=a[k]+'0';
		dfs(str,i+1);
	}
}
int main(){
	cin>>N;
	for(int i=0;i<N;i++) cin>>a[i];
	string str="0000000";
	if(N<=6) dfs(str,0);
	cout<<vec.size()<<'\n';
	for(int i=0;i<vec.size();i++) cout<<vec[i]<<'\n';
	return 0;
}
		 		 	 	 	 	 		  			 	   		 		