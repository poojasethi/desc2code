#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;
const int N=15;
int n,tot,a[N],c[N],p[N],w[N],ans[100005][N];
void cnt(int k,int pos,int l)
{
   if(k<0)
   {
      if(pos==l) memmove(ans[tot++],c,sizeof(c));
      return; 
   }
   c[k]=0;
   for(int i=pos;i<=l-1-k && i<=pos+2;++i)
   {
      c[k]=c[k]*10+p[i];
      if((p[pos]>0 || c[k]==0 && i==pos) && c[k]<=255 && i>=l-1-k*3)
      cnt(k-1,i+1,l);
   }
}
inline void dfs(int pos,int l)
{
   int i;
   if((pos+1-(l&1)>(l>>1)))
   {
      for(i=0;i<n;++i)  if(!w[i]) break;
	if(i==n) cnt(3,0,l);
	return;  
   }
   for(i=0;i<n;++i)
   {
      ++w[i];
      p[pos]=p[l-1-pos]=a[i];
      dfs(pos+1,l);
      --w[i];
   }
}
int main()
{
	int i,j;
      scanf("%d",&n);
	if(n>6) {printf("0");return 0;}
      for(i=0;i<n;++i) scanf("%d",&a[i]);
	sort(a,a+n);
	for(i=max(4,n);i<=12;++i)
	{
	   memset(p,0,sizeof(p));
	   dfs(0,i);
	}
	printf("%d\n",tot);
	for(i=0;i<tot;++i)
	 for(j=3;j>=0;--j)
	  printf("%d%c", ans[i][j], (j?'.':'\n'));
	//system("pause");
	return 0;
}
