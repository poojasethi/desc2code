#!/usr/bin/python
#-*- coding:utf-8 -*-
import sys, re, itertools

fin = sys.stdin
fout = sys.stdout

# fin = open("C.in", "r")
# fout = open("C.out", "w")

n = int(fin.readline())

if n > 6:
	fout.write("0\n")
else:
	nums = set([x for x in fin.readline().split()])
	# print nums
	ans = set()

	def good_part(s):
		return bool(len(s) > 0 and len(s) <= 3 and (len(s) == 1 or s[0] != '0') and int(s) < 256)

	def get_ips(s):
		for p1 in xrange(0, 3):
			for p2 in xrange(p1 + 1, min(p1 + 4, len(s) - 1)):
				for p3 in xrange(p2 + 1, min(p2 + 4, len(s) - 1)):
					v = [s[0:p1 + 1], s[p1 + 1:p2 + 1], s[p2 + 1:p3+ 1], s[p3 + 1: len(s)]]
					if all(good_part(x) for x in v):
						ans.add("{0}.{1}.{2}.{3}\n".format(v[0], v[1], v[2], v[3]))


	for ts in itertools.product(nums, repeat=6):
		rs = "".join(ts)
		for i in xrange(2, 7):
			s = rs[0:i]
			good = all(c in s for c in nums)
			if good:
				get_ips(s + s[::-1])
				get_ips(s[:-1] + s[::-1])

	# get_ips("123123123123")

	fout.write("{0}\n".format(len(ans)))
	for a in ans:
		fout.write(a)


