#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#define N 211111
#define int long long
using namespace std;
int n,k,w,tot=-1,cnt,rt,sum;
int ans;
int head[N],ver[N],nxt[N],len[N];
int tr[N],dis[N],dep[N],size[N],mx[N],vis[N];
struct node{int x,y;}a[N];

int read(){
    int x=0,f=1;char c=getchar();
    while(c<'0'||c>'9'){if(c=='-')f=-1;c=getchar();}
    while(c>='0'&&c<='9'){x=x*10+c-'0';c=getchar();}
    return x*f;
}

bool cmp(node a,node b){
	return a.x<b.x;
}

void add(int x,int d){
	while(x<=n)tr[x]+=d,x+=x&-x;
}

int query(int x){
	if(x<=0)return 0;
	int ret=0;
	while(x){
		ret+=tr[x];
		x-=x&-x;
	}
	return ret;
}

void add(int x,int y,int z){
	tot++;
	nxt[tot]=head[x];
	head[x]=tot;
	ver[tot]=y;
	len[tot]=z;
}

void root(int x,int fa){
	size[x]=1;mx[x]=0;
	for(int i=head[x];~i;i=nxt[i])
	if(!vis[ver[i]]&&ver[i]!=fa){
		root(ver[i],x);
		size[x]+=size[ver[i]];
		mx[x]=max(mx[x],size[ver[i]]);
	}
	mx[x]=max(mx[x],sum-size[x]);
	if(mx[x]<mx[rt])rt=x;
}

void get(int x,int fa){
	cnt++;
	a[cnt].x=dis[x];a[cnt].y=dep[x];
	for(int i=head[x];~i;i=nxt[i])
	if(!vis[ver[i]]&&ver[i]!=fa){
		dis[ver[i]]=dis[x]+len[i];
		dep[ver[i]]=dep[x]+1;
		get(ver[i],x);
	}
}

int calc(){
	int ret=0;
	sort(a+1,a+1+cnt,cmp);
	/*puts("debug");
	for(int i=1;i<=cnt;i++)cout<<a[i].x<<" "<<a[i].y<<endl;
	cout<<endl;*/
	for(int i=1;i<=cnt;i++)add(a[i].y,1);
	int l=1,r=cnt;
	while(l<=r){
		while(l<r&&a[l].x+a[r].x>w){
			add(a[r].y,-1);
			r--;
		}
		add(a[l].y,-1);
		ret+=query(k-a[l].y);l++;
	}
//	for(int i=1;i<=n;i++)
//	if(query(i))while(1);
	return ret;
}

void dfs(int x){
	rt=0;
	root(x,-1);
	vis[rt]=1;
	for(int i=head[rt];~i;i=nxt[i])
	if(!vis[ver[i]]){
		dep[ver[i]]=1;dis[ver[i]]=len[i];
		get(ver[i],rt);
	}
	ans+=calc();
	for(int i=1;i<=cnt;i++)if(a[i].x<=w&&a[i].y<=k)ans++;
	cnt=0;
	for(int i=head[rt];~i;i=nxt[i])
	if(!vis[ver[i]]){
		get(ver[i],rt);
		ans-=calc();cnt=0;
	}
	for(int i=head[rt];~i;i=nxt[i])
	if(!vis[ver[i]]){
		sum=size[ver[i]];
		dfs(ver[i]);
	}
}

#undef int
int main(){
	#define int long long
	memset(head,-1,sizeof(head));
	n=read();k=read();w=read();
//	scanf("%d%d%d",&n,&k,&w);k+=2;
	for(int i=2;i<=n;i++){
		int a=read(),b=read();//scanf("%d%d",&a,&b);
		add(i,a,b);add(a,i,b);
	}
	mx[0]=0x3f3f3f3f3f3f3f3fll;sum=n;
	dfs(1);
	cout<<ans<<endl;
	return 0;
}

