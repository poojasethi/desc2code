#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;
const int MAXN=100005;
int nex[MAXN*2],las[MAXN],d[MAXN*2],l[MAXN*2];
bool use[MAXN];
int top,L,W;
void Add(int x,int y,int z)
{
	nex[++top]=las[x];d[las[x]=top]=y;l[top]=z;
}
int sum[MAXN];
void Get_sum(int x,int fa)
{
	sum[x]=1;
	for(int i=las[x];i;i=nex[i])
		if(d[i]!=fa&&!use[d[i]])
			Get_sum(d[i],x),
			sum[x]+=sum[d[i]];
}
int Get(int x,int fa,int s)
{
	for(int i=las[x];i;i=nex[i])
		if(d[i]!=fa&&!use[d[i]]&&sum[d[i]]>s)
			return Get(d[i],x,s);
	return x;
}
vector<int> a,b;
int d1[MAXN],d2[MAXN];
void Get_dis(int x,int fa,int dis1,int dis2)
{
	if(dis1>L||dis2>W)
		return ;
	d1[x]=dis1,d2[x]=dis2;
	a.push_back(x),b.push_back(x);
	for(int i=las[x];i;i=nex[i])
		if(d[i]!=fa&&!use[d[i]])
			Get_dis(d[i],x,dis1+1,dis2+l[i]);
}
bool cmp(const int &x,const int &y)
{
	return d2[x]<d2[y];
}
int c[MAXN];
void Insert(int x,int y)
{
	for(;x<=L+1;x+=x&-x)
		c[x]+=y;
}
int Query(int x)
{
	int ret=0;
	for(;x;x-=x&-x)
		ret+=c[x];
	return ret;
}
long long ans=0;
void Calc(vector<int> &a,int t)
{
	sort(a.begin(),a.end(),cmp);
	int i,j;
	for(i=(int)a.size()-1,j=0;i>=0;i--)
	{
		while(j<a.size()&&d2[a[i]]+d2[a[j]]<=W)
			Insert(d1[a[j++]]+1,t);
		ans+=Query(L-d1[a[i]]+1);
	}
	for(;j--;)
		Insert(d1[a[j]]+1,-t);
}
void Work(int x)
{
	Get_sum(x,0);
	x=Get(x,0,sum[x]>>1);
	b.resize(0);
	b.push_back(x);
	d1[x]=d2[x]=0;
	for(int i=las[x];i;i=nex[i])
		if(!use[d[i]])
		{
			a.resize(0);
			Get_dis(d[i],x,1,l[i]);
			Calc(a,-1);
		}
	Calc(b,1);
	use[x]=1;
	for(int i=las[x];i;i=nex[i])
		if(!use[d[i]])
			Work(d[i]);
}
int main()
{
	int n;
	scanf("%d%d%d",&n,&L,&W);
	for(int i=2,x,y;i<=n;i++)
		scanf("%d%d",&x,&y),
		Add(i,x,y),Add(x,i,y);
	Work(1);
	printf("%I64d\n",ans-n>>1);
}