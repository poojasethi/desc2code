#include <cstdio>
#include <algorithm>
#define maxn 100005
#define ll long long
#define pr pair<ll,int>
#define fi first
#define se second
using namespace std;

int N,A,B,S,head[maxn],lk[maxn*2],next[maxn*2],w[maxn*2],fa[maxn],d[maxn],s[maxn],q[maxn],bg[maxn];
ll ans,e[maxn];
bool b[maxn];
pr a[maxn];

void add(int u,int v,int x,int t) {lk[t]=v,w[t]=x,next[t]=head[u],head[u]=t;}

int bfs(int p)
{
	int l=1,r=1;
	for (q[1]=p,fa[p]=0; l<=r; l++)
		for (int u=q[l],i=head[u],v; v=lk[i],i; i=next[i]) if (!b[v]&&v!=fa[u]) fa[v]=u,q[++r]=v;
	return r;
}

int find(int u)
{
	int mi=1e9,r=bfs(u),o;
	for (int x=r,u; u=q[x],x; x--)
	{
		int ma=0; s[u]=1;
		for (int i=head[u],v; v=lk[i],i; i=next[i]) if (!b[v]&&v!=fa[u]) s[u]+=s[v],ma=max(ma,s[v]);
		ma=max(ma,r-s[u]);
		if (ma<mi) mi=ma,o=u;
	}
	return o;
}

void ins(int x,int d) {for (;x<=N+1; x+=x&-x) bg[x]+=d;}
int sum(int x) {int d=0; for (;x; x-=x&-x) d+=bg[x]; return d;}

ll calc(int u)
{
	for (int i=1; i<=S; i++) a[i]=pr(e[q[i]],d[q[i]]);
	sort(a+1,a+S+1);
	ll res=0; int i=S,j=1;
	for (;i; i--)
	{
		for (;j<=S&&a[j].fi+a[i].fi<=B; j++) ins(a[j].se+1,1);
		if (a[i].se<=A) res+=sum(A-a[i].se+1);
	}
	for (;--j; ins(a[j].se+1,-1));
	return res;
}

void dfs(int u)
{
	int p=find(u);
	S=bfs(p),d[p]=e[p]=0;
	for (int x=1; x<=S; x++)
		for (int u=q[x],i=head[u],v; v=lk[i],i; i=next[i]) if (!b[v]&&v!=fa[u]) d[v]=d[u]+1,e[v]=e[u]+w[i];
	b[p]=1,ans+=calc(p);
	for (int i=head[p],v; v=lk[i],i; i=next[i]) if (!b[v]) S=bfs(v),ans-=calc(v);
	for (int i=head[p],v; v=lk[i],i; i=next[i]) if(!b[v]) dfs(v);
}

int main()
{
	scanf("%d%d%d",&N,&A,&B);
	for (int i=2,t=0,f,x; i<=N; i++) scanf("%d%d",&f,&x),add(f,i,x,++t),add(i,f,x,++t);
	dfs(1),printf("%I64d\n",(ans-N)/2);
	return 0;
}