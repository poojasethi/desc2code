#include <iostream>
#include <cstdio>
using namespace std;

const int MX = 100,offset = 101,BIG = 300000,oo = 1000000000;

const int MAXN = 500 + 10,MAXM = 100 + 10;

int a[MAXN],b[MAXN],cc[MAXN],N,M,ll[MAXN],rr[MAXN];
int S,T,flow;

int g[300000],num[1000000],next[1000000],c[1000000],tot;
int h[300000],low[300000],dist[300000],pre[300000],cur[300000];

inline void addedge(int x,int y,int z)
{
  ++tot; num[tot]=y; next[tot]=g[x]; g[x]=tot; c[tot]=z;
  ++tot; num[tot]=x; next[tot]=g[y]; g[y]=tot; c[tot]=0;
}

int getv(int now ,int x )
{
  //cout << "wocao " <<a[now] * x * x + b[now] * x + cc[now] << endl;
  return  a[now] * x * x + b[now] * x + cc[now];
}

int getnum(int x,int y)
{
  y+=offset;
  return (x-1) * ( MX - (-MX) + 1 + 1 ) + y;
}

bool isok(int x,int y)
{
//  return ((<=y) && (y<=MX));
}

void deal(int x,int y,int z)
{
  for (int i=ll[x];i<=rr[x];++i)
    if ( ll[y]<=i-z && i-z<=rr[y]+1)
    {
      addedge( getnum(x,i) , getnum(y,i-z), oo );
  //    cout << getnum(x,i) << " " << getnum(y,i-z) << endl;
    }
}

void init()
{
  for (int i=S;i<=T;++i) cur[i]=g[i];
  h[0]=T-S+1;
}

void sap()
{
  low[S]=oo; int now=S,i;
  while (dist[S]<T-S+1)
  {
    for (i=cur[now];i;i=next[i]) if (c[i] && dist[num[i]]+1==dist[now]) break;

    if (i)
    {
      cur[now]=pre[num[i]]=i; low[num[i]]=min(low[now],c[i]); now=num[i];
      if (now==T)
        for (flow+=low[T];now!=S;now=num[pre[now]^1])
        {
          c[pre[now]]-=low[T];
          c[pre[now]^1]+=low[T];
        }
    }
    else
    {
      if (--h[dist[now]]==0) break;
      dist[now]=T-S+1;
      for (int i=g[now];i;i=next[i])
        if (c[i] && dist[num[i]]+1<dist[now])
          dist[now]=dist[num[i]]+1,cur[now]=i;
      ++h[dist[now]];
      if (now!=S) now=num[pre[now]^1];
    }
  }
}


int main()
{
//  freopen("wcnm.out","w",stdout);
  tot=1;

  scanf("%d%d",&N,&M);
  for (int i=1;i<=N;++i) scanf("%d%d%d",&a[i],&b[i],&cc[i]);
  for (int i=1;i<=N;++i) scanf("%d%d",&ll[i],&rr[i],&cc[i]);

  S=0;
  T = getnum(N+1,1);

  for (int i=1;i<=N;++i)
  {
    int l=ll[i],r=rr[i];
    addedge( S, getnum(i,-MX) , oo);
    for (int v=-MX;v<=MX;++v)
      if (l<=v && v<=r)
      {
        addedge( getnum(i,v), getnum(i,v+1), BIG - getv(i,v) );
     //   cout <<BIG - getv(i,v) << endl;
      }
      else
        addedge( getnum(i,v), getnum(i,v+1), oo);
    addedge( getnum(i,MX+1) , T,  oo);
  }

  for (int i=1;i<=M;++i)
  {
    int u,v,d;
    scanf("%d%d%d",&u,&v,&d);
  //  swap(u,v);
    deal(u,v,d);

  }

  init();

  sap();

  int ans = BIG * N - flow ;

  printf("%d\n",ans);
  //cout << T << endl;

 // while(1);

  return 0;
}
