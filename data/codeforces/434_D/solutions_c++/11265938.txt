#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;
#define maxn 15100
#define maxm 250000
struct edges{
	int to,next,cap;
}edge[maxm*2];
int next[maxn],L,Cnt;
#define inf 0x7fffffff
inline void addedge(int x,int y,int z){
	L++;
	edge[L*2]=(edges){y,next[x],z};next[x]=L*2;
	edge[L*2+1]=(edges){x,next[y],0};next[y]=L*2+1;
}
int h[maxn],gap[maxn],p[maxn],s,t;
int sap(int u,int flow){
	if (u==t) return flow;
	int cnt=0;
	for (int i=p[u];i;i=edge[i].next) 
		if (edge[i].cap&&h[edge[i].to]+1==h[u]) {
			int cur=sap(edge[i].to,min(flow-cnt,edge[i].cap));
			edge[i].cap-=cur;edge[i^1].cap+=cur;
			p[u]=i;
			if ((cnt+=cur)==flow) return flow;
		}
	if (!(--gap[h[u]])) h[s]=Cnt;
	gap[++h[u]]++;p[u]=next[u];
	return cnt;
}
inline int maxflow(){
	for (int i=1;i<=Cnt;i++) p[i]=next[i];
	memset(h,0,sizeof(h));
	memset(gap,0,sizeof(gap));
	gap[0]=Cnt;
	int flow=0;
	while (h[s]<Cnt) flow+=sap(s,inf);
	return flow;
}
#define maxk 55
int a[maxk],b[maxk],c[maxk],st[maxk];
int l[maxk],r[maxk];
inline int fun(int x,int y) {return a[x]*y*y+b[x]*y+c[x];}
inline int id(int x,int y) {return st[x]+y-l[x];}
int main(){
	int n,m,mx=0;
	scanf("%d%d",&n,&m);
	s=++Cnt,t=++Cnt;
	for (int i=1;i<=n;i++) scanf("%d%d%d",a+i,b+i,c+i);
	for (int i=1;i<=n;i++) {
		scanf("%d%d",l+i,r+i);
		st[i]=Cnt+1;
		Cnt+=r[i]-l[i]+2;
		for (int j=l[i];j<=r[i];j++) mx=max(mx,fun(i,j));
	}
	for (int i=1;i<=n;i++) {
		addedge(s,id(i,l[i]),inf);
		for (int j=l[i];j<=r[i];j++) addedge(id(i,j),id(i,j+1),mx-fun(i,j));
		addedge(id(i,r[i]+1),t,inf);
	}
	while (m--) {
		int u,v,d;
		scanf("%d%d%d",&u,&v,&d);
		for (int i=l[u];i<=r[u];i++) 
			if (i-d>=l[v]&&i-d<=r[v]+1)	
				addedge(id(u,i),id(v,i-d),inf);
	}
	printf("%d\n",mx*n-maxflow());
}
