#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
#define rep(i,n) for (int i=0;i<n;++i)
typedef long long LL;
const int N=200005,inf=1<<25,BIG=inf>>2;
int n,m,e,S,T,x,y,diff,A[N],B[N],C[N],l[N],r[N],st[N],d[N],f[N],son[N],ed[N],next[N],data[N];
void add(int x,int y,int z)
{
	ed[++e]=y,data[e]=z,next[e]=son[x],son[x]=e;
	ed[++e]=x,data[e]=0,next[e]=son[y],son[y]=e;
}
int F(int i,int x){return A[i]*x*x+B[i]*x+C[i];}
bool build()
{
	int h=0,t=1; rep(i,T+1) d[i]=-1; d[f[1]=S]=0;
	while (h<t){
		int x=f[++h];
		for (int y,p=son[x];p;p=next[p]) if (data[p]){
			if (d[y=ed[p]]<0) d[y]=d[x]+1,f[++t]=y;
			if (y==T) return 1;
		}
	}
	return 0;
}
int dinic(int x,int low)
{
	if (x==T) return low; int w=0,res;
	for (int y,p=son[x];p;p=next[p]) if (data[p] && d[y=ed[p]]==d[x]+1)
		if (res=dinic(y,min(low-w,data[p]))) data[p]-=res,data[p^1]+=res,w+=res;
	if (!w) d[x]=-1; return w;
}
int main()
{
	scanf("%d%d",&n,&m),e=1,S=T=0;
	rep(i,n) scanf("%d%d%d",A+i,B+i,C+i);
	rep(i,n){
		scanf("%d%d",l+i,r+i),add(S,++T,inf),st[i]=T;
		rep(j,r[i]-l[i]+1) add(T,T+1,BIG-F(i,l[i]+j)),++T;
	}
	++T; rep(i,n) add(st[i]+r[i]-l[i]+1,T,inf);
	while (m--){
		scanf("%d%d%d",&x,&y,&diff),--x,--y;
		for (int i=l[x];i<=r[x]+1;++i) if (i-diff>=l[y] && i-diff<=r[y]+1)
			add(st[x]+i-l[x],st[y]+i-diff-l[y],inf);
	}
	int ans=n*BIG; while (build()) ans-=dinic(S,inf); printf("%d\n",ans);
	return 0;
}

