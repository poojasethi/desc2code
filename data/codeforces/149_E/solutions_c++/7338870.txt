#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

int m,ls,lt;
char s[100010],t[1010];
int a[100010],b[100010],nxt[1010];

void kmp_init(){
	for(int i=1,p=nxt[0]=-1;i<=lt;i++){
		for(;(~p) && t[p]!=t[i-1];p=nxt[p]);p++;
		nxt[i]=(t[p]==t[i] ? nxt[p] : p);
	}
}

void calc(int *T){
	for(int i=0,j=0;j<ls;j++){
		for(;(~i) && t[i]!=s[j];i=nxt[i]);
		(T[j]=++i)>=lt ? i=nxt[i] : 0;
	}
}
int check(){
	if(lt==1) return 0;
	kmp_init(),calc(a);reverse(s,s+ls),reverse(t,t+lt);
	kmp_init(),calc(b);reverse(s,s+ls),reverse(t,t+lt);
	for(int i=1;i<ls;i++) a[i]=max(a[i],a[i-1]),b[i]=max(b[i],b[i-1]);
	for(int i=1;i<ls;i++) if(a[i-1]+b[ls-i-1]>=lt) return 1;
	return 0;
}

int main()
{
	int ans=0;
	scanf("%s%d",s,&m);ls=strlen(s);
	for(int i=0;i<m;i++) scanf("%s",t),lt=strlen(t),ans+=check();
	printf("%d\n",ans);
	return 0;
}
