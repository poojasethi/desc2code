#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;
#define inf 0x7ffffff
#define MAXN 100100

char s[MAXN],t[MAXN];
int left[MAXN],right[MAXN],fail[MAXN];

inline int min(int a,int b){ return a<b?a:b; }
inline int max(int a,int b){ return a>b?a:b; }

void kmp_fail(int l,char t[])
{
	int i,p=-1;
	for(fail[0]=-1,i=1; i<=l; i++)
	{
		while(p>=0&&t[i-1]!=t[p])	p=fail[p];
		p++; fail[i]=p;
	}
}

int main()
{
	int n,tt_num,tt,ret,l,i,p,x;
	scanf("%s",&s);
	n=strlen(s);
	scanf("%d",&tt_num);
	for(ret=tt=0; tt<tt_num; tt++)
	{
		scanf("%s",t);
		l=strlen(t);
		if(l==1)	continue;
		left[0]=-1;
		right[0]=inf;
		for(i=1; i<=l; i++)	left[i]=inf,right[i]=-1;
		kmp_fail(l,t);
		for(x=i=0; i<n; i++)
		{
			while(x>=0&&s[i]!=t[x])	x=fail[x];
			++x;
			left[x]=min(i,left[x]);
			if(x==l)	x=fail[x];
		}

		reverse(t,t+l);
		kmp_fail(l,t);
		for(x=0,i=n-1; i>=0; i--)
		{
			while(x>=0&&s[i]!=t[x])	x=fail[x];
			x++;
			right[x]=max(right[x],i);
			if(x==l)	x=fail[x];
		}

		for(i=0; i<=l; i++)
			if(left[i]<right[l-i])
			{
				ret++;
				break;
			}
	}
	printf("%d\n",ret);
	return 0;
}
