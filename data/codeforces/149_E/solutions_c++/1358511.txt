#include <cstdio>
#include <iostream>
#include <fstream>
#include <algorithm>
#define MAXN 100000
using namespace std;
int F[MAXN+1];
int K1[MAXN+1];
int K2[MAXN+1];
void preKMP(string str)
{
	int N=str.size();
	int i=0,j=-1;
	F[i]=j;
	while(i<N)
	{
		while(j>=0 && str[i]!=str[j])
			j=F[j];
		i++; j++;
		F[i]=j;
	}
}
void KMP(string text,string str,int *s)
{
	int i=0,j=0;
	int N,M;
	M=text.size();
	N=str.size();
	while(i<M)
	{
		while(j>=0 && text[i]!=str[j])
			j=F[j];
		i++; j++;
		if(j==N) j--;
		*(s+i-1)=j;
	}
}
int main()
{
	int i,j,N,M;
	int res=0;
	int m1=0,m2=0;
	int s1=0,s2=0;
	string str,S1,S2;
	cin >> S2;
	S1=S2;
	reverse(S2.begin(),S2.end());
	N=S1.size();
	scanf(" %d",&M);
	
	for(i=1;i<=M;i++)
	{
		m1=0;m2=0;
		s1=0;s2=0;
		for(j=0;j<=N;j++)
			K1[j]=K2[j]=0;
		cin >> str;
		
		if(str.size()==1) continue;

		preKMP(str);
		KMP(S1,str,&K1[0]);
		
		//cout << S1 << endl << str << endl;
		reverse(str.begin(),str.end());
		preKMP(str);
		KMP(S2,str,&K2[0]);
		for(j=1;j<N;j++)
			K1[j]=max(K1[j],K1[j-1]);
		for(j=1;j<N;j++)
			K2[j]=max(K2[j],K2[j-1]);
		for(j=0;j<N-1;j++)
			if(K1[j]+K2[N-j-2] >= str.size())
			{
				res++;
				break;
			}
	}
	printf("%d\n",res);
	return 0;
}
