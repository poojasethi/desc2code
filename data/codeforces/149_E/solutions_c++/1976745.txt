#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <iostream>

const int N=100010;
const int inf=0x3f3f3f3f;

using namespace std;

int next[N],pre[N],suf[N];
char ps[N],ss[N],s1[N],s2[N];

void get_next(int next[],char s[])
{
	next[0]=-1;
	for(int i=1,j=-1;s[i];i++)
	{
		while(j!=-1 && s[j+1]!=s[i]) j=next[j];
		if(s[j+1]==s[i]) j++;
		next[i]=j;
	}
	return ;
}

void kmp(char s1[],char s2[],int l1,int l2,int p[])
{
	for(int i=0;i<l1;i++)
		p[i]=inf;
	get_next(next,s1);
	for(int i=0,j=-1;s2[i];i++)
	{
		while(j!=-1 && s1[j+1]!=s2[i]) j=next[j];
		if(s1[j+1]==s2[i]) j++;
		if(j+1 && p[j]==inf) p[j]=i;
		if(l1-1==j) return ;
	}
	return ;
}

int main()
{
	scanf("%s",ps);
	int len=strlen(ps);
	for(int i=0,j=len-1;i<len;i++,j--)
		ss[i]=ps[j];ss[len]=0;
	int n,cnt=0;
	scanf("%d",&n);
	for(int k=0;k<n;k++)
	{
		scanf("%s",s1);
		int l=strlen(s1);
		for(int i=0,j=l-1;i<l;i++,j--)
			s2[i]=s1[j];
		s2[l]=0;
		kmp(s1,ps,l,len,pre);
		kmp(s2,ss,l,len,suf);
		int f=0;
		for(int i=0;i<l-1;i++)
			if(pre[i]+1+1+suf[l-i-2]<=len) f=1;
		cnt+=f;
	}
	printf("%d\n",cnt);
	return 0;
}
