#include <iostream>
#include <cstring>
#include <cstdio>
using namespace std;

const int N = 100005;
const int M = 1005;
char T1[N], T2[N];
int A[M], B[M], next[M];
char t1[1005], t2[1005];
int n, m;

void init(char *s) {
	next[1] = 0;
	int j = 0;
	for (int i = 2; s[i]; i++) {
		while(j > 0 && s[j + 1] != s[i]) j = next[j];
		if (s[j + 1] == s[i]) j++;
		next[i] = j;
	}
}

void kmp(int* list, char* pat, char* T) {
	int j = 0;
	for (int i = 1; T[i]; i++) {
		while (j > 0 && pat[j + 1] != T[i]) j = next[j];
		if (pat[j + 1] == T[i]) j++;
		if (j > 0 && j < m && list[j] == -1)
			list[j] = i;
		if (j == m) j = next[j];
	}
}

int main() {
	int c;
	int ans = 0;
	scanf("%s", T1 + 1);
	n = strlen(T1 + 1);
	for (int i = n, j = 1; i >= 1; i--, j++)
		T2[i] = T1[j];
	T2[n + 1] = 0;
	scanf("%d", &c);
	while (c--) {
		memset(A, -1, sizeof(A));
		memset(B, -1, sizeof(B));
		scanf("%s", t1 + 1);
		m = strlen(t1 + 1);
		for (int i = m, j = 1; i >= 1; i--, j++)
			t2[i] = t1[j];
		t2[m + 1] = 0;
		init(t1);
		kmp(A, t1, T1);
		init(t2);
		kmp(B, t2, T2);
		for (int i = 1; i < m; i++)
			if (A[i] != -1 && B[m - i] != -1 && n - B[m - i] + 1 > A[i]) {
				ans++;
				break;
			}
	}	
	printf("%d\n", ans);
	return 0;
}
