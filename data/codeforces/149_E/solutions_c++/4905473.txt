#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;

const int MAXN = 100 * 1000 + 10, MAXM = 1010;

int d[MAXN], f[MAXM];

int main()
{
	string s;
	cin >> s;

	int q;
	cin >> q;

	int ans = 0;
	for (int i = 0; i < q; i ++)
	{
		string t;
		cin >> t;
		int n = s.size(), m = t.size();
		if (m == 1) continue;

		memset(f, 0, sizeof f);
		int k = 0;
		for (int i = 1; i < m; i ++)
		{
			while (t[i] != t[k] && k != 0) k = f[k];
			if (t[i] == t[k]) k ++;
			f[i + 1] = k;
		}
		k = 0;
		for (int i = 0; i < n; i ++)
		{
			while (k != 0 && s[i] != t[k]) k = f[k];
			if (s[i] == t[k]) k ++;

			if (i > 0) d[i] = max(d[i - 1], k);
			else d[i] = k;

			if (k == m) k = f[k];
		}

		reverse(t.begin(), t.end());
		memset(f, 0, sizeof f);		
		k = 0;
		for (int i = 1; i < m; i ++)
		{
			while (t[i] != t[k] && k != 0) k = f[k];
			if (t[i] == t[k]) k ++;
			f[i + 1] = k;
		}
		k = 0;
		for (int i = n - 1; i >= 0; i --)
		{
			while (k != 0 && s[i] != t[k]) k = f[k];
			if (s[i] == t[k]) k ++;

			if (i > 0 && k + d[i - 1] >= m) 
			{
				ans ++;
				break;
			}

			if (k == m) k = f[k];
		}
	}

	cout << ans << endl;
	return 0;
}
 	 	 	 					   	 			 	 			