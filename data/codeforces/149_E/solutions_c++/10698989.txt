#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

char S[100010],P[1010];
int a[100010],b[100010],fail[1010],LP,LS;

void initKMP(){
    for(int i=1,p=fail[0]=-1;i<=LP;i++){
        for(;p>=0 && P[p]!=P[i-1];p=fail[p]);p++;
        fail[i]=(P[i]==P[p]) ? fail[p] : p;
    }
}
void calc(int *a){
    for(int i=0,j=0;i<LS;i++){
        for(;j>=0 && S[i]!=P[j];j=fail[j]);j++;
        a[i]=j;if(j==LP) j=fail[j];
    }
}
int check(){
    if((LP=strlen(P))<2) return 0;
    reverse(P,P+LP),reverse(S,S+LS),initKMP(),calc(a);
    reverse(P,P+LP),reverse(S,S+LS),initKMP(),calc(b);
    for(int i=1;i<LS;i++) a[i]=max(a[i],a[i-1]),b[i]=max(b[i],b[i-1]);
    for(int i=1;i<LS;i++) if(a[i-1]+b[LS-i-1]>=LP) return 1;
    return 0;
}
int main()
{
    scanf("%s",S);LS=strlen(S);int t,ans=0;
    for(scanf("%d",&t);t--;) scanf("%s",P),ans+=check();
    printf("%d\n",ans);return 0;
}