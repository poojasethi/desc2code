#include <stdio.h>
#include <string.h>
#define inf 1000000000
char S[200000],Sv[200000];
char T[2000],Tv[2000];
int n;
int next[2000];
int pol[2000];
int por[2000];
int min(int a,int b) {
	return a<b?a:b;
}
int lenS,lenT;
void get_next(char TT[]) {
	int i = 1;
	next[1] = 0;
	int j = 0;
	while(i<lenT) {
		if(j == 0 || TT[i] == TT[j]) {++i;++j; next[i] = j;}
		else j = next[j];
	}
}
void KMP(char SS[],char TT[],int po[]) {
	int i,j;
	for(i=1;i<=lenT;i ++) {
		po[i] = inf;
	}
	i = j = 1;
	while(i<=lenS && j<=lenT) {
		if(j == 0 || SS[i] == TT[j]) {po[j] = min(po[j],i);++i;++j;}
		else j = next[j];
	}
}
int main() {
	int i,j;
	while(scanf("%s",S+1)!=EOF) {
		lenS = strlen(S+1);
		for(i=1;i<=lenS;i++) {
			Sv[i] = S[lenS - i + 1];
		}
		scanf("%d",&n);
		int ans = 0;
		for(i=0;i<n;i++) {
			scanf("%s",T+1);
			lenT = strlen(T+1);
			if(lenT <= 1)continue;
			for(j=1;j<=lenT;j++) {
				Tv[j] = T[lenT-j+1];
			}
			get_next(T);
			KMP(S,T,pol);
			get_next(Tv);
			KMP(Sv,Tv,por);
			for(j=1;j<lenT;j++) {
				if(pol[j]!=inf && por[lenT-j]!=inf) {
					if(pol[j] + por[lenT-j]<=lenS)break;
				}
			}
			if(j !=lenT)ans++;
		//	printf("%d\n",ans);
		}
		printf("%d\n",ans);
	}
	return 0;
}
   	  	 				  		    				  	