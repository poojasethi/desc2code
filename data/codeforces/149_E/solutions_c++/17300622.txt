#include<bits/stdc++.h>
using namespace std;
int dp[1000000],pref[1000000],suf[1000000],ans,qu;
string er,q,ar;
int calc(){
	int n=q.length();
	dp[0]=-1;
	for(int i=1,j ; i<=n ; i++){
		for(j=dp[i-1] ; j>=0 ; j=dp[j]){
			if(q[i-1]==q[j])
				break;
		}
		dp[i]=j+1;
	}
	return 0;
}
int kmb(){
	int n=er.length(),m=q.length();
	for(int i=0,cur=0 ; i<n ; i++){
		while(cur>=0 && (er[i]!=q[cur] || cur==m)){
			cur=dp[cur];
		}
		cur++;
		pref[i+1]=cur;
	}
	return 0;
}
int kmp(){
	int n=ar.length(),m=q.length();
	for(int i=0 , cur=0 ; i<n ; i++){
		while(cur>=0 && (ar[i]!=q[cur] || cur==m)){
			cur=dp[cur];
		}
		cur++;
		suf[i+1]=cur;
	}
	return 0;
}
int main(){
	cin >> er;
	int n=er.length();
	ar=er;
	reverse(ar.begin(),ar.end());
	scanf("%d",&qu);
	for(int i=1; i<=qu ; i++){
		cin >> q;
		int m=q.length();
		if(q.length()==1){
			continue;
		}
		calc();
		kmb();
		for(int i=0 ; i<n ; i++){
			pref[i+1]=max(pref[i+1],pref[i]);
		}
		reverse(q.begin(),q.end());
		calc();
		kmp();
		for(int i=0 ; i<n ; i++){
			suf[i+1]=max(suf[i+1],suf[i]);
		}
		for(int i=0 ; i<=n; i++){
			if(pref[i]+suf[n-i]>=q.length()){
				ans++;
				break;
			}
		}
	}
	printf("%d\n",ans);
	return 0;
}
