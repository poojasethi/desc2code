#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
int t;
#define N 100005
char a[N],b[N];
int p[N],pre[N],suf[N];

int main(){
	//freopen("in","r",stdin);
	scanf("%s",a);
	scanf("%d",&t);
	int ans = 0;
	while (t--){
		scanf("%s",b);
		p[0] = -1;
		int k = -1, n = strlen(b), m;
		for (int i=1;i<n;i++){
			while (k > -1 && b[k+1] != b[i]) k = p[k];
			if (b[k+1] == b[i]) k++;
			p[i] = k;
		}
		k = -1, m = strlen(a);
		memset(pre,10,sizeof(pre));
		for (int i=0;i<m;i++){
			while (k > -1 && b[k+1] != a[i]) k = p[k];
			if (b[k+1] == a[i]) k++;
			if (k > -1) 
				pre[k] = min(pre[k],i);
			if (k == n - 1) k = p[k];
		}
		reverse(b,b+n);
		k = -1;
		for (int i=1;i<n;i++){
			while (k > -1 && b[k+1] != b[i]) k = p[k];
			if (b[k+1] == b[i]) k++;
			p[i] = k;
		}
		k = -1;
		memset(suf,-1,sizeof(suf));
		for (int i=m-1;i>=0;i--){
			while (k > -1 && b[k+1] != a[i]) k = p[k];
			if (b[k+1] == a[i]) k++;
			if (k > -1)
				suf[k] = max(suf[k],i);
			if (k == n - 1) k = p[k];
		}
		int flag = 0;
		for (int i=0;i<n-1;i++)
			if (pre[i] < suf[n-i-2]){
				flag = 1; break;
			}
		if (flag){
			ans++;
		}
	}
	printf("%d\n",ans);
	return 0;
}