#include <bits/stdc++.h>

#define NN 201010
using namespace std;

char str[NN], pat[NN], s[NN];
int p[NN], mx[2][NN];

bool poss(){
	int n, m=strlen(pat);
	if(m==1) return false;
	
	memset(mx, 0, sizeof(mx));
	
	strcpy(s, pat);
	s[m]='*';
	strcpy(s+m+1, str);
	n=m+strlen(str)+1;
	s[n]=0;
	
	p[0]=-1;
	for(int i=0; i<n-1; i++){
		int j=p[i];
		while(j>=0 && s[i+1]!=s[j+1]) j=p[j];
		if(s[i+1]==s[j+1]) j++;
		p[i+1]=j;
		if(i+1>m){
			mx[0][i+1-j-m]=max(mx[0][i+1-j-m], j+1);
		}
	}
	
	reverse(s, s+m);
	reverse(s+m+1, s+n);
	
	p[0]=-1;
	for(int i=0; i<n-1; i++){
		int j=p[i];
		while(j>=0 && s[i+1]!=s[j+1]) j=p[j];
		if(s[i+1]==s[j+1]) j++;
		p[i+1]=j;
		if(i+1>m){
			mx[1][n-i+j-1]=max(mx[1][n-i+j-1], j+1);
		}
	}
	
	for(int i=1; i<n-m; i++) mx[0][i]=max(mx[0][i-1], mx[0][i]);
	for(int i=n-m-1; i>0; i--) mx[1][i]=max(mx[1][i+1], mx[1][i]);
	
	int tmp=0;
	for(int i=1; i<=n-2*m; i++){
		if(mx[0][i] && mx[1][i+m-1] && mx[0][i]+mx[1][i+m-1]>=m) return true;
	}
	
	return false;
}

int main (){
	
	scanf("%s", str);
	
	int M, ans=0;
	scanf("%d", &M);
	
	while(M--){
		scanf("%s", pat);
		if(poss()) ans++;
	}
	
	printf("%d\n", ans);
	
	return 0;
}
                    