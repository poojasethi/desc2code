#include <vector>
#include <string>
#include <iostream>
#include <algorithm>
#include <cassert>

#define pb push_back
#define all( gg )	gg.begin(),gg.end()
#define FP( ii,aa,bb ) for( int ii=aa;ii<=bb;ii++ )

using namespace std;

string s,p;
int m,f[300000];

vector<int> kmp( string s,string p,int t ){
	int k=0;
	vector<int>	a;
	FP( i,0,s.size()-1 ){
		while( k and s[i]!=p[k] )	k = f[k];
		if( s[i]==p[k] )	k++;
		a.pb(k);
	}
	FP( i,0,s.size()-1 )	if( i )	a[i] = max( a[i-1],a[i] );
	if( t )	reverse( all(a) );
	return a;
}

vector<int> pre_kmp( string p,string s,int t ){
	int k=0;
	FP( i,0,100000 )	f[i] = 0;
	FP( i,1,s.size()-1 ){
		while( k and s[k]!=s[i] )	k = f[k];
		if( s[k]==s[i] )	k++;
		f[i+1] = k;
	}
	return kmp( p,s,t );
}

int main(){

	cin >> s;
	cin >> m;
	
	vector<int>	a,b;
	
	int res=0;
	while( m-- ){
		cin >> p;
		if( p.size()>s.size() or p.size()==1 )	continue;
		a = pre_kmp( s,p,0 );
		reverse( all(p) );
		reverse( all(s) );
		b = pre_kmp( s,p,1 );
		reverse( all(s) );
		FP( i,0,s.size()-2 )
			if( a[i]+b[i+1]>=p.size() ){
				res++;
				break;
			}
	}
	cout << res << endl;
	
}
