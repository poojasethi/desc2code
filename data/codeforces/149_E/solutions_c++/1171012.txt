#include <iostream>
#include <string>
#include <algorithm>
using namespace std;
#define endl '\n'
#define sz(x) ((int((x).size())))

template<class T> inline void smx(T &a,const T &b){if(b>a) a=b;}
template<class T> inline T rev(const T & a){T _=a; reverse(_.begin(),_.end()); return _;}

const int MN=1000*100+1000;
string s,rs,m,rm;
int next[MN];
int no[MN],rno[MN];
int res,n;
void kmp(const string & s,const string & a,int * no)
{
	next[0]=-2; next[1]=-1;
	for (int i=2;i<sz(a);i++)
	{
		int j=next[i-1]+1;
		while (a[i-1]!=a[j] && j>=0)
			j=next[j]+1;
		next[i]=j;
	}
	int j=0,i=0;
	while (i<sz(s))
	{
		if (a[j]==s[i])
		{
			j++;
			no[i++]=j;
		}
		else
		{
			j=next[j]+1;
			if (j==-1)
			{
				j=0;
				no[i++]=j;
			}
		}
	}
}
bool av()
{
	if (sz(m)==2) return 0;
	kmp(s,m,no);
	kmp(rs,rm,rno);
	int mx=-1;
	for (int i=0;i<sz(s)-1;i++)
	{
		smx(mx,no[i]);
		if (mx+rno[sz(s)-2-i]>=sz(m)-1) return 1;
	}
	return 0;
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin>>s;
	rs=rev(s);
	cin>>n;
	for (int i=0;i<n;i++)
	{
		cin>>m;
		rm=rev(m);
		m+='@';
		rm+='@';
		if (av())
			res++;
	}
	cout<<res<<endl;
	return 0;
}
