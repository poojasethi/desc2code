#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <string>

using namespace std;

const int N = 200010;

string s, t;
int m, ans, n, l, pre[N], a[N], b[N];

void kmp(const string &str, int o[]){
    pre[0] = -1;
    for(int i = 1, j = -1; i < str.length(); ++i){
        while(~j && str[i] != str[j + 1]) j = pre[j];
        if(str[i] == str[j + 1]) j++;
        pre[i] = j;
        if(i > l) o[i - l] = pre[i] + 1;
    }
}
bool check(string &s, string &t){
    l = t.length();
    kmp(t + '#' + s, a);
    reverse(s.begin(), s.end());
    reverse(t.begin(), t.end());
    kmp(t + '#' + s, b);
    reverse(s.begin(), s.end());
    for(int i = 1; i <= n; ++i)
        b[i] = max(b[i], b[i - 1]);
    for(int i = 1; i <= n; ++i)
        if(a[i] + b[n - i] >= l) return true;
    return false;
}
int main(){
    cin >> s >> m;
    n = s.length();
    ans = 0;
    for(int i = 0; i < m; ++i){
        cin >> t;
        if(t.length() >= 2 && check(s, t)) ans++;
    }
    cout << ans << endl;
    return 0;
}