#include<cstdio>
#include<cstring>
using namespace std;
#define INF 0x3f3f3f3f
int next[1001],length,len,l[1001],r[1001],m,ans;
char s1[100001],s2[100001],a1[1001],a2[1001];
inline int min(int x,int y){ if (x<y) return x; return y; }
void Get_next(char *s,const int len){
	 next[0]=-1;
	 int i=0,j=-1;
	 while (i<len){
	 	if (j==-1 || s[i]==s[j]){
	 		 i++,j++;
	 		 if (s[i]==s[j])next[i]=next[j];
	 		   else next[i]=j;
	 	}else j=next[j];
    }
}

void KMP(char *a,int la,char *s,int ls,int *dp){
	int i=0,j=0;	
	while (i<la && j<ls){
		if (i==-1 || a[i]==s[j]){
			++i,++j;
			dp[i]=min(dp[i],j);
		}else i=next[i];
	    if (i==la) i=next[i];
	}
}




int main(){
	scanf("%s",s1);
	length=strlen(s1);
	for (int i=0;i<length;i++)
	  s2[i]=s1[length-i-1];
	scanf("%d",&m);
	while (m--){
		getchar();
		scanf("%s",a1);
		len=strlen(a1);
		if (len==1) continue;
		for (int i=0;i<len;i++)
		  a2[i]=a1[len-i-1];
		l[0]=r[0]=0;
		for (int i=1;i<=len;i++) l[i]=r[i]=INF;
	    Get_next(a1,len);
		KMP(a1,len,s1,length,l);
		Get_next(a2,len);
		KMP(a2,len,s2,length,r);
		for (int i=1;i<=len;i++)
		   if (l[i]+r[len-i]<=length){
		      ans++;
			  break;
		}
	}
	printf("%d\n",ans);
}

