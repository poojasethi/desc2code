#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<string>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<queue>
#include<stack>
using namespace std;

int next[100005],qnext[100005],n,l,m,ans,c[100005],d[100005];
char s[100005],t[1005],p[100005];
int lowbit(int x){return x&(-x);}

int main()
{
	scanf("%s",s+1);
	l=strlen(s+1);
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
		memset(c,0,sizeof(c));
		memset(d,0,sizeof(d));
		scanf("%s",t+1);
		m=strlen(t+1);
		next[1]=0;
		if(m==1) continue;
		for(int j=2;j<=m;j++)
		{
			int p=next[j-1];
			while(t[j]!=t[p+1]&&p) p=next[p];
			if(t[j]==t[p+1]) p++;
			next[j]=p;
		}
		qnext[m]=m+1;
		for(int j=m-1;j>=1;j--)
		{
			int p=qnext[j+1];	
			while(t[j]!=t[p-1]&&p<=m) p=qnext[p];
			if(t[j]==t[p-1]) p--;
			qnext[j]=p;
		}
		int p=0;
		c[0]=d[l+1]=0;
		for(int j=1;j<=l;j++){
			while(s[j]!=t[p+1]&&p) p=next[p];
			if(s[j]==t[p+1]) p++;
			c[j]=max(c[j-1],p);
		}
		p=m+1;
		for(int j=l;j>=1;j--){
			while(s[j]!=t[p-1]&&p<=m) p=qnext[p];
			if(s[j]==t[p-1]) p--;
			d[j]=max(d[j+1],m-p+1);
		}
		for(int j=0;j<=l;j++)
			if(c[j]+d[j+1]>=m) {ans++;break;}
	}
	printf("%d\n",ans);
}
 		 	 		 	 	     	    				 		 	