#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int N = 100010;
char s[N],str[N];
int next[N];
int dp[N];

void get_next(int n)
{
	next[0] = -1;
	int i = 0, j = -1;
	while(i < n) {
		if(j == -1 || str[i] == str[j]) {
			i ++,j ++;
			next[i] = j;
		}
		else j = next[j];
	}
}

bool kmp()
{
	int n = strlen(s);
	int m = strlen(str);
	get_next(m);
	memset(dp,-1,sizeof(dp));
	int i = 0,j = 0;
	while(i < n && j < m) {
		if(j == -1 || s[i] == str[j]) i ++,j ++;
		else j = next[j];
		if(j == m) return true;
		if(j >= 1 && dp[j] == -1) dp[j] = i;
	}

	reverse(s,s + n);
	reverse(str,str + m);
	get_next(m);
	i = j = 0;
	while(i < n && j < m) {
		if(j == -1 || s[i] == str[j]) i ++,j ++;
		else j = next[j];
		if(j >= 1 && dp[m - j] != -1 && dp[m - j] <= n - i) {
			reverse(s,s + n);
			return true;
		}
	}
	reverse(s,s + n);
	return false;
}

int main()
{
	scanf("%s",s);
	int m;
	scanf("%d",&m);
	int ans = 0;
	while(m --) {
		scanf("%s",str);
		if(kmp() && strlen(str) > 1) {
			ans ++;
		//	reverse(str,str + strlen(str));
		//	cout << str << endl;
		}
	}
	printf("%d\n",ans);
	return 0;
}

