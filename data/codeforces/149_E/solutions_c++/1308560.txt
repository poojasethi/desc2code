#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

char s[100005];
char P[2005];
int sn, pn;
int last[2005];

void pre_kmp() {
	last[0]=-1;
	for(int i=1;P[i];i++) {
		int j=last[i-1];
		while(j>=0 && P[j+1]!=P[i]) j=last[j];
		if(j==-1 && P[j+1]!=P[i]) last[i]=-1;
		else last[i]=j+1;
	}
}

int ra[200005], rb[200005];
void match(int *r) {
	int j=0;
	for(int i=0;s[i];i++) {
		r[i]=0;
		if(s[i]==P[j]) {
			r[i] = ++j;
			if(!P[j]) j=last[j-1]+1;
		} else if(j>0) {
			j=last[j-1]+1;
			--i;
		}
	}
}

int go() {
	pn = strlen(P);
	if(pn<2) return false;
	pre_kmp();
	match(ra);
	reverse(P, P+pn);
	reverse(s, s+sn);
	pre_kmp();
	match(rb);
	reverse(s, s+sn);
	for(int i=1;i<sn;i++) if(ra[i] < ra[i-1]) ra[i] = ra[i-1];
	for(int i=1;i<sn;i++) if(rb[i] < rb[i-1]) rb[i] = rb[i-1];
	for(int i=1;i<sn;i++) if(ra[i-1] && rb[sn-1-i] && ra[i-1] + rb[sn-1-i] >= pn) return true;
	return false;
}

int main(void) {
	int n;
	scanf("%s", s);
	sn=strlen(s);
	scanf("%d", &n);
	int cnt=0;
	for(int i=0;i<n;i++) {
		scanf("%s", P);
		if(go()) ++cnt;
	}
	printf("%d\n", cnt);
	return 0;
}
