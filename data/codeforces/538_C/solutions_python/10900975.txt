def proc(d1, h1, d2, h2):
    d = d2 - d1 - 1

    x = (d + h1 - h2) / 2
    return h1 + (d - x)

n, m = map(int, raw_input().split())

d = []
h = []

for _ in xrange(0, m):
    _d, _h = map(int, raw_input().split())
    d.append(_d)
    h.append(_h)

max = 0
prev_d = None
prev_h = None
for _ in xrange(0, m):
    if prev_d is None:
        max = h[_]
        if d[_] > 1:
            prev_d = 1
            prev_h = h[_] + d[_] - 1
        else:
            prev_d = d[_]
            prev_h = h[_]
            continue

    res = proc(prev_d, prev_h, d[_], h[_])

    if res < prev_h or res < h[_]:
        print "IMPOSSIBLE"
        max = None
        break

    if res > max:
        max = res

    prev_d = d[_]
    prev_h = h[_]

if not max is None and prev_d < n:
    res = proc(prev_d, prev_h, n, prev_h + n - prev_d)

    if res < prev_h or res < prev_h + n - prev_d:
        print "IMPOSSIBLE"
        max = None

    if not max is None and res > max:
        max = res

if not max is None:
    print max