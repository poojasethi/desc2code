import sys

inp = sys.stdin.readlines()

n, m = map(int, inp[0].split())

def max_between(start, end, i, j):
    sunk = abs(start - end)
    intervening_days = j - i
    if sunk > intervening_days:
        return (False, 0)
    return (True, max(start, end) + ((intervening_days - sunk) / 2))

i, start = map(int, inp[1].split())

ok = True
the_max = start

for entry in inp[2:]:
    j, end = map(int, entry.split())
    ok, max_height = max_between(start, end, i, j)
    if not ok:
        print 'IMPOSSIBLE'
        break
    the_max = max(the_max, max_height)
    i, start = j, end

i, start = map(int, inp[1].split())
j, end = map(int, inp[-1].split())
the_max = max(the_max, start + i - 1)
the_max = max(the_max, end + n - j)

if ok:
    print the_max
