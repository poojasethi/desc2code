# tested by Hightail - https://github.com/dj3500/hightail
from __future__ import print_function
import sys


def main():
    """Main."""
    n, m = read_int_array()
    hs = [read_int_array() for _ in xrange(m)]
    if hs[0][0] != 1:
        h = hs[0][0] - 1
        hs.insert(0, [1, h + hs[0][1]])
    if hs[-1][0] != n:
        h = n - hs[-1][0]
        hs.append([n, h + hs[-1][1]])
    mx = hs[0][1]
    for i in xrange(1, len(hs)):
        p_day, p_h = hs[i - 1]
        c_day, c_h = hs[i]
        if abs(c_h - p_h) > c_day - p_day:
            bye('IMPOSSIBLE')
        mx = max(mx, p_h, c_h,)
        """
        1 1
        2 2
        3 1
        4 0

        4 2
        4 2
        6 0

        1 0
        2 1
        3 2
        4 3
        5 2
        6 1

        1 1
        2 2
        3 3
        4 2
        5 1
        6 0

        """
        if c_h > p_h:
            mx = max(mx, p_h + (c_day - p_day + (c_h - p_h)) // 2)
        elif c_h == p_h:
            mx = max(mx, p_h + (c_day - p_day) // 2)
        else:
            mx = max(mx, p_h + (c_day - p_day - (p_h - c_h)) // 2)
    write(mx)


def bye(message=None):
    if message is not None:
        write(message)
    sys.exit()


def read(func=None):
    a = sys.stdin.readline().rstrip('\n')
    return a if func is None else func(a)


def read_array(func=None, sep=None, maxsplit=-1):
    array = read().split(sep, maxsplit)
    return array if func is None else [func(a) for a in array]


def read_int():
    return read(int)


def read_int_array(sep=None, maxsplit=-1):
    return read_array(int, sep, maxsplit)


def write(*args, **kwargs):
    sep = kwargs.get('sep', ' ')
    end = kwargs.get('end', '\n')
    sys.stdout.write(sep.join(str(a) for a in args) + end)


def write_array(array, **kwargs):
    sep = kwargs.get('sep', ' ')
    end = kwargs.get('end', '\n')
    sys.stdout.write(sep.join(str(a) for a in array) + end)


main()
