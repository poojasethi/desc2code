#include <bits/stdc++.h>
using namespace std;

int N, x, y, cnt, data[500005], ans;
bool visited[500005];
vector <int> TREE[500005];

void dfs(int x, int dx, int deep)
{
    if (TREE[x].size() == 1) data[++cnt] = deep;
    for (vector <int> :: iterator it = TREE[x].begin(); it != TREE[x].end(); it++)
        if (*it != dx) dfs(*it, x, deep + 1);
}

main()
{
    scanf("%d", &N);
    for (int i = 1; i < N; i++)
    {
        scanf("%d %d", &x, &y);
        TREE[x].push_back(y);
        TREE[y].push_back(x);
    }
    for (vector <int> :: iterator it = TREE[1].begin(); it != TREE[1].end(); it++)
    {
        cnt = 0;
        dfs(*it, 1, 1);
        sort(data + 1, data + cnt + 1);
        for (int i = 1; i <= cnt; i++)
            ans = max(ans, data[i] + cnt - i);
    }
    printf("%d", ans);
}
