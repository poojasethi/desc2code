#include <bits/stdc++.h>

using namespace std;

const int maxn = 500010;

vector<int> adj[maxn];
bool vis[maxn];

int depth = 0;
int ans=0;

vector<int> leaves;

void dfs(int u){
	depth++;
	vis[u]=1;
	int sz = adj[u].size();
	bool flag=1;
	for(int i=0;i<sz;i++){
		int v=adj[u][i];
		if(vis[v])continue;
		dfs(v);
		flag=0;
	}
	if(flag){
		leaves.push_back(depth);
	}
	depth--;
}

int main(){
	int n;
	cin>>n;
	for(int i=1;i<n;i++){
		int u,v;
		scanf("%d%d",&u,&v);
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
	
	int sz = adj[1].size();
	vis[1]=1;
	for(int i=0;i<sz;i++){
		int u = adj[1][i];
		leaves.clear();
		dfs(u);
		sort(leaves.begin(),leaves.end());
		int leanum = leaves.size();
		int tmp=0;
		for(int j=0;j<leanum;j++){
			tmp=max(tmp+1,leaves[j]);
		}
		ans=max(ans,tmp);
	}
	
	cout<<ans<<endl;
	
	return 0;
}
