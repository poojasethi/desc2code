#include<bits/stdc++.h>
using namespace std;
const int N=500011;
int n;
int v[N*2],pre[N*2],bia[N]={},num=0;
int ls[N],rs[N],lazy[N];
bool vis[N]={};
void addedge(int l,int r)
{
	++num;
	v[num]=r;pre[num]=bia[l];bia[l]=num;
}
vector<int> re;
void dfs(int l,int dep)
{
	vis[l]=true;
	int r;int bo=0;
	for (int i=bia[l];i!=0;i=pre[i])
	{
		r=v[i];
		if (vis[r]==true) continue;
		dfs(r,dep+1);bo++;
	}
	if (bo==0)
	{
		re.push_back(dep);
	}
	
}
int main()
{
	cin>>n;
	int l,r;
	for (int i=1;i<n;i++)
	{
		scanf("%d%d",&l,&r);
		addedge(l,r);addedge(r,l);
	}
	num=0;
	vis[1]=true;
	int ma=0;
	for (int i=bia[1];i!=0;i=pre[i])
	{
		re.clear();
		dfs(v[i],1);
		sort(re.begin(),re.end());
		vector<int>::iterator a;
		int res=0;
		for (a=re.begin();a<re.end();a++) res=max(res+1,*a);
		ma=max(ma,res);
	}
	/*for (int i=ls[1];i<=rs[1];i++)
	{
		cout<<re[i]<<" ";
	}
	cout<<endl;*/
	cout<<ma;
}
