#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;

#define ran 555555

int n;
vector<int> e[ran], p[ran];

void dfs(int cur, int dep, int par, int anc) {
	if(e[cur].size()==1 && dep) {
		int rt = (anc==0) ? cur : anc;
		p[rt].push_back(dep-1);
		return;
	}
	for(int i=0;i<e[cur].size();i++) {
		int nxt = e[cur][i];
		if(nxt==par) continue;
		dfs(nxt, dep+1, cur, (dep==1) ? cur : anc);
	}
}

int calc(int id) {
	if (!p[id].size()) return 0;
	sort(p[id].begin(), p[id].end());
	int x = -1;
	for(int i=0;i<p[id].size();i++) {
		int v = p[id][i];
		x=(x<v) ? v : x+1;
	}
	return x;
}

int main() {
	scanf("%d", &n);
	for(int i=1;i<n;i++) {
		int x, y;
		scanf("%d%d", &x, &y);
		e[x].push_back(y);
		e[y].push_back(x);
	}
	dfs(1, 0, 0, 0);
	
	int ans=0;
	for(int i=1;i<=n;i++)
		ans=max(ans,calc(i));
	printf("%d\n", ans+1);
	
	return 0;
}