#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <vector>
#include <queue>
using namespace std;
const int N=5E5+5;
int n,x,y,ans,last,dep[N];
bool o;
vector <int> G[N];
queue <int> q;

void bfs(int s)
{
	q.push(s); dep[s]=1;
	while (!q.empty())
	{
		x=q.front(); q.pop();
		o=0;
		for (int i=0;i<G[x].size();i++) if (!dep[y=G[x][i]])
		{
			dep[y]=dep[x]+1;
			q.push(y); o=1;
		}
		if (!o) last=max(last+1,dep[x]);
	}
}

int main()
{
	cin>>n;
	for (int i=1;i<n;i++)
	{
		scanf("%d%d",&x,&y);
		G[x].push_back(y); G[y].push_back(x);
	}
	dep[1]=1;
	for (int i=0;i<G[1].size();i++) 
	{
		last=0; bfs(G[1][i]);
		ans=max(ans,last);
	}
	cout<<ans;
}