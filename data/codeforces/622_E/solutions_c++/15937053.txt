#include <iostream>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <map>
#include <queue>
#include <set>

using namespace std;

int a[600500];
int d[600500];
vector<int> e[600500];
vector<int> r;
void dfs(int u,int pred)
{
    d[u] = d[pred] + 1;
    if(e[u].size()==1)r.push_back(d[u]);
    for(int i=0;i<e[u].size();i++)
        if(e[u][i]!=pred) dfs(e[u][i],u);
}

int main()
{
    int n;
    scanf("%d",&n);
    for(int i=0;i<n-1;i++)
    {
        int u,v;
        scanf("%d%d",&u,&v);u--;v--;
        e[u].push_back(v);
        e[v].push_back(u);
    }
    d[0] = 0;
    int res = 0;
    for(int i=0;i<e[0].size();i++)
    {
        dfs(e[0][i],0);
        sort(r.begin(),r.end());
        int next = 0;
        for(int j=0;j<r.size();j++)
        {
            if(r[j]>next) next=r[j];
            next++;
        }
        res =max(res,next-1);
        r.resize(0);
    }
    cout <<res<<endl;
    return 0;
}
