#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <queue>
#include <map>
#include <cmath>
using namespace std;
const int M = 1000010;
struct node
{
	int to,next;
}edge[M];
int p[M],num,a[M],n,lena,ans;
void add(int x,int y)
{
	num++;
	edge[num].to=y;
	edge[num].next=p[x];
	p[x]=num;
}
void dfs(int x,int deep,int fa)
{
	bool flag=1;
	for(int i=p[x];i!=0;i=edge[i].next)
	{
		int v=edge[i].to;
		if(v!=fa)
		{
			flag=0;
			dfs(v,deep+1,x);
		}
	}
	if(flag)
		a[++lena]=deep;
}
int main()
{
	scanf("%d",&n);
	for(int i=1;i<n;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		add(x,y);
		add(y,x);
	}
	for(int i=p[1];i!=0;i=edge[i].next)
	{
		int v=edge[i].to;
		lena=0;
		dfs(v,1,1);
		sort(a+1,a+1+lena);
		int hh=a[1];
		for(int i=2;i<=lena;i++)
			hh=max(hh+1,a[i]);
		ans=max(ans,hh);
	}
	printf("%d",ans);
	return 0;
}