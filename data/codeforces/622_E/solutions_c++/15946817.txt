#include <bits/stdc++.h>
using namespace std;
vector<int> g[500010]; 
vector<int> pot; 
bool visited[500010];
vector<int> valid;
void dfs(int root, int depth) {
	visited[root] = true;
	bool ok = true;
	for (int i = 0; i < int(g[root].size()); i++) {
		if(visited[g[root][i]]) continue;
		dfs(g[root][i], depth + 1);
		ok = false;
	}
	if(ok) valid.push_back(depth);
}
int main(){
	int n;
	cin>>n;
	int x, y;
	for (int i = 0; i < n - 1; i++) {
		scanf("%d %d", &x, &y);
		if(x == 1) pot.push_back(y);
		else if(y == 1) pot.push_back(x);
		else {
			g[x].push_back(y);
			g[y].push_back(x);
		}
	}
	int maxi = 0;
	for (int i = 0; i < int(pot.size()); i++) {
		valid.clear();
		dfs(pot[i], 0);
		sort(valid.rbegin(), valid.rend());
		for (int i = 0; i < int(valid.size()); i++) maxi = max(maxi, valid[i] + i + 1);
	}
	cout<<maxi<<endl;
}