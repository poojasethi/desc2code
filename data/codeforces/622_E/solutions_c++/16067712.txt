#include<bits/stdc++.h>
using namespace std;

int n;
bool color[600000];
vector <int> adj[600000];
vector <int> lst;

void dfs(int sr, int sw)
{
	color[sr]=true;
	if(adj[sr].size()==1)	lst.push_back(sw);		
	else	
		for(int i=0; i<adj[sr].size(); i++)
		{
			if(color[adj[sr][i]]==false)	dfs(adj[sr][i], sw+1);
		}
}

int res(int sr)
{
	if((color[sr]==false)&(adj[sr].size()!=1))	
		dfs(sr, 0);		
	sort(lst.begin(), lst.end());
	
	int ans=0;
	for(int i=0; i<lst.size(); i++)
	{
		if(ans<lst[i])	ans=lst[i];
		else ans++;
	}
	
	lst.clear();
	return ans;
}

int main()
{
	scanf("%d", &n);
	for(int i=0; i<n-1; i++)
	{
		int a,b;
		scanf("%d %d", &a, &b);
		adj[a-1].push_back(b-1);
		adj[b-1].push_back(a-1);
	}
	
	int maxi=0;
	color[0]=true;
	for(int i=0; i<adj[0].size(); i++)
	{
		int tmp = res(adj[0][i]);
		if(maxi<tmp)	maxi = tmp;
	}
	printf("%d\n", maxi+1);	
	return 0;
}
