/*
 * E.cpp
 *
 *  Created on: Feb 17, 2016
 *      Author: Zhao Huangjie
 */
#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>

using namespace std;

vector<int> z;
vector<vector<int> > adj;
int n;

void dfs(int u,int pa,int level){
	if(adj[u].size()==1){
		z.push_back(level);
	}else{
		for(int j=0;j<(int)adj[u].size();j++){
			int v=adj[u][j];
			if(v!=pa){
				dfs(v,u,level+1);
			}
		}
	}
}

int main(){
	cin>>n;
	adj.assign(n+10,vector<int>(0,0));
	for(int i=0;i<n-1;i++){
		int x,y;
		scanf("%d%d",&x,&y);
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	int ans=0;
	for(int j=0;j<(int)adj[1].size();j++){
		int u=adj[1][j];
		z.clear();
		dfs(u,1,0);
		sort(z.begin(),z.end());
		for(int i=1;i<(int)z.size();i++){
			z[i]=max(z[i],z[i-1]+1);
		}
		ans=max(ans,z.back());
	}
	cout<<ans+1<<endl;

	return 0;
}



