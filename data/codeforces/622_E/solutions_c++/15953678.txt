#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
#define FO(i,n) for (int i=0;i<n;i++)
const int num = 5e5 + 5;
int a[num], p;
void dfs( int i, int par, int depth , vector<int> g[] ){
	if ( g[i].size() == 1 && g[i][0] == par ){
		a[p++] = depth;
		return;
	}
	FO(j, g[i].size()){
		if ( g[i][j] != par ) dfs(g[i][j], i, depth + 1, g );
	}
}

int main ()
{
//	freopen("test.txt","r",stdin);
	int n, m, x, y, maxx = 0 ; cin >> n  ;
	m = n - 1;
	vector<int> g[n+1];
	while ( m-- ){
		scanf ("%d %d", &x, &y);
		g[x].push_back(y);
		g[y].push_back(x);
	}
	FO( i, g[1].size() ){
		y = p ;
		dfs(g[1][i], 1, 1, g);
		sort( a + y , a + p );
		x = a[y];
		for ( int k = y + 1 ; k < p ; k++ ){
			if ( a[k] <= x) x++;
			else x = a[k];
		}
		maxx = max( maxx, x );
	}
	cout << maxx;
    return 0;
}

