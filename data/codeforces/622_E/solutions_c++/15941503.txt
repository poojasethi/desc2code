#include<cstdio>
#include<vector>
#include<algorithm>

int n, a, b, c[500005], l, ans;
std::vector<int> v[500005];

void dfs(int x, int y, int z) {
	if (v[x].size() == 1) {
		c[l++] = z;
	}
	for (int i = 0; i < v[x].size(); i++) {
		if (v[x][i] == y) continue;
		dfs(v[x][i], x, z + 1);
	}
}

int f(int x[], int y) {
	for (int i = 1; i < y; i++) if (x[i] <= x[i - 1]) x[i] = x[i - 1] + 1;
	return x[y - 1];
}

int main() {
	scanf("%d", &n);
	for (int i = 1; i < n; i++) {
		scanf("%d %d", &a, &b);
		v[a].push_back(b);
		v[b].push_back(a);
	}
	for (int i = 0; i < v[1].size(); i++) {
		l = 0;
		dfs(v[1][i], 1, 1);
		std::sort(c, c + l);
		ans = std::max(ans, f(c, l));
	}
	printf("%d\n", ans);
	scanf("\n");
	return 0;
}
