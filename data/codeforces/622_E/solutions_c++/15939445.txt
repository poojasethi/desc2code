#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <string>
#include <algorithm>
#include <cmath>
using namespace std;
const int Maxn=2000005;
int n,ans;
int head[Maxn],edge[Maxn*2],next[Maxn*2];
int flag[Maxn];
int Q[Maxn],lq;
void add(int num,int f,int t)
{	next[num]=head[f];
	head[f]=num;
	edge[num]=t;
}
void dfs(int x,int D)
{	int t=0;
	flag[x]=1;
	for (int i=head[x];i;i=next[i])
		if (!flag[edge[i]])
			dfs(edge[i],D+1),t=1;
	if (t==0) Q[++lq]=D;
}
int main()
{   //freopen(".in","r",stdin);
	//freopen(".out","w",stdout);
	int i,j,k,f,t,temp;
	scanf ("%d",&n);
	for (i=1;i<n;i++)
		scanf ("%d %d",&f,&t),add(2*i-1,f,t),add(2*i,t,f);
	flag[1]=1;
	for (i=head[1];i;i=next[i])
	{
		lq=0;
		dfs(edge[i],1);
		sort(Q+1,Q+lq+1);
		
		for (j=1;j<=lq;j++)
			Q[j]=max(Q[j-1]+1,Q[j]);
		ans=max(ans,Q[lq]);
	}
	cout<<ans<<endl;
	return 0;
}
