
#include<bits/stdc++.h>

typedef int LL;
using namespace std;
const int M = 1000000007;
vector <LL> g[500001],h[500001];
LL mark[500001],color[500001],he[500001];

void dfs(LL s,LL n)
{LL i;
//cout<<s<<' '<<g[s].size()<<endl;

color[s]=1;

if(g[s].size()==1)
	{h[mark[s]].push_back(he[s]);}
else
	{for(i=0;i<g[s].size();i++)
		if(color[g[s][i]]==0)
			{he[g[s][i]]=he[s]+1;
			mark[g[s][i]]=mark[s];
			dfs(g[s][i],n);
			}
	}
color[s]=2;
}


int main()
{
LL n,i,a,b,j;
cin>>n;

for(i=0;i<(n-1);i++)
	{scanf("%d %d",&a,&b);
	g[a-1].push_back(b-1);
	g[b-1].push_back(a-1);
	}
	
for(i=0;i<500001;i++)
	{color[i]=0;he[i]=0;}

LL ma=0;

color[0]=2;


for(i=0;i<g[0].size();i++)
	{mark[g[0][i]]=i;
	he[g[0][i]]=1;
	dfs(g[0][i],n);
	
	//cout<<i<<endl;	

	sort(h[i].begin(),h[i].end());
	
	
	for(j=0;j<(h[i].size()-1);j++)
		{if(h[i][j]>=h[i][j+1])
			h[i][j+1]=h[i][j]+1;

		}
	
	ma=max(ma,h[i][j]);

	}


cout<<ma<<endl;



}

