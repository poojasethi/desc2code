#include<iostream>
#include<vector>
#include<cstdio>
#include<algorithm>
using namespace std;
#define maxn 500050
const int INF=100000000;
vector<int>ve[maxn];
vector<int>deep;

void dfs(int root,int father,int cnt){
    if(ve[root].size()==1) deep.push_back(cnt);
    for(int j=0;j<ve[root].size();j++){
        if(ve[root][j]!=father)
        dfs(ve[root][j],root,cnt+1);
    }
}
int main(){
    int n,a,b;
    scanf("%d",&n);
    //cout<<n<<endl;
    for(int i=0;i<n-1;i++){
        scanf("%d%d",&a,&b);
        ve[a].push_back(b);
        ve[b].push_back(a);
    }
    int ans=0;
    for(int i=0;i<ve[1].size();i++){
        deep.clear();
        dfs(ve[1][i],1,1);
        sort(deep.begin(),deep.end());
        for(int j=1;j<deep.size();j++){
           deep[j]=max(deep[j],deep[j-1]+1);
        }
       // cout<<deep.back()<<"---"<<endl;
        ans=max(ans,deep.back());
    }
    cout<<ans<<endl;
    return 0;
}
