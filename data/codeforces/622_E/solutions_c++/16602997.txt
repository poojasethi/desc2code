#include <bits/stdc++.h>
using namespace std;
const int MAXN = 5e5 + 5;
bool ok[MAXN];
vector <int> G[MAXN] , ans;

void dfs(int u , int par , int dep) {
	if(G[u].size() == 1) {
		ans.push_back(dep + 1);
		return ;
	}
	for(int i = 0 ; i < G[u].size() ; i++) {
		if(G[u][i] != par) {
			dfs(G[u][i] , u , dep + 1);
		}
	}
}

int main()
{
	int n , v , u;
	scanf("%d" , &n);
	for(int i = 1 ; i < n ; i++) {
		scanf("%d %d" , &u , &v);
		G[u].push_back(v);
		G[v].push_back(u);
	}
	int len = G[1].size() , res = 0 , temp;
	for(int i = 0 ; i < len ; i++) {
		dfs(G[1][i] , 1 , 0);
		sort(ans.begin() , ans.end());
		temp = ans[0];
		for(int j = 1 ; j < ans.size() ; j++) {
			temp = max(temp + 1 , ans[j]);
		}
		res = max(res , temp);
		ans.clear();
	}
	printf("%d\n" , res);
}