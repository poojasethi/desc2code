#include <iostream>
#include <set>
#include <vector>
#include <algorithm>

using namespace std;

typedef pair<long long,long long> LL;
vector<pair<LL,int> > island;
set<pair<long long,int> > bridge;
set<pair<long long,int> > ::iterator it;



int mark[200020];

int main()
{
    long long m,n,a,b,la,lb;
    cin >> n >> m;
    for(int i=0;i<(int)n;i++)
    {
    cin >> a >> b;
    if(i)island.push_back(make_pair(make_pair(b-la,a-lb),i));
    la=a; lb=b;
    }

    for(int i=0;i<(int)m;i++)
    {
    cin >> a;
    bridge.insert(make_pair(a,i));
    }

    sort(island.begin(),island.end());

    for(int i=0;i<n-1;i++)
    {
      it =bridge.lower_bound(make_pair(island[i].first.second,-1));
      if(it==bridge.end() || it->first>island[i].first.first ){
        cout<<"No\n";
        return 0;
      }
      else {
        mark[island[i].second]=it->second;
        bridge.erase(it);
      }
    }

     cout << "Yes\n" ;
     for(int i=1;i<n;i++)
        cout << mark[i]+1 << " ";

    return 0;
}
