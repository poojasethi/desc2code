#include <set>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#define M 200200
using namespace std;
struct Interval{
	long long l,r,id;
	bool operator < (const Interval &i) const
	{
		return l < i.l ;
	}
}intervals[M];
int n,m,ans[M];
set< pair<long long,int> > s;
pair<long long,int> points[M]; 
int main()
{
	int i,j;
	long long _l,_r,l,r;
	cin>>n>>m>>_l>>_r;n--;
	for(i=1;i<=n;i++)
	{
		scanf("%I64d%I64d",&l,&r);
		intervals[i].l=l-_r;
		intervals[i].r=r-_l;
		intervals[i].id=i;
		_l=l;_r=r;
	}
	for(i=1;i<=m;i++)
	{
		scanf("%I64d",&points[i].first);
		points[i].second=i;
	}
	sort(intervals+1,intervals+n+1);
	sort(points+1,points+m+1);
	for(j=m,i=n;i;i--)
	{
		for(;j&&points[j].first>=intervals[i].l;j--)
			s.insert(points[j]);
		set< pair<long long,int> >::iterator it=s.upper_bound(make_pair(intervals[i].r+1,0));
		if(it==s.begin())
			return puts("No"),0;
		--it;ans[intervals[i].id]=it->second;s.erase(it);
	}
	puts("Yes");
	for(i=1;i<=n;i++)
		printf("%d%c",ans[i],i==n?'\n':' ');
	return 0;
}
