#include<cstdio>
#include<set>
#include<utility>
#include<algorithm>
using namespace std;
typedef long long ll;
typedef pair<ll,int> lli;
typedef pair<pair<ll,ll>,int> lllli;
ll l[200000],r[200000];
lllli co[200000];
int res[200000];
multiset<lli> s;
int be_end(char a[]){
	printf("%s\n",a);
	return 0;
}
int main(){
	int n,m;ll t;
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;i++)
		scanf("%I64d%I64d",l+i,r+i);
	for(int i=0;i<m;){
		scanf("%I64d",&t);
		s.insert(make_pair(t,++i));
	}
	for(int i=1;i<n;i++)
		co[i]=make_pair(make_pair(r[i]-l[i-1],l[i]-r[i-1]),i);
	sort(co+1,co+n);
	for(int i=1;i<n;i++){
		multiset<lli>::iterator it=s.lower_bound(make_pair(co[i].first.second,0));
		if(it==s.end()||it->first>co[i].first.first) return be_end("No");
		res[co[i].second]=it->second;
		s.erase(*it);
	}
	printf("Yes\n");
	for(int i=1;i<n;i++)
		printf("%d%c",res[i],(i<n-1?' ':'\n'));
	return 0;
}
