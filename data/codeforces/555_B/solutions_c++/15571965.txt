#include <iostream>
#include <algorithm>
#include <set>
#include <cstdio>
using namespace std;
pair<pair<long long,long long>,int> a[200005];
int ans[200005];
long long l[200005];
long long r[200005];
int n,m;
long long bridge;
multiset<pair<long long,int> > S;
int main(){
	cin>>n>>m;
	for (int i=1;i<=n;i++){
		cin>>l[i]>>r[i];
	}
	for (int i=1;i<=m;i++){
		cin>>bridge;
		S.insert(make_pair(bridge,i));
	}
	for (int i=1;i<n;i++){
		a[i].first.first=r[i+1]-l[i];
		a[i].first.second=l[i+1]-r[i];
		a[i].second=i;
	}
	sort(a+1,a+n);
	for (int i=1;i<n;i++){
		//cout<<a[i].first.second<<endl;
		multiset<pair<long long,int> >::iterator it=S.lower_bound(make_pair(a[i].first.second,0));
		//cout<<it->first<<" "<<a[i].first.first<<endl;
		if (it==S.end() || it->first>a[i].first.first){
			cout<<"No";
			return 0;
		}
		else{
			ans[a[i].second]=it->second;
			S.erase(it);
		}
	}
	cout<<"Yes"<<endl;
	for (int i=1;i<n;i++){
		cout<<ans[i]<<" ";
	}
	return 0;
}