#define N (1<<18)
#define LL long long
#define PLI pair<LL,int>
#include <bits/stdc++.h>

using namespace std;

struct Node
{
    LL l,r;
    int id;
    Node(){}
    Node(LL l,LL r,int id):l(l),r(r),id(id){}

    bool operator<(const Node n) const
    {
        return r<n.r;
    }
}p[N];

set<PLI> st;
int n,m,res[N];
LL l[N],r[N],x;

int main()
{
    cin>>n>>m;
    for(int i=0;i<n;i++)
        scanf("%I64d%I64d",l+i,r+i);
    for(int i=1;i<=m;i++)
        scanf("%I64d",&x),st.insert(PLI(x,i));
    for(int i=1;i<n;i++)
        p[i]=Node(l[i]-r[i-1],r[i]-l[i-1],i);
    sort(p+1,p+n);

    for(int i=1;i<n;i++)
    {
        set<PLI>::iterator it=st.lower_bound(PLI(p[i].l,0));
        if(it==st.end() || (*it).first>p[i].r)
        {
            puts("No");
            return 0;
        }
        else
        {
            res[p[i].id]=(*it).second;
            st.erase(it);
        }
    }

    puts("Yes");
    for(int i=1;i<n;i++)
        printf("%d ",res[i]);
    return 0;
}
