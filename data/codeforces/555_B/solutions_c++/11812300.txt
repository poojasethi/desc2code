#include <bits/stdc++.h>

using namespace std;
const int N = 200005;
typedef long long lag;

int n, m;
lag l[N], r[N], ans[N];
multimap<pair<lag, lag>, int> islands;
multimap<lag, int> bridge;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin >> n >> m;
	for (int i = 0; i < n; ++i)
		cin >> l[i] >> r[i];
	for (int i = 1; i < n; ++i) {
		lag mn = l[i] - r[i - 1];
		lag mx = r[i] - l[i - 1];
		islands.insert(make_pair(make_pair(mx, mn), i));
	}
	for (int i = 0; i < m; ++i) {
		lag a; cin >> a;
		bridge.insert(make_pair(a, i + 1));
	}
	for (multimap<pair<lag, lag>, int>::iterator it = islands.begin(); it != islands.end(); ++it) {
		lag mn = it->first.second, mx = it->first.first;
		multimap<lag, int>::iterator lb, ub;
		lb = bridge.lower_bound(mn);
		ub = bridge.upper_bound(mx);
		if (lb == ub) {
			cout << "No" << endl;
			return 0;
		}
		ans[it->second] = lb->second;
		bridge.erase(lb);
	}
	cout << "Yes" << endl;
	for (int i = 1; i < n; ++i) {
		if (i != 1) cout << ' ';
		cout << ans[i];
	}
	cout << endl;
}