#include <bits/stdc++.h>
#define L first
#define R second
#define MP make_pair
#define PB push_back
#define CkTr cout << "No\n"; return 0;

using namespace std;

typedef long long ll;

const int maxn = 2 * 1e5 + 10;
const ll INF = 1000000000ll * 1000000000 + 10;
ll l[maxn], r[maxn];
int ans[maxn];

main() {
	int n, m;
	ll a;
	cin >> n >> m;
	for(int i = 0;i < n;i ++)
		cin >> l[i] >> r[i];
	set<pair<ll, int> > st;
	st.clear();
	for(int i = 0;i < m;i ++)
		cin >> a,
		st.insert(MP(a, i));
	st.insert(MP(-INF, -maxn));
	st.insert(MP(INF, maxn));
	if(m < n - 1) { CkTr }
	vector<pair<ll, int> > q(0);
	for(int i = 0;i < n - 1;i ++)
		q.PB(MP(l[i + 1] - r[i], i));
	sort(q.begin(), q.end());
	while(!q.empty()) {
		ll size = q.back().L;
		int ind = q.back().R;
		q.pop_back();
		ll size_2 = r[ind + 1] - l[ind];
		pair<ll, int> an = *(--st.lower_bound(MP(size_2 + 1, -1)));
		st.erase(--st.lower_bound(MP(size_2 + 1, -1)));
		if(an.L < size) { CkTr }
		ans[ind] = an.R;
	}
	cout << "Yes\n";
	for(int i = 0;i < n - 1;i ++)
		cout << ans[i] + 1 << " ";
	cout << endl;
	return 0;
}
