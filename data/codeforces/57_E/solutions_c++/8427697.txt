#include<cstdio>
#include<algorithm>
#include<cstring>
#include<climits>
using namespace std;
#define base 1250
#define MAXN 510
int n;long long k;
int reflag[base*2+10][base*2+10];
#define mo 4000000
struct node{
	int x,y,z;
	inline node(int x_=0,int y_=0,int z_=0){
		x=x_,y=y_;z=z_;
	}
}Q[mo+10];
const int bx[9]={0,1,1,2,2,-1,-1,-2,-2};
const int by[9]={0,2,-2,1,-1,2,-2,1,-1};
#define Mod 1000000007
int D[MAXN];
inline int pow(int a,int b){
	int nowans=1;
	for(;b;b>>=1,a=1ll*a*a%Mod)if(b&1)nowans=1ll*nowans*a%Mod;
	return nowans;
}
int main(){
	scanf("%I64d%d",&k,&n);for(int i=1,x,y;i<=n;i++){
		scanf("%d%d",&x,&y);reflag[x+base][y+base]=-1;
	}int h=0,l=1;Q[l]=node(base,base,0);reflag[base][base]=1;
	long long tmpk=k;k=min(k,500ll);
	for(;h<l;){
		++h;if(h>=mo)h-=mo;int x=Q[h].x,y=Q[h].y,z=Q[h].z;
		if(z==k)continue;
		for(int i=1;i<=8;i++){
			int newx=x+bx[i],newy=y+by[i];
			if(newx&&newx<=base*2&&newy&&newy<=base*2){
				if(reflag[newx][newy]||(!(~reflag[newx][newy])))continue;
				++l;if(l>=mo)l-=mo;Q[l]=node(newx,newy,z+1);
				reflag[newx][newy]=1;
			}
		}
	}long long ans=0;for(int i=0;i<=base*2;i++)for(int j=0;j<=base*2;j++)ans+=reflag[i][j]==1;
	for(int i=1;i<=l;i++)++D[Q[i].z];
	if(tmpk==k)printf("%d\n",ans);
	else{
		long long d=D[k];long long delta=D[k]-D[k-1];
		tmpk-=k;tmpk%=Mod;
		ans=(ans+d*tmpk%Mod+delta*tmpk%Mod*(tmpk+1)%Mod*1ll*pow(2,Mod-2)%Mod)%Mod;
		printf("%I64d\n",ans);
	}
}