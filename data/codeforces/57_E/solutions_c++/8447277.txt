#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<math.h>
using namespace std;
long long ans,t,h,num,z,k;
int i,j,n,x[500],y[500],d[8000000][3],num1,num2,l,mo=1000000007;
const int q[9]={0,-2,-2,-1,1,2,2,1,-1};
const int w[9]={0,-1,1,2,2,1,-1,-2,-2};
bool f[4000][4000];
long long power(long long o,long long b)
{
    long long a=o,ans=1;
    while (b)
    {
        if (b%2) 
        ans=(ans*a)%mo;
        a=(a*a)%mo;
        b>>=1;
    }
    return ans;
}
int main()
{  
    scanf("%I64d%d",&k,&n);
    for (i=1;i<=n;i++)
    scanf("%d%d",&x[i],&y[i]);
    for (i=1;i<=n;i++) f[x[i]+2000][y[i]+2000]=true;
    l=k;
    d[1][1]=2000;
    d[1][2]=2000;
    d[1][0]=0;
    f[2000][2000]=true;
    ans=1;
    t=0;
    h=1;
    num=502;
    num1=1;
    num2=1;
    while (t<h)
    {
        t++;
        int x,y;
        x=d[t][1];
        y=d[t][2];
        if (d[t][0]+1<=min(k,num))
        for (i=1;i<=8;i++)
        if (!f[x+q[i]][y+w[i]])
        {
            h++;
            d[h][1]=x+q[i];
            d[h][2]=y+w[i];
            d[h][0]=d[t][0]+1;
            f[x+q[i]][y+w[i]]=true;
            if (d[h][0]<=500) num1++;
            if (d[h][0]<=501) num2++;
        }   
     }
     if (k<=500) 
     printf("%I64d\n",h);
     else
     {
        t=h-num2-(num2-num1);
        h=(h+(k%mo-502+mo)%mo*(h-num2))%mo;
        num=(k%mo-502)%mo;
        num=num*(k%mo-501)%mo;
        num=num*power(2,mo-2)%mo;
        h=(h+(t*num)%mo)%mo;
        printf("%I64d\n",h);
     }
}