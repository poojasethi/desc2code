/*
    Seeking the truth , Making people , Orzing Tao Ye
*/
#include <cstdio>
#include <cstdlib>
#define lim 200
#define P 1000000007
using namespace std;

struct re{
    int x,y,z;
}q[4000001];

long long K,res;
int n,x,y,l,r;
int map[3001][3001],inq[3001][3001];
int ans[1001];

void insert(int x,int y,int step)
{
     x+=1500; y+=1500;
	
     if (map[x][y]!=-1&&!inq[x][y])
     {
         q[++r]=(re){x-1500,y-1500,step};
         ans[step]++;
         inq[x][y]=1;
     }
}

int main()
{
    scanf("%I64d%d",&K,&n);
    for (int i=1;i<=n;i++) 
    {
        scanf("%d%d",&x,&y); x+=1500; y+=1500;
        map[x][y]=-1;
    }
    if (K<=lim)
    {
	    l=r=0;
	    ans[0]=1; q[++r]=(re){0,0,0}; inq[1500][1500]=1;
	    while (l!=r)
	    {
	        l++;
	        x=q[l].x; y=q[l].y; int step=q[l].z;
	        if (step>=K) break;
	        insert(x-2,y-1,step+1);
	        insert(x-2,y+1,step+1);
	        insert(x+2,y-1,step+1);
	        insert(x+2,y+1,step+1);
	        insert(x-1,y-2,step+1);
	        insert(x-1,y+2,step+1);
	        insert(x+1,y-2,step+1);
	        insert(x+1,y+2,step+1);
	    }
	    printf("%d\n",r);
	} else {
		res=(K-lim)%P; K=lim;
		l=r=0;
	    ans[0]=1; q[++r]=(re){0,0,0}; inq[1500][1500]=1;
	    while (l!=r)
	    {
	        l++;
	        x=q[l].x; y=q[l].y; int step=q[l].z;
	        if (step>=K) break;
	        insert(x-2,y-1,step+1);
	        insert(x-2,y+1,step+1);
	        insert(x+2,y-1,step+1);
	        insert(x+2,y+1,step+1);
	        insert(x-1,y-2,step+1);
	        insert(x-1,y+2,step+1);
	        insert(x+1,y-2,step+1);
	        insert(x+1,y+2,step+1);
	    }
	    printf("%I64d\n",(r+(((1ll*res*(res-1)/2)%P)*(ans[K]-ans[K-1]))%P+(1ll*(ans[K]+ans[K]-ans[K-1])*res)%P)%P);
	}
}