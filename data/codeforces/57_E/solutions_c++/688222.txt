#include <iostream>
#include <vector>

using namespace std;

typedef long long int lint;

int movi[8]={1,1,-1,-1,2,2,-2,-2};
int movj[8]={2,-2,2,-2,1,-1,1,-1};
/*
void dibuja(vector<vector<int> > t)
{
  for (int i=0;i<int(t.size());i++) {
    for (int j=0;j<int(t[0].size());j++) {
      cout<<t[i][j];
    }
    cout<<endl;
  }
}

lint eleva(lint b,lint e)
{
  if (e==0) return 1;
  if (e%2==0) return eleva((b*b)%1000000007,e/2);
  return (b*eleva((b*b)%1000000007,e/2))%1000000007;
}
*/
int mida=500;
int pasos=100;
lint inv2=500000004;
lint modulo=1000000007;

int main()
{
  lint movimientos,prohibidos;
  cin>>movimientos>>prohibidos;
  vector<vector<int> > t(mida,vector<int> (mida,0));
  for (int k=0;k<prohibidos;k++) {
    int i,j;cin>>i>>j;t[i+mida/2][j+mida/2]=1;
  }
  vector<pair<int,int> > v(1,pair<int,int> (mida/2,mida/2));  
  t[mida/2][mida/2]=1;
  int totalcasillas=1;
  int sumacasillas,sumacasillasant;
  for (int pas=0;pas<movimientos and pas<pasos;pas++) {
    vector<pair<int,int> > nextv;
    sumacasillasant=sumacasillas;
    sumacasillas=0;
    for (int k=0;k<int(v.size());k++) {
      pair<int,int> p=v[k];
      int i=p.first;
      int j=p.second;
      for (int s=0;s<8;s++) {
	int nexti=i+movi[s];
	int nextj=j+movj[s];
	if (t[nexti][nextj]==0) {
	  t[nexti][nextj]=1;
	  sumacasillas++;
	  nextv.push_back(pair<int,int> (nexti,nextj));
	}
      }
    }
    v=nextv;
    totalcasillas+=sumacasillas;
  }
  if (pasos<movimientos) {
    lint n=(movimientos-pasos)%modulo;
    lint fijo=sumacasillas;
    lint anyadido=sumacasillas-sumacasillasant;
    lint fijosumamos=(fijo*n)%modulo;
    lint variablesumamos=(((n*(n+1))%modulo)*inv2)%modulo;
    variablesumamos=(variablesumamos*anyadido)%modulo;
    totalcasillas=(totalcasillas+fijosumamos+variablesumamos)%modulo;
  }
  cout<<totalcasillas<<endl;
}

/*
salida esperada:
100 12
9 8
41 32
109 68
205 96
325 120
473 148
649 176
853 204
1085 232
1345 260
1633 288
1949 316

 */
