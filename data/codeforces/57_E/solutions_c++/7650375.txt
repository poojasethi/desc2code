#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 2010
#define M 1000
#define int64 long long
#define mo 1000000007
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
const int a1[8]={-2,-2,-1,-1,1,1,2,2},a2[8]={-1,1,-2,2,-2,2,-1,1};
struct ww {
	int x,y;
} g[N*N];
int i,j,k,n,m,l,r,x,y;
int f[N][N];
int an[N],a[N];
int64 K;
int main() {
	//freopen("biao57.out","w",stdout);
	scanf("%I64d%d",&K,&n);
	memset(f,255,sizeof(f));
	For(i,1,n) {
		scanf("%d%d",&x,&y);
		f[x+M][y+M]=0;
	}
	l=r=1; f[M][M]=0; g[1]=(ww){M,M};
	for (;l<=r;l++) {
		ww A=g[l];
		int B=f[A.x][A.y];
		an[B]++;
		if (B==500) continue;
		For(i,0,7) {
			int x=A.x+a1[i],y=A.y+a2[i];
			if (f[x][y]<0) {
				f[x][y]=B+1;
				g[++r]=(ww){x,y};
			}
		}
	}
	//For(i,1,500) printf("%d\n",an[i]-an[i-1]);
	if (K<=500) {
		int ans=0;
		For(i,0,K) ans+=an[i];
		printf("%d\n",ans);
	} else {
		int A=an[500]-an[499];
		int ans=0;
		For(i,0,499) ans+=an[i];
		K-=499;
		int64 B=K%mo*an[500]%mo;
		int64 C=K,D=K-1;
		if (C&1) D/=2;
		else C/=2;
		ans=((C%mo)*(D%mo)%mo*A+B+ans)%mo;
		printf("%d\n",ans);
	}
	return 0;
}
