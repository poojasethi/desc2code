#include<iostream>
#include<cstdio>
#include<cstdlib>

using namespace std;

long long nn,ans,dd,delta,p;
int n,m,i,j,k,x,y,l,r;
int dx[16],dy[16];
int d[1006];
int qx[1000006],qy[1000006],t[1000006];
bool b[1006][1006];

long long Orz_Ly(long long a,long long b)
{
	long long ans=1;
	while(b>0)
	{
		if(b&1)ans=(ans*a)%p;
		a=a*a%p;
		b=b>>1;
	}
	return ans;
}

int main()
{
	p=1000000007;
	dx[1]=1; dy[1]=2;
	dx[2]=-1;dy[2]=2;
	dx[3]=1; dy[3]=-2;
  	dx[4]=-1;dy[4]=-2;
  	dx[5]=2; dy[5]=1;
  	dx[6]=-2;dy[6]=1;
  	dx[7]=2; dy[7]=-1;
  	dx[8]=-2;dy[8]=-1;
  	scanf("%I64d%d",&nn,&m);
  	if(nn==0)
  	{
		printf("1");
		return 0;
	}
	n=100;
	if(nn<n)n=(int)nn;
	while(m>0)
	{
		m--;
		scanf("%d%d",&x,&y);
		b[500+x][500+y]=true;
	}
	r=1;
	qx[1]=500;
	qy[1]=500;
	b[500][500]=true;
	while(l<r)
	{
		l++;
		if(t[l]==n)break;
		x=qx[l];
		y=qy[l];
		for(i=1;i<=8;i++)
		if(!b[x+dx[i]][y+dy[i]])
		{
			r++;
			qx[r]=x+dx[i];
			qy[r]=y+dy[i];
			t[r]=t[l]+1;
			b[x+dx[i]][y+dy[i]]=true;
		}
	}
	for(i=1;i<=r;i++)d[t[i]]++;
	ans=r;
	dd=d[n];
	delta=d[n]-d[n-1];
	nn=nn-n;
	nn=nn%p;
	ans=(ans+dd*nn%p+delta*nn%p*(nn+1)%p*Orz_Ly(2,p-2)%p)%p;
	printf("%I64d\n",ans);
	return 0;
}