#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <string>
#include <cmath>
#include <climits>
#include <vector>
#include <map>
#include <set>
#include <iterator>
#include <utility>
#include <numeric>
#include <memory>
#include <stack>
#include <deque>
#include <queue>
#include <list>
#include <functional>
#include <iomanip>
#include <sstream>
#include <cctype>
#include <bitset>

#define X first
#define Y second
#define MAX(x, y) x = x > (y) ? x : (y)
#define MIN(x, y) x = x > (y) ? (y) : x
#define LOW(x) ((x) & -(x))
#define SQR(x) ((x) * (x))
#define REP(i, n) for (int i = 0; i < (n); ++i)
#define FOR(i, a, b) for (int i = (a); i < (b); ++i)
#define rFOR(i, b, a) for (int i = (b); i > (a); --i)
#define CLEAR(x) memset(x, 0, sizeof(x))
#define FILL(x, p) memset(x, p, sizeof(x))
#define COPY(x, y) memcpy(x, y, sizeof(x))
#define ALL(x) (x).begin(), (x).end()

using namespace std;

typedef long long ll;
typedef unsigned int ui;
typedef pair<int, int> PII;
typedef vector<PII> VPII;
typedef vector<int> VI;
typedef vector<string> VS;

const int INF = 0x3fffffff;
const ll _INF = 0x7ffffffffffffffll;
const double EPS = 1e-9;
const double PI = acos(-1.0);

template<class T, class INT>
inline T pow(T x, INT y)
{
	T res(1);
	for (T tt(x); y; y /= 2)
	{
		if (y & 1) res *= tt;
		tt *= tt;
	}
	return res;
}

template<class T, class INT>
inline T pow(T x, INT y, T p)
{
	T res(1);
	for (T tt(x); y; y /= 2)
	{
		if (y & 1) res = res * tt % p;
		tt = tt * tt % p;
	}
	return res;
}

int toInt(string s)
{
	int x = 0;
	istringstream sin(s);
	sin >> x;
	return x;
}

template<class T>
inline string toString(T x)
{
	ostringstream sout;
	sout << x;
	return sout.str();
}

template<class INT>
inline INT gcd(INT x, INT y)
{
	return y ? gcd(y, x % y) : x;
}

template<class INT>
inline int calc_bits(INT x)
{
	return x ? (x & 1) + calc_bits(x >> 1) : 0;
}

const int MAXP = 2000;
const int MAXN = MAXP + MAXP + 10;
const int d[8][2] = {{-2, 1}, {-2, -1}, {2, 1}, {2, -1}, {1, -2}, {1, 2}, {-1, 2}, {-1, -2}};
const int MD = 1000000007;

unsigned long long k;
int n, u, v, f[MAXN][MAXN], cnt[MAXN], ans, tp;
PII que[MAXN * MAXN + 10];

inline unsigned long long bfs(int x, int y)
{
	que[1] = PII(x, y);
	++cnt[f[x][y] = 0];
	unsigned long long res = k + 1;
	for (int fore = 0, rear = 1; fore++ < rear; )
	{
		int i = que[fore].X, j = que[fore].Y;
		if (f[i][j] >= k) break;
		if (f[i][j] > 500)
		{
			res = 501, tp = cnt[f[i][j]];
			break;
		}
		REP(k, 8)
		{
			int p = i + d[k][0], q = j + d[k][1];
			if (p < 0 || q < 0 || p >= MAXN || q >= MAXN || f[p][q] != -1) continue;
			++cnt[f[p][q] = f[i][j] + 1];
			que[++rear] = PII(p, q);
		}
	}
	REP(i, 501) ans += cnt[i];
	return res - 1;
}

int main(int argc, char* argv[])
{
	cin >> k >> n;
	FILL(f, 255);
	REP(i, n) cin >> u >> v, f[u + MAXP][v + MAXP] = 0;
	k = (k - bfs(MAXP, MAXP)) % MD;
	cout << ((tp + tp + 28 * (k - 1)) % MD * k % MD * (1 + MD) / 2 % MD + ans) % MD << endl;
}
