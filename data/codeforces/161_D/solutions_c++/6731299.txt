#include <iostream>
#include <algorithm>
#include <vector>

#define PB push_back

using namespace std;

const int maxn = 1e5 + 5;
int n, k, Ans, Mark[maxn], Dp[maxn][505];
vector <int> v[maxn];

void Dfs (int x)
{
	Mark[x]=true;
	Dp[x][0]=1;
	for (int i=0;i<v[x].size();i++){
		int Child=v[x][i];
		if (!Mark[Child]){
			Dfs(Child);
			for (int i=0;i<=k;i++)
				Ans+=Dp[x][i]*Dp[Child][k-i-1];
			for (int i=1;i<=k;i++)
				Dp[x][i]+=Dp[Child][i-1];
		}
	}
}

int main ()
{
	cin>>n>>k;
	for (int i=1;i<n;i++){
		int fi, se;
		cin>>fi>>se;
		v[fi].PB(se);
		v[se].PB(fi);
	}
	Dfs(1);
	cout<<Ans;
	return 0;
}