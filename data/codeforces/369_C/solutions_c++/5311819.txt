#include<iostream>
#include<vector>
#include<map>
using namespace std;
struct P
{
	int first;
	bool second;
};
vector<P> p[2000000];
vector<int> ans;
int n;
int s,e,t;
bool dfs(int cur,int last,bool ok)
{
	bool temp = 1;
	for(int i = 0;i<p[cur].size();i++)
	{
		if(p[cur][i].first==last) continue;
		if(dfs(p[cur][i].first,cur,p[cur][i].second)) temp = 0;
	}
	if(temp && ok && cur!=1) ans.push_back(cur);
	return !temp || ok;
}
int main()
{
	cin>>n;
	for(int i = 0;i<n-1;i++)
	{
		cin>>s>>e>>t;
		P temp0;
		temp0.first = e,temp0.second = t-1;
		P temp1;
		temp1.first = s,temp1.second = t-1;
		p[s].push_back(temp0);
		p[e].push_back(temp1);
	}
	dfs(1,0,0);
	cout<<ans.size()<<endl;
	for(int i = 0;i<ans.size();i++)
		cout<<ans.at(i)<<" ";
	return 0;

}

