#include <iostream>
#include <vector>

using namespace std;

vector<int> ans;
vector<pair<int, int> > g[100005];

int f(int node, int parent, int road)
{
	int sum = 0;
	for (int i = 0; i < g[node].size(); i++)
		if (g[node][i].first != parent)
			sum += f(g[node][i].first, node, g[node][i].second);
	if (sum == 0 && road == 2)
	{
		ans.push_back(node);
		return 1;
	}
	return sum;
}

int main()
{
	int n;
	cin >> n;
	for (int i = 0; i < n - 1; i++)
	{
		int x, y, t;
		cin >> x >> y >> t;
		g[x].push_back(make_pair(y, t));
		g[y].push_back(make_pair(x, t));
	}
	cout << f(1, -1, -1) << endl;
	for (int i = 0; i < ans.size(); i++)
		cout << ans[i] << " ";
	cout << endl;
}
