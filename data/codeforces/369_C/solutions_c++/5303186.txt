#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <cmath>
using namespace std;

vector< int > g[100005];
int mark[100005];

void dfs(int x, int u, int p)
{
	for( int i=0; i<g[x].size(); i++ )
	{
		int v = g[x][i];
		if ( v == p || v == -p ) continue;
		if ( v < 0 )
		{
			v = -v;
			mark[v] = 1;
			mark[u] = 0;
			dfs(v, v, x);
		}
		else
			dfs(v, u, x);
	}
}

int main()
{
	int n;
	cin >> n;

	for( int i=0; i<n-1; i++ )
	{
		int x, y, t;
		cin >> x >> y >> t;
		g[x].push_back((3-2*t)*y);
		g[y].push_back((3-2*t)*x);
	}

	dfs(1, 1, 0);

	int k = 0;
	for( int i=2; i<=n; i++ )
		if ( mark[i] ) k++;
	cout << k << endl;
	for( int i=2; i<=n; i++ )
		if ( mark[i] ) cout << i << " ";
	cout << endl;
	return 0;
}

