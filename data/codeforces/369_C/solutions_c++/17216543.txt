#include <bits/stdc++.h>
using namespace std;
#define N 100005
vector <int> v[N];
int dp[N];
bool bad[N];
int n;
void dfs(int cur , int prev)
{
	if(bad[cur])
		dp[cur]++;
	int to;
	for(int i=0;i<v[cur].size();i++)
	{
		to = v[cur][i];
		if(to == prev)continue;
		dfs(to,cur);
		dp[cur]+=dp[to];
	}
	return ;
}
int main()
{
	int x,y,c;
	cin>>n;
	for(int i = 0; i < n-1 ;i++)
	{
		scanf("%d%d%d",&x,&y,&c);
		x--;y--;
		v[x].push_back(y);
		v[y].push_back(x);
		if(c == 2)bad[x]=bad[y]=1;
		
	}
	dfs(0,-1);
	vector <int> ans;
	for(int i=0;i<n;i++)
		if(dp[i]==1)ans.push_back(i+1);
	cout<<ans.size()<<"\n";
	for(int i=0;i<ans.size();i++)printf("%d\n",ans[i]);
	return 0;
}