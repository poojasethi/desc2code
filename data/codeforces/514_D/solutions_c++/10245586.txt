#include <cstdio>
#include <set>

#define MAX_DROIDS	100000
#define MAX_DETAILS	5

int main(void)
{
	int n, m, k;
	int best_count;
	int best_shots[MAX_DETAILS];
	std::multiset<int> current[MAX_DETAILS];
	int droids[MAX_DROIDS][MAX_DETAILS];
	int i, j, a, z;

	scanf("%d %d %d", &n, &m, &k);

	for(j = n; j --;)
		for(i = 0; i < m; i ++)
			scanf("%d", &droids[j][i]);

	best_count = 0;
	for(a = m; a --;)
		best_shots[a] = 0;

	for(i = j = 0; j < n; j ++)
	{
		z = 0;
		for(a = m; a --;)
		{
			current[a].insert(droids[j][a]);
			z += *(-- current[a].end());
		}

		if(z <= k && (j - i + 1) > best_count)
		{
			best_count = (j - i + 1);
			for(a = m; a --;)
				best_shots[a] = *(-- current[a].end());
		}
		else if(z > k)
		{
			do
			{
				z = 0;
				for(a = m; a --;)
				{
					current[a].erase(current[a].find(droids[i][a]));
					if(!current[a].empty())
						z += *(-- current[a].end());
				}
			} while((++ i) <= j && z > k);
		}
	}

	for(a = 0; a < m; a ++)
		printf("%d%c", best_shots[a], (a == m - 1) ? '\n' : ' ');

	return 0;
}
