#include <stdio.h>

int max(int a,int b) { return a>b?a:b; }


int T[6][300010] = {0};

int getMax(int m, int s, int e, int o)
{
	int ret=0;
	s=s+o-1, e=e+o-1;
	while (s<e)
	{
		if (s&1) { ret = max(ret, T[m][s++]); }
		if (s==e) { break; }
		if (!(e&1)) { ret = max(ret, T[m][e--]); }
		s/=2, e/=2;
	}
	return max(ret, T[m][e]);
}

int main()
{
	int n,m,k;
	scanf("%d%d%d",&n,&m,&k);
	int o;
	for (o=1; o<n; o*=2) ;

	for (int i=1; i<=n; i++) {
		for (int j=1; j<=m; j++) {
			scanf("%d",&T[j][i+o-1]);
		}
	}

	for (int i=1; i<=m; i++) {
		for (int j=o-1; j>0; j--) {
			T[i][j] = max(T[i][j*2], T[i][j*2+1]);
		}
	}

	int D[6]={0},R[6]={0}, s=1, max_v=0;
	for (int i=1; i<=n; i++) {
		while (s<=i) {
			int sum=0;
			for (int j=1; j<=m; j++) {
				sum += (D[j] = getMax(j,s,i,o));
			}
			if (sum <= k) { break; }
			s++;
		}
		if (max_v < i-s+1) {
			max_v = i-s+1;
			for (int j=1; j<=m; j++) { R[j] = D[j]; }
		}
	}

	for (int i=1; i<=m; i++) {
		printf("%d ",R[i]);
	}

}

