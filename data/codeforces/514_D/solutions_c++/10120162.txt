#include<bits/stdc++.h>
using namespace std;
#define LL __int64
int f[5][100005][20],ans[100005],k,n,m;
void rmq(int p,int n)
{
	for(int j=1;(1<<j)<=n;++j)
		for(int i=1;i+(1<<j)-1<=n;++i)
			f[p][i][j]=max(f[p][i][j-1],f[p][i+(1<<(j-1))][j-1]);
}
int query(int p,int l,int r)
{
	int k=(int)(log(1.0*(r-l+1))/log(2.0));
	return max(f[p][l][k],f[p][r-(1<<k)+1][k]);
}
bool judge(int len)
{
    int i,j,s;
    for(i=1;i+len-1<=n;++i)
    {
        s=0;
        for(j=0;j<m;++j)
            s+=query(j,i,i+len-1);
        if(s<=k)
        {
            ans[len]=i;
            return 1;
        }
    }
    return 0;
}
int main()
{
    int i,j;
    scanf("%d%d%d",&n,&m,&k);
    for(i=1;i<=n;++i)
        for(j=0;j<m;++j) scanf("%d",&f[j][i][0]);
    for(i=0;i<m;++i) rmq(i,n);
    int len=0,l=1,r=n;
    while(l<=r)
    {
        int mid=(l+r)>>1;
        if(judge(mid))
        {
            l=mid+1;
            len=mid;
        }
        else r=mid-1;
    }
    for(i=0;i<m-1;++i) printf("%d ",query(i,ans[len],ans[len]+len-1));
    printf("%d\n",query(i,ans[len],ans[len]+len-1));
    return 0;
}

			   	  		   	  		    	   		