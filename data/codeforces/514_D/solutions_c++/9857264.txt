#include <bits/stdc++.h>

using namespace std;

multiset<int> tp[7];
const int MAXN = 1e5 + 7;
int a[MAXN][7], an[7];
int n, m, k;

int main()
{
    cin >> n >> m >> k;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            cin >> a[i][j];
    int ans = 0;
    for (int l = 0, r = 0; r < n; r++)
    {
        for (int j = 0; j < m; j++)
            tp[j].insert(a[r][j]);

        for (; l <= r; l++)
        {
            int sum = 0;
            for (int j = 0; j < m; j++)
                sum += *tp[j].rbegin();
            if (sum <= k)
                break;
            for (int j = 0; j < m; j++)
                tp[j].erase(tp[j].find(a[l][j]));
        }

        if (r - l + 1 > ans)
        {
            ans = r - l + 1;
            for (int j = 0; j < m; j++)
                an[j] = *tp[j].rbegin();
        }
    }
    for (int i = 0; i < m; i++)
        cout << an[i] << " ";
    return 0;
}
