#include<iostream>
#include<set>

using namespace std;

int a[100000][6];
int ans[6];
int n,m,k,maxl;
multiset<int> ms[5];

bool Can()
{
	if(ms[0].empty()) return true;
	int sum=0;
	for(int i=1;i<=m;i++)
		sum+=*ms[i-1].rbegin();
	return sum<=k;
}

int main()
{
	ios_base::sync_with_stdio(0);
	
	cin>>n>>m>>k;
	for(int i=0;i<n;i++)
		for(int j=1;j<=m;j++)
			cin>>a[i][j];
			
	for(int i=1;i<=m;i++)
				ms[i-1].insert(a[0][i]);
	
	for(int l=0,r=0;r<n;)
	{
		if(Can())
		{
			if(r-l+1>maxl)
			{
				maxl=r-l+1;
				for(int i=1;i<=m;i++)
					ans[i]=*ms[i-1].rbegin();
			}
			
			r++;
			for(int i=1;i<=m;i++)
				ms[i-1].insert(a[r][i]);
		}
		else
		{	
			for(int i=1;i<=m;i++)
				ms[i-1].erase(ms[i-1].find(a[l][i]));
			
			l++;
			if(r<l) 
			{
				r++;
				for(int i=1;i<=m;i++)
				ms[i-1].insert(a[r][i]);
			}
		}
	}
	
	for(int i=1;i<=m;i++)
		cout<<ans[i]<<" ";
	
	return 0;
}