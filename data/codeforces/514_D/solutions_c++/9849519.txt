#include <bits/stdc++.h>
using namespace std;

const int N = 123456;
const int M = 5;

int a[N][M];
int answer[M], mxlen;

bool Check(multiset<int> *s, int m, int k) {
	for (int i = 0; i < m; ++i) {
		k -= *s[i].rbegin();
	}

	return k >= 0;
}

int Run() {
	int n, m, k;

	while (cin >> n >> m >> k) {
		for (int i = 0; i < n; ++i) {
			for (int j = 0; j < m; ++j) {
				cin >> a[i][j];
			}
		}
		multiset<int> cur[M];
		
		mxlen = 0;
		memset(answer, 0, sizeof answer);
		for (int l = 0, r = 0; r < n; ++r) {
			for (int i = 0; i < m; ++i) {
				cur[i].insert(a[r][i]);
			}
			while (l <= r && !Check(cur, m, k)) {
				for (int i = 0; i < m; ++i) {
					cur[i].erase(cur[i].find(a[l][i]));
				}
				++l;
			}
			if (mxlen < r - l + 1) {
				mxlen = r - l + 1;
				for (int i = 0; i < m; ++i) {
					answer[i] = *cur[i].rbegin();
				}
			}
		}

		for (int i = 0; i < m; ++i) {
			cout << answer[i] << ' ';
		}
		cout << endl;
	}

	return 0;
}

int main() {
	ios::sync_with_stdio(0);
	return Run();
}
