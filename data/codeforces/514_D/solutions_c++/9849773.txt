#include <iostream>
#include <set>
#include <cstdio>
#include <cstdlib>
using namespace std;

const int maxN = (int)1e5 + 100, maxM = 6;

int n, m, k;
int amount[maxN][maxM];
int ans[maxM];

void solve()
{
	multiset <int> myset[maxM];
	int bestL = -1;
	int l = 0;
	for (int r = 0; r < n; r++)
	{
		for (int j = 0; j < m; j++)
		{
			myset[j].insert(amount[r][j]);
		}
		int curr = 0;
		for (int j = 0; j < m; j++)
			curr += *(myset[j].rbegin());
		while (curr > k)
		{
			for (int j = 0; j < m; j++)
			{
				myset[j].erase(myset[j].find(amount[l][j]));
			}
			l++;
			curr = 0;
			if (!myset[0].empty())
				for (int j = 0; j < m; j++)
					curr += *(myset[j].rbegin());
		}
		if (r - l > bestL)
		{
			bestL = r - l;
			for (int j = 0; j < m; j++)
			{
				ans[j] = *(myset[j].rbegin());
			}
		}
	}
}

int main()
{
	scanf("%d%d%d", &n, &m, &k);
	
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			scanf("%d", &amount[i][j]);
		}
	}

	solve();

	for (int i = 0; i < m; i++)
		printf("%d ", ans[i]);

	return 0;
}
