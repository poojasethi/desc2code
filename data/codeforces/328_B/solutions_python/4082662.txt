#!/usr/bin
f = {'2':'5', '5':'2', '6':'9', '9':'6'}
class mime(str):
    def __init__(self, me):
        if me in f: self.next = f[me]
t = map( mime, raw_input() );ice = raw_input()
skip, Kate = {}, 1e5
num = { s: ice.count(s) for s in {}.fromkeys(ice) }
for a in {}.fromkeys(t):
    if a in skip: continue
    try:
        if a in num and a.next in num:
            Kate = min(Kate, (num[a] + num[a.next])/(t.count(a)+t.count(a.next)))
        elif a not in num and a.next in num:
            Kate = min(Kate, num[a.next]/(t.count(a)+t.count(a.next)))
        elif a in num and a.next not in num:
            Kate = min(Kate, num[a]/(t.count(a)+t.count(a.next)))
        else: print 0; quit()
        skip[a.next] = 0        
    except AttributeError:
        if a in num: Kate = min(Kate, num[a]/t.count(a))
        else: print 0; quit()
    if Kate == 0: break
print Kate