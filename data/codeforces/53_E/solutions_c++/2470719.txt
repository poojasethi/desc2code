//program 53-E

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

using namespace std;

int N;
bool G[10][10];
int Log[1024],Count[1024],F[1024][1024];

int DP(int A,int B)
{
  if(F[A][B]!=-1)return F[A][B];
  if(Count[A]==2)return (G[Log[A&-A]][Log[A^(A&-A)]]&&A==B);
  if(Count[B]<2)return 0;
  int P=Log[B&-B],_A=A^(1<<P),_B=B^(1<<P);
  for(int i=F[A][B]=0;i<N;i++)
    if((A&(1<<i))&&!(B&(1<<i))&&G[i][P])
      F[A][B]+=DP(_A,_B)+DP(_A,_B^(1<<i));
  return F[A][B];
}

int main()
{
  int M,K;scanf("%d%d%d",&N,&M,&K);
  memset(G,0,sizeof(G));
  for(int i=0;i<M;i++)
    {
      int X,Y;scanf("%d%d",&X,&Y);
      G[X-1][Y-1]=G[Y-1][X-1]=true;
    }
  for(int i=0;i<N;i++)Log[1<<i]=i;
  Count[0]=0;
  for(int i=1;i<(1<<N);i++)
    Count[i]=Count[i^(i&-i)]+1;
  int Ans=0;
  memset(F,-1,sizeof(F));
  for(int i=1;i<(1<<N);i++)
    if(Count[i]==K)Ans+=DP((1<<N)-1,i);
  printf("%d\n",Ans);
  return 0;
}
