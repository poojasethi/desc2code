#include<cstdio>

const int mask = 1 << 10;
int n, m, k, a, b, num[mask], dp[mask][mask];
bool map[10][10];

int main(){
	scanf("%d%d%d", &n, &m, &k);
	for (int i = 0; i < m; i++){
		scanf("%d%d", &a, &b); a--; b--;
		map[a][b] = map[b][a] = true;
		dp[(1 << a) ^ (1 << b)][(1 << a) ^ (1 << b)] = 1;
	}
	for (int i = 1; i < (1 << n); i++) num[i] = num[i >> 1] + (i & 1);
	for (int s = 0; s < (1 << n); s++)
		for (int leaf = s; leaf; leaf = (leaf - 1) & s)
			for (int x = 0; x < n; x++){
				if ((1 << x) & s) continue;
				for (int i = 0; i < n; i++)
					if (map[x][i] && ((1 << i) & s)){
						int tmp = leaf ^ (1 << x);
						if ((1 << i) & leaf) tmp = tmp ^ (1 << i);
						if ((tmp & ((1 << x) - 1)) == 0) dp[s ^ (1 << x)][tmp] += dp[s][leaf];
					}
			}
	int ans = 0;
	for (int i = 0; i < (1 << n); i++)
		if (num[i] == k) ans += dp[(1 << n) - 1][i];
	printf("%d\n", ans);
}

