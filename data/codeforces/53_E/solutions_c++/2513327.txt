#include<stdio.h>
#include<string.h>
int n,m,K;
int N;
bool g[11][11];
int _dp[1025][1025];
int cnt1[1025];
int log2[1025];
int dp(int S,int _S)
{
	if(_dp[S][_S]!=-1)return _dp[S][_S];
	if((_S&S)!=_S)return 0;
	if(cnt1[S]==2&&S==_S)return g[log2[S&-S]][log2[S-(S&-S)]];
	if(cnt1[_S]>=cnt1[S]||cnt1[_S]<2)return 0;
	_dp[S][_S]=0;
	int l=_S&-_S,li=log2[l];
	for(int i=0;i<n;i++)if((S&(1<<i))&&(~_S&(1<<i))&&g[i][li])
		_dp[S][_S]+=dp(S-l,_S-l)+dp(S-l,_S-l+(1<<i));
	return _dp[S][_S];
}
int ans;
int main()
{
	scanf("%d%d%d",&n,&m,&K);
	N=1<<n;
	for(int i=1;i<=m;i++)
	{
		int u,v;
		scanf("%d%d",&u,&v);
		u--,v--;
		g[u][v]=g[v][u]=1;
	}
	memset(_dp,-1,sizeof(_dp));
	for(int i=1;i<N;i++)cnt1[i]=cnt1[i-(i&-i)]+1;
	for(int i=0;i<n;i++)log2[1<<i]=i;
	for(int i=0;i<N;i++)if(cnt1[i]==K)ans+=dp(N-1,i);
	printf("%d\n",ans);
	return 0;
}
