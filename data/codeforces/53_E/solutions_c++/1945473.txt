#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

#define L(x) (1<<x)

const int N=100010;
const int inf=0x3f3f3f3f;

using namespace std;

int dp[1<<10][1<<10];
bool vis[11][11];

int work(int x)
{
	int ret=0;
	while(x)
	{
		if(x&1) ret++;
		x>>=1;
	}
	return ret;
}

int main()
{
	int n,m,k;
	scanf("%d%d%d",&n,&m,&k);
	for(int i=0;i<m;i++)
	{
		int a,b;
		scanf("%d%d",&a,&b);
		a--,b--;
		vis[a][b]=vis[b][a]=1;
		dp[L(a)|L(b)][L(a)|L(b)]=1;
	}
	for(int i=0;i<L(n);i++)
		for(int j=i;j>0;j=(j-1)&i)
		{
			if(dp[i][j]==0) continue;
			for(int k=0;k<n;k++)
			{
				if((L(k)&i)==0) continue;
				for(int kk=0;kk<n;kk++)
				{
					if(L(kk)&i) continue;
					if(!vis[k][kk]) continue;
					int sl=i|L(kk);
					int sr=j;
					if(j&(L(k))) sr=sr^L(k);
					sr|=L(kk);
					if(!((L(n)-L(kk+1))&sr)) dp[sl][sr]+=dp[i][j];
				}
			}
		}
	int ret=0;
	for(int i=0;i<L(n);i++)
		if(work(i)==k) ret+=dp[L(n)-1][i];
	printf("%d\n",ret);
	return 0;
}
