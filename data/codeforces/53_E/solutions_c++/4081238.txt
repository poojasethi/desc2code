#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
#include <cmath>
using namespace std;

#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define SZ(c) ((int)(c).size())
typedef long long LL;

int ans=0, n, m, k;
int e[10]={};
void go(int rem, int outside, int considering) {
	if(rem==0) { ans += outside==0; return; }
	if(considering==0) { return; }

	while(considering) {
		int v = __lg(considering);
		considering -= (1<<v);
		for(int s=e[v]&outside;s;s=(s-1)&e[v]&outside)
			go(rem-1, outside-s, (considering|s));
	}
}
int main(void) {
	scanf("%d%d%d", &n, &m, &k);
	for(int i=0;i<m;i++) {
		int x, y;
		scanf("%d%d", &x, &y);
		--x; --y;
		e[x] |= 1<<y;
		e[y] |= 1<<x;
	}
	for(int s=e[0];s>0;s=(s-1)&e[0]) {
		if(__builtin_popcount(s)==1) go(n-k, (1<<n)-2-s, s);
		else go(n-k-1, (1<<n)-2-s, s);
	}
	printf("%d\n", ans);
	return 0;
}
