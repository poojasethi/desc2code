def bits(i):
    tmp = i
    ans = 0
    while tmp != 0:
        if (tmp & 1) == 1:
            ans += 1
        tmp >>= 1
    return ans

def get(i, j):
    k = 0
    while ((1<<k) & j) == 0:
        k += 1

    tj = j - (1<<k);
    ti = i - (1<<k);
    for p in xrange(N):
        if g[k][p] == 0 or ((1<<p) & ti) == 0 or ((1<<p) & tj):
            continue;
        dp[i][j] += dp[ti][tj] + dp[ti][tj + (1<<p)];    

N, M, K = map(int, raw_input().split())

np = 1 << N
dp = [[0 for i in xrange(np)] for j in xrange(np)]
g = [[0 for i in xrange(N)] for j in xrange(N)]
for i in xrange(M):
    v, u = map(int, raw_input().split())
    v -= 1
    u -= 1
    g[u][v] = 1
    g[v][u] = 1
    s = (1 << v) + (1 << u)
    dp[s][s] = 1
    
for i in xrange(np):
    bs = bits(i)
    if bs <= 2:
        continue
    j = i
    while j != 0:
        get(i, j)
        j = (j - 1) & i
        
ans = 0
for i in xrange(np):
    if bits(i) == K:
        ans += dp[np - 1][i]

print ans
