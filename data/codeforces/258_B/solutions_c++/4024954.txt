#include<stdio.h>
#define M 11
#define MOD 1000000007
#define max(a,b)(a>b?a:b)
__int64 cnt[M],f[M+1][M+1];
__int64 df,sum,mx;
__int64 dfs(__int64 d){
	if(d==6){
		if(mx>sum)return df;
		else return 0;
	}
	__int64 tsum=sum,tdf=df,ans=0;
	for(__int64 i=0;i<mx;i++)if(cnt[i]){
		sum=tsum+i;
		if(sum>=mx)continue;
		df=tdf*cnt[i]%MOD;
		cnt[i]--;
		ans=(ans+dfs(d+1))%MOD;
		cnt[i]++;
	}
	return ans;
}
int main(){
//	freopen("1.in","r",stdin);
	__int64 i,j,k,l;
	f[0][0]=1;
	for(i=0;i<M;i++)for(j=0;j<M;j++)for(k=0;k<10;k++){
		l=j+((k-4)*(k-7)?0:1);
		f[i+1][l]=(f[i+1][l]+f[i][j])%MOD;
	}
	__int64 m;
	scanf("%I64d",&m);i=0;
	do{
		j=m,k=0;
		while(j){if(j%10==4||j%10==7)k++;j/=10;}
		for(j=0;j<M-k;j++)cnt[j+k]=(cnt[j+k]+f[i][j])%MOD;
		if(!(m%10))m/=10,i++;
	}while(m--);
	cnt[0]=(cnt[0]-1+MOD)%MOD;
	__int64 ans=0;
	for(i=1;i<M;i++)if(cnt[i])
		df=1,mx=i,sum=0,ans=((dfs(0)*cnt[i]%MOD)+ans)%MOD;
	printf("%I64d",ans);
}
