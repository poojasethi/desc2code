#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
const int MAX = 20;
const int MOD = 1000000007;
int dp[MAX][MAX],luck[MAX],digit[MAX];
LL ans;
int dfs(int pos,int tot,int limit) {
	if(!pos) return tot==0;
	if(!limit&&~dp[pos][tot]) return dp[pos][tot];
	int res=0;
	int end=limit ? digit[pos] : 9 ;
	for(int i=0;i<=end;i++) {
		res+=dfs(pos-1,tot-(i==4||i==7),limit&&i==end);
	}
	if(!limit) dp[pos][tot]=res;
	return res;
}
void dfs1(int pos,int tot,int Max,LL val,int cur) {
	if(pos==7) {
		if(tot<Max) {
			ans=(ans+val)%MOD; return ;
		}
		else return ;
	}
	if(tot>Max) return ;
	for(int i=0;i<cur;i++) {
		if(luck[i]!=0) {
			luck[i]--;
			dfs1(pos+1,tot+i,Max,(LL)val*(LL)(luck[i]+1)%MOD,cur);
			luck[i]++;
		}
	}
	return ;
}

void gao(int val) {
	int cur=0; ans=0;
	while(val) {
		digit[++cur]=val%10;
		val/=10;
	}
	for(int i=0;i<=cur;i++) {
		luck[i]=dfs(cur,i,true);
	}
	luck[0]--;
	for(int i=1;i<=cur;i++) {
		dfs1(1,0,i,luck[i],cur);
	}
	printf("%I64d\n",ans%MOD);
}

int main() {
	int n;
	memset(dp,-1,sizeof(dp));
	while(scanf("%d",&n)==1) {
		gao(n);
	}
	return 0;
}

 	   		  		   		   	 			 	