#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
using namespace std;
#define LL __int64
const int mod = (int)1e9+7;
int a[11], len;
int f[11];
void add(int len, int dig, LL tot) {
	if(!len) {
		f[dig] = (f[dig] + tot)%mod;
		return;
	}
	add(len-1, dig+1, tot*2%mod);
	add(len-1, dig, tot*8%mod);
}
LL ans;
void dfs(int dep, int sum, LL tot) {
	int i;
	if(dep == 6) {
		for(i = sum+1; i <= len; i++)
			ans = (ans + tot*f[i]) % mod;
		return;
	}
	for(i = 0; i < len; i++) if(f[i]) {
		f[i]--;
		dfs(dep+1, sum+i, tot*(f[i]+1)%mod);
		f[i]++;
	}
}
int n;
int main() {
	int i, j;
	cin >> n;
	len = 0;
	while(n) { a[len++] = n%10; n /= 10;}
	int cnt = 0;
	for(i = len-1; i >= 0; i--) {
		for(j = 0; j < a[i]; j++) {
			int c = (j == 4 || j == 7);
			add(i, cnt+c, 1);
		}
		if(a[i] == 4 || a[i] == 7) cnt++;
	}
	f[cnt]++; f[0]--;
//	for(i = 0; i <= 9; i++) printf("f[%d] = %d\n", i, f[i]);
	dfs(0, 0, 1);
	cout << ans << endl;
	return 0;
}

  	 	  	 			 						 	 			