#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;
#define LL long long
#define MOD 1000000007
LL num[15],dp[15][15][15],sum[15];
LL dfs(LL pos,LL pre,LL sum,LL limit)
{
  LL ans=0;
  if (pos==0) return pre==sum;
//  if (pre>sum) return 0;
  if (!limit&&dp[pos][pre][sum]!=-1) 
	return dp[pos][pre][sum];
  LL tmp=limit?num[pos]:9,i;
  for (i=0;i<=tmp;i++)
	ans+=dfs(pos-1,pre+(i==4||i==7),sum,limit&&i==tmp);
  if (!limit) dp[pos][pre][sum]=ans;
  return ans;
}
LL solve(LL now,LL res)
{
  LL ans=0,i;
  if (now==7) return 1;
  for (i=0;i<=res;i++)
	if (sum[i]>0)
	{
	  sum[i]--;
	  ans=(ans+(sum[i]+1)*solve(now+1,res-i))%MOD;
	  sum[i]++;
	}
  return ans;
}
int main()
{
  LL m,cnt=0,ans=0,i;
  scanf("%I64d",&m);
  memset(dp,-1,sizeof(dp));
  while (m){
	num[++cnt]=m%10;
	m/=10;
  }
  for (i=0;i<=cnt;i++) sum[i]=dfs(cnt,0,i,1); sum[0]--;
//  for (i=0;i<=cnt;i++) printf("%d\n",sum[i]);
  for (i=1;i<=cnt;i++)
	ans=(ans+sum[i]*solve(1,i-1))%MOD;
  printf("%I64d\n",ans);
  return 0;
}

	 			  	  		 	  				    	 		