#include<iostream>
#include<cstring>
using namespace std;
int mo = 1000000007;
int M[11];
int F[11][10][2];
int x[10],m;
long long res;
void dfs(int k,int r,int c){
	if(c==0)return;
	switch(k){
	case 0:for(int i=1;i<=9;++i)if(x[i]){
			   --x[i];
			   dfs(k+1,i,x[i]+1);
			   ++x[i];
			}
		   break;
	case 7:res+=c;break;
	default:for(int i=0;i<r;++i)if(x[i]){
				--x[i];
				dfs(k+1,r-i,c*(long long)(x[i]+1)%mo);
				++x[i];
			}

	}
}
int main(){
	cin >> m;
	for(int i=10;i--;m/=10)M[i]=m%10;
	F[0][0][1]=1;
	for(int i=0;i<10;++i){
		for(int j=0;j<=i;++j){
			for(int d=0;d<10;++d){
				F[i+1][j+(d==4||d==7)][0]+=F[i][j][0];
				if(d==M[i])F[i+1][j+(d==4||d==7)][1]+=F[i][j][1];
				if(d<M[i])F[i+1][j+(d==4||d==7)][0]+=F[i][j][1];
			}
		}
	}
	for(int i=0;i<10;++i)
		x[i]=F[10][i][0]+F[10][i][1]-(i==0);
	dfs(0,0,1);
	cout << res %mo << endl;
}
