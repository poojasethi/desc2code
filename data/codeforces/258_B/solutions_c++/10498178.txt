#include<cstdio>
#define Mod 1000000007
#define N 15
#define LL long long

int a,tot[N],len,num[N],f[N][N];
bool g[N][N];

int dfs(int pos,int up,int t)
{
	if (!pos) return !t;
	if (!up&&g[pos][t]) return f[pos][t];
	int stop=(up)? num[pos]:9;
	int ans=0;
	for (int i=0;i<=stop;i++) if ((i!=4&&i!=7)||t)
		ans+=dfs(pos-1,up&&(i==num[pos]),(i==4||i==7)? (t-1):t);
	if (!up)
	{
		g[pos][t]=1;
		f[pos][t]=ans;
	}
	return ans;
}

int find(int p,int t,int data)
{
	if (p==7) return data;
	int ans=0;
	for (int i=0;i<t;i++)
	{
		int New=(LL)data*tot[i]%Mod;
		tot[i]--;
		ans+=find(p+1,t-i,New);
		ans%=Mod;
		tot[i]++;
	}
	return ans;
}

int find(int a)
{
	len=0;
	for (int i=a;i;i/=10) num[++len]=i%10;
	for (int i=0;i<=len;i++) tot[i]=dfs(len,1,i);
	tot[0]--;
	int ans=0;
	for (int i=1;i<=len;i++) if (tot[i])
		ans=(ans+(LL)tot[i]*find(1,i,1)%Mod)%Mod;
	return ans;
}

int main()
{
	scanf("%d",&a);
	printf("%d\n",find(a));
	return 0;
}
