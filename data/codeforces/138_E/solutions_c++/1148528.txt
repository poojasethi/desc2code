#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<vector>
using namespace std;

string s;
char rc[501];
int k, L, R, p[26], l[501], r[501];
vector<int> ch[26], d;

void update(int x, int lx, int &cnt)
{
	if((x < L || x > R) && lx >= L && lx <= R) cnt--;
	else if((lx < L || lx > R) && x >= L && x <= R) cnt++;
}

int main()
{
	getline(cin, s);
	cin >> k >> L >> R;

	for(int i = 0; i < k; ++i)
		cin >> rc[i] >> l[i] >> r[i], rc[i] -= 'a'; 

	long long ans = 0;
	int cnt = 0;

	d.resize(s.size(), 0);
	for(int i = 0; i < 26; ++i)
		ch[i].push_back(-1), p[i] = 0;
	for(int i = 0; i < s.size(); ++i)
		s[i] -= 'a', ch[s[i]].push_back(i);
	for(int i = 0; i < s.size(); ++i)
	{
		p[s[i]]++;
		if(L == 0) cnt++;
		for(int j = 0; j < k; ++j)
		{
			if(l[j] > 0 && r[j] > 0)
			{
				if(s[i] == rc[j])
				{	
					if(p[s[i]] - l[j] >= 0) 
						for(int jj = ch[s[i]][p[s[i]]-l[j]] + 1; jj <= ch[s[i]][p[s[i]]-l[j]+1]; ++jj)
							update(d[jj]+1, d[jj], cnt), d[jj]++;
					if(p[s[i]] - r[j] > 0)
						for(int jj = ch[s[i]][p[s[i]]-r[j]-1] + 1; jj <= ch[s[i]][p[s[i]]-r[j]]; ++jj)
							update(d[jj]-1, d[jj], cnt), d[jj]--;
				}
			}
			else if(l[j] == 0 && r[j] > 0)
			{
				update(d[i]+1, d[i], cnt), d[i]++;
				if(s[i] == rc[j])
				{
					int len = r[j];
					if(p[s[i]] - len > 0)
						for(int jj = ch[s[i]][p[s[i]]-r[j]-1] + 1; jj <= ch[s[i]][p[s[i]]-r[j]]; ++jj)
							update(d[jj]-1, d[jj], cnt), d[jj]--;  		
				}
			}
			else if(l[j] == 0 && r[j] == 0)
			{
				if(s[i] != rc[j])
					update(d[i]+1, d[i], cnt), d[i]++;
				else
				{
					for(int jj = max(0, ch[s[i]][p[s[i]]-1]); jj < i; ++jj)
						update(d[jj]-1, d[jj], cnt), d[jj]--;					
				}
			}
		}
		ans += cnt;
	}

	cout << ans;

	return 0;
}
