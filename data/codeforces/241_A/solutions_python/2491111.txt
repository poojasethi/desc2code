# -*- coding: utf-8 -*-

import heapq

m, k = map(lambda s: int(s),raw_input().split())
ds = map(lambda s: int(s), raw_input().split())
ss = map(lambda s: int(s), raw_input().split())

cur = 0
tank = 0
vtank = [(-ss[0], 0)]
t = 0
while True:
    vt, p = heapq.heappop(vtank)
    tank += ss[cur]
    while tank < ds[cur]:
        tank -= vt
        t += k
    t += ds[cur]
    tank -= ds[cur]
    cur += 1
    if cur == m:
        break
    heapq.heappush(vtank, (vt, p))
    heapq.heappush(vtank, (-ss[cur], cur))
print t
