t = 1
def advance(bak, d, s):
    n = len(d)+1
    bound = n
    for i in range(n-1):
        bak+=s[i]
        if bak<d[i]:
            bound = i
            break
        bak -= d[i]
    if bound==n:
        return 0, 0
    ms = max(s[:bound+1])
    ind = s[:bound+1].index(ms)
    w = (d[bound]-bak+ms-1)/ms
    return w, w*ms

for _ in range(t):
    _, k = tuple(int(x) for x in raw_input().split())
    d = [int(x) for x in raw_input().split()]
    s = [int(x) for x in raw_input().split()]
    tm = sum(d)
    bak = 0
    while True:
        a, b = advance(bak, d, s)
        tm+=a*k
        bak+=b
        if a==0:
            break
    print tm
