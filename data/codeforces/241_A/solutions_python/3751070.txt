import re

class Task:
    k = 0
    d, s = [], []

    answer = ''

    def getData(self):
        m, self.k = [int(x) for x in raw_input().strip().split(' ')]
        self.d = [int(x) for x in raw_input().strip().split(' ')]
        self.s = [int(x) for x in raw_input().strip().split(' ')]
    
    def solve(self):
        k, d, s = self.k, self.d, self.s
        time, supply = 0, 0
        for city in xrange(0, len(d)):
            supply += s[city]
            maxSupplyCity = 0
            for i in xrange(0, city + 1):
                maxSupplyCity = i if s[i] > s[maxSupplyCity] else maxSupplyCity
            while supply < d[city]:
                supply += s[maxSupplyCity]
                time += k
            time, supply = time + d[city], supply - d[city]
        self.answer = time
 
    def printAnswer(self):
        print self.answer

task = Task()
task.getData()
task.solve()
task.printAnswer()
