#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
using namespace std;
const long double pi=acos(-1);
struct atom {long double x,y;} A[2100005],B[2100005];
int len,ans[1000005],n,i,j,cnt,C[1000005],m,X;
atom operator +(atom x,atom y) {return {x.x+y.x,x.y+y.y};}
atom operator -(atom x,atom y) {return {x.x-y.x,x.y-y.y};}
atom operator *(atom x,atom y) {return {x.x*y.x-x.y*y.y,x.x*y.y+x.y*y.x};}
void fft(atom *x,int n,int fl=1)
{
    for (int i=(n>>1),j=1; j<n; j++)
    {
        if (i<j) swap(x[i],x[j]);
        int k;
        for (k=(n>>1); k&i; i^=k,k>>=1); i^=k;
    }
    int now=0;
    for (int m=2; m<=n; m+=m)
    {
        now++; atom w={cos(2*pi*fl/m),sin(2*pi*fl/m)};
        for (int i=0; i<n; i+=m)
        {
            atom cur={1,0};
            for (int j=i; j<i+(m>>1); j++)
            {
                atom u=x[j],v=x[j+(m>>1)]*cur;
                x[j]=u+v; x[j+(m>>1)]=u-v;
                cur=cur*w;
            }
        }
    }
}
int main()
{
    scanf("%d%d",&m,&n);
    for (i=1; i<=m; i++) {scanf("%d",&X); A[X].x=B[X].x=C[X]=1;}
    len=1; while (len<=n*2) len+=len;
    fft(A,len); fft(B,len);
    for (i=0; i<len; i++) A[i]=A[i]*B[i];
    fft(A,len,-1);
    for (i=0; i<=n; i++) C[i]-=bool(int(A[i].x/len+0.500000001));
    for (i=1; i<=n; i++) if (C[i]<0) {cout<<"NO"; return 0;}
    printf("YES\n");
    for (i=1; i<=n; i++) if (C[i]) ans[++cnt]=i;
    printf("%d\n",cnt);
    for (i=1; i<=cnt; i++) printf("%d ",ans[i]);
    return 0;
}
