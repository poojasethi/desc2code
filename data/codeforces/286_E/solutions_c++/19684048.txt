#include <bits/stdc++.h>

using namespace std;

#define NN 4000000
#define inf 0x3f3f3f3f
#define eps 1e-8
#define eprintf(...) fprintf(stderr, __VA_ARGS__)

typedef pair<int, int> pii;
typedef complex<double> cp;
typedef long long INT;

cp I(0, 1);

void fft(cp *A, int N, cp pw) {
    for (int m = N, h; h = m / 2, m >= 2; pw = pw * pw, m = h) {
    	cp w=1;
        for (int i = 0; i < h; ++i, w = w * pw)
        for (int j = i; j < N; j += m) {
            int k = j + h;
			cp x = A[j] - A[k];
            A[j] += A[k];
            A[k] = w * x;
        }
    }
    for (int i = 0, j = 1; j < N - 1; ++j) {
        for (int k = N / 2; k > (i^=k); k /= 2);
        if (j < i) swap(A[i], A[j]);
    }
}

cp a[NN], b[NN];
int ans[NN];

int main() {
	int N, M;
	scanf("%d%d", &N, &M);
	for (int i=0; i<N; i++) {
		int u;
		scanf("%d", &u);
		a[u]=1;
	}
	
	int K=1;
	while (K<(M+1)*2) K*=2;
	
	memcpy(b, a, sizeof(b));
	double al=2*M_PI/K;
	fft(b, K, cp(cos(al), sin(al)));
	for (int i=0; i<K; i++) b[i]=b[i]*b[i];
	fft(b, K, cp(cos(-al), sin(-al)));
	
	for (int i=0; i<=M; i++) b[i]/=K;
	
	for (int i=0; i<=M; i++) if (abs(a[i])<0.5 && abs(b[i])>0.5) {
		puts("NO");
		return 0;
	}
	
	int cnt=0;
	for (int i=0; i<=M; i++) if (abs(a[i])>0.5 && abs(b[i])<0.5) ans[cnt++]=i;
	
	puts("YES");
	printf("%d\n", cnt);
	for (int i=0; i<cnt; i++) printf("%d ", ans[i]); puts("");
	
	return 0;
}
           