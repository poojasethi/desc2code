#include <bits/stdc++.h>
#define maxn 4000005
#define cpx complex<double>
#define pi acos(-1)
using namespace std;

int N,M,q[maxn],rev[maxn];
cpx a[maxn],W[2][maxn];
bool b[maxn];

void init()
{
	scanf("%d%d",&N,&M);
	for (int i=1,x; i<=N; i++) scanf("%d",&x),a[x]=1,b[x]=1;
	for (N=1; N<M; N<<=1); N<<=1;
}

void work()
{
	for (int i=0; i<N; i++)
	{
		int x=i,y=0;
		for (int k=1; k<N; x>>=1,k<<=1) (y<<=1)|=x&1;
		rev[i]=y;
	}
	for (int i=0; i<N; i++) W[0][i]=W[1][i]=cpx(cos(2*pi*i/N),sin(2*pi*i/N)),W[1][i].imag()*=-1;
}

void FFT(cpx*a,bool f)
{
	cpx x,y;
	for (int i=0; i<N; i++) if (i<rev[i]) swap(a[i],a[rev[i]]);
	for (int i=1; i<N; i<<=1)
		for (int j=0,t=N/(i<<1); j<N; j+=i<<1)
			for (int k=0,l=0; k<i; k++,l+=t) x=W[f][l]*a[j+k+i],y=a[j+k],a[j+k]=y+x,a[j+k+i]=y-x;
	if (f) for (int i=0; i<N; i++) a[i]/=N;
}

void doit()
{
	work(),FFT(a,0);
	for (int i=0; i<N; i++) a[i]*=a[i];
	FFT(a,1);
	for (int i=1; i<=M; i++) if (a[i].real()>0.5&&!b[i]) {puts("NO"); return;}
	for (int i=1; i<=M; i++) if (a[i].real()<0.5&&b[i]) q[++q[0]]=i;
	printf("YES\n%d\n",q[0]);
	for (int i=1; i<=q[0]; i++) printf("%d%c",q[i],i==q[0]?'\n':' ');
}

int main()
{
	init();
	doit();
	return 0;
}