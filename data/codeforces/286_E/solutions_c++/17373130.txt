#include<cstdio>
#include<iostream>
#include<string>
#include<cstring>
#include<algorithm>
using namespace std;

#define ll long long
const int mod=998244353;
int n,m,tot,N;
int a[2200010],b[1000010],w[2][2200010],c[1000010];

int fpow(int i,int j)
{int ret=1;
 for(;j;i=(ll)i*i%mod,j/=2)
 	if(j&1) ret=(ll)ret*i%mod;
 return ret;
}

void ntt(int A[],int flag)
{int i,j,p,k,x,y,inv_tot;

 j=tot/2;
 for(i=1;i<tot-1;i++)
 {	if(i<j) swap(A[i],A[j]);
 	for(k=tot/2;j>=k;j-=k,k/=2);
 	j+=k;
 }
 for(p=2;p<=tot;p*=2)
 {	k=tot/p;
 	for(i=0;i<tot;i+=p)
 		for(j=i;j<i+p/2;j++)
 		{	x=A[j];
 			y=(ll)A[j+p/2]*w[flag][(j-i)*k]%mod;
 			A[j]=x+y;
 			if(A[j]>=mod) A[j]-=mod;
 			A[j+p/2]=x-y;
 			if(A[j+p/2]<0) A[j+p/2]+=mod;
 		}
 }
 if(!flag)
 {	inv_tot=fpow(tot,mod-2);
 	for(i=0;i<tot;i++)
 		A[i]=(ll)A[i]*inv_tot%mod;
 }
}

int main()
{int i,j,x,flag,g;
 
 scanf("%d%d",&n,&m);
 for(i=1;i<=n;i++)
 {	scanf("%d",&x);
 	a[x]=1;
 	b[x]=1;
 }
 tot=2;
 while(tot<=m*2) tot*=2;
 g=fpow(3,(mod-1)/tot);
 w[1][0]=1;
 for(i=1;i<=tot;i++) w[1][i]=(ll)w[1][i-1]*g%mod;
 for(i=0;i<tot;i++) w[0][i]=w[1][tot-i];
 ntt(a,1);
 for(i=0;i<tot;i++) a[i]=(ll)a[i]*a[i]%mod;
 ntt(a,0);
 flag=1;
 for(i=1;i<=m;i++)
 	if(a[i] && !b[i])
	{	flag=0;
		break;
	}
 if(!flag)
 {	printf("NO\n");
 	return 0;
 }
 else
 	printf("YES\n");
 for(i=1;i<=m;i++)
 	if(b[i] && !a[i]) c[++N]=i;
 printf("%d\n",N);
 for(i=1;i<=N;i++)
 {	printf("%d",c[i]);
	printf("%c",i!=N?' ':'\n');
 }
 return 0;
}