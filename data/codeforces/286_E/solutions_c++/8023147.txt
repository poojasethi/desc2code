#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<vector>
#include<string>
#include<cmath>
#include<complex>
#define LL long long
using namespace std;
int n,m,x,a[4000010];
double pi=acos(-1);
complex<double> A[4000010],B[4000010],e[4000010];
vector<int> ans;
void read(int &x)
{
	char ch=getchar();int mark=1;for(;ch!='-'&&(ch<'0'||ch>'9');ch=getchar());if (ch=='-') mark=-1,ch=getchar();
	for(x=0;ch>='0'&&ch<='9';ch=getchar()) x=x*10+ch-48;x*=mark;
}
void DFT(complex<double>A[],complex<double>B[],int S,int L,int dt)
{
	if (L==1) {B[S]=A[S];return;}
	int lim=L>>1,mid=S+lim;
	for(int i=0;i<lim;i++) 
	{
		B[S+i]=A[S+(i<<1)];B[mid+i]=A[S+(i<<1)+1];
	}
	DFT(B,A,S,lim,dt<<1);DFT(B,A,mid,lim,dt<<1);
	for(int i=0;i<lim;i++)
	{
		B[S+i]=A[S+i]+e[dt*i]*A[mid+i];
		B[mid+i]=A[S+i]-e[dt*i]*A[mid+i];
	}
}
int main()
{
	read(n);read(m);
	for(int i=1;i<=n;i++)
	{
		read(x);a[x]=1;A[x]=1;
	}
	for(n=1;n<m*2;n<<=1);
	for(int i=0;i<n;i++) e[i]=complex<double>(cos(2*pi*i/n),sin(2*pi*i/n));
	DFT(A,B,0,n,1);
	for(int i=0;i<n;i++) A[i]=B[i]*B[i];
	for(int i=0;i<n;i++) e[i]=complex<double>(cos(-2*pi*i/n),sin(-2*pi*i/n));
	DFT(A,B,0,n,1);
	for(int i=0;i<n;i++) B[i].real()/=n;
	//for(int i=0;i<n;i++) printf("%.9lf ",B[i].real());
	for(int i=1;i<=m;i++)
		if (!a[i]&&B[i].real()>1e-8)
		{
			printf("NO\n");return 0;
		}
	for(int i=1;i<=m;i++)
		if (a[i]&&B[i].real()<1e-8) ans.push_back(i);
	printf("YES\n%d\n",ans.size());
	for(int i=0;i<ans.size();i++) printf("%d ",ans[i]);printf("\n");
	return 0;
}
