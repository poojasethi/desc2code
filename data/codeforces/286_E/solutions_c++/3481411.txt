#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <complex>
#include <algorithm>
#define il inline
#define db double
using namespace std;
typedef complex<db> cp;

const int N=1100000+5;
const cp I(0,1);

int n,m;
int ans[N];
bool p[2*N];
cp a[2*N];

il void FFT(int n,double t,cp *a) {
    int m,h,i,j,k;
    cp w,x;
    for(m=n,h;h=m/2,m>=2;t*=2,m=h)
        for(i=0;i<h;i++)
            for(w=exp(i*t*I),j=i;j<n;j+=m)
                k=j+h,x=a[j]-a[k],a[j]+=a[k],a[k]=w*x;
    i=0;
    for(j=1;j<n-1;j++) {
        for(k=n/2;k>(i^=k);k/=2);
        if(j<i) swap(a[i],a[j]);
    }
}
int main() {
    scanf("%d %d",&n,&m);
    int c,h=0;
    for(int i=1;i<=n;i++) {
        scanf("%d",&c);
        a[c]=1;p[c]=1;
    }
    int n2=1<<(int)(log(2*m+1)/log(2))+1;
    FFT(n2,2*M_PI/n2,a);
    for(int i=0;i<n2;i++) a[i]=a[i]*a[i];
    FFT(n2,-2*M_PI/n2,a);
    for(int i=1;i<=m;i++)
        if(!p[i]) {
            if(a[i].real()>1) {
                printf("NO\n");
                return 0;
            }
        }
        else if(a[i].real()<1) ans[++h]=i;
    printf("YES\n");
    printf("%d\n",h);
    for(int i=1;i<=h;i++)
        printf("%d ",ans[i]);
    printf("\n");
    return 0;
}
