#include <cstdio>
#include <complex>
using namespace std;
const int NMax=3000000;
const double PI=3.14159265358979323846;
int N,M,A[NMax],nn,cnt;
complex<double> w[NMax],y[NMax],tmp7,tmp8,tmp[NMax];
int tmp1,tmp3,tmp6,tmp9;
double tmp2,tmp4,tmp5;
void fft(int p,int deep) {
	if(deep>=cnt) return ;
	fft(p,deep+1);
	fft(p+(1<<deep),deep+1);
	tmp1=(1<<(cnt-deep));
	tmp3=(1<<deep);
	tmp6=(tmp1>>1);
	tmp9=(tmp3<<1);
	for(int i=0;i<tmp6;i++) {
		tmp7=y[p+i*tmp9];
		tmp8=w[i<<deep]*y[p+tmp3+i*tmp9];
		tmp[i]=tmp7+tmp8;
		tmp[i+tmp6]=tmp7-tmp8;
	}
	for(int i=0;i<tmp1;i++) y[p+tmp3*i]=tmp[i];
}
int main()
{
	scanf("%d%d",&N,&M);
	for(int i=1;i<=N;i++) {
		int x;
		scanf("%d",&x);
		A[x]=1;	
	}A[0]=1;
	nn=1;cnt=0;tmp1=(M<<1);
	while(nn<tmp1)nn<<=1,++cnt;
	tmp2=2.0*PI/(double)nn;
	for(int i=0;i<nn;i++)
		w[i]=complex<double>(cos((double)i*tmp2),sin((double)i*tmp2)),
		y[i]=complex<double>((double)A[i],0);
	fft(0,0);
	for(int i=0;i<nn;i++) {
		y[i]=y[i]*y[i];
		w[i].imag()=-w[i].imag();
	}
	fft(0,0);
	tmp1=0;
	for(int i=1;i<=M;i++){
		y[i].real()/=nn;
		if(y[i].real()>0.5&&!A[i]) {
			puts("NO");
			return 0;
		}
		if(y[i].real()>2.5) A[i]=0;
		if(A[i]) tmp1++;
	}
	printf("YES\n%d\n",tmp1);
	for(int i=1;i<=M;i++)if(A[i]) printf("%d ",i);puts("");
	return 0;
}
