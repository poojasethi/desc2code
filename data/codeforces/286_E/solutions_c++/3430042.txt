#include<iostream>
#include<cstdio>
#include<complex>
#include<cstring>
#include<cmath>
#include<algorithm>

#define cp complex<double>

using namespace std;

const cp I(0,1);
const int maxn=2111111,N=1<<21;
int n,m,p[maxn],tot,ans[maxn];
bool c[maxn];
cp w[maxn],a[maxn],tt[maxn],wt;

template<class T> T abs(T x){if (x<0) return -x;else return x;}

void fft(cp a[],int s,int t){
     if (N>>t==1) return;
     fft(a,s,t+1);fft(a,s+(1<<t),t+1);
     int d1=1<<t,dp=1<<t+1,p=s,num=N>>t;
     for (int i=0;i<num/2;i++,p+=dp){
         wt=a[p+d1]*w[i*d1];
         tt[i]=a[p]+wt;tt[i+num/2]=a[p]-wt;
     }
     for (int i=0;i<num;i++) a[i*d1+s]=tt[i];
     tot--;
}

int main(){
#ifdef lty
    freopen("test.in","r",stdin);
    freopen("test.out","w",stdout);
#endif
    scanf("%d%d",&n,&m);tot=0;
    for (int i=0;i<n;i++) scanf("%d",p+i),a[p[i]-1]=1,c[p[i]-1]=1;
    for (int i=0;i<N;i++) w[i]=exp(2*M_PI/N*i*I);
    fft(a,0,0);
    for (int i=0;i<N;i++) w[i].imag()=-w[i].imag(),a[i]*=a[i];
    fft(a,0,0);tot=0;
    for (int i=0;i<m-1;i++) if (abs(a[i].real())>0.5*N&&!c[i+1]){puts("NO");return 0;}
    if (c[0]) ans[tot++]=1;
    for (int i=0;i<m-1;i++) if (abs(a[i].real())<0.5*N&&c[i+1]) ans[tot++]=i+2;
    puts("YES");printf("%d\n",tot);
    for (int i=0;i<tot-1;i++) printf("%d ",ans[i]);
    printf("%d\n",ans[tot-1]);
    return 0;
}
