#include<math.h>
#include<stdio.h>
#include<string.h>
#include<algorithm>
#define N 2097152
using namespace std;
const double pi=acos(-1.0);
struct cp
{
	double x,y;
	cp(){}
	cp(double _,double __):x(_),y(__){}
	friend cp operator +(cp a,cp b)
	{
		return cp(a.x+b.x,a.y+b.y);
	}
	friend cp operator -(cp a,cp b)
	{
		return cp(a.x-b.x,a.y-b.y);
	}
	friend cp operator *(cp a,cp b)
	{
		return cp(a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x);
	}
}a[N],b[N];
void FFT(cp *a,int len,int type)
{
	int i,j,h,t;
	for(i=0,t=0;i<len;i++)
	{
		if(i>=t)	swap(a[i],a[t]);
		for(j=len>>1;(t^=j)<j;j>>=1);
	}
	for(h=2;h<=len;h<<=1)
	{
		cp wn(cos(2*pi*type/h),sin(2*pi*type/h));
		for(i=0;i<len;i+=h)
		{
			cp w(1,0),temp;
			for(j=0;j<h>>1;j++,w=w*wn)
			{
				temp=w*a[i+j+(h>>1)];
				a[i+j+(h>>1)]=a[i+j]-temp;
				a[i+j]=a[i+j]+temp;
			}
		}
	}
	if(type==-1)
		for(i=0;i<len;i++)
			a[i].x/=len;
}
int st[N],top;
bool A[N],B[N];
int main()
{
	int n,m,len,i,k;
	scanf("%d%d",&n,&m);
	for(i=1;i<=n;i++)
	{
		scanf("%d",&k);
		a[k].x=1;
		A[k]=1;
	}
	for(i=1<<25;i;i>>=1)
		if(m&i)
			{len=i<<2;break;}
	FFT(a,len,1);
	for(i=0;i<len;i++)
		b[i]=a[i]*a[i];
	FFT(b,len,-1);
	for(i=1;i<=m;i++)
	{
		if(!A[i]&&b[i].x>1e-5)
		{
			puts("NO");
			return 0;
		}
		if(A[i]&&b[i].x<1e-5)
		{
			st[++top]=i;
		}
	}
	puts("YES");
	printf("%d\n",top);
	for(i=1;i<=top;i++)
		printf("%d ",st[i]);
	return 0;
}
