#include <iostream>
#include <complex>
#include <cstdio>
#include <cstring>

using namespace std;

#define REP(i,n) for(int i=0,_n=n;i<_n;++i)

typedef double db;
typedef complex<db> cp;

const int len=1<<21;

void FFT(cp *A,bool inv=false)
{
	static cp B[len];
	db arg=acos(-1.0);
	for(int step=len/2;step;step/=2,arg*=0.5)
	{
		cp w=cp(cos(arg),inv?-sin(arg):sin(arg)), pw=cp(1,0);
		for(int i=0;i<len;i+=step)
		{
			REP(j,step) 
			{
				int p=i+i;
				if(p>=len)  p-=len;
				B[i+j]=A[p+j]+pw*A[p+step+j];
			}
			pw*=w;
		}
		REP(i,len)  A[i]=B[i];
	}
}

int main()
{
	static cp A[len],B[len],C[len];
	int n,m,a;
	cin>>n>>m;
	memset(A,0,sizeof A);
	memset(B,0,sizeof B);
	REP(i,n) 
	{
		cin>>a;
		A[a]=B[a]=cp(1,0);
	}
	FFT(A);
	REP(i,len)  C[i]=A[i]*A[i];
	FFT(C,true);
	REP(i,len)  C[i]/=len;
	int cnt=0;
	REP(i,m+1)
	{
		if(B[i].real()<0.5 && C[i].real()>0.5)
		{
			cnt=-1;
			break;
		}
		if(B[i].real()>0.5 && C[i].real()<0.5)  ++cnt;
	}
	if(cnt>=0)
	{
		cout<<"YES\n"<<cnt<<endl;
		REP(i,m+1)
			if(B[i].real()>0.5 && C[i].real()<0.5)
				cout<<i<<' ';
	}else  cout<<"NO\n";
	return 0;
}

