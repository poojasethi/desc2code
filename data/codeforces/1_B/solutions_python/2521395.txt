import re

f = lambda x : 26 ** x
for i in range(input()):
	s = raw_input()
	if (re.match('R\d+C\d+', s)):
		p = s.index('C')
		c = int(s[p + 1 : ])
		l = 0
		while c >= f(l):
			c -= f(l)
			l += 1
		print ''.join([chr(ord('A') + c / f(l - i - 1) % 26) for i in range(l)]) + s[1 : p]
	else:
		t = filter(lambda x : x.isupper(), s)
		l = len(t)
		print 'R{0}C{1}'.format(filter(lambda x : x.isdigit(), s), (f(l) - 1) / 25 + sum((ord(t[i]) - ord('A')) * f(l - i - 1) for i in range(l)))