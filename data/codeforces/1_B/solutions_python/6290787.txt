import re
f = lambda x, a: x > 0 and f(x/26-[1, 0][x%26 != 0], [chr([26, x%26][x%26 != 0]-1+ord('A'))]+a) or ''.join(a)
for _ in range(input()):
    coord = raw_input()
    if re.match('R\d+C\d+', coord):
        r, c = re.findall('\d+', coord)
        print f(int(c), [])+r
    else:
        c, r = re.findall('(\D+)(\d+)', coord)[0]
        print 'R'+r+'C'+str(reduce(lambda x, y: x * 26 + y, map(lambda x: ord(x)-ord('A')+1, c), 0))
