#include<bits/stdc++.h>
using namespace std;
vector<int >s[405];
vector<int >an[405][405],p;
int n,m;
int w[405][405];
int dp[405][405];
int all[405];
int a,b,ans;
int dfs(int x,int pa){
	int sum=1;
	bool is;
	vector<int >son;
	for(int i=0;i<s[x].size();i++){
		if(s[x][i]==pa)continue;
		son.push_back(s[x][i]);
		sum+=dfs(s[x][i],x);
	}
	dp[x][0]=0;dp[x][sum]=1;
	if(x!=pa)an[x][sum].push_back(w[x][pa]);
	for(int i=0;i<son.size();i++){
		for(int j=sum;j>0;j--){
			bool is=1;
			for(int k=0;k<=all[son[i]];k++){
				if(j-k<0||dp[x][j-k]==-1||dp[son[i]][k]==-1)continue;
				if(dp[x][j]==-1||dp[x][j]>dp[x][j-k]+dp[son[i]][k]){
					dp[x][j]=dp[x][j-k]+dp[son[i]][k];is=0;
					an[x][j].clear();
					for(int z=0;z<an[x][j-k].size();z++){
						an[x][j].push_back(an[x][j-k][z]);
					}
					for(int z=0;z<an[son[i]][k].size();z++){
						an[x][j].push_back(an[son[i]][k][z]);
					}
				}
				//printf("i=%d,j=%d,k=%d: ",i,j,k);
				//for(int i=0;i<=sum;i++)printf("%d ",dp[x][i]);printf("sum=%d\n",sum);
			}
		}
	}
	if(x==pa){
		if(ans>dp[x][n-m]){
			ans=dp[x][n-m];
			p=an[x][n-m];
		}
	}else if(sum>=m&&ans>dp[x][sum-m]+1){
		ans=dp[x][sum-m]+1;
		p=an[x][sum-m];
		p.push_back(w[x][pa]);
	}
	//printf("%d: ",x);
	//for(int i=0;i<=sum;i++)printf("%d ",dp[x][i]);printf("sum=%d\n",sum);
	return all[x]=sum;
}
int main(){
	scanf("%d%d",&n,&m);
	for(int i=1;i<n;i++){
		scanf("%d%d",&a,&b);
		w[a][b]=w[b][a]=i;
		s[a].push_back(b);
		s[b].push_back(a);
	}
	memset(dp,-1,sizeof(dp));ans=9999;
	dfs(1,1);
	printf("%d\n",ans);
	if(p.size())
	printf("%d",p[0]);
	for(int i=1;i<p.size();i++)printf(" %d",p[i]);
	puts("");
	return 0;
}

