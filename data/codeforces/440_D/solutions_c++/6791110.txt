/*************************************************************************
	> File Name: 1001.cpp
	> Author: yobobobo
	> Mail: zhouboacmer@qq.com 
	> Created Time: 2014年06月04日 星期三 00时25分32秒
 ************************************************************************/

#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
const int N = 401;
int dp[N][N],fa[N];
int id[N][N],pre[N][N][N];
vector<int> graph[N];
int n,K;

inline int dfs(int f,int u){
    dp[u][1] = 0;
    fa[u] = f;
    for(int i = 0;i < (int)graph[u].size();i ++){
        int v = graph[u][i];
        if(v == f) continue;
        dfs(u,v);
        for(int j = n;j >= 0;j --){
            dp[u][j] += 1;//key the same and delete this son
            pre[u][v][j] = 0;
            for(int k = 0;k <= j;k ++){
                dp[u][j] = min(dp[u][j],dp[u][j - k] + dp[v][k]);
                if(dp[u][j] >= dp[u][j - k] + dp[v][k]){
                    dp[u][j] = dp[u][j - k] + dp[v][k];
                    pre[u][v][j] = k;
                }
            }
            //printf("u:%d  j:%d dp:%d  pre:%d\n",u,j,dp[u][j],pre[u][j]);
        }
    }
}

inline void output(int f,int u,int num){
    //printf("f:%d  u:%d  num:%d\n",f,u,num);
    //printf("pre:%d\n",pre[u][num]);
    for(int i = (int)graph[u].size() - 1;i >= 0;i --){
        int v = graph[u][i];
        if(v == f) continue;
        if(pre[u][v][num] == 0){//delete this child
             //                   printf("u:%d  v:%d\n",u,v);
            printf("%d\n",id[u][v]);
        }
        else{
            //printf("u:%d  v:%d  cut:%d\n",u,v,pre[u][v][num]);
            output(u,v,pre[u][v][num]);
            num -= pre[u][v][num];
        }
    }
}

int main(){
    scanf("%d%d",&n,&K);
    for(int i = 1;i < n;i ++){
        int u,v;scanf("%d%d",&u,&v);
        id[u][v] = id[v][u] = i;
        graph[u].push_back(v);
        graph[v].push_back(u);
    }
    memset(dp,0x3f,sizeof(dp));
    dfs(-1,1);
    int ans = dp[1][K];
    int rec = 1;
    for(int i = 2;i <= n;i ++){
        if(dp[i][K] + 1 < ans){
            ans = dp[i][K] + 1;
            rec = i;
        }
    }
    printf("%d\n",ans);
    //printf("rec:%d\n",rec);
    if(rec != 1) printf("%d\n",id[rec][fa[rec]]);
    output(fa[rec],rec,K);
    return 0;
}
