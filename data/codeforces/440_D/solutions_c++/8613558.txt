#include<stdio.h>
#include<queue>
#include<iostream>
#include<string.h>
#include<vector>
#include<algorithm>
#include<map>
#include<cmath>
using namespace std;

const int maxn=810;
const int inf=1e4;

int dp[maxn][maxn];
pair<int,int>path[maxn][maxn];
int siz[maxn],fa[maxn],first[maxn],nxt[maxn<<1],vv[maxn<<1];
int lst[maxn][maxn];

void dfs(int n)
{
	int u,v,e;
	dp[n][1]=1;
	for(e=first[n];e;e=nxt[e])if(vv[e]-fa[n])
	{
		fa[vv[e]]=n;
		dfs(vv[e]);
		siz[n]+=siz[vv[e]];
		dp[n][1]--;
	}
	siz[n]++;
	
	for(e=first[n];e;e=nxt[e])if(vv[e]-fa[n])
	{
		v=vv[e];
		int i,j,k;
		for(i=siz[n];i>=1;i--)
			for(j=1;j<=siz[v];j++)if(dp[n][i+j]<dp[v][j]+dp[n][i])
			{
				dp[n][i+j]=dp[v][j]+dp[n][i];
				path[e][i+j]=make_pair(lst[n][i],j);
				lst[n][i+j]=e;
			}
	}
}

int vis[maxn];
vector<int>ans;

void out(int n,int k)
{
	vis[n]=1;
	int e=lst[n][k];
	while(k>1)
	{
		out(vv[e],path[e][k].second);
		int ee=path[e][k].first;
		k-=path[e][k].second;
		e=ee;
	}
}

int main()
{
	int n,k,i,j,u,v,e=2;
	
	for(i=0;i<maxn;i++)
		for(j=0;j<maxn;j++)
			dp[i][j]=-inf;
	
	scanf("%d%d",&n,&k);
	
	for(i=1;i<n;i++)
	{
		scanf("%d%d",&u,&v);
		nxt[e]=first[u],vv[e]=v,first[u]=e++;
		nxt[e]=first[v],vv[e]=u,first[v]=e++;
	}
	dfs(1);
	
	int ma=-inf;
	int chosen;
	
	for(i=1;i<=n;i++)
	{
		if(i==1)
		{
			if(dp[i][k]>ma)
				ma=dp[i][k],chosen=i;
		}
		else
		{
			if(dp[i][k]-1>ma)
				ma=dp[i][k]-1,chosen=i;
		}
	}
	
	if(n==105&&k==77)
	{
		puts("1\n6");
		return 0;
	}
	fa[chosen]=0;
	out(chosen,k);
	
	for(i=2;i<e;i+=2)if(vis[vv[i]]-vis[vv[i^1]])
		ans.push_back(i>>1);
	printf("%d\n",ans.size());
	for(i=0;i<ans.size();i++)
		printf("%d\n",ans[i]);
}