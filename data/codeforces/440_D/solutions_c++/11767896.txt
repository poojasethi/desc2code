#include<stdio.h>
#include<vector>
#include<algorithm>
#define mp make_pair
#define x first
#define y second
using namespace std;
const int maxn=500,big=1e8;
int n,K,ans=big,anss;
int es=1,he[maxn],to[maxn*2],ne[maxn*2];
int f[maxn][maxn];
bool c[maxn]={0};
vector<pair<int,int> > fr[maxn][maxn];
void ins(int x,int y)
{
    to[++es]=y,ne[es]=he[x],he[x]=es;
}
void dfs(int x,int fa)
{
    int i,j,k;
    f[x][1]=0;
    for(i=2;i<=K;i++)
        f[x][i]=big;
    for(i=he[x];i;i=ne[i])
        if(to[i]!=fa)
        {
            dfs(to[i],x);
            for(j=K;j;j--)
            {
                if(f[x][j]!=big) f[x][j]++;
                for(k=1;k<j;k++)
                    if(f[x][j-k]+f[to[i]][k]<f[x][j])
                    {
                        int t;
                        f[x][j]=f[x][j-k]+f[to[i]][k];
                        fr[x][j].clear();
                        for(t=0;t<fr[x][j-k].size();t++)
                            fr[x][j].push_back(fr[x][j-k][t]);
                        fr[x][j].push_back(mp(to[i],k));
                    }
            }
        }
    if(f[x][K]+(x!=1)<ans)
        ans=f[x][K]+(x!=1),anss=x;
}
void print(int x,int k)
{
    int i;
    c[x]=1;
    for(i=0;i<fr[x][k].size();i++)
        print(fr[x][k][i].x,fr[x][k][i].y);
    for(i=he[x];i;i=ne[i])
        if(!c[to[i]])
            printf("%d ",i/2);
}
int main()
{
    int i,j,x,y;
    scanf("%d%d",&n,&K);
    for(i=1;i<n;i++)
        scanf("%d%d",&x,&y),ins(x,y),ins(y,x);
    dfs(1,0);
    printf("%d\n",ans);
    print(anss,K);
    return 0;
}