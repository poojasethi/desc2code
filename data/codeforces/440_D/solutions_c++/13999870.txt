#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<algorithm>
#include<ctime>
#include<iostream>
#include<cmath>
#include<vector>
#define int64 long long
#define mk make_pair
#define pb push_back
#define rep(i,x,y) for(int i=x;i<=y;++i)
#define N 410
using namespace std;
vector<int> E[N];
int n,K,x,y,i,f[2*N][N],be[N],cnt,size[N],ans,ID[N][N],fa[N],id;
void dfs(int x){
	for(int i=0;i<E[x].size();++i)if(E[x][i]!=fa[x]){
		fa[E[x][i]]=x;
		dfs(E[x][i]);
	}
	++cnt;
	f[cnt][1]=0;
	size[x]=1;
	for(int i=0;i<E[x].size();++i)if(E[x][i]!=fa[x]){
		int y=E[x][i];
		++cnt;
		for(int j=1;j<=size[x];++j)
			for(int k=0;k<=size[y];++k){
				int z;
				if(!k)z=1;
				else z=f[be[y]][k];
				f[cnt][j+k]=min(f[cnt][j+k],f[cnt-1][j]+z);
			}
		size[x]+=size[y];
	}
	be[x]=cnt;
}
void Find_ans(int x,int K){
	vector<int> son;
	for(int i=0;i<E[x].size();++i)if(E[x][i]!=fa[x])son.pb(E[x][i]);
	int p=be[x];
	for(int i=son.size()-1;i>=0;--i){
		int y=son[i];
		for(int j=1;j<=K;++j){
			int k=K-j,z;
			if(!k)z=1;
			else z=f[be[y]][k];
			if(f[p-1][j]+z==f[p][K]){
				if(!k)printf("%d\n",ID[y][x]);
				else Find_ans(y,k);
				K-=k;
				goto aaa;
			}
		}
		aaa:;
		p--;
	}
}
int main(){
	scanf("%d%d",&n,&K);
	for(i=1;i<n;++i){
		scanf("%d%d",&x,&y);
		E[x].pb(y);
		E[y].pb(x);
		ID[x][y]=ID[y][x]=i;
	}
	memset(f,3,sizeof(f));
	dfs(1);
	ans=1<<30;
	for(i=1;i<=n;++i){
		int z=(i==1?0:1);
		if(f[be[i]][K]+z<ans){
			ans=f[be[i]][K]+z;
			id=i;
		}
	}
	printf("%d\n",ans);
	if(id!=1)printf("%d\n",ID[id][fa[id]]);
	Find_ans(id,K);
}
