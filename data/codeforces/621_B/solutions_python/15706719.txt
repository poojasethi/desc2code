def topLeft(x, y):
	m = min(x - 1, y - 1)
	return (x - m + 1, y - m + 1)

def topRight(x, y):
	m = min(x - 1, 1000 - y)
	return (x - m, y + m)

def addToDict(key, d):
	if(key in d):
		d[key] += 1
	else:
		d[key] = 1

if(__name__ == "__main__"):
	grid = [[False] * 1001 for i in range(1001)]
	cnt = int(raw_input())
	left = {}
	right = {}
	for i in range(cnt):
		x, y = [int(t) for t in raw_input().split(' ')]
		addToDict(topLeft(x, y), left)
		addToDict(topRight(x, y), right)

	ans = 0
	for n in left.values():
		if(n > 1):
			ans += n * (n - 1) / 2
	for n in right.values():
		if(n > 1):
			ans += n * (n - 1) / 2
	print(ans)