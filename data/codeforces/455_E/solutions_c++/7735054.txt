#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef double ld;

const int MAX=100000+10;

int n,m;
int a[MAX],st[MAX],top,in[MAX];
LL A[MAX],B[MAX];

LL sum[MAX];

vector< pair<int,int> > Quest[MAX];
LL ans[MAX];
int stack[MAX],num;

LL get(int k,int i,int j)
{
	return sum[i]-sum[k-1] + LL(j-(i-k+1)) * a[k];
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
	int i;
	scanf("%d",&n);
	REP(i,1,n)
	{
		scanf("%d",a+i);
		sum[i]=sum[i-1] + a[i];
	}
	scanf("%d",&m);
	REP(i,1,m)
	{
		int a,b;
		scanf("%d%d",&a,&b);
		Quest[b].pb( mp(a,i) );
	}
	REP(i,1,n)
	{
		while(top && a[ st[top] ] >=a[i])
			in[st[top--]]=0;
		in[st[++top]=i]=1;

		B[i]=-sum[i-1] + (LL)(i-1)*a[i];
		A[i]=-a[i];
		while(num && in[ stack[num] ]==0)
			--num;
		//a1x+b1=a2x+b2
		//x=(b2-b1)/(a1-a2)
		//a2*(b2-b1)/(a1-a2) + b2>= a3* (b2-b1)/(a1-a2) +b3
		//(b2-b3)>=(a3-a2) * (b2-b1)/(a1-a2) a1>a2
		//(b3-b2)*(a1-a2)<=(a3-a2)*(b1-b2)
		while(num>=2 && ( B[i]-B[ stack[num]] ) * ( A[stack[num-1]] - A[stack[num]])<=
			( B[stack[num-1]]-B[ stack[num]] ) * ( A[i] - A[stack[num]] )
				)
			--num;
		stack[++num]=i;
		int k;
		REP2(k,0,(int)Quest[i].size())
		{
			int j=Quest[i][k].x;
			int left=1,right=num;
			while(left<right)
			{
				int mid=(left+right)/2;
				if(stack[mid]+i-1<j)
					left=mid+1;
				else right=mid;
			}
			right=num;
			while(left<right)
			{
				int mid=(left+right)/2;
				if(get(stack[mid],i,j) >= get(stack[mid+1],i,j))
					left=mid+1;
				else
					right=mid;
			}
//			cout<<i<<" "<<j<<" "<<stack[left]<<" "<< get(stack[left] ,i, j)<<endl;
			ans[Quest[i][k].y] = get(stack[left] ,i, j);
		}
	}
	REP(i,1,m)
		cout<<ans[i]<<endl;
	return 0;
}
