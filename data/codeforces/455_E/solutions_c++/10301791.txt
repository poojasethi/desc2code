#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#define L(__) (__ << 1)
#define R(__) (L(__)  + 1)
#define N 100005
#define M 3000005
#define LL long long
#define oo (1LL<<60)
#define TAT "%I64d"
using namespace std;
int cnt=1;
int en[4*N],top,len;
int n,m,p[N],be[4*N];
LL ans=0,a[N],sum[N];
struct dot{
    int x,y;
    dot(int _x=0,int _y=0){ x=_x,y=_y;}
}b[N],c[N],d[M],st[N],v;
dot operator +(dot p,dot q){ return dot(p.x+q.x,p.y+q.y);}
dot operator -(dot p,dot q){ return dot(p.x-q.x,p.y-q.y);}
dot operator *(dot p,int r){ return dot(p.x*r,p.y*r);}
dot operator *(int r,dot p){ return dot(p.x*r,p.y*r);}
LL dj(dot p,dot q){ return 1LL*p.x*q.x+1LL*p.y*q.y;}
LL cj(dot p,dot q){ return 1LL*p.x*q.y-1LL*p.y*q.x;}
bool cmp(dot p,dot q){ return p.x<q.x||(p.x==q.x&&p.y<q.y);}
void build(int t,int l,int r)
{
    int i,mid=(l+r)>>1; len=0;
    if(l==r){
        be[t]=en[t]=cnt++;
        d[be[t]]=b[l];
        return ;
      }
    for(i=l;i<=r;i++) c[++len]=b[i];
    sort(c+1,c+len+1,cmp),top=0;
    for(i=1;i<=len;i++){
        while(top>1&&cj(c[i]-st[top-1],st[top]-st[top-1])>=0) top--;
        st[++top]=c[i];
      }
    be[t]=cnt,en[t]=cnt+top-1,cnt+=top;
    for(i=1;i<=top;i++) d[i+be[t]-1]=st[i];
    build(L(t),l,mid),build(R(t),mid+1,r);
}
void query(int t,int l,int r,int l1,int r1,dot p)
{
    int ll=be[t],rr=en[t]-1,mi,mid=(l+r)>>1;
    if(l>r1||r<l1) return ;
    if(l>=l1&&r<=r1){
    ans=min(ans,min(dj(p,d[ll]),dj(p,d[rr])));
    v=dot(p.y,-p.x);
    while(rr-ll>1){
        mi=(ll+rr)>>1;
        if(cj(d[mi+1]-d[mi],v)>=0) ll=mi;
        else rr=mi;
      }
    ans=min(ans,dj(p,d[rr]));
        return ;
      }
    query(L(t),l,mid,l1,r1,p);
    query(R(t),mid+1,r,l1,r1,p);
}
void work()
{
    int u,v;
    scanf("%d %d",&u,&v),ans=oo;
    query(1,1,n,v-u+1,v,dot(u-v,1));
    printf(TAT"\n",ans+sum[v]);
}
int main()
{
    int i;
    scanf("%d",&n),sum[0]=0;
    for(i=1;i<=n;i++) scanf("%d",&p[i]);
    scanf("%d",&m);
    for(i=1;i<=n;i++) sum[i]=sum[i-1]+p[i];
    for(i=1;i<=n;i++) a[i]=1LL*i*p[i]-sum[i];
    for(i=1;i<=n;i++) b[i]=dot(p[i],a[i]);
    build(1,1,n);
    for(i=1;i<=m;i++) work();
    return 0;
}
