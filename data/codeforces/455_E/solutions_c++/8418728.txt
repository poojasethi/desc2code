#include<bits/stdc++.h>
using namespace std;
const int N=1e5+10;
typedef double ld;

void open()
{
	freopen("function.in","r",stdin);
	freopen("function.out","w",stdout);
}

class function
{
	public:
		int A[N],pre[N],n,m,st[N],s[N];
		struct ask
		{
			int x,y,p;
			void read(int d)
			{
				scanf("%d%d",&x,&y);p=d;
			}
			bool operator < (const ask x) const {return y<x.y;}
		}d[N];
		void work()
		{
			pre_process();
			top_process();
			for(int i=1;i<=m;++i)printf("%d\n",s[i]);
		}
	private:
		void pre_process()
		{
			scanf("%d",&n);
			for(int i=1;i<=n;++i)
			{
				scanf("%d",A+i);
				pre[i]=A[i]+pre[i-1];
			}
			scanf("%d",&m);
			for(int i=1;i<=m;++i)d[i].read(i);
			sort(d+1,d+m+1);
		}
		ld cross(int x,int y){return (ld)(A[x]*x-pre[x]+pre[y]-A[y]*y)/(ld)(A[y]-A[x]);}
		void top_process()
		{
			int o=1;
			for(int p=1;p<=n;++p)
			{
				while(st[0]>0 && A[p]<=A[st[st[0]]])--st[0];
				while(st[0]>1 && cross(st[st[0]],p)>=cross(st[st[0]-1],p))--st[0];
				st[++st[0]]=p;
				while(d[o].y==p)
				{
					int l=1,r=st[0],a,x=d[o].x,y=d[o].y,mid;
					while(l<=r)
					{
						mid=(l+r)>>1;
						if(st[mid]>=p-x+1)a=mid,r=mid-1;
						else l=mid+1;
					}
					l=a;r=st[0]-1;a=st[0];
					while(l<=r)
					{
						mid=(l+r)>>1;
						if(cross(st[mid],st[mid+1])<=x-p)a=mid,r=mid-1;
						else l=mid+1;
					}
					a=st[a];
					s[d[o].p]=pre[p]+A[a]*(x-y)+A[a]*a-pre[a];
					++o;//exit(0);
				}
			}
		}
}diary;

int main()
{
	//open();
	diary.work();
	return 0;
}