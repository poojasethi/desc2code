#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <string>
#include <cstring>
#include <cstdio>
#include <vector>
#include <queue>
#include <cmath>
#include <set>
#include <map>
using namespace std;

#define PII pair<int,int>
#define VPII vector<pair<int,int> >
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define SZ(x) ((int)x.size())
#define rep(i,a,b) for (int i = a; i <= b; ++i)
#define dep(i,a,b) for (int i = a; i >= b; --i)
typedef long long ll;

const int nn=410000;
const int inf=1000000010;
VPII nd[nn];
PII line[nn];
int a[nn],s[nn];
int N;

bool cmp(PII a,PII b,PII c) {
	return 1ll*(b.se-a.se)*(c.fi-a.fi)>=1ll*(c.se-a.se)*(b.fi-a.fi);
}
void blt(int l,int r,VPII &x) {
	VPII c;
	rep(i,l,r) c.pb(line[i]);
	sort(c.begin(),c.end());
	rep(i,0,SZ(c)-1) {
		if (SZ(x)&&c[i].fi==x.back().fi) continue;
		while (SZ(x)>=2&&cmp(x[SZ(x)-2],x[SZ(x)-1],c[i])) x.pop_back();
		x.pb(c[i]);
	}
}
void build(int p,int l,int r) {
	blt(l,r,nd[p]);
	if (l<r) {
		int mid=l+r>>1,lc=p<<1,rc=lc+1;
		build(lc,l,mid);
		build(rc,mid+1,r);
	}
}
int calc(int k,PII &x) {
	return x.fi*k+x.se;
}
int ask(VPII &x,int k) {
	int l=0,r=SZ(x)-1;
	while (l+5<r) {
		int m1=l+r>>1,m2=m1+r>>1;
		if (calc(k,x[m1])<calc(k,x[m2])) r=m2; else l=m1;
	}
	int ans=inf;
	rep(i,l,r) ans=min(ans,calc(k,x[i]));
	return ans;
}
int ask(int p,int l,int r,int x,int y,int k) {
	if (y<l||r<x) return inf;
	if (x<=l&&r<=y) return ask(nd[p],k);
	int mid=l+r>>1,lc=p<<1,rc=lc+1;
	return min(ask(lc,l,mid,x,y,k),ask(rc,mid+1,r,x,y,k));
}
int main() {
	scanf("%d",&N);
	rep(i,1,N) scanf("%d",&a[i]),s[i]=s[i-1]+a[i];
	rep(i,1,N) line[i]=mp(a[i],i*a[i]-s[i]);
	build(1,1,N);
	int q;scanf("%d",&q);
	while (q--) {
		int x,y;scanf("%d%d",&x,&y);
		printf("%d\n",ask(1,1,N,y-x+1,y,x-y)+s[y]);
	}
	return 0;
}

