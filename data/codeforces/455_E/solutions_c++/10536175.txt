#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <climits>
#include <algorithm>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <cassert>
#include <vector>
#define all(x) x.begin() , x.end()
#define fi first
#define se second
#define pb push_back
#define umax( x , y ) x = max( x , (y) )
#define umin( x , y ) x = min( x , (y) )
#define For( i , a ) for(int i=1;i<=a;i++)
#define ort (b+s)/2
#define y2 asrwjaelkf
#define y1 asseopirwjaelkf

using namespace std;

const int maxn = 100020;
const int maxk = 350;
const int MOd = 1e9+7;
const int K = 320;

typedef long long Lint;
typedef double db;
typedef pair<int,int> ii;
typedef pair<int,ii> iii;

struct node {
	int m, b;
	friend bool operator < ( const node &a, const node &b ) {
		if( a.m == b.m ) return a.b < b.b;
		return a.m > b.m;
	}
	node( int _m = 0, int _b = 0 ) { m = _m; b = _b; }
};

int a, gs;
int ar[maxn], at[maxk], s[maxk][maxn], sum[maxk];
node st[maxk][maxk];
vector <node> v[maxk];

db inter( node a, node b ) {
	return (db)(a.b-b.b)/(db)(b.m-a.m);
}

int main() {
	
	scanf("%d",&a);
	
	gs = a / K + 1;
	
	for(int i=1;i<=a;i++) scanf("%d",&ar[i]);
	
	for(int i=a,t=0;i>=1;i--) {
		if( i/K != (i+1)/K ) t = 0;
		v[i/K].pb( node( -ar[i], t + ar[i] * i ) );
		sum[i/K] += ar[i];
		t += ar[i];
	}
	
	for(int i=0;i<gs-1;i++) {
		sort( all( v[i] ) );
		for(int j=0;j<v[i].size();j++) {
			if( j && v[i][j].m == v[i][j-1].m ) continue;
			while( at[i] > 1 && inter( st[i][at[i]], st[i][at[i]-1] ) > inter( st[i][at[i]-1], v[i][j] ) ) at[i]--;
			st[i][++at[i]] = v[i][j];
		}
		for(int j=0,k=1;j<=a;j++) {
			while( k < at[i] && inter( st[i][k], st[i][k+1] ) < j ) k++;
			//~ if( i == 1 ) printf("%d ---> %d %d\n",k,st[i][k].m,st[i][k].b);
			s[i][j] = st[i][k].m * j + st[i][k].b;
		}
	}
	int q;
	scanf("%d",&q);
	while( q-- ) {
		int x, y;
		scanf("%d %d",&x,&y);
		//~ if( a > 1000 ) printf("asdasd %d %d ---- ",x,y);
		x = y - x + 1;
		if( x/K == y/K ) {
			int ans = 1e9;
			for(int i=y,t=0;i>=x;i--) {
				umin( ans, ar[i] * (i-x+1) + t );
				t += ar[i];
			}
			printf("%d\n",ans);
			continue;
		}
		int t = 0, ans = 1e9;
		for(int i=y;i>=(y/K)*K;i--) {
			umin( ans, ar[i] * (i-x+1) + t );
			t += ar[i];
		}
		for(int i=y/K-1;i>x/K;i--) {
			umin( ans, t + s[i][x-1] );
			//~ printf("asdasd %d\n",x-1);
			t += sum[i];
		}
		for(int i=(x/K+1)*K-1;i>=x;i--) {
			umin( ans, ar[i] * (i-x+1) + t );
			t += ar[i];
		}
		cout << ans << endl;
	}
	
	
	
	return 0;
}
