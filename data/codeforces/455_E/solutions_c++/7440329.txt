#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,n) for (int i=a;i<(int)n;i++)
#define pb push_back
#define fi first
#define se second
#define SZ(x) ((int)(x).size())
typedef pair<int,int> PII;
typedef vector<PII> VPII;
const int N=101000;
VPII nd[N*4];
PII pnt[N];
int s[N],a[N],m,x,y,n;
bool cmp(PII a,PII b,PII c) {
	return 1ll*(b.se-a.se)*(c.fi-a.fi)>=1ll*(c.se-a.se)*(b.fi-a.fi);
}
void build(int l,int r,VPII &x) {
	VPII c;
	rep(i,l,r+1) c.pb(pnt[i]);
	sort(c.begin(),c.end());
	rep(i,0,SZ(c)) {
		if (SZ(x)&&c[i].fi==x.back().fi) continue;
		while (SZ(x)>=2&&cmp(x[SZ(x)-2],x[SZ(x)-1],c[i])) x.pop_back();
		x.pb(c[i]);
	}
}
void build(int p,int l,int r) {
	build(l,r,nd[p]);
	if (l!=r) {
		int md=(l+r)>>1;
		build(p+p,l,md);
		build(p+p+1,md+1,r);
	}
}
int ask(VPII &x,int k) {
	int l=0,r=SZ(x)-1;
	while (l+4<r) {
		int pl=(l+l+r)/3,pr=(l+r+r)/3;
		if (x[pl].fi*k+x[pl].se>=x[pr].fi*k+x[pr].se) l=pl; else r=pr;
	}
	int ans=x[r].fi*k+x[r].se;
	rep(i,l,r) ans=min(ans,x[i].fi*k+x[i].se);
	return ans;
}
int ask(int p,int l,int r,int tl,int tr,int k) {
	if (l==tl&&r==tr) return ask(nd[p],k);
	else {
		int md=(l+r)>>1;
		if (tr<=md) return ask(p+p,l,md,tl,tr,k);
		else if (tl>md) return ask(p+p+1,md+1,r,tl,tr,k);
		else return min(ask(p+p,l,md,tl,md,k),ask(p+p+1,md+1,r,md+1,tr,k));
	}
}
int main() {
	scanf("%d",&n);
	rep(i,1,n+1) scanf("%d",a+i),s[i]=s[i-1]+a[i];
	rep(i,1,n+1) pnt[i]=make_pair(a[i],a[i]*i-s[i]);
	build(1,1,n);
	for (scanf("%d",&m);m;m--) {
		scanf("%d%d",&x,&y);
		printf("%d\n",ask(1,1,n,y-x+1,y,x-y)+s[y]);
	}
}