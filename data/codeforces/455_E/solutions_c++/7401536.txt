#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<algorithm>
#include<ctime>
#include<iostream>
#include<cmath>
#include<vector>
#define int64 long long
#define mk make_pair
#define pb push_back
#define sqr(x) (x)*(x)
#define rep(i,x,y) for(int i=x;i<=y;++i)
#define VI vector<int>
#define N 120000
using namespace std;
struct seg{
	int b,k;
	double l;
}g[22][N],v[N];
int n,num[N*4],ans,i,sum[N],a[N],m,x,y;
bool cmp(const seg &a,const seg &b){
	return a.k>b.k || a.k==b.k && a.b>b.b;
}
double jiao(seg &a,seg &b){
	if(a.k==b.k)return -1e100;
	return (double)(a.b-b.b)/(b.k-a.k);
}
void build(int p,int l,int r,int dep){
	int mid=(l+r)/2;
	if(l!=r)build(p*2,l,mid,dep+1);
	if(l!=r)build(p*2+1,mid+1,r,dep+1);
	sort(v+l,v+r+1,cmp);
	num[p]=0;
	for(int i=l;i<=r;++i){
		while(num[p] && jiao(g[dep][l+num[p]],v[i])<g[dep][l+num[p]].l)num[p]--;
		if(!num[p])v[i].l=-1e30;
		else v[i].l=jiao(g[dep][l+num[p]],v[i]);
		num[p]++;
		g[dep][l+num[p]]=v[i];
	}
}
void calc(int p,int l,int r,int x,int y,int X,int dep){
	int mid=(l+r)/2;
	if(x<=l && y>=r){
		if(!num[p])return;
		int ll=1,rr=num[p],mid;
		while(ll<=rr){
			mid=(ll+rr)/2;
			if(g[dep][l+mid].l<=X)ll=mid+1;
			else rr=mid-1;
		}
		ans=min(ans,g[dep][l+ll-1].k*X+g[dep][l+ll-1].b);
	//	for(int i=1;i<=num[p];++i)ans=min(ans,g[dep][l+i].k*X+g[dep][l+i].b);
		return;
	}
	if(x<=mid)calc(p*2,l,mid,x,y,X,dep+1);
	if(y>mid)calc(p*2+1,mid+1,r,x,y,X,dep+1);
}
int main(){
	scanf("%d",&n);
	for(i=1;i<=n;++i){
		scanf("%d",&a[i]),sum[i]=sum[i-1]+a[i];
		v[i].k=a[i];
		v[i].b=a[i]*i-sum[i];
	}
	build(1,1,n,0);
	scanf("%d",&m);
	for(i=1;i<=m;++i){
		scanf("%d%d",&x,&y);
		ans=1<<30;
		calc(1,1,n,y-x+1,y,x-y,0);
		printf("%d\n",ans+sum[y]);
	}
}