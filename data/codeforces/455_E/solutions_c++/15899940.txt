//In The Name Of God 

#include<bits/stdc++.h>

using namespace std;

const int maxn=1<<20;
int n,N=maxn/2,x;
int a[maxn];
int q;
vector<int>ver[maxn],idx[maxn];
int val[maxn],sum[maxn];
int ans[maxn];

void push(int node,int l,int r)
{
  int mid=(l+r)/2;
  int lc=2*node,rc=2*node+1;
  if(val[node]!=-1)
    {
      val[lc]=val[rc]=val[node];
      sum[lc]=sum[node];
      sum[rc]=(mid-l)*val[node]+sum[node];
      val[node]=-1;
      sum[node]=0;
    }
  else
    {
      sum[lc]+=sum[node];
      sum[rc]+=sum[node];
      sum[node]=0;
    }
}

int mass(int l,int r,int p,int node=1)
{
  if(r<=p or p+1<=l)
    return 0;
  if(l==r-1)
    return sum[node];
  push(node,l,r);
  int mid=(l+r)/2;
  return (mass(l,mid,p,2*node)+
	  mass(mid,r,p,2*node+1));
}

void change(int l,int r,int s,int e,int X,int node=1)
{
  if(e<=l or r<=s)
    return ;
  if(s<=l and r<=e)
    {
      sum[node]=(l-s)*X;
      val[node]=X;
      return ;
    }
  push(node,l,r);
  int mid=(l+r)/2;
  change(l,mid,s,e,X,2*node);
  change(mid,r,s,e,X,2*node+1);
}

void bs(int l,int r,int num,int nr)
{
  if(l==r-1)
    return ;
  int mid=(l+r)/2;
  int value=mass(0,N,mid+nr-1);
  if(mid*num<=value+num)
    x=mid,bs(mid,r,num,nr);
  else
    bs(l,mid,num,nr);
}

void solve(int p,int l)
{
  if(p==n)
    return ;
  x=1;
  bs(1,n+1,a[p],l);
  l--;
  sum[1]+=a[p];
  change(0,N,l,l+x+1,a[p]);
  for(int i=0;i<ver[p].size();i++)
    ans[idx[p][i]]=mass(0,N,l+ver[p][i]);
  solve(p+1,l);
}

main()
{
  ios::sync_with_stdio(0);
  memset(val,-1,sizeof val);
  cin>>n;
  for(int i=0;i<n;i++)
    cin>>a[i];
  cin>>q;
  for(int l,r,i=0;i<q;i++)
    {
      cin>>l>>r;
      r--;
      ver[r].push_back(l);
      idx[r].push_back(i);
    }
  solve(0,n+100);
  for(int i=0;i<q;i++)
    cout<<ans[i]<<endl;
  return 0;
}
