#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <vector>
using namespace std;
typedef long long ll;
int n,q;

vector < pair < ll , int > > sqdec[1010];
int nsqrt,maxgp;
ll a[1000100];
ll addval[1010];
int group(int ind)
{
    return  1+ (ind-1)/nsqrt;
}
void srt(int st,int gp){
    sqdec[gp].clear();
    for(int i=st;i>0 && group(i)==gp;i--)sqdec[gp].push_back(make_pair(a[i],i));
    for(int i=st;i<=n && group(i)==gp;i++)sqdec[gp].push_back(make_pair(a[i],i));
    sort(sqdec[gp].begin(),sqdec[gp].end());
}
bool bs(int gp, ll x){
int L=0,R=sqdec[gp].size(),mid;
x-=addval[gp];
while(L<R-1){
 mid = (L+R)>>1;
 if(sqdec[gp][mid].first >x) R = mid;
 else L = mid;
}
 if(sqdec[gp][L].first == x || sqdec[gp][R].first == x)return true;
 return false;
}
int main()
{
int temp;
cin >> n >> q;
 nsqrt = sqrt(n);

for(int i=1;i<=n;i++) cin >> a[i];
for(int i=1,gp=1;i<=n;i+=nsqrt,gp++){
    srt(i,gp);
    maxgp = gp;}

int com,l,r;
ll x;
 for(int i=0;i<q;i++)
 {
 cin >> com;
 if(com ==1 ){
 cin >> l >> r >> x;
 int gpl=group(l),gpr = group(r);
if(gpl == gpr){
    for(int i=l;i<=r;i++) a[i]+=x;
   srt(l,gpl);
continue;
}
for(int i=l;group(i)==gpl && i<=n;i++) a[i]+=x;
for(int i=r;group(i)==gpr && i>0;i--)a[i]+=x;
for(int i=gpl+1;i<gpr;i++)addval[i]+=x;
srt(l,gpl);
srt(r,gpr);
 }else
 {
 cin >> x;
 int L=n+10,R=-1;
 for(int i=1;i<=maxgp;i++)
  if(bs(i,x)){L = min (L,i); R = i;}
 if(R==-1){
    cout << -1 << endl;
    continue;
 }
 int minind=n+10,maxindx=-1;
 for(int i=0;i<sqdec[L].size();i++){
 
    if(sqdec[L][i].first == x-addval[L])
     minind = min(minind,sqdec[L][i].second);
}
 for(int i=0;i<sqdec[R].size();i++){

 
    if(sqdec[R][i].first == x-addval[R])
     maxindx= max(maxindx,sqdec[R][i].second);
 }

 cout << maxindx - minind << endl;
 }
 }

return 0;
}
