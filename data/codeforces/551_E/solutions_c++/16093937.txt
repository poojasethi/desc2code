#include <bits/stdc++.h>
//Keep your friends rich, and your enemies rich, and wait to find out which is which.

using namespace std;

typedef long long ll;
typedef pair<ll, ll> pii;

#define smax(a, b) if (a < b) a = b;
#define smin(a, b) if (a > b || a < 0) a = b;

const ll C = 600, MAXN = 5e5 + 2 * C - 1, MAXC = MAXN / C;

pii minmax[MAXC][C];
ll add[MAXC], a[MAXN];

inline void open(ll x){
	ll L = C * x, R = L + C;
	for (ll i = L; i < R; i++)
		a[i] += add[x];
	add[x] = 0;
}

inline void close(ll x){
	ll L = C * x, R = L + C;

	for (ll i = L; i < R; i++)
		minmax[x][i - L] = pii(a[i], i);

	sort(minmax[x], minmax[x] + C);
	add[x] = 0;
}

inline pii get(ll x, ll v){
	ll f = lower_bound(minmax[x], minmax[x] + C, pii(v, -1) ) - minmax[x],
		s = lower_bound(minmax[x], minmax[x] + C, pii(v + 1, -1) ) - minmax[x];
	s--;

	if (s < f || s < 0 || f < 0 || s >= C || f >= C) return pii(-1, -2);
	else return pii(minmax[x][f].second, minmax[x][s].second);
}

int main(){
	memset(a, 63, sizeof a);
	ll n, q; scanf("%I64d%I64d", &n, &q);
	for (ll i = 0; i < n; i++)
		scanf("%I64d", &a[i]);
	
	for (ll i = 0; i < MAXC; i++)
		close(i);

	while(q--){
		ll com; scanf("%I64d", &com);

		if (com == 1){
			ll l, r, x; scanf("%I64d%I64d%I64d", &l, &r, &x); l--;
			ll _ = r / C;
			for (ll i = l / C; i <= _; i++){
				ll L = i * C, R = L + C;

				if (l > L || r < R) {
					open(i);

					ll s = max(l, L), e = min(r, R);
					for (ll j = s; j < e; j++)
						a[j] += x;
					close(i);
				} else add[i] += x;
			}
				
		}else{
			ll y; scanf("%I64d", &y);
			pii ans(-1, -2);
			for (ll i = 0; i < MAXC; i++){
				ll v = y - add[i];
				pii tmp = get(i, v);
				if (tmp.first == -1) continue;
				if (ans.first == -1) ans.first = tmp.first;
				ans.second = tmp.second;
			}

			printf("%I64d\n", ans.second - ans.first);
		}
	}
}
