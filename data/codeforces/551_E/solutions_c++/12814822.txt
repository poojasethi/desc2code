#include <cstdio>

#include <cmath>

#include <cstring>

#include <iostream>

#include <algorithm>

#include <vector>

#include <map>

#include <queue>

#include <set>



using namespace std;



typedef long long LL;


pair<LL,int> f[1005][1005];
LL a[500005],d[1005];
int n,m,nn,maxn;
int z,l,r,x;
int calc(int x)
{
	return 1+(x-1)/nn;
}
void work(int x,int y)
{
	int num=0;
	for (int i=y;i<=n&&i<y+nn;++i)
	{
		f[x][++num]=make_pair(a[i],i);
	}
	sort(f[x]+1,f[x]+num+1);
}

int main()

{

	scanf("%d%d",&n,&m);
	nn=(int)sqrt(1.0*n);
	for (int i=1;i<=n;++i) scanf("%I64d",&a[i]);
	for (int i=1,j=1;j<=n;++i,j+=nn) 
	{
		work(i,j);
		maxn=i;
	}
	while (m--)
	{
		scanf("%d",&z);
		if (z==1)
		{
			scanf("%d%d%d",&l,&r,&x);
			int p,q;
			p=calc(l);q=calc(r);
			if (p==q)
			{
				for (int i=l;i<=r;++i) a[i]+=x;
				work(p,(p-1)*nn+1);
				continue;
			}
			for (int i=l;i<=n&&calc(i)==p;++i) a[i]+=x;
			for (int i=r;i>=1&&calc(i)==q;--i) a[i]+=x;
			work(p,(p-1)*nn+1);
			work(q,(q-1)*nn+1);
			for (int i=p+1;i<q;++i) d[i]+=x;
		}
		else
		{
			scanf("%d",&x);
			int ll=0,rr=0;
			for (int i=1,j=1;j<=n;++i,j+=nn)
			{
				l=j;r=j+nn-1;r=min(r,n);
				int num=r-l+1;
				int pos=lower_bound(f[i]+1,f[i]+num+1,make_pair(x-d[i],1))-f[i];
				if (pos&&f[i][pos].first==x-d[i])
				{
					ll=f[i][pos].second;
					break;
				}
			}
			for (int i=maxn,j=(i-1)*nn+1;i>0;--i,j-=nn)
			{
				l=j;r=j+nn-1;r=min(r,n);
				int num=r-l+1;
				int pos=lower_bound(f[i]+1,f[i]+num+1,make_pair(x-d[i]+1,1))-f[i]-1;
				if (pos&&f[i][pos].first==x-d[i])
				{
					rr=f[i][pos].second;
					break;
				}
			}
			if (ll!=0) printf("%d\n",rr-ll);
			else printf("-1\n");
		}
	}
	return 0;

}