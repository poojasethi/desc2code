#include<bits/stdc++.h>
 
using namespace std;
 
 
//#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)
typedef long double ld;
 
const int maxN = 500*1000 + 4;
const int mod = 1000*1000*1000+7;
const int base = 701;
typedef long long ll;
const int SQ = 500;

pair<ll,int> a[1005][505];
int len[1005];
ll c[1005];

int v[maxN], ps[maxN];


main()
{
    ios::sync_with_stdio(0); cin.tie();
    int n,q; cin >> n >> q;
    rep(i,0,n) cin >> v[i], ps[i] = i / SQ;
    
    int mx = 0;
    rep(i,0,n) 
    {
	  int ind = ps[i]; mx = max(mx,ind);
	  a[ind][len[ind]++] = {v[i],i}; 
    }
    
    rep(i,0,mx+1)
	  sort(a[i],a[i]+len[i]);
    
    while(q--)
    {
	  int t; cin >> t;
	  if(t == 1)
	  {
		int l, r, x; cin >> l >> r >> x; l --; r --;
		int il = ps[l], ir = ps[r];
		rep(i,il+1,ir) c[i] += x;
		if(il == ir)
		{
		    rep(i,0,len[il]) if(l <= a[il][i].second && a[il][i].second <= r) a[il][i].first +=x;
		    sort(a[il],a[il]+len[il]);
		    continue;
		}
		
		rep(i,0,len[il]) if(a[il][i].second >= l) a[il][i].first +=x;
		rep(i,0,len[ir]) if(a[ir][i].second <= r) a[ir][i].first +=x;
		sort(a[ir],a[ir]+len[ir]);
		sort(a[il],a[il]+len[il]);
		continue;
	  }

   	  ll y; cin >> y;
	  int ansmx = 0, ansmi = mod;
	  rep(i,0,mx+1)
	  {
		y -= c[i];
		int psl = lower_bound(a[i],a[i]+len[i],make_pair(y*(1LL),-1)) - a[i];
		if(psl == len[i] || a[i][psl].first != y) { y += c[i]; continue; }
		int psr = lower_bound(a[i],a[i]+len[i],make_pair(y*(1LL),mod)) - a[i]; psr --;
		ansmx = max(ansmx, a[i][psr].second);
		ansmi = min(ansmi, a[i][psl].second);
		y += c[i];
	  }

	  if(ansmx < ansmi) cout << -1 << endl;
	  else cout << ansmx - ansmi << endl;
    }

    return 0;
}