#include <iostream>
#include <vector>
#include <map>
#include <cmath>
#include <algorithm>

using namespace std;

typedef long long int ll;

int obtenminimo(vector<pair<ll,int> > &v,ll y)
{
  int inf=-1;
  int sup=int(v.size());
  while (inf+1<sup) {
    int med=(inf+sup)/2;
    if (y<=v[med].first) sup=med;
    else inf=med;
  }
  if (sup<int(v.size()) and v[sup].first==y) return v[sup].second;
  return 1000000000;
}

int obtenmaximo(vector<pair<ll,int> > &v,ll y)
{
  int inf=-1;
  int sup=int(v.size());
  while (inf+1<sup) {
    int med=(inf+sup)/2;
    if (y<v[med].first) sup=med;
    else inf=med;
  }
  if (inf>=0 and v[inf].first==y) return v[inf].second;
  return 0;
}

int n,casos;
vector<pair<ll,int> > mapa[1000];
ll a[1000000];
ll acum[1000];

void recalcula(int b)
{
  mapa[b]=vector<pair<ll,int> > ();
  for (int i=max(b*1000,1);i<b*1000+1000 and i<=n;i++)
    mapa[b].push_back(pair<ll,int> (a[i],i));
  sort(mapa[b].begin(),mapa[b].end());
}


int main()
{
  ios::sync_with_stdio(false);
  cin>>n>>casos;
  for (int i=1;i<=n;i++)
    cin>>a[i];
  for (int b=0;b*1000<=n;b++)
    recalcula(b);
  for (int cas=0;cas<casos;cas++) {
    int tipo;
    cin>>tipo;
    if (tipo==1) {
      int l,r,x;
      cin>>l>>r>>x;
      int bl=l/1000;
      int br=r/1000;
      if (bl==br) {
	for (int i=l;i<=r;i++)
	  a[i]+=x;
	recalcula(bl);
      } else {
	for (int i=l;i<(bl+1)*1000;i++)
	  a[i]+=x;
	recalcula(bl);
	for (int b=bl+1;b<br;b++)
	  acum[b]+=x;
	for (int i=br*1000;i<=r;i++)
	  a[i]+=x;
	recalcula(br);
      }
    } else {
      int y;
      cin>>y;
      int minimo=1000000000;
      int maximo=0;
      for (int b=0;b<1000;b++) {
	minimo=min(minimo,obtenminimo(mapa[b],y-acum[b]));
	maximo=max(maximo,obtenmaximo(mapa[b],y-acum[b]));
      }
      if (minimo>maximo) cout<<-1<<endl;
      else cout<<maximo-minimo<<endl;
    }
  }
}
