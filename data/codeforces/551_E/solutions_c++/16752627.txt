#include<bits/stdc++.h>

using namespace std;

#define sgmn int v, int tl, int tr
#define tm  (tl + tr >> 1)
#define sol v*2, tl, tm
#define sag v*2+1, tm+1, tr
#define N 500005

int P[N],B[707],E[707],n,kok,w,i,j,mn,mx,pr,h,l,r,x;

long long A[N],AA[N],Lz[707];

int main(){

	scanf("%d%d",&n,&w);

	kok = sqrt(n);

	for(i=1;i<=n;i++){
		scanf("%lld",&A[i]);
		AA[i] = A[i];
		P[i] = pr+1;
		if(i % kok == 0 || i == n){
			pr++;
			B[pr] = E[pr-1] + 1;
			E[pr] = i;

			sort(A+B[pr] , A+E[pr]+1);
		}
	}

	while(w--){

		scanf("%d%d",&h,&l);

		if(h == 1){
			
			scanf("%d%d",&r,&x); i = l;

			if(B[ P[i] ] < i){

				for(;i <= r && B[ P[i] ] != i ; i++)
					AA[i] += x;

				for(i=B[ P[l] ]; i <= E[ P[l] ] ; i++)
					A[i] = AA[i];

				sort(A+B[ P[l] ] , A+E[ P[l] ]+1);
	
			}

			for(;i && i <= r && E[ P[i] ] <= r ; i = B[ P[i]+1 ])
				Lz[ P[i] ] += x;

			if(i && i <= r){
				for(; i<=r ; i++)
					AA[i] += x;

				for(i=B[ P[r] ]; i<=E[ P[r] ]; i++)
					A[i] = AA[i];

				sort(A+B[ P[r] ] , A+E[ P[r] ]+1);
			}
		}

		else{
			mn = 0;
			for(i=1;i<=pr;i++){

				j = lower_bound(A+B[i] , A+E[i]+1 , l-Lz[i]) - A;

				if(j <= E[i] && A[j] == l-Lz[i]){
					for(j=B[i]; j<=E[i] ; j++)
						if(AA[j] == l-Lz[i]){
							mn = j;
							break;
						}
					break;
				}
			}

			for(i=pr; i ; i--){

				j = lower_bound(A+B[i] , A+E[i]+1 , l-Lz[i]) - A;

				if(j <= E[i] && A[j] == l-Lz[i]){
					for(j=E[i]; j>=B[i] ; j--)
						if(AA[j] == l-Lz[i]){
							mx = j;
							break;
						}				
					break;
				}
			}

			printf("%d\n",mn ? mx - mn : -1);
		}
	}

	return 0;
}
