#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<vector>
#define ll long long  
#define MAXN 500005
#define MAXC 5005
#define INF 2147483647
using namespace std;
int n,q,c,mx,mn;
long long a[MAXN],tag[MAXC];
int pos[MAXN],lp[MAXC],rp[MAXC];
vector<pair<ll,int> > b[MAXC];
void Build(int x)
{
	b[x].clear();
	for (int i=lp[x];i<=rp[x];i++)
	{
		a[i]+=tag[x];
		b[x].push_back(make_pair(a[i],i));	
	}
	sort(b[x].begin(),b[x].end());
	tag[x]=0;
}
void Add()
{
	int l,r,x,L,R;
	scanf("%d%d%d",&l,&r,&x);
	L=pos[l],R=pos[r];
	//cout<<L<<' '<<R<<endl;
	if (L==R)
		for (int i=l;i<=r;i++) a[i]+=x;
	else
	{
		for (int i=l;i<=rp[L];i++) a[i]+=x;
		for (int i=lp[R];i<=r;i++) a[i]+=x;
		for (int i=L+1;i<R;i++) tag[i]+=x;	
	}
	Build(L);if (L!=R) Build(R);
}
void Query(int x,long long val)
{
	val-=tag[x];pair<long long,int>t1,t2;
	if(lower_bound(b[x].begin(),b[x].end(),make_pair(val,0))!=b[x].end())
    {
        t1=*lower_bound(b[x].begin(),b[x].end(),make_pair(val,0));
        if(t1.first==val)
            mn=min(mn,t1.second);
    }
    if(lower_bound(b[x].begin(),b[x].end(),make_pair(val+1,0))!=b[x].begin())
    {
        t2=*--lower_bound(b[x].begin(),b[x].end(),make_pair(val+1,0));
        if(t2.first==val)
            mx=max(mx,t2.second);
    }
}
void Query()
{
	long long x;scanf("%I64d",&x);
	mx=-INF;mn=INF;
	for (int i=1;i<=c;i++) Query(i,x);
    if(mn==INF)puts("-1");
    else printf("%d\n",mx-mn);
}
int main()
{
	scanf("%d%d",&n,&q);c=n/1000+(n%1000!=0);
	memset(tag,0,sizeof(tag));
	for (int i=1;i<=n;i++)
		scanf("%I64d",&a[i]);
	for (int i=1;i<=n;i++) pos[i]=(i-1)/1000+1;
	lp[1]=1;rp[1]=1000;
	for (int i=2;i<=c;i++)
		lp[i]=lp[i-1]+1000,rp[i]=rp[i-1]+1000;
	rp[c]=n;
	for (int i=1;i<=c;i++)	Build(i);
	while(q--)
    {
        int f;scanf("%d",&f);
        if (f==1) Add();else Query();
    }
    return 0;
}
