#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <iostream>
#include <math.h>
#include <vector>
#include <queue>
#include <map>
using namespace std;
typedef unsigned long long ll;
#define N 500009
#define M 1000
#define MAXN 10000009
#define ff(i,n) for(int (i)=1;(i)<=(n);(i)++)
#define f0(i,n) for(int (i)=0;(i)<(n);(i)++) 
#define clr(a,b) memset((a),(b),sizeof((a)))
#define pb push_back
#define mp make_pair
#define X first
#define Y second
#define lson rt<<1
#define rson rt<<1|1
int n,q,nn,m;
vector<pair<ll,int> > v[M];
vector<pair<ll,int> >::iterator itr; 
bool cmp(pair<ll,int> a,pair<ll,int> b) {
	return a.X<b.X;
}
ll rec[N];
void update(int l,int r,int ind,ll val) {
	for(int i=0;i<v[ind].size();i++){
		int pos=v[ind][i].Y;
		if(pos>=l&&pos<=r) v[ind][i].X+=val;
	}
	sort(v[ind].begin(),v[ind].end(),cmp);

}
int main()
{
	ll x,y,z,l,r;
	memset(rec,0,sizeof(rec));
	scanf("%d%d",&n,&q);
	nn=sqrt(n); m=(n+nn-1)/nn;
	//cout<<nn<<" "<<m<<endl;
	for(int i=0;i<n;i++){ 
		scanf("%I64d",&x);
		v[i/nn].pb(mp(x,i+1));
	}
	for(int i=0;i<m;i++) 
		sort(v[i].begin(),v[i].end(),cmp);
	while(q--) {
		scanf("%I64d",&x);
		if(x==1) {  
			scanf("%I64d%I64d%I64d",&l,&r,&z);
			int st=(l-1)/nn,ed=(r-1)/nn;
			update(l,r,st,z); 
			if(st!=ed) update(l,r,ed,z);
			
			for(int i=st+1;i<ed;i++) rec[i]+=z;
			//for(int i=0;i<m;i++) cout<<rec[i]<<" "; cout<<endl;
		}
		else {  
			scanf("%I64d",&y);
			int st=n,ed=0;
			for(int i=0;i<m;i++) {
				ll val=y-rec[i];  //cout<<val<<endl;
				itr=lower_bound(v[i].begin(),v[i].end(),mp(val,0));
				while(itr!=v[i].end()&&(*itr).X==val) {
					int pos=(*itr).Y;  itr++; 
					st=min(st,pos); ed=max(ed,pos);
				}
			} 
			int ans=ed-st;
			if(ans<0) ans=-1;
			printf("%d\n",ans);	
		}
	}
}