#include<bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define st first
#define nd second
#define int long long

int n,q,k,w,x,type,i,j,l,r,a,b,bek;
int A[500005],add[2000];

vector<pair<int, int> > V[2000];

void update(int x,int l,int r,int v){

	int i;

	if(r-l+1==k){
		add[x]+=v;
		return;
	}

	V[x].clear();

	for(i=(x-1)*k+1 ; i<=min(n,x*k) ; i++)
		if(i<l or i>r){
			A[i]+=add[x];
			V[x].pb(mp(A[i],i));
		}
		else {
			A[i]+=add[x]+v;
			V[x].pb(mp(A[i],i));
		}

	add[x]=0;

	sort(V[x].begin(),V[x].end());
}

main(){

	ios::sync_with_stdio(0);

	cin>>n>>q;

	k=707;

	for(i=1 ; i<=n ; i++)
		cin>>A[i];

	for(i=1 ; i<=n ; i+=k){
		
		for(j=i ; j<=min(n,i+k-1) ; j++)
			V[i/k+1].pb(mp(A[j],j));

		sort(V[i/k+1].begin(),V[i/k+1].end());
	}
		
	for(i=1 ; i<=q ; i++){
		
		cin>>type;

		if(type==1){
	
			cin>>l>>r>>x;
			
			for(j=1 ; j<=r ; j+=k)
				if(j+k-1>=l)
					update(j/k+1,max(l,j),min(r,j+k-1),x);
		}

		else {

			l=r=bek=0;

			cin>>x;

			for(j=1 ; j<=n ; j+=k){
				
				w=x-add[j/k+1];

				a=lower_bound(V[j/k+1].begin(),V[j/k+1].end(),mp(w,0LL))-V[j/k+1].begin();

				if(!bek and a!=V[j/k+1].size() and V[j/k+1][a].st==w){
					l=V[j/k+1][a].nd;
					bek=1;
				}

				w=x-add[j/k+1];

				b=lower_bound(V[j/k+1].begin(),V[j/k+1].end(),mp(w+1,0LL))-V[j/k+1].begin()-1;

				if(b!=-1 and V[j/k+1][b].st==w)
					r=V[j/k+1][b].nd;

			}

			if(r)
				cout<<r-l<<endl;
			else cout<<-1<<endl;
		}

	}
}