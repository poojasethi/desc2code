chars = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']

def nextchar(c,p):
    index = chars.index(c)
    if index < p-1:
        return chars[index+1]
    else:
        return -1

def extra(x,s):
    return s*((x-x%3)/3) + s[:x%3]

def nextstr(s,p,l):
    c = s[l]
    while True:
        if l < 0:
            return "NO"
        next_char = nextchar(c,p)
        if next_char == -1:
            l = l-1
            c = s[l]
            continue
        else:
            if l > 0:
                if next_char == s[l-1]:
                    c = next_char
                    continue
            else:
                if next_char == 'a':
                    return s[:l] + next_char + extra(len(s)-l-1,"bca")
                elif next_char == 'b':
                    return s[:l] + next_char + extra(len(s)-l-1,"acb")
                else:
                    return s[:l] + next_char + extra(len(s)-l-1,"abc")
            if l > 1:
                if next_char == s[l-2]:
                    c = next_char
                    continue
            if next_char == 'a':
                if s[l-1] == 'b':
                    return s[:l] + next_char + extra(len(s)-l-1,"cba")
                else:
                    return s[:l] + next_char + extra(len(s)-l-1,"bca")
            elif next_char == 'b':
                if s[l-1] == 'a':
                    return s[:l] + next_char + extra(len(s)-l-1,"cab")
                else:
                    return s[:l] + next_char + extra(len(s)-l-1,"acb")
            elif next_char == 'c':
                if s[l-1] == 'a':
                    return s[:l] + next_char + extra(len(s)-l-1,"bac")
                else:
                    return s[:l] + next_char + extra(len(s)-l-1,"abc")
            else:
                if s[l-1] == 'a':
                    return s[:l] + next_char + extra(len(s)-l-1,"bac")
                else:
                    return s[:l] + next_char + extra(len(s)-l-1,"abc")

"""def tolerable(s):
    l = len(s)-1
    while l > 0:
        if s[l] == s[l-1]:
            return l
        if l > 1:
            if s[l] == s[l-2]:
                return l
        l = l-1
    return -1"""

p = int(str(raw_input()).split()[1])
s = str(raw_input())
t = len(s)-1
print nextstr(s,p,t)