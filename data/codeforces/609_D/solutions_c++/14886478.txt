#include <cstring>
#include <iostream>
#include <algorithm>
#include <cstdio>
using namespace std;
int i,j,k,n,m,s,ans;
int a[1000005];
int b[1000005];
int t[1000005];
int c[1000005];
long long T[1000005];
int X,Y,tot;
struct node
{
	long long x;int id,sx;
};
node e[1000005];
bool ok(int x)
{
	X = Y = 1000000000;
	tot = 0;
	for (int i=1;i<=x;i++)
	{
		X = min(X,a[i]);
		Y = min(Y,b[i]);
	}
	for (int i=1;i<=m;i++)
	if (t[i]==1) T[++tot] = (long long)X*c[i];
	else T[++tot] = (long long)Y*c[i];
	sort(T+1,T+1+tot);
	long long tmp = 0;
	for (int i=1;i<=k;i++) tmp += T[i];
	if (tmp<=s) return true;
	else return false;
}
void erfen(int l,int r)
{
	if (l==r)
	{
		ans = l;
		return;
	}
	int mid = (l+r)>>1;
	if (ok(mid)) erfen(l,mid);
	else erfen(mid+1,r);
}
bool cmp(node x,node y)
{
	return x.x<y.x;
}
int main()
{
	scanf("%d%d%d%d",&n,&m,&k,&s);
	for (int i=1;i<=n;i++) scanf("%d",&a[i]);
	for (int i=1;i<=n;i++) scanf("%d",&b[i]);
	for (int i=1;i<=m;i++)
	scanf("%d%d",&t[i],&c[i]);
	erfen(1,n+1);
	if (ans==n+1) puts("-1");
	else
	{
		printf("%d\n",ans);
		X = Y = 1000000000;
		int dx,dy;
    	tot = 0;
    	for (int i=1;i<=ans;i++)
    	{
	    	if (X>a[i])
	    	{
	    		X = a[i];
	    		dx = i;
	    	}
	    	if (Y>b[i])
	    	{
		        Y = b[i];
		        dy = i;
		    }
    	}
    	for (int i=1;i<=m;i++)
    	if (t[i]==1) e[++tot] = (node){(long long)X*c[i],i,t[i]};
	    else e[++tot] = (node){(long long)Y*c[i],i,t[i]};
	    sort(e+1,e+1+tot,cmp);
	    for (int i=1;i<=k;i++)
	    if (e[i].sx==1) printf("%d %d\n",e[i].id,dx);
	    else printf("%d %d\n",e[i].id,dy);
	}
	return 0;
}