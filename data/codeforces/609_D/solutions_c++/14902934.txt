#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <iterator>

using namespace std;

#define ll long long

int ab[200000][2], t[200000], c[200000];
int n, k, m, s;

bool check(int day, bool print = false) {
	int min_dix = 0, min_pix = 0;
	for (int i = 0; i <= day; i++) {
		if (ab[i][0] < ab[min_dix][0])
			min_dix = i;
		if (ab[i][1] < ab[min_pix][1])
			min_pix = i;
	}

	std::vector<pair<ll, int> > v;
	for (int i = 0; i < m; i++)
		if (t[i] == 1)
			v.push_back(make_pair(c[i]*1ll*ab[min_dix][0], i+1));
		else
			v.push_back(make_pair(c[i]*1ll*ab[min_pix][1], i+1));

	sort(v.begin(), v.end());
	int done = 0;
	ll h = 0;
	for (int i = 0; i < m; i++) {
		h += v[i].first;
		if (h > s)
			break;
		done++;
		if (print) {
			if (t[v[i].second-1] == 1)
				printf("%d %d\n", v[i].second, min_dix+1);
			else
				printf("%d %d\n", v[i].second, min_pix+1);
		}
		if (done == k)
			break;
	}

	return done >= k;
}

int main() {
	cin >> n >> m >> k >> s;
	for (int i = 0; i < n; i++)
		cin >> ab[i][0];
	for (int i = 0; i < n; i++)
		cin >> ab[i][1];
	for (int i = 0; i < m; i++)
		cin >> t[i] >> c[i];

	int l = 0, r = n-1, mid;
	int res = -1;
	while (l <= r) {
		mid = (l+r) >> 1;
		if (check(mid)) {
			res = mid;
			r = mid-1;
		}
		else
			l = mid+1;
	}

	if (res != -1) {
		printf("%d\n", res+1);
		check(res, true);
	}

	else
		printf("%d\n", res);

	return 0;
}