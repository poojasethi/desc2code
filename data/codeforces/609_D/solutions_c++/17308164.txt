#include <bits/stdc++.h>
using namespace std;

#define mp make_pair
#define pb push_back

typedef long long ll;
const int N = 200005;

ll n,m,k,s;
ll dollar[N],pound[N],ty[N],c[N];

vector < pair< ll, pair< ll, ll> > > v;

int Yes(int mid){
    int a = 1,b = 1;
    for(int i=1;i<=mid;i++){
        if(dollar[i] < dollar[a]) a = i;
        if(pound[i] < pound[b]) b = i;
    }
    v.clear();
    for(int i=1;i<=m;i++){
        if(ty[i] == 1LL){
            v.pb(mp(dollar[a]*c[i],mp(i,a)));
        }else{
            v.pb(mp(pound[b]*c[i],mp(i,b)));
        }
    }

    sort(v.begin() , v.end());
    ll cnt = 0;
    for(int i=0;i<k;i++){
        cnt += v[i].first;
    }
    //cout << mid << " " << cnt << '\n';
    return (cnt <= s);
}

void Solve(){
    int lo = 1,hi = n + 1,mid,ans;
    ans = -1;
    while(hi > lo){
        mid = (lo + hi) / 2;
        if(Yes(mid)){
            ans = mid;
            hi = mid;
        }else{
            lo = mid + 1;
        }
    }
    if(lo == n + 1) puts("-1");
    else{
        cout << lo << '\n';
        Yes(lo);
        for(int i=0;i<k;i++){
            cout << v[i].second.first << " " << v[i].second.second << '\n';
        }
    }
}

int main(){
    cin >> n >> m >> k >> s;
    for(int i=1;i<=n;i++) cin >> dollar[i];
    for(int i=1;i<=n;i++) cin >> pound[i];
    for(int i=1;i<=m;i++){
        cin >> ty[i] >> c[i];
    }
    Solve();
    return 0;
}
