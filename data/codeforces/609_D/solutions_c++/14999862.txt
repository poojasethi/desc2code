#include<bits/stdc++.h>

using namespace std;

#define ll long long
#define s(x) scanf("%lld" , &x)
ll n , m , k , s , min_d , min_p , dol[200007] , pound[200007] , t[200007] , c[200007];
struct node{
ll v;
ll num;
};
node cost[200007];
bool comp(node a , node b){
return a.v<b.v;
}
ll check(int g){
    ll sum = 0 , i;
    min_d = 0;
    min_p = 0;
    for(i = 1; i <= g; i ++){
        if(dol[i] < dol[min_d]){
            min_d = i;
        }
        if(pound[i] < pound[min_p]){
            min_p = i;
        }
    }
    for(i = 0; i < m; i ++){
        if(t[i] == 1){
            cost[i].v = c[i]*dol[min_d];
            cost[i].num = i+1;
        }
        else{
            cost[i].v = c[i]*pound[min_p];
            cost[i].num = i+1;
        }
    }
    sort(cost , &cost[m] , comp);
    for(i = 0; i < k; i ++){
        sum += cost[i].v;
    }
    return sum<=s;
}
int main(){
    ll i , l , r , mid , a;
    s(n);s(m);s(k);s(s);
    for(i = 0; i < n; i ++){
        s(dol[i]);
    }
    for(i = 0; i < n; i ++){
        s(pound[i]);
    }
    for(i = 0; i < m; i ++){
        s(t[i]);
        s(c[i]);
    }
    l = 0;
    r = n-1;
    while(l <= r){
        mid = l+r >> 1;
        if(check(mid)){
            r = mid-1;
        }
        else
            l = mid+1;
    }
    if(l > n-1){
        printf("-1");
    }
    else{
        printf("%d\n" , l+1);
        a = check(l);
        for(i = 0; i < k; i ++){
                if(t[cost[i].num-1] == 1)
            printf("%lld %lld\n" , cost[i].num , min_d+1);
        else
            printf("%lld %lld\n" , cost[i].num , min_p+1);
        }
    }
    return 0;
}
