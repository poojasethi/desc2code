#include<cmath>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<algorithm>

#ifdef WIN32
#define orz "%I64d"
#else
#define orz "%lld"
#endif
#define N 200010

using namespace std;
typedef long long LL;

int n,m,k,s,a[N],b[N],t[N],c[N],ans[N],tot,t1,t2;
struct Gad{
    int id,t;
    LL c;
    Gad() {}
    Gad(int _id,int _t,LL _c):id(_id),t(_t),c(_c) {}
}g[N];
bool cmp(Gad _,Gad __)
{
    return _.c<__.c;
}
bool check(int tim)
{
    int m1=1<<30,m2=1<<30;
    for (int i=1;i<=tim;i++)
    {
        if (m1>a[i])
            m1=a[i],t1=i;
        if (m2>b[i])
            m2=b[i],t2=i;
    }
    for (int i=1;i<=m;i++)
    {
        if (t[i]==1)
            g[i]=Gad(i,1,1LL*m1*c[i]);
        else
            g[i]=Gad(i,2,1LL*m2*c[i]);
    }
    sort(g+1,g+m+1,cmp);
    LL tot=0;
    for (int i=1;i<=k;i++)
    {
        tot+=g[i].c;
    }
    return tot<=1LL*s;
}
int main()
{
    scanf("%d%d%d%d",&n,&m,&k,&s);
    for (int i=1;i<=n;i++) scanf("%d",&a[i]);
    for (int i=1;i<=n;i++) scanf("%d",&b[i]);
    for (int i=1;i<=m;i++)
        scanf("%d%d",&t[i],&c[i]);
    int l=1,r=n,mem=-1;
    while (l<r)
    {
        int mid=(l+r)>>1;
        if (check(mid))
            r=mid;
        else
            l=mid+1;
    }
    if (!check(l))
        return printf("-1"),0;
    else
    {
        printf("%d\n",l);
        check(l);
        for (int i=1;i<=k;i++)
        {
            if (g[i].t==1)
                printf("%d %d\n",g[i].id,t1);
            else
                printf("%d %d\n",g[i].id,t2);
        }
    }
    return 0;
}
