#include <bits/stdc++.h>

using namespace std;
typedef unsigned long long ll;
typedef pair<int,int> pr;
const int maxn = 1000005;

ll bit[maxn];
int bit2[maxn];
int lowbit(int x){
    return x&(-x);
}
void update(int pos,int val){
    while(pos<maxn){
        bit[pos]+=val;
        bit2[pos]++;
        pos+=lowbit(pos);
    }
}
ll sum(int pos,int sub){
    ll res=0;
    while(pos){
        res+=bit[pos];
        res-=sub*bit2[pos];
        pos-=lowbit(pos);
    }
    return res;
}

struct data {
    int id;
    int d;
    int r;
    bool operator<(const data &I) const {
        return d>I.d;
    }
}a[maxn];

struct data2 {
    int day;
    int t;
    bool operator<(const data2 &I) const {
        return t>I.t;
    }
}b[maxn];

int ans[maxn];

int main() {
    int n,m;
    scanf("%d%d",&n,&m);
    for (int i=0;i<m;i++){
        scanf("%d",&b[i].t);
        b[i].day=i+1;
    }
    sort(b,b+m);
    for (int i=0;i<n;i++){
        a[i].id=i+1;
        scanf("%d%d",&a[i].d,&a[i].r);
    }
    sort(a,a+n);
    int j=0;
    for (int i=0;i<n;i++){
        while(j<m&&b[j].t>=a[i].d){
            update(b[j].day,b[j].t);
            j++;
        }
        int l=1,r=m,res=0;
        while(l<=r){
            int mid=(l+r)>>1;
            if (sum(mid,a[i].d)>=a[i].r){
                res=mid;
                r=mid-1;
            }
            else l=mid+1;
        }
        ans[a[i].id]=res;
    }
    for (int i=1;i<n;i++){
        printf("%d ",ans[i]);
    }
    printf("%d\n",ans[n]);
	return 0;
}

     	 	 		    				 	 	 		 	  	