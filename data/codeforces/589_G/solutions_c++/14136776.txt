#include <bits/stdc++.h>
typedef long long LL;
const int N=220000;
LL t1[N];
int t2[N];//From 1!!!
inline int lb(int a){
	return a&(-a);
}
void set(int pos,int n,int a){
	while(pos<=n){
		t1[pos]+=a;
		t2[pos]++;
		pos+=lb(pos);
	}
}
int get(int n,int mx,LL tgt,int pre){
	LL s=0;
	int pos=0;
	while(mx){
		if(pos+mx<=n){
			if(s+t1[pos+mx]-(LL)pre*t2[pos+mx]<tgt){
				s+=t1[pos+mx]-(LL)pre*t2[pos+mx];
				pos+=mx;
			}
		}
		mx>>=1;
	}
	return pos;
}
struct ins{
	int pos,a;
	ins(){}
	ins(int pos,int a):pos(pos),a(a){}
	bool operator<(const ins &x)const{
		return a>x.a;
	}
}in[N];
struct person{
	int pre,need,id;
	bool operator<(const person &x)const{
		return pre>x.pre;
	}
}Q[N];
int out[N];
int main(){
	int n,m;
	scanf("%d%d",&m,&n);
	for(int i=0;i<n;i++){
		int a;
		scanf("%d",&a);
		in[i]=ins(i+1,a);
	}
	std::sort(in,in+n);
	for(int i=0;i<m;i++){
		scanf("%d%d",&Q[i].pre,&Q[i].need);
		Q[i].id=i;
	}
	std::sort(Q,Q+m);
	int j=0;
	int mx=1;
	while((mx<<1)<=n){
		mx<<=1;
	}
	for(int i=0;i<m;i++){
		while(j<n&&in[j].a>=Q[i].pre){
			set(in[j].pos,n,in[j].a);
			j++;
		}
		int got=get(n,mx,Q[i].need,Q[i].pre);
		out[Q[i].id]=(got==n?0:got+1);
	}
	for(int i=0;i<m;i++){
		if(i){
			putchar(' ');
		}
		printf("%d",out[i]);
	}
	putchar('\n');
	return 0;
}
