#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
using namespace std;
#define N 200005
#define ll long long
int g_t()
{
	int x=0,c=getchar();
	for(;c<48||c>57;c=getchar())if(c<0)return 0;
	for(;c>=48;c=getchar())x=x*10+c-48;
	return x;
}
int vr[N],tt,xl=0;
struct di{int ls,rs,s;ll sm;}tr[32*N];
void zt(int cu,int cur,int l,int r,int v)
{
	tr[cu]=tr[cur];
	tr[cu].sm+=v;
	tr[cu].s++;
	if(l==r)return ;
	int m=l+r>>1;
	if(v>m)
	{
		tr[cu].rs=++tt;
		zt(tr[cu].rs,tr[cur].rs,m+1,r,v);
	}
	else
	{
		tr[cu].ls=++tt;
		zt(tr[cu].ls,tr[cur].ls,l,m,v);
	}
}
ll query(int cu,int l,int r,int v)
{
	if(!cu)return 0;
	if(v<=l)
	{
		xl+=tr[cu].s;
		return tr[cu].sm;
	}
	int m=l+r>>1;
	if(v>m)return query(tr[cu].rs,m+1,r,v);
	xl+=tr[tr[cu].rs].s;
	return tr[tr[cu].rs].sm+query(tr[cu].ls,l,m,v);
}
int main()
{
	int x,y,i,l,d,r,m,n=g_t();
	m=g_t();
	bool pr;
	ll dq;
	for(i=1;i<=m;i++)
	{
		x=g_t();
		vr[i]=++tt;
		zt(vr[i],vr[i-1],1,1000000,x);
	}
	for(i=1;i<=n;i++)
	{
		x=g_t();
		y=g_t();
		if(!y)
		{
			cout<<"1 ";
			continue;
		}
		if(x>=1000000)
		{
			cout<<"0 ";
			continue;
		}
		l=1;
		r=m;
		pr=1;
		while(l<r)
		{
			d=l+r>>1;
			xl=0;
			dq=query(vr[d],1,1000000,x+1);
			dq-=(ll)xl*x;
			if(dq<y)l=d+1;
			else
			{
				r=d;
				pr=0;
			}
		}
		if(pr)
		{
			xl=0;
			dq=query(vr[m],1,1000000,x+1);
			dq-=(ll)xl*x;
			if(dq<y)cout<<"0 ";
			else cout<<m<<" ";
		}
		else cout<<l<<" ";
	}
	return 0;
}
		
		

