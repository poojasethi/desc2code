#include <bits/stdc++.h>
using namespace std;
const int N = 4e5+10;
int n,m,need[N],ret[N];
long long cnt[N],sum[N];
void add(int p,int x){
	for(p++;p<N;p+= p&-p)
		cnt[p]++,sum[p]+=x;
}
int quest(long long pre,long long tot){
	int cur=0;
	for(int i=20;i>=0;--i){
		if(cur+ (1<<i)>m)continue;
		if(tot>sum[cur+(1<<i)]-cnt[cur+(1<<i)]*pre){
			tot -= sum[cur+(1<<i)]-cnt[cur+(1<<i)]*pre;
			cur+= 1<<i;
		}
	}
	if(cur==m)return 0;
	return cur+1;
}
void solve(){
	vector<pair<int,int> >eve;
	cin>>n>>m;int t,d,i,ind;
	for(i=0;i<m;++i)
		scanf("%d",&t),eve.push_back(make_pair(t,i));
	for(i=0;i<n;++i)
		scanf("%d%d",&d,&need[i]),
			eve.push_back(make_pair(d,i+m));
	sort(eve.rbegin(),eve.rend());
	for(i=0;i<eve.size();++i){
		if(eve[i].second<m)
			add(eve[i].second,eve[i].first);
		else{
			ind = eve[i].second-m;
			ret[ind]= quest(eve[i].first,need[ind]);
		}
	}
	for(i=0;i<n;++i)
		printf("%d ",ret[i]);
	putchar('\n');
}
int main(){
	solve();
}
