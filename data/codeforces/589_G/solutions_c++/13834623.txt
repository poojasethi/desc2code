#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iostream>
#include<algorithm>
#define maxn 200010

using namespace std;

struct yts
{
	int id,d,r,ans;
}q[maxn];

struct yts1
{
	int x,id;
}a[maxn];

long long c1[maxn],c2[maxn];
int n,m;

bool cmp(yts1 x,yts1 y)
{
	return x.x>y.x;
}

bool cmp1(yts x,yts y)
{
	return x.d>y.d;
}

bool cmp2(yts x,yts y)
{
	return x.id<y.id;
}

int lowbit(int x)
{
	return x&(-x);
}

void add1(int x,long long d)
{
	for (int i=x;i<=n;i+=lowbit(i)) c1[i]+=d;
}

void add2(int x,long long d)
{
	for (int i=x;i<=n;i+=lowbit(i))	c2[i]+=d;
}

long long query1(int x)
{
	long long ans=0;
	for (int i=x;i;i-=lowbit(i)) ans+=c1[i];
	return ans;
}

long long query2(int x)
{
	long long ans=0;
	for (int i=x;i;i-=lowbit(i)) ans+=c2[i];
	return ans;
}

int main()
{
	scanf("%d%d",&m,&n);
	for (int i=1;i<=n;i++) {scanf("%d",&a[i].x);a[i].id=i;}
	sort(a+1,a+n+1,cmp);
	for (int i=1;i<=m;i++) {scanf("%d%d",&q[i].d,&q[i].r);q[i].id=i;}
	sort(q+1,q+m+1,cmp1);
	int cnt=1;
	for (int i=1;i<=m;i++)
	{
		while (cnt<=n && a[cnt].x>=q[i].d)
		{
			add1(a[cnt].id,1);add2(a[cnt].id,a[cnt].x);
			cnt++;
		}
		int l=1,r=n,ans=0;
		while (l<=r)
		{
			int mid=(l+r)/2;
			if (query2(mid)-query1(mid)*(long long)q[i].d>=q[i].r) ans=mid,r=mid-1;
			else l=mid+1;
		}
		q[i].ans=ans;
	}
	sort(q+1,q+m+1,cmp2);
	for (int i=1;i<m;i++) printf("%d ",q[i].ans);printf("%d\n",q[m].ans);
	return 0;
}
