#include <bits/stdc++.h>
#define f first
#define s second
#define ll long long
#define mp make_pair
#define pb push_back

using namespace std;

double eps = 1e-9;
const int INF = 1e9;
const int MAXN = int (1e6+7);

int n, m, ans[MAXN]; 
ll f2[MAXN], f1[MAXN];
vector < vector <int> > t(MAXN);
pair < int, pair <int, int> > a[MAXN];

inline void update(int val, int i) {
	for(; i <= m; i = (i | (i + 1)))
		f1[i] ++, f2[i] += val;
}

inline bool sum(int r, int d, int comp) {
	ll res = 0, cnt = 0;
	for(int i = r; i > 0; i = (i & (i + 1)) - 1)
		cnt += f1[i], res += f2[i];
	return res - cnt * d >= 1ll * comp;
}

int main () {
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);  
    
    scanf("%d%d", &n, &m);
    for(int i = 1, x; i <= m; i ++) {
    	scanf("%d", &x);
    	t[x].pb(i);
    }
    for(int i = 1; i <= n; i ++) {
    	scanf("%d%d", &a[i].f, &a[i].s.f);
    	a[i].s.s = i;
    }
    sort(a + 1, a + n + 1);
    int e = 1000000;
    for(int i = n; i > 0; i --) {
    	int l = 0, r = m + 1;
    	while(e > a[i].f) {
    		for(int j = 0; j < t[e].size(); j ++)
    			update(e, t[e][j]);
    		e --;
    	}
    	while(r - l > 1) {
    		int mid = (l + r) / 2;
    		if(sum(mid, a[i].f, a[i].s.f))
    			r = mid;
    		else
    			l = mid;
    	}
    	if(r == m + 1)
    		ans[a[i].s.s] = 0;
    	else
    		ans[a[i].s.s] = r;
    }
    for(int i = 1; i <= n; i ++)
    	cout << ans[i] << " ";
    return 0;
}