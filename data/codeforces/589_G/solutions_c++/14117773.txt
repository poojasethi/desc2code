#include<cstdio>
#include<algorithm>
const int N=200010,M=600000;
int n,m,i,j,ans[N],R,D;long long v[M],c[M];
struct PA{int t,p;}a[N];
inline bool cmpPA(const PA&a,const PA&b){return a.t>b.t;}
struct PB{int d,r,p;}b[N];
inline bool cmpPB(const PB&a,const PB&b){return a.d>b.d;}
void add(int x,int a,int b,int c,int p){
  v[x]+=p,::c[x]++;
  if(a==b)return;
  int mid=(a+b)>>1;
  if(c<=mid)add(x<<1,a,mid,c,p);else add(x<<1|1,mid+1,b,c,p);
}
int ask(){
  int a=1,b=n,x=1;
  while(a<b){
    int mid=(a+b)>>1;
    if(v[x<<1]-c[x<<1]*D>=R)b=mid,x<<=1;else R-=v[x<<1]-c[x<<1]*D,a=mid+1,x=x<<1|1;
  }
  return a;
}
int main(){
  scanf("%d%d",&m,&n);
  for(i=1;i<=n;i++)scanf("%d",&a[i].t),a[i].p=i;
  for(i=1;i<=m;i++)scanf("%d%d",&b[i].d,&b[i].r),b[i].p=i;
  std::sort(a+1,a+n+1,cmpPA);
  std::sort(b+1,b+m+1,cmpPB);
  for(i=j=1;i<=m;i++){
    while(j<=n&&a[j].t>b[i].d){
      add(1,1,n,a[j].p,a[j].t);
      j++;
    }
    D=b[i].d,R=b[i].r;
    if(v[1]-c[1]*D>=R)ans[b[i].p]=ask();
  }
  for(i=1;i<m;i++)printf("%d ",ans[i]);printf("%d",ans[m]);
  return 0;
}
 	 	    		 	 	 		      			 			