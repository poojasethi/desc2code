#include<bits/stdc++.h>
using namespace std;
#define Rep(i,n) for(int i=1;i<=n;++i)
#define INF 0x3f3f3f3f
#define LL long long
#define fs first
#define se second

pair<int, int>t[201000];
pair<int, pair<int, int> >q[201000];

int ans[201000];
int ll[800800], rr[800800], cnt[800800];
LL sum[800800];

void build(int l, int r, int i) {
	ll[i] = l; rr[i] = r; sum[i] = cnt[i] = 0;
	if(l == r) return;
	int m = l + r >> 1, ls = i << 1;
	build(l, m, ls); build(m+1, r, ls|1);
}

void update(int k, int v, int i) {
	sum[i] += v; cnt[i] += 1;
	if(ll[i] == rr[i]) return;
	int m = ll[i] + rr[i] >> 1, ls = i << 1, rs = ls | 1;
	if(k <= m) update(k, v, ls);
	else update(k, v, rs);
}

int query(int x, int v, int i) {
	if(ll[i] == rr[i]) return ll[i];
	int m = ll[i] + rr[i] >> 1, ls = i << 1, rs = ls | 1;
	LL temp = x - sum[ls] + (LL)cnt[ls]*v;
	if(temp <= 0) return query(x, v, ls);
	else return query(temp, v, rs);
}

int main()
{
	int n, m;
	cin >> n >> m;
	Rep(i, m) scanf("%d", &t[i].fs), t[i].se = i;
	sort(t+1, t+1+m);
	t[0] = make_pair(0, 0);
	Rep(i, n) scanf("%d%d", &q[i].fs, &q[i].se.fs), q[i].se.se = i;
	sort(q+1, q+1+n);
	build(1, m, 1);
	int p = m;
	for(int i = n; i; --i) {
		while(t[p].fs > q[i].fs) update(t[p].se, t[p].fs, 1), --p;
		if(q[i].se.fs > sum[1] - (LL)q[i].fs * cnt[1]) ans[q[i].se.se] = 0;
		else ans[q[i].se.se] = query(q[i].se.fs, q[i].fs, 1);
	}
	cout << ans[1];
	for(int i = 2; i <= n; ++i) printf(" %d", ans[i]);
	puts("");
	return 0;
}
