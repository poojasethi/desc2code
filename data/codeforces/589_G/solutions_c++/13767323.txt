#include <bits/stdc++.h>
#define ii pair< int, int>
#define iii pair< ii, int>
#define x first
#define y second
#define xx x.x
#define xy x.y
using namespace std;

typedef long long LL;

const int N = 200005;
const int M = 200005;

int n, m, res[N];
ii a[M];
iii b[N];

struct bit{
    LL t[M];
    void up( int i, int x)
    {
        for( ; i <= m; i += i & (-i))
            t[i] += x;
    }

    LL get( int i)
    {
        LL ans = 0;
        for( ; i >= 1; i -= i & (-i))
            ans += t[i];
        return ans;
    }
} s, num;

int BS( int x, LL y)
{
    int l = 1;
    int r = m;
    int ans = 0, mid;
    while(l <= r)
    {
        mid = (l + r) /2;
        if (s.get(mid) - 1ll * num.get(mid) * x >= y) ans = mid, r = mid - 1;
        else l = mid + 1;
    }
    return ans;
}

int main()
{

    scanf("%d %d", &n, &m);

    for(int i = 1; i <= m; i ++)
        scanf("%d", &a[i].x), a[i].y = i;

    for(int i = 1; i <= n; i ++)
        scanf("%d %d", &b[i].xx, &b[i].xy), b[i].y = i;

    for(int i = 1; i <= m; i ++)
    {
        s.up( i, a[i].x);
        num.up( i, 1);
    }

    sort( a + 1, a + m + 1);
    sort( b + 1, b + n + 1);

    int L = 1;
    for(int i = 1; i <= n; i ++)
    {
        while(a[L].x <= b[i].xx) {
            s.up( a[L].y, - a[L].x);
            num.up( a[L].y, - 1);
            if (L == m) break;
            L ++;
        }
        res[b[i].y] = BS( b[i].xx, b[i].xy);
    }

    for(int i = 1; i <= n; i ++) printf("%d ", res[i]);
    return 0;
}
