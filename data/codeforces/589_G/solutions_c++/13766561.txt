#include <bits/stdc++.h>
#define mid (l+r>>1)
#define lc (o<<1)
#define rc (o<<1|1)
using namespace std;
typedef long long LL;
const int maxn = 200010;

vector<LL> num[maxn*4];
vector<LL> sum[maxn*4];
int a[maxn], n, q, qd, qr, _ans;
int ans[maxn];

void init(int o, int l, int r)
{
    num[o].clear(); sum[o].clear();
    for(int i = l; i <= r; i++)
        num[o].push_back(a[i]);
    sort(num[o].begin(), num[o].end());
    sum[o].push_back(num[o][0]);
    for(int i = 1; i < num[o].size(); i++)
        sum[o].push_back(sum[o][i-1]+num[o][i]);

    if(l == r) return;
    int m = mid;
    init(lc, l, m);
    init(rc, m+1, r);
}

LL getsum(int o)
{
    int t = upper_bound(num[o].begin(), num[o].end(), qd)-num[o].begin();
    LL ret = sum[o].back();
    if(t) ret -= sum[o][t-1];
    ret -= ((LL)sum[o].size()-t)*qd;
    return ret;
}

void query(int o, int l, int r)
{
    if(l == r) {
        if(qr > num[o][0]-qd) _ans = 0;
        else _ans = l;
        return;
    }
    int m = mid;
    LL tmp = getsum(lc);
    if(tmp >= qr) query(lc, l, m);
    else {
        qr -= tmp;
        query(rc, m+1, r);
    }
}

int main()
{
    //freopen("g.txt", "r", stdin);
    while(cin >> q >> n)
    {
        for(int i = 1; i <= n; i++)
            scanf("%d", a+i);
        init(1, 1, n);

        for(int i = 0; i < q; i++)
        {
            scanf("%d%d", &qd, &qr);
            query(1, 1, n);
            printf("%d%c", _ans, i==q-1 ? '\n':' ');
        }
    }
    return 0;
}
