#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;
#define mp make_pair
#define pii pair<int,int>
#define pb push_back
#define N 233333

vector<pii> vec;
struct Query
{
    int d,r,id;
    bool operator < (const Query &it) const
    {
        return d>it.d;
    }
}q[N];
int ans[N],cnt[6666666];
long long sum[6666666];

void update(int i,int l,int r,int x,int d)
{
    if (l==r) sum[i]=d,cnt[i]=1;
    else
    {
        int mid=(l+r)>>1;
        if (x<=mid) update(i<<1,l,mid,x,d);
        else update((i<<1)|1,mid+1,r,x,d);
        sum[i]=sum[i<<1]+sum[(i<<1)|1];
        cnt[i]=cnt[i<<1]+cnt[(i<<1)|1];
    }
}

int query(int i,int l,int r,int x,int d)
{
    if (sum[i]-1ll*x*cnt[i]<d) return 0;
    if (l==r) return l;
    int mid=(l+r)>>1;
    long long tmp=sum[i<<1]-1ll*x*cnt[i<<1];
    if (tmp>=d) return query(i<<1,l,mid,x,d);
    return query((i<<1)|1,mid+1,r,x,d-tmp);
}

int main()
{
    int n,m,a,p;
    scanf("%d%d",&m,&n);
    for (int i=1;i<=n;++i)
    {
        scanf("%d",&a);
        vec.pb(mp(a,i));
    }
    p=n-1;
    sort(vec.begin(),vec.end());
    for (int i=1;i<=m;++i)
        scanf("%d%d",&q[i].d,&q[i].r),q[i].id=i;
    sort(q+1,q+m+1);
    for (int i=1;i<=m;++i)
    {
        for (;p>=0&&vec[p].first>q[i].d;--p) update(1,1,4000000,vec[p].second,vec[p].first);
        ans[q[i].id]=query(1,1,4000000,q[i].d,q[i].r);
    }
    for (int i=1;i<=m;++i) printf("%d%c",ans[i],i==m?'\n':' ');
    return 0;
}

 				 	   		 	 	 	   				 	 		