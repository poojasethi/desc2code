#include<bits/stdc++.h>
#define FT first
#define SC second
#define PB push_back
#define MP make_pair
#define REP(i, l, r) for(int i = (l); i <= (r); i++)
#define PER(i, r, l) for(int i = (r); i >= (l); i--)
#define DFOR(i, x) for(int i = hd[x]; i; i = e[i].nxt)
#define MEM(a) memset(a, 0, sizeof(a));

using namespace std;
typedef long long LL;
typedef long double LD;
const int inf = 0x7fffffff;
const int MOD = 1000000007;
const int N = 200000 + 5, M = 1000000 + 5, S = 25 * N;
int lc[S], rc[S], root[N], a[N], ans[N], tot;
LL e[S], s[S];
void update(int &x, int &y, int l, int r, int v){
	if (y == 0) y = ++tot;
	e[y] = e[x] + 1;
	s[y] = s[x] + v;
	if (l == r) return;
	int mid = (l + r) >> 1;
	if (v <= mid) update(lc[x], lc[y], l, mid, v), rc[y] = rc[x];
	else update(rc[x], rc[y], mid + 1, r, v), lc[y] = lc[x];
}
LL query(int x, int l, int r, int v){
	if (x == 0 || l == r) return s[x] - e[x] * v;
	int mid = (l + r) >> 1;
	if (v <= mid) return query(lc[x], l, mid, v) + s[rc[x]] - e[rc[x]] * v;
	else return query(rc[x], mid + 1, r, v);
}
int main(){
	int n, m;
	scanf("%d%d", &m, &n);
	REP(i, 1, n) scanf("%d", &a[i]);
	REP(i, 1, n) update(root[i - 1], root[i], 0, M, a[i]); 
	REP(i, 1, m){
		int x, y;
		scanf("%d%d", &x, &y);
		int l = 1, r = n + 1;
		while (l < r){
			int mid = (l + r) >> 1;
			if (query(root[mid], 0, M, x) >= (LL)y) r = mid;
			else l = mid + 1;
		}
		if (l == n + 1) ans[i] = 0; else ans[i] = l;
	}
	REP(i, 1, m) printf("%d%c", ans[i], i == m ? '\n' : ' ');
}
