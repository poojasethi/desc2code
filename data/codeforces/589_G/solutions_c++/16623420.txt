#include<bits/stdc++.h>
#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define endl '\n'
#define endll puts("")
#define mod 1000000007
#define mp3(x,y,z) mp(x,mp(y,z))
#define pii pair< int , int > 
#define orta ((bas+son)/2)
#define sol (root+root)
#define sag (root+root+1)
using namespace std;
typedef long long ll;
const int N = 2e5+3;
vector<ll> st[4*N],v[4*N];
ll n,m,i,j,k,l,s,t,d,u,ii,jj,x,y,z,h[N],hh[N];
void in(int root,int bas,int son)
{
	if(bas==son){st[root].pb(h[bas]);v[root].pb(h[bas]);return;}
	in(sol,bas,orta);
	in(sag,orta+1,son);
	ll i,t=0;
	for(i=0;i<st[sol].size();i++)
		st[root].pb(st[sol][i]);
	for(i=0;i<st[sag].size();i++)
		st[root].pb(st[sag][i]);
	sort(st[root].begin(),st[root].end());
	for(i=0;i<st[root].size();i++)
	{t+=st[root][i];v[root].pb(t);}
}
ll f(int root,int bas,int son,int x,int y)
{
	if(bas==son)return bas;
	int k=upper_bound(st[sol].begin(),st[sol].end(),x)-st[sol].begin();
	ll s=v[sol][orta-bas]-(k?v[sol][k-1]:0)-x*(orta-bas+1-k);
	if(s>=y)return f(sol,bas,orta,x,y);
	return f(sag,orta+1,son,x,y-s);
}
int main()
{
	cin>>m>>n;
	for(i=1;i<=n;i++)
		scanf("%lld",h+i);
	in(1,1,n);
	while(m--)
	{
		scanf("%lld%lld",&x,&y);
		k=upper_bound(st[1].begin(),st[1].end(),x)-st[1].begin();
		s=v[1][n-1]-(k?v[1][k-1]:0)+(k-n)*x;
	//	cout<<k<<' '<<s<<endl;
		if(s<y){printf("0 ");continue;}
		printf("%lld ",f(1,1,n,x,y));
	}
	
}
