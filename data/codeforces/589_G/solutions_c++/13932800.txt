#include <bits/stdc++.h>

using namespace std;

#define ll long long

struct node
{
    int d,r,id;
    node(int d,int r,int id):d(d),r(r),id(id){}
    node(){}
    bool operator <(const node &x) const
    {
        return d>x.d;
    }
};

const int N=2000005;
vector <node> a;
int n,m,out[N];
ll sum[N],num[N];

void add(ll *a,int i,int l)
{
    for (;i<=m;i+=i&-i)
        a[i]+=l;
}

ll ask(ll *a,int i)
{
    ll ans=0;
    for (;i!=0;i-=i&-i)
        ans+=a[i];
    return ans;
}

void work(int all,int len,int x)
{
    int l=1,r=m,mid,ans=0;
    ll t,d;
    while (l<=r)
    {
        mid=(l+r) >>1;
        t=ask(sum,mid),d=ask(num,mid);
        if (t>=all+len*d) r=mid-1,ans=mid;
          else l=mid+1;
    }
    out[x]=ans;
}

int main()
{
    int i,x,y;
    scanf("%d%d",&n,&m);
    for (i=1;i<=m;++i)
        scanf("%d",&x),a.push_back(node(x,0,-i));
    for (i=1;i<=n;++i)
        scanf("%d%d",&x,&y),a.push_back(node(x,y,i));
    sort(a.begin(),a.end());
    for (i=0;i<n+m;++i)
    {
        int id=a[i].id;
        if (id<0)
            add(sum,-id,a[i].d),add(num,-id,1);
        else
            work(a[i].r,a[i].d,id);
    }
    for (i=1;i<=n;++i)
        printf("%d ",out[i]);
    cout <<endl;
    return 0;
}
