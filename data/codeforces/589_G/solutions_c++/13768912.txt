#include <bits/stdc++.h>
using namespace std;

const int maxn=200005;
int t[maxn],d[maxn],ans[maxn],r[maxn],idx[maxn],idxd[maxn],n,m;
struct node{
	long long v;
	int num;
}tr[maxn*4];

bool cmp(int x,int y){
	return t[x]<t[y];
}

bool cmpd(int x,int y){
	return d[x]<d[y];
}

void insert(int p,int l,int r,int pos,int x,int y){
	if (l==r){
		tr[p].v=x;
		tr[p].num=y;
		return;
	}
	int mid=(l+r)/2;
	if (pos<=mid) insert(p*2,l,mid,pos,x,y);
	else insert(p*2+1,mid+1,r,pos,x,y);
	tr[p].v=tr[p*2].v+tr[p*2+1].v;
	tr[p].num=tr[p*2].num+tr[p*2+1].num;
}

int find(int p,int l,int r,long long x,long long delta){
	if (tr[p].v-tr[p].num*delta<x) return 0;
	if (l==r) return l;
	int mid=(l+r)/2;
	if ((tr[p*2].v-tr[p*2].num*delta)>=x) return find(p*2,l,mid,x,delta);
	else return find(p*2+1,mid+1,r,x-(tr[p*2].v-tr[p*2].num*delta),delta);
}

int main(){
	int i,j,k,p;
	scanf("%d%d",&n,&m);
	for (i=1;i<=m;i++){
		scanf("%d",&t[i]);
		insert(1,1,m,i,t[i],1);
		idx[i]=i;
	}
	sort(idx+1,idx+m+1,cmp);
	for (i=1;i<=n;i++){
		scanf("%d%d",&d[i],&r[i]);
		idxd[i]=i;
	}
	sort(idxd+1,idxd+n+1,cmpd);
	p=1;
	for (i=1;i<=n;i++){
		k=idxd[i];
		for (j=p;j<m;j++)
			if (t[idx[j]]>d[k]) break;
		for (int z=p;z<=j-1;z++)
			insert(1,1,m,idx[z],0,0);
		p=j;
		//cout<<tr[1].v<<" "<<tr[1].num<<endl;
		ans[k]=find(1,1,m,r[k],d[k]);
	}
	for (i=1;i<n;i++) printf("%d ",ans[i]);
	printf("%d\n",ans[n]);

	return 0;
}