#include<bits/stdc++.h>

using namespace std;

#define tm (tl + tr >> 1)
#define N 200005

vector < long long > p[4*N];

vector < int > s[4*N];

int A[N], i, j, k, n, m, a, b;

long long x;

void bld(int v, int tl, int tr){
   if(tl == tr){
      s[v].push_back(A[tl]);
      p[v].push_back(A[tl]);
      return;
   }
   bld(v*2, tl, tm);  bld(v*2+1, tm+1, tr);
   for(i=j=k=0; i<tr-tl+1; i++){
      if(j != s[v*2].size() && (k == s[v*2+1].size() || s[v*2][j] < s[v*2+1][k]))
         s[v].push_back(s[v*2][j++]);
      else
         s[v].push_back(s[v*2+1][k++]);

      p[v].push_back(s[v][i]);
      if(i) p[v][i] += p[v][i-1];
   }
}

int qry(int v, int tl, int tr, int k){
    if(tl == tr)
        return tl;

    i = upper_bound(s[v*2].begin() , s[v*2].end() , a) - s[v*2].begin();

    x = p[v*2][tm - tl] - ( i ? p[v*2][i-1] : 0 ) - (tm - tl + 1 - i) * a;

    if(x >= k)
        return qry(v*2, tl, tm, k);
    else
        return qry(v*2+1, tm+1, tr, k - x);
}

main(){

   scanf("%d%d", &n, &m);

   for(i=1;i<=m;i++)
      scanf("%d", &A[i]);

   bld(1,1,m);

   while(n--){

      scanf("%d%d",&a,&b);

      i = upper_bound(s[1].begin() , s[1].end() , a) - s[1].begin();

      x = p[1][m-1] - ( i ? p[1][i-1] : 0 ) - (m - i) * a;

      if(x < b) {  printf("0 "); continue;  }

      printf("%d ", qry(1,1,m,b));

   }

   return 0;
}