#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
int n, m, r[200000], treec[200000], ans[200000];
long long trees[200000];
int main()
{
    scanf("%d%d", &n, &m);
    vector<pair<int, int> > t(m), d(n);
    for(int i = 0; i < m; ++i)
    {
        scanf("%d", &t[i].first);
        t[i].second = i;
    }
    sort(t.rbegin(), t.rend());
    for(int i = 0; i < n; ++i)
    {
        scanf("%d%d", &d[i].first, r + i);
        d[i].second = i;
    }
    sort(d.rbegin(), d.rend());
    for(int i = 0, j = 0; i < n; ++i)
    {
        for(; j < m && t[j].first >= d[i].first; ++j)
            for(int x = t[j].second; x < m; x |= x + 1)
            {
                trees[x] += t[j].first;
                treec[x]++;
            }
        int a = -1, b = m;
        while(b - a > 1)
        {
            int x = (a + b) >> 1;
            long long s = 0;
            for(int y = x; y >= 0; y = ((y + 1) & y) - 1)
                s += trees[y] - 1ll * treec[y] * d[i].first;
            if(s >= r[d[i].second])
                b = x;
            else
                a = x;
        }
        ans[d[i].second] = b == m ? 0 : b + 1;
    }
    for(int i = 0; i < n; ++i)
        printf("%d ", ans[i]);
    puts("");
    return 0;
} 
