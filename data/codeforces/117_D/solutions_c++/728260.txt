#include <iostream>
#include <cstdio>
#include <algorithm>

using namespace std;

typedef long long int64;
int64 A, B, U, V, MOD;

int64 query(int64 a, int64 b, int64 mod, int64 rem) {
  // cout << a << " " << b << " " << mod << " " << rem << endl;
  if (a >= A && b <= B) {
    int64 low = (max(0LL, U - rem) + mod - 1) / mod;
    int64 high = min((V - rem) / mod, b - a);
    if (V < rem || low > high) return 0LL;
    // cout << "low and high: " << low << " " << high << endl;
    int64 x = high - low + 1;
    int64 y = low + high;
    if (x % 2 == 0) x /= 2;
    else y /= 2;
    x %= MOD; y %= MOD;
    return (x * y % MOD * (mod % MOD) + (high - low + 1) % MOD * (rem % MOD)) % MOD;
  }
  int64 ret = 0;
  int64 c = (a + b) / 2;
  if (A <= c) ret += query(a, c, mod << 1, rem);
  if (B >= c + 1) ret += query(c + 1, b, mod << 1, rem + mod);
  return ret % MOD;
}

int main() {
  int64 n;
  int m;
  scanf("%I64d %d %I64d", &n, &m, &MOD);
  while (m--) {
    scanf("%I64d %I64d %I64d %I64d", &A, &B, &U, &V);
    printf("%I64d\n", query(1, n, 1, 1));
  }
  return 0;
}
