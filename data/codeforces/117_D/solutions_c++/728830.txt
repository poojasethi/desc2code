#include<stdio.h>
#include<iostream>

using namespace std;

typedef long long LL;
LL n,m,p,ans,ql,qr,qb,qt;
void get(LL minnum,LL deg,LL len)
{
    LL maxnum=minnum+deg*(len-1);
    if(qt<minnum)return ;
    if(qb>maxnum)return ;
    LL s1,s2;
    if(qb<=minnum)s1=minnum;
    else if((qb-minnum)%deg==0)s1=qb;
    else s1=((qb-minnum)/deg+1)*deg+minnum;

    if(qt>=maxnum)s2=maxnum;
    else if((maxnum-qt)%deg==0)s2=qt;
    else s2=maxnum-((maxnum-qt)/deg+1)*deg;

    LL nn=(s2-s1)/deg;

    LL nn1=nn+1;
    s1=s1%p;
    s1=(s1*(nn1%p))%p;
    if(nn&1)nn1>>=1;
    else nn>>=1;
    nn%=p;
    nn1%=p;
    nn=(nn*nn1)%p;


    deg=deg%p;
    deg=(deg*nn)%p;
    ans=(ans+s1+deg)%p;
}
void f(LL li,LL minnum,LL deg,LL len)
{
    LL ri=li+len-1;
    if(ql<=li&&qr>=ri)
    {
        get(minnum,deg,len);
        return ;
    }
    LL ll=(len+1)>>1;
    LL mi=li+ll-1;
    if(ql<=mi)f(li,minnum,deg<<1,ll);
    if(qr>mi)f(li+ll,minnum+deg,deg<<1,len-ll);
}
void solve()
{
    ans=0;
    f(1,1,1,n);
    cout<<ans<<"\n";
}
int main()
{
    cin>>n>>m>>p;
    while(m--)
    {
        cin>>ql>>qr>>qb>>qt;
        solve();
    }

    return 0;
}
