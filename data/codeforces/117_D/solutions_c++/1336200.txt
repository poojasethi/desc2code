#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

typedef long long LL;
LL n, m, MOD;
LL l, r, u, v;

LL f(LL a, LL d, LL n1, LL n2) {
	//printf("calc a=%I64d, d=%I64d %I64d %I64d\n", a, d, n1, n2);
	d%=MOD;
	LL f1=(n1+n2), f2=(n2-n1+1), t;
	if(f1%2==0) t=1,f1/=2; else t=2,f2/=2;
	
	LL ret = (t*a+f1%MOD*d%MOD)%MOD * (f2%MOD) % MOD;
	return ret;
}

LL calc(LL a, LL d, LL N) {
	if(a>v) return 0;
	LL t2 = min((v-a)/d, N-1);
	if(a>=u) return f(a,d,0,t2);
	return f(a,d, min((u-1-a)/d, N-1)+1, t2);
}

LL ask(LL L, LL R, LL a, LL d) {
	//printf("[%I64d,%I64d,%I64d,%I64d]\n", L, R, a, d);
	if(l<=L && r>=R)
		return calc(a, d, (R-L+1));
	LL M=(L+R)/2;
	LL ret=0;
	if(l<=M) ret += ask(L, M, a, 2*d);
	if(r>M) ret += ask(M+1, R, a+d, 2*d);
	ret %= MOD;
	return ret;
}

int main(void) {
	scanf("%I64d%I64d%I64d", &n, &m, &MOD);
	while(m--) {
		scanf("%I64d%I64d%I64d%I64d", &l, &r, &u, &v);
		LL ans = ask(1, n, 1, 1);
		printf("%I64d\n", ans);
	}
	return 0;
}

