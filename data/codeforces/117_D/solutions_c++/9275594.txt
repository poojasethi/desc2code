#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define int64 long long
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,m,mo,s;
int64 n,u,v,an;
inline int64 work(int64 r,int64 hou,int64 cen,int64 x) {
	if (x<0) return 0;
	int64 R=x/cen-(x%cen<hou);
	if (R<0) return 0;
	r=min(r,R);
	int64 p2=r&1?(r+1)/2%mo*(r%mo):r/2%mo*((r+1)%mo);
	hou%=mo,r%=mo,cen%=mo;
	return (r+1+hou*(r+1)%mo+p2%mo*cen%mo)%mo;
}
void dfs(int64 y,int64 l,int64 r,int64 hou,int64 cen) {
	if (l==0&&r==y) {
		an+=work(y,hou,cen,v)-work(y,hou,cen,u-1);
		return;
	}
	int64 mid=y/2;
	if (l<=mid) dfs(mid,l,min(mid,r),hou,cen*2);
	if (mid<r) dfs(y-(mid+1),max(mid+1,l)-(mid+1),r-(mid+1),hou+cen,cen*2);
}
int main() {
	//freopen("117d.in","r",stdin);
	scanf("%I64d%d%d",&n,&m,&mo);
	n--;
	For(i,1,m) {
		int64 l,r;
		scanf("%I64d%I64d%I64d%I64d",&l,&r,&u,&v);
		l--,r--,u--,v--;
		an=0;
		dfs(n,l,r,0,1);
		printf("%I64d\n",(an%mo+mo)%mo);
	}
	return 0;
}
