#include<cstdio>
#include<algorithm>

using namespace std;

#define long long long

long lim;
long n, mod;
int m;

inline long F(long a, long d, long want, long n){
  if(want == 0 or lim < a){
    return 0;
  }
  if(n == want){
    n = min(n, (lim - a) / d + 1);
    long z = 2 * a + (n - 1) * d;
    ((z & 1)? n: z) >>= 1;
    return (n % mod) * (z % mod) % mod;
  }
  long mid = (n + 1) >> 1;
  if(want <= mid){
    return F(a, d << 1, want, mid);
  }
  return (F(a, d << 1, mid, mid) + F(a + d, d << 1, want - mid, n - mid)) % mod;
}

inline long cal(long r, long v){
  lim = min(v, n);
  return F(1, 1, r, n);
}

int main(){
  scanf("%I64d %d %I64d", &n, &m, &mod);
  for(; m --> 0; ){
    long l, r, u, v;
    scanf("%I64d %I64d %I64d %I64d", &l, &r, &u, &v);
    l--, u--;
    printf("%I64d\n", (((cal(r, v) - cal(l, v)) - (cal(r, u) - cal(l, u))) % mod + mod) % mod);
  }
}
