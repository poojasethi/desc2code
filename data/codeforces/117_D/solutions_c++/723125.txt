#include <iostream>

using namespace std;

#define ll long long

ll MOD;

inline ll mul(ll a, ll b) { return ((a%MOD)*(b%MOD))%MOD; }

ll get_sum(ll p, ll q, ll mx) {
	if (mx < q) return 0;
	mx -= q;
	ll add = mul(mx/p+1, q);
	ll cnt = mx/p;
	if (cnt%2) add += mul(p, mul(cnt, (cnt+1)/2)); else add += mul(p, mul(cnt/2, cnt+1));
	return add%MOD;
}

ll n, m;
ll mn, mx, x, y;

ll calc(ll lo, ll hi, ll p, ll q) {
	if (y < lo || hi < x) return 0;
	if (x <= lo && hi <= y) return (get_sum(p, q, mx)-get_sum(p, q, mn-1)+MOD)%MOD;
	ll mid = (lo+hi)/2;
	return (calc(lo, mid, 2*p, q)+calc(mid+1, hi, 2*p, q+p))%MOD;
}

int main() {
	ios::sync_with_stdio(false);
	cin >> n >> m >> MOD;
	while (m--) {
		cin >> x >> y >> mn >> mx;
		if (mx > n) mx = n;
		if (mn > n)
			cout << 0 << endl;
		else
			cout << calc(1, n, 1, 1) << endl;
	}
	return 0;
}

