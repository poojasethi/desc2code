#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
#define lson l, m, p << 1, s | p
#define rson m + 1, r, p << 1, s
#define root 1, N, 1, 0
LL L, R, U, V;
LL N, M, MOD;
LL get_sum(const LL &l, const LL &r, const LL &p, const LL &s) {
	//cout << l << ' ' << r << ' ' << p << ' ' << s << endl;
	if (L <= l && r <= R) {
		LL a, b;
		a = U / p * p - s;
		while (a < U) a += p;
		a = max(p - s, a);
		b = (V / p + 2) * p - s;
		while (b > V) b -= p;
		b = min(p * (r - l + 1) - s, b);
		if (a > b) return 0;
		if (a + b & 1) return ((a + b) % MOD) * (((b - a) / p + 1 >> 1) % MOD) % MOD;
		else return ((a + b >> 1) % MOD) * (((b - a) / p + 1) % MOD) % MOD;
	}
	LL m = r - (r - l + 1 >> 1), sum = 0;
	if (L <= m) sum += get_sum(lson);
	if (m < R) sum += get_sum(rson);
	return sum % MOD;
}

int main() {
	ios::sync_with_stdio(0);
	while (cin >> N >> M >> MOD) {
		while (M--) {
			cin >> L >> R >> U >> V;
			cout << get_sum(root) << endl;
		}
	}
	return 0;
}
		     	 	 							    		