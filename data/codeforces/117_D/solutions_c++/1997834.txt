#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

using namespace std;

typedef long long ll;

ll n,m,mod;

ll dfs(ll ls,ll rs,ll l,ll r,ll u,ll v,ll w,ll d)
{
	if(ls==l && rs==r)
	{
		ll tl=(u-w+(1ll<<d)-1)/(1ll<<d);
		ll tr=(v-w)/(1ll<<d);
		tl=max(tl,1ll);
		tr=min(tr,r-l+1);
		if(tr<tl) return 0;
		ll s1=tr-tl+1;
		ll s2=(tl+tr);
		if(s1%2==0) s1/=2;
		else s2/=2;
		s1%=mod;s2%=mod;
		ll s=s1*s2%mod;
		ll ret=(1ll<<d)%mod*s%mod+(tr-tl+1)%mod*w%mod;
		ret%=mod;
		ret+=mod;
		ret%=mod;	
		return ret;
	}
	ll mid=(l+r)>>1;
	if(rs<=mid) return dfs(ls,rs,l,mid,u,v,w-(1ll<<d),d+1);
	else if(ls>mid) return dfs(ls,rs,mid+1,r,u,v,w,d+1);
	return ((dfs(ls,mid,l,mid,u,v,w-(1ll<<d),d+1)+dfs(mid+1,rs,mid+1,r,u,v,w,d+1))%mod+mod)%mod;
}

int main()
{
	cin>>n>>m>>mod;
	for(int i=0;i<m;i++)
	{
		ll l,r,u,v;
		cin>>l>>r>>u>>v;
		cout<<dfs(l,r,1,n,u,v,0,0)<<endl;
	}
	return 0;
}
