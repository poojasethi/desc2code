#!/usr/bin/env python
from sys import stdin as cin

def read_input():
    e, s, n, m = map(int, next(cin).split())
    txs = [map(int, next(cin).split()) for _ in range(n)]
    fs = map(int, next(cin).split())

    txs = [(t, e-x) for t,x in txs if e>x]
    fs = [e-f for f in fs]

    return s, txs, fs


def solve_positive(capacity, gas_stations, starts):
    segments = [ [0, 0], [3, capacity] ]
    for gs in sorted(gas_stations, key=lambda e: e[1]):
        if gs[1] > segments[-1][1]: # this and all further gas stations are unreachable
            break
        while gs[0] >= segments[-1][0] and gs[1] <= segments[-2][1]: # last gas station useless
            segments.pop()
        if gs[0] > segments[-1][0]: # new gas station is better than previous one
            segments[-1][1] = gs[1]
        segments.append([gs[0], gs[1]+capacity])

    cnt = [0] * 4
    answer = {}
    seg_it = iter(segments)
    seg = next(seg_it)
    seg_start = 0
    try:
        for start in sorted(starts):
            while start > seg[1]:
                cnt[seg[0]] += seg[1] - seg_start
                seg_start = seg[1]
                seg = next(seg_it)
            answer[start] = cnt[:]
            answer[start][seg[0]] += start - seg_start
    except StopIteration: pass

    return answer


def main():
    capacity, gas_stations, starts = read_input()

    answer = solve_positive(capacity, gas_stations, starts)

    return [answer.get(start, [-1]*4) for start in starts]


print '\n'.join(map('{0[1]} {0[2]}'.format, main()))
