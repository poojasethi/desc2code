/* 581E */
#include <iostream>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>
#include <deque>
#include <algorithm>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#include <functional>
#include <iterator>
#include <iomanip>
using namespace std;
//#pragma comment(linker,"/STACK:102400000,1024000")

#define sti				set<int>
#define stpii			set<pair<int, int> >
#define mpii			map<int,int>
#define vi				vector<int>
#define pii				pair<int,int>
#define vpii			vector<pair<int,int> >
#define rep(i, a, n) 	for (int i=a;i<n;++i)
#define per(i, a, n) 	for (int i=n-1;i>=a;--i)
#define clr				clear
#define pb 				push_back
#define mp 				make_pair
#define fir				first
#define sec				second
#define all(x) 			(x).begin(),(x).end()
#define SZ(x) 			((int)(x).size())
#define lson			l, mid, rt<<1
#define rson			mid+1, r, rt<<1|1

const int maxn = 2e5+5;
sti st;
pii P[maxn];
__int64 sum[4][maxn<<2];
int delta[4][maxn<<2];
int Q[maxn];
int a[maxn<<2], an = 0;

int main() {
	ios::sync_with_stdio(false);
	#ifndef ONLINE_JUDGE
		freopen("data.in", "r", stdin);
		freopen("data.out", "w", stdout);
	#endif
	
	int e, s, n, m;
	
	scanf("%d %d %d %d", &e, &s, &n, &m);
	st.insert(e);
	rep(i, 0, n) {
		scanf("%d %d", &P[i].fir, &P[i].sec);
		st.insert(P[i].sec);
		st.insert(P[i].sec+s);
	}
	rep(i, 0, m) {
		scanf("%d", &Q[i]);
		st.insert(Q[i]);
		st.insert(Q[i]+s);
	}
	
	for (sti::iterator iter=st.begin(); iter!=st.end(); ++iter)
		a[an++] = *iter;
	
	int l, r, tmp;
	
	rep(i, 0, n) {
		l = lower_bound(a, a+an, P[i].sec) - a;
		r = lower_bound(a, a+an, P[i].sec+s) - a;
		#ifndef ONLINE_JUDGE
		printf("l = %d, r = %d\n", l, r);
		#endif
		rep(j, 1, P[i].fir+1) {
			delta[j][l]++;
			delta[j][r]--;
		}
	}
	
	rep(j, 1, 4) {
		rep(i, 1, an)
			delta[j][i] += delta[j][i-1];
		rep(i, 1, an) {
			tmp = delta[j][i-1]>0 ? a[i]-a[i-1] : 0;
			sum[j][i] = sum[j][i-1] + tmp;
		}
	}
	
	int ie = lower_bound(a, a+an, e) - a;
	int ans1, ans2;
	__int64 tot, s1, s2, s3;
	
	rep(i, 0, m) {
		r = lower_bound(a, a+an, Q[i]+s) - a;
		if (r >= ie) {
			ans1 = ans2 = 0;
		} else {
			tot = a[ie] - a[r];
			s3 = sum[3][ie] - sum[3][r];
			s2 = sum[2][ie] - sum[2][r];
			s1 = sum[1][ie] - sum[1][r];
			
			if (s3 == tot) {
				ans1 = ans2 = 0;
			} else if (s2 == tot) {
				ans1 = 0;
				ans2 = s2-s3;
			} else if (s1 == tot) {
				ans1 = s1-s2;
				ans2 = s1 - s3 - ans1;
			} else {
				ans1 = ans2 = -1;
			}
		}
		printf("%d %d\n", ans1, ans2);
	}
	
	#ifndef ONLINE_JUDGE
		printf("time = %d.\n", (int)clock());
	#endif
	
	return 0;
}
