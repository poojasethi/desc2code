#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std ;

#define N 200000 + 10

vector < int > Q[5] ;

int f[N][3] ;
int e , s , n , m ;

int Calc( int k , int x ) {
	int w = lower_bound( Q[k].begin() , Q[k].end() , x ) - Q[k].begin() ;
	return f[w][k] + max( Q[k][w] - x - s , 0 ) ;
}

int main() {
	//freopen( "test.in" , "r" , stdin ) ;
	//freopen( "test.out" , "w" , stdout ) ;
	scanf( "%d%d%d%d" , &e , &s , &n , &m ) ;
	for (int i = 1 ; i <= n ; i ++ ) {
		int t , x ;
		scanf( "%d%d" , &t , &x ) ;
		if ( x >= e ) continue ;
		for (int j = 0 ; j < t ; j ++ ) Q[j].push_back(x) ;
	}
	for (int j = 0 ; j < 3 ; j ++ ) {
		Q[j].push_back(e) ;
		sort( Q[j].begin() , Q[j].end() ) ;
		int k = Q[j].size() - 1 ;
		for (int i = k - 1 ; i >= 0 ; i -- ) {
			f[i][j] = f[i+1][j] + max( Q[j][i+1] - Q[j][i] - s , 0 ) ;
		}
	}
	for (int i = 1 ; i <= m ; i ++ ) {
		int x ;
		scanf( "%d" , &x ) ;
		if ( Calc( 0 , x ) ) printf( "-1 -1\n" ) ;
		else printf( "%d %d\n" , Calc( 1 , x ) , Calc( 2 , x ) - Calc( 1 , x ) ) ;
	}
	return 0 ;
}
