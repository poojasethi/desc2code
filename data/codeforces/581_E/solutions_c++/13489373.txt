//
//	ID: y0rkl1u
//	PROG: CF 322E. Kojiro and Furrari
//	LANG: C++
//	DATE: 10.08.2015
//	NOTE: prefix sum
//

#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <vector>
#include <climits>
using namespace std;

// #define YD
#define pb push_back
#define INF (INT_MAX>>1)
#define MP(a,b) (make_pair<int,int>(a,b))
#define ppos first
#define ptype second
#define Min(a,b) ((a)<(b)?(a):(b))
typedef pair<int,int> PII;
typedef vector<PII> VPII;
const int MAX_N=200010<<2;
int Sink,Fuel,Gn,Fn,Pn;
VPII P;
int A[5][MAX_N],F[MAX_N],Next[5][MAX_N];

void InitSum(int t)
{
	int last=Pn;
	for(int i=Pn-1;i>=0;i--){
		int ty=P[i].ptype;
		Next[t][i]=last;
		if(t<=ty && ty<=3){
			int d=P[last].ppos-P[i].ppos;
			last=i;
			A[t][i]=A[t][i+1]+Min(d,Fuel);
		}
		else A[t][i]=A[t][i+1];
	}
}

inline void Main()
{
	scanf("%d%d%d%d",&Sink,&Fuel,&Gn,&Fn);
	P.pb(MP(Sink,-1)),P.pb(MP(-INF,-1));
	// gas
	for(int i=1;i<=Gn;i++){
		int type,pos; scanf("%d%d",&type,&pos);
		if(pos<Sink) P.pb(MP(pos,type));
	}
	// F: sources
	for(int i=1;i<=Fn;i++){
		scanf("%d",&F[i]);
		// P.pb(MP(F[i],-1));
	}
	sort(P.begin(),P.end());
	Pn=P.size()-1;

	// suffix sum
	InitSum(1);	// 1 2 3
	InitSum(2);	// 2 3
	InitSum(3);	// 3

	#ifdef YD
	printf("idx:\t");for(int i=0;i<=Pn;i++) printf("%d%c",i,"\t\n"[i==Pn]);
	printf("pos:\t");for(int i=0;i<=Pn;i++) printf("%d%c",P[i].ppos,"\t\n"[i==Pn]);
	printf("type:\t");for(int i=0;i<=Pn;i++) printf("%d%c",P[i].ptype,"\t\n"[i==Pn]);
	printf("98:\t");for(int i=0;i<=Pn;i++) printf("%d%c",A[3][i],"\t\n"[i==Pn]);
	printf("9598:\t");for(int i=0;i<=Pn;i++) printf("%d%c",A[2][i],"\t\n"[i==Pn]);
	printf("929598:\t");for(int i=0;i<=Pn;i++) printf("%d%c",A[1][i],"\t\n"[i==Pn]);
	#endif

	// queries
	for(int i=1;i<=Fn;i++){
		if(F[i]+Fuel>=Sink){puts("0 0"); continue; }
		int prev=lower_bound(P.begin(),P.end(),MP(F[i],-1))-P.begin()-1;
		int next1=Next[1][prev],
				next2=Next[2][prev],
				next3=Next[3][prev];
		int Tot=A[1][next1]+Min(Fuel,P[next1].ppos-F[i]);
		if(Tot!=Sink-F[i]){puts("-1 -1"); continue; }
		int a2f=A[2][next2]+Min(Fuel,P[next2].ppos-F[i]),
				a3f=A[3][next3]+Min(Fuel,P[next3].ppos-F[i]);
		printf("%d %d\n",Tot-a2f,Tot-(Tot-a2f)-a3f);
	}
}

int main()
{
	Main();
	return 0;
}
