#include <iostream>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <utility>
#include <algorithm>
#include <cmath>

using namespace std;

int n,m,k;
char b[1010][1010];
int r[1010][1010],c[1010][1010];
vector<pair<char,int> > op;
string ans = "";

bool check(int x, int y) {
	//cout << endl;
	for (int i = 0; i < op.size(); i++) {
		//cout << x << ' ' << y << endl;
		int len = op[i].second;
		switch(op[i].first) {
			case 'N':
				if (x-len < 1 || c[x][y] != c[x-len-1][y]) return false;
				x -= len;
				break;
			case 'S':
				if (x+len > n || c[x][y] != c[x+len][y]) return false;
				x += len;
				break;
			case 'E':
				if (y+len > m || r[x][y] != r[x][y+len]) return false;
				y += len;
				break;
			case 'W':
				if (y-len < 1 || r[x][y] != r[x][y-len-1]) return false;
				y -= len;
				break;
		}
	}
	return true;
}

int main() {
	cin >> n >> m;
	for (int i = 1; i <= n; i++) {
		cin >> b[i]+1;
		for (int j = 1; j <= m; j++) {
			r[i][j] = r[i][j-1] + (b[i][j]=='#');
			c[i][j] = c[i-1][j] + (b[i][j]=='#');
		}
	}
	cin >> k;
	while (k--) {
		char dir;
		int len;
		cin >> dir >> len;
		op.push_back(make_pair(dir,len));
	}
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++)
			if (b[i][j] >= 'A' && b[i][j] <= 'Z' && check(i,j))
				ans += b[i][j];
	sort(ans.begin(),ans.end());
	if (ans.empty()) cout << "no solution";
	else cout << ans;
}