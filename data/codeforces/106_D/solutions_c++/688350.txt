#include <stdio.h>
#include <string>
#include <vector>
#include <string.h>
#include <algorithm>
using namespace std;

int k,dir[100001],len[100001],X,Y;
char c[2],mp[1001][1001];
int mxlen[1001][1001][4],i,j;
vector <int> lx;
vector <int> ly;
	
int nmb(char x)
{
	if (x=='N')
		return 0;
	if (x=='E')
		return 1;
	if (x=='S')
		return 2;
	if (x=='W')
		return 3;
	return 3;
}

int main()
{
	scanf ("%d %d",&X,&Y);
	for (i=0;i<X;i++)
		scanf ("%s",mp[i]);
	scanf ("%d",&k);
	for (i=0;i<k;i++)
	{
		scanf ("%s %d",c,&len[i]);
		dir[i]=nmb(c[0]);
	}

	for (i=0;i<X;i++)
		for (j=0;j<Y;j++)
			if (mp[i][j]!='.'&&mp[i][j]!='#')
			{
				lx.push_back(i);
				ly.push_back(j);
			}
	for (i=0;i<X;i++)
		for (j=0;j<Y;j++)
		{
			if (mp[i][j]=='#')
				mxlen[i][j][0]=mxlen[i][j][3]=-1;
			else
			{
				if (i)
					mxlen[i][j][0]=mxlen[i-1][j][0]+1;
				if (!i)
					mxlen[i][j][0]=0;
				if (j)
					mxlen[i][j][3]=mxlen[i][j-1][3]+1;
				if (!j)
					mxlen[i][j][3]=0;
			}
		}
	for (i=X-1;i>=0;i--)
		for (j=Y-1;j>=0;j--)
		{
			if (mp[i][j]=='#')
				mxlen[i][j][1]=mxlen[i][j][2]=-1;
			else
			{
				if (i<(X-1))
					mxlen[i][j][2]=mxlen[i+1][j][2]+1;
				if (i==(X-1))
					mxlen[i][j][2]=0;
				if (j<(Y-1))
					mxlen[i][j][1]=mxlen[i][j+1][1]+1;
				if (j==(Y-1))
					mxlen[i][j][1]=0;
			}
		}
	string ret="";
	for (int cn=0;cn<(int)lx.size();cn++)
	{
		int curx=lx[cn];
		int cury=ly[cn];
		bool f=1;
		for (i=0;i<k;i++)
		{
			if (mxlen[curx][cury][dir[i]]<len[i])
			{
				f=0;
				break;
			}
			if (dir[i]==0)
				curx-=len[i];
			if (dir[i]==2)
				curx+=len[i];
			if (dir[i]==1)
				cury+=len[i];
			if (dir[i]==3)
				cury-=len[i];
		}
		if (f)
			ret+=mp[lx[cn]][ly[cn]];
	}
	sort(ret.begin(),ret.end());
	if (ret=="")
		printf ("no solution\n");
	else
		printf ("%s\n",ret.c_str());
	return 0;
}
