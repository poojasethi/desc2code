#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<vector>
#include<sstream>
#include<set>
#include<map>
#include<queue>
#include<algorithm>
#include<numeric>
#include<cassert>

using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
typedef vector<string> vs;

char dir[100000]; int dis[100000];
int N[1000][1000],E[1000][1000],S[1000][1000],W[1000][1000];

void run(){
	int h,w,l; cin>>h>>w;
	vs M(h);
	rep(i,h)cin>>M[i];
	cin>>l;
	rep(i,l)cin>>dir[i]>>dis[i];
	
	rep(i,h)rep(j,w)N[i][j]=E[i][j]=S[i][j]=W[i][j]=0;
	rep(i,h)rep(j,w){
		if(i)N[i][j]=M[i-1][j]!='#'?N[i-1][j]+1:0;
		if(j)W[i][j]=M[i][j-1]!='#'?W[i][j-1]+1:0;
	}
	for(int i=h-1;i>=0;i--)for(int j=w-1;j>=0;j--){
		if(i<h-1)S[i][j]=M[i+1][j]!='#'?S[i+1][j]+1:0;
		if(j<w-1)E[i][j]=M[i][j+1]!='#'?E[i][j+1]+1:0;
	}
	
	string ans;
	rep(i,h)rep(j,w)if(isalpha(M[i][j])){
		int y=i,x=j;
		rep(k,l){
			switch(dir[k]){
			case 'N':
				if(N[y][x]>=dis[k])y-=dis[k];
				else goto FAIL; break;
			case 'E':
				if(E[y][x]>=dis[k])x+=dis[k];
				else goto FAIL; break;
			case 'S':
				if(S[y][x]>=dis[k])y+=dis[k];
				else goto FAIL; break;
			case 'W':
				if(W[y][x]>=dis[k])x-=dis[k];
				else goto FAIL; break;
			}
		}
		ans.pb(M[i][j]);
		FAIL:;
	}
	
	sort(all(ans));
	cout<<(ans.empty()?"no solution":ans)<<endl;
}

int main(){
	//int T=2; rep(U,T)
	run();
	return 0;
}
