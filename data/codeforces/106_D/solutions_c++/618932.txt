#include<cstdio>
#include<cctype>
#include<cstring>
#include<cmath>
#include<cstdlib>
#include<ctime>
#include<cassert>
#include<iostream>
#include<sstream>
#include<string>
#include<vector>
#include<list>
#include<deque>
#include<stack>
#include<queue>
#include<bitset>
#include<map>
#include<set>
#include<complex>
#include<algorithm>
#include<functional>
#include<utility>
using namespace std;
#define PB push_back
#define MP make_pair
#define SZ(V) ((int)((V).size()))
typedef long long LL;
typedef unsigned long long ULL;
#define FOREACH(I,S)	for(__typeof((S).begin()) I=(S).begin();it!=(S).end();++I)
#define REP(I,N)		for(I=0;I<N;++I)
#define FN(I,N)			for(I=1;I<=N;++I)
int s[1024][1024],t[1024][1024],i,j,k,x,y,n,m,q,d[102400],ok;
char p[1024][1024],z[102400];
int main(){
	scanf("%d%d",&n,&m);gets(p[0]);
	REP(i,n)gets(p[i]);
	REP(i,n){
		s[i][0]=0;
		FN(j,m)s[i][j]=s[i][j-1]+(p[i][j-1]=='#'?1:0);
	}
	REP(j,m){
		t[0][j]=0;
		FN(i,n)t[i][j]=t[i-1][j]+(p[i-1][j]=='#'?1:0);
	}
	scanf("%d",&q);
	REP(i,q){
		while(isspace(z[i]=getchar()));
		scanf("%d",d+i);
	}
    vector<char> ans;
	REP(i,n)REP(j,m)if(p[i][j]>='A' && p[i][j]<='Z'){
		x=i;y=j;ok=0;
		REP(k,q){
			switch(z[k]){
			case 'N':if(x>=d[k])ok|=(t[x+1][y]-t[x-d[k]][y]);else ok=1;x-=d[k]; break;
			case 'S':if(x+d[k]<n)ok|=(t[x+d[k]+1][y]-t[x][y]);else ok=1;x+=d[k]; break;
			case 'E':if(y+d[k]<m)ok|=(s[x][y+d[k]+1]-s[x][y]);else ok=1;y+=d[k]; break;
			case 'W':if(y>=d[k])ok|=(s[x][y+1]-s[x][y-d[k]]);else ok=1;y-=d[k]; break;
			}
			if(ok)break;
		}
		if(!ok)ans.PB(p[i][j]);
	}
	sort(ans.begin(),ans.end());
	if(ans.size()){
		FOREACH(it,ans)putchar(*it);puts("");
	}else puts("no solution");
	return 0;
}
