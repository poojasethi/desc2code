#include <iostream>
#include <algorithm>

using namespace std;

int R,C;
int startr['Z'+1], startc['Z'+1];
int STEPS[26][1000][1000];
string SI[1000];
int DR['Z'+1];
int DC['Z'+1];

int main()
{
	DR['N'] = -1;
	DR['S'] = 1;
	DC['E'] = 1;
	DC['W'] = -1;
	for(int i = 'A'; i <= 'Z'; i++)
		startr[i] = startc[i] = -1;
	cin >> R >> C;
	for(int i = 0; i < R; i++)
		cin >> SI[i];
	
	for(int i = 0; i < R; i++)
		for(int j = 0; j < C; j++)
		{
			if(SI[i][j] == '#')
				STEPS[4][i][j] = STEPS[22][i][j] = STEPS[18][i][j] = STEPS[13][i][j] = -1;
			else
			{
				STEPS[22][i][j] = STEPS[22][i][j-1] + 1;
				STEPS[13][i][j] = STEPS[13][i-1][j] + 1;
			}
			if(SI[i][j] >= 'A' && SI[i][j] <= 'Z')
			{
				startr[SI[i][j]] = i;
				startc[SI[i][j]] = j;
			}
		}
	for(int i = R-1; i >= 0; i--)
		for(int j = C-1; j >= 0; j--)
			if(SI[i][j] == '#')
				STEPS[4][i][j] = STEPS[22][i][j] = STEPS[18][i][j] = STEPS[13][i][j] = -1;
			else
			{
				STEPS[4][i][j] = STEPS[4][i][j+1] + 1;
				STEPS[18][i][j] = STEPS[18][i+1][j] + 1;
			}
	
	int X,n;
	string d;
	char c;
	cin >> X;
	while(X--)
	{
		cin >> d >> n;
		//cout << d << " " << n << endl;
		c = d[0];
		for(int i = 'A'; i <= 'Z'; i++)
			if(startr[i] != -1)
				if(STEPS[c-'A'][startr[i]][startc[i]] >= n)
				{
					startr[i] += DR[c]*n;
					startc[i] += DC[c]*n;
					//cout << (char)i << " " << startr[i] << " " << startc[i] << endl;
				}
				else
					startr[i] = startc[i] = -1;
	}
	bool found = false;
	for(int i = 'A'; i <= 'Z'; i++)
		if(startr[i] != -1)
		{
			found = true;
			cout << (char)i;
		}
	if(!found)
		cout << "no solution";
	cout << endl;
	return 0;
}