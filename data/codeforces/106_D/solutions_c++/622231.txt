#include <iostream>
#include <cstring>
#include <cstdio>
#include <algorithm>
#include <cmath>
using namespace std;
const int Max = 1005;
const int _Max = 100005;
int dx[]={1, 0, -1, 0};
int dy[]={0, 1, 0, -1};
int go[Max][Max][4];//S E N W
int r, c;
char m[Max][Max];
int s[255],mp[255]; 
struct OPT{int dir,len;OPT(){}OPT(int _dir,int _len):dir(_dir),len(_len){}}opt[_Max];
int optn;
void init(){
	int d, i, j;
	d=3;
	for(i=0;i<r;i++)for(j=0;j<c;j++){
		if(m[i][j]=='#') go[i][j][d]=0;
		else {if(j-1>=0)go[i][j][d] = go[i][j-1][d]+1;else go[i][j][d]=1;}
	}
	d=1;
	for(i=0;i<r;i++)for(j=c-1;j>=0;j--){
		if(m[i][j]=='#')go[i][j][d]=0;
		else {if(j+1<=c-1)go[i][j][d]=go[i][j+1][d]+1;else go[i][j][d]=1;}
	}
	d=2;
	for(j=0;j<c;j++)for(i=0;i<r;i++){
		if(m[i][j]=='#')go[i][j][d]=0;
		else{if(i-1>=0)go[i][j][d]=go[i-1][j][d]+1;else go[i][j][d]=1;}
	}
	d=0;
	for(j=0;j<c;j++)for(i=r-1;i>=0;i--){
		if(m[i][j]=='#')go[i][j][d]=0;
		else {if(i+1<=r-1)go[i][j][d]=go[i+1][j][d]+1;else go[i][j][d]=1;}
	}
}
bool check(int sx, int sy){
	int i,len,dir;
	for(i=0;i<optn;i++){
		dir=opt[i].dir;len=opt[i].len;
		if(go[sx][sy][dir]>=len+1){sx=sx+dx[dir]*len;sy=sy+dy[dir]*len;}
		else return false;
	}
	return true;
}
int main(){
	int i,j,len,cnt;
	char ch[5];
	scanf("%d%d", &r,&c);
	for(i=0;i<r;i++) scanf("%s",m[i]);
	init();
	mp['S']=0;
	mp['E']=1;
	mp['N']=2;
	mp['W']=3;
	scanf("%d", &optn);
	for(i=0;i<optn;i++){
		scanf("%s%d", &ch, &len);
		opt[i] = OPT(mp[ch[0]], len);
	}
	memset(s, -1, sizeof(s));
	for(i=0;i<r;i++) for(j=0;j<c;j++) if(m[i][j]>='A'&&m[i][j]<='Z')s[m[i][j]] = c*i+j;
	char res[35];
	cnt=0;
	for(i='A';i<='Z';i++) if(s[i]!=-1){
		if(check(s[i]/c,s[i]%c)) res[cnt++]=i;
	}
	if(cnt==0)puts("no solution");
	else {for(i=0;i<cnt;i++)printf("%c", res[i]);puts("");}
}
