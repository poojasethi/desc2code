#include<cstdio>
#include<cstring>
#include<algorithm>
#include<string>
using namespace std;

int n,m,dir[1111][1111][5],k,dx[]={-1,0,1,0},dy[]={0,1,0,-1};
char mp[1111][1111];
int w[100005],dw[100005];

int doit(int x,int y,int d) {
	if (mp[x][y]=='#') return -1;
	if (dir[x][y][d]!=-1) return dir[x][y][d];
	dir[x][y][d]=doit(x+dx[d],y+dy[d],d)+1;
	return dir[x][y][d];
}

int main() {
	scanf("%d%d",&n,&m);
	for (int i=0; i<n; i++)
		scanf("%s",mp[i]);
	memset(dir,-1,sizeof(dir));
	for (int i=0; i<n; i++)
		for (int j=0; j<m; j++)
			if (mp[i][j]!='#') {
				for (int d=0; d<4; d++)
					doit(i,j,d);
			}
	scanf("%d",&k);
	string ret="";
	char td[11];
	for (int i=0; i<k; i++) {
		scanf("%s%d",td,&w[i]);
		if (td[0]=='N') dw[i]=0;
		if (td[0]=='E') dw[i]=1;
		if (td[0]=='S') dw[i]=2;
		if (td[0]=='W') dw[i]=3;
	}
	for (int i=0; i<n; i++)
		for (int j=0; j<m; j++)
			if (mp[i][j]>='A' && mp[i][j]<='Z') {
				int nx=i,ny=j,ok=1;
				for (int d=0; d<k; d++)
					if (dir[nx][ny][dw[d]]>=w[d]) {
						nx+=dx[dw[d]]*w[d];
						ny+=dy[dw[d]]*w[d];
					}
					else {
						ok=0;
						break;
					}
				if (ok==1) ret+=mp[i][j];
			}
	if (ret.length()==0) {
		printf("no solution\n");
	}
	else {
		sort(ret.begin(),ret.end());
		printf("%s\n",ret.c_str());
	}
}
