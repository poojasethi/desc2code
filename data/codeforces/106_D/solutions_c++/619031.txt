#include<cstdio>
#include<cstring>
#include<algorithm>
#include<map>
#include<vector>
using namespace std;

const int MAXN = 2100;
const int zero = 1050;

const int dx[4] = {-1,1,0,0};
const int dy[4] = {0,0,1,-1};


char mat[MAXN][MAXN];
int n, m, Q;
bool go[MAXN][MAXN];
int dir[300];

bool inmat(int x,int y)
{
	return x >= 0 && y >= 0 && x < n && y < m;
}
int main()
{
	char op[20];
	int len;
	
	scanf("%d%d",&n,&m);
	for (int i=0;i<n;i++)
		scanf("%s",mat[i]);

	dir['N'] = 0; dir['S'] = 1;
	dir['E'] = 2; dir['W'] = 3;
	
	scanf("%d",&Q);
	memset(go,0,sizeof(go));
	int x = zero, y = zero;
	bool noans = false;
	for (int i=0;i<Q;i++)
	{
		scanf("%s%d",op,&len);
		int d = dir[ op[0] ];
		for (int j=0;j<len;j++)
		{
			x = x + dx[d];
			y = y + dy[d];
			//printf("(%d,%d) ",x,y);
			if (x < zero-n || y < zero-m || x > zero+n || y > zero+m) 
			{
				noans = true;
				break;
			}
			go[x][y] = true;	
		}	
		//printf("\n");
	}	
	if (noans) 
	{	
		printf("no solution\n");
		return 0;
	}	
	/*
	for (int i=zero-n;i<zero+n;i++)
	{
		for (int j=zero-m;j<zero+m;j++)
		if (go[i][j])
			printf("1");
		else
			printf("0");
		printf("\n");
	}
	*/
	vector<char> ans;
	for (int i=0;i<n;i++)
		for (int j=0;j<m;j++)
		if (mat[i][j] <= 'Z' && mat[i][j] >= 'A') 
		{
			bool ok = true;
			for (int p=zero-n;p<zero+n;p++)
				for (int q=zero-m;q<zero+m;q++)
				if (go[p][q])
				if (!inmat(p+i-zero,q+j-zero) || mat[p+i-zero][q+j-zero] == '#')
				{
					ok = false;
					break;
				}
			if (ok) ans.push_back(mat[i][j]);
		}
	if (ans.size() == 0)
		printf("no solution\n");
	else
	{
		sort(ans.begin(),ans.end());
		for (int i=0;i<ans.size();i++)
			printf("%c",ans[i]);
		printf("\n");
	}
}














