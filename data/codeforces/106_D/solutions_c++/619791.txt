#include <iostream>
#include <stdio.h>
using namespace std;

int n,m,k,len[111111],rsum[1111][1111],csum[1111][1111];
char map[1111][1111],dir[111111],ans[11110];

int can(int x, int y)
{
	int tx=x,ty=y,step = 1;
	while(step <= k)
	{
		if(dir[step] == 'N')
		{
			tx = x - len[step];
			if(tx < 1 || csum[ty][x] - csum[ty][tx-1] > 0)return 0;
			x = tx;
			y = ty;
		}
		if(dir[step] == 'S')
		{
			tx = x + len[step];
			if(tx > n || csum[ty][tx] - csum[ty][x-1] > 0)return 0;
			x = tx;
			y = ty;
		}
		if(dir[step] == 'W')
		{
			ty = y - len[step];
			if(ty < 1 || rsum[x][y] - rsum[x][ty-1] > 0)return 0;
			x = tx;
			y = ty;
		}
		if(dir[step] == 'E')
		{
			ty = y + len[step];
			if(ty > m || rsum[x][ty] - rsum[x][y-1] > 0)return 0;
			x = tx ;
			y = ty;
		}
		step ++;
	}
	
	return 1;
}

int main()
{
	//freopen("test.in","r",stdin);
	//freopen("test.out","w",stdout);

	scanf("%d %d",&n,&m);
	for(int i = 1;i <= n; i ++)
		scanf("%s",&map[i][1]);	
	scanf("%d\n",&k);
	for(int i = 1;i <= k ; i++)
	{
		scanf("%c %d\n",&dir[i],&len[i]);
		if(dir[i] == 'S' || dir[i] == 'N')
		{
			if(len[i] >= n-2)
			{
				printf("no solution\n");
				return 0;
			}
		}
		else
		{
			if(len[i] >= m-2)
			{
				printf("no solution\n");
				return 0;
			}
		}
	}
	
	for(int i = 1;i <= n ; i++)
		for(int j = 1;j <= m; j ++)
		{
				rsum[i][j] = rsum[i][j-1] +( map[i][j] == '#' );
				csum[j][i] = csum[j][i-1] +( map[i][j] == '#' );
		}
	for(int i = 1;i <= n; i ++)
		for(int j = 1;j <= m; j ++)
		{
			if(map[i][j] != '.' && map[i][j] != '#')
				if(can(i,j))ans[map[i][j]] = 1;
		}
		int ok = 0;
	for(int i='A';i<='Z';i++)
		if(ans[i])
		{
			printf("%c",i);
			ok = 1;
		}
	if(ok)printf("\n");
	else		printf("no solution\n");
	return 0;
} 