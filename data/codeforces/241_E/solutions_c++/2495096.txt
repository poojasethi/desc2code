#include <cstdio>
#include <algorithm>

using namespace std;

const int inf = 99999999;

int n, m;
int a[5111], b[5111];
int adj[1111][1111];
int chk[1111];
int visited[1111];

void dfs(int u, int f) {
	visited[u] = 1;
	chk[u]++;
	for (int i = 0; i < n; ++i) {
		if (visited[i]) continue;
		if (f && !adj[i][u]) continue;
		if (!f && !adj[u][i]) continue;
		dfs(i, f);
	}
}

int main() {
	scanf("%d %d", &n, &m);
	for (int i = 0; i < m; ++i) {
		scanf("%d %d", &a[i], &b[i]);
		a[i]--; b[i]--;
		adj[a[i]][b[i]] = 1;
	}
	dfs(0, 0);
	fill(visited, visited + n, 0);
	dfs(n - 1, 1);
	
	int d[1000];
	fill(d, d + n, inf);
	d[0] = 0;
	for (int i = 0; i <= n; ++i) {
		for (int j = 0; j < m; ++j) {
			int u = a[j], v = b[j];
			if (chk[u] != 2 || chk[v] != 2) continue;
			d[v] = min(d[v], d[u] + 2);
			d[u] = min(d[u], d[v] - 1);
		}
	}

	int ans = 1;
	for (int i = 0; i < m; ++i) {
		int u = a[i], v = b[i];
		if (chk[u] != 2 || chk[v] != 2) continue;
		if (d[v] - d[u] != 1 && d[v] - d[u] != 2) {
			ans = 0;
			break;
		}
	}

	if (!ans) printf("No\n");
	else {
		printf("Yes\n");
		for (int i = 0; i < m; ++i) {
			int u = a[i], v = b[i];
			if (chk[u] != 2 || chk[v] != 2) printf("1\n");
			else printf("%d\n", d[v] - d[u]);
		}
	}
	return 0;
}
