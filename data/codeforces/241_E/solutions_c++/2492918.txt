#include <cstdio>
#include <cstring>
#include <algorithm>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define FOD(i,s,e) for (int i=(s)-1; i>=(e); i--)
#define CLR(a,x) memset(a, x, sizeof(a))
#define EXP(i,l) for (int i=(l); i; i=qn[i])
#define N 1005
#define M 10005
using namespace std;

int n, m, x, y, ed, ok;
int l[N], v[N], r[N], u[N], d[N];
int ex[M], ey[M], qd[M], qn[M];

void bd(int x, int y, int l[]){
	qd[++ed] = y, qn[ed] = l[x], l[x] = ed;
}

void dfs(int x, int l[], int v[]){
	v[x] = 1;
	EXP(i,l[x]) if (!v[qd[i]]) dfs(qd[i], l, v);
}

int main(){
	scanf("%d%d", &n, &m);
	FOR(i,0,m){
		scanf("%d%d", &ex[i], &ey[i]);
		ex[i]--, ey[i]--;
		bd(ex[i], ey[i], l);
		bd(ey[i], ex[i], r);
	}
	dfs(0, l, u);
	dfs(n-1, r, v);
	
	CLR(d, 63);
	d[0] = 0;
	FOE(j,0,n){
		FOR(i,0,m){
			x = ex[i], y = ey[i];
			if (!u[x] || !v[y]) continue;
			d[y] = min(d[y], d[x] + 2);
			d[x] = min(d[x], d[y] - 1);
		}
	}
	
	FOR(i,0,m){
		x = ex[i], y = ey[i];
		if (!u[x] || !v[y]) continue;
		if (d[y] - d[x] > 2 || d[y] - d[x] < 1) ok = -1;
	}
	
	if (ok < 0) puts("No");
	else{
		puts("Yes");
		FOR(i,0,m){
			x = ex[i], y = ey[i];
			if (!u[x] || !v[y]) puts("1");
			else printf("%d\n", d[y] - d[x]);
		}
	}
	return 0;
}
