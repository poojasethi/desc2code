#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <string>
using namespace std;
const int Maxn=1005,Maxm=5005,inf=99999+208,L=(1<<10)-1;
int n,m;
int fst[Maxn],next[Maxm*2],to[Maxm*2],v[Maxm*2],En=0;
int d[Maxn],Q[L+5],cnt[Maxn];
bool f1[Maxn],f2[Maxn],flag[Maxn];

void dfs(int x,int g,bool *f) {
	f[x]=true;
	for (int k=fst[x];k;k=next[k])
		if ((k&1)==g&&!f[to[k]]) dfs(to[k],g,f);
}

bool spfa() {
	int l=1,r=2;
	memset(d+1,63,n<<2);
	d[Q[1]=1]=0;
	while (l!=r) {
		int x=Q[l];
		l=(l&L)+1;
		flag[x]=false;
		for (int k=fst[x],t=to[k];k;t=to[k=next[k]])
			if (v[k]&&d[t]>d[x]+v[k]) {
				d[t]=d[x]+v[k];
				if ((++cnt[t])==n) return false;
				if (!flag[t]) {
					flag[t]=true;
					if (d[t]>d[Q[l]]) Q[r]=t,r=(r&L)+1;
					else Q[l=l>1?l-1:L+1]=t;
				}
			}
	}
	return true;
}

int main() {
	scanf("%d%d",&n,&m);
	for (int i=1,s,t;i<=m;i++) {
		scanf("%d%d",&s,&t);
		next[++En]=fst[s]; fst[s]=En; to[En]=t; v[En]=2;
		next[++En]=fst[t]; fst[t]=En; to[En]=s; v[En]=-1;
	}
	dfs(1,1,f1);
	dfs(n,0,f2);
	for (int i=1;i<=En;i+=2)
		if (!f2[to[i]]||!f1[to[i+1]]) v[i]=v[i+1]=0;
	if (!spfa()) puts("No");
	else {
		puts("Yes");
		for (int i=1;i<=En;i+=2)
			printf("%d\n",max(1,min(2,d[to[i]]-d[to[i+1]])));
	}
	return 0;
}