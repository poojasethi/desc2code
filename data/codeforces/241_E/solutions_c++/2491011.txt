#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<vector>
using namespace std;
#define nMax 1010
#define mMax 5010
vector<int>EE[nMax];
int d[nMax],uu[mMax],vv[mMax],vis[nMax],first[nMax],next[mMax],inpath[nMax];
int tot,n,m;
bool dfs(int u)
{
	if(u == n)	return inpath[u] = 1;
	if(inpath[u] != -1)	return inpath[u];
	inpath[u] = 0;
	int v,i,sz = EE[u].size();
	for(i=0; i<sz; i++){
		v = EE[u][i];
		if(dfs(v))	inpath[u] = 1;
	}
	return inpath[u];
}

int main()
{
	register int i,j,u,v;
	scanf("%d%d",&n,&m);
	memset(inpath,-1,sizeof(inpath));
	//memset(d,0,sizeof(d));
	//tot = 0;
	for(i=0;i<m;i++){
		scanf("%d%d",uu+i,vv+i);
		EE[uu[i]].push_back(vv[i]);
	}
	dfs(1);
	bool Change = true;
	for(j=0; j<=n && Change; j++){
		Change = false;
		for(i=0; i<m; i++)
			if(inpath[uu[i]] == 1 && inpath[vv[i]] == 1){
				u = uu[i];	v = vv[i];
				if(d[v] > d[u] + 2)	d[v] = d[u] + 2,Change = true;
				if(d[u] > d[v] - 1)	d[u] = d[v] - 1,Change = true;
			}
	}
	if(!Change){
		puts("Yes");
		for(i=0; i<m; i++)
			if(inpath[uu[i]] == 1 && inpath[vv[i]] == 1)	printf("%d\n",d[vv[i]]-d[uu[i]]);
			else	puts("1");
	}else	puts("No");
	return 0;
}
