#include<stdio.h>
#include<string.h>
#include<iostream>
#include<algorithm>
using namespace std;
const long long mod = 1000000007;
int n,m,k,cnt,l,r;bool exist[1000001];
long long ans;
long long quickpow(long long x,int y)
{
	long long ret=1;
	for(;y;y>>=1,x=x*x%mod)
	if(y&1)ret=ret*x%mod;
	return ret;
}
int main()
{
	scanf("%d%d%d",&n,&m,&k);
	l=1,r=n-k-1;
	for(int i=1,u,v;i<=m;i++)
	{
		scanf("%d%d",&u,&v);
		if(v!=u+1&&v!=u+k+1)return printf("0\n"),0;
		if(v==u+k+1)exist[u]=true,++cnt,l=max(l,u-k),r=min(r,u+k);
	}
	for(int i=1;i<=n;i++)
	if(exist[i]&&(i<l||i>r))
		return printf("0\n"),0;
	for(int i=l;i<=r;i++)
	if(exist[i])
	{
		ans+=quickpow(2,min(r,i+k)-i+1-cnt);
		break;
	}
	else ans+=quickpow(2,min(r,i+k)-i-cnt);
	if(!cnt)++ans;
	cout<<(ans%=mod)<<endl;
	return 0;
}
