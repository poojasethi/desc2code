#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
using namespace std;
const int INF=0x3fffffff;
const int modi=1000000007;
int n,m,t,start=INF,last=0,pd,cnt=0,ans;
int power(int a,int b)
{
    //printf("power:%d^%d\n",a,b);
    int r=1;
    while(b)
    {
        if(b&1)r=(long long)r*a%modi;
        a=(long long)a*a%modi;
        b>>=1;
    }
    return r;
}
int main()
{
    int i,j,k,l;
    scanf("%d%d%d",&n,&m,&t);
    for(i=1;i<=m;i++)
    {
        scanf("%d%d",&j,&k);
        if(j+1<k)
        {
            if(k-j-1!=t)pd=true;
            else start=min(start,j),last=max(last,j),cnt++;
        }
    }
    if(pd||(last-start>t))puts("0");
    else
    {
        //power(2,min(t,n-t-start-1)-cnt);
        //cout<<start<<' '<<last<<endl;
        for(i=max(1,last-t);i<(start<INF?start:n-t);i++)ans=(ans+power(2,min(t,n-t-i-1)-cnt))%modi;
        if(start<INF)ans=(ans+power(2,min(t,n-t-start-1)-cnt+1))%modi;
        cout<<(ans+modi+(int)(start==INF))%modi<<endl;
    }
    //system("pause");
    return 0;
}
