#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <algorithm>
using namespace std;

const int maxn=1010;

int Csum[maxn][maxn], Rsum[maxn][maxn], num[maxn][maxn], vis[maxn][maxn];
int n, m;
int tot, dep;

const int dx[]={-1, 1, 0, 0}, dy[]={0, 0, 1, -1};

int sum (int x, int y, int xt, int yt)
{
    int ret;
    if(x>xt) swap(x, xt);
    if(y>yt) swap(y, yt);
    if(yt!=y) ret=Rsum[x][yt]-Rsum[x][y-1];
    else ret=Csum[xt][y]-Csum[x-1][y];
    return ret;
}

int dfs (int x, int y, int k, int fx, int fy)
{
    int ret=2, s=0;
    vis[x][y]=k;
    for(int i=0; i<4; i++){
        int xt=x+dx[i]*k, yt=y+dy[i]*k;
        if(xt>0 && xt<=n && yt>0 && yt<=m && num[xt][yt]==1 && sum(x, y, xt, yt)==k+1){
            s++;
            //printf("x %d y %d xt %d yt %d k %d\n", x, y, xt, yt, k);
            ret+=k-1;
            if(vis[xt][yt]!=k){ ret+=dfs(xt, yt, k, x, y);}
        }
    }
    //printf("x %d y %d dep %d s %d\n", x, y, dep, s);
    dep+=s&1;
    return ret;
}

int main()
{
    //freopen("d.txt", "r", stdin);

    int X=0, Y=0;
    tot=0;
    cin>>n>>m;
    memset(vis, 0, sizeof(vis));
    memset(Csum, 0, sizeof(Csum));
    memset(Rsum, 0, sizeof(Rsum));
    for(int i=1; i<=n; i++)
    for(int j=1; j<=m; j++){
        int x;
        cin>>x;
        if(x && !X){ X=i; Y=j;}
        num[i][j]=x;
        Csum[i][j]=Csum[i-1][j]+x;
        Rsum[i][j]=Rsum[i][j-1]+x;
        tot+=x;
    }

    if(tot<=1) puts("-1");
    else{
        bool is=false;
        for(int k=2; k<=n; k++){
            dep=0;
            int x=dfs(X, Y, k, 0, 0);
            if(x==tot*2 && (dep==0||dep==2)){ is=true; printf("%d ", k);}
        }
        if(!is) puts("-1");
    }

    return 0;
}