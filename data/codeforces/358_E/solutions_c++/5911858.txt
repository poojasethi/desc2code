#pragma comment(linker, "/STACK:268435456,268435456")
#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <vector>
#include <deque>
#include <queue>
#include <ctime>

using namespace std;

//#include "judge.h"

int s[1002][1002],n,m;
int dx[]={1,-1,0,0}, dy[]={0,0,1,-1}, sum;

int gcd(int x, int y){
    if(x==-1) return y;
    if(y==0) return x;
    return gcd(y,x%y);
}

int f1(int x, int y){
    int check=0;
    for(int i=0;i<4;i++)
        if(s[x+dx[i]][y+dy[i]])
            check++;
    return check==1||check==3;
}

bool visit[1002][1002];

void dfs(int x, int y){
    if(visit[x][y]||x<1||y<1||x>n||y>m) return;
    visit[x][y]=1,sum--;//, printf("%d %d\n" ,x , y);
    for(int i=0;i<4;i++)
        if(s[x+dx[i]][y+dy[i]]&&!visit[x+dx[i]][y+dy[i]])
            dfs(x+dx[i], y+dy[i]);
}

int main(){
    int tt=-1,check=0;
    scanf("%d %d", &n, &m);
    for(int i=1;i<=n;i++)
        for(int j=1;j<=m;j++)
            scanf("%d", &s[i][j]),sum+=(s[i][j]==1);
    for(int i=1;i<=n;i++){
        check=0;
        for(int j=1;j<=m;j++)
            if(s[i][j]) check++;//,printf("s%d\n", check);
            else if(check-1>0) tt=gcd(tt,check-1),check=0;
            else check=0;
        if(check-1>0) tt=gcd(tt,check-1);
        //printf("%d\n", tt);
    }
    for(int i=1;i<=m;i++){
        check=0;
        for(int j=1;j<=n;j++)
            if(s[j][i]) check++;
            else if(check-1>0) tt=gcd(tt,check-1),check=0;
            else check=0;
        if(check-1>0) tt=gcd(tt,check-1);
    }
    tt=max(tt,1);
    
    int o=0;
    for(int i=1;i<=n;i++)
        for(int j=1;j<=m;j++)
            if(s[i][j]&&f1(i,j))
                o++;
    
    int ss=0;
    for(int i=1;i<=n&&!ss;i++)
        for(int j=1;j<=m&&!ss;j++)
            if(s[i][j]){
                dfs(i,j);
                ss=1;
            }
    //printf("o %d tt %d s %d\n", o, tt, sum);
    if(o>=3||tt==1||sum) printf("%d\n",-1);
    else 
        for(int i=2;i<=tt;i++)
            if(tt%i==0)
                printf("%d ", i);
    //system("PAUSE");
    return 0;
}