#include<bits/stdc++.h>
using namespace std;
int flag[1005][1005];
int sum[1111111];
int id = 0;
int ind[1005][1005];
int dir[4][2] = { -1,0,0,-1,1,0,0,1};
int n,m;
bool in(int x,int y){
	return 0 <= x && x < n && 0 <= y && y < m;
}
int mp[1005][1005];
bool no = 0;
void dfs(int x,int y,int k){
	if(ind[x][y]==-1)
		ind[x][y] = id++;
	int link = 0;
	for(int d = 0; d < 4; d++){
		int nx = x,ny = y, cnt = 0, f = 0,tx,ty;
		while(tx = nx + dir[d][0], ty = ny + dir[d][1],
				in(tx,ty) && mp[tx][ty] ){
			nx = tx , ny = ty;
			f += flag[nx][ny];
			flag[nx][ny] = 1;
			cnt++;
			if(cnt == k) break;
		}
		if(0 < cnt && cnt < k){
			no = 1;
			return;
		}
		if(cnt == 0) continue;
		link++;
		if(f >= 2)continue;
		dfs(nx,ny,k);
	}
	sum[ind[x][y]] = link;
}
bool check(){
	int s = 0;
	for(int i = 0; i < n; i++)
		for(int j = 0; j < m;j++)
			if(mp[i][j] && !flag[i][j])return false;
	for(int i = 0; i < id; i++)if(sum[i]&1)s++;
	return s == 0 || s == 2;
}
int main(){
	while(scanf("%d%d",&n,&m)==2){
		int sx = -1,sy = -1;
		for(int i = 0; i < n; i++)
			for(int j = 0; j < m;j ++){
				scanf("%d",&mp[i][j]);
				if(sx == -1 && mp[i][j]){
					sx = i,sy = j;
				}
			}
		if(sx == -1){
			puts("-1");continue;
		}
		int len = 1;
		for(int i = 0; i < n; i++){
			for(int j= 0; j < m;){
				while(j < m && mp[i][j] == 0)j++;
				int ej = j;
				while(ej < m && mp[i][ej] == 1)ej++;
				len = max(len,ej - j);
				j = ej;
			}
		}
		for(int j = 0; j < m; j++){
			for(int i = 0; i < n;){
				while(i < n && mp[i][j] == 0)i++;
				int ei = i;
				while(ei < n && mp[ei][j] == 1)ei++;
				len = max(len ,ei - i);
				i = ei;
			}
		}
		bool out = 0;
		len--;
		for(int k = 2; k <= len; k++)if(len % k == 0){
			memset(ind,-1,sizeof(ind));
			memset(flag,0,sizeof(flag));
			memset(sum,0,sizeof(sum));
			id = no = 0;
			flag[sx][sy] = 1;
			dfs(sx,sy,k);
			if( no == 0 && check()){
				out = 1;
				printf("%d ",k);
			}
		}
		if(out == 0)printf("-1");
		puts("");
	}
	return 0;
}
