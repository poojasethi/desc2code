#include <cstdio>
#include <algorithm>
using namespace std;

const int MAX_N = 1005;

int nr, nc, one;
int sr[MAX_N][MAX_N];
int sc[MAX_N][MAX_N];
int ar, ac;
int found[MAX_N][MAX_N], ff;
int oddDeg;

int dx[] = {0, 1, 0, -1};
int dy[] = {1, 0, -1, 0};

inline bool check(int r, int c) {
    return r >= 1 and r <= nr and c >= 1 and c <= nc;
}

inline int sum(int r, int c, int rr, int cc) {
    if(r > rr) swap(r, rr);
    if(c > cc) swap(c, cc);
    return r == rr? sr[r][cc] - sr[r][c-1]: sc[c][rr] - sc[c][r-1];
}

inline int dfs(int r, int c) {
    int ret = 2, deg = 0;
    found[r][c] = ff;
	for(int d = 0; d < 4; d++) {
        int rr = dx[d]*ff + r;
        int cc = dy[d]*ff + c;
        if(check(rr, cc) and sum(r, c, rr, cc) == ff+1) {
            deg++;
            ret += ff-1;
            if(found[rr][cc] != ff) {
                ret += dfs(rr, cc);
            }
        }
    }
    oddDeg += deg & 1;
    return ret;
}

int main() {
    scanf("%d %d", &nr, &nc);
    for(int i = 1; i <= nr; i++) {
        for(int j = 1; j <= nc; j++) {
            int x;
            scanf("%d", &x);
            if(x == 1 and ar == 0) {
                ar = i;
                ac = j;
            }
            one += x;
            sr[i][j] = sr[i][j-1] + x;
            sc[j][i] = sc[j][i-1] + x;
        }
    }
    bool yes = false;
    for(ff = 2; one > 1 and ff <= max(nr, nc); ff++) {
        oddDeg = 0;
        if(dfs(ar, ac) == 2*one and (oddDeg == 0 or oddDeg == 2)) {
            printf("%d ", ff);
            yes = true;
        }
    }
    if(not yes) {
        printf("-1");
    }
    printf("\n");
}
