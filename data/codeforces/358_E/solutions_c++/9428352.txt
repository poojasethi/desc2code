#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<iostream>
#include<map>
#include<set>
#include<queue>
#define P pair<int,int>
#define MP make_pair
#define MAXN 200050
#define INF 1000000000
#define eps 1e-8
#define lson i<<1
#define rson i<<1|1
#define LL long long
#define ULL unsigned long long
using namespace std;
bool vis[1111][1111];
int a[1111][1111];
int dx[]={0,1,0,-1};
int dy[]={1,0,-1,0};
int fa[1111111];
int getfa(int x){
	if(fa[x]==x)return x;
	else
		return fa[x]=getfa(fa[x]);
}
void Union(int x,int y){
	int fx=getfa(x);
	int fy=getfa(y);
	fa[fx]=fy;
}
int gcd(int a,int b){
	if(b==0)return a;
	else
		return gcd(b,a%b);
}
int main(){
	int n,m;
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;++i){
		for(int j=0;j<m;++j)
			scanf("%d",&a[i][j]);
	}
	for(int i=0;i<=n*m;++i)
		fa[i]=i;
	int odd=0;
	int bx,by;
	for(int i=0;i<n;++i)
	{
		for(int j=0;j<m;++j)
		{
			if(a[i][j]==0)continue;
			bx=i;
			by=j;
			int cnt=0,sta=0;
			for(int k=0;k<4;++k){
				int x=i+dx[k];
				int y=j+dy[k];
				if(x<0||y<0||x>=n||y>=m||a[x][y]==0)
					continue;
				Union(i*m+j,x*m+y);
				cnt++;
				sta|=(1<<k);
			}
			if(cnt&1)odd++;
			if(sta!=5&&sta!=10)
				vis[i][j]=true;
		}
	}
	int flag=1;
	int anc=getfa(bx*m+by);
	for(int i=0;i<n;++i){
		for(int j=0;j<m;++j){
			if(a[i][j]==0)continue;
			int f1=getfa(i*m+j);
			if(f1!=anc)
				flag=0;
		}
	}
	if(odd!=0&&odd!=2)flag=0;
	if(flag==0){
		printf("-1\n");
		return 0;
	}
	int ans=0;
	for(int i=0;i<=n;++i)
	{
		for(int j=0;j<=m;++j)
		{
			if(!vis[i][j])continue;
			for(int k=0;k<4;++k)
			{
				int x=i+dx[k];
				int y=j+dy[k];
				if(x<0||y<0||x>=n||y>=m||a[x][y]==0)
					continue;
				int now=0;
				while(x>=0&&x<n&&y>=0&&y<m&&a[x][y]==1){
					now++;
					if(vis[x][y])break;
					x+=dx[k];
					y+=dy[k];
				}
				ans=gcd(ans,now);
			}
		}
	}
	if(ans==1||ans==0)printf("-1\n");
	else
	{
		for(int i=2;i<ans;++i)
			if(ans%i==0)
				printf("%d ",i);
		printf("%d\n",ans);
	}
}
