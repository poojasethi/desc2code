#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;

const int N = 1005;

int g[N][N],row[N][N],col[N][N],n,m;
int move[4][2] = {{1,0},{-1,0},{0,1},{0,-1}};
int vis[N][N],num,counts;
int sx,sy,per,odd;

bool ok(int x,int y,int a,int b){
	if(x == a){
		if(y > b) swap(y,b);
		return row[a][b] - row[x][y - 1] == b - y + 1;
	}
	else{
		if(x > a) swap(x,a);
		return col[a][b] - col[x - 1][y] == a - x + 1;
	}
}

int dfs(int x,int y){
	int deg = 0;
	// printf("x:%d  y:%d  deg:%d   num:%d\n",x,y,deg,num);
	int ret = 2;
	for(int i = 0;i < 4;i ++){
		int a = x + move[i][0] * per;
		int b = y + move[i][1] * per;
		if(a < 1 || a > n || b < 1 || b > m) continue;
		// printf("a:%d  b:%d\n",a,b);
		if(ok(x,y,a,b)){
			ret += per - 1;
			if(vis[a][b] != per){
				num += per;
				vis[a][b] = per;
				ret += dfs(a,b);
			}
			deg ++;
		}
	}
	if(deg & 1) odd ++;
	return ret;
}

bool check(int K){
	per = K;
	odd = 0;
	vis[sx][sy] = per;
	num = dfs(sx,sy);
	// printf("num:%d   counts:%d   odd:%d\n",num,counts,odd);
	if(num != counts * 2) return false;
	if(odd == 0 || odd == 2) return true;
	return false;
}

int main(){
	// freopen("input.txt","r",stdin);
	scanf("%d%d",&n,&m);
	counts = 0;
	sx = sy = -1;
	for(int i = 1;i <= n;i ++)
		for(int j = 1;j <= m;j ++){
			scanf("%d",&g[i][j]);
			if(g[i][j] == 1){
				if(sx == -1) sx = i , sy = j;
				counts ++;
			}
			row[i][j] = row[i][j - 1] + g[i][j];
			col[i][j] = col[i - 1][j] + g[i][j];
		}
	if(counts == 1){
		puts("-1");
		return 0;
	}
	vector<int> ans;
	for(int k = 2;k <= n;k ++){ //!!!!!!!!!!!!!!!!!!!!!!!!!
		// printf("k:%d\n",k);
		if(check(k)) ans.push_back(k);
	}
	if(!ans.size()) puts("-1");
	else{
		for(int i = 0;i < (int)ans.size();i ++)
			printf("%d%c",ans[i],i == (int)ans.size() - 1 ? '\n' : ' ');
	}
	return 0;
}