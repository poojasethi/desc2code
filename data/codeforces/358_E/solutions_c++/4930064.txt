#include <iostream>
#include <cstdio>

using namespace std;

const int maxn = 1001;

int a[maxn][maxn], b[maxn][maxn], cnt[maxn][maxn], d[2][maxn][maxn], n, m, x, y, K, flag;

void calc(int u, int v, int X) {
	if (u - X > 0 && d[1][u][v] > X) {
		cnt[u][v]++;
		for (int i = u - X; i <= u; i++)
			b[i][v] = 0;
		if (!cnt[u - X][v])
			calc(u - X, v, X);
	}
	
	if (v - X > 0 && d[0][u][v] > X) {
		cnt[u][v]++;
		for (int i = v - X; i <= v; i++)
			b[u][i] = 0;
		if (!cnt[u][v - X])
			calc(u, v - X, X);
	}

	if (u + X <= n && d[1][u + X][v] > X) {
		cnt[u][v]++;
		for (int i = u; i <= u + X; i++)
			b[i][v] = 0;
		if (!cnt[u + X][v])
			calc(u + X, v, X);
	}
	
	if (v + X <= m && d[0][u][v + X] > X) {
		cnt[u][v]++;
		for (int i = v; i <= v + X; i++)
			b[u][i] = 0;
		if (!cnt[u][v + X])
			calc(u, v + X, X);
	}

	return;
}

bool check(int X) {
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++)            
			cnt[i][j] = 0, b[i][j] = a[i][j];

	calc(x, y, X);

	int coun = 0;

	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++) {
			if (b[i][j] && !cnt[i][j])
				coun += 3;
			coun += cnt[i][j] % 2;
		}

	if (coun == 0 || coun == 2)
		return true;
	return false;
}

int main() {
//	freopen("in", "r", stdin);
	
	cin >> n >> m;

	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= m; j++) {
			cin >> a[i][j];
			if (!x && a[i][j])
				x = i, y = j;
			d[0][i][j] = a[i][j] * (d[0][i][j - 1] + 1);
			d[1][i][j] = a[i][j] * (d[1][i - 1][j] + 1);
			K = max(K, max(d[1][i][j], d[0][i][j]));
		}
	}

	K--;

	for (int i = 2; i <= K; i++)
		if (K % i == 0 && check(i))
			cout << i << ' ', flag = true;

	if (!flag)
		cout << "-1";

	return 0;
}
