#include <stdio.h>
#include <algorithm>
#include <cstring>
#include <vector>
#define For(i,b,e) for(int i=b; i<=e; i++)
using namespace std;
int pre[1010]={0},g[1010][1010],x0,y0,n,m,vis[1010][1010],addx[4]={0,0,-1,1},addy[4]={-1,1,0,0},len,odd;
bool check_edge(int x1,int y1,int x2,int y2){
	if(x2<=0||x2>n||y2<=0||y2>m)return false;
	For(i,min(x1,x2),max(x1,x2))
		For(j,min(y1,y2),max(y1,y2))
			if(!g[i][j])
				return false;
	return true;
}
bool dfs(int x,int y){
	int deg=0;
	vis[x][y]=1;
	For(i,0,3){
		int xt=x+addx[i]*len,yt=y+addy[i]*len;
		if(check_edge(x,y,xt,yt)){
			deg++;
			if(!vis[xt][yt]&&!dfs(xt,yt))
				return false;
			For(i,x,xt)
				For(j,y,yt)
					vis[i][j]=1;
		}
	}
	//printf("%d %d %d\n",x,y,deg);
	if(deg%2){
		odd++;
		//printf("%d %d\n",x,y);
	}
	if(odd>2){
		//printf("%d %d\n",x,y);
		return false;
	}
	return true;
}
bool check(int l){
	len=l;
	memset(vis,0,sizeof(vis));
	odd=0;
	if(!dfs(x0,y0))return false;
	For(i,1,n)
		For(j,1,m)
			if(g[i][j]&&!vis[i][j])
				return false;
	return true;
}
int main(){
#ifndef ONLINE_JUDGE
	freopen("prob.in","r",stdin);
#endif
	scanf("%d%d",&n,&m);
	For(i,1,n)
		For(j,1,m)
			scanf("%d",&g[i][j]);


	int maxl=0;
	For(i,1,n)
		For(j,1,m){
			pre[j]=(pre[j-1]+g[i][j])*g[i][j];
			maxl=max(maxl,pre[j]);
		}
	For(i,1,m)
		For(j,1,n){
			pre[j]=(pre[j-1]+g[j][i])*g[j][i];
			maxl=max(maxl,pre[j]);
		}
	maxl--;
	
	
	bool found=false;
	For(i,1,n){
		For(j,1,m)
			if(g[i][j]){
				x0=i,y0=j;
				found=true;
				break;
			}
		if(found)break;
	}
	
	//printf("%d\n",check(2));
	vector<int> facts,ans;
	for(int i=2; i<=maxl; i++)
		if(maxl%i==0)
			facts.push_back(i);
	for(int i=0; i<facts.size(); i++){
		if(check(facts[i]))
			ans.push_back(facts[i]);
	}
	
	
	if(ans.size())
		For(i,0,ans.size()-1)
			printf("%d ",ans[i]);
	else
		printf("-1");
	return 0;
}
