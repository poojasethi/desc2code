#include<iostream>
#include<cstdlib>
#include<cstdio>
#define N 1010
using namespace std;
int n,m;
int map[N][N],A[N][N];
int gcd(int a,int b) {return !b? a:gcd(b,a%b);}
void out() {
	printf("-1\n");
	exit(0);
}


int used[N][N];
struct Point {
	int x,y;
}qe[N*N];
int X[4]={1,-1,0,0},Y[4]={0,0,1,-1};

void bfs(int sx,int sy) {
	int op=0;
	qe[++op]=(Point){sx,sy};
	used[sx][sy]=1;
	for (int cl=1;cl<=op;++cl) {
		for (int i=0;i<4;++i) {
			int tx=qe[cl].x+X[i],ty=qe[cl].y+Y[i];
			if (tx>=1&&tx<=n&&ty>=1&&ty<=m) {
				if (!map[tx][ty]||used[tx][ty]) continue;
				used[tx][ty]=1;
				qe[++op]=(Point){tx,ty};
			}
		}
	}
}
int main()
{
//	freopen("e.in","r",stdin);
	scanf("%d%d",&n,&m);
	for (int i=1;i<=n;++i) {
		for (int j=1;j<=m;++j) {
			scanf("%d",&map[i][j]);
		}
	}
	
	int br=0;
	for (int i=1;i<=n;++i) {
		for (int j=1;j<=m;++j) if (map[i][j]) {
			bfs(i,j);
			br=1;
			break;
		}
		if (br) break;
	} 
	
	
	int flag=0;
	for (int i=1;i<=n;++i) {
		for (int j=1;j<=m;++j) if (map[i][j]) {
			if (!used[i][j]) out();
			if (i>1&&j>1) {
				if (map[i-1][j-1]&&map[i][j-1]&&map[i-1][j]) out();
			}
			
			int t=map[i-1][j]+map[i+1][j]+map[i][j-1]+map[i][j+1];
			
			if (t&1) flag++;
			if (t==2) {
				if (map[i-1][j]==1&&map[i+1][j]==1) continue;
				if (map[i][j-1]==1&&map[i][j+1]==1) continue;
			}
			A[i][j]=1;
		}
	}
	int G=0;
	if (!(flag==0||flag==2)) out();
	for (int i=1;i<=n;++i) {
		int last=0;
		for (int j=1;j<=m;++j) if (A[i][j]) {
			if (last) {
				G=gcd(G,j-last);
			}
			last=j;
		} else if (!map[i][j]) last=0;
	}
	
	for (int j=1;j<=m;++j) {
		int last=0;
		for (int i=1;i<=n;++i) if (A[i][j]) {
			if (last) {
				G=gcd(G,i-last);
			}
			last=i;
		} else if (!map[i][j]) last=0;
	}
	
	if (G<=1) out();
	for (int i=2;i<=G;++i) if (G%i==0) printf("%d ",i);
	return 0;
}
