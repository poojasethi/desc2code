#include<cmath>
#include<cstdio>
#include<algorithm>
#define LL long long
using namespace std;
LL f[200005],r[200005],d[200005],mi[200005],ma[200005];
LL getfa(LL x)
{
	if(f[x]==x)
		return x;
	LL fx=f[x];
	f[x]=getfa(fx);
	r[x]+=r[fx];
	return f[x];
}
int main()
{
	LL n,m,x,y,a,b,i,total=0,nowmax=-0x7fffffff;
	scanf("%I64d%I64d",&n,&m);
	for(i=1;i<=n;i++)
		f[i]=i;
	mi[1]=0x7fffffff;
	ma[1]=-0x7fffffff;
	mi[n]=0x7fffffff;
	ma[n]=-0x7fffffff;
	for(i=1;i<=m;i++)
	{
		scanf("%I64d%I64d%I64d%I64d",&x,&y,&a,&b);
		d[x]+=b;d[y]-=b;
		total+=a*b*b;
		LL fx=getfa(x);
		LL fy=getfa(y);
		if(fx==fy)
		{
			if(r[x]+a*b==r[y])
				continue;
			return printf("BAD %I64d\n",i),0;
		}
		if(fx!=fy)
		{
			LL f1=getfa(1);
			LL fn=getfa(n);
			LL rfy=r[x]+a*b-r[y];
			LL mifx=min(mi[fy]+rfy,mi[fx]);
			LL mafx=max(ma[fy]+rfy,ma[fx]);
			LL nmax=max(mafx-mifx,nowmax);
			LL r1=f1!=fy?r[1]:r[1]+rfy;
			LL rn=fn!=fy?r[n]:r[n]+rfy;
			if(f1==fx||f1==fy)
				if(mifx<=r1)
					return printf("BAD %I64d\n",i),0;
			if(fn==fx||fn==fy)
				if(mafx>=rn)
					return printf("BAD %I64d\n",i),0;
			getfa(y);
			f[fy]=fx;
			r[fy]=rfy;
			mi[fx]=mifx;
			ma[fx]=mafx;
			nowmax=nmax;
			if(getfa(1)==getfa(n)&&(nowmax>=r[n]-r[1]||r[n]<=r[1]))
				return printf("BAD %I64d\n",i),0;
		}
	}
	if(getfa(1)!=getfa(n))
		return puts("UNKNOWN"),0;
	getfa(1);getfa(n);
	printf("%I64d\n",r[n]-r[1]);
}