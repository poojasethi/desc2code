#include <cstdio>
#include <algorithm>
using namespace std;

const int inf=(int)1e9+7;

int n,r;

int step,mistakes,best=inf,besti;

int gcd(int a,int b){
	if(b==0){
		return a;
	}
	step+=a/b;
	mistakes+=max(0,a/b-1);
	if(b==1&&a>1) mistakes-=1;
	return gcd(b,a%b);
}

bool col=false;

void printgcd(int a,int b){
	if(b==0) return;
	printgcd(b,a%b);
	if(b==1&&a>1){
		putchar(col?'B':'T');
		col^=1;
		for(int i=a/b-1;i;i--)
			putchar(col?'B':'T');
	}
	else{
		for(int i=a/b;i;i--){
			putchar(col?'B':'T');
		}
	}
	if(a/b) col^=1;
	return;
}

int main(){
	scanf("%d%d",&n,&r);
	for(int i=0;i<=r;i++){
		step=0;
		mistakes=0;
		if(gcd(i,r)!=1||step!=n) continue;
		if(mistakes<best){
			best=mistakes;
			besti=i;
		}
	}
	if(best==inf)
		puts("IMPOSSIBLE");
	else{
		printf("%d\n",best);
		printgcd(besti,r),putchar('\n');
	}
}