#include<cstdio>
const int N=1000005;
int a,b,n,ans;
char s[N];
int gcd(int a,int b){return a%b==0?b:gcd(b,a%b);}
void dfs(int x,int y,int k,int c)
{
	if(y==1)
	{
		k+=x;
		c+=x-2;
		if(k==n&&ans>c)
			ans=c,a=b;
		return;
	}
	k+=x/y;
	c+=x/y-1;
	if(c>ans||k>n)return;
	dfs(y,x%y,k,c);
}
void get_s(int x,int y,int n)
{
	int i,k,f;
	if(y==1)
	{
		for(i=1;i<n;i++)
			s[i]='B';
		return;
	}
	k=x/y;	
	get_s(y,x%y,n-k);
	f=s[n-k-1]=='T';
	for(i=n-k;i<n;i++)
		s[i]=f?'B':'T';
}
int main()
{
	int i,r;
	scanf("%d%d",&n,&r);
	ans=r+1;
	if(n>r)printf("IMPOSSIBLE\n");
	else if(n==1&&r==1)printf("0\nT\n");
	else
	{
		for(i=r-1;i>=1;i--)
		{
			if(gcd(r,i)!=1)continue;
			b=i;
			dfs(r,i,0,0);
		}
		if(ans>r)printf("IMPOSSIBLE\n");
		else
		{
			get_s(r,a,n);
			s[0]='T';
			s[n]=0;
			printf("%d\n%s\n",ans,s);
		}
	}
	return 0;
}
 	 			  			  		  	     	 					