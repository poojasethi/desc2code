#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <queue>
#include <deque>
#include <cstring>
#include <string>
using namespace std;
#define fi "input.txt"
#define fo "output.txt"
#define fileopen freopen(fi,"r",stdin);freopen(fo,"w",stdout);
#define FOR(i,l,r) for(int i=(int)l;i<=(int)r;i++)
#define FORD(i,l,r) for(int i=(int)l;i>=(int)r;i--)
#define xy pair<int,int>
#define pb push_back
#define int64 long long
#define X first
#define Y second
#define Sz(s) (int)s.size()
#define init(s,v) memset(s,0,sizeof(s));
#define forever while(true)
#define EL cout<<endl

const int OO = 2e9;
const int MOD = 1e9+7;
const double Pi = 3.141592653589793;
const int N = 1e5+5;

vector<xy> g[N];
int d1[N],dn[N],res[N],q[N],u[N],v[N],w[N],p[N],nxt[N],t=0,n,e,len=OO,length,nr=0;
vector <int> pre[N],a[N],b[N];
bool in[N],inQ[N];

void bfs0() {
    int u,v,l=1,r=1;q[1]=n;init(in,false);in[n]=true;dn[n]=1;
    while (l<=r) {
        u=q[l++];
        FOR(i,0,Sz(g[u])-1) {
            v=g[u][i].X;if (in[v]||g[u][i].Y!=0) continue;
            dn[v]=dn[u]+1;in[v]=true;pre[v].pb(u);q[++r]=v;
        }
    }
}

void bfs1() {
    int u,v,l=1,r=1;q[1]=d1[1]=1;
    while (l<=r) {
        u=q[l];l++;
        if (in[u]) {len=min(len,d1[u]);continue;}
        FOR(i,0,Sz(g[u])-1) {
            v=g[u][i].X;if (d1[v]!=0) continue;
            d1[v]=d1[u]+1;q[++r]=v;
        }
    }
}

void bfs2() {
    int u,v,val,step;length=step=len;init(inQ,false);
    FOR(i,1,n) if (in[i])
        a[1].pb(i),inQ[i]=true;
    FOR(x,2,len) {
        val=10;step--;
        FOR(_,0,Sz(a[x-1])-1) {
            u=a[x-1][_];
            FOR(i,0,Sz(g[u])-1) {
                v=g[u][i].X;if (d1[v]!=step) continue;
                val=min(val,g[u][i].Y);
            }
        }
        FOR(_,0,Sz(a[x-1])-1) {
            u=a[x-1][_];
            FOR(i,0,Sz(g[u])-1) {
                v=g[u][i].X;if (d1[v]!=step||inQ[v]||g[u][i].Y>val) continue;
                if (!inQ[v]) a[x].pb(v);
                pre[v].pb(u);
            }
        }
        res[++nr]=val;
    }
}

void trace() {
    int l=1,r=1,u,v,last=0,x,y;q[1]=1;dn[0]=OO;p[1]=-1;
    while (l<=r) {
        u=q[l++];if (in[u]) continue;
        FOR(i,0,Sz(pre[u])-1) {
            v=pre[u][i];if (p[v]!=0) continue;
            p[v]=u;q[++r]=v;
        }
    }
    FOR(i,1,n) if (in[i]&&p[i]!=0&&dn[i]<dn[last]) last=x=i;
    FOR(i,1,length-1) nxt[p[x]]=x,x=p[x];
    length+=dn[last]-1;x=last;y=dn[x];
    FOR(i,2,y)
        nxt[x]=pre[x][0],x=nxt[x];
}

int main() {
    cin>>n>>e;
    FOR(i,1,e) {
        scanf("%i%i%i",&u[i],&v[i],&w[i]);
        u[i]++;v[i]++;
        g[u[i]].pb(xy(v[i],w[i]));
        g[v[i]].pb(xy(u[i],w[i]));
    }
    bfs0();
    bfs1();
    bfs2();
    trace();
    nr=max(1,nr);
    FOR(i,1,nr) printf("%i",res[i]);EL;
    printf("%i\n",length);
    int x=1;
    FOR(i,1,length) printf("%i ",x-1),x=nxt[x];
}
