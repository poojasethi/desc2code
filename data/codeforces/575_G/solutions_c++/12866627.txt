#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<vector>
#include<queue>
#define maxn 100008
using namespace std;

int dis[maxn],diss[maxn],pre[maxn];

struct yyy
{
    int x,c;
};
vector<yyy> g[maxn];
int vis[maxn];
queue<int> q;
vector<int> ST,ST1;
vector<int> ans;

void bfs(int s)
{
    dis[s] = 0;
    int i,d;
    q.push(s);

    while ( !q.empty() )
    {
        int x = q.front(),y;
        q.pop();
        for (i = 0 ; i < g[x].size() ; i++)
        {
            y = g[x][i].x;
            if (dis[y] > dis[x] + 1)
            {
                dis[y] = dis[x] + 1;
                q.push(y);
            }
        }
    }
}

void gets(int s)
{
    int x,i;
    q.push(s);
    diss[s] = 0;
    int minn = dis[s];

    while ( !q.empty() )
    {
        int x = q.front(),y;
        q.pop();

        if ( dis[x] < minn )
        {
            minn = dis[x];
            ST.clear();
        }
        if (dis[x] == minn)
            ST.push_back(x);

        for (i = 0 ; i < g[x].size() ; i++)
        {
            y = g[x][i].x;
            if (g[x][i].c == 0 && diss[y] > diss[x] + 1)
                q.push(y),diss[y] = diss[x] + 1,pre[y] = x;
        }
    }
}

void bfs1()
{
    int d = dis[ST[0]];
    int x;
    ans.clear();

    while (d)
    {
        ST1.clear();
        d--;
        int i,j,y;
        int minn = 10;
        for (i = 0 ; i < ST.size() ; i++)
            for (x = ST[i] , j = 0 ; j < g[x].size() ; j++)
                if ( dis[g[x][j].x] == d )
                    minn = min(minn , g[x][j].c);
        ans.push_back(minn);
        for (i = 0 ; i < ST.size() ; i++)
            for (x = ST[i] , j = 0 ; j < g[x].size() ; j++)
            {
                y = g[x][j].x;
                if ( dis[y] == d && g[x][j].c == minn && vis[y] == 0)
                    vis[y] = 1 , ST1.push_back(y),pre[y] = x;
            }

        ST.clear();

        for (i = 0 ; i < ST1.size() ; i++)
            ST.push_back(ST1[i]);
    }
}

int dfs(int x,int d)
{
    int s = 1;
    int i = x;
    while (i != d)
    {
        i = pre[i];
        s++;
    }
    return s;
}

int main()
{
    int n,m;
    cin>>n>>m;
    int i;
    int x,y,c;
memset(dis,0x3f,sizeof(dis));
memset(diss,0x3f,sizeof(diss));

    for (i = 1 ; i <= m ; i++)
    {
        cin>>x>>y>>c;

        g[x].push_back( (yyy){ y , c} );
        g[y].push_back( (yyy){ x , c} );
    }

    bfs(0);
    gets(n - 1);

    bfs1();

    if (ans.size() == 0) cout<<0;
    for (i = 0 ; i < ans.size() ; i++)
        cout<<ans[i];
    cout<<endl;
//cout<<"xx"<<endl;
    printf("%d\n",dfs(0 , n-1));
//cout<<"xx"<<endl;
    i = 0;
    while (i != n - 1)
    {
        printf("%d ",i);
        i = pre[i];
    }
    printf("%d\n",i);

    return 0;
}
