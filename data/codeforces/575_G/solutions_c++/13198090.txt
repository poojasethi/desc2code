#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iostream>
#include<algorithm>
using namespace std;
int i,j,k,l,n,m,s,an,K,X,tot=1,oo;
const int N=210000;
int e[N],next[N],go[N],v[N];
int g[N],f[N],f2[N],fa[N],fx[N];
int ans[N],w[N];
bool ff[N];
void add(int x,int y,int z)
{
	tot++;e[tot]=y;next[tot]=go[x];go[x]=tot;v[tot]=z;
}
int sma(int x1,int x2)
{
	if (x1==x2) return 1;
	for (;(x1!=x2);x1=e[fa[x1]^1],x2=e[fa[x2]^1])
	{
		if (v[fa[x1]]<v[fa[x2]]) return 1;
		if (v[fa[x1]]>v[fa[x2]]) return -1;
	}
	return 0;
}
int main()
{
	scanf("%d%d",&n,&m);
	for (int i=1;i<=m;i++)
	{
		int x,y,z;
		scanf("%d%d%d",&x,&y,&z);
		x++,y++;
		add(x,y,z);
		add(y,x,z);
	}
	int l=0;
	int r=1;
	memset(f,2,sizeof(f));
	oo=f[0];
	memset(fa,0,sizeof(fa));
	g[1]=n;
	f[n]=0;
	while (l!=r)
	{
		l=(l+1)%N;
		int x=g[l];
		ff[x]=false;
		for (int p=go[x];p;p=next[p])
		if (v[p]==0)
		{
			if (f[x]+1<f[e[p]])
			{
				f[e[p]]=f[x]+1;
				fa[e[p]]=p;
				if (!ff[e[p]])
				{
					ff[e[p]]=true;
					r=(r+1)%N;
					g[r]=e[p];
				}
			}
		}
	}
	memcpy(f2,f,sizeof(f2));
	memcpy(fx,fa,sizeof(fx));
	memset(f,2,sizeof(f));
	memset(fa,0,sizeof(fa));
	l=0;
	r=1;
	g[1]=1;
	f[1]=0;
	k=0;
	while (l!=r)
	{
		l=(l+1)%N;
		int x=g[l];
		ff[x]=false;
		if (f[x]>f[k]) continue;
		if (f2[x]!=oo)
		{
			if (f[x]<f[k]) k=x;
			else if (f[x]==f[k])
			if ((sma(x,k)==1)||((sma(x,k)==0)&&(f2[x]<f2[k])))
			k=x;
		}	
		for (int p=go[x];p;p=next[p])
		{
			int y=e[p];
		/*	if ((f[x]+1<f[y])||
			((f[x]+1==f[e[p]])&&((v[p]<v[fa[e[p]]])))||
			((f[x]+1==f[e[p]])&&(v[p]==v[fa[e[p]]])&&(sma(x,e[fa[e[p]]^1])==1)))
		*/
			if (f[x]+1<=f[y])
			if ((f[x]+1<f[y])||
			   (v[p]<v[fa[y]])||
			   ((v[p]==v[fa[y]])&&(sma(x,e[fa[y]^1])==1)))
			{
				f[y]=f[x]+1;
				fa[y]=p;
				if (!ff[y])
				{
					ff[y]=true;
					r=(r+1)%N;
					g[r]=y;
				}
			}
		}
	}
	for (int x=k;x;x=e[fa[x]^1])
	ans[++an]=x,w[an]=v[fa[x]];
	for (int i=1;i<=an/2;i++) swap(ans[i],ans[an-i+1]);
	int kk=an-1;
	if (k!=n)
	for (int x=e[fx[k]^1];x;x=e[fx[x]^1])
	ans[++an]=x;//,w[an]=v[fa[x]];
	for (int i=1;i<=kk;i++) printf("%d",w[i]);
	if (!kk) printf("0");
	printf("\n");
	printf("%d\n",an);
	for (int i=1;i<=an;i++) printf("%d ",ans[i]-1);
	printf("\n");
	return 0;
}