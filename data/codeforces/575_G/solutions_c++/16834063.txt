#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <cmath>
#include <cstdio>
#include <vector>
#include <string>
#include <cctype>
#include <bitset>
#include <cstdlib>
//#include <ctime>
#include <iomanip>
#include <cstring>
#include <climits>
#include <utility>
#include <iostream>
#include <algorithm>
#define eps 1e-9
using namespace std;
/*
	Source:
	Author:szr(Age_of_CPP_Empires)
	Date:
*/
vector<pair<int,int> > gra[100005];
int n,m,dis[100005],fa[100005],mi[100005];
int main()
{
	scanf("%d%d",&n,&m);
    for(int i=0;i<m;i++)
    {
        int acs,bcs,ccs;
        scanf("%d%d%d",&acs,&bcs,&ccs);
        gra[acs].push_back(make_pair(bcs,ccs));
        gra[bcs].push_back(make_pair(acs,ccs));
    }
    queue<int> q;
    q.push(n-1);
    memset(dis,-1,sizeof(dis));
    dis[n-1]=0;
    queue<vector<int> > sbs;
    sbs.push(vector<int>());
    while(!q.empty())
    {
        int u=q.front();
        q.pop();
        //printf("%d\n",u);
        sbs.front().push_back(u);
        for(int i=0;i<gra[u].size();i++)
        {
            int j=gra[u][i].first,cost=gra[u][i].second;
            if(cost!=0||dis[j]==0) continue;
            dis[j]=0;
            fa[j]=u;
            q.push(j);
        }
    }
    int stamp=0;
    while(!sbs.empty())
    {
        vector<int> now=sbs.front();
        sbs.pop();
        vector<int> vis;
        //for(int i=0;i<now.size();i++) printf("%d\n",now[i]);
        stamp++;
        for(int i=0;i<now.size();i++)
        {
                    int u=now[i];
                    for(int j=0;j<gra[u].size();j++)
                    {
                        int v=gra[u][j].first,cost=gra[u][j].second;
                        if(dis[v]==-1)
                        {
                            dis[v]=stamp;
                            fa[v]=u;
                            mi[v]=cost;
                            vis.push_back(v);
                        }
                        else if(dis[v]==stamp&&cost<mi[v])
                        {
                            mi[v]=cost;
                            fa[v]=u;
                        }
                    }
        }
        vector<int> bucket[10];
        for(int i=0;i<vis.size();i++) bucket[mi[vis[i]]].push_back(vis[i]);
        for(int i=0;i<10;i++) if(bucket[i].size()>0) sbs.push(bucket[i]);
    }
    string ans;
    int is=0;
    vector<int> lu;
    lu.push_back(0);
    while(is!=n-1)
    {
               if(dis[is]!=0) ans+=char(mi[is]+'0');
               is=fa[is];
               lu.push_back(is);
    }
    if(ans.size()==0) puts("0");
    else
    {
        for(int i=ans.size()-1;i>=0;i--) printf("%c",ans[i]);
        printf("\n");
    }
    printf("%d\n",lu.size());
    for(int i=0;i<lu.size();i++) printf("%d ",lu[i]);
    printf("\n");
    //system("pause");    
	return 0;
}
