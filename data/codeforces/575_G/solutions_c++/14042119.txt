#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;
#define rep(i,n) for(int i = 0, _n = (n); i < _n; ++i)
#define foru(i,a,b) for(int i = (a), _b = (b); i <= _b; ++i)
#define ford(i,a,b) for(int i = (a), _b = (b); i >= _b; --i)
#define pb push_back
const int maxn = 1e5 + 10;
typedef pair<int, int> pii;
int n, m;
vector<pii> a[maxn];
vector<int> u, v;
int cha[maxn], d[maxn];

void enter() {
    scanf("%d %d", &n, &m);
    rep(i,m) {
        int x, y, c;
        scanf("%d %d %d", &x, &y, &c);
        a[x].pb(pii(y, c));
        a[y].pb(pii(x, c));
    }
}

void init() {
    queue<int> q;
    rep(i,n) cha[i] = -1;
    cha[n-1] = -2;
    u.pb(n-1); q.push(n-1);
    while (! q.empty())
    {
        int v = q.front(); q.pop();
        rep(i,a[v].size()) if (a[v][i].second == 0)
        {
            int to = a[v][i].first;
            if (cha[to] == -1)
            {
                cha[to] = v;
                u.pb(to);
                q.push(to);
            }
        }
    }
}

void solve() {
    queue< vector<int> > q;
    q.push(u);
    while (! q.empty() )
    {
        u = q.front(); q.pop();
        rep(turn,10)
        {
            v.clear();
            rep(i,u.size()) {
                int from = u[i];
                rep(j,a[from].size())
                {
                    if (a[from][j].second != turn) continue;
                    int to = a[from][j].first;
                    if (cha[to] == -1) {
                        cha[to] = from;
                        d[to] = turn;
                        v.pb(to);
                    }
                }
            }
            if (! v.empty()) q.push(v);
        }
    }
}

void show() {
    vector<int> x, y;
    for(int v = 0; v != n-1; v = cha[v]) {
        x.pb(v); y.pb(d[v]);
    }
    x.pb(n-1);
    while (y.size() > 1 && y.back() == 0) y.pop_back();
    ford(i,y.size()-1,0) printf("%d", y[i]);
    printf("\n%d\n", (int) x.size());
    rep(i,x.size()) printf("%d ", x[i]);
}

int main() {
    //freopen("test.inp", "r", stdin);
    enter();
    init();
    solve();
    show();
}
