#include<bits/stdc++.h>
using namespace std;
bool ch[100010];
typedef pair<int,int> ii;
typedef pair<ii,int> iii;
vector<ii> a[100010];
vector<iii> qu[100100];
vector<int> ans;
ii d[100100];
int nex[100100];
int nexx[100100];
int from[100100];
int n;
void init()
{
    ch[n-1]=true;
    queue<int> qu;
    qu.push(n-1);
    while(!qu.empty())
    {
        int x=qu.front(); qu.pop();
        for(int i=0;i<a[x].size();i++)
        {
            int y=a[x][i].first;
            if(a[x][i].second!=0 || ch[y]) continue;
            from[y]=from[x]+1;
            nex[y]=x;
            nexx[y]=-1;
            ch[y]=true; qu.push(y);
        }
    }
}
void tracemore(int x)
{
    ans.push_back(x);
    if(x==n-1) {return;}
    tracemore(nex[x]);
}
void trace(int x)
{
    if(nexx[x]==-1) return;
    if(x==n-1) {return;}
    trace(nex[x]);
    printf("%d",nexx[x]);
}
int main()
{
    int m,i;
    //freopen("test.inp","r",stdin);
    scanf("%d %d",&n,&m);
    memset(nex,0x3f,sizeof nex);
    for(i=1;i<=m;i++)
    {
        int x,y,z;
        scanf("%d %d %d",&x,&y,&z);
        a[x].push_back(ii(y,z));
        a[y].push_back(ii(x,z));
    }
    init();
    for(i=0;i<n;i++) d[i]=ii(n+1,10);
    for(i=0;i<n;i++)
        if(ch[i]) qu[0].push_back(iii(ii(0,0),i));
    for(int dummy=0;;dummy++)
    {
        if(qu[dummy].size()==0) break;
        sort(qu[dummy].begin(),qu[dummy].end());
        int cnt=0;
        queue<ii> q;
        set<int> st;
        for(i=0;i<qu[dummy].size();i++)
        {
            q.push(ii(cnt,qu[dummy][i].second));
            ch[qu[dummy][i].second]=true;
            //printf("get %d %d %d %d\n",cnt,qu[dummy][i].second,qu[dummy][i].first.first,qu[dummy][i].first.second);
            if(qu[dummy][i].first.first==qu[dummy][i+1].first.first && qu[dummy][i].first.second==qu[dummy][i+1].first.second) cnt--;
            cnt++;
        }
        while(!q.empty())
        {
            int dis=q.front().first;
            int x=q.front().second; q.pop();
            for(i=0;i<a[x].size();i++)
            {
                int y=a[x][i].first;
                if(ch[y]) continue;
                if(d[y]==ii(dis,a[x][i].second) && (nex[y]==nex[n] || from[x]<from[y])) {from[y]=from[x];nex[y]=x; nexx[y]=a[x][i].second;}
                if(d[y]>ii(dis,a[x][i].second) ) {from[y]=from[x];nex[y]=x; nexx[y]=a[x][i].second;}
                d[y]=min(d[y],ii(dis,a[x][i].second));
                st.insert(y);
            }
        }
        while(st.size())
        {
                int y=*st.begin(); st.erase(y);
                qu[dummy+1].push_back(iii(ii(d[y].first,d[y].second),y));
        }
    }
    //for(i=0;i<n;i++) printf("%d %d\n",i,nex[i]);
    trace(0);
    if(nexx[0]==-1) printf("0");
    printf("\n");
    tracemore(0);
    printf("%d\n",ans.size());
    for(i=0;i<ans.size();i++)
    {
        printf("%d ",ans[i]);
    }
}
