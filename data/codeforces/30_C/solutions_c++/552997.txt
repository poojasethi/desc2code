#include <iostream>
#include <algorithm>
#include <cstdio>
using namespace std;
#define sqr(x) ((x)*(x))
struct tir
{
  long long x, y, t;
  double p;
};
bool cmp(tir a, tir b) {return a.t < b.t;}
tir a[1005];
double dp[1005];
int main()
{
  int n;
  cin >> n;
  for(int i = 0; i < n; i++) cin >> a[i].x >> a[i].y >> a[i].t >> a[i].p;
  sort(a, a + n, cmp);
  double ans = 0;
  for(int i = 0; i < n; i++) dp[i] = a[i].p;
  for(int i = 0; i < n; i++)
    for(int j = i + 1; j < n; j++) 
      if (sqr(a[j].t - a[i].t) >= sqr(a[i].x - a[j].x) + sqr(a[i].y - a[j].y)) 
        dp[j] = max(dp[j], dp[i] + a[j].p);
  for(int i = 0; i < n; i++) ans = max(ans, dp[i]);
  printf("%.7f", ans);
  return 0;
}
/*
3
0 4 5 0.4
0 0 0 0.4
0 2 4 0.3
*/