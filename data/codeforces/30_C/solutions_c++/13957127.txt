#include <iostream>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <memory.h>
using namespace std;
double ca[1000];
struct t{
	int x,y,t;
	double p;
	void scan(){
		cin>>x>>y>>t>>p;
	}
}ar[1000];
struct comp{
	bool operator()(const t &a,const t &b)const{
		return a.t<b.t;
	}
};
inline double sq(double x){
	return x*x;
}
int main(){
	int n,pos=0;
	for(cin>>n;pos<n;++pos)
		ar[pos].scan();
	sort(ar,ar+n,comp());
	memset(ca,0,sizeof(ca));
	double ret=0;
	for(int i=0;i<n;++i){
		ca[i]= ar[i].p;
		ret= max(ca[i],ret);
	}
	double cur,next;
	for(int i=0;i<n;++i)
		for(int j=i+1;j<n;++j){
			if(sq(ar[j].t-ar[i].t) - sq(ar[j].y-ar[i].y) - sq(ar[j].x-ar[i].x)<0 ) continue;
			ca[j]= max(ca[j], ca[i]+ ar[j].p);
			ret= max(ret,ca[j]);
		}
	printf("%0.6lf\n",ret);
}
