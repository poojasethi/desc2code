#include <cstdio>
#include <algorithm>
using namespace std;

typedef long long llong;

const int N = 1024;

int x[N], y[N], t[N], n;
double p[N];

double dp[N];

double go(int k)
{
	if(dp[k] > -1e100) return dp[k];
	dp[k] = p[k];
	for(int i = 0; i < n; i++) if(t[i] > t[k]) {
		llong dist = (x[k]-x[i])*(x[k]-x[i])+(y[k]-y[i])*(y[k]-y[i]);
		llong maxl = 1LL*(t[i]-t[k])*(t[i]-t[k]);
		if(dist > maxl) continue;
		dp[k] = max(dp[k], p[k]+go(i));
	}
	return dp[k];
}

int main()
{
	scanf("%d", &n);
	for(int i = 0; i < n; i++) scanf("%d %d %d %lf", &x[i], &y[i], &t[i], &p[i]);
	for(int i = 0; i < n; i++) dp[i] = -1e200;
	double res = 0;
	for(int i = 0; i < n; i++) res = max(res, go(i));
	printf("%.8lf\n", res);
	return 0;
}

