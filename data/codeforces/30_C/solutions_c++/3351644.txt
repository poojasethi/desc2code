#include <stdio.h>
#include <math.h>
#include <algorithm>
using namespace std;
#define rep(i, n) for(int i=0; i<(int)(n); i++)

int n;
struct target { int x, y, t; double p; };
bool operator<(const target& l, const target& r) {
    return l.t<r.t;
}
target t[1000];
double dp[1000];

int main() {
    scanf("%d", &n);
    rep(i, n) scanf("%d%d%d%lf", &t[i].x, &t[i].y, &t[i].t, &t[i].p);
    sort(t, t+n);
    rep(i, n) {
        double d=0;
        rep(j, n) {
            if(hypot(t[i].x-t[j].x, t[i].y-t[j].y)<=(t[i].t-t[j].t)) {
                d = max(d, dp[j]);
            }
        }
        dp[i] = d + t[i].p;
    }
    double ans=0;
    rep(i, n) ans=max(ans, dp[i]);
    printf("%.8f\n", ans);
    return 0;
}