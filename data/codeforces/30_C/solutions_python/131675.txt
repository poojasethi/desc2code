#!/usr/bin/python
import sys
import math
def dist(a, b):
    (x1, y1) = a['x'],a['y']
    (x2, y2) = b['x'],b['y']
    return math.sqrt((x1-x2)**2 + (y1-y2)**2)
n = int(sys.stdin.readline())
L = []
P = []
for i in xrange(n):
    x, y, t, p = sys.stdin.readline().split(' ')
    x, y, t = map(int, [x,y,t])
    L.append(dict(x=x,y=y,t=t,p=eval(p)))

#print L
L.sort(cmp = lambda a,b : cmp(a['t'],b['t']))
#print L

dp = [0]*(n+1)
dp[0] = L[0]['p']
res = dp[0]
for i in xrange(1,n):
    dp[i] = L[i]['p']
    for j in xrange(0,i):
        if dist(L[i],L[j])<=L[i]['t']-L[j]['t']:
            dp[i] = max(dp[i],dp[j]+L[i]['p'])
    res = max(res,dp[i])

print res


