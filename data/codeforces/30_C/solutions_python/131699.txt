import sys
import math

class D:
  def __init__(self, x, y, time, point):
    self.x = x
    self.y = y
    self.time = time
    self.point = point

def calc(xs):
  xs.sort(key=lambda a: a.time)

  dp = [0] * len(xs)
  for i in range(len(xs)):
    dp[i] = xs[i].point
    for j in range(i):
      d = math.hypot(xs[i].x-xs[j].x, xs[i].y-xs[j].y)
      if d+xs[j].time <= xs[i].time:
        dp[i] = max(dp[i], dp[j] + xs[i].point)

  return max(dp)

def main():
  n = sys.stdin.readline()
  xs = []
  for i in range(int(n)):
    s = sys.stdin.readline()
    s = s.split()
    xs.append(D(int(s[0]), int(s[1]), int(s[2]), float(s[3])))

  print calc(xs)

main()
