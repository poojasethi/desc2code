#!/usr/bin/env python
import sys


def read_problem(instream):
    n = int(instream.readline().strip())
    a = list()
    for line in instream:
        if len(line.strip()) <= 0:
            continue
        columns = [int(x) for x in line.strip().split(' ')]
        assert len(columns) == n
        assert columns[len(a)] == 0
        a.append(columns)
    return n, a


def print_a(n, a):
    for i in xrange(n):
        for j in xrange(n):
            sys.stdout.write("%d " % a[i][j])
        sys.stdout.write("\n")


def solve(n, a):
    for i in xrange(n):
        a[i][i] = max(a[i])
    return a


def yeild_res(a):
    for i in xrange(len(a)):
        yield a[i][i]


if __name__ == '__main__':
    n, a = read_problem(sys.stdin)
    if n == 1:
        print '1'
        exit()
    a = solve(n, a)
    # print_a(n, a)
    s = ' '.join(str(x) for x in yeild_res(a))
    print s.replace(str(n-1), str(n), 1)
