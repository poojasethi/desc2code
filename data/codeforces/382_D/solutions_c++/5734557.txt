#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>

using namespace std;

typedef unsigned long long i64 ;

vector<int>g[2010*2010];
int vis[2010*2010];
char s[2010][2010];
int bfs(int x)
{
	queue<int>q;
	q.push(x);
	vis[x]=1;
	int res=0;
	while(!q.empty())
	{
		int y=q.front();
		q.pop();
		res=vis[y];
		for(int i=0;i<g[y].size();++i)
			vis[g[y][i]]=vis[y]+1,q.push(g[y][i]);
	}
	return res;
}
int main()
{
	int n,m;
	cin>>n>>m;
	for(int i=0;i<n;++i)
	{
		scanf("%s",s[i]);
		for(int j=0;j<m;++j)
		{
			if(s[i][j]=='^')
				g[(i-1)*m+j].push_back(i*m+j);
			else if(s[i][j]=='v')
				g[(i+1)*m+j].push_back(i*m+j);
			else if(s[i][j]=='<')
				g[i*m+j-1].push_back(i*m+j);
			else if(s[i][j]=='>')
				g[i*m+j+1].push_back(i*m+j);
		}
	}
	vector<int>vt;
	for(int i=0;i<n;++i)
		for(int j=0;j<m;++j)if(s[i][j]=='#')
			for(int k=0;k<g[i*m+j].size();++k)
				vt.push_back(bfs(g[i*m+j][k]));
	bool fin=false;
	for(int i=0;i<n;++i)
		for(int j=0;j<m;++j)
			fin|=(s[i][j]!='#'&&!vis[i*m+j]);
	if(fin)
		puts("-1");
	else
	{
		sort(vt.begin(),vt.end());
		if(vt.size()==0)
			puts("0");
		else if(vt.size()==1)
			cout<<vt[0]+vt[0]-1<<endl;
		else
			cout<<max(vt.back()+vt[vt.size()-2],vt.back()+vt.back()-1)<<endl;
	}
	return 0;
}
