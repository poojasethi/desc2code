#include <cstdio>

#define N 2000
#define MX 1000000000

int a[N][N], aw[N][N], x, y, i, j, n, m, k, dx[5] = {0, -1, 1, 0, 0}, dy[5] = {0, 0, 0, 1, -1}, t, p;
char b[N][N], c;

void go(int x, int y)
{
	if (aw[x][y] != p)
	{
		aw[x][y] = p;
		if (b[x][y] && !a[x][y])
		{
			go(x + dx[b[x][y]], y + dy[b[x][y]]);
			a[x][y] = ++k;
		}
		else
			k = a[x][y];
	}
	else
		t = MX;
}

void gd1(int x, int y)
{
	if (b[x][y])
	{
		aw[x][y] = 1;
		gd1(x + dx[b[x][y]], y + dy[b[x][y]]);
	}
}

void gd(int x, int y)
{
	if (b[x][y] && !aw[x][y])
	{
		gd(x + dx[b[x][y]], y + dy[b[x][y]]);
		++k;
	}
}

int main()
{
	scanf("%d%d", &n, &m);

	for (i = 0; i < n; i ++)
		for (j = 0; j < m; j ++)
		{
			c = getchar();
			while (c != '#' && c !='^' && c !='v' && c != '>' && c !='<')
				c = getchar();
			switch (c)
			{
				case '^': b[i][j] = 1; break;
				case 'v': b[i][j] = 2; break;
				case '>': b[i][j] = 3; break;
				case '<': b[i][j] = 4; break;
				default: break;
			}
		}

	for (i = 0; i < n; i ++)
		for (j = 0; j < m; j ++)
			if (!a[i][j] && b[i][j])
			{
				k = 0;
				++ p;
				go(i, j);
				if (k > t)
					t = k;
			}

	if (t == MX)
		puts("-1");
	else
	{
		x = 0;
		p = t + t - 1;
		if (p < 0)
			p = 0;
		for (i = 0; i < n; i ++)
			for (j = 0; j < m; j ++)
				aw[i][j] = 0;
		for (i = 0; i < n; i ++)
			for (j = 0; j < m; j ++)
				if (a[i][j] == t)
					if (!x)
					{
						gd1(i, j);
						x = 1;
					}
					else
					{
						k = 0;
						gd(i, j);
						if (t + k > p)
							p = t + k;
					}
		printf("%d\n", p);
	}

	return 0;
}
