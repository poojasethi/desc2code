#include <iostream>
#include <cstdio>

using namespace std;

int N, M;
char c[3000][3000];
bool visit[3000][3000];
int DP[3000][3000];

int vx[] = { 1, 0, -1, 0};
int vy[] = { 0, 1, 0, -1};
char vc[] = { '^', '<', 'v', '>'};

int mx1, mx2;
bool flag;

int DFS(int X, int Y)
{
    visit[X][Y] = true;
    int re = 1;

    for(int i = 0; i < 4; i++)
    {
        int _X = X+vx[i], _Y = Y+vy[i];

        if( 0 <= _X && _X < N &&
            0 <= _Y && _Y < M &&
            c[_X][_Y] == vc[i] )
        {
            int t;
            if( visit[_X][_Y] )
            {
                t = DP[_X][_Y];
                if(!t) flag = true;
            }
            else t = DFS(_X, _Y);

            re = max(re, t+1);
        }
    }

    DP[X][Y] = re;
    if( re > mx1 ) mx2 = mx1, mx1 = re;
    else if( re > mx2 ) mx2 = re;
    return re;
}

int main()
{
    scanf("%d %d", &N, &M);

    for(int Ni = 0; Ni < N; Ni++)
        scanf("%s", c[Ni]);

    for(int Ni = 0; Ni < N; Ni++)
        for(int Mi = 0; Mi < M; Mi++)
            if( c[Ni][Mi] != '#' && !visit[Ni][Mi] )
                DFS( Ni, Mi);

    if( flag ) puts("-1");
    else printf("%d\n", mx1+mx2);
}
