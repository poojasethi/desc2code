#include <cstdio>
#include <algorithm>
using namespace std;

const int di[4] = {0, -1, 0, 1};
const int dj[4] = {-1, 0, 1, 0};
const char arrow[4] = {'>', 'v', '<', '^'};

int m, n, cnt, max1, max2;
char a[2000][2000];

void doc() {
    scanf("%d%d", &m, &n);
    for (int i = 0; i < m; i++)
        scanf("%s", &a[i]);
}

int dfs(int i, int j, char dir) {
    if (i < 0 || i >= m || j < 0 || j > n || a[i][j] != dir) return 0;

    cnt++;
    int l = 0;
    for (int k = 0; k < 4; k++)
        l = max(l, 1+dfs(i+di[k], j+dj[k], arrow[k]));
    return l;
}

void xuli () {
    cnt = 0;
    max1 = 0;
    max2 = 0;
    for (int i = 0; i < m; i++)
        for (int j = 0; j < n; j++)
            if (a[i][j] == '#') {
                cnt++;
                for (int k = 0; k < 4; k++) {
                    int d = dfs(i+di[k], j+dj[k], arrow[k]);
                    if (d > max1)
                        max2 = max1, max1 = d;
                    else
                        if (d > max2) max2 = d;
                }
            }
}

void ghi() {
    if (cnt < m*n)
        printf("-1\n");
    else
        if (max1 == max2)
            printf("%d\n", 2*max1);
        else
            printf("%d\n", 2*max1-1);
}

int main () {
    //freopen("test00e.in", "r", stdin);
    //freopen("", "w", stdout);
    doc();
    xuli();
    ghi();
    return 0;
}
