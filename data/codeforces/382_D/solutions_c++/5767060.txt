#include <cstdio>
#include <string>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <cmath>
#include <functional>
#include <set>
#include <queue>


#define inf 1<<25
#define ll long long
#define maxn 2*1001
#define lson l,mid,2*id
#define rson mid+1,r,2*id+1
#define pii pair<int,int>
#define ff first
#define ss second
#define mp make_pair

using namespace std;

vector<pii> ham[maxn][maxn];
string c[maxn];
int vis;

int dfs(int i,int j)
{
	int s=0;
	vis++;
	for(int k=0;k<ham[i][j].size();k++)
	{
		pii u=ham[i][j][k];
		int x=u.ff,y=u.ss;
		s=max(dfs(x,y),s);
	}
	return s+1;
}
int m1,m2;

void add(int a)
{
	if(a==m1)
		m2=a;
	else
		m1=max(m1,a);
}

int main()
{
	int n,m;
	cin>>n>>m;
	for(int i=0;i<n;i++)
		cin>>c[i];
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++)
		{
			if(i<n-1 && c[i+1][j]=='^')
				ham[i][j].push_back(mp(i+1,j));
			if(j<m-1 && c[i][j+1]=='<')
				ham[i][j].push_back(mp(i,j+1));
			if(i>0 && c[i-1][j]=='v')
				ham[i][j].push_back(mp(i-1,j));
			if(j>0 && c[i][j-1]=='>')
				ham[i][j].push_back(mp(i,j-1));
		}
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++)
			if(c[i][j]=='#')
			{
				vis++;
				if(i>0 && c[i-1][j]=='v')
					add(dfs(i-1,j));
				if(j>0 && c[i][j-1]=='>')
					add(dfs(i,j-1));
				if(i<n-1 && c[i+1][j]=='^')
					add(dfs(i+1,j));
				if(j<m-1 && c[i][j+1]=='<')
					add(dfs(i,j+1));
			}
	cout<<(vis<n*m? -1: m1==m2? 2*m1: 2*m1-1)<<endl;
    return 0;
}
