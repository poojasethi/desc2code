/// asdasdasda as dasd 
#include <bits/stdc++.h>
using namespace std;
#define FREP(b) for(int i=0;i<b;i++)
#define REP(a,b,c) for(int a=b;a<c;a++)
#define asd(x) cout << "Here for " << #x << " :" <<x << endl;
#define asdf(x, y)  cout << "Here FOR " << #x << " :" << x << " " << #y  << " :" << y << endl;
typedef pair<int,int> ii;
typedef long long LL;

char G[2008][2008];
bool vis[2008][2008], here[2008][2008];
int len[2008][2008], comp[2008][2008];
int n, m, cnt=0, cur=0;
bool inf = false;

map<char, int> d;

int dx[4] = {-1,1,0,0};
int dy[4] = {0,0,-1,1};

void dfs(int i, int j){

	if(vis[i][j]){
		if(!here[i][j]){
			inf = true;
		}
		return;
	}
	vis[i][j] = 1;
	if(G[i][j] == '#'){
		len[i][j] = 0;
	}
	else{
		int dir = d[G[i][j]];
		dfs(i + dx[dir], j + dy[dir]);
		len[i][j] = len[i + dx[dir]][j + dy[dir]] + 1;
		if(len[i][j] == 1){
			comp[i][j] = cur++;
		}
		else{
			comp[i][j] = comp[i + dx[dir]][j + dy[dir]];
		}
	}
	here[i][j] = true;
}

int main(){
	cin >> n >> m;
	d['^'] = 0, d['v'] = 1, d['<'] = 2, d['>'] = 3;

	REP(i ,0, n) REP(j,0,m) cin >> G[i][j];
	REP(i ,0 ,n) REP(j, 0, m) if(!vis[i][j]){
		cnt++;
		dfs(i, j);
	}
	if(inf) cout << -1 << endl;

	else{
		int maxi = 0, no = 0, id;
		REP(i,0,n) REP(j,0,m){
			if(len[i][j] == maxi && id != comp[i][j]) no++;
			else if(len[i][j] > maxi) maxi = len[i][j], no = 1, id = comp[i][j];
		}
		if(no > 1) cout << maxi*2 << endl;
		else cout << max(0, 2*maxi - 1) << endl;
	}
}