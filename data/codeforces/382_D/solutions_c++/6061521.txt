// Resubmit Code
#include<stdio.h>
#include<algorithm>
using namespace std;
char s[3001][3001];
int d[3001][3001];
const int dx[]={0,1,0,-1};
const int dy[]={1,0,-1,0};
const char ds[]=">v<^";
bool vis[3001][3001];
int dp[3001][3001][2];
int n,m;
int bfs[3001*3001][2];
int T;
int anss[2];
void Update(int ans[],int x,int y){
	if(x>ans[1]){
		ans[1]=x;
		if(ans[1]>ans[0]) swap(ans[1],ans[0]);
		if(y>ans[1]) ans[1]=y;
	}
}
int main(){
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;++i) scanf("%s",s[i]);
	for(int i=0;i<n;++i) for(int j=0;j<m;++j){
		dp[i][j][0]=0,dp[i][j][1]=-1;
		if(s[i][j]!='#'){
			for(int k=0;k<4;++k) if(ds[k]==s[i][j]){
				++d[i+dx[k]][j+dy[k]];
			}
		}
	}
	T=-1;
	for(int i=0;i<n;++i) for(int j=0;j<m;++j){
		if(!d[i][j]) ++T,bfs[T][0]=i,bfs[T][1]=j;
	}
	for(int i=0;i<=T;++i){
		int x=bfs[i][0],y=bfs[i][1];
		if(s[x][y]=='#'){
			Update(anss,dp[x][y][0],dp[x][y][1]);
		}
		else{
			if(dp[x][y][0]==dp[x][y][1]) --dp[x][y][1];
			for(int k=0;k<4;++k){
				if(s[x][y]==ds[k]){
					int nx=x+dx[k],ny=y+dy[k];
					Update(dp[nx][ny],dp[x][y][0]+1,dp[x][y][1]+1);
					if(--d[nx][ny]==0) ++T,bfs[T][0]=nx,bfs[T][1]=ny;
				}
			}
		}
	}
	if(T!=n*m-1) printf("-1\n");
	else printf("%d\n",anss[0]+anss[1]);
	scanf("%d",&n);
	return 0;
}