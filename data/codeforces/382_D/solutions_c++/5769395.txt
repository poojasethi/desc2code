#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<string.h>
#include<queue>
#include<vector>
#include<string>
using namespace std;

#define ll long long
#define llu unsigned long long int
#define N 2010
#define all(x) x.begin(),x.end()
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define inf 0x3f3f3f3f
#define mod 1000000007
int d[N][N],v[N][N];char s[N][N];
queue<pii>q;
void cmp(int i,int j,int x,int y)
{
	if(d[i][j]<d[x][y]+1)d[i][j]=d[x][y]+1,q.push(mp(i,j));
}
bool move(int x,int y)
{
	if(s[x][y]=='#')return 1;
	if(v[x][y])return 0;
	v[x][y]=1;
	if(s[x][y]=='^')return move(x-1,y);
	if(s[x][y]=='v')return move(x+1,y);
	if(s[x][y]=='>')return move(x,y+1);
	if(s[x][y]=='<')return move(x,y-1);
}
int main()
{
	int n,m,i,j,k;
	while(~scanf("%d%d",&n,&m))
	{
		for(i=0;i<n;i++)scanf("%s",s[i]);
		memset(d,0,sizeof(d));
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			if(s[i][j]=='#')q.push(mp(i,j));
		}
		while(!q.empty())
		{
			int x=q.front().x,y=q.front().y;q.pop();
			if(x&&s[x-1][y]=='v')cmp(x-1,y,x,y);
			if(y&&s[x][y-1]=='>')cmp(x,y-1,x,y);
			if(x<n-1&&s[x+1][y]=='^')cmp(x+1,y,x,y);
			if(y<m-1&&s[x][y+1]=='<')cmp(x,y+1,x,y);
		}
		int mx=0,f=0;
		for(i=0;i<n;i++)
		for(j=0;j<m;j++)
		if(s[i][j]!='#'&&d[i][j]==0){f=1;break;}
		else if(mx<d[i][j])mx=d[i][j];
		if(f)puts("-1");
		else
		{
			if(mx==0){puts("0");continue;}
			memset(v,0,sizeof(v));
			int ans=2*mx-2;
			for(i=0;i<n;i++)
			for(j=0;j<m;j++)
			if(d[i][j]==mx&&move(i,j))ans++;
			printf("%d\n",min(mx*2,ans));
		}
	}
}