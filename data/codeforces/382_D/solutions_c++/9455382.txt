#include<cstdio>
#include<cstring>
#include<algorithm>
#define mem(name,value) memset(name,value,sizeof(name))
#define FOR(i,n) for(int i=1;i<=n;i++)
using namespace std;
const int maxn = 2000+10;
const int maxm = 10000+10;
char maze[maxn][maxn];
int gx[]={1,0,0,-1},gy[]={0,-1,1,0};
char s[10] = "^><v";
int n,m,max1,max2,cnt;
int dfs(int x,int y){
   // printf("x=%d y = %d\n",x,y);
   // while(1);
    int ans = 0;
    cnt++;
    for(int i=0;i<4;i++){
        int tx = x+gx[i], ty = y+gy[i];
       // printf("tx = %d ty = %d %d %d\n",tx,ty,n,m);
        if(tx<=0 || tx>n || ty<=0 || ty>m) continue;
       // printf("%d %d %c\n",tx,ty,s[i]);
        if(maze[tx][ty]!=s[i]) continue;
        if(maze[x][y]=='#'){
            int tmp = dfs(tx,ty)+1;
            max2 = max(tmp,max2);
            if(max2>max1) swap(max1,max2);
        }else ans = max(ans,dfs(tx,ty)+1);
    }
    return ans;
}
int main(){
   // freopen("in.txt","r",stdin);
    max1 = max2 = cnt = 0;
    scanf("%d%d",&n,&m);
    FOR(i,n) scanf("%s",maze[i]+1);
    FOR(i,n) FOR(j,m) if(maze[i][j]=='#') dfs(i,j);
    if(cnt<n*m) printf("-1\n");
    else printf("%d\n",max1==max2 ? 2*max1 : 2*max1-1);
    return 0;
}
