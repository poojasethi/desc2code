#include<cstdio>
#include<iostream>
#include<algorithm>
using namespace std ;

const int MAXM = 2005 ;
char val[MAXM][MAXM] ;
int n, m ;
int dir[4][2] = {{0,-1},{0,1},{1,0},{-1,0}} ;
char signal[4] = {'>','<','^','v'} ;
int cnt, ma1, ma2 ;
//
void calMAX(int tt){
    //cout << "tt   " << tt << endl ;
    if( tt >= ma1 ){
        ma2 = ma1, ma1 = tt ;
    }else   ma2 = max(ma2, tt) ;
}
//
int dfs(int x, int y){
    int res = 0 ;
    cnt++ ;
    for( int i = 0; i < 4; i++ ){
        int dx = x + dir[i][0], dy = y + dir[i][1] ;
        if( x < 0 || x >= n || y < 0 || y >= m )    continue ;
        if( val[dx][dy] != signal[i] )  continue ;
        if( val[x][y] == '#' )  calMAX( dfs(dx, dy) ) ; 
        else    res = max(res, dfs(dx, dy)) ; 
    }
    return res+1 ;
}
//
int main(){
   ////////////////////// freopen("1234.in","r",stdin) ;
    scanf("%d%d",&n,&m) ;
    for( int i = 0; i < n; i++ )    scanf("%s",val[i]) ;
    cnt = 0 ;
    for( int i = 0; i < n; i++ ){
        for( int j = 0; j < m; j++ ){
            if( val[i][j] == '#' )  dfs(i, j) ;
        } 
    }
//  cout << ma1 << "  "  << ma2 << endl ;
    if( cnt < n*m ) cout << "-1\n" ;
    else if( ma1 == ma2 ){
        cout << 2*ma1 << endl ;
    }else   cout << 2*ma1-1 << endl ;
    return 0 ;
}