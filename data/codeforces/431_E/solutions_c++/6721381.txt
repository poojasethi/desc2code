/**************************************************************
    But God commendeth his love toward us,
    in that, while we were yet sinners, Christ died for us.
***************************************************************/
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <queue>
#include <map>
#include <set>
#include <vector>
#include <string>
#include <stack>
#include <bitset>
#define INF 0x3f3f3f3f
#define eps 1e-8
using namespace std;
typedef long long LL;
const int maxn=1e5+5;
int h[maxn],data[maxn*2],cc=0;
struct Query
{
    int p;
    LL v;
}qry[maxn];

inline int Find(int x)
{
    return lower_bound(data,data+cc,x)-data+1;
}

LL sum[maxn*2],cnt[maxn*2];
inline void add(LL *bit,int x,int v)
{
    for(;x<=cc;x+=x&-x) bit[x]+=v;
}

int main()
{
    int n,q;
    scanf("%d%d",&n,&q);
    for(int i=1;i<=n;++i)
    {
        scanf("%d",h+i);
        data[cc++]=h[i];
    }
    for(int i=0;i<q;++i)
    {
        scanf("%d",&qry[i].p);
        if(qry[i].p==1)
        {
            scanf("%d%I64d",&qry[i].p,&qry[i].v);
            data[cc++]=qry[i].v;
        }
        else
        {
            qry[i].p=0;
            scanf("%I64d",&qry[i].v);
        }
    }
    sort(data,data+cc);
    cc=unique(data,data+cc)-data;
    for(int i=1;i<=n;++i)
    {
        int p=Find(h[i]);
        add(cnt,p,1);
        add(sum,p,h[i]);
    }
    for(int i=0;i<q;++i)
    {
        if(qry[i].p)
        {
            int p=Find(h[qry[i].p]);
            add(cnt,p,-1);
            add(sum,p,-h[qry[i].p]);
            h[qry[i].p]=qry[i].v;
            p=Find(qry[i].v);
            add(cnt,p,1);
            add(sum,p,qry[i].v);
        }
        else
        {
            int idx=0;
            LL c=0,s=0;
            for(int t=20;t>=0;--t)
            {
                if((idx^(1<<t))>cc) continue;
                idx^=1<<t;
                c+=cnt[idx]; s+=sum[idx];
                if(c*data[idx-1]-s>qry[i].v)
                {
                    c-=cnt[idx]; s-=sum[idx];
                    idx^=1<<t;
                }
            }
            printf("%.9f\n",1.0*(qry[i].v+s)/c);
        }
    }
    return 0;
}
