#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int N=(int)1e6+5;

int n,m,tot;

char s[N],t[N];

int tim;

struct state{
	state *fa,*go[26];
	int len;
	int size;
	int flag;
} mem[N*2],*topmem=mem;

state *root=topmem++,*last=root;

state* extend(state *p,int c){
	state *np=topmem++;
	np->len=p->len+1;
	for(;p&&!p->go[c];p=p->fa) p->go[c]=np;
	if(!p)
		np->fa=root;
	else{
		state *q=p->go[c];
		if(q->len==p->len+1)
			np->fa=q;
		else{
			state *nq=topmem++;
			for(int x=0;x<26;x++) nq->go[x]=q->go[x];
			nq->fa=q->fa;
			nq->len=p->len+1;
			q->fa=np->fa=nq;
			for(;p&&p->go[c]==q;p=p->fa) p->go[c]=nq;
		}
	}
	return np;
}

int sum[N];
state *seq[N*2];

void getseq(){
	tot=topmem-mem;
	for(state *u=mem;u<topmem;u++) sum[u->len]++;
	for(int i=1;i<=n;i++) sum[i]+=sum[i-1];
	for(state *u=mem;u<topmem;u++) seq[--sum[u->len]]=u;
}

int main(){
	scanf("%s",s);
	n=strlen(s);
	for(int i=0;i<n;i++){
		last=extend(last,s[i]-'a');
		last->size++;
	}
	getseq();
	for(int i=tot-1;i>0;i--)
		seq[i]->fa->size+=seq[i]->size;
	scanf("%d",&m);
	while(m--){
		++tim;
		scanf("%s",t);
		int len=strlen(t);
		state *cur=root;
		int now=0;
		for(int i=0;i<len;i++){
			t[i]-='a';
			while(cur!=root&&!cur->go[t[i]]) cur=cur->fa,now=min(now,cur->len);
			if(cur->go[t[i]]) cur=cur->go[t[i]],now++;
		}
		int ans=0;
		for(int i=0;i<len;i++){
			while(cur!=root&&!cur->go[t[i]]) cur=cur->fa,now=min(now,cur->len);
			if(cur->go[t[i]]) cur=cur->go[t[i]],now++;
			while(cur!=root&&cur->fa->len>=len) cur=cur->fa,now=min(now,cur->len);
			now=min(now,len);
			if(now==len){
				if(cur->flag!=tim){
					cur->flag=tim;
					ans+=cur->size;
				}
			}
		}
		printf("%d\n",ans);
	}
}
