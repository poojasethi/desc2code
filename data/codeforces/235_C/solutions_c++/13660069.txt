#include <cstdio>
#include <cstring>
#include <vector>
using namespace std;
struct node {
	node*go[26],*p;
	int cnt,val,mk;
}nd[2001000],*root,*last,*cur=nd;
vector<node*> d[2001000];
char s[2001000];
void expand(int w) {
	node *p=last,*np=cur++;
	np->val=p->val+1;np->cnt=1;
	while (p&&!p->go[w]) p->go[w]=np,p=p->p;
	if (!p) np->p=root; else {
		node *q=p->go[w];
		if (q->val==p->val+1) np->p=q;
		else {
			node *nq=cur++;
			nq->val=p->val+1;memcpy(nq->go,q->go,sizeof q->go);
			nq->p=q->p;q->p=np->p=nq;
			while (p&&p->go[w]==q) p->go[w]=nq,p=p->p;
		}
	}
	last=np;
}
int main() {
	gets(s);root=last=cur++;
	for (char*S=s;*S;S++) expand(*S-'a');
	for (node* it=root;it!=cur;it++) d[it->val].push_back(it);
	for (int i=last->val;i;i--) for (int j=0;j<d[i].size();j++) d[i][j]->p->cnt+=d[i][j]->cnt;
	int _;for (scanf("%d ",&_);_;_--) {
		gets(s);int len=strlen(s),l=0,ans=0;node *p=root;
		for (int i=0;i<2*len-1;i++) {
			int w=s[i%len]-'a';
			while (p&&!p->go[w]) p=p->p,l=p?p->val:0;
			if (!p) p=root,l=0; else p=p->go[w],l++;
			while (p->p && p->p->val>=len) p=p->p,l=p->val;
			if (l>=len && p->mk!=_) ans+=p->cnt,p->mk=_;
		}
		printf("%d\n",ans);
	}
}
					   				 	   	   	 	  	 	