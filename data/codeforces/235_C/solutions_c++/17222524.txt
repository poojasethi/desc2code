#define maxn 1000050

#include<cstdio>
#include<cstring>

using namespace std;

int vis[maxn<<1];
char s[maxn<<1],ask[maxn<<1];
struct Edge{int v,next;}edge[maxn<<1];
int last,root,n,query,tot,first[maxn<<1];
struct Node{int len,go[26],cnt,par;}a[maxn<<2];

inline void add(int u,int v,int num)
{
	edge[num].v=v;
	edge[num].next=first[u];
	first[u]=num;
}

inline void extend(int w)
{
	int p=last,np=++tot;
	a[np].len=a[last].len+1;a[np].cnt=1;
	while(p&&(!a[p].go[w]))a[p].go[w]=np,p=a[p].par;
	if(!a[p].go[w])a[p].go[w]=np;
	else{
		int q=a[p].go[w];
		if(a[q].len==a[p].len+1)a[np].par=q;
		else{
			int nq=++tot;a[nq]=a[q];a[nq].cnt=0;
			a[nq].len=a[p].len+1;a[q].par=a[np].par=nq;
			for(;a[p].go[w]==q;p=a[p].par)a[p].go[w]=nq;
		}
	}last=np;
}

void dfs(int x)
{
	for(int i=first[x];i;i=edge[i].next)
		dfs(edge[i].v),a[x].cnt+=a[edge[i].v].cnt;
}

inline void match(int now)
{
	int p=root,res=0;
	int l=strlen(ask),i,r=l+l-1,len=0;
	for(i=l;i<=r;i++)ask[i]=ask[i-l];
	for(i=0;i<r;i++){
		while(p&&(!a[p].go[ask[i]-'a']))
		    len=a[a[p].par].len,p=a[p].par;
		p=a[p].go[ask[i]-'a'];
		if(!p){len=0;continue;}
		else len++;
		if(i<l-1)continue;
		else{
			while(a[a[p].par].len>=l)p=a[p].par,len=a[p].len;
			if(vis[p]<now&&len>=l)res+=a[p].cnt,vis[p]=now;
		}
	}
	printf("%d\n",res);
}

inline void read()
{
	scanf("%s%d",s,&query);n=strlen(s);
	for(int i=0;i<n;i++)extend(s[i]-'a');
}

inline void solve()
{
	for(int i=1;i<=tot;i++)add(a[i].par,i,i);
	dfs(root);
	for(int i=1;i<=query;i++)
		scanf("%s",ask),match(i);
}

int main()
{
	read();solve();
}
