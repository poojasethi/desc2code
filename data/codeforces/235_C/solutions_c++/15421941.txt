#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;

#define N 2000020

char s[N];
int ch[N][26], par[N], val[N];
int sz, lst;
int pre[N];
int t[N], num[N];
int dc;
int r[N];
int vis[N];

int creat(int v) {
	++sz;
	memset(ch[sz], 0, sizeof ch[sz]);
	par[sz] = 0;
	val[sz] = v;
	return sz;
}

int extend(int c) {
	int p = lst;
	int np = creat(val[p] + 1);
	r[np] = 1;
	while(p && ch[p][c] == 0) ch[p][c] = np, p = par[p];
	if(!p) par[np] = 1;
	else {
		int q = ch[p][c];
		if(val[q] == val[p] + 1) par[np] = q;
		else {
			int nq = creat(val[p] + 1);
			memcpy(ch[nq], ch[q], sizeof ch[q]);
			par[nq] = par[q];
			par[q] = par[np] = nq;
			while(p && ch[p][c] == q) ch[p][c] = nq, p = par[p];
		}
	}
	lst = np;
}

int main() {
	scanf("%s", s);
	sz = 0;
	lst = creat(0);
	for(int i = 0; s[i]; ++i) extend(s[i] - 'a');

	for(int i = 1; i <= sz; ++i) num[val[i]]++;
	for(int i = 1; i <= sz; ++i) num[i] += num[i-1];
	for(int i = sz; i >= 1; --i) t[num[val[i]]--] = i;

	
	for(int i = sz; i >= 1; --i) {
		int u = t[i];
		r[par[u]] += r[u];
	}


	int n;
	scanf("%d", &n);
	for(int i = 1; i <= n; ++i) {
		scanf("%s", s);
		int L = strlen(s);
		for(int j = L; j < 2 * L; ++j) s[j] = s[j-L];
		int ans = 0;

		int t = 1, len = 0;
		for(int j = 0; j < 2 * L; ++j) {
			int c = s[j] - 'a';
			if(ch[t][c]) t = ch[t][c], len++;
			else {
				while(t && ch[t][c] == 0) t = par[t];
				if(!t) t = 1, len = 0;
				else len = val[t] + 1, t = ch[t][c];
			}
			while(len >= L && par[t] && val[par[t]] >= L) {
				len = val[par[t]];
				t = par[t];
			}
			if(len >= L && vis[t] != i) {
				vis[t] = i;
				ans += r[t];
			}
		}
		printf("%d\n", ans);
	}
	return 0;
}

    	    	 	    		 	    		 	 	