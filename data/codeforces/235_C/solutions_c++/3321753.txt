/*
 * main.cpp
 *
 *  Created on: 2013-3-15
 *      Author: whd
 */
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<string>
#include<iostream>
#include<cmath>
#include<algorithm>
#include<string>
#include<vector>
#include<map>
#include<set>
#include<queue>
#define pb push_back
#define mp make_pair
#define x first
#define y second
using namespace std;

typedef long long big;
const int N=1000500;
char str[N*2];
struct node
{
	node *c[26],*pre;
	int l,f,mark;
}mem[N*2],*root,*cur=mem,*last;
int w[N];
node *q[N*2];
void ins(int c,int l)
{
	static node *np,*p,*q,*r;
	np=++cur;np->l=l;
	p=last;
	last=np;
	for(;p&&!p->c[c];p=p->pre)p->c[c]=np;
	if(!p)np->pre=root;
	else
	{
		if(p->c[c]->l==p->l+1)np->pre=p->c[c];
		else
		{
			q=p->c[c];r=++cur;
			*r=*q;
			r->l=p->l+1;
			np->pre=q->pre=r;
			for(;p&&p->c[c]==q;p=p->pre)p->c[c]=r;
		}
	}
}
int main()
{
	int n,i,m,c;
	root=last=++cur;
	scanf("%s",str+1);
	n=strlen(str+1);
	for(i=1;i<=n;i++)
		ins(str[i]-'a',i);
	scanf("%d",&m);
	node *s,*now;
	for(i=1;i<=cur-mem;i++)
		w[(mem+i)->l]++;
	for(i=1;i<=n;i++)w[i]+=w[i-1];
	for(i=cur-mem;i>=1;i--)q[w[(mem+i)->l]--]=mem+i;
	s=root;
	for(i=1;i<=n;i++)
	{
		s=s->c[str[i]-'a'];
		s->f++;
	}
	int ans;
	for(i=cur-mem;i>=1;i--)
		if(q[i]->pre)q[i]->pre->f+=q[i]->f;
	int l,mark=0;
	root->f=0;
	while(m--)
	{
		++mark;
		ans=0;
		scanf("%s",str+1);
		n=strlen(str+1);
		for(i=1;i<=n;i++)
			str[n+i]=str[i];
		s=root;l=0;
		for(i=1;i<=n+n;i++)
		{
			c=str[i]-'a';
			if(s->c[c])l++,s=s->c[c];
			else
			{
				while(s&&!s->c[c])s=s->pre;
				if(s)l=s->l+1,s=s->c[c];
				else s=root,l=0;
			}
			while(s->pre&&s->pre->l>=n)s=s->pre,l=s->l;
			if(l>=n&&mark!=s->mark)
			{
				s->mark=mark;
				ans+=s->f;
			}
		}
		printf("%d\n",ans);
	}
}

	 		 		  	 		   		  	     	