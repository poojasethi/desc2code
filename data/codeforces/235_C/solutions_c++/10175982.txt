#include<stdio.h>
#include<iostream>
using namespace std;
#define N 2000050
struct Node
{Node *pre,*Son[26];
 int l,r,vis;
}T[N],*root=T,*last=T,*Now=T,NuLL;
void Extend(int x)
{Node *p=last,*np=++Now;
 np->l=p->l+1;np->r=1;last=np;
 for(;p&&!p->Son[x];p=p->pre) p->Son[x]=np;
 if(!p) np->pre=root;
 else if(p->Son[x]->l==p->l+1) np->pre=p->Son[x];
 else
 {Node *q=p->Son[x],*nq=++Now;
  *nq=*q;nq->l=p->l+1;nq->r=0;
  q->pre=np->pre=nq;
  for(;p&&p->Son[x]==q;p=p->pre) p->Son[x]=nq;
 }
}
void Bu(char *s){for(;*s;s++) Extend(*s-'a');}
char s[N];
int n,Ans,L,X[N],W[N],t,now;
int main()
{scanf("%s%d",s,&n);Bu(s);
 L=Now-T;
 for(int i=1;i<=L;i++) W[T[i].l]++;
 for(int i=1;i<=L;i++) W[i+1]+=W[i];
 for(int i=1;i<=L;i++) X[W[T[i].l]--]=i;
 for(int i=L;i>=1;i--) T[X[i]].pre->r+=T[X[i]].r;
 while(n--)
 {scanf("%s",s);
  ++t;now=Ans=L=0;
  Node* p=root;
  for(char *k=s;*k;L++,k++)
  {while(p&&!p->Son[*k-'a']) p=p->pre,now=p?p->l:0;
   if(p) now++,p=p->Son[*k-'a'];
   else now=0,p=root;
  }
  for(char *k=s;*k;k++)
  {while(p&&!p->Son[*k-'a']) p=p->pre,now=p?p->l:0;
   if(p) now++,p=p->Son[*k-'a'];
   else now=0,p=root;
   while(p->pre&&p->pre->l>=L) p=p->pre,now=p->l;
   if(now>=L&&p->vis!=t) p->vis=t,Ans+=p->r;
  }
  printf("%d\n",Ans);
 }
 return 0;
}
