#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int maxn = 2000100;
int n,init = 1,tot = 1,last = 1,times;
char s[maxn];
int ch[maxn][26],len[maxn],F[maxn],right[maxn],vis[maxn];
int c[maxn],sa[maxn];

void add(int x){
    int np = ++tot,p = last;
    right[np] = 1;len[np] = len[last] + 1;
    for(last = np; p && !ch[p][x]; p = F[p]) ch[p][x] = np;
    if(!p) F[np] = init;
    else if(len[ch[p][x]] == len[p] + 1) F[np] = ch[p][x];
    else {
        int q = ch[p][x],nq = ++tot;
        len[nq] = len[p] + 1;F[nq] = F[q];
        memcpy(ch[nq],ch[q],sizeof(ch[q]));
        F[np] = F[q] = nq;
        for(; p && ch[p][x] == q; p = F[p]) ch[p][x] = nq;
    }
}

int ask(int L){
    int p = init,ans = 0,length = 0;
    ++times;
    for(int i = 0; i < (L<<1) - 1; i++){
        while(p != init && !ch[p][s[i]-'a']) p = F[p],length = len[p];
        if(ch[p][s[i]-'a']) p = ch[p][s[i]-'a'],length++;
        while(p != init && len[F[p]] >= L) p = F[p],length = len[p];
        if(length >= L && vis[p] < times) ans += right[p],vis[p] = times;
    }
    return ans;
}

int main(){
    char cc;
    while((cc = getchar()) != '\n') add(cc - 'a');
    for(int i = 1; i <= tot; i++) c[len[i]]++;
    for(int i = 1; i <= tot; i++) c[i] += c[i-1];
    for(int i = tot; i; i--) sa[c[len[i]]--] = i;
    for(int i = tot; i; i--) right[F[sa[i]]] += right[sa[i]];
    scanf("%d",&n);
    while(n--){
        scanf("%s",s);
        int len = strlen(s);
        for(int i = 0; i < len - 1; i++) s[i+len] = s[i];
        printf("%d\n",ask(len));
    }
    return 0;
}
