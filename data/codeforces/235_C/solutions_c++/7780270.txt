#include <cstdio>
#include <cstring>
#include <iostream>
#define pb push_back
#define mp make_pair
#define rep(i,n) for(int i=0;i<n;++i)
#define For(i,l,r) for(int i=l;i<=r;++i)
#define dbg(x) cout<<#x<<"="<<x<<endl
using namespace std;
const int maxn=1000001;

int hahaha;
struct SAM{
	SAM *o[26],*f;
	int val,v;
	int vis;
}tnull,*bt,*last,SSAM[maxn*2]; int sct;
SAM *newp(int val)
{
	SAM *p=&SSAM[sct++];
	*p=tnull;
	p->val=val;
	return p;
}
void trans(char s)
{
	int d=s-'a';
	SAM *p=last,*np=newp(p->val+1); last=np;
	for (;p&&!p->o[d];p=p->f) p->o[d]=np;
	if (!p) np->f=bt;
	else if (p->val+1==p->o[d]->val) np->f=p->o[d];
	else
	{
		SAM *q=p->o[d],*nq=newp(p->val+1);
		rep (i,26) nq->o[i]=q->o[i];
		nq->f=q->f; np->f=q->f=nq;
		for (;p&&p->o[d]==q;p=p->f) p->o[d]=nq;
	}
}
void init() { sct=0; bt=last=newp(0); }

SAM *dl[maxn*2];
int wv[maxn*2];
char s[maxn*2];
void clv()
{
	SAM *p=bt; int i;
	for (i=0;s[i];i++) p=p->o[s[i]-'a'],p->v++;
	int len=i;
	
	for (i=0;i<sct;i++) wv[SSAM[i].val]++;
	for (int i=1;i<=len;i++) wv[i]+=wv[i-1];
	for (int i=sct-1;i>=0;i--) dl[wv[SSAM[i].val]--]=&SSAM[i];
	for (int z=sct;z>=2;z--) dl[z]->f->v+=dl[z]->v;
}
void solve()
{
	int n,len,l,ans;
	SAM *p;
	scanf("%d",&n);
	for (int ww=0;n--;)
	{
		scanf("%s",s);
		len=strlen(s); l=len*2-1;
		for (int i=len;i<l;i++) s[i]=s[i-len];
		hahaha++; //for (int i=1;i<=sct;i++) dl[i]->vis=0;
		p=bt; ww=0; ans=0;
		for (int i=0,d;i<l;i++)
		{
			d=s[i]-'a';
			for (;p&&!p->o[d];p=p->f,ww=p?p->val:0);
			if (!p) p=bt,ww=0; else p=p->o[d],ww++;
			for (;p->f&&p->f->val>=len;p=p->f,ww=p->val);
			if (ww>=len&&p->vis!=hahaha) ans+=p->v,p->vis=hahaha;
		}
		printf("%d\n",ans);//cout<<ans<<endl;
	}
}
int main()
{
	//ios::sync_with_stdio(false);
	scanf("%s",s);
	init();
	for (int i=0;s[i];i++) trans(s[i]);
	clv();
	solve();
	return 0;
}
