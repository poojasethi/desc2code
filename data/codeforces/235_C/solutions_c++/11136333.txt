/********
��׺�Զ���ģ�塣���� 
********/
#include <cstdio>
#include <vector>
#include <string.h>
#define pb push_back
using namespace std;
const int NMax=2000010;
namespace SAM {
	struct node {
		int len,cnt,last;
		node *fa,*ch[26];
	}*Init,*Final,pool[NMax];
	int L;
	void Build() {
		L=0;
		Init=&pool[L++];
		Final=Init;
	}
	node* new_node(int len,node *q=NULL) {
		node *p=&pool[L++];
		if(q) *p=*q;
		p->cnt=0;
		p->len=len;
		return p;
	}
	void extend(char a) {
		a-='a';
		node *np=new_node(Final->len+1);
		np->cnt=1;
		node *p=Final;
		while(p&&!p->ch[a]) p->ch[a]=np,p=p->fa;
		if(!p) np->fa=Init;
		else {
			node *q=p->ch[a];
			if(q->len==p->len+1) np->fa=q;
			else {
				node *nq=new_node(p->len+1,q);
				q->fa=nq;
				np->fa=nq;
				while(p&&p->ch[a]==q) p->ch[a]=nq,p=p->fa;
			}
		} 
		Final=np;
	}
};
char A[NMax],buf[NMax];
int N;
vector<SAM::node*> B[NMax];
int main()
{
	scanf("%s",A);
	N=strlen(A);
	SAM::Build();
	for(int i=0;i<N;i++) SAM::extend(A[i]);
	for(int i=0;i<SAM::L;i++) B[SAM::pool[i].len].pb(&(SAM::pool)[i]);
	for(int i=N;i>=1;i--) for(int j=0;j<B[i].size();j++) B[i][j]->fa->cnt+=B[i][j]->cnt;
	int T;
	scanf("%d",&T);
	for(int I=1;I<=T;I++) {
		scanf("%s",buf);
		int nn=strlen(buf);
		SAM::node *p=SAM::Init;
		int len=0,ans=0;
		for(int i=0;i<nn*2;i++) {
			char c=buf[i%nn]-'a';
			if(p->ch[c]) p=p->ch[c],len++;
			else {
				while(p&&!p->ch[c]) p=p->fa;
				if(!p) p=SAM::Init,len=0;
				else len=p->len+1,p=p->ch[c];
			}
			while(p->fa&&p->fa->len>=nn) p=p->fa;
			if(len>=nn&&p->last!=I) p->last=I,ans+=p->cnt;
		}
		printf("%d\n",ans);
	}
	getchar();getchar();
	return 0;
}
