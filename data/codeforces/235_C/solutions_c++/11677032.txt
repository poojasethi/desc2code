#include <bits/stdc++.h>

using namespace std;

const int N = 1000010;

struct Node{
	int cnt,len,Time;
	Node *nxt[26],*fa;
}pool[N*4],*tail=pool+1,*ed=pool,*op=pool;
vector<Node *> lst;
inline bool cmp(Node *a,Node *b){return a->len > b->len;}

void ins(int a,int len){
	Node *p=ed,*np=ed=tail++;
	for(;p && !p->nxt[a];p->nxt[a]=np,p=p->fa);
	np->len=len;np->cnt=1;
	if(!p) np->fa=op;
	else{
		if(p->nxt[a]->len==p->len+1) np->fa=p->nxt[a];
		else{
			Node *q=p->nxt[a],*nq=tail++;
			*nq=*q;nq->cnt=0;nq->len=p->len+1;q->fa=np->fa=nq;
			for(;p && p->nxt[a]==q;p->nxt[a]=nq,p=p->fa);
		}
	}
}

int n,l;
char st[N];

int main()
{
	scanf("%s",st);
	for(int i=0;st[i];i++) ins(st[i]-'a',i+1);
	for(Node *p=pool;p!=tail;p++) lst.push_back(p);
	sort(lst.begin(),lst.end(),cmp);
	for(vector<Node *> :: iterator p=lst.begin();p!=lst.end();p++) if((*p)->fa) (*p)->fa->cnt+=(*p)->cnt;
	scanf("%d",&n);
	for(int i=0,res;i<n;i++){
		Node *p=op;res=0;
		scanf("%s",st);l=strlen(st);
		for(int j=0,k=0,cl=0;j<2*l-1;j++,k++){
			int c=st[k>=l ? k-=l : k]-'a';
			for(;p && !p->nxt[c];p=p->fa,cl=p ? p->len : 0);
			if(p) cl++,p=p->nxt[c]; else cl=0,p=op;
			for(;p->fa && p->fa->len>=l;p=p->fa,cl=p->len);
			if(cl>=l && p->Time!=i+1) {res+=p->cnt,p->Time=i+1;}
		}
		printf("%d\n",res);
	}
	return 0;
}
