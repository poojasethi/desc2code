#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<cstdlib>

using namespace std;
char s[1000005];
int n,m,ans,haha;
struct SAM
{
	int ch[2000005][26],l[2000005],fa[2000005],val[2000005];
	int v[2000005],q[2000005],mark[2000005];
	int last,cnt;
	SAM(){last=++cnt;}
	void add(int x)
	{
		int p=last,np=++cnt;
		l[np]=l[p]+1;last=np;val[np]=1;
		while(p&&!ch[p][x])ch[p][x]=np,p=fa[p];
		if(!p)fa[np]=1;
		else
		{
			int q=ch[p][x];
			if(l[p]+1==l[q])fa[np]=q;
			else 
			{
				int nq=++cnt;l[nq]=l[p]+1;
				memcpy(ch[nq],ch[q],sizeof(ch[q]));
				fa[nq]=fa[q];
				fa[q]=fa[np]=nq;
				while(p&&ch[p][x]==q)ch[p][x]=nq,p=fa[p];
			}
		}
	}
	void pre()
	{
		for(int i=1;i<=cnt;++i)v[l[i]]++;
		for(int i=1;i<=n;++i)v[i]+=v[i-1];
		for(int i=cnt;i>=1;--i)q[v[l[i]]--]=i;
		for(int i=cnt;i>=1;--i)
		  if(fa[q[i]])
		    val[fa[q[i]]]+=val[q[i]];
		val[1]=0;
	}
}sam;
void solve(int x)
{
	ans=0;haha++;
	scanf("%s",s);
	int len=strlen(s),st=len;
	for(int i=0;i<len;++i)
	  s[i+len]=s[i];
	len=len*2-1;
	int tmp=0,now=1;
	for(int i=0;i<len;++i)
	{
		if(sam.ch[now][s[i]-'a'])
		{
			tmp++;now=sam.ch[now][s[i]-'a'];
		}
		else
		{
			while(now&&!sam.ch[now][s[i]-'a'])now=sam.fa[now];
			if(now)
			{
				tmp=sam.l[now]+1;
				now=sam.ch[now][s[i]-'a'];
			}
			else tmp=0,now=1;
		}
		if(tmp>=st)
		{
			while(sam.fa[now]&&sam.l[sam.fa[now]]>=st)
			  now=sam.fa[now],tmp=sam.l[now];
		}
		if(tmp>=st&&sam.mark[now]!=haha)ans+=sam.val[now],sam.mark[now]=haha;
	}
	printf("%d\n",ans);
}
int main()
{
	scanf("%s",s+1);
	n=strlen(s+1);
	for(int i=1;i<=n;++i)sam.add(s[i]-'a');
	sam.pre();
	scanf("%d",&m);
	for(int i=1;i<=m;++i)
	  solve(i);
	return 0;
}
