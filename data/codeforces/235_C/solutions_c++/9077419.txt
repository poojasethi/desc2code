#include <cstdio>
#include <cstring>
using namespace std;
const int N=2000004;
struct node
{
	int fa,v,son[26];
	void init(int V)
	{
		fa=0; v=V;
		for (int i=0;i<26;i++) son[i]=0;
	}
} S[N];
int n,INDEX,last,size[N],Next[N/2];
int E,first[N],next[N],des[N];
char s[N];
void extend(int x)
{
	int p=last,np=last=++INDEX; S[np].init(S[p].v+1);
	while ((p)&&(!S[p].son[x])) S[p].son[x]=np,p=S[p].fa;
	if (!p) {S[np].fa=1; return;}
	int q=S[p].son[x];
	if (S[q].v==S[p].v+1) S[np].fa=q;
	else
	{
		int nq=++INDEX; S[nq].init(S[p].v+1);
		for (int i=0;i<26;i++) S[nq].son[i]=S[q].son[i];
		S[nq].fa=S[q].fa; S[q].fa=S[np].fa=nq;
		while ((p)&&(S[p].son[x]==q)) S[p].son[x]=nq,p=S[p].fa;
	}
}
void add(int u,int v) {next[++E]=first[u]; first[u]=E; des[E]=v;}
void dfs(int u) {for (int i=first[u];i;i=next[i]) dfs(des[i]),size[u]+=size[des[i]];}
int calcrep(int n)
{
	int i,j=-1; Next[0]=-1;
	for (i=1;i<n;i++)
	{
		while ((j>=0)&&(s[j+1]!=s[i])) j=Next[j];
		if (s[j+1]==s[i]) j++;
		Next[i]=j;
	}
	int ret=n-1-Next[n-1];
	if (n%ret==0) return ret;
	return n;
}
int main()
{
	int i; scanf("%s",s);
	INDEX=last=1; S[1].init(0);
	for (i=0;s[i]!='\0';i++) extend(s[i]-'a');
	E=0; for (i=1;i<=INDEX;i++) first[i]=size[i]=0;
	for (i=2;i<=INDEX;i++) add(S[i].fa,i);
	int p=1; for (i=0;s[i]!='\0';i++) p=S[p].son[s[i]-'a'],size[p]++;
	dfs(1);
	scanf("%d",&n);
	while (n--)
	{
		scanf("%s",s);
		int m=strlen(s),r=calcrep(m);
		for (i=0;i<m-1;i++) s[m+i]=s[i];
		int len=0,ans=0; p=1;
		for (i=0;i<m+r-1;i++)
		{
			while ((p)&&((!S[p].son[s[i]-'a'])||((p>1)&&(S[S[p].fa].v>=m-1)))) p=S[p].fa,len=S[p].v;
			if (!p) p=1,len=0; else len++,p=S[p].son[s[i]-'a'];
			if (len>=m) ans+=size[p];
		}
		printf("%d\n",ans);
	}
	return 0;
}