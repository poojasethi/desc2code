#include <cstdio>
#include <cstring>
#include <vector>

using namespace std;

const int MaxN = 1000010;

struct Node{
	Node *nxt[26],*fa;
	int len,cnt,mark;
}pool[MaxN << 1],*TAIL=pool+1,*tail=pool,*op=pool;
vector<Node *> list[MaxN];
char st[MaxN];
int n,L;

void extend(int c,int len){
	Node *p=tail,*np=tail=TAIL++;
	np->len=len;np->cnt=1;
	for(;p && !p->nxt[c];p=p->fa) p->nxt[c]=np;
	if(!p) np->fa=op;
	else{
		if(p->nxt[c]->len==p->len+1) np->fa=p->nxt[c];
		else{
			Node *q=p->nxt[c],*r=TAIL++;
			*r=*q;r->cnt=0;r->len=p->len+1;q->fa=np->fa=r;
			for(;p && p->nxt[c]==q;p=p->fa) p->nxt[c]=r;
		}
	}
}
int main()
{
	scanf("%s%d",st+1,&n);L=strlen(st+1);
	for(int i=1;i<=L;i++) extend(st[i]-'a',i);
	for(Node *p=op;p<TAIL;p++) list[p->len].push_back(p);
	for(int i=L;i;i--)
		for(int j=0;j<list[i].size();j++)
			list[i][j]->fa->cnt+=list[i][j]->cnt;
	
	for(int i=1;i<=n;i++){
		int ans=0,len=0,tmp=0;Node *p=op;
		scanf("%s",st);len=strlen(st);
		for(int j=0;j<2*len-1;j++){
			int c=st[j%len]-'a';
			for(;p && !p->nxt[c];p=p->fa,tmp=p ? p->len : 0);
			p ? (tmp++,p=p->nxt[c]) : (tmp=0,p=op);
			for(;p->fa && p->fa->len>=len;p=p->fa,tmp=p->len);
			if(tmp>=len && p->mark!=i) ans+=p->cnt,p->mark=i;
		}
		printf("%d\n",ans);
	}
	return 0;
}
