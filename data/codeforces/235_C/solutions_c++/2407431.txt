#include <vector>
#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <iostream>
#include <cstring>
#define pb push_back
#define Rep(i,j,k) for (int i=(j); i<=(k); i++)
#define Repd(i,j,k) for (int i=(j); i>=(k); i--)
#define TR(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define online1
using namespace std;
typedef vector<int> VI;
#define N (1000000+10)

struct T{
	int val, mark, cnt;
	T *par, *go[26];
} pool[N*2], *cur=pool, *last, *root;
vector<T*> dep[N];

char s[N];

void extend(int w){
	T *p=last, *np=cur++;
	np->val=p->val+1;
	np->cnt=1;
	while(p && !p->go[w])
		p->go[w]=np, p=p->par;
	if (!p)
		np->par=root;
	else{
		T *q=p->go[w];
		if (q->val==p->val+1)
			np->par=q;
		else{
			T *nq=cur++;
			nq->val=p->val+1;
			memcpy(nq->go,q->go,sizeof q->go);
			nq->par=q->par;
			q->par=np->par=nq;
			while(p && p->go[w]==q)
				p->go[w]=nq, p=p->par;
		}
	}
	last=np;
}

int main(){
	
	scanf("%s",s);
	
	root=last=cur++;
	for(char*c=s;*c;c++)
		extend(*c-'a');
	
	for(T *p=root; p!=cur; p++)
		dep[p->val].pb(p);
	Repd(i,last->val,1)
		TR(dep[i],p)
			(*p)->par->cnt+=(*p)->cnt;
		
	int m;cin>>m;
	Rep(_,1,m){
		scanf("%s",s);
		int sl=strlen(s);
		T *p=root;
		int pl=0, ans=0;
		Rep(i,0,2*sl-1){
			int w=s[i%sl]-'a';
			while(p && !p->go[w])
				p=p->par, pl=p?p->val:0;
			if (!p)
				p=root, pl=0;
			else
				pl++, p=p->go[w];
				
			while(p->par && p->par->val>=sl)
				p=p->par, pl=p->val;
			if (pl>=sl && p->mark!=_)
				ans+=p->cnt, p->mark=_;
		}
		printf("%d\n",ans);
	}

    return 0;
}
