/*
ID: kapitan1
PROG: 
LANG: C++
*/
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <vector>
#include <string>
#include <map>
using namespace std;
string str;
long long h1[2005][2005],h2[5000000];
long long mas2[2005][2005];
int n;
int ans[2005][2005];
struct armen
{
	string str;
	int left, right;
};
bool mark[2005][2005];
armen mas[20];
map <long long,bool> m;
int i,j,g;
int main()
{
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	cin>>str>>n;
	for(i=1;i<=n;i++)
	{
		cin>>mas[i].str>>mas[i].left>>mas[i].right;
	}
	for(i=0;i<str.size();i++)
	{
		h1[i][i] = (str[i]-'a'+1);
		for(int j=i+1;j<str.size();j++)
		{

			h1[i][j]=29L*h1[i][j-1]+(str[j]-'a'+1);
		}
	}
	for(i=1;i<=n;i++)
	{
		int len=0;
		int sz = mas[i].str.size();
		for(j=0;j<2000;j++)
		{
			mas2[j][0]=0;
		}
		for(j=0;j<sz;j++)
		{
			long long h=0;
			for(g=j;g<sz;g++)
			{
				h=29L*h+(mas[i].str[g]-'a'+1);
				mas2[g-j][0]++;
				mas2[g-j][mas2[g-j][0]]=h;
				
			}
		}
		for(j=0;j<=sz;j++)
		{
			sort(mas2[j]+1,mas2[j]+mas2[j][0]+1);
		}
		int sz2 = str.size();
		for(j=0;j<sz2;j++)
		{
			for(g=j;g<sz2;g++)
			{
				if(mark[j][g]==1)
					continue;
				ans[j][g]=upper_bound(mas2[g-j]+1,mas2[g-j]+mas2[g-j][0]+1,h1[j][g])-lower_bound(mas2[g-j]+1,mas2[g-j]+mas2[g-j][0]+1,h1[j][g]);
				if(ans[j][g]<mas[i].left || ans[j][g]>mas[i].right)
				{
					mark[j][g]=1;
				}
			}
		}
	}
	int ans2=0;
	for(i=0;i<str.size();i++)
	{
		for(j=i;j<str.size();j++)
		{
			int ind=0;
			int x=m[30];
			if(m[h1[i][j]]==0)
			{
				m[h1[i][j]]=1;
				if(mark[i][j]==0)
				{
					ans2++;
					continue;
				}
			}

		}
	}
	cout<<ans2<<endl;
 	return 0; 
}