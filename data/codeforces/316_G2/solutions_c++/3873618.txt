#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <vector>
#include <map>
#include <set>
#include <ctime>
#include <cassert>
#include <queue>

using namespace std;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define forit(it,con) for (typeof(con.begin()) it = con.begin(); it != con.end(); ++it)
#define f0(a) memset(a, 0, sizeof(a))
#define all(v) v.begin(), v.end()
#define pii pair<int,int>
#define vi vector<int>
#define ll long long

#ifdef WIN32
    #define I64 "%I64d"
#else 
    #define I64 "%lld"
#endif
const int mod = (int)1e9 + 9;

string s;
int L[1000], size[100], R[10000], wh[1000], end[1000];
int n, An, Wn;
ll W[2000000], A[2000000], ok[3000000];

int main() {
    #ifdef LOCAL
        freopen("in","r",stdin);
    #endif  

    cin >> s;
    cin >> n;

    for (int l = 0; l < s.size(); ++l) {
        ll hsh = 0;
        for (int i = l; i < s.size(); ++i) {
            hsh = (hsh * 31 + s[i] - 'a' + 1);
            A[An++] = hsh;
        }
    }
    
    sort(A, A + An);
    An = unique(A, A + An) - A;
    for (int i = 0; i < An; ++i)
        ok[i] = true;

    for (int i = 1; i <= n; ++i) {
        string t;
        int L, R;
        cin >> t >> L >> R;
        Wn = 0;
        for (int l = 0; l < t.size(); ++l) {
            ll hsh = 0;
            for (int j = l; j < t.size(); ++j) {
                hsh = (hsh * 31 + t[j] - 'a' + 1);
                W[Wn++] = hsh;
            }   
        }
        sort(W, W + Wn);
        int j = 0;
        for (int i = 0; i < An; ++i) {
            while (j < Wn && W[j] < A[i]) ++j;
            int cnt = 0;
            while (j < Wn && W[j] == A[i]) {
                ++j; ++cnt;
            }
            if (!(L <= cnt && cnt <= R)) ok[i] = false;
        }
    }

    int ans = 0;
    for (int i = 0; i < An; ++i) 
        ans += ok[i];
    cout << ans << endl;
    return 0;
}
