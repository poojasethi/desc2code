//In the Name of God
#include <iostream>
#include <vector>
#include <cstring>
#include <string>
#include <algorithm>
#include <set>
#include <map>

using namespace std;

const long long maxn = 2000 + 10 , MOD = 29339742923846321ll;
string s , p[20];
long long po[maxn];
long long l[20] , r[20] , h[maxn][maxn] , h1[maxn][maxn] , n , ans1 = 0;
vector <long long> ped[maxn] , ans;

int main()
{
  ios_base::sync_with_stdio(false);
  po[0] = 1;
  for(long long i = 1 ; i < maxn ; i++)
    po[i] = (po[i - 1] * 26) % MOD;
  cin >> s;
  cin >> n;
  for(long long i = 0 ; i < n ; i++)
    cin >> p[i] >> l[i] >> r[i];  for(long long i = 0 ; i < s.size() ; i++){
    h[i][i] = (po[0] * (s[i] - 'a' + 1)) % MOD;
    for(long long j = i + 1 ; j < s.size() ; j++)
      h[i][j] = (h[i][j - 1] + po[j - i] * (s[j] - 'a' + 1) % MOD) % MOD;
  }

  for(long long i = 0 ; i < n ; i++) for(long long j = 0 ; j < p[i].size() ; j++){
      h1[j][j] = (po[0] * (p[i][j] - 'a' + 1)) % MOD;
      ped[i].push_back(h1[j][j]);
      for(long long k = j + 1 ; k < p[i].size() ; k++){
	h1[j][k] = (h1[j][k - 1] + po[k - j] * (p[i][k] - 'a' + 1) % MOD) % MOD;
	ped[i].push_back(h1[j][k]);
      }
    }

  for(int i = 0 ; i < n ; i++)
    sort(ped[i].begin() , ped[i].end());  for(long long i = 0 ; i < s.size() ; i++)
					    for(long long j = i ; j < s.size() ; j++)
					      ans.push_back(h[i][j]);

  sort(ans.begin() , ans.end());

  int N = int(unique(ans.begin() , ans.end()) - ans.begin());  for(int i = 0 ; i < N ; i++){
    bool sw = true;
    for(long long k = 0 ; k < n ; k++){
      long long hash = ans[i];
      long long ped1 = upper_bound(ped[k].begin() , ped[k].end() , ans[i]) - lower_bound(ped[k].begin() , ped[k].end() , ans[i]);
      if(ped1 >= l[k] && ped1 <= r[k]){}
      else{
	sw = false;
	break;
      }
    }
    if(sw){
      ans1++;
    }
  }
  cout << ans1 << endl;
  return 0;
}
