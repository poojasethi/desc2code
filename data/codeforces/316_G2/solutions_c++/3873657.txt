#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<math.h>
#include<iostream>
using namespace std;

const int maxn=4010;

int ch[maxn][26],fail[maxn],len[maxn],tail,cnt,ind[maxn];

void ins(int c)
{
	int t=tail;
	tail=++cnt;len[cnt]=len[t]+1;
	while(t&&!ch[t][c])
		ch[t][c]=cnt,t=fail[t];
	if(!t&&!ch[t][c])
	{
		ch[t][c]=cnt;
		fail[cnt]=0;
		return;
	}
	if(len[ch[t][c]]==len[t]+1)
		fail[cnt]=ch[t][c];
	else
	{
		int i=ch[t][c],j=++cnt;
		memcpy(ch[j],ch[i],sizeof(ch[j]));
		len[j]=len[t]+1,fail[j]=fail[i],fail[i]=fail[cnt-1]=j;

		while(t&&ch[t][c]==i)
			ch[t][c]=j,t=fail[t];
		if(ch[0][c]==i)
			ch[0][c]=j;
	}
}
int cmp(int a,int b)
{
	return len[a]<len[b];
}
char s[maxn];
int num[maxn][2010];
int L[maxn][12],R[maxn][12];

int main()
{
	scanf("%s",s);
	int i,le,ans=0,t,l,n,r,j,k;
	le=strlen(s);
	for(i=0;i<le;i++)
		ins(s[i]-'a');

	for(i=1;i<=cnt;i++)
		ind[i]=i;
	sort(ind+1,ind+1+cnt,cmp);

	cin>>n;
	int ll,rr;
	memset(L,-1,sizeof(L));
	memset(R,-1,sizeof(R));

	for(int ii=1;ii<=n;ii++)
	{
		scanf("%s",s);
		scanf("%d%d",&ll,&rr);
		t=0;

		memset(num,0,sizeof(num));

		char c;l=0;
		for(i=0;s[i];i++)
		{
			c=s[i]-'a';
			while(t&&!ch[t][c])
				t=fail[t],l=len[t];
			t=ch[t][c];
			if(t)
				l++;
			num[t][l]++;
		}
		for(int ti=cnt;ti>=1;ti--)
		{
			i=ind[ti];
			for(j=len[i];j>len[fail[i]];j--)
			{
				if(j<len[i])
					num[i][j]+=num[i][j+1];
				if(num[i][j]>=ll&&num[i][j]<=rr)
				{
					if(L[i][ii]<0||L[i][ii]>j)
						L[i][ii]=j;
					if(R[i][ii]<0||R[i][ii]<j)
						R[i][ii]=j;
				}
			}
			num[fail[i]][len[fail[i]]]+=num[i][len[fail[i]]+1];
		}
	}
	for(i=1;i<=cnt;i++)
	{
		int is=0;
		for(j=1;j<=n;j++)if(L[i][j]<0||R[i][j]<0)
		{
			is=1;
			break;
		}
		if(is)
			continue;
		ll=len[fail[i]]+1,rr=len[i];
		for(j=1;j<=n;j++)
			ll=max(ll,L[i][j]),rr=min(rr,R[i][j]);
		if(ll<=rr)
			ans+=rr-ll+1;
	}
	cout<<ans<<endl;
}