#include<iostream>
#include<cstdio>
#include<cstring>
#include<map>
#define mxn 50005
#define lint long long

using namespace std;

map< lint,bool >vis;

int n,la,lb,ans;
int mn[15],mx[15],len[15];
int f[mxn];
char str[mxn],p[15][mxn];
char a[mxn],b[mxn];

void read(){

	scanf( "%s %d" , str , &n );

	for( int i=1 ; i<=n ; i++ ){

		scanf( "%s %d %d" , p[i] , mn+i , mx+i );
		len[i] = strlen( p[i] );

	}

	return;

}

void pre_kmp(){

	int i,j;

	f[0] = -1;

	i = 0;
	j = -1;
	while( i<la ){

		while( j!=-1 && a[i] != a[j] )	j = f[j];
		f[++i] = ++j;

	}

	return;

}

int kmp(){

	int i,j,cnt;

	pre_kmp();

	cnt = 0;

	i = 0;
	j = 0;
	while( i<lb ){

		while( j!=-1 && b[i] != a[j] )	j = f[j];
		i++;
		j++;

		if( j==la ){
			cnt++;
			j = f[j];
		}

	}

	return cnt;

}

int check( int bas,int son,int f ){

	int i,j;

	la = son-bas+1;
	for( i=0 ; i<la ; i++ )		a[i] = str[bas+i];

	for( i=1 ; i<=n ; i++ ){

		lb = len[i];
		for( j=0 ; j<lb ; j++ )	b[j] = p[i][j];

		if( f ){ if( kmp() > mx[i] ) 	return 0; }
		else   { if( kmp() < mn[i] )	return 0; }

	}

	return 1;

}

void solve(){

	int i,lens,bas,ort,son;
	int l,r,j;
	lint t;

	lens = strlen( str );

	for( i=0 ; i<lens ; i++ ){

		bas = i;
		son = lens-1;
		while( bas<son ){

			ort = (bas+son)/2 + 1;

			if( check( i,ort,0 ) )		bas = ort;
			else						son = ort-1;

		}

		r = bas;

		bas = i;
		son = lens-1;
		while( bas<son ){

			ort = (bas+son)/2;

			if( check( i,ort,1 ) )		son = ort;
			else						bas = ort+1;

		}

		l = bas;

		if( check( i,r,0 ) && check( i,l,1 ) && l<=r ){

			t = 0;

			for( j=i ; j<=r ; j++ ){

				t *= 37;
				t += str[j]-'a'+1;

				if( j<l || vis[t] )	continue;
				else{
					vis[t] = 1;
					ans++;
				}

			}

		}

	}

	printf( "%d\n" , ans );

	return;

}

int main(){

	read();
	solve();
	return 0;

}
