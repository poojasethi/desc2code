#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;

#define sigma 26
#define maxn 10000

int trie[2000*1000+50][sigma];
bool mark[2000*1000+50];
int G[11][maxn][sigma],sz[11],last[11],len[11][maxn],lnk[11][maxn],n,i,j,L[11],R[11],clonned[11][maxn],cnt[11][maxn],num,q,cq[11],gd,k,ret;
string s,a[11];
pair<int,int>srt[maxn];

void extend(int ai,int cha){
	int cur=++sz[ai],p,q,clone,j;
	len[ai][cur]=len[ai][last[ai]]+1;
	for(p=last[ai];p>0&&!G[ai][p][cha];p=lnk[ai][p])G[ai][p][cha]=cur;
	if(!p)lnk[ai][cur]=1;else{
		q=G[ai][p][cha];
		if(len[ai][p]+1==len[ai][q])lnk[ai][cur]=q;else{
			clone=++sz[ai];
			clonned[ai][clone]=1;
			len[ai][clone]=len[ai][p]+1;
			lnk[ai][clone]=lnk[ai][q];
			for(j=0;j<26;j++)G[ai][clone][j]=G[ai][q][j];
			for(;p>0&&G[ai][p][cha]==q;p=lnk[ai][p])G[ai][p][cha]=clone;
			lnk[ai][q]=lnk[ai][cur]=clone;
		}
	}
	last[ai]=cur;
}

void aut(int ai){
	for(j=1;j<=sz[ai];j++)srt[j]=make_pair(-len[ai][j],j);
	sort(srt+1,srt+sz[ai]+1);
	for(j=1;j<=sz[ai];j++)cnt[ai][srt[j].second]=1-clonned[ai][srt[j].second];
	for(j=1;j<=sz[ai];j++)cnt[ai][lnk[ai][srt[j].second]]+=cnt[ai][srt[j].second];
}

int main(){
//	freopen("in","r",stdin);
	ios_base::sync_with_stdio(0);
	cin>>s;
	cin>>n;
	for(i=1;i<=n;i++){
		cin>>a[i]>>L[i]>>R[i];
		last[i]=1;
		sz[i]=1;
		for(j=0;j<a[i].length();j++)extend(i,a[i][j]-'a');
		aut(i);
		cnt[i][0]=0;
	}
	num=1;
	for(i=0;i<s.length();i++){
		q=1;
		for(j=i;j<s.length();j++)if(!trie[q][s[j]-'a']){
			trie[q][s[j]-'a']=++num;
			q=num;
		}else q=trie[q][s[j]-'a'];
	}
	for(i=0;i<s.length();i++){
		for(j=1;j<=n;j++)cq[j]=1;
		q=1;
		for(j=i;j<s.length();j++){
			q=trie[q][s[j]-'a'];
			gd=0;
			for(k=1;k<=n;k++){
				cq[k]=G[k][cq[k]][s[j]-'a'];
				if(L[k]<=cnt[k][cq[k]]&&cnt[k][cq[k]]<=R[k])++gd;
			}
			if(gd==n&&!mark[q]){
//				printf("%d %d\n",i+1,j+1);
				mark[q]=1;
				++ret;
			}
		}
	}
	cout<<ret<<endl;
	return 0;
}