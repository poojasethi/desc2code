#include<stdio.h>
#include<string.h>
#include<string>
#include<iostream>
#include<algorithm>
#include<set>
#include<queue>
#include<map>
#include<math.h>
#include<vector>
#define LL long long
#define oo 1000000000
using namespace std;
#define M 2005
char pp[M][M];
int Len[M];
int L[M],R[M];
char str[M];
int pre[2000005][26]={0},allc,m;
struct node{
    int cnt;
    int Q[M];
}turn[2][10];
int down(int cur,char c){
    int nxt=cur^1;
    int i,j,k;
    int res=1;
    for(i=0;i<m;i++){ 
        turn[nxt][i].cnt=0;
    //  printf("str[%d]:",i);
        for(j=0;j<turn[cur][i].cnt;j++){
            int pre=turn[cur][i].Q[j];
            if(pre<Len[i]-1&&pp[i][pre+1]==c){
                turn[nxt][i].Q[turn[nxt][i].cnt++]=pre+1;
            //  printf(" %d",pre+1);
            }
        } 
        //puts("");
        int cnt=turn[nxt][i].cnt;
        if(cnt>R[i]||cnt<L[i])res=0; 
    }
    return res;
}
int main(){
        int n,i,j,k;
        scanf("%s",str);
        scanf("%d",&m);
        for(i=0;i<m;i++){
            scanf("%s %d %d",pp[i],&L[i],&R[i]);
            Len[i]=strlen(pp[i]);
        }
        allc=1;
        n=strlen(str);
        int ans=0;
        for(i=0;i<n;i++){
            for(j=0;j<m;j++){
                turn[0][j].cnt=0;
                for(k=0;k<Len[j];k++)
                    turn[0][j].Q[turn[0][j].cnt++]=k-1;
            }
            int cur=0;
            for(j=i;j<n;j++){
            //  printf("i=%d j=%d\n",i,j);
                int flag=down((j-i)&1,str[j]);
                //printf("flag=%d\n",flag); 
                if(pre[cur][str[j]-'a']==0){
                    if(flag==1)ans++;
                    pre[cur][str[j]-'a']=allc++;
                }
                cur=pre[cur][str[j]-'a'];
            }
        }
        printf("%d\n",ans);
        return 0;
}