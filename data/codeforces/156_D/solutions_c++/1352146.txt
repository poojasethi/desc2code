//By Lin
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
#define maxn 100005
using namespace std; 

long long ans; 
int	n,cnt; 
bool mark[maxn];

struct	Edge{
	int to; 
	Edge *next;
}*mat[maxn], edges[maxn*2];

void	link(int x ,int to )
{
	edges[cnt].to = to; 
	edges[cnt].next = mat[x]; 
	mat[x] = &edges[cnt++];
}

int		dfs(int x )
{
	mark[x] = true; 
	int ret = 1; 
	for ( Edge *p = mat[x]; p ; p = p->next )
		if ( !mark[p->to] ) ret += dfs(p->to); 
	return ret; 
}

int main()
{
	int m ,MOD;
	scanf("%d%d%d" , &n ,&m , &MOD );
	while ( m-- )
	{
		int x ,y; 
		scanf("%d%d" ,&x ,&y );
		link(x ,y ); 
		link(y ,x );
	}
	ans = 1; 
	int k = 0; 
	for (int i = 1; i<=n; i++)
		if ( !mark[i] ) {
			ans = ( ans*dfs(i) )%MOD;
		k++;
		}
	for (int i = 0; i<k-2; i++) ans = (ans*n)%MOD;
	if ( k > 1 ) cout<<ans<<endl; 
	else cout<<1%MOD<<endl; 
	
	return 0; 
}
