#include<cstdio>
#include<algorithm>
#include<string>
#include<iostream>
#define maxn 100009
using namespace std;
int p[maxn];
long long  cnt[maxn];
int findset(int x)
{
    return x==p[x]?x:p[x]=findset(p[x]);
}
void unionset(int x,int y)
{
    p[findset(x)]=findset(y);
}
int main()
{
    long long n,m,k;
    cin>>n>>m>>k;
    for(int i=1;i<=n;i++)p[i]=i;
    for(int i=0;i<m;i++)
    {
        int x,y;
        cin>>x>>y;
        unionset(x,y);
    }
    for(int i=1;i<=n;i++)cnt[findset(i)]++;
    long long ans=1;long long t=0;
    for(int i=1;i<=n;i++)
    {
        if(cnt[i])
            {ans=(ans*cnt[i])%k;t++;}
    }
    if(t==1){printf("%d",1%k);return 0;}
    for(int i=1;i<=t-2;i++)ans=(ans*n)%k;
    cout<<ans;
}
