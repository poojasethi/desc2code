#include <iostream>
#include <vector>
#include <stack>

using namespace std;

typedef long long int lint;


int main()
{
  lint n,m,k;
  cin>>n>>m>>k;
  vector<vector<int> > g(n);
  for (int i=0;i<m;i++) {
    int u,v;
    cin>>u>>v;
    u--;v--;
    g[u].push_back(v);
    g[v].push_back(u);
  }
  lint numcomponentes=0;
  vector<int> visto(n,0);
  lint prod=1%k;
  for (int i=0;i<n;i++) {
    if (visto[i]==0) {
      numcomponentes++;
      stack<int> s;
      s.push(i);
      visto[i]=1;
      lint elems=1;
      while (not s.empty()) {
	int u=s.top();
	s.pop();
	vector<int> &ad=g[u];
	for (int j=0;j<int(ad.size());j++) {
	  int v=ad[j];
	  if (visto[v]==0) {
	    visto[v]=1;
	    s.push(v);
	    elems++;
	  }
	}
      }
      prod=(prod*elems)%k;
    }
  }
  if (numcomponentes==1) {
    cout<<1%k<<endl;
  } else {
    for (int i=0;i<numcomponentes-2;i++)
      prod=(prod*n)%k;
    cout<<prod<<endl;
  }
}
