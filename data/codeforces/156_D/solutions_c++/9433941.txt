#include <iostream>
#include <vector>
using namespace std;


const int max_n = 100110;
int n,m,MOD;
bool mark[max_n];
vector<int>adj[max_n];
long long mul(long long a,long long b)
{
	return (a*b)%MOD;
}
int dfs(int v)
{
	mark[v] = true;
	int sum = 1;
	for(int i=0;i<adj[v].size();i++)
	{
		int u = adj[v][i];
		if(!mark[u])
		{
			sum+=dfs(u);
		}

	}
	return sum;
}

int main()
{
	long long ans = 1;
	cin>>n>>m>>MOD;
	for(int i=0;i<m;i++)
	{
		int u,v;
		cin>>u>>v;
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
	int sz = 0;
	for(int i=1;i<=n;i++)
		if(!mark[i])
		{
			ans =mul(dfs(i),ans);
			sz++;
		}
	if(sz==1)
		cout<<1%MOD<<endl;
	else 
	{
		for(int i=0;i<sz-2;i++)
			ans = mul(ans,n);
		cout<<ans<<endl;
	}
	return 0;
}
