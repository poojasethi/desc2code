#include <iostream>
#include <vector>

using namespace std;

const int MAXN = 1e5 + 10;
bool mark[MAXN];
vector<int> ng[MAXN];

int dfs(int x) {
	mark[x] = true;
	int ret = 1;
	for (int i = 0; i < ng[x].size(); i++) {
		int u = ng[x][i];
		if (!mark[u])
			ret += dfs(u);
	}
	return ret;
}

int main() {
	int n, m, MOD;
	cin >> n >> m >> MOD;
	for (int i = 0; i < m; i++) {
		int x, y;
		cin >> x >> y;
		x--; y--;
		ng[x].push_back(y);
		ng[y].push_back(x);
	}
	int cnt = 0, ans = 1 % MOD;
	for (int i = 0; i < n; i++)
		if (!mark[i])
			cnt++, ans = (long long)ans * dfs(i) % MOD;
	for (int i = 0; i < cnt - 2; i++)
		ans = (long long)ans * n % MOD;
	if (cnt == 1)
		ans = 1;
	cout << ans % MOD << endl;
	return 0;
}

