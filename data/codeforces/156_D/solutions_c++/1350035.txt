#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

int g[100005], siz[100005];
int FIND(int x) { return g[x]==x?x:g[x]=FIND(g[x]); }
void UNION(int x, int y) { g[FIND(x)]=FIND(y); }
int MOD;

int bigmod(int a, int n) {
	if(n<0) return 0;
	if(n==0) return 1;
	if(n==1) return a;
	int r=bigmod((int)(a*1LL*a%MOD), n/2);
	if(n%2) r=r*1LL*a%MOD;
	return r;
}

int main(void) {
	int n, m;
	scanf("%d%d%d", &n, &m, &MOD);
	for(int i=1;i<=n;i++) g[i]=i;
	for(int i=0;i<m;i++) {
		int x, y;
		scanf("%d%d", &x, &y);
		UNION(x, y);
	}
	for(int i=1;i<=n;i++) siz[FIND(i)]++;
	int res=0;
	int ans=1, v1=1, v2=1;
	for(int i=1;i<=n;i++) {
		if(g[i]==i) { ++res; v1=v1*1LL*siz[i]%MOD; }
	}
	if(res==1) { printf("%d\n", 1%MOD); return 0; }
	v2 = bigmod(n, res-2);
	ans=v1*1LL*v2%MOD;
	printf("%d\n", ans);
	return 0;
}

