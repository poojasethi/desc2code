#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define orta (bas + son >> 1)
#define sag (k + k + 1)
#define sol (k + k)
#define endl '\n'
#define foreach(i,x) for(type(x)i=x.begin();i!=x.end();i++)
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define ROF(ii,aa,bb) for(int ii=aa;ii>=bb;ii--)
#define mp make_pair
#define nd second
#define st first
#define type(x) __typeof(x.begin())

typedef pair < int ,int > pii;

typedef long long ll;

const long long linf = 1e18+5;
const int mod = (int) 1e9 + 7;
const int logN = 17;
const int inf = 1e9;
const int N = 2e5 + 5;

int n, m, x, y, z, dp[N][2][2], dp2[N][2][2], hm[N][2][2], g[N];
char l[N], r[N], go[3] = {'4', '7', 'a'};

int calculate_dps() {
	hm[0][0][0] = 1;
	FOR(i, 0, n-1) 
		FOR(t1, 0, 1)
			FOR(t2, 0, 1) {
				FOR(go, 0, 1) {
					char c = ::go[go];
					if(hm[i][t1][t2] && (t1 || l[i+1] <= c) && (t2 || r[i+1] >= c)) {
						int g1 = t1, g2 = t2, tt = c - '0';
						if(l[i+1] < c) g1 = 1;
						if(r[i+1] > c) g2 = 1;
						hm[i+1][g1][g2] = (hm[i+1][g1][g2] + hm[i][t1][t2]) % mod;
						dp[i+1][g1][g2] = (dp[i+1][g1][g2] + 10LL * dp[i][t1][t2] + hm[i][t1][t2] * (ll) (c - '0')) % mod;
						dp2[i+1][g1][g2] = (dp2[i+1][g1][g2]+100LL*dp2[i][t1][t2]+(ll)hm[i][t1][t2]*tt*tt+dp[i][t1][t2]*20LL*tt) % mod;
					}
				}
			}
}

int main() {

	scanf("%s %s", l + 1, r + 1);

	n = strlen(l + 1);

	calculate_dps();
	
	int t10 = 1, t11 = 11;
	
	ll ans = 0;

	int t4 = 0, t7 = 0, tt = 1;

	FOR(i, 1, n) {
		g[i] = ((t4 + 7LL * tt) % mod) * ((t7 + 4LL * tt) % mod) % mod;
		t4 = (t4 * 10LL + 4) % mod; t7 = (t7 * 10LL + 7) % mod;
		tt = tt * 10LL % mod;
	}

	ROF(i, n, 1) {
		t10 = t10 * 10LL % mod;
		FOR(t1, 0, 1)
			FOR(t2, 0, 1) {
				if((t1 || l[i] == '4') && (t2 || r[i] == '7') && hm[i-1][t1][t2]) {
					int dp2 = (::dp2[i-1][t1][t2]) % mod;
					int dp = (::dp[i-1][t1][t2]) % mod;
					int hm = (::hm[i-1][t1][t2]) % mod;
					ans = (ans+g[n-i+1]*(ll)hm+dp2*(ll)t10%mod*t10%mod+t11*(ll)dp%mod*t10%mod)%mod;
				}
			}
		t11 = (t11 * 10LL + 11) % mod;
	}

	cout << ans << endl;

	return 0;
}
