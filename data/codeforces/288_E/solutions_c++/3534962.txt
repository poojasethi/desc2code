#include <cstdio>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <algorithm>
#include <iostream>

using namespace std;
const int M=1000000007;
const int maxn=100010;
void add(long long &a,long long b)
{
    a=(a+b)%M;
}

long long dp[maxn][2][3];
int a[maxn],n;
long long po[maxn*2],s[maxn];
long long cal()
{
    memset(dp,0,sizeof(dp));
    dp[0][1][0]=1;
    for(int i=0;i<n;i++)
        for(int j=0;j<2;j++)
            {
                add(dp[i+1][j&&a[i+1]==4][0],dp[i][j][0]);
                add(dp[i+1][j&&a[i+1]==4][1],(dp[i][j][1]*10LL+4LL*dp[i][j][0])%M);
                add(dp[i+1][j&&a[i+1]==4][2],(100LL*dp[i][j][2]+80LL*dp[i][j][1]+16LL*dp[i][j][0])%M);
                if(!j||a[i+1]==7)
                {
                    add(dp[i+1][j&&a[i+1]==7][0],dp[i][j][0]);
                    add(dp[i+1][j&&a[i+1]==7][1],(dp[i][j][1]*10LL+7LL*dp[i][j][0])%M);
                    add(dp[i+1][j&&a[i+1]==7][2],(100LL*dp[i][j][2]+140LL*dp[i][j][1]+49LL*dp[i][j][0])%M);
                }
            }
    long long ans=0;
    for(int i=0;i<n;i++)
    {
        long long A=(4LL*po[i]+7LL*s[i])%M;
        long long b=(7LL*po[i]+4LL*s[i])%M;
        add(ans,A*b%M*(dp[n-i-1][0][0]+(a[n-i]==7?dp[n-i-1][1][0]:0)%M));
        add(ans,(A+b)%M*(dp[n-i-1][0][1]+(a[n-i]==7?dp[n-i-1][1][1]:0))%M*po[i+1]%M);
        add(ans,1LL*(dp[n-i-1][0][2]+(a[n-i]==7?dp[n-i-1][1][2]:0))%M*po[2*i+2]%M);
    }
    return ans;
}
char ch[maxn];
int main()
{
    po[0]=1;
    for(int i=1;i<maxn*2;i++)po[i]=10LL*po[i-1]%M;
    s[0]=0;
    for(int i=1;i<maxn;i++)s[i]=(10LL*s[i-1]+1)%M;
    while(~scanf("%s",ch))
    {
        n=strlen(ch);
        for(int i=1;i<=n;i++)a[i]=ch[i-1]-'0';
        long long ans=-cal();
        scanf("%s",ch);
        for(int i=1;i<=n;i++)a[i]=ch[i-1]-'0';
        ans=(ans+cal()+M)%M;
        printf("%I64d\n",ans);
    }
}