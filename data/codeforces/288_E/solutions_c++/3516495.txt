#include <iostream>
#include <algorithm>
#include <cstring>

using namespace std;

typedef long long LL;
const LL MOD = 1000000007;
const int N = 100010;

char s[N], t[N];
LL a[N], b[N], pow[N], pow2[N], c1[N];
int n;

LL get(char s[]) {
        LL ans = 0;
        LL p = 0;
        for(int i=0;i<n;++i) {
                if(s[i] == '7') {
                        LL pp = (p * 10 + 4)%MOD*pow[n-1-i] % MOD;
                        LL qq = (p * 10 + 7)%MOD*pow[n-1-i] % MOD;

                        if(n-1-i) {
                                LL t = pow2[n-1-i] - 1;
                                ans = (ans + t*pp%MOD*pp%MOD + a[n-2-i]*pp%MOD + b[n-2-i]) % MOD;
                                ans = (ans + (pp+c1[n-1-i]*7)%MOD*((qq + c1[n-1-i]*4)%MOD) )%MOD;
                        }
                        else {
                                ans = (ans + pp * qq)%MOD;
                        }
                }
                p = (p * 10 + s[i] - '0')%MOD;
        }
        return ans;
}

int main () {
        cin >> s >> t; n = strlen(s);

        pow2[0] = pow[0] = 1; c1[0] = 0;
        for(int i=1;i<=n;++i) {
                pow[i] = pow[i-1] * 10 % MOD;
                pow2[i] = pow2[i-1] * 2 % MOD;
                c1[i] = (c1[i-1] * 10 + 1) % MOD;
        }
        LL p2 = 1, tmp = 11; a[0] = 11; b[0] = 28;
        for(int i=1;i<=n;++i) {
                p2 = p2 * 2 % MOD;
                LL p = 4*pow[i]%MOD, q = 7*pow[i]%MOD;
                LL t = pow2[i] - 1;
                tmp = (tmp*20 + 11*p2)%MOD;
                a[i] = (2*tmp - 4*c1[i+1] - 7*c1[i+1]) % MOD;
                b[i] = (p*p+q*q)%MOD*t%MOD + a[i-1]*(p+q) + 2*b[i-1]; b[i] %= MOD;
                b[i] += (p+7*c1[i])%MOD * ((q+4*c1[i])%MOD); b[i] %= MOD;
        }
        cout << ( get(t) - get(s) + MOD + MOD ) % MOD << endl;
        return 0;
}
