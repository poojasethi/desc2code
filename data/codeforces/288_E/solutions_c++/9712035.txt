#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long ll;
const ll mo=1e9+7;
const int L=100005;
int n,m;
char a[L],b[L];
struct data{
	ll cnt,sum,pro,l,r;
	data(ll Cnt=1,ll Sum=0,ll Pro=0,ll L=0,ll R=0):cnt(Cnt),sum(Sum),pro(Pro),l(L),r(R){
	}
	data put(ll h){
		h%=mo;
		return data(
			cnt,
			(sum+(cnt-1)*2%mo*h%mo)%mo,
			(pro+(cnt-1)*h%mo*h%mo+sum*h%mo)%mo,
			(l+h)%mo,
			(r+h)%mo
		);
	}
} x,y,z;
data operator + (const data &a,const data &b){
	return data(
		(a.cnt+b.cnt)%mo,
		(a.sum+b.sum+a.r+b.l)%mo,
		(a.pro+b.pro+a.r*b.l)%mo,
		a.l,
		b.r
	);
}
int main(){
	scanf("%s%s",a,b);
	n=strlen(a);
	reverse(a,a+n);
	reverse(b,b+n);
	for(m=n;a[m-1]==b[m-1];m--);
	ll w=1;
	for(int i=0;i<m-1;i++,(w*=10)%=mo){
		x=x.put((a[i]-'0')*w);
		y=y.put((b[i]-'0')*w);
		if(a[i]=='4')
			x=x+z.put(7*w);
		if(b[i]=='7')
			y=z.put(4*w)+y;
		z=z.put(4*w)+z.put(7*w);
	}
	x=x.put((a[m-1]-'0')*w);
	y=y.put((b[m-1]-'0')*w);
	x=x+y;
	(w*=10)%=mo;
	for(int i=m;i<n;i++,(w*=10)%mo)
		x=x.put((a[i]-'0')*w);
	printf("%I64d\n",x.pro);
}
