#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;
typedef long long LL;
const int Mod = (1e9)+7;
const int Maxn = 100005;
int g[Maxn][2], h[Maxn][2], f[Maxn];
int two[Maxn], pw[Maxn];
int i,pre,ans,N;
char S[Maxn];
//g[i][0] i位为4, 和
//g[i][1] i位为7, 和
//h[i][0] 0~i 4
//h[i][1] 0~i 7
//f[i] i位数所求答案
#define ABS(a) (((a)%Mod+Mod)%Mod)
void init(){
  g[0][0] = 4; g[0][1] = 7;
  h[0][0] = 4; h[0][1] = 7;
  f[0] = 28;
  for (i=1,two[0]=pw[0]=1;i<=100000;i++){
    pw[i] = (LL)pw[i-1]*10%Mod;
    two[i] = (LL)two[i-1]*2%Mod;
  }
  for (i=1;i<=100000;i++){
    int t0 = (LL)4 * pw[i]%Mod;
    int t1 = (LL)7 * pw[i]%Mod;
    int sum = (g[i-1][0]+g[i-1][1])%Mod;
    g[i][0] = ((LL)two[i]*t0%Mod+sum)%Mod;
    g[i][1] = ((LL)two[i]*t1%Mod+sum)%Mod;
    h[i][0] = ((LL)h[i-1][0]*10+4LL)%Mod;
    h[i][1] = ((LL)h[i-1][1]*10+7LL)%Mod;
    int tmp0 = (((LL)t0*t0%Mod*(two[i]-1)%Mod + (LL)ABS(sum+sum-h[i-1][0]-h[i-1][1])*t0%Mod)%Mod + f[i-1])%Mod;
    int tmp1 = (((LL)t1*t1%Mod*(two[i]-1)%Mod + (LL)ABS(sum+sum-h[i-1][0]-h[i-1][1])*t1%Mod)%Mod + f[i-1])%Mod;
    int tmp2 = (LL)(t0+h[i-1][1])*(t1+h[i-1][0])%Mod;
    f[i] = ((tmp0+tmp1)%Mod+tmp2)%Mod;
  }
}

int calc(){
  N = strlen(S);
  for (i=0;i<N/2;i++)
    swap(S[i],S[N-1-i]);
  pre = 0;
  int ret = 0;
  for (i=N-1;i>=0;i--){
    int t0 = (LL)4 * pw[i]%Mod;
    int t1 = (LL)7 * pw[i]%Mod;
    int sum = (g[i-1][0]+g[i-1][1])%Mod;
    if (S[i]=='7'){
      if (i==0) {(ret += (LL)(pre+4)*(pre+7)%Mod) %= Mod;continue;}
      int pp = (pre+t0)%Mod;
      (pre += t1) %= Mod;
      int tmp0 = (((LL)pp*pp%Mod*(two[i]-1)%Mod + (LL)ABS(sum+sum-h[i-1][0]-h[i-1][1])*pp%Mod)%Mod + f[i-1])%Mod;
      int tmp1 = (LL)(pp+h[i-1][1])*(pre+h[i-1][0])%Mod;
      ret = ((ret+tmp0)%Mod+tmp1)%Mod;
    }
    else (pre += t0) %= Mod;
  }
  return ret;
}

int main(){
  init();
  scanf("%s",S);
  ans = Mod-calc();
  scanf("%s",S);
  ans = (ans+calc())%Mod;
  printf("%d\n",ans);
  return 0;
}