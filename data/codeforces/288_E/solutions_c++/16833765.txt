#include<bits/stdc++.h>
using namespace std;

const int mod=1000000007;
int n;
long long ans;
long long f[100010][2],s[100010][2],f2[100010][2],pw[100010],w1[100010];
char a[100010],b[100010];

void update(long long &i,long long x)
{i=(i+x)%mod;
}

long long solve(char A[])
{int i,j;
 long long x,y,ret=0;
 
 memset(f,0,sizeof(f));
 memset(f2,0,sizeof(f2));
 memset(s,0,sizeof(s));
 s[0][0]=1;
 for(i=0;i<n;i++)
 {	x=(w1[n-i-2]*7+4*pw[n-i-1])%mod;
 	y=(w1[n-i-2]*4+7*pw[n-i-1])%mod;
 	update(ret,f2[i][1]%mod+f[i][1]*(x+y)%mod+s[i][1]*x%mod*y%mod);
 	if(A[i+1]=='7') update(ret,f2[i][0]%mod+f[i][0]*(x+y)%mod+s[i][0]*x%mod*y%mod);
 	if(A[i+1]=='4')
 	{	update(f[i+1][0],f[i][0]+4*pw[n-i-1]*s[i][0]);
 		update(f2[i+1][0],f2[i][0]+s[i][0]*4*pw[n-i-1]%mod*4*pw[n-i-1]%mod+2*f[i][0]*4%mod*pw[n-i-1]%mod);
 	}
 	else
 	{	update(f[i+1][1],f[i][0]+4*pw[n-i-1]*s[i][0]);
 		update(f[i+1][0],f[i][0]+7*pw[n-i-1]*s[i][0]);
 		update(f2[i+1][1],f2[i][0]+s[i][0]*4*pw[n-i-1]%mod*4*pw[n-i-1]%mod+2*f[i][0]*4%mod*pw[n-i-1]%mod);
 		update(f2[i+1][0],f2[i][0]+s[i][0]*7*pw[n-i-1]%mod*7*pw[n-i-1]%mod+2*f[i][0]*7%mod*pw[n-i-1]%mod);
 		update(s[i+1][1],s[i][0]);
	}
	update(s[i+1][0],s[i][0]);
	
	update(f[i+1][1],f[i][1]*2+(4+7)*pw[n-i-1]%mod*s[i][1]);
	update(f2[i+1][1],f2[i][1]*2%mod+s[i][1]*pw[n-i-1]%mod*pw[n-i-1]%mod*(4*4+7*7)%mod+2*f[i][1]*(4+7)%mod*pw[n-i-1]%mod);
 	update(s[i+1][1],s[i][1]*2);
 }
 return ret;
}

int main()
{int i,j;
 
 scanf("%s",a+1);
 scanf("%s",b+1);
 n=strlen(a+1);
 pw[0]=1;
 for(i=1;i<=n;i++) pw[i]=pw[i-1]*10%mod;
 w1[0]=1;
 for(i=1;i<=n;i++) w1[i]=(w1[i-1]*10+1)%mod;
 ans=((solve(b)-solve(a))%mod+mod)%mod;
 printf("%d\n",ans);
 return 0;
}