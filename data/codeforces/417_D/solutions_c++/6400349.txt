#include<cstdio>
#include<algorithm>
#include<cstring>
using namespace std;

struct node{
   int c,p,cover;
}x[105];

bool cmp(node u,node v){return u.p<v.p;}

int n,m;
long long b;
const int L=1050000;
long long f[L+1];
void upmin(long long &v,long long x){if(x<v)v=x;}

int main(){
   scanf("%d%d%I64d",&n,&m,&b);
   for(int i=1,t,y;i<=n;i++){
     scanf("%d%d%d",&x[i].c,&x[i].p,&t);
     for(int j=1;j<=t;j++){
       scanf("%d",&y);
       x[i].cover|=1<<(y-1);
     }
   }
   sort(x+1,x+n+1,cmp);
   memset(f,127,sizeof(f));
   long long ans=f[L];
   f[0]=0;
   for(int i=1;i<=n;i++){
     for(int j=0;j<(1<<m);j++)
       if(f[j]!=f[L])
         upmin(f[j|x[i].cover],f[j]+x[i].c);
     if(f[(1<<m)-1]!=f[L]) upmin(ans,f[(1<<m)-1]+b*x[i].p);
   }
   if(ans==f[L]) printf("-1\n");
   else printf("%I64d\n",ans);
}
