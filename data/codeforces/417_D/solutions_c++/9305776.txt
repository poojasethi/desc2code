#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>
#include <cstring>
using namespace std;
const int N=2e6+10;
const int inf=1e9+7;
int a[N],b[N];
int i,j,n,m,x,y,t,z,k;
long long dp[1<<20];
long long ans;
struct P
{
 int x,y,z;
} p[111];
int cmp(P x,P y)
{
 return x.y<y.y;
}

int main()
{
 //   freopen("marathon.in","r",stdin);
  //  freopen("marathon.out","w",stdout);
cin>>n>>m>>k;
for (i=0;i<n;i++)
 {
   cin>>p[i].x>>p[i].y>>t;
   while (t--)
    {
      int xx;
      cin>>xx;
      p[i].z |=(1<<(xx-1));
    }
 }
sort(p,p+n,cmp);
int nn=(1<<m)-1;
for (i=1;i<=nn;i++) dp[i]=1LL<<60;
long long ans=1LL<<60;

for (i=0;i<n;i++)
 {
   for (j=0;j<nn;j++)
    dp[j | p[i].z]=min(dp[j | p[i].z],dp[j]+p[i].x);
  ans=min(ans,dp[nn]+1LL*k*p[i].y);
 }
if (ans==1LL<<60) cout<<-1; else cout<<ans;

}
