#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<algorithm>
#define LL long long 
using namespace std;
const int N=300010;
struct qwe{int q,l;}a[N<<1];
struct qqq{int n,b;LL d;}T[10];
int form[N],he[N],s[N];
LL g[N],g1[N],g2[N];
int p,p1,p2;
LL d[N],f[N],sum,ans;
void build(int x,int y)
{
	a[++p]=(qwe){y,he[x]}; he[x]=p;
	a[++p]=(qwe){x,he[y]}; he[y]=p;
}
void dfs(int x,int fa)
{
	s[x]=0; d[x]=0; f[x]=0;
	for (int i=he[x];i;i=a[i].l)
		if (a[i].q!=fa)
		{
			dfs(a[i].q,x);
			f[x]+=f[a[i].q]+d[x]*(LL)s[a[i].q]+(LL)(s[x]+1)*(d[a[i].q]+(LL)s[a[i].q]);
			d[x]+=d[a[i].q]+(LL)s[a[i].q];
			s[x]+=s[a[i].q];
		}
	s[x]++;
}
void get(int x,int fa,int t)
{
	for (int i=he[x];i;i=a[i].l)
		if (a[i].q!=fa)
		{
			d[a[i].q]=d[x]+t-2*s[a[i].q];
			get(a[i].q,x,t);
		}
}
int ok(int x1,int x2,LL y1,LL y2)
{
	if (y1<(y2+(LL)x1*(LL)x2)) return 1;
	return 0;
}
void dp(int x,int fa,int r1,int r2)
{
	g1[x]=d[x]*(LL)T[r2].n; g2[x]=0; form[x]=x; 
	for (int i=he[x];i;i=a[i].l)
		if (a[i].q!=fa)
		{
			dp(a[i].q,x,r1,r2);
			if (ok(T[r1].n,T[r2].n,g1[x],g1[a[i].q]))
			{
				g2[x]=g1[x]; form[x]=a[i].q;
				g1[x]=g1[a[i].q]+(LL)T[r1].n*(LL)T[r2].n;
			}
			else if (ok(T[r1].n,T[r2].n,g2[x],g1[a[i].q]))
				g2[x]=g1[a[i].q]+(LL)T[r1].n*(LL)T[r2].n;
		}
	sum=max(sum,(LL)T[r1].n*d[x]+g1[x]);
}
void find(int x,int fa,int r1,int r2)
{
	sum=max(sum,(LL)T[r1].n*d[x]+g[x]);	
	for (int i=he[x];i;i=a[i].l)
		if (a[i].q!=fa)
		{
			if (form[x]==a[i].q)
				g[a[i].q]=max(g[x],g2[x])+(LL)T[r1].n*(LL)T[r2].n;
			else
				g[a[i].q]=max(g1[x],g[x])+(LL)T[r1].n*(LL)T[r2].n;
			find(a[i].q,x,r1,r2);
		}
}
void run(int x1,int x2,int x3)
{
	sum=0;
	dp(T[x2].b,0,x1,x3);
	find(T[x2].b,0,x1,x3);
	sum+=(LL)(T[x1].d+T[x1].n)*(LL)(T[x2].n+T[x3].n);
	sum+=(LL)(T[x3].d+T[x3].n)*(LL)(T[x1].n+T[x2].n);
	sum+=f[T[x1].b]+f[T[x2].b]+f[T[x3].b];
	ans=max(ans,sum);
}
int main()
{
//	freopen("391.in","r",stdin);
//	freopen("391.out","w",stdout);
	for (int i=1;i<=3;i++) scanf("%d",&T[i].n);
	T[1].b=1; T[2].b=T[1].n+1; T[3].b=T[1].n+T[2].n+1; 
	for (int i=1;i<T[1].n;i++)
	{
		scanf("%d%d",&p1,&p2);
		build(p1,p2);
	}
	for (int i=1;i<T[2].n;i++)
	{
		scanf("%d%d",&p1,&p2);
		build(p1+T[1].n,p2+T[1].n);
	}
	for (int i=1;i<T[3].n;i++)
	{
		scanf("%d%d",&p1,&p2);
		build(p1+T[1].n+T[2].n,p2+T[1].n+T[2].n);
	}
	for (int i=1;i<=3;i++)
	{
		dfs(T[i].b,0); 
		get(T[i].b,0,T[i].n);
		for (int j=T[i].b;j<T[i].n+T[i].b;j++)
			T[i].d=max(T[i].d,d[j]);
	}
	run(1,2,3);
	run(2,1,3);
	run(1,3,2);
	printf("%I64d\n",ans);
	return 0;
}
