#include <iostream>
#include <algorithm>

using namespace std;

const int MAXN = 100005;
const int INF = 1001001001;

int n;
int A[MAXN], maxi[MAXN], f[MAXN];
bool ok[MAXN];
int cnt[MAXN];

int main()
{
    //freopen("test.txt", "r", stdin);

    cin >> n;
    for(int i=1; i<=n; i++) cin >> A[i];

    maxi[0] = INF;
    for(int i=n; i>=0; i--) {
        int * kvenka = lower_bound(maxi, maxi+MAXN, A[i], greater<int>());
        int poz = kvenka - maxi;
        f[i] = poz;
        maxi[poz] = max(maxi[poz], A[i]);
    }

    for(int i=0; i<MAXN; i++) maxi[i] = INF;
    maxi[f[0]] = 0;

    for(int i=1; i<=n; i++) {
        if( maxi[f[i]+1] < A[i] )
        {
            ok[i] = true;
            cnt[f[i]]++;
            maxi[f[i]] = min(A[i], maxi[f[i]]);
        }
    }

    for(int i=1; i<=n; i++)
    {
        if(!ok[i]) cout << 1;
        else cout << (cnt[f[i]]==1 ? 3 : 2);
    }
    cout << endl;

    return 0;
}
