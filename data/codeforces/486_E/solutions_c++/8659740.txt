#include <cstdio>
#include <algorithm>
#include <vector>

using namespace std;

const int MAXN = 110000;
const int INF = 110000;
int a[MAXN],f[MAXN],b[MAXN],len,pom[MAXN];
vector<int> po[MAXN];
int ans[MAXN];
int n;

int main()
{
	scanf("%d",&n);
	for(int i = 0;i < n;i++) scanf("%d",a+i);
	len = 1;
	b[0] = a[0];
	f[0] = 0;

	for(int i = 1;i < n;i++)
	{
		int now = lower_bound(b,b+len,a[i]) - b;
		b[now] = a[i];
		if (now == len) len++;
		f[i] = now;
	}
	for(int i = 0;i < len;i++)
	{
		po[i].clear();
		pom[i] = -1;
	}
	pom[len] = INF;
	for(int i = n-1;i >= 0;i--)
	{
		if (pom[f[i] + 1] > a[i])
		{
			po[f[i]].push_back(i);
			pom[f[i]] = max(pom[f[i]],a[i]);
		} else ans[i] = 1;
	}
	for(int i = 0;i < len;i++)
	{
		int tot = po[i].size();
		if (tot == 1)
		{
			ans[po[i][0]] = 3;
		} else
		for(int j = 0;j < tot;j++) ans[po[i][j]] = 2;
	}
	for(int i = 0;i < n;i++) printf("%d", ans[i]);
	puts("");
	return 0;
}