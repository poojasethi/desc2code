#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <climits>
#include <algorithm>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <cassert>
#include <vector>
#define all(x) x.begin() , x.end()
#define fi first
#define se second
#define pb push_back
#define umax( x , y ) x = max( x , (y) )
#define umin( x , y ) x = min( x , (y) )
#define For( i , a ) for(int i=1;i<=a;i++)
#define ort (b+s)/2
#define y2 asrwjaelkf
#define y1 asseopirwjaelkf

using namespace std;

const int maxn = 100020;
const int MOd = 1e9+7;
const int INF = 1e9 + 143;

typedef long long Lint;
typedef double db;
typedef pair<int,int> ii;
typedef pair<int,ii> iii;

iii ar[maxn];
int a, q, b;
ii bs[maxn*10];
set <ii> st;

int main() {
	
	scanf("%d %d",&q,&a);
	
	for(int i=1;i<=a;i++) {
		scanf("%d %d %d",&ar[i].se.fi,&ar[i].se.se,&ar[i].fi);
	}
	
	sort( ar+1, ar+1+a );
	st.insert( ii( INF, 1 ) );
	
	for(int i=1;i<=a;i++) {
		ii h = ar[i].se;
		set <ii> :: iterator it = st.lower_bound( ii( h.fi, INF ) );
		while( h.fi < h.se ) {
			
			if( it->se == 1 ) {
				int x = h.fi, y = min( h.se, it->fi );
				bs[b++] = ii( ar[i].fi - y, 1 ) ;
				bs[b++] = ii( ar[i].fi - x, -1 ) ;
				if( x == ar[i].se.fi ) st.insert( ii( x, 1 ) );
				if( y == ar[i].se.se ) st.insert( ii( y, -1 ) );
			}
			h.fi = it->fi;
			if( h.fi < h.se ) st.erase( it++ );
		}
	}
	
	for(int i=1,j;i<=q;i++) {
		scanf("%d",&j);
		bs[b++] = ii( j, 0 ) ;
	}
	sort( bs, bs+b );
	
	int k = 0, ans = 0;
	for(int i=0;i<b;i++) {
		if( i > 0 ) ans += k * ( bs[i].fi-bs[i-1].fi );
		if( bs[i].se ) k += bs[i].se;
		else printf("%d\n",ans);
	}
	
	
	return 0;
}
