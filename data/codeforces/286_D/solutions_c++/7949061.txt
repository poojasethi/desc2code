#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,n) for (int i=a;i<n;i++)
#define per(i,a,n) for (int i=n-1;i>=a;i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define SZ(x) ((int)(x).size())
#define fi first
#define se second
typedef vector<int> VI;
typedef long long ll;
typedef pair<int,int> PII;
typedef map<int,int>::iterator ite;
const ll mod=1000000007;
ll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
// head

const int N=101000;
struct segment { int l,r,t;}seg[N];
map<int,int> wseg;
vector<pair<int,PII> > evt;
ll ret[N];
int n,m,q;
bool cmp(const segment &a,const segment &b) { return a.t<b.t;}
void news(int l,int r,int id) {
	--r;
	ite it=wseg.lower_bound(l);
	if (it->fi>l) {
		ite pit=it; --pit;
		wseg[l]=pit->se;
	}
	it=wseg.lower_bound(l);
	while (1) {
		ite nit=it; ++nit;
		if (nit->fi-1<=r) {
			wseg.erase(it->fi);
			if (nit->fi-1==r) break;
		} else {
			int cid=it->se;
			wseg.erase(it->fi);
			wseg[r+1]=cid;
			break;
		}
		it=nit;
	}
	wseg[l]=id;
}
int main() {
	scanf("%d%d",&n,&m);
	rep(i,0,m) scanf("%d%d%d",&seg[i].l,&seg[i].r,&seg[i].t);
	sort(seg,seg+m,cmp);
	wseg[0]=-1; wseg[1000000000]=-1;
	per(i,0,m) news(seg[i].l,seg[i].r,i);
	for (ite it=wseg.begin();it!=wseg.end();it++) {
		if (it->se==-1) continue;
		ite nit=it; ++nit;
		int l=it->fi,r=nit->fi,t=seg[it->se].t;
		evt.pb(mp(t-r,mp(1,r-t)));
		evt.pb(mp(t-l,mp(-1,t-l)));
	}
	rep(i,0,n) scanf("%d",&q),evt.pb(mp(q,mp(2,i)));
	sort(all(evt));
	ll k=0,b=0;
	rep(i,0,SZ(evt)) {
		if (evt[i].se.fi<=1) k+=evt[i].se.fi,b+=evt[i].se.se;
		else ret[evt[i].se.se]+=k*evt[i].fi+b;
	}
	rep(i,0,n) printf("%I64d\n",ret[i]);
}
