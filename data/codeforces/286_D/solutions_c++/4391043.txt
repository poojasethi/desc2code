#include <cstdio>
#include <vector>
#include <set>
#include <algorithm>
#define pb push_back
#define mp make_pair
#define x first
#define y second
using namespace std;
const int NMax=110000;
vector<pair<pair<int,int>,int> > LSH,T;
multiset<int>state;
int N,M,Ans[NMax];
int main()
{
	scanf("%d%d",&N,&M);
	for(int i=1;i<=M;i++) {
		int x,y,z;
		scanf("%d%d%d",&x,&y,&z);
		LSH.pb(mp(mp(x,z),1));
		LSH.pb(mp(mp(y,z),0));
	}
	sort(LSH.begin(),LSH.end());
	for(int i=0;i<LSH.size();i++) {
		if(i>0&&!state.empty()) {
			multiset<int>::iterator p=state.begin();
			int t=(*p);
			T.pb(mp(mp(t-LSH[i].x.x,1),-1));
			T.pb(mp(mp(t-LSH[i-1].x.x,0),-1));
		}
		if(LSH[i].y==1)state.insert(LSH[i].x.y);
		else state.erase(state.find(LSH[i].x.y)); 		
	}
	for(int i=1;i<=N;i++) {
		int x;
		scanf("%d",&x);
		T.pb(mp(mp(x,-1),i));
	}
	sort(T.begin(),T.end());
	int cnt=0,sum=0;
	for(int i=0;i<T.size();i++) {
		if(cnt) sum+=cnt*(T[i].x.x-T[i-1].x.x);
		if(T[i].x.y==1) cnt++;
		else if(T[i].x.y==0) cnt--;
		else Ans[T[i].y]=sum;
	}
	for(int i=1;i<=N;i++) printf("%d\n",Ans[i]);
	getchar();getchar();
	return 0;
}
