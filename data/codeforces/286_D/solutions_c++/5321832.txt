#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#define N 430000
using namespace std;
struct ppp{
	int x,y,t;
}b[N],a[N];
int p[N],x,y,t,n,m,i,j,tot,ftot,fa[N],co[N],l,ans,K;
bool cmp(const ppp&a,const ppp&b){
	return a.t<b.t;
}
int get(int x){
	return fa[x]==x?x:(fa[x]=get(fa[x]));
}
int main(){
	scanf("%d%d",&n,&m);
	for(i=1;i<=m;++i){
		scanf("%d%d%d",&x,&y,&t);
		p[++tot]=x;
		p[++tot]=y;
		a[i].x=x; a[i].y=y; a[i].t=t;
	}
	sort(p+1,p+tot+1);
	sort(a+1,a+m+1,cmp);
	for(i=1;i<=tot+1;++i)fa[i]=i,co[i]=-1;
	for(i=1;i<=m;++i){
		x=lower_bound(p+1,p+tot+1,a[i].x)-p;
		y=lower_bound(p+1,p+tot+1,a[i].y)-p-1;
		for(j=get(x);j<=y;j=get(j)){
			co[j]=a[i].t;
			fa[j]=j+1;
		}
	}
	for(i=1;i<tot;++i)if(co[i]!=-1){
		b[++ftot].t=co[i]-p[i+1];
		b[ftot].x=1;
		b[++ftot].t=co[i]-p[i];
		b[ftot].x=-1;
		b[ftot].y=-(p[i+1]-p[i]);
	}
	sort(b+1,b+ftot+1,cmp);
	l=1;
	for(i=1;i<=n;++i){
		scanf("%d",&x);
		while(l<=ftot && x>=b[l].t){
			ans+=K*(b[l].t-b[l-1].t);
			K+=b[l].x;
			l++;
		}
		printf("%d\n",ans+K*(x-b[l-1].t));
	}
}