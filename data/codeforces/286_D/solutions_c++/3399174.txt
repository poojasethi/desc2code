#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <functional>
#include <iostream>
#include <iomanip>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

using namespace std;

#define FOR(i,a,b) for(int i=a,_b=b;i<=_b;++i)
#define FORR(i,b,a) for(int i=b,_a=a;i>=_a;--i)
#define REP(i,n) for(int i=0,_n=n;i<_n;++i)
#define FOREACH(a,b)\
    for(typeof(b.begin())a=b.begin(); a!=b.end(); ++a)
#define SZ(x) ((int)x.size())
#define PB push_back
#define MP make_pair
#define st first
#define nd second

typedef double DB;
typedef long long LL;

const int maxn=100010;
const int oo=~0u>>1;

int n,m;
multimap< int,pair<int,int> > E;
multiset<int> T;
int k=0,L[maxn*2],R[maxn*2];
LL sL[maxn*2],sR[maxn*2];

int main()
{
    int l,r,t;
    cin>>n>>m;
    FOR(i,1,m) {
        cin>>l>>r>>t;
        E.insert(MP(l,MP(t,1)));
        E.insert(MP(r,MP(t,-1)));
    }
    int last=-oo;
    FOREACH(e,E) {
        if(last>-oo && last!=e->st && SZ(T)) {
            t=*T.begin();
            L[k]=last-t;  R[k++]=e->st-t;
        }
        last=e->st;
        if(e->nd.nd==1)  T.insert(e->nd.st);
        else  T.erase(T.lower_bound(e->nd.st));
    }
    sort(L,L+k);  sort(R,R+k);
    sL[k]=sR[k]=0;
    FORR(i,k-1,0)  
        sL[i]=sL[i+1]+L[i], sR[i]=sR[i+1]+R[i];
    while(n--) {
        cin>>t;
        l=lower_bound(L,L+k,-t)-L;
        r=lower_bound(R,R+k,-t)-R;
        cout<<sR[r]-sL[l]+(LL)t*(l-r)<<endl;
    }
    return 0;
}
