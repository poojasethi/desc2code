#include <cstdio>
#include <algorithm>
using namespace std;

#define m	5005
#define	n	400005
#define DB	double

bool	V[m];
int		N,M,Q,D,T[n];
DB		Ans,tmp[m],F[m][m];
struct	Nod{int l,r,x;DB p;}A[m];

int		Max(int x,int y){
		int ret=0;
		for	(int l=x+M-1,r=y+M+1;l^r^1;l>>=1,r>>=1){
			if	(l&1^1)	ret=max(ret,T[l^1]);
			if	(r&1)	ret=max(ret,T[r^1]);
		}	return	ret;
}
bool	Cmp(Nod a,Nod b)	{return	a.r-a.l<b.r-b.l;}

int		main(){
		scanf("%d%d",&N,&Q);
		for	(M=1;M<=N+1;M<<=1);
		for	(int i=1;i<=N;i++)	scanf("%d",&T[M+i]);
		for	(int i=M;i;i--)	T[i]=max(T[i<<1],T[i<<1|1]);

		for	(int i=1;i<=Q;i++)
			scanf("%d%d%lf",&A[i].l,&A[i].r,&A[i].p),A[i].x=Max(A[i].l,A[i].r);
		A[++Q]=(Nod){1,N,Max(1,N),0};	sort(A+1,A+Q+1,Cmp);

		for	(int i=1;i<=Q;i++){
			for	(int j=0;j<=Q;j++)	tmp[j]=1;
			for	(int j=1;j<i;j++)
			if	(A[i].l<=A[j].l&&A[j].r<=A[i].r&&!V[j]){
				V[j]=1;
				for	(int k=0;k<=Q;k++)
					if	(A[i].x-A[j].x+k<=Q)	tmp[k]*=F[j][A[i].x-A[j].x+k];
			}	F[i][0]=tmp[0]*(1-A[i].p);
			for	(int j=Q;j;j--)	tmp[j]-=tmp[j-1];
			for	(int j=1;j<=Q;j++)
				F[i][j]=F[i][j-1]+tmp[j]*(1-A[i].p)+tmp[j-1]*A[i].p;
		}	Ans=F[Q][0]*A[Q].x;
		for	(int i=1;i<=Q;i++)	Ans+=(F[Q][i]-F[Q][i-1])*(A[Q].x+i);
		printf("%.8lf\n",Ans);
}
