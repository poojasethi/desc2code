#include <cstdio>
#include <algorithm>
using namespace std;
typedef double db;
const int N=(int)1e5+5,Q=5005;
int n,q,a[N];
db f[Q][Q],g[Q][Q],tmp[Q];
struct data{
	int l,r; db p;
} seq[Q];
int mx[Q];
bool done[Q];
bool cmp(const data &a,const data &b){
	return a.r<b.r||a.r==b.r&&a.l>b.l;
}
int main(){
	scanf("%d%d",&n,&q);
	for(int i=1;i<=n;i++) scanf("%d",&a[i]);
	for(int i=1;i<=q;i++) scanf("%d%d%lf",&seq[i].l,&seq[i].r,&seq[i].p);
	seq[++q]=(data){1,n,0.};
	sort(seq+1,seq+q+1,cmp);
	for(int i=1;i<=q;i++){
		int last=seq[i].l;
		for(int ii=1;ii<i;ii++) if(!done[ii]&&seq[ii].l>=seq[i].l){
			for(;last<seq[ii].l;last++) mx[i]=max(mx[i],a[last]);
			mx[i]=max(mx[i],mx[ii]);
			last=seq[ii].r+1;
		}
		for(;last<=seq[i].r;last++) mx[i]=max(mx[i],a[last]);
		f[i][0]=1;
		for(int j=0;j<=i;j++) g[i][j]=1;
		for(int ii=1;ii<i;ii++) if(!done[ii]&&seq[ii].l>=seq[i].l){
			for(int j=0;j<=i;j++){
				tmp[j]=f[i][j]*g[ii][min(ii,mx[i]+j-mx[ii])];
				if(mx[i]+j-mx[ii]<=ii&&j) tmp[j]+=g[i][j-1]*f[ii][mx[i]+j-mx[ii]];
			}
			for(int j=0;j<=i;j++) f[i][j]=tmp[j];
			g[i][0]=f[i][0];
			for(int j=1;j<=i;j++) g[i][j]=g[i][j-1]+f[i][j];
			done[ii]=true;
		}
		for(int j=0;j<=i;j++) tmp[j]=(j?seq[i].p*f[i][j-1]:0)+(1-seq[i].p)*f[i][j];
		for(int j=0;j<=i;j++) f[i][j]=tmp[j];
		g[i][0]=f[i][0];
		for(int j=1;j<=i;j++) g[i][j]=g[i][j-1]+f[i][j];
	}
	db ans=0;
	for(int j=0;j<=q;j++) ans+=(mx[q]+j)*f[q][j];
	printf("%.9lf\n",ans);
}
