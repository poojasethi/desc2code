#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
#include <map>
#include <vector>
using namespace std;
double sum[5005][10005],dp[10005],ans;
int st[200005][20],LG,head[5005],next[5005],e[5005],o,a[100005],MAX,n,m,i,j;
struct node {int x;int y;double z;} t[5005];
int cmp(node i,node j) {return i.x<j.x || (i.x==j.x && i.y>j.y);}
bool FLAG;
void add(int a,int b,int c)
{
    e[a]=c;
    next[a]=head[b];
    head[b]=a;
}
void dfs(int x)
{
    int now=head[x];
    LG=int(log(t[x].y-t[x].x+1)/log(2)+0.0000000001);
    int X=max(st[t[x].x][LG],st[t[x].y-(1<<LG)+1][LG]);
    while (now!=0)
    {
       dfs(e[now]);
       now=next[now];
    }
    now=head[x];
    for (int i=X; i<=2*m; i++) sum[x][i]=1;
    while (now!=0)
    {
        for (int i=X; i<=2*m; i++) sum[x][i]*=sum[e[now]][i];
        now=next[now];
    }
    for (int i=X; i<=2*m; i++) dp[i]=(sum[x][i]-(i==0?0:sum[x][i-1]))*(1-t[x].z)+(i==0?0:(sum[x][i-1]-(i==1?0:sum[x][i-2]))*t[x].z);
    for (int i=X; i<=2*m; i++) sum[x][i]=dp[i]+(i==0?0:sum[x][i-1]);
}
int main()
{
    scanf("%d%d",&n,&m);
    for (i=1; i<=n; i++) {scanf("%d",&a[i]); MAX=max(MAX,a[i]);}
    MAX-=m;
    for (i=1; i<=n; i++) a[i]=max(0,a[i]-MAX);
    for (i=1; i<=m; i++) scanf("%d%d%lf",&t[i].x,&t[i].y,&t[i].z);
    sort(t+1,t+m+1,cmp);
    LG=int(log(n)/log(2)+0.00000001);
    for (i=1; i<=n; i++) st[i][0]=a[i];
    for (i=1; i<=LG; i++)
      for (j=1; j<=n; j++) st[j][i]=max(st[j][i-1],st[j+(1<<i-1)][i-1]);

    for (i=1; i<=m; i++)
    {
        FLAG=false;
        for (j=i-1; j>=1; j--)
          if (t[j].y>=t[i].y)
          {
              FLAG=true;
              add(++o,j,i);
              break;
          }
        if (!FLAG) add(++o,0,i);
    }
    t[0].x=1; t[0].y=n;
    dfs(0);
    ans=MAX;
    for (i=0; i<=2*m; i++) ans+=(sum[0][i]-(i==0?0:sum[0][i-1]))*i;
    printf("%.10f\n",ans);
    return 0;
}
