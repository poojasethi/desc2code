#include <cstdio>
#include <cmath>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <queue>
#include <vector>
#include <map>

using namespace std;

typedef long long LL;

double dp[5005][10005];
double ans;
struct Node
{
	int l,r;
	double p;
}aa[5005];
int f[20][100005],fmax1,a[100005];
int g[100005];
bool cmp(Node a,Node b)
{
	if (a.l!=b.l) return a.l<b.l;
	if (a.r!=b.r) return a.r>b.r;
	return a.p<b.p;
}
int n,m;
int maxx(int l,int r)
{
	return max(f[g[r-l+1]][l],f[g[r-l+1]][r-(1<<g[r-l+1])+1]);
}
int work(int x)
{
	vector<int> v;
	v.clear();
	int ans;
	for (ans=x+1;ans<=m;)
	{	
		if (aa[ans].l>aa[x].r) 
		{	
			break;
		}
		v.push_back(ans);
		ans=work(ans);
	}
	int dqmax=maxx(aa[x].l,aa[x].r);
	for (int i=0;i<=10000;++i)
	{
		//f[x][i]  x zhe duan max>=maxx+i-5000 de p
		double dq=1;
		for (int j=0;j<v.size();++j)
		{
			int y=v[j];
			double now=0;
			if (i>=1) now+=dp[y][i-1]*aa[y].p;
			now+=dp[y][i]*(1-aa[y].p);
			dq*=(1-now);
		}
		dp[x][i]=1-dq;
		if (dqmax>=fmax1+i-5000)
			dp[x][i]=1;
	}
	return ans;
}
int main()
{
	scanf("%d%d",&n,&m);
	for (int i=1;i<=n;++i) scanf("%d",&a[i]);
	for (int i=1;i<=n;++i) f[0][i]=a[i];
	for (int i=1;i<=n;++i) g[i]=(int)(log(i)/log(2));
	for (int i=1;i<=g[n];++i)
		for (int j=1;j+(1<<i)-1<=n;++j)
			f[i][j]=max(f[i-1][j],f[i-1][j+(1<<(i-1))]);
	for (int i=1;i<=m;++i) scanf("%d%d%lf",&aa[i].l,&aa[i].r,&aa[i].p);
	m++;aa[m].l=1;aa[m].r=n;aa[m].p=0.0;
	sort(aa+1,aa+m+1,cmp);
	fmax1=maxx(1,n);
	work(1);
	ans=maxx(1,n);
	for (int i=5001;i<=10000;++i) ans+=dp[1][i];
	printf("%.10lf\n",ans); 
	return 0;
}