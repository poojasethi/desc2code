#include <vector>
#include <algorithm>
#include <iostream>
#include <string.h>
#include <fstream>
#include <iostream>
#include <string>

using namespace std;

#define inf 1 << 30
int f[503][503], n, ans, N, when[503], b=1;

int path(int node, int flow) {
    if (node==N-1) return flow;
    when[node] = b;
    for (int i=0; i<N; i++)
		if (when[i]<b && f[node][i]) {
			int tmp = path(i, min(flow, f[node][i]));
			if (tmp){
        		f[node][i]-=tmp;
        		f[i][node]+=tmp;
        		return tmp;
			}
		}
    return 0;
}

int main()
{
    
	string s;
	//char s[256];
    cin >> s >> n;
    N=n+28;
    int len = s.length();
    for (int i=0; i<len; ++i)
		++f[n+1+s[i]-'a'][N-1];
    for (int i=0; i<n; i++) 
	{
        cin >> s >> f[0][i+1];
        len = s.length();
        for (int j=0; j<len; j++) f[i+1][n+1+s[j]-'a']++;
    }
    while(true) 
	{
    	if(!path(0, inf)) break;
    	b++;
    }
    for (int i=0; i<n; i++) 
		for (int j=0; j<26; j++) 
			ans+=(i+1)*f[n+1+j][i+1];
    for (int i=n+1; i<=n+26; i++) 
		if (f[i][N-1]) ans=-1;
    cout << ans;
	return 0;
}