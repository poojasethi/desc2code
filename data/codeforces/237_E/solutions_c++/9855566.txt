#include<stdio.h>
#include<iostream>
#include<queue>
#include<stack>
#include<list>
#include<vector>
#include<map>
#include<set>
#include<string.h>
#include<algorithm>
#define QF Q.front()
#define ST S.top()
#define PF printf
#define SF scanf
#define EL PF("\n");
using namespace std;

int i,j,n,FLOW=0,check=1,sum=0;
char t[101],por[128];
char s[101][101];
int cap[128][128];
int flow[128][128];
int visit[128];

void dfs(int p){
    visit[p]=1;
    if(p==127){
        check=1;
        while(p!=0){
            cap[por[p]][p]--;
            cap[p][por[p]]++;
            if(flow[p][por[p]]>0){
                flow[p][por[p]]--;
            }
            else{
                flow[por[p]][p]++;
            }
            p=por[p];
        }
        for(i=0;i<=127;i++){
            visit[i]=0;
        }
        FLOW++;
        return;
    }
    for(int ii=0;ii<=127;ii++){
        if(cap[p][ii]>0 && visit[ii]==0){
            por[ii]=p;
            dfs(ii);
        }
        if(check){
            break;
        }
    }
    return;
}

int main(){
    gets(t);
    for(i=0;t[i]!='\0';i++){
        cap[101+t[i]-'a'][127]++;
    }
    SF("%d",&n);
    for(i=1;i<=n;i++){
        SF("%s",s[i]);
        for(j=0;s[i][j]!='\0';j++){
            cap[i][101+s[i][j]-'a']++;
        }
        SF("%d",&cap[0][i]);
    }

    while(check){
        check=0;
        dfs(0);
    }

    if(FLOW<strlen(t)){
        PF("-1");
    }
    else{
        for(i=1;i<=n;i++){
            sum+=flow[0][i]*i;
        }
        PF("%d",sum);
    }
    return 0;
}
