#include <algorithm>
#include <string.h>
#include <stdio.h>
#define  inf       1 << 30
using    namespace std;

int n,N,ans;
bool mark[128];
int ar[128][128];

int augpath(int node , int flow)
{
  if(node==N-1) return flow;
  mark[node]=true;
  for(int i=0 ; i<N ; i++)
    if(!mark[i] && ar[node][i])
    {
      int tmp=augpath(i,min(flow,ar[node][i]));
      if(!tmp) continue;
      ar[node][i]-=tmp;
      ar[i][node]+=tmp;
      return tmp;
    }
  return 0;
}

int main()
{
  int len;
  char s[105];
  scanf("%s%d",s,&n);
  N=n+28;
  len=strlen(s);
  for(int i=0 ; i<len ; i++)
    ar[s[i]-'a'+n+1][N-1]++;
  for(int i=0 ; i<n ; i++)
  {
    scanf("%s%d",s,&ar[0][i+1]);
    len=strlen(s);
    for(int j=0 ; j<len ; j++)
      ar[i+1][s[j]-'a'+n+1]++;
  }
  while(1)
  {
    int flow=augpath(0,inf);
    if(!flow) break;
    for(int i=0 ; i<N-1 ; i++)
      mark[i]=false;
  }
  for(int i=1 ; i<=n ; i++)
    for(int j=n+1 ; j<=n+26 ; j++)
      ans+=i*ar[j][i];
  for(int i=n+1 ; i<=n+26 ; i++)
    if(ar[i][N-1])
      ans=-1;
  printf("%d\n",ans);
  return 0;
}
