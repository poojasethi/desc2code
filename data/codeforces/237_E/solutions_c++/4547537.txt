#include <iostream>
#include <cstring>
#include <cstdio>
using namespace std;
const int INF=0x3f3f3f3f;
const int N=1010,M=100100;
char str[N];
int S,T,n,a[30];
int head[N],next[M],key[M],len[M],flow[M],cnt;
int dis[N],minr[N],lk[N],vis[N],q[M],maxflow;
void add(int x,int y,int z,int c){
	next[cnt]=head[x],key[cnt]=y,flow[cnt]=z,len[cnt]=c,head[x]=cnt++;
	next[cnt]=head[y],key[cnt]=x,flow[cnt]=0,len[cnt]=-c,head[y]=cnt++;
}
bool spfa(){
	int h=1,t=2;
	memset(dis,0x3f,sizeof dis);
	memset(vis,0,sizeof vis);
	minr[S]=INF;
	dis[S]=0;
	vis[S]=1;
	q[1]=S;
	while(h<t){
		int v=q[h++];
		vis[v]=0;
		for(int i=head[v];~i;i=next[i]){
			int u=key[i];
			if(flow[i]&&dis[u]>dis[v]+len[i]){
				lk[u]=i;
				dis[u]=dis[v]+len[i];
				minr[u]=min(minr[v],flow[i]);
				if(!vis[u]) vis[q[t++]=u]=1;
			}
		}
	}
	return dis[T]!=INF;
}
int update(){
	maxflow+=minr[T];
	for(int i=T;i!=S;i=key[lk[i]^1]){
		flow[lk[i]]-=minr[T];
		flow[lk[i]^1]+=minr[T];
	}
	return minr[T]*dis[T];
}
int main(){
	memset(head,-1,sizeof head);
	scanf("%s",str+1);
	int len=strlen(str+1);
	for(int i=1;str[i];i++)
		a[str[i]-'a'+1]++;
	scanf("%d",&n);
	S=0,T=n+26+1;
	for(int i=1;i<=26;i++)
		add(n+i,T,a[i],0);
	for(int i=1,x;i<=n;i++){
		memset(a,0,sizeof a);
		scanf("%s%d",str+1,&x);
		for(int j=1;str[j];j++)
			a[str[j]-'a'+1]++;
		add(S,i,x,i);
		for(int j=1;j<=26;j++)
			add(i,n+j,a[j],0);
	}
	int ans(0);
	while(spfa()) ans+=update();
	if(len!=maxflow) printf("-1\n");
	else printf("%d",ans);
	return 0;
}