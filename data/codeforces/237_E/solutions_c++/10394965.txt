#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define N 205

const int INF = 1 << 30;

int n, s, t;
int c[N][N], f[N][N];
bool vis[N];
char str[N];

int dfs(int x, int cur) {
    if (x == t)
        return cur;
    vis[x] = true;
    for (int i = 0; i <= t; ++i)
        if (!vis[i] && f[x][i] < c[x][i]) {
            int delta = dfs(i, min(cur, c[x][i] - f[x][i]));
            if (delta) {
                f[x][i] += delta;
                f[i][x] -= delta;
                return delta;
            }
        }
    return 0;
}

int main() {
    scanf("%s", str);
    scanf("%d", &n);
    int maxf = strlen(str);
    s = 0; t = n + 28;
    for (int i = 0; str[i]; ++i)
        ++c[ str[i] - 'a' + n + 1 ][t];
    for (int i = 0; i < n; ++i) {
        scanf("%s %d", str, &c[s][i + 1]);
        for (int j = 0; str[j]; ++j)
            ++c[i + 1][ str[j] - 'a' + n + 1 ];
    }
    int flow = 0;
    while (true) {
        fill(vis, vis + N, false);
        int delta = dfs(s, INF);
        if (!delta)
            break;
        flow += delta;
    }
    int ans = -1;
    if (flow == maxf) {
        ans = 0;
        for (int i = 0; i < n; ++i)
            for (int j = 0; j < 26; ++j)
                ans += (i + 1) * f[i + 1][j + n + 1];
    }
    printf("%d\n", ans);
    return 0;
}

			   		 	 		 	 	  		 	 		  			