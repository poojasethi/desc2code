//
// ^|feennohmo_taI_g__d
//
#include <iostream>
#include <cstdlib>
#include <algorithm>
#include <queue>
#include <deque>
#include <set>
#include <vector>
#include <map>
#include <string>
#include <cstring>
#include <iomanip>
#include <cstdio>
#include <fstream>
#include <sstream>

#define For(i,a,n) for(int i =a ; i < n ; ++i )
#define all(x) (x).begin(),(x).end()
#define n(x) (int)(x).size()
#define pb(x) push_back(x)

using namespace std;
typedef pair<int,int> pii;
const int maxn = 110*110;
int n;
string t;
vector <int> adj[maxn];
string s[maxn];
int a[maxn];
int mate[maxn];
int cost[maxn];
bool mark[maxn];
int ans = 0;
int ansp;
int sum1 , sum2;

bool dfs(int v)
{
	if(v==-1)
		return true;
	For(i,0,n(adj[v]))
		if(!mark[adj[v][i]]++ && dfs(mate[adj[v][i]]))
		{
			mate[adj[v][i]]=v;
			return true;
		}
	return false;
}

int main()
{
	ios::sync_with_stdio(false);
	cin >> t;
	sum2 = n(t);
	cin >> n;
	int baseval=0;
	For(i,0,n)
	{
		cin >> s[i] >> a[i];
		int nu=max(n(s[i])-a[i],0);
		baseval+=nu*i+nu;
		For(j,sum1,sum1+n(s[i]))
		{
			cost[j]=i+1;
			For(k,sum2,sum2+nu)
				adj[j].pb(k);
			For(k,0,n(t))
				if(s[i][j-sum1]==t[k])
					adj[j].pb(k);
		}
		sum1+=n(s[i]);
		sum2+=nu;
	}
	fill(mate,mate+sum2,-1);
	For(i,0,sum1)
	{
		if(dfs(i))
		{
			fill(mark,mark+sum2,false);
			ans+=cost[i];
			ansp++;
		}
	}
	if(ansp != sum2)
		cout << -1 << endl;
	else
		cout << ans-baseval << endl;
	return 0;
}
