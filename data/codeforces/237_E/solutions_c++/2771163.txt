#include <algorithm>
#include <string.h>
#include <stdio.h>
#define  maxn      150
#define  inf       1 << 30
using    namespace std;

int N,n,ans;
bool mark[maxn];
int ar[maxn][maxn];

int dfs(int node , int cost)
{
  if(node==N) return cost;
  mark[node]=true;
  for(int i=0 ; i<=N ; i++)
    if(ar[node][i] && !mark[i])
    {
      int t=min(cost,ar[node][i]);
      int x=dfs(i,t);
      if(x==-1) continue;
      ar[node][i]-=x;
      ar[i][node]+=x;
      return x;
    }
  return -1;
}

int main()
{
  char s[maxn];
  scanf("%s%d",s,&n);
  N=n+26+1;
  int len=strlen(s);
  for(int i=0 ; i<len ; i++)
    ar[s[i]-'a'+n+1][N]++;
  for(int i=1 ; i<=n ; i++)
  {
    scanf("%s%d",s,&ar[0][i]);
    len=strlen(s);
    for(int j=0 ; j<len ; j++)
      ar[i][s[j]-'a'+n+1]++;
  }
  while(1)
  {
    if(dfs(0,inf)==-1) break;
    for(int i=0 ; i<=N ; i++)
      mark[i]=false;
  }
  for(int i=1 ; i<=n ; i++)
    for(int j=n+1 ; j<=n+26 ; j++)
      ans+=i*ar[j][i];
  for(int i=n+1 ; i<=n+26 ; i++)
    if(ar[i][N]) ans=-1;
  printf("%d\n",ans);
  return 0;
}
