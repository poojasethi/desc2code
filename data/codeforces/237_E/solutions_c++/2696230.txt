#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <cstring>

using namespace std;

const int MAXN = 200;
int flow,cost,s,t,n;
string str[100 + 10];
int cap[MAXN][MAXN], w[MAXN][MAXN], par[MAXN], dis[MAXN];

void bellman(){
  for(int i=0;i<=t;i++)
    dis[i] = 1000 * 1000 * 1000;
  for(int i=0;i<=t;i++)
    par[i] = -1;

  dis[0] = 0;
  for(int i=0;i<=t;i++)
    for(int u=0;u<=t;u++)
      for(int v=0;v<=t;v++){
	if(cap[u][v]>0 and dis[v]>dis[u] + w[u][v]){
	  dis[v] = dis[u] + w[u][v];
	  par[v] = u;
	} 
      }
  //cout<<"::"<<dis[t]<<' '<<par[t]<<endl;
}

void ff(){
  while(flow < str[0].size()){
    bellman();
    if(par[t]==-1)
      return;

    int d = 1000 * 1000 * 1000;
    int v = t;
    while(v!=0){
      //  cout<<par[v]<<':'<<v<<' '<<cap[par[v]][v]<<endl;
      d = min(d,cap[par[v]][v]);
      v = par[v];
    }
    v = t;
    while(v!=0){
      cap[par[v]][v]-=d;
      cap[v][par[v]]+=d;
      cost+= d*w[par[v]][v]; 
      v = par[v];
    }
    
    flow += d;
    //cout<<"!!!"<<flow<<' '<<cost<<endl;

  }
}

int main(){
  ios_base::sync_with_stdio(false);

  cin>>str[0];
  cin>>n;
  t = 26 + n + 1;
  for(int i=1;i<=n;i++)
    cin>>str[i]>>cap[26 + i][t];

  for(char c='a';c<='z';c++)
    for(int i=1;i<=n;i++){
      int cnt = 0;
      for(int j=0;j<str[i].size();j++)
	cnt += (str[i][j] == c);
      cap[(c-'a')+1][26+i] = cnt;
      w[(c-'a')+1][26+i] = i;
      w[26+i][(c-'a')+1] = -i;
    }
  for(char c='a';c<='z';c++){
    int cnt = 0;
    for(int j=0;j<str[0].size();j++)
      cnt += (str[0][j]==c);
    cap[0][c-'a'+1] = cnt;
  }
  ff();
  if(flow<str[0].size())
    cout<<-1<<endl;
  else
    cout<<cost<<endl;
  return 0;
}
