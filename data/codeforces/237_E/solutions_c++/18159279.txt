#include <iostream>
#include <cstdio>
#include <algorithm>
#include <set>
#include <vector>
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <queue>

using namespace std;

#define next roman_kaban

int k;
int a[300][300];


int go()
{
    list<int>sp;
    vector<int> visited(k,-1);
    visited[0] = 0;
    sp.push_back(0);
    while(sp.begin()!=sp.end())
    {
        int u = sp.front();
        sp.pop_front();
        for(int v=0;v<k;v++)
        if(a[u][v] && visited[v]==-1)
        {
            visited[v] = u;
            sp.push_back(v);
        }
    }
    for(int u=0;u<k;u++)
    if(a[u][k-1]!=0 && visited[u]!=-1)
    {
        int curr = u;
        a[u][k-1]--;
        while(curr!=0)
        {
            a[visited[curr]][curr]--;
            a[curr][visited[curr]]++;
            curr = visited[curr];
        }
        return u;
    }
    return 0;
}

int main()
{
    string t;
    cin >>t;
    int n,m = 26;
    for(int i=0;i<t.size();i++)
        a[0][t[i]-'a' + 1]++;
    cin >>n;
    for(int i=0;i<n;i++)
    {

        string s;
        cin >>s;

        for(int k=0;k<s.size();k++)
            a[s[k]-'a' + 1][m+i+1]++;

        cin >>a[m+i+1][m+n+1];
    }
    k = m + n + 2;
    int res =0;
    m = t.size();
    while(true)
    {
        int r = go();
        if(r==0) break;
        r-=26;;
        m--;
        res+=r;
    }
    if(m) {cout <<-1<<endl; return 0;}
    cout <<res<<endl;
    return 0;
}
/*
30000000003312
0

6
-1 2 -3 4 -1 1
1 5 2 3 2

5
1 2 -5 2 1
1 1 1 2
*/


