#include<bits/stdc++.h>
#define allset(x) __builtin_popcount(x)a
#define trail0(x) __builtin_ctz(x)
#define sn(x) scanf("%d",&x) ;
#define ff first
#define ss second
#define p_b push_back
#define ll long long
#define m_p make_pair
#define p_q priority_queue
#define pii pair<int,int>
#define pli pair<ll,ll>1
#define vi  vector<int>
#define vl vector<ll>
#define mod 1000000007
#define f(i,a,b) for(int i = a;i<b;i++)
#define INF 100000000
int dr4[] = {1,0,-1,0} , dc4[]= {0,-1,0,1} ;
int dr8[] = {1,1,0,-1,-1,-1,0,1} , dc8[] = {0,-1,-1,-1,0,1,1,1} ;

using namespace std ;

int ssz,N,n , res[150][150] ,s,t,ans ;
char ss[110] ;
bool vis[150], flag ;

int flow(int cur ,int minedge)
{
    if(cur==t) return minedge ;
    vis[cur] = 1 ;
    for(int i = 0;i<=N;i++)
    {
        if(!(vis[i]) && res[cur][i])
        {
           int f = flow(i,min(minedge,res[cur][i])) ;
           if(f){res[cur][i] -= f ; res[i][cur] += f ; return f ;
           }
        }
    }
    return 0 ;
}

int main()
{
   int sz  =  0 ;
   scanf("%s%d",ss,&n) ;  N = n + 27 ; s = 0 , t = N ,sz = ssz = strlen(ss) ;;
   f(i,0,ssz) res[ss[i]-'a' + 1 + n][N]++ ;
   f(i,1,n+1)
   {
       scanf("%s%d",ss,&res[0][i]) ;
       ssz = strlen(ss) ; f(j,0,ssz) res[i][ss[j]-'a'+1+n]++ ;
   }
  while(1)
  {
      fill(vis,vis+N+1,0) ;
      if(!flow(0,INF)) break ;
  }
  for(int i = 1;i<=n;i++)
  {
      for(int j = n+1;j<N;j++)
      {
          if(res[j][N]) flag = true ;
          ans += res[j][i]*i ;
      }
  }
  if(!flag) cout<<ans<<endl ;
  else cout<<"-1" ;
}
