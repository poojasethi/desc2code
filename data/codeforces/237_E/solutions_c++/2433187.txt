#include <iostream>
#include <cstdio>
#include <vector>
#include <cmath>
#include <string>
#include <map>
#include <set>
#include <algorithm>
#include <queue>
#include <stack>
#include <ctime>

#define pb push_back
#define mp make_pair
#define sz size()
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define vint vector<int>
#define rep(i,n) for (int i=0; i<n; i++)
#define ll long long

using namespace std;

const int INF=~(1<<31);
const double EPS=1;
const double PI=3.141592653589793;

int N;
vector<vector<int> >g;
vector<int>pr;

bool bfs(int s, int t) {
	pr.assign(N,-1);
	vector<bool>u(N,0);
	queue<int>q;
	q.push(s);
	u[s]=1;
	while(!q.empty()) {
		int v=q.front();
		q.pop();
		rep(i,N) {
			if (g[v][i] && !u[i]) {
				u[i]=1;
				q.push(i);
				pr[i]=v;
			}
		}
	}
	return u[t];
}

void push(int s, int t) {
	while(s!=t) {
		g[pr[t]][t]--;
		g[t][pr[t]]++;
		t=pr[t];
	}
}

int main() {
#ifdef HOME
freopen("input.txt","r",stdin);
//freopen("output.txt","w",stdout);
#endif
	string s;
	int n,a,ans;
	cin>>s>>n;
	ans=s.sz;
	N=n+26*n+26+2;
	vector<pair<int,int> >c(n);
	g.assign(N,vector<int>(N,0));
	rep(i,s.sz) {
		g[n+26*n+s[i]-'a'+1][N-1]++;
	}
	rep(i,n) {
		c[i].first=i+1;
		c[i].second=i+1;
		cin>>s>>a;
		rep(j,s.sz) {
			g[i+1][n+1+i*26+s[j]-'a']++;
		}
		g[0][i+1]=a;
	}
	rep(i,26) {
		rep(j,n) {
			g[n+1+j*26+i][n+26*n+i+1]=INF;
		}
	}
	int flow=0,cost=0;
	rep(i,n) {
		while(g[0][c[i].second] && bfs(c[i].second,N-1)) {
			flow++;
			cost+=c[i].first;
			g[0][c[i].second]--;
			push(c[i].second,N-1);
		}
	}
	if (flow==ans) {
		cout<<cost<<endl;
	} else {
		cout<<-1<<endl;
	}
	return 0;
}