import sys
edge = [[] for i in xrange(200)]
vs = []
pv = [0] * 200
pe = [0] * 200
def add_edge(w):
    edge[w[0]].append([w[1], w[2], w[3], len(edge[w[1]])])
    edge[w[1]].append([w[0], 0, -w[3], len(edge[w[0]]) - 1])
def flow(so, si, f):
    res = 0
    INF = 10 ** 7
    while f > 0:
        d = [INF] * 200
        d[so] = 0
        upd = True
        while upd:
            upd = False
            for s in vs:
                if d[s] == INF: continue
                for i, v in enumerate(edge[s]):
                    if v[1] > 0 and d[v[0]] > d[s] + v[2]:
                        d[v[0]] = d[s] + v[2]
                        pv[v[0]] = s
                        pe[v[0]] = i
                        upd = True
        if d[si] == INF:
            return -1
        g = f
        v = si
        while v != so:
            g = min(g, edge[pv[v]][pe[v]][1])
            v = pv[v]
        f -= g
        res += g * d[si]
        v = si
        while v != so:
            edge[pv[v]][pe[v]][1] -= g
            edge[v][edge[pv[v]][pe[v]][3]][1] += g
            v = pv[v]
    return res
def ln(s):
    d = dict()
    for c in s:
        d[c] = d.get(c, 0) + 1
    return d
def main():
    RL = sys.stdin.readline
    s = RL().strip()
    n = int(RL())
    tot = 0
    V = set([n, n+1])
    for c, x in ln(s).items():
        add_edge((ord(c)+60, n+1, x, 0))
        V.add(ord(c)+60)
        tot += x
    for i in xrange(n):
        l = RL().split()
        cap = int(l[1])
        add_edge((n, i, cap, 0))
        V.add(i)
        for c, x in ln(l[0]).items():
            V.add(ord(c)+60)
            add_edge((i, ord(c)+60, x, i+1))
    vs.extend(V)
    print flow(n, n+1, tot)
main()
