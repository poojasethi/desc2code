#include <iostream>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <vector>

#define N 30
using namespace std;
vector <int> vec[N];
int vis[N];
int deg[N];
int map[N][N];
bool cmp(int x,int y){
    if (deg[x]==deg[y]) return x<y;
    return deg[x]<deg[y];
}
void dfs(int cur){
    vis[cur]=1;
    int vsize=vec[cur].size();
    for (int i=0;i<vsize;i++){
        int u=vec[cur][i];
        if (!vis[u]) {dfs(u);return;}
    }
}
int main(){
    int n,m;
    while (scanf("%d%d",&n,&m)==2){
        for (int i=1;i<=n;i++) vec[i].clear();
        memset(deg,0,sizeof(deg));
        memset(map,0,sizeof(map));
        for (int i=1;i<=m;i++){
            int ta,tb;
            scanf("%d%d",&ta,&tb);
            if (ta==tb) continue;
            if (map[ta][tb])continue;
            deg[ta]++;deg[tb]++;
            vec[ta].push_back(tb);
            vec[tb].push_back(ta);
            map[ta][tb]=1;
            map[tb][ta]=1;
        }
        for (int i=1;i<=n;i++)
            sort(vec[i].begin(),vec[i].end(),cmp);
        int flag=0;
        for (int i=1;i<=n;i++){
            memset(vis,0,sizeof(vis));
            dfs(i);
            int tp=0;
            for (int j=1;j<=n;j++)
                if (vis[j]) tp++;
            if (tp==n) {flag=1;break;}
        }
        if (flag) printf("Yes\n");
        else printf("No\n");
    }
    return 0;
}
