#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;
typedef long long LL;
const int op=1000000007,N=1000100;
int n,m;
int e[N],g[N];
LL x0,x1,y0,y1,ans=0;
void gcd(const int a,const int b)
{
	if ( b==0 ) 
	{
		x0=1,y0=0;
		return;
	}
	gcd(b,a%b);
	x1=y0,y1=x0-a/b*y0;
	x0=x1,y0=y1;
}
int A(const int x,const int y)
{
	if ( x<y )return 0;
	return (LL)e[x]*g[x-y]%op;
}
int _pow(const int x,const int y)
{
	int p=1,q=x;
	for(int i=y;i>0;i>>=1) 
	{
		if ( i&1 ) p=(LL)p*q%op;
		q=(LL)q*q%op;
	}
	return p;
}
int Gans(const int x)
{
	if ( x>=m+m )
	{
		int p=x-m-m;
		return ((LL)A(n-p-1,m-1)*m%op+(LL)A(n-p-2,m-2)*(m-1)%op*(n-p-m)%op)%op*A(n,x-m)%op;
	}
	return ((LL)A(n-1,x-m)*A(n-1,x-m-1)%op*(x-m)*2%op+_pow((LL)A(n-1,x-m-1)*(x-m)%op,2))*_pow(n,m+m-x)%op;	
}
int main()
{
	scanf("%d%d",&n,&m);
	e[0]=g[0]=1;
	for(int i=1;i<=n;++i)
	{
		e[i]=(LL)e[i-1]*i%op;
		gcd(e[i],op);
		g[i]=x0%op;
		while ( g[i]<0 ) g[i]+=op;
	}
	for(int i=1;i<=n;++i) 
	{
		ans+=Gans(i+m);	
		while ( ans>=op ) ans-=op;
	}
	cout<<ans<<endl;
	return 0;
}