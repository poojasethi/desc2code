#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int mo = 1000000007;
const int maxn = 1000010;

typedef long long i64;

i64 k,w;
i64 ans;
i64 fac[maxn],rev[maxn],rmu[maxn],rfa[maxn];

void ADD(i64 &a,i64 b){if ((a += b) >= mo) a %= mo;}

i64 mul(i64 a,i64 b)
{
    i64 c = 1;
    while (b){if (b & 1) c = c*a%mo; b >>= 1; a = a*a%mo;}
    return c;
}

int main()
{
    i64 i,t;

    scanf("%I64d %I64d",&k,&w);
    for (fac[0] = 1,i = 1; i <= k; ++i) fac[i] = fac[i-1]*i%mo;
    for (rev[1] = 1,i = 2; i <= k; ++i) rev[i] = (-mo/i*rev[mo%i]%mo+mo)%mo;
    for (rfa[0] = 1,i = 1; i <= k; ++i) rfa[i] = rfa[i-1]*rev[i]%mo;
    for (rmu[0] = mul(k,w),i = 1; i <= k+1; ++i) rmu[i] = rmu[i-1]*rev[k]%mo;
    for (t = 1; t <= k; ++t)
    {
        if (t   <= w-1) ADD(ans,t*fac[k]%mo*fac[k]%mo*rmu[t+1]%mo*(rfa[k-t]*rfa[k-t]%mo)%mo);
        if (t   >  w-1) ADD(ans,fac[k]*w%mo*fac[k-t+w-1]%mo*(rfa[k-t]*rfa[k-t]%mo)%mo);
    }
    for (t = 1; t <= k-1; ++t)
    {
        if (t+1 <= w-1) ADD(ans,t*fac[k]%mo*fac[k]%mo*rmu[t+2]%mo*(rfa[k-t]*rfa[k-t-1]%mo)%mo);
        if (t+1 >  w-1) ADD(ans,fac[k]*(w-1)%mo*fac[k-t+w-2]%mo*(rfa[k-t]*rfa[k-t-1]%mo)%mo);
    }

    printf("%I64d",ans);

    return 0;
}
