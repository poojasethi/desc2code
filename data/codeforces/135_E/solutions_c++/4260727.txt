#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
#define maxn 1000010
#define mod 1000000007
using namespace std;
typedef long long LL;
LL fact[maxn]={1},k,w;
LL power(LL p,LL n)
{
	LL ans=1;
	for(;n;n>>=1,p=p*p%mod)
		if(n&1)
			ans=ans*p%mod;
	return ans;
}
LL anti(LL p)
{
	return power(p,mod-2);
}
LL A(LL n,LL m)
{
	return fact[n]*anti(fact[n-m])%mod;
}
LL sqr(LL p)
{
	return p*p%mod;
}
LL work()
{
	for(int i=1;i<=k;++i)
		fact[i]=fact[i-1]*i%mod;
	LL ans=0,temp;
	for(LL L=1;L<=k;++L)
	{
		if(w-L>=2)
			ans=(ans+(sqr(A(k,L)*k%mod)-sqr(A(k,L+1))+mod)*power(k,w-L-2)%mod)%mod;
		if(w-L==1)
			ans=(ans+sqr(A(k,L))*k%mod-A(k,L+1)*A(k-1,L)%mod+mod)%mod;
		if(w<=L)
			ans=(ans+A(k,L-w)*sqr(A(k-L+w,w))%mod-A(k,L-w+2)*sqr(A(k-L+w-2,w-1))%mod+mod)%mod;
	}
	return ans;
}
int main()
{
	cin>>k>>w;
	cout<<work()<<endl;
	return 0;
}
		 			   			 	 		 		 	 			