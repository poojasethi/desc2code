#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int MaxN = 1000005;
typedef long long LL;
const LL mod = 1000000007;
LL h[MaxN],r[MaxN];
int K,n;

LL Pow(LL x, LL ct)
{
    LL ret = 1;
    while(ct)
    {
        if(ct&1)ret = ret*x%mod;
        ct/=2;
        x = x*x%mod;
    }
    return ret;
}

LL A(int n, int m)
{
    return h[n]*r[n-m]%mod;
}
LL sol(int L, int d)
{
    if(L >= d*2)
        return A(K,d)*A(K,d)%mod*Pow(K,L-d*2)%mod;
    else
        return A(K,d)*A(K-(2*d-L),L-d)%mod;
}

int main()
{
    h[0] = r[0] = 1;
    for(int i = 1; i < MaxN; i++)
    {
        h[i] = h[i-1]*i%mod;
        r[i] = Pow(h[i],mod-2);
    }
    scanf("%d%d",&K,&n);
    LL ret = 0;
    for(int i = 1; i <= K; i++)
    {
        ret = (ret + sol(i+n,i))%mod;
        if(i+1 <= K)ret = (ret - sol(i+n,i+1)+mod)%mod;
    }
    printf("%I64d\n",ret);

    return 0;
}
