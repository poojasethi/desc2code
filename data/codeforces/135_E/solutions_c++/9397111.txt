
#include<cstdio>
#define up (res+=tmp)%=P
using namespace std;
const int P=1000000007;
int pow[5000005],inv[5000005],fac[5000005],i,k,w;
inline int Pow(int a,int b)
{
  int res=1;
  for (;b;b>>=1,a=a*1ll*a%P) if (b&1ll) res=res*1ll*a%P;
  return res;
}
inline int work(int w)
{
  int res=0,get=0,len=w+k;
  for (;len>=2*w;len--)
  {
    int tmp=fac[k]*1ll*inv[k-(len-w)]%P,T=len-2*w;
    tmp=tmp*1ll*fac[k-T]%P;tmp=tmp*1ll*inv[k-T-w]%P;up;continue;
  }
  for (;len>=w;len--)
  {
    int tmp=fac[k]*1ll*inv[k-(len-w)]%P;
    tmp=tmp*1ll*tmp%P;
    if (!get) get=Pow(k,2*w-len);else get=get*1ll*k%P;
    tmp=tmp*1ll*get%P;up;continue;
  }
  int tmp=(Pow(k,w)-k+P)%P;
  tmp=tmp*1ll*Pow(k-1,P-2)%P;up;
  return res;
}

int main()
{
  scanf("%d%d",&k,&w);if (k==1) return puts("1"),0;
  for (pow[0]=1,i=1;i<=k;i++) pow[i]=(pow[i-1]*1ll*k)%P;
  for (fac[0]=1,i=1;i<=k;i++) fac[i]=fac[i-1]*1ll*i%P;
  inv[k]=Pow(fac[k],P-2);inv[0]=1;
  for (i=k-1;i;i--) inv[i]=inv[i+1]*1ll*(i+1)%P;
  int tmp1=work(w),tmp2=work(w-1);
  printf("%d\n",(tmp1-tmp2+P)%P);
}