//135E
#include <iostream>
#include <cstdio>
using namespace std;
const int MAXK=1000000;
const long long MODER=1000000007;
int k,w;
long long expMod(long long x,int y){
	long long res=1;
	while(y){
		if(y&1)
			res=res*x%MODER;
		x=x*x%MODER;
		y>>=1;
	}
	return res;
}
long long fac[MAXK+10],invFac[MAXK+10];
void preCalc(){
	fac[0]=1;
	for(long long i=1;i<=k;i++){
		fac[i]=fac[i-1]*i%MODER;
		//printf("fac[%I64d]=%I64d\n",i,fac[i]);
	}
	for(int i=0;i<=k;i++){
		invFac[i]=expMod(fac[i],MODER-2);
		//printf("invFac[%d]=%I64d\n",i,invFac[i]);
	}
}
int main(){
	scanf("%d%d",&k,&w);
	preCalc();
	long long ans=0;
	for(long long t=1;t<=k;t++){
		if(t<=w-1){
			ans+=t*fac[k]%MODER*fac[k]%MODER*expMod(k,w-t-1)%MODER*invFac[k-t]%MODER*invFac[k-t]%MODER;
			ans%=MODER;
		}else{
			ans+=fac[k]*w%MODER*fac[k-t+w-1]%MODER*invFac[k-t]%MODER*invFac[k-t]%MODER;
			ans%=MODER;
		}
	}
	for(long long t=1;t<k;t++){
		if(t+1<=w-1){
			ans+=t*fac[k]%MODER*fac[k]%MODER*expMod(k,w-t-2)%MODER*invFac[k-t]%MODER*invFac[k-t-1]%MODER;
			ans%=MODER;
		}else{
			ans+=fac[k]*(w-1)%MODER*fac[k-t+w-2]%MODER*invFac[k-t]%MODER*invFac[k-t-1]%MODER;
			ans%=MODER;
		}
	}
	cout<<ans<<endl;
	return 0;
}
