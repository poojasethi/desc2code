#include <cstdio>
const int K=(int)1e6+5,mo=(int)1e9+7;
typedef long long ll;
int k,w;

ll fac[K],ifac[K];

void init(){
	ifac[1]=1;
	for(int i=2;i<=k;i++){
		ifac[i]=(mo-mo/i)*ifac[mo%i]%mo;
	}
	fac[0]=1;
	ifac[0]=1;
	for(int i=1;i<=k;i++){
		fac[i]=fac[i-1]*i%mo;
		ifac[i]=ifac[i-1]*ifac[i]%mo;
	}
}

ll P(int n,int m){
	return m>=0&&m<=n?fac[n]*ifac[n-m]%mo:0;
}
ll power(ll a,ll b){
	ll ans=1;
	for(;b;b>>=1,a=a*a%mo)
		if(b&1) ans=ans*a%mo;
	return ans;
}
ll work(int w){
	ll ans=k==1?w:(power(k,w)+mo-1)*power(k-1,mo-2)%mo;
	for(int l=0;l<=k;l++){
		ll now=0;
		if(l<=w){
			now=P(k,l)*P(k,l)%mo*power(k,w-l)%mo;
		}
		else{
			now=P(k,l)*P(k-(l-w),w)%mo;
		}
		(ans+=now)%=mo;
	}
	return ans;
}

int main(){
	scanf("%d%d",&k,&w);
	init();
	printf("%I64d\n",(work(w)-work(w-1)+mo)%mo);
}
