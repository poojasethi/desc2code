#include<bits/stdc++.h>
using namespace std;

int k,n,m,ans,pw1,pw2,inv_k,mod=1000000007;
int fac[2000010],inv[2000010];
#define ll long long

int fpow(int i,int j)
{int ret=1;
 while(j)
 {	if(j&1) ret=(ll)ret*i%mod;
 	i=(ll)i*i%mod;
 	j>>=1;
 }
 return ret;
}

int calc(int i,int j)
{if(i<j) return 0;
 return (ll)fac[i]*inv[i-j]%mod; 	
} 	
 
int sqr(int x)
{return (ll)x*x%mod;
}
 	
int main()
{int i,j;
 
 scanf("%d%d",&k,&n);
 
 fac[0]=1;
 for(i=1;i<=k;i++) fac[i]=(ll)fac[i-1]*i%mod;
 inv[k]=fpow(fac[k],mod-2);
 for(i=k-1;i>=0;i--) inv[i]=(ll)inv[i+1]*(i+1)%mod;	
 pw1=fpow(k,n);
 pw2=fpow(k,n-2);
 inv_k=fpow(k,mod-2);
 for(i=1;i<=k;i++)
 {	pw2=(ll)pw2*inv_k%mod;
 	m=i;
	if(n>m)
 		ans=(ans+(ll)pw2*((ll)k*k%mod*calc(k,m)%mod*calc(k,m)%mod-sqr(calc(k,m+1))%mod)%mod)%mod;
 	else if(n-m==1)
		ans=(ans+(ll)k*((ll)calc(k,m)*calc(k,m)%mod-sqr(calc(k-1,m))))%mod;
	else
		ans=(ans+(ll)calc(k,m-n)*(sqr(calc(k-m+n,n))-(ll)(k-m+n)*(k-m+n-1)%mod*sqr(calc(k-m+n-2,n-1))%mod)%mod)%mod;
 }
 printf("%d\n",(ans+mod)%mod);
 return 0;
}