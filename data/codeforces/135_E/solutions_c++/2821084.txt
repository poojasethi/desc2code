/*
Author: LJQ
PROG: Codeforces Beta #97 Div1 E. Weak Subsequence
DATE: 2012.12.24
*/
#include <cstdio>

using namespace std;

typedef long long LL;

const int maxk = 1000005;
const int MOD = 1000000007;

LL fac[maxk], inv[maxk], Inv[maxk];
LL W, K, ret;

void init()
{
	scanf("%I64d%I64d", &K, &W);
}

LL Pow(LL x, LL y){
	if (!y) return 1;
	LL ret = Pow(x, y >> 1);
	ret = ret * ret % MOD;
	if (y & 1) ret = ret * x % MOD;
	return ret;
}

LL check(LL x, LL y){
	return fac[x] * inv[x - y] % MOD;
}

void work()
{
	Inv[1] = 1;
	for (int i = 2; i <= K; i ++)
		Inv[i] = Inv[MOD % i] * (MOD - MOD / i) % MOD;
	fac[0] = inv[0] = 1;
	for (int i = 1; i <= K; i ++){
		fac[i] = fac[i-1] * i % MOD;
		inv[i] = inv[i-1] * Inv[i] % MOD;
	}
	ret = 0; LL tmp = Pow(K, W-2);
	for (int i = 1; i <= K; i ++){
		if (i < W)
			ret = (ret + check(K, i) * check(K, i) % MOD * i % MOD * tmp % MOD) % MOD;
		else
			ret = (ret + check(K, i) * check(K-i+W-1, W-1) % MOD * W % MOD) % MOD;
		tmp = tmp * Inv[K] % MOD;
		if (i < K)
			if (i+1 < W)
				ret = (ret + check(K, i) * check(K, i+1) % MOD * i % MOD * tmp % MOD) % MOD;
			else
				ret = (ret + check(K, i) * check(K-i+W-2, W-1) % MOD * (W-1) % MOD) % MOD;
	}
}

void print()
{
	printf("%I64d\n", ret);
}

int main()
{
	init();
	work();
	print();
	return 0;
}
