#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long LL;
const int maxn = 1000005;
const int mod = 1000000007;
int inv[maxn];
int k, w;

int pow(int a, int n) {
    int ans = 1;
    for (; n; n >>= 1, a = (LL)a * a % mod)
        if (n & 1) ans = (LL)ans * a % mod;
    return ans;
}

int calc(int k, int w) {
    int ans = LL(pow(k, w + 1) - 1) * inv[k - 1] % mod;
    int per = 1, pinv = 1, tmp = pow(k, w);
    for (int i = 1; i <= k; ++i)
        if (i <= w) {
            tmp = (LL)tmp * inv[k] % mod; per = (LL)per * (k - i + 1) % mod;
            ans = (ans + (LL)per * per % mod * tmp % mod) % mod;
        } else {
            per = (LL)per * (k - i + 1) % mod;
            pinv = (LL)pinv * inv[k - (i - w) + 1] % mod;
            ans = (ans + (LL)per * per % mod * pinv % mod) % mod;
        }
    return ans;
}

int main() {
    int i, ans;
    scanf("%d%d", &k, &w);
    if (k == 1) { puts("1"); return 0; }
    for (i = 2, inv[1] = 1; i <= k; ++i)
        inv[i] = LL(mod / i) * (mod - inv[mod % i]) % mod;
    ans = (calc(k, w) - calc(k, w - 1)) % mod;
    printf("%d\n", (ans + mod) % mod);
    return 0;
}
