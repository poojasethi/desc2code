#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = (int)2e5 + 10;
int who[maxn],order[maxn];
int cnt[maxn];
set<int> st[maxn];
char type[11];
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	memset(who,-1,sizeof(who));
	int h,m,n;
	cin>>h>>m>>n;
	int num = 0;
	for(int i = 0; i < h; i++)
	{
		if (who[i] != -1) continue;
		int cur = i,ord = 0;
		while(who[cur] == -1)
		{
			st[num].insert(ord);
			cnt[num]++;
			order[cur] = ord++;
			who[cur] = num;
			cur = cur + m;
			if (cur >= h) cur -= h;
		}
		num++;
	}
	int id,pos;
	map<int, pii> D;
	LL ans = 0;
	for(int i = 0; i < n; i++)
	{
		scanf("%s%d",&type,&id);
		if (type[0] == '+')
		{
			scanf("%d",&pos);
			int what = who[pos];
			set<int>::iterator it = st[what].lower_bound(order[pos]);
			if (it == st[what].end()) it = st[what].begin();
			ans += (*it - order[pos] + cnt[what]) % cnt[what];
			D[id] = mp(what,*it);
			st[what].erase(it);
		} else
		{
			int what = D[id].first;
			int val = D[id].second;
			st[what].insert(val);
		}
	}
	cout<<ans<<endl;
	return 0;
}
