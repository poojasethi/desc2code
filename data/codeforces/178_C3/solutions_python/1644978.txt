#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <string>
#include <cstdlib>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <ctime>
#include <cassert>
#include <list>
#include <bitset>
using namespace std;
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define forit(v,it) for(typeof(v.begin()) it = v.begin(); it != v.end(); ++it)
typedef long long ll;
typedef pair <int, int> pii;
typedef vector <int> vi;

int n,m,h,id,hash,v,comp[200005],num[200005];
ll ans;
char ch;
bool u[200005];
map <int,pii> Mp;
set <int> s[200005];

int main () {
	#ifdef LOCAL
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	scanf("%d%d%d",&h,&m,&n);
	for(int i=0;i<h;++i) if(!u[i]) {
		++v;
		int cnt = 0;
		for(int j=i;;j += m) {
			if(j >= h) j -= h;
			if(u[j]) break;
			u[j] = true;
			comp[j] = v;
			num[j] = cnt;
			s[v].insert(cnt);
			++cnt;
		}
	}
	for(int i=0;i<n;++i) {
		scanf("\n%c %d",&ch,&id);
		if(ch == '-') {
			pii p = Mp[id];
			s[p.f].insert(p.s);
			continue;
		}
		scanf("%d",&hash);
		int l = comp[hash], j = num[hash];
		set <int>::iterator it = s[l].lower_bound(j);
		if(it == s[l].end()) {
			it = s[l].begin();
			ans += h/v - j + *it;
		}
		else  ans += *it - j;
		Mp[id] = mp(l,*it);
		s[l].erase(it);
	}
	printf("%I64d",ans);
	return 0;
}