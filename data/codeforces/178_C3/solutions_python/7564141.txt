#include <cstdio>
#include <iostream>
#include <set>
#include <map>
using namespace std;
const int MAX_N = 220005;
int h, m, n, num;
set <int> mp[MAX_N];
map <int, int> mark;
int rank[MAX_N], pos[MAX_N], X[MAX_N], Y[MAX_N];
void init()
{
    int now_rank = 0;
    for (int i = 0; i < h; i++)
        if (!rank[i])
        {
            int j = i;
            now_rank ++;
            num = 0;
            while (!rank[j])
            {
                rank[j] = now_rank;
                mp[now_rank].insert(num);
                pos[j] = num ++;
                j = (j + m) % h;
            }
        }

}

int main()
{
   // freopen("nimo.in", "r", stdin);
    scanf("%d%d%d\n", &h, &m, &n);
    init();
    char ch[2];
    int id, hash;
    long long ans = 0;
    for (int i = 0; i < n; i++)
    {
        scanf("%s", ch);
        if (ch[0] == '+')
        {
            scanf("%d%d", &id, &hash);
            int now_rank = rank[hash];
            set <int> :: iterator it = mp[now_rank].lower_bound(pos[hash]);
            if (it == mp[now_rank].end()) it = mp[now_rank].lower_bound(0);
            int location = *it;
            if (location < pos[hash]) location += num;
            ans += 1ll * (location - pos[hash]);

            mark[id] = i;
            X[i] = now_rank;
            Y[i] = *it;
            mp[now_rank].erase(it);
        }
        else 
        {
            scanf("%d", &id);
            int i = mark[id];
            mp[X[i]].insert(Y[i]);
        }
    }
    cout << ans;
    return 0;
}
