#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <string>
#include <map>
#include <set>
#include <cstdio>
using namespace std;

#define PI 3.14159265
#define double long double

#define FOR(i,n) for(int i = 0;i<n;++i)

map<int,int> hashmap;
map<int,int> posmap;
set<int> ar[200010];
int pos[200010];
int num[200010];
int maxv[200010];
int temp[200010];

int main()
{
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	int h,m,n;
	scanf("%d %d %d",&h,&m,&n);
	FOR(i,h)
	{
		int s = 0;
		int count = 0;
		while(!pos[i+s])
		{
			pos[(i+s)%h] = i+1;
			ar[i].insert(count);
			num[(i+s)%h] = count;
			++count;
			s=(s+m)%h;
		}
		maxv[i] = count-1;
	}
	long long ans = 0;
	char c;
	FOR(p,n)
	{
		c = ' ';
		while(c!='+' && c!='-')
			c = getchar();
		if(c == '+')
		{
			int a,b;
			scanf("%d %d",&a,&b);
			int nAr = pos[b]-1;
			set<int>::iterator t = ar[nAr].lower_bound(num[b]);
			int v;
			if(t == ar[nAr].end())
			{
				t = ar[nAr].begin();
				v = *(t);
			}
			else
				v = *t;
			if(v>=num[b])
			{
				//cout << v-num[b] << endl;
				ans+=v-num[b];
			}
			else
			{
				//cout << maxv[nAr] << " " << num[b] << " " << v << endl;
				ans+=maxv[nAr]-num[b]+v+1;
			}
			hashmap.insert(make_pair(a,b));
			posmap.insert(make_pair(a,v));
			ar[nAr].erase(t);
		}
		else
		{
			int a;
			cin >> a;
			map<int,int>::iterator it = hashmap.find(a);
			int nAr = pos[(it)->second]-1;
			hashmap.erase(it);
			it = posmap.find(a);
			int v = it->second;
			posmap.erase(it);
			ar[nAr].insert(v);
		}
		
	}
	cout << ans << endl;;
	return 0;
}
