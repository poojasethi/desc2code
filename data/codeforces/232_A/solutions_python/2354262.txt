from bisect import bisect_left as bisect

def f(n):
    return n * (n - 1) * (n - 2) / 6

table = [f(x) for x in xrange(200)]
graph = [x[:] for x in [[0]*200]*200]
graph3 = [
    [0, 1, 1, 0, 1],
    [1, 0, 1, 1, 1],
    [1, 1, 0, 1, 0],
    [0, 1, 1, 0, 0],
    [1, 1, 0, 0, 0]
    ]

k = int(raw_input())
start = 0
end = 0
while k > 0:
    if k == 3:
        for i in xrange(0, 5):
            for j in xrange(0, 5):
                graph[start+i][start+j] = graph3[i][j]
        end += 5
        break
    n = bisect(table, k)
    end += n
    fulln, fullnm1 = table[n], table[n-1]
    for i in xrange(start, end - 1):
        for j in xrange(i + 1, end - 1):
            graph[i][j] = graph[j][i] = 1
    k -= fullnm1
    for i in xrange(0, n - 1):
        if k - i < 0:
            break
        graph[end - 1][start + i] = graph[start + i][end - 1] = 1
        k -= i
    start = end

print end
for i in xrange(end):
    print ''.join([str(d) for d in graph[i][:end]])
