/*
Web Net=http://codeforces.com/problemset/problem/513/F1

*/
#include <cstdio>
#include <cstring>
#include <algorithm>
#define MAXD 31
#define MAXP 1001
#define MAXN 100001
#define MAXM 200001
using namespace std;
const long long llINF=1ll<<50;
const int INF=~0u>>2;
const int dx[]={0,1,-1,0,0};
const int dy[]={0,0,0,1,-1};
struct edge{int node,next,flow,opp;}e[MAXM];
int n,m,nB,nG,S,T,t,tot,h[MAXN],d[MAXN],cur[MAXN],gap[MAXN],pre[MAXN],num[MAXD][MAXD][2];
char s[MAXD][MAXD];
struct people{
	int x,y,t,num;
	long long dis[MAXD][MAXD];
	void read(int b) {
	  scanf("%d%d%d",&x,&y,&t);num=b;
	  static int qx[MAXN],qy[MAXN];
	  static bool v[MAXD][MAXD];
	  memset(v,false,sizeof(v));
	  for (int i=1;i<=n;i++)
	    for (int j=1;j<=m;j++)
	      dis[i][j]=llINF;
	  int l=0,r=0;r++;qx[r]=x;qy[r]=y;dis[x][y]=0;v[x][y]=true;
	  while (l<r) {
	    l++;
	    for (int d=1;d<=4;d++) {
	      int nx=qx[l]+dx[d],ny=qy[l]+dy[d];
	      if (1<=nx && nx<=n && 1<=ny && ny<=m && s[nx][ny]=='.') {
	        if (v[nx][ny]) continue;
	        r++;qx[r]=nx;qy[r]=ny;v[nx][ny]=true;
	        dis[nx][ny]=dis[qx[l]][qy[l]]+t;
	      }
	    }
	  }
	}
}boss,boy[MAXP],girl[MAXP];
void addedge(int x,int y,int f) {
	//printf("Addedge(%d,%d,%d)\n",x,y,f);
	t++;e[t]=(edge){y,h[x],f,t+1};h[x]=t;
	t++;e[t]=(edge){x,h[y],0,t-1};h[y]=t;
}
int Maxflow_Isap(int s,int t,int n,bool vis=false) {
    memset(pre,-1,sizeof(pre));
    memset(d,0,sizeof(d));
    memset(gap,0,sizeof(gap));
    for (int i=1;i<=n;i++) cur[i]=h[i];
    gap[0]=n;
    int u=pre[s]=s,v,maxflow=0;
    while (d[s]<n) {
      v=n+1;
      for (int i=h[u];i;i=e[i].next)
        if (e[i].flow && d[u]==d[e[i].node]+1) {
          v=e[i].node;cur[u]=i;break;
        }
      if (v<=n) {
        pre[v]=u;u=v;
        if (v==t) {
          int dflow=INF,p=v;u=s;
          while (p!=s) {
            p=pre[p];
            dflow=min(dflow,e[cur[p]].flow);
          }
          maxflow+=dflow;p=v;
          //if (vis) printf("Dflow=%d\n",dflow);
          while (p!=s) {
            //printf("%d ",p);
            p=pre[p];
            e[cur[p]].flow-=dflow;
            e[e[cur[p]].opp].flow+=dflow;
          }
          //printf("%d\n",p);
        }
      }
      else{
        int mindist=n+1;
        for (int i=h[u];i;i=e[i].next)
          if (e[i].flow && mindist>d[e[i].node]) {
            mindist=d[e[i].node];cur[u]=i;
          }
        if (!--gap[d[u]]) return maxflow;
        gap[d[u]=mindist+1]++;u=pre[u];
      }
    }
    return maxflow;
}
/*int Maxflow_Isap(int s,int t,int n) {
    memset(pre,-1,sizeof(pre));
    memset(d,0,sizeof(d));
    memset(gap,0,sizeof(gap));
	for (int i=1;i<=n;i++) cur[i]=h[i];
	gap[0]=n;
	int u=pre[s]=s,v,maxflow=0;
	while (d[s]!=-1) {
	  v=n+1;
	  for (int i=cur[u];i;i=e[i].next)
	    if (e[i].flow && d[u]==d[e[i].node]+1) {
	      v=e[i].node;cur[u]=i;break;
	    }
	  if (v<=n) {
	  	pre[v]=u;u=v;
	    if (v==n) {
	      int dflow=INF,p=t;u=s;
	      while (p!=s) {
	      	p=pre[p];
	      	dflow=min(dflow,e[cur[p]].flow);
	      }
	      maxflow+=dflow;p=t;
	      while (p!=s) {
	      	p=pre[p];
	        e[cur[p]].flow-=dflow;
	        e[e[cur[p]].opp].flow+=dflow;
	      }
	    }
	  }
	  else{
	  	int mindist=n+1;
	  	for (int i=h[u];i;i=e[i].next)
	  	  if (e[i].flow && mindist>d[e[i].node]) {
	  	  	mindist=d[e[i].node];cur[u]=i;
	  	  }
	  	if (!--gap[d[u]]) return maxflow;
	  	gap[d[u]=mindist+1]++;u=pre[u];
	  }
	}
	return maxflow;
}*/
bool check(long long ans) {
	memset(h,t=0,sizeof(h));
	for (int i=1;i<=nB;i++) {
      addedge(S,boy[i].num,1);
      for (int x=1;x<=n;x++)
        for (int y=1;y<=m;y++)
          if ((long long)boy[i].dis[x][y]<=ans) {
          	addedge(boy[i].num,num[x][y][0],1);
          	//printf("Boy %d goto (%d,%d)\n",i,x,y);
          }
      //printf("\n");
    }
    for (int i=1;i<=nG;i++) {
	  addedge(girl[i].num,T,1);
      for (int x=1;x<=n;x++)
        for (int y=1;y<=m;y++)
          if ((long long)girl[i].dis[x][y]<=ans) {
          	addedge(num[x][y][1],girl[i].num,1);
          	//printf("Girl %d goto (%d,%d)\n",i,x,y);
          }
      //printf("\n");
    }
    for (int x=1;x<=n;x++)
      for (int y=1;y<=m;y++)
        if (s[x][y]=='.') addedge(num[x][y][0],num[x][y][1],1);
	int maxflow=Maxflow_Isap(S,T,tot);
	return maxflow>=nB;
}
int main() {
	scanf("%d%d%d%d",&n,&m,&nB,&nG);
	for (int i=1;i<=n;i++) scanf("%s",s[i]+1);
	boss.read(++tot);
	for (int i=1;i<=nB;i++) boy[i].read(++tot);
	for (int i=1;i<=nG;i++) girl[i].read(++tot);
	if (nB<nG) boy[++nB]=boss;else girl[++nG]=boss;
	if (nB!=nG) return printf("-1\n"),0;
	for (int i=1;i<=n;i++)
	  for (int j=1;j<=m;j++) 
	    if (s[i][j]=='.') {
		  num[i][j][0]=++tot;
		  num[i][j][1]=++tot;
	    }
	S=++tot;T=++tot;
	long long left=0,right=llINF;
	while (left<right) {
	  long long mid=left+right>>1;
	  if (check(mid)) right=mid;else left=mid+1;
	}
	if (left<llINF) printf("%I64d\n",left);else printf("-1\n");
	return 0;
}
