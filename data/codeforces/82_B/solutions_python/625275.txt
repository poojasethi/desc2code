#! /usr/bin/python2
# -*- coding: utf-8 -*-
import sys
input = sys.stdin
output = sys.stdout

def solve(n,Us):
    
    elements = sorted(list(reduce(lambda x,y: x | y, Us[1:], Us[0])))
#    print elements
    
    # special case (n == 2)
    if n==2:
        return [[elements[0]], elements[1:]]
    
    # general case (n > 2)
    m = len(Us)
    M = {}
    for e in elements:
        M[e] = set(i for i in range(m) if e in Us[i])
#    print M
    
    psets = [] # position sets
    sets = [] # element sets
    for ps in M.values():
        if ps not in psets:
            s = [e for e,positions in M.iteritems() if positions == ps]
            sets.append(s)
            psets.append(ps)
        if len(sets) == n:
            break

    return sets

n = int(input.readline())

Us = []
m = (n*(n-1)) / 2
for i in range(m):
    s = input.readline().split(' ')
    Aij = set(int(sn) for sn in s[1:])
    Us.append(Aij)

sets = solve(n,Us)

for s in sets:
    output.write(str(len(s)))
    output.write(' ')
    output.write(' '.join(str(e) for e in s))
    output.write('\n')
