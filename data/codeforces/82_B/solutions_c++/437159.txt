#include <cstdio>
#include <bitset>
#include <algorithm>

using namespace std;

const int MAXN = 200 + 10;
int n;
bitset<MAXN> bs[MAXN * MAXN / 2];

bool cmp(const bitset<MAXN>& a, const bitset<MAXN>& b) {
	for (int i = 0; i < MAXN; ++i) {
		if (a[i] != b[i]) {
			return a[i] > b[i];
		}
	}
	return false;
}

void gao(const bitset<MAXN>& a) {
	printf("%d", a.count());
	for (int i = 0; i < MAXN; ++i) {
		if (a[i] == 1) {
			printf(" %d", i);
		}
	}
	puts("");
}


int main() {
	int K, x;
	scanf("%d", &n);
	if (n == 2) {
		scanf("%d", &K);
		scanf("%d", &x);
		printf("1 %d\n", x);
		printf("%d", K - 1);
		for (int i = 1; i < K; ++i) {
			scanf("%d", &x);
			printf(" %d", x);
		}
		puts("");
		return 0;
	}
	int m = n * (n - 1) / 2;
	for (int i = 0; i < m; ++i) {
		bs[i].reset();
		scanf("%d", &K);
		for (int j = 0; j < K; ++j) {
			scanf("%d", &x);
			bs[i].set(x);
		}
	}
	sort(bs, bs + m, cmp);
	bitset<MAXN> B = bs[0];
	for (int i = 1; i < n - 1; ++i) {
		B &= bs[i];
	}

	gao(B);
	for (int i = 0; i < n - 1; ++i) {
		gao(B ^ bs[i]);
	}

	return 0;
}
