#include <iostream>
#include <vector>
#include <algorithm>
#include <set>

using namespace std;
vector<int> where[201];
set<int> v[200 * 200];
int mark[201];
int main()
{
	int n;
	cin >> n;
	for (int i = 0; i < n * (n - 1) / 2; ++i)
	{
		int m;
		cin >> m;
		for (int j = 0; j < m; ++j)
		{
			int x; cin >> x;
			where[x].push_back(i);
			v[i].insert(x);
			if (n == 2)
			{
				if (j == 0)
				{cout << 1 << ' ' << x << '\n';}
				else
				{
					if (j == 1) cout << m - 1;
					cout << " " << x;
				}
			}
		}
	}
	if (n == 2)
	{
		cout << '\n';
		return 0;
	}
	vector<int> ret(201);
	for (int i = 1; i <= 200; ++i) if (where[i].size())
		if (!mark[i])
	{
			{
				int s1 = where[i][0];
				int s2 = where[i][1];
				vector<int>::iterator it;
				it = set_intersection(v[s1].begin(), v[s1].end(),
						v[s2].begin(), v[s2].end(), ret.begin());
				int cnt = it - ret.begin();
				cout << cnt;
				for (int j = 0; j < cnt; ++j)
				{
					cout << " " << ret[j];
					mark[ret[j]] = 1;
				}
				cout << '\n';
			}
	}
	return 0;
}
