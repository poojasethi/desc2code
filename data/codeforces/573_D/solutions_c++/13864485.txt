#include<cstdio>
#include<cstring>
#include<algorithm>
#define ls (p<<1)
#define rs ((p<<1)|1)
#define mid ((l+r)>>1)
const int maxn=30010,maxt=maxn<<2;
typedef long long ll;
using namespace std;
int n,q,posa[maxn],posb[maxn],ban[maxn];
struct node{ll v;int id;}a[maxn],b[maxn];
bool cmp(node a,node b){return a.v<b.v;}
struct matrix{
	ll mat[3][3];
	void clear(){memset(mat,-1,sizeof(mat));}
};

matrix operator *(matrix a,matrix b){
	matrix res;res.clear();
	for (int i=0;i<3;i++)
		for (int k=0;k<3;k++) if (a.mat[i][k]!=-1)
			for (int j=0;j<3;j++) if (b.mat[k][j]!=-1)
				res.mat[i][j]=max(res.mat[i][j],a.mat[i][k]+b.mat[k][j]);
	return res;
}

matrix get_matrix(int i){
	matrix c;c.clear();
	c.mat[1][0]=c.mat[2][1]=0;
	if (ban[i]!=i) c.mat[2][2]=a[i].v*b[i].v;
	if (i<=1) return c;
	if (ban[i]!=i-1) c.mat[1][2]=a[i].v*b[i-1].v+a[i-1].v*b[i].v;
	if (i<=2) return c;
	ll v1=-1,v2=-1;
	if (ban[i]!=i-1&&ban[i-1]!=i-2&&ban[i-2]!=i) v1=a[i].v*b[i-1].v+a[i-1].v*b[i-2].v+a[i-2].v*b[i].v;
	if (ban[i]!=i-2&&ban[i-1]!=i&&ban[i-2]!=i-1) v2=a[i].v*b[i-2].v+a[i-1].v*b[i].v+a[i-2].v*b[i-1].v;
	c.mat[0][2]=max(v1,v2);
	return c;
}

struct Segment_Tree{
	matrix t[maxt];
	void build(int p,int l,int r){
		//printf("%d %d %d\n",p,l,r);
		if (l==r){t[p]=get_matrix(l);return;}
		build(ls,l,mid),build(rs,mid+1,r);
		t[p]=t[ls]*t[rs];
	}
	void modify(int p,int l,int r,int a){
		if (l==r){t[p]=get_matrix(l);return;}
		if (a<=mid) modify(ls,l,mid,a);
		else modify(rs,mid+1,r,a);
		t[p]=t[ls]*t[rs];
	}
	void modify(int a){modify(1,1,n,a);}
	ll query(){return t[1].mat[2][2];}
}T;

int main(){
	scanf("%d%d",&n,&q);
	for (int i=1;i<=n;i++) scanf("%I64d",&a[i].v),a[i].id=i;
	for (int i=1;i<=n;i++) scanf("%I64d",&b[i].v),b[i].id=i;
	sort(a+1,a+1+n,cmp),sort(b+1,b+1+n,cmp);
	for (int i=1;i<=n;i++) posa[a[i].id]=i,posb[b[i].id]=i;
	for (int i=1;i<=n;i++) ban[i]=posb[a[i].id];
	T.build(1,1,n);
	/*for (int i=1;i<=n;i++,puts("")){
		printf("%d\n",i);matrix c=get_matrix(i);
		for (int j=0;j<3;j++,puts(""))
			for (int k=0;k<3;k++) printf("%lld ",c.mat[j][k]);
	}*/
	for (int x,y;q;q--){
		scanf("%d%d",&x,&y),x=posa[x],y=posa[y],swap(ban[x],ban[y]);
		for (int i=max(1,x-2);i<=min(x+2,n);i++) T.modify(i);
		for (int i=max(1,y-2);i<=min(y+2,n);i++) T.modify(i);
		printf("%I64d\n",T.query());
	}
	return 0;
}
 	    		  		    	 		 	 	  		 		