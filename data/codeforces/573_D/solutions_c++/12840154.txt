#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <stdlib.h>
#include <math.h>
#include <set>
#include <map>
#include <queue>
#include <time.h>
#include <vector>
#include <stack>
using namespace std;
#define inf 99999999999999999LL
__int64 c[100000][6][6];
pair<__int64 ,int>war[33333],hor[33333];
int n,q,h[33333],rr[33333];
void run(__int64 a[6][6],int pos)
{
	__int64 e[6];
	int o=h[war[pos].second];
	e[1]=(pos>2&&o!=hor[pos-2].second)?war[pos].first*hor[pos-2].first:-inf;
	e[2]=(pos>1&&o!=hor[pos-1].second)?war[pos].first*hor[pos-1].first:-inf;
	e[3]=(pos>0&&o!=hor[pos].second)?war[pos].first*hor[pos].first:-inf;
	e[4]=(pos<n&&o!=hor[pos+1].second)?war[pos].first*hor[pos+1].first:-inf;
	e[5]=(pos<n-1&&o!=hor[pos+2].second)?war[pos].first*hor[pos+2].first:-inf;
	for(int i=0;i<6;i++)
		for(int j=0;j<6;j++)
			a[i][j]=-inf;
	a[0][0]=e[3]; a[0][1]=e[4]; a[0][2]=e[5];
	a[1][0]=e[2]; a[1][3]=e[4]; a[1][4]=e[5];
	a[2][1]=e[2]; a[2][3]=e[3]; a[2][5]=e[5];
	a[3][0]=e[1]; a[4][1]=e[1]; a[5][3]=e[1];
	
}
void push_up(__int64 a[6][6],__int64 b[6][6],__int64 d[6][6])
{
	for(int i=0;i<6;i++)
		for(int j=0;j<6;j++)
			a[i][j]=-inf;
	for(int i=0;i<6;i++)
		for(int j=0;j<6;j++)
			for(int k=0;k<6;k++)
			{
				a[i][j]=max(a[i][j],b[i][k]+d[k][j]);
			}
}
void build(int t,int l,int r)
{
	int e[6];
	if(l==r)
	{
		run(c[t],l);
		return ;
	}
	int mid=l+r>>1;
	build(t<<1,l,mid);
	build(t<<1|1,mid+1,r);
	push_up(c[t],c[t<<1],c[t<<1|1]);
}
void update(int t,int l,int r,int pos)
{
	if(l==r)
	{
		run(c[t],l);
		return ;
	}
	int mid=l+r>>1;
	if(pos<=mid)update(t<<1,l,mid,pos);
	else update(t<<1|1,mid+1,r,pos);
	push_up(c[t],c[t<<1],c[t<<1|1]);
}
int main()
{
	scanf("%d%d",&n,&q);
	for(int i=1;i<=n;i++)
	{
		scanf("%I64d",&war[i].first);
		war[i].second=i;
	}
	for(int i=1;i<=n;i++)
	{
		scanf("%I64d",&hor[i].first);
		hor[i].second=i;
		h[i]=i;
	}
	sort(war+1,war+1+n);
	sort(hor+1,hor+1+n);
	for(int i=1;i<=n;i++)
	{
		rr[war[i].second]=i;
	}
	build(1,1,n);
	for(int i=1;i<=q;i++)
	{
		int u,v;
		scanf("%d%d",&u,&v);
		swap(h[u],h[v]);
		if(u!=v)
		{
			update(1,1,n,rr[u]);
			update(1,1,n,rr[v]);
		}
		printf("%I64d\n",c[1][0][0]);
	}
}
