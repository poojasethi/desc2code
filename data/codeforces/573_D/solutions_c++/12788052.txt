#include <iostream>
#include <algorithm>
#include <cstdio>
using namespace std;
int N,Q;
pair <int,int> W[300005],H[300005];
long long DP[3][300005],D[300005];
int Poz[300005];
void Read()
{
    cin>>N>>Q;
    for(int i=1;i<=N;i++)
        cin>>W[i].first,W[i].second=i;
    for(int i=1;i<=N;i++)
        cin>>H[i].first,H[i].second=i;
    sort(W+1,W+N+1);
    sort(H+1,H+N+1);
    for(int i=1;i<=N;i++)
        Poz[H[i].second]=i;
}
void build(int start)
{
    int i=start;
    DP[0][i]=DP[1][i]=DP[2][i]=0;
     if(W[i].second!=H[i].second)
            DP[0][i]=max(DP[0][i],(long long)W[i].first*(long long)H[i].first);
    if(i>=2 && W[i].second!=H[i-1].second && W[i-1].second!=H[i].second)
            DP[1][i]=max(DP[1][i],(long long)W[i-1].first*(long long)H[i].first+(long long)W[i].first*(long long)H[i-1].first);
    if(i>=3 && W[i].second!=H[i-2].second && W[i-1].second!=H[i-1].second && W[i-2].second!=H[i].second)
            DP[2][i]=max(DP[2][i],(long long)W[i].first*(long long)H[i-2].first+(long long)W[i-1].first*(long long)H[i-1].first+(long long)W[i-2].first*(long long)H[i].first);
    if(i>=3 && W[i].second!=H[i-1].second && W[i-1].second!=H[i-2].second && W[i-2].second!=H[i].second)
            DP[2][i]=max(DP[2][i],(long long)W[i].first*(long long)H[i-1].first+(long long)W[i-1].first*(long long)H[i-2].first+(long long)W[i-2].first*(long long)H[i].first);
    if(i>=3 && W[i].second!=H[i-2].second && W[i-1].second!=H[i].second && W[i-2].second!=H[i-1].second)
            DP[2][i]=max(DP[2][i],(long long)W[i].first*(long long)H[i-2].first+(long long)W[i-1].first*(long long)H[i].first+(long long)W[i-2].first*(long long)H[i-1].first);
}
void Solve(int ok,int start)
{
    for(int i=start;i<=N;i++)
    {
        D[i]=0;
        if((D[i-1]!=0 || i==1))
            D[i]=max(D[i],D[i-1]+DP[0][i]);
        if(i>=2 && (D[i-2]!=0 || i==2))
            D[i]=max(D[i],D[i-2]+DP[1][i]);
        if(i>=3 && (D[i-3]!=0 || i==3))
            D[i]=max(D[i],D[i-3]+DP[2][i]);
    }
    if(ok==1)
        cout<<D[N]<<'\n';
}
int main()
{
    Read();
    for(int i=1;i<=N;i++)
        build(i);
    Solve(0,1);
    while(Q--)
    {
        int x,y;
        cin>>x>>y;
        H[Poz[x]].second=y;
        H[Poz[y]].second=x;
        swap(Poz[x],Poz[y]);
        for(int i=Poz[x];i<=N && i<=Poz[x]+2;i++)
            build(i);
        for(int i=Poz[y];i<=N && i<=Poz[y]+2;i++)
            build(i);
        Solve(1,min(Poz[x],Poz[y]));
    }
    return 0;
}
