//--------------------------------
//Sriram Narayanan - itisalways42
//--------------------------------
#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(a) a.begin(), a.end()
#define mod 1000000007
#define endl "\n"

using namespace std;
typedef long long LL;
typedef vector<int> VI;
typedef vector< vector<int> > VVI;
typedef pair< LL, LL > PII;

LL modpow(LL x, LL p, LL M)
{LL ret = 1; while(p){if(p&1) ret = ret*x%M; x = x*x%M; p/=2;} return ret;}

const int N=30010;

int n,q,invw[N],invh[N],p[N];
LL ans[N],dp[3][N];
PII w[N],h[N];

void f(int i)
{
	dp[0][i] = dp[1][i] = dp[2][i] = -1e13;
	if(p[i]!=i) dp[0][i] = w[i].ff * h[i].ff;
	if(i<n-1 && p[i]!=i+1 && p[i+1]!=i) dp[1][i] = w[i].ff * h[i+1].ff + w[i+1].ff * h[i].ff;
	if(i<n-2 && p[i]!=i+1 && p[i+1]!=i+2 && p[i+2]!=i) dp[2][i] = w[i].ff * h[i+1].ff + w[i+1].ff * h[i+2].ff + w[i+2].ff * h[i].ff;
	if(i<n-2 && p[i]!=i+2 && p[i+1]!=i+1 && p[i+2]!=i) dp[2][i] = max(dp[2][i],w[i].ff*h[i+2].ff+w[i+1].ff*h[i+1].ff+w[i+2].ff*h[i].ff);
	if(i<n-2 && p[i]!=i+2 && p[i+1]!=i && p[i+2]!=i+1) dp[2][i] = max(dp[2][i],w[i].ff*h[i+2].ff+w[i+1].ff*h[i].ff+w[i+2].ff*h[i+1].ff);
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);

	cin>>n>>q;
	for(int i=0; i<n; i++) cin>>w[i].ff,w[i].ss = i;
	for(int i=0; i<n; i++) cin>>h[i].ff,h[i].ss = i;
	
	sort(w,w+n); //reverse(w,w+n);
	sort(h,h+n); //reverse(h,h+n);
	
	for(int i=0; i<n; i++) invw[w[i].ss] = i, invh[h[i].ss] = i;
	for(int i=0; i<n; i++) p[invw[i]] = invh[i];
	for(int i=0; i<n; i++) f(i);

	int qa,qb;
	while(q--)
	{
		cin>>qa>>qb; qa--; qb--; qa = invw[qa]; qb = invw[qb];
		swap(p[qa],p[qb]);
		for(int i=qa; i>=0 && i>=qa-3; i--) f(i);
		for(int i=qb; i>=0 && i>=qb-3; i--) f(i);
		ans[0] = dp[0][0];
		ans[1] = max(dp[1][0],ans[0]+dp[0][1]);
		if(n>=3) ans[2] = max(dp[2][0],max(ans[1]+dp[0][2],ans[0]+dp[1][1]));
		for(int i=3; i<n; i++)
		{
			ans[i] = ans[i-1] + dp[0][i];
			ans[i] = max(ans[i],ans[i-2] + dp[1][i-1]);
			ans[i] = max(ans[i],ans[i-3] + dp[2][i-2]);
		}
		cout<<ans[n-1]<<endl;
	}
	return 0;
}

