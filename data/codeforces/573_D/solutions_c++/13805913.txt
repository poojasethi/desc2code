#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstring>
#include<algorithm>
#define maxn 30005
#define inf 4557430888798830399
using namespace std;
typedef long long int64;
char ch;
int n,q,x,y,posa[maxn],posb[maxn],ban[maxn];
int64 f[maxn],val[maxn][3];
struct DATA{
	int64 val;
	int id;
}a[maxn],b[maxn];
bool cmp(DATA a,DATA b){return a.val<b.val;}
bool ok;
void read(int &x){
	for (ok=0,ch=getchar();!isdigit(ch);ch=getchar()) if (ch=='-') ok=1;
	for (x=0;isdigit(ch);x=x*10+ch-'0',ch=getchar());
	if (ok) x=-x;
}
void read(int64 &x){
	for (ok=0,ch=getchar();!isdigit(ch);ch=getchar()) if (ch=='-') ok=1;
	for (x=0;isdigit(ch);x=x*10+ch-'0',ch=getchar());
	if (ok) x=-x;
}
void calc(int id){
	val[id][0]=val[id][1]=val[id][2]=-inf;
	if (id>=1&&ban[id]!=id) val[id][0]=max(val[id][0],a[id].val*b[id].val);
	if (id>=2&&ban[id]!=id-1&&ban[id-1]!=ban[id]) val[id][1]=max(val[id][1],a[id].val*b[id-1].val+a[id-1].val*b[id].val);
	if (id>=3){
		if (ban[id]!=id-2&&ban[id-1]!=id&&ban[id-2]!=id-1) val[id][2]=max(val[id][2],a[id].val*b[id-2].val+a[id-1].val*b[id].val+a[id-2].val*b[id-1].val);
		if (ban[id]!=id-1&&ban[id-1]!=id-2&&ban[id-2]!=id) val[id][2]=max(val[id][2],a[id].val*b[id-1].val+a[id-1].val*b[id-2].val+a[id-2].val*b[id].val);
	}
}
int main(){
	read(n),read(q);
	for (int i=1;i<=n;i++) read(a[i].val),a[i].id=i;
	for (int i=1;i<=n;i++) read(b[i].val),b[i].id=i;
	sort(a+1,a+n+1,cmp),sort(b+1,b+n+1,cmp);
	for (int i=1;i<=n;i++) posa[a[i].id]=i;
	for (int i=1;i<=n;i++) posb[b[i].id]=i;
	for (int i=1;i<=n;i++) ban[i]=posb[a[i].id];
	for (int i=1;i<=n;i++) calc(i);
	while (q--){
		read(x),read(y),x=posa[x],y=posa[y],swap(ban[x],ban[y]);
		for (int i=max(1,x-2);i<=min(n,x+2);i++) calc(i);
		for (int i=max(1,y-2);i<=min(n,y+2);i++) calc(i);
		for (int i=1;i<=n;i++){
			f[i]=f[i-1]+val[i][0];
			if (i>=2) f[i]=max(f[i],f[i-2]+val[i][1]);
			if (i>=3) f[i]=max(f[i],f[i-3]+val[i][2]);
		}
		printf("%I64d\n",f[n]);
	}
	return 0;
}

 	 	 	 				  	  	 	   	 	   	