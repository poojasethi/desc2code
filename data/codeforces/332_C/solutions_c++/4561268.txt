#include <cstdio>
#include <queue>
#include <algorithm>
using namespace std;

const int MAX_N = 1e5 +5;

struct Work {
  int a, b, id;
  bool operator < (const Work &o) const {
    return b != o.b? b > o.b: a < o.a;
  }
  Work() {}
  Work(int x, int y, int z): a(x), b(y), id(z) {};
};

int n, p, k;
Work a[MAX_N];
priority_queue<Work> q;

int main() {
  scanf("%d %d %d", &n, &p, &k);
  for(int i = 0; i < n; i++) {
    scanf("%d %d", &a[i].a, &a[i].b);
    a[i].id = i+1;
  }
  sort(a, a+n);
  for(int i = n-p+k; i --> 0; ) {
    q.push(Work(i, a[i].a, a[i].id));
    if(q.size() > k) {
      q.pop();
    }
  }

  int mx = 0;
  for(; not q.empty(); q.pop()) {
    printf("%d ", q.top().id);
    mx = max(mx, q.top().a);
  }
  sort(a+mx+1, a+n);
  for(int i = mx+1, cnt = 0; cnt < p-k; i++, cnt++) {
    printf("%d ", a[i].id);
  }
  printf("\n");
}
