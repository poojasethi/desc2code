#include <cstdio>
#include <algorithm>
#include <cstring>
const int N = 100000;
int n, p, k;
struct Data {
	int a, b, id, bid;
} s[N], first[N];
bool cmp1(const Data &lhs, const Data &rhs) { return lhs.b > rhs.b || (lhs.b == rhs.b && lhs.a < rhs.a); }
bool cmp2(const Data &lhs, const Data &rhs) { return lhs.a > rhs.a || (lhs.a == rhs.a && lhs.b > rhs.b); }
int main()
{
	scanf("%d%d%d", &n, &p, &k);
	for (int i = 0; i < n; ++i) {
		scanf("%d%d", &s[i].a, &s[i].b);
		s[i].id = i+1;
	}
	std::sort(s, s+n, cmp1);
	memcpy(first, s, sizeof(s));
	for (int i = 0; i < n; ++i) s[i].bid = i+1;
	std::sort(s, s+n-(p-k), cmp2);
	int bb = 0;
	for (int i = 0; i < k; ++i) {
		printf("%d ", s[i].id);
		bb = std::max(bb, s[i].bid);
	}
	std::sort(first+bb, first+n, cmp1);
	for (int i = bb; i < bb+p-k; ++i)
		printf("%d ", first[i].id);
}
 				 	 		 		 	 	     				