#!/usr/bin/python

import sys

def read_obj(cls):
    return cls(sys.stdin.readline().strip())

def read_obj_list(cls):
    return map(cls, sys.stdin.readline().strip().split())

class Task(object):
    def __init__(self, h, d, idt):
        self.h = h
        self.d = d
        self.idt = idt

    def __repr__(self):
        return '(' + str(self.h) + ', ' + str(self.d) + ' | ' + str(self.idt) + ')'

def solve():
    n, p, k = read_obj_list(int)
    tasks = []
    for i in xrange(n):
        h, d = read_obj_list(int)
        tasks.append(Task(h, d, i))
    tasks.sort(key=lambda x: (x.d, -x.h))
    rest = tasks[p-k:]
    rest.sort(key=lambda x: (-x.h, -x.d))
    mind = 10000000000
    for i in xrange(k):
        print rest[i].idt + 1,
        mind = min(mind, rest[i].d)
    rest = tasks[:p-k] + [i for i in rest[k:] if i.d < mind]
    rest.sort(key=lambda x: x.d, reverse=True)
    for i in xrange(p-k):
        print rest[i].idt + 1,


if __name__ == "__main__":
    solve()
