
import sys
import heapq

s = sys.stdin.readline().split()


n = int(s[0])
p = int(s[1])
k = int(s[2])
nneprod = p-k

l = [(-100000000,-100000000,-100000000)]*n

for i in xrange(n):
    s = sys.stdin.readline().split()
    ai = int(s[0])
    bi = int(s[1])
    l[i] = (ai,bi,i+1)


if nneprod == 0:
    l.sort(key = lambda tup: -tup[0])
    for i in xrange(p):
        print l[i][2],
    print
    exit()

l.sort(key = lambda tup: -tup[0])
l.sort(key = lambda tup: tup[1])

#i: from p-k to n-k inclusive

#print l

maxset = l[n-k:]

#print maxset

heapq.heapify(maxset)

maxhairsum = sum(x[0] for x in maxset)
firsti = n-k

for i in xrange(n-k-1,p-k-1,-1):
    if maxset[0][0] < l[i][0]:
        maxhairsum = maxhairsum - maxset[0][0] + l[i][0]
        heapq.heapreplace(maxset,l[i])
        firsti = i

#print firsti, maxset

result = l[firsti-nneprod:firsti]

#print result


maxset = set(maxset)

for i in xrange(firsti, n):
    if l[i] in maxset:
        maxset.remove(l[i])
        result.append(l[i])

#print result

for x in result:
    print x[2],
print
