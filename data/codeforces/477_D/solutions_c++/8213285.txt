#include<stdio.h>
#include<math.h>
#include<iostream>
#include<time.h>
#include<stdlib.h>
#include<algorithm>
#include<string.h>
#include<queue>
using namespace std;

char s[11000];

short same[5010][5010];

int cmp(int i,int j,int len)
{
    if(same[i][j]>=len)
	return 0;
	len=same[i][j];
    if(s[i+len]<s[j+len])
	return -1;
    return 1;
}

int dp[5010][5010];
int mod=1000000007;

int getback(int n)
{
    int ret=0;
    for(int i=strlen(s)-n;s[i];i++)
	ret=(ret*2+s[i]-'0')%mod;
    return ret;
}
int main()
{
    scanf("%s",s);
    int i,j,k,len=strlen(s);

    for(i=len-1;i>=0;i--)
	for(j=i-1;j>=0;j--)if(s[i]==s[j])
	    same[j][i]=same[j+1][i+1]+1;
    else
	same[j][i]=0;
    for(i=0;i<len;i++)
	for(j=i+1;j<len;j++)
	    same[j][i]=same[i][j];
    for(i=0;i<len;i++)
	same[i][i]=len-i;

    dp[0][0]=1;

    int shang;
    for(i=1;i<=len;i++)
    {
	for(j=1;j<=i;j++)if(s[i-j]-'0')
	{
	    if(i-j<j)
		shang=i-j;
	    else
	    {
		shang=j;
		if(cmp(i-j-j,i-j,j)>0)
		    shang--;
	    }
	    dp[i][j]=dp[i-j][shang];
	}
	for(j=1;j<=i;j++)
	{
	    dp[i][j]+=dp[i][j-1];
	    if(dp[i][j]>=mod)
		dp[i][j]-=mod;
	}
    }
    int ans1=dp[len][len];
	
    
    
    
    memset(dp,-1,sizeof(dp));
    dp[0][0]=0;

    for(i=1;i<=len;i++)
    {
	for(j=1;j<=i;j++)if(s[i-j]-'0')
	{
	    if(i-j<j)
		shang=i-j;
	    else
	    {
		shang=j;
		if(cmp(i-j-j,i-j,j)>0)
		    shang--;
	    }
	    if(dp[i-j][shang]<0)
		dp[i][j]=-1;
	    else
	    	dp[i][j]=dp[i-j][shang]+1;
	}
	if(i==len)
	    continue;
	for(j=1;j<=i;j++)
	{
	    if(dp[i][j-1]>=0&&(dp[i][j]<0||dp[i][j]>dp[i][j-1]))
	    	dp[i][j]=dp[i][j-1];
	}
    }
    int ans2=-1;

    for(i=1;i<16&&i<=len;i++)if(dp[len][i]>=0)
    {
	if(ans2<0||ans2>dp[len][i]+getback(i))
	    ans2=dp[len][i]+getback(i);
    }

    if(ans2<0)
    {
	for(;dp[len][i]<0;i++);
	ans2=dp[len][i]+getback(i);
    }
    ans2=(ans2%mod+mod)%mod;

    printf("%d\n%d\n",ans1,ans2);
}