#include<bits/stdc++.h>

using namespace std;

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define sol (root+root)
#define sag (root+root+1)
#define orta ((bas+son)/2)
#define ll long long
#define pii pair<int,int>

const int N=5005;
const int mod=1e9+7;
const int inf=1e9+333;

string str;

int n,i,j,t;
int dp[N][N],last[N],lcp[N][N],len[N][N],mn[N][N];

int f(int x,int y){

	if(y==n)
		return 1;
	
	int &r=dp[x][y];

	if(r!=-1)
		return r;
	
	r=0;
	
	int a=y+1,b=last[min(N-1,y+1+y-x)],c=last[min(N-1,y+2+y-x)];

	if(b and (b-a>y-x or lcp[x][a]>=y-x+1 or str[x+lcp[x][a]]<=str[a+lcp[x][a]]))
		r=f(a,b);
	else if(c)
		r=f(a,c);

	return r=((ll)r+f(x,last[y+1]))%mod;
}

//bool check(int x,int y){
//	int b=x-1;;
//	int a=b-(y-x);
//	return a>=1 and (a+lcp[a][x]-1>=b or str[x+lcp[a][x]]<=str[a+lcp[a][x]]);
//}

bool check(int l,int r){
	int b=l-1;
	int a=b-(r-l);
	return a>=1 and (a+lcp[a][l]-1>=b or str[a+lcp[a][l]]<str[l+lcp[a][l]]);
}

main(){

	cin>>str;	
	
	n=str.size();
	str=' '+str;

	int qwe=0;
	for(i=n ; i>=1 ; i--)
		for(j=n ; j>=1 ; j--)
			if(str[i]==str[j])
				lcp[i][j]=lcp[i+1][j+1]+1;

	for(t=i=n ; i>=1 ; i--){
		last[i]=t;
		if(str[i]=='1')
			t=i-1;
	}

	memset(dp,-1,sizeof dp);

//	  if(f(1,last[1])%mod==939121291)
//		        cout<<endl<<n<<endl;


	printf("%d\n",f(1,last[1])%mod);

	for(j=1 ; j<=n ; j++){
		len[1][j]=mn[1][j]=1;
		for(i=2 ; i<=j ; i++){
			len[i][j]=inf;
			if(str[i]=='0')
				continue;
			if(check(i,j))
				len[i][j]=min(len[i][j],mn[i-j+i-1][i-1]+1);
			else 
				len[i][j]=min(len[i][j],mn[max(1,i-j+i)][i-1]+1);
		}
		mn[j][j]=len[j][j];
		for(i=j-1 ; i>=1 ; i--)
			mn[i][j]=min(mn[i+1][j],len[i][j]);
	}

	int s=1,sum=0,ans=inf;

	for(i=n ; i>=1 and (n-i+1)<=15 ; i--){
		if(str[i]=='1')
			sum=sum+s;
		if(len[i][n]!=inf){
			ans=min((ll)ans,((ll)sum+len[i][n])%mod);
//			printf("%d %d %d\n", i, sum, len[i][n]);
		}
		s+=s;
	}

	if(ans!=inf)
		return cout<<ans,0;

	i=n;

	while(len[i][n]==inf)
		i--;

	int q=i;

	ans=0;

	for( ; i<=n ; i++){
		ans=((ll)ans+ans)%mod;
		ans=((ll)ans+str[i]-'0')%mod;
	}

	ans=(ans+len[q][n])%mod;

	cout<<ans;
}
