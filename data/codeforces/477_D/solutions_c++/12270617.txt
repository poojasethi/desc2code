#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>
using namespace std;
const int MAXL = 5003,oo = ~0U>>2,Mod = 1000000007;
int p[MAXL][MAXL],lcp[MAXL][MAXL],f[MAXL][MAXL],mn[MAXL][MAXL];
char s[MAXL];

inline void upd(int &a,int dt){
	if(a > dt) a = dt;
}
int main(){
	scanf("%s",s + 1);
	int n = strlen(s + 1);
	p[n + 1][n + 1] = 0;
	for(int j = n;j;-- j)
		for(int i = j;i;-- i)
			lcp[i][j] = s[i] == s[j] ? lcp[i + 1][j + 1] + 1 : 0,mn[i][j] = oo,f[i][j] = 0;
	f[1][1] = 1; mn[1][1] = 1;
	for(int r = 1;r < n;++ r)
		for(int l = r;l;-- l){
			int len = r - l + 1;
			f[l][r + 1] = (f[l][r + 1] + f[l][r]) % Mod;
			upd(mn[l][r + 1],mn[l][r]);
			if(r < n && r + len <= n && s[r + 1] == '1'){
				len = lcp[l][r + 1] < len ? lcp[l][r + 1] : len;
				if(l + len > r || (s[l + len] < s[r + 1 + len])){
					f[r + 1][r + r - l + 1] = (f[r + 1][r + r - l + 1] + f[l][r]) % Mod;
					upd(mn[r + 1][r + r - l + 1],mn[l][r] + 1);
				}else if(r + r - l + 1 <= n){
					f[r + 1][r + r - l + 2] = (f[r + 1][r + r - l + 2] + f[l][r]) % Mod;
					upd(mn[r + 1][r + r - l + 2],mn[l][r] + 1);
				}
			}
		}
	int ret = 0LL;
	for(int i = 1;i <= n;++ i)
		ret = (ret + f[i][n]) % Mod;
	printf("%d\n",ret);
	ret = oo;
	for(int i = n,tmp = 0,pow = 1;i;-- i,pow = (pow + pow) % Mod){
		if(s[i] == '1') tmp = (tmp + pow) % Mod;	
		int tmpret = oo;
		if(mn[i][n] != oo)
			tmpret = (mn[i][n] + tmp) % Mod;
		if(tmpret != oo && tmpret < ret) ret = tmpret;	
		if(n - i + 1 > 13 && ret != oo) break;
	}
	printf("%d\n",ret);
	return 0;
}
