#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<cstring>
#define MAXN 5005
#define mod 1000000007
using namespace std ;
typedef long long LL ;

int ans1, ans2 ;
int N, M, flag ;
int dis[MAXN][MAXN] ;
int sum[MAXN][MAXN] ;
int dp[MAXN][MAXN] ;
int pw[MAXN] ;
char ss[MAXN] ;

int main()
{
	int i, j, t, tmp ;
	scanf("%s", ss+1) ;
	N = strlen(ss+1) ;
	for(i = N; i >= 1; i --)
		for(j = N; j > i; j --)
			dis[i][j] = (ss[i]==ss[j]?dis[i+1][j+1]+1:0) ;
	dp[0][0] = 1 ;
	for(i = 1; i <= N; i ++)
	{
		for(j = i-1; j >= 0; j --)
			sum[i-1][j] = (sum[i-1][j+1]+dp[j][i-1])%mod ;
		for(j = i; j <= N; j ++)
			if(ss[i] == '1' && (j==N || ss[j+1] == '1'))
			{
				dp[i][j] = sum[i-1][max(0, 2*i-j)] ; 
				t = 2*i-j-1 ;
				if(i == 1 && t == 0)
					dp[i][j] = (dp[i][j]+dp[t][i-1])%mod ;
				if(t >= 1)
				{
					tmp = dis[t][i] ;
					if(tmp >= j-i+1 || ss[t+tmp] < ss[i+tmp])
						dp[i][j] = (dp[i][j]+dp[t][i-1])%mod ;
				}
			}
	}		
	for(i = 1; i <= N; i ++)
		ans1 = (ans1+dp[i][N])%mod ;
	memset(dp, 62, sizeof(dp)) ;
	memset(sum, 62, sizeof(sum)) ;
	dp[0][0] = 0 ;
	for(i = 1; i <= N; i ++)
	{
		for(j = i-1; j >= 0; j --)
			sum[i-1][j] = min(sum[i-1][j+1], dp[j][i-1]) ;
		for(j = i; j <= N; j ++)
			if(ss[i] == '1' && (j==N || ss[j+1] == '1'))
			{
				dp[i][j] = sum[i-1][max(0, 2*i-j)]+1 ; 
				t = 2*i-j-1 ;
				if(i == 1 && t == 0)
					dp[i][j] = min(dp[i][j], dp[t][i-1]+1) ;
				if(t >= 1)
				{
					tmp = dis[t][i] ;
					if(tmp >= j-i+1 || ss[t+tmp] < ss[i+tmp])
						dp[i][j] = min(dp[i][j], dp[t][i-1]+1) ;
				}
			}
	}
	for(i = 1, pw[0] = 1; i <= N; i ++)
		pw[i] = pw[i-1]*2%mod ;
	flag = 0 ;
	for(i = N, tmp = 0; i >= 1; i --)
	{
		tmp = (tmp+pw[N-i]*(ss[i]-'0'))%mod ;
		if(dp[i][N] < dp[N+1][N+1])
		{
			if(flag == 0) flag = 1, ans2 = (tmp+dp[i][N])%mod ;
			else if(N-i<=20) ans2 = min(ans2, tmp+dp[i][N]) ;
		}
	}
	printf("%d\n%d\n", ans1, ans2) ;
	//system("pause") ;
	return 0 ;
}
