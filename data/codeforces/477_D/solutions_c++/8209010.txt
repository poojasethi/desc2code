#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 5010
#define mo 1000000007
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m;
int da[N][N],f[N][N],g[N][N];
char p[N],s[N];
int main() {
	scanf("%s",p+1);
	n=strlen(p+1);
	For(i,1,n) {
		int ma=0,len=0;
		For(j,i+1,n) {
			if (j+j-i-1>n) break;
			int Len=0;
			if (ma>j) Len=min(ma-j,da[i][i+len-(ma-j)]);
			for (;j+Len<=n&&p[i+Len]==p[j+Len];Len++);
			if (j+Len>ma) ma=j+Len,len=Len;
			da[i][j]=Len;
		}
		For(j,i+1,n) {
			if (j+j-i-1>n) break;
			int Len=da[i][j];
			if (i+Len>=j) da[i][j]=1;
			else if (p[i+Len]<=p[j+Len]) da[i][j]=1;
			else da[i][j]=0;
		}
	}
	memset(f,120,sizeof(f));
	For(j,1,n) f[j][0]=g[j][0]=1;
	For(j,1,n-1) if (p[j+1]!='0') {
		int i=j+1,mi=mo,s=0;
		for (k=j-1;k>=0;k--) {
			for (;i<=n&&(j-k>i-j||j-k==i-j&&!da[k+1][j+1]);i++) {
				f[i][j]=min(f[i][j],mi+1);
				g[i][j]=(g[i][j]+s)%mo;
			}
			mi=min(mi,f[j][k]);
			s=(s+g[j][k])%mo;
		}
		for (;i<=n;i++) {
			f[i][j]=min(f[i][j],mi+1);
			g[i][j]=(g[i][j]+s)%mo;
		}
	}
	int an=mo,s=0,sum=0;
	for (i=n-1;i>=0;i--) s=(s+g[n][i])%mo;
	for (i=n-1;i>=0&&i+20>n;i--) {
		sum+=(p[i+1]-'0')<<(n-i-1);
		if (f[n][i]<1e9) an=min(an,sum+f[n][i]);
	}
	if (an<mo) {
		printf("%d\n%d\n",s,an);
		return 0;
	}
	for (;i>=0;i--) if (f[n][i]<1e9) break;
	sum=0;
	For(j,i+1,n) sum=(sum*2+p[j]-'0')%mo;
	printf("%d\n%d\n",s,(sum+f[n][i])%mo);
	return 0;
}
