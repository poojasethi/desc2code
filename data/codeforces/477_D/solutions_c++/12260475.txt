#include <iostream>
#include <cstdio>
using namespace std;
const int oo=999999999;
const int N=5010;
const int MO=1000000007;
char s[N];
int i,j,ans,n,anss,pp,tmp;
int lcp[N][N],f[N][N],g[N][N];
void init(){
	freopen("c.in","r",stdin);
	freopen("c.out","w",stdout);
}
bool cmp(int a,int b,int c,int d)
{
	if (lcp[a][c]>=b-a+1) return true;
	if (s[a+lcp[a][c]]>s[c+lcp[a][c]]) return false;
	return true;
}
int main(){
	//	init();
	while (scanf("%c",&s[++n])==1);
	n-=2;
	for (i=n;i>=1;i--)
		for (j=i;j>=1;j--)
		{
			if (s[j]==s[i]) lcp[j][i]=lcp[j+1][i+1]+1;
			else lcp[j][i]=0;
		}
	f[1][1]=1;
	for (i=1;i<=n;i++)
		for (j=1;j<=n;j++) g[i][j]=oo;
	g[1][1]=1;
	for (j=1;j<=n;j++)
		for (i=1;i<=j;i++)
		{
			{
				f[i][j+1]=(f[i][j]+f[i][j+1])%MO;
				g[i][j+1]=min(g[i][j+1],g[i][j]);
			}
			if (s[j+1]!='0')
			{
				if (cmp(i,j,j+1,2*j-i+1))
				{
					if (j*2-i+1<=n)
					{
						f[j+1][j*2-i+1]=(f[i][j]+f[j+1][j*2-i+1])%MO;
						g[j+1][j*2-i+1]=min(g[j+1][j*2-i+1],g[i][j]+1);
					}
				}
				else
				{
					if (j*2-i+2<=n)
					{
						f[j+1][j*2-i+2]=(f[j+1][j*2-i+2]+f[i][j])%MO;
						g[j+1][j*2-i+2]=min(g[j+1][j*2-i+2],g[i][j]+1);
					}
				}
			}
		}
	pp=1;
	anss=oo;
	for (i=1;i<=n;i++)
	{
		if (s[n-i+1]=='1')
			tmp=(tmp+pp)%MO;
		if (anss>tmp+g[n-i+1][n]) anss=(tmp+g[n-i+1][n])%MO;
		if (i>=15 && anss!=oo) break;
		pp=(pp+pp)%MO;
	}
	for (i=1;i<=n;i++) {ans=(f[i][n]+ans)%MO;}
	printf("%d\n%d",ans,anss);
}

   	     			  	     		 	 				 	