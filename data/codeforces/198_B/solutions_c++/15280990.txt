#include<iostream>

using namespace std;

const int MAX = 1e5+10;
int n, k;
char wall[2][MAX];
bool mark[2][MAX];
bool can;

void dfs(bool l, int h, int water)
{
	if (h > n || h+k > n) 
	{
		can = true;
		return;
	}

	mark[l][h] = true;

	if (wall[!l][h+k] != 'X' && mark[!l][h+k] == 0)
		dfs(!l, h+k, water+1);
	
	if (wall[l][h+1] != 'X' && mark[l][h+1] == 0)
		dfs(l, h+1, water+1);
	
	if (h-1 > water+1 && wall[l][h-1] != 'X' && !mark[l][h-1])
		dfs(l, h-1, water+1);
}

int main()
{
	cin>>n>>k;
	
	for(int i=1;i<=n;i++)
		cin >> wall[0][i];

	for(int i=1;i<=n;i++)
		cin >> wall[1][i];

	dfs(0,1,0);

	if (can == true) 
		cout<<"YES"<<endl;
	
	else 
		cout<<"NO"<<endl;

	return 0;
}

 			 	   	        		 		      		