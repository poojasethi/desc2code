#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int INF = 0x3f3f3f3f;

int n;
char s1[100005], s2[100005];
int d[26][26];

int main() {
	scanf("%s%s", s1, s2);
	scanf("%d", &n);
	memset(d, 0x3f, sizeof(d));
	for (int i = 0; i < n; i++) {
		char t1[5], t2[5];
		int w;
		scanf("%s%s%d", t1, t2, &w);
		int c1 = t1[0] - 'a', c2 = t2[0] - 'a';
		d[c1][c2] = min(d[c1][c2], w);
	}
	for (int i = 0; i < 26; i++) {
		d[i][i] = 0;
	}
	for (int k = 0; k < 26; k++) {
		for (int i = 0; i < 26; i++) {
			for (int j = 0; j < 26; j++) {
				d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
			}
		}
	}
	int len = strlen(s1);
	if (len != strlen(s2)) {
		puts("-1");
	} else {
		int res = 0;
		for (int i = 0; i < len; i++) {
			int cost = INF, choose = -1;
			for (int j = 0; j < 26; j++) {
				int cur = d[s1[i] - 'a'][j] + d[s2[i] - 'a'][j];
				if (cur < cost) {
					cost = cur;
					choose = j;
				}
			}
			if (cost == INF) {
				res = INF;
				break;
			} else {
				s1[i] = choose + 'a';
				res += cost;
			}
		}
		if (res == INF) {
			puts("-1");
		} else {
			printf("%d\n", res);
			printf("%s\n", s1);
		}
	}
	return 0;
}
