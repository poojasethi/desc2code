#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
using namespace std;

#define OUT(x) printf("%d\n",x)
char S[100000+1000],D[100000+1000];
int pos[26][26];
int dist[26][26];

int main()
{
		scanf("%s%s",S,D);
		int num_dic,INF;
		scanf("%d",&num_dic);
		int l1=strlen(S),l2=strlen(D);
		if(l1!=l2){
				puts("-1");
				return 0;
		}
		memset(pos,60,sizeof(pos));
		memset(dist,60,sizeof(pos));
		INF = pos[0][0];
		for(int i=0;i<num_dic;i++)
		{
				char b1[3],b2[3];
				int wt;
				scanf("%s%s%d",b1,b2,&wt);
				pos[b1[0]-'a'][b2[0]-'a']=min(wt,pos[b1[0]-'a'][b2[0]-'a']);
		}
		for(int i=0;i<26;i++)pos[i][i]=0;
		for(int i=0;i<26;i++)
				for(int j=0;j<26;j++)
						for(int k=0;k<26;k++)
							pos[j][k]=min(pos[j][k],pos[j][i]+pos[i][k]);
		int res=0,i;
		for(i=0;i<l1;i++)
		{
				if(S[i]==D[i])continue;
				int x=S[i]-'a',y=D[i]-'a';
				int pre_len=INF;
				char t=S[i];
				for(int j=0;j<26;j++)
				{
						if(pos[x][j]+pos[y][j] < pre_len)
						{
								pre_len=pos[x][j]+pos[y][j];
								t = j+'a';
						}
				}
				if(pre_len==INF){
						puts("-1");
						return 0;
				}
				res+=pre_len;
				S[i]=t;
		}
		OUT(res);
		puts(S);
}
