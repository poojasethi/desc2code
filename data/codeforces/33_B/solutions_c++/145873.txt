#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

#define INF 0x3f3f3f3f

int main() {
	char s1[100005], s2[100005], ans[100005], c1, c2;
	int g[26][26];
	int n, i, j, k, c, minim, acc;
	
	memset(g,INF,sizeof(g));
	
	gets(s1);
	gets(s2);
	
	if (strlen(s1) != strlen(s2)) {
		puts("-1");
		return 0;
	}
	
	scanf("%d\n",&n);
	for (i=0; i < n; i++) {
		scanf("%c %c %d\n",&c1,&c2,&c);
		g[c1-'a'][c2-'a'] = min(c,g[c1-'a'][c2-'a']);
	}
	
	for (k=0; k < 26; k++) {
		g[k][k] = 0;
	}
	
	for (k=0; k < 26; k++) {
		for (i=0; i < 26; i++) {
			for (j=0; j < 26; j++) {
				if (g[i][k]+g[k][j] < g[i][j]) {
					g[i][j] = g[i][k] + g[k][j];
				}
			}
		}
	}
	
	acc = 0;
	for (i=0; s1[i]; i++) {
		minim = INF;
		for (k=0; k < 26; k++) {
			if (g[s1[i]-'a'][k]+g[s2[i]-'a'][k] < minim) {
				minim = g[s1[i]-'a'][k] + g[s2[i]-'a'][k];
				j = k;
			}
		}
		if (minim == INF) {
			break;
		}
		ans[i] = 'a' + j;
		acc += minim;
	} ans[i] = 0;
	
	if (!s1[i]) {
		printf("%d\n",acc);
		puts(ans);
	}
	else {
		puts("-1");
	}
	
	return 0;
}
