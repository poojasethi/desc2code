#include <stdio.h>
#include <string>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;

int dist[30][30];
const int inf = (int)1e9;
char x[110000];
char y[110000];

int main() {
	int n;
	char a,b;
	int c;

	for ( int i = 0; i < 30; i++ ) { for ( int j = 0; j < 30; j++ ) dist[i][j] = inf; dist[i][i]=0; }

	scanf("%s %s %d\n", x, y, &n);
	if ( strlen(x) != strlen(y) ) { printf("-1\n"); return 0; }

	for ( int i = 0; i < n; i++ ) {
		scanf(" %c %c %d", &a, &b, &c);
		dist[a-'a'][b-'a'] = min(dist[a-'a'][b-'a'],c);
	}

	for ( int k = 0; k < 26; k++ ) for ( int i = 0; i < 26; i++ ) for ( int j = 0; j < 26; j++ )
		dist[i][j] = min ( dist[i][j], dist[i][k]+dist[k][j] );


	int cost = 0;
	string ret;
	char ch;
	int sz = strlen(x);
	for ( int i = 0; i < sz; i++ ) {
		int mn = inf;
		for ( int k = 0; k < 26; k++ )
			if ( dist[x[i]-'a'][k] + dist[y[i]-'a'][k] < mn ) {
				mn = dist[x[i]-'a'][k] + dist[y[i]-'a'][k];
				ch = k+'a';
			}

		if ( mn == inf ) { printf("-1\n"); return 0; }
		cost += mn;
		ret += ch;
	}
	printf("%d\n%s\n", cost, ret.c_str());
}
