#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;

const int maxn = 28, maxt = 1000 * 1000;
int n, a[maxn][maxn], javab = 0;
string s1, s2, s;
vector<pair<pair<int, int>, int> > v;

int main()
{
	char x, y;
	int z, t;
	cin >> s1 >> s2 >> n;
	for(int i = 0; i < n; i++)
	{
		cin >> x >> y >> z;
		v.push_back(make_pair(make_pair(y - 'a', z), x - 'a'));
	}
	for(int i = 0; i < maxn; i++)
		for(int j = 0; j < maxn; j++)
			a[i][j] = maxt;
	for(int i = 0; i < maxn; i++)
	{
		a[i][i] = 0;
		for(int h = 0; h < maxn; h++)
			for(int j = 0; j < (int) v.size(); j++)
				a[i][v[j].first.first] = min(a[i][v[j].first.first], a[i][v[j].second] + v[j].first.second);
	}
	if((int) s1.size() != (int) s2.size())
	{
		cout << -1 << endl;
		return 0;
	}
	for(int i = 0; i < (int) s1.size(); i++)
	{
		z = -1;
		t = maxt; 
		for(int j = 0; j < maxn; j++)
			if(a[s1[i] - 'a'][j] + a[s2[i] - 'a'][j] < t)
			{
				t = a[s1[i] - 'a'][j] + a[s2[i] - 'a'][j];
				z = j;
			}
		if(z == -1)
		{
			cout << -1 << endl;
			return 0;
		}
		javab += t;
		s += (z + 'a');
	}
	cout << javab << endl << s << endl;
	return 0;
}
		
		
			
	
		
	
