#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define INF (1<<28)

int w[26][26];
char a[112345], b[112345], c[112345];
int m, n, ans;

int main(void) {
	int i, j, k;

	for(i = 0; i < 26; i++)
		for(j = 0; j < 26; j++)
			w[i][j] = i == j ? 0 : INF;

	scanf("%s %s %d\n", a, b, &m);

	for(i = 0; i < m; i++) {
		char p[3], q[3];
		scanf("%s %s %d\n", p, q, &j);
		w[*p-'a'][*q-'a'] = min(w[*p-'a'][*q-'a'], j);
	}

	for(k = 0; k < 26; k++)
		for(i = 0; i < 26; i++)
			if(i != k && w[i][k] < INF)
				for(j = 0; j < 26; j++)
					if(w[i][k] + w[k][j] < w[i][j])
						w[i][j] = w[i][k] + w[k][j];

	if(strlen(a) != strlen(b)) printf("-1\n");
	else {
		ans = 0;
		n = strlen(a);

		for(i = 0; i < n; i++) {
			int best = INF;
			for(j = 0; j < 26; j++)
				if(w[a[i]-'a'][j] + w[b[i]-'a'][j] < best)
					c[i] = j+'a', best = w[a[i]-'a'][j] + w[b[i]-'a'][j];
			if(best == INF) {
				printf("-1\n");
				return 0;
			}
			ans += best;
		}
		c[n] = '\0';

		if(ans < INF) printf("%d\n%s\n", ans, c);
		else printf("-1\n");
	}

	return 0;
}
