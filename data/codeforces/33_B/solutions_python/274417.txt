from collections import defaultdict
from sys import exit

s, t, n, INF = raw_input (), raw_input (), input (), 10**9
d = defaultdict (lambda:defaultdict (lambda:INF))
for _ in xrange (n):
    a, b, w = raw_input ().split ()
    d[a][b] = min (d[a][b], int (w))

if len (s) != len (t):
    print -1
    exit (0)

for k in 'abcdefghijklmnopqrstuvwxyz':
    for i in 'abcdefghijklmnopqrstuvwxyz':
        for j in 'abcdefghijklmnopqrstuvwxyz':
            d[i][j] = min (0 if i == j else INF, d[i][k] + d[k][j], d[i][j])
         
ans, cost = '', 0   
for a, b in zip (s, t):
    c = a
    for k in 'abcdefghijklmnopqrstuvwxyz':
        if d[a][k] + d[b][k] < d[a][c] + d[b][c]:
            c = k
    if d[a][c] + d[b][c] >= INF:
        print -1
        exit (0)
    cost += d[a][c] + d[b][c]
    ans += c
                
print cost
print ans
