class S:
    def __init__(self, i, sz):
        self.idx = i; self.size = sz
    def __cmp__(self, other):
        return self.size - other.size
args = raw_input().split()
n = int(args[0]); m = int(args[1]); x = int(args[2]); y = int(args[3])
args = raw_input().split()
soldiers = []
for i in range(n):
    soldiers.append(S(i + 1, int(args[i])))

args = raw_input().split()
vests = []
for i in range(m):
    vests.append(S(i + 1, int(args[i])))
soldiers = sorted(soldiers); vests = sorted(vests)
sol = set()
j = 0
for i in range(n):
    prevj = j
    if j >= m:
        break
    while j < m and vests[j].size < soldiers[i].size - x:
        j += 1
    if j < m and vests[j].size <= soldiers[i].size + y:
        sol.add((soldiers[i].idx, vests[j].idx))
        j += 1
print len(sol)
for s in sol:
    print str(s[0]) + " " + str(s[1])