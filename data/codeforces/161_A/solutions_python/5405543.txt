from Queue import * # Queue, LifoQueue, PriorityQueue
from bisect import * #bisect, insort
from datetime import * 
from collections import * #deque, Counter,OrderedDict,defaultdict
import calendar
import heapq
import math
import copy
import itertools
myread = lambda : map(int,raw_input().split())
def solver():
    n,m,x,y = myread()
    size = myread()
    vests = myread()
    ans_list = []
    now_vest = 0
    for i in range(n):
        while now_vest < m:
            if size[i] - x <= vests[now_vest] <= size[i] + y:
                #OK
                ans_list.append((i+1,now_vest+1))
                now_vest += 1
                break
            elif vests[now_vest] > size[i] + y:
                break
            else:
                now_vest += 1
    
    print len(ans_list)

    for i in range(len(ans_list)):
        print ans_list[i][0],ans_list[i][1]

    





if __name__ == "__main__":
    solver()
    
