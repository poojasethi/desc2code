#include <map>
#include <set>
#include <list>
#include <ctime>
#include <cmath>
#include <queue>
#include <stack>
#include <bitset>
#include <vector>
#include <cstdio>
#include <string>
#include <cstring>
#include <sstream>
#include <iomanip>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;
struct work {
    int k,v;
    work ():v(0),k(0) {}
    work (int k,int v):v(v),k(k) {}
    bool operator<(const work &t)const {return v>t.v;}
};
priority_queue <work> h;
int a[25],b[25],p[25];
long long c[25];
int main ( ) {
	int n,m,i,j,k;
	scanf("%d%d",&n,&m);
	for (i=0;i<n;i++) scanf("%d",&a[i]);
	for (i=0;i<n;i++) scanf("%d",&b[i]);
	long long s=0,t=0,y;
	int r=0;
	for (i=0,j=0;i<n*3;i++,j=(j<n-1)?(j+1):0) {
		r--;
		if (!p[j]++) h.push(work(j,a[j]-b[j]));
		s+=b[j];
		if (r<0) {
			work t=h.top();
			if (!--p[t.k]) h.pop();
			s+=t.v;r+=2;
		}
		if ((i+1)%n==0) c[i/n]=s;
	}
	y=(c[2]-c[0])*(m/2-1)+c[1];
	printf("%I64d\n",y);
	return 0;
}
/*
Sample test(t)

input

2 6
1 2
2 1

output

12

input

1 10000000
2
3

output

25000000
*/
