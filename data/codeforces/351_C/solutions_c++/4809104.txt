#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
const int MaxN=22;
int n,m;
int a[MaxN],b[MaxN];
long long dp[MaxN][MaxN][MaxN];
long long ans[MaxN][MaxN],s[MaxN][MaxN];
void mul(long long a[MaxN][MaxN],long long b[MaxN][MaxN]) {
	static long long T[MaxN][MaxN];
	memset(T,0x3f,sizeof(T));
	for(int i = 0; i <= n; i++)
		for(int j = 0; j <= n; j++)
			for(int k = 0; k <= n; k++)
				T[i][j] = min(T[i][j],a[i][k] + b[k][j]);
	for(int i = 0; i <= n; i++)
		for(int j = 0; j <= n; j++)
			a[i][j] = T[i][j];
}


int main(){
	scanf("%d%d",&n,&m);
	for(int i = 1; i <= n; i++) 
		scanf("%d",a+i);
	for(int i = 1; i <= n; i++) 
		scanf("%d",b+i);
	memset(dp,0x3f,sizeof(dp));
	for(int k = 0; k <= n; k++){
		dp[k][0][k]=0;
		for(int i = 0; i < n; i++)
			for(int j = 0; j <= n; j++){
				dp[k][i+1][j+1] = min(dp[k][i+1][j+1],dp[k][i][j]+a[i+1]);
				if(j-1>=0)
					dp[k][i+1][j-1] = min(dp[k][i+1][j-1],dp[k][i][j]+b[i+1]);
			}
	}
	
	memset(ans,0x3f,sizeof(ans));
	for(int i = 0; i <= n; i++) 
		ans[i][i]=0;

	for(int i = 0; i <= n; i++)
		for(int j = 0;j <= n; j++)
			s[i][j]=dp[i][n][j];

	while(m){
		if(m&1) mul(ans,s);
		mul(s,s);
		m>>=1;
	}

	printf("%I64d\n",ans[0][0]);
	return 0;
}