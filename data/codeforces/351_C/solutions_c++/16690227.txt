#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

const long long inf = 1000000000000;

int k;

struct matrix
{
  vector <vector <long long> > t;
  matrix()
  {
    t.resize(k+1);
    for(int i=0; i<=k; i++) t[i].resize(k+1);
  }
};

matrix operator * (matrix A, matrix B)
{
  matrix res;
  for(int i=0; i<=k; i++) for(int j=0; j<=k; j++)
  {
    res.t[i][j] = inf;
    for(int l=0; l<=k; l++) res.t[i][j] = min(res.t[i][j], A.t[i][l]+B.t[l][j]);
  }
  return res;
}

int n, m;
vector <int> a;
vector <int> b;

vector <long long> f(int s)
{
  vector <long long> v;
  v.resize(k+1,inf);
  v[s]=0;
  for(int i=0; i<n; i++)
  {
    vector <long long> tmp = v;
    for(int j=0; j<=k; j++) v[j]=inf;
    for(int j=0; j<=k; j++)
    {
      if(j+1<=k) v[j+1]=min(v[j+1],tmp[j]+a[i]);
      if(j-1>=0) v[j-1]=min(v[j-1],tmp[j]+b[i]);
    }
  }
  return v;
}

int main()
{
  cin>>n>>m;
  a.resize(n);
  b.resize(n);
  for(int i=0; i<n; i++) cin>>a[i];
  for(int i=0; i<n; i++) cin>>b[i];
  k = 2*n;
  matrix T;
  for(int i=0; i<=k; i++)
  {
    T.t[i] = f(i);
  }
  matrix res;
  res = T;
  m--;
  while(m>0)
  {
    if(m%2) res = res * T;
    m/=2;
    T = T * T;
  }
  cout<<res.t[0][0];
  return 0;
}
