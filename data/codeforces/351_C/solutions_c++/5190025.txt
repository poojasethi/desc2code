#include <stdio.h>
#include <memory.h>
#include <algorithm>
using namespace std;
#define M 42
#define Min(a,b) (a<b?a:b)
typedef long long ll;

int a[M],b[M];
int res[M][M],d[M][M];
int n;

void calc(int a[M][M],int b[M][M]) {
    int i,j,k;
    int c[M][M];
    memset(c,120,sizeof(c));
    for(i=0;i<=2*n;i++) {
        for(j=0;j<=2*n;j++) for(k=0;k<=2*n;k++) c[i][k]=Min(c[i][k],(ll)a[i][j]+b[j][k]);
    }
    memcpy(a,c,sizeof(c));
}

int main() {
//  freopen("c.in","r",stdin);
    int m,i,j,k;
    scanf("%d %d",&n,&m);
    for(i=1;i<=n;i++) scanf("%d",&a[i]);
    for(i=1;i<=n;i++) scanf("%d",&b[i]);
    memset(d,120,sizeof(d));
    for(i=0;i<=2*n;i++) d[i][i]=0;
    for(i=1;i<=n;i++) {
        memcpy(res,d,sizeof(d));
        memset(d,120,sizeof(d));
        for(j=0;j<=2*n;j++) {
            for(k=0;k<=2*n;k++) {
                if(k) d[j][k-1]=Min(d[j][k-1],res[j][k]+b[i]);
                if(k<2*n) d[j][k+1]=Min(d[j][k+1],res[j][k]+a[i]);
            }
        }
    }
    memset(res,120,sizeof(res));
    res[0][0]=0;
    while(m) {
        if(m&1) calc(res,d);
        calc(d,d);
        m/=2;
    }
    printf("%d\n",res[0][0]);
    return 0;
}
