#include<cstdio>
#include<cstring>

int dp[22][22],n,m,a[22],b[22],A[22][22],ans[22][22];

inline void checkmin(int &a,int b) { if(a==-1||a>b) a=b;}

void init()
{
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)
	  scanf("%d",&a[i]);
	for(int i=1;i<=n;i++)
	  scanf("%d",&b[i]);
}

void prework()
{
	for(int i=0;i<=n;i++)
	{
		memset(dp,-1,sizeof(dp));
		dp[0][i]=0;
		for(int k=0;k<n;k++)
		  for(int j=0;j<=n;j++)
			if(dp[k][j]!=-1)
			{
				if(j+1<=n)
				  checkmin(dp[k+1][j+1],dp[k][j]+a[k+1]);
				if(j-1>=0)
				  checkmin(dp[k+1][j-1],dp[k][j]+b[k+1]);
			}
		for(int k=0;k<=n;k++)
		  A[i][k]=dp[n][k];
	}
}

void mul(int A[][22],int B[][22],int C[][22])
{
	static int ret[22][22];
	for(int i=0;i<=n;i++)
	  for(int j=0;j<=n;j++)
	  {
		 ret[i][j]=-1;
		 for(int k=0;k<=n;k++)
		   if(A[i][k]!=-1&&B[k][j]!=-1)
			checkmin(ret[i][j],A[i][k]+B[k][j]);
	  }
	for(int i=0;i<=n;i++)
	  for(int j=0;j<=n;j++)
		C[i][j]=ret[i][j];
}

void solve()
{
	memset(ans,-1,sizeof(ans));
	for(int i=0;i<=n;i++)
		ans[i][i]=0;
	while(m)
	{
		if(m&1)
		  mul(ans,A,ans);
		mul(A,A,A);
		m>>=1;
	}
	printf("%d\n",ans[0][0]);
}
int main()
{
	init();
	prework();
	solve();
	return 0;
}
