//In the name of God
#include <algorithm>
#include <iostream>
using namespace std;

typedef long long ll;
const int N = 44, oo = 2e9 + 2;
int n, m, a[N], b[N];
ll dp[N][N], ans[N][N];

void merge(ll a[][N], ll b[][N], ll res[][N]) {
	ll c[N][N];
	fill(c[0], c[N], oo);
	for (int i = 0; i <= n; i++)
		for (int j = 0; j <= n; j++)
			for (int k = 0; k <= n; k++)
				c[i][j] = min(c[i][j], a[i][k] + b[k][j]);
	for (int i = 0; i <= n; i++)
		for (int j = 0; j <= n; j++)
			res[i][j] = c[i][j];
}
	
int main() {
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 0; i < n; i++)
		cin >> b[i];
	for (int i = 0; i <= n; i++)
		for (int j = 0; j <= n; j++)
			dp[i][j] = ans[i][j] = (i != j) * oo;
	for (int i = 0; i < n; i++) {
		ll x[N][N];
		for (int j = 0; j <= n; j++)
			for (int k = 0; k <= n; k++)
				if (j + 1 == k)
					x[j][k] = a[i];
				else if (j - 1 == k)
					x[j][k] = b[i];
				else
					x[j][k] = oo;
		merge(dp, x, dp);
	}
	for (int i = 0; i < 30; i++) {
		if (m & 1 << i)
			merge(ans, dp, ans);
		merge(dp, dp, dp);
	}
	cout << ans[0][0] << '\n';
	return 0;
}
