#include <stdio.h>
#include <memory.h>
#include <algorithm>
using namespace std;
#define M 44
#define Min(a,b) (a<b?a:b)
#define inf 2000000001
typedef __int64 ll;

int n,m;
int a[M],b[M];
int d[M][M],res[M][M],ans[M][M],c[M][M];

void Input() {
	int i,j,k;
	scanf("%d %d",&n,&m);
	for(i=1;i<=n;i++) scanf("%d",&a[i]);
	for(i=1;i<=n;i++) scanf("%d",&b[i]);
}

void Clr(int d[M][M]) {
	int i,j;
	for(i=0;i<=2*n;i++) for(j=0;j<=2*n;j++) d[i][j]=inf;
}

void calc(int a[M][M],int b[M][M]){
	int i,j,k;
	Clr(c);
	for(i=0;i<=2*n;i++) for(j=0;j<=2*n;j++) for(k=0;k<=2*n;k++) c[i][k]=Min(c[i][k],(ll)a[i][j]+b[j][k]);
	memcpy(a,c,sizeof(c));
}

void Solve() {
	int i,j,k;
	Clr(d);
	for(i=0;i<=2*n;i++) d[i][i]=0;
	for(i=1;i<=n;i++){
		memcpy(res,d,sizeof(d));
		Clr(d);
		for(j=0;j<=2*n;j++) for(k=0;k<=2*n;k++){
			if(k!=0) d[j][k-1]=Min(d[j][k-1],res[j][k]+b[i]);
			if(k!=2*n) d[j][k+1]=Min(d[j][k+1],res[j][k]+a[i]);
		}
	}
	Clr(ans);
	ans[0][0]=0;
	while(m){
		if(m&1) calc(ans,d);
		calc(d,d);
		m/=2;
	}
	printf("%d\n",ans[0][0]);
}

int main() {
//	freopen("204_C.in","r",stdin);
	Input();
	Solve();
	return 0;
}
