#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<queue>
#define mk make_pair
using namespace std;
long long i,j,k,l,n,m,sum,an,K;
const long long N=51;
long long va[N],vb[N];
typedef long long arr[N][N];
arr a,b,c,d;
void cheng(arr &a,arr b)
{
    memset(c,2,sizeof(c));
    for (long long i=0;i<=K;i++)
        for (long long j=0;j<=K;j++)
            for (long long k=0;k<=K;k++)
            c[i][j]=min(c[i][j],a[i][k]+b[k][j]);
    memcpy(a,c,sizeof(a));
}
int main()
{
    scanf("%I64d%I64d",&n,&m);K=2*n;
    for (long long i=1;i<=n;i++) scanf("%I64d",&va[i]),va[n+i]=va[i];
    for (long long i=1;i<=n;i++) scanf("%I64d",&vb[i]),vb[n+i]=vb[i];
    memset(b,2,sizeof(b));
    for (long long i=0;i<=K;i++) b[i][i]=0;
    for (long long i=1;i<=K;i++)
    {
        memset(d,2,sizeof(d));
        for (long long j=0;j<=K;j++)
        {
            if (j+1<=K)d[j][j+1]=va[i];
            if (j)       d[j][j-1]=vb[i];
        }
        cheng(b,d);
    }
    memset(a,2,sizeof(a));
    a[0][0]=0;
    m/=2;
   // for (long long i=1;i<=m;i++) 
   // cheng(a,b);
    while (m)
    {
        if (m&1) cheng(a,b);
        cheng(b,b);
        m/=2;
    }
    printf("%I64d\n",a[0][0]);
    //system("pause");
    return 0;
}
    
    
