#include<bits/stdc++.h>

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define all(c) (c).begin(),(c).end()
#define mp make_pair
#define pb push_back
#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define dbg(x) cerr<<__LINE__<<": "<<#x<<" = "<<(x)<<endl

using namespace std;

typedef long long ll;
typedef vector<ll> vi;
typedef pair<int,int> pi;
const ll inf = 1e18;

typedef vector<vi> M;
inline M operator*(const M & a, const M &b){
	M c(a.size(), vi(b[0].size(), inf));
	rep(i, c.size()) rep(j, c[0].size()) rep(k, a[0].size())
		c[i][j] = min(c[i][j], a[i][k] + b[k][j]);
	return c;
}
inline M pow(M a, ll m){
	M res = a; m--;
	for(; m; m /= 2){
		if(m & 1) res = res * a;
		a = a * a;
	}
	return res;
}
int n, m, a[20], b[20];
int main(){
	cin >> n >> m;
	rep(i, n) cin >> a[i];
	rep(i, n) cin >> b[i];
	
	M A(n + 1, vi(n + 1));
	
	rep(s, n + 1) rep(t, n + 1){
		
		static int dp[21][21];
		rep(i, n + 1) rep(j, n + 1) dp[i][j] = 1e9;
		dp[0][s] = 0;
		rep(i, n) rep(j, n + 1) if(dp[i][j] < 1e9){
			if(j + 1 <= n) dp[i + 1][j + 1] = min(dp[i + 1][j + 1], dp[i][j] + a[i]);
			if(j - 1 >= 0) dp[i + 1][j - 1] = min(dp[i + 1][j - 1], dp[i][j] + b[i]);
		}
		A[s][t] = dp[n][t];
	}
	A = pow(A, m);
	cout << A[0][0] << endl;
	
	return 0;
}
