#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<ctime>
#include<map>
#include<string>
#include<vector>
#include<set>

using namespace std;
#define For(i,l,r) for (int i = l; i <= r; ++i)
#define Cor(i,l,r) for (int i = l; i >= r; --i)
#define Fill(a,b) memset(a,b,sizeof(a))
#define FI first
#define SE second
#define MP make_pair
#define PII pair<int,int>
#define flt double
#define INF (0x3f3f3f3f)
#define MaxN 1020304
#define MaxNode 1020304
#define MD 1000000007

vector<int> nx[26][2020]; int n,m,a[MaxN]; PII nx2[2020][26],g[2020],f[2020];
string s[2020]; 
int main() {
	//freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
	cin >> n;
	For(i,1,n) cin >> s[i];
	Cor(i,n,1) {
		For(k,0,25)nx[k][i].resize(s[i].length() + 10);
		For(j,0,25) nx[j][i][s[i].length() - 1] = INF;
		Cor(j,s[i].length() - 1,1) For(k,0,25) nx[k][i][j - 1] = (k == s[i][j] - 'a') ? (j) : (nx[k][i][j]);
	}
	cin >> m;
	For(i,1,m) scanf("%d",&a[i]); For(k,0,25) nx2[m][k] = MP(INF,INF);
	Cor(i,m - 1,0) For(k,0,25) {
			if(i==0){
				int z=i;
			}
		nx2[i][k] = nx2[i + 1][k];
		if(nx[k][a[i + 1]][0]< INF) nx2[i][k] = MP(i + 1,nx[k][a[i + 1]][0]);
		if(s[a[i + 1]][0]-'a'==k) nx2[i][k] = MP(i + 1,0);
	}
	string S; cin >> S; For(i,0,S.length() - 1) g[i] = nx2[0][S[i]-'a'];
	For(i,2,S.length() + 1) {
			if(i==3){
				int z=i;
			}
			PII Min = g[i - 2];
		For(j,i - 1,S.length() - 1) {
			if(Min.FI==INF)f[j]=MP(INF,INF); else {
				f[j] = nx2[Min.FI][S[j]-'a'];
				if (nx[S[j]-'a'][a[Min.FI]][Min.SE] < INF) f[j] = MP(Min.FI,nx[S[j]-'a'][a[Min.FI]][Min.SE]);
			}
			Min = min(Min,g[j]);
			g[j] = f[j];
		}
		if (Min == MP(INF,INF)) { cout << i - 2 << endl; return 0; }
	}
	cout << S.length() << endl;
	return 0;
}

