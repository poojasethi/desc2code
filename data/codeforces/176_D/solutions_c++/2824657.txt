#include<cstdio>
#include<cstring>

int Str[1100000],Next[1100000][26],n,m,a[2100],Len,N,Pat[2100],Beg[2100],End[2100],Last;

struct pt{int x,y;} INF,Nex[2100][26],Ans[2100],f[2100][2100];

char Chr;

void read(int&x)
{	for(;(Chr=getchar())<'0';);
	for(x=Chr-'0';(Chr=getchar())>='0';x=x*10+Chr-'0');	
}

void reads(int x)
{	for(Beg[x]=Last;(Chr=getchar())<'a';);
	for(Str[Last++]=Chr-'a';(Chr=getchar())>='a';Str[Last++]=Chr-'a');
	End[x]=Last;
}

void reads2()
{	for(;(Chr=getchar())<'a';);
	for(Pat[N++]=Chr-'a';(Chr=getchar())>='a';Pat[N++]=Chr-'a');
}

pt Find(pt q,int b)
{	if(q.x==m)return q;
    if(Next[Beg[a[q.x]]+q.y+1][b]<End[a[q.x]])
		return (pt){q.x,Next[Beg[a[q.x]]+q.y+1][b]-Beg[a[q.x]]};
	return Nex[q.x+1][b];
}

bool operator < (pt a,pt b){return a.x!=b.x?a.x<b.x:a.y<b.y;}

pt Min(pt a,pt b){return a<b?a:b;}

int main()
{	int i,j,k;
	read(n);
	for(i=0;i<n;i++)reads(i);
	for(i=0;i<26;i++)Next[Last][i]=Last;
	for(i=Last-1;i>=0;i--)
	{	memcpy(Next[i],Next[i+1],sizeof Next[i+1]);
		Next[i][Str[i]]=i;
	}
	read(m);
	for(i=0;i<m;i++){read(a[i]);a[i]--;}
	for(i=0;i<26;i++)Nex[m][i]=(pt){m,0};
	for(i=m-1;i>=0;i--)
	{	memcpy(Nex[i],Nex[i+1],sizeof Nex[i]);
		for(j=0;j<26;j++)
			if(Next[Beg[a[i]]][j]<End[a[i]])
				Nex[i][j]=(pt){i,Next[Beg[a[i]]][j]-Beg[a[i]]};
	}
	INF=(pt){m,0};
	reads2();
	for(i=1;i<=N;i++)Ans[i]=INF;
	for(i=0;i<N;i++)
	{
		f[i][0]=(pt){0,-1};
		for(j=1;j<=N;j++)
		{
			if(i)
			{	f[i][j]=Min(f[i-1][j],Find(f[i-1][j-1],Pat[i]));
				if(f[i][j]<Ans[j])Ans[j]=f[i][j];
			}
			else if(j==1)
			{   f[i][j]=Find((pt){0,-1},Pat[i]);
				if(f[i][j]<Ans[j])Ans[j]=f[i][j];
			}
			else f[i][j]=INF;
  //printf("%d %d %d %d\n",i,j,f[i][j].x,f[i][j].y);
		}
	}
    for(i=N;i>0;i--)if(Ans[i]<INF)break;
	printf("%d\n",i);
	return 0;
}
