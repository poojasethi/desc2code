#include <cstdio>
#include <algorithm>
#include <cstring>
#define N 2005
#define M 1010000
#define A 26
#define PII pair<int, int>
#define MP make_pair
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int n, p, m, c[N], fail[A][N], len[N], last[A], *next[A][N], ibuf[A][M], has[A][N], tl;
char *s[N], buf[M], t[N];
PII dp[N][N];

int main(){
	scanf("%d", &n);
	FI(i, 1, n){
		s[i] = buf + p;
		fi(j, 0, A) next[j][i] = ibuf[j] + p;
		
		scanf("%s", s[i]);
		len[i] = strlen(s[i]);
		p += len[i] + 1;
		
		fi(j, 0, A) last[j] = -1;
		FD(j, len[i] - 1, 0){
			fi(k, 0, A) next[k][i][j] = last[k];
			last[s[i][j] - 'a'] = j;
			has[s[i][j] - 'a'][i] = 1;
		}
	}
	
	fi(i, 0, A) last[i] = -1;
	scanf("%d", &m);
	FI(i, 1, m) scanf("%d", &c[i]);
	
	FD(i, m, 0){
		fi(j, 0, A) fail[j][i] = last[j];
		fi(j, 0, A) if(has[j][c[i]]) last[j] = i;
	}
	
	scanf("%s", t);
	tl = strlen(t);
	FI(i, 0, tl) FI(j, 0, tl) dp[i][j] = MP(N, 0);
	FI(i, 0, tl) dp[i][0] = MP(0, 0);
	
	FI(i, 1, tl) FI(j, 1, i){
		int x = dp[i - 1][j - 1].first, y = dp[i - 1][j - 1].second;
		if(x == N) continue;
		dp[i][j] = dp[i - 1][j];
		
		if(x && next[t[i - 1] - 'a'][c[x]][y] > -1){
			dp[i][j] = min(dp[i][j], MP(x, next[t[i - 1] - 'a'][c[x]][y]));
		}else if(fail[t[i - 1] - 'a'][x] > -1){
			int nx = fail[t[i - 1] - 'a'][x];
			if(s[c[nx]][0] == t[i - 1]) dp[i][j] = min(dp[i][j], MP(nx, 0));
			else dp[i][j] = min(dp[i][j], MP(nx, next[t[i - 1] - 'a'][c[nx]][0]));
		}
	}
	
	FD(i, tl, 0) if(dp[tl][i] < MP(N, 0)){
		printf("%d\n", i);
		break;
	}
	
	scanf("\n");
}
