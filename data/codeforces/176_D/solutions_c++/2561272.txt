#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;
#define mp make_pair
#define pii pair<int,int>
#define rep(i,n) for (int i=0;i<n;i++)
typedef int tp[26];
tp pl[1001000],*cur=pl,*dp1[2010],nt,p1[2010];
pii p2[2010][26],nxt[26],dp[2010][2010];
char s[1001000];
int n,m,len,ans,l[2010],h[2010];
pii find(pii x,int d) {
	int p=x.first,q=x.second;
	if (p>=m) return x;
	if ((++q)==l[h[p]]) q=0,p++;
	if (p>=m) return mp(m,-1);
	if (dp1[h[p]][q][d]!=-1) return mp(p,dp1[h[p]][q][d]);
	else return p2[p+1][d];
}
int main() {
	scanf("%d",&n);
	rep(i,n) {
		scanf("%s",s);len=l[i]=strlen(s);
		dp1[i]=cur;
		rep(j,26) nt[j]=-1;
		for (int j=len-1;j>=0;j--) nt[s[j]-'a']=j,memcpy(dp1[i][j],nt,sizeof(nt));
		memcpy(p1[i],nt,sizeof(nt));
		cur+=len;
	}
	scanf("%d",&m);rep(i,m) scanf("%d",h+i),h[i]--;
	rep(j,26) p2[m][j]=nxt[j]=mp(m,-1);
	for (int i=m-1;i>=0;i--) rep(j,26)
		{ if (p1[h[i]][j]!=-1) nxt[j]=mp(i,p1[h[i]][j]);p2[i][j]=nxt[j];}
	scanf("%s",s);len=strlen(s);
	rep(i,len+1) rep(j,len+1) dp[i][j]=mp(m,-1);
	dp[0][0]=mp(0,-1);
	rep(i,len) {
		rep(j,len+1) dp[i+1][j]=dp[i][j];
		rep(j,len) dp[i+1][j+1]=min(dp[i+1][j+1],find(dp[i][j],s[i]-'a'));
		rep(j,len+1) if (dp[i+1][j].first<m) ans=max(ans,j);
	}
	printf("%d\n",ans);
}