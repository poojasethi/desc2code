#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <iostream>
#include <string>
#include <cstring>
#define Rep(i,j,k) for (int i=(j); i<=(k); i++)
#define Repd(i,j,k) for (int i=(j); i>=(k); i--)
using namespace std;

int n,p[3000],q[3000],next[1003000][26],c[26],m,a[3000];
char s[1003000],t[3000];

struct T{
	int x,y;
	T(){} T(int xx,int yy):x(xx),y(yy){}
	bool operator<(const T &b)const{ return x<b.x || x==b.x && y<b.y; }
} F[2010],Next[2010][26],C[26];

void update(T &x, T y){
	if (x.x==-1 || y<x)
		x=y;
}

int main(){
	scanf("%d",&n);
	memset(p,0,sizeof(p));
	p[1]=1;
	Rep(i,1,n){
		scanf("%s",s+p[i]);
		p[i+1]=p[i]+strlen(s+p[i]);
		q[i]=p[i+1]-1;
	}
	memset(next,0xff,sizeof(next));
	Rep(i,1,n){
		memset(c,0xff,sizeof(c));
		Repd(j,q[i],p[i]){
			c[s[j]-'a']=j;
			Rep(k,0,25) next[j][k]=c[k];
		}
	}
	
	scanf("%d",&m);
	Rep(i,1,m) scanf("%d",a+i);
	memset(C,0xff,sizeof(C));
	Repd(i,m,1){
		Rep(k,0,25)
			if (next[p[a[i]]][k]!=-1)
				C[k].x=i, C[k].y=next[p[a[i]]][k];
		Rep(k,0,25)
			Next[i][k]=C[k];
	}
	
	scanf("%s",t+1); 
	int len=strlen(t+1),now=0;	
	memset(F,0xff,sizeof(F));	
	Rep(i,0,len-1){
		Repd(j,now,1){
			if (F[j].y<q[a[F[j].x]] && next[F[j].y+1][t[i+1]-'a']!=-1){
				update(F[j+1],T(F[j].x, next[F[j].y+1][t[i+1]-'a']));
				if (j==now)
					now++;
			}else{
				if (F[j].x!=m && Next[F[j].x+1][t[i+1]-'a'].x!=-1){
					update(F[j+1],Next[F[j].x+1][t[i+1]-'a']);
					if (j==now)
						now++;
				}
			}
		}
		//update j=0
		if (Next[1][t[i+1]-'a'].x!=-1){
			update(F[1],Next[1][t[i+1]-'a']);
			if (now==0)
				now=1;
		}
	}
	
	printf("%d\n",now);

    return 0;
}
