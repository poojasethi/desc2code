#include <algorithm>
#include <stdio.h>
#include <memory.h>
#include <queue>
#include <cmath>
#include <set>
#include <map>
#include <string.h>
#include <string>
#include <ctype.h>
#include <ctime>
#include <bitset>
#include <vector>
#include <cassert>

using namespace std;

#define eprintf(...) fprintf(stderr, __VA_ARGS__)
template <class T> inline void chkmin(T &a, T b) { if (a>b) a=b; }
template <class T> inline void chkmax(T &a, T b) { if (a<b) a=b; }

typedef long long INT;
typedef pair<int, int> pii;

const int N=2005,M=N*500;
int next[M][26],to[N][26],o[26],w[N],id[N],f[N],g[N],n,m,L,ans,x,y;
char s[M];

int find(char c, int x, int y, int &f, int &g) {
	if (next[w[id[x]]+y][c]) f=x, g=next[w[id[x]]+y][c];
	else f=to[x][c], g=next[w[id[f]]][c];
}

int main() {
	int i,j;
	scanf("%d",&n);
	for (i=1;i<=n;i++){
		memset(o, 0, sizeof(o));
		scanf("%s", s+1);
		L=strlen(s+1);
		w[i+1]=w[i]+L+1;
		for (j=L; j>=0; j--) {
			memcpy(next[w[i]+j],o,sizeof(o));
			if (j) o[s[j]-97]=j;
		}
	}
	scanf("%d",&m); 
	for (i=1; i<=m; i++) scanf("%d",&id[i]);
	memset(o, 0, sizeof(o));
	for (i=m; i; i--) {
		memcpy(to[i], o, sizeof(o));
		for (j=0; j<26; j++) if (next[w[id[i]]][j]) o[j]=i;
	}
	scanf("%s",s);
	n=strlen(s); f[0]=1;
	for (i=0; i<n; i++, f[ans+1]?ans++:0) for (j=ans; j>=0; j--) {
		find(s[i]-97, f[j], g[j], x, y);
		if (x && (!f[j+1] || x*M+y<f[j+1]*M+g[j+1])) f[j+1]=x, g[j+1]=y;
	}
	printf("%d\n",ans); return 0;
}