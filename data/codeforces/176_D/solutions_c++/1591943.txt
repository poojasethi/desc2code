#include <cstdio>
#include <cstring>
#include <algorithm>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define CLR(a,x) memset(a, x, sizeof(a))
#define N 2005
#define M 1000005
#define INF 2147483647
using namespace std;

int n, m, L, ret, len, t = 0;
int id[N], lenb[N], dp[N][N];
int SPACE[M*26];
int *ps[26][N], ps2[N][26];
char tmp[M], s[N];

int sum(int p, int c){
	int x, y, r;
	if (p == -1) return 0;
	
	x = p / 1000000;
	y = p % 1000000;
	
	if (y < lenb[id[x]]-1) r = ps[c][id[x]][y];
	else r = ps[c][id[x]][lenb[id[x]]-1];
	if (x) r += ps2[x-1][c];

	return r;
}

int next(int p, int c){
	int ret = INF, off = sum(p, c);
	for (int i=p+1, j=L-1, k; j>=i;){
		k = i + (j - i) / 2;
		if (sum(k, c) > off) ret = k, j = k - 1;
		else i = k + 1;
	}
	return ret;
}

int main(){
	scanf("%d", &n);
	FOR(i,0,n){
		scanf("%s", tmp);
		lenb[i] = strlen(tmp);
		
		FOR(j,0,26){
			ps[j][i] = &SPACE[t];
			FOR(k,0,lenb[i]){
				if (k) ps[j][i][k] = ps[j][i][k-1] + (tmp[k]-'a' == j);
				else ps[j][i][k] = (tmp[k]-'a' == j);
			}
			t += lenb[i];
		}
	}
	
	scanf("%d", &m);
	L = m * 1000000;
	FOR(i,0,m){
		scanf("%d", &id[i]), id[i]--;

		FOR(j,0,26){
			if (i) ps2[i][j] = ps2[i-1][j] + ps[j][id[i]][lenb[id[i]]-1];
			else ps2[i][j] = ps[j][id[i]][lenb[id[i]]-1];
		}
	}
	
	scanf("%s", s);
	len = strlen(s);
	
	FOE(i,0,len)
	FOE(j,0,len) dp[i][j] = INF;
	dp[0][0] = -1;
	
	FOR(i,0,len)
	FOE(j,0,len)
	if (dp[i][j] < INF){
		int p = next(dp[i][j], s[i] - 'a');
		dp[i+1][j] = min(dp[i+1][j], dp[i][j]);
		dp[i+1][j+1] = min(dp[i+1][j+1], p);
	}
	
	ret = 0;
	FOE(i,0,len)
	if (dp[len][i] < INF) ret = i;
	printf("%d\n", ret);
	return 0;
}
