#include <bits/stdc++.h>
#define fi first
#define se second
#define fore(i,l,r) for (int i=(l);i<=(r);i++)
using namespace std;
typedef long long ll;
typedef double lf;
typedef pair<int,int> pii;
typedef lf ty;
const string YY="xyz";
void IO(){
	freopen((YY+".in").c_str(),"r",stdin);
	freopen((YY+".out").c_str(),"w",stdout);
}

const int orin=500,maxn=orin+5;
int X,c[maxn];
vector<int> E[maxn],W[maxn];
int saber;
const int MAXM=orin+1 +1,MAXN=orin+1 +1;
ty a[MAXM][MAXN];int M,N;
void dfs(int x,int fa,int cur){
	a[saber][x]=-1;
	int l=E[x].size();
	for (int i=0;i<l;i++)
		if (E[x][i]!=fa && cur+W[x][i]<=X)
			dfs(E[x][i],x,cur+W[x][i]);
}

const lf eps=1e-9,half=0.5;
int L[MAXM],R[MAXN];
int xyz[MAXN],xo,*ND;
void pivot(int l,int e){
	ty *al=a[l];ty tmp=al[e];
	al[e]=1;
	xo=0;
	fore(j,0,N){
		al[j]/=tmp;
		if (al[j]>eps || al[j]<-eps) xyz[xo++]=j;
	}
	ND=xyz+xo;
	fore(i,0,M)
		if (i!=l){
			ty k=a[i][e];
			if (k>eps || k<-eps){
				ty *ai=a[i];ai[e]=0;
				for (int *p=xyz;p<ND;p++)
					ai[*p]-=k*al[*p];
			}
		}
	
	swap(L[l],R[e]);
}
ty simplex(){
	while (1){
		int e=0;
		fore(j,1,N)
			if (a[0][j]<-eps){
				e=j;break;
			}
		if (!e) break;
		int l=0;ty MN;
		fore(i,1,M)
			if (a[i][e]>eps){
				ty TMP=a[i][0]/a[i][e];
				if (!l || TMP+eps<MN){
					MN=TMP;l=i;
				}
			}
		pivot(l,e);
	}
	return a[0][0];
}
int main(){
	//IO();
	
	int n;
	scanf("%d%d",&n,&X);
	int sum=0;
	fore(i,1,n){
		scanf("%d",&c[i]);
		sum+=c[i];
	}
	for (int i=1;i<n;i++){
		int u,v,w;
		scanf("%d%d%d",&u,&v,&w);
		E[u].push_back(v);W[u].push_back(w);
		E[v].push_back(u);W[v].push_back(w);
	}
	fore(i,1,n){
		saber=i;dfs(i,0,0);a[i][0]=-1;
	}
	fore(j,1,n)
		a[n+1][j]=1;
	a[n+1][0]=sum;
	
	M=n+1;N=n+1;
	fore(j,1,N)
		R[j]=j;
	fore(i,1,M)
		a[i][N]=-1;
	a[0][N]=1;
	int ll=1;
	fore(i,2,M)
		if (a[i][0]<a[ll][0]) ll=i;
	pivot(ll,N);
	ty p=simplex();
	
	if (p<-eps){
		puts("-1");exit(0);
	}
	fore(i,1,M)
		if (L[i]==N){
			for (int j=1;j<=N;j++)
				if (a[i][j]>eps || a[i][j]<-eps){
					pivot(i,j);break;
				}
			break;
		}
	fore(j,1,N)
		if (R[j]==N){
			swap(R[j],R[N]);
			fore(i,0,M)
				swap(a[i][j],a[i][N]);
			break;
		}
	N--;
	
	fore(j,0,N)
		a[0][j]=0;
	fore(j,1,N)
		if (R[j]){
			if (!c[R[j]]){
				a[0][j]=1;
			}
		}
	fore(i,1,M)
		if (L[i]){
			if (!c[L[i]]){
				a[0][0]-=a[i][0];
				fore(j,1,N)
					a[0][j]-=a[i][j];
			}
		}
	ty TMP=simplex();
	TMP=-TMP;
	int FINAL=int(TMP+half);
	printf("%d\n",FINAL);
	
	return 0;
}

