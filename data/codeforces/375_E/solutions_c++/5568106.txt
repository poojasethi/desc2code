#include <cmath>
#include <map>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <set>
#include <bitset>
#include <memory.h>
#include <functional>
#include <queue>
#include <fstream>
#include <ctime>
#include <deque>
#include <utility>
#include <stack>
#include <sstream>
#include <list>
#include <cctype> 
#include <numeric> 
#include <iomanip>
using namespace std;
#define sqr(_) ((_)*(_))

typedef pair<int, int> Pii;
#define x first
#define y second
#define mp make_pair

typedef long long LL;

const int MAXN = 500 + 1, INF = 10000;

vector<Pii> e[MAXN];
typedef vector<Pii>::iterator vpit;
int n, cnt, col[MAXN], L, dis[MAXN][MAXN], size[MAXN], g[MAXN][MAXN], b[MAXN][MAXN];
short f[MAXN][MAXN][MAXN];

/*
f[i][j][k]
*/
void DFS(int x, int fa)
{
	int Ns = 0, s[MAXN];
	size[x] = 1;
	for (vpit it = e[x].begin(); it != e[x].end(); ++it)
		if (it -> x != fa)
			DFS(it -> x, x),
			s[++Ns] = it -> x,
			size[x] += size[it -> x];
	for (int p = 1; p <= n; ++p)
	{
		if (dis[p][x] > L)
		{
			for (int i = 0; i <= n; ++i)
				f[x][i][p] = INF;
			continue ;
		}
		int tot = 1;
		g[0][0] = 0;
		for (int i = 1; i <= Ns; ++i)
		{
			int y = s[i], nt = tot + size[y];
			for (int j = 0; j < nt; ++j)
				g[i][j] = INF;
			for (int j = 0; j < tot; ++j)
				for (int k = 0; k <= size[y]; ++k)
				{
					if (k < size[y])
						g[i][j + k] = min(g[i][j + k], 
							g[i - 1][j] + f[y][k][p]);
					g[i][j + k] = min(g[i][j + k], 
						g[i - 1][j] + b[y][k]);
				}
			tot = nt;
		}
/*
		for (int i = 1; i <= Ns; ++i, puts(""))
			for (int j = 0; j <= tot; ++j)
				printf("%d ", g[i][j]);
		puts("");
*/
		for (int j = 0; j <= tot; ++j)
			f[x][j][p] = g[Ns][j];
	}
	for (int i = 0; i <= size[x]; ++i)
		b[x][i] = INF;
	for (int i = 0; i <= size[x]; ++i)
		for (int p = 1; p <= n; ++p)
			b[x][i + 1] = min(b[x][i + 1], f[x][i][p] + (col[p] == 0));
}
void Vis(int x, int fa, int r, int d)
{
	dis[r][x] = d;
	for (vpit it = e[x].begin(); it != e[x].end(); ++it)
		if (it -> x != fa)
			Vis(it -> x, x, r, min(d + it -> y, L + 1));
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout);
#endif
	cin >> n >> L;
	for (int i = 1; i <= n; ++i)
		scanf("%d", &col[i]), cnt += col[i];
	for (int i = 1; i < n; ++i)
	{
		int x, y, z;
		scanf("%d%d%d", &x, &y, &z);
		e[x].push_back(mp(y, z));
		e[y].push_back(mp(x, z));
	}
	for (int i = 1; i <= n; ++i)
		Vis(i, 0, i, 0);
	DFS(1, 0);
	int Tohka = INF;
	for (int i = 0; i <= cnt; ++i)
		Tohka = min(Tohka, (int)b[1][i]);
	if (Tohka < INF)
		cout << Tohka << endl;
	else puts("-1");
	fclose(stdin);
	fclose(stdout);
	return 0;
}
