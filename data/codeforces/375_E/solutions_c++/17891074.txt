#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<string>
#include<iomanip>
#include<vector>
#include<set>
#include<map>
#include<queue>

using namespace std;
typedef long long LL;
typedef unsigned long long ULL;

#define rep(i,k,n) for(int i=(k);i<=(n);i++)
#define rep0(i,n) for(int i=0;i<(n);i++)
#define red(i,k,n) for(int i=(k);i>=(n);i--)
#define sqr(x) ((x)*(x))
#define clr(x,y) memset((x),(y),sizeof(x))
#define pb push_back
#define mod 1000000007
const int maxn=505;
const short inf=0x3f3f;
int n,m,p,col[maxn];

struct edge
{
	int v,w,next;
}e[maxn<<1];
int h[maxn],ecnt;

inline void add(int u,int v,int w)
{
	e[ecnt]=(edge){v,w,h[u]};
	h[u]=ecnt++;
}

bool vis[maxn];
int dis[maxn][maxn];

inline void bfs(int s)
{
	static queue<int> q;
	clr(dis[s],0x3f);
	clr(vis,0);
	dis[s][s]=0;
	vis[s]=1;
	q.push(s);
	while(!q.empty())
	{
		int u=q.front();q.pop();
		for(int i=h[u];~i;i=e[i].next)
		{
			int v=e[i].v;
			if(vis[v])continue;
			dis[s][v]=dis[s][u]+e[i].w;
			if(dis[s][v]>p)dis[s][v]=p+1;
			vis[v]=1;
			q.push(v);
		}
	}
}

short f[maxn][maxn][maxn],g[maxn][maxn],tmp[2][maxn],sz[maxn];

void dfs(int u,int fa)
{
	sz[u]=1;
	vis[u]=1;
	for(int i=h[u];~i;i=e[i].next)
	{
		int v=e[i].v;
		if(v==fa)continue;
		dfs(v,u);
		sz[u]+=sz[v];
	}
	
	rep(t,1,n)
	{
		if(dis[t][u]>p)continue;
		
		clr(tmp,0x3f);
		tmp[0][0]=0;
		int cur=0,last,tot=0;
		for(int i=h[u];~i;i=e[i].next)
		{
			int v=e[i].v;
			if(v==fa)continue;
			last=cur;cur^=1;
			clr(tmp[cur],0x3f);
			
			for(int j=0;j<=tot && j<=m;j++)
			{
				for(int k=0;k<=sz[v] && j+k<=m;k++)
				{
					tmp[cur][j+k]=min(tmp[cur][j+k],short(tmp[last][j]+f[v][t][k]));
					tmp[cur][j+k]=min(tmp[cur][j+k],short(tmp[last][j]+g[v][k]));
				}
			}
			tot+=sz[v];
		}
		
		memcpy(f[u][t],tmp[cur],sizeof(tmp[cur]));
	}
	
	for(int i=0;i<m;i++)rep(j,1,n)g[u][i+1]=min(g[u][i+1],short(f[u][j][i]+col[j]));
}

int main()
{
	scanf("%d%d",&n,&p);
	rep(i,1,n)
	{
		scanf("%d",&col[i]);
		m+=col[i];
		col[i]^=1;
	}
	clr(h,-1);ecnt=0;
	int u,v,w;
	rep(i,2,n)
	{
		scanf("%d%d%d",&u,&v,&w);
		add(u,v,w);
		add(v,u,w);
	}
	rep(i,1,n)bfs(i);
	
	clr(f,0x3f);clr(g,0x3f);
	dfs(1,0);
	
	if(g[1][m]==inf)puts("-1");
	else printf("%d\n",g[1][m]);
	
	return 0;
}
