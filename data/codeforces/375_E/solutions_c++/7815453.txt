#include <cstdio>
#include <cstring>
#include <vector>
using namespace std;
int n, X;
#define N 505
#define inf 2570
#define pb push_back
short f[N][N][N], v[N][N], g[N], tg[N], b[N];
int s[N];
//vector<int> e[N], w[N];
long long d[N][N];
int tot;
int a[N*2], h[N*2], e[N*2];
int sum;

void add(int x,int y){
    a[++tot] = y; e[tot] = h[x]; h[x] = tot;
}

void dfs(int k, int fa){
    for (int go = h[k]; go; go = e[go]){
        int u = a[go];
        if (u == fa) continue;
        dfs(u, k);
        
    }
    for (int x = 0; x < n; ++ x){
        if (X < d[k][x]) continue;
        g[1] = b[x];
        for (int i = 2; i <= n; ++ i){
            g[i] = inf;
        }
        s[k] = 1;
        for (int go = h[k]; go; go = e[go]){
            int u = a[go];
            if (u == fa) continue;
            //s[k] += s[u];
            for (int c = 1; c <= n; ++ c){
                tg[c] = inf;
            }
            for (int c = 1; c <= s[u]; ++ c){
                for (int p = 1; p <= s[k]; ++ p){
                    tg[p + c] = min((int)tg[p + c], g[p] + v[u][c]);
                    tg[p + c - 1] = min((int)tg[p + c - 1], g[p] + f[u][x][c] - b[x]);
                }
            }
            s[k] += s[u];
            for (int c = 1; c <= n; ++ c){
                g[c] = tg[c];
            }
        }
        for (int j = 1; j <= s[k]; ++ j){
            f[k][x][j] = g[j];
            v[k][j] = min(v[k][j], g[j]);
        }
    }
}

int main(){
    scanf("%d%d", &n, &X);
    sum = 0;
    for (int i = 0; i < n; ++ i){
        scanf("%d", &b[i]);
        sum += b[i];
        b[i] = 1 - b[i];
    }
    int x, y, z;
    memset(d, 10, sizeof(d));
    for (int i = 0; i < n - 1; ++ i){
        scanf("%d%d%d", &x, &y, &z);
        -- x; -- y;
        //e[x].pb(y); e[y].pb(x);
        //w[x].pb(z); w[y].pb(z);
        add(x, y); add(y, x);
        d[x][y] = d[y][x] = z;
    }
    for (int i = 0; i < n; ++ i){
        d[i][i] = 0;
    }
    for (int k = 0; k < n; ++ k){
        for (int i = 0; i < n; ++ i){
            for (int j = 0; j < n; ++ j){
                d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
            }
        }
    }
    memset(v, 10, sizeof(v));
    memset(f, 10, sizeof(f));
    dfs(0, -1);
    short ans = inf;
    for (int i = 0; i < n; ++ i){
        for (int j = 1; j <= sum; ++ j){
            ans = min(ans, f[0][i][j]);
        }
    }
    if (ans == inf) ans = -1;
    printf("%d\n", ans);
    return 0;
}