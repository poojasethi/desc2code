#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <algorithm>
#include <cmath>
#define INF 1000
using namespace std;
int tot = 1;
int e[1001], next[1001], cost[1001], g[501];
int q[501], fa[501], size[501], dis[501][501];
short f[501][501][501], ans[501][501], h[501][501], stack[501];
bool vis[501];
int n, X, col[501], Sum = 0;
void Add(int u, int v, int w)
{
    e[tot] = v; next[tot] = g[u]; cost[tot] = w; g[u] = tot ++;
    e[tot] = u; next[tot] = g[v]; cost[tot] = w; g[v] = tot ++;
}
void bfs(int x)
{
    memset(vis, false, sizeof(vis));
    int h = 0, t = 1;
    q[t] = x; vis[x] = true;
    while (h < t)
    {
        int k = q[++ h];
        for (int i = g[k]; i; i = next[i])
            if (!vis[e[i]]) vis[e[i]] = true, q[++ t] = e[i], 
                dis[x][e[i]] = min(dis[x][k] + cost[i], X + 1);
    }
}
void dfs(int x)
{
    size[x] = 1;
    for (int i = g[x]; i; i = next[i])
        if (fa[x] != e[i]) fa[e[i]] = x, dfs(e[i]), size[x] += size[e[i]];
    int top = 0;
    for (int i = g[x]; i; i = next[i])
        if (fa[x] != e[i]) stack[++ top] = e[i];
    for (int i = 1; i <= n; i ++)
    {
        for (int j = 0; j <= Sum; j ++) f[x][j][i] = INF;
        if (dis[i][x] > X) continue;
        int now = 0;
        for (int j = 1; j <= top; j ++)
        {
            for (int k = 0; k <= Sum; k ++) h[j][k] = INF;
            for (int k = 0; k <= now && k <= Sum; k ++)
                for (int p = 0; p <= size[stack[j]] && p <= Sum - k; p ++)
                {
                    short tmp = min(f[stack[j]][p][i], ans[stack[j]][p]);
                    if (h[j - 1][k] + tmp < h[j][k + p]) h[j][k + p] = h[j - 1][k] + tmp;
                }
            now += size[stack[j]];
        }
        for (int j = 0; j <= size[x]; j ++)
            f[x][j][i] = h[top][j];
    }
    for (int i = 0; i <= size[x]; i ++)
        ans[x][i] = INF;
    for (int i = 0; i < size[x]; i ++)
        for (int j = 1; j <= n; j ++)
            if (f[x][i][j] + !col[j] < ans[x][i + 1]) ans[x][i + 1] = f[x][i][j] + !col[j];
}
int main( )
{
    int x, y, z;
    scanf("%d %d", &n, &X);
    for (int i = 1; i <= n; i ++)
        scanf("%d", &col[i]), Sum += col[i];
    for (int i = 1; i < n; i ++)
        scanf("%d %d %d", &x, &y, &z), Add(x, y, z);
    for (int i = 1; i <= n; i ++) bfs(i);
    dfs(1);
    short Ans = INF;
    for (int i = 0; i <= Sum; i ++)
        Ans = min(Ans, ans[1][i]);
    if (Ans == INF) printf("-1\n");
    else printf("%d\n", Ans);
    return 0;
}