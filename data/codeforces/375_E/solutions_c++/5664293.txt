#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;

const int oo = 10000;
const int N = 502;
short int dp[N][N][N];
int f[N][N],size[N],cr[N],dist[N][N],black,a[N][N],n,m;

struct edge
{
    int v,dis,next;
}e[N * 2];

int cnt,head[N];
void addedge(int u,int v,int dis)
{
    e[cnt].v = v;
    e[cnt].dis = dis;
    e[cnt].next = head[u];
    head[u] = cnt ++;
}

int cost(int x)
{
    return x ^ 1;
}

void update(int &x,int y)
{
    if(x > y) x = y;
}

void get_dis(int u,int pre,int dis,int id)
{
    if(dis > m) dis = m + 1;
    dist[id][u] = dis;
    for(int i = head[u]; i != -1; i = e[i].next) {
        if(e[i].v == pre) continue;
        get_dis(e[i].v,u,dis + e[i].dis,id);
    }
}

void dfs(int u,int pre)
{
    size[u] = 1;
    int cc = 0,c[N];
    for(int i = head[u]; i != -1; i = e[i].next) {
        if(e[i].v == pre) continue;
        dfs(e[i].v,u);
        size[u] += size[e[i].v];
        c[++ cc] = e[i].v;
    }
    for(int fa = 1; fa <= n; fa ++) {
        if(dist[u][fa] > m) {
            for(int i = 0; i <= black; i ++) dp[u][i][fa] = oo;
            continue;
        }
        a[0][0] = 0;
        int msize = 0,pre;
        for(int i = 1; i <= cc; i ++) {
            pre = msize;
            msize += size[c[i]];
            update(msize,black);
            for(int j = 0; j <= msize; j ++) a[i][j] = oo;
            for(int j = 0; j <= pre; j ++) {
                for(int k = 0; j + k <= msize && k <= size[c[i]]; k ++) {
                    if(k < size[c[i]]) update(a[i][j + k],a[i - 1][j] + dp[c[i]][k][fa]);
                    update(a[i][j + k],a[i - 1][j] + f[c[i]][k]);
                }
            }
        }
        for(int i = 0; i <= msize; i ++)
            dp[u][i][fa] = a[cc][i];
    }
    for(int i = 1; i <= black && i <= size[u]; i ++) 
        for(int fa = 1; fa <= n; fa ++)
            update(f[u][i],dp[u][i - 1][fa] + cost(cr[fa]));
}

int main()
{
    int x,y,z;
    black = 0;
    scanf("%d%d",&n,&m);
    for(int i = 1; i <= n; i ++) {
        scanf("%d",&cr[i]);
        black += cr[i];
    }
    memset(head,-1,sizeof(head));
    cnt = 0;
    for(int i = 1; i < n; i ++) {
        scanf("%d%d%d",&x,&y,&z);
        addedge(x,y,z);
        addedge(y,x,z);
    }
    for(int i = 1; i <= n; i ++)
        get_dis(i,-1,0,i);
    for(int i = 0; i <= n; i ++)
        for(int j = 0; j <= n; j ++)
            f[i][j] = oo;
    dfs(1,0);
    int ans = oo;
    for(int i = 1; i <= black; i ++)
        ans = min(ans,f[1][i]);
    if(ans == oo) ans = -1;
    cout << ans << endl;
    return 0;
}

		   	 	 				  		 				   	