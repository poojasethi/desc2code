import sys
rd = lambda : map(int, raw_input().split())
mod = int(1e+9) + 7
a, b, n = rd()

fact = [1 for x in range(n + 1)]
for i in range(1, n + 1):
  fact[i] = (fact[i - 1] * i) % mod

def powmod(a, p):
  if p == 0: return 1
  res = powmod(a, p / 2) ** 2
  if p & 1: res *= a
  return res % mod

inv = lambda x : powmod(x % mod, mod - 2)
C = lambda n, k: (fact[n] * inv(fact[k] * fact[n - k])) % mod

sol = 0
for i in range(0, n + 1):
  sumd = a * i + b * (n - i)
  good = True
  while sumd:
    if sumd % 10 != a and sumd % 10 != b:
      good = False
      break
    sumd /= 10
  if good:
    sol = (sol + C(n, i)) % mod

print sol
