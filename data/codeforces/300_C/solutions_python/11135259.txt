def exp(a,p,mod):
    if(p==0):
        return 1
    elif(p%2==0):
        x = exp(a,p>>1,mod)%mod
        return (x*x)%mod
    else:
        return (a*exp(a,p-1,mod))%mod
def prog(s,a,b,m,M,res):
    S = int(s)
    if(S<m):
        prog(s+a,a,b,m,M,res)
        prog(s+b,a,b,m,M,res)
    elif(S>=m and S<=M):
        res+=[S]
        prog(s+a,a,b,m,M,res)
        prog(s+b,a,b,m,M,res)
def pro():
    anss = []
    a,b,N=map(int,raw_input().split())
    m = N*a
    M = N*b
    prog(str(a),str(a),str(b),m,M,anss)
    prog(str(b),str(a),str(b),m,M,anss)
    mod = (10**9)+7
    res = 0
    fact = [1]
    x = 1
    anss = set(anss)
    for i in xrange(1,N+1):
        x*=i
        x%=mod
        fact += [x]
    for i in anss:
        if((M-i)%(b-a)!=0):
            continue
        x = (M-i)/(b-a)
        temp = (fact[N-x]*fact[x])%mod
        mul_in = exp(temp,mod-2,mod)
        res += (fact[N]*mul_in)%mod
        res%=mod
    print res
pro()
