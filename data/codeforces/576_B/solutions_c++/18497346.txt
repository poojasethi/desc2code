#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;

const int maxn=100010;
int n,p[maxn],vis[maxn],toth;
struct huan{
	int sz,fir;
	huan() {}
	huan(int sz,int fir):sz(sz),fir(fir) {}
	bool operator < (const huan &h) const {return sz<h.sz;}
}h[maxn];

int main()
{
	int i,j;
	scanf("%d",&n);
	for (i=1;i<=n;i++) scanf("%d",&p[i]);
	for (i=1;i<=n;i++) if (!vis[i])
	{
		vis[i]=1;
		int u=i;
		while (!vis[p[u]]) vis[p[u]]=vis[u]+1,u=p[u];
		h[++toth]=huan(vis[u],u);
	}
	sort(h+1,h+1+toth);
	if (h[1].sz>2) {printf("NO\n"); return 0;}
	if (h[1].sz==1)
	{
		printf("YES\n");
		int root=h[1].fir;
		for (i=1;i<=n;i++) if (i!=root)
			printf("%d %d\n",root,i);
	}
	else
	{
		for (i=2;i<=toth;i++)
			if (h[i].sz&1) {printf("NO\n"); return 0;}
		printf("YES\n");
		int rt[2];
		rt[0]=h[1].fir;
		rt[1]=p[h[1].fir];
		printf("%d %d\n",rt[0],rt[1]);
		for (i=2;i<=toth;i++)
		{
			int u=h[i].fir,fk=0;
			while (p[u]!=h[i].fir)
			{
				printf("%d %d\n",rt[fk],u);
				fk^=1; u=p[u];
			}
			printf("%d %d\n",rt[fk],u);
		}
	}
}

          