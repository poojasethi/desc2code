#include <vector>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;
const int maxn=3e5+10;
vector<int> g[maxn];
typedef long long ull;
const ull mod=1e9+7;
ull powm(ull n,ull k)
{
    ull ans=1;
    while(k)
    {
        if(k&1)    ans=ans*n%mod;
        n=n*n%mod;
        k>>=1;
    }
    return ans;
}
ull fac[maxn],inv[maxn],cof[maxn];
ull C(int n,int m)
{
    return fac[n]*inv[m]%mod*inv[n-m]%mod;
}
void init(int n)
{
    inv[0]=fac[0]=1;
    for(int i=1;i<=n;i++)
    {
        fac[i]=fac[i-1]*i%mod;
        inv[i]=powm(fac[i],mod-2);
    }
    cof[0]=(powm(2,n-1)-1+mod)%mod;
    for(int i=1;i<=n;i++)
        cof[i]=((cof[i-1]-C(n,i))%mod+mod)%mod;
}
void doit(int n)
{
    for(int i=2;i*i<=n;i++)
    {
        if(n%i==0)
        {
            int tot=0;
            while(n%i==0)    n/=i,++tot;
            g[i].push_back(tot);
        }
    }
    if(n!=1)    g[n].push_back(1);
}
int main()
{
    int n;
    scanf("%d",&n);
    init(n);
    for(int i=0;i<n;i++)
    {
        int t;
        scanf("%d",&t);
        doit(t);
    }
    ull ans=0;
    for(int i=2;i<maxn;i++)
    {
        sort(g[i].begin(),g[i].end(),greater<int>());
        for(int j=0;j<g[i].size();j++)
            ans=(ans+g[i][j]*cof[j])%mod;
    }
    printf("%lld\n",ans);
    return 0;
}