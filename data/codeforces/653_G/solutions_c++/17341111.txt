#include<bits/stdc++.h>

using namespace std;

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define sol (root+root)
#define sag (root+root+1)
#define orta ((bas+son)/2)
#define ll long long
#define pii pair<int,int>
#define type(x) __typeof((x).begin())
#define foreach(it, x) for(type(x) it = (x).begin(); it != (x).end(); it++)
#define div asd

const int N=3e5+5;
const int mod=1e9+7;
const int inf=1e9+7;

int n,i,j,s,x;
int A[N];

ll ans,q,sum;

bool H[N];

vector<int> div[N],e[N],v;

int FE(int x,int k){
	if(!k)
		return 1;
	if(k==1)
		return x;
	ll temp=FE(x,k/2);
	if(k&1)
		return temp*temp%mod*x%mod;
	return temp*temp%mod;
}

main(){

	for(i=2 ; i<N ; i++)
		if(!H[i])
			for(j=i ; j<N ; j+=i){
				div[j].pb(i);
				H[j]=1;
			}

	scanf("%d",&n);

	for(i=1 ; i<=n ; i++){
		scanf("%d",A+i);
		for(j=0 ; j<div[A[i]].size() ; j++){
			s=0;
			x=A[i];
			while(x%div[A[i]][j]==0){
				x/=div[A[i]][j];
				s++;
			}
			e[div[A[i]][j]].pb(s);
			v.pb(div[A[i]][j]);
		}
	}

	sort(v.begin(),v.end());
	v.resize(unique(v.begin(),v.end())-v.begin());

	for(i=0 ; i<v.size() ; i++){
		
		x=v[i];

		q=e[x].size();

		sort(e[x].begin(),e[x].end());

		q=sum=1;

		int qwe=n;

		for(j=(int)e[x].size()-1 ; j>=0 ; j--){
			ans=(ans-sum*e[x][j]%mod+mod)%mod;
			if(j==0)
				break;
			qwe--;
			q=q*qwe%mod*FE(n-qwe,mod-2)%mod;
			sum=(sum+q)%mod;
		}

		sum=FE(2,n-1);
		q=1;
		qwe=n;

		for(j=(int)e[x].size()-1 ; j>=0 ; j--){
			ans=(ans+sum*e[x][j]%mod)%mod;
			if(j==0)
				break;
			sum=(sum-q+mod)%mod;
			qwe--;
			q=q*qwe%mod*FE(n-qwe,mod-2)%mod;
		}
	}

	printf("%lld",ans);
}
