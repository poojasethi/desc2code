#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
#define N 300005
#define mo 1000000007
#define LL long long
#define oo (1<<30)
using namespace std;
int n,m,a[N],b[N],c[N],fc[N],xf[N],p[N],sc[N],ans;
LL fpm(LL x,LL y)
{
	LL s=1;
	while(y){
		if(y&1) s=(s*x)%mo;
		y>>=1 , x=(x*x)%mo;
	  }
	return s;
}
int C(int n,int m)
{
	if(n<0||m<0||n<m) return 0;
	return 1LL*fc[n]*xf[m]%mo*xf[n-m]%mo;
}
void solve(int p)
{
	int i,j,ct,S;
	for(i=0;i<=30;i++) c[i]=0; c[0]=n;
	for(i=p;i<N;i+=p){
		for(j=i,ct=0;j%p==0;j/=p,ct++);
		c[ct]+=b[i],c[0]-=b[i];
	  }
	if(c[0]==n) return ;
	S=0,ct=0,j=-1;
	for(i=0;i<=30;i++){
		if(!c[i]) continue;
		S=(S+1LL*ct*(i-j)%mo)%mo;
		ans=(ans+1LL*(sc[ct+c[i]]-sc[ct]+mo)*S%mo)%mo;
		ct+=c[i],j=i;
	  }
	S=0,ct=0,j=31;
	for(i=30;i>=0;i--){
		if(!c[i]) continue;
		S=(S+1LL*ct*(j-i)%mo)%mo;
		ans=(ans+1LL*(sc[ct+c[i]-1]-sc[ct-1]+mo)*S%mo)%mo;
		ct+=c[i],j=i;
	  }
}
int main()
{
	int i,j;
	scanf("%d",&n),fc[0]=xf[0]=1;
	for(i=1;i<N;i++){
		fc[i]=(1LL*fc[i-1]*i)%mo;
		xf[i]=fpm(fc[i],mo-2);
	  }
	sc[0]=1;
	for(i=1;i<n;i++)
		sc[i]=(sc[i-1]+C(n-1,i))%mo;
	sc[n]=sc[n-1];
	for(i=1;i<=n;i++)
		scanf("%d",&a[i]),b[a[i]]++;
	for(i=2;i<N;i++){
		if(!p[i]) solve(i);
		for(j=i;j<N;j+=i) p[j]=1;
	  }
	printf("%d",ans);
	return 0;
}
