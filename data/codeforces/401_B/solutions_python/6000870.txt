#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Author: root
# @Date:   2014-03-10 18:07:36
# @Last Modified by:   root
# @Last Modified time: 2014-03-12 01:45:13
import sys
from math import *
# sys.stdin = open('input.txt', 'r')

def f(l,i):
	if i + 1 > len(l): return 0
	if i + 1 == len(l)  : return 1
	if (l[i+1] - l[i]) == 1:
		return 1 + min(f(l,i+2), f(l,i+1))
	return 1 + f(l, i + 1)

def solve():
	x, k = map(int, raw_input().split())
	a = [map(int, raw_input().split()) for i in range(k)]
	ids = []
	for i in a:
		for j in i[1:]:
			ids.append(j)
	ids = list(set(range(1,x)) - set(ids))
	minimo = 0
	
	l = [-1]*len(ids)
	i = 0
	while i + 1  < len(ids):
		if l[i] is -1:
			if ids[i] + 1 == ids[i+1]:
				l[i+1] = 0
			l[i] = 1
		i = i + 1
	if len(l)>0 and l[-1] is -1:
		l[-1] = 1
	
	print "{0} {1}".format(sum(l), len(ids))
	pass

solve()