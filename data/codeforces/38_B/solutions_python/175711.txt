board = [
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
	[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]

alph2num = {
	"a": 0,
	"b": 1,
	"c": 2,
	"d": 3,
	"e": 4,
	"f": 5,
	"g": 6,
	"h": 7
}

def rook_mark(rook):
	i = alph2num[rook[0]] + 2
	j = int(rook[1]) + 1
	board[i][j] = 1
	for x in range(2, 10):
		board[i][x] = 1
		board[x][j] = 1

def knight_mark(knight):
	i = alph2num[knight[0]] + 2
	j = int(knight[1]) + 1
	board[i][j] = 1
	board[i - 2][j - 1] = 1
	board[i - 2][j + 1] = 1
	board[i + 2][j - 1] = 1
	board[i + 2][j + 1] = 1
	board[i - 1][j - 2] = 1
	board[i - 1][j + 2] = 1
	board[i + 1][j - 2] = 1
	board[i + 1][j + 2] = 1

def count_unmarks():
	count = 0
	for i in range(2, 10):
		for j in range(2, 10):
			if board[i][j] == 0:
				count += 1
	return count

def main():
	rook = raw_input()
	rook_mark(rook)
	knight_mark(rook)
	knight = raw_input()
	knight_mark(knight)
	print count_unmarks()

if __name__ == "__main__":
	main()
