#!/usr/bin/env python

def rook_set(board, rook_i, rook_j):
	for i in range(8):
		board[rook_i][i] = 1
		board[i][rook_j] = 1

	return board

def knight_set(board, knight_i, knight_j):
	positions = []
	positions.append((knight_i+2,knight_j+1))
	positions.append((knight_i+2,knight_j-1))

	positions.append((knight_i-2,knight_j+1))
	positions.append((knight_i-2,knight_j-1))
	

	positions.append((knight_i+1,knight_j+2))
	positions.append((knight_i-1,knight_j+2))

	positions.append((knight_i+1,knight_j-2))
	positions.append((knight_i-1,knight_j-2))

	for pos_i,pos_j in positions:
		if check_in(pos_i,pos_j):
			board[pos_i][pos_j] = 1
	return board

def check_in(i,j):
	if 0<=i<=7 and 0<=j<=7:
		return 1
	else:
		return 0

def main():
	rook = raw_input()
	knight = raw_input()

	board = [[0]*8 for i in range(8)]

	rook_i = ord(rook[0]) - ord('a')
	rook_j = int(rook[1]) - 1

	knight_i = ord(knight[0]) - ord('a')
	knight_j = int(knight[1]) - 1


	board = rook_set(board,rook_i,rook_j)
	board = knight_set(board, knight_i, knight_j)
	board = knight_set(board, rook_i, rook_j)
	
	board[knight_i][knight_j] = 1

	count = 0
	for i in range(0,8):
		for j in range(0,8):
			if not board[i][j]:
				count +=1
	print count

main()
