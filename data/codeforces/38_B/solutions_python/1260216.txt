
import sys
import string

lines = sys.stdin.readlines()

rook = lines[0]
horse = lines[1]

letters = string.letters
key_letters = []
for letter in letters[:8]:
    key_letters.append(letter)

blocked_positions = []
def block_position(position):
    if position not in blocked_positions:
        blocked_positions.append(position)

def block_rook_hits(position):
    rook_block_vert = map(lambda x: "%s%d" % (position[0], x), range(1, 9)) 
    rook_block_horz = map(lambda x: "%s%d" % (key_letters[x], int(position[1])), range(0, 8)) 
    for pos in rook_block_vert:
        block_position(pos)
    for pos in rook_block_horz:
        block_position(pos)


def block_horse_hits(position):
    a, b = (key_letters.index(position[0]), int(position[1]))

    # up right
    if a - 2 > -1 and b + 1 < 9:
        block_position("%s%d" % (key_letters[a - 2], b + 1))
    # up left
    if a - 2 > -1 and b - 1 > 0:
        block_position("%s%d" % (key_letters[a - 2], b - 1))
    # down right
    if a + 2 < 8 and b + 1 < 9:
        block_position("%s%d" % (key_letters[a + 2], b + 1))
    # down left
    if a + 2 < 8 and b - 1 > 0:
        block_position("%s%d" % (key_letters[a + 2], b - 1))
    # left up 
    if a - 1 > -1 and b - 2 > 0:
        block_position("%s%d" % (key_letters[a - 1], b - 2))
    # left down 
    if a + 1 < 8 and b - 2 > 0:
        block_position("%s%d" % (key_letters[a + 1], b - 2))
    # right up 
    if a - 1 > -1 and b + 2 < 9:
        block_position("%s%d" % (key_letters[a - 1], b + 2))
    # right down 
    if a + 1 < 8 and b + 2 < 9:
        block_position("%s%d" % (key_letters[a + 1], b + 2))

block_position(horse)
block_rook_hits(rook)
block_horse_hits(horse)
block_horse_hits(rook)

print (8 * 8) - (len(blocked_positions)) 
