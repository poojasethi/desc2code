

stdin_flag=1
if not stdin_flag:
  read_line_index=0
  testcasefilename="test.txt"
  Stestcase=open(testcasefilename).read()
  read_line_datas=Stestcase.split("\n")


def debugs(s):
  if not stdin_flag:
    print ";;;",s

def puts(s):
  import sys
  sys.stdout.write(str(s))

#####################################
######################################

def read_line():
  global read_line_index
  if stdin_flag:
    return raw_input()
  else:
    s=read_line_datas[read_line_index]
    read_line_index+=1
    return s

def answer():
  if stdin_flag:
    return solve()
  else:
    while read_line_proceed():
      solve()
      

def read_line_proceed():
  global read_line_index
  print"##################"
  while 1:
    if read_line_index>= len (read_line_datas ):
      return False
    if read_line_datas[read_line_index]=="%%%":
      read_line_index+=1
      return True
    read_line_index+=1


def readint():
  return int (read_line() )


def readints():
  return map(int, read_line().split(" "))

def reads():
  return read_line()




###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################

def compute(ss):
  m={}
  for s in ss:
    if s==" ":continue
    if s in m:
      m[s]+=1
    else:
      m[s]=1
  return m

  pass

def pos(s):
  return (ord(s[0])-ord("a") , int(s[1])-1)

def dis(p1,p2):
  return (p1[0]-p2[0])**2+(p1[1]-p2[1])**2

def solve():
  rp=pos( reads() )
  kp=pos( reads() )
  tot=0
  for x in xrange(8):
    for y in xrange(8):
      p=(x,y)
      if ( p not in[rp,kp] ) and p[0]!=rp[0] and p[1]!=rp[1] and 5 not in [dis(p,rp), dis(p,kp)]:
        tot+=1
  print tot

def test():
  pass

test()
answer()
