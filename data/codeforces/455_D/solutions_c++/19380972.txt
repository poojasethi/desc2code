#include<iostream>    
#include<queue>
#include<cstdio>
#include<cmath>
typedef long long LL;
using namespace std;

struct node{
	deque<int>q;
	int num[100005];
}block[405];

int K,cnt,n,m,ans;

int main(){
	int x,b,i=0,a,aa,bb,k,l,r,t;
	scanf("%d",&n);
	K=sqrt(n)*3;
	cnt=n/K+(n%K!=0);
	for(;i<n;i++){
		scanf("%d",&x);
		a=i/K;
		block[a].q.push_back(x);
		block[a].num[x]++;
	}
	scanf("%d",&m);
	while(m--){
		scanf("%d%d%d",&k,&l,&r);
		l=((l+ans-1)%n);
		r=((r+ans-1)%n);
		if(l>=r)swap(l,r);
		a=l/K,b=r/K;
		aa=l%K,bb=r%K;
		if(k&1){
			if(a==b){
				t=*(block[b].q.begin()+bb);
				block[b].q.erase(block[b].q.begin() + bb);
				block[b].q.insert(block[b].q.begin() + aa,t);
			}
			else{
				t=*(block[b].q.begin() + bb);
				block[b].q.erase(block[b].q.begin() + bb);
				block[b].num[t]--;
				for(i=a;i<b;i++){
					x=block[i].q.back();
					block[i].q.pop_back();
					block[i].num[x]--;
					block[i+1].q.push_front(x);
					block[i+1].num[x]++;
				}
				block[a].q.insert(block[a].q.begin() + aa,t);
				block[a].num[t]++;
			}
		}
		else{
			scanf("%d",&x);
			x=((x+ans-1)%n)+1;
			ans=0;
			if(a==b){
				for(i=aa;i<=bb;i++)
					if(*(block[a].q.begin()+i)==x)ans++;
			}
			else{
				for(i=a+1;i<b;i++)ans+=block[i].num[x];
				for(i=aa;i<K;i++)
					if(*(block[a].q.begin()+i)==x)
						ans++;
				for(i=0;i<=bb;i++)
					if(*(block[b].q.begin()+i)==x)
						ans++;
			}
			printf("%d\n",ans);
		}
	}
}

			      	 		 	 				 	  			 		