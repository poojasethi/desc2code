#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <string>
#include <cstring>
#include <cstdio>
#include <vector>
#include <queue>
#include <cmath>
#include <set>
#include <map>
using namespace std;

#define PII pair<int,int>
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define rep(i,a,b) for (int i = a; i <= b; ++i)
#define dep(i,a,b) for (int i = a; i >= b; --i)
typedef long long ll;

const int nn=100010;
deque<int> a[355];
int N,siz,ans;
int _a[nn],c[355][nn];

void deal(int &x) {x=(x+ans-1)%N+1;}
int main() {
	scanf("%d",&N);siz=int(sqrt(N));
	rep(i,0,N-1) scanf("%d",&_a[i]),++c[i/siz][_a[i]],a[i/siz].pb(_a[i]);
//		rep(i,0,N/siz) for (int j=0;j<a[i].size();++j) cout<<a[i][j]<<' ';puts("");
	int Q;scanf("%d",&Q);
	while (Q--) {
		int k,L,R,x,l,r;scanf("%d%d%d",&k,&L,&R);
		if (k==2) scanf("%d",&x),deal(x);
		deal(L);deal(R);
		if (L>R) swap(L,R);
		L--;R--;
		l=L/siz;r=R/siz;L%=siz;R%=siz;
		if (k==2) {
			ans=0;
			if (l==r) rep(i,L,R) ans+=(x==a[l][i]);
			else {
				for(int i=L;i<a[l].size();++i) ans+=(x==a[l][i]);
				for(int i=0;i<=R;++i) ans+=(x==a[r][i]);
				for(int i=l+1;i<r;++i) ans+=c[i][x];
			}
			cout<<ans<<endl;
		} else {
			if (l==r) {
				if (L==R) continue;
				x=a[r][R];a[l].erase(a[l].begin()+R);
				a[l].insert(a[l].begin()+L,x);
			} else {
				int xx=a[r][R];
				a[r].erase(a[r].begin()+R);--c[r][xx];
				for (int i=l;i<r;) {
					x=a[i][a[i].size()-1];
					a[i].erase(a[i].begin()+a[i].size()-1);--c[i][x];
					++i;
					a[i].insert(a[i].begin(),x);++c[i][x];
				}
				a[l].insert(a[l].begin()+L,xx);++c[l][xx];
			}
		}
		
	//	rep(i,0,N/siz) for (int j=0;j<a[i].size();++j) cout<<a[i][j]<<' ';puts("");
	}
	return 0;
}

