#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,n) for (int i=a;i<n;i++)
#define per(i,a,n) for (int i=n-1;i>=a;i--)
#define pb push_back
#define all(x) (x).begin(),(x).end()
#define SZ(x) ((int)(x).size())
#define fi first
#define se second
typedef vector<int> VI;
typedef long long ll;
typedef pair<int,int> PII;
const ll mod=1000000007;
ll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
// head

const int N=101000;
deque<int> q[400];
short cnt[400][N];
int n,Q,ty,l,r,k,lim,ans;
int main() {
	scanf("%d",&n); lim=sqrt(n)+0.5;
	rep(i,0,n) scanf("%d",&k),q[i/lim].push_back(k),cnt[i/lim][k]++;
	for (scanf("%d",&Q);Q;Q--) {
		scanf("%d%d%d",&ty,&l,&r);
		l=(l+ans-1)%n+1,r=(r+ans-1)%n+1;
		if (l>r) swap(l,r); --l;
		if (ty==1) {
			int pl=l/lim,pr=r/lim;
			if (pl==pr) {
				k=q[pl][(--r)%lim];
				q[pl].erase(q[pl].begin()+r%lim);
				q[pl].insert(q[pl].begin()+l%lim,k);
			} else {
				rep(i,pl,pr) {
					k=q[i].back(); q[i].pop_back(); --cnt[i][k];
					q[i+1].push_front(k); ++cnt[i+1][k];
				}
				k=q[pr][r%lim]; q[pr].erase(q[pr].begin()+r%lim); --cnt[pr][k];
				q[pl].insert(q[pl].begin()+l%lim,k); ++cnt[pl][k];
			}
		} else {
			scanf("%d",&k);
			k=(k+ans-1)%n+1;
			ans=0;
			int pl=l/lim,pr=r/lim;
			if (pl==pr) {
				rep(i,l,r+1) ans+=q[pl][i-pl*lim]==k;
			} else {
				rep(i,l,pl*lim+lim) ans+=q[pl][i-pl*lim]==k;
				rep(i,pr*lim,r) ans+=q[pr][i-pr*lim]==k;
				rep(i,pl+1,pr) ans+=cnt[i][k];
			}
			printf("%d\n",ans);
		}
	}
}
