//tpl
//ipqhjjybj_tpl.h
//header.h
#include <cstdio>
#include <cstdlib>
#include <map>
#include <set>
#include <algorithm>
#include <cstring>
#include <iostream>
#include <vector>
#include <string>
#include <queue>
#include <math.h>

#define mp(x,y) make_pair(x,y)
#define pii pair<int,int>
#define pLL pair<long long ,long long>
#define pb(x) push_back(x)
#define rep(i,j,k) for(int i = j; i < k;i++)

#define MAX(x,a)  x=((x)<(a))?(a):(x);
#define MIN(x,a)  x=((x)>(a))?(a):(x);

using namespace std;

typedef long long LL;
const int N = 100010;

deque<int> dq[350];
int cnt[350][N] = {0}, m;
int st1[500], st2[500];

int n;
int a[N];
int query(int l,int k){
	int li = l%m , ka = l / m;
	int ret = 0;
	rep(i,0,li) 
		if(dq[ka][i] == k)
			ret++;
	rep(i,0,ka)
		ret+= cnt[i][k];
	return ret;
}
void modify(int l,int r){
	if(l==r)return;
	int l1 = l%m ,l2 = r%m,	k1 = l/m , k2 = r/m;
	if(l2 == 0){
		k2-- , l2 = m;
	}
	int x = dq[k2][l2-1];
	dq[k2].erase(dq[k2].begin()+l2-1);
	dq[k1].insert(dq[k1].begin()+l1,x);
	cnt[k2][x]--, cnt[k1][x]++;
	rep(i,k1,k2){
		x = dq[i].back(); dq[i].pop_back();
		dq[i+1].push_front(x);
		cnt[i][x]--; cnt[i+1][x]++;
	}
}
int main(){
	scanf("%d",&n);
	for(int i = 0;i < n;i++)
		scanf("%d",a+i);
	m = sqrt(n);
	for(int i = 0;i < n;i++){
		dq[i/m].pb(a[i]);
		cnt[i/m][a[i]]++;
	}
	int q; scanf("%d",&q);
	int ans = 0;
	while(q--){
		int c,l,r,k;
		scanf("%d %d %d",&c,&l,&r);
		l = (l+ans-1)%n+1 , r = (r+ans-1)%n+1;
		if(l>r) swap(l,r);
		if(c==2){
			scanf("%d",&k);
			k = (k+ans-1)%n+1;
			printf("%d\n",ans = query(r,k) - query(l-1,k));
		}else{
			modify(l-1,r);
		}
	}
	return 0;
}
