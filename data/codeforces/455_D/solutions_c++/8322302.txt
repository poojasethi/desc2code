#include <bits/stdc++.h>

using namespace std;

#define DB(x) cout<<#x<<"="<<x<<endl;
#define MP make_pair

typedef long long int64;
typedef pair<int,int> pii;

const int INF = 1 << 30;

const int MAXN = 100010;
const int SIZE = 350;
const int CNT = 310;

deque<int> seq[CNT];
int cnt[CNT][MAXN];
int N;

int query(int a, int b, int k)
{
	int ans = 0;
	int start = a/SIZE;
	int end = b/SIZE;
	deque<int>::iterator it1 = seq[start].begin() + a % SIZE;
	for(int i  = a; i < (start + 1) * SIZE && i <= b; i++)
	{
		if(*it1 == k) ans++;
		++it1;
	}
	if(start != end)
	{
		deque<int>::iterator it2 = seq[end].begin();
		for(int i  = end * SIZE; i <= b; i++)
		{
			if(*it2 == k) ans++;
			++it2;
		}
	}
	for(int i = start + 1; i < end; i++)
		ans += cnt[i][k];
	return ans;
}

void update(int a, int b)
{
	int start = a/SIZE;
	int end = b/SIZE;

	int last = seq[end].at(b % SIZE);

	seq[end].erase(seq[end].begin() + b % SIZE);
	cnt[end][last]--;

	seq[start].insert(seq[start].begin() + a % SIZE, last);
	cnt[start][last]++;

	for(int i = start; i < end; i++)
	{
		int v = seq[i].back();
		seq[i].pop_back();
		cnt[i][v]--;
		seq[i+1].push_front(v);
		cnt[i+1][v]++;
	}
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);

	cin >> N;
	for(int i = 0; i < N; i++)
	{
		int x; cin >> x;
		seq[i/SIZE].push_back(x);
		cnt[i/SIZE][x]++;
	}
	int q; cin >> q;
	int prev = 0;
	while(q--)
	{
		int op; cin >> op;
		int l, r; cin >> l >> r;

		l = (l + prev - 1) % N;
		r = (r + prev - 1) % N;
		if(l > r) swap(l,r);
		if(op == 1)
		{
			update(l,r);
		}
		else
		{
			int k; cin>>k;
			k = (k + prev - 1)%N + 1;
			cout << (prev = query(l,r,k)) << endl;
		}
	}

	return 0;
}
