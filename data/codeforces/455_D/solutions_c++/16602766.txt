#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<queue>
using namespace std;
deque<int>::iterator it;
int n,m,x,b,size,maxb,ans,tmp,a,aa,bb,v,k,l,r;
struct blo{
	deque<int> q;
	int num[100010];
}block[405];
void init()
{
	size=pow(n,0.618);
	if (n % size==0) maxb=n / size;
	else maxb=n/size+1;
	for (int i=0;i<n;++i)
	{
		b=i/size;
		scanf("%d",&x);
		block[b].q.push_back(x);
		block[b].num[x]++;
	}
}
void solve1()
{
	if (a==b)
	{
		it = block[a].q.begin() + bb;  
    	tmp = *it;  
        block[a].q.erase(block[a].q.begin() + bb);  
        block[a].q.insert(block[a].q.begin() + aa, tmp); 
	}
	else 
	{
		it=block[b].q.begin()+bb;
		tmp=*it;
		block[b].num[tmp]--;
		block[b].q.erase(block[b].q.begin()+bb);
		for (int i=a;i<b;++i)
		{
			x=block[i].q.back();
			block[i].q.pop_back();
			block[i].num[x]--;
			block[i+1].num[x]++;
			block[i+1].q.push_front(x);
		}
		block[a].num[tmp]++;
		block[a].q.insert(block[a].q.begin()+aa,tmp);
	}
}
void solve2()
{
	scanf("%d",&v);
	v=(v+ans-1) % n + 1;
	ans=0;
	if (a==b)
	{
		for ( it=block[a].q.begin()+aa;it<=block[a].q.begin()+bb;it++) if (*it==v) ans++;
	}
	else
	{
		for (int i=a+1;i<b;++i) ans+=block[i].num[v];
		for (it=block[a].q.begin()+aa;it<block[a].q.end();it++) if (*it==v) ans++;
		for (it=block[b].q.begin();it<=block[b].q.begin()+bb;it++) if (*it==v) ans++;
	}
	printf("%d\n",ans);
}
int main()
{
	scanf("%d",&n);ans=0;
	init();
	scanf("%d",&m);
	for (int i=1;i<=m;++i)
	{
		scanf("%d%d%d",&k,&l,&r);
		l=(l+ans-1) % n;
		r=(r+ans-1) % n;
		if (l>=r) swap(l,r);
		a=l / size;b=r/size;
		aa=l % size;bb=r % size;
		if (k==1) solve1();
		else solve2();
	}
	fclose(stdin);
	fclose(stdout);
	return 0;
}
//bdndfxgmsswm