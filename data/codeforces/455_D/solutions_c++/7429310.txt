#include <iostream>
#include <cstdio>
#include <queue>

using namespace std;

#define pb push_back

const int N = 1<<17;
const int K = 320;

int n;
deque<int> a[N / K];
int c[N / K][N];

int main() {
//	freopen("in", "r", stdin);
//	freopen("out", "w", stdout);
	scanf("%d", &n);
	for (int i = 0, x; i < n; i++) {
		scanf("%d", &x);
		a[i / K].pb(x);
		c[i / K][x]++;
	}

	int q, prev = 0;
	scanf("%d", &q);
	for (int i = 0; i < q; i++) {
	    int t, l, r, k;
		scanf("%d%d%d", &t, &l, &r);
		l = (l + prev - 1) % n;
		r = (r + prev - 1) % n;
		if(l > r)swap(l, r);
		int lb = l / K, rb = r / K;
		int lu = l % K, ru = r % K;
		if(t == 1){
			int last = a[rb][ru];
			a[rb].erase(a[rb].begin() + ru);
			--c[rb][last];
			for(int b = rb;b > lb;-- b){
				int end = a[b - 1].back();
				a[b].push_front(end);
				++c[b][end];
				a[b - 1].pop_back();				
				--c[b - 1][end];
			}
			++c[lb][last];
			a[lb].insert(a[lb].begin() + lu, last);
		} 
		else{
			scanf("%d", &k);
			k = (k + prev - 1) % n + 1;
			prev = 0;
			if(lb == rb){
				for(int it = lu;it <= ru;++ it)prev += a[lb][it] == k;
			}
			else {
				for(int it = 0;it <= ru;++ it)prev += a[rb][it] == k;
				for(int it = lu;it < a[lb].size();++ it)prev += a[lb][it] == k;
				for(int it = lb + 1;it <= rb - 1;++ it)prev += c[it][k];
			}
			printf("%d\n",prev);
		}
	}
}