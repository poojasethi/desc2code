#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <map>
#include <set>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <queue>
#include <utility>
#include <cstring>
#include <list>
#include <stack>
using namespace std;

typedef long long LL;

const int MAXN = 111111;
const int MOD = 1e9;
const double eps = 1e-6;
const LL MAXL = (LL)(0x7fffffffffffffff);
const int MAXI = 0x7fffffff;

int seg[333][MAXN];
deque<int> que[333];

int main(){

#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif

	int n, q;
	while(cin >> n){
		for(int i = 0; i < 333; i++) que[i].clear();
		memset(seg, 0, sizeof(seg));
		int m = ceil(sqrt(n));
		for(int i = 0; i < n; i++){
			int a;
			scanf("%d", &a);
			seg[i / m][a]++;
			que[i / m].push_back(a);
		}
		int ans = 0;
		scanf("%d", &q);
		while(q--){
			int op, l, r, k;
			scanf("%d%d%d", &op, &l, &r);
			l = (l + ans - 1) % n;
			r = (r + ans - 1) % n;
			if(l > r) swap(l , r);
			int start = l / m, end = r / m;
			if(op == 1){	
				int x = que[end][r % m];
				que[end].erase(que[end].begin() + r % m);
				seg[end][x]--;
				que[start].insert(que[start].begin() + l % m, x);
				seg[start][x]++;
				for(int i = start; i < end; i++){
					int a = que[i].back();
					que[i].pop_back();
					seg[i][a]--;
					que[i + 1].push_front(a);
					seg[i + 1][a]++;
				}
			}
			else{
				scanf("%d", &k);
				k = (k + ans - 1) % n + 1;
				ans = 0;
				for(int i = start; i < end; i++){
					ans += seg[i][k];
				}
				for(int i = 0; i < l % m; i++){
					if(que[start][i] == k) ans--;
				}
				for(int i = 0; i <= r % m; i++){
					if(que[end][i] == k) ans++;
				}
				printf("%d\n", ans);
			}
		}
	}
}