#include<iostream>
#include<deque>

using namespace std;

const int MAXN = 1e5 + 5, sq = 350;
int c[sq][MAXN], a[MAXN];
deque<int> d[sq];

void set(int l, int r)
{
	int pl = l / sq, pr = r / sq, wl = l % sq, wr = r % sq;
	int x = d[pr][wr];
	if(pl == pr)
	{
		d[pr].erase(d[pr].begin() + wr);
		d[pl].insert(d[pl].begin() + wl, x);
	}
	else
	{
		for(int i = pl; i < pr; i++)
		{
			int last = d[i].back();
			c[i][last]--, c[i + 1][last]++;
			d[i].pop_back(), d[i + 1].push_front(last);
		}
		c[pl][x]++, c[pr][x]--;
		d[pl].insert(d[pl].begin() + wl, x), d[pr].erase(d[pr].begin() + wr + 1);
	}
}

int get(int l, int r, int k)
{
	int pl = l / sq, pr = r / sq, wl = l % sq, wr = r % sq, ans = 0;
	if(pl == pr)
	{
		for(int i = wl; i <= wr; i++)
			if(d[pl][i] == k)
				ans++;
		return ans;
	}
	for(int i = pl + 1; i < pr; i++)
		ans += c[i][k];
	for(int i = wl; i < sq; i++)
		if(d[pl][i] == k)
			ans++;
	for(int i = 0; i <= wr; i++)
		if(d[pr][i] == k)
			ans++;
	return ans;
}

int main()
{
	int n;
	cin >> n;
	for(int i = 0; i < n; i++)
	{
		cin >> a[i];
		int p = i / sq;
		d[p].push_back(a[i]);
		c[p][a[i]]++;
	}
	int q;
	cin >> q;
	int lastans = 0;
	while(q--)
	{
		int t, l, r, k;
		cin >> t >> l >> r;
		l = (l + lastans - 1) % n + 1, r = (r + lastans - 1) % n + 1;
		if(l > r)
			swap(l, r);
		r--;
		l--;
		if(t == 1)
			set(l, r);
		else
		{
			cin >> k;
			k = (k + lastans - 1) % n + 1;
			lastans = get(l, r, k);
			cout << lastans << endl;
		}
	}
	return 0;
}
