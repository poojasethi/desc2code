
n,a,b = map(int,raw_input().strip().split())

U = []
S = {}
A = set()
B = set()
P = ['0']*n
is_no = False
SYMBOL_YES = 'YES'
SYMBOL_NO = 'NO'

elements = raw_input().strip().split()

for i, element in enumerate(elements):
    U.append(int(elements[i]))
    S[int(elements[i])] = i

    
if a == b:     
    for x in S:
        if not a - x in S:
            is_no = True
            
    if is_no:
        print(SYMBOL_NO)
    else:    
        print(SYMBOL_YES)
        print(' '.join(P))
else:
    for x in S:
        if x in A or x in B:
            continue
            
        c1 = (a - x) in S # in A
        c2 = (b - x) in S # in B
            
        if c1 + c2 == 0:# x not in A,B
            is_no = True
            break
        elif c1 + c2 == 1:
            g = int(c2)
            part = []
            if c1:
                t = a
            else:
                t = b
                
            while x in S:
                part.append(x)
                x = t - x
                if 2*x == t:
                    break
                t = a + b - t
                
            if len(part) % 2 == 0:
                for x in part:
                    P[S[x]] = g
                    if g : 
                        B.add(x) 
                    else: 
                        A.add(x)
            elif part[0] * 2 == (b, a)[g]:
                for x in part:
                    P[S[x]] = 1 - g
                    if g : 
                        A.add(x) 
                    else: 
                        B.add(x)
            elif part[-1] * 2 == (a, b)[g]:
                for x in part:
                    P[S[x]] = g
                    if g : 
                        B.add(x) 
                    else: 
                        A.add(x)
            else:
                is_no = True
                break

        
    if is_no:
        print(SYMBOL_NO)
    else:
        print(SYMBOL_YES)
        print(' '.join(map(str,P)))
   