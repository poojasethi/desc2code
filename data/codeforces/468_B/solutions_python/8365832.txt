par = list()

def getParent(a):
	if(par[a] == a): return a
	par[a] = getParent(par[a])
	return par[a]
def union_sets(a, b):
	a = getParent(a)
	b = getParent(b)
	if(a == b): return
	par[a] = b

n, a, b = map(int, raw_input().split())
p = map(int, raw_input().split())

ind = dict()
was = set(p)

for i in range(0, n):
	ind[p[i]] = i
	par.append(i)

par.append(n)
par.append(n+1)

for i in range(0, n):
	x = p[i]
	if((a-x) in was):
		union_sets(i, ind[a-x])
	else:
		union_sets(i, n)

	if((b-x) in was):
		union_sets(i, ind[b-x])
	else:
		union_sets(i, n+1)

if(getParent(n) == getParent(n+1)):
	print("NO")
else:
	print("YES")
	ans = ''
	for i in range(0, n):
		x = 0
		if(getParent(i) == getParent(n)): x = 1
		ans = ans + str(x)
		ans = ans + ' '
	print(ans)