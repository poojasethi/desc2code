#include <bits/stdc++.h>
using namespace std;
map<int,int> myMap;
int p[100010], dsu[100010], kim[100010], res[100010];
int findset(int x){return dsu[x]=((x==dsu[x])?x:findset(dsu[x]));}
int main(){
    int n, a, b; cin >> n >> a >> b;
    for(int i=1; i<=n; i++) { cin >> p[i]; dsu[i]=i; myMap[p[i]]=i; kim[i]=0; }
    for(int i=1; i<=n; i++) {
        if(myMap.find(a-p[i])!=myMap.end()) {dsu[findset(myMap[a-p[i]])]=findset(i); kim[i]|=1; }
        if(myMap.find(b-p[i])!=myMap.end()) {dsu[findset(myMap[b-p[i]])]=findset(i); kim[i]|=2; }
    } fill(res,res+100010,3);
    for(int i=1; i<=n; i++) {res[findset(i)]&=kim[i];}
    for(int i=1; i<=n; i++) if(res[i]==0) return cout<<"NO\n",0;
    cout << "YES\n";
    for(int i=1; i<=n; i++) cout << ((res[findset(i)]&1)==0) << ' ';
}


