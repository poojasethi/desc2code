#For the sake of ladder's 96th problem. Using the VJUDGE's solution.
n, m, i, j, a, b = map(int, raw_input().split())
INF = float("inf")
def try_corner(x, y):
    dx = abs(x - i)
    dy = abs(y - j)
    if (not dx) and (not dy):
        return 0
    if (not dx) and dy and a < n and dy % b == 0 and (dy / b) % 2 == 0:
        return dy / b
    if (not dy) and dx and b < m and dx % a == 0 and (dx / a) % 2 == 0:
        return dx / a
    if dx and dy and dx % a == 0 and dy % b == 0 and abs(dx / a - dy /b ) % 2== 0:
        return max(dx / a , dy / b)
    return INF

ans = INF
ans = min(ans , try_corner(1, 1))
ans = min(ans , try_corner(1, m))
ans = min(ans , try_corner(n, 1))
ans = min(ans , try_corner(n, m))
if ans == INF:
    print "Poor Inna and pony!"
else:
    print ans
