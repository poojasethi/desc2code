
from operator import attrgetter
from decimal import Decimal

n, t = map(Decimal, raw_input().split())

'''
count is always at least two,
you can alwasy insert at far left
and far right
'''
count = 2
houses = []

class House():
    def __init__(self, x, a):
        self.x = x
        self.a = a
        self.left =  self.x - a / 2
        self.right = self.x + a / 2

    def getLeft(self):
        return self.left

    def getRight(self):
        return self.right

    def __repr__(self):
        return "center: {0}, left: {1}, right: {2}".format(self.x, self.left, self.right)


for x in range(n):
    x, a = map(Decimal, raw_input().split())
    house = House(x, a)
    houses.append(house)


# Sort our array of houses
houses.sort(key=attrgetter('left'))


for x in range(len(houses) - 1):
    if houses[x].getRight() + t < houses[x + 1].getLeft():
        count += 2
    elif houses[x].getRight() + t == houses[x + 1].getLeft():
        count += 1

print count