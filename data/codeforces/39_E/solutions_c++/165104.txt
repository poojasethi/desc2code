#include <iostream>
#include <cstring>
using namespace std;

typedef long long ll;

const int MAXA = 32*1000+10, MAXB = 30 + 5;

ll n;
int dp[MAXA][MAXB];

ll pow(ll a, ll b)
{
	ll r = 1;
	while(b-- && r<n)
		r *= a;
	return r;
}

inline int iswin(ll a, ll b)
{
	if(dp[a][b] != -1)
		;
	else if(a == 1 && (1LL<<b)>=n)
		dp[a][b] = 1;
	else if(b == 1 && a*a >= n)
		dp[a][b] = ((n-a+1)%2)*2;
	else if(pow(a, b) >= n)
		dp[a][b] = 2;
	else
		dp[a][b] = 2 - min(iswin(a, b+1), iswin(a+1, b));
	return dp[a][b];
}

int main()
{
	memset(dp, -1, sizeof dp);
	ll a, b;
	cin >> a >> b >> n;
	iswin(a, b);

	if(dp[a][b] == 0)
		cout << "Stas" << endl;
	else if(dp[a][b] == 1)
		cout << "Missing" << endl;
	else if(dp[a][b] == 2)
		cout << "Masha" << endl;
	
	return 0;
}
