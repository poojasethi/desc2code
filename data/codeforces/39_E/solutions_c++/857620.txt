#include <stdio.h>

int dp[50005][50];

bool test(int x, int y, int n) {
	long long ret = 1;
	for(int i=1;i<=y;i++)
		ret = ret * 1LL * x;
	return (ret >= n);
}
int n, flag=0;

int go(int x, int y) {
	//printf("x=%d, y=%d\n", x, y);
	if(x==1 && test(x+1, y, n)) {return -2;}
	if(y==1 && test(x, y+1, n)) return (n-x+1)%2?1:-1;
	if(test(x, y, n)) return (dp[x][y]=1);
	if(dp[x][y] != 0) {
		return dp[x][y];
	}
	int t1 = go(x+1, y);
	int t2 = go(x, y+1);
	if(t1>0 && t2>0) {
		dp[x][y] = -1;
		return -1;
	}
	if(t1==-1 || t2==-1) {
		return (dp[x][y] = 1);
	}
	return dp[x][y]=-2;
}

int main(void) {
	int a, b;
	scanf("%d%d%d", &a, &b, &n);
	int r = go(a, b);
	if(r==-2) {
		puts("Missing");
	} else if(r==-1) {
		puts("Stas");
	} else if(r==1)
		puts("Masha");
	return 0;
}
