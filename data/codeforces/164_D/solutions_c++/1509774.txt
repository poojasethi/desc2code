#include<cmath>
#include<cstdio>
#include<cstring>
#include<algorithm>
#define mp make_pair
using namespace std;
struct point{
    int x,y;
}p[1010];
int n,k,vt,tot,del,t[1010],out[1010],d[1010],h[1010],l[1000010],v[1000010],x[1000010],dis[1010][1010];
int sqr(int x){return x*x;}
int calc(point a,point b){
    return sqr(a.x-b.x)+sqr(a.y-b.y);
}
void resume(int x){
    if(--t[x]!=0)return;
    --del;
    for(int i=h[x];i;i=l[i])if(!t[v[i]]){
        ++d[v[i]];++d[x];
    }
}
void remove(int x){
    if(++t[x]!=1)return;
    ++del;
    for(int i=h[x];i;i=l[i])if(!t[v[i]]){
        --d[v[i]];--d[x];
    }
}
bool dfs(int x){
    if(del>k)return 0;
    if(x>n){
        out[0]=0;out[n+1]=n+1;
        for(int i=1;i<=n;++i)if(t[i])out[++out[0]]=i;
        else out[--out[n+1]]=i;
        return 1;
    }
    if(d[x]==0)return dfs(x+1);
    if(d[x]>1){
        remove(x);
        if(dfs(x+1))return 1;
        resume(x);
    }
    for(int i=h[x];i;i=l[i])remove(v[i]);
    if(dfs(x+1))return 1;
    for(int i=h[x];i;i=l[i])resume(v[i]);
    return 0;
}
bool check(int len){
    del=vt=0;memset(h,0,sizeof(h));
    memset(d,0,sizeof(d));
    memset(t,0,sizeof(t));
    for(int i=1;i<=n;++i)
        for(int j=1;j<=n;++j)
            if(dis[i][j]>len){
                v[++vt]=j;l[vt]=h[i];
                h[i]=vt;++d[i];
            }
    return dfs(1);
}
int main(){
    scanf("%d%d",&n,&k);
    for(int i=1;i<=n;++i)scanf("%d%d",&p[i].x,&p[i].y);
    for(int i=1;i<=n;++i)for(int j=i;j<=n;++j){
        dis[i][j]=dis[j][i]=calc(p[i],p[j]);
        x[++tot]=dis[i][j];
    }
    sort(x+1,x+tot+1);
    tot=unique(x+1,x+tot+1)-x-1;
    int l=1,r=tot,mid;
    while(l<r){
        mid=(l+r)>>1;
        if(check(x[mid]))r=mid;
        else l=mid+1;
    }
    check(x[l]);
    for(int i=1;i<=k;++i)printf("%d ",out[i]);
    return 0;
}
