#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long LL;
const int maxn=1000+5;
int n,k,vis[maxn];
LL x[maxn],y[maxn],maxd,dd[maxn][maxn];
vector<int> g[maxn];
LL d[maxn*maxn/2];
LL dis(int a,int b) { return (x[a]-x[b])*(x[a]-x[b])+(y[a]-y[b])*(y[a]-y[b]); }
bool dfs(int cur,int now)
{
	if(cur>=n) return true;
	if(g[cur].size()==0 || vis[cur]) return dfs(cur+1,now);
	for(int i=0;i<g[cur].size();i++)
	{	
		vis[g[cur][i]]++;
		if(vis[g[cur][i]]==1) now++;
	}
	if(now<=k && dfs(cur+1,now))
		return true;
	int tmp=now;
	for(int i=0;i<g[cur].size();i++)
	{
		vis[g[cur][i]]--;
		if(vis[g[cur][i]]==0) now--;
	}
	if(g[cur].size()!=1)
	{
		vis[cur]++;
		if(now<=k && now+1<tmp && dfs(cur+1,now+1))
			return true;
		vis[cur]--;
	}
	return false;
}
bool check(LL ans)
{
	memset(vis,0,sizeof(vis));
	for(int i=0;i<n;i++) g[i].clear();
	for(int i=0;i<n;i++)
		for(int j=i+1;j<n;j++)
			if(dd[i][j]>ans)
			{
				g[i].push_back(j);
				g[j].push_back(i);
			}
	return dfs(0,0);
}
int main()
{
	//freopen("input.txt","r",stdin);
	scanf("%d %d",&n,&k);
	for(int i=0;i<n;i++)
		scanf("%I64d %I64d",&x[i],&y[i]);
	int cnt=0;
	for(int i=0;i<n;i++)
		for(int j=i+1;j<n;j++)
		{
			dd[i][j]=dd[j][i]=dis(i,j);
			d[++cnt]=dd[i][j];
		}
	sort(d+1,d+1+cnt);
	cnt=unique(d+1,d+cnt+1)-d-1;
	int l=1,r=cnt,m;
	while(l<r)
	{
		m=(l+r)>>1;
		if(check(d[m]))
			r=m;
		else
			l=m+1;
	}
	check(d[l]);
	int s=k;
	for(int i=0;i<n;i++)
		if(vis[i])
			printf("%d ",i+1),s--;
	for(int i=0;i<n && s>0;i++)
		if(!vis[i])
			printf("%d ",i+1),s--;
	printf("\n");
	return 0;
}