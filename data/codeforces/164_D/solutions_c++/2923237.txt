#include<cstdio>
#include<algorithm>
using namespace std;
const int n=1005;
int N,K,i,j,Num,p,tot;
int X[n],Y[n],Cnt[n],f[n],son[n];
long long P[n*n];
int ed[n*n],next[n*n];
int A[35];
int l,r,mid;
long long Dis(int i,int j)
{
	return (long long)(X[i]-X[j])*(X[i]-X[j])+(long long)(Y[i]-Y[j])*(Y[i]-Y[j]);
}
void Addedge(int i,int j)
{
	ed[++p]=j,next[p]=son[i],son[i]=p;
}
void Del(int i)
{
	int j;
	A[++Num]=i,f[i]=1;
}
void Add(int i)
{
	int j;
	--Num,f[i]=0;
}
bool dfs(int i)
{
	int j,tmp;
	if(i>N) return 1;
	if(!f[i])
	{
		Cnt[i]=0;
		for(j=son[i];j;j=next[j])
			Cnt[i]+=!f[ed[j]];
	}
	if(Cnt[i]&&!f[i])
	{
		if(Num+Cnt[i]<=K)
		{
			tmp=Num;
			for(j=son[i];j;j=next[j])
				if(!f[ed[j]]) Del(ed[j]);
			if(dfs(i+1)) return 1;
			for(;Num>tmp;) Add(A[Num]);
		}
		if(Cnt[i]>1&&Num+1<=K)
		{
			Del(i);
			if(dfs(i+1)) return 1;
			Add(i);
		}
		return 0;
	}
	return dfs(i+1);
}
bool Check(long long x)
{
	int i,j;
	bool flag=1;
	p=0;
	for(i=1;i<=N;++i) son[i]=Cnt[i]=f[i]=0;
	for(i=1;i<=N;++i)
		for(j=1;j<=N;++j)
			if(Dis(i,j)>x)
				Addedge(i,j),++Cnt[i];
	Num=0;
	return dfs(1);
}
int main()
{
	scanf("%d%d",&N,&K);
	for(i=1;i<=N;++i) scanf("%d%d",&X[i],&Y[i]);
	for(i=1;i<=N;++i)
		for(j=i+1;j<=N;++j)
			P[++tot]=Dis(i,j);
	sort(P+1,P+tot+1);
	for(l=0,r=tot;l<r;)
	{
		mid=(l+r)/2;
		if(Check(P[mid])) r=mid;
		else l=mid+1;
	}
	mid=(l+r)/2;
	Check(P[mid]);
	for(i=1;Num<=K;++i)
		if(!f[i]) A[++Num]=i;
	for(i=1;i<K;++i) printf("%d ",A[i]);
	printf("%d\n",A[K]);
	return 0;
}
