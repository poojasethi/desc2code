#define FILE_IO 0

#include<iostream>
#include<algorithm>
#include<vector>
#include<cstdio>
#include<cstring>

using namespace std;

const int maxn=1010;
int n,k;
int x[maxn],y[maxn],d[maxn][maxn],a[maxn*maxn];
int v[maxn];
vector<int> A[maxn];

bool dfs(int x,int k){
  if(x>n)return 1;
  if(v[x])return dfs(x+1,k);
  vector<int>::iterator it;
  for(it=A[x].begin();it!=A[x].end();++it)k-=!v[*it]++;
  if(k>=0)if(dfs(x+1,k))return 1;
  int t=k;
  for(it=A[x].begin();it!=A[x].end();++it)k+=!--v[*it];
  v[x]=1,--k;
  if(k>=0&&k>t)if(dfs(x+1,k))return 1;
  return v[x]=0;
}

bool check(int x){
  int i,j;
  for(i=1;i<=n;++i)
    v[i]=0,A[i].clear();
  for(i=1;i<=n;++i)
    for(j=1;j<=n;++j)
      if(d[i][j]>x)A[i].push_back(j);
  return dfs(1,k);
}

int main(){
  if(FILE_IO){
    freopen("t.in","r",stdin);
    freopen("t.out","w",stdout);
  }
  int i,j,m,l,r;
  scanf("%d%d",&n,&k);
  for(i=1;i<=n;++i)scanf("%d%d",x+i,y+i);
  for(m=i=1;i<=n;++i)
    for(j=i+1;j<=n;++j){
      d[i][j]=d[j][i]=(x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
      a[++m]=d[i][j];
    }
  sort(a+1,a+m+1);
  r=unique(a+1,a+m+1)-a-1;
  for(l=1;l!=r;)
    if(m=l+r>>1,check(a[m]))
      r=m;
    else
      l=m+1;
  check(a[r]);
  for(i=1;i<=n;++i)if(v[i])
    printf("%d ",i),--k;
  for(i=1;i<=n&&k!=0;++i)if(!v[i])
    printf("%d ",i),--k;
  return 0;
}
