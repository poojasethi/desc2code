#include<cstdio>
#include<algorithm>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<cmath>

using namespace std;

#define N 1005

int n,k,num,p,tot;
int xx[N],yy[N],cnt[N],f[N],son[N];
long long p1[N*N];
int start[N*N],next[N*N];
int a[35];
int l,r,mid;

long long dis(int x,int y)
{
	return (long long)(xx[x]-xx[y])*(xx[x]-xx[y])+(long long)(yy[x]-yy[y])*(yy[x]-yy[y]);
}

void add(int x,int y)
{
	start[++p]=y,next[p]=son[x],son[x]=p;
}

void del(int i)
{
	int j;
	a[++num]=i,f[i]=1;
}

void jia(int i)
{
	int j;
	--num,f[i]=0;
}

bool dfs(int x)
{
	int tmp;
	if(x>n) return 1;
	if(!f[x])
	{
		cnt[x]=0;
		for(int j=son[x];j;j=next[j])
			cnt[x]+=!f[start[j]];
	}
	if(cnt[x]&&!f[x])
	{
		if(num+cnt[x]<=k)
		{
			tmp=num;
			for(int j=son[x];j;j=next[j])
				if(!f[start[j]]) 
					del(start[j]);
			if(dfs(x+1)) 
				return 1;
			for(;num>tmp;) 
				jia(a[num]);
		}
		if(cnt[x]>1&&num+1<=k)
		{
			del(x);
			if(dfs(x+1)) 
				return 1;
			jia(x);
		}
		return 0;
	}
	return dfs(x+1);
}

bool check(long long x)
{
	bool flag=1;
	p=0;
	for(int i=1;i<=n;i++) 
		son[i]=cnt[i]=f[i]=0;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=n;++j)
			if(dis(i,j)>x)
				add(i,j),++cnt[i];
	num=0;
	return dfs(1);
}
int main()
{
	scanf("%d%d",&n,&k);
	for(int i=1;i<=n;i++) 
		scanf("%d%d",&xx[i],&yy[i]);
	for(int i=1;i<=n;i++)
		for(int j=i+1;j<=n;++j)
			p1[++tot]=dis(i,j);
	sort(p1+1,p1+tot+1);
	for(l=0,r=tot;l<r;)
	{
		mid=(l+r)/2;
		if(check(p1[mid]))  r=mid;
		else 	   			l=mid+1;
	}
	mid=(l+r)/2;
	check(p1[mid]);
	for(int i=1;num<=k;i++)
		if(!f[i]) 
			a[++num]=i;
	for(int i=1;i<=k;i++) 
		printf("%d ",a[i]);
	printf("\n");
	return 0;
}
  	   			 		  	  	 	