#include<cstdio>
#include<algorithm>
using namespace std;
const int n = 1005;
int N, K, Num, p, tot;
int X[n], Y[n], Cnt[n], exist[n], son[n];
int P[n *n];
int ed[n *n], next[n *n];
int A[35];
int l, r, mid;

long long Dis(int i, int j)
{
	return (long long)(X[i] - X[j]) * (X[i] - X[j]) + (long long)(Y[i] - Y[j]) * (Y[i] - Y[j]);
}

void Addedge(int i, int j)
{
	ed[++p] = j, next[p] = son[i], son[i] = p;
}

void Del(int i){A[++Num] = i, exist[i]=0;}
void Add(int i){--Num, exist[i]=1;}

bool dfs(int i)
{
	if (i > N) return 1;
	if (exist[i])
	{
		Cnt[i] = 0;
		for (int p = son[i]; p; p = next[p])
			Cnt[i] += exist[ed[p]];
	}
	if (Cnt[i] && exist[i])
	{
		if (Num + Cnt[i] <= K)
		{
			int tmp = Num;
			for (int p = son[i]; p; p = next[p])
				if (exist[ed[p]]) Del(ed[p]);
			if (dfs(i + 1)) return 1;
			for (; Num > tmp;) Add(A[Num]);
		}
		if (Cnt[i] > 1 && Num + 1 <= K)
		{
			Del(i);
			if (dfs(i + 1)) return 1;
			Add(i);
		}
		return 0;
	}
	return dfs(i + 1);
}

bool Check(int x)
{
	int i, j;
	bool flag = 1;
	p = 0;
	for (int i = 1; i <= N; ++i) son[i] = Cnt[i] = 0, exist[i]=1;
	for (int i = 1; i <= N; ++i)
		for (int j = 1; j <= N; ++j)
			if (Dis(i, j) > x)
				Addedge(i, j), ++Cnt[i];
	Num = 0;
	return dfs(1);
}

int main()
{
	scanf("%d%d", &N, &K);
	for (int i = 1; i <= N; ++i) scanf("%d%d", &X[i], &Y[i]);
	for (int i = 1; i <= N; ++i)
		for (int j = i + 1; j <= N; ++j)
			P[++tot] = Dis(i, j);
	sort(P + 1, P + tot + 1);
	for (l = 0, r = tot; l < r;)
	{
		mid = (l + r) / 2;
		if(Check(P[mid])) r = mid;
		else l = mid + 1;
	}
	mid = (l + r) / 2;
	Check(P[mid]);
	for (int i = 1; Num <= K; ++i)
		if (exist[i]) A[++Num] = i;
	for (int i = 1; i < K; ++i) printf("%d ", A[i]);
	printf("%d\n", A[K]);
	//for (;;);
	return 0;
}
