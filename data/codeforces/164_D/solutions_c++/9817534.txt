#include <map>
#include <set>
#include <list>
#include <ctime>
#include <cmath>
#include <queue>
#include <stack>
#include <bitset>
#include <vector>
#include <cstdio>
#include <string>
#include <cstring>
#include <sstream>
#include <iomanip>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;
int f[1005][1005],d[1000005],h[1005],x[1005],y[1005],n,k;
vector<int> g[1005];
bool dfs (int x,int y) {
    if (x>n) return true;
    if (h[x]) return dfs(x+1,y);
    int i,t;
    for (i=0;i<g[x].size();i++) {
    	if (!h[g[x][i]]) y--;
		h[g[x][i]]++;
    }
    if (y>=0 && dfs(x+1,y)) return true;
    t=max(-1,y);
    for (i=0;i<g[x].size();i++) {
    	h[g[x][i]]--;
        if (h[g[x][i]]==0) y++;
    }
    h[x]=1;y--;
    if (y>t && dfs(x+1,y)) return true;
    h[x]=0;
    return false;
}
bool judge (int x) {
	int i,j;
    memset(h,0,sizeof(h));
    for (i=1;i<=n;i++) g[i].clear();
    for (i=1;i<=n;i++) {
        for (j=1;j<=n;j++) {
            if (f[i][j]>x) g[i].push_back(j),g[j].push_back(i);
        }
	}
    return dfs(1,k);
}
int main ( ) {
	int i,j,r=0,m,t,w;
    scanf("%d%d",&n,&k);
    for (i=1;i<=n;i++) scanf("%d%d",&x[i],&y[i]);
    for (i=1;i<=n;i++) {
        for (j=i+1;j<=n;j++) {
            r++;d[r]=(x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
			f[i][j]=d[r];
        }
	}  
    sort(d,d+r+1);
    r=unique(d,d+r+1)-d-1;t=0;w=r;
    while (t<w) {
        m=(t+w)/2;
        if (judge(d[m])) w=m; else t=m+1;
    }
    judge(d[t]);
    for (i=1;i<=n;i++) {
        if (h[i]) {printf("%d ",i);k--;}
    }    
    for (i=1;i<=n;i++) {
        if (!h[i] && k!=0) {printf("%d ",i);k--;}
    }    
    puts("");
    return 0;
}
/*
Sample test(s)

input

5 2
1 2
0 0
2 2
1 1
3 3

output

5 2

input

4 1
0 0
0 0
1 1
1 1

output

3
*/
