#include<cstdio>
#include<algorithm>
#include<vector>
#define sqr(x) ((x)*(x))
#define dis(i,j) (sqr(x[i]-x[j])+sqr(y[i]-y[j]))
using namespace std;
vector<int> a[1005];
int d[1005][1005];
int e[1000005];
int h[1005];
int x[1005];
int y[1005];
int n,m,k;
bool dfs(int x,int k)
{	if (x>n)
		return 1;
	if (h[x])
		return dfs(x+1,k);
	int i,t;
	for (i=0;i<a[x].size();++i)
	{	if (h[a[x][i]]==0)
			--k;
		++h[a[x][i]];	
	}
	if (k>=0&&dfs(x+1,k))
		return 1;
	t=max(-1,k);
	for (i=0;i<a[x].size();++i)
	{	if (h[a[x][i]]==1)
			++k;
		--h[a[x][i]];
	}
	h[x]=1,--k;
	if (k>t&&dfs(x+1,k))
		return 1;
	h[x]=0;
	return 0;
}
bool check(int dist)
{	int i,j;
	for (i=1;i<=n;++i) 
	{	a[i].clear();
		h[i]=0;
	}
	for (i=1;i<n;++i)
		for (j=1;j<=n;++j)
			if (d[i][j]>dist)
			{	a[i].push_back(j);
				a[j].push_back(i);
			}
	return dfs(1,k);
}
void pre()
{	int i,j;
	for (i=1;i<n;++i)
		for (j=i+1;j<=n;++j)
			e[++m]=d[i][j]=dis(i,j);
	sort(&e[1],&e[m+1]);
	m=unique(&e[1],&e[m+1])-e-1;
}
void work()
{	int i,l,r,mid;
	l=0,r=m;
	while (l<r)
	{	mid=(l+r)/2;
		if (check(e[mid]))
			r=mid;
		else l=mid+1;
	}	
	check(e[l]);
	for (i=1;i<=n;++i)
		if (h[i])
		{	printf("%d ",i);
			--k;
		}
	for (i=1;i<=n;++i)
		if (k!=0&&h[i]==0)
		{	printf("%d ",i);
			--k;
		}
	printf("\n");
}
int main()
{	int i;
	scanf("%d%d",&n,&k);
	for (i=1;i<=n;++i)
		scanf("%d%d",&x[i],&y[i]);
	pre();
	work();
	return 0;
}
		  			  		   	 			  	  	 	