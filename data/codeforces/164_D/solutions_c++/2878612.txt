#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int t=1111;
struct edge{
	edge *nxt;
	int des;
	void maker(edge *&a,int b){
		nxt=a,des=b;
		a=this;
	}
} *tot,w[t*t],*sta[t];
int n,k;
int vis[t],dis[t][t],x[t],y[t],d[t*t];
bool sear(int i,int k){
	if (i==n) return true;
	if (vis[i]) return sear(i+1,k);
	for (edge *e=sta[i];e;e=e->nxt)
		if (!vis[e->des]++) k--;
	int lk=0;
	if (k>=0 && sear(i+1,k)) return true;
	for (edge *e=sta[i];e;e=e->nxt)
		if (!--vis[e->des]) k++,lk++;
	vis[i]=1;
	if (--k>=0 && lk>=2 && sear(i+1,k)) return true;
	vis[i]=0;
	return false;
}
bool getans(int d){
	int i,j;
	for (i=0;i<n;i++) sta[i]=NULL,vis[i]=0;
	for (tot=w,i=1;i<n;i++) for (j=0;j<i;j++) if (dis[i][j]>d)
		(tot++)->maker(sta[i],j),(tot++)->maker(sta[j],i);
	return sear(0,k);
}
int sqr(int a){
	return a*a;
}
int main(){
	scanf("%d%d",&n,&k);
	int i,j,l,r,mid,cnt;
	for (cnt=i=0;i<n;i++){
		scanf("%d%d",x+i,y+i);
		for (j=0;j<i;j++)
			d[cnt++]=dis[i][j]=sqr(x[i]-x[j])+sqr(y[i]-y[j]);
	}
	sort(d,d+cnt);
	cnt=unique(d,d+cnt)-d;
	for (l=0,r=cnt-1;l<r;){
		mid=(l+r)/2;
		if (!getans(d[mid])) l=mid+1; else r=mid;
	}
	if (getans(d[l])){}
	for (i=0;i<n;i++) if (vis[i]) printf("%d ",i+1),k--;
	for (i=0;k;i++) if (!vis[i]) printf("%d ",i+1),k--;
	return 0;
}
