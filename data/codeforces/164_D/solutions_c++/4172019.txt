#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<algorithm>
#define Pow(x) ((x)*(x))
#define LL long long
const int MAXN=1005;
const int MAXM=2*MAXN*MAXN;
int n,k,l;
int x[MAXN],y[MAXN],v[MAXN],dis[MAXN][MAXN];
int tot,d[MAXM],next[MAXM],last[MAXN];
void add(int x,int y)
{
    d[++tot]=y;next[tot]=last[x];last[x]=tot;
}
bool dfs(int x,int k)
{
    if(x>n)
        return 1;
    if(v[x])
        return dfs(x+1,k);
    for(int p=last[x];p;p=next[p])
        k-=!v[d[p]]++;
    if(k>=0&&dfs(x+1,k))
        return 1;
    v[x]=1;
    int tmp=k;
    for(int p=last[x];p;p=next[p])
        k+=!--v[d[p]];
    if(--k>=0&&k>tmp&&dfs(x+1,k))
        return 1;
    v[x]=0;
    return 0;
}
bool check(LL mid)
{
    l=0;
    memset(v,0,sizeof(v));
    memset(last,0,sizeof(last));
    for(int i=1;i<=n;i++)
        for(int j=1;j<=n;j++)
            if(dis[i][j]>mid)
                add(i,j);
    return dfs(1,k);
}
int main()
{
    scanf("%d%d",&n,&k);
    for(int i=1;i<=n;i++)
        scanf("%d%d",&x[i],&y[i]);
    for(int i=1;i<=n;++i)
        for(int j=1;j<=n;++j)
            dis[i][j]=Pow(x[i]-x[j])+Pow(y[i]-y[j]);
    LL l=0,r=1ll<<31;
    while(l<r)
    {
        int mid=(l+r)/2;
        if(check(mid))
            r=mid;
        else
            l=mid+1;
    }
    check(r);
    for(int i=1;i<=n&&k;++i)
        if(v[i])
            printf("%d%s",i,--k?" ":"\n");
    for(int i=1;i<=n&&k;++i)
        if(!v[i])
            printf("%d%s",i,--k?" ":"\n");
    return 0;
}
	 						 			 			   	  	  	