#include <cstdio>
#include <cstring>
#define maxm 2000005
using namespace std;

int N,K,head[1005],lk[maxm],next[maxm],x[1005],y[1005],b[1005],B[1005],d[1005][1005];
bool ok;

void add(int u,int v,int t) {lk[t]=v,next[t]=head[u],head[u]=t;}

void init()
{
	scanf("%d%d",&N,&K);
	for (int i=1; i<=N; i++) scanf("%d%d",&x[i],&y[i]);
	for (int i=1; i<=N; i++)
		for (int j=1; j<=N; j++) d[i][j]=(x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
}

void dfs(int t,int s)
{
	if (s>K||ok) return;
	if (t>N) {memcpy(B,b,sizeof(b)),ok=1; return;}
	if (b[t]) {dfs(t+1,s); return;}
	int k=0;
	for (int i=head[t]; i; i=next[i]) k+=!(b[lk[i]]++);
	dfs(t+1,s+k);
	for (int i=head[t]; i; i=next[i]) b[lk[i]]--;
	if (k>1) b[t]++,dfs(t+1,s+1),b[t]--;
}

bool check(int x)
{
	memset(head,0,sizeof(head)),memset(b,0,sizeof(b));
	for (int i=1,t=0; i<=N; i++)
		for (int j=1; j<=N; j++) if (d[i][j]>x) add(i,j,++t);
	ok=0,dfs(1,0);
	return ok;
}

void doit()
{
	int l=0,r=~0u>>1,m;
	for (;l<=r;) if (check(m=(0ll+l+r)/2)) r=m-1; else l=m+1;
	check(l);
	for (int i=1; K&&i<=N; i++) if (B[i]) printf("%d ",i),K--;
	for (int i=1; K&&i<=N; i++) if (!B[i]) printf("%d ",i),K--;
}

int main()
{
	init();
	doit();
	return 0;
}