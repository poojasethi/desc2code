#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<algorithm>
using namespace std;
const int N=1010;
int n,m,len=0;
int x[N],y[N];
int b[N*N],a[N][N];
int u[N],ot[N][N],hd[N];
bool dfs(const int x,int y)
{
    if ( x>n ) return 1;
    if ( u[x]>0 ) return dfs(x+1,y);
    for(int i=1;i<=hd[x];++i)
    {
        if ( u[ot[x][i]]==0 ) --y;
        ++u[ot[x][i]];
    }
    if ( y>=0 && dfs(x+1,y) ) return 1;
    int p=y;
    for(int i=1;i<=hd[x];++i)
    {
        --u[ot[x][i]];
        if ( u[ot[x][i]]==0 ) ++y;
    }
    ++u[x],--y;
    if ( y>=0 && y>p && dfs(x+1,y) ) return 1;
    --u[x],++y;
    return 0;
}
bool ok(const int X)
{
    memset(hd,0,sizeof(hd));
    for(int i=1;i<=n;++i)
        for(int j=1;j<=n;++j)
            if ( a[i][j]>X ) ot[i][++hd[i]]=j;
    memset(u,0,sizeof(u));
    return dfs(1,m);
}
int main()
{
    scanf("%d%d",&n,&m);
    for(int i=1;i<=n;++i) scanf("%d%d",&x[i],&y[i]);
    for(int i=1;i<=n;++i)
        for(int j=1;j<=n;++j)
            a[i][j]=(x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]),b[++len]=a[i][j];
    sort(b+1,b+1+len);
    int R=1,L=0,mid;
    for(int i=2;i<=len;++i)
        if ( b[i]!=b[R] ) b[++R]=b[i];
    while ( L+1<R )
    {
        mid=(L+R)>>1;
        if ( ok(b[mid]) ) R=mid;else L=mid;
    }
    ok(b[R]);
    for(int i=1;i<=n;++i)
        if ( u[i]>0 ) printf("%d ",i),--m;
    for(int i=1;i<=n;++i)
        if ( m>0 && u[i]==0 ) printf("%d ",i),--m;  
    return 0;
}