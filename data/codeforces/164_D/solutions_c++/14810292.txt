#include <cstdio>
#include <algorithm>
#include <vector>
#define LL long long
#define N 1005
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int n, m, x[N], y[N], d[N], a[N];
bool u[N];
vector<int> e[N];

bool dfs(int x, int y){
	if(y > m) return 0;
	if(x == n){
		int ptr = 0;
		while(y < m){
			while(u[ptr++]);
			d[y++] = ptr++;
		}
		return 1;
	}
	
	if(u[x]) return dfs(x + 1, y);
	
	int yy = y, ori[e[x].size()];
	fi(i, 0, e[x].size()){
		ori[i] = u[e[x][i]];
		if(!u[e[x][i]]){
			d[yy++] = e[x][i];
			u[e[x][i]] = 1;
		}
	}
	
	if(dfs(x + 1, yy)) return 1;
	
	fi(i, 0, e[x].size()) u[e[x][i]] = ori[i];
	
	d[y] = x;
	u[x] = 1;
	if(y + 1 < yy && dfs(x + 1, y + 1)) return 1;
	u[x] = 0;
	
	return 0;
}

bool ok(int l){
	fi(i, 0, n) u[i] = 0;
	fi(i, 0, n) e[i].clear();
	fi(i, 0, n) fi(j, 0, n) if((x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j]) > l) e[i].push_back(j);
	return dfs(0, 0);
}

int main(){
	scanf("%d %d", &n, &m);
	fi(i, 0, n) scanf("%d %d", &x[i], &y[i]);
	
	int l = 0, h = 2147483647;
	while(l < h){
		int mid = l + h >> 1;
		if(ok(mid)){
			h = mid;
			fi(i, 0, m) a[i] = d[i];
		}else l = mid + 1;
	}
	
	fi(i, 0, m) printf("%d\n", a[i] + 1);
	
	scanf("\n");
}
