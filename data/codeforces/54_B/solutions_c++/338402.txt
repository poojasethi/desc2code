#include <stdio.h>
#include <string.h>
#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
using namespace std;

class S {
public:
	int x, y;

	S() {}
	S(int xx, int yy):x(xx), y(yy) { }
	bool operator<(const S &other) const {
		if ( x*y == other.x*other.y )
			return x < other.x;
		return x*y < other.x*other.y;
	}
};

char pic[25][25];
int A, B;

bool check(int i, int j) {
	map<string, bool> mp;
//	printf("i=%d, j=%d\n", i, j);
	for ( int ii = 0; ii < A; ii+=i ) {
		for ( int jj = 0; jj < B; jj+=j) {
			string s[4];
			for ( int l = 0; l < i; l++ ) {
				for ( int m = 0; m < j; m++ )
					s[0] += pic[l+ii][m+jj];
				s[0] += ',';
			}

			for ( int l = j-1; l >= 0; l-- ) {
				for ( int m = 0; m < i; m++ )
					s[1] += pic[m+ii][l+jj];
				s[1] += ',';
			}
			
			for ( int l = i-1; l >= 0; l-- ) {
				for ( int m = j-1; m >= 0; m-- )
					s[2] += pic[l+ii][m+jj];
				s[2] += ',';
			}

			for ( int l = 0; l < j; l++ ) {
				for ( int m = i-1; m >= 0; m-- )
					s[3] += pic[m+ii][l+jj];
				s[3] += ',';
			}
			
			for ( int i = 0; i < 4; i++ )
				if ( mp.count(s[i]) )
					return false;

			for ( int i = 0; i < 4; i++ ) {
				mp[s[i]] = true;
//				printf("%s ", s[i].c_str());
			}
//			printf("\n");
		}
	}
//	printf("%d %d\n", i, j);

	return true;
}

int main() {
	scanf("%d %d\n", &A, &B);
	for ( int i = 0; i < A; i++ )
		scanf("%s", pic[i]);

	S sol[500];
	int cnt = 0;
	for ( int i = 1; i <= A; i++ ) {
		if ( A%i ) continue;
		for ( int j = 1; j <= B; j++ ) {				
			if ( B%j ) continue;
			if ( check(i,j) )
				sol[cnt++] = S(i,j);
		}
	}

	sort(sol, sol+cnt);
	printf("%d\n", cnt);
	printf("%d %d\n", sol[0].x, sol[0].y);
}
