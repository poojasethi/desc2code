#include <cstdio>
#include <algorithm>
using namespace std;
typedef long long ll;
const int N = 25;
char a[N][N], b[N][N], map[N * N][N][N];
int n, m;
bool check(int x, int y) {
	int size = 0;
	for(int c = 1; c <= n;c += x) {
		for(int l = 1; l <= m;l += y) {
			for(int i = 1; i <= x; i ++) {
				for(int j = 1; j <= y; j ++) {
					map[size][i][j] = a[c+i-1][l+j-1];
				}
			}
			size++;
		}
	}
	bool f;
	for(int i = 0; i < size; i ++) {
		for(int j = i+1; j < size; j ++) {
			f = 1;
			for(int c = 1; c <= x && f; c ++) {
				for(int l = 1; l <= y && f; l ++) {
					if(map[i][c][l] != map[j][c][l]) {
						f = 0;
					}
				}
			}
			if(f) return false;
			
			
			f = (x==y);
			for(int c = 1; c <= x && f; c ++) {
				for(int l = 1; l <= y && f; l ++) {
					if(map[i][c][l] != map[j][x-l+1][c]) {
						f = 0;
					}
				}
			}
			if(f) return false;
			
			f = (x==y);
			for(int c = 1; c <= x && f; c ++) {
				for(int l = 1; l <= y && f; l ++) {
					if(map[i][c][l] != map[j][l][y-c+1]) {
						f = 0;
					}
				}
			}
			if(f) return false;
			
			
			f = 1;
			for(int c = 1; c <= x && f; c ++) {
				for(int l = 1; l <= y && f; l ++) {
					if(map[i][c][l] != map[j][x-c+1][y-l+1]) {
						f = 0;
					}
				}
			}
			if(f) return false;
			
		}
	}
	return true;
}
int main() {
	scanf("%d%d", &n, &m);
	for(int i = 1; i <= n; i ++) {
		scanf("%s", a[i] + 1);
	}
	int cnt= 1, al = n, aw = m;
	for(int l = 1; l <= n; l ++) {
		if(n % l != 0) continue;
		for(int w = 1; w <= m; w ++) {
			if(m % w != 0) continue;
			if(l == n && w == m) break;
			if(check(l, w)) {
				if(l * w < al * aw) {
					al = l;
					aw = w;
				}
				cnt++;
//				printf("%d %d\n", l, w);
			}
		}
	}
	printf("%d\n%d %d\n", cnt, al, aw);
	return 0;
}
   	  	     		  			 	   		