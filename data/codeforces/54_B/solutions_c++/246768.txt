#include<iostream>
#include<iomanip>
#include<cstring>
#include<vector>
#include<cmath>
#include<string>
#include<map>
using namespace std;

int n , m;
char pic[21][21];
map <string , bool> Have;
char pool[21][21];

string reverse(string s)
{
	string ret = "";
	for(int i = s.length() - 1 ; i >= 0 ; i--)
		ret += s[i];
	return ret;
}

string hash(int N , int M)
{
	string ret = "";
	string s;
	for(int i = 0 ; i < N ; i++)
		for(int j = 0 ; j < M ; j++)
			s += pool[i][j];
	ret = s;
	if(reverse(s) < ret)
		ret = reverse(s);
	if(N != M)
		return ret;
	s = "";
	for(int i = M - 1 ; i >= 0 ; i--)
		for(int j = 0 ; j < N ; j++)
			s += pool[j][i];
	if(s < ret)
		ret = s;
	if(reverse(s) < ret)
		ret = reverse(s);
	return ret;
}

bool check(int N , int M)
{
	Have.clear();
	for(int i = 0 ; i < n / N ; i++)
		for(int j = 0 ; j < m / M ; j++)
		{
			for(int I = 0 ; I < N ; I++)
				for(int J = 0 ; J < M ; J++)
					pool[I][J] = pic[i*(N)+I][j*(M)+J];
			string t = hash(N , M);
			if(Have[t])
				return false;
			Have[t] = true;
		}
	return true;
}

int main()
{
	while(cin>>n>>m)
	{
		int way = 0;
		int ansX , ansY , ansS = 100000;
		for(int i = 0 ; i < n ; i++)
		{
			string s;
			cin>>s;
			for(int j = 0 ; j < m ; j++)
				pic[i][j] = s[j];
		}
		for(int i = 1 ; i <= n ; i++)
			for(int j = 1 ; j <= m ; j++)
				if(n % i == 0 && m % j == 0)
					if(check(i , j))
					{
						way ++;
						if(i * j < ansS || (i * j == ansS && i < ansX))
							ansS = i * j , ansX = i , ansY = j;
					}
		cout<<way<<endl;
		cout<<ansX<<" "<<ansY<<endl;
	}
	return 0;
}
