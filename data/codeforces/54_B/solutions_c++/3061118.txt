#include<cstdio>
#include<cstring>
#include<algorithm>
#include<map>
#include<string>
#define fou(i,j,k) for (int i=j;i<=k;i++)
#define fod(i,j,k) for (int i=j;i>=k;i--)
using namespace std;

typedef long long LL;

const int maxn=55;
const int oo=100000000;

int n,m;
int a[maxn][maxn];
map<string,bool> pc;
string str;

void init()
{
	scanf("%d%d",&n,&m);
	fou(i,1,n){
		getchar();
		fou(j,1,m) a[i][j]=getchar()-'A';
	}
}

bool hash(int x,int y,int dx,int dy)
{
	str="";
	fou(i,x,x+dx-1)
		fou(j,y,y+dy-1){
			str+=a[i][j];
		}
	if (pc[str]) return false;
	
	str="";
	fod(i,x+dx-1,x)
		fod(j,y+dy-1,y){
			str+=a[i][j];
		}
	if (pc[str]) return false;
	
	if (dx==dy){
		str="";
		fod(j,y+dy-1,y)
			fou(i,x,x+dx-1){
				str+=a[i][j];
			}
		if (pc[str]) return false;
	
		str="";
		fou(j,y,y+dy-1)
			fod(i,x+dx-1,x){
				str+=a[i][j];
			}
		if (pc[str]) return false;
	}
	
	pc[str]=true;
	return true;
}

bool check(int x,int y)
{
	pc.clear();
	for (int stx=1;stx<=n;stx+=x)
		for (int sty=1;sty<=m;sty+=y){
			if (!hash(stx,sty,x,y)) return false;
		}
	return true;
}

void solve()
{
	int ans=0,ansx,ansy,ar=oo;
	fou(x,1,n) if (n%x==0)
		fou(y,1,m) if (m%y==0){
			if (check(x,y)){
				ans++;
				if (x*y<ar) ar=x*y,ansx=x,ansy=y;
			}
		}
	printf("%d\n%d %d\n",ans,ansx,ansy);
}

int main()
{
	init();
	solve();
	return 0;
}
