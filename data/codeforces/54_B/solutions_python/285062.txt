from itertools import *

n, m = map (int, raw_input ().split ())
pic = [raw_input () for i in xrange (n)]

def divs (x):
    res = set ()
    for div in xrange (1, int (x ** 0.5) + 1):
        if x % div == 0:
            res.add (div)
            res.add (x / div)
    return list (res)
    
def rotate (pic, angle):
#    print angle #debug      
#    print pic #debug
#    print #debug
    
    pic = [list (i) for i in pic.split ('\n')]
    
    if len (pic) == len (pic[0]) == 1 or angle % 180 and len (pic) != len (pic[0]):
        return pic
    
    if angle == 180:
        return '\n'.join (''.join (i[::-1]) for i in pic[::-1])

    n = len (pic) / 2
    eps = len (pic) % 2
    for i in xrange (n):
        for j in xrange (n):
            if angle == 90:
                pic[i][j], pic[i][j + n + eps], pic[i + n + eps][j + n + eps], pic[i + n + eps][j] = pic[i + n + eps][j], pic[i][j], pic[i][j + n + eps], pic[i + n + eps][j + n + eps]
            elif angle == 270:
                pic[i][j], pic[i][j + n + eps], pic[i + n + eps][j + n + eps], pic[i + n + eps][j] = pic[i][j + n + eps], pic[i + n + eps][j + n + eps], pic[i + n + eps][j], pic[i][j]
    if eps:
        for i in xrange (n):
            if angle == 90:
                pic[i][n], pic[n][-i - 1], pic[-i - 1][n], pic[n][i] = pic[n][i], pic[i][n], pic[n][-i - 1], pic[-i - 1][n]
            elif angle == 270:
                pic[i][n], pic[n][-i - 1], pic[-i - 1][n], pic[n][i] = pic[n][-i - 1], pic[-i - 1][n], pic[n][i], pic[i][n]
    pic = '\n'.join (''.join (i) for i in pic)

#    print pic #debug
#    print '--------------' #debug

    return pic
    
X, Y, cnt = 100, 100, 0
for x in divs (n):
    for y in divs (m):
        puzzles = ['\n'.join (k[j:j + y] for k in pic[i:i + x]) for i in xrange (0, n, x) for j in xrange (0, m, y)]
        equals = True
        for p1, p2 in combinations (puzzles, 2):
            if p1 == p2 or rotate (p1, 90) == p2 or rotate (p1, 180) == p2 or rotate (p1, 270) == p2:
                equals = False
        if equals:
            if X * Y > x * y or X * Y == x * y and X > x:
                X, Y = x, y
            cnt += 1
        rotate (puzzles[0], 270)            
#        print x, y #debug
#        print puzzles #debug
        
print cnt
print X, Y
