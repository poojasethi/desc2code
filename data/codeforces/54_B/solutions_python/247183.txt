def hasPiece(piece, x, y, mas):
    if x == y:
        if x == 1:
            if piece[0] in mas:
                return True
            else:
                mas.append(piece[0])
                return False
        else:
            ps1 = ''.join([piece[i] for i in xrange(x)])
            ps2 = ''.join(reversed([''.join(reversed(piece[i])) for i in xrange(x)]))
            ps3 = ''.join(reversed([''.join([piece[i][j] for i in xrange(x)]) for j in xrange(y)]))
            ps4 = ''.join([''.join(reversed([piece[i][j] for i in xrange(x)])) for j in xrange(y)])
            if ps1 in mas or ps2 in mas or ps3 in mas or ps4 in mas:
                return True
            else:
                mas.append(ps1)
                return False
    else:
        ps1 = ''.join([piece[i] for i in xrange(x)])
        ps2 = ''.join(reversed([''.join(reversed(piece[i])) for i in xrange(x)]))
        if ps1 in mas or ps2 in mas:
            return True
        else:
            mas.append(ps1)
            return False

def checkMap(x, y):
    mas = []
    for i in xrange(n/x):
        for j in xrange(m/y):
            piece = [''.join([map[k][l] for l in xrange(y*j, y*(j+1))]) for k in xrange(x*i, x*(i+1))]
            if hasPiece(piece, x, y, mas):
                return False
    return True

n, m = map(int, raw_input().split())
map = [raw_input().rstrip() for i in xrange(n)]
X = [i for i in xrange(1, n+1) if n % i == 0]
Y = [i for i in xrange(1, m+1) if m % i == 0]

count = 0
minS = n*m
sol = (n, m)
for x in X:
    for y in Y:
        if checkMap(x, y):
            count += 1
            if minS > x*y:
                minS = x*y
                sol = (x, y)
print count
print sol[0], sol[1]