#include<stdio.h>
#include<algorithm>
#include<math.h>
#include<vector>
using namespace std;
int nf,ne,ns,n;
int rf,re,rs;
int df,de;
double lf,le,ls;
int all;
inline double cross(double a,double b,double x,double y)
{
	return max(0.0,min(b,y)-max(a,x));
}
int main()
{
	scanf("%d%d%d",&nf,&ne,&ns);
	scanf("%d%d%d",&rf,&re,&rs);
	scanf("%d%d",&df,&de);
	lf=sqrt(rf*rf-1);
	le=sqrt(re*re-1);
	ls=sqrt(rs*rs-1);
	n=nf+ne+ns;
	all=(1<<n)-1;
	double ans=0;
	for(int s=0;s<=all;s++)if(__builtin_popcount(s)==ns)
	{
		int t=all^s;
		vector<double>v;
		double ret=0;
		for(;t;t-=t&-t)
		{
			int pa=__builtin_ctz(t)/2;
			double ddf=2*lf*df,dde=2*le*de;
			for(int _s=s;_s;_s-=_s&-_s)
			{
				int pi=__builtin_ctz(_s)/2;
				ddf+=df*cross(pa-lf,pa+lf,pi-ls,pi+ls);
				dde+=de*cross(pa-le,pa+le,pi-ls,pi+ls);
			}
			ret+=ddf;
			v.push_back(ddf-dde);
		}
		sort(v.begin(),v.end());
		for(int i=0;i<ne;i++)ret-=v[i];
		if(ret>ans)ans=ret;
	}
	printf("%.10lf\n",ans);
	return 0;
}
