#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
using namespace std;
int nf, ns, ne, df, de, tot, n, m;
double a[50], vf, ve, ans, res, rf, rs, re;
double cross(double x1, double x2, double y1, double y2)
{
    return max(0.0, min(x2, y2) - max(x1, y1));
}
int main()
{
    scanf("%d%d%d%lf%lf%lf%d%d", &nf, &ne, &ns, &rf, &re, &rs, &df, &de);
    rf = sqrt(rf * rf - 1), re = sqrt(re * re - 1), rs = sqrt(rs * rs - 1);
    n = nf + ne + ns, m = 1 << n, m--;
    for (int i = 0; i <= m; i++)
    {
        if (__builtin_popcount(i) != ns) continue;
        tot = 0, res = 0;
        for (int j = i ^ m; j; j -= j & -j)
        {
            int x = __builtin_ctz(j) >> 1;
            vf = 2 * df * rf, ve = 2 * de * re;
            for (int k = i; k; k -= k & -k)
            {
                int y = __builtin_ctz(k) >> 1;
                vf += cross(x - rf, x + rf, y - rs, y + rs) * df;
                ve += cross(x - re, x + re, y - rs, y + rs) * de;
            }
            res += vf;
            a[++tot] = vf - ve;
        }
        sort(a + 1, a + tot + 1);
        for (int j = 1; j <= ne; j++) res -= a[j];
        if (res > ans) ans = res;
    }
    printf("%.10lf\n", ans);
    return 0;
}
