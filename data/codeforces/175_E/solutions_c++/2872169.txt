#include <cstdio>
#include <cstring>
#include <cmath>
#include<algorithm>
using namespace std;
int l,n1,n2,n3,d1,d2,m;
double ans,r1,r2,r3,t1[21],t2[21],c[21];
bool p[21];
double hs(double x,double y)
{
	if (x>y) return 0;else return y-x;
}
double hs1(int x)
{
	double k1,k2,s;int i,j;
	k1=(x-1)/2-r1;k2=(x-1)/2+r1;s=(k2-k1)*d1;
	for (i=1;i<=n3;++i) s+=hs(max(k1,t1[i]),min(k2,t2[i]))*d1;
	return s;
}
double hs2(int x)
{
	double k1,k2,s;int i,j;
	k1=(x-1)/2-r2;k2=(x-1)/2+r2;s=(k2-k1)*d2;
	for (i=1;i<=n3;++i) s+=hs(max(k1,t1[i]),min(k2,t2[i]))*d2;
	return s;
}
void kp(int l,int r)
{
	int i=l,j=r;double m=c[(i+j)/2],t;
	while (i<=j)
	{
		while (c[i]>m) ++i;
		while (c[j]<m) --j;
		if (i<=j)
		{
			t=c[i];c[i]=c[j];c[j]=t;
			++i;--j;
		}
	}
	if (i<r) kp(i,r);if (l<j) kp(l,j);
}
void gc2()
{
	int i,j,k;double f[21][21],f1,f2,s=0;
	memset(f,0,sizeof(f));l=0;
	for (i=1;i<=m;++i) if (!p[i])
	{
		f1=hs1(i);f2=hs2(i);s+=f1;++l;c[l]=f2-f1;
	}
	if (l>1) kp(1,l);for (i=1;i<=n2;++i) s+=c[i];
	ans=max(ans,s);
}
void gc(int t,int s)
{
  if (t+s-1>m) return;
  if (t==m+1) {gc2();return;}
  p[t]=false;gc(t+1,s);
  t1[n3-s+1]=(t-1)/2-r3;t2[n3-s+1]=(t-1)/2+r3;
  p[t]=true;gc(t+1,s-1);
}
int main()
{
  scanf("%d%d%d%lf%lf%lf%d%d",&n1,&n2,&n3,&r1,&r2,&r3,&d1,&d2);
  r1=sqrt(r1*r1-1);r2=sqrt(r2*r2-1);r3=sqrt(r3*r3-1);m=n1+n2+n3;
  gc(1,n3);printf("%.10lf\n",ans);
}
