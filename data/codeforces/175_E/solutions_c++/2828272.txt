#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;

const int maxn = 23, maxt = 1100005;
int cnt[maxt], l2[maxt];
double lis[maxn];
int nf, ne, ns, df, de;
double rf, re, rs, ans;

int main() {
    int i, x, u, v, a, b, n, tn, tot; double tmp, cf, ce, rr;
    scanf("%d%d%d%lf%lf%lf%d%d", &nf, &ne, &ns, &rf, &re, &rs, &df, &de);
    rf = sqrt(rf * rf - 1); re = sqrt(re * re - 1); rs = sqrt(rs * rs - 1);
    n = nf + ne + ns; tn = (1 << n) - 1;
    for (i = 1; i <= tn; ++i) cnt[i] = cnt[i >> 1] + (i & 1);
    for (i = 0; i <= n; ++i) l2[1 << i] = i;
    for (x = 0; x <= tn; ++x)
        if (cnt[x] == ns) {
            tot = 0; tmp = 0;
            for (u = x ^ tn; u; u -= u & -u) {
                a = l2[u & -u] / 2; cf = 2 * rf * df; ce = 2 * re * de;
                for (v = x; v; v -= v & -v) {
                    b = l2[v & -v] / 2;
                    rr = min(a + rf, b + rs) - max(a - rf, b - rs);
                    if (rr > 0) cf += rr * df;
                    rr = min(a + re, b + rs) - max(a - re, b - rs);
                    if (rr > 0) ce += rr * de;
                }
                tmp += cf; lis[++tot] = cf - ce;
            }
            sort(lis + 1, lis + tot + 1);
            for (i = 1; i <= ne; ++i) tmp -= lis[i];
            ans = max(ans, tmp);
        }
    printf("%.15lf\n", ans);
    return 0;
}
