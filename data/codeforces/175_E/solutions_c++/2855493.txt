//175E
#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <iomanip>
using namespace std;
double ans=0;
int ne,nf,ns;
double le,lf,ls;
int rf,re,rs;
int de,df;
double interFLen[30][30];
double interELen[30][30];
double inter(double st1,double ed1,double st2,double ed2){
	if(st2>ed1 || st1>ed2)return 0;
	return min(ed1,ed2)-max(st1,st2);
}
int place[30];
void calc(){
	static double winF[30];
	static double winE[30];
	for(int i=1;i<=13;i++){
		winF[i]=2*lf;
		winE[i]=2*le;
		for(int j=1;j<=13;j++){
			winF[i]+=interFLen[i][j]*place[j];
			winE[i]+=interELen[i][j]*place[j];
		}
		winF[i]*=df;
		winE[i]*=de;
	}
	static double f[30][30];
	memset(f,0,sizeof(f));
	for(int pos=1;pos<=13;pos++){
		for(int times=1;times<=2-place[pos];times++){
			for(int i=nf;i>=0;i--){
				for(int j=ne;j>=0;j--){
					if(i)
						f[i][j]=max(f[i][j],f[i-1][j]+winF[pos]);
					if(j)
						f[i][j]=max(f[i][j],f[i][j-1]+winE[pos]);
				}
			}
		}
	}
	ans=max(ans,f[nf][ne]);
}
void dfs(int id,int left){
	if(id==14){
		if(!left)
			calc();
		return;
	}
	//Nothing
	dfs(id+1,left);
	//Place one
	if(left>=1){
		place[id]=1;
		dfs(id+1,left-1);
		place[id]=0;
	}
	//Place two
	if(left>=2){
		place[id]=2;
		dfs(id+1,left-2);
		place[id]=0;
	}
}
int main(){
	scanf("%d%d%d",&nf,&ne,&ns);
	scanf("%d%d%d",&rf,&re,&rs);
	scanf("%d%d",&df,&de);
	lf=sqrt(rf*rf-1);
	le=sqrt(re*re-1);
	ls=sqrt(rs*rs-1);
	for(int i=1;i<=13;i++)
		for(int j=1;j<=13;j++)
			interFLen[i][j]=inter(i-lf,i+lf,j-ls,j+ls),
			interELen[i][j]=inter(i-le,i+le,j-ls,j+ls);
	dfs(1,ns);
	cout<<fixed<<setprecision(6)<<ans<<endl;
	return 0;
}
