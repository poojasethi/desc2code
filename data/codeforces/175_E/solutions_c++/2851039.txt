#include<iostream>
#include<iomanip>
#include<algorithm>
#include<cmath>
using namespace std;
int v[21],pos[21],nf,ne,ns,df,de;
double rf,re,rs,ans;

double cross(double a,double b,double c,double d)
{
	return max(min(b,d)-max(a,c),0.0);
}

void calc()
{
	int m,i,j;
	double a[21],f,e,temp=2*nf*rf*df+2*ne*re*de;
	for(i=1,m=0;i<=nf+ne+ns;i++)
		if(!v[i])
		{
			for(j=1,f=e=0;j<=ns;j++)
			{
				f+=df*cross((i+1)/2-rf,(i+1)/2+rf,pos[j]-rs,pos[j]+rs);
				e+=de*cross((i+1)/2-re,(i+1)/2+re,pos[j]-rs,pos[j]+rs);
			}
			temp+=f;
			a[++m]=f-e;
		}
	sort(a+1,a+m+1);
	for(i=1;i<=ne;i++) temp-=a[i];
	ans=max(ans,temp);
}

void dfs(int x,int y)
{
	if(y>nf+ne+ns-x+1) return;
	if(x>nf+ne+ns) {calc(); return;}
	v[x]=0,dfs(x+1,y);
	if(y) v[x]=1,pos[y]=x+1>>1,dfs(x+1,y-1);
}

int main()
{
	cin>>nf>>ne>>ns>>rf>>re>>rs>>df>>de;
	rf=sqrt(rf*rf-1),re=sqrt(re*re-1),rs=sqrt(rs*rs-1);
	dfs(1,ns);
	cout<<setprecision(10)<<fixed<<ans<<endl;
	return 0;
}