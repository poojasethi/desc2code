#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#define db double
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,n1,n2,n3,c1,c2;
int a[30];
db r1,r2,r3,an,b[30],c[30],f[30][30];
inline db get(int x,int y,db r) {
	return max(0.,min(x+r,y+r3)-max(x-r,y-r3));
}
inline void work() {
	int i,j;
	For(i,0,n-1) if (!a[i]) {
		b[i]=r1*2; c[i]=r2*2;
		For(j,0,n-1) if (a[j]) {
			b[i]+=get(i/2,j/2,r1);
			c[i]+=get(i/2,j/2,r2);
		}
		b[i]*=c1; c[i]*=c2;
	}
	For(i,0,n)For(j,0,n1) f[i][j]=-1e9;
	f[0][0]=0;
	For(i,0,n-1)For(j,0,n1) if (f[i][j]>=0) {
		if (a[i]) {
			f[i+1][j]=f[i][j];
			continue;
		}
		if (j<n1) f[i+1][j+1]=max(f[i+1][j+1],f[i][j]+b[i]);
		f[i+1][j]=max(f[i+1][j],f[i][j]+c[i]);
	}
	an=max(an,f[n][n1]);
}
void dfs(int x,int y) {
	if (x+n3-y>n) return;
	if (x==n) {
		work();
		return;
	}
	dfs(x+1,y);
	if (y<n3) {
		a[x]=1;
		dfs(x+1,y+1);
		a[x]=0;
	}
}
int main() {
	scanf("%d%d%d",&n1,&n2,&n3);
	scanf("%lf%lf%lf",&r1,&r2,&r3);
	r1=sqrt(r1*r1-1);
	r2=sqrt(r2*r2-1);
	r3=sqrt(r3*r3-1);
	scanf("%d%d",&c1,&c2);
	n=n1+n2+n3;
	dfs(0,0);
	printf("%.12lf\n",an);
	return 0;
}
