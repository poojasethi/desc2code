#include<cstdio>
#include<iostream>
#include<string>
#include<cstring>
#include<algorithm>
#include<cmath>
using namespace std;

struct unit
{int x;
 double w;
};
struct unit b[50];

int n,m,nf,ne,ns,rf,re,rs,df,de;
int a[30];
double inf=1e9,ans;
double f[11][21][21];

bool cmp(struct unit A,struct unit B)
{return A.w<B.w;
}

double calc(double l,double r)
{int i,s=0;
 double ret=0,x;

 for(i=1;i<m;i++)
 {	s+=b[i].x;
 	x=min(r,b[i+1].w)-max(l,b[i].w);
 	if(x>0) ret+=s*x;
 }
 return ret;
}
 	
void work()
{int i,j,k;
 double s1,s2;

 m=0;
 for(i=1;i<=n;i++)
 	if(a[i])
 	{	b[++m]=(unit){a[i],i-sqrt(rs*rs-1)};
 		b[++m]=(unit){-a[i],i+sqrt(rs*rs-1)};
 	}
 b[++m]=(unit){1,-inf};
 b[++m]=(unit){-1,inf};	
 sort(b+1,b+m+1,cmp);	
 for(i=1;i<=n;i++)
 {	s1=calc(i-sqrt(rf*rf-1),i+sqrt(rf*rf-1))*df;
 	s2=calc(i-sqrt(re*re-1),i+sqrt(re*re-1))*de;
 	for(j=0;j<=nf;j++)
	 	for(k=0;k<=ne;k++)
		{	f[i][j][k]=f[i-1][j][k];
			if(a[i]<=1)
			{	if(j>0) f[i][j][k]=max(f[i][j][k],f[i-1][j-1][k]+s1);
				if(k>0) f[i][j][k]=max(f[i][j][k],f[i-1][j][k-1]+s2);
			}
			if(!a[i])
			{	if(j>=2) f[i][j][k]=max(f[i][j][k],f[i-1][j-2][k]+2*s1);
				if(k>=2) f[i][j][k]=max(f[i][j][k],f[i-1][j][k-2]+2*s2);	
				if(j>=1 && k>=1) f[i][j][k]=max(f[i][j][k],f[i-1][j-1][k-1]+s1+s2);
			}
		}
 }
 ans=max(ans,f[n][nf][ne]);
}

int main()
{int i,j,s;
 
 scanf("%d%d%d",&nf,&ne,&ns);
 scanf("%d%d%d",&rf,&re,&rs);
 scanf("%d%d",&df,&de);
 n=(nf+ne+ns+1)/2;
 s=0;
 for(i=n;i>=1;i--)
 	if(ns-s>=2)
 	{	a[i]=2;
 		s+=2;
 	}
 	else if(ns-s>=1)
	{ 	a[i]=1;
		s++;
	}
	else
		break;
 while(!a[0])
 {	if(s==ns) work();
 	j=n;
 	while(a[j]==2)
 	{	a[j]=0;
 		s-=2;
 		j--;
 	}
 	a[j]++;
 	s++;
 } 
 printf("%.10lf\n",ans);
 return 0;
}