#include<iostream>
#include<sstream>
#include<vector>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#define rep(i,n) for(int i=0;i<(int)(n);i++)
#define fr(i,c) for(__typeof (c.begin()) i=c.begin(); i!=c.end(); i++)
#define all(c) (c).begin(), (c).end()
#define pb push_back
using namespace std;

typedef vector<int> vi;
typedef vector<vi> mat;
typedef long long ll;

const int mod=12345;
mat operator*(const mat &a,const mat &b){
  mat res(a.size(),vi(b[0].size()));
  rep(i,res.size())rep(j,res[0].size())rep(k,a[0].size())(res[i][j]+=a[i][k]*b[k][j])%=mod;
  return res;
}
mat pow(mat m,ll n){
  mat res(m.size(),vi(m.size()));
  rep(i,res.size())res[i][i]=1;
  for(;n;n>>=1){
    if(n&1)res=res*m;
    m=m*m;
  }
  return res;
}

void run(){
  ll n;
  int c;
  cin>>n>>c;
  vi v[26];
  int szs[26];
  rep(i,c){
    char a; int m;
    cin>>a>>m;
    v[a-'A'].pb(m);
  }
  int sz=1;
  rep(i,26){
    int lcm=1;
    rep(j,v[i].size())lcm=lcm*v[i][j]/__gcd(lcm,v[i][j]);
    sz*=lcm;
    szs[i]=lcm;
  }
  mat M(sz,vi(sz));
  rep(i,sz){
    vi nums; int m=i;
    rep(j,26){
      nums.pb(m%szs[j]);
      m/=szs[j];
    }
    rep(j,26){
      vi nxt=nums;
      nxt[j]=(nxt[j]+1)%szs[j];
      int m=0;
      for(int k=25;k>=0;k--)m=m*szs[k]+nxt[k];
      if(!v[j].empty())M[m][i]++;
    }
  }
  M=pow(M,n);
  int ans=0;
  rep(i,sz){
    vi nums; int m=i;
    bool ok=1;
    rep(j,26){
      nums.pb(m%szs[j]);
      m/=szs[j];
      bool ok2=v[j].empty();
      rep(k,v[j].size())if(nums[j]%v[j][k]==0)ok2=1;
      if(!ok2)ok=0;
    }
    if(ok)ans+=M[i][0];
  }
  cout<<ans%mod<<endl;
}
int main(){
#ifndef ONLINE_JUDGE
  rep(i,3)
#endif
    run();
  return 0;
}
