#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long LL;
const int maxm = 35, maxn = 155, mod = 12345;
struct Tmat { int v[maxn][maxn]; };
Tmat ans, e, tmp;
int len[maxm], crime[maxm][maxn];
int sum[maxm], num[maxm];
int m, res;
LL n;

void mul(Tmat a, Tmat b, Tmat &c) {
    int i, j, k;
    for (i = 0; i < m; ++i)
        for (j = 0; j < m; ++j)
            for (k = 0, c.v[i][j] = 0; k < m; ++k)
                c.v[i][j] = (c.v[i][j] + a.v[i][k] * b.v[k][j]) % mod;
}

int main() {
    int i, j, q, t, x; bool flag; char st[10];
    scanf("%I64d%d", &n, &q);
    for (i = 0, m = 1; i < 26; ++i) sum[i] = 1;
    while (q--) {
        scanf("%s%d", st, &x);
        t = st[0] - 'A';
        crime[t][len[t]++] = x;
        sum[t] *= x; m *= x;
    }
    for (x = 0; x < m; ++x) {
        for (i = 0, t = x; i < 26; ++i)
            num[i] = t % sum[i], t /= sum[i];
        for (i = 0; i < 26; ++i) {
            ++num[i]; t = 0;
            for (j = 25; j >= 0; --j)
                t = t * sum[j] + num[j] % sum[j];
            --num[i]; if (len[i]) ++e.v[x][t];
        }
    }
    for (x = 0; x < m; ++x) ans.v[x][x] = 1;
    for (; n; n >>= 1, mul(e, e, e))
        if (n & 1) mul(ans, e, ans);
    for (x = 0; x < m; ++x) {
        t = x; flag = true;
        for (i = 0; i < 26; ++i) {
            if (!len[i]) continue;
            for (j = 0; j < len[i]; ++j)
                if (t % crime[i][j] == 0) break;
            if (j == len[i]) flag = false;
            t /= sum[i];
        }
        if (flag) res = (res + ans.v[0][x]) % mod;
    }
    printf("%d\n", res);
    return 0;
}
