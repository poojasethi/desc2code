//program 107-D

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

using namespace std;

const int Mod=12345;

int main()
{
  long long K;cin>>K;
  int M;scanf("%d",&M);
  if(!K){printf("1\n");return 0;}
  if(!M){printf("0\n");return 0;}
  static bool Used[26];
  memset(Used,0,sizeof(Used));
  static int X[1000],Type[1000];
  for(int i=0;i<M;i++)
    {
      char c;while(c=getchar(),c<'A'||c>'Z');
      Used[Type[i]=c-65]=true;
      scanf("%d",&X[i]);
    }
  static int W[1000];
  W[M-1]=1;for(int i=M-1;i;i--)W[i-1]=W[i]*X[i];
  int N=X[0]*W[0];
  static int G[60][123][123];
  for(int i=0;i<N;i++)
    {
      static int A[1000];
      int Mask=i;
      for(int j=0;j<M;j++)
        {
          A[j]=Mask/W[j];
          Mask%=W[j];
        }
      for(int j=0;j<26;j++)
        {
          if(!Used[j])continue;
          int New=0;
          for(int k=0;k<M;k++)
            {
              int T=A[k];
              if(Type[k]==j)T++;
              New+=T%X[k]*W[k];
            }
          G[0][i][New]++;
        }
    }
  for(int T=1;(1LL<<T)<=K;T++)
    for(int i=0;i<N;i++)
      for(int k=0;k<N;k++)
        if(G[T-1][i][k])
          for(int j=0;j<N;j++)
            G[T][i][j]=(G[T][i][j]+G[T-1][i][k]*G[T-1][k][j])%Mod;
  static int V[123];
  memset(V,0,sizeof(V));
  V[0]=1;
  for(int T=0;(1LL<<T)<=K;T++)
    if(K&(1LL<<T))
      {
        static int U[123];
        memset(U,0,sizeof(U));
        for(int i=0;i<N;i++)
          for(int j=0;j<N;j++)
            U[j]=(U[j]+V[i]*G[T][i][j])%Mod;
        for(int i=0;i<N;i++)V[i]=U[i];
      }
  int Ans=0;
  for(int i=0;i<N;i++)
    {
      static bool OK[26];
      memset(OK,0,sizeof(OK));
      int Mask=i;
      for(int j=0;j<M;j++)
        {
          if(Mask<W[j])OK[Type[j]]=true;
          Mask%=W[j];
        }
      bool Flag=true;
      for(int j=0;Flag&&j<26;j++)Flag=OK[j]||!Used[j];
      if(Flag)Ans=(Ans+V[i])%Mod;
    }
  printf("%d\n",Ans);
  return 0;
}
