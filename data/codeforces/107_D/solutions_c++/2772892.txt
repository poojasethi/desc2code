#include<stdio.h>
#include<string.h>
typedef long long ll;
const int MOD=12345;
ll K;
int n;
int c[1010],t[1010],s[1010];
typedef int mat[123][123];
mat g[70];
int N;
void mul(mat &a,mat &b,mat &c)
{
	for(int i=0;i<N;i++)
		for(int j=0;j<N;j++)
		{
			c[i][j]=0;
			for(int k=0;k<N;k++)c[i][j]=(c[i][j]+a[i][k]*b[k][j])%MOD;
		}
}
bool b[26];
int main()
{
	scanf("%I64d%d",&K,&n);
	for(int i=1;i<=n;i++)
	{
		char buf[10];
		int x;
		scanf("%s%d",buf,&x);
		c[i]=*buf-'A';
		b[c[i]]=1;
		t[i]=x;
	}
	s[0]=1;
	for(int i=1;i<=n;i++)s[i]=s[i-1]*t[i];
	N=s[n];
	for(int i=0;i<N;i++)
		for(int ch=0;ch<26;ch++)if(b[ch])
		{
			int y=i;
			for(int j=1;j<=n;j++)if(c[j]==ch)
			{
				int x=i%s[j]/s[j-1];
				if(x==t[j]-1)y-=s[j-1]*(t[j]-1);
				else y+=s[j-1];
			}
			g[0][i][y]++;
		}
	mat ans,cur;
	memset(ans,0,sizeof(ans));
	for(int i=0;i<N;i++)ans[i][i]=1;
	for(ll t=1,i=0;t<=K;t*=2,i++)
	{
		if(K&t)memcpy(cur,ans,sizeof(mat)),mul(cur,g[i],ans);
		mul(g[i],g[i],g[i+1]);
	}
	int Ans=0;
	for(int i=0;i<N;i++)
	{
		bool ok=1;
		for(int ch=0;ch<26;ch++)if(b[ch])
		{
			bool cok=0;
			for(int j=1;j<=n;j++)if(c[j]==ch)
			{
				int x=i%s[j]/s[j-1];
				if(!x){cok=1;break;}
			}
			if(!cok){ok=0;break;}
		}
		if(ok)Ans=(Ans+ans[0][i])%MOD;
	}
	printf("%d\n",Ans);
}
