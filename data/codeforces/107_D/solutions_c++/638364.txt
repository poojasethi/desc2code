#include<cstdio>
#include<cstring>
#include<iostream>
using namespace std;

const int MOD=12345;

#define llint long long
char s[5];
llint m;
int num,cnt,p,mul[10],lin[10],c[10],b[130][130],f[130],g[130],ans,n,ret[130][130],u;
bool a[30][130];

void init()
{
	cin>>m>>n;
	for(int i=1;i<=n;i++)
	{
		cin>>s>>num;
		a[s[0]-'A'][num]=true;
	}
	for(int i=0;i<26;i++)
	{
		bool f=false;
		if (a[i][1])
		{
			cnt++;
			a[i][0]=true;
			continue;
		}
		for(int j=2;j<=123;j++)
			if (a[i][j]) f=true;
		if (!f) a[i][0]=true;
	}
	u=1;
	for(int i=0;i<26;i++) if (!a[i][0])
	{
		mul[++p]=1;
		for(int j=1;j<=123;j++) if (a[i][j]) mul[p]*=j;
		lin[p]=i; u*=mul[p];
	}
}

void split(int k)
{
	int len=0;
	memset(c,0,sizeof c);
	for(int i=1;i<=p;i++)
	{
		c[++len]=k%mul[i];
		k/=mul[i];
	}
}

int join()
{
	int ret=0;
	for(int i=p;i;i--)
		ret=ret*mul[i]+c[i];
	return ret;
}

void makematrix()
{
	for(int i=0;i<u;i++)
	{
		b[i][i]=cnt;
		for(int j=1;j<=p;j++)
		{
			split(i);
			c[j]=(c[j]+1)%mul[j];
			b[i][join()]=1;
		}
	}
}

int main()
{
	//freopen("107D.in","r",stdin); 
	
	init();
	makematrix();
	f[0]=1;
	for(;m;m/=2)
	{
		if (m%2)
		{
			memset(g,0,sizeof g);
			for(int j=0;j<u;j++)
				for(int k=0;k<u;k++)
					g[j]=(g[j]+f[k]*b[k][j])%MOD;
			memcpy(f,g,sizeof f);
		}
		memset(ret,0,sizeof ret);
		for(int i=0;i<u;i++)
			for(int k=0;k<u;k++) if (b[i][k])
				for(int j=0;j<u;j++)
					ret[i][j]=(ret[i][j]+b[i][k]*b[k][j])%MOD;
		memcpy(b,ret,sizeof b);
	}
	memset(g,0,sizeof g);
	for(int i=0;i<u;i++)
	{
		split(i);
		for(int j=1;j<=p;j++)
			for(int k=2;k<=123;k++)
				if (a[lin[j]][k]&&c[j]%k==0) g[i]|=1<<(j-1);
		if (g[i]==(1<<p)-1) ans+=f[i];
	}
	printf("%d\n",ans%MOD);
	
	return 0;
}

