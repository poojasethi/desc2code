#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define int64 long long
#define N 200
#define mo 12345
#define M 1010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,m,nn;
int ha[M],a[M],ge[M],h[210],A[N],B[N][N];
int64 n;
char p[M];
inline void mer() {
	int i,j,C[N]={};
	For(i,0,nn)For(j,0,nn) C[j]=(A[i]*B[i][j]+C[j])%mo;
	For(i,0,nn) A[i]=C[i];
}
inline void merge() {
	int i,j,k,C[N][N]={};
	For(i,0,nn)For(j,0,nn)For(k,0,nn) C[i][k]=(B[i][j]*B[j][k]+C[i][k])%mo;
	For(i,0,nn)For(j,0,nn) B[i][j]=C[i][j];
}
int main() {
	scanf("%I64d%d\n",&n,&m);
	ha[0]=1;
	For(i,1,m) {
		scanf("%c%d\n",&p[i],&k);
		ha[i]=ha[i-1]*k;
		h[p[i]]=1;
		ge[i]=k;
	}
	nn=ha[m];
	For(i,0,nn-1) {
		For(j,1,200) if (h[j]) {
			int haa=i;
			For(k,1,m) if (p[k]==j) {
				int zhi=i/ha[k-1]%ge[k];
				haa=haa-zhi*ha[k-1]+(zhi+1)%ge[k]*ha[k-1];
			}
			B[i][haa]++;
		}
	}
	A[0]=1;
	for (;n;n/=2) {
		if (n&1) mer();
		merge();
	}
	int an=0;
	For(i,0,nn-1) {
		For(j,1,200) if (h[j]) {
			int F=0;
			For(k,1,m) if (p[k]==j) {
				int zhi=i/ha[k-1]%ge[k];
				if (!zhi) F=1;
			}
			if (!F) goto fail;
		}
		an=(an+A[i])%mo;
		fail:;
	}
	printf("%d\n",an);		
	return 0;
}
