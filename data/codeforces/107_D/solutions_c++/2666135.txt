#include <cstdio>
#include <vector>
#include <iostream>
#define MOD 12345
using namespace std;
struct matrix
{
  int a[150][150];
}matmp,mat,matans,C;
struct box
{
  int rem[26];
}s[150];
int m,rem[26],ans,a[26]; long long int n;
vector<int> ok[26];
vector<int>::iterator it;
void add_state()
{
  m++;
  for(int i=0;i<26;i++) s[m].rem[i] = rem[i];
}
void dfs(int p)
{
  if(p == 26){
    add_state();
    return;
  }
  if(!ok[p].size()) {dfs(p+1);return;}
  for(int i=0;i<a[p];i++)
    rem[p]=i,dfs(p+1);
  return;
}
int trans(int s1,int s2)
{
  int cnt=0,i,cnt1=0;
  for(i=0;i<26 && cnt<=1;i++)
    if(ok[i].size())
      {
	if(a[i] == 1) {cnt1++;continue;}
	if(s[s2].rem[i] == (s[s1].rem[i]+1)%a[i]) cnt++;
	else if(s[s1].rem[i] == s[s2].rem[i]) continue;
	else return 0;
      } 
  if(cnt == 1) return 1;
  if(cnt1 && cnt==0) return cnt1;
  return 0;
}
bool chk(int s1)
{
  for(int i=0;i<26;i++)
    if(ok[i].size())
      {
	for(it=ok[i].begin();it!=ok[i].end();it++)
	  if(s[s1].rem[i]%(*it) == 0)
	    break;
	if(it == ok[i].end()) return false;
      }
  return true;
}
void multi(matrix A,matrix B)
{
  int i,j,k;
  for(i=0;i<=m;i++)
    for(j=0;j<=m;j++)
      C.a[i][j] = 0;
  for(k=0;k<=m;k++)
    for(i=0;i<=m;i++)
      for(j=0;j<=m;j++)
	C.a[i][j] = (A.a[i][k]*B.a[k][j]+C.a[i][j])%MOD;
}
void matpow(long long int x)
{
  long long int b; int i,j;
  for(i=0;i<=m;i++) for(j=0;j<=m;j++) matans.a[i][j]=0;
  for(i=0;i<=m;i++) matans.a[i][i] = 1;
  for(b=1;b<=x;b*=2)
    {
      if(b & x)
	{
	  multi(matans,mat);
	  matans = C;
	}
      multi(mat,mat);
      mat = C;
    }
}
int main()
{
  //freopen("input.txt","r",stdin);
  //freopen("output.txt","w",stdout);
  int i,j,c,x; char ch;
  cin>>n>>c;
  for(i=0;i<26;i++) a[i] = 1;
  for(i=1;i<=c;i++)
    {getchar();
      scanf("%c",&ch);
      scanf("%d",&x);
      ok[ch-'A'].push_back(x);
      a[ch-'A'] *= x;
    }
  dfs(0);
  for(i=1;i<=m;i++)
    for(j=1;j<=m;j++)
      mat.a[i][j] = trans(i,j);
  matpow(n);
  for(i=1;i<=m;i++)
    if(chk(i))
      ans = (ans+matans.a[1][i])%MOD;
  cout<<ans;
}
