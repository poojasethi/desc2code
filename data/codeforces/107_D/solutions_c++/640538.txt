#include <iostream>
#include <fstream>
#include <algorithm>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <deque>
#include <iomanip>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <sstream>
#include <string>
#include <vector>
using namespace std;

#define INF 1e9
#define EPS 1e-9
#define iss istringstream
#define ll long long
#define rep(i,n) rep2(i,0,n)
#define rep2(i,m,n) for(int i=m;i<n;i++)
#define pi pair<int,int>
#define pb push_back
#define sz size()
#define vi vector<int>
#define vc vector
#define vs vector<string>

#define MOD 12345
#define mt vector<vi>

mt mul(mt& A,mt& B){
	mt C(A.sz,vi(B[0].sz));
	rep(i,A.sz)rep(k,B.sz)rep(j,B[0].sz){
		C[i][j]=(C[i][j]+A[i][k]*B[k][j])%MOD;
	}
	return C;
}

mt pow(mt A,ll n){
	mt B(A.sz,vi(A.sz));
	rep(i,A.sz)B[i][i]=1;
	while(n){
		if(n&1)B=mul(B,A);
		A=mul(A,A);
		n>>=1;
	}
	return B;
}

ll n,c;
vi v,V[1000];
set<pi> S;
set<pi>::iterator it;

int main(){
	cin>>n>>c;
	rep(i,c){
		char a;int b;
		cin>>a>>b;
		S.insert(pi(a,b));
	}
	int prev=-1,cur=-1,P=1;
	for(it=S.begin();it!=S.end();it++){
		if((*it).first!=prev){v.pb((*it).second);cur++;}
		else v[v.sz-1]*=(*it).second;
		V[cur].pb((*it).second);
		P*=(*it).second;
		prev=(*it).first;
	}
	mt m(P,vi(P));
	rep(i,P)fill(m[i].begin(),m[i].end(),0);
	vi u;
	rep(i,v.sz)u.pb(0);
	map<int,vi> M;
	map<vi,int> M2;
	rep(i,P){
		M[i]=u;
		M2[u]=i;
		int cur=u.sz-1;
		while(cur>=0){
			u[cur]++;
			if(u[cur]==v[cur]){
				u[cur]=0;
				cur--;
			}
			else break;
		}
	}
	rep(i,P)rep(j,v.sz){
		vi w=M[i];
		w[j]++;
		if(w[j]==v[j])w[j]=0;
		int x=M2[w];
		m[x][i]++;
	}
	m=pow(m,n);
	int ans=0;
	rep(i,P){
		vi w=M[i];
		bool ok=1;
		rep(j,w.sz){
			bool ok2=0;
			rep(k,V[j].sz)if(w[j]%V[j][k]==0)ok2=1;
			if(!ok2)ok=0;
		}
		if(ok)ans=(ans+m[i][0])%MOD;
	}
	cout<<ans<<endl;
}
