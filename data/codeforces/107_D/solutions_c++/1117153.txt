#include <cstdio>
#include <cstring>
#include <vector>
#define For(i,a,b) for(int i=a; i<b; ++i)
using namespace std;
typedef int Arr1[123],Arr2[123][123];
struct {int p,m,w;} o[27];
const int Mod=12345;
int s,m[26];
Arr1 a,c1;
Arr2 b,c2;
vector<int> q[26];

int gcd(int a,int b) {b? gcd(b,a%b):a;}

void mul(Arr1 &a,Arr2 &b)
{
	For(i,0,s)
	{
		c1[i]=0;
		For(j,0,s) c1[i]=(c1[i]+a[j]*b[j][i])%Mod;
	}
	memcpy(a,c1,sizeof a);
}

void mul(Arr2 &a,Arr2 &b)
{
	For(i,0,s)
		For(j,0,s)
		{
			c2[i][j]=0;
			For (l,0,s) c2[i][j]=(c2[i][j]+a[i][l]*b[l][j])%Mod;
		}
	memcpy(a,c2,sizeof a);
}

int main()
{
	long long n;
	int t,x,p;
	char ch;
	scanf("%I64d%d",&n,&t);
	while (t--)
	{
		scanf("\n%c%d",&ch,&x);
		p=ch-65;
		q[p].push_back(x);
		if (m[p]) m[p]=m[p]/gcd(m[p],x)*x; else m[p]=x;
	}
	s=1;
	int k=0;
	For(i,0,26)
		if (m[i])
		{
			o[k].p=i, o[k].m=m[i], o[k].w=s;
			++k;
			s*=m[i];
		}
	o[k].w=s;
	For(i,0,s)
		For(j,0,k)
		{
			p=i/o[j].w%o[j].m;
			++b[i][i-p*o[j].w+(p+1)%o[j].m*o[j].w];
		}
	a[0]=1;
	while (n)
	{
		if (n&1) mul(a,b);
		mul(b,b);
		n>>=1;
	}
	int h,ans=0;
	For(i,0,s)
	{
		For(j,0,k)
		{
			p=i/o[j].w%o[j].m;
			vector<int> &vec=q[o[j].p];
			for (h=0; h<vec.size() && p%vec[h]; ++h);
			if (h==vec.size()) {a[i]=0; break;}
		}
		ans=(ans+a[i])%Mod;
	}
	printf("%d\n",ans);
	return 0;
}
