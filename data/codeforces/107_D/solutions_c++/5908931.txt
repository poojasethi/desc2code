#include <cstdio>
#include <cstring>
#define P 12345
#define ll long long

int S=1,M,b[1005],d[1005];
bool c[26],f[130];
char a[1005][2];
struct matrix
{
	int a[130][130];
	matrix(int x=0)
	{
		memset(a,0,sizeof(a));
		for (int i=0; i<S; i++) a[i][i]=x;
	}
	friend matrix operator *(const matrix&A,const matrix&B)
	{
		matrix C;
		for (int i=0; i<S; i++)
			for (int j=0; j<S; j++)
				for (int k=0; k<S; k++) (C[i][j]+=A[i][k]*B[k][j])%=P;
		return C;
	}
	matrix operator ^(ll B)
	{
		matrix A=*this,C(1);
		for (;B; B>>=1,A=A*A) if (B&1) C=C*A;
		return C;
	}
	int*operator [](int x) {return a[x];}
	const int*operator [](int x) const {return a[x];}
} A,F;
ll N;

int main()
{
	scanf("%I64d%d",&N,&M);
	for (int i=1; i<=M; i++) scanf("%s%d",a[i],&b[i]),S*=b[i],c[a[i][0]-=65]=1;
	for (int i=0; i<S; i++)
	{
		for (int j=M,x=i; j; x/=b[j--]) d[j]=x%b[j];
		f[i]=1;
		for (int k=0,x,ok; k<26; k++) if (c[k])
		{
			x=ok=0;
			for (int j=1; j<=M; j++)
			{
				int y=d[j];
				if (k==a[j][0]) ok|=!d[j],(y+=1)%=b[j];
				(x*=b[j])+=y;
			}
			A[i][x]++,f[i]&=ok;
		}
	}
	int ans=0;
	F[0][0]=1,F=F*(A^N);
	for (int i=0; i<S; i++) if (f[i]) (ans+=F[0][i])%=P;
	printf("%d\n",ans);
}