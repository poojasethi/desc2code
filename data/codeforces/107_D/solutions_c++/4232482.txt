#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstring>

using namespace std;

#define mod 12345
#define N 1005
#define LEN 125

typedef long long LL;

int a[27],cnt=1,m,t,anss=0,tmp[27],p[N],num[N];
char s[15];
LL n;

struct node
{
	int digit[LEN][LEN];
}ans,temp,start;

node times(node aa,node b,int x)
{
	node c;
	for(int i=0;i<x;i++)
		for(int j=0;j<x;j++)
			c.digit[i][j]=0;
	for(int i=0;i<x;i++)
		for(int j=0;j<x;j++)
			for(int k=0;k<x;k++)
				c.digit[i][j]=(aa.digit[i][k]*b.digit[k][j]+c.digit[i][j])%mod;
	return c;
}

void ksm(LL x)
{
	if(!x) 
		for(int i=0;i<cnt;i++) 
			ans.digit[i][i]=1;
	else
	{
		ksm(x>>1);
		temp=times(ans,ans,cnt);
		ans=temp;
		if(x&1)
		{
			temp=times(ans,start,cnt);
			ans=temp;
		}
	}
}

void init()
{
	scanf("%I64d %d\n",&n,&m);
	for(int i=1;i<=m;i++)
	{
		gets(s+1);
		p[i]=s[1]-'A'+1;
		tmp[s[1]-'A'+1]=1;
		for(int j=3;s[j]>='0'&&s[j]<='9';j++) 
			num[i]=num[i]*10+s[j]-'0';
		cnt*=num[i];
	}
}

void ptm()
{
	for(int i=1;i<=m;i++) 
		tmp[p[i]]*=num[i];
	for(int i=0;i<cnt;i++)
	{
		t=i;
		for(int j=1;j<=26;j++) 
			if(tmp[j]!=0)
				a[j]=t%tmp[j],t/=tmp[j];
		t=1;
		for(int j=1;j<=26;j++) 
			if(tmp[j]!=0)
			{
				if(a[j]==tmp[j]-1) 
					start.digit[i][i-a[j]*t]++;
				else
					start.digit[i][i+t]++;
				t*=tmp[j];
			}
	}
}

void print()
{
	for(int i=0;i<cnt;i++)
	{
		t=i;
		for(int j=1;j<=26;j++)	
			if(tmp[j]!=0)
			{
				a[j]=t%tmp[j],t/=tmp[j];
				int now=1;
				while(now<=m&&(p[now]!=j||a[j]%num[now]!=0)) 
					now++;
				if(now>m) 
					goto syf;
			}
		anss=(anss+ans.digit[0][i])%mod;
		syf:t;
	}
	printf("%d\n",anss);
}

int main()
{
	init();
	ptm();
	ksm(n);
	print();
	return 0;
}
			 								  						 	   	