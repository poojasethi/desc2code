
// Codeforces Beta Round #79 (Div. 1 Only) E Candies and Stones

#include <algorithm>
#include <cstring>
#include <cstdio>

using namespace std;

long long f[20000], g[20000];
int x[20000], y[20000];
char step[40001];

long long solve(int x1, int y1, int x2, int y2, int p) {
	static int cur = 0;
	if (x1 == x2) {
		long long res = 0;
		for (int j = y1; j <= y2; j ++) {
			res += (x[x1] + y[j]) % p;
			if (j < y2) step[cur ++] = 'S';
		}
		return res;
	}
	int mid = (x1 + x2) / 2;
	for (int i = y1; i <= y2; i ++) f[i] = g[i] = 0;
	for (int i = x1; i <= mid; i ++)
		for (int j = y1; j <= y2; j ++) {
			if (j > y1 && f[j - 1] > f[j]) f[j] = f[j - 1];
			f[j] += (x[i] + y[j]) % p;
		}
	for (int i = x2; i > mid; i --)
		for (int j = y2; j >= y1; j --) {
			if (j < y2 && g[j + 1] > g[j]) g[j] = g[j + 1];
			g[j] += (x[i] + y[j]) % p;
		}
	int loc = y1;
	long long ans = f[y1] + g[y1];
	for (int j = y1 + 1; j <= y2; j ++)
		if (f[j] + g[j] > ans) {
			ans = f[j] + g[j];
			loc = j;
		}
	solve(x1, y1, mid, loc, p);
	step[cur ++] = 'C';
	solve(mid + 1, loc, x2, y2, p);
	return ans;
}

int main() {
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int n, m, p;
	scanf("%d%d%d", &n, &m, &p);
	for (int i = 0; i < n; i ++) scanf("%d", &x[i]);
	for (int i = 0; i < m; i ++) scanf("%d", &y[i]);
	
	long long ans = solve(0, 0, n - 1, m - 1, p);
	printf("%I64d\n", ans);
	step[n + m - 1] = '\0';
	printf("%s\n", step);
	
	return 0;
}
