#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())

#define MAX 20005
string ans="";
li n,m,p;
li a[MAX],b[MAX];
li dp0[2][MAX],dp1[2][MAX];
#define get(n0,n1) ((a[n0]+b[n1])%p)
li recur(li x0,li x1,li y0,li y1){
	li res=0,mid0=(x0+x1)/2,mid1=mid0+1;
	if(x0==x1){
		for(li y=y0;y<=y1;y++) res+=get(x0,y);
		return res;
	}
	dp0[x0%2][0]=get(x0,y0); 
	dp1[x1%2][y1-y0]=get(x1,y1); 
	for(li y=y0+1;y<=y1;y++) dp0[x0%2][y-y0]=dp0[x0%2][y-y0-1]+get(x0,y);
	for(li y=y1-1;y0<=y;y--) dp1[x1%2][y-y0]=dp1[x1%2][y-y0+1]+get(x1,y);
	for(li x=x0+1;x<=mid0;x++){
		dp0[x%2][0]=dp0[1-x%2][0]+get(x,y0);
		for(li y=y0+1;y<=y1;y++) dp0[x%2][y-y0]=max(dp0[x%2][y-y0-1],dp0[1-x%2][y-y0])+get(x,y);
	}
	for(li x=x1-1;mid1<=x;x--){
		dp1[x%2][y1-y0]=dp1[1-x%2][y1-y0]+get(x,y1);
		for(li y=y1-1;y0<=y;y--) dp1[x%2][y-y0]=max(dp1[x%2][y-y0+1],dp1[1-x%2][y-y0])+get(x,y);
	}
	li best=y0;
	for(li y=y0;y<=y1;y++){
		if(dp0[mid0%2][best-y0]+dp1[mid1%2][best-y0]<dp0[mid0%2][y-y0]+dp1[mid1%2][y-y0]) best=y;
	}
	res=dp0[mid0%2][best-y0]+dp1[mid1%2][best-y0];
	recur(x0,mid0,y0,best);
	recur(mid1,x1,best,y1);
	ans[mid0+best]='C';
	return res;
}

int main(){
	cin>>n>>m>>p;
	rep(i,n) cin>>a[i],a[i]%=p;
	rep(i,m) cin>>b[i],b[i]%=p;
	rep(i,n+m-2) ans+='S';
	cout<<recur(0,n-1,0,m-1)<<endl;
	cout<<ans<<endl;
}
