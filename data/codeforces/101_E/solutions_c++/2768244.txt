#include<iostream>
#include<cstring>
#include<bitset>
#include<algorithm>
using namespace std;
const int u=20010;
int a[u],b[u],f[u],d[u],n,m,p,t,i,j,tot;
bitset<u> c[u/2];
char s[2*u];

void solve(bool cnt)
{
	memset(d,0,sizeof(d));
	for(i=1;i<=n;i++)
	{
		memset(f,-1,sizeof(f)),f[0]=0;
		if(i>cnt*t) c[i-cnt*t].reset();
		for(j=1;j<=m;j++)
		{
			if(j>1) f[j]=f[j-1];
			if(f[j]<d[j])
			{
				f[j]=d[j];
				if(i>cnt*t) c[i-cnt*t][j]=1;
			}
			f[j]+=(a[i]+b[j])%p;
		}
		memcpy(d,f,sizeof(f));
	}
	if(cnt) cout<<f[m]<<endl;
	while(n>cnt*t&&(n>1||m>1))
		if(c[n-cnt*t][m]) n--,s[++tot]='C'; else m--,s[++tot]='S';
}

int main()
{
	cin>>n>>m>>p,t=n/2;
	for(i=1;i<=n;i++) cin>>a[i];
	for(i=1;i<=m;i++) cin>>b[i];
	solve(1),solve(0);
	for(i=tot;i;i--) cout<<s[i];
	cout<<endl;
	return 0;
}