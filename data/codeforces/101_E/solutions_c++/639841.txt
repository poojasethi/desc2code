#include<cstdio>
#include<cstring>
#include<bitset>
#include<iostream>
using namespace std;

bitset<20010> a[10010];

const int P=10000;

int n,m,p,x[20010],y[20010],u,v,nx,o,out[40010];

long long ans,f[3][20010];

inline int cost(int a,int b)
{
	int ret=x[a]+y[b];
	if (ret>=p) ret-=p;
	return ret;
}

int main()
{
	//freopen("101E.in","r",stdin);
	//freopen("101E.out","w",stdout);
	
	scanf("%d%d%d",&n,&m,&p);
	for(int i=1;i<=n;i++) scanf("%d",&x[i]),x[i]%=p;
	for(int i=1;i<=m;i++) scanf("%d",&y[i]),y[i]%=p;
	
	ans=-1;
	
	if (n>P)
	{
		for(int i=1;i<=P;i++)
		{
			u=i&1; v=u^1;
			f[u][1]=f[v][1]+cost(i,1);
			for(int j=2;j<=m;j++)
				f[u][j]=max(f[v][j],f[u][j-1])+cost(i,j);
		}
		for(int i=P+1;i<=n;i++)
		{
			u=i&1; v=u^1;
			f[u][1]=f[v][1]+cost(i,1);
			a[i-P][1]=1;
			for(int j=2;j<=m;j++)
				if (f[v][j]>f[u][j-1])
					f[u][j]=f[v][j]+cost(i,j),a[i-P][j]=1;
				else
					f[u][j]=f[u][j-1]+cost(i,j);
		}
		ans=f[u][m];
		nx=n-P;
		while(nx)
		{
			out[++o]=a[nx][m];
			if (a[nx][m]) nx--; else m--;
		}
		n=P;
	}
	memset(f[0],0,sizeof f[0]);
	for(int i=1;i<=n;i++)
	{
		u=i&1; v=u^1;
		f[u][1]=f[v][1]+cost(i,1);
		a[i][1]=1;
		for(int j=2;j<=m;j++)
			if (f[v][j]>f[u][j-1])
				f[u][j]=f[v][j]+cost(i,j),a[i][j]=1;
			else
				f[u][j]=f[u][j-1]+cost(i,j),a[i][j]=0;
	}
	if (ans<0) ans=f[u][m];
	while(n)
	{
		out[++o]=a[n][m];
		if (a[n][m]) n--; else m--;
	}
	cout<<ans<<endl;
	for(int i=o-1;i;i--) cout<<(out[i]?'C':'S');
	cout<<endl;
	
	return 0;
}

