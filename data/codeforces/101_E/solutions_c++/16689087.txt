#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;
typedef double DB;

const int N = 20010;
int n, m, p, arr[N], brr[N];
int f[N], g[N];
string ans;
#define pub push_back

inline int add(int x, int y)
{
	return (x + y) % p;
}

inline int val(int x, int y)
{
	return (arr[x] + brr[y]) % p;
}

inline int work(int sx, int sy, int ex, int ey)
{
	if(sx == ex)
	{
		int ret = val(sx, sy);
		for(int i = sy + 1; i <= ey; i++) ans.pub('S'), ret += val(sx, i);
		return ret;
	}
	
	int mid = (sx + ex) / 2;
	memset(f, 0, sizeof(f));
	memset(g, 0, sizeof(g));
	
	for(int i = ex; i >= mid + 1; i--)
		for(int j = ey; j >= sy; j--)
			f[j] = max(f[j], f[j + 1]) + val(i, j);
	for(int i = sx; i <= mid; i++)
		for(int j = sy; j <= ey; j++)
			g[j] = max(g[j], g[j - 1]) + val(i, j);
	
	int pos = 0;
	for(int i = sy; i <= ey; i++)
		if(pos == 0 || (f[i] + g[i] > f[pos] + g[pos]))
			pos = i;
	
	int ret = 0;
	ret += work(sx, sy, mid, pos);
	ans.pub('C');
	ret += work(mid + 1, pos, ex, ey);
	return ret;
}

inline void solve()
{
	int answer = work(1, 1, n, m);
	cout << answer << "\n" << ans << "\n";
}

int main()
{
	scanf("%d%d%d", &n, &m, &p);
	for(int i = 1; i <= n; i++) scanf("%d", &arr[i]);
	for(int i = 1; i <= m; i++) scanf("%d", &brr[i]);
	solve();
	return 0;
}

  			 				  				         	 		 	