#include <cmath>
#include <ctime>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <bitset>
#define modp(_) (((_)>=p)?((_)-p):(_))
#define LL long long
using namespace std;
const int T=15002;
LL f[2][20005],p;
bitset<20005>dp[T+1];
bool cnt;
int a[20005],b[20005],x,y,top,N,M;
char s[40005];
void work(int n,int m)
{
	int i,j;
	cnt=0;
	f[cnt][1]=(a[1]+b[1])%p;
	for(j=2;j<=m;j++)
	{
		f[cnt][j]=f[cnt][j-1]+modp(a[1]+b[j]);
		if(1>n-T)
			dp[1-n+T][j]=0;
	}
	for(i=2;i<=n;i++)
	{
		cnt=!cnt;
		f[cnt][1]=f[!cnt][1]+modp(a[i]+b[1]);
		if(i>n-T)
			dp[i-n+T].reset(),
			dp[i-n+T][1]=1;
		for(j=2;j<=m;j++)
			if(f[!cnt][j]>f[cnt][j-1])
			{
				f[cnt][j]=f[!cnt][j]+modp(a[i]+b[j]);
				if(i>n-T)
					dp[i-n+T][j]=1;
			}
			else
				f[cnt][j]=f[cnt][j-1]+modp(a[i]+b[j]);
	}
	for(;x>n-T&&top;top--)
		if(dp[x-n+T][y])
			s[top]='C',
			x--;
		else
			s[top]='S',
			y--;
}
int main()
{
	int n,m,i;
	scanf("%d%d%I64d",&n,&m,&p);
	N=n;M=m;
	for(i=1;i<=n;i++)
		scanf("%d",&a[i]),
		a[i]%=p;
	for(i=1;i<=m;i++)
		scanf("%d",&b[i]),
		b[i]%=p;
	top=n+m-2;x=n;y=m;
	work(n,m);
	printf("%I64d\n",f[cnt][m]);
	if(x!=1||y!=1)
		work(x,y);
	printf("%s\n",s+1);
	return 0;
}
	 	 				  	   		   		  	  	