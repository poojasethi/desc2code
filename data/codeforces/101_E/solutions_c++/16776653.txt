#include<stdio.h>
#include<cstring>
#include<algorithm>
#define CLR(x) memset(x,0,sizeof(x))
#define REP(x,e) for(int x = 0; x < e; x++)
#define REPP(x,s,e) for(int x = s; x <= e; x++)
using namespace std;

const int maxn = 20000+20;
int n, m, p;
int X[maxn], Y[maxn];
int f[maxn], g[maxn];
char s[maxn*2];
int c;


int dp(int u, int l, int d, int r) {
	int mid = (u + d)/2;
	
	if(u == d) {
		int ans = (X[u]+Y[l])%p;
		for(int i = l + 1; i <= r; i++) {
			ans += (X[u]+Y[i])%p; s[c++] = 'S';
		}
		return ans;
	}

	CLR(f); CLR(g);
	
	for(int i = u; i <= mid; ++i) {
		for(int j = l; j <= r; ++j) {
			f[j] = max(f[j], f[j-1])+(X[i]+Y[j])%p;
		}
	}
			
	for(int i = d; i >= mid + 1; --i) {
		for(int j = r; j >= l; --j) {
			g[j] = max(g[j], g[j+1])+(X[i]+Y[j])%p;
		}
	}
	
	int p, ans = 0;
	int maxm = -1;
	for(int i = l; i <= r; i++)
		if(f[i] + g[i] > maxm) {
			maxm = f[i]+g[i]; p = i;
		}
	
	ans += dp(u, l, mid, p);
	s[c++] = 'C';
	ans += dp(mid + 1, p, d, r);
	return ans;
}


int main() {
	//freopen("in.txt", "r", stdin);
	scanf("%d%d%d", &n, &m, &p);
	REPP(i,1,n) scanf("%d", &X[i]);
	REPP(i,1,m) scanf("%d", &Y[i]);
	printf("%d\n", dp(1,1,n,m));
	printf("%s\n", s);
	return 0;
}
				  	 				   	  					   				