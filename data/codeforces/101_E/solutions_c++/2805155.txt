/*
Author: LJQ
PROG: Codeforces Beta #79 Div1 E. Candies and Stones
DATE: 2012.12.22
*/
#include <cstdio>
#include <string>
#include <iostream>

using namespace std;

const int maxn = 20005;

int x[maxn], y[maxn];
int f[maxn], g[maxn];
string ans;
int n, m, p, ret;

#define v(a,b) ((x[a] + y[b]) % p)

void init()
{
	scanf("%d%d%d", &n, &m, &p);
	for (int i = 0; i < n; i ++) scanf("%d", &x[i]);
	for (int i = 0; i < m; i ++) scanf("%d", &y[i]);	
}

inline int Fmax(int x, int y){
	return x > y ? x : y;
}

int solve(int l0, int r0, int l1, int r1)
{
	int ret = 0;
	if (l0 == r0){
		ret += v(l0,r1);
		for (int i = l1; i < r1; i ++) ans += 'S', ret += v(l0,i);
		return ret;
	}
	int mid = (l0 + r0) >> 1;//divide and conquer
	for (int i = l1; i <= r1; i ++) f[i] = g[i] = 0;
	for (int i = l0; i <= mid; i ++){
		f[l1] += v(i,l1);
		for (int j = l1+1; j <= r1; j ++)
			f[j] = Fmax(f[j], f[j-1]) + v(i,j);
	}//f[i]: f[l0..mid][l1..i]
	for (int i = r0; i > mid; i --){
		g[r1] += v(i,r1);
		for (int j = r1-1; j >= l1; j --)
			g[j] = Fmax(g[j], g[j+1]) + v(i,j);
	}//g[i]: g[mid+1..r0][i..r1]
	int p = 0;
	for (int i = l1; i <= r1; i ++)
		if (f[i] + g[i] >= ret) ret = f[i] + g[i], p = i;
	solve(l0, mid, l1, p);//left bottom
	ans += 'C';
	solve(mid+1, r0, p, r1);//right up
	return ret;
}

void work()
{
	ret = solve(0, n-1, 0, m-1);
}

void print()
{
	printf("%d\n", ret);
	cout << ans << endl;
}

int main()
{
	init();
	work();
	print();
	return 0;
}
