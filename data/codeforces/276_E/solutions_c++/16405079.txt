#include<bits/stdc++.h>

using namespace std;

#define seg int v, int tl, int tr
#define tm (tl + tr >> 1)
#define sol v*2, tl, tm
#define sag v*2+1, tm+1, tr
#define N 100005

vector < int > V[N];

int s[2][4*N],Dsc[N],Fns[N],Dpt[N],T,n,q,u,v,i,h,d,x,l,r,asd,w;

void up(seg){
    if(tl > r || tr < l)
        return;
    if(tl >= l && tr <= r)
    { s[w][v] += x; return; }
    up(sol);  up(sag);
}

int qry(seg){
    if(tl == tr)
        return s[w][v];
    if((w ? Dsc[u] : Dpt[u]) <= tm)
        return s[w][v] + qry(sol);
    else
        return s[w][v] + qry(sag);
}
void f(int x, int t=0){

    Dpt[x] = t;
    Dsc[x] = ++T;

    for(int i=0; i<V[x].size(); i++)
        if(!Dsc[ V[x][i] ])
            f( V[x][i] , t+1 );

    Fns[x] = T;
}
int main(){

   scanf("%d%d",&n,&q);

   for(i=n;--i;){
      scanf("%d%d",&u,&v);
      V[u].push_back(v);
      V[v].push_back(u);
   }

   f(1);

   while(q--){

      scanf("%d%d",&h,&u);

      if(h){
         w = 0;
         asd = qry(1,0,n);
         w = 1;
         printf("%d\n",asd + qry(1,0,n));
      }

      else{
         scanf("%d%d",&x,&d);

         if(d >= Dpt[u]){
             w = l = 0;
             r = d - Dpt[u];
             up(1,0,n);
             if(u > 1){
                w = 1;
                l = Dsc[u] + d - 2 * Dpt[u] + 1;
                if(l <= Fns[u]){
                    r = min( Fns[u] , Dsc[u] + d );
                    up(1,0,n);
                }
             }
         }

         else{
            w = 1;
            l = Dsc[u] - d;
            r = min( Fns[u] , Dsc[u] + d );
            up(1,0,n);
         }

      }

   }

   return 0;
}
