//In the name of God

#include <bits/stdc++.h>
using namespace std;
#define mp make_pair
#define lol long long
const int MAXN=1e5+10;
int fen[2][MAXN],st[MAXN],en[MAXN],now=0,h[MAXN];
vector <int> g[MAXN];
int n,q,H;

void dfs(int v,int hei,int p=0)
{
  H=max(H,hei);
  h[v]=hei;
  st[v]=now++;
  for(int i=0;i<g[v].size();i++)
    {
      int u=g[v][i];
      if(u!=p)
	dfs(u,hei+1,v);
    }
  en[v]=now;
}

void add(int x,int val,int id)
{
  x++;
  for(;x<=n;x+=x&-x)
    fen[id][x]+=val;
}

int get(int x,int id)
{
  x++;
  int ret=0;
  for(;x;x-=x&-x)
    ret+=fen[id][x];
  return ret;
}

int main()
{
  ios::sync_with_stdio(false);
  cin>>n>>q;
  for(int i=1;i<n;i++)
    {
      int v,u;
      cin>>v>>u;
      v--;u--;
      g[v].push_back(u);
      g[u].push_back(v);
    }
  dfs(0,0);
  for(int i=0;i<q;i++)
    {
      int t;
      cin>>t;
      if(!t)
	{
	  int v,x,d;
	  cin>>v>>x>>d;
	  v--;
	  if(v==0)
	    {
	      add(0,x,1);
	      add(min(H,d)+1,-x,1);
	      continue;
	    }
	  if(h[v]>d)
	    {
	      add(st[v]-d,x,0);
	      add(min(st[v]+d+1,en[v]),-x,0);
	    }
	  else
	    {
	      int ha=min(d-h[v],H);
	      add(0,x,1);
	      add(ha+1,-x,1);
	      int s=min(en[v],st[v]-(h[v]-ha)+1),e=min(st[v]+d+1,en[v]);
	      add(s,x,0);
	      add(e,-x,0);
	    }
	}
      else
	{
	  int v;
	  cin>>v;
	  v--;
	  cout<<get(st[v],0) + get(h[v],1)<<endl;
	}
    }
  return 0;
}
