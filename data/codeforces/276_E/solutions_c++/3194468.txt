#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef double ld;

const int MAX=100000+10;

int n,q,dist[MAX],root[MAX];
vector<int> ne[MAX];
vector<int> sum[MAX];

void add(vector<int> &sum,int x,int d)
{
	for(;x<(int)sum.size();x+=(x&(-x)))
		sum[x]+=d;
}

int ask(vector<int> &sum,int x)
{
	int ans=0;
	for(;x;x-=(x&(-x)))
		ans+=sum[x];
	return ans;
}

void go(int u,int fa,vector<int>& sum)
{
	int i,v;
	REP(i,0,ne[u].size()-1)
	{
		v=ne[u][i];
		if(v!=fa)
		{
			root[v]=root[u];
			dist[v]=dist[u]+1;
			sum.pb(0);
			go(v,u,sum);
		}
	}
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
	int i,a,b;
	scanf("%d%d",&n,&q);
	REP(i,1,n-1)
	{
		scanf("%d%d",&a,&b);
		ne[a].pb(b);
		ne[b].pb(a);
	}
	REP(i,0,ne[1].size()-1)
	{
		int v=ne[1][i];
		sum[v].pb(0);
		root[v]=v;
		sum[v].pb(0);
		dist[v]=1;
		go(v,1,sum[v]);
	}
	REP(i,0,n)
		sum[1].pb(0);
	int sum1=0;
	while(q--)
	{
		int type,v,x,d;
		scanf("%d",&type);
		if(type==0)
		{
			scanf("%d%d%d",&v,&x,&d);
			add(sum[root[v]],max(dist[v]-d,1),x);
			add(sum[root[v]],dist[v]+d+1,-x);
			if(dist[v]<=d)
				sum1+=x;
			if(dist[v]<d)
			{
				d-=dist[v];
				add(sum[1],1,x);
				add(sum[1],d+1,-x);
				add(sum[root[v]],1,-x);
				add(sum[root[v]],d+1,x);
			}
		}
		else
		{
			scanf("%d",&v);
			if(v!=1)cout<<ask(sum[1],dist[v])+ask(sum[root[v]],dist[v])<<endl;
			else cout<<sum1<<endl;
		}
	}
	return 0;
}
