//In The Name Of God 

#include<bits/stdc++.h>

using namespace std;

const int Maxn=1e5+7;
const int ADD=0;
const int SLV=1;

int n,q;
vector<int>V[Maxn];
int T,st[Maxn],en[Maxn],h[Maxn];
int s[2][Maxn];

void dfs(int v,int par=0)
{
  st[v]=T++;
  for(int i=0;i<V[v].size();i++)
    {
      int u=V[v][i];
      if(u!=par)
	h[u]=h[v]+1,dfs(u,v);
    }
  en[v]=T;
}

void add(int t,int x,int v)
{
  for(x++;x<Maxn;x+=x&-x)
    s[t][x]+=v;
} 

int get(int t,int x)
{
  int ret=0;
  for(x++;x;x-=x&-x)
    ret+=s[t][x];
  return ret;
}

int main()
{
  cin>>n>>q;
  for(int i=0;i<n-1;i++)
    {
      int u,v;
      cin>>u>>v;
      u--,v--;
      V[u].push_back(v);
      V[v].push_back(u);
    }
  int root=0;
  dfs(root);
  for(int t,v,x,d;q--;)
    {
      cin>>t>>v;
      v--; 
      if(t==SLV)
	cout<<get(1,st[v])+get(0,h[v])<<endl;
      if(t==ADD)
	{
	  cin>>x>>d;
	  int l= d - h[v]; 
	  if(h[v]>d)
	    add(1,st[v]-d,x),add(1,min(en[v],st[v]+d+1),-x);
	  else
	    {
	      add(1,min(en[v],max(st[v]-h[v]+l + 1,st[v] -d)),x);
	      add(1,min(st[v]+d+1,en[v]),-x);
	      add(0,0,x);
	      add(0,l+1,-x);
	      //   cerr << l + 1 << endl; 
	    }
	}
    }
  return 0;
}
  					 	  	 	 	  	  				   	