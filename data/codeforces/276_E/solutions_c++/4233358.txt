#include <cstdio>
#include <vector>
#define FOR(i,a,b) for(i=a; i<=b; i++)
#define MAXN 100002
using namespace std;
class BIT
{
	public:
		vector < int > F;
		int size;
		void init(int k) { size = k+1; F.resize(k+2,0); }
		void add(int a,int b,int v)
		{
			for(int i = a + 1; i <= size; i+=i&-i) F[i] += v;
			for(int i = b + 2; i <= size; i+=i&-i) F[i] -= v;
		}
		int find(int a)
		{
			int i,res(0);
			for(i = a + 1; i; i-=i&-i) res += F[i];
			return res;
		}
}A[MAXN];
vector < int > G[MAXN];
int K,N,Q,dis;
int C[MAXN] , Dg[MAXN];
void dfs(int x,int pre,int d,int ch)
{
	dis++;
	C[x] = ch;
	Dg[x] = d;
	vector < int > :: iterator it;
	for(it = G[x].begin(); it != G[x].end(); ++it)
		if(*it != pre)
			dfs(*it,x,d+1,ch);
}
void solve()
{
	int a,b,i,d,v;
	scanf("%d %d",&N,&Q);
	FOR(i,1,N-1)
	{
		scanf("%d %d",&a,&b);
		G[a].push_back(b);
		G[b].push_back(a);
	}
	A[0].init(N);
	for(i = 0; i < (int)G[1].size(); i++)
	{
		dis = 0;
		dfs(G[1][i],1,1,++K);
		A[K].init(dis);
	}
	while(Q--)
	{
		scanf("%d %d",&b,&a);
		if(b)
		{
			if(a == 1) printf("%d\n" , A[0].find(0) );
			else printf("%d\n" , A[C[a]].find(Dg[a]) + A[0].find(Dg[a]) );
		}
		else
		{
			scanf("%d %d",&v,&d);
			if(Dg[a] > d)
				A[C[a]].add( Dg[a] - d , min( Dg[a] + d , A[C[a]].size )  , v );
			else
			{
				A[C[a]].add( 1 , min( Dg[a] + d , A[C[a]].size ) , v );
				A[0].add( 0 , d - Dg[a] , v );
				A[C[a]].add( 1 , d - Dg[a] , -v );
			}
		}
	}
}
int main()
{
	solve();
	return 0;
}
