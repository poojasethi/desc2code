#include<iostream>
#include<vector>
using namespace std;

vector<int>g[110000];
int n,q,x[110000],y[110000],c[110000];
int md[110000],a[110000],sum=0,tim=0;

void add(int s[],int pos,int k)
{
    if(pos==0)  return;
    while(pos<=n)
    {
        s[pos]+=k;
        pos+=(pos&-pos);
    }
}
int ask(int s[],int pos)
{
    int res=s[0];
    while(pos>0)
    {
        res+=s[pos];
        pos-=(pos&-pos);
    }
    return res;
}
void upd(int v,int k,int d)
{
    if(md[v]>d)
    {
        add(c,x[v]-d,k);
        add(c,min(y[v],x[v]+d)+1,-k);
    }
    else
    {
        add(a,d-md[v],k);
        sum+=k;
        if(d==md[v])    a[0]+=k;
        add(c,min(y[v],x[v]-md[v]+d-md[v])+1,k);
        add(c,min(y[v],x[v]+d)+1,-k);
    }
}
int query(int v)
{
    if(v==1)    return sum;
    return sum-ask(a,md[v]-1)+ask(c,x[v]);
}
int down(int v,int d,int fa)
{
    x[v]=++tim;
    md[v]=d;
    if(g[v].size()==1)  return y[v]=x[v];
    if(g[v][0]==fa) return y[v]=down(g[v][1],d+1,v);
    return y[v]=down(g[v][0],d+1,v);
}
int main()
{
    cin>>n>>q;
    int com,u,v,d;
    for(int i=1;i<n;++i)
    {
        cin>>u>>v;
        g[u].push_back(v);
        g[v].push_back(u);
    }
    x[1]=y[1]=++tim;
    for(int i=0;i<g[1].size();++i)  down(g[1][i],1,1);
    while(q--)
    {
        cin>>com;
        if(com)
        {
            cin>>v;
            cout<<query(v)<<endl;
        }
        else
        {
            cin>>v>>u>>d;
            upd(v,u,d);
        }
    }
    return 0;
}
