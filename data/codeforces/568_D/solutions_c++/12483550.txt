#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<stack>
#include<cmath>
#include<cstdlib>
#include<queue>
using namespace std;

#define pb push_back
#define mp make_pair
#define sc second
#define ft first

#define FOR(i,N) for (int i=1; i<=N; i++)
#define REP(i,l,r) for (int i=l; i<=r; i++)

#define INF ~0U>>1
#define eps 1e-9

const int maxn = 100010;
int A[maxn], B[maxn], C[maxn], id[maxn];
int N, K;
pair <int, int> ans[maxn];

int main ()
{
#ifndef ONLINE_JUDGE
#ifndef MEKTPOY
	freopen (".in", "r", stdin);
	freopen (".out", "w", stdout);
#else
	freopen ("in.txt", "r", stdin);
#endif
#endif
	cin >> N >> K;
	for (int i=1; i<=N; i++)
		scanf ("%d%d%d", &A[i], &B[i], &C[i]);
	srand (970516);
	for (int T=1; T<=4e7/N; T++)
	{
		int flag = 1;
		for (int i=1; i<=N; i++)
			id[i] = i;
		int tot = N;
		for (int now=1; now<=K+1; now++)
		{
			if (flag && tot == 0)
			{
				puts ("YES");
				cout << now-1 << endl;
				for (int i=1; i<now; i++)
				{
					printf ("%d %d\n", ans[i].ft, ans[i].sc);
				}
				return 0;
			} 
			int a = id[rand()%tot+1], b = id[rand()%tot+1];
			if (a == b)
			{
				ans[now] = mp(a, -1);
				int cnt = 0;
				for (int i=1; i<tot; i++)
					if (i != a) id[++cnt] = id[i];
				tot = cnt;
			}
			else
			{
				// ��������������ȫһ�� 
				ans[now] = mp(a, b);
				long long t = 1LL*A[b]*B[a]-1LL*A[a]*B[b];
				if (t == 0)
				{
					flag = 0; break;
				}
				else
				{
					long long x = -1LL*B[a]*C[b]+1LL*B[b]*C[a];
					long long y = 1LL*A[a]*C[b]-1LL*A[b]*C[a];
					int cnt = 0;
					for (int c=1; c<=tot; c++)
						if (A[id[c]]*x+B[id[c]]*y+C[id[c]]*t != 0) id[++cnt] = id[c];
					tot = cnt;
				}
			}
		}
	}
	puts ("NO");
	return 0;
}

