#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define n   100005
#define eps (1e-9)
#define DB  double
#define For(i,a,b)  for(int i=a;i<=b;i++)

int     N,K,T,AnsX[n],AnsY[n];
bool    V[n];

bool    Equ(DB a,DB b)  {return abs(a-b)<=eps;}

struct  Nod{
        DB  x,y;
        bool    operator == (const Nod&a)   {
            return  Equ(x,a.x)&&Equ(y,a.y);
        }
}D[n];

struct  Lin{
        DB  A,B,C;

        void    Rd()    {scanf("%lf%lf%lf",&A,&B,&C);C=-C;}
        DB      Num(const Lin&a)    {return A*a.B-B*a.A;}
        bool    IN(const Nod&a) {return Equ(A*a.x+B*a.y,C);}

        Nod operator *  (const Lin&a){
            return  (Nod){(C*a.B-B*a.C)/Num(a),(A*a.C-C*a.A)/Num(a)};
        }
}A[n],B[n];

int     main(){
        scanf("%d%d",&N,&K);
        For(i,1,N)  A[i].Rd();
        For(d,1,K)  {
            int tot=0,cnt=0;
            For(i,1,N)  if  (!V[i]&&tot<K*K+1)  B[++tot]=A[i];

            For(i,1,tot)For(j,i+1,tot)
            if  (!Equ(B[i].Num(B[j]),0)){
                Nod x=B[i]*B[j];int flag=0;
                For(k,1,cnt)    if  (D[k]==x)   flag=1;
                if  (!flag) D[++cnt]=x;
            }

            if  (!cnt)  {
                cnt=1;
                if  (B[1].A)    D[1]=(Nod){B[1].C/B[1].A,0};
                    else    D[1]=(Nod){0,B[1].C/B[1].B};
            }

            int u=-1,Max=-1;
            For(i,1,cnt){
                int t=0;
                For(j,1,tot)    if  (B[j].IN(D[i])) t++;
                if  (u==-1||t>Max)  u=i,Max=t;
            }

            AnsX[d]=AnsY[d]=-1;
            For(i,1,N)  if  (!V[i]&&A[i].IN(D[u]))  {
                V[i]=1; T++;
                if  (AnsX[d]==-1)   AnsX[d]=i;
                else    if  (AnsY[d]==-1)   AnsY[d]=i;
            }   
            if  (T==N)  {K=d;break;}
        }
        if  (T<N)   return  puts("NO"),0;

        printf("YES\n%d\n",K);
        For(i,1,K)  printf("%d %d\n",AnsX[i],AnsY[i]);
}