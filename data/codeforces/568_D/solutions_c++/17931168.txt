#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<vector>
#include<cmath>
#include<ctime>
#define pb push_back
#define mk make_pair
#define fi first
#define se second
typedef long long ll;
const int maxn=100100;
const int maxm=10;
using namespace std;
int read()
{
	char ch=getchar();int x,f=1;
	while(ch<'0'||ch>'9')
	{
		if(ch=='-') f=-1;
		ch=getchar();
	}
	x=ch-'0';
	while(1)
	{
		ch=getchar();
		if(ch<'0'||ch>'9') break;
		x=x*10+ch-'0';
	}
	return x*f;
}
int n,k,a[maxn],b[maxn],c[maxn];
vector<pair<int,int> >ans;
bool flag[maxn];
vector<int> line,ext;
bool solve(vector<int> line,vector<pair<int,int> >node,int k)
{
    if(line.empty()) {ans=node;return 1;}
    if(k<=0) return 0;
    if(k>=line.size())
    {
        for(int i=0;i<line.size();i++)
            node.pb(mk(-1,line[i]));
        ans=node;return 1;
    }
    int x=line[rand()%line.size()],y=line[rand()%line.size()];
    if(1ll*a[x]*b[y]==1ll*a[y]*b[x]) return 0;
    node.pb(mk(x,y));
    ll ya=1ll*a[x]*c[y]-1ll*a[y]*c[x];
    ll yb=1ll*a[y]*b[x]-1ll*a[x]*b[y];
    ll xa=1ll*b[x]*c[y]-1ll*b[y]*c[x];
    ll xb=-yb;
    ext.clear();
    for(int i=0;i<line.size();i++)
    {
        int t=line[i];
        if(xa*a[t]*yb+ya*b[t]*xb+c[t]*yb*xb!=0)
            ext.pb(t);
    }
    return solve(ext,node,k-1);
}
int main()
{
    srand(233);
    n=read();k=read();
    for(int i=1;i<=n;i++)
    {
        a[i]=read();b[i]=read();c[i]=read();
        line.pb(i);
    }
    while(clock()*1.0/CLOCKS_PER_SEC<1.8&&!ans.size())
        solve(line,ans,k);
    if(ans.size())
    {
        printf("YES\n");
        printf("%d\n",(int)ans.size());
        for(int i=0;i<ans.size();i++)
            printf("%d %d\n",ans[i].se,ans[i].fi);
    }
    else printf("NO\n");
    return 0;
}
                                                                                                                                                                                