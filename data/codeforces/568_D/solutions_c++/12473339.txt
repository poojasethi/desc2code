#include<ctime>
#include<cmath>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>

using namespace std;

typedef long long ll;

const int N=100000;
const double eps=1e-5;

int X,K,ans[6][2],cnt[6],a[N+7][3],b[6][N+7];

int getrand()
{
    return X=(ll(X)*998244353+rand())%2147483647;
}

bool getlist(int k,int p,int q)
{
    ans[k][0]=p;ans[k][1]=q;
    if (ll(a[p][0])*a[q][1]==ll(a[q][0])*a[p][1]) return 0;
    ll x=ll(a[q][2])*a[p][1]-ll(a[p][2])*a[q][1],y=ll(a[p][2])*a[q][0]-ll(a[q][2])*a[p][0];
    ll z=ll(a[p][0])*a[q][1]-ll(a[q][0])*a[p][1];
    cnt[k-1]=0;
    for (int j=1;j<=cnt[k];j++)
    {
        int p=b[k][j];
        ll s=x*a[p][0]+y*a[p][1];
        if (s%z||s/z+a[p][2]!=0) b[k-1][++cnt[k-1]]=p;
    }
    return 1;
}

bool dfs(int k)
{
    if (cnt[k]<=k)
    {
        printf("YES\n");
        printf("%d\n",K-k+cnt[k]);
        for (int i=1;i<=cnt[k];i++) printf("%d -1\n",b[k][i]);
        for (int i=k+1;i<=K;i++) printf("%d %d\n",ans[i][0],ans[i][1]);
        return 1;
    }
    if (!k) return 0;
    if (cnt[k]>k*k)
    {
        for (int i=1;i<=100;i++)
        {
            int p=getrand()%cnt[k]+1,q=getrand()%cnt[k]+1;
            while (p==q)
            {
                p=getrand()%cnt[k]+1;q=getrand()%cnt[k]+1;
            }
            if (!getlist(k,b[k][p],b[k][q])) continue;
            if (cnt[k]-cnt[k-1]<=k) continue;
            if (dfs(k-1)) return 1; else return 0;
        }
        return 0;
    }
    for (int i=1;i<=k;i++)
        for (int j=i+1;j<=cnt[k];j++)
        {
            if (!getlist(k,b[k][i],b[k][j])) continue;
            if (dfs(k-1)) return 1;
        }
    return 0;
}

int main()
{
    #ifdef waltz
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    srand(time(0));X=rand();
    int n;scanf("%d%d",&n,&K);
    for (int i=1;i<=n;i++) scanf("%d%d%d",&a[i][0],&a[i][1],&a[i][2]);
    cnt[K]=n;
    for (int i=1;i<=n;i++) b[K][i]=i;
    if (!dfs(K)) printf("NO\n");
    return 0;
}
