#include <cstring>
#include <ctime>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>

const int MAXN=100000;

#define x first
#define y second
#define mp std::make_pair
#define pii std::pair<int,int>

#define Max(a,b) ((a)>(b)?(a):(b))

int n,k;

int Ax,Bx,Cx,Ay,By,Cy;

int a[MAXN+10],b[MAXN+10],c[MAXN+10];

int sta[MAXN+10],top;

pii ans[10];
int anst;

#define check(x) ((1LL*a[x]*(1LL*Bx*Cy-1LL*By*Cx)+1LL*b[x]*(1LL*Ay*Cx-1LL*Ax*Cy)+1LL*c[x]*(1LL*Ax*By-1LL*Ay*Bx)==0))

void dfs(int id)
{
	if (top<=id) {
		for (int i=1;i<=top;i++) ans[++anst]=mp(sta[i],-1);
		puts("YES");
		printf("%d\n",anst);
		for (int i=1;i<=anst;i++) printf("%d %d\n",ans[i].x,ans[i].y);
		exit(0); }
	if (id==0) return ;
	int st[MAXN+10],tp=0;
	for (int ci=0;ci<=id*3;ci++) {
		int x=rand()%top+1,y=rand()%top+1;
		while (y==x) y=rand()%top+1;
		Ax=a[sta[x]]; Bx=b[sta[x]]; Cx=c[sta[x]];
		Ay=a[sta[y]]; By=b[sta[y]]; Cy=c[sta[y]];
		if (1LL*Ax*By==1LL*Ay*Bx) continue;

		int ttop=top;
		ans[++anst]=mp(sta[x],sta[y]);
		for (int i=1;i<=top;i++)
			while (i<=top && check(sta[i])) {
				st[++tp]=sta[i]; std::swap(sta[i],sta[top]); top--; }
		if (top<=Max(id-1,(int)(ttop*(1.0-1.0/(2*id))))) dfs(id-1);
		while (tp) sta[++top]=st[tp--];
		anst--; }
	return ;
}

void init()
{
	scanf("%d%d",&n,&k);
	for (int i=1;i<=n;i++) {
		sta[++top]=i;
		scanf("%d%d%d",&a[i],&b[i],&c[i]); }
	dfs(k); puts("NO");
	return ;
}

int main()
{
	srand(time(0));
	init();
	return 0;
}
                                                                           