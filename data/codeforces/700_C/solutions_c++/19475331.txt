#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#define fo(i,a,b) for(int i=a;i<=b;i++)
#define fd(i,a,b) for(int i=a;i>=b;i--)
#define maxn 1005
#define maxm 30005
#define mem(a,b) memset(a,b,sizeof(a))
#define oo (2e9+1)
using namespace std;

int head[maxn],t[maxm * 2],Next[maxm * 2],v[maxm * 2],sum;

int n,m;

int a[maxm],b[maxm],c[maxm];

bool bz[maxn],bz1[maxm];

int ans,ans1,ans2,S,T;

int dfn[maxn],low[maxn],now;

void insert(int x,int y,int z){
	t[++sum]=y;
	v[sum]=z;
	Next[sum]=head[x];
	head[x]=sum;
}

void dfs1(int x){
	bz[x]=1;
	for(int tmp=head[x];tmp;tmp=Next[tmp]) {
		if (!bz[t[tmp]]) bz1[tmp / 2]=1,dfs1(t[tmp]);
	}
}

void dfs2(int x,int fa,int del){
	dfn[x]=low[x]=++now;
	bool p=dfn[T];
	for(int tmp=head[x];tmp;tmp=Next[tmp]) {
		if (((tmp^1)==fa) || tmp / 2==del) continue;
		if (dfn[t[tmp]]) {
			low[x]=min(low[x],dfn[t[tmp]]);
		}
		else {
			dfs2(t[tmp],tmp,del);
			low[x]=min(low[x],low[t[tmp]]);
			if (p==0 && dfn[T] && low[t[tmp]]==dfn[t[tmp]]) {
				if (c[del]+v[tmp]<ans) {
					ans=c[del]+v[tmp];
					ans1=del;
					ans2=tmp / 2;
				}
			}
			p=dfn[T];
		}
	}
	if (x==S && p==0) {
		if (c[del]<ans) {
			ans=c[del];
			ans1=del;
			ans2=0;
		}
	}
}

int main(){
	sum=1;
	scanf("%d%d",&n,&m);
	scanf("%d%d",&S,&T);
	fo(i,1,m) {
		int x,y,z;
		scanf("%d%d%d",&x,&y,&z);
		a[i]=x;
		b[i]=y;
		c[i]=z;
		insert(a[i],b[i],c[i]);
		insert(b[i],a[i],c[i]);
	}
	dfs1(S);
	if (!bz[T]) {
		puts("0");
		puts("0");
		return 0;
	}
	ans=oo;
	fo(i,1,m) {
		if (c[i]>=ans) continue;
		if (!bz1[i]) continue;
		mem(dfn,0);
		mem(low,0);
		now=0;
		dfs2(S,0,i);
	}
	if (ans==oo) {
		puts("-1");
		return 0;
	}
	int num=(ans1!=0) + (ans2!=0);
	printf("%d\n",ans);
	printf("%d\n",num);
	printf("%d ",ans1);
	if (ans2) printf("%d",ans2);
	return 0;
}