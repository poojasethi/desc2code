#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <set>
#include <vector>
#include <queue>
using namespace std;

long long inf=10000000000LL;

struct coss
{
    int dok,nr,nr2;
    long long wag;
    bool podw;

    friend bool operator < (coss a, coss b)
    {
        return a.dok<b.dok;
    }
};

vector<coss> sas[1005], sas2[1005];
int sci[1005],nr,nr2,czas,s,t,sci2[1005],low[1005],num[1005],blok1,blok2;
bool byl[1005];

bool szukaj(int co)
{
    byl[co]=1;

    if (co==t)
        return true;

    for (int x=0; x<sas[co].size(); x++)
        if (!byl[sas[co][x].dok])
            if (szukaj(sas[co][x].dok))
            {
                sci[nr++]=x;
                return true;
            }

    return false;
}

bool szukaj2(int co, int nie)
{
    //printf ("!%d, z %d\n", co, nie);

    num[co]=low[co]=czas++;
    bool r=0;

    if (co==t)
        r=1;

    for (int x=0; x<sas[co].size(); x++)
    {
        int y=sas[co][x].dok;

        if (min(co,y)!=min(blok1,blok2) || max(co,y)!=max(blok1,blok2))
        {
            if (!num[y])
            {
                if (szukaj2(y,co))
                {
                    sci2[nr2++]=x;
                    r=1;
                }

                low[co]=min(low[co],low[y]);
            }
            else if (y!=nie)
                low[co]=min(low[co],num[y]);
        }
    }

    return r;
}

int main()
{
    int n,m,z,a,b,c,d,e,f,w1,w2,ilu;
    coss kaka;
    long long najm=inf;

    kaka.podw=0;

    scanf ("%d%d%d%d", &n, &m, &s, &t);

    for (d=1; d<=m; d++)
    {
        scanf ("%d%d%d", &a, &b, &c);

        if (a==b)
            continue;

        kaka.dok=b;
        kaka.wag=c;
        kaka.nr=d;
        sas2[a].push_back(kaka);
        kaka.dok=a;
        sas2[b].push_back(kaka);
    }

    for (a=1; a<=n; a++)
    {
        sort(sas2[a].begin(),sas2[a].end());

        for (b=0; b<sas2[a].size(); b++)
        {
            for (c=b+1; c<sas2[a].size() && sas2[a][b].dok==sas2[a][c].dok; c++);

            if (c-b==1)
                sas[a].push_back(sas2[a][b]);

            if (c-b==2)
            {
                kaka=sas2[a][b];
                kaka.nr2=sas2[a][b+1].nr;
                kaka.wag+=sas2[a][b+1].wag;
                kaka.podw=1;
                sas[a].push_back(kaka);
                kaka.podw=0;
            }

            if (c-b>2)
            {
                kaka=sas2[a][b];
                kaka.wag=inf;
                sas[a].push_back(kaka);
            }
        }
    }

    sci[0]=-1;
    szukaj(s);

    if (sci[0]==-1)
    {
        printf ("0\n0");
        return 0;
    }

    b=s;

    for (a=nr-1; a>=0; a--)
    {
        if (sas[b][sci[a]].wag==inf)
        {
            b=sas[b][sci[a]].dok;
            continue;
        }

        f=sas[b][sci[a]].dok;

        //printf ("Na sciezce sobie %d-%d\n", b, f);

        blok1=b;
        blok2=f;

        for (c=1; c<=n; c++)
            num[c]=0;

        czas=1;
        nr2=0;
        sci2[0]=-1;
        szukaj2(s,-1);

        if (sas[b][sci[a]].podw)
        {
            if (sci2[0]==-1 && najm>sas[b][sci[a]].wag)
            {
                ilu=2;
                w1=sas[b][sci[a]].nr;
                w2=sas[b][sci[a]].nr2;
                najm=sas[b][sci[a]].wag;
            }
        }
        else
        {
            //printf ("!");

            if (sci2[0]==-1 && najm>sas[b][sci[a]].wag)
            {
                //printf ("?");
                ilu=1;
                w1=sas[b][sci[a]].nr;
                najm=sas[b][sci[a]].wag;
            }

            c=s;

            for (d=nr2-1; d>=0; d--)
            {
                e=sas[c][sci2[d]].dok;
                //printf ("Nooo na alternativus %d %d (%d %d)\n", c, e, low[e], num[c]);

                if (low[e]>num[c] && !sas[c][sci2[d]].podw)
                    if (najm>sas[c][sci2[d]].wag+sas[b][sci[a]].wag)
                    {
                        //printf ("??? chlast z %d %d %d i %d %d %d\n", c, sas[c][sci2[d]].dok, sas[c][sci2[d]].nr, b, sas[b][sci[a]].dok, sas[b][sci[a]].nr);
                        ilu=2;
                        w1=sas[c][sci2[d]].nr;
                        w2=sas[b][sci[a]].nr;
                        najm=sas[c][sci2[d]].wag+sas[b][sci[a]].wag;
                    }

                c=e;
            }
        }

        b=f;
    }

    if (najm>=inf)
        printf ("-1");
    else
    {
        if (ilu==2 && w1>w2)
            swap(w1,w2);

        printf ("%I64d\n%d\n%d", najm, ilu, w1);

        if (ilu==2)
            printf(" %d", w2);
    }


    return 0;
}
