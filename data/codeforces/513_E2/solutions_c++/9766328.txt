#include <bits/stdc++.h>

using namespace std;

#define DEBUG_ON 0

#define INF 0x3f3f3f3f
#define REP(i,n) for(int i = 0; i < (n); ++i)
#define REPD(i,n) for(int i = (n)-1; i >= 0; --i)
#define R(x) scanf(" %d",&x)
#define RR(x,y) scanf(" %d %d",&x,&y)
#define DBG(x) if(DEBUG_ON) cout << #x << " == " << x << endl

typedef long long ll;
typedef pair<int,int> ii;

#define MAXN 30010
#define MAXK 210

bool vis[MAXN][MAXK][2][2][2];
int pd[MAXN][MAXK][2][2][2];
int v[MAXN];
int n, K;

int solve(int ind, int cut, int s1, int s2, int tem) {
  if (cut == K) return 0LL;
  if (ind == n) return -INF;
  
  int &ans = pd[ind][cut][s1][s2][tem];
  if (vis[ind][cut][s1][s2][tem]) return ans;
  int p1,p2;

  if (s1) p1 = 1;
  else p1 = -1;

  if (s2) p2 = 1;
  else p2 = -1;

  if (cut == 0) p1 = 0LL;
  if (cut == K - 1) p2 = 0LL;
  
  vis[ind][cut][s1][s2][tem] = true;  
  ans = -INF;

  int x = v[ind]*(p1+p2);
  // Se já tem alguem
  // printf("%d %lld\n",ind,x);
  if (tem) {
    // Pode ser meu último    
    ans = max(x + solve(ind + 1, cut + 1, s2^1, 0, 0), x + solve(ind+1, cut + 1, s2^1, 1, 0));
    // Posos adicionar ele
    ans = max(ans, x + solve(ind + 1, cut, s1, s2, tem));
  } else {    
    // Posos pular esse elemento
    ans = max(ans, solve(ind+1, cut, s1, s2, 0));
    // Pode ser o primeio
    ans = max(ans, x + solve(ind + 1, cut, s1, s2, 1));
    // Pode ser o primeiro e último
    ans = max(ans, x + solve(ind + 1, cut + 1, s2^1, 0, 0));
    ans = max(ans, x + solve(ind + 1, cut + 1, s2^1, 1, 0));
  }
  return ans;
}

int main() {
  scanf(" %d %d", &n, &K);
  REP(i, n) R(v[i]);
  int ans = max(solve(0,0,0,0,0), solve(0,0,0,1,0));
  printf("%d\n",ans);
  return 0;
}
