#include <cstdlib>
#include <cstdio>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <cstring>

using namespace std;

typedef long long LL;
typedef unsigned long long ULL;

#define SIZE(x) (int((x).size()))
#define rep(i,l,r) for (int i=(l); i<=(r); i++)
#define repd(i,r,l) for (int i=(r); i>=(l); i--)
#define rept(i,c) for (typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)

#ifndef ONLINE_JUDGE
#define debug(x) { cerr<<#x<<" = "<<(x)<<endl; }
#else
#define debug(x) {}
#endif

#define INF 1000000000
#define maxn 30010

int a[maxn], s[maxn], dp[210][maxn][2];

void su(int &a, int b)
{
	if (b>a) a=b;
}

void lemon()
{
	int n,m; scanf("%d%d",&n,&m);
	rep(i,1,n) scanf("%d",&a[i]);
	rep(i,1,n) s[i]=s[i-1]+a[i];
	rep(k,1,m) rep(i,1,n) rep(flag,0,1) dp[k][i][flag]=-INF;
	rep(i,1,n)
		rep(j,i,n)
		{
			su(dp[1][j][0],-(s[j]-s[i-1]));
			su(dp[1][j][1],s[j]-s[i-1]);
		}
		
	rep(k,2,m)
	{
		int ss0[2], ss1[2], st[2];
		rep(f,0,1) ss0[f]=ss1[f]=st[f]=-INF;
		rep(i,2,n)
		{
			rep(f,0,1) 
				su(st[f],dp[k-1][i-1][f]);
			
			if (k==m)
			{
				rep(f,0,1)
					su(ss0[f],dp[k-1][i-1][f]-s[i-1]);
					
				rep(f,0,1)
					su(ss1[f],dp[k-1][i-1][f]+s[i-1]);
			}
			else
			{
				rep(f,0,1)
					su(ss0[f],dp[k-1][i-1][f]-s[i-1]*2);
					
				rep(f,0,1)
					su(ss1[f],dp[k-1][i-1][f]+s[i-1]*2);
			}
			
			rep(flag,0,1)
			{
			
				if (k!=m) su(dp[k][i][flag],st[flag]);
				if (flag==0)
				{
					if (k==m)
						su(dp[k][i][flag],ss1[1-flag]-s[i]);
					else  su(dp[k][i][flag],ss1[1-flag]-s[i]*2);
				}
				else
				{
 					if (k==m)
						su(dp[k][i][flag],ss0[1-flag]+s[i]);
					else  su(dp[k][i][flag],ss0[1-flag]+s[i]*2);
				}
				}
			}
	}
	int ans=-INF;
	rep(i,1,n)
		rep(flag,0,1)
			su(ans,dp[m][i][flag]);
			
	cout<<ans<<endl;	
		
}

int main()
{
	ios::sync_with_stdio(true);
	#ifndef ONLINE_JUDGE
		freopen("E.in","r",stdin);
	#endif
	lemon();
	return 0;
}
