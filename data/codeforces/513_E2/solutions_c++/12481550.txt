#include<stdio.h>
#include<algorithm>
#include<vector>
using namespace std;
int p,dap=-2147483647,n,k,a[30010],s[30010],d[210][30010][4],d2[210][30010][4],pos[30010],sum,c;
vector<int>ch[30010];
int main()
{
    int i,j,l;
    scanf("%d %d",&n,&k);
    for(i=1;i<=n;i++){
        scanf("%d",&a[i]);
        s[i]=s[i-1]+a[i];
    }
    //1 : +, 0 : -
    for(i=1;i<=k;i++)
    {
        for(j=1;j<=n;j++)
        {
            d[i][j][1]=d[i][j][0]=d[i][j][2]=d[i][j][3]=d2[i][j][0]=d2[i][j][1]=d2[i][j][2]=d2[i][j][3]=-1e9;
        }
    }
    for(i=1;i<=k;i++)
    {
        for(j=i;j<=n;j++)
        {
            if(i==1 || i==k) c=1; else c=2;
            d[i][j][1]=max(d[i][j][1],d[i][j-1][1]+c*a[j]);
            d[i][j][0]=max(d[i][j][0],d[i][j-1][0]-c*a[j]);
            d[i][j][1]=max(d[i][j][1],d[i-1][j-1][0]+c*a[j]);
            d[i][j][0]=max(d[i][j][0],d[i-1][j-1][1]-c*a[j]);
            d[i][j][1]=max(d[i][j][1],d[i-1][j-1][3]+c*a[j]);
            d[i][j][0]=max(d[i][j][0],d[i-1][j-1][2]-c*a[j]);
            if(i!=1 && i!=k) d[i][j][2]=max(d[i][j][2],max(d[i-1][j-1][2],d[i-1][j-1][1]));
            if(i!=1 && i!=k) d[i][j][3]=max(d[i][j][3],max(d[i-1][j-1][3],d[i-1][j-1][0]));
            if(i!=1 && i!=k) d[i][j][2]=max(d[i][j][2],max(d[i][j-1][2],d[i][j-1][1]));
            if(i!=1 && i!=k) d[i][j][3]=max(d[i][j][3],max(d[i][j-1][3],d[i][j-1][0]));
            if(i==k)
            {
                dap=max(dap,d[i][j][1]);
                dap=max(dap,d[i][j][0]);
                dap=max(dap,d[i][j][2]);
                dap=max(dap,d[i][j][3]);
            }
        }
    }
    printf("%d",dap);
    return 0;
}
