#include <iostream>
#include <queue>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>
using namespace std;

#define MP make_pair
const int N = 77;
pair<int, int> dp[N][N][N];
int pre[N][N][N];
char color[N][N];
int n;
int st[3];

const pair<int, int> none = MP(-1, -1);

void solve() {
    queue<int> que;
    memset(dp, -1, sizeof(dp));
    for (int i = 0; i < 3; i++) que.push(i + 1);
    dp[1][2][3] = MP(0, 0);
    int now[3], tmp[3];
    while (!que.empty()) {
        for (int i = 0; i < 3; i++) { now[i] = que.front(); que.pop(); }
        for (int i = 0; i < 3; i++) {
            int c = color[now[(i + 1) % 3]][now[(i + 2) % 3]];
            for (int j = 1; j <= n; j++) {
                if (j == now[(i + 1) % 3] || j == now[(i + 2) % 3]) continue;
                if (c == color[now[i]][j]) {
                    memcpy(tmp, now, sizeof(now));
                    tmp[i] = j;
                    sort(tmp, tmp + 3);
                    if (dp[tmp[0]][tmp[1]][tmp[2]] == none) {
                        dp[tmp[0]][tmp[1]][tmp[2]] = MP(j, now[i]);
                        for (int i = 0; i < 3; i++) que.push(tmp[i]);
                    }
                }
            }
        }
    }
    sort(st, st + 3);
    pair<int, int> t = dp[st[0]][st[1]][st[2]];
    //cout << t.first << " " << t.second << endl;
    if (dp[st[0]][st[1]][st[2]] == none) cout << -1 << endl;
    else {
        vector<pair<int, int> > steps;
        while (dp[st[0]][st[1]][st[2]] != MP(0, 0)) {
            //for (int i = 0; i < 3; i++) cout << st[i] << " ";
            //cout << endl;
            steps.push_back(dp[st[0]][st[1]][st[2]]);
            for (int i = 0; i < 3; i++) {
                if (st[i] == steps.back().first) st[i] = steps.back().second;
            }
            sort(st, st + 3);
        }
        cout << steps.size() << endl;
        for (int i = 0; i < steps.size(); i++) {
            cout << steps[i].first << " " << steps[i].second << endl;
        }
    }
}

int main() {
    cin >> n;
    for (int i = 0; i < 3; i++) cin >> st[i];
    for (int i = 1; i <= n; i++) {
        cin >> &color[i][1];
        //cout << &color[i][1] << endl;
    }
    solve();
    return 0;
}
