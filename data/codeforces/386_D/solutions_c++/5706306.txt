#include<iostream>
#include<cmath>
#include<algorithm>
#include<string>
#include<string.h>
#include<vector>
#include<set>
#include<map>
#include<cstdio>
using namespace std;
 
typedef long long Int;
#define FOR(i,a,b) for(int i=(a); i<=(b);++i)
#define mp make_pair
#define pb push_back
#define sz(s) (int)((s).size())
const int inf = 1000000000;
const int MOD = 1000000007;

int a[5];
string s[99];
vector<pair<int,pair<int,int> > > g[1000000];
int d[1000000], q[1000009];
pair<int,int>pr[1000000];
int P[1000000];

inline int id(int i, int j, int k) {
	return 10000*i+100*j+k;
}

int main() {
	//freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
	int n;cin>>n;
	FOR(i,1,3) cin>>a[i]; sort(a+1, a+4);
	FOR(i,1,n) {
		cin>>s[i];
		s[i]=" "+s[i];
	}

	int b[4];
	FOR(i,1,n)FOR(j,i+1,n)FOR(k,j+1,n) {
		FOR(to,1,n) if(to!=j && to!=k && to!=i && s[i][to]==s[j][k]) {
			b[1]=to;b[2]=j;b[3]=k;sort(b+1, b+4);
			g[id(i,j,k)].pb(mp(id(b[1], b[2], b[3]), mp(i, to)));
		}
		FOR(to,1,n) if(to!=j && to!=k && to!=i && s[j][to]==s[i][k]) {
			b[1]=to;b[2]=i;b[3]=k;sort(b+1, b+4);
			g[id(i,j,k)].pb(mp(id(b[1], b[2], b[3]), mp(j, to)));
		}
		FOR(to,1,n) if(to!=j && to!=k && to!=i && s[k][to]==s[j][i]) {
			b[1]=to;b[2]=j;b[3]=i;sort(b+1, b+4);
			g[id(i,j,k)].pb(mp(id(b[1], b[2], b[3]), mp(k, to)));
		}
	}
	memset(d, 63, sizeof(d));
	int qt=0, qh=0;
	q[qt++]=id(a[1], a[2], a[3]);
	d[id(a[1], a[2], a[3])]=0;
	while(qh<qt) {
		int v=q[qh++];
		//cout<<sz(g[v])<<endl;
		FOR(i,0,sz(g[v])-1) {
			int to = g[v][i].first;
			if(d[to]>d[v]+1) {
				P[to]=v;
				pr[to]=g[v][i].second;
				d[to]=d[v]+1;
				q[qt++]=to;
			}
		}
	}
	if(d[id(1,2,3)]>inf) {
		cout<<"-1"<<endl;
		return 0;
	}
	vector<pair<int,int> > ans;
	int cur=id(1,2,3);
	while(cur!=id(a[1], a[2], a[3])) {
		ans.pb(pr[cur]);
		cur=P[cur];
	}
	reverse(ans.begin(), ans.end());
	cout<<sz(ans)<<endl;
	FOR(i,0,sz(ans)-1) cout<<ans[i].first<<" "<<ans[i].second<<endl;
}