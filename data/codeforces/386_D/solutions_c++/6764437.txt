#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <ctime>
#include <cmath>
#include <algorithm>

#define huge 1000000000
#define sz 72
#define ljz //
#define eps 1e-8
#define hugell (1ll << 61)
#define hugelf 1e40

using namespace std;
typedef long long int ll;
typedef double lf;
typedef long double LF;
template <class Q> Q _max(Q a, Q b){return (a > b) ? a : b;}
template <class Q> Q _min(Q a, Q b){return (a < b) ? a : b;}
template <class Q> Q _abs(Q x){return (x > 0) ? x : -x;}
template <class Q> void gi(Q &x){
  char ch = getchar(); x = 0;
  while (ch < '0' || ch > '9') ch = getchar();
  while (ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();
}
template <class Q> void pi(Q x){
  if (x > 9) pi(x / 10);
  putchar(x % 10);
}
char gra[72][72];
int bh[72][72][72];
class Pair{
public:
  int x, y, z;
  Pair(){}
  Pair(int a, int b, int c){
    x = a; y = b; z = c;
    if (x > y) swap(x, y);
    if (x > z) swap(x, z);
    if (y > z) swap(y, z);
  }
};
int n;
int d[72][72][72];
Pair q[1002000];
int inq[72][72][72];
int la[72][72][72][2];
#define _(q) q.x][q.y][q.z
#define enq(t2, y)			  \
	  if (d[_(t2)] > d[_(t1)] + 1){   \
	    d[_(t2)] = d[_(t1)] + 1;      \
	    if (!inq[_(t2)]){             \
	      inq[_(t2)] = 1;             \
	      q[++r] = t2;                \
	      la[_(t2)][0] = y;           \
	      la[_(t2)][1] = j;           \
	    }                             \
	  }
void spfa(Pair st){
  int i, j, k, l, r;
  Pair t1, t2;
  for (i = 1; i <= n; i++)
    for (j = i + 1; j <= n; j++)
      for (k = j + 1; k <= n; k++)
	d[i][j][k] = huge, inq[i][j][k] = 0;
  inq[_(st)] = 1; d[_(st)] = 0;
  q[l = r = 0] = st;
  while (l <= r){
    t1 = q[l++];
    for (j = 1; j <= n; j++)
      if (t1.x != j && t1.y != j && t1.z != j){
	if (gra[t1.z][j] == gra[t1.x][t1.y]){
	  t2 = Pair(t1.x, t1.y, j);
	  enq(t2, t1.z)
	}
	if (gra[t1.y][j] == gra[t1.x][t1.z]){
	  t2 = Pair(t1.x, j, t1.z);
	  enq(t2, t1.y)
	}
	if (gra[t1.x][j] == gra[t1.y][t1.z]){
	  t2 = Pair(j, t1.y, t1.z);
	  enq(t2, t1.x)
	}
      }
  }
}
Pair tt;
void print(Pair x){
  int i = la[_(x)][0], j = la[_(x)][1];
  if (x.x == tt.x && x.y == tt.y && x.z == tt.z) return;
  if (j == x.x) print(Pair(i, x.y, x.z));
  else if (j == x.y) print(Pair(x.x, i, x.z));
  else print(Pair(x.x, x.y, i));
  printf("%d %d\n", i, j);
}
int main(){
  int i, x, y, z;
  Pair t;
  scanf("%d\n", &n);
  scanf("%d %d %d", &x, &y, &z);
  tt = Pair(x, y, z);
  for (x = 1; x <= n; x++)
    scanf("%s", gra[x] + 1);
  spfa(tt);
  if (d[1][2][3] == huge){printf("-1"); return 0;}
  printf("%d\n", d[1][2][3]);
  print(Pair(1, 2, 3));
  return 0;
}
