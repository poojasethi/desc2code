#include<iostream>
#include<queue>
using namespace std;
struct state
{
    int a, b, c;
};
state make_state(int a,int b,int c){
    state s;
    s.a=a;
    s.b=b;
    s.c=c;
    return s;
}
queue<state> q;
const int N=100;
char s[N][N];
int d[N][N][N];
bool mark[N][N][N];
state par[N][N][N];
void bfs(int n){
    while(!q.empty()){
        state v=q.front();
        q.pop();
   
        for(int i=0;i<n;i++){
            if(s[v.a][v.b]==s[v.c][i]&&!mark[v.a][v.b][i]&&v.a!=i&&v.b!=i){
                d[v.a][v.b][i]=1+d[v.a][v.b][v.c];
                mark[v.a][v.b][i]=true;

                q.push(make_state(v.a,v.b,i));
                par[v.a][v.b][i]=make_state(v.a,v.b,v.c);
            }
            if(s[v.a][v.c]==s[v.b][i]&&!mark[v.a][i][v.c]&&v.a!=i&&v.c!=i){
                d[v.a][i][v.c]=1+d[v.a][v.b][v.c];
                mark[v.a][i][v.c]=true;

                q.push(make_state(v.a,i,v.c));
                par[v.a][i][v.c]=make_state(v.a,v.b,v.c);
            }
            if(s[v.b][v.c]==s[v.a][i]&&!mark[i][v.b][v.c]&&v.b!=i&&v.c!=i){
                d[i][v.b][v.c]=1+d[v.a][v.b][v.c];
                mark[i][v.b][v.c]=true;
                par[i][v.b][v.c]=make_state(v.a,v.b,v.c);
                q.push(make_state(i,v.b,v.c));
            }
        }
    }
}
int main(){
    int n,a,b,c;
    cin>>n>>a>>b>>c;
    a--;
    b--;
    c--;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cin>>s[i][j];
        }
    }
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            for(int t=0;t<3;t++){
                if(i!=j&&i!=t&&j!=t){
                    d[i][j][t]=0;
                    mark[i][j][t]=true;
                    q.push(make_state(i,j,t));
                }
            }
        }
    }
    bfs(n);
    if(!mark[a][b][c]){
        cout<<-1;
        return 0;
    }
    cout<<d[a][b][c]<<endl;
    while(d[a][b][c] != 0){
        state v=par[a][b][c];
        if(v.a!=a){
            cout<<a+1<<" "<<v.a+1<<endl;
        }
        if(v.b!=b){
            cout<<b+1<<" "<<v.b+1<<endl;
        }
        if(v.c!=c){
            cout<<c+1<<" "<<v.c+1<<endl;
        }
        a = v.a;
        b = v.b;
        c = v.c;
    }
}