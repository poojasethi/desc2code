#include <cstdio>
#include <algorithm>
using namespace std;

const int N=75;

int n;

char g[N][N];

int f[N][N][N];
int a[N][N][N],b[N][N][N];

struct data{
	int x,y,z;
	void sort(){
		if(x>y) swap(x,y);
		if(y>z) swap(y,z);
		if(x>y) swap(x,y);
	}
} st,q[N*N*N],*head,*tail;

int top=0,aa[N*N*N],bb[N*N*N];

int main(){
	scanf("%d%d%d%d",&n,&st.x,&st.y,&st.z);
	st.sort();
	for(int i=1;i<=n;i++) scanf("%s",g[i]+1);
	head=tail=q;
	f[st.x][st.y][st.z]=1;
	*tail++=st;
	while(head<tail){
		for(int to=1;to<=n;to++) if(to!=head->x&&to!=head->y&&to!=head->z){
			if(g[head->x][to]==g[head->y][head->z]){
				*tail=(data){to,head->y,head->z};
				tail->sort();
				if(!f[tail->x][tail->y][tail->z]){
					f[tail->x][tail->y][tail->z]=f[head->x][head->y][head->z]+1;
					a[tail->x][tail->y][tail->z]=head->x;
					b[tail->x][tail->y][tail->z]=to;
					tail++;
				}
			}
			if(g[head->y][to]==g[head->x][head->z]){
				*tail=(data){to,head->x,head->z};
				tail->sort();
				if(!f[tail->x][tail->y][tail->z]){
					f[tail->x][tail->y][tail->z]=f[head->x][head->y][head->z]+1;
					a[tail->x][tail->y][tail->z]=head->y;
					b[tail->x][tail->y][tail->z]=to;
					tail++;
				}
			}
			if(g[head->z][to]==g[head->x][head->y]){
				*tail=(data){to,head->x,head->y};
				tail->sort();
				if(!f[tail->x][tail->y][tail->z]){
					f[tail->x][tail->y][tail->z]=f[head->x][head->y][head->z]+1;
					a[tail->x][tail->y][tail->z]=head->z;
					b[tail->x][tail->y][tail->z]=to;
					tail++;
				}
			}
		}
		head++;
	}
	if(!f[1][2][3])
		puts("-1");
	else{
		printf("%d\n",f[1][2][3]-1);
		data cur=(data){1,2,3};
		while(cur.x!=st.x||cur.y!=st.y||cur.z!=st.z){
			++top;
			aa[top]=a[cur.x][cur.y][cur.z];
			bb[top]=b[cur.x][cur.y][cur.z];
			(cur.x==bb[top]?cur.x:cur.y==bb[top]?cur.y:cur.z)=aa[top];
			cur.sort();
		}
		for(int i=top;i>=1;i--) printf("%d %d\n",aa[i],bb[i]);
	}
}
