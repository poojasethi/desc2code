#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef double ld;

const int MAX=73;

int n;
char g[MAX][MAX];
int f[MAX][MAX][MAX];

struct Case
{
	int a[3];
	Case(int x=0,int y=0,int z=0)
	{
		a[0]=x;
		a[1]=y;
		a[2]=z;
		sort(a,a+3);
	}
};

Case q[MAX*MAX*MAX];
pair<int,int> comex[MAX][MAX][MAX];
Case come[MAX][MAX][MAX];

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
	int i,j;
	scanf("%d",&n);
	int x,y,z;
	scanf("%d%d%d",&x,&y,&z);
	REP(i,1,n)
		scanf("%s",g[i]+1);
	memset(f,-1,sizeof f);
	Case begin(x,y,z);
	f[begin.a[0]][begin.a[1]][begin.a[2]]=0;
	int head=0,end=0;
	q[end++]=begin;
	while(head<end)
	{
		Case c=q[head++];
		REP(i,0,2)
		{
			int l=(i+1) % 3;
			int ll=(l+1) %3;
			REP(j,1,n)
				if(j!=c.a[i] && j!=c.a[l] && j!=c.a[ll] && g[ c.a[i] ][j]==g[c.a[l]][c.a[ll]])
				{
					Case ne(j,c.a[l],c.a[ll]);
					if(f[ne.a[0]][ne.a[1]][ne.a[2]]==-1)
					{
						q[end++]=ne;
						f[ne.a[0]][ne.a[1]][ne.a[2]]=f[c.a[0]][c.a[1]][c.a[2]]+1;
						come[ne.a[0]][ne.a[1]][ne.a[2]]=c;
						comex[ne.a[0]][ne.a[1]][ne.a[2]]=mp(c.a[i],j);
					}
				}
		}
	}
	if(f[1][2][3]==-1)
		printf("-1\n");
	else
	{
		printf("%d\n",f[1][2][3]);
		Case now(1,2,3);
		vector< pair<int,int> > ans;
		while(comex[now.a[0]][now.a[1]][now.a[2]].x)
		{
			ans.pb( comex[now.a[0]][now.a[1]][now.a[2]] );
			now=come[now.a[0]][now.a[1]][now.a[2]];
		}
		reverse(ans.begin(),ans.end());
		REP2(i,0,(int)ans.size())
			printf("%d %d\n",ans[i].x,ans[i].y);
	}
	return 0;
}
