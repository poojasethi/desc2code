#include <iostream>
#include <queue>
#include <vector>
using namespace std;

typedef pair<int,int> pii;

const int INF = 1e9;
int n, x, y, z;
bool vis[75][75][75] = {};
char col[75][75];

struct state{
    char a, b, c;
    int p;
    state(){}
    state(int w, int x, int y, int z){a = w, b = x, c = y, p = z;}
    bool ok(){return a+b+c==3;}
};

state st[70*70*70+5];
int c = 0;

int main(){

    cin >> n >> x >> y >> z;
    for(int i = 0; i<n; i++){
        string s;
        cin >> s;
        for(int j = 0; j<n; j++) col[i][j] = s[j];
    }
    queue<state> q;
    q.push(state(x-1, y-1, z-1, -1));
    while(q.size()){
        state cur = q.front();
        q.pop();
        if(vis[cur.a][cur.b][cur.c]) continue;
        vis[cur.a][cur.b][cur.c] = 1;
        st[c++] = cur;
        if(cur.ok()){
            vector<pii> v;
            while(cur.p!=-1){
                if(cur.a!=st[cur.p].a) v.push_back(pii(st[cur.p].a, cur.a));
                else if(cur.b!=st[cur.p].b) v.push_back(pii(st[cur.p].b, cur.b));
                else v.push_back(pii(st[cur.p].c, cur.c));
                cur = st[cur.p];
            }
            cout << v.size() << endl;
            for(int i = (int)v.size()-1; i>=0; i--) cout << v[i].first+1 << " " << v[i].second+1 << '\n';
            return 0;
        }
        for(int i = 0; i<n; i++){
            if(i==cur.a||i==cur.b||i==cur.c) continue;
            if(col[cur.b][cur.c]==col[i][cur.a]) if(!vis[i][cur.b][cur.c]) q.push(state(i, cur.b, cur.c, c-1));
            if(col[cur.a][cur.c]==col[i][cur.b]) if(!vis[cur.a][i][cur.c]) q.push(state(cur.a, i, cur.c, c-1));
            if(col[cur.a][cur.b]==col[i][cur.c]) if(!vis[cur.a][cur.b][i]) q.push(state(cur.a, cur.b, i, c-1));
        }
    }
    cout << -1;

}
