#include <iostream>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <utility>
#include <algorithm>
#include <cmath>
#include <queue>

using namespace std;

int n,start;
char e[75][75];
int d[717171],prev[717171];
pair<int,int> move[717171];
queue<int> q;

int toNum(int a, int b, int c) {
    int arr[] = {a,b,c};
    sort(arr,arr+3);
    return 10000*arr[0] + 100*arr[1] + arr[2];
}

void print(int id) {
    if (id == start) return;
    print(prev[id]);
    cout << move[id].first << ' ' << move[id].second << '\n';
}

int main() {
    memset(d,-1,sizeof(d));
    int s[3];
    cin >> n >> s[0] >> s[1] >> s[2];
    s[0]--,s[1]--,s[2]--;
    start = toNum(s[0],s[1],s[2]);
    for (int i = 0; i < n; i++) cin >> e[i];
    d[start] = 0;
    q.push(start);
    int a[3];
    while (!q.empty()) {
        int num = q.front();
        q.pop();
        a[0] = num / 10000;
        a[1] = num / 100 % 100;
        a[2] = num % 100;
        if (num == 102) {
            cout << d[num] << '\n';
            print(num);
            return 0;
        }
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < n; j++) {
                if (j == a[0] || j == a[1] || j == a[2]) continue;
                int next = toNum(j,a[(i+1)%3],a[(i+2)%3]);
                if (e[a[i]][j] == e[a[(i+1)%3]][a[(i+2)%3]] && d[next] < 0) {
                    d[next] = d[num] + 1;
                    prev[next] = num;
                    move[next] = make_pair(a[i]+1,j+1);
                    q.push(next);
                }
            }
        }
    }
    cout << -1;
}