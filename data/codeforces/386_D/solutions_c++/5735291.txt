#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <string>
#include <cmath>
#include <map>
using namespace std;
typedef pair<int ,int > pii;
#define X first
#define Y second
#define PB push_back
#define MP make_pair
int n;
const int maxn=707071;
string s[70];
vector<int> G[26][maxn];
int pre[maxn],beg;
pii step[maxn];
void print(int num)
{
    if(pre[num]!=beg)print(pre[num]);
    printf("%d %d\n",step[num].X,step[num].Y);
}
bool bfs()
{
    queue<pii> q;
    q.push(MP(beg,0));
    memset(pre,-1,sizeof pre);
    while(!q.empty())
    {
        int num=q.front().X,Step=q.front().Y;
        q.pop();//cout<<num<<endl;
        if(num==102)
        {
            printf("%d\n",Step);
            if(Step!=0)print(num);
            return true;
        }
        int tx[3]={num%100,num/100%100,num/10000};
        for(int j=0;j<3;j++)
        {
            int i=s[tx[(j+1)%3]][tx[(j+2)%3]]-'a';
            for(vector<int>::const_iterator it=G[i][tx[j]].begin();it!=G[i][tx[j]].end();it++)
            {
                if(*it==tx[(j+1)%3]||*it==tx[(j+2)%3])continue;
                int next[3]={tx[(j+1)%3],tx[(j+2)%3],*it};
                sort(next,next+3);
                int Next=next[0]*10000+next[1]*100+next[2];
                if(pre[Next]==-1)pre[Next]=num,step[Next]=MP(tx[j]+1,*it+1),q.push(MP(Next,Step+1));
            }
        }
    }
    return false;
}
int main()
{
    while(cin>>n)
    {
        int tmp[3];
        for(int i=0;i<3;i++)cin>>tmp[i],tmp[i]--;
        sort(tmp,tmp+3);
        beg=tmp[0]*10000+tmp[1]*100+tmp[2];//cout<<beg;
        for(int i=0;i<n;i++)
        {
            cin>>s[i];
            for(int j=0;j<n;j++)if(j!=i)G[s[i][j]-'a'][i].PB(j);
        }
        if(!bfs())cout<<-1<<endl;
    }
    return 0;
}
