#include <bits/stdc++.h>





using namespace std;






#define fr(i,a,b) for(int i=a;i<b;++i)


const int oo = 0x3f3f3f3f;

struct S{
    int a,b,c;
    S(){}
    S(int A, int B, int C){a = A, b = B, c = C; }
    bool operator != (S x){
        if((x.a == a || x.b == a || x.c == a) && (x.a == b || x.b == b || x.c == b) && (x.a == c || x.b == c || x.c == c)) return false;
        return true;
    }
};

char mat[110][110];

int c[71][71][71];
S p[71][71][71];
queue<S> fila;
int n;

void relax(int a, int b, int C, S pa){
    fr(i,0,n){
        if(i != b && i != C && i != a && mat[a][i] == mat[b][C] && c[i][b][C] == -1){
            c[i][b][C] = c[pa.a][pa.b][pa.c] + 1;
            p[i][b][C] = S(pa.a,pa.b,pa.c);
            fila.push(S(i,b,C));
        }
    }
}
int a,b,C;
int v[10], v2[10], v3[10];
bool tem[10], tem2[10];
stack<S> pilha;
int main(){
    scanf("%d %d %d %d",&n,&a,&b,&C);
    --a;
    --b;
    --C;
    fr(i,0,n) scanf("%s",mat[i]);
    S s = S(a,b,C);
    memset(c, -1, sizeof c);
    v[0] = a, v[1] = b, v[2] = C;
    sort(v,v+3);
    do{
        c[v[0]][v[1]][v[2]] = 0;
        fila.push(S(v[0],v[1],v[2]));
        p[v[0]][v[1]][v[2]] = S(v[0],v[1],v[2]);
    }while(next_permutation(v,v+3));
    while(!fila.empty()){
        S now = fila.front(); fila.pop();
        int a = now.a, b = now.b, c = now.c;
        relax(a,b,c,now);
        relax(b,a,c,now);
        relax(c,a,b,now);
    }
    fr(i,0,3) v[i] = i;
    int ans = oo;
    S f;
    do{
        if(c[v[0]][v[1]][v[2]] != -1 && c[v[0]][v[1]][v[2]] < ans){
            ans = c[v[0]][v[1]][v[2]];
            f = S(v[0],v[1],v[2]);
        }
    }while(next_permutation(v,v+3));
    if(ans == oo) printf("-1\n");
    else{
        printf("%d\n",ans);
        while(f != s){
            S st = p[f.a][f.b][f.c];
            v2[0] = st.a, v2[1] = st.b, v2[2] = st.c;
            v3[0] = f.a, v3[1] = f.b, v3[2] = f.c;
            sort(v2,v2+3);
            sort(v3,v3+3);
            memset(tem, false, sizeof tem);
            memset(tem2, false, sizeof tem2);
            fr(i,0,3){
                fr(j,0,3){
                    if(v2[i] == v3[j]) tem[i] = true, tem2[j] = true;
                }
            }
            int fr, to;
            fr(i,0,3){ 
                if(tem2[i] == false) fr = v3[i];
                if(tem[i] == false) to = v2[i];
            }
            pilha.push(S(to,fr,0));
            f = st;
        }
        while(!pilha.empty()){
            S aux = pilha.top(); pilha.pop();
            printf("%d %d\n",aux.a+1,aux.b+1);
        }
    }
    return 0;
}











