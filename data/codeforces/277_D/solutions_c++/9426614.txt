#include <iostream>
#include <fstream>
#include <cstring>
#include <string>
#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <bitset>
#include <ctime>
#include <map>
#include <queue>
#include <set>
using namespace std;

const int maxn=1000+15;
const int maxt=1560+15;
const double eps=1e-9;
struct Node
{
    int s1,s2,t1,t2;
    double p;
}a[maxn];
int n,t;
long double f[maxn][maxt],tim[maxn][maxt];
bool cmp(Node a,Node b)
{
    return a.t2*a.p/(1-a.p)<b.t2*b.p/(1-b.p);
}
int update(int x,int y,long double ff,long double tt)
{
    if (y>t) return 0;
    if (f[x][y]>ff+eps) return 0;
    if (f[x][y]<ff-eps)
    {
        f[x][y]=ff;
        tim[x][y]=tt;
        return 0;
    }
    if (tim[x][y]>tt) tim[x][y]=tt;
    return 0;
}
int main()
{
    scanf("%d%d",&n,&t);
    for (int i=1;i<=n;i++) scanf("%d%d%d%d%lf",&a[i].s1,&a[i].s2,&a[i].t1,&a[i].t2,&a[i].p);
    sort(a+1,a+n+1,cmp);
    for (int i=1;i<=n;i++)
     for (int j=0;j<=t;j++)
     {
        update(i+1,j,f[i][j],tim[i][j]);
        update(i+1,j+a[i].t1,f[i][j]+a[i].s1,tim[i][j]+a[i].t1);
        update(i+1,j+a[i].t1+a[i].t2,f[i][j]+a[i].s1+a[i].s2*(1.0-a[i].p),
         tim[i][j]*a[i].p+a[i].t1+(a[i].t2+j)*(1.0-a[i].p));
     }
    long double anf=f[n+1][t],tt=tim[n+1][t];
    for (int i=0;i<t;i++)
     if (abs(f[n+1][t]-f[n+1][i])<eps) tt=min(tt,tim[n+1][i]);
    printf("%.11lf %.11lf\n",(double)anf,(double)tt);
    return 0;
}
