#include<iostream>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<cstdio>
using namespace std;
struct atom{
	int t1,t2,w1,w2;
	double p;
	void scan(){
		scanf("%d%d%d%d%lf",&w1,&w2,&t1,&t2,&p);
	}
}x[2000];
int compare(atom k1,atom k2){
	return k1.t2*k1.p/(1-k1.p)<k2.t2*k2.p/(1-k2.p);
}
int n,t;
long double f[1100][1600],w[1100][1600],eps=1e-9;
void update(int k1,int k2,long double k3,long double k4){
	if (k2>t) return;
	if (f[k1][k2]+eps<k3){
		f[k1][k2]=k3; w[k1][k2]=k4;
	} else if (fabs(f[k1][k2]-k3)<eps) w[k1][k2]=min(w[k1][k2],k4);
}
int main(){
	scanf("%d%d",&n,&t); for (int i=1;i<=n;i++) x[i].scan(); sort(x+1,x+n+1,compare);
	for (int i=1;i<=n;i++)
		for (int j=0;j<=t;j++){
			update(i+1,j,f[i][j],w[i][j]);
			update(i+1,j+x[i].t1,f[i][j]+x[i].w1,w[i][j]+x[i].t1);
			update(i+1,j+x[i].t1+x[i].t2,f[i][j]+x[i].w1+x[i].w2*(1-x[i].p),w[i][j]*x[i].p+x[i].t1+(x[i].t2+j)*(1-x[i].p));
		}
	long double num=w[n+1][t];
	for (int i=0;i<t;i++) if (fabs(f[n+1][i]-f[n+1][t])<eps) num=min(num,w[n+1][i]);	
	printf("%.11lf %.11lf\n",(double)f[n+1][t],(double)num); return 0;
}