#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<cmath>
#define N 3005
#define D 1000000
#define Long long long
#define For(i,l,r) for(int i=l;i<=r;i++)
using namespace std;
struct rec{
    Long pSml,tSml,pLar,tLar; long double fail;
    void read(){
        scanf("%I64d%I64d%I64d%I64d",&pSml,&pLar,&tSml,&tLar);
        pSml*=D; pLar*=D;
        double p;scanf("%lf",&p);
        fail=p;
    }
}E[N];
bool cmp(const rec &i,const rec &j){
    return i.fail*j.fail*(j.tLar-i.tLar)+i.fail*i.tLar-j.fail*j.tLar<0;
}
int n,m,x,y;
long double F[N][N],G[N][N];
void update(int i,int j,long double f,long double g){
    if(j>m) return;
    if(f>F[i][j]) F[i][j]=f,G[i][j]=g;
    if( abs(f-F[i][j])<0.0001 ) G[i][j]=min(G[i][j],g);
}
int main(){
    scanf("%d%d",&n,&m);
    For(i,1,n) E[i].read();
    sort(E+1,E+1+n,cmp);
    
//  For(i,1,n) printf("Fail %lf\n",E[i].fail);
    
    For(i,1,n) For(j,0,m){
        Long pSml=E[i].pSml;
        Long tSml=E[i].tSml;
        Long pLar=E[i].pLar;
        Long tLar=E[i].tLar;
        long double fail=E[i].fail;
        
        update(i+1,j,F[i][j],G[i][j]);
        update(i+1,j+tSml,F[i][j]+pSml,G[i][j]+tSml);
        update(i+1,j+tSml+tLar,
            pSml+F[i][j]+(1-fail)*pLar,
            tSml+(1-fail)*(j+tLar)+fail*G[i][j]
        );
    }
    For(i,1,n+1) For(j,0,m){
        if( (F[i][j]-F[x][y])<0.0001 && G[i][j]<G[x][y]) x=i,y=j;
        if(F[i][j]>F[x][y]) x=i,y=j;
    }
    
//  For(j,0,m) printf("F %lf G %lf\n",F[n+1][j]/D,G[n+1][j]);
    
    printf("%.10lf %.10lf\n",(double)F[x][y]/D,(double)G[x][y]);
}