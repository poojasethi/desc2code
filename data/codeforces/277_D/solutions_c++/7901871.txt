#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<vector>
#include<string>
#define LL long long
#define MP make_pair
using namespace std;
int n,T,st[1010],ss[1010],bs[1010],bt[1010],ord[1010];
LL fail[1010],St=1e6;
pair<LL,double> f[2010],Max; 
double x;
void read(int &x)
{
	char ch=getchar();int mark=1;for(;ch!='-'&&(ch<'0'||ch>'9');ch=getchar());if (ch=='-') mark=-1,ch=getchar();
	for(x=0;ch>='0'&&ch<='9';ch=getchar()) x=x*10+ch-48;x*=mark;
}
inline bool cmp(int i,int j)
{
	return fail[i]*bt[i]*(St-fail[j])<fail[j]*bt[j]*(St-fail[i]);
}
void updata(int i,LL fr,double s)
{
	if (f[i].first<fr||(f[i].first==fr&&f[i].second>s)) f[i]=MP(fr,s);
}
int main()
{
	read(n);read(T);
	for(int i=1;i<=n;i++)
	{
		read(ss[i]);read(bs[i]);read(st[i]);read(bt[i]);
		scanf("%lf",&x);fail[i]=x*St+0.1;
		ord[i]=i;
	}
	sort(ord+1,ord+n+1,cmp);
	for(int i=0;i<=T;i++) f[i]=MP(-1e17,0);
	f[0]=MP(0,0);
	for(int i=1;i<=n;i++)
	{
		int u=ord[i];
		double F=(double)fail[u]/St;
		for(int j=T;j>=0;j--)
			if (f[j].first!=-1e17)
			{
				if (st[u]+j<=T) updata(st[u]+j,f[j].first+St*ss[u],f[j].second+st[u]);
				if (st[u]+bt[u]+j<=T) 
					updata(st[u]+bt[u]+j,f[j].first+St*ss[u]+(St-fail[u])*bs[u],F*f[j].second+st[u]+(1-F)*(j+bt[u]));
			}
	}
	Max=MP(-1e17,0);
	for(int i=0;i<=T;i++)
		if (f[i].first>Max.first||(f[i].first==Max.first&&f[i].second<Max.second)) Max=f[i];
	printf("%.9lf %.9lf\n",(double)Max.first/St,Max.second);
	return 0;
}