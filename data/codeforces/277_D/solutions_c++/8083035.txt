#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long LL;

const int N = 2005;
const int B = int(1e6);

int n, t, od[N];
LL as[N], at[N], bs[N], bt[N], fal[N], fs[2][N];
double fail[N], ft[2][N];

bool cmp(int x, int y) { return bt[x]*fal[x]*(1-fail[y]) < bt[y]*fal[y]*(1-fail[x]); }

void U(int e, int j, LL sc, double pt)
{
	if(sc>fs[e][j] || (sc==fs[e][j] && pt<ft[e][j])) fs[e][j]=sc, ft[e][j]=pt;
}

int main()
{
	scanf("%d%d", &n, &t);
	for(int i=1; i<=n; i++)
	{
		scanf("%I64d%I64d%I64d%I64d%lf", &as[i], &bs[i], &at[i], &bt[i], &fail[i]);
		fal[i] = int(fail[i] * B + 0.5), od[i] = i;
	}
	sort(od+1, od+n+1, cmp);
	
	for(int i=0; i<=t; i++) fs[0][i] = -1;
	fs[0][0] = 0;
	
	for(int ip=1; ip<=n; ip++)
	{
		int i(od[ip]), e(ip&1), g(1-e);
		for(int j=0; j<=t; j++) fs[e][j] = -1;
		for(int j=0; j<=t; j++) if(fs[g][j]>=0)
		{
			U(e, j, fs[g][j], ft[g][j]);
			if(j+at[i]<=t)
			U(e, j+at[i], fs[g][j]+as[i]*B, ft[g][j]+at[i]);
			if(j+at[i]+bt[i]<=t)
			U(e, j+at[i]+bt[i], fs[g][j]+as[i]*B+bs[i]*(B-fal[i]), fail[i]*ft[g][j]+(1-fail[i])*(j+bt[i])+at[i]);
		}
	}
	
	int g(1-(n&1)); fs[g][0] = -1;
	for(int i=0; i<=t; i++) U(g, 0, fs[1-g][i], ft[1-g][i]);
	printf("%.9lf %.9lf\n", double(fs[g][0])/double(B), ft[g][0]);
	
	return 0;
}
