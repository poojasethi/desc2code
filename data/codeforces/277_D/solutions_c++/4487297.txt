#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
using namespace std;
const int base=1000000;
long long ss[1200],sl[1200],p[1200],f[1700],tl[1200],ts[1200];
int n,t,ord[1200],i,j,o;
double pp[1200],ans,g[1700];
bool cmp(const int i,const int j){
	return (tl[i]+tl[j])*(base-p[j])*base+tl[i]*p[j]*(base-p[i]) < (tl[i]+tl[j])*(base-p[i])*base+tl[j]*p[i]*(base-p[j]);
}
void renew(int x,long long v1,double v2){
	if(v1>f[x] || v1==f[x] && v2<g[x])
		f[x]=v1,g[x]=v2;
}
int main(){
	scanf("%d%d",&n,&t);
	for(i=1;i<=n;++i){
		scanf("%I64d%I64d%I64d%I64d%lf",ss+i,sl+i,ts+i,tl+i,pp+i);
		ord[i]=i;
		p[i]=int(base*pp[i]+0.5);
	}
	sort(ord+1,ord+n+1,cmp);
	for(o=1;o<=n;++o){
		i=ord[o];
		for(j=t;j>=0;--j){
			if(j+ts[i]<=t)renew(j+ts[i],f[j]+ss[i]*base,g[j]+ts[i]);
			if(j+ts[i]+tl[i]<=t)renew(j+ts[i]+tl[i],f[j]+ss[i]*base+sl[i]*(base-p[i]),ts[i]+g[j]*pp[i]+(j+tl[i])*(1-pp[i]));
		}
	}
	ans=g[t];
	for(i=0;i<=t;++i)if(f[i]==f[t] && g[i]<ans)ans=g[i];
	printf("%.10lf %.10lf\n",(double)f[t]/base,ans);
}