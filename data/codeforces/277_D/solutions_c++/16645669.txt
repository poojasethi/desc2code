#include<bits/stdc++.h>
using namespace std;

struct problem
{int s1,s2,t1,t2;
 double p;
};
problem a[1010];

struct unit
{long double s,t;
};
unit ans;
unit f[1010][1610];

int n,maxt;
const long double eps=1e-15;

bool operator >(unit A,unit B)
{return A.s>B.s || (fabs(A.s-B.s)<eps && A.t<B.t);
}

unit operator +(unit A,pair<long double,long double> B)
{return (unit){A.s+B.first,A.t+B.second};
}

bool cmp(problem A,problem B)
{return A.p*A.t2*(1-B.p)<B.p*B.t2*(1-A.p);
}

void update(unit &A,unit B)
{if(B>A) A=B;
}

int main()
{int i,j;
 unit x;
 
 scanf("%d%d",&n,&maxt);
 for(i=1;i<=n;i++)
 	scanf("%d%d%d%d%lf",&a[i].s1,&a[i].s2,&a[i].t1,&a[i].t2,&a[i].p);
 sort(a+1,a+n+1,cmp);	
 for(i=0;i<n;i++)
 	for(j=0;j<=maxt;j++)
	{	update(f[i+1][j],f[i][j]);
		if(j+a[i+1].t1<=maxt)
		{	x=f[i][j]+make_pair(a[i+1].s1,a[i+1].t1);
			update(f[i+1][j+a[i+1].t1],x);
		}
		if(j+a[i+1].t1+a[i+1].t2<=maxt)
		{	x=f[i][j]+make_pair(a[i+1].s1+a[i+1].s2*(1-a[i+1].p),a[i+1].t1+f[i][j].t*a[i+1].p+(j+a[i+1].t2)*(1-a[i+1].p)-f[i][j].t);
			update(f[i+1][j+a[i+1].t1+a[i+1].t2],x);
		}
	}
 ans=(unit){0,0};
 for(i=0;i<=maxt;i++) update(ans,f[n][i]);
 printf("%.10lf %.10lf\n",(double)ans.s,(double)ans.t);
 return 0;
}