#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 2010
#define db double
#define int64 long long
#define base 1000000ll
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int ss,sl,ts,tl;
	int64 pf;
	db k;
	inline void read() {
		scanf("%d%d%d%d%lf",&ss,&sl,&ts,&tl,&k);
		pf=k*base+0.1;
	}
} a[N];
int i,j,k,n,m;
int64 f[N][N];
db g[N][N];
inline bool cc1(const ww &a,const ww &b) {
	return a.k*a.tl+a.k*b.k*b.tl<b.k*b.tl+a.k*b.k*a.tl;
}
inline void get(int w,int64 B,db C) {
	if (B>f[i+1][w]||B==f[i+1][w]&&C<g[i+1][w]) {
		f[i+1][w]=B;
		g[i+1][w]=C;
	}
}
int main() {
	scanf("%d%d",&n,&m);
	For(i,1,n) a[i].read();
	sort(a+1,a+n+1,cc1);
	memset(f,130,sizeof(f));
	f[0][0]=0;
	For(i,0,n-1)For(j,0,m) if (f[i][j]>=0) {
		ww A=a[i+1];
		if (j+A.ts<=m) {
			int64 B=f[i][j]+A.ss*base;
			db C=g[i][j]+A.ts;
			get(j+A.ts,B,C);
		}
		if (j+A.ts+A.tl<=m) {
			int64 B=f[i][j]+A.ss*base+A.sl*(base-A.pf);
			db C=g[i][j]+A.ts;
			C=C*A.k+(j+A.ts+A.tl)*(1-A.k);
			get(j+A.ts+A.tl,B,C);
		}
		get(j,f[i][j],g[i][j]);
	}
	int64 an=0;
	db re=0;
	For(j,0,m) if (f[n][j]>an||f[n][j]==an&&g[n][j]<re) an=f[n][j],re=g[n][j];
	printf("%.12lf %.12lf\n",1.*an/base,re);
	return 0;
}
