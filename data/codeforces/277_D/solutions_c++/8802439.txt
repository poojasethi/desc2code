#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

typedef long double ld;
typedef long long ll;

const int N = 1005 , T = 1565;
const ll base = 1000000;

#define fo(i , st , en) for (int i = st; i <= en; i++)
#define fd(i , st , en) for (int i = st; i >= en; i--)
#define Me(x , y) memset(x , y , sizeof(x))
#define Abs(x) ((x) > 0 ? (x) : -(x))

struct _two{
	ll a; ld b;
}f[T];

struct _node{
	int ss , sl , ts , tl , pf;
}a[N];

bool operator < (const _node &x , const _node &y){
	return (ld)x.pf * (base - y.pf) * x.tl < (ld)y.pf * (base - x.pf) * y.tl;
}

int n , t;

void Init(){
	scanf("%d%d" , &n , &t); double x;
	fo (i , 1 , n){
		scanf("%d%d%d%d%lf" , &a[i].ss , &a[i].sl , &a[i].ts , &a[i].tl , &x); a[i].pf = (int)(x * 1e6 + 1e-6);
	}
	sort(a + 1 , a + n + 1);
}

void Update(_two &x , ll v , ld t){
	if (x.a == v && x.b > t || x.a < v) x = (_two){v , t};
}

void Work(){
	fo (i , 1 , t) f[i].a = -1;
	fo (i , 1 , n)
		fd (j , t , 1){
			if (j >= a[i].ts) Update(f[j] , f[j - a[i].ts].a + a[i].ss * base , f[j - a[i].ts].b + a[i].ts);
			if (j >= a[i].ts + a[i].tl) Update(f[j] , f[j - a[i].ts - a[i].tl].a + a[i].ss * base + a[i].sl * (base - a[i].pf) , a[i].pf * 1e-6 * (f[j - a[i].ts - a[i].tl].b + a[i].ts) + (1 - a[i].pf * 1e-6) * j);
		}
	fo (i , 1 , t)
		Update(f[0] , f[i].a , f[i].b);
	printf("%.18lf %.18lf\n" , f[0].a * 1e-6 , (double)f[0].b);
}

int main(){
	Init();
	Work();
	return 0;
}
