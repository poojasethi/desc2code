#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
using namespace std;
#define N 2050
#define M 1000000
#define ll long long
int li[N],n,m;ll ans0,TL[N],TS[N],SS[N],SL[N],P[N],cnt[N];
double p[N],Exp[N],ans1;
inline int Read()
 {
    int x=0;char y;
    do y=getchar(); while (y<'0'||y>'9');
    do x=x*10+y-'0',y=getchar(); while (y>='0'&&y<='9');
    return x;
 }
inline bool cmp(int x,int y)
 {return P[x]*TL[x]*(M-P[y])<P[y]*TL[y]*(M-P[x]);}
inline void Update(int x,ll y,double z)
 {if (y>cnt[x]||(y==cnt[x]&&z<Exp[x])) cnt[x]=y,Exp[x]=z;}
int main()
 {
    n=Read();m=Read();
    for (int i=1;i<=n;i++)
      SS[i]=Read(),SL[i]=Read(),TS[i]=Read(),TL[i]=Read(),
      scanf("%lf",&p[i]),P[i]=p[i]*M+0.5,li[i]=i;
    sort(li+1,li+n+1,cmp);
    for (int i=1;i<=n;i++)
     for (int j=m;j>=0;j--)
      {
         if (j+TS[li[i]]<=m)
           Update(j+TS[li[i]],cnt[j]+SS[li[i]]*M,TS[li[i]]+Exp[j]);
         if (j+TS[li[i]]+TL[li[i]]<=m)
           Update(j+TS[li[i]]+TL[li[i]],cnt[j]+SS[li[i]]*M+SL[li[i]]*(M-P[li[i]]),
             TS[li[i]]+p[li[i]]*Exp[j]+(1-p[li[i]])*(j+TL[li[i]]));
      }
    ans0=cnt[m];ans1=Exp[m];
    for (int i=m-1;i>=0;i--)
     if (ans0==cnt[i]&&Exp[i]<ans1) ans1=Exp[i];
    printf("%.10lf %.10lf\n",(double)(ans0)/M,ans1);
    return 0;
 }