#include <cstdio>
#include <algorithm>
#include <queue>
#define N 1005
#define FI(a, b, c) for(int a = b; a <= c; a++)
#define FD(a, b, c) for(int a = b; a >= c; a--)
using namespace std;

int n, k, p, t, M[N], j, S;
long long A;
vector<int> l[N];
struct odp{
	int p, t, o, u;
} r[N];
bool cmp(odp a, odp b){ return a.p > b.p;}

int main(){
	scanf("%d %d", &n, &k);
	FI(i, 1, n) scanf("%d %d", &r[i].p, &r[i].t), r[i].o = i;
	sort(r + 1, r + 1 + n, cmp);
	
	j = 1;
	FI(i, 1, n) if(r[i].t == 1 && j <= k)
		l[j].push_back(i), M[j++] = r[i].p, r[i].u = 1;
	S = j - 1;
	
	FI(i, 1, n) if(r[i].t == 2 && j <= k)
		l[j].push_back(i), M[j++] = r[i].p, r[i].u = 1;
		
	FI(i, 1, n) if(!r[i].u) l[k].push_back(i), M[k] = min(M[k], r[i].p), r[i].u = 1;
	
	FI(i, 1, k){
		FI(j, 0, l[i].size() - 1) A += r[l[i][j]].p * 2;
		if(i <= S) A -= M[i];
	}
	
	if(A & 1) printf("%I64d.5\n", A / 2);
	else printf("%I64d.0\n", A / 2);
	FI(i, 1, k){
		printf("%d", l[i].size());
		FI(j, 0, l[i].size() - 1) printf(" %d", r[l[i][j]].o);
		puts("");
	}
	scanf("\n");
}
