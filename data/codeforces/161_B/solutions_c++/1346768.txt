#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
using namespace std;

const int N = 100000 + 2;
const int INF = (1 << 29);
int n, k;
vector<pair<int, int> > c;
vector<int> p, ans;
int main()
{
	ios::sync_with_stdio(false);
	long long sum = 0, mmin = (1LL << 31);
	cin >> n >> k;
	for (int i = 1; i <= n; ++i)
	{
		int x, y;
		cin >> x >> y;
		mmin = min(mmin, 1LL * x);
		if (y == 2)
		{
			p.push_back(i);
			sum += x * 2;
		}
		else
			c.push_back(make_pair(x, i));
	}
	sort(c.rbegin(), c.rend());
	int t = 0;
	for (t = 0; t < k - 1 && t < c.size(); ++t)
	{
		ans.push_back(c[t].second);
		sum += c[t].first;

	}
	for (int i = k - 1; i < c.size(); ++i)
	{
		ans.push_back(c[i].second);
		sum += c[i].first * 2;
	}
	for (int i = 0; i < p.size(); ++i)
		ans.push_back(p[i]);
	if (c.size() >= k)
	{
		sum -= mmin;
	}
	cout << sum / 2 << ((sum & 1) ? ".5" : ".0") << endl;
	for (int i = 0; i < k - 1; ++i)
		printf("1 %d\n", ans[i]);
	printf("%d", n - k + 1);
	for (int i = k - 1; i < n; ++i)
		printf(" %d", ans[i]);
	return 0;
}
