#include <iostream>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;
typedef long long Long ;
struct thing {
	Long cost;
	int type, id;
} a[1010];

bool cmp(thing a, thing b) {
	if (a.type != b.type) return a.type < b.type;
	return a.cost > b.cost;
}

int n, k;
int main() {
	cin >> n >> k;
	int cnt = 0;
	Long ans = 0;
	for (int i = 1; i <= n; ++i) {
		cin >> a[i].cost >> a[i].type;
		ans += a[i].cost * 2;
		a[i].id = i;
		if (a[i].type == 1) ++cnt;
	}
	sort(a + 1, a + 1 + n, cmp);
	for (int i = 1; i < k; ++i) 
		if (a[i].type == 1) ans -= a[i].cost;
	if (cnt >= k) {
		Long low = a[k].cost;
		for (int j = k; j <= n; ++j) 
			low = min(low, a[j].cost);
		ans -= low;
	}
	if (ans & 1LL) 
		cout << ans / 2 << ".5" << endl;
	else cout << ans / 2 << ".0" << endl;
	for (int i = 1; i < k; ++i) 
		cout << "1 " << a[i].id << endl;
	cout << n - k + 1 ;
	for (int i = k; i <= n; ++i) 
		cout << ' ' << a[i].id;
	cout << endl;
	return 0;
}
	
