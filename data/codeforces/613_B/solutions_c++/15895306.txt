#include <bits/stdc++.h>
using namespace std;
#define REP(i,n) for (int i=0; i<n; i++)
#define PER(i,n) for (int i=n-1; i>=0; i--)
typedef long long LL;

const int N = 1.1e5;
int n, a[N], o[N];
LL cf, cm, m, A;
LL sum[N];

inline bool cmp(int x, int y) {
    return a[x] < a[y] || a[x] == a[y] && x < y;
}

int main() {
    cin >> n >> A >> cf >> cm >> m;
    REP(i,n) {
        o[i] = i;
        scanf("%d", a+i);
    }
    o[n] = n; a[n] = A;

    sort(o, o+n+1, cmp);
    REP(i,n+1) sum[i] = (i?sum[i-1]:0) + a[o[i]];
    LL ans = -1; int ansi, ansj, ansm;

    for (int i=n, j=n; j>=0; j--) {
        LL rem = m - (A*(n-j+1) - (sum[n]-(j?sum[j-1]:0)));
        if (rem < 0) break;
        if (!j) {
        	ans = cf * n + cm * A;
        	ansi = 0; ansj = 0; break;
        }
        
        if (i>j) i--;
        while (LL(a[o[i-1]])*i - sum[i-1] > rem) i--;
        int tansm = min(A, a[o[i-1]] + (rem - (LL(a[o[i-1]])*i - sum[i-1])) / i);
        LL tans = cf * (n-j) + cm * tansm;
        if (tans > ans) {
            ans = tans;
            ansi = i; ansj = j; ansm = tansm;
        }
    }

    cout << ans << endl;
    for (int j=n; j>=ansj; j--) a[o[j]] = A;
    for (int i=0; i<ansi; i++) a[o[i]] = ansm;

    REP(i,n) printf("%d%c", int(a[i]), i==n-1?'\n':' ');
    
    return 0;
}
