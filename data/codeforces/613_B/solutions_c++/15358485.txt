#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <vector>
#include <queue>
using namespace std;
typedef long long ll;
const int N=1E5+5;
struct map{
    int x,p;
}A[N];
int n,AA,cf,cm,a[N],l,r,mid,p[N],p0,p1,l2;
ll m,f[N],x,y,ans,sum;

int comp(const map&a,const map&b)
{
    return a.x<b.x;
}

int main()
{
    cin>>n>>AA>>cf>>cm>>m;
    for (int i=1;i<=n;i++) scanf("%d",&A[i].x),A[i].p=i;
    sort(A+1,A+n+1,comp);
    for (int i=1;i<=n;i++) a[i]=A[i].x;
    for (int i=1;i<=n;i++) f[i]=f[i-1]+a[i];
    p0=n+1; a[n+1]=AA;
    for (int i=n+1;i;i--)
    {
        m-=AA-a[i];
        if (m<0) break;
        l=0; r=AA;
        while (l<=r)
        {
            mid=(l+r)/2;
            x=lower_bound(a+1,a+n+1,mid+1)-a-1;
            if (x>=i) x=i-1;
            y=x*mid-f[x];
            if (y>m) r=mid-1; else l=mid+1;
        }
        l2=r;
        sum=(ll)cf*(n-i+1)+(ll)l2*cm;
        if (sum>ans)
        {
            p0=i; p1=l2; ans=sum;
        }
    }
    cout<<ans<<endl;
    for (int i=1;i<=n;i++) if (i>=p0) p[A[i].p]=AA; else if (a[i]<=p1) p[A[i].p]=p1; else p[A[i].p]=a[i];
    for (int i=1;i<=n;i++) printf("%d ",p[i]);  
}