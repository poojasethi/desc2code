#include<stdio.h>
#include<algorithm>
using namespace std;

struct node
{
	__int64 w;
	int id;
}s[100005];
__int64 sum[100005];

int cmp(node a,node b)
{
	return a.w<b.w;
}

int cmpp(node a,node b)
{
	return a.id<b.id;
}

int main()
{
	__int64 n,a,cf,cm,m;
	__int64 i,j,k;
	while(scanf("%I64d %I64d %I64d %I64d %I64d",&n,&a,&cf,&cm,&m)!=EOF)
	{
		for(i=0;i<n;i++)
		{
			scanf("%I64d",&s[i].w);
			s[i].id=i;
		}
		s[n].w=1e15+5;
		sort(s,s+n,cmp);
		sum[0]=0;
		__int64 cost,min,ansmin=-1,max=-1,ansk=-1;
		for(i=1;i<=n;i++) sum[i]=sum[i-1]+s[i-1].w;
		for(i=0,j=0;i<=n;i++)
		{
			cost=a*(n-i)-(sum[n]-sum[i]);
			if(cost>m) continue;
			
			for(;j<i;j++)
			{
				if((j+1)*s[j].w-sum[j+1]>m-cost) break;
			}
			if(j==0)
			{
				ansmin=a;
				ansk=-1;
				max=a*cm+cf*n;
			}
			else
			{
				j--;
				min=(sum[j+1]+m-cost)/(j+1);
				if(min>a) min=a;
			
			if(max<min*cm+cf*(n-i))
			{
				ansmin=min;
				ansk=i-1;
				max=min*cm+cf*(n-i);
			}}
		}
		for(i=n-1;i>=0;i--)
		{
			if(i>ansk) s[i].w=a;
			else if(s[i].w<=ansmin) s[i].w=ansmin;
		}
		sort(s,s+n,cmpp);
		printf("%I64d\n",max);
		printf("%I64d",s[0].w);
		for(i=1;i<n;i++) printf(" %I64d",s[i].w);
		puts("");
	}
	return 0;
}
/*
2 5 2 1 1
1 5
*/