#include <bits/stdc++.h>
#define fi first
#define se second
using namespace std;

typedef long long lint;
typedef pair < int , int > ii;

const int maxn = 1e5+5;

int n,A,cf,cm,a[maxn],ans[maxn],tmp_val;
lint pre[maxn],m;
ii b[maxn];

lint calc( int fin , lint currency ){
	int bgn = b[1].fi , end = A;
	while( bgn < end ){
		int mid = (bgn + end + 1) >> 1;
		int pos = upper_bound(b + 1 , b + n + 1 , ii(mid , 0)) - b - 1;
		pos = min(pos , fin);
		if( 1ll * mid * pos - pre[pos] <= currency ) bgn = mid;
		else end = mid - 1;
	}
	tmp_val = bgn;
	return 1ll * cm * bgn;
}

int main(){
	
	scanf("%d%d%d%d%lld",&n,&A,&cf,&cm,&m);
	
	for( int i = 1 ; i <= n ; i++ ){
		scanf("%d",&a[i]);
		ans[i] = a[i];
		b[i] = ii(a[i] , i);
	}
	
	sort(b + 1 , b + n + 1);
	
	for( int i = 1 ; i <= n ; i++ )
		pre[i] = pre[i - 1] + b[i].fi;
	
	lint best_val = calc(n , m);
	int best_point = n + 1 , mn_val = tmp_val;
	
	for( int i = n ; i ; i-- ){
		m -= A - b[i].fi;
		if( m < 0 ) break;
		lint cur = calc(i - 1 , m) + 1ll * cf * (n - i + 1);
		if( i == 1 ) cur = 1ll * cf * n + 1ll * cm * A;
		if( best_val < cur ){
			best_val = cur;
			best_point = i;
			mn_val = tmp_val;
		}
	}
	
	for( int i = n ; i >= best_point ; i-- )
		ans[b[i].se] = A;
	
	for( int i = 1 ; i <= n ; i++ )
		ans[i] = max(ans[i] , mn_val);
	
	printf("%lld\n",best_val);
	
	for( int i = 1 ; i <= n ; i++ )
		printf("%d ",ans[i]);
	
	return 0;
}
