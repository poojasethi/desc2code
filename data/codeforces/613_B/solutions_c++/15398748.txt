#include<iostream>
#include<cstdio>
#include<algorithm>
using namespace std;
typedef long long LL;
LL S[500005],U=0,n,A;
struct jgt{LL V,bh,to;}a[500005];
bool cmp_V(const jgt &x,const jgt &y){return x.V<y.V;}
bool cmp_bh(const jgt &x,const jgt &y){return x.bh<y.bh;}
LL pos(LL L,LL R,LL lim)
{   LL mid;
    while(L<=R)
      {mid=(L+R)/2;
       if(a[mid].V>lim)R=mid-1;
       else L=mid+1;
      }
    return R;
}
LL Binary(LL st,LL ed,LL lim)
{   if(st>ed)return A;
    LL L=a[st].V,R=min(U/n,A),mid,p;
    while(L<=R)
      {mid=(L+R)/2;p=pos(st,ed,mid);
       if(mid*(p-st+1)-S[p]>lim)R=mid-1;
       else L=mid+1;
      }
    return R;
}
int main()
{   LL i,cf,cm,m,nowans,ans=-0x7fffffffffffff,bh,av,nowav;
    cin>>n>>A>>cf>>cm>>m;
    for(i=1;i<=n;i++){cin>>a[i].V;a[i].bh=i;U+=a[i].V;}
    a[n+1].V=A;U+=m;
    sort(a+1,a+1+n,cmp_V);
    for(i=1;i<=n;i++)S[i]=S[i-1]+a[i].V;
    for(i=n+1;i>=1;i--)
      {m-=(A-a[i].V);
       if(m<0)break;
       nowav=Binary(1,i-1,m);
       nowans=(n-i+1)*cf+nowav*cm;
       if(nowans>ans){ans=nowans;bh=i;av=nowav;}
      }
    for(i=bh;i<=n;i++)a[i].to=A;
    for(i=1;i<bh;i++)a[i].to=av;
    sort(a+1,a+1+n,cmp_bh);
    cout<<ans<<endl;
    for(i=1;i<=n;i++)cout<<max(a[i].to,a[i].V)<<' ';
    return 0;
}