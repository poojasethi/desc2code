#include <cstdio>
#include <algorithm>

using namespace std;

#define N 100100
typedef long long ll;

int n, cf, cm, A, a[N], id[N];
ll ans[N], sum[N], m, f[N];

bool cmp(int i, int j) { return a[i] < a[j]; }

int main() {
	//freopen("in.txt","r",stdin);
	scanf("%d%d%d%d%I64d", &n, &A, &cf, &cm, &m);
	for(int i = 0; i < n; i ++) scanf("%d", a + i), id[i] = i;
	sort(id, id + n, cmp);
	sum[n] = 0;
	for(int i = n - 1; i >= 0; i --) sum[i] = sum[i+1] + a[id[i]];
	for(int i = 1; i < n; i ++) f[i] = f[i-1] + 1LL * i * (a[id[i]] - a[id[i-1]]);
	if(1LL * A * n - sum[0] <= m) {
		printf("%I64d\n", 1LL * n * cf + 1LL * A * cm);
		for(int i = 1; i < n; i ++) printf("%d ", A);
		printf("%d\n", A);
		return 0;
	}
	ll rt = -1, R;
	int I, K;
	for(int i = n; i >= 0; i --) {
		if(1LL * A * (n - i) - sum[i] > m) break;
		ll r = m - 1LL * A * (n - i) + sum[i];
		int k = upper_bound(f, f + i, r) - f - 1;
		r -= f[k];
		r /= (k + 1);
		r += a[id[k]];
		ll tmp = r * cm + 1LL * (n - i) * cf;
		if(rt < tmp) {
			rt = tmp;
			I = i, K = k, R = r;
		}
	}
	printf("%I64d\n", rt);
	for(int i = 0; i <= K; i ++) ans[id[i]] = R;
	for(int i = K + 1; i < I; i ++) ans[id[i]] = a[id[i]];
	for(int i = I; i < n; i ++) ans[id[i]] = A;
	for(int i = 0; i < n - 1; i ++) printf("%d ", ans[i]);
	printf("%d\n", ans[n-1]);
	return 0;
}
