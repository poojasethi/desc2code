#include<cstdio>
#include<algorithm>
#define ll long long
using namespace std;

const ll INF=0xfffffffffffffff;
const ll maxn=100001;

struct cha{
	ll ski,id,old;
}a[maxn];
ll p[maxn],n,A,cf,cm,m;

bool cmpski(cha a,cha b){
	return a.ski>b.ski;
}

int main(){
	scanf("%I64d%I64d%I64d%I64d%I64d",&n,&A,&cf,&cm,&m);
	
	a[0].ski=INF;
	
	for(ll i=1;i<=n;i++){
		scanf("%I64d",&a[i].ski);a[i].id=i;
		a[i].old=a[i].ski;
	}
	
	sort(a+1,a+n+1,cmpski);
	
	ll ans=0,r=1,ans_;
	while(m-A+a[r].ski>=0&&r<n+1){
		m-=A-a[r].ski;a[r].ski=A;
		r++;ans+=cf;
	}
	
	ll l=n-1,mi=a[n].ski,tmp=0;
	do{
		while(a[l].ski==mi&&l>r-1)l--;
		tmp=min(m/(n-l),min(a[l].ski-mi,A-mi));
		mi+=tmp;m-=tmp*(n-l);
	}while(tmp&&l>r-1);
	ans_=ans+mi*cm;
	
	//debug
//	prllf("%d",ans_);
	//
	
	ll ret=ans,ret_=ans_,mi_=mi,r_=r,l_=l;
	do{
		if(ans_<ret_){
			ans=ret;ans_=ret_;mi=mi_;r=r_;l=l_;
		}
		r_--;m+=A-a[r_].old;a[r_].ski=a[r_].old;ret-=cf;
		tmp=0;
		do{
			while(a[l_].ski==mi_&&l_>r_-1)l_--;
			tmp=min(m/(n-l_),min(a[l_].ski-mi_,A-mi_));
			mi_+=tmp;m-=tmp*(n-l_);
		}while(tmp&&l_>r_-1);
		ret_=ret+mi_*cm;
	}while(r_>=1);
	
	printf("%I64d\n",ans_);
	
	for(ll i=1;i<r;i++)p[a[i].id]=A;
	for(ll i=r;i<=l;i++)p[a[i].id]=a[i].old;
	for(ll i=l+1;i<=n;i++)p[a[i].id]=mi;
	
	for(ll i=1;i<=n;i++)printf("%I64d ",p[i]);
	
	return 0;
}
                            