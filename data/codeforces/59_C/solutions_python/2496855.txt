impossible = "IMPOSSIBLE"

def canBePalindrome(string):
    for i in range(0, len(string) / 2):
        if string[i] != '?' and string[-i -1] != '?' and string[i] != string[-i - 1]:
            return False
    return True

k = int(raw_input().rstrip())
s = raw_input().rstrip()

if len(s) == 1:
    if k != 1:
        print impossible
        exit()
    if s == '?':
        print 'a'
    else:
        print s
    exit()

if not canBePalindrome(s):
    print impossible
    exit()

string = []
for char in s:
    string.append(char)

for i in range(0, len(string)):
    if string[i] == '?' and string[-i - 1] != '?':
        string[i] = string[-i - 1]
#print ''.join(string)

used = []
for char in string:
    if char != '?' and char not in used:
        used.append(char)

if len(used) > k:
    print impossible
    exit()

notUsed = []
for char in "abcdefghijklmnopqrstuvwxyz"[0:k]:
    if char not in used:
        notUsed.append(char)
#print notUsed

index = (len(string) - 1) / 2 # center
while (index >= 0):
    if string[index] == '?':
        if len(notUsed) == 0:
            string[index] = 'a'
            string[-index - 1] = 'a'
        else:
            char = notUsed.pop()
            string[index] = char
            string[-index - 1] = char
    #print ''.join(string)
    index -= 1

if len(notUsed) != 0:
    print impossible
    exit()

result = ''
for char in string:
    result += char
print result