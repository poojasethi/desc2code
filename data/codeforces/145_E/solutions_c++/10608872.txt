#include<cstdio>
#include<cstring>
using namespace std;
char s[1000005],ch[10];
struct N
{
	int l,r,rev;
	int c1,c2,c3,c4;
}t[4000005];
inline int max(int x,int y)
{
	if(x>y) return x;
	else return y;
}
inline void swap(int &x,int &y)
{
	int T=x;
	x=y;
	y=T;
	return;
}
inline void update(int x)
{
	t[x].c1=t[x<<1].c1+t[x<<1|1].c1;
	t[x].c2=t[x<<1].c2+t[x<<1|1].c2;
	t[x].c3=max(t[x<<1].c3+t[x<<1|1].c2,t[x<<1].c1+t[x<<1|1].c3);
	t[x].c4=max(t[x<<1].c4+t[x<<1|1].c1,t[x<<1].c2+t[x<<1|1].c4);
}
void build(int l,int r,int x)
{
	t[x].l=l;
	t[x].r=r;
	if(l<r)
	{
		build(l,l+r>>1,x<<1);
		build((l+r>>1)+1,r,x<<1|1);
	}
	else
	{
		t[x].c1=(s[l]=='4');
		t[x].c2=(s[l]=='7');
		t[x].c4=t[x].c3=1;
		return;
	}
	update(x);
}
inline void rev(int x)
{
	swap(t[x].c1,t[x].c2);
	swap(t[x].c3,t[x].c4);
	t[x].rev^=1;
	return;
}
void modify(int l,int r,int x)
{
	if(t[x].rev && t[x].l<t[x].r)
	{
		rev(x<<1),rev(x<<1|1);
		t[x].rev=0;
	}
	if(t[x].l>=l && t[x].r<=r) return rev(x);
	if(r<=(t[x].l+t[x].r)>>1) modify(l,r,x<<1);
	else if(l>(t[x].l+t[x].r)>>1) modify(l,r,x<<1|1);
	else modify(l,r,x<<1),modify(l,r,x<<1|1);
	update(x);
	return;
}
int main()
{
	int n,m;
	scanf("%d %d",&n,&m);	
	scanf("%s",s+1);
	build(1,n,1);
	while(m--)
	{
		scanf("%s",ch);
		if(ch[0]=='s')
		{
			int x,y;
			scanf("%d%d",&x,&y);
			modify(x,y,1);
		}
		else printf("%d\n",t[1].c3);	
	}
	return 0;
}
	   				 	  		 		 		  		 	 			