#include<iostream>
#include<string>
#include<algorithm>
using namespace std;

#define int long long

const int maxn=1000000+10;
int n,q,in[4*maxn],de[4*maxn],num0[4*maxn],num1[4*maxn],val[4*maxn];
string str;

inline void find(int s,int e,int tag){
    num0[tag]=num0[2*tag]+num0[2*tag+1];
    num1[tag]=num1[2*tag]+num1[2*tag+1];
    in[tag]=max(num0[2*tag]+in[2*tag+1],in[2*tag]+num1[2*tag+1]);
    de[tag]=max(num1[2*tag]+de[2*tag+1],de[2*tag]+num0[2*tag+1]);   
}

void up(int s,int e,int tag,int l,int r){
    if(l>=e||r<=s)  return;
    if(l<=s&&r>=e){
        val[tag]=1-val[tag];
        swap(num0[tag],num1[tag]);
        swap(de[tag],in[tag]);
        return; 
    }
    
    int mid=(s+e)/2;
    up(s,mid,2*tag,l,r);
    up(mid,e,2*tag+1,l,r);
    
    find(s,e,tag);
    if(val[tag]==1){
        swap(in[tag],de[tag]);
        swap(num0[tag],num1[tag]);  
    }
}

void build(int s,int e,int tag){
    if(s+1==e){
        de[tag]=in[tag]=1;
        if(str[s-1]=='7')
            num1[tag]=1;    
        else
            num0[tag]=1;    
        return; 
    }   
    int mid=(s+e)/2;
    build(s,mid,2*tag);
    build(mid,e,2*tag+1);
    find(s,e,tag);
}

main(){
    ios_base::sync_with_stdio(0);
    cin>>n>>q;
    cin>>str;
    
    build(1,n+1,1); 
    
    while(q--){
        string input;
        cin>>input;
        if(input=="switch"){
            int a,b;
            cin>>a>>b;
            up(1,n+1,1,a,b+1);  
        }   
        else
            cout<<in[1]<<endl;  
    }
    return 0;   
}
