#include<bits/stdc++.h>

using namespace std;

#define sgmn int v, int tl, int tr
#define tm   (tl + tr >> 1)
#define sol  v*2, tl, tm
#define sag  v*2+1, tm+1, tr
#define pp   pair < pair < int , int > , pair < int , int > >
#define mp   make_pair
#define mp4(a,b,c,d)  mp(mp(a,b),mp(c,d))
#define st   first
#define nd   second
#define N    1000006

pp s[4*N], c;

int n,w,l,r;

char ch[N];

bool lz[4*N];

pp f(pp a, pp b){
	return mp4( max(a.nd.st + b.st.st , max(a.st.st + b.nd.nd , a.nd.st + b.nd.nd)),
				 			max(a.nd.nd + b.st.nd , max(a.st.nd + b.nd.st , a.nd.nd + b.nd.st)),
				 			a.nd.st + b.nd.st,
				 			a.nd.nd + b.nd.nd );
}

void swp(int v){
	swap( s[v].st.st , s[v].st.nd );
	swap( s[v].nd.st , s[v].nd.nd );
}

pp bld(int v, int tl, int tr){
	if(tl == tr)
		return s[v] = mp4(1,1,ch[tl-1] == '4',ch[tl-1] == '7');
	return s[v] = f( bld(v*2, tl, tm) , bld(v*2+1, tm+1, tr) );
}
void push(int v){
	if(lz[v]){
		lz[v*2] = !lz[v*2];
		lz[v*2+1] = !lz[v*2+1];
		swp(v*2);
		swp(v*2+1);
		lz[v] = 0;
	}
}
pp up(int v, int tl, int tr){
	if(tl > r || tr < l)
		return s[v];
	if(tl >= l && tr <= r){
		lz[v] = !lz[v];
		swp(v);
		return s[v];
	}
	push(v);
	return s[v] = f( up(sol) , up(sag) );
}
int main(){

	scanf("%d%d %s",&n,&w,ch);

	bld(1,1,n);

	while(w--){

		scanf(" %s",ch);

		if(ch[0] == 's'){
			scanf("%d%d",&l,&r);
			up(1,1,n);
		}

		else
			printf("%d\n",s[1].st.st);
	}

	return 0;
}

