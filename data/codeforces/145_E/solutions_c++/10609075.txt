#include<cstdio>
#include<algorithm>
using namespace std;

char st[1001000];
int ic[4001000],dc[4001000],on[4001000],ze[4001000];
bool tg[4001000]={0};
void update(int i){
	on[i]=on[i*2]+on[i*2+1];
	ze[i]=ze[i*2]+ze[i*2+1];
	ic[i]=max(ic[i*2]+on[i*2+1],ze[i*2]+ic[i*2+1]);
	dc[i]=max(dc[i*2]+ze[i*2+1],on[i*2]+dc[i*2+1]);
}
void push_down(int i){
	if(!tg[i])return;
	swap(on[i*2],ze[i*2]);swap(ic[i*2],dc[i*2]);
	swap(on[i*2+1],ze[i*2+1]);swap(ic[i*2+1],dc[i*2+1]);
	tg[i*2]^=1;tg[i*2+1]^=1;tg[i]=0;
}
void buildtree(int i,int l,int r){
	if(r-l==1){
		if(st[l]=='4')on[i]=0,ze[i]=1;else on[i]=1,ze[i]=0;
		ic[i]=dc[i]=1;
		return;
	}
	int mid=(l+r)>>1;
	buildtree(i*2,l,mid);
	buildtree(i*2+1,mid,r);
	update(i);
}
void change(int i,int l,int r,int x,int y){
	if(x<=l && y>=r){
		swap(on[i],ze[i]);
		swap(ic[i],dc[i]);
		tg[i]^=1;
		return;
	}
	push_down(i);
	int mid=(l+r)>>1;
	if(mid>x)change(i*2,l,mid,x,y);
	if(mid<y)change(i*2+1,mid,r,x,y);
	update(i);
}
int main(){
	int n,m;scanf("%d%d",&n,&m);
	scanf("%s",st);
	buildtree(1,0,n);
	for(int i=0;i<m;i++){
		char st[10];scanf("%s",st);
		if(st[0]=='s'){
			int x,y;scanf("%d%d",&x,&y);
			change(1,0,n,x-1,y);
		}else printf("%d\n",ic[1]);
	}
	return 0;
}
    		 	 		 		   			 				  	