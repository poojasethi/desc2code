#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#define N 4100000
using namespace std;
int n4[N],n7[N],mx[N],my[N],sign[N],x,y,i,j,n,m;
char c[1200000];
void modify(int p){
	sign[p]^=1;
	swap(n4[p],n7[p]);
	swap(mx[p],my[p]);
}
void updata(int p){
	int x=p<<1,y=x+1;
	if(sign[p]){
		sign[p]=0;
		modify(x); modify(y);
	}
}
void renew(int p){
	int x=p<<1,y=x+1;
	n4[p]=n4[x]+n4[y];
	n7[p]=n7[x]+n7[y];
	mx[p]=max(mx[x]+n7[y],n4[x]+mx[y]);
	my[p]=max(my[x]+n4[y],n7[x]+my[y]);
}
void build(int p,int l,int r){
	if(l==r){
		n4[p]=(c[l]=='4');
		n7[p]=(c[l]=='7');
		mx[p]=my[p]=1;
		return;
	}
	int mid=l+r>>1;
	build(p<<1,l,mid);
	build((p<<1)+1,mid+1,r);
	renew(p);
}
void change(int p,int l,int r,int x,int y){
	if(x<=l && y>=r){
		modify(p);
		return;
	}
	updata(p);
	int mid=l+r>>1;
	if(x<=mid)change(p<<1,l,mid,x,y);
	if(y>mid)change((p<<1)+1,mid+1,r,x,y);
	renew(p);
}
int main(){
	scanf("%d%d",&n,&m);
	scanf("%s",c+1);
	build(1,1,n);
	for(i=1;i<=m;++i){
		scanf("%s",c);
		if(*c=='c')printf("%d\n",mx[1]);
		else{
			scanf("%d%d",&x,&y);
			change(1,1,n,x,y);
		}
	}
}
