#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <ctime>
#define N 1000010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int a0,a1,s4,s7,c;
} tr[N*4];
int i,j,k,n,m,T,te,x,y;
char p[N];
inline void update(int x) {
	int y=x*2,z=x*2+1;
	tr[x].s4=tr[y].s4+tr[z].s4;
	tr[x].s7=tr[y].s7+tr[z].s7;
	tr[x].a0=max(tr[y].a0+tr[z].s7,tr[y].s4+tr[z].a0);
	tr[x].a1=max(tr[y].a1+tr[z].s4,tr[y].s7+tr[z].a1);
}
inline void cover(int x) {
	tr[x].c^=1;
	swap(tr[x].a0,tr[x].a1);
	swap(tr[x].s4,tr[x].s7);
}
inline void renew(int x) {
	if (tr[x].c) cover(x*2),cover(x*2+1);
	tr[x].c=0;
}
void build(int q,int x,int y) {
	if (x==y) {
		tr[q].a0=tr[q].a1=1;
		if (p[x]=='4') tr[q].s4++;
		else tr[q].s7++;
		return;
	}
	int mid=(x+y)/2;
	build(q*2,x,mid);
	build(q*2+1,mid+1,y);
	update(q);
}
void fan(int q,int x,int y,int l,int r) {
	if (l<=x&&y<=r) {
		cover(q);
		return;
	}
	renew(q);
	int mid=(x+y)/2;
	if (l<=mid) fan(q*2,x,mid,l,r);
	if (mid<r) fan(q*2+1,mid+1,y,l,r);
	update(q);
}
int main() {
	scanf("%d%d",&n,&m);
	scanf("%s",p+1);
	build(1,1,n);
	For(i,1,m) {
		scanf("%s",p);
		if (p[0]=='c') printf("%d\n",tr[1].a0);
		else scanf("%d%d",&x,&y),fan(1,1,n,x,y);
	}
	//for(;;);
	return 0;
}
