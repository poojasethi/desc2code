#include <cstdio>
#include <algorithm>
#include <cstring>
#define N 2*1048576 + 100
using namespace std;

int n,Q,a,b,siz;
char s[N];

struct node{
    int c4,c7;
    int u,d;
    bool v;
}T[N];

void update(int x){
    node &p = T[x];
    node &l = T[x*2];
    node &r = T[x*2+1];
    
    p.c4 = l.c4 + r.c4;
    p.c7 = l.c7 + r.c7;
    p.u = max(l.u + r.c7, l.c4 + r.u);
    p.d = max(l.c7 + r.d, l.d + r.c4);
}

void invert(int x){
    T[x].v ^= 1;
    swap(T[x].c4,T[x].c7);
    swap(T[x].u,T[x].d);
}

void Push(int x){
    if (T[x].v){
        T[x].v = 0;
        invert(x*2);
        invert(x*2+1);
    }
}

void invert(int x,int L,int R,int l,int r){
    
    if (R<l || L>r) return;
    if (l<=L && R<=r)
        invert(x);
    else {
        Push(x);
        int k = (L+R)/2;
        invert(x*2,L,k,l,r);
        invert(x*2+1,k+1,R,l,r);
        update(x);
    }
}

int main(){
    scanf("%d%d",&n,&Q);
    
    siz = 2;
    while (siz < n) siz*=2;
    
    scanf("%s",s);
    
    for (int i=0;i<n;i++)
        if (s[i]=='4')
            T[siz+i].c4 = T[siz+i].u = T[siz+i].d = 1;
        else
            T[siz+i].c7 = T[siz+i].u = T[siz+i].d = 1;
    
    for (int i=siz-1;i>0;i--)
        update(i);
    
    while (Q--){
        scanf("%s",s);
        if (strcmp(s,"count")==0)
            printf("%d\n",T[1].u);
        else if (strcmp(s,"switch")==0){
            scanf("%d%d",&a,&b);
            invert(1,0,siz-1,a-1,b-1);
        }
    }
    
    //scanf("\n");
    return 0;
}
