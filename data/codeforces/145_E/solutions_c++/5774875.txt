// in the name of god

#include<iostream>
#include<cstring>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<vector>

using namespace std;

typedef long long ll;

const int maxn=10*100*1000+100;

int n,m,a[4*maxn][4],b[maxn],dif[4*maxn],sum[maxn];

string s,t;

void flag(int x){
	if(dif[x]%2==0){
		dif[x]=0;
		return;
	}
	dif[2*x]+=dif[x];	
	dif[2*x+1]+=dif[x];
	dif[x]=0;
	swap(a[2*x][0],a[2*x][1]);
	swap(a[2*x][2],a[2*x][3]);
	swap(a[2*x+1][0],a[2*x+1][1]);
	swap(a[2*x+1][2],a[2*x+1][3]);
}

void build(int l=1,int r=n,int cnt=1){
	if(l==r){
		a[cnt][b[l]]++;
		a[cnt][2]++;
		a[cnt][3]++;
		return;
	}
	int med=(l+r)/2;
	build(l,med,2*cnt);
	build(med+1,r,2*cnt+1);
	a[cnt][0]=a[2*cnt][0]+a[2*cnt+1][0];
	a[cnt][1]=a[2*cnt][1]+a[2*cnt+1][1];
	a[cnt][2]=max(a[2*cnt][2]+a[2*cnt+1][1],a[2*cnt][0]+a[2*cnt+1][2]);
	a[cnt][3]=max(a[2*cnt][3]+a[2*cnt+1][0],a[2*cnt][1]+a[2*cnt+1][3]);
}

void update(int x,int y,int l=1,int r=n,int cnt=1){
	if(y<l || r<x)
		return;
	if(x<=l && r<=y){
		swap(a[cnt][0],a[cnt][1]);
		swap(a[cnt][2],a[cnt][3]);
		dif[cnt]++;
		return ;
	}
	flag(cnt);
	int med=(l+r)/2;
	update(x,y,l,med,2*cnt);
	update(x,y,med+1,r,2*cnt+1);
	a[cnt][0]=a[2*cnt][0]+a[2*cnt+1][0];
	a[cnt][1]=a[2*cnt][1]+a[2*cnt+1][1];
	a[cnt][2]=max(a[2*cnt][2]+a[2*cnt+1][1],a[2*cnt][0]+a[2*cnt+1][2]);
	a[cnt][3]=max(a[2*cnt][3]+a[2*cnt+1][0],a[2*cnt][1]+a[2*cnt+1][3]);

}

int main(){
	cin>>n>>m>>s;
	for(int i=0;i<s.size();i++){
		if(s[i]=='7')
			b[i+1]=1;
		sum[i+1]=sum[i]+b[i+1];
	}
	build();
	while(m--){
		int l,r;
		cin>>t;
		if(t[0]=='c')
			cout<<a[1][2]<<endl;
		else{
			cin>>l>>r;
			update(l,r);
		}
	}
	return 0;
}
