#include <bits/stdc++.h>

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define lli long long int
#define FP( ii,aa,bb ) for( int ii=aa;ii<=bb;ii++ )
#define FM( ii,aa,bb ) for( int ii=aa;ii>=bb;ii-- )

#define left root*2,bas,(bas+son)/2
#define right root*2+1,(bas+son)/2+1,son

using namespace std;

class L{
	public:
		int rev,a,b,c,d;
		L(){ rev = a = b = c = d = 0; }
}st[5000000];

int n,m;
char s[2000000];

inline L merge( L A,L B ){
	L T;
	T.a = A.a+B.a;
	T.b = max( A.a+B.b,max( A.a+B.c,A.b+B.c ) );
	T.c = A.c+B.c;
	T.d = max( A.d+B.a,max( A.c+B.a,A.c+B.d ) );
	return T;
}

inline L swtch( L A ){
	A.rev ^= 1;
	swap( A.a,A.c );
	swap( A.b,A.d );
	return A;
}

inline L init( int root,int bas,int son ){
	
	if( bas==son ){
		if( s[bas]=='4' )	st[root].a = 1;
		else				st[root].c = 1;
		return st[root];
	}
	return st[root] = merge( init( left ),init( right ) );

}

inline L update( int root,int bas,int son,int x,int y ){
	
	if( y<bas or son<x )	return st[root];
	if( x<=bas and son<=y )	return st[root] = swtch( st[root] );

	if( st[root].rev ){
		update( left,bas,(bas+son)/2 );
		update( right,(bas+son)/2+1,son );
		st[root].rev = 0;
	}

	return st[root] = merge( update( left,x,y ),update( right,x,y ) );

}

int main(){
	char read[200];
	int  x,y;
	cin >> n >> m >> s+1;
	init( 1,1,n );
	while( m-- ){
		cin >> read;
		if( read[0]=='s' ){
			cin >> x >> y;
			update( 1,1,n,x,y );
		}
		else
			cout << max( st[1].a,max( st[1].b,st[1].c ) ) << endl;
	}
}
