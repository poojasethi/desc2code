#include<iostream>
#include<vector>
#include<algorithm>
#include<vector>
#include<set>
#include<string>
using namespace std;
const int Maxn = int(1e6)+1000;
int c[2][4*Maxn] , l[2][4*Maxn] , a[Maxn] , n , q;
bool mark[4*Maxn];
string S;
void update(int v){
	c[0][v] = c[0][v*2] + c[0][v*2+1];
	c[1][v] = c[1][v*2] + c[1][v*2+1];
	l[0][v] = max(l[0][v*2] + c[1][v*2+1] , c[0][v*2] + l[0][v*2+1]);
	l[1][v] = max(l[1][v*2] + c[0][v*2+1] , c[1][v*2] + l[1][v*2+1]);
}

inline void change (int v){
	swap(c[0][v] , c[1][v]);
	swap(l[0][v] , l[1][v]);
}
void shift(int v){
	if(mark[v]){
		mark[v*2] = !mark[v*2];
		mark[v*2+1] = !mark[v*2+1];
		change(v*2+0);change(v*2+1);
		mark[v] = false;
	}
}
void build(int tl=0 , int tr = n , int v=1){
	if(tr -  tl < 2){
		c[a[tl]][v]=1;
		l[0][v] = 1;
		l[1][v] = 1;
	}
	else{
		int mid = (tl+tr)/2;
		build(tl , mid , v*2+0);
		build(mid , tr , v*2+1);
		update(v);
	}
}

void rev(int l ,int r , int tl=0 ,int tr=n , int v=1){
	if(l <= tl && tr <= r){
		mark[v] = !mark[v];
		change(v);
	}
	else{
		shift(v);
		int mid = (tl+tr)/2;
		if(l < mid)
			rev(l , r , tl , mid , v*2+0);
		if(r > mid)
			rev(l , r , mid , tr , v*2+1);
		update(v);
	}
}

int main()
{
	cin >> n  >> q >> S;
	for(int i = 0 ; i<S.length();++i)
		if(S[i]=='4')
			a[i] = 0;
		else
			a[i] = 1;

	build();

	for(int i = 0 ; i<q ;++i){
		string s;
		cin >> s;
		if(s=="switch"){
			int l , r;
			cin >> l >> r;
			--l;
			rev(l , r);
		}
		else if(s=="count"){
			cout << l[0][1] <<endl;
		}
		
	}

	return 0;
}
