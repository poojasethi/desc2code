#include <bits/stdc++.h>

using namespace std;
const int maxn=4*1e6+100;
int a[maxn],one[maxn],zer[maxn],s[2][maxn],lazy[maxn];
int n;
void merge(int v){
    s[0][v]=max( s[0][2*v] + one[2*v+1] , zer[2*v] + s[0][2*v+1] );
    s[1][v]=max( one[2*v] + s[1][2*v+1] , s[1][2*v] + zer[2*v+1] );
    one[v] = one[2*v] + one[2*v+1];
    zer[v] = zer[2*v] + zer[2*v+1];
}
void upd(int v){
    swap(s[0][v] , s[1][v]);
    swap(one[v] , zer[v]);
    lazy[v]++;
}
void pass(int v){
    lazy[v]%=2;
    if(!lazy[v])return;
    upd(2*v);
    upd(2*v+1);
    lazy[v]=0;
}
void build(int v=1,int l=0,int r=n){
    if(r-l<2){
        s[0][v]=s[1][v]=1;
        if(a[l])
            one[v]=1;
        else
            zer[v]=1;
        return;
    }
    int mid=(r+l)/2;
    build(2*v,l,mid);
    build(2*v+1,mid,r);
    merge(v);
}
void swich(int x,int y,int v=1,int l=0,int r=n){
    if(x>=r || y<=l)return;
    if(x<=l && y>=r){
        upd(v);
        return;
    }
    pass(v);
    int mid=(r+l)/2;
    swich(x,y,2*v,l,mid);
    swich(x,y,2*v+1,mid,r);
    merge(v);
}
int main(){
    int q;
    ios::sync_with_stdio(false),cin.tie(false);
    cin>>n>>q;
    string S;
    cin>>S;
    for(int i=0;i<n;i++)
        if(S[i]=='7')a[i]=1;
    build();
    while(q--){
        string t;
        cin>>t;
        if(t=="count")
            cout<<s[0][1]<<"\n";
        else{
            int x,y;
            cin>>x>>y;
            swich(x-1,y);
        }
    }
    return 0;
}
