#include <cstdio>
#include <cstring>
#include <iostream>
using namespace std;
#define N 80000
#define mod 777777777
struct node{int l,r;long long a[4][4];}T[N * 4];
int map[4][4],n,m,x,y;
long long ans;
void up(int k){
	for (int i = 1;i <= 3;i ++)
		for (int j = 1;j <= 3;j ++){
			T[k].a[i][j] = 0;
			for (int t = 1;t <= 3;t ++) 
				for (int p = 1;p <= 3;p ++)if (map[t][p])
				(T[k].a[i][j] += T[k * 2].a[i][t] * T[k * 2 + 1].a[p][j]) %= mod;
		}
}
void build(int k,int l,int r){
	T[k].l = l,T[k].r = r;
	if (l == r){
		memset(T[k].a,0,sizeof T[k].a);
		for (int i = 1;i <= 3;i ++) T[k].a[i][i] = 1;
		return;
	}
	int m = l + r >> 1;
	build(k * 2,l,m);
	build(k * 2 + 1,m + 1,r);
	up(k);
}
void update(int k,int pos,int num){
	if (T[k].l == pos && T[k].r == pos){
		memset(T[k].a,0,sizeof T[k].a);
		if (num == 0) for (int i = 1;i <= 3;i ++) T[k].a[i][i] = 1;
		else T[k].a[num][num] = 1;
		return;
	}
	int m = T[k].l + T[k].r >> 1;
	if (pos <= m) update(k * 2,pos,num);
	else update(k * 2 + 1,pos,num);
	up(k);
}
int main(){
	scanf("%d%d",&n,&m);
	for (int i = 1;i <= 3;i ++) for (int j = 1;j <= 3;j ++) scanf("%d",&map[i][j]);
	build(1,1,n);
	while (m --){
		scanf("%d%d",&x,&y);
		update(1,x,y);
		ans = 0;
		for (int i = 1;i <= 3;i ++) for (int j = 1;j <= 3;j ++) (ans += T[1].a[i][j]) %= mod;
		printf("%I64d\n",ans);
	}
	return 0;
}
