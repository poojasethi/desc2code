#include <stdio.h>
#define REP(i,a,b) for(int i=a; i<=b; i++)
#define L (2*id)
#define R (2*id+1)
#define M 400400
typedef __int64 ll;
const ll mod = 777777777ll;
int n, m;
int w[4][4];
ll ans[M][4][4];

void push_up(int id){
	REP(i,1,3)REP(j,1,3){
		ans[id][i][j]=0;
		REP(k,1,3)REP(l,1,3)if(w[k][l])
			ans[id][i][j]+=ans[L][i][k]*ans[R][l][j];
		ans[id][i][j]%=mod;
	}
}

void make_tree(int id, int st, int en){
	if(st==en){
		REP(i,1,3)ans[id][i][i]=1;
		return;
	}
	int mid=(st+en)>>1;
	make_tree(L, st, mid);
	make_tree(R, mid+1, en);
	push_up(id);
	return;
}

void change(int id, int st, int en, int v, int x){
	if(st==en){
		REP(i,1,3)ans[id][i][i] = (x==i||x==0);
		return;
	}
	int mid=(st+en)>>1;
	if(mid>=v)change(L, st, mid, v, x);
	else change(R, mid+1, en, v, x);
	push_up(id);
}

ll sum(ll res=0){
	REP(i,1,3)REP(j,1,3)res += ans[1][i][j];
	return res%mod;
}

int main(){
	scanf("%d %d", &n, &m);
	REP(i,1,3)REP(j,1,3)scanf("%d", w[i]+j);

	make_tree(1,1,n);

	while(m--){
		int v, x;
		scanf("%d %d", &v, &x);
		change(1,1,n,v,x);
		printf("%I64d\n", sum());
	}
	return 0;
}
