#include<iostream>
#include<cstring>
using namespace std;
const int maxn=77777+10;
const long long mod=777777777;
bool mat[4][4];
long long dp[4*maxn][4][4];
int n,m;
void update(int s,int e,int tag,int pos,int val){
	if(s+1==e){
		for(int i=1;i<=3;i++)dp[tag][i][i]=0;
		if(val==0)for(int i=1;i<=3;i++)dp[tag][i][i]=1;	
		else dp[tag][val][val]=1;
		return;
	}
	int mid=(s+e)/2;
	if(pos<mid)update(s,mid,tag*2,pos,val);
	else update(mid,e,tag*2+1,pos,val);
	memset(dp[tag],0,sizeof(dp[tag]));
	for(int i=1;i<=3;i++)for(int ii=1;ii<=3;ii++)for(int j=1;j<=3;j++)for(int jj=1;jj<=3;jj++)if(mat[ii][jj])dp[tag][i][j]+=dp[tag*2][i][ii]*dp[tag*2+1][jj][j];
	for(int i=1;i<=3;i++)for(int j=1;j<=3;j++)dp[tag][i][j]%=mod;
}
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	cin>>n>>m;
	for(int i=1;i<=3;i++)for(int j=1;j<=3;j++)cin>>mat[i][j];
	for(int i=1;i<=n;i++)update(1,n+1,1,i,0);
	for(int i=1;i<=m;i++){
		int x,y;
		cin>>x>>y;
		update(1,n+1,1,x,y);
		long long ans=0;
		for(int l=1;l<=3;l++)for(int r=1;r<=3;r++)ans+=dp[1][l][r];
		ans%=mod;
		cout<<ans<<endl;
	}
	return 0;
}
