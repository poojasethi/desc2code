#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
using namespace std;
#define lson lc,l,m
#define rson rc,m+1,r
#define lc pos<<1
#define rc pos<<1|1
#define re1(i,n) for(int i=1;i<=(n);++i)
const int mod = 777777777;
const int N = 1e5;
int n,m;
int seg[N<<2][4][4];
int num[4][4];
inline void sumup(int pos){
	re1(i,3) re1(j,3){
		seg[pos][i][j] = 0;
		re1(p,3) re1(q,3)
			if(num[p][q] && seg[lc][i][p] && seg[rc][q][j]) {
				seg[pos][i][j] = (seg[pos][i][j] +  1LL*seg[lc][i][p] * seg[rc][q][j] % mod) % mod;
			}
	}
}
void update(int p,int val,int pos=1, int l = 1, int r = n){
	//cout<<" "<<p<<" "<<pos<<" "<<l<<" "<<r<<endl;
	if(l==r){
		if(val == 0){
			re1(i,3) seg[pos][i][i] = 1;
		} else {
			memset(seg[pos],0,sizeof(seg[pos]));
			seg[pos][val][val] = 1;
		}
		return ;
	}
	int m = l+ r>> 1;
	if(p <= m) update(p,val,lson);
	else update(p,val,rson);
	sumup(pos);
}
void init(int pos=1, int l = 1,int r = n){
	if(l==r) {
		re1(i,3) seg[pos][i][i] = 1;
		return ;
	}
	int m = l+ r>> 1; 
	init(lson);
	init(rson);
	sumup(pos);
//	cout<<pos<<" "<<l<<" "<<r<<endl;
//	re1(i,3) {re1(j,3) cout<<seg[pos][i][j]<<" "; cout<<endl;}
}
int main(){
	cin >> n >> m;
	for(int i = 1; i <= 3; i++)
		for(int j = 1; j <= 3; j++)
			cin >> num[i][j];
	init();
//	cout<<"initend\n";
	while(m--){
		int p,v;
		scanf("%d%d",&p,&v);
		update(p,v);
		long long ans = 0;
		re1(i,3) re1(j,3) ans += seg[1][i][j];
		printf("%d\n",int(ans%mod));
	}
}
