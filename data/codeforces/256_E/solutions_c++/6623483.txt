#include <bits/stdc++.h>

#define FI(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define F(ii,aa,bb) for(int ii=aa;ii<bb;ii++)
#define TF(ii,aa,bb) for(int ii=aa;ii>=bb;ii--)
#define mp make_pair
#define pii pair<int,int>
#define st first
#define nd second
#define pb push_back
#define pdd pair<double,double>
#define ll long long
#define inf (INT_MAX)
#define MOD (777777777)
#define modal(x) ((x)>=MOD ? ((x)%MOD) : (x))

using namespace std;

class node{ public:
	int A[4][4];
	node(){ memset(A,0,sizeof A); }
};

int n,m,w[5][5];
node ST[350005],ini[5];

node merge(node L,node R){
	node nw;
	FI(i,1,3) FI(j,1,3){
		if(!L.A[i][j]) continue;
		FI(k,1,3){
			if(!w[j][k]) continue;
			FI(l,1,3) nw.A[i][l]=modal(nw.A[i][l]+(ll)L.A[i][j]*R.A[k][l]);	
		}
	}
	return nw;
}

node init(int i,int b,int s){
	if(b==s) return ST[i]=ini[0];	
	int o=(b+s)>>1,sol=i<<1;
	return ST[i]=merge(init(sol,b,o),init(sol|1,o+1,s));
}

node update(int i,int b,int s,int x,int t){
	if(x<b || x>s) return ST[i];
	if(b==s) return ST[i]=ini[t];
	int o=(b+s)>>1,sol=i<<1;
	return ST[i]=merge(update(sol,b,o,x,t),update(sol|1,o+1,s,x,t));
}

int main()
{
	int x,t,ans;
	scanf("%d %d",&n,&m);
	FI(i,1,3) FI(j,1,3) scanf("%d",w[i]+j);
	FI(i,1,3) ini[0].A[i][i]=1;
	FI(i,1,3) ini[i].A[i][i]=1;
	init(1,1,n);
	FI(i,1,m){
		scanf("%d %d",&x,&t);
		update(1,1,n,x,t);
		ans=0;
		FI(i,1,3) FI(j,1,3) ans=modal(ans+ST[1].A[i][j]);
		printf("%d\n",ans);
	}
	return 0;
}
