#include <cstdio>
#include <cstring>
#define rep(i,n) for(int i=0;i<n;i++)
#define lson l,m,rt<<1
#define rson m+1,r,rt<<1|1
const int mod = 777777777;
const int maxn = 100000;
typedef long long lld;
lld sum[maxn<<2][3][3];
int f[3][3];
void pushup(int rt)
{
    int ls = rt<<1, rs = ls | 1;
    memset(sum[rt],0,sizeof(sum[rt]));
    rep(i,3) 
        rep(j,3) 
            if(f[i][j]) 
               rep(k,3) rep(l,3) {
                  sum[rt][k][l] += ( sum[ls][k][i] * sum[rs][j][l] % mod );
                     if(sum[rt][k][l] >= mod) sum[rt][k][l] %= mod;
               }
}
void make(int rt,int val)
{
     memset(sum[rt],0,sizeof(sum[rt]));
     if(val)   sum[rt][val-1][val-1] = 1;
     else  rep(i,3) sum[rt][i][i] = 1;
}
void build(int l,int r,int rt)
{
    if(l == r) {
     make(rt,0);
     return ;
    }
    int m = l + r >> 1;
    build(lson);   build(rson);
    pushup(rt);
}
void update(int p,int val,int l,int r,int rt)
{
    if(l == r) {
        make(rt,val);
        return ;
    }
    int m = l + r >> 1;
    if(p <= m) update(p,val,lson);
    else       update(p,val,rson);
    pushup(rt);
}
lld query()
{
    lld ans = 0 ;
    rep(i,3)   rep(j,3) {
            ans += sum[1][i][j];
            if(ans >= mod) ans %= mod;
    }
    return ans;
}
int main()
{
    int n,m,p,val;
    scanf("%d%d",&n,&m);
    rep(i,3) rep(j,3) scanf("%d",f[i]+j);
    build(1,n,1); 
    while(m --) {
        scanf("%d%d",&p,&val);
        update(p,val,1,n,1);
        printf("%I64d\n",query());
    }
    return 0;
}