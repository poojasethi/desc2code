#include <cstdio>
#include <cstring>

#define LL				long long
#define CS				const static
#define Rep(i,l,r)			for(int i = (l) ; i <= (r) ; i++)

CS int MD = 777777777 , N = 77787 , M = N << 2 ;

struct SN{int f[4][4] ;} s[M] ;

int map[4][4] ;

int a[N] ;

int n,m ;

SN Union(SN l,SN r)
{
	SN nt ; memset(nt.f,0,sizeof(nt.f)) ;
	Rep(x1,1,3)
		Rep(y1,1,3)
			Rep(x2,1,3)	if(map[y1][x2])
				Rep(y2,1,3)
					nt.f[x1][y2] = (nt.f[x1][y2] + (LL)l.f[x1][y1] * r.f[x2][y2])% MD ;
	return nt ;
}

void _B(int x,int l,int r)
{
	if(l==r)
	{
		Rep(i,1,3)	s[x].f[i][i] = 1 ;
		return ;
	}
	int mid = (l + r) >> 1 , lc = x << 1 , rc = (x << 1) + 1 ;
	_B(lc,l,mid) ; _B(rc,mid+1,r) ; s[x] = Union(s[lc],s[rc]) ;
}

void Init()
{
	scanf("%d %d",&n,&m) ;
	Rep(i,1,3)
		Rep(j,1,3)	scanf("%d",&map[i][j]) ;
	_B(1,1,n) ;
}

void _M(int x,int l,int r,int p,int val)
{
	if(l==r)
	{
		memset(s[x].f,0,sizeof(s[x].f)) ;
		if(val)
			s[x].f[val][val] = 1 ;
		else	Rep(i,1,3)	s[x].f[i][i] = 1 ;
		return ;
	}
	int mid = (l + r) >> 1 , lc = x << 1 , rc = (x << 1) + 1 ;
	if(p <= mid)	_M(lc,l,mid,p,val) ;
	if(p > mid)	_M(rc,mid+1,r,p,val) ;
	s[x] = Union(s[lc],s[rc]) ;
}

void Solve()
{
	int v,t ; while(m--)
	{
		scanf("%d %d",&v,&t) ;
		a[v] = t ;
		_M(1,1,n,v,t) ;
		int ans = 0 ; Rep(i,1,3)
			Rep(j,1,3)
				ans = (ans + s[1].f[i][j])%MD ;
		printf("%d\n",ans) ;
	}
}

int main()
{
	Init() ; Solve() ;
	return 0 ;
}
