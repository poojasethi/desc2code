// Task-ID: 1534

#include <cstdio>
#include <cstring>
#include <iostream>

using namespace std;

typedef long long int Lint;

const int MAXN=1e5+10;
const Lint MOD=777777777LL;

int N,M;
int g[3][3];

Lint seg[MAXN*5][3][3];

inline void eval( int k , int b , int e ){
	
	if( b==e ){
		
		for( int i=0 ; i<3 ; i++ )
			seg[k][i][i]=1LL;
		
		return;
	}
	
	eval(k*2,b,(b+e)/2);
	eval(k*2+1,(b+e)/2+1,e);
	
	for( int i=0 ; i<3 ; i++ )
		for( int j=0 ; j<3 ; j++ )
			for( int l=0 ; l<3 ; l++ )
				for( int m=0 ; m<3 ; m++ )
					seg[k][i][m]=(seg[k][i][m]+(seg[k*2][i][j]*seg[k*2+1][l][m]*g[j][l]*1LL))%MOD;
}

inline void update( int k , int b , int e , int pl , int v ){
	
	memset(seg[k],0,sizeof seg[k]);
	
	if( b==e ){
		
		if(!v)
			for( int i=0 ; i<3 ; i++ )
				seg[k][i][i]=1LL;
		else
			seg[k][v-1][v-1]=1LL;
		
		return;
	}
	
	if( pl<=(b+e)/2 )
		update(k*2,b,(b+e)/2,pl,v);
	else
		update(k*2+1,(b+e)/2+1,e,pl,v);
	
	for( int i=0 ; i<3 ; i++ )
		for( int j=0 ; j<3 ; j++ )
			for( int l=0 ; l<3 ; l++ )
				for( int m=0 ; m<3 ; m++ )
					seg[k][i][m]=(seg[k][i][m]+(seg[k*2][i][j]*seg[k*2+1][l][m]*g[j][l]*1LL))%MOD;
}

int main(){
	
	//~ freopen("bizans.in","r",stdin);
	//~ freopen("bizans.out","w",stdout);
	
	scanf(" %d %d",&N,&M);
	
	for( int i=0 ; i<3 ; i++ )
		for( int j=0 ; j<3 ; j++ )
			scanf(" %d",&g[i][j]);
	
	eval(1,1,N);
	
	for( int a,b,i=0 ; i<M ; i++ ){
		
		Lint res=0LL;
		scanf(" %d %d",&a,&b);
		update(1,1,N,a,b);
		
		for( int j=0 ; j<3 ; j++ )
			for( int k=0 ; k<3 ; k++ )
				res=(res+seg[1][j][k])%MOD;
		
		printf("%I64d\n",res);
	}
	return 0;
}
