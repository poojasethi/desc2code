# include <stdio.h>
# include <queue>
# include <string.h>
# include <vector>
# define PB push_back
# define MP make_pair
using namespace std;
int n,m;
char map[1010][1010];
queue< pair<int,int> > q;
bool vis[1010][1010];
int dis[11][11];
int d[5][1010][1010];
const int dx[] = {1,0,-1,0};
const int dy[] = {0,1,0,-1};
int main() {
	scanf("%d%d",&n,&m);
	for (int i=1;i<=n;++i)
		scanf("%s",map[i]+1);
	for (int i=1;i<=3;++i) {
		for (int j=1;j<=3;++j) dis[i][j]=100000000;
		for (int j=1;j<=n;++j)
			for (int k=1;k<=m;++k) d[i][j][k]=100000000;
	}
	for (int I=1;I<=3;++I) {
		while(!q.empty()) q.pop();
		memset(vis,0,sizeof(vis));
		for (int i=1;i<=n;++i)
			for (int j=1;j<=m;++j) {
				if(map[i][j]==I+'0') {
					q.push(MP(i,j));
					vis[i][j]=1;
					d[I][i][j]=0;
				}
			}
			while(!q.empty()) {
				pair<int,int> top=q.front();
				q.pop();
				for (int i=0;i<4;++i) {
					int xx=top.first+dx[i],yy=top.second+dy[i];
					if(xx<=0||xx>n||yy<=0||yy>m||vis[xx][yy]||map[xx][yy]=='#') continue;
					if(map[xx][yy]=='.') {
						vis[xx][yy]=1;
						d[I][xx][yy]=d[I][top.first][top.second]+1;
						q.push(MP(xx,yy));
					} else dis[I][map[xx][yy]-'0']=min(dis[I][map[xx][yy]-'0'],d[I][top.first][top.second]);
				}
			}
	}
	int ans=100000000;
	ans=min(ans,dis[1][2]+dis[2][3]);
	ans=min(ans,dis[1][2]+dis[1][3]);
	ans=min(ans,dis[1][3]+dis[2][3]);
	for (int i=1;i<=n;++i)
		for (int j=1;j<=m;++j) 
			if(map[i][j]=='.')
				ans=min(ans,d[1][i][j]+d[2][i][j]+d[3][i][j]-2);
	printf("%d\n",ans==100000000?-1:ans);
	return 0;
}