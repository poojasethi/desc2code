#include <bits/stdc++.h>

using namespace std;

const int MAXN = 1010, INF = 0x3f3f3f3f;
queue< pair<int,int> > q;
char ch[MAXN][MAXN];
int a[MAXN][MAXN], dis[MAXN][MAXN][4];
int x[4] = {1, -1, 0, 0};
int y[4] = {0, 0, 1, -1};
int n, m;

int main(){
	cin >> n >> m;
	for(int i = 0; i < n; i++){
		for(int j = 0; j < m; j++){
			cin >> ch[i][j];
			if(ch[i][j] > '0' && ch[i][j] < '9')
				a[i][j] = ch[i][j] - '0';
		}
	}
	memset(dis, INF, sizeof dis);
	for(int k = 1; k < 4; k++){
		for(int i = 0; i < n; i++){
			for(int j = 0; j < m; j++){
				if(a[i][j] == k){
					q.push(make_pair(i, j));
					dis[i][j][k] = 0; 
				}
			}
		}
		while(!q.empty()){
			pair<int,int> v = q.front();
			q.pop();
			for(int i = 0; i < 4; i++){
				int xx = v.first + x[i], yy = v.second + y[i];
				if(xx >= 0 && xx < n && yy >= 0 && yy < m && ch[xx][yy] != '#' && dis[xx][yy][k] > dis[v.first][v.second][k] + (ch[v.first][v.second] == '.')){
					dis[xx][yy][k] = dis[v.first][v.second][k] + (ch[v.first][v.second] == '.');
					q.push(make_pair(xx, yy));
					//cerr << dis[xx][yy][k] << endl;
				}
			}
		}
	}
	int ans = INF;
	for(int i = 0; i < n; i++){
		for(int j = 0; j < m; j++){
			if(dis[i][j][1] < INF && dis[i][j][2] < INF && dis[i][j][3] < INF)
				ans = min(ans, dis[i][j][1] + dis[i][j][2] + dis[i][j][3] + (ch[i][j] == '.'));
		}
	}
	cout << (ans == INF ? -1 : ans) << endl; 
}
	 	 	    	  		  			  				 			