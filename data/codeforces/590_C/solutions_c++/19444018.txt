/*
4 5
11..2
#..22
#.323
.#333

2
*/
#include<iostream>
#include<algorithm>
#include<queue>
#include<utility>
#include<cstring>
using namespace std;
#define maxn 1005
#define inf 100000005
#define pii pair<int,int>
#define mp make_pair
int n,m;
int dx[4]={0,0,1,-1};
int dy[4]={1,-1,0,0};
int dist[3][maxn][maxn];
char c[maxn][maxn];
deque<pii >q;
void bfs(int s)
{
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			dist[s][i][j]=inf;
		}
	}
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			if(c[i][j]==s+'1')
			{
				q.push_back(mp(i,j));
				dist[s][i][j]=0;
			}
		}
	}
	while(!q.empty())
	{
		pii p=q.front();
		q.pop_front();
		int x=p.first;
		int y=p.second;
		for(int i=0;i<4;i++)
		{
			int x1=x+dx[i];
			int y1=y+dy[i];
			if(x1<0 || x1>=n || y1<0 || y1>=m)continue;
			if(dist[s][x1][y1]!=inf || c[x1][y1]=='#')continue;
			dist[s][x1][y1]=dist[s][x][y]+(c[x1][y1]=='.');
			if(c[x1][y1]=='.')
			{
				q.push_back(mp(x1,y1));
			}
			else
			{
				q.push_front(mp(x1,y1));
			}
		}
	}
}
int main()
{
	cin>>n>>m;
	for(int i=0;i<n;i++)
	{
		cin>>c[i];
	}
	for(int i=0;i<3;i++)bfs(i);
	int ans=inf;
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			int cur=dist[0][i][j]+dist[1][i][j]+dist[2][i][j];
			if(c[i][j]=='.')cur-=2;
			ans=min(ans,cur);
		}
	}
	if(ans>=inf)cout<<-1<<endl;
	else cout<<ans<<endl;
	return 0;
}
