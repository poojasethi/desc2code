#include <bits/stdc++.h>
using namespace std;
const int N=1051;
int n,m;
char c[N][N];
int d[4][N][N];
int main() {
    memset(c,'#',sizeof(c));
    scanf("%d%d",&n,&m);
    for (int i=1;i<=n;i++)
        scanf("%s",c[i]+1);
    int IN=100000000;
    for (int k=1;k<=3;k++){
        queue<pair <int,int> > Q;
        for (int i=1;i<=n;i++)
        for (int j=1;j<=m;j++)
        if (c[i][j]=='0'+k)
            Q.push({i,j});
        else d[k][i][j]=IN;
        while (Q.size()){
            int x=Q.front().first;
            int y=Q.front().second;
            Q.pop();
            if (c[x+1][y]!='#' && d[k][x+1][y]==IN) {d[k][x+1][y]=d[k][x][y]+1; Q.push({x+1,y});}
            if (c[x-1][y]!='#' && d[k][x-1][y]==IN) {d[k][x-1][y]=d[k][x][y]+1; Q.push({x-1,y});}
            if (c[x][y+1]!='#' && d[k][x][y+1]==IN) {d[k][x][y+1]=d[k][x][y]+1; Q.push({x,y+1});}
            if (c[x][y-1]!='#' && d[k][x][y-1]==IN) {d[k][x][y-1]=d[k][x][y]+1; Q.push({x,y-1});}
        }
    }

    int ans=IN+50;

    for (int i=1;i<=n;i++)
    for (int j=1;j<=m;j++)
    ans=min(ans,d[1][i][j]+d[2][i][j]+d[3][i][j]-2);

    int a[4][4];
    for (int i=1;i<=3;i++)
    for (int j=1;j<=3;j++)
    a[i][j]=IN+50;

    for (int i=1;i<=n;i++)
    for (int j=1;j<=m;j++)
    if ('1'<=c[i][j] && c[i][j]<='3')
    for (int k=1;k<=3;k++)
    a[c[i][j]-'0'][k]=min(a[c[i][j]-'0'][k],d[k][i][j]);

    ans=min(ans,a[1][2]+a[1][3]-2);
    ans=min(ans,a[2][1]+a[2][3]-2);
    ans=min(ans,a[3][1]+a[3][2]-2);

    if (ans>IN-1000) ans=-1;

    cout<<ans<<endl;

    return 0;
}
