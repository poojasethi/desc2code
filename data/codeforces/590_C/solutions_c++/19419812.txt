#include<iostream>
#include<cstdio>
#include<cstring>
#include<queue>
using namespace std;
#define mp make_pair
typedef pair<int,int> pii;

const int N=1005,M=1005,size=N*M*2;
const int go[4][2]={{1,0},{-1,0},{0,1},{0,-1}};
int dist[N][M][4],n,m;
char g[N][M];

pii q[size];
void getdist(int p){
	int st=0,ed=0;
	char ch=p+48;
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(g[i][j]==ch){
				dist[i][j][p]=0;
				ed=(ed+1)%size;
				q[ed]=mp(i,j);
			}
		}
	}
	while(st!=ed){
		st=(st+1)%size;
		int x=q[st].first,y=q[st].second;
		for(int c=0;c<4;c++){
			int x1=x+go[c][0],y1=y+go[c][1];
			if(x1<0||x1>=n||y1<0||y1>=m||dist[x1][y1][p]>-1||g[x1][y1]=='#') continue;
			int cost=(g[x1][y1]=='.'?1:0);
			dist[x1][y1][p]=dist[x][y][p]+cost;
			if(cost==0){
				q[st]=mp(x1,y1);
				st=(st-1+size)%size;
			}else{
				ed=(ed+1)%size;
				q[ed]=mp(x1,y1);
			}
		}
	}
}

int main(){
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;i++) scanf("%s",&g[i]);
	memset(dist,-1,sizeof(dist));
	for(int i=1;i<=3;i++){
		getdist(i);
	}
	int ans=-1;
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(dist[i][j][1]<0||dist[i][j][2]<0||dist[i][j][3]<0) continue;
			int t=dist[i][j][1]+dist[i][j][2]+dist[i][j][3];
			if(g[i][j]=='.') t-=2;
			if(ans==-1||t<ans) ans=t;
		}
	}
	printf("%d\n",ans);
} 
