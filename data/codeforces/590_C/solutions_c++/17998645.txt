#include <bits/stdc++.h>
#define MAXN 1010
#define INF 1000000
#define mp make_pair
#define rs(n) scanf("%s",n)
#define rii(n,m) scanf("%d %d",&n,&m)
#define FOR(i,l,r) for(int i=l;i<r;i++)
using namespace std;

char str[MAXN];
int N, M, A[MAXN][MAXN], D[3][MAXN][MAXN], X[4]={0,0,1,-1}, Y[4]={1,-1,0,0}, ans=INF;

bool valid(int i, int j) {
	return 0<=i && i<N && 0<=j && j<M && A[i][j]!=-1;
}

void bfs(int S) {
	queue<pair<int,int> > Q;
	FOR(i,0,N) FOR(j,0,M) {
		if(A[i][j]==S) {D[S][i][j]=0; Q.push(mp(i,j));}
		else D[S][i][j] = INF;
	}
	while(!Q.empty()) {
		int x = Q.front().first;
		int y = Q.front().second; Q.pop();
		FOR(k,0,4) {
			if(valid(x+X[k],y+Y[k]) && D[S][x+X[k]][y+Y[k]]==INF) {
				D[S][x+X[k]][y+Y[k]] = D[S][x][y]+1;
				Q.push(mp(x+X[k],y+Y[k]));
			}
		}
	}
	FOR(k,1,3) {
		int minD = INF;
		FOR(i,0,N) FOR(j,0,M) if(A[i][j]==(S+k)%3) minD=min(minD,D[S][i][j]);
		FOR(i,0,N) FOR(j,0,M) if(A[i][j]==(S+k)%3) D[S][i][j]=minD;
	}
}

int main() {
	rii(N,M);
	FOR(i,0,N) {rs(str); FOR(j,0,M) A[i][j] = str[j]=='.'?3:(str[j]=='#'?-1:str[j]-'1');}
	FOR(i,0,3) bfs(i);
	FOR(i,0,N) FOR(j,0,M) ans=min(ans,D[0][i][j]+D[1][i][j]+D[2][i][j]);
	ans==INF?printf("-1\n"):printf("%d\n",ans-2);
}