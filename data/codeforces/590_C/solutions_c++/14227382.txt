#include <cstdio>
#include <algorithm>
#include <queue>
using namespace std;

const int MAXN=1001,INF=100000000;
int dx[4]={-1,0,1,0},dy[4]={0,-1,0,1};

char s[MAXN][MAXN];
int dis[3][MAXN][MAXN];
queue<pair<int, int> > Q;

int main()
{
    int n, m;
    scanf("%d%d",&n,&m);
    for (int i=0; i<n; i++) scanf("%s", s[i]);
    for (int i=0; i<n; i++)
    for (int j=0; j<m; j++)
        dis[0][i][j]=dis[1][i][j]=dis[2][i][j]=INF;

    for (int k=0; k<3; k++)
    {
        while (!Q.empty()) Q.pop();

        for (int i=0; i<n; i++)
            for (int j=0; j<m; j++)
                if (s[i][j]== k+'1')
                {
                    Q.push(make_pair(i, j));
                    dis[k][i][j]=0;
                }

        while (!Q.empty())
        {
            int x=Q.front().first,y=Q.front().second; Q.pop();
            for (int i=0; i<4; i++)
            {
                int xx=x+dx[i],yy=y+dy[i];
                if (!(xx >= 0 && xx<n) || !(yy >= 0 && yy<m) || s[xx][yy]== '#') continue;
                if (dis[k][xx][yy]>dis[k][x][y]+(s[x][y]== '.'))
                {
                    dis[k][xx][yy]=dis[k][x][y]+(s[x][y]== '.');
                    Q.push(make_pair(xx, yy));
                }
            }
        }
    }

    int ans=INF;
    for (int i=0; i<n; i++)
        for (int j=0; j<m; j++)
            ans=min(ans, dis[0][i][j]+dis[1][i][j]+dis[2][i][j]+(s[i][j]=='.'));

    printf("%d\n", ans>=INF?-1:ans);
}