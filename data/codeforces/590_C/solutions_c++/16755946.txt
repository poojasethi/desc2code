#include <bits/stdc++.h>
using namespace std;
typedef pair<int,int> P;
#define mp make_pair
#define fi first
#define sc second
char f[1005][1005];
bool u[1005][1005];
int d[1005][1005];
long long c[1005][1005];
int n,m;
int main(){
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;i++) scanf("%s",&f[i]);
	int ret = 1000000000;
	for(int i=0;i<3;i++){
		char s = (char)('1'+i);
		queue<P>que;
		for(int j=0;j<n;j++){ for(int k=0;k<m;k++){
			u[j][k] = 0;
			if(f[j][k] == s){
				d[j][k] = 0;
				que.push(P(j,k));
			}
			else{
				d[j][k] = 1000000000;
			}
		}}
		int dx[4]={0,1,0,-1};
		int dy[4]={1,0,-1,0};
		while(!que.empty()){
			P p = que.front(); que.pop();
			if(u[p.fi][p.sc]) continue;
			u[p.fi][p.sc] = 1;
			for(int j=0;j<4;j++){
				int nx = p.fi+dx[j];
				int ny = p.sc+dy[j];
				if(0<=nx&&nx<n&&0<=ny&&ny<m&&f[nx][ny]!='#'&&!u[nx][ny]){
					d[nx][ny] = min(d[nx][ny],d[p.fi][p.sc]+1);
					que.push(mp(nx,ny));
				}
			}
		}
		int M[3]; M[0] = M[1] = M[2] = 1000000000;
		for(int j=0;j<n;j++){ for(int k=0;k<m;k++){
			if(0<=f[j][k]-'1' && f[j][k]-'1'<=2 && f[j][k] != s){
				M[f[j][k]-'1'] = min(M[f[j][k]-'1'],d[j][k]-1);
			}
		}}
		int C = 0;
		for(int j=0;j<3;j++) if(i!=j) C+=M[j];
		ret = min(ret,C);
		for(int j=0;j<n;j++){ for(int k=0;k<m;k++){
			if(f[j][k] == '.'){
				c[j][k] += d[j][k];
			}
		}}
	}
	for(int j=0;j<n;j++){ for(int k=0;k<m;k++){
		if(f[j][k] == '.'){
			if(c[j][k] >= 1000000000) continue;
			int cc = (int)c[j][k]; 
			ret = min(ret,cc-2);
		}
	}}
	cout << (ret>n*m?-1:ret) << endl;
}