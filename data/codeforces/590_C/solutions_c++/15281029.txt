#include<cstdio>
#include<cmath>
#include<algorithm>
#include<cstring>
#include<queue>
using namespace std;
const int N=1005;
deque<pair<int,int> > q[3];
int f[3][N][N];
int mp[N][N];
int n,m;
int fxd[4]={0,1,0,-1},fyd[4]={-1,0,1,0};

int main()
{
	char ch;
	scanf("%d %d\n",&n,&m);
	memset(mp,0,sizeof(mp));
	memset(f,-1,sizeof(f));
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			scanf("%c",&ch);
			if(ch=='.')mp[i][j]=1;
			else if(ch!='#')
			{
				if(ch=='.')mp[i][j]=1;
				else mp[i][j]=2;
				q[ch-'1'].push_back(make_pair(i,j));
				f[ch-'1'][i][j]=0;
			}
		}
		scanf("\n");
	}
	int x,y,tx,ty;
	for(int qq=0;qq<=2;qq++)
		while(!q[qq].empty())
		{
			x=q[qq].front().first;
			y=q[qq].front().second;
			q[qq].pop_front();
			for(int d=0;d<=3;d++)
			{
				tx=x+fxd[d];ty=y+fyd[d];
				int tmp=f[qq][x][y] + (mp[tx][ty]!=2);
				if(mp[tx][ty] && (f[qq][tx][ty]==-1 || f[qq][tx][ty]>tmp))
				{
					f[qq][tx][ty]=tmp;
					if(mp[tx][ty]==2)
						q[qq].push_front(make_pair(tx,ty));
					else
						q[qq].push_back(make_pair(tx,ty));
				}
			}
		}

	int ans=999999999;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			if(mp[i][j] && f[0][i][j]!=-1 && f[1][i][j]!=-1 && f[2][i][j]!=-1)
				ans=min(ans,f[0][i][j]+f[1][i][j]+f[2][i][j]-((mp[i][j]==1)?2:0));
	printf("%d\n",(ans==999999999)?(-1):ans);
	return 0;
}

 	 				 		 		 		 	  			 		 		 	