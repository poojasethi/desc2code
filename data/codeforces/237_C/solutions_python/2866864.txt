# ~*~ coding:utf-8 ~*-
from bisect import bisect_left

a, b, k = map(int, raw_input().split())

nums = [True] * (10 ** 6 + 1)

nums[0] = False
nums[1] = False

for i in xrange(2, 10 ** 3 + 1):
    if not nums[i]:
        continue
    for j in xrange(i + i, 10 ** 6 + 1, i):
        nums[j] = False

primes = [i for i, e in enumerate(nums) if e]
pct = len(primes)

if b == 1:
    print -1
    exit()

p = bisect_left(primes, a)
if p + k - 1 >= pct:
    print -1
    exit()
else:
    req = primes[p + k - 1] - a + 1
rest = b - a + 1

if rest < req:
    print -1
    exit()

for i in xrange(a, b + 1):
    if rest < req:
        print rest + 1
        break
    if i == primes[p]:
        p += 1
        if p + k - 1 >= pct:
            print rest
            exit()
        else:
            req = max(req, primes[p + k - 1] - (primes[p - 1] + 1) + 1)
    rest -= 1
else:
    print 1
