from sys import stdin
import fractions, time, math, random

def line():
    return stdin.readline().split()
def read_int():
    return int(line()[0])
def read_ints():
    return [int(x) for x in line()]
def memo(fn):
    table = {}
    def memoized(*args):
        if args not in table:
            table[args] = fn(*args)
        return table[args]
    return memoized

def solve(a, b, k):
    possible_prime = [False] * 2 + [True] * (10**6)
    for x in range(2, 10**6 + 1):
        if possible_prime[x]:
            for multiple in range(2*x, 10**6 + 1, x):
                possible_prime[multiple] = False
        else: continue
    primes = [x for x in range(10**6 + 1) if possible_prime[x]]

    primes = [x for x in primes if x >= a and x <= b]
    if len(primes) < k:
        return -1

    l = primes[k - 1] - a + 1
    for p_i in range(len(primes) - k):
        prime1 = primes[p_i]
        prime2 = primes[p_i + k]
        l = max(l, prime2 - prime1)
    l = max(l, b - primes[len(primes) - k] + 1)
    return l

a, b, k = read_ints()
print solve(a, b, k)
