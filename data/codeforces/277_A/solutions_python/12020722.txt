from collections import deque

I = lambda: map(int,raw_input().split())
n,m = I()
g1 = {}; g2 = {}
r = [0]*n

for v1 in xrange(1,n+1):
    g1[v1] = I()[1:]
    for v2 in g1[v1]:
        if v2 not in g2:
            g2[v2] = [v1]
        else:
            g2[v2].append(v1)

def bfs(u):
    q = deque([u]); visited = set(); visited2 = set()
    while q:
        curr = q.popleft()
        visited.add(curr)
        r[curr-1] = u
        for l in g1[curr]:
            if l not in visited2:
                visited2.add(l)
                for v in g2[l]:
                    if v not in visited:
                        q.append(v)

for v in xrange(1,n+1):
    if not r[v-1]:
        bfs(v)

print n if g1.values() == [[] for _ in xrange(n)] else len(set(r)) - 1