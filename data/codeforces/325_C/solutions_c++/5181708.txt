#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<algorithm>
#include<queue>
#include<vector>
#define N 120000
using namespace std;
const int inf=314000000;
typedef pair<int,int> pr;
priority_queue < pr >q;
int maxx[N],f[N],s[N],a[N],bo[N],m,n,i,k,j,x,cnt[N],y,flag[N],t,isinf[N];
vector <int> u[N],v[N],nv[N];
int dfs(int x){
	if(bo[x])return maxx[x];
	bo[x]=1;
	int i,j,k,y,s=0,ff=0;
	for(i=0;i<u[x].size();++i){
		j=u[x][i];
		for(k=0;k<v[j].size();++k)if(f[v[j][k]]>1e9)break;
		if(k<v[j].size())continue;
		s=0;
		for(k=0;k<v[j].size();++k){
			y=v[j][k];
			if(y==-1)s++;
			else if(bo[y]==1)ff=1;
			else {
				s=min(s+dfs(y),inf);
				if(isinf[y])ff=1;
			}
		}
		maxx[x]=max(maxx[x],min(s,inf));
		if(ff)isinf[x]=1;
	}
	bo[x]=2;
	return maxx[x];
}
int main(){
	scanf("%d%d",&m,&n);
	for(i=1;i<=m;++i){
		scanf("%d",&a[i]);
		scanf("%d",&k);
		u[a[i]].push_back(i);
		for(j=1;j<=k;++j){
			scanf("%d",&x);
			v[i].push_back(x);
			if(x>0)nv[x].push_back(i),cnt[i]++;
			else s[i]++;
		}
		if(!cnt[i])q.push(make_pair(-s[i],a[i]));
	}
	memset(f,60,sizeof(f));
	while(!q.empty()){
		pr res=q.top();
		q.pop();
		x=-res.first; y=res.second;
		if(flag[y])continue;
		flag[y]=1;
		f[y]=x;
		for(i=0;i<nv[y].size();++i){
			t=nv[y][i];
			s[t]=min(s[t]+x,inf);
			if(--cnt[t]==0){
				q.push(make_pair(-s[t],a[t]));
			}
		}
	}
	for(i=1;i<=n;++i)if(f[i]<1e9)dfs(i);
	for(i=1;i<=n;++i)if(f[i]>1e9)printf("-1 -1\n");
		else printf("%d %d\n",f[i],isinf[i]?-2:maxx[i]);
}