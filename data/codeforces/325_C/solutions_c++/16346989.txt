#include<bits/stdc++.h>

using namespace std;

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define sol (root+root)
#define sag (root+root+1)
#define orta ((bas+son)/2)
#define ll long long
#define pii pair<int,int>
#define type(x) __typeof((x).begin())
#define foreach(it, x) for(type(x) it = (x).begin(); it != (x).end(); it++)
#define int ll

const int N=1e5+5;
const int mod=1e9+7;
const int inf=1e9+7;

int m,n,i,no,k,t,j,q,val,x;
int A[N],H[N],ans[N],ans2[N],ans3[N];

vector<pair<int,vector<int> > > V[N];

vector<pii > V3[N];

vector<int> V2,S[N],cost[N];

priority_queue<pii > PQ;

int f2(int x){
	if(H[x]==1){
		if(ans2[x]<0)
			return -inf;
		return inf;
	}
	if(H[x]==2)
		return ans3[x];

	H[x]=1;

	ans3[x]=-inf;

	for(int i=0 ; i<V[x].size() ; i++){
		int t=V[x][i].st;
		for(int j=0 ; j<V[x][i].nd.size() ; j++){
			int q=f2(V[x][i].nd[j]);
			if(q<0){
				t=-inf;
				break;
			}
			t+=q;
			if(t<inf and t>314000000LL)
				t=314000000LL;
			if(t>inf)
				t=inf;
		}
		ans3[x]=max(ans3[x],t);
	}
	H[x]=2;
	return ans3[x];
}

int f(int x){
	if(H[x]==1)
		return -inf;
	if(H[x]==2)
		return ans2[x];

	H[x]=1;
	ans2[x]=-inf;

	for(int i=0 ; i<V[x].size() ; i++){
		int t=V[x][i].st;
		for(int j=0 ; j<V[x][i].nd.size() ; j++){
			int q=f(V[x][i].nd[j]);
			if(q<0){
				t=-inf;
				break;
			}
			t+=q;
			if(t<inf and t>314000000LL)
				t=314000000LL;
			if(t>inf)
				t=inf;
		}
		ans2[x]=max(ans[x],t);
	}
	H[x]=2;
	return ans2[x];
}

main(){

//#ifndef D
//	freopen("canavar.gir","r",stdin);
//	freopen("canavar.cik","w",stdout);
//#endif

	scanf("%lld %lld",&m,&n);

	for(i=1 ; i<=m ; i++){
		scanf("%lld %lld",&no,&k);
		V2.clear();
		q=0;
		for(j=1 ; j<=k ; j++){
			scanf("%lld",A+j);
			if(A[j]==-1)
				q++;
			else {
				V2.pb(A[j]);
				V3[A[j]].pb(mp(no,V[no].size()));
			}
		}
		if(!V2.size())
			PQ.push(mp(-q,no));
		S[no].pb(0);
		cost[no].pb(0);
		V[no].pb(mp(q,V2));
	}

	memset(ans,-1,sizeof ans);

	while(!PQ.empty()){
 		val=-PQ.top().st;
 		x=PQ.top().nd;
 		PQ.pop();

		if(H[x])
		  	continue;
		H[x]=1;

		ans[x]=min(val,314000000LL);

		for(i=0 ; i<V3[x].size() ; i++){
			int a=V3[x][i].st,b=V3[x][i].nd;
			if(H[a])
				continue;
			if(S[a][b]+1==V[a][b].nd.size())
				PQ.push(mp(-min(val+V[a][b].st+cost[a][b],314000000LL),a));
			else {
				cost[a][b]=min(cost[a][b]+val,314000000LL);
				S[a][b]++;
			}
		}
	}

	memset(H,0,sizeof H);

	for(i=1 ; i<=n ; i++)
		f(i);

	memset(H,0,sizeof H);

	for(i=1 ; i<=n ; i++)
		f2(i);

	for(i=1 ; i<=n ; i++){
		if(ans[i]==-1)
			printf("-1 -1\n");
		else {
			printf("%lld ",ans[i]);
			if(ans3[i]>=inf)
				printf("-2\n");
			else printf("%lld\n",ans3[i]);
		}
	}


}
