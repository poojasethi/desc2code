#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 300010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int a,id,num;
} a[N];
struct w1 {
	int l,r;
} x[N];
int i,j,k,n,m,t;
int s[N],**d,be[N],tr[N],an[N],b[N],last[N];
inline bool cc1(const w1 &a,const w1 &b) {
	return a.r<b.r;
}
inline bool cc2(const ww &a,const ww &b) {
	return a.a<b.a;
}
inline void inc(int x,int y) {
	for (;x<=t;x+=x&-x) tr[x]+=y;
}
inline int cal(int x) {
	int an=0;
	for (;x;x-=x&-x) an+=tr[x];
	return an;
}
int main() {
	scanf("%d%d",&n,&m);
	For(i,1,n) scanf("%d%d",&x[i].l,&x[i].r);
	sort(x+1,x+n+1,cc1);
	d=new int * [m+1];
	For(i,1,m) {
		scanf("%d",&s[i]);
		d[i]=new int [s[i]+1];
		For(j,1,s[i]) {
			scanf("%d",&k);
			a[++t].a=k,a[t].id=i,a[t].num=j;
		} d[i][0]=0;
	}
	sort(a+1,a+t+1,cc2);
	For(i,1,t) d[a[i].id][a[i].num]=i;
	For(i,1,t) be[i]=d[a[i].id][a[i].num-1];
	For(i,1,t) b[i]=a[i].a;
	j=1;
	For(i,1,n) {
		for (;j<=t&&a[j].a<=x[i].r;j++) an[a[j].id]+=cal(be[j]),last[a[j].id]=j;
		k=lower_bound(b+1,b+t+1,x[i].l)-b;
		if (k<j) inc(k,1),inc(j,-1);
	}
	For(i,1,m) printf("%d\n",an[i]+cal(last[i]));
	//for(;;);
	return 0;
}
