#include <bits/stdc++.h>
#define fi first
#define se second
#define endl '\n'

using namespace std;

typedef long long lint;
typedef pair<int,int> ii;
const int MAXN = 3e5+333;
const int mod = 1e9+7;

int N,M,last[MAXN],fen[MAXN],ans[MAXN];
ii ar[MAXN];
vector<ii> v;
priority_queue< ii,vector<ii>,greater<ii> > q;

void upd(int a1,int p){
	for(int i=a1;i<=N;i+=i&-i)
		fen[i]+=p;
}

int find(int a1,int a2){
	int ret=0;
	for(int i=a2;i>=1;i-=i&-i)
		ret+=fen[i];
	for(int i=a1-1;i>=1;i-=i&-i)
		ret-=fen[i];
	return ret;
}

int main(){
	
	scanf(" %d %d",&N,&M);
	for(int i=1;i<=N;i++)
		scanf(" %d %d",&ar[i].fi,&ar[i].se);
	for(int i=1,a;i<=M;i++){
		scanf(" %d",&a);
		for(int j=1,b;j<=a;j++){
			scanf(" %d",&b);
			v.push_back(ii(b,i));
		}
	}
	
	sort(ar+1,ar+N+1);
	sort(v.begin(),v.end());
	
	for(int i=0,j=1;i<(int)v.size();i++){
		while(j<=N && ar[j].fi<=v[i].fi){
			q.push(ii(ar[j].se,j));
			upd(j,1);
			j++;
		}
		while(!q.empty() && q.top().fi<v[i].fi){
			upd(q.top().se,-1);
			q.pop();
		}
		ans[v[i].se]+=find(last[v[i].se]+1,j-1);
		last[v[i].se]=j-1;
	}
	
	for(int i=1;i<=M;i++)
		printf("%d\n",ans[i]);
	printf("\n");
	
	return 0;
}
