#include<cstdio>
#include<cstring>
#include<string>
#include<algorithm>
#include<ctype.h>
#include<utility>
#include<iostream>
#define N 1000005
#define ll long long
#define i64 __int64
using namespace std;
struct node
{
    int l,r,idt;
}a[N],qu[N];
int ans[N],t[N];
bool cmp(node p,node q)
{
    return p.r<q.r;
}
inline void update(int x,int v)
{
    while(x<=1000005) t[x]+=v,x+=x&-x;
}
inline int read(int x)
{
    int ret=0;
    while(x>0) ret+=t[x],x-=x&-x;
    return ret;
}
int main()
{
    int n,m,num,x,l,lq=0;
    scanf("%d%d",&n,&m);
    for(int i=0;i<n;i++)
    {
        scanf("%d%d",&a[i].l,&a[i].r);
        a[i].idt=i;
    }sort(a,a+n,cmp);
    for(int i=0;i<m;i++)
    {
        scanf("%d",&num);
        scanf("%d",&l);
        for(int j=1;j<num;j++)
        {
            scanf("%d",&x);
            qu[lq].l=l,qu[lq].r=x;
            qu[lq++].idt=i;
            l=x;
        }
        qu[lq].l=l,qu[lq].r=1000005;
        qu[lq++].idt=i;
    }sort(qu,qu+lq,cmp);
    int i=0;
    for(int j=0;j<lq;j++)
    {
        while(i<n&&a[i].r<qu[j].r)
        {
            update(a[i].l,1);
            update(a[i++].r+1,-1);
        }
        ans[qu[j].idt]+=read(qu[j].l);
    }
    for(int i=0;i<m;i++) printf("%d\n",ans[i]);
    return 0;
}