#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;
#define N 1000000
#define pb push_back

typedef vector<int>::iterator IT;
int tr[N+2],ans[300001],p[300001];
vector<int> r[N+1];

struct Query
{
    int l,r,n;
}q[300001];

int sum(int x)
{
    int ret=0;
    for (;x;x-=x&(-x)) ret+=tr[x];
    return ret;
}

void update(int x,int d)
{
    for (;x<=N;x+=x&(-x)) tr[x]+=d;
}

bool cmp(Query x,Query y)
{
    return x.l<y.l;
}

int main()
{
    int n,m,a,b,num=0,cnt;
    scanf("%d%d",&n,&m);
    for (int i=0;i<n;i++)
    {
        scanf("%d%d",&a,&b);
        update(a,1);
        update(b+1,-1);
        r[a].pb(b);
    }
    for (int i=0;i<m;i++)
    {
        scanf("%d",&cnt);
        p[0]=0;
        for (int j=1;j<=cnt;j++) scanf("%d",p+j);
        for (int j=1;j<=cnt;j++)
        {
            q[num].l=p[j-1]+1;
            q[num].r=p[j];
            q[num++].n=i;
        }
    }
    sort(q,q+num,cmp);
    int now=0;
    for (int i=1;i<=N;i++)
    {
        while (q[now].l==i)
        {
            ans[q[now].n]+=sum(q[now].r)-sum(q[now].l-1);
            now++;
        }
        for (IT j=r[i].begin();j!=r[i].end();j++)
        {
            update(i,-1);
            update(*j+1,1);
        }
    }
    for (int i=0;i<m;i++) printf("%d\n",ans[i]);
    return 0;
}

	 			  	  	   			     			