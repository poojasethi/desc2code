#include<iostream>
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<list>
#include<vector>

using namespace std;
const int mx = 1e6+10;
vector<int>sgm[mx];
vector<pair<int,int> > pts[mx];
int bit[mx];
int ans[mx];
int add(int idx){
    for(;idx<mx;idx+=idx&-idx)
        bit[idx]+=1;    
}
int query(int idx){
    int ans = 0;
    for(;idx>0;idx-=idx&-idx)
        ans+=bit[idx];
    return ans;    
}
int main(){
//    freopen("data.in","r",stdin);
    fill(bit,bit+mx,0);
    fill(ans,ans+mx,0);
    int n,m,li,ri,q,p;
    cin>>n>>m;
    for(int i=0;i<n;i++){
        cin>>li>>ri;
        sgm[ri].push_back(li);
    }
    for(int i=0;i<m;i++){
        cin>>q;
        int bef = 0;
        for(int j=0;j<q;j++){
            cin>>p;
            pts[p].push_back(make_pair(bef,i));
            bef = p;
        }
        pts[mx-1].push_back(make_pair(bef,i));
    }
    int cnt = 0;
    for(int i=0;i<mx;i++){
        for(int j=0;j<pts[i].size();j++){
            ans[pts[i][j].second] += cnt-query(pts[i][j].first);           
        }
        for(int j=0;j<sgm[i].size();j++){
            cnt++;
            add(sgm[i][j]);
        }
    }
    for(int i=0;i<m;i++){
        cout<<n-ans[i]<<endl;
    }
    return 0;
}
