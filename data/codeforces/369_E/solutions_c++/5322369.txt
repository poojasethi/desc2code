#include <cstdio>
#include <algorithm>
#include <utility>
#include <vector>
using namespace std;

typedef pair<int, int> pii;

const int N = (1e6)+5;
int c[N];
vector<int> vd[N];
vector<pii> vq[N];
int t[N];
int res[N];

void update(int x, int y)
{
    for( ; x < N; x += (x & (-x)))
        t[x] += y;
}

int query(int x)
{
    int y = 0;
    for( ; x > 0; x -= (x & (-x)))
        y += t[x];
    return y;
}


int main()
{
    int n, m;
    scanf("%d%d", &n, &m);
    while(n--) {
        int a, b;
        scanf("%d%d", &a, &b);
        ++c[a];
        vd[b].push_back(a);
    }
    
    for(int i = 0; i < m; ++i) {
        int k;
        scanf("%d", &k);
        int px = 0;
        while(k--) {
            int x;
            scanf("%d", &x);
            vq[x].push_back(pii(i, px));
            px = x;
        }
    }
    
    for(int i = 1; i < N; ++i) {
        update(i, c[i]);
        int p = query(i);
        while(!vq[i].empty()) {
            pii& q = vq[i].back();
            res[q.first] += p - query(q.second);
            vq[i].pop_back();
        }
        while(!vd[i].empty()) {
            update(vd[i].back(), -1);
            vd[i].pop_back();
        }
    }
    
    for(int i = 0; i < m; ++i)
        printf("%d\n", res[i]);
    return 0;
}
