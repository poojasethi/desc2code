#include<cstdio>
#include<vector>
#include<algorithm>

using namespace std;
const int N = 1000000 + 10;
const int LL = 1000000;

vector <int> limit[N], qx[N], qn[N];
int a[N], ans[N], tree[N];

int sum(int x) {
    int res = 0;
    for (int i = x; i >= 0; i = (i & (i + 1)) - 1) res += tree[i];
    return res;
}

void mode(int x) {
    for (int i = x; i <= LL + 1; i = (i | (i + 1))) tree[i]++;
}

int main() {
    int n, m;
    scanf("%d %d", &n, &m);
    for (int i = 0; i < n; i++) {
        int x, y;
        scanf("%d %d", &x, &y);
        limit[y].push_back(x);
    }
    for (int i = 0; i < m; i++) {
        int k;
        scanf("%d", &k);
        for (int j = 1; j <= k; j++) scanf("%d", &a[j]);
        a[0] = 0;
        a[k + 1] = LL + 1;
        for (int j = 1; j <= k + 1; j++) {
            qx[a[j]].push_back(a[j - 1]);
            qn[a[j]].push_back(i);
        }
    }
    for (int i = 1; i <= LL + 1; i++) {
        for (int j = 0; j < qx[i].size(); j++) ans[qn[i][j]] += sum(i) - sum(qx[i][j]);
        for (int j = 0; j < limit[i].size(); j++) mode(limit[i][j]);
    }
    for (int i = 0; i < m; i++) printf("%d\n", (n - ans[i]));
    return 0;
}
