#include<bits/stdc++.h>

using namespace std;

#define sgmn int v, int tl, int tr
#define tm  (tl + tr >> 1)
#define sol v*2, tl, tm
#define sag v*2+1, tm+1, tr
#define N 1000006

vector < int > V[N],s[4*N];

int n,w,w2,i,j,l,r,x,y,asd;

void bld(sgmn){
	if(tl == tr){
		sort(V[tl].begin() , V[tl].end());
		for(i=0;i<V[tl].size();i++)
			s[v].push_back( V[tl][i] );
		return;  
	}
	bld(sol);  bld(sag);
	for(i=j=0; i<s[v*2].size() || j<s[v*2+1].size(); ){
	
		if(i < s[v*2].size() && (j == s[v*2+1].size() || s[v*2][i] < s[v*2+1][j]))
			s[v].push_back(s[v*2][i++]);
		
		else
			s[v].push_back(s[v*2+1][j++]);
	}
}

int qry(sgmn){
	if(tl > r || tr < l)
		return 0;
	if(tl >= l && tr <= r)
		return upper_bound(s[v].begin() , s[v].end() , r) - s[v].begin();
	return qry(sol) + qry(sag);
}

int main(){

	scanf("%d%d",&n,&w);

	for(i=n;i--;){
		scanf("%d%d",&l,&r);
		V[l].push_back(r);
	}

	bld(1,1,N-1);

	while(w--){

		scanf("%d",&w2);

		asd = y = 0;

		for(i=1;i<=w2+1;i++){

			if(i <= w2){
				scanf("%d",&x);
				l = y+1;
				r = x-1;
			}

			else{
				l = y+1;
				r = N-1;
			}

			y = x;

			if(l <= r)
				asd += qry(1,1,N-1);
		
		}

		printf("%d\n",n - asd);
	
	}

	return 0;
}
