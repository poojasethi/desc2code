#include <algorithm>
#include <cstdio>
using namespace std;
const int N=1100000,S=1000001;
int n,m,T,l,r,x,p,i,s,c[N],ans[N];
void add(int x) {for (;x<=S;x+=x&-x) c[x]++;}
int sum(int x) {int a=0;for (;x>0;x-=x&-x) a+=c[x];return a;}
struct X{
    int l,r,p;
    X(int l=0,int r=0,int p=0):l(l),r(r),p(p) {}
} a[N];
bool cmp(X a,X b) {
    if (a.l!=b.l) return a.l>b.l;
    if (a.r!=b.r) return a.r<b.r;
    return a.p<b.p;
}
int main() {
    scanf("%d%d",&n,&m);
    for (T=0;T<n;T++) {
        scanf("%d%d",&l,&r);
        a[T]=X(l,r,0);
    }
    for (i=1;i<=m;i++) {
        scanf("%d%d",&s,&p);ans[i]=n;
        if (p>1) a[T++]=X(1,p-1,i);
        while (--s) {
            scanf("%d",&x);
            if (p<x-1) a[T++]=X(p+1,x-1,i);
            p=x;
        }
        if (p<S) a[T++]=X(p+1,S,i);
    }
    sort(a,a+T,cmp);
    for (i=0;i<T;i++)
        if (a[i].p==0) add(a[i].r);
        else ans[a[i].p]-=sum(a[i].r);
    for (i=1;i<=m;i++) printf("%d\n",ans[i]);
    return 0;
}
