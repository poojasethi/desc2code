#include <cstdio>
#include <cstring>
#include <cmath>
#include <iostream>
#include <algorithm>

using namespace std;

struct Node
{
	int id,l,r;
}a[2000000];
bool cmp(Node a,Node b)
{
	if (a.l!=b.l) return a.l>b.l;
	if (a.r!=b.r) return a.r<b.r;
	return a.id<b.id;
}
int c[2000000];
int lowbit(int x)
{
	return x&(-x);
}
void add(int x,int w)
{
	int dq;
	dq=x;
	while (dq<=1000000)
	{
		c[dq]+=w;
		dq+=lowbit(dq);
	}
}
int sum(int x)
{
	int sum,dq;
	sum=0;dq=x;
	while (dq>0)
	{
		sum+=c[dq];
		dq-=lowbit(dq);
	}
	return sum;
}
int n,m,t;
int x1,x2;
int num;
int ans[2000000];
int main()
{
	scanf("%d%d",&n,&m);
	for (int i=1;i<=n;++i)
	{
		scanf("%d%d",&a[i].l,&a[i].r);
		a[i].id=0;
	}
	num=n;
	for (int i=1;i<=m;++i)
	{
		scanf("%d",&t);
		scanf("%d",&x1);
		if (x1!=1)
		{
			++num;a[num].l=1;a[num].r=x1-1;a[num].id=i;
		}
		for (int j=2;j<=t;++j)
		{
			scanf("%d",&x2);
			++num;a[num].l=x1+1;a[num].r=x2-1;a[num].id=i;
			x1=x2;
		}
		if (x1!=1000000)
		{
			++num;a[num].l=x1+1;a[num].r=1000000;a[num].id=i;
		}
	}
	sort(a+1,a+num+1,cmp);
	for (int i=1;i<=num;++i)
	{
		if (a[i].id==0)
		{
			add(a[i].r,1);
		}
		else
		{
			ans[a[i].id]+=sum(a[i].r);
		}
	}
	for (int i=1;i<=m;++i) ans[i]=n-ans[i];
	for (int i=1;i<=m;++i) printf("%d\n",ans[i]);
	return 0;
}
	 	 		  	 		 		    	  			  	 		