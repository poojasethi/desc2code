#include <iostream>
#include <vector>

using namespace std;

#define MAXN 1000010
#define pii pair<int, int>

int tree[MAXN];
int ans[MAXN];
vector<int> segs[MAXN];
vector<pii> quer[MAXN];
vector<int> v[MAXN];
void add(int x, int v)
{
	for (; x < MAXN; x += x & (-x))
		tree[x] += v;
}
int get(int x)
{
	int ans = 0;
	for (; x > 0; x -= x & (-x))
		ans += tree[x];
	return ans;
}

int main()
{
	int n, m;
	cin >> n >> m;
	for (int i = 0; i < n; i++)
	{
		int l, r;
		cin >> l >> r;
		segs[r + 1].push_back(l);
	}
	for (int i = 0; i < m; i++)
	{
		int cnt;
		cin >> cnt;
		for (int j = 0; j < cnt; j++)
		{
			int k;
			cin >> k;
			v[i].push_back(k);
			if (j > 0)
				quer[k].push_back(pii(v[i][j - 1], i));
			else
				quer[k].push_back(pii(0, i));
		}
		ans[i] = n;
		quer[MAXN - 2].push_back(pii(v[i][cnt - 1], i));
	}
	int tmp = 0;
	for (int i = 1; i < MAXN - 1; i++)
	{
		for (int j = 0; j < segs[i].size(); j++)
		{
			tmp++;
			add(segs[i][j], 1);//add seg[i][j], inf
		}
		for (int j = 0; j < quer[i].size(); j++)
			ans[quer[i][j].second] -= (tmp - get(quer[i][j].first));
	}
	for (int i = 0; i < m; i++)
		cout << ans[i] << endl;
}

    		 		 				 	  	     	