#include<bits/stdc++.h>

using namespace std;

#define foreach(i, x)  for(type(x) i=x.begin() ; i != x.end() ; i++)
#define FOR(ii, aa, bb) for(int ii = aa ; ii <= bb ; ii++)
#define ROF(ii, aa, bb) for(int ii = aa ; ii >= bb ; ii--)

#define type(x) __typeof(x.begin())

#define orta (bas + son >> 1)
#define sag (k + k + 1)
#define sol (k + k)

#define pb push_back
#define mp make_pair

#define nd second
#define st first

#define endl '\n'

typedef pair< int, int > pii;

typedef long long ll;
 
const int mod  = 1e9+7;
const ll  linf = 1e18;
const int inf  = 1e9;
const int N = 1e6+5;

int ans[N], F[N], i, j, k, n, m, t, y, x;

vector< int > v[N];
vector< pii > q[N];

int que(int x){ int sum = 0; for(;x>0;x-=x&-x) sum += F[x]; return sum; }
void upd(int x){ for(;x<N;x+=x&-x) F[x]++; }

int main(){

	scanf("%d %d",&n,&m);

	FOR(i,1,n){
		scanf("%d %d",&x,&y);
		v[x].pb(y);	
	}

	FOR(i,1,m){
		scanf("%d",&t);
		scanf("%d",&x); q[1].pb(mp(x-1,i));
		FOR(j,2,t){ scanf("%d",&y); q[x+1].pb(mp(y-1,i)); x = y; }	
		q[x+1].pb(mp(1e6,i));
	}

	ROF(i,1e6,1){
		foreach(it,v[i]) upd(*it);
		foreach(it,q[i]) ans[it->nd] += que(it->st);
	}
	
	FOR(i,1,m) printf("%d\n",n-ans[i]);

   return 0;
}
