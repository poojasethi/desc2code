#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#include<iostream>
using namespace std;
typedef long long LL;
const int V=510;
struct Node{int x,y;}q[V*V],pre[V][V];
int nu[V],map[V][V],co[V][V],n,m,i,j,x,y,vis[V][V],top,tail;
int nx,ny,u,v,d[V][V],ct,out[3][V*V];
int main()
{
	while(~scanf("%d%d",&n,&m))
	{
		for(i=1;i<=n;i++)nu[i]=0;
		memset(map,0,sizeof(map));
		for(i=0;i<m;i++)
		{
			scanf("%d%d",&x,&y);
			if(!map[x][y])
			{
				map[x][y]=1;
				map[y][x]=1;
				co[x][nu[x]++]=y;
				co[y][nu[y]++]=x;
			}
		}
		for(i=1;i<=n;i++)
		for(j=1;j<=n;j++)
		vis[i][j]=0;
		top=0;tail=1;
		q[1].x=1;q[1].y=n;
		vis[1][n]=1;d[1][n]=0;
		pre[1][n].x=-1;pre[1][n].y=-1;
		while(top<tail)
		{
			top++;
			nx=q[top].x;
			ny=q[top].y;
			for(i=0;i<nu[nx];i++)
			{
				u=co[nx][i];
				for(j=0;j<nu[ny];j++)
				{
					v=co[ny][j];
					if(u==v)continue;
					if(!vis[u][v])
					{
						vis[u][v]=1;
						d[u][v]=d[nx][ny]+1;
						tail++;
						q[tail].x=u;
						q[tail].y=v;
						pre[u][v].x=nx;
						pre[u][v].y=ny;
					}
				}
			}
		}
		if(vis[n][1]==0)puts("-1");
		else
		{
			printf("%d\n",d[n][1]);
			u=n;v=1;ct=0;
			while(1)
			{
				out[1][ct]=u;
				out[0][ct++]=v;
				nx=pre[u][v].x;
				ny=pre[u][v].y;
				u=nx;v=ny;
				if(u==-1)break;
			}
			for(i=0;i<2;i++)
			{
				for(j=0;j<ct;j++)printf("%d ",out[i][j]);puts("");
			}
		}
	}
}
	   	      	   			   	  		