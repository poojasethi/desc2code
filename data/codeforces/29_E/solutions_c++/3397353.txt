#include<cstdio>
#include<cstring>
#include<cassert>
#include<utility>

using namespace std;

int main(){
	bool g[501][501]; bool v[501][501]; bool w[501][501]; pair<int,int> lista[250000]; pair<int,int> Lista[250000]; pair<int,int> ant[501][501]; pair<int,int> ecessor[501][501];

	assert(sizeof(int)==4 && sizeof(long long int)==8);
	memset(g, 0, sizeof g);
	memset(v, 0, sizeof v);
	memset(w, 0, sizeof w);

	int m, n;
	scanf("%d %d", &n, &m);

	for(int i=0;i<m;i++){
		int x, y;
		scanf("%d %d", &x, &y);
		g[y][x]=g[x][y]=true;
	}

	v[1][0]=true;

	lista[0]=make_pair(1,n);
	int a=1;
	int cont=0;

	while(a){
		cont++;
		int b=0;
		for(int i=0; i<a; i++)
			for(int j=1; j<=n; j++)
				if(g[lista[i].first][j] && w[j][lista[i].second]==false){
					ant[j][lista[i].second]=lista[i];
					w[j][lista[i].second]=true;
					Lista[b]=make_pair(j,lista[i].second);
					b++;
				}
		a=0;
		while(b){
			b--;
			for(int j=1; j<=n; j++)
				if(g[Lista[b].second][j] && v[Lista[b].first][j]==false && Lista[b].first!=j){
					if(Lista[b].first==n && j==1){
						printf("%d\n", cont);
						int seq[cont+1][2];
						int save=cont--;
						seq[cont][0]=ant[Lista[b].first][Lista[b].second].first;
						seq[cont][1]=Lista[b].second;
						while(cont){
							pair<int,int> p = ecessor[seq[cont][0]][seq[cont][1]];
							cont--;
							seq[cont][0]=ant[p.first][p.second].first;
							seq[cont][1]=ant[p.first][p.second].second;
						}
						for(int i=0;i!=save;i++)
							printf("%d ",seq[i][0]);
						printf("%d\n",n);
						for(int i=0;i!=save;i++)
							printf("%d ",seq[i][1]);
						printf("%d\n",1);
						return 0;
					}
					ecessor[Lista[b].first][j]=Lista[b];
					v[Lista[b].first][j]=true;
					lista[a]=make_pair(Lista[b].first, j);
					a++;
				}
		}
	}

	printf("-1\n");
	return 0;
}
