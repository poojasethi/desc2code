#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<queue>
using namespace std;

struct que
{
    int x,y,pre;
    que(){}
    que(int x,int y,int pre):x(x),y(y),pre(pre) {}
};
struct node
{
    int v,next;
}e[20005];
int h[505];
bool map[505][505];
que q[505*505];
int ans[505*505];
int main()
{
    int n,m,cnt=0;
    scanf("%d%d",&n,&m);
    memset(h,-1,sizeof(h));
    for (int i=1;i<=m;i++)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        e[cnt].v=y;e[cnt].next=h[x];h[x]=cnt++;
        e[cnt].v=x;e[cnt].next=h[y];h[y]=cnt++;
    }
    memset(map,false,sizeof(map));
    map[1][n]=true;
    for (int i=1;i<=n;i++)
        map[i][i]=true;
    int head=0,tail=1;
    q[0]=que(1,n,-1);
    int flag=-1;
    int stp=0;
    while (head<tail)
    {
        stp++;
        int x1=q[head].x,y1=q[head].y;
        for (int i=h[x1];i!=-1;i=e[i].next)
        {
            for (int j=h[y1];j!=-1;j=e[j].next)
            {
                int x=e[i].v,y=e[j].v;
                if (map[x][y]) continue;
                q[tail]=que(x,y,head);
                if (x==n && y==1)
                {
                    flag=tail;break;
                }
                tail++;
                map[x][y]=true;
            }
            if (flag!=-1) break;
        }
        if (flag!=-1) break;
        head++;
    }
    if (flag==-1) puts("-1");
    else
    {
        //printf("%d\n",stp);
        int now=flag,i=0;
        while (true)
        {
            ans[i++]=now;
            now=q[now].pre;
            if (now==-1) break;
        }
        printf("%d\n",i-1);
        for (int j=i-1;j>=0;j--) printf("%d ",q[ans[j]].x);
        puts("");
        for (int j=i-1;j>=0;j--) printf("%d ",q[ans[j]].y);
    }
}
