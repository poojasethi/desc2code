#include <algorithm>
#include <stdio.h>
#include <vector>
#include <queue>
#include <set>
#define  pb        push_back
#define  MAXN      100003
using    namespace std;

struct edge
{
  int to,len;
  edge(int T , int L) { to=T;  len=L; }
};

bool operator<(edge a , edge b)
{
  return a.len > b.len;
}

int N,M,ans=-1;
int K[MAXN];
bool mark[MAXN];
set<int>forb[MAXN];
vector<edge>adj[MAXN];
priority_queue<edge>heap;

int main()
{
  scanf("%d%d",&N,&M);
  for(int i=0,x,y,z ; i<M ; i++)
  {
    scanf("%d%d%d",&x,&y,&z);
    adj[x].pb(edge(y,z));
    adj[y].pb(edge(x,z));
  }
  for(int i=1,x ; i<=N ; i++)
  {
    scanf("%d",&K[i]);
    for(int j=0 ; j<K[i] ; j++)
    {
      scanf("%d",&x);
      forb[i].insert(x);
    }
  }
  heap.push(edge(1,0));
  while(!heap.empty())
  {
    edge tmp=heap.top();
    heap.pop();
    int node=tmp.to,dist=tmp.len;
    if(node==N)     { ans=dist;  break; }
    if(mark[node])  continue;
    mark[node]=true;
    while(forb[node].count(dist)) dist++;
    int sz=adj[node].size();
    for(int i=0 ; i<sz ; i++)
      if(!mark[adj[node][i].to])
        heap.push(edge(adj[node][i].to,dist+adj[node][i].len));
  }
  printf("%d\n",ans);
  return 0;
}
