#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<algorithm>
#include<vector>
#include<math.h>
#include<queue>
#include<map>
#include<set>
#include<string>
#include<iostream>
using namespace std;
typedef long long ll;
const int inf=(1<<30)-1;

vector<pair<int,int> > e[100010];
set<int> S[100010];
int n,d[100010],vis[100010];
void spfa(int k)
{
	fill(d,d+n+1,inf);
	d[k]=0;
	memset(vis,0,sizeof(vis));
	queue<int> qu;
	qu.push(k);
	while(!qu.empty()){
		int t=qu.front();qu.pop();
		vis[t]=0;
		int tt=d[t];
		while(S[t].find(tt)!=S[t].end())
			tt++;
		for(int i=0;i<(int)e[t].size();i++){
			int v=e[t][i].first;
			if(d[v]>tt+e[t][i].second){
				d[v]=tt+e[t][i].second;
				if(!vis[v]){
					vis[v]=1;
					qu.push(v);
				}
			}
		}
	}
}
int main()
{
	int m,x,y,val;
	scanf("%d%d",&n,&m);
	//for(int i=1;i<=n;i++) e[i].clear();
	for(int i=0;i<m;i++){
		scanf("%d%d%d",&x,&y,&val);
		e[x].push_back(make_pair(y,val));
		e[y].push_back(make_pair(x,val));
	}
	for(int i=1;i<=n;i++){
		scanf("%d",&x);
		for(int j=0;j<x;j++){
			scanf("%d",&y);
			S[i].insert(y);
		}
	}
	spfa(1);
	if(d[n]==inf)
		printf("-1\n");
	else
		printf("%d\n",d[n]);
}
