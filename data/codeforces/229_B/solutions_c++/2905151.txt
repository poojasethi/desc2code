#include <algorithm>
#include <stdio.h>
#include <vector>
#include <queue>
#include <set>
#define  maxn      100003
#define  pb        push_back
using    namespace std;

struct edge
{
  int to,len;
  edge(int T , int L) { to=T;  len=L; }
};

bool operator<(edge a , edge b)
{
  return a.len > b.len;
}

int n,m;
int sz[maxn];
bool mark[maxn];
set<int>forb[maxn];
vector<edge>adj[maxn];
priority_queue<edge>heap;

int main()
{
  scanf("%d%d",&n,&m);
  for(int i=0 ; i<m ; i++)
  {
    int x,y,z;
    scanf("%d%d%d",&x,&y,&z);
    adj[x].pb(edge(y,z));
    adj[y].pb(edge(x,z));
    sz[x]++;
    sz[y]++;
  }
  for(int i=1 ; i<=n ; i++)
  {
    int cnt,t;
    scanf("%d",&cnt);
    while(cnt--)
    {
      scanf("%d",&t);
      forb[i].insert(t);
    }
  }
  heap.push(edge(1,0));
  while(!heap.empty())
  {
    edge tmp=heap.top();
    heap.pop();
    if(tmp.to==n)    { printf("%d\n",tmp.len);  exit(0); }
    if(mark[tmp.to]) continue;
    mark[tmp.to]=true;
    while(forb[tmp.to].count(tmp.len)) tmp.len++;
    for(int i=0 ; i<sz[tmp.to] ; i++)
      if(!mark[adj[tmp.to][i].to])
        heap.push(edge(adj[tmp.to][i].to,tmp.len+adj[tmp.to][i].len));
  }
  printf("-1\n");
  return 0;
}
