#include <set>
#include <vector>
#include <iostream>
using namespace std;

const int maxn = 100 * 1000 + 100;
const long long inf = 1000ll * 1000 * 1000 * 1000 * 1000 * 1000;
vector< pair<int, int> > a[maxn];
set<int> k[maxn];
long long d[maxn];
int mark[maxn];

int main()
{
	int n, m;
	cin >> n >> m;
	for( int i = 0; i < m; i++ )
	{
		int u, v, w;
		cin >> u >> v >> w;
		a[--u].push_back( make_pair( --v, w ) );
		a[v].push_back( make_pair( u, w ) );
	}
	for( int i = 0; i < n; i++ )
	{
		int x;
		cin >> x;
		while( x-- )
		{
			int xx;
			cin >> xx;
			k[i].insert( xx );
		}
	}
	fill( d, d + maxn, inf );
	set< pair<long long, int> > s;
	d[0] = 0;
	s.insert( make_pair( d[0], 0 ) );
	while( ( int )s.size() )
	{
		int u = s.begin()->second;
		mark[u] = 1;
		s.erase( make_pair( d[u], u ) );
		long long t = d[u];
		while( k[u].find( t ) != k[u].end() ) t++;
		for( int i = 0; i < a[u].size(); i++ )
		{
			int x = a[u][i].first;
			if( t + a[u][i].second < d[x] )
			{
				s.erase( make_pair( d[x], x ) );
				d[x] = t + a[u][i].second;
				s.insert( make_pair( d[x], x ) );
			}
		}
	}
	if( d[n - 1] == inf )
		cout << -1 << endl;
	else
		cout << d[n - 1] << endl;
	//system( "pause" );
}

 	         				 	 		 	   	