#include<cstdio>
#include<cstring>
#include<iostream>
#include<set>
#include<vector>
#include<queue>
using namespace std;
const int maxn=1e5+5;
const int inf=0x3f3f3f3f;
int n,m;
struct node{
	int v,w,next;
}e[maxn*2];
int head[maxn];
queue<int>Q;
set<int>p[maxn];
int dist[maxn],inq[maxn];
int finds(int t,int x){
	while(p[x].find(t)!=p[x].end()){
		t++;
	}
	return t;
}
void SPFA(int u){
	memset(dist,0x3f,sizeof(dist));
	memset(inq,0,sizeof(inq));
	dist[u]=0;
	Q.push(u);
	while(!Q.empty()){
		u=Q.front();Q.pop();
		inq[u]=0;
		int x=finds(dist[u],u);
		for(int i=head[u];i!=-1;i=e[i].next){
			int v=e[i].v;
			if(dist[v]>x+e[i].w){
				dist[v]=x+e[i].w;
				if(!inq[v]){
					Q.push(v);
					inq[v]=1;
				}
			}
		}
	}
}
int main(){
	int u,v,w;
	scanf("%d %d",&n,&m);
	memset(head,0xff,sizeof(head));
	for(int i=0;i<m;i++){
		scanf("%d %d %d",&u,&v,&w);
		e[2*i].v=v;e[2*i].w=w;
		e[2*i].next=head[u];
		head[u]=i*2;
		e[2*i+1].v=u;e[i*2+1].w=w;
		e[2*i+1].next=head[v];
		head[v]=i*2+1;
	}
	for(int i=1;i<=n;i++){
		scanf("%d",&u);
		p[i].clear();
		while(u--){
			scanf("%d",&v);
			p[i].insert(v);
		}
	}
	SPFA(1);
	if(dist[n]==inf){
		printf("-1\n");
	}
	else{
		printf("%d\n",dist[n]);
	}
	return 0;
} 
	 			   	 	  		 		    	 				