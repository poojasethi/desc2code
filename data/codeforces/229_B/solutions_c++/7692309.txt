#include<stdio.h>
#include<iostream>
#include<vector>
#include<cmath>
#include<algorithm>
#include<memory.h>
#include<map>
#include<set>
#include<queue>
#include<cstdio>
#include<cstring>
#define m1(x) memset(x,63,sizeof(x))
using namespace std;
const int N=444444;
typedef pair<int,int> pt;
int n,m,x,y,z,k,f[N],d[N],l,yy[N],pp[N],xx[N],kk,zz[N];
priority_queue<pair<int,int> >Q;
set<int>w[N];
int main(){
	//freopen("input.txt","r",stdin);	
	scanf("%d%d",&n,&m);
	for (int i=0;i<m;i++){
		scanf("%d%d%d",&x,&y,&z);
		x--,y--;
		yy[++kk]=y;
		zz[kk]=z;
		pp[kk]=xx[x];
		xx[x]=kk;
		yy[++kk]=x;
		zz[kk]=z;
		pp[kk]=xx[y];
		xx[y]=kk;
	}
	for (int i=0;i<n;i++){
		scanf("%d",&k);
		for (int j=0;j<k;j++){
			scanf("%d",&x);
			w[i].insert(x);
		}
	}
	m1(d);d[0]=0;Q.push(make_pair(0,0));
	for (int i=0;i<n;i++){
		while (Q.size()&&f[Q.top().second])Q.pop();
		if (Q.empty())break;
		x=Q.top().second;
		l=-Q.top().first;
		while (w[x].find(l)!=w[x].end())l++;
		Q.pop(),f[x]=1;
		for (int w=xx[x];w;w=pp[w])if (l+zz[w]<d[yy[w]]){
			d[yy[w]]=l+zz[w];
			Q.push(make_pair(-d[yy[w]],yy[w]));
		}
	}
	if (d[n-1]>1e9+1e7)puts("-1");else printf("%d\n",d[n-1]);
	return 0;
}