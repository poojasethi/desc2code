n, m = map (int, raw_input ().split ())
if n == 1 and m == 2:
    print '0\n1 1\n1 2\n1 1'
elif n == 2 and m == 1:
    print '0\n1 1\n2 1\n1 1'
elif n == 1:
    print 1
    print 1, m, 1, 1
    print '\n'.join (map (lambda x: '1 ' + str (x), range (1, m + 1) + [1]))
elif m == 1:
    print 1
    print n, 1, 1, 1
    print '\n'.join (map (lambda x: str (x) + ' 1', range (1, n + 1) + [1]))
elif n == 2:
    print 0
    print '\n'.join (map (lambda x: '1 ' + str (x), range (1, m + 1)) + map (lambda x: '2 ' + str (x), range (m, 0, -1)) + ['1 1'])
elif m == 2:
    print 0 
    print '\n'.join (map (lambda x: str (x) + ' 1', range (1, n + 1)) + map (lambda x: str (x) + ' 2', range (n, 0, -1)) + ['1 1'])
elif n % 2 == 0:
    print '0\n1 1'
    for i in xrange (1, n + 1):
        print '\n'.join (map (lambda x: str (i) + ' ' + str (x), range (2, m + 1))) if i % 2 else '\n'.join (map (lambda x: str (i) + ' ' + str (x), range (m, 1, -1)))
    print '\n'.join (map (lambda x: str (x) + ' 1', range (n, 0, -1)))
elif m % 2 == 0:
    print '0\n1 1'
    for j in xrange (1, m + 1):
        print '\n'.join (map (lambda x: str (x) + ' ' + str (j), range (2, n + 1))) if j % 2 else '\n'.join (map (lambda x: str (x) + ' ' + str (j), range (n, 1, -1)))
    print '\n'.join (map (lambda x: '1 ' + str (x), range (m, 0, -1)))
else:
    print 1
    print n, m, 1, 1
    for i in xrange (1, n + 1):
        print '\n'.join (map (lambda x: str (i) + ' ' + str (x), range (1, m + 1))) if i % 2 else '\n'.join (map (lambda x: str (i) + ' ' + str (x), range (m, 0, -1)))
    print 1, 1