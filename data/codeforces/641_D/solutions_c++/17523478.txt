#include <iostream>
#include <cmath>

using namespace std;

typedef long double ld;

const int limite=1000000;

int n;
ld M[limite],m[limite],p[limite],q[limite];

int main()
{
  cout.setf(ios::fixed);
  cout.precision(10);
  ios::sync_with_stdio(false);
  cin>>n;
  for (int i=1;i<=n;i++) {
    cin>>M[i];
    M[i]+=M[i-1];
  }
  for (int i=1;i<=n;i++)
    cin>>m[i];
  for (int i=n;i>=1;i--)
    m[i]+=m[i+1];
  for (int i=1;i<=n;i++) {
    ld T=M[i]-m[i+1]+1;
    ld b=-T;
    ld c=M[i];
    p[i]=(-b+sqrt(max(ld(0.0),b*b-4*c)))/2;
    q[i]=T-p[i];
    ld diff=min(p[i]-p[i-1],q[i]-q[i-1]);
    ld diffs=min(p[i]-q[i-1],q[i]-p[i-1]);
    if (diff<diffs)
      swap(p[i],q[i]);
  }
  for (int i=1;i<=n;i++) {
    if (i>1) cout<<" ";
    cout<<p[i]-p[i-1];
  }
  cout<<endl;
  for (int i=1;i<=n;i++) {
    if (i>1) cout<<" ";
    cout<<q[i]-q[i-1];
  }
  cout<<endl;
}
