from sys import stdin

def read_int():
    return [int(x) for x in stdin.readline().split()][0]
def read_ints():
    return [int(x) for x in stdin.readline().split()]
def char_list():
    return [c for c in stdin.readline()][:-1]
def toss():
    stdin.readline()
def list_to_dict(lst):
    dct = {}
    for elt in lst:
        if elt not in dct:
            dct[elt] = 0
        dct[elt] += 1
    return dct

def kill(lst):
    if len(lst) == 0:
        return lst
    lst = lst + [-1]
    cur_streak, cur_color = -1, -1
    pos = 0
    while pos < len(lst):
        if lst[pos] != cur_color:
            if cur_streak >= 3:
                return lst[:pos - cur_streak] + lst[pos:-1]
            cur_streak, cur_color = 1, lst[pos]
        else:
            cur_streak += 1
        pos += 1
    return lst[:-1]

def all_killed(lst):
    while len(kill(lst)) < len(lst):
        lst = kill(lst)
        #print "New list: %s" % (' '.join(str(x) for x in lst))
    return lst

n, k, x = read_ints()
colors = read_ints()

destroyed = -10
for i in range(n + 1):
    inserted = colors[:i] + [x] + colors[i:]
    destroyed = max(destroyed, n - len(all_killed(inserted)))

print max(destroyed, 0)
