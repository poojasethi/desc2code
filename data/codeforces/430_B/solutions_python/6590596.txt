import sys
import itertools
import bisect
import math
from fractions import gcd


#sys.stdin = open('inputfile.txt')


def solve():
    def test(c):
        L = []
        a = None
        while len(c) > 0:
            L.append(c.pop())
            if len(c) == 0 or L[-1] <> c[-1]:
                if len(L) >= 3 and L[-1] == L[-2] and L[-1] == L[-3]:
                    a = L[-1]
                    while len(L) > 0 and L[-1] == a:
                        L.pop()
        return len(L)
        
        
    
    n, k, x = [int(i) for i in sys.stdin.readline().split()]
    c = [int(i) for i in sys.stdin.readline().split()]
    
    best = 0
    
    for i in range(0, len(c) + 1):
        c2 = c[:]
        c2.insert(i, x)
        newbest = len(c) - test(c2)
        if newbest > best:
            best = newbest
    
    
    print best
    
solve()