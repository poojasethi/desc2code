def solve(i, x, l, pre):
	j = i
	while j + 1 < len(l) and l[j + 1] == x:
		j += 1

	ans = j - i + 1
	if ans < 2:
		return 0

	ll = i
	rr = j

	while ll - 1 >= 0 and rr + 1 < len(l):
		add = pre[ll-1][rr+1]
		if add[0] <= 2:
			break

		ans += add[0]
		ll = add[1]
		rr = add[2]

	return ans

n, k, x = map(int, raw_input().split())
l = map(int, raw_input().split())

pre = [[0]*n for i in range(n)]

for i in range(n):
	for j in range(i, n):
		if l[i] == l[j]:
			ll = i
			rr = j
			while ll - 1 >= 0 and l[ll - 1] == l[j]:
				ll -= 1 
			while rr + 1 < n and l[ll] == l[rr + 1]:
				rr += 1 
			pre[i][j] = ((i - ll + 1) + (rr - j + 1), ll, rr)
		else:
			pre[i][j] = (0, 0, 0)

r = 0

for i in range(n):
	if l[i] == x:
		r = max(r, solve(i, x, l, pre))

print r