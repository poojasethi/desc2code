import sys,math
import copy

def collapse(balls):
	i = 1
	possible = -1
	while i < len(balls):
		if balls[i][0] == balls[i-1][0]:
			balls[i-1][1] += balls[i][1]
			del balls[i]
			# finding our splitting location
			if balls[i-1][1] >= 3:
				possible = i-1
		else:
			# finding our splitting location
			if balls[i-1][1] >= 3:
				possible = i-1
			i+=1

	return possible
	
if __name__ == '__main__':
	[n,k,x] = map(int,raw_input().split())
	balls  = [ [i,1] for i in map(int,raw_input().split()) ]
	collapse(balls)
	candidate = [ i for i in range(len(balls)) if balls[i][0] == x ]
	# simulating game
	ans = 0
	for i in candidate:
		test = copy.deepcopy(balls)
		pans = -1
		# action triggered
		if test[i][1] > 1:
			test[i][1] += 1
			# propagating
			possible = collapse(test)
			while possible != -1:
				pans += test[possible][1]
				del test[possible]
				possible = collapse(test)
		ans = max(ans,pans)
	print ans
				
		
		
	
