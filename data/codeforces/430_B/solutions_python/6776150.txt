def search(balls, x):
  res = []
  i = 0
  while i < len(balls):
    if balls[i] == x:
      res.append(i)
      while i < len(balls) and balls[i] == x:
        i += 1
    else:
        i += 1
  return res

def prob(balls, x):
  segments = search(balls, x)
  max_s = 0
  for s in segments:
    res = 0
    ptr_l = ptr_r = s
    color = x
    count = 1
    first_ball = 1
    while (ptr_l >= 0 and 
           ptr_r < len(balls) and 
           balls[ptr_l] == balls[ptr_r]):
      change = True
      if ptr_l-1 >= 0 and balls[ptr_l-1] == color:
         ptr_l -= 1
         change = False
         count += 1
      if ptr_r+1 < len(balls) and balls[ptr_r+1] == color:
         ptr_r += 1
         count += 1
         change = False
      if change:
        if count+first_ball >= 3:
          res += count
          first_ball = 0
        else:
          break
        count = 2
        ptr_l -=1
        ptr_r += 1
        color = balls[max(ptr_l, 0)]
    if res > max_s:
      max_s = res
  print max_s
import sys
lines = sys.stdin.readlines()
# import pudb;pu.db
# lines = ["10 2 1","2 1 2 2 1 2 2 1 1 2"]
n, k, x = map(int, lines[0].split())
balls = map(int, lines[1].split())
prob(balls, x)