#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<cmath>
using namespace std;
struct hh
{
	long long v,n1,n2;
} f[1000001];
long long n,i,j,sum,suma,sumb,p,a[1000001],b[1000001],d[1000001];
bool tag;
bool cmp(hh a,hh b)
{
	return a.v<b.v || (a.v==b.v && a.n2<b.n2);
}

long long find1(long long x)
{
	long long l=1,r=n,t=0;
	while (l<=r)
	{
		long long mid=(l+r)/2;
		if (d[mid]>=x)
		{
			t=mid;
			r=mid-1;
		}
		else l=mid+1;
	}
	return t;
}

int main()
{
		scanf("%I64d\n",&n);
		for (i=1;i<=n;suma+=a[i++]) scanf("%I64d",&a[i]);
		for (scanf("\n"),i=1;i<=n;sumb+=b[i++]) scanf("%I64d",&b[i]);
		if (sumb>suma)
		{
			tag=true;
			for (i=1;i<=n;i++) swap(a[i],b[i]);
		}
		for (i=1;i<=n;i++) d[i]=d[i-1]+a[i];
		for (scanf("\n"),i=1;i<=n;i++) 
		{
			sum+=b[i];
			p=find1(sum);
			f[i].v=d[p]-sum;
			f[i].n1=p;
			f[i].n2=i;
		}
		sort(f+1,f+n+1,cmp);
		for (i=1;i<=n;i++)
			if (f[i].v==f[i-1].v)
			{
				if (!tag)
				{
					printf("%I64d\n",f[i].n1-f[i-1].n1);
					for (j=f[i-1].n1+1;j<=f[i].n1;j++) printf("%I64d ",j);
					printf("\n%I64d\n",f[i].n2-f[i-1].n2);
					for (j=f[i-1].n2+1;j<=f[i].n2;j++) printf("%I64d ",j);
				}
				else
				{
					printf("\n%I64d\n",f[i].n2-f[i-1].n2);
					for (j=f[i-1].n2+1;j<=f[i].n2;j++) printf("%I64d ",j);
					printf("%I64d\n",f[i].n1-f[i-1].n1);
					for (j=f[i-1].n1+1;j<=f[i].n1;j++) printf("%I64d ",j);
				}
				return 0;
			}
}
