#include<cstdio>
#include<algorithm>
#include<cstring>
#include<set>
#include<map>
#include<cmath>
#include<vector> 
using namespace std;
typedef long long ll;
#define rep(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)
#define per(i,a,b) for(int (i)=(a);(i)>=(b);(i)--)
#define Rep(p,x) for(int (p)=head[(x)];(p);(p)=nxt[(p)])
#define ms(x,y) memset(x,y,sizeof x)
#define ls (x<<1)
#define rs (x<<1|1)
#define mid ((l+r)>>1) 
#define w1 first
#define w2 second
template<class T>inline void rread(T&num){
	num=0;T f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9')num=num*10+ch-'0',ch=getchar();
	num*=f;
}
const int maxn=1000005;
bool flag=0;
int A[maxn],B[maxn],n;
ll a[maxn],b[maxn];
struct node{int dif,id1,id2;}ans[maxn];
inline bool cmp(node a,node b){return a.dif<b.dif||(a.dif==b.dif&&a.id1<b.id1);}
int main(){
	rread(n);
	rep(i,1,n)rread(A[i]);
	rep(i,1,n)rread(B[i]);
	a[0]=0;rep(i,1,n)a[i]=a[i-1]+A[i];
	b[0]=0;rep(i,1,n)b[i]=b[i-1]+B[i];
	if(a[n]>b[n])rep(i,0,n)swap(a[i],b[i]),flag=1;
	int j=0;
	rep(i,0,n){
		while(b[j+1]<=a[i]&&j<n)j++;
		ans[i].dif=a[i]-b[j];
		ans[i].id1=i;
		ans[i].id2=j;
	}
	sort(ans,ans+n+1,cmp);
	if(flag)rep(i,0,n)swap(ans[i].id1,ans[i].id2);
	rep(i,1,n)if(ans[i].dif==ans[i-1].dif){
		printf("%d\n",ans[i].id1-ans[i-1].id1);
		rep(j,ans[i-1].id1+1,ans[i].id1)printf("%d%c",j,j==ans[i].id1?'\n':' ');
		printf("%d\n",ans[i].id2-ans[i-1].id2);
		rep(j,ans[i-1].id2+1,ans[i].id2)printf("%d%c",j,j==ans[i].id2?'\n':' ');
		return 0;
	}
}