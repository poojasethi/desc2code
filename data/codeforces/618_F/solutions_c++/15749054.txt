//ITNOA
#include<bits/stdc++.h> 

using namespace std;
 
#define scan(x) do{while((x=getchar())<'0'); for(x-='0'; '0'<=(_=getchar()); x=(x<<3)+(x<<1)+_-'0');}while(0)
char _;

//#define int long long
#define rep(i, s, e) for(int i = s; i < e; i ++)
#define X first
#define Y second
 
typedef long long ll;
typedef long double ld;

const int maxN = 1000*1000 + 5;
const int mod = 1000*1000*1000 + 7;
const int base = 701;
const int SQ = 500;

ll a[maxN], b[maxN];
pair<int,int> df[maxN];

void print(int l, int r)
{
    cout << r-l+1 << endl;
    rep(i,l,r+1)
	cout << i << ' ';
    cout << endl;
}

int32_t main()
{
    ios::sync_with_stdio(0); cin.tie(0);
    int n; cin >> n;
    rep(i,0,n)
    {
	int x; cin >> x;
	a[i+1] = a[i] + x;
    }
    rep(i,0,n)
    {
	int x; cin >> x;
	b[i+1] = x + b[i];
    }

    bool fl = 0;
    if(b[n] < a[n])
    {
	rep(i,0,n+1) swap(a[i], b[i]);
	fl = 1;
    }

    rep(i,0,maxN) df[i] = {-1,-1};    
    rep(i,1,n+1)
    {
	int ps = upper_bound(b,b+n,a[i]) - b;
	ps --;
	if(b[ps] == a[i])
	{
	    if(fl == 0)
	    {
		print(1,i);
		print(1,ps);
	    }
	    else
	    {
		print(1,ps);
		print(1,i);
	    }
	    return 0;
	}

	int d = a[i] - b[ps];
	if(df[d].X == -1) df[d] = {i, ps};
	else
	{
	    if(fl == 0)
	    {
		print(df[d].X+1,i);
		print(df[d].Y+1,ps);
	    }
	    else
	    {
		print(df[d].Y+1,ps);
		print(df[d].X+1,i);
	    }
	    return 0;
	}
    }
    assert(0);
    return 0;
}


