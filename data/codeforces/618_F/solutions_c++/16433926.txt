#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <iostream>
#include <algorithm>
#define ll long long
using namespace std;

const int MaxN = 1000010;
int A[MaxN], B[MaxN], N, pos[MaxN], match[MaxN];
ll Sa[MaxN], Sb[MaxN];

void Print(int l, int r) {
	printf("%d\n", r - l);
	for (int i = l + 1; i <= r; ++i) printf("%d ", i); puts("");
}

void Solve(ll A[], ll B[], bool flag) {
	memset(pos, -1, sizeof(pos));
	int node = 0;
	for (int i = 0; i <= N; ++i) {
		while (B[node] < A[i]) node++;
		match[i] = node;
		int u = B[node] - A[i];
		if (pos[u] != -1) {
			if (!flag) {
				Print(pos[u], i);
				Print(match[pos[u]], match[i]);
			} else {
				Print(match[pos[u]], match[i]);
				Print(pos[u], i);
			}
			return;
		}
		pos[u] = i;
	}
}

int main()
{
	scanf("%d", &N);
	for (int i = 1; i <= N; ++i) {
		scanf("%d", A + i);
		Sa[i] = Sa[i - 1] + A[i];
	}
	for (int i = 1; i <= N; ++i) {
		scanf("%d", B + i);
		Sb[i] = Sb[i - 1] + B[i];
	}
	if (Sa[N] <= Sb[N]) Solve(Sa, Sb, 0);
	else Solve(Sb, Sa, 1);
	return 0;
}
