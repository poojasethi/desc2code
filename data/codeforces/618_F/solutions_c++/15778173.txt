#include <cstdio>
#include <cmath>
#include <algorithm>
#include <cstring>
#include <string>
#include <vector>
#include <set>
#include <queue>
#include <map>
#include <iostream>
#include <cassert>

using namespace std;

#define fru(j,n) for(int j=0; j<(n); ++j)
#define tr(it,v) for(typeof((v).begin()) it=(v).begin(); it!=(v).end(); ++it)
#define x first
#define y second
#define pb push_back
#define ALL(G) (G).begin(),(G).end()

#define DEBUG
#ifdef DEBUG
	#define DEB printf
#else
	#define DEB(...)
#endif


typedef long long LL;
typedef pair<int,int> pii;
typedef vector<int> vi;

const int inft = 1000000009;
const int MAXN = 1000006;//10^6

pii T[MAXN];

int main(){
	int n;
	scanf("%d",&n);
	vi A(n+1),B(n+1);
	fru(i,n) scanf("%d",&A[i+1]);
	fru(i,n) scanf("%d",&B[i+1]);
	LL sa=0,sb=0;
	bool swapped=0;
	tr(it,A) sa+=*it;
	tr(it,B) sb+=*it;
	if(sa>sb){swap(A,B); swapped=1;}
	int j=0;
	sa=0;sb=0;
	fru(i,MAXN) T[i]=pii(-1,-1);
	T[0]=pii(0,0);
	for(int i=1;i<=n;++i){
		sa+=A[i];
		while(j+1<=n && sb+B[j+1]<=sa){
			sb+=B[j+1];
			++j;
		}
		int dif=sa-sb;
		assert(dif>=0 && dif<=n-1);
//		printf("i =%d j = %d dif = %d, sa =%lld sb = %lld\n",i,j,dif,sa,sb);		
		if(T[dif].x!=-1){
			int i2=T[dif].x,i1=i;
			int j2=T[dif].y,j1=j;
//			printf("%d %d || %d %d\n",i1,i2,j1,j2);
			if(swapped){
				swap(i1,j1);
				swap(i2,j2);
			}
			printf("%d\n",i1-i2);
			for(int e=i2+1;e<=i1;++e) printf("%d ",e); printf("\n");
			printf("%d\n",j1-j2);
			for(int e=j2+1;e<=j1;++e) printf("%d ",e); printf("\n");
			return 0;
			}
		T[dif]=pii(i,j);
	}
	printf("nie znalazlem\n");
	return 0;
}
