#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define orta (bas + son >> 1)
#define sag (k + k + 1)
#define sol (k + k)
#define endl '\n'
#define foreach(i,x) for(type(x)i=x.begin();i!=x.end();i++)
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define ROF(ii,aa,bb) for(int ii=aa;ii>=bb;ii--)
#define mp make_pair
#define nd second
#define st first
#define type(x) __typeof(x.begin())

typedef pair < int ,int > pii;

typedef long long ll;

const long long linf = 1e18+5;
const int mod = (int) 1e9 + 7;
const int logN = 17;
const int inf = 1e9;
const int N = 1e6 + 5;

int n, x;
pii all[N];
vector< ll > a, b;

void print(int x, int y, int l, int r, int t) {
	if(t) {
		printf("%d\n", r - l);
		FOR(i, l + 1, r)
			printf("%d ", i); printf("\n");
		printf("%d\n", y - x);
		FOR(i, x + 1, y)
			printf("%d ", i); cout << endl;
	}
	else {
		printf("%d\n", y - x);
		FOR(i, x + 1, y)
			printf("%d ", i); cout << endl;
		
		printf("%d\n", r - l);
		FOR(i, l + 1, r)
			printf("%d ", i); printf("\n");
	}
}

int main() {

	scanf("%d", &n);

	a.resize(n + 1, 0);
	b.resize(n + 1, 0);

	FOR(i, 1, n) {
		scanf("%d", &x);
		a[i] = a[i-1] + x;
	}
	
	FOR(i, 1, n) {
		scanf("%d", &x);
		b[i] = b[i-1] + x;
	}

	bool flag = false;

	if(a[n] < b[n]) { swap(a, b); flag = true; }

	FOR(i, 0, n) all[i] = mp(-1, -1);

	FOR(i, 0, n) {
		int index = upper_bound(b.begin(), b.begin() + n + 1, a[i]) - b.begin() - 1;
		int diff = a[i] - b[index];
		if(all[a[i] - b[index]] != mp(-1, -1)) {
			print(all[diff].st, i, all[diff].nd, index, flag);
			return 0;
		}
		all[diff] = mp(i, index);
	}

	assert(0);


	return 0;
}
