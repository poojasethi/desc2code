#include <bits/stdc++.h>

#define fi first
#define se second
#define mm ((b+s)>>1)
#define umax(a,b) a=max(a,b)
#define umin(a,b) a=min(a,b)
#define inf 1000000009
#define max3(a,b,c) max((a),max((b),(c)))
#define bit(k) (1ll<<(k))
#define fbit(k,i) ((k) & (bit(i)))
#define count(a) __builtin_popcount(a)
#define pq priority_queue
#define all(v) v.begin(),v.end()
#define type(x) __typeof(x.begin())
#define foreach(v,it) for(type(v) it=v.begin(); it!=v.end();it++)

using namespace std;

typedef double db;
typedef long long lint;
typedef pair <lint,lint> ii;
typedef pair <ii,lint> iii;
typedef vector <lint> vi;
typedef vector <ii> vii;

const lint maxn=1e6+20;

lint N,A[maxn],B[maxn],sa[maxn],sb[maxn];
map <lint,bool> used;
map <lint,ii> kar;

int main(){
	cin >> N;
	
	for(lint i=1;i<=N;i++){
		scanf("%lld",&A[i]);
		sa[i]=A[i]+sa[i-1];
	}
	for(lint i=1;i<=N;i++){
		scanf("%lld",&B[i]);
		sb[i]=B[i]+sb[i-1];
	}
	
	for(lint i=0,pos=0;i<=N;i++){
		while(pos!=N && sb[pos+1]<=sa[i])
			pos++;
		
		lint fark=sa[i]-sb[pos];
		if(used[fark]){
			ii a=kar[fark];
			
			printf("%lld\n",i-a.fi);
			
			for(lint j=a.fi+1;j<=i;j++)
				printf("%lld ",j);
			puts("");
			
			printf("%lld\n",pos-a.se);
			
			for(lint j=a.se+1;j<=pos;j++)
				printf("%lld ",j);
			puts("");
			
			return 0;
		}
		
		used[fark]=1;
		kar[fark]=ii(i,pos);
	}
	
	printf("-1\n");
	
	return 0;
}
