#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>
#include <cmath>
#include <stack>
#include <map>
#include <set>
#include <deque>
#include <cstring>
#include <functional>
#include <climits>
#include <list>
#include <ctime>
#include <complex>

#define F1(x,y,z) for(int x=y;x<z;x++)
#define F2(x,y,z) for(int x=y;x<=z;x++)
#define F3(x,y,z) for(int x=y;x>z;x--)
#define F4(x,y,z) for(int x=y;x>=z;x--)
#define pb push_back
#define LL long long
#define co complex<double>
 
#define MAX 100005
#define AMAX 1500
#define MOD 1000000007

#define f(c,d) ((1<<(c))*(d))

using namespace std;

int n,ta,tb,z[MAX*10][2];
LL x[2][MAX*10];
bool y;

int main(){
	scanf("%d",&n);
	F1(a,0,2)F1(b,0,n){
		scanf("%d",&ta);
		x[a][b+1]=x[a][b]+ta;
	}
	if(x[0][n]>x[1][n])y=1;
	F4(a,n,0){
		ta=upper_bound(x[y^1],x[y^1]+n+1,x[y][a])-x[y^1]-1;
		tb=x[y][a]-x[y^1][ta];
		if(z[tb][0]){
			if(y){
				printf("%d\n",z[tb][1]-ta);
				F2(b,1,z[tb][1]-ta)printf("%d ",ta+b);
				printf("\n%d\n",z[tb][0]-a);
				F2(b,1,z[tb][0]-a)printf("%d ",a+b);
			}else{
				printf("%d\n",z[tb][0]-a);
				F2(b,1,z[tb][0]-a)printf("%d ",a+b);
				printf("\n%d\n",z[tb][1]-ta);
				F2(b,1,z[tb][1]-ta)printf("%d ",ta+b);
			}
			return 0;
		}else{
			z[tb][0]=a;
			z[tb][1]=ta;
		}
	}
	//system("pause");
	return 0;
}
