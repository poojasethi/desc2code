from sys import stdin, stdout
from itertools import permutations as perms 

def rot1(ls):
	ls[0], ls[5], ls[1], ls[4]=ls[5], ls[1], ls[4], ls[0]
	return ls
def rot2(ls):
	ls[0], ls[2], ls[1], ls[3]=ls[2], ls[1], ls[3], ls[0]
	return ls
def rot3(ls):
	ls[5], ls[2], ls[4], ls[3]=ls[2], ls[4], ls[3], ls[5]
	return ls;
def rot4(ls):
	ls=[ls[4], ls[5], ls[3], ls[2], ls[0], ls[1]]
	return ls

def main():
	line=stdin.readline().rstrip()

	l=list(set(list(perms(line))))
	l=map(list, l)

	cube_sets=set()
	for el in l:
		insert=True
		for r in range(2*4*4*4):
			rot=r
			tmp=el

			for f in [rot1, rot2, rot3]:
				for _ in range(int(rot)%4):
					tmp=f(tmp)
				rot/=4
			if rot%2==1: tmp=rot4(tmp)

			if tuple(tmp) in cube_sets:
				insert=False
				break
		if insert: cube_sets.add(tuple(el))

	stdout.write(str(len(cube_sets))+'\n')

if __name__=='__main__':
	main()
