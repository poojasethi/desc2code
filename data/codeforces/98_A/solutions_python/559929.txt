
def det(mat):
  [(a11,a12,a13),(a21,a22,a23),(a31,a32,a33)]=mat
  return a11*a22*a33+a12*a23*a31+a13*a21*a32-(a13*a22*a31+a12*a21*a33+a11*a23*a32)

ls=[(1,0,0),(0,1,0),(0,0,1),(-1,0,0),(0,-1,0),(0,0,-1)]
transes=[(l1,l2,l3) for l1 in ls for l2 in ls for l3 in ls if det((l1,l2,l3))==1]

poses=list(ls)

def mult(trans, l):
  return tuple( sum(trans[i][j]*l[j] for j in xrange(3) ) for i in xrange(3) )

def f(ind, trans):
  pos=poses[ind]
  newpos=mult(trans, pos)
  return poses.index(newpos) 

def newsequence(seq, trans):
  return "".join(seq[f(ind, trans)] for ind in xrange(6))

def newsequences(seq, transes):
  return [newsequence(seq,trans) for trans in transes]

def perm(s):
  if len(s)<=1:
    return [s]
  return [p[:i]+s[0]+p[i:] for i in xrange(len(s)) for p in perm(s[1:])]

def readints():
  return map(int,raw_input().split())

def main():
  x=perm(raw_input())
  z=set([])
  for s in x:
    ms=min(newsequences(s, transes))
    #print s,ms
    z.add(ms)
  print len(z)
  pass



if __name__=='__main__':
  main()


