#include <stdio.h>
#include <vector>
using namespace std;

vector<int> a[305];
int p[305];

void dfs(int x, int from) {
	p[x] = from;
	for(int i=0;i<(int)a[x].size();i++)
		if(a[x][i]!=from)
			dfs(a[x][i], x);
}
vector<int> path;

void addpath(int x, int y) {
	int Q[305], r=1, d[305]={};
	while(y>0) {d[y]=r; Q[r++]=y; y=p[y];}
	while(x>0) {
		if(d[x]>0) {
			for(int i=d[x]-1;i>0;--i) path.push_back(Q[i]);
			break;
		}
		x = p[x];
		path.push_back(x);
	}
}

int main(void) {
	int n, i, x, y;
	scanf("%d", &n);
	for(i=1;i<n;i++){
		scanf("%d%d", &x, &y);
		a[x].push_back(y);
		a[y].push_back(x);
	}
	dfs(1, -1);
	int last = 1;
	path.push_back(1);
	for(i=2;i<=n;i++)
		if(a[i].size()==1) {
			scanf("%d", &x);
			addpath(last, x);
			last = x;
		}
	addpath(last, 1);
	if(path.size() != 2*n-1) puts("-1");
	else {
		printf("1");
		for(i=1;i<(int)path.size();i++)
		printf(" %d", path[i]);
		puts("");
	}
	return 0;
}
