#include<cstdio>
#include<cstring>
const int maxn=1010;
int n,f;
int ans[maxn],num;
int head[maxn],tot;
int order[maxn],cnt;
struct edge
{
    int to,next;
}edges[maxn<<1];
void addedge(int u,int v)
{
    edges[tot].to=v;
    edges[tot].next=head[u];
    head[u]=tot++;
}
void dfstree(int u,int pa,int tar)
{
    if (u==tar) f=1;
    else for (int k=head[u];k!=-1;k=edges[k].next)
        if (edges[k].to!=pa)
        {
            ans[num++]=edges[k].to;
            dfstree(edges[k].to,u,tar);
            if (f) return;
            num--;
        }
}
int main()
{
    scanf("%d",&n);
    tot=0;
    memset(head,-1,sizeof(head));
    for (int i=1;i<n;i++)
    {
        int u,v;
        scanf("%d%d",&u,&v);
        addedge(u,v);
        addedge(v,u);
    }
    order[0]=1;
    cnt=1;
    while (~scanf("%d",&order[cnt])) cnt++;
    order[cnt++]=1;
    num=0;
    ans[num++]=1;
    for (int i=0;i<cnt-1;i++)
    {
        f=0;
        dfstree(order[i],-1,order[i+1]);
        if (num>=2*n)
        {
            printf("-1\n");
            return 0;
        }
    }
    printf("%d",ans[0]);
    for (int i=1;i<num;i++) printf(" %d",ans[i]);
    putchar('\n');
    return 0;
}

 		 	    										 				 	