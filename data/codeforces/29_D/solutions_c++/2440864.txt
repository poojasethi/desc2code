#include <iostream>
#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <queue>
#include <set>
#include <map>
#include <math.h>
#include <vector>
#include <stack>
#include <sstream>

const int N=310;

using namespace std;

#define sz(x) ((x).size())
#define pb push_back

vector<int> vt[N];
int dfs(int u,int p,int t,stack<int> &st)
{
	if(u==t) return 1;
	for(int i=0;i<sz(vt[u]);i++)
	{
		int v=vt[u][i];
		if(v==p) continue;
		st.push(v);
		if(dfs(v,u,t,st)) return 1;
		st.pop();
	}
	return 0;
}

int main()
{
	int n,x;
	cin>>n;
	for(int i=0;i<n-1;i++)
	{
		int a,b;
		cin>>a>>b;
		vt[a].pb(b);
		vt[b].pb(a);
	}
	string str;
	getline(cin,str);
	getline(cin,str);
	stringstream sin(str);
	vector<int> a;
	while(sin>>x) a.pb(x);
	a.pb(1);
	queue<int> que;
	int p=1;
	que.push(p);
	for(int i=0;i<sz(a);i++)
	{
		stack<int> b;
		b.push(a[i]);
		dfs(a[i],a[i],p,b);
		b.pop();
		while(sz(b)) que.push(b.top()),b.pop();
		p=a[i];
		if(sz(que)>n+n-1) return puts("-1"),0;
	}
	while(sz(que)) printf("%d ",que.front()),que.pop();
	puts("");
	return 0;
}
