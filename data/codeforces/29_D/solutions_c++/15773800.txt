#include <bits/stdc++.h>
using namespace std;

const int maxn=303;
vector <int > v[maxn];
vector <int > ans;
bool vis[maxn];

bool dfs(int x, int y)
{
    vis[y]=true;
    if(x==y)
    {
 //       ans.push_back(x);
        return true;
    }
    for(int i=0;i<v[y].size();i++)
    {
        int yy=v[y][i];
        if(!vis[yy])
        {
            vis[yy]=true;
            if(dfs(x,yy))
            {
                ans.push_back(y);
                return true;
            }
        }
    }
    return false;
}

int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);setprecision(30);

    int n;
    cin>>n;
    for(int i=0;i<n-1;i++)
    {
        int x,y;
        cin>>x>>y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
    ans.push_back(1);
    int k=0;
    for(int i=2;i<=n;i++) if(v[i].size()==1) k++;
    int y=0;
    int x=1;
    for(int i=1;i<=k;i++)
    {
        cin>>y;
        for(int j=0;j<maxn;j++) vis[j]=0;
        dfs(x,y);
        x=y;
    }
    for(int j=0;j<maxn;j++) vis[j]=0;
    dfs(x,1);

    if(ans.size()!=2*n-1) cout<<-1;
    else
    {
        for(int i=0;i<ans.size();i++) cout<<ans[i]<<" ";
    }
    return 0;
}
