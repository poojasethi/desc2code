#include<stdio.h>
#include<algorithm>
#include<string.h>
#include<vector>
#define N 400
using namespace std;
vector<int>vt;
struct node{
	int to,next,vis;
}edge[N*3];
int n,rank[N],head[N],tot,mark[N],du[N],flag,k,ans[N],res[N],flag1;
void add(int a,int b){
	//printf("%d %d\n",a,b);
	edge[tot].to=b;
	edge[tot].next=head[a];
	edge[tot].vis=0;
	head[a]=tot++;
}
int dfs(int now,int ed,int pre)
{
	int i,j,u,v;
//	printf(" %d %d %d\n",now,ed,pre);
	if(now==ed)return 1;
	for(i=head[now];i!=-1;i=edge[i].next){
		u=edge[i].to;
		if(u==pre)continue;		
		if(dfs(u,ed,now))
		{//printf("%d\n",now);
			vt.push_back(now);
			return 1;
		}
	}
	return 0;
}
int main()
{
	int i,j,a,b;
	scanf("%d",&n);
	memset(head,-1,sizeof(head));
	memset(du,0,sizeof(du));
	memset(rank,0,sizeof(rank));
	memset(mark,0,sizeof(mark));
	tot=0;
	for(i=1;i<n;i++){
		scanf("%d%d",&a,&b);
		add(a,b);
		add(b,a);
	}
	b=1;
	vt.clear();
	vt.push_back(1);
	while(scanf("%d",&a)!=EOF){
		dfs(a,b,0);
		b=a;		
	}
	dfs(1,b,0);
	if(vt.size()!=2*n-1)printf("-1\n");
	else{
		for(i=0;i<vt.size();i++)
		printf("%d ",vt[i]);
		printf("\n");
	}
	return 0;
}
	      		 	  	   	 		 	