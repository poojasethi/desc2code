#include <bits/stdc++.h>
using namespace std;
vector<int>v ;
vector<int>edge[301] ;
vector<int>path ;
bool vis[301] ;
int y ;
bool dfs(int x ){
    if(x == y)return 1 ;
    if(vis[x])return 0 ;
    vis[x] = 1 ;
    for(int i = 0 ; i < edge[x].size() ;i++){
        if(dfs(edge[x][i])){
            path.push_back(x) ;
            return 1 ;
        }
    }
    return 0 ;
}
int main()
{
    int n ;
    cin >> n ;
    for(int i = 0 ; i < n - 1 ; i ++){
        int x , y ;
        cin >> x >> y ;
        edge[x].push_back(y) ;
        edge[y].push_back(x) ;
    }
    v.push_back(1) ;
    int x ;
    while(cin >> x){
        v.push_back(x) ;
    }
    v.push_back(1) ;
    reverse(v.begin(),v.end()) ;
    path.push_back(1) ;
    for(int i = 0 ; i < v.size() - 1 ; i++){
        memset(vis,false,sizeof(vis)) ;
        y = v[i] ;
        dfs(v[i+1]) ;
    }
    reverse(path.begin(),path.end()) ;
    if(path.size() == 2*n-1){
        for(int i = 0 ; i < 2*n-1 ; i++)cout << path[i] << " " ;
    }
    else cout << -1 ;
    return 0;
}
