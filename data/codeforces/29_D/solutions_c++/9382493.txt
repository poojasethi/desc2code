#include <iostream>
#include <vector>
#include <cstdio>
using namespace std;
vector<int>R, adj[301];
int n;
bool dfs_R(int node, int T, int prev){
    if (node == T) return 1;
    for (int i = 0; i < adj[node].size(); i++){
        if (adj[node][i] == prev) continue;
        if (dfs_R(adj[node][i], T, node)){
            R.push_back(node);
            return true;
        }
    }
    return false;
}

int main(){
    cin >> n;
    for (int i = 0; i < n - 1; i++){
        int a, b;
        cin >> a >>b;
        adj[a].push_back(b);
        adj[b].push_back(a);
    }
    int S, L;
    S = 1;
    R.push_back(1);
    while (cin >> L){
        dfs_R(L, S, -1);
        S = L;
    }
    dfs_R(1, L, -1);
    if (R.size() == 2 * n - 1){
        for (int i = 0; i < R.size(); i++)
            cout << R[i] << " ";
    }
    else
        printf("-1");
}
    //system("pause");


