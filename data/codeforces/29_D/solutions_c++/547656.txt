#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
vector<int>pp[330];
bool v[330][330];
int ans[660];
int n,k,flag=0;
int r[330];
int nn;
void dfs(int i,int ii,int num)
{
    int x;
    ans[num]=i;//printf("%d %d \n",num,i);
    if(ii==k&&i==r[k]) {flag=1;nn=num;return;}
    v[ii][i]=1;
    int j;
    for(j=0;j<pp[i].size();j++)
    {

        x=pp[i].at(j);
        if(v[ii][x]) continue;
        if(x==r[ii]) {dfs(x,ii+1,num+1);if(flag) return;}
        dfs(x,ii,num+1);if(flag) return;
    }

    v[ii][i]=0;
}
int main()
{
    int i,j,ii;
    scanf("%d",&n);
    for(ii=0;ii<n-1;ii++)
    {
        scanf("%d%d",&i,&j);
        pp[i].push_back(j);
        pp[j].push_back(i);
    }
    memset(v,0,sizeof(v));k=0;
    while(~scanf("%d",&i))
    {
        r[k++]=i;
    }
   // for(j=0;j<k;j++) printf("%d \n",r[j]);
    //printf("\n");
    r[k]=1;
    dfs(1,0,1);//printf("%d ",nn);
    if(nn!=2*n-1) {printf("-1");return 0;}
    for(i=1;i<nn;i++)
    {
        printf("%d ",ans[i]);
    }printf("%d\n",ans[i]);
}

	 			     		   	    			   	