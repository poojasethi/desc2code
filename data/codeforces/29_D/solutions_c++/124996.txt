#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <stack>
using namespace std;

int V,cur,t1,t2,next;
bool G[305][305],visit[305],can;
vector <int> ans,K;
stack <int> S;

bool dfs(int x){
	visit[x] = 1;
	if(x == next){
	//	S.push(x);
		return 1;
	}
	for(int i=1;i<=V;++i){
		if(G[x][i] && !visit[i]){
			if(dfs(i)){
				G[x][i] = 0;
				S.push(x);
				return 1;
			}
		}
	}
	return 0;
}

int main(){
	scanf("%d",&V);
	for(int i=1;i<V;++i){
		scanf("%d%d",&t1,&t2);
		G[t1][t2] = G[t2][t1] = 1;
	}
	while(scanf("%d",&t1) == 1) K.push_back(t1);
	if(K[K.size()-1] != 1) K.push_back(1);
	cur = can = 1;
	for(int i=0;i<K.size();++i){
		memset(visit,0,sizeof(visit));
		next = K[i];
		if(!dfs(cur)){
			can = 0;
			break;
		}
		else{
//			printf("%d can get to %d\n",cur,next);
			cur = next;
			while(!S.empty()){
				ans.push_back(S.top());
				S.pop();
			}
		}
	}
	ans.push_back(1);
	if(can == 0) printf("-1\n");
	else{
		for(int i=0;i<ans.size();++i){
			printf("%d",ans[i]);
			if(i<ans.size()-1) printf(" ");
			else printf("\n");
		}
	}
//	system("pause");
}
