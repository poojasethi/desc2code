#include <iostream>
#include <cstdlib>
#include <vector>
using namespace std;

const int NMAX = 305;
const int INF = (1<<20);

vector<int> sol;
vector<int> ord;
int dp[NMAX][NMAX];
int tata[NMAX][NMAX];
int N, K;

void Rec(int i, int j)
{
	int k = tata[i][j];
	if (k != -1)
	{
		Rec(i, k);
		sol.push_back(k);
		Rec(k, j);
	}
}

int main(void)
{
	cin >> N;
	int i, j, k;
	size_t t;
	for (i = 1; i <= N; ++i)
		for (j = 1; j <= N; ++j) {
			dp[i][j] = (i == j) ? 0 : INF;
			tata[i][j] = (i == j) ? 0 : -1;
		}

	for (k = 1; k <= N-1; ++k) {
		cin >> i >> j;
		dp[i][j] = dp[j][i] = 1;
	}

	ord.push_back(1);
	while (cin >> k) ord.push_back(k);
	ord.push_back(1);

	for (k = 1; k <= N; ++k)
		for (i = 1; i <= N; ++i)
			for (j = 1; j <= N; ++j)
				if (dp[i][j] > dp[i][k] + dp[k][j])
					dp[i][j] = dp[i][k] + dp[k][j], tata[i][j] = k;

	for (t = 0; t < ord.size()-1; ++t) {
		sol.push_back(ord[t]);
		Rec(ord[t],ord[t+1]);
	}
	sol.push_back(ord[t]);
	if (sol.size() > 2*N-1) { cout << "-1\n"; }
	else { for (t = 0; t < sol.size(); ++t) cout << sol[t] << " "; }

	return 0;
}
