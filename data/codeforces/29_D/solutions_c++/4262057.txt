#include<iostream>
#include<string.h>
#include<string>
#include<stdio.h>
#include<vector>
#define maxn 500

using namespace std;

vector<int> G[maxn],res;

bool dfs( int root, int u, int fa )
{
    if ( root == u ) return 1;
    int v;
    for ( int i = 0; i < G[u].size(); ++i )
    {
        v = G[u][i];
        if ( v == fa ) continue;
        if ( dfs(root,v,u) )
        {
            res.push_back(u);return 1;
        }
    }
    return 0;
}

int main()
{
    int n,u,v;
     scanf("%d",&n);
     for ( int i = 1; i <= n; ++i )
        G[i].clear();
     for ( int i = 1; i < n; ++i )
     {
         scanf("%d%d",&u,&v);
         G[u].push_back(v);
         G[v].push_back(u);
     }
     res.clear();
     res.push_back(1);
     int root = 1;
     while ( scanf("%d",&u) != EOF)
     {
        //if ( u == 0 ) break;
         dfs(root,u,-1);
         root = u;
     }
     dfs(root,1,-1);
     if ( res.size() != 2 * n - 1 ) printf("-1\n");
     else
     {
            for ( int i = 0; i < res.size(); ++i )
               if ( i != 0 ) printf(" %d",res[i]);
               else printf("%d",res[i]);
            printf("\n");
     }
     return 0;
}

	 			 	 		 	 	   	 	  	   	