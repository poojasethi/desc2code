#include <iostream>
#include <vector>
#include <memory.h>
using namespace std;
vector<int> adj[301],order,ret;
bool visit[301];
bool dfs(int cur,int target){
	visit[cur]=true;
	if(cur==target){
		ret.push_back(cur);
		return true;
	}
	for(int i=0;i<adj[cur].size();++i){
		if(!visit[adj[cur][i]])
		if( dfs(adj[cur][i],target) ){
			ret.push_back(cur);
			return true;
		}
	}
	return false;
}
int main(){
	int n,a,b;cin>>n;
	for(int i=0;i<n-1;++i){
		cin>>a>>b;
		adj[a].push_back(b);
		adj[b].push_back(a);
	}
	int c=0,cur=1;for(int i=2;i<=n;++i)if(adj[i].size()==1)++c;
	for(int i=0;i<c;++i){
		memset(visit,false,sizeof(visit));
		cin>>a;
		dfs(a,cur);
		ret.pop_back();
		cur = a;
	}
	memset(visit,false,sizeof(visit));
	dfs(1,cur);
	if(ret.size() == 2*n-1){
		for(int i=0;i<ret.size();++i)
			cout<<ret[i]<<" ";
		cout<<endl;
	}
	else
		cout<<-1<<endl;
}
