#include<cstdio>
#include<algorithm>
#include<vector>
using namespace std;
vector <int> e[501],ans,x1,x2;
int n,lv[501],h[501],m,a[601];
int dfs(int now,int _h,int _lv){
  int u = 0;
  lv[now] = _lv; h[now] = _h; 
  for(int i=0;i<e[now].size();i++)
    if(e[now][i] != _h)
      dfs(e[now][i],now,_lv+1), u = 1;
  if(!u) m++;
}
int W(int x,int y){
  while(lv[x] > lv[y]){
    x1.push_back(x); x = h[x];
  }
  while(lv[y] > lv[x]){
    x2.push_back(y); y = h[y];
  }
  while(y != x){
    x1.push_back(x); x2.push_back(y);
    x = h[x]; y = h[y];
  }
  x2.push_back(y);
  for(int i=1;i<x1.size();i++) ans.push_back(x1[i]); 
  while(x1.size() > 0) x1.pop_back();
  while(x2.size() > 0) ans.push_back(x2.back()), x2.pop_back();
}
int main(){
  scanf("%d",&n);
  for(int i=1,u,v;i<n;i++){
    scanf("%d%d",&u,&v);
    e[u].push_back(v); e[v].push_back(u);
  }
  dfs(1,-1,1);
  for(int i=1;i<=m;i++) scanf("%d",&a[i]);
  a[0] = a[++m] = 1;
  for(int i=1;i<=m;i++){
    W(a[i-1],a[i]);
    if(ans.size() > 2*n-1) break;
  }
  if(ans.size() > 2*n-1) printf("-1");
  else{
    for(int i=0;i<ans.size();i++) 
      printf("%d ",ans[i]);
  }
  return 0;
}
