#include<cstdio>
#include<cstring>
struct node
{
    int y,ne;
}e[1005];
int h[305],ep,f[1005],find,i,n,dest[305],nd,ans[1005],ap,v[1005];
void add(int a,int b)
{
    e[ep].y=b;
    e[ep].ne=h[a];
    h[a]=ep;
    ep++;
}
void dfs(int n,int des)
{
	v[n]=1;
	//printf("%d\n",n);
	if (n==des) {find=1;return;}
    for(int i=h[n];i;i=e[i].ne)
    {
		if (v[e[i].y]) continue;
        f[i]++;
		ans[ap++]=i;
        dfs(e[i].y,des);
        if (find) return;
		ap--;
        f[i]--;
    }
}
void print(int n)
{
    printf("%d",n);
    for(i=0;i<ap;i++)
    {
        n=e[ans[i]].y;
        printf(" %d",n);
    }
    puts("");
}
int main()
{
    scanf("%d",&n);
    memset(h,0,sizeof(h));
	memset(f,0,sizeof(f));
    ep=1;ap=0;
    for(i=0;i<n-1;i++)
    {
        int a,b;
        scanf("%d%d",&a,&b);
        add(a,b);
        add(b,a);
    }
    dest[0]=1;
    nd=1;
    while(~scanf("%d",&dest[nd++]));
	nd--;
    dest[nd]=1;
    for(i=1;i<=nd;i++)
	{
		memset(v,0,sizeof(v));
		find=0;
		dfs(dest[i-1],dest[i]);
	}
	int can=1;
	for(i=1;i<ep;i++) if (f[i]!=1) {can=0;break;}
	if (can)
	{
		print(1);
	}
	else puts("-1");
}

	 	 		 	   		   		 	 		 		