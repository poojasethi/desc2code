#include <iostream>
#include <memory.h>
using namespace std;

int he[305], ne[610], cnt[305], cnte[610], u[305], col, colst, p[1000], c[610], res, n, num[610];

int dfs(int v, int x)
{
	u[v] = 1;
	if (v == x)
		return 1;
	int b = he[v];
	while(b != -1)
	{
		int _b = c[b];
		if (u[_b] == 0 && cnte[num[b]] < 2)
		{
			p[res] = _b;
			++res;
			++cnte[num[b]];
			if (dfs(_b,x))
				return 1;
			--res;
			--cnte[num[b]];
		}
		b = ne[b];
	}
	return 0;
}

int main() {

	cin >> n;

	colst = n - 1;

	memset(ne, -1, sizeof(ne));
	memset(he, -1, sizeof(he));

	for (int i=0;i<n - 1;++i)
	{
		int v,u;
		cin >> v >> u;
		++cnt[v];
		++cnt[u];
		ne[col] = he[v], he[v] = col, c[col] = u, num[col] = i;
		++col;
		ne[col] = he[u], he[u] = col, c[col] = v, num[col] = i;
		++col;
	}

	int prx = 1;
	p[res] = 1;
	++res;
	colst = 0;
	for (int i=2;i<=n;++i)
		if (cnt[i] == 1)
			++colst;
	int x;
	while (colst)
	{
		cin >> x;
		memset(u, 0, sizeof(u));
		if (!dfs(prx, x))
		{
			cout << -1;
			return 0;
		}
		--colst;
		prx = x;
	}

	memset(u, 0, sizeof(u));
	if (!dfs(prx,1))
	{
		cout << -1;
		return 0;
	}

	for (int i=0;i<res;++i)
		cout << p[i] << " ";

	return 0;
}
