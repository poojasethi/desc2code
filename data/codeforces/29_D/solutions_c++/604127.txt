#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

const int MAXV = 310;

int N;
vector<int> adj[MAXV], RET;

int dfs(int u, int v, int p) {
    if (u == v) return 1;
    for (int i = 0; i < adj[u].size(); i++) {
        int w = adj[u][i];
        if (w == p) continue;
        if (dfs(w, v, u)) {
            RET.push_back(u);
            return 1;
        }
    }
    return 0;
}

int main() {
    int a, b;
    scanf("%d", &N);
    for (int i = 0; i < N-1; i++) {
        scanf("%d %d", &a, &b);
        adj[a].push_back(b);
        adj[b].push_back(a);
    }

    RET.push_back(1);
    b = 1;
    while (scanf("%d", &a) != EOF) {
        dfs(a, b, 0);
        b = a;
    }
    dfs(1, b, 0);

    if (RET.size() != 2*N-1) puts("-1");
    else for (int i = 0; i < RET.size(); i++) printf("%d ", RET[i]);

    return 0;
}
