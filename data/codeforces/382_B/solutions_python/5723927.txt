#!/usr/bin/env python2
import sys, math
sys.setrecursionlimit(9999999)
D = {}
def calc(a, b, w, x, c, bo = True):
	cc = c
	while a<c:
		c -= 1
		if b >= x:
			b -= x
		else:
			a, b = a-1, w-(x-b)
		if D.get(b, 0) != 0 and bo:
			return (a, b, c, cc-c)
		D[b] = (a, c)
	return (a, b, c, cc-c)

def solve(a, b, w, x, c):
	if c <= a: return 0
	t0, cc = 0, c
	if b >= x:
		t0, t1 = b / x, c-a
		if t1 <= t0: return t1
		b = b%x
	D[b] = (a, c-t0)
	a, b, w, x, c = a, b, w, x, c-t0
	a, b, c, t = calc(a, b, w, x, c)
	g, h, r = D[b][0]-a, D[b][1]-c, cc-c
	k = max((c-a)/(h-g)-1, 0) if a<c else 0
	a, b, c = a-g*k, b, c-h*k
	return r+h*k+calc(a, b, w, x, c, False)[-1]

print solve(*map(int, raw_input().split()))
