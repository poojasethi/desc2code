def gao(b, w, x):
    r = []
    pos = dict()
    idx = None
    while True:
        if not pos.get(b) is None:
            idx = pos.get(b)
            break
        pos[b] = len(r)
        if b >= x:
            r.append((b, False))
            b -= x
        else:
            r.append((b, True))
            b += w - x
    return r[:idx], r[idx:]


def work(a, c, pc, rc):


    def ceil(x, y):
        return x //y + 1 if x % y != 0 else x // y


    steps = 0
    # Begin
    if c <= a:
        print steps
        return
    for t in pc:
        steps += 1
        c -= 1
        if t[1]:
            a -= 1
        if c <= a:
            print steps
            return
    # Loop
    d = 0
    for t in rc:
        if not t[1]:
            d += 1
    nb = ceil(c - a, d)
    steps += (nb - 1) * len(rc)
    a -= (nb - 1) * (len(rc) - d)
    c -= (nb - 1) * len(rc)
    for t in rc:
        steps += 1
        c -= 1
        if t[1]:
            a -= 1
        if c <= a:
            print steps
            return


if __name__ == '__main__':
    a, b, w, x, c = [int(p) for p in raw_input().split()]
    pc, rc = gao(b, w, x)
    work(a, c, pc, rc)
