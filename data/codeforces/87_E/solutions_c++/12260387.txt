#include <set>
#include <map>
#include <cmath>
#include <ctime>
#include <cctype>
#include <cstdio>
#include <vector>
#include <cassert>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#define fi first
#define se second
#define mk make_pair
#define pb push_back
#define For(i,a,b)  for(int i=(int)a;i<=(int)b;i++)
#define Forn(i,a,b) for(int i=(int)a;i>=(int)b;i--)
#define nc() getchar()
#define pend(x) ((x)=='\n'||(x)=='\r'||(x)=='\t'||(x)==' ')
using namespace std;
typedef long long ll;
typedef long double db;
const db P=0;
const int N=400005;

inline int IN(){
	char ch=nc(); int f=1,x=0;
	while(pend(ch)) ch=nc();
	if(ch=='-') f=-1,ch=nc();
	while(!pend(ch)) x=x*10+ch-'0',ch=nc();
	return x*=f;
}

struct po{
	db x,y;
	void read(){
		double x0,y0;
		scanf("%lf%lf",&x0,&y0);
		x=x0*cos(P)-y0*sin(P);
		y=x0*sin(P)+y0*cos(P);
	}
	bool operator <(const po &a)const{
		return (x==a.x)?(y<a.y):(x<a.x);
	}
	db operator *(const po &a)const{
		return x*a.y-y*a.x;
	}
	po operator +(const po &a)const{
		return (po){x+a.x,y+a.y};
	}
	po operator -(const po &a)const{
		return (po){x-a.x,y-a.y};
	}
	db R(){
		return x*x+y*y;
	}
	bool operator ==(const po &a){
		return x==a.x && y==a.y;
	}
}a[N],b[N],c[N];
int n,m,p;

inline int cmp(const po &u,const po &v){
	db tmp=(u-a[1])*(v-a[1]);
	if(tmp!=0) return tmp>0;
	return (u-a[1]).R()<(v-a[1]).R();
}

void merge(po *a,po *b){
	int A,B;
	A=1;For(i,2,n) if(a[i]<a[A]) A=i;
	B=1;For(i,2,m) if(b[i]<b[B]) B=i;
	c[p=1]=a[A]+b[B];
	for(;!(p>1&&c[p]==c[1]);){
		po kA=a[A%n+1]+b[B];
		po kB=b[B%m+1]+a[A];
		if((kA-c[p])*(kB-c[p])>0){
			c[++p]=kA;
			A=A%n+1;
		}else{
			c[++p]=kB;
			B=B%m+1;
		}
	}
	--p;
	For(i,1,p) a[i]=c[i];
	n=p;
}

bool In(po A){
	A=A-a[1];
	if((A*a[2]>0)||(A*a[2]==0 && A.R()>a[2].R())) return 0;
	if((A*a[n]<0)||(A*a[n]==0 && A.R()>a[n].R())) return 0;
	int l=2,r=n;
	while(l+1<r){
		int md=(l+r)>>1;
		db k=A*a[md];
		if(k==0){
			if(A.R()>a[md].R()) return 0;
			return 1;
		}
		if(k>0) r=md;else l=md;
	}
	if((A*a[l]==0)&&(A.R()>a[l].R())) return 0;
	if((A*a[r]==0)&&(A.R()>a[r].R())) return 0;
	if((A-a[l])*(a[r]-a[l])>0) return 0;
	return 1;
}

int main(){
	scanf("%d",&n);
	For(i,1,n) a[i].read();
	scanf("%d",&m);
	For(i,1,m) b[i].read();	merge(a,b);
	scanf("%d",&m);
	For(i,1,m) b[i].read();	merge(a,b);
	int Q=IN();
	sort(a+2,a+n+1,cmp);
	int t=1;
	For(i,2,n) a[i]=a[i]-a[1];
	For(i,2,n){
		if((i==n)||(a[i]*a[i+1]!=0)) a[++t]=a[i];else continue;
	}
	n=t;
	while(Q--){
		po T;T.read();T.x*=3;T.y*=3;
		puts(In(T)?"YES":"NO");
	}
	return 0;
}
