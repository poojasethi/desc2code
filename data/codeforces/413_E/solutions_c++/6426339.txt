#include<bits/stdc++.h>

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define all(c) (c).begin(),(c).end()
#define mp make_pair
#define pb push_back
#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define dbg(x) cerr<<__LINE__<<": "<<#x<<" = "<<(x)<<endl

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
const int inf = (int)1e9;
const double INF = 1e12, EPS = 1e-9;

const int MX = 200010;
const int MX_L = 18;

int w, q;
char maze[2][MX];

int dist[MX_L][MX][2][2];

int main(){
	scanf("%d%d", &w, &q);
	rep(i, 2) scanf("%s", maze[i]);
	
	rep(i, MX_L) rep(j, MX) rep(k, 2) rep(l, 2) dist[i][j][k][l] = inf;
	rep(i, w - 1) rep(j, 2) rep(k, 2){
		
		if(maze[j][i] == 'X' || maze[k][i + 1] == 'X') continue;
		if(j != k && maze[k][i] == 'X' && maze[j][i + 1] == 'X') continue;
		
		dist[0][i][j][k] = j == k ? 1 : 2;
	}
	
	rep(i, MX_L - 1) rep(j, w) if((1 << i) + j < w) rep(a, 2) rep(b, 2) rep(c, 2){
		
		dist[i + 1][j][a][c] = min(dist[i + 1][j][a][c], 
			dist[i][j][a][b] + dist[i][j + (1 << i)][b][c]);
	}
	
	while(q--){
		int a, b;
		int ay, ax, by, bx;
		
		scanf("%d%d", &a, &b); a--; b--;
		ay = a / w; ax = a % w;
		by = b / w; bx = b % w;
		
		if(bx < ax){
			swap(ax, bx);
			swap(ay, by);
		}
		
		
		int d = bx - ax;
		int dp[2] = {inf, inf};
		dp[ay] = 0;
		
		if(a == b){
			printf("%d\n", 0);
		}
		else if(ax == bx){
			printf("%d\n", maze[ay][ax] == 'X' || maze[by][bx] == 'X' ? -1 : 1);
		}
		else{
			rep(i, MX_L) if(d >> i & 1){
				
				int pdp[2] = {dp[0], dp[1]};
				dp[0] = dp[1] = inf;
				
				rep(j, 2) rep(k, 2) dp[k] = min(dp[k], pdp[j] + dist[i][ax][j][k]);
				
				ax += 1 << i;
			}
			printf("%d\n", dp[by] == inf ? -1 : dp[by]);
		}
	}
	
	return 0;
}
