#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 200010
#define inf 1000000000
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int a00,a01,a10,a11;
} tr[N*4],an;
int i,j,k,n,m,x,y,f1,f2;
char p[2][N];
inline void update(ww &x,ww y,ww z) {
	x.a00=min(inf,min(y.a00+z.a00,y.a01+z.a10)+1);
	x.a01=min(inf,min(y.a00+z.a01,y.a01+z.a11)+1);
	x.a10=min(inf,min(y.a10+z.a00,y.a11+z.a10)+1);
	x.a11=min(inf,min(y.a10+z.a01,y.a11+z.a11)+1);
}
void build(int q,int x,int y) {
	if (x==y) {
		if (p[0][x]=='X') tr[q].a00=tr[q].a01=tr[q].a10=inf;
		if (p[1][x]=='X') tr[q].a11=tr[q].a01=tr[q].a10=inf;
		if (p[0][x]=='.'&&p[1][x]=='.') tr[q].a01=tr[q].a10=1;
		return;
	}
	int mid=(x+y)/2;
	build(q*2,x,mid);
	build(q*2+1,mid+1,y);
	update(tr[q],tr[q*2],tr[q*2+1]);
}
void cal(int q,int x,int y,int l,int r) {
	if (l<=x&&y<=r) {
		if (an.a00==-1) an=tr[q];
		else update(an,an,tr[q]);
		return;
	}
	int mid=(x+y)/2;
	if (l<=mid) cal(q*2,x,mid,l,r);
	if (mid<r) cal(q*2+1,mid+1,y,l,r);
}
int main() {
	//freopen("413e.in","r",stdin);
	scanf("%d%d",&n,&m);
	scanf("%s%s",p[0]+1,p[1]+1);
	build(1,1,n);
	For(i,1,m) {
		scanf("%d%d",&x,&y);
		f1=f2=0;
		if (x>n) f1=1,x-=n;
		if (y>n) f2=1,y-=n;
		if (x>y) swap(f1,f2),swap(x,y);
		an.a00=-1;
		cal(1,1,n,x,y);
		int re;
		re=!f1?(!f2?an.a00:an.a01):(!f2?an.a10:an.a11);
		printf("%d\n",re>1e8?-1:re);
	}
	//for(;;);
	return 0;
}
