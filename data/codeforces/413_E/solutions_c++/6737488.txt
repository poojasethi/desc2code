#include<cstdio>
#include<algorithm>
#include<cstring>
const int N=200050;

int f[N][2][2][18];
int map[N][2];
void upmin(int &v,int x){if(x<v)v=x;}

int h[2];

int main(){
  int n,m;
  scanf("%d%d",&n,&m);
  for(int i=0;i<=1;i++)
    for(int j=1;j<=n;j++){
      char c=getchar();
      for(;c!='X'&&c!='.';c=getchar());
      if(c=='.')map[j][i]=1;
    }
  memset(f,63,sizeof(f));  
  for(int i=1;i<n;i++){
    if(map[i][0]){
      if(map[i+1][0])f[i][0][0][0]=1;
      if(map[i+1][1]&&map[i+1][0])f[i][0][1][0]=2;
      if(map[i+1][1]&&map[i][1])  f[i][0][1][0]=2;
    }
    if(map[i][1]){
      if(map[i+1][1])f[i][1][1][0]=1;
      if(map[i+1][1]&&map[i+1][0])f[i][1][0][0]=2;
      if(map[i+1][0]&&map[i][0])  f[i][1][0][0]=2;
    }
  }
  for(int k=1;(1<<k)<n;k++)
    for(int i=1;i+(1<<k)<=n;i++){
      int j=i+(1<<(k-1));
      for(int _=0;_<=1;_++)
        for(int __=0;__<=1;__++){
          upmin(f[i][_][__][k],f[i][_][0][k-1]+f[j][0][__][k-1]);
          upmin(f[i][_][__][k],f[i][_][1][k-1]+f[j][1][__][k-1]);
          upmin(f[i][_][__][k],f[i][_][0][k-1]+1+f[j][1][__][k-1]);
          upmin(f[i][_][__][k],f[i][_][1][k-1]+1+f[j][0][__][k-1]);
        }
    }
  while(m--){
    int x,y;scanf("%d%d",&x,&y);
    if(x==y){printf("0\n");continue;}
    int s=(x-1)%n+1,s_=(x-1)/n;
    int t=(y-1)%n+1,t_=(y-1)/n;
    if(s==t){printf("1\n");continue;}
    if(s>t){
      int v=s;s=t;t=v;
      v=s_;s_=t_;t_=v;
    }
    int l=t-s;
    int now=s,now_=s_;
    memset(h,63,sizeof(h));
    h[now_]=0;
    if(map[now][1-now_]) h[1-now_]=1;
    for(int k=0;l;l/=2,k++)
      if(l&1){
        int g[2];memset(g,63,sizeof(g));
        upmin(g[0],h[0]+f[now][0][0][k]);
        upmin(g[0],h[1]+f[now][1][0][k]);
        upmin(g[1],h[0]+f[now][0][1][k]);
        upmin(g[1],h[1]+f[now][1][1][k]);
        h[0]=g[0];h[1]=g[1];
        now+=1<<k;        
      }
    if(h[t_]==f[0][0][0][0]) printf("-1\n");
    else printf("%d\n",h[t_]);
  } 
}
