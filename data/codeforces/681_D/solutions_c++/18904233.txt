#include<stdio.h>
#include<algorithm>
#include<string.h>
#include<vector>
using namespace std;
vector<int> v[100005], ans;
int flag = 1, like[100005], in[100005] = {0};
void dfs(int x);
int main(void)
{
	int n, i, m, a, b;
	scanf("%d%d", &n, &m);
	for(i=1;i<=m;i++)
	{
		scanf("%d%d", &a, &b);
		v[a].push_back(b);
		in[b]++;
	}
	for(i=1;i<=n;i++)
		scanf("%d", &like[i]);
	for(i=1;i<=n;i++)
	{
		if(in[i]==0)
			dfs(i);
	}
	if(flag==0)
		printf("-1\n");
	else
	{
		printf("%d\n", ans.size());
		for(i=0;i<ans.size();i++)
			printf("%d\n", ans[i]);
	}
	return 0;
}
void dfs(int x)
{
	int i, a;
	for(i=0;i<v[x].size();i++)
	{
		a = v[x][i];
		if(like[a]!=a && like[a]!=like[x])
			flag = 0;
		dfs(a);
	}
	if(like[x]==x)
		ans.push_back(x);
}
	 	 		       	 		  	   	 		