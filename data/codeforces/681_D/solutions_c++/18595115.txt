#include <cstdio>
#include <iostream>
#include <cstring>
#include <stack>
#include <queue>

using namespace std;

const int N = 110000;

stack<int>S;

queue<int>Q;

int to[N],base[N],nxt[N],a[N],f[N];

int dfs(int x,int k){
	if (a[x] != k && a[x] != x) return -1;
	if (a[x] == x) S.push(x),k = x;
	for (int i = base[x];i;i = nxt[i]){
		if (dfs(to[i],k) == -1) return -1;
	}
	return 1;
}

int tot = 0;

int add(int x,int y){
	to[++tot] = y;
	f[y] = x;
	nxt[tot] = base[x];
	base[x] = tot;
}

int n,m;

int main(){
	cin >> n >> m;
	int x,y;
	for (int i = 1;i <= m;i++){
		scanf("%d%d",&x,&y);
		add(x,y);
	}
	for (int i = 1;i <= n;i++)
		scanf("%d",&a[i]);
	int flag = 0;
	for (int i = 1;i <= n;i++)
		if (!f[i]){
			if (~dfs(i,0)){
				while(!S.empty()){
					Q.push(S.top());
					S.pop();
				}
			}else {flag = 1; break;}
		}
	 if (flag) {printf("-1"); return 0;}
	 cout << Q.size() << endl;
	 while(!Q.empty()){
	 	printf("%d\n",Q.front());
	 	Q.pop();
	 }
}
