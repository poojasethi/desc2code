#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
using namespace std;
const int inf=(1<<30)-1;
const int maxn=100010;
#define REP(i,n) for(int i=(0);i<(n);i++)
int n,m;
int d[maxn],a[maxn];
int ans[maxn];
struct data{
	int to,next;
}e[2*maxn];
int head[maxn];
int tot=0;
int cnt=0;
int flag=0;
void add(int x,int y)
{
	tot++;
	e[tot].next=head[x];
	head[x]=tot;
	e[tot].to=y;
}
void dfs(int x,int p)
{
	if(flag) return;
	for(int i=head[x];i;i=e[i].next)
	{
		int v=e[i].to;
		if(a[v]!=a[x]&&a[v]!=v) {flag=1;return;}
		dfs(v,x);
	}
	if(a[x]==x) ans[++cnt]=x;
}
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		add(x,y);
		d[y]++;
	}
	for(int i=1;i<=n;i++) scanf("%d",&a[i]);
	for(int i=1;i<=n;i++) if(!d[i]) dfs(i,0);
	if(flag) return printf("-1\n"),0;
	printf("%d\n",cnt);
	for(int i=1;i<=cnt;i++)
	printf("%d\n",ans[i]);
	return 0;
}
