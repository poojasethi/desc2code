#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<vector>

using namespace std;

const int maxn = 100010;

vector<int> G[maxn];
vector<int> ans;
int f[maxn];
int a[maxn];
int flag;

void dfs(int x,int t)
{
    for(int i=0;i<G[x].size();i++)
    {
        int j=G[x][i];
        if(j==t)
            continue;
        if(a[j]!=a[x]&&a[j]!=j)
            flag = 0;
        dfs(j,x);
    }
    if(a[x]==x)
        ans.push_back(x);
}

int main(void)
{
    int n,m,i;
    scanf("%d%d",&n,&m);
    memset(f,0,sizeof(f));
    for(i=0;i<m;i++)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        G[x].push_back(y);
        f[y]++;
    }
    for(i=1;i<=n;i++)
        scanf("%d",&a[i]);
    flag = 1;
    for(i=1;i<=n;i++)
        if(!f[i])
            dfs(i,0);
    if(flag)
    {
        printf("%d\n",ans.size());
        for(i=0;i<ans.size();i++)
            printf("%d\n",ans[i]);
    }
    else
        printf("-1\n");
    return 0;
}

		  	  	 	   		 	 		  	 	 		 		