#include<iostream>
#include<vector>
using namespace std;
vector<int> adjList[100001];
int N;
bool isRecipient[100001]={0};
int giftTo[100001];
vector<int> ans;
bool possible=true;
int dfs(int at)
{
    for(int i=0;i<adjList[at].size();i++)
    {
        int outS=dfs(adjList[at][i]);
        if(outS!=-1 && outS!=at && outS!=giftTo[at])
        {
            possible=false;
        }
        if(!possible)
            return -1;
    }
    if(isRecipient[at])
        ans.push_back(at);
    if(giftTo[at]!=at)
        return giftTo[at];
    return -1;
    
}
int main()
{
	int M,i;
	cin>>N>>M;
	bool hasFather[100001]={0};
	for(i=0;i<M;i++)
	{
	    int a,b;
	    cin>>a>>b;
	    adjList[a].push_back(b);
	    hasFather[b]=true;
	}
	for(i=1;i<=N;i++)
	{
	    int t;
	    cin>>t;
	    giftTo[i]=t;
	    isRecipient[t]=true;
	}
	for(i=1;i<=N;i++)
	{
	    if(hasFather[i]==false)
    	    dfs(i);
	}
	if(possible)
	{
	    cout<<ans.size()<<endl;
	    for(i=0;i<ans.size();i++)
	        cout<<ans[i]<<endl;
	}
	else
	    cout<<-1;
	return 0;
}
