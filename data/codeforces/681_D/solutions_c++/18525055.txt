#include<bits/stdc++.h>
using namespace std;
const int N=100005;
bool check[N],flag,al[N];
int dr[N],l[N],thk[N],par[N];
vector <int> ans;
vector <int> G[N];
int dfs(int u) {
    check[u]=1;
    int mxdr=l[dr[u]];
    for(int i=0;i<G[u].size();i++) {
        int v=G[u][i]; if(check[G[u][i]]) continue;
        l[v]=l[u]+1;
        mxdr=min(mxdr,dfs(v));
    }
    if(thk[u]!=0) {
        if(l[u]>mxdr) flag=true;
        else if(!al[u]) { ans.push_back(u); al[u]=1; }
    }
    return mxdr;
}

int main() {
    int n,m; cin>>n>>m;
    for(int i=1;i<=m;i++) {
        int u,v; cin>>u>>v; par[v]=u;
        G[u].push_back(v);
    }
    for(int i=1;i<=n;i++) { cin>>dr[i]; thk[dr[i]]=i; }
    for(int i=1;i<=n;i++) if(!par[i]) dfs(i);
    if(flag) { cout<<-1; return 0; }
    cout<<ans.size()<<endl;
    for(int i=0;i<ans.size();i++) cout<<ans[i]<<endl;
}
