//Code by liuchenrui
#include<bits/stdc++.h>
#define N 200010
using namespace std;
inline void splay(int &v){
	v=0;char c=0;int p=1;
	while(c<'0' || c>'9'){if(c=='-')p=-1;c=getchar();}
	while(c>='0' && c<='9'){v=(v<<3)+(v<<1)+c-'0';c=getchar();}
	v*=p;
}
int nxt[N],fir[N],sz,to[N],a[N],v[N<<2],is[N],n,m,head,tail;
void add(int x,int y){
	nxt[++sz]=fir[x],fir[x]=sz;
	to[sz]=y;is[y]=1;
}
void dfs(int x,int y){
	if(a[x]!=x&&a[x]!=y){
		puts("-1"),exit(0);
	}
	if(x==a[x])v[--head]=x;
	else v[++tail]=x;
	for(int u=fir[x];u;u=nxt[u]){
		dfs(to[u],a[x]==x?x:y);
	}
}
int main(){
	splay(n),splay(m);
	for(int i=1;i<=m;i++){
		int x,y;splay(x),splay(y);
		add(x,y);
	}
	for(int i=1;i<=n;i++){
		splay(a[i]);
	}
	vector<int>ans;
	for(int i=1;i<=n;i++){
		if(!is[i]){
			head=150000,tail=149999;
			dfs(i,0);
			for(int i=head;i<=tail;i++){
				ans.push_back(v[i]);
			}
		}
	}
	cout<<ans.size()<<endl;
	for(int i=0;i<ans.size();i++){
		printf("%d\n",ans[i]);
	}
}