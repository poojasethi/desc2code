#include <bits/stdc++.h>
using namespace std;
#define SSTR( x ) static_cast< std::ostringstream & >( \
        ( std::ostringstream() << std::dec << x ) ).str()
vector<bool> inlist(100010,false);
vector<vector<int> > adj(100010);
vector<int> ans;
vector<int> choice(100010);
vector<int> father(100010,0);

int flag;
bool ispos(int a,int b)
{
	while(a!=0)
	{
		if(a==b)
		return true;
		a=father[a];
	}
	return false;
}

void dfs(int a)
{
	int i;
	i=0;
	for(i=0;i<adj[a].size();i++)
	{
		dfs(adj[a][i]);
		if(choice[adj[a][i]]!=-1 && choice[a]!=choice[adj[a][i]])
		cout<<"-1",exit(0);
	}
	if(choice[a]==a)
	{
		ans.push_back(choice[a]);
		choice[a]=-1;
	}
}
int main() 
{
	flag=0;
	int n,m,i,j,a,b;
	cin>>n>>m;
	for(i=0;i<m;i++)
	{
		cin>>a>>b;
		adj[a].push_back(b);
		father[b]=a;
	}
	
	for(i=1;i<=n;i++)
		cin>>choice[i];
		
	for(i=1;i<=n;i++)
	{
		if(father[i]==0)
		dfs(i);
	}
	
		cout<<ans.size()<<endl;
		for(i=0;i<ans.size();i++)
		cout<<ans[i]<<endl;
	
		
	return 0;
}