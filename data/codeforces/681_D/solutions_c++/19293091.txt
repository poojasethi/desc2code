#include<bits/stdc++.h>
using namespace std;

const int N = 100010;
int n, m, x, y, p[N], a[N], appear[N], vis[N], out[N], ok = 1;

void dfs(int x, int pre) {
	vis[x] = 1;
	if(pre != -1 && a[x] != pre) {
		ok = 0;
		return ;
	}
	if(p[x] && !vis[p[x]]){
		if(x == a[x]) pre = -1;
		else pre = a[x];
		dfs(p[x], pre);
	}
}

vector<int> ans;

void dfs2(int x) {
	vis[x] = 1;
	if(appear[x]) ans.push_back(x);
	if(p[x] && !vis[p[x]]) {
		if(out[p[x]] == 1)
			dfs2(p[x]);
		else --out[p[x]];
	}
}

int main(int argc, char **argv) {

	scanf("%d%d", &n, &m);
	for(int i=0 ; i<m ; ++i) {
		scanf("%d%d", &x, &y);
		p[y] = x;
		++out[x];
	}

	for(int i=1 ; i<=n ; ++i) {
		scanf("%d", a+i);
		appear[a[i]] = 1;
	}
	for(int i=1 ; i<=n ; ++i)
		if(!out[i] && !vis[i]) dfs(i, a[i]);
	if(!ok) return puts("-1"), 0;
	memset(vis, 0, sizeof vis);
	for(int i=1 ; i<=n ; ++i)
		if(!out[i]) dfs2(i);
	cout << (int) ans.size() << endl;
	for(int i=0 ; i<(int)ans.size() ; ++i)
		printf("%d\n", ans[i]);
	return 0;
}
