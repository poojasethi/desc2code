
#include<bits/stdc++.h>

typedef long long LL;
using namespace std;

#define fillchar(a, x) memset(a, x, sizeof(a))
#define MP make_pair
#define PB push_back

const int M = 1000000007;

const int N = 100005;

vector <LL> g[N],A,AA;
LL ans = 0,color[N],get[N];
map <LL,LL> mp;

 
void dfs(LL s)
{
color[s] = 1;

for(LL i=0;i<g[s].size();i++)
	if(color[g[s][i]]==0)
		{
		color[g[s][i]]=1;

		if(mp[g[s][i]]>0)	
				get[g[s][i]] = g[s][i];
		else	
			get[g[s][i]] = get[s];	

		dfs(g[s][i]);
		}

if(mp[s]>0)
	AA.PB(s+1);

}

int main()
{
LL n,i,j,m;
cin>>n>>m;
LL a,b;

vector <LL> indeg(n);

for(i=0;i<m;i++)
 	{cin>>a>>b;
 	a--;b--;	
 	g[a].PB(b);	
 	indeg[b]++;
 	}

vector <LL> v(n);

for(i=0;i<n;i++)
	{cin>>v[i];
	v[i]--;	
	mp[v[i]]++;
	}

A.resize(n);

fillchar(color,0);
fillchar(get,0);

for(i=0;i<n;i++)
	{
	if(color[i]==0 && indeg[i]==0)
		{
		get[i] = i;	
		dfs(i);
		}	
	}

for(i=0;i<n;i++)
 	if(get[i]!=v[i])
 		{ans = -1;break;}
 	else
 		ans = AA.size();

cout<<ans<<endl;

if(ans!=-1)	
	 for(i=0;i<AA.size();i++)		
	 	cout<<AA[i]<<endl;


}

