#include <cstdio>
#include <cstdlib>
#include <vector>
#include <cassert>
#include <cstring>
using namespace std;

int n, m;
int par[100005], req[100005];
vector<int> adj[100005];
bool vis[100005], reqed[100005];
int ans[100005], ansid;

void dfs(int x, int last){
	assert(vis[x]==false);
	vis[x] = true;
	if(reqed[x]) last = x;
	if(req[x]!=last){
		printf("-1\n");
		exit(0);
	}
	
	for(int i = 0; i < adj[x].size(); i++ ){
		int nxt = adj[x][i];
		if(vis[nxt]) assert(0);
		dfs(nxt,last);
	}
	
	if(reqed[x]){
		ans[ansid++] = x;
	}
	
}

int main(){
	memset(par,-1,sizeof(par));
	scanf("%d%d",&n,&m);
	for(int i = 0; i < m; i++ ){
		int u, v; scanf("%d%d",&u,&v);
		u--; v--;
		par[v] = u;
		adj[u].push_back(v);
	}
	for(int i = 0; i < n; i++ ) scanf("%d",&req[i]), req[i]--, reqed[req[i]] = true;
	for(int i = 0; i < n; i++ ){
		if(par[i]!=-1) continue;
		dfs(i,i);
	}
	
	printf("%d\n",ansid);
	for(int i = 0; i < ansid; i++ ) printf("%d\n",ans[i]+1);
	
	return 0;
}




