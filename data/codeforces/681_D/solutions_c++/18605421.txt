#include<bits/stdc++.h>
using namespace std;
int n,m,x,y,a[100100];
vector<int>res,v[100100];
bool has_father[100100],flag=1,vis[100100];
void dfs(int node,int anc){
    if(!flag)return ;
    if(a[node]!=node&&a[node]!=anc){
        flag=0;
        return;
    }
    if(!vis[a[node]]){
        res.push_back(a[node]);
        vis[a[node]]=1;
    }
    anc=a[node];
    if(!v[node].size())return;
    for(int i=0;i<v[node].size();i++){
        dfs(v[node][i],anc);
    }
}
int main(){
    cin>>n>>m;
    for(int i=1;i<=m;i++){
        cin>>x>>y;
        v[x].push_back(y);
        has_father[y]=1;
    }
    for(int i=1;i<=n;i++)cin>>a[i];
    for(int i=1;i<=n;i++){
        if(!has_father[i]){
            dfs(i,1);
        }
        if(!flag)break;
    }
    if(!flag)cout<<"-1\n";
    else{
        cout<<res.size()<<endl;
        for(int i=res.size()-1;i>=0;i--){
            cout<<res[i]<<endl;
        }
    }
}
