#include<cstdio>
#include<cstring>
#include<queue>
#include<algorithm>
#include<iostream>
#include<string>
#include<map>
#include<set>
#include<vector>
using namespace std;
const int maxn = 1e6+7;
int n,m,d[maxn],key[maxn],a[maxn],flag;
vector<int> E[maxn],ans;
void dfs(int x,int p)
{
    for(int v=0;v<E[x].size();v++)
    {
        int u=E[x][v];
        if(u==p)continue;
        if(a[u]!=a[x]&&a[u]!=u)flag=1;
        dfs(u,x);
    }
    if(a[x]==x)ans.push_back(x);
}
int main()
{
    scanf("%d%d",&n,&m);
    for(int i=1;i<=m;i++)
    {
        int a,b;scanf("%d%d",&a,&b);
        E[a].push_back(b);
        E[b].push_back(a);
        d[b]++;
    }
    for(int i=1;i<=n;i++)
        scanf("%d",&a[i]);
    for(int i=1;i<=n;i++)
        if(!d[i])dfs(i,0);
    if(flag)
    {
        cout<<"-1"<<endl;
        return 0;
    }
    cout<<ans.size()<<endl;
    for(int i=0;i<ans.size();i++)
        cout<<ans[i]<<endl;
}
 	  	 		 	 						   		 	 	 	