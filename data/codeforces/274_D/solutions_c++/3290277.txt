#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<vector>

using namespace std;
const int N=100010;
struct A
{
	int id,x;
};
vector<A> a[N];
vector<int> in[N];
int num[N],p[N];
int q[N],v[N];

bool cmp(const A &a,const A &b)
{
	return a.x<b.x;
}

int main()
{
	int m,n,i,j;
	scanf("%d%d",&m,&n);
	for (i=1; i<=m; i++)
	{
		for (j=1; j<=n; j++) 
		{
			A x; scanf("%d",&x.x); x.id=j;
			in[j].push_back(x.x);
			if (x.x==-1) v[x.id]++;
			else {a[i].push_back(x); num[i]++;}
		}
		sort(a[i].begin(),a[i].end(),cmp);
	}
	for (i=1; i<=m; i++)
	{
		p[i]=0;
		for (j=0; j<num[i]; j++) 
		 if (a[i][j].x==a[i][0].x) v[a[i][j].id]++; else break;
	}
	int l=1,r=0;
	for (i=1; i<=n; i++) if (v[i]==m) q[++r]=i;
	while (l<=r)
	{
		int now=q[l]; l++;
		for (i=1; i<=m; i++)
		{
			if (in[now][i-1]==-1) continue;
			p[i]++;
			if (p[i]<num[i] && a[i][p[i]].x!=a[i][p[i]-1].x)
			{
				for (j=p[i]; j<num[i]; j++)
				 if (a[i][j].x==a[i][p[i]].x) 
				 {
				 	v[a[i][j].id]++;
				 	if (v[a[i][j].id]==m) q[++r]=a[i][j].id;
				 }
				else break;
			}
		}
	}
	if (r<n) printf("-1\n");
	else for (i=1; i<=n; i++) printf("%d%c",q[i],i==n?'\n':' ');
}
