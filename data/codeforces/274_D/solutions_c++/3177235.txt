#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <queue>
#include <string>
#include <set>
#include <iomanip>

using namespace std;

const int N = 1000006;

struct pp{
	int x, y;
	friend bool operator < (pp a, pp b)
	{
		return a.x < b.x;
	}
};

int n, m, ord[N], qd[N], prn[N], v[N], C, t, l[N];
pp a[N];
bool ok = 1;

void add(int x, int y)
{
	qd[++C] = y;
	prn[C] = l[x];
	l[x] = C;
}

void dfs(int x)
{
	v[x] = 1;
	for (int i = l[x]; i; i = prn[i])
		if (!v[qd[i]]) dfs(qd[i]);
		else if (v[qd[i]] == 1) ok = 0;
	v[x] = 2;
	ord[t++] = x;
}



int main()
{
	scanf("%d%d", &n, &m);
	int V = m;
	for (int i = 0; i < n; ++i)
	{
		for (int j = 0; j < m; ++j)
		{
			scanf("%d", &a[j].x);
			a[j].y = j;
		}
		sort(a, a + m);
		int w = -1;
		for (int j = 0; j < m; ++j)
		{
			if (a[j].x < 0) continue;
			if (j && a[j].x > a[j - 1].x && a[j - 1].x >= 0)
			{
				w = V;
				++V;
			}
			if (w != -1) add(w, a[j].y);
			add(a[j].y, V);
		}
		++V;
	}
	for (int i = 0; i < V; ++i)
		if (!v[i] && ok) dfs(i);
	if (!ok) printf("-1");
	else
	{
		for (int i = V - 1; i >= 0; --i)
			if (ord[i] < m)
				printf("%d ", ord[i] + 1);
	}
	return 0;
}