#include <cstdio>
#include <vector>
#include <algorithm>

#define f first
#define s second
#define mp make_pair

using namespace std;

const int maxn=1000010;

int n,m,a;
vector<pair<int,int> > v;
vector<int> graf[maxn]; 
vector<int> top;
int in[maxn+maxn];
bool bio[maxn],ciklus[maxn];

void prekini(){
	printf("-1");
	exit(0);
}

void dfs(int x){
	if(ciklus[x]) prekini();
	if(bio[x]) return ;
	bio[x]=1;
	ciklus[x]=1;
	for(int i=0;i<graf[x].size();i++) dfs(graf[x][i]);
	ciklus[x]=0;
	top.push_back(x);
}

int main (){
	
scanf("%d %d",&n,&m);

int d=m;

for(int i=0;i<n;i++){
	
	v.clear();
	
	for(int j=0;j<m;j++){
		scanf("%d",&a);
		v.push_back(mp(a,j));
	}

	sort(v.begin(),v.end());

	for(int j=m-1;j>=0;j--){
	
		if(v[j].f==-1) break;
		
		if(j<m-1 && v[j].f!=v[j+1].f) d++;
		
		graf[d].push_back(v[j].s);
		in[v[j].s]++;
		graf[v[j].s].push_back(d+1);
		in[d+1]++;
	}
	
	d+=3;
}	

for(int i=0;i<=d;i++)	
	if(in[i]==0 && bio[i]==0) dfs(i);

for(int i=0;i<=d;i++)
	if(top[i]<m) printf("%d ",top[i]+1);	
	
return 0;
}

/*
3 3
1 -1 -1
1 2 1
2 -1 1
*/


