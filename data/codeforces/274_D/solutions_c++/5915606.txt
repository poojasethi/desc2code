#include <algorithm>
#include <stdio.h>
#include <memory.h>
#include <vector>

using namespace std;

#define NN 110000

typedef pair<int, int> pii;

vector<int> adj[NN*2];
int rdeg[NN*2];
pii p[NN];
int q[NN*2], qf, qb;

int main() {
	int N, M, K, i, j, k, flag, u, v, deg;
	
	scanf("%d%d", &N, &M);
	K=M;
	for (i=0; i<N; i++) {
		for (j=0; j<M; j++) {
			scanf("%d", &p[j].first);
			p[j].second=j;
		}
		sort(p, p+M);
		flag=0;
		for (j=0; j<M; j=k) {
			for (k=j; k<M && p[j].first==p[k].first; k++);
			if (p[j].first==-1) continue;
			if (flag) {
				for (k=j; k<M && p[j].first==p[k].first; k++) {
					adj[K-1].push_back(p[k].second);
					rdeg[p[k].second]++;
				}
			}
			flag=1; K++;
			for (k=j; k<M && p[j].first==p[k].first; k++) {
				adj[p[k].second].push_back(K-1);
				rdeg[K-1]++;
			}
		}
	}
	
	qf=qb=0;
	for (i=0; i<K; i++) 
		if (rdeg[i]==0) q[qb++]=i;
	
	while (qf<qb) {
		u=q[qf++];
		deg=adj[u].size();
		for (i=0; i<deg; i++) {
			v=adj[u][i];
			if (--rdeg[v]==0) q[qb++]=v;
		}
	}
	
	if (qb<K) puts("-1");
	else {
		flag=0;
		for (i=0; i<K; i++) if (q[i]<M) {
			if (flag++) printf(" ");
			printf("%d", q[i]+1);
		}
		puts("");
	}
	
	return 0;
}