//By momo
#include <queue>
#include <cstdio>
#include <vector>
#include <algorithm>
#define N 300010
#define PB push_back
#define FOR(it, c) for(__typeof((c).begin())it=(c).begin();it!=(c).end();it++)
using namespace std;

queue<int> q;
vector<int> G[N];

int ind[N], per[N], pn;
struct node{ int v, i; }a[N];
bool comp(node x, node y){ return x.v < y.v; }

int main (){
    int n, m, k = 0; scanf("%d%d", &n, &m);
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++)
            scanf("%d", &a[j].v), a[j].i = j;
        sort(a, a + m, comp);
        for(int j = 0; j < m; j++) if(a[j].v != -1){
            if(j == 0 || a[j].v != a[j-1].v) k++;
            G[a[j].i].PB(m+k+1); G[m+k].PB(a[j].i);
        }
        k++;
    }
    for(int i = 0; i < m+k; i++) FOR(it, G[i]) ind[*it]++;
    for(int i = 0; i < m+k; i++) if(ind[i] == 0) q.push(i);
    while(!q.empty()){
        int p = q.front(); q.pop();
        if(p < m) per[pn++] = p;
        FOR(it, G[p]) if(--ind[*it] == 0) q.push(*it);
    }
    if(pn < m) return puts("-1"), 0;
    for(int i = 0; i < m; i++) printf("%d ", per[i]+1);
}