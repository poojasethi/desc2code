#include <iostream>
#include <algorithm>
#include <queue>
#define mm 200010
#define mn 400010
using namespace std;

queue<int> q;
int n,m,ans[mn],deg[mn],cnt,idx;
struct REC{int v,p;}a[mn];

struct EDGE{
    int pnt;
    EDGE *pre;
    EDGE(){}
    EDGE(int _pnt,EDGE *_pre):pnt(_pnt),pre(_pre){}
}Edge[mm],*SP=Edge,*edge[mn];

inline void addedge(int a,int b){
    edge[a]=new(++SP)EDGE(b,edge[a]);
    deg[b]++;
}

inline bool cmp(REC a,REC b){return a.v<b.v;}

int main(){
    cin>>n>>m;
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            cin>>a[j].v;
            a[j].p=j;
        }
        sort(a,a+m,cmp);
        for(int j=0;j<m;j++)
            if(a[j].v!=-1){
                if(!j || a[j].v!=a[j-1].v) cnt++;
                addedge(a[j].p,m+cnt+1);
                addedge(m+cnt,a[j].p);
            }
        cnt++;
    }
    for(int i=0;i<m+cnt;i++)
        if(!deg[i]) q.push(i);
    while(!q.empty()){
        int i=q.front();q.pop();
        if(i<m) ans[++idx]=i;
        for(EDGE *j=edge[i];j;j=j->pre)
            if(!--deg[j->pnt]) q.push(j->pnt);
    }
    if(idx<m) cout<<-1;
    else for(int i=1;i<=m;i++) 
        cout<<ans[i]+1<<" ";
    return 0;
}