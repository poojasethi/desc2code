#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

const int MAX_N = 400000 + 2;

vector <int> adj[MAX_N];
int m, n;
int N;
pair<int, int> b[MAX_N];

int mark[MAX_N];
int stck[MAX_N];
int head;
int pos[MAX_N];

void dfs(int v)
{
	mark[v] = 1;
	for (int i=0; i<(int)adj[v].size(); ++i)
	{
		int u = adj[v][i];
		if ( !mark[u] )	dfs(u);
	}
	pos[v] = head;
	stck[head++] = v;
}

int main()
{
	ios::sync_with_stdio(false);
	cin >> m >> n;
	N = n;
	for (int k=0; k<m; ++k)
	{
		for (int j=0; j<n; ++j)
		{
			cin >> b[j].first; b[j].second=j;
		}
		sort(b, b+n);
		for (int i=0, j=0; i<n; )
		{
			for (; j<n && b[j].first==b[i].first; ++j)
				if ( b[j].first != -1 )
					adj[N].push_back(b[j].second);
			++N;
			for (; i<j; ++i)
				if ( j<n && b[i].first!=-1 )
					adj[b[i].second].push_back(N);
		}
	}
	++N;
	for (int i=0; i<N; ++i)
		if ( !mark[i] ) dfs(i);
	for (int i=0; i<N; ++i)
		for (int j=0; j<(int)adj[i].size(); ++j)
			if ( pos[adj[i][j]] > pos[i] )
			{
				cout << -1 << endl;
				return 0;
			}
	for (; head--; )
		if ( stck[head]<n )
			cout << stck[head]+1 << ' ';
	cout << endl;
	return 0;
}

