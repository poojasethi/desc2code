#include<stdio.h>
#include<algorithm>
#include<vector>
typedef struct{int x,i;}ele;
std::vector<ele>r[100514];
std::vector<int>o[100514],ans;
int cmp(ele a,ele b){return a.x<b.x;}
int n,m;
int od[100514];
int qs[100514];
int qss[100514];
void push(int i){
	if(qs[i]==r[i].size())
		return;
	int tx=r[i][qs[i]].x;
	for(;qs[i]<r[i].size()&&r[i][qs[i]].x==tx;qs[i]++){
		int ti=r[i][qs[i]].i;
		if(--od[ti])
			continue;
		ans.push_back(ti);
		for(int j=0;j<n;j++){
			if(o[j][ti]!=-1){
				qss[j]++;
				}
			}
		}
	for(int j=0;j<n;j++){
		if(qss[j]==qs[j]){
			push(j);
			}
		}
	}
int main(){
	scanf("%d %d",&n,&m);
	for(int j=0;j<m;j++)
		od[j]=n;
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			int x;
			scanf("%d",&x);
			if(x!=-1)
				r[i].push_back((ele){x,j});
			o[i].push_back(x);
			if(x==-1)
				od[j]--;
			}
		std::sort(r[i].begin(),r[i].end(),cmp);
		qs[i]=qss[i]=0;
		}
	for(int j=0;j<m;j++){
		if(od[j]==0)
			ans.push_back(j);
		}
	int flag=n;
	for(int i=0;i<n;i++){
		if(qs[i]==r[i].size())
			continue;
		push(i);
		break;
		}
	if(ans.size()!=m){
		puts("-1");
		return 0;
		}
	for(int i=0;i<ans.size();i++){
		printf("%d ",ans[i]+1);
		}
	return 0;
	}
