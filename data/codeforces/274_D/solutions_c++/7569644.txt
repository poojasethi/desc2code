#include<cstdio>
#include<algorithm>
#define S 800005
using namespace std;
struct arr{int x,id;}uni[S],a[S];
struct Adj{int go,next;}A[S];
int end[S],q[S],cnt,o,num[S],adj,n,m,i,j,tot,last;
inline int cmp(const arr &a,const arr &b){return a.x<b.x;}
void add(int u,int v)
{
  A[++adj].go=v;A[adj].next=end[u];end[u]=adj;num[v]++;
}
inline int bfs()
{
  int h=0,t=0;
  for (int i=1;i<=tot;i++)
    if (!num[i]) q[++t]=i;
  while (h<t)
  {
    int k=q[++h];
    for (int i=end[k];i;i=A[i].next)
    {
      int go=A[i].go;num[go]--;
      if (!num[go]) q[++t]=go;
    }
  }
  return t==tot;
}
int main()
{
  scanf("%d%d",&n,&m);
  for (i=1;i<=n;i++)
    for (j=1;j<=m;j++)
      scanf("%d",&a[++cnt].x),a[cnt].id=j;
  tot=m;
  for (i=1;i<=n;i++)
  {
    o=(i-1)*m;last=0;
    sort(a+o+1,a+o+m+1,cmp);
    for (j=o+1;j<=o+m;j++)
    {
      if (a[j].x==-1) continue;
      if (a[j].x==a[j-1].x&&j>o+1)
        add(a[j].id,tot);
      else 
      {
        if (a[j-1].x!=-1&&j>o+1) last=tot;
        add(a[j].id,++tot);
      }
      if (last) add(last,a[j].id);
    }
  }
  if (!bfs()) {puts("-1");return 0;}
  for (i=1;i<=tot;i++)
    if (q[i]<=m) printf("%d ",q[i]);
  return 0;
}
