#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include<vector>
#include<queue>
#include<algorithm>
#include<iostream>
#include<cstdio>
#define M 100100
using namespace std;

int n,m,join[10*M],cnt,ans[M],tot;
vector<int>v[M];
queue<int>q;

struct node{int val,no;}rec[M];

bool cmp(node a,node b){return a.val<b.val;}

void add(int x,int y){join[y]++;v[x].push_back(y);}

int main()
{
    cin>>n>>m;
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++) scanf("%d",&rec[j].val),rec[j].no=j;
		sort(rec+1,rec+m+1,cmp);
		for(int j=1;j<=m;j++)
		{
			if(rec[j].val<0) continue;
			if(j==1||rec[j].val!=rec[j-1].val) cnt++;
			add(m+cnt,rec[j].no);add(rec[j].no,m+cnt+1);	
		}
		cnt++;
	}
	for(int i=1;i<=m+cnt;i++)if(!join[i]) q.push(i);
	while(!q.empty())
	{
		int t=q.front();q.pop();
		if(t<=m) ans[++tot]=t;
		for(int i=0;i<v[t].size();i++)
		{
			int tmp=v[t][i];
			join[tmp]--;
			if(!join[tmp]) q.push(tmp);
		}
	}
	if(tot<m) {cout<<-1;return 0;}
	for(int i=1;i<=m;i++)printf("%d ",ans[i]);
    return 0;
}

                                                                                                                                          