#include <cstdio>
#include <cstring>
#include <algorithm>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define FOD(i,s,e) for (int i=(s)-1; i>=(e); i--)
#define CLR(a,x) memset(a, x, sizeof(a))
#define EXP(i,l) for (int i=(l); i; i=qn[i])
#define N 1000005
using namespace std;

struct dat{
	int x, y;
	bool operator < (dat const &T) const{return x < T.x;}
};

int n, m, t, ed, w, ok, V;
int order[N], v[N], u[N], l[N], qd[N], qn[N];
dat a[N];


void bd(int x, int y){
	qd[++ed] = y, qn[ed] = l[x], l[x] = ed;
}

void dfs(int x){
	v[x] = 1;
	u[x] = 1;
	EXP(i,l[x]){
		if (!v[qd[i]]) dfs(qd[i]);
		else if (u[qd[i]]) ok = 0;
	}
	u[x] = 0;
	order[t++] = x;
}

int main(){
	scanf("%d%d", &n, &m);
	V = m;
	FOR(i,0,n){
		FOR(j,0,m) scanf("%d", &a[j].x), a[j].y = j;
		sort(a, a + m);
		w = -1;
		FOR(j,0,m){
			if (a[j].x < 0) continue;
			if (j && a[j].x != a[j-1].x && a[j-1].x >= 0){
				w = V;
				++V;
			}
			if (w != -1) bd(w, a[j].y);
			bd(a[j].y, V);
		}
		++V;
	}
	
	ok = 1;
	t = 0;
	FOR(i,0,V) if (!v[i]) dfs(i);
	if (!ok) puts("-1");
	else{
		FOD(i,V,0) if (order[i] < m) printf("%d ", order[i] + 1);
	}
	return 0;
}
