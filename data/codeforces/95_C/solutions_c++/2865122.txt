#include<iostream>
#include<queue>
#include<set>
#include<vector>
using namespace std;
vector<long long>  f[2000];
vector<long long>  e[2000];
vector<long long>g[2000];
set<pair<long long,long long> > q;
long long dist[2000];
long long MAX;
int n,m;
int x,y;
long long c[2000];
void dij(int v)
{
	for(int i=1;i<=n;i++)
	dist[i]=MAX;
	dist[v]=0;
	q.insert(make_pair(0,v));
	while(!q.empty())
	{
		long long u=q.begin()->second;
		long long b=q.begin()->first;
		q.erase(q.begin());
		for(int i=0;i<e[u].size();i++)
	    {
			long long ver=e[u][i];
			long long val=f[u][i];
			if(dist[ver]>dist[u]+val){
			dist[ver]=dist[u]+val; 
			q.insert(make_pair(dist[ver],ver));
		}
	}
}
}
int main()
{
	MAX=1LL << 60LL;
	cin>>n>>m;
	cin>>x>>y;
	for(int i=0;i<m;i++)
	{
		long long o,p,q;
		cin>>o>>p>>q;
		e[o].push_back(p);
		f[o].push_back(q);
		e[p].push_back(o);
		f[p].push_back(q);
	}
	for(int i=1;i<=n;i++)
	{
		dij(i);
		long long t;
		cin>>t>>c[i];
		for(int j=1;j<=n;j++)
		{
			if(i!=j && dist[j]<=t)
			g[i].push_back(j);
		}
	}
		for (int i = 1; i <= n; i++) {
         e[i].clear();
         f[i].clear();
        for (int j = 0; j < g[i].size(); ++j) {
            e[i].push_back(g[i][j]);
            f[i].push_back(c[i]);
        }
    }
    dij(x);
    if(dist[y]!=MAX)   cout<<dist[y];else cout<<"-1";
    return 0;
}
