#include <bits/stdc++.h>
#define f first
#define s second
#define ii pair<int,int>
using namespace std;
typedef int intbackup;
#define int long long
vector<ii> radj[1001], adj[1001];
priority_queue<ii,vector<ii>,greater<ii> > q;
int dist[1001];
void urx(int start){
    memset(dist,63,sizeof dist);
    q.push(ii(0,start));dist[start]=0;
    while(!q.empty()){
        int node = q.top().s;
        int cost = q.top().f;
        q.pop();
        if(dist[node]>=cost)
            for(int i=0; i<adj[node].size(); i++)
                if(dist[adj[node][i].f]>cost+adj[node][i].s){
                   dist[adj[node][i].f]=cost+adj[node][i].s;
                   q.push(ii(dist[adj[node][i].f],adj[node][i].f));
                }
    }
}
intbackup main(){
    int x, y, n, m; cin >> n >> m >> x >> y;
    for(int i=0; i<m; i++){
        int u, v, w; cin >> u >> v >> w;
        adj[u].push_back(ii(v,w));
        adj[v].push_back(ii(u,w));
    }
    for(int i=1; i<=n; i++){
        int u, v;
        cin >> u >> v;
        urx(i);
        for(int j=1; j<=n; j++){
            if(dist[j]<=u)
                radj[i].push_back(ii(j,v));
        }
    }for(int i=0; i<1001; i++) adj[i]=radj[i];urx(x);
    cout << ((dist[y]>(1LL<<59))?-1:dist[y]) << '\n';
}


