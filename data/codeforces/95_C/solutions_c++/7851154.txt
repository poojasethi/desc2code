#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 2010
#define M 1000000
#define inf 1100000000
#define int64 long long
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,x,y,z,S,T,t;
int gg[N][N],g[M],a[N],b[N],next[N],head[N],ff[N],ti[N],c[N];
int64 h[N];
inline void add(int x,int y,int z) {
	a[++t]=y,b[t]=z,next[t]=head[x],head[x]=t;
	a[++t]=x,b[t]=z,next[t]=head[y],head[y]=t;
}
void bfs(int x) {
	int l,r,v;
	For(v,1,n) gg[i][v]=inf;
	g[l=r=1]=x; gg[i][x]=0;
	for (;l<=r;l++) {
		int A=g[l];
		ff[A]=0;
		for (v=head[A];v;v=next[v]) {
			int B=gg[i][A]+b[v],C=a[v];
			if (B<gg[i][C]) {
				gg[i][C]=B;
				if (!ff[C]) ff[C]=1,g[++r]=C;
			}
		}
	}
}
int main() {
	scanf("%d%d%d%d",&n,&m,&S,&T);
	For(i,1,m) {
		scanf("%d%d%d",&x,&y,&z);
		add(x,y,z);
	}
	For(i,1,n) scanf("%d%d",&ti[i],&c[i]);
	For(i,1,n) bfs(i);
	{
		int l,r,v;
		memset(h,120,sizeof(h));
		g[l=r=1]=S; h[S]=0;
		for (;l<=r;l++) {
			int A=g[l];
			ff[A]=0;
			For(i,1,n) if (gg[A][i]<=ti[A]) {
				if (h[i]>h[A]+c[A]) {
					h[i]=h[A]+c[A];
					if (!ff[i]) ff[i]=1,g[++r]=i;
				}
			}
		}
	}
	printf("%I64d\n",h[T]>1e15?-1:h[T]);
	return 0;
}
