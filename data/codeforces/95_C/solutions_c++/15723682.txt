#include<bits/stdc++.h>
#define mk make_pair
#define N 1005
using namespace std;
typedef long long LL;
typedef pair<LL,int>Pair;
multiset<Pair>G;
int a[N][N],b[N][N],dist[N],cost[N],flag[N];
LL f[N][N],g[N];
int n,m,S,T,i,x,y,z;
void add(int u,int v,int w){
  a[u][++*a[u]]=v;
  b[u][++*b[u]]=w;
}
void work(int S,LL *f){
  for (int i=1;i<=n;i++) f[i]=1e18;
  G.insert(mk(f[S]=0,S));
  while (!G.empty()){
    Pair now=*G.begin();
    int x=now.second;
    G.erase(G.begin());
    if (now.first!=f[x]) continue;
    for (int i=1;i<=*a[x];i++){
      int y=a[x][i];
      if (f[x]+b[x][i]<f[y])
        f[y]=f[x]+b[x][i],G.insert(mk(f[y],y));
    }
  }
}
LL DIJ(){
  for (int i=0;i<=n;i++) g[i]=1e18;g[S]=0;
  for (int C=1;C<=n;C++){
    int k=0;
    for (int i=1;i<=n;i++)
      if (g[i]<g[k]&&!flag[i]) k=i;
    if (k==T) return g[k];
    if (!k) return -1;flag[k]=1;
    for (int i=1;i<=n;i++)
      if (f[k][i]<=dist[k])
        if (g[k]+cost[k]<g[i])
          g[i]=g[k]+cost[k];
  }
}
int main(){
  scanf("%d%d",&n,&m);
  scanf("%d%d",&S,&T);
  for (i=1;i<=m;i++)
    scanf("%d%d%d",&x,&y,&z),add(x,y,z),add(y,x,z);
  for (i=1;i<=n;i++)
    scanf("%d%d",&dist[i],&cost[i]);
  for (i=1;i<=n;i++)
    work(i,f[i]);
  printf("%I64d\n",DIJ());
}