#include<stdio.h>
#include<queue>
#include<vector>
#define inf 1ll<<60
using namespace std;
int n;
struct shortway
{
	int visit[1111];
	__int64 f[1111];
	queue <int > q;
   vector<pair <int ,__int64> > v[1111];
   int add (int a,int b,__int64 w)
   {
   	v[a].push_back(make_pair(b,w));
   
   }	
   int spfa(int t)
   {
   	int i;
   	for(i=1;i<=n;i++)
   	{
   	visit[i]=0;
   	f[i]=inf;	
   	
	   }
	   q.push(t);
	   visit[t]=1;
	   f[t]=0;
	   while(!q.empty())
	   {
   		int  v1=q.front();
   		q.pop();
   		
   		for(i=0;i<v[v1].size();i++)
   		{
		   	int u=v[v1][i].first;
		   	if(f[u]>f[v1]+v[v1][i].second)
		   	{
		   		f[u]=f[v1]+v[v1][i].second;
	   			if(!visit[u])
		   	    {
	   			visit[u]=1;
	   			q.push(u);
	   	    	}
	   		}
		   	
	    }
	    visit[v1]=0;
   	  }
   
   }
   
}g1,g2;
int main()
{
	int x,y;
	int m;
	scanf("%d%d%d%d",&n,&m,&x,&y);
   int i;
	for(i=0;i<m;i++)
	{
		int a,b;
		__int64 w;
		scanf("%d%d%I64d",&a,&b,&w);
		g1.add(a,b,w);
		g1.add(b,a,w);
	}
	for(i=1;i<=n;i++)
	{
		g1.spfa(i);
		int j;
		__int64 t,c;
		scanf("%I64d%I64d",&t,&c);
		for(j=1;j<=n;j++)
		{
			//printf("\n%d %d %I64d\n",i,j,g1.f[j]);
			if(g1.f[j]<=t)
		   {
			if(i!=j)
		    g2.add(i,j,c);
	    	}	
		}
	
		
	}
	g2.spfa(x);
//	f//or(i=1;i<=n;i++)
	//printf("%I64d ",g2.f[i]);
	if(g2.f[y]==inf)
	printf("-1\n");
	else printf("%I64d\n",g2.f[y]);
}