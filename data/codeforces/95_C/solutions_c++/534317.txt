#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;

const int maxn=1000+10;
const long long oo=1000000000000000000LL;

vector< pair<int,int> > e[maxn];
long long dist[maxn][maxn];
long long opt[maxn];
bool flag[maxn];
int que[maxn*maxn];
int n,m,s,t;
int limit[maxn],cost[maxn];

int main()
{
	scanf("%d%d%d%d",&n,&m,&s,&t);
	for (int i=0,a,b,c;i<m;i++)
	{
		scanf("%d%d%d",&a,&b,&c);
		e[a].push_back(make_pair(b,c));
		e[b].push_back(make_pair(a,c));
	}

	for (int i=1;i<=n;i++) scanf("%d%d",&limit[i],&cost[i]);

	for (int i=1;i<=n;i++)
	{
		for (int j=1;j<=n;j++) dist[i][j]=oo,flag[j]=1;
		dist[i][i]=0;que[0]=i;flag[i]=0;
		for (int l=0,r=0;l<=r;flag[que[l++]]=1)
		for (int j=0;j<e[que[l]].size();j++)
		if (dist[i][e[que[l]][j].first]>dist[i][que[l]]+e[que[l]][j].second)
		{
			dist[i][e[que[l]][j].first]=dist[i][que[l]]+e[que[l]][j].second;
			if (flag[e[que[l]][j].first])
			{
				que[++r]=e[que[l]][j].first;
				flag[que[r]]=0;
			}
		}
	}

	for (int i=1;i<=n;i++) opt[i]=oo,flag[i]=1;
	opt[s]=0;que[0]=s;flag[s]=0;
	for (int l=0,r=0;l<=r;flag[que[l++]]=1)
	for (int i=1;i<=n;i++)
	if (dist[que[l]][i]<=limit[que[l]] &&
		opt[i]>opt[que[l]]+cost[que[l]])
	{
		opt[i]=opt[que[l]]+cost[que[l]];
		if (flag[i])
		{
			que[++r]=i;flag[i]=0;
		}
	}
	if (opt[t]==oo) printf("-1\n");
	else printf("%I64d\n",opt[t]);
}
