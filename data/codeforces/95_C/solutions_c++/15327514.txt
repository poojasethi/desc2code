#include<stdio.h>
#include<algorithm>
#define inf 1000000000000000000ll
#define N 1005
#define M 2000005
using namespace std;
int i,j,k,l,s,n,m,x,y,z,X,Y;
struct node {
    int tot,last[N],next[M],val[M],to[M];
    unsigned long long dis[N];
    int q[N*1000],e[N];
    inline void add(int o,int p,int w) {
        next[++tot]=last[o]; last[o]=tot; to[tot]=p; val[tot]=w;
    }
    inline void spfa(int o) {
        for (int i=1;i<=n;i++) dis[i]=inf;
        dis[o]=0; e[o]=1; int l=0,r=1; q[1]=o;
        while (l<r) {
            int k=q[++l];
            for (int i=last[k];i;i=next[i]) {
                int gt=to[i];
                if (dis[gt]>dis[k]+1ll*val[i]) {
                    dis[gt]=dis[k]+1ll*val[i];
                    if (!e[gt]) e[q[++r]=gt]=1;
                }
            }
            e[k]=0;
        }
    }
}A,B;
struct node1 {
    int x,y;
}b[N];
int main() {
    scanf("%d%d",&n,&m);
    scanf("%d%d",&X,&Y);
    for (i=1;i<=m;i++) scanf("%d%d%d",&x,&y,&z),A.add(x,y,z),A.add(y,x,z);
    for (i=1;i<=n;i++) scanf("%d%d",&b[i].x,&b[i].y);
    for (i=1;i<=n;i++) {
        A.spfa(i);
        for (j=1;j<=n;j++) if (A.dis[j]<=b[i].x) B.add(i,j,b[i].y);
    }
    B.spfa(X);
    if (B.dis[Y]==inf) return puts("-1"),0;
    printf("%I64d\n",B.dis[Y]);
}
        