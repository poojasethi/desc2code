//program task_d

#include<iostream>
#include<cstdio>

using namespace std;

struct graph
{
  int data,weight;
  graph *next;
};

int n;
const long long inf=(long long)1<<60;
long long dist[1001][1001];
graph *g[1001];

void add(int x,int y,int z)
{
  graph *p;p=new graph;p->data=y;p->weight=z;p->next=g[x];g[x]=p;
}

void spfa(int x)
{
  int i,f,r;
  int queue[1001];
  bool flag[1001];
  for(i=1;i<=n;i++)dist[x][i]=inf;dist[x][x]=0;
  f=0;r=1;queue[1]=x;
  for(i=1;i<=n;i++)flag[i]=false;flag[x]=true;
  while(f!=r)
    {
	  f++;if(f>n)f=1;
	  int v=queue[f];flag[v]=false;graph*p;p=g[v];
	  while(p!=NULL)
	    {
		  int u=p->data;
		  if(dist[x][v]+p->weight<dist[x][u])
		    {
			  dist[x][u]=dist[x][v]+p->weight;
			  if(!flag[u]){r++;if(r>n)r=1;flag[queue[r]=u]=true;}
			}
		  p=p->next;
		}
	}
}

int main()
{
  int m,s,t,i,j;
  int max[1001],price[1001];
  scanf("%d%d%d%d",&n,&m,&s,&t);
  for(i=1;i<=n;i++)g[i]=NULL;
  while(m--){int x,y,z;scanf("%d%d%d",&x,&y,&z);add(x,y,z);add(y,x,z);}
  for(i=1;i<=n;i++)scanf("%d%d",&max[i],&price[i]);
  for(i=1;i<=n;i++)spfa(i);
  for(i=1;i<=n;i++)g[i]=NULL;
  for(i=1;i<=n;i++)for(j=1;j<=n;j++)if(dist[i][j]<=max[i])add(i,j,price[i]);
  spfa(s);if(dist[s][t]==inf)printf("-1\n");else printf("%I64d\n",dist[s][t]);
  return 0;
}
