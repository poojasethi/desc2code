#include<iostream>
#include<queue>
#include<vector>
using namespace std;
#define Z (1000)
#define inf (1LL<<61)

typedef long long ll;
typedef pair<ll,int> ii;
vector<ii> adj[Z];
ll dist[Z];
void dij(int s) {
    fill(dist,dist+Z,inf);
    priority_queue<ii> pq;
    dist[s]=0;
    pq.push(ii(0,s));
    while(!pq.empty()) {
        int a=pq.top().second;
        ll d=-pq.top().first;
        pq.pop();
        if(d!=dist[a]) {
            continue;
        }
        for(int i=0;i<adj[a].size();i++) {
            int b=adj[a][i].first;
            ll t=d+adj[a][i].second;
            if(t<dist[b]) {
                dist[b]=t;
                pq.push(ii(-t,b));
            }
        }
    }
}
vector<ii> adj2[Z];
int main() {
    int N,M,S,E;
    cin>>N>>M>>S>>E;
    S--;E--;
    for(int i=0;i<M;i++) {
        int a,b,d;
        cin>>a>>b>>d;
        a--;b--;
        adj[a].push_back(ii(b,d));
        adj[b].push_back(ii(a,d));
    }
    for(int i=0;i<N;i++) {
        int d,c;
        cin>>d>>c;
        dij(i);
        for(int j=0;j<N;j++) {
            if(dist[j]<=d) {
                adj2[i].push_back(ii(j,c));
            }
        }
    }
    for(int i=0;i<N;i++) {
        adj[i]=adj2[i];
    }
    dij(S);
    cout<<(dist[E]!=inf?dist[E]:-1);
}