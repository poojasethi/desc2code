#pragma warning(disable :4786)
#include<cstdio>
#include<vector>
#include<queue>
#include<cstring>
using namespace std;
#define ll __int64
const int N=1001;
bool vis[N];
int s,e,n,m;
ll d[N];
vector<pair<int,int> >edg[N],dis[N];
priority_queue<pair<ll,int>,vector<pair<ll,int> >,greater<pair<ll,int> > >q;
int main()
{
	int i,j,a,b,c,x,y;
	ll min;
	scanf("%d%d%d%d",&n,&m,&s,&e);
	for(i=0;i<m;i++)
	{
		scanf("%d%d%d",&a,&b,&c);
		edg[a].push_back(make_pair(b,c));
		edg[b].push_back(make_pair(a,c));
	}
	for(i=1;i<=n;i++)
	{
		scanf("%d%d",&a,&b);
		memset(d,127,sizeof(d));
		d[i]=0;
		q.push(make_pair(0,i));
		while(!q.empty())
		{
			min=q.top().first;
			x=q.top().second;
			q.pop();
			if(x!=i)
				dis[i].push_back(make_pair(x,b));
			for(j=0;j<edg[x].size();j++)
			{
				c=edg[x][j].first;
				y=edg[x][j].second;
				if(min+y<d[c])
				{
					d[c]=min+y;
					if(d[c]<=a)
						q.push(make_pair(d[c],c));
				}
			}
		}
	}
	memset(d,127,sizeof(d));
	memset(vis,0,sizeof(vis));
	d[s]=0;
	q.push(make_pair(0,s));
	while(!q.empty())
	{
		min=q.top().first;
		x=q.top().second;
		q.pop();
		if(x==e)break;
		for(i=0;i<dis[x].size();i++)
		{
			b=dis[x][i].first;
			c=dis[x][i].second;
			if(d[b]>min+c)
			{
				d[b]=min+c;
				q.push(make_pair(d[b],b));
			}
		}
	}
	if(d[e]==d[0])
		printf("-1\n");
	else
		printf("%I64d\n",d[e]);
	return 0;
}
  				   			 	  	       	     	