#include <cmath>

#include <iostream>

using namespace std;


struct POINTS {
    int x, y;
};

const int N = 1005;

int n, m, q;
int edge[N][N];
POINTS fence;
POINTS p[N];

double dist(POINTS a, POINTS b) {
    return sqrt(1LL * (b.x - a.x) * (b.x - a.x) + 1LL * (b.y - a.y) * (b.y - a.y));
}


int main() {
    cin >> n >> m >> q;
    for (int i = 1; i <= n; ++i)
        cin >> p[i].x >> p[i].y;

    for (int i = 1; i <= m; ++i) {
        int r;
        cin >> r >> fence.x >> fence.y;
        for (int j = 1; j <= n; ++j)
            if (dist(p[j], fence) < r)
                edge[i][j] = 1;
    }

    while (q--) {
        int x, y;
        cin >> x >> y;
        
        int ans = 0;
        for (int i = 1; i <= m; ++i)
            ans += edge[i][x] ^ edge[i][y];

        cout << ans << "\n";
    }

    return 0;
}
