#include <iostream>
#include <algorithm>
#include <bitset>

using namespace std;

#define f(i,a,b) for(int i=a;i<b;i++)
#define fr(i,n)  f(i,0,n)
long long sqr(long long a){ return a*a; }

int main(){
	int n, m, k, a, b, P[1010][2], C[1010][2], R[1010];
	bitset<1010> has[1010];
	cin>>n>>m>>k;
	fr(i, n) cin>>P[i][0]>>P[i][1];
	fr(i, m) cin>>R[i]>>C[i][0]>>C[i][1];
	fr(i, m) f(j, i+1, m) if (R[i] < R[j]){
		swap(R[i],R[j]);
		swap(C[i][0], C[j][0]);
		swap(C[i][1], C[j][1]);
	}
	fr(i, n) fr(j, m) has[i].set(j, sqr(P[i][0] - C[j][0]) + sqr(P[i][1] - C[j][1]) < sqr(R[j]));
	fr(it, k){
		cin>>a>>b;
		cout<<has[a-1].count() + has[b-1].count() - 2*(has[a-1]&has[b-1]).count()<<endl;
	} 
	return 0;
}