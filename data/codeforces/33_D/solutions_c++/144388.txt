#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<vector>
#include<set>
#include<map>
#include<utility>
#include<complex>
using namespace std;
typedef complex<double> point;
int n,m,k;
const int H=1000+10;
point a[H];
vector<int> num[H];
int main(){
	cin>>n>>m>>k;	
	int x,y,r;
	for(int i=1;i<=n;i++){
		cin>>x>>y;
		a[i]=point(x,y);
	}
	for(int i=0;i<m;i++){
		cin>>r>>x>>y;
		point p=point(x,y);
		for(int j=1;j<=n;j++){
			if(abs(a[j]-p)<r){
				num[j].push_back(i);
			}
		}
	}
	for(int i=0;i<k;i++){
		cin>>x>>y;
		int counter=0,sounter=0,tedad=0;;
		while(counter<num[x].size() && sounter<num[y].size()){
			if(num[x][counter]==num[y][sounter]){
				tedad++;
				counter++;
				sounter++;
				continue;
			}
			if(num[x][counter]<num[y][sounter]){
				counter++;
			}else{
				sounter++;
			}
		}
		cout<<num[x].size()+num[y].size()-2*tedad<<endl;
	}
	return 0;
}
