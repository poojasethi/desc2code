#include <cstdio>
#include <bitset>

using namespace std;

typedef struct Point {
	int x, y;
} Point;

typedef struct Fence {
	int r, x, y;
} Fence;

typedef bitset<1000> BSet;

Point cps[1000];
Fence fences[1000];
BSet cset[1000];

int isInnerFence(int c, int f){
	long long dx = cps[c].x - fences[f].x, dy = cps[c].y - fences[f].y, r = fences[f].r;
	return ((dx * dx + dy * dy) <= (r * r)) ? 1 : 0;
}

int main(){
	int n, m, k;
	scanf("%d%d%d", &n, &m, &k);
	for(int i = 0; i < n; ++i){ scanf("%d%d", &(cps[i].x), &(cps[i].y)); }
	for(int i = 0; i < m; ++i){ scanf("%d%d%d", &(fences[i].r), &(fences[i].x), &(fences[i].y)); }
	for(int i = 0; i < n; ++i){
		for(int j = 0; j < m; ++j){
			cset[i].set(j, isInnerFence(i, j));
		}
	}
	while(k--){
		int a, b;
		scanf("%d%d", &a, &b);
		BSet tmp = cset[a - 1] ^ cset[b - 1];
		printf("%d\n", tmp.count());
	}
	return 0;
}
