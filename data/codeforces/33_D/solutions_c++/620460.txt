#include <iostream>
#include <vector>
#include <complex>

using namespace std;

typedef complex<double> point;

point llegeix()
{
  double x,y;
  cin>>x>>y;
  return point(x,y);
}

struct circulo {
  point c;
  double r;
};

bool puntoencirculo(point p,circulo c)
{
  return abs(c.c-p)<c.r;
}

int main()
{
  int n,m,k;
  cin>>n>>m>>k;
  vector<point> u(n);
  for (int i=0;i<n;i++) u[i]=llegeix();
  vector<circulo> v(m);
  for (int i=0;i<m;i++) {
    cin>>v[i].r;
    v[i].c=llegeix();
  }
  vector<vector<bool> > esta(n,vector<bool> (m));
  for (int i=0;i<n;i++) {
    for (int j=0;j<m;j++) {
      esta[i][j]=puntoencirculo(u[i],v[j]);
    }
  }
  for (int i=0;i<k;i++) {
    int a,b;
    cin>>a>>b;a--;b--;
    int p=0;
    vector<bool> va=esta[a];
    vector<bool> vb=esta[b];
    for (int k=0;k<m;k++)
      if (va[k]!=vb[k])
	p++;
    cout<<p<<endl;;
  }
}
