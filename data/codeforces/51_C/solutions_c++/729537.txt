#include <iostream>
#include <cmath>
#include <cstdio>
#include <algorithm>

using namespace std;


long double x[1000100], p1, p2, p3;
int n;
bool can(long double d ,bool print) {
	int next = 0;
	p1 = x[next]+d;
	while((p1+d>x[next]-10e-9 or fabs(p1+d-x[next])<10e-9) and next<n-1) next++;
	p2 = x[next]+d;
	while((p2+d>x[next]-10e-9 or fabs(p2+d-x[next])<10e-9) and next<n-1) next++;
	p3 = x[next]+d;
	if(p3+d>x[n-1]-10e-9 or fabs(p3+d-x[n-1])<10e-9) return true;
	return false;
}
int main () {
	cin >> n; 
	for(int i  = 0; i < n; i++) cin >> x[i];
	sort(x,x+n);
	long double lo = 0.;
	long double hi = 10e9;
	for(int i = 0; fabs(lo-hi)>10e-9; i++) {
		long double mid = (lo+hi)/2.;
		if(can(mid,false))
			hi = mid;
		else
			lo = mid;
	}
	can(lo+10e-9,false);
	printf("%.6lf\n%.6lf %.6lf %.6lf\n", (double)lo+10e-9, (double)p1+10e-9, (double)p2+10e-9, (double)p3+10e-9);
	return 0;
}
