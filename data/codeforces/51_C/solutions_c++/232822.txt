#include <iostream>
#include <cstdio>
#include <algorithm>
using namespace std;

typedef unsigned long long int ull;

int n;
ull h[220000];

ull p1, p2, p3;
ull can (ull d)
{
	p1 = p2 = p3 = 1;
	p1 = h[0] + d;
	int i = 0;
	ull r = p1 + d;
	for (; i < n && h[i] <= r; ++i);
	if (i == n) return 1;
	p2 = h[i] + d;
	r = p2 + d;
	for (; i < n && h[i] <= r; ++i);
	if (i == n) return 1;
	p3 = h[i] + d;
	r = p3 + d;
	for (; i < n && h[i] <= r; ++i);
	if (i < n) return 0;
	return 1;
}

int main ()
{
	cin >> n;
	for (int i = 0; i < n; ++i) cin >> h[i];
	sort (h, h + n);
	for (int i = 0; i < n; ++i) h[i] *= 2;
	ull l = 0, r = 1000000000, m;
	while (r - l > 1)
	{
		m = (l + r) / 2;
		if (can (m)) r = m;
		else l = m;
	}
	
	if (can (0)) r = 0;
	
	can (r);
	printf ("%0.6lf\n", r / 2.0);
	printf ("%0.6lf %0.6lf %0.6lf\n", p1 / 2.0, p2 / 2.0, p3 / 2.0);
	return 0;
}
