#include<cstdio>
const int N = 3050;
int circle[N];
int fa[N];
bool isc[N],ever[N];
int tot[N][N];
int n;
int map[N][N];
int res[N];
int stop=-1;
void dfs(int x)
{
	ever[x]=1;
	int i;
	for(i=1;i<=map[x][0];i++)
	{
		if(fa[x]!=map[x][i])
		{
			if(ever[map[x][i]])
			{
				stop=map[x][i];
				circle[++circle[0]]=x;
				isc[x]=1;
				return;
			}
			fa[map[x][i]]=x;
			ever[map[x][i]]=1;
			dfs(map[x][i]);
			if(stop>=0)
			{
				if(circle[circle[0]]!=stop)
				{
					circle[++circle[0]]=x;
					isc[x]=1;
				}
				return;
			}
		}
	}
}
void dfsx(int x)
{
	int i,j;
	tot[x][0]++;
	for(i=1;i<=map[x][0];i++)
	{
		if(!isc[map[x][i]] && fa[x]!=map[x][i])
		{
			fa[map[x][i]]=x;
			dfsx(map[x][i]);
		}
	}
	for(i=0;tot[x][i];i++)
	{
		for(j=0;tot[fa[x]][j];j++)
			res[i+j+2]+=tot[x][i]*tot[fa[x]][j];
	}
	for(i=0;tot[x][i];i++)
		tot[fa[x]][i+1]+=tot[x][i];
}
int main()
{
	int i,j,s,t;
	int a,b;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	{
		scanf("%d%d",&a,&b);
		map[a][++map[a][0]]=b;
		map[b][++map[b][0]]=a;
	}
	dfs(0);
	for(i=1;i<=circle[0];i++)
	{
		tot[circle[i]][0]++;
		for(j=1;j<=map[circle[i]][0];j++)
		{
			if(!isc[map[circle[i]][j]])
			{
				fa[map[circle[i]][j]]=circle[i];
				dfsx(map[circle[i]][j]);
			}
		}
	}
	for(i=1;i<=circle[0];i++)
	{
		for(j=i+1;j<=circle[0];j++)
		{
			for(s=0;tot[circle[i]][s];s++)
			{
				for(t=0;tot[circle[j]][t];t++)
				{
					res[s+t+j-i+1]+=tot[circle[i]][s]*tot[circle[j]][t];
					res[s+t+i+circle[0]-j+1]+=tot[circle[i]][s]*tot[circle[j]][t];
					res[s+t+circle[0]]-=tot[circle[i]][s]*tot[circle[j]][t];
				}
			}
		}
	}
	long double ans=0.0;
	for(i=1;i<=n;i++)
	{
		long double now=res[i]*2.0;
		now/=i;
		ans+=now;
	}
	double ansx=ans+n;
	printf("%.15f\n",ansx);
	return 0;
}
