#include<bits/stdc++.h>
using namespace std;
int n,fir[3001],to[6001],next[6001],sz;double ans;
bool vd[3001],oncir[3001];int cir[3001],csz,pos[3001];
int dis[3001],last[3001],q[3001],top[3001],dt[3001];
void add(int x,int y)
{
	next[++sz]=fir[x];fir[x]=sz;to[sz]=y;
	next[++sz]=fir[y];fir[y]=sz;to[sz]=x;
}
bool dfs_circle(int x,int fa)
{
	vd[x]=true;
	for(int i=fir[x];i;i=next[i])
	if(to[i]!=fa)
		if(vd[to[i]])
		{
			cir[++csz]=to[i];
			cir[++csz]=x;
			oncir[to[i]]=oncir[x]=true;
			return true;
		}
		else if(dfs_circle(to[i],x))
		{
			if(x==cir[1])return false;
			cir[++csz]=x;oncir[x]=true;
			return true;
		}
	return false;
}
void bfs(int st)
{
	int l=0,r=0;q[++r]=st;last[st]=st;dis[st]=1;
	while(l<r)
	{
		int x=q[++l];ans+=1/(double)dis[x];
		if(oncir[x])top[st]=x,dt[st]=dis[x];
		for(int i=fir[x];i;i=next[i])
		if(last[to[i]]!=st)
		if(!oncir[x]||!oncir[to[i]])
		{
			last[to[i]]=st;
			dis[to[i]]=dis[x]+1;
			q[++r]=to[i];
		}
	}
}
int main()
{
	scanf("%d",&n);
	for(int i=1,u,v;i<=n;i++)
	{
		scanf("%d%d",&u,&v);
		++u;++v;
		add(u,v);
	}
	dfs_circle(1,-1);
	for(int i=1;i<=n;i++)bfs(i);
	for(int i=1;i<=csz;i++)pos[cir[i]]=i;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=n;j++)
			if(top[i]!=top[j])
			{
				int x=dt[i]+dt[j];
				int y=abs(pos[top[i]]-pos[top[j]]);
				int z=csz-y;
				--y;--z;
				ans+=1/(double)(x+y)+1/(double)(x+z)-1/(double)(x+y+z);
			}
	printf("%.9lf\n",ans);
}
