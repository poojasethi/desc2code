#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#define add(a,b) (e[++m]=b,pre[m]=last[a],last[a]=m)
using namespace std;
int lca[3005][3005];
int last[3005];
int cir[3005];
int lab[3005];
int par[3005];
int pre[6005];
int dep[3005];
int e[6005];
int f[3005];
int h[3005];
int n,m,cnt;
int find_cir(int u,int par,int T)
{	int i;
	h[u]=1;
	for (i=last[u];i!=0;i=pre[i])
	{	if (e[i]==par)
			continue;
		if (e[i]==T || ( !h[e[i]] && find_cir(e[i],u,T) ))
		{	cir[++cnt]=u;
			return 1;
		}
	}
	return 0;
}
void dfs(int u)
{	int i;
	for (i=last[u];i;i=pre[i])
		if (e[i]!=par[u]&&lab[e[i]]==0)
		{	f[e[i]]=f[u];
			par[e[i]]=u;
			dep[e[i]]=dep[u]+1;
			dfs(e[i]);
		}
}
int find(int u,int v)
{	if (lca[u][v])
		return lca[u][v];
	if (u==v)
		return lca[u][v]=u;
	if (dep[u]>dep[v])
		lca[u][v]=find(par[u],v);
	else lca[u][v]=find(u,par[v]);
	return lca[u][v];
}
int main()
{	int i,j,a,b;
	scanf("%d",&n);
	for (i=1;i<=n;++i)
	{	scanf("%d %d",&a,&b);
		++a,++b;
		add(a,b),add(b,a);
	}
	for (i=1;i<=n;++i)
	{	cnt=0;
		memset(h,0,sizeof h);
		if (find_cir(i,0,i))
			break;
	}
	for (i=1;i<=cnt;++i)
		lab[cir[i]]=i;
	for (i=1;i<=cnt;++i)
	{	dep[cir[i]]=1;
		f[cir[i]]=cir[i];
		dfs(cir[i]);
	}
	int p,t,x,y,z;
	double ans=0;
	for (i=1;i<=n;++i)
		for (j=1;j<=n;++j)
			if (f[i]==f[j])
			{	p=find(i,j);
				t=dep[i]-dep[p]+dep[j]-dep[p]+1;
				ans+=1.0/t;
			}
			else
			{	x=dep[i]+dep[j];
				y=(lab[f[i]]-lab[f[j]]+cnt)%cnt-1;
				z=(lab[f[j]]-lab[f[i]]+cnt)%cnt-1;
				ans+=1.0/(x+y)+1.0/(x+z)-1.0/(x+y+z);
			}
	printf("%.10lf\n",ans);
	return 0;
}

		 	  				 		 	 		     		