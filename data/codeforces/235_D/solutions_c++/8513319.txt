#include <cstdio>
#include <cstring>
using namespace std;

typedef double LD;

const int N = 3005;

int to[N+N], next[N+N], end[N], fa[N], tms;
int loop, lp[N], tag[N], vs[N];
int col[N], d[N];
int n;

LD ans(0);

void link(int x, int y){to[++tms]=y, next[tms]=end[x], end[x]=tms;}

void foundloop(int x, int lst=-1)
{
	vs[x] = 1;
	for(int p=end[x]; p; p=next[p]) if(to[p]!=lst)
	{
		if(!vs[to[p]]) fa[to[p]]=x, foundloop(to[p], x);
		else if(!loop) {lp[0]=0; for(int y=x; y!=fa[to[p]]; y=fa[y]) lp[++lp[0]]=y, tag[y]=1; loop=1;} 
	}
}

void dicv(int x, int dep, int co)
{
	col[x] = co, d[x] = dep;
	for(int p=end[x]; p; p=next[p]) if(!tag[to[p]] && to[p]!=fa[x])
	fa[to[p]]=x, dicv(to[p], dep+1, co);
}

void self(int x, int d, int lst=-1)
{
	ans+=1/LD(d);
	for(int p=end[x]; p; p=next[p]) if(to[p]!=lst && col[x]==col[to[p]]) self(to[p], d+1, x);
}

int abs(int x){return x>0?x:-x;}

int main()
{
	
	scanf("%d", &n);
	for(int i=1, x, y; i<=n; i++)
	scanf("%d%d", &x, &y), link(x, y), link(y, x);
	
	for(int i=0; i<n; i++) fa[i] = -1;
	foundloop(0);
	for(int i=1; i<=lp[0]; i++) fa[lp[i]]=-1, dicv(lp[i], 1, i);
	
	for(int i=0; i<n; i++) self(i, 1);
	for(int i=0; i<n; i++) for(int j=0; j<n; j++) if(col[i]!=col[j])
	{
		int x(d[i]+d[j]), y(abs(col[i]-col[j])-1), z(lp[0]-2-y);
		ans += (1/LD(x+y)+1/LD(x+z)-1/LD(x+y+z));
	}
	printf("%.10lf\n", ans);
	
	return 0;
}
