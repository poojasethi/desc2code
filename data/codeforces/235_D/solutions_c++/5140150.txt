#include <cstdio>
#include <memory.h>
using namespace std;

int n, i, a, b, CC, len, du[10000], till[10000], go[10000], n1[10000], next[10000], q, h;
double ans;
bool used[10000], in[10000];

void add(int x, int y) {
	next[++len] = till[x];
	till[x] = len;
	go[len] = y;
}

void dfs(int k, int l1, int l2) {
	used[k] = true;
	if (l2 <= 1)	ans += 1.0 / l1;
	else	ans += 1.0 / l1 - 1.0 / (l1 - l2 + CC) + 1.0 / (l1 - l2 + CC - l2 + 2);
	for (int i = till[k]; i; i = next[i])
		if (!used[go[i]])	dfs(go[i], l1 + 1, l2 + in[go[i]]);
}

int main() {
	scanf("%d", &n);
	for (i = 1; i <= n; i++) {
		scanf("%d%d", &a, &b);
		add(a, b);
		add(b, a);
		du[a]++; du[b]++;
	}
	for (i = 0; i < n; i++)
		if (du[i] == 1)	n1[++h] = i;
	for (q = 1; q <= h; q++) {
		for (i = till[n1[q]]; i; i = next[i])
			if ((--du[go[i]]) == 1)	n1[++h] = go[i];
	}
	CC = n - h;
	for (i = 0; i < n; i++)
		if (du[i] > 1)	in[i] = 1;
	for (i = 0; i < n; i++) {
		memset(used, false, sizeof(used));
		dfs(i, 1, in[i]);
	}
	printf("%.8lf\n", ans);
}
