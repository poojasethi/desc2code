#include<cstring>
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<map>
#define rep(i,l,r) for (int i=l;i<=r;i++)
#define down(i,l,r) for (int i=l;i>=r;i--)
#define clr(x,y) memset(x,y,sizeof(x))
#define maxn 3005
#define maxk 69
#define inf 0x7fffffff
#define ll long long
#define mm 1000000007
using namespace std;
struct data{int obj,pre;
}e[maxn*2];
int dfn[maxn],low[maxn],num[maxn],f[maxn],s[maxn],b[maxn],head[maxn],c[maxn];
int tot,flag=0,cnt,n,scc,idx,mx;
double ans;
int read(){
	ll x=0,f=1; char ch=getchar();
	while (!isdigit(ch)){if (ch=='-') f=-1; ch=getchar();}
	while (isdigit(ch)){x=x*10+ch-'0'; ch=getchar();}
	return x*f;
}
void insert(int x,int y){
	e[++tot].obj=y; e[tot].pre=head[x]; head[x]=tot;
}
void dfs(int u,int fa){
	dfn[u]=low[u]=++idx;
	s[++cnt]=u;
	for (int j=head[u];j;j=e[j].pre){
		int v=e[j].obj;
		if (v==fa) continue;
		if (!dfn[v]) {
			dfs(v,u); low[u]=min(low[u],low[v]);
		}else if (!num[v]) low[u]=min(low[u],dfn[v]);
	}
	if (dfn[u]==low[u]){
		scc++;
		while (1){
			int x=s[cnt--]; num[x]=scc; c[scc]++;
			if (x==u) break;
		}
	}
}
void go(int u,int dis,int cnt){
	b[u]=1;
	ans+=1.0/dis;
	if (cnt>1) {
		ans+=1.0/(dis+mx-2*cnt+2);
		ans-=1.0/(dis+mx-cnt);
	}
	for (int j=head[u];j;j=e[j].pre){
		int v=e[j].obj;
		if (!b[v]) go(v,dis+1,cnt+f[v]);
	}
}
int main(){
//	freopen("in.txt","r",stdin);
	n=read();
	rep(i,1,n){
		int x=read(),y=read();
		x++; y++;
		insert(x,y); insert(y,x);
	}
	clr(b,0);
	dfs(1,0);
	int now=0;
	rep(i,1,n) if (c[num[i]]>c[now]) now=num[i];
	rep(i,1,n) if (num[i]==now) f[i]=1;
	mx=c[now];
	rep(i,1,n) {
		clr(b,0); go(i,1,f[i]);
	}
	printf("%.9lf\n",ans);
	return 0;
}
