#include <iostream>
#include <cstdio>
#include <algorithm>
#define rep(i,a,b) for(int i = a; i <= b; i++)
#define dep(i,a,b) for(int i = a; i >= b; i--)
using namespace std;

const int N = 3010;
struct edge{
	int to, pre;
}e[N * 2];
int u[N];
int l = 0;
void ins(int a, int b){
	e[++l] = (edge){b, u[a]}, u[a] = l;
}
#define reg(i,a) for(int i = u[a]; i; i = e[i].pre)
#define v e[i].to

double ans = 0;
int cir[N], dis[N], fa[N], len, rt;

void dfs2(int x, int d){
	d += cir[x];
	if (d != 1) ans += (double)1.0 / (dis[x] - d + (len - d + 2)) - (double)1.0 / (dis[x] - d + len);
	reg(i,x) if (fa[v] == x) dfs2(v, d);
}

void dfs(int x, int f){
	ans += (double)1.0 / dis[x];
	reg(i,x) if (v != f && !dis[v]) {
		fa[v] = x, dis[v] = dis[x] + 1, dfs(v, x);
	} else if (v != f && dis[v] < dis[x]){
		rt = v, len = dis[x] - dis[v]  + 1;
		int t = x;
		dep(j, len, 1) cir[t] = 1, t = fa[t];
	}
}

int main(){
	int n; scanf("%d",&n);
	rep(i,1,n) {
		int a, b; scanf("%d%d",&a,&b), a++, b++;
		ins(a, b), ins(b, a);
	}
	rep(i,1,n) {
		fa[i] = 0;
		rep(i,1,n) dis[i] = cir[i] = 0;
		dis[i] = 1, dfs(i,0);
		dfs2(rt, 0);
	}
	printf("%.12lf",ans);
}