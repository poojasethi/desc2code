#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;
#define maxn 4010
struct edges{int to,next;}edge[maxn*2];
int next[maxn],l;
inline void addedge(int x,int y){
	edge[++l]=(edges){y,next[x]};next[x]=l;
	edge[++l]=(edges){x,next[y]};next[y]=l;
}
bool flag;
bool dis[maxn],b[maxn];
int s[maxn],cnt,tot;
int dfs1(int u,int pre) {
	b[u]=1;
	for (int i=next[u];i;i=edge[i].next) {
		if (!b[edge[i].to]) {
			s[++cnt]=edge[i].to;
			dfs1(edge[i].to,u);
			if (flag) return 0;
			cnt--;
		}else if (edge[i].to!=pre&&cnt) {
			while (cnt&&s[cnt]!=edge[i].to) dis[s[cnt--]]=1,tot++;
			flag=1;
			dis[s[cnt]]=1;tot++;
		}
	}
}
double ans=0;
int dfs(int u,int dist,int cnt) {
	b[u]=1;
	ans+=1.0/dist;
	if (cnt>1) {
		ans+=1.0/(dist+tot-cnt*2+2);
		ans-=1.0/(dist+tot-cnt);
	}
	for (int i=next[u];i;i=edge[i].next) 
		if (!b[edge[i].to]) dfs(edge[i].to,dist+1,cnt+dis[edge[i].to]);
}
int main(){
	int n;
	scanf("%d",&n);
	for (int i=1;i<=n;i++) {
		int x,y;
		scanf("%d%d",&x,&y);
		x++,y++;
		addedge(x,y);
	}
	s[cnt=1]=1;
	dfs1(1,0);
	memset(b,0,sizeof(b));
	for (int i=1;i<=n;i++) {memset(b,0,sizeof(b));dfs(i,1,dis[i]);}
	printf("%.9lf",ans);
	return 0;
}
