#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cmath>
#include<cstring>

using namespace std;

double ans;
int f[3011][14],dep[6011],fa[6011];
int g[6011],next[6011],y[6011],num[6011],cir[6011],bel[6011];
bool p[6011],pc[6011],pp,pb[12011];
int ct,st,ed,n,i,x,z,tt,j;

void star(int i,int j)
{
	tt++;
	next[tt]=g[i];
	g[i]=tt;
	y[tt]=j;
}

void dfscr(int x,int Fat)
{
	int j,k;
	fa[x]=Fat;
	p[x]=true;
	j=g[x];
	while(j!=0){
		if(pb[j]){
			pb[j]=false; pb[j^1]=false;
			k=y[j];
			if(p[k]){
				st=k;
				ed=x;
				pp=true;
				return;
			}
			else dfscr(k,x);
			if(pp)return;
		}
		j=next[j];
	}
}

void dfs(int x,int Fat)
{
	int j,k;
	bel[x]=cir[i];
	f[x][0]=Fat;
	dep[x]=dep[Fat]+1;
	j=g[x];
	while(j!=0){
		k=y[j];
		if(!pc[k]&&k!=Fat)dfs(k,x);
		j=next[j];
	}
}

int lca(int x,int z)
{
	int i,l,e;
	if(dep[x]<dep[z])swap(x,z);
	l=dep[x]-dep[z];
	e=0;
	while(l!=0){
		if(l%2==1)x=f[x][e];
		l/=2;
		e++;
	}
	if(x==z)return x;
	for(i=13;i>=0;i--){
		if(f[x][i]!=f[z][i]){
			x=f[x][i];
			z=f[z][i];
		}
	}
	return f[x][0];
}

void Work(int x,int z)
{
	int X,Y,Z,fc;
	if(bel[x]==bel[z]){
		fc=dep[x]+dep[z]-2*dep[lca(x,z)]+1;
		ans+=1.0/(double)fc;
	}
	else{
		X=dep[x]+dep[z];
		Y=abs(num[bel[x]]-num[bel[z]])-1;
		Z=ct-2-Y;
		ans+=1.0/(double)(X+Y);
		ans+=1.0/(double)(X+Z);
		ans-=1.0/(double)(X+Y+Z);
	}
}

int main()
{
	tt=1;
	memset(pb,true,sizeof(pb));
	scanf("%d",&n);
	for(i=1;i<=n;i++){
		scanf("%d%d",&x,&z);
		x++;z++;
		star(x,z);
		star(z,x);
	}
	dfscr(1,0);
	while(true){
		pc[ed]=true;
		cir[++ct]=ed;
		num[ed]=ct;
		if(ed==st)break;
		ed=fa[ed];
	}
	for(i=1;i<=ct;i++)dfs(cir[i],0);
	for(i=1;i<=13;i++)
		for(j=1;j<=n;j++)f[j][i]=f[f[j][i-1]][i-1];
	for(i=1;i<=n;i++)
		for(j=1;j<=n;j++)Work(i,j);
	printf("%.10lf\n",ans);
}