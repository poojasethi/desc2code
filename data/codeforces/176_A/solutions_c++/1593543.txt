#include <vector>
#include <algorithm>
#include <iostream>
#include <cstring>
using namespace std;
typedef pair<int,int> P;
int n,m,k;
struct planet
{
	string s;
	int a[111],b[111],c[111];
};
planet A[11];
int main()
{
	cin >> n >> m >> k;
	for(int i=0;i<n;i++)
	{
		cin >> A[i].s;
		for(int j=0;j<m;j++)
			cin >> A[i].a[j] >> A[i].b[j] >> A[i].c[j];
	}
	vector <P> sood;
	int jav=0;
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
		{
			int q=0,ans=0;
			sood.clear();
			for(int f=0;f<m;f++)
				sood.push_back(P(A[j].b[f]-A[i].a[f],f));
			sort(sood.begin(),sood.end());
			reverse(sood.begin(),sood.end());
			int tmp=sood.size();
			for(int f=0;f<tmp&&q<k&&sood[f].first>0;f++)
			{
				ans+=sood[f].first*min(A[i].c[sood[f].second],k-q);
				q+=min(A[i].c[sood[f].second],k-q);
			}
			jav=max(jav,ans);
		}
	cout << jav << endl;
	return 0;
}
