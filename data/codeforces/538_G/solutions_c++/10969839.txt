#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#define INF 0x3f3f3f3f
#define ll long long
#define N 200010
#define L 2000100
using namespace std;
ll n,l; 
struct node{
	ll t,a,b;
	ll id;
	node(){}
	node(ll x,ll y,ll z,ll d){t=x,a=y,b=z,id=d;}
	bool read(){
		ll tt,x,y;
		scanf("%I64d%I64d%I64d",&tt,&x,&y);
		t=tt/l;
		id=tt%l;
		if((tt+x+y)&1LL) return false;
		a=(tt+x-y)/2;
		b=(tt+x+y)/2;
		return true;
	}
	bool operator < (const node &b)const{return id<b.id;}
}p[N];
ll s1[L],s2[L];
bool t1[L],t2[L];
char ans[L];
int main(){
	scanf("%I64d%I64d",&n,&l);
	ll max1=l,max2=l,min1=0,min2=0;
	for(int i=1;i<=n;i++){
		if(!p[i].read()){
			puts("NO");
			return 0;
		}
	}
	p[0]=node(0,0,0,0);
	p[++n]=node(-1,0,0,l);
	sort(p,p+n+1);
//	for(int i=0;i<=n;i++) cout<<p[i].t<<' '<<p[i].id<<' '<<p[i].a<<' '<<p[i].b<<endl;
	for(int i=0;i<n;i++){
		ll tmp=p[i].t-p[i+1].t;
		ll la=p[i].a-p[i+1].a,ra=p[i+1].id-p[i].id+p[i].a-p[i+1].a;
		ll lb=p[i].b-p[i+1].b,rb=p[i+1].id-p[i].id+p[i].b-p[i+1].b;
	//	cout<<tmp<<' '<<la<<' '<<lb<<' '<<ra<<' '<<rb<<endl;
		if(tmp==0){
			if(!(la<=0 && 0<=ra) || !(lb<=0 && 0<=rb)){puts("NO"); return 0;}
			continue;
		}
		else if(tmp<0){
			swap(la,ra); la=-la; ra=-ra;
			swap(lb,rb); lb=-lb; rb=-rb;
			tmp=-tmp;
		}
	//	cout<<tmp<<' '<<la<<' '<<lb<<' '<<ra<<' '<<rb<<endl;
		if(la>0) la=(la+tmp-1)/tmp;
		else la/=tmp;
		if(ra<0) ra=(ra-tmp+1)/tmp;
		else ra/=tmp;
		if(lb>0) lb=(lb+tmp-1)/tmp;
		else lb/=tmp;
		if(rb<0) rb=(rb-tmp+1)/tmp;
		else rb/=tmp;
		min1=max(min1,la); min2=max(min2,lb);
		max1=min(max1,ra); max2=min(max2,rb);
		if(min1>max1){puts("NO"); return 0;}
		if(min2>max2){puts("NO"); return 0;}
	}
	s1[l]=min1;s2[l]=min2;
	for(int i=0;i<=n;i++){
		s1[p[i].id]=p[i].a-p[i].t*s1[l];
		s2[p[i].id]=p[i].b-p[i].t*s2[l];
	}
	ll s=0;
	for(int i=0,j=0;i<=n;i++){
		while(j<=p[i].id){
			t1[j]=(s<s1[p[i].id]);
			s+=t1[j];
			j++;
		}
	}
	s=0;
	for(int i=0,j=0;i<=n;i++){
		while(j<=p[i].id){
			t2[j]=(s<s2[p[i].id]);
			s+=t2[j];
			j++;
		}
	}
	for(int i=1;i<=l;i++){
		if(t1[i]==1 && t2[i]==1) ans[i-1]='R';
		else if(t1[i]==0 && t2[i]==0) ans[i-1]='L';
		else if(t1[i]==0 && t2[i]==1) ans[i-1]='U';
		else ans[i-1]='D';
	}
	ans[l]=0;
	puts(ans);
	return 0;
}

