import math
import sys
sys.setrecursionlimit(10000)
def gcd(a, b):
    return b if a % b == 0 else gcd(b, a % b)

def lcm(a, b):
    return a*b/gcd(a,b)

def e_gcd(a, b):
    if (a == 0):
        return 0, 1, b
    x1, y1, d = e_gcd(b % a, a)
    x = y1 - (b / a) * x1
    y = x1
    return x, y, d

s = raw_input()
a, b, n, x = s.split()
a = int(a)
b = int(b)
n = int(n)
x = int(x)

base = int(1e9 + 7)
if a == 1:
    print (x + (n)*b)%base
else:
    
    res = (pow(a, n, base) * x) % base
    
    s = (b * (1 - pow(a, n, base))) % base
    s = (s + base) % base
    
    q = (1 - a) % base + base
    q %= base
    xx, yy, dd = e_gcd(q, base)
    xx = (xx % base + base) % base
    ans = res + s * xx
    print ans % base



