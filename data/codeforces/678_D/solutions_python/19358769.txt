mod = int(10**9 + 7)
mud = int(10**9 + 6)


def powM(bs, pw, MOD):
    res = 1
    for i in range(pw.bit_length() - 1, -1, -1):
        res = (res * res) % MOD
        if (pw & (1 << i) > 0):
            res = (res * bs) % MOD

    return res


A, B, n, x = raw_input().split()

A = int(A)
B = int(B)
n = int(n)
x = int(x)

if A == 1:
    n %= mod
    print (x + B * n) % mod
else:
    n %= mud
    An = powM(A, n, mod)
    fx = B * (mod + An - 1) % mod * powM(A - 1, mod - 2, mod)
    print (An * x + fx) % mod
