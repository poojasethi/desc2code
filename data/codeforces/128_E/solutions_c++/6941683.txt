#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<vector>
#include<map>
#include<queue>
#include<string>
#include<bitset>
#include<iomanip>
#include<iostream>
#include<cmath>
using namespace std;
#define rep(i,x,y) for(i=x;i<=y;i++)
#define _rep(i,x,y) for(i=x;i>=y;i--)
#define REP(i,x,y) for(int i=(x);i<=(y);i++)
#define _REP(i,x,y) for(int i=(x);i>=(y);i--)
#define CL(S,x) memset(S,x,sizeof(S))
#define CP(S1,S2) memcpy(S1,S2,sizeof(S2))
#define ALL(x,S) for(__typeof((v).end()) x=S.begin();x!=S.end();x++)
#define pb push_back
#define IN insert
#define ER erase
#define BE begin()
#define ED end() 
#define LB lower_bound
#define UB upper_bound
#define mp make_pair
#define fi first
#define se second
#define upmin(x,y) x=min(x,y)
#define upmax(x,y) x=max(x,y)
#define sqr(x) ((x)*(x))
#define COUT(S,x) cout<<fixed<<setprecision(x)<<S<<endl
template<class T> inline void read(T&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};
template<class T> inline void read(T&x,T&y){read(x);read(y);}
template<class T> inline void read(T&x,T&y,T&z){read(x);read(y);read(z);}
inline char getc(){char c;for(c=getchar();c<=32;c=getchar());return c;}

typedef long long ll;
typedef long double ld;
typedef pair<ld,ld> pii;

const ld inf=ld(1e6);
const ld eps=ld(1e-8);
const ld pi=2*acos(0);
int n,m,i,j,p;
ld m1,m2,k,now,R;int best;
ld x[1010],y[1010],r[1010];
pii a[4010];ld o[8010];int s[8010];

bool same(ld x,ld y){return abs(x-y)<=1e-12;}
int solve(int n)
{
    int i,j;
    rep(i,1,n){o[i]=a[i].fi;o[i+n]=a[i].se;}
    sort(o+1,o+1+n+n);
    int g=1;rep(i,2,n+n)if(!same(o[i],o[i-1]))o[++g]=o[i];
    CL(s,0);rep(i,1,n)s[LB(o+1,o+1+g,a[i].fi)-o]++,s[LB(o+1,o+1+g,a[i].se)-o+1]--;
    int ans=0;rep(i,1,g)s[i]+=s[i-1],upmax(ans,s[i]);
    return ans;
}
int main()
{
    //freopen("1.in","r",stdin);freopen("1.out","w",stdout);
    read(n,m);
    rep(i,1,n)cin>>x[i]>>y[i]>>r[i],r[i]-=1e-8;
    
    int g=0;
    rep(i,1,n)
    {
        p=0;
        rep(j,1,n)if(i!=j)
        {
            ld alp=atan2(y[j]-y[i],x[j]-x[i]);
            ld dis=sqrt(sqr(x[i]-x[j])+sqr(y[i]-y[j]));
            ld A=acos((r[i]-r[j])/dis);
            ld B=acos(r[i]/(dis*r[i]/(r[i]+r[j])));
            
            //cout<<alp<<' '<<B<<' '<<A<<endl;
            a[++p]=mp(alp-A,alp-B);
            a[++p]=mp(alp+B,alp+A);
            a[++p]=mp(2*pi+alp-A,2*pi+alp-B);
            a[++p]=mp(2*pi+alp+B,2*pi+alp+A);
        }
        upmax(g,solve(p)+1);
    }    
    //printf("%d\n",g);
    cout<<n+1LL*g*m+1LL*m*(m-1)/2<<endl;
    scanf("\n");
    return 0;
}
