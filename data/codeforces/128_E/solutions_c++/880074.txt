#include <cstdio>
#include <cstring>
#include <cmath>
#include <vector>
#include <algorithm>
using namespace std;
typedef long long LL;
const double eps = 1e-8;
const double Pi = acos(-1.0);
const int MaxN = 1005;
vector< pair<double,int> >a;
int x[MaxN],y[MaxN],r[MaxN];
double dis(int i,int j)
{
    return sqrt(1.0*(x[i]-x[j])*(x[i]-x[j])+1.0*(y[i]-y[j])*(y[i]-y[j]));
}

int main()
{
    int n,k;scanf("%d%d",&n,&k);
    for(int i = 0; i < n; i++)
        scanf("%d%d%d",&x[i],&y[i],&r[i]);
    int mx = 0;
    for(int i = 0; i < n; i++)
    {
        a.clear();
        for(int j = 0; j < n; j++)if(i!=j)
        {
            double d = dis(i,j);
            double a1 = atan2(y[j]-y[i],x[j]-x[i]);
            double a2 = Pi/2-asin((r[i]-r[j])/d);
            double a3 = Pi/2-asin((r[i]+r[j])/d);
            for(int x = 0; x < 2; x++)
            {
                a.push_back(make_pair(Pi*2*x+a1-a2+eps,1));
                a.push_back(make_pair(Pi*2*x+a1-a3-eps,-1));
                a.push_back(make_pair(Pi*2*x+a1+a3+eps,1));
                a.push_back(make_pair(Pi*2*x+a1+a2-eps,-1));
            }
        }
        sort(a.begin(),a.end());
        int ct = 0, m = a.size();
        for(int j = 0; j < m; j++)
        {
            ct += a[j].second;
            mx = max(mx,ct);
        }
    }
    printf("%I64d\n",(LL)k*(k+1)/2+1+(LL)mx*(k+1)+n-mx-1);

    return 0;
}
