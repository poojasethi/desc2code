//Edited by Hewr
#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
using namespace std;

#define pb push_back
#define MP make_pair

#define fo(i,a,b) for (int i=a; i<=b; ++i)
#define fd(i,a,b) for (int i=a; i>=b; --i)
#define fe(i,x) for (int i=g[x],y=E[i].y; i; i=E[i].l,y=E[i].y)
#define forall(i,x) for (typeof(x.begin()) i=x.begin(); i!=x.end(); ++i)
#define inc(a,b) a=(((LL)a+b)%mo+mo)%mo
#define clr(a,x) memset(&a,x,sizeof(a));
#define sqr(x) ((double)(x)*(x))
#define UNIQUE(x) x.resize(unique(x.begin(),x.end())-x.begin())
#define move(a,b) memcpy(&b,&a,sizeof(a))
#define acms(x) accumulate(x.begin(),x.end(),string())
#define SIZE(x) ((int)x.size())
#define updmin(a,b) a=min(a,b)
#define updmax(a,b) a=max(a,b)
#define fi first
#define se second

template<class A,class B> A convert(B x) { stringstream ss; ss<<x; A ret; ss>>ret; return ret; }

const int oo=~0u>>2;
const double eps=1e-10,pi=acos(-1);

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long LL;
typedef long double LD;
typedef unsigned long long ULL;
typedef pair<int,int> PII;
typedef pair<double,bool> PDB;

const int mn=51,mo=1000000007;
const int fx[8][2]={{-1,0},{1,0},{0,-1},{0,1},{-1,-1},{-1,1},{1,-1},{1,1}};

struct po{ int x,y; };
struct circle{ po o; int r; };

vector<circle> a;
vector<PDB> Q;
int n,k;
LL Ans;

void ins(double l, double r){
	while (l > eps && r - pi * 2 > -eps) l -= pi * 2, r -= pi * 2;
	while (pi * 2 - l > eps){
		Q.pb(PDB(l + eps, 1));
		Q.pb(PDB(r - eps, 0));
		l += pi * 2, r += pi * 2;
	}
}

int main(){
	//freopen("E.in","r",stdin);
	a.clear();
	scanf("%d%d", &n, &k);
	fo (i, 0, n-1){
		circle T;
		scanf("%d%d%d", &T.o.x, &T.o.y, &T.r);
		a.pb(T);
	}
	Ans = 0;
	fo (i, 0, n-1){
		Q.clear();
		fo (j, 0, n-1) if (i != j){
			double Ang = atan2(a[j].o.x - a[i].o.x, a[j].o.y - a[i].o.y);
			double l = sqrt(sqr(a[j].o.x - a[i].o.x) + sqr(a[j].o.y - a[i].o.y));
			double alpha = pi / 2 - asin((a[i].r - a[j].r) / l);
			double beita = pi / 2 - asin((a[i].r + a[j].r) / l);
			ins(Ang - alpha, Ang - beita);
			ins(Ang + beita, Ang + alpha);
		}
		sort(Q.begin(), Q.end());
		int Now = 0;
		fo (j, 0, (int) Q.size() - 1) if (!Q[j].se) --Now;
		else updmax(Ans, (LL) ++Now);
	}
	Ans=(LL) Ans * k + (LL) k * (k + 1) / 2 + n;
	cout<<Ans<<endl;
}
