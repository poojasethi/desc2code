#include <set>
#include <map>
#include <cmath>
#include <ctime>
#include <cctype>
#include <cstdio>
#include <vector>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#define fi first
#define se second
#define mk make_pair
#define pb push_back
#define CH (ch=getchar())
#define dprintf(...) fprintf(stderr,__VA_ARGS__)
#define For(i,a,b)   for(int i=(int)a;i<=(int)b;i++)
#define Forn(i,a,b)  for(int i=(int)a;i>=(int)b;i--)
#define pend(x)    	 ((x)=='\n'||(x)=='\r'||(x)=='\t'||(x)==' ')
using namespace std;
typedef long long ll;
typedef double db;
typedef pair<db,int> ww;
const int N=100005;
const db pi=acos(-1.0);

inline int IN(){
	char ch;CH; int f=0,x=0;
	for(;pend(ch);CH); if(ch=='-')f=1,CH;
	for(;!pend(ch);CH) x=x*10+ch-'0';
	return (f)?(-x):(x);
}

int n,k,tot;
db p1,p2,p3,p4,r[N];
int ans=1;
ww b[N];

struct po{
	db x,y;
	void read(){
		scanf("%lf%lf",&x,&y);
	}
	db R(){
		return sqrt(x*x+y*y);
	}
	po operator -(const po &a)const{
		return (po){x-a.x,y-a.y};
	}
}a[N];

void Out(int i, int j, db &x1, db &x2){
	db t=atan2(a[j].y-a[i].y,a[j].x-a[i].x);
	db t1=acos(fabs(r[i]-r[j])/(a[i]-a[j]).R());
	if (r[i]<=r[j])t1=pi-t1;
	x1=t-t1;x2=t+t1;
	if (x1<-pi) x1+=2*pi;
	if (x2>pi) x2-=2*pi;
}

void In(int i,int j,db &x1,db &x2){
	db t=atan2(a[j].y-a[i].y,a[j].x-a[i].x);
	db t1=acos((r[i]+r[j])/(a[i]-a[j]).R());
	x1=t-t1;x2=t+t1;
	if(x1<-pi)x1+=2*pi;
	if(x2>pi)x2-=2*pi;
}

void add(db A,db B){
	if(A<=B){
		b[++tot]=mk(A,1);
		b[++tot]=mk(B,-1);
	}else{
		b[++tot]=mk(A,1);
		b[++tot]=mk(pi,-1);
		b[++tot]=mk(-pi,1);
		b[++tot]=mk(B,-1);
	}
}

void work(){
	sort(b+1,b+tot+1);
	int tmp=0;
	For(i,1,tot){
		tmp+=b[i].se;
		ans=max(ans,tmp+1);
	}
}

int main(){
	scanf("%d%d",&n,&k);
	For(i,1,n){
		a[i].read();
		scanf("%lf",&r[i]);
	}
	For(i,1,n){
		tot=0;
		For(j,1,n){
			if(i==j)continue;
			In(i,j,p3,p4);
			Out(i,j,p1,p2);
			add(p1,p3);
			add(p4,p2);
		}
		work();
	}
	printf("%I64d\n",n+1ll*(ans-1)*k+1ll*k*(k+1)/2);
	return 0;
}

