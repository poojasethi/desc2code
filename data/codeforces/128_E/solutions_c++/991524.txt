#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <ctime>
#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <iterator>

using namespace std;

typedef long long LL;
typedef vector< string > VS;
typedef vector< int > VI;
typedef pair< int, int > PRII;
typedef pair< double, double > PRDD;

#define p_b push_back
#define m_p make_pair
#define x first
#define y second

#define Size(a) ((int)a.size())
#define sqr(x) ((x)*(x))

#define oo 1000000000
#define eps 1e-8
const double pi = acos(-1.0);

#define maxn 1000 + 10

int n,k;
int x[maxn],y[maxn],r[maxn];
vector< pair< double, int > > p;

double calc( double a )
{
    while( a < 0 )
        a += 2*pi;
    while( a >= 2*pi )
        a -= 2*pi;
    return a;
}

void insert( double l, double r )
{
    l = calc(l), r = calc(r);
    if( l > r )
        {
            p.p_b(m_p(l+eps,1));
            p.p_b(m_p(2*pi-eps,-1));
            p.p_b(m_p(eps,1));
            p.p_b(m_p(r-eps,-1));
        }
    else
        {
            p.p_b(m_p(l+eps,1));
            p.p_b(m_p(r-eps,-1));
        }
}

int main()
{
    int i,j,t = 0,s;
    double a1,a2,b,d;
    
    scanf("%d%d",&n,&k);
    for( i = 1 ; i <= n ; ++i )
        scanf("%d%d%d",&x[i],&y[i],&r[i]);
    
    for( i = 1 ; i <= n ; ++i )
        {
            for( j = 1 ; j <= n ; ++j )
                if( i != j )
                    {
                        b = atan2(y[j]-y[i],x[j]-x[i]);
                        d = sqrt(sqr(x[i]-x[j])+sqr(y[i]-y[j]));
                        a1 = pi/2 - asin((r[i]-r[j])/d);
                        a2 = pi/2 - asin((r[i]+r[j])/d);
                        insert(b-a1,b-a2);
                        insert(b+a2,b+a1);
                    }
            
            sort(p.begin(),p.end());
            for( s = 0, j = 0 ; j < Size(p) ; ++j )
                {
                    s += p[j].y;
                    t = max(t,s);
                }
            p.clear();
        }
    printf("%I64d\n",(LL)k*(k+1)/2+(LL)k*t+n);
    
    return 0;
}
