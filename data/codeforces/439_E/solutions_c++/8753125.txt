#include<iostream>
#include<algorithm>
#include<cstdio>
#include<vector>
#include<cmath>
using namespace std;
const int mod=1000000007;
int q,n,k,m[300000],p[300000]={0};
long long int f[300000],ff[300000];
long long int F(int j){
	if(n/j<k)return 0;
	else return (f[(n/j)-1]*((ff[k-1]*ff[(n/j)-k])%mod))%mod;
}
long long int bin_pow(long long int x,long long int y) {
	if(y==0)return 1;
	if(y%2==1)return bin_pow(x,y-1)*x%mod;
	else{
		long long int bb=bin_pow(x,y/2);
		return bb*bb%mod;
	}
}
int main(){
	cin>>q;
	f[0]=1;
	for(int l=1;l<=100000;l++){
		f[l]=(f[l-1]*l)%mod;
	}
	for(int l=0;l<=100000;l++){
		ff[l]=bin_pow(f[l],mod-2);
	}
	for(int i=1;i<=100000;i++){
		int ik=0,qw=1,x=i;
		for(int j=2;j*j<=x;j++)if(x%j==0){
			int cnt=0;
			while(x%j==0){
				cnt++;
				x/=j;
			}
			if(cnt>1)qw=0;
			else ik++;
		}
		if(x>1)ik++;
		if(qw==0)m[i]=0;
		else{
			if(ik%2==0)m[i]=1;
			else m[i]=-1;
		}
	}
	for(int i=1;i<=q;i++){
		cin>>n>>k;
		long long int a=0;
		for(int j=1;j*j<=n;j++){
			if(n%j==0){
				a+=(m[j]*F(j))%mod;
				if(j!=n/j)a+=(m[n/j]*F(n/j))%mod;
			}
		}
		a%=mod;
		cout<<(a+mod)%mod<<endl;
	}
	return 0;
}
