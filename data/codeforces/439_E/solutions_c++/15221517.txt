//In The Name Of God ;

#include<bits/stdc++.h>

#define int long long

using namespace std;

const int Maxn=1e5+20;
const int Mod=1e9+7;

int rev[Maxn],fact[Maxn];
vector<int>V[Maxn];
int zarib[Maxn];

void Find(int n)
{
  for(int i=1;i*i<=n;i++)
    {
      if(n%i==0)
	{
	  V[n].push_back(i);
	  if(i*i!=n)
	    V[n].push_back(n/i);
	}	
    }
  int t=0;
  for(int i=1;i<V[n].size();i++)
    if(V[V[n][i]].size()==2)
      t++;
    else if(V[V[n][i]].size()&1)
      return ;
  t=1-(t&1);
  if(V[n].size()%2==0)
    zarib[n]=2*t-1;
}

int power(int n,int p)
{
  int ret=1;
  while(p)
    {
      if(p&1)
	ret=(ret*n)%Mod;
      n=(n*n)%Mod;
      p/=2;
    }
  return ret;
}

int c(int n,int k)
{
  if(n<k)
    return 0;
  int ret=fact[n];
  (ret*=rev[k])%=Mod;
  (ret*=rev[n-k])%=Mod;
  return ret;
}

main()
{
  ios_base::sync_with_stdio(0);
  for(int i=1;i<Maxn-10;i++)
    Find(i);
  fact[0]=rev[0]=zarib[1]=1;
  for(int i=1;i<Maxn-10;i++)
    (fact[i]=fact[i-1]*i)%=Mod,rev[i]=power(fact[i],Mod-2);
  int q,ans=0;
  cin>>q;
  for(int n,f,ans;q--;)
    {
      cin>>n>>f;
      ans=0;
      for(int i=0;i<V[n].size();i++)
	ans=(ans+zarib[V[n][i]]*c(n/V[n][i]-1,f-1))%Mod;
      cout<<(ans%Mod+Mod)%Mod<<endl;
    }
  return 0;
}
