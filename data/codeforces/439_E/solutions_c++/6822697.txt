#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

typedef __int64 LL;
int mod=1e9+7;
int f[100100],revf[100100];

vector<int>fac[100100];

int quick_pow(int x,int nt){
	int tmp=1;
	while(nt){
		if(nt&1) tmp=tmp*LL(x)%mod;
		x=x*LL(x)%mod;
		nt>>=1;
	}
	return tmp;
}

int rev(int v){
	return quick_pow(v,mod-2);
}

void init(){
	for(int i=1;i<100010;i++){
		for(int j=i;j<100010;j+=i){
			fac[j].push_back(i);
		}
	}

	f[0]=1,revf[0]=1;
	for(int i=1;i<100010;i++){
		f[i]=(int)((f[i-1]*LL(i))%mod);
		revf[i]=rev(f[i]);
	}
}

int C(int n,int k){
	if(k<0 || k>n) return 0;
	if(k==0) return 1;
	int ret=(f[n]*1LL*revf[k])%mod;
	ret=(ret*1LL*revf[n-k])%mod;
	return ret;
}

int fu,used[100100],z[100100];

int cal(int n,int f){
	//printf("%d, %d\n",n,f);
	if(f>n) return 0;
	if(f==n) return 1;
	if(used[n]==fu) return z[n];
	used[n]=fu;
	int& ans=z[n];
	ans=C(n-1,f-1);
	int e=fac[n].size()-1;
	for(int i=0;i<e;i++){
		//cout<<n<<": "<<fac[n][i]<<endl;
		int g=fac[n][i];
		ans=ans-cal(g,f);
		if(ans<0) ans+=mod;
	}
	return ans;
}

int main()
{
	init();
	int q;
	scanf("%d",&q);
	while(q--){
		int n,f;
		scanf("%d%d",&n,&f);
		fu++;
		printf("%d\n",cal(n,f));
	}
	return 0;
}


