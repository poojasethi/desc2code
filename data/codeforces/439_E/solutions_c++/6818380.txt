#include <cstdio>
#include <vector>
using namespace std;

typedef long long ll;
const ll mod = 1000000007;

int modpow(int a, int b){
	if(b == 0) return 1;
	int k = modpow(a, b/2);
	k = (1LL*k*k) % mod;
	if(b%2 == 1) k = (1LL*k*a) % mod;
	return k;
}

int fac[100001], rfac[100001];
int choose(int a, int b){
	if(b > a) return 0;
	int ans = (fac[a] * 1LL * rfac[b]) % mod;
	ans = (ans * 1LL * rfac[a-b]) % mod;
	return ans;
}

vector<int> divisore[100001];
void init(){
	fac[0] = 1; rfac[0] = 1;
	for(int i=1; i<=100000; i++){
		fac[i] = (fac[i-1] * 1LL * i) % mod;
		rfac[i] = modpow(fac[i], mod-2);
	}
	
	for(int i=2; i<=100000; i++){
		for(int j=i+i; j<=100000; j+=i) divisore[j].push_back(i); 
	}
}

int lf[100001];
int dp[100001];
int calc(int n, int f){
	if(n < f) return 0;
	if(f == 1 && n > 1) return 0;
	
	if(lf[n] == f) return dp[n];
	
	int ans = choose(n-1, f-1);
	for(int i=0; i<(int)divisore[n].size(); i++){
		ans = (ans - calc(n/divisore[n][i], f)) % mod;
		if(ans < 0) ans += mod;
	}
	
	lf[n] = f;
	return dp[n] = ans;
}

int main(){
	init();
	
	int q;
	for(scanf("%d", &q); q > 0; q--){
		int n,f; scanf("%d %d", &n, &f);
		printf("%d\n", calc(n,f));
	}
	
	return 0;
}
