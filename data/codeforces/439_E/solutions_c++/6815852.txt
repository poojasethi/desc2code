#include <cstdio>
#include <cmath>
using namespace std;
const int maxn=101111,p=1000000007;
int u[maxn],prime[maxn],tot,que;
long long jiecheng[maxn],niyuan[maxn],ans;
int n,f;
bool t[maxn];
int pow(long long x,int y)
{
    long long tmp=1;
    for (;y;y>>=1,x=x*x%p) if (y&1) tmp=tmp*x%p;
    return tmp;
}
long long getans(int n,int m)
{
    if (n<m) return 0;
    return (jiecheng[n]*niyuan[m]%p*niyuan[n-m]%p);
}
int main()
{
    int j,x,y;
    jiecheng[0]=jiecheng[1]=niyuan[1]=niyuan[0]=1;
    for (long long i=2;i<=100000;i++) {jiecheng[i]=jiecheng[i-1]*i%p; niyuan[i]=pow(jiecheng[i],p-2);}
    int i;
    u[1]=1;
    for (i=2;i<=100000;i++)
    {
        if (!t[i]) prime[++tot]=i,u[i]=-1;
        for (j=1;j<=tot;j++)
        {
            x=prime[j]*i;
            if (x>100000) break;
            t[x]=true;
            if (i%prime[j]==0) {u[x]=0;break;}
            u[x]=-u[i];
        }
    }
    //for (i=tot;i>=tot-100;i--) printf("%d\n",prime[i]);
    //for (i=1;i<=100;i++) printf("%d\n",u[i]);
    for (scanf("%d",&que);que;que--)
    {
        scanf("%d%d",&n,&f);
        ans=0;
        for (i=1;i*i<=n;i++) if (n%i==0)
        {
            ans=(ans+u[i]*getans(n/i-1,f-1))%p;
            if (i*i!=n)ans=(ans+u[n/i]*getans(i-1,f-1))%p;
        }
        if (ans<0) ans+=p;
        printf("%I64d\n",ans);
    }
    return 0;
}