#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int,int> pii;

const ll MOD = 1000000007;
const int MAXN = 100005;
int t, n, f;
ll fac[MAXN], inv_fac[MAXN];
vector<int> di[MAXN];
map<pii,ll> m;

ll inv(ll a){
  return a == 1 ? 1 : (MOD - MOD / a) * inv(MOD % a) % MOD;
}

ll binom(int n, int k){
  return fac[n] * inv_fac[k] % MOD * inv_fac[n - k] % MOD;
}

void init(){
  for(int i = 2; i < MAXN; i++){
    for(int j = i; j < MAXN; j += i) di[j].push_back(i);
  }
  fac[0] = inv_fac[0] = 1;
  for(int i = 1; i < MAXN; i++){
    fac[i] = fac[i - 1] * i % MOD;
    inv_fac[i] = inv_fac[i - 1] * inv(i) % MOD;
  }
}

ll count(int n, int f){
  if(n < f) return 0;
  if(n == f) return 1;
  if(f == 1) return 0;
  map<pii,ll>::iterator it = m.find(pii(n, f));
  if(it != m.end()) return it -> second;
  ll res = binom(n - 1, f - 1);
  for(int i = 0; i < di[n].size(); i++){
    res = (res + MOD - count(n / di[n][i], f)) % MOD;
  }
  m[pii(n, f)] = res;
  return res;
}

int main(){
  init();
  cin >> t;
  while(t--){
    cin >> n >> f;
    cout << count(n, f) << '\n';
  }
}
