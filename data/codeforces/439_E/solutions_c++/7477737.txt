#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <vector>
#include <cmath>
#define N 100010
using namespace std;

typedef long long ll;
typedef double D;

const ll mod=(ll)1e9+7;

vector<int> Div[N];
int z[N],u[N],cnt;
ll f[N],fv[N];

ll power(ll a,ll b){
  ll ans=1;
  for (;b;b>>=1LL,a=((ll)a*(ll)a)%mod) if (b&1LL) ans=((ll)ans*(ll)a)%mod;
  return ans;
}
void init(){
  int i,j;
  for (f[0]=fv[0]=i=1;i<N;i++) f[i]=(f[i-1]*i)%mod,fv[i]=power(f[i],mod-2);
  for (i=1;i<N;i++) for (j=i;j<N;j+=i) Div[j].push_back(i);
}
int C(int n,int k){
  if (k<0||k>n) return 0;
  if (k==0) return 1;
  return ((ll)(((ll)f[n]*(ll)fv[k])%mod)*(ll)fv[n-k])%mod;
}
int solve(int x,int y){
  if (x<y) return 0;
  if (x==y) return 1;
  if (u[x]==cnt) return z[x];
  u[x]=cnt;
  int &ans=z[x],t=(int)Div[x].size()-1,g;
  ans=C(x-1,y-1);
  for (int i=0;i<t;i++) {
    g=Div[x][i];
    ans-=solve(g,y);
    if (ans<0) ans+=mod;
  }
  return ans;
}
int main(){
  init();
  int x,y,T,i;
  scanf("%d",&T);
  for (i=1;i<=T;i++) {
    scanf("%d%d",&x,&y);
    cnt++;
    printf("%d\n",solve(x,y));
  }
  return 0;
}