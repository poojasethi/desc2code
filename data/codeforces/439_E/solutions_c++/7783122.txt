#include<algorithm>
#include<bitset>
#include<cctype>
#include<climits>
#include<cmath>
#include<cstdio>
#include<cstring>
#include<iostream>
#include<map>
#include<queue>
#include<set>
#include<sstream>
#include<stack>
#include<string>
#include<vector>

using namespace std;

const int maxn=100001;
const long long mod=1000000007;

typedef long long LL;
typedef long double LD;
typedef LL array[maxn];

int q,n,f,p;
array mu,fac,inv,prime;

LL pow(LL x,LL y)
{
	LL ans=1;
	for(;y;x=x*x%mod,y>>=1)
		if(y&1)
			ans=ans*x%mod;
	return ans;
}

void prepare()
{
	array visit={0};
	mu[1]=1;
	for(int i=2;i<maxn;i++)
	{
		if(!visit[i])
			prime[++p]=i,mu[i]=-1;
		for(int j=1;j<=p;j++)
		{
			if(i*prime[j]>=maxn)
				break;
			visit[i*prime[j]]=1;
			if(i%prime[j]==0)
			{
				mu[i*prime[j]]=0;
				break;
			}
			else
				mu[i*prime[j]]=-mu[i];
		}
	}
	fac[0]=1,inv[0]=1;
	for(int i=1;i<maxn;i++)
		fac[i]=fac[i-1]*i%mod,inv[i]=pow(fac[i],mod-2);
}

int g(int x,int y)
{
	if(x<y)
		return 0;
	return fac[x-1]*inv[y-1]%mod*inv[x-y]%mod;
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("data.in","r",stdin);
// 	freopen("data.out","w",stdout);
#endif
	prepare();
	cin>>q;
	while(q--)
	{
		int ans=0;
		cin>>n>>f;
		for(int i=1;i*i<=n;i++)
			if(n%i==0)
			{
				// cout<<n/i<<' '<<i<<endl;
				ans=(ans+mu[i]*g(n/i,f))%mod;
				if(i*i!=n)
					ans=(ans+mu[n/i]*g(i,f))%mod;
			}
		cout<<(ans+mod)%mod<<endl;
	}
	return 0;
}
