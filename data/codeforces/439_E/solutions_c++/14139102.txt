#include<bits/stdc++.h>

using namespace std;

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define sol (root+root)
#define sag (root+root+1)
#define orta ((bas+son)/2)
#define ll long long
#define pii pair<int,int>

const int N=1e5+5;
const int mod=1e9+7;
const int inf=1e9+7;

int ans,sum,i,q,n,f,j;
int fact[N+5],inv[N+5],dp[N+5];

vector<int> bol[N+5];

int FE(int x,int k){
	if(k==1)
		return x;
	int temp=FE(x,k/2);
	temp=(ll)temp*temp%mod;
	if(k&1)
		temp=(ll)temp*x%mod;
	return temp;
}

int C(int x,int y){
	if(x<y)
		return 0;
	return (ll)fact[x]*inv[y]%mod*inv[x-y]%mod;
}

int solve(int n,int f){
	if(f==1)
		return n==1;
	int i,j;
	ans=C(n-1,f-1);
	for(i=0 ; i<bol[n].size() ; i++){
		sum=bol[n][i];
		dp[sum]=C(sum-1,f-1);
		for(j=0 ; j<bol[sum].size() ; j++)
			dp[sum]=((dp[sum]-dp[bol[sum][j]])%mod+mod)%mod;
		ans=((ans-dp[sum])%mod+mod)%mod;
	}
	return ans;
}

main(){

	scanf("%d",&q);

	fact[0]=1;

	for(i=1 ; i<=N ; i++)
		fact[i]=(ll)fact[i-1]*i%mod;

	for(i=0 ; i<=N ; i++)
		inv[i]=FE(fact[i],mod-2);

	for(i=2 ; i<=N ; i++)
		for(j=i+i ; j<=N ; j+=i)
			bol[j].pb(i);

	for(i=1 ; i<=q ; i++){
		scanf("%d %d",&n,&f);
		printf("%d\n",solve(n,f));
	}

}
