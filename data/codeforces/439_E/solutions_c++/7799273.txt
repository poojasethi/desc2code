#include <bits/stdc++.h>
#define mp make_pair
using namespace std;
const int MAX = 1e5+10;
const int MOD = 1000000007;
typedef long long LL;
map<pair<LL,LL>,LL> dp;
LL A[MAX],B[MAX];
LL Qmod(LL x,LL n) {
    LL res=1;
    while(n>0) {
        if(n&1LL) res=res*x%MOD;
        x=x*x%MOD;
        n>>=1LL;
    }
    return res;
}
void init() {
    A[0]=1; B[0]=1;
    for(int i=1;i<MAX;i++) {
        A[i]=(A[i-1]*i)%MOD;
        B[i]=Qmod(A[i],(LL)(MOD-2));
    }

}

LL dfs(LL n,LL f) {
    if(dp.find(mp(n,f))!=dp.end()) return dp[mp(n,f)];
    if(n<f) return 0;
    if(f==1) return n==1?1:0;
    LL t=((A[n-1]*B[f-1])%MOD*B[n-f])%MOD;
    LL i;
    for(i=2;i*i<n;i++) {
        if(n%i==0) {
            t=(t-dfs(n/i,f)-dfs(i,f))%MOD;
        }
    }
    if(i*i==n) t=(t-dfs(n/i,f))%MOD;
    return dp[mp(n,f)]=t;
}

int main() {
    int cas; LL n,f;
    dp.clear();
    init();
    scanf("%d",&cas);
    for(int i=0;i<cas;++i) {
        scanf("%I64d %I64d",&n,&f);
        printf("%I64d\n",(dfs(n,f)+MOD)%MOD);
    }
    return 0;
}

/*
40
37 15
48 10
16 5
25 23
32 20
24 4
46 19
16 13
1 1
37 22
44 29
24 6
27 10
39 16
28 13
5 4
31 22
9 2
30 26
23 16
16 12
43 5
29 1
20 5
40 12
18 14
22 15
29 2
3 2
6 3
45 28
42 34
43 32
10 10
12 8
10 8
4 1
17 17
16 7
8 7
*/
