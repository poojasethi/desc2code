#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
using namespace std;
typedef long long LL;
const int maxn = 100010 ;
const LL MOD = 1e9 + 7 ;
typedef pair<int,int> PII ;
map<PII,int>M ;
LL S[maxn] , inv[maxn] ;
vector<int>fac[maxn];
LL pow_mod(LL a, LL n) {
    LL ret = 1 ;
    while(n) {
        if(n&1) ret = ret * a % MOD ;
        a = a*a%MOD ;
        n>>=1 ;
    }
    return ret ;
}
LL cal_inv(LL a) {
    return pow_mod(a , MOD - 2) ;
}
LL C(int n ,int k) {
    return S[n] * inv[k] % MOD * inv[n-k] % MOD ;
}
LL F(int n ,int f) {
    PII x = make_pair(n ,f) ;
    if(M.find(x) != M.end()) return M[x] ;
    if(n < f) return 0 ;
    if(n < f*2) return C(n-1 , f-1) ;
    LL ret = C(n-1 , f-1) ;
    for(size_t i=0; i<fac[n].size() ; i++)
        ret -= F(n/fac[n][i] , f) ;
    while(ret < 0) ret += MOD ;
    return  M[x] = ret ;
}

int main()
{
    //freopen("in.txt","r",stdin);
    S[0] = 1 ;
    for(int i=1; i<maxn; i++) S[i] = S[i-1] * i % MOD ;
    for(int i=0; i<maxn; i++) inv[i] = cal_inv(S[i]) ;
    for(int i=2; i<maxn ; i++)
        for(int j=i; j<maxn; j+=i)
            fac[j].push_back(i) ;
    int q , n , f;
    cin>>q ;
    while(q--) {
        scanf("%d%d" ,&n , &f) ;
        printf("%lld\n" , F(n , f)) ;
    }
    return 0;
}

		    	 	   	  		   	   	