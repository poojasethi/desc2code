#include<cstdio>
#include<vector>
using namespace std;
int mod=1000000007;
const int N=100050;
int n,m;
int f[N];
vector<int> yz[N];
int jc[N],cj[N];

int ksm(int x,int y){
  int ans=1;
  for(;y;y/=2,x=(1ll*x*x)%mod)
    if(y&1)
      ans=(1ll*ans*x)%mod;
  return ans;    
}

void ol(){
  for(int i=2;i<=100000;i++)
    if(!f[i]){
	  yz[i].push_back(i);
	  for(int j=2;i*j<=100000;j++){
	    f[i*j]=1;
	    yz[i*j].push_back(i);
	  }
	}
  jc[0]=1;
  for(int i=1;i<=100000;i++)
    jc[i]=(1ll*jc[i-1]*i)%mod;
  for(int i=0;i<=100000;i++)
    cj[i]=ksm(jc[i],mod-2);  
}
int C(int x,int y){
  return ((1ll*jc[x]*cj[y]%mod)*cj[x-y])%mod;
}
int ask(int x,int y){
  if(x<y) return 0;
  return C(x-1,x-y);
}
int x[20],s;
int ans=0;
void dfs(int v,int gc,int _){
  if(v==s+1){
    ans+=1ll*_*ask(n/gc,m);
    ans%=mod;
    return;
  }
  dfs(v+1,gc*x[v],-_);
  dfs(v+1,gc,_);
}
int main(){
  ol();
  int T;
  scanf("%d",&T);
  while(T--){
    scanf("%d%d",&n,&m);
    s=0;ans=0;
	for(int i=0;i<yz[n].size();i++)
      x[++s]=yz[n][i];
    dfs(1,1,1);
    if(ans<0)ans+=mod;  
	printf("%d\n",ans);
  }
}