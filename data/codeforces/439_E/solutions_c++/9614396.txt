#include<stdio.h>
#include<vector>
#define N 100000
#define M 1000000007
using namespace std;
long long fact[N+1];
long long rev[N+1];
long long rfact[N+1];
vector<int> e[N+1];
int dp[N+1];
vector<int> used;

void init(){
    int i,j;
    for(i=1;i<=N;i++){
        for(j=2;i*j<=N;j++)e[i*j].push_back(i);
        dp[i]=-1;
    }
    fact[0]=1;
    for(i=1;i<=N;i++)fact[i]=fact[i-1]*i%M;
    rev[1]=1;
    for(i=2;i<=N;i++)rev[i]=M-rev[M%i]*(M/i)%M;
    rfact[0]=1;
    for(i=1;i<=N;i++)rfact[i]=rfact[i-1]*rev[i]%M;
}

int C(int n,int k){
    return fact[n]*(rfact[k]*rfact[n-k]%M)%M;
}

int solve(int n,int f){
    if(dp[n]!=-1)return dp[n];
    used.push_back(n);
    if(n<f)return dp[n]=0;
    int ans=C(n-1,f-1);
    for(int i=0;i<e[n].size();i++)ans=(ans+M-solve(e[n][i],f))%M;
    return dp[n]=ans;
}

int main(){
    init();
    int q;
    scanf("%d",&q);
    for(int i=0;i<q;i++){
        int n,f;
        scanf("%d %d",&n,&f);
        printf("%d\n",solve(n,f));
        for(int j=0;j<used.size();j++)dp[used[j]]=-1;
        used.clear();
    }
    return 0;
}