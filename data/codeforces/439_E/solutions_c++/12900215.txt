#include <bits/stdc++.h>

#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define MOD 1000000007
#define ll long long int

using namespace std;

ll fact[100005],ifact[100005];
vector<int> prime_divisors[100005];

ll C(int a,int b) {
	ll ans = (fact[a]*ifact[b])%MOD;
	ans = (ans*ifact[a-b])%MOD;
	return ans;
}

ll expo(ll a, ll b) {
	ll ans=1;
	while(b) {
		if(b&1)
			ans=(ans*a)%MOD;
		a=(a*a)%MOD;
		b>>=1;
	}
	return ans;
}

void pre(void) {
	int i,j;
	fact[0]=1;
	ifact[0]=1;
	for(i=1;i<=100000;i++) {
		fact[i]=(fact[i-1]*i)%MOD;
		ifact[i]=expo(fact[i],MOD-2);
	}
	for(i=2;i<=100000;i++) {
		if(prime_divisors[i].size())	continue;
		for(j=2;j*i<=100000;j++) {
			prime_divisors[j*i].pb(i);
		}
	}
}

void solve(void) {
	int n,f,i,x,no,k,c,j;
	cin>>n>>f;
	if(f==1) {
		if(n==1)
			cout<<1<<endl;
		else
			cout<<0<<endl;
		return;
	}
	ll q,ans=C(n-1,f-1);
	//cout<<ans<<endl;
	no=prime_divisors[n].size();
	for(i=1;i<(1<<no);i++) {
		k=1;
		c=0;
		for(j=0;j<no;j++) {
			if(i&(1<<j)) {
				c++;
				k*=prime_divisors[n][j];
			}
		}
		if((n/k)<f)	continue;
		q=C(n/k-1,f-1);
		if(c%2)
			ans-=q;
		else
			ans=(ans+q)%MOD;
		if(ans<0)
			ans+=MOD;
	}
	cout<<ans<<endl;
}

int main() {
	pre();
	int q;
	cin>>q;
	while(q--) {
		solve();
	}
	return 0;
}