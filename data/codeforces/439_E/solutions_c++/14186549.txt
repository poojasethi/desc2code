#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#define mod 1000000007
#define fi first
#define se second
#define maxn 100005
#define pb push_back
using namespace std;
vector < int > bol[maxn];
int n,m,i,j,k,fak[maxn],q,t,res,res2;
bool p[maxn];
int fe(int x,int y){
	if(!y)
	return 1;
	int a=fe(x,y/2);
	a=1ll*a*a%mod;
	if(y%2)
	a=1ll*a*x%mod;
	return a;
}
int f(int x,int y){
	int res=1;
	res=res*fak[x]%mod;
	res=1ll*res*fe(fak[y],mod-2)%mod;
	res=1ll*res*fe(fak[x-y],mod-2)%mod;
	return res;
}
int main(){
	for(i=2;i<=1000;i++){
		if(p[i])
		continue;
		for(j=i*i;j<=1e5;j+=i){
		bol[j].pb(i);
		p[j]=true;
		}
	}
	fak[0]=1;
	for(i=1;i<=1e5;i++)
	fak[i]=1ll*i*fak[i-1]%mod;
	scanf("%d",&q);
	for(t=1;t<=q;t++){
		scanf("%d %d",&n,&m);
		int dv=n;
		for(i=0;i<bol[n].size();i++)
			while(dv%bol[n][i]==0)
			dv/=bol[n][i];
		if(dv>1)
		bol[n].pb(dv);
		res=0;
		int sz=bol[n].size();
		for(i=0;i<(1<<sz);i++){
			int crp=1;
			for(j=0;j<sz;j++)
			if((1<<j) & i)
			crp*=bol[n][j];
			int crp2=n/crp;
			if( crp2 < m)
			res2=0;
			else 
			res2=f(crp2-1,m-1);
			if(__builtin_popcount(i)%2==0)
			res=(res+res2)%mod;
			else 
			res=(res+mod-res2)%mod;
		}
		printf("%d\n",res);
	}
	return 0;
}
