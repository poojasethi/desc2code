#include<cstdio>
#include<algorithm>
#define mod 1000000007
#define N 200010
using namespace std;
int prime[N],Minp[N],Ptot,n,f,q,a[N],tot;
bool vis[N];
long long d[N]={1},re[N]={0,1},red[N]={1,1};
void init()
{
    int i,j;
    long long a,b;
    for(i=2;i<=200000;++i)
    {
        if (!vis[i]) prime[++Ptot]=Minp[i]=i;
        for(j=1;j<=Ptot && i*prime[j]<=200000;++j)
        {
            vis[i*prime[j]]=1;
            Minp[i*prime[j]]=prime[j];
            if (i%prime[j]==0) break;
        }
    }
    for(i=1;i<=200000;++i) d[i]=d[i-1]*i%mod;
    for(i=2;i<=200000;++i)
    {
        a=mod%i; b=mod/i;
        re[i]=(-b*re[a])%mod; if (re[i]<0) re[i]+=mod;
        red[i]=red[i-1]*re[i]%mod;
    }
}
long long tryy(int t,int x)
{
    if (t>tot)
    {
        if (n/x<f) return 0;
        int x1=n/x-1,x2=f-1;
        long long s=d[x1]*red[x2]%mod*red[x1-x2]%mod;
        return s;
    }
    long long s1=tryy(t+1,x),s2=tryy(t+1,x*a[t]);
    return (s1-s2+mod) % mod;
}
void work()
{
    tot=0;
    int x=n;
    while (x!=1)
    {
        if (Minp[x]!=a[tot]) a[++tot]=Minp[x];
        x/=Minp[x];
    }
    printf("%I64d\n",tryy(1,1));
}
int main()
{
    init();
    for(scanf("%d",&q);q;--q)
    {
        scanf("%d%d",&n,&f);
        work();
    }
    return 0;
}
