#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

int n;
vector < pair <int, int> > g[200500];
vector <int> ans[200500];
vector <bool> used[200500];
int ansn = 0;

void dfs(int v, int clr = 0, int from = -1) {
	int cnt = 1;

	for (int i = 0; i < g[v].size(); i++) {
		int to = g[v][i].first;
		if (to != from) {
			if (cnt == clr)
				cnt++;
			
			ans[cnt].push_back(g[v][i].second);
			ansn = max(ansn, cnt);
			dfs(to, cnt, v);
			cnt++;
		}
	}
}

int main() {
	scanf("%d", &n);

	for (int i = 1; i < n; i++) {
		int x, y;
		scanf("%d%d", &x, &y);

		g[x].push_back(make_pair(y, i));
		g[y].push_back(make_pair(x, i));
	}

	dfs(1);

	printf("%d\n", ansn);

	for (int i = 1; i <= ansn; i++) {
		printf("%d ", (int)ans[i].size());

		for (int j = 0; j < ans[i].size(); j++) {
			printf("%d ", ans[i][j]);
		}

		puts("");
	}

	return 0;
}