#include <iostream>
#include <cstdio>
#include <iomanip>
#include <algorithm>
#include <vector>
#include <cstring>
#include <set>
#include <map>
#include <cmath>
#include <cstdlib>
#include <ctime>
using namespace std;

const int maxn = 2 * 100100;
const int INF = 1E9;
const int base = 1E9 + 7;

int work[maxn], ans = 0;
vector < pair < int, int > > gr[maxn];
vector < int > edges[maxn];

void dfs( int v, int par ) {
    int cnt = 1;
    for ( int i = 0; i < gr[v].size(); i++ )
        if ( gr[v][i].first != par ) {
            while( work[v] == cnt )
                cnt++;
            work[ gr[v][i].first ] = cnt;
            ans = max(ans, cnt);

            edges[cnt].push_back( gr[v][i].second );
            cnt++;
            dfs( gr[v][i].first, v );
        }
}

int solve() {
    int n;
    scanf( "%d", &n );
    for ( int i = 1; i <= n - 1; i++ ) {
        int x, y;
        scanf( "%d%d", &x, &y );
        gr[x].push_back( make_pair(y, i) );
        gr[y].push_back( make_pair(x, i) );
    }
    dfs( 1, -1 );

    printf( "%d\n", ans );
    for ( int i = 1; i <= ans; i++ ) {
        printf( "%d ", (int)edges[i].size() );
        for ( int j = 0; j < edges[i].size(); j++ )
            printf( "%d ", edges[i][j] );
        printf( "\n" );
    }
}

int main() {
//    freopen( "input.txt", "r", stdin );
//    freopen( "output.txt", "w", stdout );
    ios_base::sync_with_stdio(0);
    solve();
    return 0;
}
