#include <vector>
#include <queue>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

#ifdef linux
#define freopen if(0)freopen
#else
#define cerr if(0)cerr
#endif
#define dbg(a) cerr<<#a"="<<a<<endl;

#define mp make_pair
#define pb push_back
#define F first
#define S second

using namespace std;

vector<int> answer[300000];

bool used[300000];
vector< pair<int, int> > adj[300000];
int n;

void dfs(int v = 1, int forb = -1)
{
	used[v] = true;

	// cerr << v <<  " [ " << endl;

	int step = 0;

	for (int i = 0; i < adj[v].size(); ++i) {
		int u, w;

		u = adj[v][i].F;
		w = adj[v][i].S;

		if (used[u])
			continue;

		if (step == forb)
			step++;

		answer[step].pb(w);
		// cerr << "\t" << v << " -- { " << step << " } -- " << u << endl;
		dfs(u, step++);
	}

	// cerr << "] " << v << endl;
}

int main()
{
	int ans_cnt;
	cin >> n;

	for (int i = 1; i < n; ++i) {
		int u, v;

		scanf("%d %d", &u, &v);
		adj[u].pb(mp(v, i));
		adj[v].pb(mp(u, i));
	}

	dfs();

	for (ans_cnt = 0; !answer[ans_cnt].empty(); ++ans_cnt);

	cout << ans_cnt << endl;

	for (int i = 0; i < ans_cnt; ++i) {
		printf("%d ", answer[i].size());
		for (int j = 0; j < answer[i].size(); ++j)
			printf("%d ", answer[i][j]);
		printf("\n");
	}

	return 0;
}




















