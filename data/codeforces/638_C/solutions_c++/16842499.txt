#include <bits/stdc++.h>
#define mp make_pair
#define pb push_back

using namespace std;

vector <pair<int, int> > g[200005];
vector <vector<int> > ans;

int n;

bool u[200005];

void dfs(int v, int w) {
    int it = 0;
    if (it == w) it++;
    for (int i = 0; i < g[v].size(); i++)
        if (!u[g[v][i].second]) {
            ans[it].pb(g[v][i].second);
            u[g[v][i].second] = 1;
            dfs(g[v][i].first, it);
            it++;
            if (it == w) it++;
        }
}

int main() {
    //freopen("input.txt", "r", stdin);
    //freopen("output.txt", "w", stdout);
    int a, b, x = -1;
    scanf("%d", &n);
    for (int i = 1; i < n; i++) {
        scanf("%d%d", &a, &b);
        g[a].pb(mp(b, i));
        if (x == -1 || g[a].size() > g[x].size()) x = a;
        g[b].pb(mp(a, i));
        if (x == -1 || g[b].size() > g[x].size()) x = b;
    }
    for (int i = 0; i < g[x].size(); i++) {
        vector <int> tmp;
        tmp.pb(g[x][i].second);
        ans.pb(tmp);
        u[g[x][i].second] = 1;
    }
    for (int i = 0; i < g[x].size(); i++)
        dfs(g[x][i].first, i);
    printf("%d\n", ans.size());
    for (int i = 0; i < ans.size(); i++) {
        printf("%d ", ans[i].size());
        for (int j = 0; j < ans[i].size(); j++) printf("%d ", ans[i][j]);
        printf("\n");
    }
    return 0;
}
