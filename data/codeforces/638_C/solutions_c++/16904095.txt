#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <vector>
#include <queue>
#include <map>
#include <stack>
#define PI acos(-1.0)
#define CLR(a, b) memset(a, (b), sizeof(a))
#define fi first
#define se second
#define ll o<<1
#define rr o<<1|1
using namespace std;
typedef long long LL;
typedef pair<int, int> pii;
const int MAXN = 2*1e5 + 1;
const int pN = 1e6;// <= 10^7
const int INF = 0x3f3f3f3f;
const int MOD = 1e9 + 7;
void add(LL &x, LL y) { x += y; x %= MOD; }
map<pii, int> fp;
vector<int> G[MAXN], day[MAXN];
int ans;
void DFS(int u, int fa, int last) {
    int id = 0;
    for(int i = 0; i < G[u].size(); i++) {
        int v = G[u][i];
        if(v == fa) continue;
        id++; if(id == last) id++;
        day[id].push_back(fp[pii(u, v)]);
        DFS(v, u, id);
    }
    ans = max(ans, id);
}
int main()
{
    int n; cin >> n;
    for(int i = 1; i <= n; i++) G[i].clear();
    fp.clear();
    for(int i = 1; i <= n-1; i++) {
        int x, y; cin >> x >> y;
        fp[pii(x, y)] = fp[pii(y, x)] = i;
        G[x].push_back(y); G[y].push_back(x);
    }
    ans = 0; DFS(1, -1, 0);
    cout << ans << endl;
    for(int i = 1; i <= ans; i++) {
        cout << day[i].size();
        for(int j = 0; j < day[i].size(); j++) {
            cout << ' ' << day[i][j];
        }
        cout << endl;
    }
    return 0;
}
