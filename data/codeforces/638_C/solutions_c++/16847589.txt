#include <bits/stdc++.h>
using namespace std;

vector < pair < int, int > > a[200050];
pair < int, int > d[200050];

void dfs(int v, int p, int p_col) {
    int cur = 1;
    for (int i = 0; i < a[v].size(); i++)
        if (a[v][i].first != p) {
            if (cur == p_col)
                cur++;
            d[a[v][i].second].first = cur;
            dfs(a[v][i].first, v, cur);
            cur++;
        }
}

int main()
{
    ios::sync_with_stdio(0);
    int n;
    cin >> n;
    for (int i = 0; i < n - 1; i++) {
        d[i].second = i;
        int x, y;
        cin >> x >> y;
        x--;
        y--;
        a[x].push_back(make_pair(y, i));
        a[y].push_back(make_pair(x, i));
    }
    dfs(0, -1, 0);
    sort(d, d + n - 1);
    cout << d[n - 2].first << endl;
    int j = 0;
    d[n - 1].first = 1e9;
    for (int i = 0; i < n - 1; i++) {
        if (d[i].first != d[i + 1].first) {
            cout << i - j + 1;
            for (int k = j; k <= i; k++)
                cout << " " << d[k].second + 1;
            cout << endl;
            j = i + 1;
        }
    }
    return 0;
}
