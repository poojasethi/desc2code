#include <iostream>
#include <vector>

using namespace std;

vector<vector<pair<int, int> > > gr;
vector<vector<int > > ans;
vector<int> used;

void calc(int v, int cant) {
    used[v] = true;
    
    int day = 0;
    if (day == cant) day++;
    for (int i = 0; i < (int)gr[v].size(); ++i)
    {
        int u = gr[v][i].first;
        if (!used[u])
        {
            calc(u, day);
            ans[day].push_back(gr[v][i].second + 1);
            day ++;
            if (day == cant) day++;
        }
        
    }
}

int main(int argc, const char * argv[]) {
    int n;
    cin >> n;
    gr.resize(n);
    used.resize(n);
    
    for (int i = 0; i < n - 1; ++i)
    {
        int a, b;
        cin >> a >> b;
        a--; b--;
        gr[a].push_back(make_pair(b, i));
        gr[b].push_back(make_pair(a, i));
    }
    
    int m = 0;
    int v;
    for (int i = 0; i < n; ++i)
    {
        if (m < (int)gr[i].size())
        {
            m = (int)gr[i].size();
        }
    }
    ans.resize(m);
    
    calc(v, -1);
    
    cout << m << endl;
    for (int i = 0; i < m; ++i)
    {
        cout << (int)ans[i].size();
        for (int j = 0; j < (int)ans[i].size(); ++j)
        {
            cout << " " << ans[i][j];
        }
        cout << endl;
    }
}
