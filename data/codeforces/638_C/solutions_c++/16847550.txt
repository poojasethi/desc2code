#include <cstdio>
#include <list>
#include <queue>
#include <set>

typedef std::pair<int, int> pii;

const int N = (int)2e5 + 111;

int n, u, v, k;
std::list<pii> g[N];
std::queue<int> q;
int wait[N];
bool used[N];
std::vector<int> ans[N];

void add_edge(int u, int v, int i) {
    g[u].push_back(std::make_pair(v, i));
    g[v].push_back(std::make_pair(u, i));
}

int main() {
    scanf("%d", &n), k = 0;

    for (int i = 0; i < n - 1; i++) {
        scanf("%d%d", &u, &v);
        add_edge(--u, --v, i);
    }

    for (int i = 0; i < n; i++)
        wait[i] = -1, used[i] = false;

    q.push(0), used[0] = true;

    while (!q.empty()) {
        int u = q.front(); q.pop();
        int t = 0;
        while (!g[u].empty()) {
            int v = g[u].back().first;
            int e = g[u].back().second;
            g[u].pop_back();
            if (used[v])
                continue;
            if (wait[u] == t)
                t++;
            ans[t].push_back(e);
            q.push(v);
            wait[v] = t, used[v] = true;
            t++;
        }
        k = (k < t) ? t : k;
    }

    printf("%d\n", k);

    for (int i = 0; i < k; i++) {
        printf("%d ", (int)ans[i].size());
        for (int j = 0; j < ans[i].size(); j++)
            printf("%d ", ans[i][j] + 1);
        putchar('\n');
    }

    return 0;
}
