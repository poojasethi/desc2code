#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <vector>
#include <queue>
#include <map>
#include <stack>
#define PI acos(-1.0)
#define CLR(a, b) memset(a, (b), sizeof(a))
#define fi first
#define se second
#define ll o<<1
#define rr o<<1|1
using namespace std;
typedef long long LL ;
struct node{
    int e,next,id ;
}Edge[1000000] ;
int head[1000000] , cnt = 1 ;
void add(int s,int e,int id){
    Edge[cnt].e = e  ; Edge[cnt].next = head[s] ;Edge[cnt].id=id;
    head[s] = cnt ++ ;
}
int res = 0 ;
vector <int> ans[1000000] ;
void dfs(int s, int p ,int t){
    int now = 0 ;
    for(int i=head[s] ; i!=0 ; i=Edge[i].next){
        int v = Edge[i].e ;
        if(v == p) continue ;
        now ++ ;
        if(now == t) now ++ ;
        ans[now].push_back(Edge[i].id) ;
        dfs(v , s , now) ;
    }
    res = max(res , now) ;
}
int main(){
    ///freopen("1" , "r" ,stdin) ;
    int n ; scanf("%d" , &n) ;
    int a, b ;
    for(int i=1;i<n;i++){
        scanf("%d%d" , &a,&b) ;
        add(a , b , i) ;
        add(b , a , i) ;
    }
    dfs(1 , -1 , 0) ;
    printf("%d\n",res) ;
    for(int i=1;i<=res;i++){
        int len = ans[i].size() ;
        printf("%d" , len) ;
        for(int j=0;j<len;j++){
            printf(" %d",ans[i][j]) ;
        }
        printf("\n") ;
    }
}
