#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

const int N = 200000;

vector< pair<int, int> > g[N];
vector<int> days[N];
int ans;

void dfs(int v, int p, int used) {
    int nxt = 1;
    for (int i = 0; i < g[v].size(); i++) {
        int u = g[v][i].first;
        int w = g[v][i].second;
        if (u != p) {
            if (nxt == used)
                nxt++;
            days[nxt].push_back(w);
            ans = max(ans, nxt);
            dfs(u, v, nxt++);
        }
    }
}

int main() {
    int n;
    cin >> n;
    for (int i = 0; i < n - 1; i++) {
        int u, v;
        cin >> u >> v;
        u--, v--;
        g[u].push_back(make_pair(v, i + 1));
        g[v].push_back(make_pair(u, i + 1));
    }
    dfs(0, -1, -1);
    cout << ans << endl;
    for (int i = 1; i <= ans; i++) {
        cout << days[i].size() << ' ';
        for (int j = 0; j < days[i].size(); j++)
            cout << days[i][j] << ' ';
        cout << endl;
    }
    return 0;
}
