#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
namespace C{
  int used[222222];
  int mask[222222];
  vector<int> cnt[222222];
  vector<pair<int,int> > g[222222];
  void dfs(int start, int color){// modified DFS
    used[start] = 1;
    int pos =0;
    for(int i=0;i<g[start].size();i++){
      int to = g[start][i].first;
      int edge = g[start][i].second;
      if(!used[to]){
        int next_color = pos + (pos>=color);
        mask[edge] = next_color;
        dfs(to, next_color);
        pos++;
      }
    }
  }
  int sol(){
    int n;
    cin >> n;
    int from,to;
    for(int i=0;i<n-1;i++){
      cin >> from >> to;
      g[from].pb(mp(to,i));
      g[to].pb(mp(from,i));
    }
    dfs(1,2e9);
    int mx =0;
    for(int i=0;i<n-1;i++){
      cnt[mask[i]].pb(i+1);
      mx = max(mask[i],mx);
    }
    cout << mx+1 << endl;
    for(int i=0;i<=mx;i++){
      cout << cnt[i].size() << " ";
      for(int j=0;j<cnt[i].size();j++){
        cout << cnt[i][j] << " ";
      }
      cout << endl;
    }
  }
}
int main(){
  ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
  C::sol();
  return 0;
}
