#include <bits/stdc++.h>

using namespace std;

vector<int> ans[200005];
vector<pair<int,int> > graph[200005];
bool visited[200005];
void dfs(int src,int p)
{
    visited[src]=true;
    int c=0;
    for(int i=0;i<graph[src].size();i++)
    {
        if(!visited[graph[src][i].first])
        {
            if(c==p)
                c++;
            //printf("%d %d\n",c,p);
            ans[c].push_back(graph[src][i].second);
            dfs(graph[src][i].first,c);
            c++;
        }
    }
}

int main()
{
    int n;
    scanf("%d",&n);
    for(int i=0;i<n-1;i++)
    {
        int x,y;
        scanf("%d %d",&x,&y);
        x--;
        y--;
        graph[x].push_back(make_pair(y,i));
        graph[y].push_back(make_pair(x,i));
    }
    int m=0;
    for(int i=0;i<n;i++)
    {
        m=max(m,(int)graph[i].size());
    }
    dfs(1,-1);
    printf("%d\n",m);
    for(int i=0;i<m;i++)
    {
        printf("%d ",ans[i].size());
        for(int j=0;j<ans[i].size();j++)
        {
            printf("%d ",ans[i][j]+1);
        }
        printf("\n");
    }
    return 0;
}
