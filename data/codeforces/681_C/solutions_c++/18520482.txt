#include <bits/stdc++.h>
#define pb push_back
#define mkp make_pair
#define ln "\n"
using namespace std;

int n,key;
string cmd;
priority_queue< int,vector<int>,greater<int> > pq;
vector< pair<string,int> > qr;

int main() {
	cin >> n;
	for (int i=0; i<n; i++) {
		cin >> cmd;
		if (cmd=="insert") {
			cin >> key;
			pq.push(key);
			qr.pb(mkp(cmd,key));
		} else
		if (cmd=="removeMin") {
			if (pq.empty()) {
				qr.pb(mkp("insert",0));
				qr.pb(mkp("removeMin",-2000000000));
			} else {
				qr.pb(mkp(cmd,pq.top()));
				pq.pop();
			}
		} else
		if (cmd=="getMin") {
			cin >> key;
			while (!pq.empty()) {
				if (key>pq.top()) {
					qr.pb(mkp("removeMin",pq.top()));
					pq.pop();
				} else break;
			}
			if ((pq.empty())||(pq.top()>key)) {
				qr.pb(mkp("insert",key));
				pq.push(key);
			}
			qr.pb(mkp(cmd,key));
		}
	}
	cout << qr.size() << ln;
	for (int i=0; i<qr.size(); i++) {
		//if (n!=100000)
		{
			cout << qr[i].first;
			if (qr[i].first!="removeMin") cout << " " << qr[i].second;
			cout << ln;
		}// else cout << qr[i].first << " " << qr[i].second << ln;
	}
}