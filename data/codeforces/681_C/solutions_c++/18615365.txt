#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <string>
#include <queue>
#include <vector>
#include <sstream>
using namespace std;

const int maxn = 1000000 + 7;
const int INF = ~0U >> 1;
typedef long long LL;

struct node {
    char ch;
    int x;
}s[maxn];

int n;

stringstream ss;
string O;
int a;

priority_queue<int, vector<int>, greater<int> > Q;

int c = 0;

int main() {
	cin >> n;
	for (int i = 0; i < n; ++i) {
		cin >> O;
		switch (O[0]) {
			case 'i':
				cin >> a;
				Q.push(a);
				ss << O << " " << a << endl;
				++c;
				break;
			case 'g':
				cin >> a;
				while (!Q.empty() && Q.top() < a) {
					ss << "removeMin" << endl;
					Q.pop();
					++c;
				}
				if (Q.empty() || Q.top() > a) {
					ss << "insert " << a << endl;
					Q.push(a);
					++c;
				}
				ss << O << " " << a << endl;
				++c;
				break;
			case 'r':
				if (Q.empty()) {
					ss << "insert 0" << endl;
					Q.push(0);
					++c;
				}
				Q.pop();
				ss << O << endl;
				++c;
				break;
		}
	}
	cout << c << endl << ss.str();
    return 0;
}

   		   			 		 			  	  	  	 			