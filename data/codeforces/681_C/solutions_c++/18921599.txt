#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int main() {
	priority_queue<int> h;
	vector< pair<string,int> > ans;
	int n, x;
	string comm;
	cin>>n;
	for (int i=0; i<n; i++) {
		cin>>comm;
		if (comm=="insert") {
			cin>>x;
			h.push(-x);
			ans.push_back(make_pair(comm,x));
		}
		else if (comm=="removeMin") {
			if (h.empty()) 
				ans.push_back(make_pair("insert", 1));
			else 
				h.pop();	
			ans.push_back(make_pair("removeMin", 2e9));
		}
		else if (comm=="getMin") {
			cin>>x;
			while (!h.empty() && -h.top()<x) {
				ans.push_back(make_pair("removeMin", 2e9));
				h.pop();
			}
			if (h.empty() || -h.top()>x) {
				ans.push_back(make_pair("insert", x));
				h.push(-x);
			}
			ans.push_back(make_pair(comm,x));
		}
	}
	cout<<ans.size()<<'\n';
	for (int i=0; i<ans.size(); i++) {
		cout<<ans[i].first;
		if (ans[i].first!="removeMin") {
			cout<<' '<<ans[i].second;
		}
		cout<<'\n';
	}
	return 0;
}