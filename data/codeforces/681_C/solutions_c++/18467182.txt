//Code by liuchenrui
#include<bits/stdc++.h>
#define N 1000010
using namespace std;
inline void splay(int &v){
	v=0;char c=0;int p=1;
	while(c<'0' || c>'9'){if(c=='-')p=-1;c=getchar();}
	while(c>='0' && c<='9'){v=(v<<3)+(v<<1)+c-'0';c=getchar();}
	v*=p;
}
int op[N],p[N],cnt;
priority_queue<int,vector<int>,greater<int> >que;
int main(){
	int n;cin>>n;
	for(int i=1;i<=n;i++){
		char s[12];
		scanf("%s",s+1);
		if(s[1]=='i'){
			int x;splay(x);
			++cnt;op[cnt]=1;p[cnt]=x;
			que.push(x);
		}
		if(s[1]=='g'){
			int x;splay(x);
			while(!que.empty()&&que.top()<x){
				++cnt;op[cnt]=3;que.pop();
			}
			if(que.empty()||que.top()!=x){
				++cnt;op[cnt]=1;p[cnt]=x;que.push(x);
			}
			++cnt;op[cnt]=2;p[cnt]=x;
		}
		if(s[1]=='r'){
			if(que.empty()){
				++cnt;op[cnt]=1;p[cnt]=-1000000000;
				que.push(-1000000000);
			}
			++cnt;op[cnt]=3;
			que.pop();
		}
	}
	cout<<cnt<<endl;
	for(int i=1;i<=cnt;i++){
		if(op[i]==1){
			printf("insert %d\n",p[i]);
		}
		if(op[i]==2){
			printf("getMin %d\n",p[i]);
		}
		if(op[i]==3){
			printf("removeMin\n");
		}
	}
}