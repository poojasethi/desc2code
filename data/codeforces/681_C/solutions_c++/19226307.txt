#include <iostream>
#include <sstream>
#include <queue>
#include <vector>
#include <string>
#include <climits>
using namespace std;

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0);

	priority_queue<int> h;	
	vector<pair<string, int> > out;
	int n;
	cin >> n;
	for (int i=0; i<n; ++i) {
		string op;
		int num;
		cin >> op;
		if (op[0] == 'i') {
			cin >> num;
			h.push(-num);
			out.push_back(make_pair("insert", num));
		} else if (op[0] == 'g') {
			cin >> num;
			while (!h.empty() && -h.top() < num) {
				out.push_back(make_pair("removeMin", INT_MAX));
				h.pop();
			}
			if (h.empty() || -h.top() > num) {
				h.push(-num);
				out.push_back(make_pair("insert", num));
			}
			out.push_back(make_pair(op, num));
		} else {
			// Remove
			if (h.empty()) {
				out.push_back(make_pair("insert", 1));
			} else {
				h.pop();
			}
			out.push_back(make_pair("removeMin", INT_MAX));
		}
	}

	cout << out.size() << endl;
	for (int i=0, sz=out.size(); i<sz; ++i) {
		cout << out[i].first;
		if (out[i].second != INT_MAX) {
			cout << ' ' << out[i].second;
		}
		cout << endl;
	}

	return 0;
}
