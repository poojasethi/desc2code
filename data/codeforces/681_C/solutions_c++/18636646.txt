#include<bits/stdc++.h>

using namespace std;
string s[] = {"insert","getMin","removeMin"};
vector< pair<int,int> > v;
struct comp{bool operator()(int x,int y){return x>y;}};
priority_queue <int,vector<int>,comp> q;
int dec(string temp)
{
	for(int i=0 ; i<3 ; i++)
		if(temp == s[i])
			return i;
}
int main()
{
	std::ios::sync_with_stdio(false);
	int n,val;
	string temp;
	cin>>n;
	while(n--)
	{
		cin>>temp;
		int pos = dec(temp);
		if(pos != 2) cin>>val;
		if(pos == 0) 
		{
			v.push_back(make_pair(0,val));
			q.push(val);
			continue;
		}
		if(pos == 1)
		{
			while(!q.empty() && q.top() < val)
			{
				v.push_back(make_pair(2,q.top())),q.pop();
			}
			if(q.top()!=val || q.empty())
			{
				v.push_back(make_pair(0,val)),q.push(val);
			}
			v.push_back(make_pair(1,val));
		}
		if(pos == 2)
		{
			if(q.empty())
				v.push_back(make_pair(0,1));
			else
				q.pop();
			v.push_back(make_pair(2,-1));
		}
	}
	
	cout<<v.size()<<endl;
	for(int i=0 ; i<v.size() ; i++)
	{
		if(v[i].first!=2)
			cout<<s[v[i].first]<<" "<<v[i].second<<endl;
		else
			cout<<s[2]<<endl;
	}

	return 0;
}
