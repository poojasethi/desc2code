
#include<bits/stdc++.h>

typedef int LL;
using namespace std;

#define fillchar(a, x) memset(a, x, sizeof(a))
#define MP make_pair
#define PB push_back

const int M = 1000000007;

multiset <LL> st;
multiset <LL> :: iterator it; 

LL get_min()
{
if(!st.empty())
{it = st.begin();
return *it;}
else
return M;	

}

void remove_min()
{
st.erase(st.begin());
}


int main()
{
LL n,i,j;

cin>>n;

vector <pair<string,int> > v;

string s;
LL k;
string zz = "insert";

for(i=0;i<n;i++)
{
cin>>s;
if(s[0]=='i')
	{
	scanf("%d",&k);
	v.PB(MP(s,k));
	st.insert(k);
	}

if(s[0]=='r')
	{
	if(get_min()!=M)	
		remove_min();
	else
		v.PB(MP(zz,1));

	v.PB(MP("removeMin",0));

	}

if(s[0]=='g')
	{
	scanf("%d",&k);
	while(get_min()<k)
		{
		v.PB(MP("removeMin",0));	
		remove_min();		
		}

	if(get_min()>k)	
		{
		v.PB(MP("insert",k));
		st.insert(k);	
		}
	
	v.PB(MP(s,k));	
	}


}

cout<<v.size()<<endl;

for(i=0;i<v.size();i++)
{
cout<<v[i].first;
if(v[i].first[0]!='r')
	printf(" %d\n",v[i].second);
cout<<endl;
}

}

