#include <bits/stdc++.h>

using namespace std;

int n, m;
int p[100];
int e1[100], e2[100];
vector <pair <int, int> > ans;

int find (int v) {
  if (p[v] == v) return v;
  return p[v] = find(p[v]);
}

bool ok (int u, int v) {
  int uu = find(u);
  int vv = find(v);
  if (uu == vv) return false;
  if (e1[uu] != u && e2[uu] != u) {
    return false;
  }
  if (e1[vv] != v && e2[vv] != v) {
    return false;
  }
  return true;
}

void join (int u, int v) {
  int uu = find(u);
  int vv = find(v);
  assert (uu != vv);
  p[uu] = vv;
  e2[vv] = e1[vv] + e2[vv] - v;
  e1[vv] = e1[uu] + e2[uu] - u;
  if (e1[vv] > e2[vv]) swap (e1[vv], e2[vv]);
}

int main() {
  scanf ("%d %d", &n, &m);
  for (int i = 1; i <= n; i++) {
    p[i] = i;
    e1[i] = i;
    e2[i] = i;
  }
  for (int j = 0; j < m; j++) {
    int a, b;
    scanf ("%d %d", &a, &b);
    if (!ok(a, b)) {
      if (j == m- 1 && m == n && (e1[find(a)] == a || e2[find(a)] == a) && (e1[find(b)] == b || e2[find(b)] == b)) {
        printf ("YES\n0\n");
        return 0;
      }
      printf ("NO\n");
      return 0;
    }
    join (a, b);
  }  
  for (int i = 1; i <= n; i++) {
    for (int j = i+1; j <= n; j++) {
      if (!ok(i, j)) continue;
      ans.push_back(make_pair(i, j));
      join (i, j);
    }
  }
  ans.push_back(make_pair(e1[find(1)], e2[find(1)]));
  printf ("YES\n%d\n", (int) ans.size());
  for (int i = 0; i < (int) ans.size(); i++) {
    printf ("%d %d\n", ans[i].first, ans[i].second);
  }
}
