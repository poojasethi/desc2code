#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <map>
#include <cmath>
#include <string>
#include <queue>
#include <stack>
#include <set>
#include <bitset>

#define pi acos(-1)
#define _max 25
#define inf 0xfffffff
#define eps 0.0001
#define lp(i,n) for(int i=0;i<n;i++)
#define lpb(i,n) for(int i=1;i<=n;i++)
#define smap(p,ma) for(p=ma.begin();p!=ma.end();p++)
#define MA(a,b) ((a)>(b)?(a):(b))
#define MI(a,b) ((a)<(b)?(a):(b))
#define PB push_back
#define FIR first
#define SEC second
#define MP make_pair
#define PQ priority_queue
#define MSET multiset
#define NPS string::npos
#define debug
using namespace std;


int n,m,a,b,lp;
int p[55],d[55];
int find(int x){
  if(p[x]==x) return x;
  else return  p[x] = find(p[x]);
}
void cal(){
   if(n < m){
     printf("NO\n");
     return ;
   }
   lpb(i,n) p[i]=i;
   lpb(i,m){
     scanf("%d%d",&a,&b);
     d[a]++; d[b]++;
     if(d[a]>2 || d[b]>2 ){
        printf("NO\n");
        return ;
     }

     if(p[a] == p[b]) lp++;
     else p[find(a)] = find(b);

   }
   if(lp>0){
     if(lp==1 && m==n) {printf("YES\n0");return;}
     else {printf("NO\n"); return ;}
   }

   printf("YES\n%d\n",n-m);
   lpb(i,n-1) for(int j=i+1;j<=n;j++){
      if(d[i]<2&&d[j]<2&&find(i)!=find(j)){
        printf("%d %d\n",i,j);
        d[i]++; d[j]++;
        p[find(i)] = p[find(j)];
      }
   }
   lpb(i,n) for(int j=n;j>=i;j--){
      if(d[i]<2&&d[j]<2){
        printf("%d %d\n",i,j);
        d[i]++; d[j]++;

      }
   }
}
main(){
    scanf("%d%d",&n,&m);
    cal();

}
