#include<stdio.h>
#include<iostream>

using namespace std;

const int maxn=51;

int deg[maxn];
int par[maxn];

int n,m,loop=0,maxd=0;

	int find(int t)
	{
		if (par[t]!=t) par[t]=find(par[t]);
		return par[t];
	}
	
void doit()
{
	scanf("%d%d",&n,&m);
	
	for (int i=1;i<=n;i++)
		par[i]=i;
	
	for (int i=1;i<=m;i++)
	{
		int u,v; scanf("%d%d",&u,&v);
		
		deg[u]++;
		deg[v]++;
		
		if (find(u)==find(v)) loop++;
			else par[find(u)]=find(v);
		
		maxd=max(maxd,max(deg[u],deg[v]));
	}
	
	if (maxd>2) { printf("NO\n") ; return; }
	if (loop>0)
	{
		if (maxd==2 && n==m && loop==1) printf("YES\n0\n");
			else printf("NO\n");
		return;
	}
	
	printf("YES\n%d\n",n-m);
	for (int i=1;i<=n-1;i++)
		for (int j=i+1;j<=n;j++)
			if (deg[i]<2 && deg[j]<2 && find(i)!=find(j))
			{
				deg[i]++;
				deg[j]++;
				par[find(i)]=find(j);
				printf("%d %d\n",i,j);
			}
	for (int i=1;i<=n;i++)
		for (int j=n;j>=i;j--)
			if (deg[i]<2 && deg[j]<2)
			{
				deg[i]=deg[j]=2;
				par[find(i)]=find(j);
				printf("%d %d\n",i,j);
			}
}

int main()
{	
	doit();
	
	return 0;
}