#include <cstdio>
#include <algorithm>
using namespace std;

int sz[55],p[55],a[55];
/*
ABCDEFGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGG
GGGGGGGGGGGGGGGGGGGGGGGGGGGG

*/
bool link(int x, int y){
    while(x!=p[x]) x=p[x]=p[p[x]];
    while(y!=p[y]) y=p[y]=p[p[y]];
    if(x==y) return false;
    if(sz[x]<=sz[y]) sz[p[x]=y]+=sz[x];
                else sz[p[y]=x]+=sz[y];
    return true;
}

int main(){
    int n,m,x,y,c=0;
    scanf("%d%d",&n,&m);
    for(int i=1;i<=n;i+=sz[p[i]=i]=1);
    for(int i=1;i<=m;i++){
        scanf("%d%d",&x,&y);
        c+=!link(x,y);
        a[x]++,a[y]++;
    }
    if(*max_element(a+1,a+n+1)>2 || c>1 || c==1 && m!=n)
        return puts("NO")&0;
    printf("YES\n%d\n",n-m);
    while(m<n) if(++m==n){
        int t=min_element(a+1,a+n+1)-a;
        printf("%d %d\n",t,a[t]?min_element(a+t+1,a+n+1)-a:t);
    }else{
        for(int i=1;i<=n;i++) for(int j=i+1;j<=n;j++)
            if(a[i]<2 && a[j]<2 && link(i,j))
                printf("%d %d\n",i,j),a[i]++,a[j]++;
    }
}
				 		 		  			 	  		 	  	