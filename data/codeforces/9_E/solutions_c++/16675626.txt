#include <cstdio>
#include <iostream>
#include <string>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <cmath>
#include <cstdlib>
#include <time.h>
using namespace std;

const int N = 50;
int E[N][N];
int n,m;
bool vis[N], hasCycle;

void dfs(int u, int f){
	vis[u]=true;
	for(int i=0;i<n;++i){
		if((i!=f && E[u][i]>0) || E[u][i]==2){
			if(vis[i]) hasCycle=true;
			else dfs(i,u);
		}
	}
}
bool check(){
	for(int i=0;i<n;++i){
		int sum=0;
		for(int j=0;j<n;++j) sum+=E[i][j];
		if(sum>2) return false;
	}
	memset(vis,0,sizeof(vis));
	hasCycle=false;
	int numCycle=0;
	for(int i=0;i<n;++i){
		if(!vis[i]){
			++numCycle;
			dfs(i,-1);
		}
	}
	if(numCycle>=2 && hasCycle) return false;
	return true;
}
int main(){
    //freopen("E.in","r",stdin);
	cin>>n>>m;

	if(n==2 && m==0) {
	        puts("YES");
		cout<<2<<endl;
		cout<<1<<" "<<2<<endl;
		cout<<1<<" "<<2<<endl;
		return 0;
	}
	int a,b;
	while(m--){
		cin>>a>>b;
		--a, --b;
		E[a][b]++;
		E[b][a]++;
	}
	if(!check()){
		puts("NO");
		return 0;
	}
	puts("YES");
	vector<int> vi;
	for(int i=0;i<n;++i){
		for(int j=i;j<n;++j){
			E[i][j]++;
			E[j][i]++;
			if(check()) {
				vi.push_back(i);
				vi.push_back(j);
			} else {
				E[i][j]--;
				E[j][i]--;
			}
		}
	}
	cout<<vi.size()/2<<endl;
	for(int i=0;i<(int)vi.size()/2;++i)
		cout<<vi[2*i]+1<<" "<<vi[2*i+1]+1<<endl;

    return 0;
}
 			 				 		 				    	  			 	 	