#include <iostream>
#define N 51
using namespace std;
int deg[N], par[N], n, m, x, y;
int find(int x){
    return (par[x] == x ? x : par[x] = find(par[x]));
}
void init(){
    for (int i = 1; i <= n; i++)
        par[i] = i;
}
int main(){
    ios_base::sync_with_stdio(0);
    cin >> n >> m;
    init();
    bool doomed = 0;
    for (int i = 0; i < m; i++){
        cin >> x >> y;
        deg[x]++, deg[y]++;
        int parx = find(x), pary = find(y);
        if ((parx == pary) && (i != m-1 || i != n-1)) doomed = 1;
        else par[pary] = parx;
        if (deg[x] > 2 || deg[y] > 2) doomed = 1;
    }
    if (doomed){
        cout << "NO";
        return 0;
    }
    cout << "YES" << endl << n - m << endl;
    for (int i = 1; i <= n; i++){
        for (int j = i + 1; j <= n; j++){
            if (deg[i] < 2 && deg[j] < 2){
               int parx = find(i), pary = find(j);
                if (parx != pary){
                    cout << i << " " << j << endl;
                    deg[i]++, deg[j]++;
                    par[pary] = parx;
                }
            }
        }
    }
    // in the same component
    for (int i = 1; i <= n; i++){
        while (deg[i] < 2){
            cout << i << " ";
            deg[i]++;
        }
    }

   // system("pause");
}