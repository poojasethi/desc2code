#include <cstdio>
#include <algorithm>

using namespace std;

int f[51],c[51],d[51];

int find(int x)
{
  if(f[x]==0)
    return x;
  f[x]=find(f[x]);
  return f[x];
}

void merge(int x,int y)
{
  int fx=find(x),fy=find(y);
  if(fx==fy)
    return;
  f[fy]=fx;
  c[fx]+=c[fy];
  c[fy]=0;
}

int main(void)
{
  int n=0,m=0,s=0;
  scanf("%d %d",&n,&m);
  for(int i=1;i<=n;++i)
    c[i]=1;
  for(int i=1;i<=m;++i)
  {
    int j=0,k=0;
    scanf("%d %d",&j,&k);
    ++d[j];
    ++d[k];
    if(find(j)==find(k))
      ++s;
    else
      merge(j,k);
  }
  bool flag=true;
  for(int i=1;i<=n;++i)
  {
    if(d[i]>2)
    {
      flag=false;
      break;
    }
  }
  if((!flag)||(s>1)||((s==1)&&(m!=n)))
  {
    printf("NO\n");
    return 0;
  }
  printf("YES\n");
  if(n==m)
  {
    printf("0\n");
    return 0;
  }
  if(n==1)
  {
    printf("1\n1 1\n");
    return 0;
  }
  printf("%d\n",n-m);
  for(int k=1;k<n-m;++k)
  {
    int i=0,j=0;
    for(i=1;i<=n;++i)
      if(d[i]<2)
        break;
    for(j=i+1;j<=n;++j)
      if((d[j]<2)&&(find(i)!=find(j)))
        break;
    printf("%d %d\n",i,j);
    ++d[i];
    ++d[j];
    merge(i,j);
  }
  for(int i=1;i<=n;++i)
  {
    if(d[i]<2)
    {
      printf("%d ",i);
      for(int j=i+1;j<=n;++j)
      {
        if(d[j]<2)
        {
          printf("%d\n",j);
          break;
        }
      }
      break;
    }
  }
  return 0;
}