#include <cmath>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <ctime>
#include <cassert>
#include <queue>
#include <vector>
#include <list>
#include <stack>
#include <map>
#include <set>
#include <iomanip>
#include <sstream>
#include <numeric>
using namespace std;
int gra[55][55];
int n,m,cycle;
int vis[55];
void dfs(int now,int fa){
//	cout<<now<<' '<<fa<<endl;
	vis[now]=true;
	for(int i=1;i<=n;i++){
		if(gra[now][i]>0&&(i!=fa||gra[now][i]>1)){
			if(vis[i])
				cycle=true;
			else{
				dfs(i, now);
			}
		}
	}
}
int check(){
	for(int i=1;i<=n;i++)
		if(accumulate(gra[i]+1, gra[i]+1+n, 0)>2)
			return false;
	cycle=false;
	int cnt=0;
	memset(vis, false, sizeof(vis));
	for(int i=1;i<=n;i++)
		if(!vis[i]){
			cnt++;
			dfs(i,0);
		}
	if(cycle && cnt>1)
		return false;
	return true;
}
int main(){
	cin>>n>>m;
	if(n==2&&m==0){
		printf("YES\n2\n1 2\n1 2\n");
		return 0;
	}
	for(int i=1;i<=m;i++){
		int a,b;
		scanf("%d%d",&a,&b);
		gra[a][b]++;
		gra[b][a]++;
	}
	if(!check()){
		puts("NO");
		return 0;
	}
	vector<pair<int,int> > ans;
	puts("YES");
	for(int i=1;i<=n;i++)
		for(int j=i;j<=n;j++){
//			cout<<i<< ' ' <<j<<':'<<endl;
			gra[i][j]++;
			gra[j][i]++;
			if(check()){
				ans.push_back(make_pair(i, j));
			}else{
				gra[i][j]--;
				gra[j][i]--;
			}
		}
	printf("%lu\n",ans.size());
	for(int i=0;i<ans.size();i++){
		printf("%d %d\n",ans[i].first,ans[i].second);
	}
	return 0;
}
