#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <set>

using namespace std;

const int MAXN = 60;

int n,m;
int fa[MAXN],d[MAXN] ;

int getfa(int x){
    if (fa[x]==x) return fa[x];
    return fa[x]=getfa(fa[x]);
}

int main(){
    scanf("%d%d",&n,&m);
    if (n==1){
        if (m<=1){
            puts("YES");
            printf("%d\n",1-m);
            if (m==0) printf("1 1\n");
        }else puts("NO\n");
        return 0;
    }

    for (int i=1;i<=n;i++) fa[i]=i,d[i]=0;
    int cnt = n ;
    int loops = 0 ;
    for (int i=1;i<=m;i++){
        int x,y; scanf("%d%d",&x,&y); d[x]++; d[y]++;
        if (x == y) loops++ ;
        x = getfa(x); y = getfa(y) ;
        if (x != y){
            cnt -- ;
            fa[x] = y ;
        }
    }
    if ((*max_element(d+1,d+n+1)) > 2 || loops > 0){
        puts("NO") ; return 0 ;
    }
    if (n==m){
        if (cnt==1){
            puts("YES") ; printf("0\n");
        }else
            puts("NO");
        return 0 ;
    }
    if (cnt!=n-m){
        puts("NO");
        return 0;
    }
    puts("YES");
    printf("%d\n",n-m);
    for (int times = 1 ; times <= n-m ; times++){

        bool flag=true;
        for (int i = 1 ; i <= n && flag; i++)
            if (d[i] < 2)
            for (int j = i+1 ; j <= n && flag; j++) if (d[j] < 2 && (getfa(i)!=getfa(j) || times==n-m))
            {
                d[i]++ ; d[j]++ ;
                printf("%d %d\n",i,j);
                fa[getfa(i)]=getfa(j);
                flag = false ;
            }
    }
    return 0;
}
