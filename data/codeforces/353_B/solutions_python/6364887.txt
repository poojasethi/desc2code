n = int(raw_input())
values = map(int, raw_input().split())
heaps = [0] * (2 * n)

d = {}

c1 = c2 = 0

for i, v in enumerate(values):
	if v in d:
		d[v].append(i)
	else:
		d[v] = [i]

extras = {}

for v in d.keys():
	if len(d[v]) == 1:
		if c1 <= c2:
			heaps[d[v][0]] = 1
			c1 += 1
		else:
			heaps[d[v][0]] = 2
			c2 += 1
		del d[v]
	else:
		heaps[d[v].pop()] = 1
		heaps[d[v].pop()] = 2
		c1 += 1
		c2 += 1
		if len(d[v]) >= 1:
			extras[v] = d[v]

qq = c1
for v in extras.keys():
	for i in extras[v]:
		if qq < n:
			heaps[i] = 1
			qq += 1
		else:
			heaps[i] = 2

s = ""
for i in xrange(2*n - 1):
	s = s + str(heaps[i]) + " "
s = s + str(heaps[2*n - 1])
print c1 * c2
print s
