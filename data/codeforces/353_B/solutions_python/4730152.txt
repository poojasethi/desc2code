from math import modf

n = map(int,raw_input().split())[0]

allnum = map(int,raw_input().split())

doubles = set()
for num in allnum:
    if allnum.count(num) > 1:
        doubles.add(num)

singles = set(allnum) - doubles
i_cnt_l = len(singles)


#print doubles
singles = set(allnum) - doubles
#print singles

i_cnt_1 = (len(singles) + 1) / 2
i_cnt_2 = len(singles) - i_cnt_1

d_belongs = {}
for num in doubles:
    d_belongs[num] = 1
for i, num in enumerate(singles):
    if i < i_cnt_1:
        d_belongs[num] = 1
    else:
        d_belongs[num] = 2

#print d_belongs

exd_1 = len(allnum) / 2 - len(doubles) - i_cnt_1
exd_2 = len(allnum) / 2 - len(doubles) - i_cnt_2

#print exd_1, exd_2

print (len(doubles) + i_cnt_1) * (len(doubles) + i_cnt_2)
for num in allnum:
    if d_belongs[num] == 3:
        if exd_1 > 0:
            print 1,
            exd_1 -= 1
        else:
            print 2,
    else:
        print d_belongs[num],
        if num in doubles:
            d_belongs[num] += 1 
print

