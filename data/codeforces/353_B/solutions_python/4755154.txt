class Cube(object) :
	def __init__(self, num, index) :
		self.num = num
		self.index = index
		self.pos = 0
	def __eq__(self, other) :
		return self.num == other.num

n = input()
array = map(int, raw_input().split())
for i in range(len(array)) :
	array[i] = Cube(array[i], i)
array = sorted(array, key = lambda x : x.num)

a = []; b = []
for item in array :
	if (item not in a) and (item not in b) :
		if len(a) < len(b) :
			item.pos = 1
			a.append(item)
		else :
			item.pos = 2
			b.append(item)
	elif (item not in a) and len(a) < n:
		item.pos = 1
		a.append(item)
	elif (item not in b) and len(b) < n :
		item.pos = 2
		b.append(item)
	else :
		pass
remain_a = n - len(a)
for item in array :
	if item.pos == 0 :
		if remain_a > 0 :
			item.pos = 1
			remain_a -= 1
		else :
			item.pos = 2
print len(a) * len(b)
array = sorted(array, key = lambda x : x.index)
for item in array :
	print item.pos,
print
