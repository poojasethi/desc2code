#include<cstdio>
#include<vector>
#include<utility>
#include<algorithm>
#define fo(i,a,b) for(int i=a;i<=b;++i)
using namespace std;
const int mn=1010000;
typedef long long LL;
vector<pair<LL,LL> >e[mn];
int m,P,f[mn],tot,w[100],p[mn];
LL ans[mn],k,a[mn];
void add(int p,LL x,LL y)
{
    if(x>k)
    {
        ans[p]+=y-x+1;
        return;
    }
    if(y>k)
        ans[p]+=y-k,y=k;
    e[p].push_back(make_pair(x,y));
}
int main()
{
    scanf("%d",&m);
    fo(i,1,m)
    {
        scanf("%d%I64d",p+i,a+i);
        P=max(P,p[i]);
    }
    scanf("%I64d",&k);
    fo(i,1,m)add(p[i],1,a[i]);
    fo(i,2,P)
    {
        if(f[i])continue;
        f[i]=i;
        for(int j=i+i;j<=P;j+=i)
            if(!f[j])f[j]=i;
    }
    for(int i=P,j,l;i>=2;--i)
    {
        sort(e[i].begin(),e[i].end());
        if(e[i].size()!=0)
        {
            for(j=i-1,l=0;j!=1;j/=f[j])w[++l]=f[j];
            LL a=e[i][0].first,b=e[i][0].second,c,d;
            for(int p=1;p<e[i].size();++p)
            {
                c=e[i][p].first,d=e[i][p].second;
                if(c<=b)b+=d-c+1;
                else
                {
                    if(b>k)ans[i]+=b-k,b=k;
                    fo(u,1,l)add(w[u],a+1,b+1);
                    a=c,b=d;
                }
            }
            if(b>k)ans[i]+=b-k,b=k;
            fo(u,1,l)add(w[u],a+1,b+1);
            a=c,b=d;
        }
        if(ans[i])++tot;
    }
    printf("%d\n",tot);
    fo(i,2,P)
        if(ans[i])printf("%d %I64d\n",i,ans[i]);
    return 0;
}