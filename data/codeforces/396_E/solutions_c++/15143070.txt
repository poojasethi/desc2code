#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long LL;
inline void readi(int &x);
inline void readll(LL &x);
const int maxn=100005,N=1000000;
int n,tot,p[maxn];
int ps[N+1],minf[N+1];
int pr[N/5],pn;
LL a[maxn],ans[N/5],k;
struct seg
{
	LL x,y;
	seg(){}
	seg(const LL &_x,const LL &_y){x=_x;y=_y;}
	bool operator<(const seg &o)const
	{return x==o.x?y<o.y:x<o.x;}
}st[N]; 
vector<seg> v[N/5];
int top;

void init()
{
	readi(n);
	for(int i=2;i<=N;i++)
	{
		if(!minf[i])pr[ps[i]=++pn]=i,minf[i]=i;
		for(int j=1;j<=pn&&pr[j]*i<=N;j++)
		{
			minf[pr[j]*i]=pr[j];
			if(i%pr[j]==0)break;
		}
	}
	for(int i=1;i<=n;i++)
	{
		readi(p[i]),readll(a[i]);
		v[ps[p[i]]].push_back(seg(0,a[i]));
	}
	readll(k);
}

void maintain(vector<seg> &v)
{
	sort(v.begin(),v.end());
	seg s;
	top=0;
	for(vector<seg>::iterator it=v.begin();it!=v.end();it++)
	{
		s=*it;
		while(top&&st[top].y>=s.x)
		{
			s.y+=st[top].y-s.x;
			s.x=st[top].x;
			top--;
		}
		st[++top]=s;
	}
	v.clear();
	for(int i=1;i<=top;i++)
		if(st[i].x<k&&st[i].y>k)
		{
			v.push_back(seg(st[i].x,k));
			v.push_back(seg(k,st[i].y));
		}
		else v.push_back(st[i]);
}

void work()
{
	vector<seg>::iterator it;
	for(int i=pn,c,t;c=pr[i],i>0;i--)
		if(!v[i].empty())
		{
			maintain(v[i]);
			for(it=v[i].begin();it!=v[i].end();it++)
				if(it->y<=k)
				{
					for(t=c-1;t>1;t/=minf[t])
						v[ps[minf[t]]].push_back(seg(it->x+1,it->y+1));
				}
				else tot+=(ans[i]==0),ans[i]+=it->y-it->x;
		}
	printf("%d\n",tot);
	for(int i=1;i<=pn;i++)
		if(ans[i])printf("%d %I64d\n",pr[i],ans[i]);
}

int main()
{
	init();
	work();
	return 0;
}
inline void readi(int &x)
{char c;for(c=getchar();c>'9'||c<'0';c=getchar());
x=c^'0';for(c=getchar();c>='0'&&c<='9';c=getchar())x=x*10+(c^'0');}
inline void readll(LL &x)
{char c;for(c=getchar();c>'9'||c<'0';c=getchar());
x=c^'0';for(c=getchar();c>='0'&&c<='9';c=getchar())x=x*10+(c^'0');}