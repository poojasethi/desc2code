#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef double ld;

const int MAX=1000000+10;

int n;
int prime[MAX];
LL K,be[MAX];
vector< pair<LL,LL> > line[MAX];
int top;
pair<LL,LL> st[MAX];

int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
    int i,j;
    scanf("%d",&n);
    REP(i,1,n)
    {
        int x;
        scanf("%d",&x);
        cin>>be[x];
    }
    cin>>K;
    REP2(i,2,MAX)
        if(!prime[i])
            for(j=i+i;j<MAX;j+=i)
                prime[j]=1;
    vector< pair<int,LL> > ans;
    for(i=MAX-1;i>=2;--i)
        if(!prime[i])
        {
            top=0;
            if(be[i])
                st[++top] = mp(0, be[i]);
            for(j=i;j+1<MAX;j+=i)
                if(!prime[j+1])
                {
                    int k=0;
                    int t=j,num=0,to=j+1;
                    for(; t%i==0;t/=i)
                        ++num;
                    REP2(k,0,(int)line[to].size())
                        if(line[to][k].x<K)
                            st[++top] = mp( line[to][k].x+1, (min(K,line[to][k].y)-line[to][k].x)*num );
                }
            sort(st+1, st+top+1);
            LL r=-1,l=0;
            REP(j,1,top)
            {
                if(r<st[j].x)
                {
                    if(r!=-1)
                        line[i].pb(mp(l,r));
                    l=st[j].x;
                    r=st[j].x;
                }
                r+=st[j].y;
            }
            if(r!=-1)
                line[i].pb(mp(l,r));
            /*
            if(line[i].size() && i==89)
            {
                REP(j,0,(int)line[i].size()-1)
                    cout<<line[i][j].x<<" "<<line[i][j].y<<endl;
                cout<<endl;
            }
            */
            if(line[i].size() && (--line[i].end())->y>K)
                ans.pb(mp(i, (--line[i].end())->y-K ));
        }
    reverse(ans.begin(),ans.end());
    printf("%d\n",ans.size());
    REP2(i,0,(int)ans.size())
        cout<<ans[i].x<<" "<<ans[i].y<<endl;
    return 0;
}
