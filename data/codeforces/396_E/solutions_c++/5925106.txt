#pragma comment (linker, "/STACK:1073741824")
#define _USE_MATH_DEFINES
#include <math.h>
#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <fstream>
#include <iostream>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <deque>
#include <vector>
#include <string>
#include <bitset>
#include <complex>
#include <numeric>
#include <iomanip>

using namespace std;

#define SZ(x) (int((x).size()))
#define FOR(i, a, b) for(int (i) = (a); (i) <= (b); ++(i))
#define ROF(i, a, b) for(int (i) = (a); (i) >= (b); --(i))
#define REP(i, n) for (int (i) = 0; (i) < (n); ++(i))
#define REPD(i, n) for (int (i) = (n); (i)--; )
#define FE(i, a) for (int (i) = 0; (i) < (int((a).size())); ++(i))
#define MEM(a, val) memset((a), val, sizeof(a))
#define INF 1000000000
#define LLINF 1000000000000000000LL
#define PB push_back
#define PPB pop_back
#define ALL(c) (c).begin(), (c).end()
#define SQR(a) ((a)*(a))
#define MP(a,b) make_pair((a), (b))
#define XX first
#define YY second
#define GET_RUNTIME_ERROR *(int*)(NULL) = 1

typedef vector<int> vint;
typedef vector<long long> vLL;
typedef double dbl;
typedef long double ldbl;
typedef vector<pair<int, int> > vpii;
typedef long long LL;
typedef pair<int, int> pii;

const int nmax = 1000100;

LL p[nmax];
int mind[nmax];
bool isprime[nmax];

void iterate() {
  FOR(i, 2, nmax - 1) if (p[i]) {
    --p[i];
    int x = i - 1;
    while(x != 1) {
      ++p[mind[x]];
      x /= mind[x];
    }
  }
}

int main() {
#ifdef    CENADAR_DEBUG
  freopen("input.txt", "r", stdin);
//  freopen("output.txt", "w", stdout);
//  freopen("errput.txt", "w", stderr);
#else  // CENADAR_DEBUG
//  freopen("input.txt", "r", stdin);
//  freopen("output.txt", "w", stdout);
#endif // CENADAR_DEBUG

  for(int i = 2; i < nmax; ++i) if (mind[i] == 0) {
    mind[i] = i;
    isprime[i] = true;
    if (i < 45000) for(int j = i*i; j < nmax; j += i) if (mind[j] == 0) mind[j] = i;
  }

  ios_base::sync_with_stdio(0);
  int n;
  cin >> n;
  REP(i, n) {
    int cur;
    LL k;
    cin >> cur >> k;
    p[cur] = k;
  }
  LL K;
  cin >> K;

  REP(i, min(K, 20LL)) iterate();
  K = max(0LL, K - 20);

  ROF(i, nmax - 1, 2) {
    LL v = min(K, p[i]);
    p[i] -= v;
    int x = i - 1;
    while(x != 1) {
      p[mind[x]] += v;
      x /= mind[x];
    }
  }

  int ans = 0;
  REP(i, nmax) if (p[i]) ++ans;

  cout << ans << endl;
  REP(i, nmax) if (p[i]) {
    cout << i << " " << p[i] << endl;
  }

  return 0;
}
