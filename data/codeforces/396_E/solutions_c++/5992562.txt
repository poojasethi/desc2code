#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <queue>
#define int64 long long
#define N 1000010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m;
int f[N],p[N];
int64 g[N],tim,ti;
struct ww {
	int a;
	inline bool operator < (const ww &A) const {
		return g[a]>g[A.a];
	}
};
priority_queue <ww> q;
void work(int x) {
	int A=x-1;
	for (;A>1;) {
		int C=p[f[A]];
		A/=C;
		g[C]+=min(g[x],tim);
	}
	g[x]-=min(g[x],tim);
}
inline void tui() {
	int i,k;
	For(i,1,*p) if (g[p[i]]) {
		g[p[i]]--;
		for (k=p[i]-1;k>1;k/=p[f[k]]) g[p[f[k]]]++;
	}
}
int main() {
	For(i,2,N-1) {
		if (!f[i]) p[++*p]=i,f[i]=*p;
		for (j=1;j<=f[i]&&i*p[j]<N;j++) f[i*p[j]]=j;
	}
	scanf("%d",&m);
	For(i,1,m) scanf("%d",&k),scanf("%I64d",&g[k]);
	scanf("%I64d",&tim);
	for (i=1;i<=12&&tim;tim--,i++) tui();
	for (i=*p;i;i--) work(p[i]);
	k=0;
	For(i,1,*p) if (g[p[i]]) k++;
	printf("%d\n",k);
	For(i,1,*p) if (g[p[i]]) printf("%d %I64d\n",p[i],g[p[i]]);
	//for(;;);
	return 0;
}
