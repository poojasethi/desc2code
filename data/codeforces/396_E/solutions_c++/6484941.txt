#include <cstdio>
#include <vector>
#include <utility>
#include <algorithm>
using namespace std;
int a[1000010];
int ps[200010], pn;
typedef vector<pair<long long, long long> > V;
V v[200010];
long long ans[200010];
long long k;
V f(int i) {
	V w;
	sort(v[i].begin(), v[i].end());
	for (int j = 0; j < v[i].size(); j++) {
		int found = 0;
		for (int l = 0; l < w.size(); l++) {
			if (w[l].second >= v[i][j].first) {
				w[l].second += v[i][j].second - v[i][j].first;
				if (w[l].second > k) {
					ans[i] += w[l].second - k;
					w[l].second = k;
				}
				found = 1;
				break;
			}
		}
		if (!found) {
			if (v[i][j].second > k) {
				ans[i] += v[i][j].second - k;
				v[i][j].second = k;
			}
			w.push_back(v[i][j]);
		}
	}
	return w;
}
int main() {
	int n;
	scanf("%d", &n);
	for (int i = 2; i < 1000010; i++) {
		if (a[i]) continue;
		a[i] = -pn;
		ps[pn++] = i;
		for (int j = i + i; j < 1000010; j += i) {
			a[j] = i;
		}
	}
	for (int i = 0; i < n; i++) {
		int p;
		long long w;
		scanf("%d%I64d", &p, &w);
		v[-a[p]].push_back(make_pair(0, w));
	}
	scanf("%I64d", &k);
	int ansn = 0;
	for (int i = pn-1; i > 0; i--) {
		if (!v[i].size()) continue;
		V w = f(i);
		if (ans[i]) ansn++;
		int q = ps[i] - 1;
		while (1) {
			for (int j = 0; j < w.size(); j++) {
				if (w[j].first + 1 > k) continue;
				v[-a[a[q]]].push_back(make_pair(w[j].first + 1, w[j].second + 1));
			}
			if (q > 2) {
				q /= a[q];
			} else {
				break;
			}
		}
	}
	f(0);
	if (ans[0]) ansn++;
	printf("%d\n", ansn);
	for (int i = 0; i < pn; i++) {
		if (ans[i]) {
			printf("%d %I64d\n", ps[i], ans[i]);
		}
	}
	return 0;
}
