#include<stdio.h>
#include<string.h>
#include<math.h>
__int64 c[5][5];
__int64 dp[50][5][5];
__int64 min(__int64 a,__int64 b)
{
	return a<b?a:b;
}
__int64 dfs(int x,int u,int v)
{
	int t;
	if(dp[x][u][v]!=-1)return dp[x][u][v];
	else if(x==0)return 0;
	else
	{
		t=6-u-v;
		dp[x][u][v]=dfs(x-1,u,t)+c[u][v]+dfs(x-1,t,v);
		dp[x][u][v]=min(dp[x][u][v],(dfs(x-1,u,v)+c[u][t]+dfs(x-1,v,u)+c[t][v]+dfs(x-1,u,v)));
	}
	return dp[x][u][v];
}
int main()
{
    int n;
	int i,j;
	__int64 res;
	for(i=1;i<=3;++i)
	{
		for(j=1;j<=3;++j)
		{
			scanf("%I64d",&c[i][j]);
		}
	}
	scanf("%d",&n);
	memset(dp,-1,sizeof(dp));
	res=dfs(n,1,3);
	printf("%I64d\n",res);
	return 0;
}

  			 	  	 	  			   		    	