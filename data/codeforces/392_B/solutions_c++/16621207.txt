//in the name of God

#include <iostream>
#include <algorithm>
#include <vector>
#include <cstring>
using namespace std;


typedef long long ll;

ll dp[3][3][50];
ll n, T[3][3];

ll F(int f, int t, int n)
{
	int m = 3-f-t;

	if(n == 1)
		return min(T[f][t], T[f][m]+T[m][t]);
	if(dp[f][t][n] != -1)
		return dp[f][t][n];


	dp[f][t][n] = min(F(f, m, n-1)+T[f][t]+F(m, t, n-1), F(f, t, n-1)+T[f][m]+F(t, f, n-1)+T[m][t]+F(f, t, n-1));
	return dp[f][t][n];
}


int main()
{
	for(int i=0; i<3; i++)
		for(int j=0; j<3; j++)
			cin >> T[i][j];
	cin >> n;

	memset(dp, -1, sizeof dp);

	cout << F(0, 2, n) << endl;

	return 0;
}

 			 	 	 		   	 		 	  	   	 		