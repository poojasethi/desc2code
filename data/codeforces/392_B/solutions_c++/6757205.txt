#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
typedef long long ll;
ll vec[4][4];
ll dp[50][5][5];
ll resp(ll n,ll i,ll j){
    if(n==0)return 0;
    if(dp[n][i][j]!=-1)return dp[n][i][j];    
    ll k=3-i-j;
    ll ans=0;
    ans=resp(n-1,i,k)+vec[i][j]+resp(n-1,k,j);
    ans=min(ans,resp(n-1,i,j)+vec[i][k]+resp(n-1,j,i)+vec[k][j]+resp(n-1,i,j));
    return dp[n][i][j]=ans;
}
    
int main(){
    memset(dp,-1,sizeof(dp));
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            scanf("%I64d",&vec[i][j]);    
        }    
    }
    
    ll N;
    scanf("%I64d",&N);
    printf("%I64d\n",resp(N,0,2));
    return 0;
}
