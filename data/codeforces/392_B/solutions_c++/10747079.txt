#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<string>
using namespace std;

long long t[4][4];
long long dp[50][4][4][4];

long long DP(int n,int a,int b,int c)
{
    if(n==1) return min(t[a][c],t[a][b]+t[b][c]);
    else if(dp[n][a][b][c]!=-1) return dp[n][a][b][c];
    dp[n][a][b][c]=min(DP(n-1,a,c,b)+t[a][c]+DP(n-1,b,a,c),DP(n-1,a,b,c)+t[a][b]+DP(n-1,c,b,a)+t[b][c]+DP(n-1,a,b,c));
    return dp[n][a][b][c];
}

int main()
{
    memset(dp,-1,sizeof(dp));
    for(int i=1;i<=3;i++)
        for(int j=1;j<=3;j++)
            scanf("%lld",&t[i][j]);
    int n;
    scanf("%d",&n);
    printf("%lld\n",DP(n,1,2,3));
}


                                                    