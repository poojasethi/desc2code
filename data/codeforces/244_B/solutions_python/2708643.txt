# ~*~ coding:utf-8 ~*~
from itertools import combinations
from itertools import product
from itertools import combinations_with_replacement

n = int(raw_input())
d = len(str(n))
f = [[''.join(g)
     for g in list(product(('{0}', '{1}'), repeat=i))
      if g.count(g[0]) != len(g)]
     for i in xrange(1, d + 1)]

digits = list(combinations(range(10), 2))

r = 0
for i in xrange(d):
    for t in digits:
        for s in f[i]:
            if t[0] == 0 and s.startswith('{0}'):
                continue
            else:
                k = int(s.format(*t))
                if k <= n:
                    r += 1
    for j in xrange(1, 10):
        k = int(str(j) * (i + 1))
        if k <= n:
            r += 1
print r
