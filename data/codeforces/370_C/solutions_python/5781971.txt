import os,sys
####mittens: 370C http://codeforces.com/problemset/problem/370/C
###input 
##The first line contains two integers n and m, the number of the children and the number of possible mitten colors
##The second line contains n integers:  the color of the mittens of the i-th child

##Solve: find the max number of people who shares the same color of mittens, as maxNum
##thus simply exchange one mitten from them with the rest people. 
##thus the result number = n - max(0, maxNum-(n-maxNum))

def run():
    n, m = map(int, raw_input().split())
    colors = map(int, raw_input().split())

    colors.sort()
    maxNum = 0
    for i in range(1, m+1):
        maxNum = max(maxNum, colors.count(i))

    print n - max(0, maxNum-(n-maxNum))
    ###exchange policy: we skip maxNum position, thus except the max numbered color, other colors can not get a same color as itself!!!
    for i in range(n):
        print colors[i], colors[(i+maxNum)%n]
    return
########################################################################################################################
run()
