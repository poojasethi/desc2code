from sys import stdin

IMPOSSIBLE = 999999999999
live = True

if not live: stdin = open('data.in', 'r')

n, m = [int(i) for i in stdin.readline().split()]

n += 1
adj = [set() for j in xrange(n)]
edges = []

for edge in xrange(m):
	x, y = [int(i) for i in stdin.readline().split()]
	adj[x] |= {y}
	adj[y] |= {x}
	edges += [(x, y)]
	
degree = [len(adj[i]) for i in xrange(n)]
if not live: print degree
answer = IMPOSSIBLE
	
for x, y in edges:
	common = adj[x].intersection(adj[y])
	if not live: print x, y, common
	for it in common:
		answer = min(answer, degree[x] + degree[y] + degree[it] - 6)
		
if answer == IMPOSSIBLE:
	print -1
else:
	print answer

if not live: stdin.close()