from collections import defaultdict

n, m = map(int, raw_input().split())
graph = defaultdict(set)

for _ in xrange(m):
	i, j = map(int, raw_input().split())
	graph[i].add(j)
	graph[j].add(i)

visited = set()
minimum = 1e6

def recog(node):
	return len(graph[node]) - 2

for node, neighbours in graph.iteritems():
	if recog(node) >= 0:
		for i in neighbours:
			if recog(i) >= 0:
				for j in neighbours:
					if i != j and recog(j) >= 0 and j in graph[i]:
						su = recog(node) + recog(i) + recog(j)
						minimum = min(minimum, su)

if minimum == 1e6:
	minimum = -1
print minimum