import bisect
n, m = map(int, raw_input().split())
c = [0]*(n+1)
l = []
g = [0]*(n+1)
pos = [0]*(n+1)
for i in range(0,n+1):
	g[i]=[0]*(n+1)
for i in range(m):
	a, b  = map(int, raw_input().split())
	if a > b:
		temp = a
		a = b
		b = temp
	c[a]+=1
	c[b]+=1
	l.append((a,b))
	g[a][b]=1
	g[b][a]=1
minimo = 4000*4000*4000
l = sorted(l)
for i in range(m):
	if i!=0 and l[i][0]!=l[i-1][0]:
		pos[l[i][0]]=i
for i in range(m):
	for j in range(pos[l[i][1]],m):
		if l[i][1] == l[j][0]:
			if g[l[i][0]][l[j][1]] == 1:
				minimo = min(minimo,c[l[i][0]]+c[l[i][1]]+c[l[j][1]])
		else:
			break
if minimo == 4000*4000*4000:
	minimo = -1
else:
	minimo -= 6
print minimo
	