from collections import Counter
n, m = map(int, raw_input().split())
r = Counter()
pairs = set()
edges = {}
result = float("inf")

for i in xrange(m):
    a, b = map(int, raw_input().split())
    r[a] += 1
    r[b] += 1
    pairs.add((min(a,b), max(a,b)))
    if a not in edges:
        edges[a] = set()
    if b not in edges:
        edges[b] = set()
    edges[a].add(b)
    edges[b].add(a)

for p in pairs:
    triples = edges[p[0]] & edges[p[1]]
    rr = r[p[0]] + r[p[1]]
    for t in triples:
        result = min(result, rr + r[t] - 6)

if result == float("inf"):
    print -1
else:
    print result

