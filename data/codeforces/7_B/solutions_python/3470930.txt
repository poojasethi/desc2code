if __name__ == "__main__":
    t, m = map(int, raw_input().split())
    mem_idents = {}
    new_ident = 1
    mem = "F" * m;
    for i in range(t):
        cmd = raw_input().split()
        if cmd[0] == "alloc":
            size = int(cmd[1])
            sh = mem.find("F" * size)
            if sh == -1:
                print "NULL"
            else:
                mem_idents[new_ident] = (sh, size)
                mem = mem[:sh] + "U" * size + mem[sh + size:]
                print new_ident
                new_ident += 1
        elif cmd[0] == "erase":
            ident = int(cmd[1])
            if not mem_idents.has_key(ident):
                print "ILLEGAL_ERASE_ARGUMENT"
            else:
                sh, size = mem_idents[ident]
                del mem_idents[ident]
                mem = mem[:sh] + "F" * size + mem[sh + size:]
        elif cmd[0] == "defragment":
            next_sh = 0
            for mi in (v[0] for v in sorted(mem_idents.items(),key=lambda x: x[1][0])):
                size = mem_idents[mi][1]
                mem_idents[mi] = (next_sh, size)
                next_sh += size
            mem = "U" * next_sh + "F" * (m - next_sh)