t, m = map(int, raw_input().split(" "))
nextIdentifier = 1
memory = [0 for i in xrange(m)]
for i in xrange(t):
    operation = raw_input().split(" ")
    if operation[0] == "alloc":
        n = int(operation[1])
        try:
            searchIndex = 0
            findFreeSpaceFlag1 = 1
            while searchIndex+n <= len(memory):
                findFreeSpaceFlag = 1
                startIndex = memory.index(0, searchIndex)
                if startIndex+n <= len(memory):
                    for idx in xrange(startIndex,startIndex+n):
                        if memory[idx]!=0:
                            searchIndex = idx
                            findFreeSpaceFlag = 0
                            break;
                    if findFreeSpaceFlag:
                        for idx in xrange(startIndex, startIndex+n):
                            memory[idx]= nextIdentifier
                        print str(nextIdentifier)
                        nextIdentifier += 1
                        findFreeSpaceFlag1 = 0
                        break;
                else:
                    break;
            if findFreeSpaceFlag1:
                print "NULL"
        except ValueError:
            print "NULL"
    elif operation[0] == "erase":
        x = int(operation[1])
        if x > 0:
            try:
                memory.index(x)
                memory = map(lambda v: 0 if v==x else v, memory)
            except ValueError:
                print "ILLEGAL_ERASE_ARGUMENT"
        else:
            print "ILLEGAL_ERASE_ARGUMENT"
    else:
        z = memory.count(0)
        for zz in xrange(z):
            memory.remove(0)
        memory = memory + [0]*z
