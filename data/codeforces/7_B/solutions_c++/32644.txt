#include <vector>
#include <algorithm>
#include <iostream>
#include <cmath>
#include <cstring>
using namespace std;
long long mem[111];
#define EMPTY -1
int main() {
	int t,m;int cnt=0;
	cin>>t>>m;
	memset(mem,EMPTY,sizeof(mem));
	for(int cs=0;cs<t;cs++) {
		int rsize;
		string buf;
		cin>>buf;
		if (buf=="alloc") {
			cin>>rsize;
			int size=0;int saddr=-1;
			for(int i=0;i<m;i++) {
				if (mem[i]!=EMPTY) {size=0;continue;}
				size++;
				if (size==rsize) {
					saddr=i-(size-1);
					break;
				}
			}
			if (saddr!=-1) {
				++cnt;
				for(int i=0;i<rsize;i++) mem[saddr+i]=cnt;
				cout<<cnt<<endl;
			}
			else cout<<"NULL"<<endl;
		}
		if (buf=="erase") {
			long long addr;
			cin>>addr;bool erased=0;
			for(int i=0;i<m;i++) if (mem[i]==addr) {mem[i]=EMPTY;erased=1;}
			if (!erased || addr==EMPTY) cout<<"ILLEGAL_ERASE_ARGUMENT"<<endl;
		}
		if (buf=="defragment") {
			int sp=0;
			for(int i=0;i<m;i++) {
				if (mem[i]==EMPTY) continue;
				mem[sp++]=mem[i];
			}
			for(int i=sp;i<m;i++) mem[i]=EMPTY;
		}
	}
    return 0;
}