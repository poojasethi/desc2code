#include<iostream>
#include<map>
#include<vector>
#define mapit map< int,vector<int> >::iterator
using namespace std;
map< int,vector<int> > mails;
map<int,bool> visited;
void dfs(int n)
{
    if(visited[n]||mails[n].empty()) return;visited[n]=true;
    cout<<n<<" ";
    for(int j=0;j<mails[n].size();j++)
            dfs(mails[n][j]);
}

int main()
{
    int n,a,b,ver;
    cin>>n;
    for(int i=0;i<n;i++)
    {
        cin>>a>>b;
        mails[a].push_back(b);
        mails[b].push_back(a);
    }
    for(mapit i=mails.begin();i!=mails.end();i++)
        if(i->second.size()==1){ dfs(i->first);break;}
    dfs(ver);
    return 0;
}
