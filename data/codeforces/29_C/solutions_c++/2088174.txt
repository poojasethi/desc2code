#include <iostream>
#include <algorithm>
#include <map>
#include <vector>
using namespace std;

map<int, vector<int> > E;
map<int, vector<int> >::iterator it;
int n;

void dfs(int n, int from = -1) {
    cout << n << ' ';
    for (vector<int>::iterator it2 = E[n].begin(); it2 != E[n].end(); ++it2) {
        if (*it2 != from) dfs(*it2, n);
    }
}

int main() {
    cin >> n;
    for (int i = 0; i < n; ++i) {
        int a, b;
        cin >> a >> b;
        E[a].push_back(b);
        E[b].push_back(a);
    }
    it = E.begin();
    while (it->second.size() == 2) {
        ++it;
    }
    int n = it->first;
    dfs(n);
    cout << endl;
}