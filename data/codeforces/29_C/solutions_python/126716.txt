# 29.C
import sys
from collections import defaultdict


def find_only_one (d):
	for k in d.keys():
		if len (d.get (k)) == 1:
			return k

def sol():
	n = int (sys.stdin.readline())
	assert 1 <= n and n <= 100000
	lt = [ (0, 0, False) ] * n		# list of tuples (x, y, used)
	d = defaultdict (list)          # dict of indexes {200 -> (1, 7)}
	for i in xrange (n):
		x, y = [int(it) for it in sys.stdin.readline().split()]
		lt[i] = (x, y, False)
		if d.has_key (x):
			d[x].append (i)
		else:
			d[x] = [i,]
		if d.has_key (y):
			d[y].append (i)
		else:
			d[y] = [i,]
	#print lt
	#print d
	k = find_only_one (d)
	#print k
	for j in xrange (n + 1):
		print k,
		ls = d[k]
		for i in ls:
			if not lt[i][2]:
				lt[i] = (lt[i][0], lt[i][1], True)
				if lt[i][0] == k:
					k = lt[i][1]
				else:
					k = lt[i][0]
				break
		
	
	
def main():
	sol()

if len (sys.argv) > 1:
	sys.stdin = open (sys.argv[1], 'r')
main()

