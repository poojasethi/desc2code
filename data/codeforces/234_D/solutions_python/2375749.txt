import sys
sys.stdin=open("input.txt",'r')
sys.stdout=open("output.txt",'w')
m,k=map(int,raw_input().split())
_K=map(int,raw_input().split())
allactors=set([i for i in range(1,m+1)])
goodactors=set(_K)
badactors=allactors-goodactors
def f ( L ):
    used=set(L)
    goodused=len(used.intersection(goodactors))
    available=L.count(0)
    availableBad = len(badactors-used)
    availableGood = len(goodactors-used)
    first = max(goodused,goodused+ max(0,min(available-availableBad,availableGood)))
    second = max(first,goodused+max(0,min(available,availableGood)))
    return (first,second)
n=input()

D=[]
for i in range(n):
    raw_input()
    input()
    L=map(int,raw_input().split())
    t=f(L)
    D.append(t)
for i,x in enumerate(D):
    maxsure=-1
    maxpredict=-1
    for j,y in enumerate(D):
        if i==j:
            continue
        maxsure=max(y[0],maxsure)
        maxpredict=max(y[1],maxpredict)
    if x[0]>=maxpredict:
        print 0
        continue
    if x[1]>=maxsure:
        print 2
        continue
    print 1
