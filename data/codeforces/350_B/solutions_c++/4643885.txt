#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
int D[100000];
bool A[100000];
int M[100000];
int size=0;
vector <int> Ans;
void DFS(int i){
	
	if(D[M[i]]<=1 && M[i]!=-1){
		
		DFS(M[i]);
	}
	size++;


}
void DFS2(int i){
	if(D[M[i]]<=1 && M[i]!=-1)
		DFS2(M[i]);
	Ans.push_back(i);

}
int main(){
	int n;
	cin>>n;
	for(int i=0;i<n;i++)
		cin>>A[i];
	for(int j=0;j<n;j++)
	{
		int a;
		cin>>a;
		if(a!=0)
			D[a-1]++;
		M[j]=a-1;
	}
	int m=0;
	int tmp=0;
	for(int i=0;i<n;i++){
		if(A[i]){
			size=0;
			DFS(i);
			if(size>=m)
			{
				tmp=i;
				m=size;

			}
		}

	}
	DFS2(tmp);
	cout<<Ans.size()<<endl;
	for(int i=0;i<Ans.size();i++)
		cout<<Ans[i]+1<<" ";
	cout<<endl;


	return 0;
}

