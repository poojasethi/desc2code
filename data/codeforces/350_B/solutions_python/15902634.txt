# coding: utf-8

from copy import deepcopy
'''
def achaP(av):
	if av[3] == True:
		caminhoTemporario.append(av[1])	
		return 1 + achaP(mahs[av[1]])
	else:
		return 0
'''
t = int(raw_input())
objsT = map(int, raw_input().split())
paths = map(int, raw_input().split())

mahs = [[0, 0, [], True] for nn in xrange(t+1)]

for i in xrange(1, t+1):
	mahs[i][0] = objsT[i-1]
	mahs[i][1] = paths[i-1]
	mahs[mahs[i][1]][2].append(i)
	
	if len(mahs[mahs[i][1]][2]) > 1:
		mahs[mahs[i][1]][3] = False

mahs[0][3] = False # Apenas para marcar o come√ßo da lista #
tamanhoCaminho = tamanho = 0
caminhoTemporario = []
caminho = []
	
for i in xrange(t, 0, -1):
	if mahs[i][0] == 1:
		caminhoTemporario.append(i)
		#tamanho = achaP(mahs[i])
		
		objtempo = mahs[i]
		while objtempo[3]:
			tamanho += 1
			caminhoTemporario.append(objtempo[1])
			objtempo = mahs[objtempo[1]]		
		
		if tamanhoCaminho < tamanho:
			tamanhoCaminho = tamanho
			caminho = deepcopy(caminhoTemporario)
			
		caminhoTemporario = []
		tamanho = 0
	

print tamanhoCaminho

for i in xrange(len(caminho)-2, -1, -1):
	if i > 0:
		print caminho[i],
	else:
		print caminho[i]
