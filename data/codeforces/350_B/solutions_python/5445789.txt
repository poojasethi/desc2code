from collections import deque
def main():
    I = lambda:map(int, raw_input().split())
    n = I()[0]
    h = [0] + I()
    d = [0] + I()
    m = [0]*(n+1)
    back = [0]*(n+1)
    for x in d:
        m[x] += 1
    que = deque([i for i,x in enumerate(h) if x])
    while len(que):
        x = que.popleft()
        if m[d[x]] >1:
            continue
        h[d[x]] = h[x] + 1
        back[d[x]] = x
        que.append(d[x])
    st = 0
    res = 0
    for i, x in enumerate(h):
        if res < x:
            res = x
            st = i
    print res
    while st != 0:
        print st
        st = back[st]
main()