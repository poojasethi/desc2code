class Object:
	def __init__(self):
		self.type = 0
		self.parent = 0
		self.path = []
		self.isValid = True

n = int(raw_input())
types = map(int, raw_input().split())
parents = map(int, raw_input().split())
objects = []

for i in xrange(n + 1):
	objects.append(Object())

for i in xrange(1, n + 1):
	objects[i].type = types[i - 1]
	objects[i].parent = parents[i - 1]
	objects[objects[i].parent].path.append(i)
	
	if len(objects[objects[i].parent].path) > 1:
		objects[objects[i].parent].isValid = False

objects[0].isValid = False
k = 0
tempK = 0
path = []
tempPath = []

i = n
while i > 0:
	if objects[i].type == 1:
		tempK += 1
		tempPath.append(i)
		tempObj = objects[i]
		
		while objects[tempObj.parent].isValid:
			tempK += 1
			tempPath.append(tempObj.parent)
			tempObj = objects[tempObj.parent]
		
		if tempK > k:
			k = tempK
			path = tempPath
		tempK = 0
		tempPath = []
	i -= 1

print k
print " ".join(map(str, path[::-1]))
