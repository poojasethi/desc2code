//In the Name of God

#include<iostream>
#include<algorithm>
#include<set>
#define int long long
#define pii pair<int,int>
#define x first.first
#define t first.second
#define id second.first
#define c second.second

using namespace std;

const int maxn=262144;
int val[maxn*2],mx,ind,C;
int n,m;
pair<pii,pii> f[maxn];
multiset<pii> s;
multiset<pii>::iterator it;
int ans[maxn];
int cnt[maxn];

void update(int seg)
{
  val[seg]=max(val[seg*2+1],val[seg*2+2]);
}

void make(int seg,int ls,int rs)
{
  if(ls==rs-1)
    {
      val[seg]=f[ls].t;
      return;
    }
  int mid=(ls+rs)>>1;
  make(seg*2+1,ls,mid);
  make(seg*2+2,mid,rs);
  update(seg);
}

void find(int seg,int ls,int rs,int a)
{
  if(val[seg]<a or ind!=-1)
    return;
  if(ls==rs-1)
    {
      ind=ls;
      mx=f[ls].t;
      return;
    }
  int mid=(ls+rs)>>1;
  find(seg*2+1,ls,mid,a);
  find(seg*2+2,mid,rs,a);
}

void change(int seg,int ls,int rs,int idx,int a)
{
  if(rs<=idx or idx+1<=ls)
    return;
  if(ls==rs-1)
    {
      f[ls].c+=C;
      val[seg]=f[ls].t=a;
      return;
    }
  int mid=(ls+rs)>>1;
  change(seg*2+1,ls,mid,idx,a);
  change(seg*2+2,mid,rs,idx,a);
  update(seg);
}

main()
{
  ios_base::sync_with_stdio(0);cin.tie(0);
  cin>>n>>m;
  for(int i=0;i<n;i++)
    {
      cin>>f[i].x>>f[i].t;
      f[i].t+=f[i].x;
      f[i].id=i;
    }
  sort(f,f+n);
  make(0,0,n);
  for(int p,b;m--;)
    {
      cin>>p>>b;
      ind=-1,C=0;
      find(0,0,n,p);
      s.insert(pii(p,b));
      while(s.size() and ind!=-1)
	{
	  it=s.lower_bound(pii(f[ind].x,0));
	  if(it==s.end() or it->first>mx)
	    break;
	  mx+=it->second;
	  C++;
	  s.erase(it);
	}
      if(ind!=-1 and C)
	change(0,0,n,ind,mx);
    }
  for(int i=0;i<n;i++)
    {
      ans[f[i].id]=f[i].t-f[i].x;
      cnt[f[i].id]=f[i].c;
    }
  for(int i=0;i<n;i++)
    cout<<cnt[i]<<" "<<ans[i]<<endl;
  return 0;
}
