#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<map>
#include<utility>
using namespace std;
typedef long long ll;
const int lim=1000000002;
struct data{
    int x;
    ll v;
}a[210001];
struct tnode{
    int v,ls,rs;
}t[11000001];
multimap<int,int> h;
multimap<int,int>::iterator it;
int tot,i,j,k,n,m,c[210001],rt,t1,t2;
int newnode(){
    int p;
    p=++tot;t[p].ls=t[p].rs=t[p].v=0;
    return p;
}
void change(int &p,int l,int r,int x,int v){
    int m=(l+r)>>1;
    if (!p) p=newnode();
    if (a[t[p].v].v<a[v].v) t[p].v=v;
    if (l==r) return;
    if (x<=m) change(t[p].ls,l,m,x,v);else change(t[p].rs,m+1,r,x,v);
}
int query(int p,int l,int r,int x){
    int m=(l+r)>>1,res;
    if (!p||a[t[p].v].v<x) return 0;
    if (l==r) return t[p].v;
    res=query(t[p].ls,l,m,x);
    if (res) return res;
    if (x>=m+1) return query(t[p].rs,m+1,r,x);else return 0;
}
void work(int x,int v){
    c[x]++;a[x].v+=v;
    while (1){
        it=h.lower_bound(a[x].x);
        if (it==h.end()||(*it).first>a[x].v) break;
        c[x]++;a[x].v+=(*it).second;
        h.erase(it);
    }
    change(rt,1,lim,a[x].x,x);
}
int main(){
    h.clear();
    rt=tot=0;scanf("%d%d",&n,&m);memset(c,0,sizeof(c));a[0].v=t[0].v=0;
    for (i=1;i<=n;i++) scanf("%d%d",&a[i].x,&k),a[i].x++,a[i].v=a[i].x+k,change(rt,1,lim,a[i].x,i);
    for (i=1;i<=m;i++){
        scanf("%d%d",&t1,&t2);t1++;
        k=query(rt,1,lim,t1);
        if (k) work(k,t2);else h.insert(make_pair(t1,t2));
    }
    for (i=1;i<=n;i++) printf("%d %I64d\n",c[i],a[i].v-a[i].x);
    return 0;
}