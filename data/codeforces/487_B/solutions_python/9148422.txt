#!/usr/bin/python
# coding: utf-8

def make(a, n, s, l):
  pieces = []
  i = 1
  tmpMin = a[0]
  tmpMax = a[0]
  tmpPieces = [a[0]]
  while i < n:
    if abs(a[i] - tmpMin) <= s and abs(a[i] - tmpMax) <= s:
      tmpPieces.append(a[i])
      if a[i] < tmpMin:
        tmpMin = a[i]
      elif a[i] > tmpMax:
        tmpMax = a[i]
    else:
      pieces.append(tmpPieces)
      tmpPieces = [a[i]]
      tmpMin = a[i]
      tmpMax = a[i]
    i += 1
  pieces.append(tmpPieces)
  fail = False
  for j in xrange(len(pieces)):
    if len(pieces[j]) < l:
      if j > 0:
        preVpc = pieces[j - 1]
        minJ = min(pieces[j])
        maxJ = max(pieces[j])
        while len(pieces[j]) < l:
          tmp = preVpc.pop()
          if abs(tmp - minJ) <= s and abs(tmp - maxJ) <= s:
            pieces[j].insert(0, tmp)
            if tmp < minJ:
              minJ = tmp
            elif tmp > maxJ:
              maxJ = tmp
          else:
            return -1
          if len(preVpc) < l:
            return -1
      else:
        return -1
  return len(pieces)
n, s, l = map(int, raw_input().split())
a = map(int, raw_input().split())
ans = make(a, n, s, l)
if ans < 0:
  a.reverse()
  ans = make(a, n, s, l)
print ans 