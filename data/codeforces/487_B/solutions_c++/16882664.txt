#include <bits/stdc++.h>
using namespace std;
#define N 100009
#define inf 1000000000
int n,s,l,a[N],dp[N];
multiset<int> mi,len;
int main() 
{
	cin>>n>>s>>l;
	for(int i=1;i<=n;i++)cin>>a[i];
	for(int i=1,j=1;i<=n;i++)
	{
		len.insert(a[i]);
		for(;*len.rbegin()-*len.begin()>s;j++)
		{
			len.erase(len.find(a[j]));//we need a pointer that's why?
			if(i-j>=l)
			mi.erase(mi.find(dp[j-1]));
		}
		if(i-j+1>=l)mi.insert(dp[i-l]);
		dp[i]=(mi.begin()==mi.end()?inf:*mi.begin()+1);
		//cout<<"i="<<i<<" j="<<j<<" len.size()="<<len.size()<<" mi.size()="<<mi.size()<<" dp[i]="<<dp[i]<<endl;
		
	}
	cout<<(dp[n]>=inf?-1:dp[n]);
	return 0;
}