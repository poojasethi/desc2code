#include<cstdio>
#include<iostream>
#include<algorithm>
using namespace std;

struct Ltype
{
    bool h,t;
    long long x;
} a[100];

int n,m,X,K;

bool check(Ltype H,int len)
{
    if (len==1)
        if (H.t && H.h) return 1;

    if ((len-H.t-H.h)/2<H.x)
        return 1;
    return 0;
}

void putit(Ltype H,int len)
{
    int now=1;
    if (H.h) {
        putchar('C');
        now++;
    }
    for (int i=1;i<=H.x && now+1<=len;i++,now+=2)
    {
        putchar('A');
        putchar('C');
    }
    for (;now<len;now++)
        putchar('D');
    if(now==len)
    if (H.t)
        putchar('A');
    else
        putchar('D');
    putchar('\n');
}

void printans()
{
    putit(a[1],n);
    putit(a[2],m);
}


int main()
{
    scanf("%d%d%d%d",&K,&X,&n,&m);
    for (int x1=0;x1<=n/2;x1++)
        for (int x2=0;x2<=m/2;x2++)
        for (int k=0;k<16;k++)
        {
            a[1].x=x1;
            a[2].x=x2;
            a[1].h=(k&1);
            a[1].t=(k&2);
            a[2].h=(k&4);
            a[2].t=(k&8);
            if (check(a[1],n) || check(a[2],m)) continue;
            for (int i=3;i<=K;i++)
            {
                a[i].x=a[i-2].x+a[i-1].x+(a[i-2].t&&a[i-1].h);
                a[i].h=a[i-2].h;
                a[i].t=a[i-1].t;
            }
            if (a[K].x==X)
            {
                printans();
                return 0;
            }
        }
        printf("Happy new year!\n");
}

	   		 	  	  			 		   	   	