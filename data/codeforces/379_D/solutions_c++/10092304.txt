#include <bits/stdc++.h>
typedef long long LL;
#define rep(i,n) for(int i = 0;i < n;i ++)

int k, x, n, m;
struct Node {
	int l, r, cnt;
	Node operator + (Node &A) {
		Node ret;
		ret.l = l;
		ret.r = A.r;
		ret.cnt = cnt + A.cnt + (r && A.l);
		return ret;
	}
	void show(int len) {
		if(l > 0)	putchar('C');
		rep(i, cnt)		printf("AC");
		int left = len - l - cnt*2 - r;
		rep(i, left)	printf("B");
		if(r > 0)	putchar('A');
		puts("");
	}
}lines[55];
bool check() {
	if(lines[0].l + lines[0].r + lines[0].cnt*2 > n)	return false;
	if(lines[1].l + lines[1].r + lines[1].cnt*2 > m)	return false;
	for(int i = 2; i < k; i ++) {
		lines[i] = lines[i - 2] + lines[i - 1];
		if(lines[i].cnt > x)	return false;
	}
//	if(lines[0].l == 0 && lines[0].r == 0 && lines[0].cnt == 1)
//	if(lines[1].l == 0 && lines[1].r == 0 && lines[1].cnt == 1)
//		printf("%d\n", lines[k - 1].cnt);
	return lines[k - 1].cnt == x;
}
void go() {
	for(int i = 0; i <= n/2; i ++) for(int j = 0; j <= m/2; j ++) {
		rep(il, 2) rep(ir, 2) rep(jl, 2) rep(jr, 2) {
			lines[0] = (Node){il, ir, i};
			lines[1] = (Node){jl, jr, j};
			if(check()) {
				lines[0].show(n);
				lines[1].show(m);
				return;
			}
		}
	}
	puts("Happy new year!");
}
int main() {
	scanf("%d%d%d%d", &k, &x, &n, &m);
	go();
	return 0;
}

