import sys

class problem:
  def init(self):
    self.acts = []
  def read_input(self):
    self.n = input()
    self.a = [[] for _ in range(self.n)]
    for line in sys.stdin:
      i, j = map(int, line.split())
      self.a[i - 1].append(j - 1)
  def write_output(self):
    print len(self.acts)
    for act in self.acts:
      print " ".join(map(str, act))
  def units_left(self, k):
    return sum([len(b) for b in self.a[:k]])
  def empty_column_index(self, k):
    c = [0] * k
    for i in xrange(k):
      for j in self.a[i]:
        c[j] += 1
    return c.index(0)
  def swap_columns(self, k, i, j):
    for a in self.a[:k]:
      for y in xrange(len(a)):
        if a[y] == i:
          a[y] = j
        elif a[y] == j:
          a[y] = i
    self.acts.append((2, i + 1, j + 1))
  def swap_rows(self, i, j):
    self.a[i], self.a[j] = self.a[j], self.a[i]
    self.acts.append((1, i + 1, j + 1))
  def get_unit(self, k):
    for i in xrange(k):
      if len(self.a[i]) > 0:
        return i, self.a[i][0]
  def solve(self):
    self.init()
    self.read_input()
    for k in reversed(xrange(2, self.n + 1)):
      if self.units_left(k) == 0:
        break
      i = self.empty_column_index(k)
      if i != k - 1:
        self.swap_columns(k, i, k - 1)
      x, y = self.get_unit(k)
      if x != k - 1:
        self.swap_rows(x, k - 1)
      if y != k - 2:
        self.swap_columns(k, y, k - 2)
    self.write_output()
    
def main():
  p = problem()
  p.solve()

main()