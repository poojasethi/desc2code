def reorder_columns(n, column):
	ret = list()
	placed = [False] * (n + 1)
	for i in range(1, n + 1):
		if placed[i]:
			continue
		k = i
		placed[i] = True
		j = column[i - 1]
		while j != i:
			ret.append((2, k, j))
			k = j
			placed[j] = True
			j = column[j - 1]
	return ret

def reorder_rows(n, matrix, column):
	ret = list()
	num_ones = [0] * (n + 1)
	idx = range(0, n + 1)
	pos = range(0, n + 1)
	for c in matrix:
		for r in c:
			num_ones[r] += 1
	for i in range(1, n + 1):
		j = num_ones.index(0, i)
		if (j != i):
			ret.append((1, i, j))
			t = num_ones[i]; num_ones[i] = num_ones[j]; num_ones[j] = t
			t = idx[i]; idx[i] = idx[j]; idx[j] = t
			pos[idx[i]] = i; pos[idx[j]] = j
		for r in matrix[column[i - 1]]:
			num_ones[pos[r]] -= 1
	return ret

def output(ans):
	print(len(ans))
	for r in ans:
		print("%d %d %d" % r)

n = int(raw_input())
matrix = list()
for i in range(0, n + 1):
	matrix.append(list())
for i in range(1, n):
	r, c = [int(x) for x in raw_input().split()]
	matrix[c].append(r)
ans = list()
column = range(1, n + 1)
column.sort(key = lambda x : -len(matrix[x]))
ans += reorder_columns(n, column)
ans += reorder_rows(n, matrix, column)
output(ans)
