#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>

using namespace std;
const int N=400012,P=1000000007;
char s[N],ans[N];
int n,m,p[N],l[N],r[N];
bool check(int i,int x)
{
	if (++i<x) return 0;
	return ((r[i]-r[i-x]*p[x])*p[i-x])==(l[i]-l[i-x]);
}
bool dfs(int i,int f)
{
	if (i==n) 
	{
		puts(ans);
		return 1;
	}
	if (f) ans[i]=s[i];else ans[i]='a';
	for(;ans[i]<='z';++ans[i])
	{
		l[i+1]=l[i]+ans[i]*p[i];
		r[i+1]=r[i]*P+ans[i];
		if (!check(i,m) && !check(i,m+1) &&dfs(i+1,f && s[i]==ans[i])) return 1;
	}
	return 0;
}
int main()
{
	scanf("%d%s",&m,s);
	int i=((n=strlen(s))-1);
	for(;i>=0 && s[i]=='z';--i) s[i]='a';
	if (i<0) 
	{
		puts("Impossible");
		return 0;
	}
	++s[i];
	p[0]=1;
	for(int i=1;i<N;++i) p[i]=p[i-1]*P;
	if (!dfs(0,1)) puts("Impossible");
}