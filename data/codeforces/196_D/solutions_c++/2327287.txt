#include<cstdio>
using namespace std;
//typedef long long LL;
const int maxn = 401011;
const int P = 47279;
int s[maxn],h[maxn],f[maxn],n,p[maxn],d;
char ch;
void outp() {
     for (int i = 1; i <= n; ++i)
         printf("%c", char('a'+s[i]));
     printf("\n");
}
bool check(int x, int d) 
{
     return x<d?1: (h[x]-h[x-d]*p[d+1])*p[x-d+1] != f[x]-f[x-d];
}
bool dfs(int x, int l) {
     if (x>n) return 1;
     for (int i = (l?s[x]:0);i<26;++i) {
         if (i != s[x]) l = 0,s[x] = i;
         h[x] = h[x-1]*P+i; 
         f[x] = f[x-1]+i*p[x];
         if (check(x, d)&&check(x,d+1)&&dfs(x+1,l?(i==s[x]):0)) return 1;
     }
     return 0;
}
int main() {
    //freopen("str.txt", "r", stdin);
    scanf("%d\n", &d);
    for (ch = getchar();ch>='a'&&ch<='z';ch=getchar()) s[++n]=ch-'a';
    ++s[n];
    for (int i = n; i && s[i]>25; --i) ++s[i-1],s[i]=0;
    p[1] = 1;
    for (int i = 2; i <= n; ++i) p[i]=p[i-1]*P;
    if (s[0]==0&& dfs(1,1)) outp(); else printf("Impossible\n");
    return 0;
}
