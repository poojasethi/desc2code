#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<ctime>
#include<cmath>
#include<algorithm>
#define N 820005
#define mo 10000007
#define Long long long
#define For(i,l,r) for(int i=l;i<=r;i++)
#define Dor(i,r,l) for(int i=r;i>=l;i--)
#define Rep(i,t,v) for(int i=son[t],v=ed[i];i;i=next[i],v=ed[i])
using namespace std;
int n,d;
char s[N],Ans[N];
Long F[N],G[N],P[N];
const Long p1=237;
bool Judge(int p,int d){
    if(p<d) return 0;
    int h1=(F[p]-F[p-d]*P[d])%mo*P[p-d]%mo;
    int h2=(G[p]-G[p-d])%mo;
    if(h1<0) h1+=mo;
    if(h2<0) h2+=mo;
    return h1==h2;
}
void dfs(int p,int f){
    if(p>n){
        if(!f) return;
        For(i,1,n) printf("%c",Ans[i]); printf("\n");
        exit(0);
    }
    for(int i=f?'a':s[p];i<='z';i++){
        Ans[p]=i;
        F[p]=(F[p-1]*p1+i)%mo;
        G[p]=(G[p-1]+P[p-1]*i)%mo;
        if( Judge(p,d) || Judge(p,d+1) ) continue;
        dfs(p+1,f|(i>s[p]));
    }
}
int main(){
    scanf("%d",&d);
    scanf("%s",s+1); n=strlen(s+1);
    P[0]=1; For(i,1,n) P[i]=P[i-1]*p1%mo;
    dfs(1,0);
    printf("Impossible\n");
    
}