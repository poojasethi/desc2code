#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<cmath>

using namespace std;

const int N = 400010;
const int P = 1000000007;
int m, n, mi[N], l[N], r[N];
char a[N], ans[N];

bool check(int i, int x) {
	if (++i < x) return 0;
	return ((r[i] - r[i - x] * mi[x]) * mi[i - x] == l[i] - l[i - x]);
}

int dfs(int i, int has) {
	if (i == n) return puts(ans), 1;
	for (ans[i] = (has ? a[i] : 'a'); ans[i] <= 'z'; ans[i]++) {
		l[i + 1] = l[i] + ans[i] * mi[i];
		r[i + 1] = r[i] * P + ans[i];
		if (!check(i, m) && !check(i, m + 1) && dfs(i + 1, has && (a[i] == ans[i]))) return 1;
	}
	return 0;
}

int main() {
	scanf("%d%s", &m, a);
	int i = (n = strlen(a)) - 1;
	for ( ;i >= 0 && a[i] == 'z'; i--) a[i] = 'a';
	if (i < 0) return puts("Impossible"), 0;
	a[i]++; mi[0] = 1;
	for (int i = 1; i <= n; i++) mi[i] = mi[i - 1] * P;
	if (!dfs(0, 1)) puts("Impossible");
	return 0;
}
