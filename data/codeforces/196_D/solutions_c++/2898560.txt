#include<cstdio>
#include<cstring>
const long long P=199;
const int maxn=400044;
unsigned long long p[maxn],a[maxn],b[maxn];
int m,n;
char ans[maxn],s[maxn];

bool check(int l,int r)
{
    if (l<0)
        return false;
    return ((a[r+1]-a[l])==(b[r+1]-b[l]*p[r-l+1])*p[l]);
}

bool dfs(int x,bool tmp)
{
    if (x==n)
    {
        printf("%s\n",ans);
        return true;
    }
    for (ans[x]=(tmp?s[x]:'a'); ans[x]<='z'; ans[x]++)
    {
        a[x+1]=a[x]+ans[x]*p[x];
        b[x+1]=b[x]*P+ans[x];
        if (!check(x-m+1,x) && !check(x-(m+1)+1,x) && dfs(x+1,tmp && (s[x]==ans[x])))
            return true;
    }
    return false;
}
int main()
{
    p[0]=1;
    for (int i=1; i<maxn; i++)
        p[i]=p[i-1]*P;
    scanf("%d%s",&m,s);
    int i=(n=strlen(s))-1;
    for (; i>=0 && s[i]=='z'; i--)
        s[i]='a';
    if (i<0)
    {
        printf("Impossible\n");
        return 0;
    }
    s[i]++;
    if (!dfs(0,1))
        printf("Impossible\n");
    return 0;
}