#include <cstdio>
#include <cstring>

using namespace std;

const int maxn=400010,base=10007;
char ans[maxn], s[maxn];
int pow[maxn],l[maxn],r[maxn];
int n, m;

inline bool can(int i, int x)
{
    if (++i<x) return 1;
    return (r[i]-r[i-x]*pow[x])*pow[i-x]!=l[i]-l[i-x];
}

int dfs(int i, int has)
{
    if (i==n)
    {
        printf("%s\n",ans);
        return 1;
    }
    for(ans[i]=(has?s[i]:'a'); ans[i]<='z'; ++ans[i])
    {
        l[i+1]=l[i]+ans[i]*pow[i];
        r[i+1]=r[i]*base+ans[i];
        if (can(i,m)&&can(i,m+1)&&dfs(i+1, has&&(s[i]==ans[i])))
            return 1;
    }
    return 0;
}

int main()
{
    scanf("%d%s",&m,&s);
    n=strlen(s);
    for (int i=n-1; ;)
    {
        if (s[i]!='z') {s[i]++; break;}
        s[i]='a';
        --i;
        if (i<0)
        {
            printf("Impossible\n");
            return 0;
        }
    }
    pow[0]=1;
    for (int i=1; i<=n; ++i)
        pow[i]=pow[i-1]*base;
    if (!dfs(0, 1)) printf("Impossible\n");
    //for (;;);
}
