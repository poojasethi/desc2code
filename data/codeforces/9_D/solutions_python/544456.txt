def foo(n, h):
    if dp[n][h] != None:
        return dp[n][h]
    ret = 0
    for lh in xrange(h - 1):
        for ln in xrange(n):
            rn = n - 1 - ln
            ret += foo(ln, lh) * foo(rn, h - 1)
    for rh in xrange(h):
        for rn in xrange(n):
            ln = n - 1 - rn
            ret += foo(ln, h - 1) * foo(rn, rh)
    dp[n][h] = ret
    return ret

n, h = map(int, raw_input().split())
dp = [[None] * 40 for i in xrange(40)]
dp[0][0] = 1
for i in xrange(40):
    for j in xrange(i + 1, 40):
        dp[i][j] = 0
for i in xrange(1, 40):
    dp[i][0] = 0
print sum(foo(n, i) for i in xrange(h, n + 1))
