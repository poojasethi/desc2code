dp = [[-1]*40 for _ in xrange(40)]
def get_dp(n,h):
	if dp[n][h] != -1:
		return dp[n][h]
	dp[n][h] = 0
	if h > n:
		return dp[n][h] 
	if n == 1:
		if h == 1:dp[n][h] = 1
		return dp[n][h] 
	if n ==0:
		if h == 0:dp[n][h] = 1
		return dp[n][h]
	dp[n][h] = 0
	for left in xrange(n):
		right = n - 1 - left
		for lh in xrange(left+1):
			for rh in xrange(right+1):
				if max(lh,rh)+1 != h:
					continue
				dp[n][h] += get_dp(left,lh)*get_dp(right,rh)
	return dp[n][h]	
N,H = map(int,raw_input().split())
res = 0
for i in xrange(H,N+1):
	res += get_dp(N,i)
print res
