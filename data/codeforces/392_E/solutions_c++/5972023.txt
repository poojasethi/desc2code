#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#define mm 500
#define max (500*2000+1)
#define min (-max)
int i,j,k,m,n;
int v[mm],w[mm];
int f[mm][mm],g[mm][mm],ans[mm];;
void init()
{
  memset(f,127,sizeof(f));
  memset(g,127,sizeof(g));
  scanf("%d",&n);
  for (i=1;i<=n;i++) scanf("%d",&v[i]);
  for (i=1;i<=n;i++) scanf("%d",&w[i]);
}
int maxx(int a,int b)
{
    return a>b?a:b;
}
int dpg(int l,int r);
int dpf(int l,int r)
{
   int i,j,k,p;
   if (l==r)f[l][r]=v[1];
   if (f[l][r]<max)return f[l][r];
   f[l][r]=min;
   if (w[l]>w[r])
   {
     for (k=l;k<r;k++)
     if (w[k]==w[r]+1)
     {
       p=w[l]-w[r]+1;
       if (p>r-l+1)continue;
       f[l][r]=maxx(f[l][r],dpf(l,k)+dpg(k+1,r-1)+v[p]-v[p-1]);
     }
   }
   else
   {
     for (k=1;k<r;k++)
     if (w[k]==w[r]-1)
     {
       p=w[r]-w[l]+1;
       if (p>r-l+1)continue;
       f[l][r]=maxx(f[l][r],dpf(l,k)+dpg(k+1,r-1)+v[p]-v[p-1]);
     }
   }
   return f[l][r];
}
int dpg(int l,int r)
{  
   if (l>r)return 0;
   int i,j,k,a,b,c,p1,p2;
   if (l==r)g[l][r]=v[1];
   if (g[l][r]<max)return g[l][r];
   g[l][r]=dpf(l,r);
   for (k=l+1;k<r;k++)
   if (w[k]>w[l]&&w[k]>w[r])
   {
     p1=w[k]-w[l]+1;
     p2=w[k]-w[r]+1;
     if (p1+p2-1>r-l+1)continue;
     g[l][r]=maxx(g[l][r],dpf(l,k)+dpf(k,r)+v[p1+p2-1]-v[p1]-v[p2]);
   }
   for (k=l;k<r;k++)
   g[l][r]=maxx(dpg(l,k)+dpg(k+1,r),g[l][r]);
   return g[l][r];
}
int main()
{
init();
dpg(1,n);
ans[1]=maxx(0,g[1][1]);
for (i=1;i<=n;i++)
for (j=0;j<i;j++)
{
 ans[i]=maxx(ans[i],ans[j]+maxx(0,g[j+1][i]));   
}
printf("%d\n",ans[n]);
//system("pause");
return 0;
}
