#include <iostream>
#include <cmath>

using namespace std;

const int infinito=100000000;

int absolut(int x)
{
  if (x<0) return -x;
  return x;
}

int n;
int v[500];
int w[500];

int valor[500][500];
int valortot[500][500];
int valorcom[500][500];

int main()
{
  cin>>n;
  for (int i=1;i<=n;i++)
    cin>>v[i];
  for (int i=0;i<n;i++)
    cin>>w[i];
  for (int i=n-1;i>=0;i--) {
    valortot[i][i]=v[1];
    valorcom[i][i]=max(valorcom[i][i],valortot[i][i]);
    for (int j=i+1;j<n;j++) {
      valor[i][j]=valortot[i][j]=-infinito;
      for (int k=i;k<j;k++) {
	if ((w[i]>=w[k] and w[k]==w[j]+1) or (w[i]<=w[k] and w[k]==w[j]-1))
	  valor[i][j]=max(valor[i][j],valor[i][k]+valortot[k+1][j-1]);
	valortot[i][j]=max(valortot[i][j],valortot[i][k]+valortot[k+1][j]);
	if (w[k]>=w[i] and w[k]>=w[j] and absolut(w[i]-w[k])+absolut(w[k]-w[j])+1<=n)
	  valortot[i][j]=max(valortot[i][j],valor[i][k]+valor[k][j]+v[absolut(w[i]-w[k])+absolut(w[k]-w[j])+1]);
	valorcom[i][j]=max(valorcom[i][j],valorcom[i][k]+valorcom[k+1][j]);
      }
      if (absolut(w[i]-w[j])+1<=n)
	valortot[i][j]=max(valortot[i][j],valor[i][j]+v[absolut(w[i]-w[j])+1]);
      valorcom[i][j]=max(valorcom[i][j],valortot[i][j]);
    }
  }
  cout<<valorcom[0][n-1]<<endl;
}
