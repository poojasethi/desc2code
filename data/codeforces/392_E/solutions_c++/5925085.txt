#pragma comment (linker, "/STACK:1073741824")
#define _USE_MATH_DEFINES
#include <math.h>
#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <fstream>
#include <iostream>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <deque>
#include <vector>
#include <string>
#include <bitset>
#include <complex>
#include <numeric>
#include <iomanip>

using namespace std;

#define SZ(x) (int((x).size()))
#define FOR(i, a, b) for(int (i) = (a); (i) <= (b); ++(i))
#define ROF(i, a, b) for(int (i) = (a); (i) >= (b); --(i))
#define REP(i, n) for (int (i) = 0; (i) < (n); ++(i))
#define REPD(i, n) for (int (i) = (n); (i)--; )
#define FE(i, a) for (int (i) = 0; (i) < (int((a).size())); ++(i))
#define MEM(a, val) memset((a), val, sizeof(a))
#define INF 1000000
#define LLINF 1000000000000000000LL
#define PB push_back
#define PPB pop_back
#define ALL(c) (c).begin(), (c).end()
#define SQR(a) ((a)*(a))
#define MP(a,b) make_pair((a), (b))
#define XX first
#define YY second
#define GET_RUNTIME_ERROR *(int*)(NULL) = 1

typedef vector<int> vint;
typedef vector<long long> vLL;
typedef double dbl;
typedef long double ldbl;
typedef vector<pair<int, int> > vpii;
typedef long long LL;
typedef pair<int, int> pii;

const int nmax = 410;

int w[nmax];
int V[nmax];

int f[nmax][nmax];
int g[nmax][nmax];

void upd(int &a, int b) {
  if (a < b) a = b;
}

int dp[nmax];

int getV(int len) {
  if (len < nmax) {
    return V[len];
  }
  return -INF;
}

int main() {
#ifdef    CENADAR_DEBUG
  freopen("input.txt", "r", stdin);
//  freopen("output.txt", "w", stdout);
//  freopen("errput.txt", "w", stderr);
#else  // CENADAR_DEBUG
//  freopen("input.txt", "r", stdin);
//  freopen("output.txt", "w", stdout);
#endif // CENADAR_DEBUG

  int n, x;
  scanf("%d", &n);

  REP(i, n) scanf("%d", &V[i + 1]);
  REP(i, n) scanf("%d", &w[i]);

  REP(i, nmax) REP(j, nmax) f[i][j] = g[i][j] = -INF;

  int ans = 0;
  REP(i, n) f[i][i] = V[1];
  REP(i, n) g[i][i] = g[i][i] = 0;

  FOR(len, 2, n) {
    REP(i, n) {
      int j = i + len - 1;
      if (j >= n) continue;

      /// g

      if (abs(w[i] - w[j]) == 1)
        upd(g[i][j], len > 2 ? f[i + 1][j - 1] : 0);

      if (w[i] != w[j]) {
        int newVal = w[i] < w[j] ? w[i] + 1 : w[i] - 1;
        for(int k = i; k < j; ++k)
          if (w[k] == newVal)
            upd(g[i][j], g[i][k] + g[k][j]);
      }

      /// f

      for(int k = i; k < j; ++k)
        upd(f[i][j], f[i][k] + f[k + 1][j]);

      for(int k = i + 1; k < j; ++k)
        if (!(w[i] > w[k] && w[k] < w[j]))
          upd(f[i][j], g[i][k] + g[k][j] + getV(abs(w[k] - w[i]) + abs(w[k] - w[j]) + 1));

      upd(f[i][j], g[i][j] + getV(abs(w[i] - w[j]) + 1));
    }
  }

  REP(i, nmax) dp[i] = -INF;
  dp[0] = 0;
  REP(i, n) {
    upd(dp[i + 1], dp[i]);
    for(int j = i; j < n; ++j) {
      upd(dp[j + 1], dp[i] + f[i][j]);
    }
  }

/*  FOR(i, 0, n) cout << i << ": " << dp[i] << endl;
  REP(i, n) {
    REP(j, n) {
      printf("%11d ", f[i][j]);
    }
    printf("\n");
  }

  printf("\n");
  REP(i, n) {
    REP(j, n) {
      printf("%11d ", g[i][j]);
    }
    printf("\n");
  }/**/

  cout << dp[n] << endl;

  return 0;
}
