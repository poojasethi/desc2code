#include <algorithm>
#include <cstdio>
using namespace std;

const int INF = 1000000000;
const int maxn = 410;

int n;
int v[maxn], w[maxn];
int f[maxn][maxn][2], g[maxn][maxn], gg[maxn];

int main() {
//  freopen("input.txt", "r", stdin);
//  freopen("output2.txt", "w", stdout);
    
    scanf("%d", &n);
    for (int i = 1; i <= n; ++ i) scanf("%d", &v[i]);
    for (int i = 1; i <= n; ++ i) scanf("%d", &w[i]);
    
    for (int i = 1; i <= n; ++ i) {
        for (int j = 1; j <= n; ++ j) f[i][j][0] = f[i][j][1] = -INF;
        f[i][i][0] = 0;
        f[i][i][1] = v[1];
        g[i][i] = v[1];
    }
    
    int res = 0;
    for (int k = 1; k < n; ++ k) {
        for (int i = n-k; i >= 1; -- i) {
            int j = i+k;
            
            if (w[i] != w[j]) {
                int sign = w[i] < w[j] ? 1 : -1;
                for (int o = i+1; o <= j; ++ o)
                    if (w[o] == w[i] + sign)
                        f[i][j][0] = max(f[i][j][0], g[i+1][o-1] + f[o][j][0]);
            }
            
            for (int o = i; o <= j; ++ o) {
                int len;
                if (w[o] >= w[i] && w[o] >= w[j] && (len = w[o]*2-w[i]-w[j]+1) <= n)
                    f[i][j][1] = max(f[i][j][1], v[len] + f[i][o][0] + f[o][j][0]);
            }
            
            g[i][j] = f[i][j][1];
            for (int o = i+1; o <= j; ++ o)
                g[i][j] = max(g[i][j], g[i][o-1] + f[o][j][1]);
        }
    }
    
    for (int i = 1; i <= n; ++ i) {
        gg[i] = max(gg[i], gg[i-1]);
        for (int j = i; j <= n; ++ j)
            gg[j] = max(gg[j], gg[i-1] + g[i][j]);
        
//      for (int j = 1; j <= n; ++ j)
//          printf("%d ", gg[j]);
//      putchar('\n');
    }
    printf("%d\n", gg[n]);
    
    return 0;
}
