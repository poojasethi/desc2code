#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int MAXN = 405;

int G[MAXN][MAXN][2],F[MAXN][MAXN],V[MAXN],W[MAXN],N;

void Update(int &a,int b)
{
	a = (a < b) ? b : a;
}

int main()
{
	scanf("%d", &N);
	for(int i = 1;i <= N;i ++)
		scanf("%d", &V[i]);
	for(int i = 1;i <= N;i ++)
		scanf("%d", &W[i]);
	for(int i = 1;i <= N;i ++)
		for(int j = i + 1;j <= N;j ++)
		{
			F[i][j] = -(1 << 29);
			for(int t = 0;t < 2;t ++) G[i][j][t] = -(1 << 29);
		}
	for(int i = N;i;i --)
	{
		// define 0 as +1 1 as -1
		F[i][i] = V[1];
		for(int j = i + 1;j <= N;j ++)
		{
			for(int k = i;k < j;k ++)
				if (W[k] + 1 == W[j]) Update(G[i][j][0],G[i][k][0] + F[k + 1][j - 1]);
			for(int k = i + 1;k <= j;k ++)
				if (W[k] + 1 == W[i]) Update(G[i][j][1],F[i + 1][k - 1] + G[k][j][1]);
			for(int k = i;k <= j;k ++)
			{
				int l = W[k] - W[i] + 1 + W[k] - W[j];
				if (1 <= l && l <= N) Update(F[i][j],G[i][k][0] + G[k][j][1] + V[l]);
			}
			for(int k = i;k < j;k ++)
				Update(F[i][j],F[i][k] + F[k + 1][j]);
		}
	}
	static int Out[MAXN];
	for(int i = 1;i <= N;i ++)
	{
		Out[i] = Out[i - 1];
		for(int j = 1;j <= i;j ++)
			Out[i] = max(Out[i],Out[j - 1] + F[j][i]);
	}
	printf("%d\n", Out[N]);
	return 0;
}
