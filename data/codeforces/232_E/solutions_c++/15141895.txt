/*************************************************************************
	> File Name: 232E.cpp
	> Author: Canoe
	> Mail: canoefzh@gmail.com 
	> Created Time: Sun 25 Aug 2013 02:00:36 PM CST
 ************************************************************************/

#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <ctime>
#include <cmath>
#include <cassert>
#include <sstream>
#include <fstream>
#include <bitset>

using namespace std;

const int N = 531;
const int M = 1000086;

int r, c, sX[M], sY[M], eX[M], eY[M];
char board[N][N];
bitset <N> dp[2][N][N];
bool ans[M];

void gao(int lef, int rig, vector <int> *query)
{
	if(lef >= rig) return;
	int mid = (lef + rig) >> 1;
	for(int i = mid; i >= lef; i--)
		for(int j = c - 1; j >= 0; j--)
		{
			dp[0][i][j].reset();
			if(board[i][j] == '#') continue;
			if(i == mid) dp[0][i][j].set(j);
			if(i + 1 <= mid) dp[0][i][j] |= dp[0][i + 1][j];
			if(j + 1 < c) dp[0][i][j] |= dp[0][i][j + 1];
		}
	for(int i = mid; i < rig; i++)
		for(int j = 0; j < c; j++)
		{
			dp[1][i][j].reset();
			if(board[i][j] == '#') continue;
			if(i == mid) dp[1][i][j].set(j);
			if(i - 1 >= mid) dp[1][i][j] |= dp[1][i - 1][j];
			if(j - 1 >= 0) dp[1][i][j] |= dp[1][i][j - 1];
		}
	vector <int> *leftQuery = new vector <int> ();
	vector <int> *rightQuery = new vector <int> ();
	for(vector <int> :: iterator it = query->begin(); it != query->end(); it++)
	{
		int id = *it;
		if(eX[id] < mid)
			leftQuery->push_back(id);
		else if(sX[id] > mid) 
			rightQuery->push_back(id);
		else if((dp[0][sX[id]][sY[id]] & dp[1][eX[id]][eY[id]]).any())
		{
			ans[id] = true;
		}
	}
	delete query;
	gao(lef, mid, leftQuery);
	gao(mid + 1, rig, rightQuery);
}
	
int main()
{
#ifndef ONLINE_JUDGE
	freopen("in.txt", "r", stdin);
#endif
	while(scanf("%d %d", &r, &c) == 2)
	{
		for(int i = 0; i < r; i++)
		{
			scanf("%s", board[i]);
		}
		int q;
		scanf("%d", &q);
		for(int i = 0; i < q; i++)
		{
			scanf("%d %d %d %d", &sX[i], &sY[i], &eX[i], &eY[i]);
			sX[i]--, sY[i]--, eX[i]--, eY[i]--;
		}
		vector <int> *query = new vector <int> ();
		for(int i = 0; i < q; i++)
			query->push_back(i);
		memset(ans, false, sizeof(ans));
		gao(0, r, query);
		for(int i = 0; i < q; i++)
		{
			printf("%s\n", ans[i] ? "Yes" : "No");
		}
	}
	return 0;
}
