#include <bits/stdc++.h>

#define mp make_pair
#define st first
#define nd second
#define pb push_back

using namespace std;

typedef long long ll;
typedef pair< ll,ll > pll;
typedef pair< int,int > pii;

const int inf = 1000000000, N = 500, M = 600000;

int n, m, k;
char a[N+5][N+5];
bool ans[M+5];
bitset<N+5> dp[N+5][N+5], dp2[N+5][N+5];
vector< pair<pii, int> > q[N+5][N+5];

void solve(int l, int r) {
	if (l > r)
		return;

	int mi = (l + r) / 2;

	solve(l, mi-1);
	solve(mi+1, r);

	for (int i = 1; i <= n; i++)
		for (int j = l; j <= r; j++)
			dp[i][j].reset(), dp2[i][j].reset();

	for (int i = 1; i <= n; i++) {
		dp[i][mi][i] = (a[i][mi] == '.');
		dp2[i][mi][i] = (a[i][mi] == '.');
	}
	
	for (int i = 1; i <= n; i++) {
		for (int j = mi; j <= r; j++) {
			if (a[i][j] == '.') {
				if (j > mi)
					dp[i][j] |= dp[i][j-1];
				if (i > 1)
					dp[i][j] |= dp[i-1][j];
			}
		}
	}
	
	for (int i = n; i >= 1; i--) {
		for (int j = mi; j >= l; j--) {
			if (a[i][j] == '.') {
				if (j < mi)
					dp2[i][j] |= dp2[i][j+1];
				if (i < n)
					dp2[i][j] |= dp2[i+1][j];
			}
		}
	}
	
	for (int i = 1; i <= n; i++) {
		for (int j = l; j <= mi; j++) {
			for (int k = 0; k < q[i][j].size(); k++) {
				int x = q[i][j][k].st.st;
				int y = q[i][j][k].st.nd;
				int id = q[i][j][k].nd;

				if (y >= mi) {
					if ((dp2[i][j] & dp[x][y]).count()) {
						ans[id] = true;
					}
				}
			}
		}
	}
}

int main()
{
	int x1, y1, x2, y2;

	scanf("%d %d", &n, &m);

	for (int i = 1; i <= n; i++) {
		scanf(" %s", a[i] + 1);
	}
	
	scanf("%d", &k);

	for (int i = 1; i <= k; i++) {
		scanf("%d %d %d %d", &x1, &y1, &x2, &y2);

		q[x1][y1].pb(mp(mp(x2, y2), i));
	}

	solve(1, m);
	
	for (int i = 1; i <= k; i++)
		puts(ans[i] ? "Yes" : "No");

	return 0;
}
