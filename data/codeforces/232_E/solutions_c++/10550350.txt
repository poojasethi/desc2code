#include <bits/stdc++.h>

#define	st first
#define	nd second
#define	mp make_pair
#define	pb push_back
#define	lli long long int
#define	all( gg )	gg.begin(),gg.end()
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	FP( ii,aa,bb ) for( lli ii=aa;ii<=bb;ii++ )
#define	FM( ii,aa,bb ) for( lli ii=aa;ii>=bb;ii-- )
#define	debug(ccc)	cout << #ccc << " = " << ccc << endl;

#define	mod	1000000007LL

using namespace std;

int	m,n;
char	s[600][600];

bitset<600>	sol[600][600],sag[600][600];

vector< pair<pair<int,int>,int> >	que[600][600];

int	result[600000];

void	solve( int l,int r ){
	int	o = (l+r)/2;
	if( l!=r ){
		solve( l,o );
		solve( o+1,r );
	}
	FM( i,m,1 )
		FM( j,o,l ){
			sol[i][j].reset();
			if( s[i][j]=='#' )	continue;
			if( j!=o and s[i][j+1]=='.' )	sol[i][j] |= sol[i][j+1];
			if( i!=m and s[i+1][j]=='.' )	sol[i][j] |= sol[i+1][j];
			if( j==o )	sol[i][j][i] = 1;
		}
	FP( i,1,m )
		FP( j,o,r ){
			sag[i][j].reset();
			if( s[i][j]=='#' )	continue;
			if( j!=o and s[i][j-1]=='.' )	sag[i][j] |= sag[i][j-1];
			if( i!=1 and s[i-1][j]=='.' )	sag[i][j] |= sag[i-1][j];
			if( j==o )	sag[i][j][i] = 1;
		}
	FP( i,1,m )
		FP( j,l,o )
			foreach( que[i][j],it )
				if( it->st.nd>=o and (sol[i][j]&sag[it->st.st][it->st.nd])._Find_first()!=600 )	result[ it->nd ] = 1;
}

int main(){
	cin >> m >> n;
	FP( i,1,m )
		scanf("%s",s[i]+1);
	int	q;
	scanf("%d",&q);
	FP( i,1,q ){
		int	x1,x2,y1,y2;
		scanf("%d %d %d %d",&x1,&y1,&x2,&y2);
		que[x1][y1].pb( mp( mp( x2,y2 ),i ) );
	}
	solve( 1,n );
	FP( i,1,q )
		if( result[i] )	puts("Yes");
		else	puts("No");
}
