#include<stdio.h>
#include<vector>
#include<bitset>
#include<iostream>

using std::cout;
using std::endl;
using std::vector;
using std::bitset;

const int MAXN=500+9,MAXQ=600000;

struct query
{
	int x1,y1,x2,y2,n;
};

int m;
bool ans[MAXQ];
char map[MAXN][MAXN];
bitset<500> f[MAXN][MAXN];
void solve(int l,int r,const vector<query> &q)
{
	int i,j;
	vector<query>::const_iterator it;
	if(l==r)
	{
		for(i=m-1;i>=0;--i)
		{
			f[l][i].reset();
			if(map[l][i]=='.')
			{
				f[l][i][i]=1;
				if(i!=m-1)
					f[l][i]|=f[l][i+1];
			}
		}
		for(it=q.begin();it!=q.end();++it)
			ans[it->n]=f[l][it->y1][it->y2];
		return;
	}
	int mid=(l+r)>>1;
	for(i=mid;i>=l;--i)
		for(j=m-1;j>=0;--j)
		{
			f[i][j].reset();
			if(map[i][j]=='.')
			{
				if(i==mid)
					f[i][j][j]=1;
				else f[i][j]=f[i+1][j];
				if(j+1!=m)
					f[i][j]|=f[i][j+1];
			}
		}
	for(i=mid+1;i<=r;++i)
		for(j=0;j<m;++j)
		{
			f[i][j].reset();
			if(map[i][j]=='.')
			{
				if(i==mid+1)
					f[i][j][j]=1;
				else f[i][j]=f[i-1][j];
				if(j)
					f[i][j]|=f[i][j-1];
			}
		}
	vector<query> ql,qr;
	for(it=q.begin();it!=q.end();++it)
		if(it->x2<=mid)
			ql.push_back(*it);
		else if(it->x1>mid)
			qr.push_back(*it);
		else ans[it->n]=(f[it->x1][it->y1]&f[it->x2][it->y2]).any();
	solve(l,mid,ql);
	solve(mid+1,r,qr);
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif
	int n,q,i;
	int x1,y1,x2,y2;
	scanf("%d%d",&n,&m);
	for(i=0;i<n;++i)
		scanf("%s",map[i]);
	scanf("%d",&q);
	vector<query> que(q);
	for(i=0;i<q;++i)
	{
		scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
		que[i]=(query){--x1,--y1,--x2,--y2,i};
	}
	solve(0,n-1,que);
	for(i=0;i<q;++i)
		puts(ans[i]?"Yes":"No");
	return 0;
}
