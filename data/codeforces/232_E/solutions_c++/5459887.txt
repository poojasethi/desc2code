#include <cstdio>
#include <cstring>
#include <algorithm>
#define rep(i,s,t) for (int i = s; i <= t; ++i)
#define per(i,s,t) for (int i = s; i >= t; --i)
using namespace std;
struct bit{
	int k[16];
	bit operator |=(int x){
		k[x>>5]|=1<<(x&31); return *this;
	}
	bit operator |=(bit x){
		rep(i,0,15) k[i]|=x.k[i]; return *this;
	}
}Empty, f[510][510], g[510][510];
struct res{
	int x1, y1, x2, y2, id;
	void read(){
		scanf("%d%d%d%d", &x1, &y1, &x2, &y2);
	}
}q[600010], q1[600010], q2[600010];
int n, m, Q, a[510][510];
int ans[600010];
char s[510];
inline bool operator &(bit A, bit B){
	rep(i,0,15) if (A.k[i]&B.k[i]) return 1; return 0;
}
void Init(){
	scanf("%d%d", &n, &m);
	rep(i,1,n){
		scanf("%s", s+1);
		rep(j,1,m) if (s[j] == '.') a[i][j] = 1;
	}
	scanf("%d", &Q);
	rep(i,1,Q){
		q[i].read(); q[i].id = i;
	}
}
void Work(int l, int r, int h, int t){
	if (h > t || l > r) return;
	int mid = (l+r)>>1;
	per(i,n,1){
		f[i][mid] = Empty;
		if (a[i][mid]) f[i][mid]|=i;
		if (a[i+1][mid]) f[i][mid]|=f[i+1][mid];
	}
	per(j,mid-1,l)
	per(i,n,1){
		f[i][j] = Empty;
		if (a[i][j]){
			if (a[i+1][j]) f[i][j]|=f[i+1][j];
			if (a[i][j+1]) f[i][j]|=f[i][j+1];
		}
	}
	rep(i,1,n){
		g[i][mid] = Empty;
		if (a[i][mid]) g[i][mid]|=i;
		if (a[i-1][mid]) g[i][mid]|=g[i-1][mid];
	}
	rep(j,mid+1,r)
	rep(i,1,n){
		g[i][j] = Empty;
		if (a[i][j]){
			if (a[i-1][j]) g[i][j]|=g[i-1][j];
			if (a[i][j-1]) g[i][j]|=g[i][j-1];
		}
	}
	int t1 = 0, t2 = 0;
	rep(i,h,t)
	if (q[i].y2 < mid) q1[++t1] = q[i];
	else if (q[i].y1 > mid) q2[++t2] = q[i];
	else if (f[q[i].x1][q[i].y1]&g[q[i].x2][q[i].y2]) ans[q[i].id] = 1;
	rep(i,1,t1) q[h+i-1] = q1[i];
	rep(i,1,t2) q[h+t1+i-1] = q2[i];
	Work(l, mid-1, h, h+t1-1); Work(mid+1, r, h+t1, h+t1+t2-1);
}
void Out(){
	rep(i,1,Q) if (ans[i]) printf("Yes\n"); else printf("No\n");
}
int main(){
	Init();
	Work(1, m, 1, Q);
	Out();
	return 0;
}