#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define y1 eatmore
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
char s[509][509];
struct trix{
	int b,i,u,d,ind;
};
int n,m,q;
bitset<503>dp[503][503],cp[503][503];
int Tortoise[MAXN<<3];
void tap(int l,int r,vector<trix>k){
	if(l>r)
		return;
	int mid=(l+r)>>1;
	for(int i=n;i>=1;i--){
		dp[i][mid]=0;
		if(s[i][mid]=='#')
			continue;
		dp[i][mid][i]=1;
		if(i!=n)
			dp[i][mid]|=dp[i+1][mid];
	}
	for(int i=1;i<=n;i++){
		cp[i][mid]=0;
		if(s[i][mid]=='#')
			continue;
		cp[i][mid][i]=1;
		if(i!=1)
			cp[i][mid]|=cp[i-1][mid];
	}
	for(int i=mid-1;i>=l;i--)
		for(int j=n;j>=1;j--){
			dp[j][i]=0;
			if(s[j][i]=='#')
				continue;
			dp[j][i]=dp[j][i+1];
			if(j<n)
				dp[j][i]|=dp[j+1][i];	
		}
	for(int i=mid+1;i<=r;i++)
		for(int j=1;j<=n;j++){
			cp[j][i]=0;
			if(s[j][i]=='#')
				continue;
			cp[j][i]=cp[j][i-1];
			if(j!=1)
				cp[j][i]|=cp[j-1][i];	
		}	
	vector<trix>left,right;	
	for(int i=0;i<k.size();i++){
		trix h=k[i];
		if(h.i<=mid and h.d>=mid){
			if((dp[h.b][h.i]&cp[h.u][h.d]).count()>=1)
				Tortoise[h.ind]=1;
		}
		if(h.d<mid)
			left.pb(h);
		if(h.i>mid)
			right.pb(h);		
	}
	tap(l,mid-1,left);tap(mid+1,r,right);
}
int main(){
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)
		scanf("%s",s[i]+1);
	scanf("%d",&q);vector<trix>que;
	for(int i=1;i<=q;i++){
		int x1,y1,x2,y2;
		scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
		trix tc;tc.b=x1;tc.i=y1,tc.u=x2;tc.d=y2;tc.ind=i;
		que.pb(tc);
	}
	tap(1,m,que);
	for(int i=1;i<=q;i++){
		if(Tortoise[i])
			printf("Yes\n");
		else
			printf("No\n");	
	}
	return 0;
}
//LooK aT mY COde ONlinE +_+
