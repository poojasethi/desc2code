#include <bits/stdc++.h>

#define fi first
#define se second
#define mm ((b+s)>>1)
#define umax(a,b) a=max(a,b)
#define umin(a,b) a=min(a,b)
#define inf 1000000009ll
#define kare(a) ((a)*(a))
#define max3(a,b,c) max((a),max((b),(c)))
#define bit(k) (1ll<<(k))
#define fbit(k,i) ((k) & (bit(i)))
//~ #define count(a) __builtin_popcount(a)
#define pq priority_queue
#define all(v) v.begin(),v.end()
#define type(x) __typeof(x.begin())
#define foreach(v,it) for(type(v) it=v.begin(); it!=v.end();it++)

using namespace std;

typedef double db;
typedef long long lint;
typedef pair <int,int> ii;
typedef pair <ii,int> iii;
typedef vector <int> vi;
typedef vector <ii> vii;

const int maxn=510;

int N,M,Q,X1,X2,Y1,Y2;
char ar[maxn][maxn];
bitset <maxn> L[12][maxn][maxn],R[12][maxn][maxn];

void cal(int der,int b,int s){
	//~ printf("cal %d %d %d\n",der,b,s);
	if(s<b) return;
	for(int i=N;i>=1;i--) if(ar[i][mm]){
		L[der][i][mm]=L[der][i+1][mm];
		L[der][i][mm][i]=1;
	}
	
	for(int j=mm-1;j>=b;j--)
		for(int i=N;i>=1;i--) if(ar[i][j]){
			L[der][i][j]=L[der][i+1][j] | L[der][i][j+1];
			//~ printf("%d , %d %d -> %d\n",mm,i,j,L[der][i][j].count());
		}
	
	for(int i=1;i<=N;i++) if(ar[i][mm]){
		R[der][i][mm]=R[der][i-1][mm];
		R[der][i][mm][i]=1;
	}
	
	for(int j=mm+1;j<=s;j++)
		for(int i=1;i<=N;i++) if(ar[i][j]){
			R[der][i][j]=R[der][i-1][j] | R[der][i][j-1];
			//~ printf("R %d , %d %d -> %d\n",mm,i,j,R[der][i][j].count());
		}
	
	if(b==s) return;
	
	cal(der+1,b,mm-1);
	cal(der+1,mm+1,s);
}

bool find(int der,int b,int s){
	if(s<Y1 || Y2<b) return 0;
	if(s<b) return 0;
	if(Y1<=mm && mm<=Y2)
		return (L[der][X1][Y1] & R[der][X2][Y2]).count();
	
	return find(der+1,b,mm-1) | find(der+1,mm+1,s);
}

int main(){
	cin >> N >> M;
	
	for(int i=1;i<=N;i++){
		scanf(" %s",ar[i]+1);
		for(int j=1;j<=M;j++)
			ar[i][j]= (ar[i][j]=='.');
	}
	
	cal(1,1,M);
	
	cin >> Q;
	for(int i=1;i<=Q;i++){
		scanf("%d %d %d %d",&X1,&Y1,&X2,&Y2);
		if(find(1,1,M))
			puts("Yes");
		else
			puts("No");
	}
	
	return 0;
}
