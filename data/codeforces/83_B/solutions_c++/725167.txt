#include <iostream>
#include <algorithm>

using namespace std;

int N;
long long K;
int A[100002], ok[100002], maxA;

bool Test(int x)
{
	long long test = 0;
	for (int i = 1; i <= N; ++i)
		if (A[i] > x)
			test += x;
		else
			test += A[i];
			
	return (test <= K);
}

int main()
{
	cin >> N >> K;
	for (int i = 1; i <= N; ++i)
	{
		cin >> A[i];
		maxA = max(maxA, A[i]);
	}
	
	int step, pos;
	for (step = 1; (step << 1) <= maxA; step <<= 1);
	for (pos = 0; step; step >>= 1)
		if (pos + step <= maxA && Test(pos + step))
			pos += step;
	
	bool allunder = true;
	
	long long longsum = 0;
	for (int i = 1; i <= N; ++i)
		if (A[i] > pos)
		{
			allunder = false;
			ok[++ok[0]] = i;
			longsum += pos;
		}
		else
			longsum += A[i];
	
	if (K - longsum && allunder)
		cout << "-1";
	else
	{
		long long rem = K - longsum;
		for (int i = 1; i <= rem; ++i)
			--A[ok[i]];
		for (int i = rem + 1; i <= ok[0]; ++i)
			if (A[ok[i]] > pos)
				cout << ok[i] << ' ';
		for (int i = 1; i <= rem; ++i)
			if (A[ok[i]] > pos)
				cout << ok[i] << ' ';
	}
}
