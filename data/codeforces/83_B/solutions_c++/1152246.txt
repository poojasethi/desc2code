#include<stdio.h>
__int64 k;
int n;
int top;
__int64 a[200000],b[1000000],c[2000000];
__int64 min(__int64 a,__int64 b){
	return a<b?a:b;
}
bool ok(int i){
	__int64 have=0;
	for (int j=1;j<=n;j++){
		have+=min(i,a[j]);
		if (have>k)
			return false;
	}
	return true;
}
int find(){
	__int64 l=0,r=k;
	while (1){
		__int64 mid=(l+r)/2;
		if (ok(mid))
			l=mid;
		else
			r=mid;
		if (r==l)
			return r;
		if (r-l==1)
			return l;
	}
}
int main(){
	scanf("%d %I64d",&n,&k);
	__int64 sum=0;
	for (int i=1;i<=n;i++){
		scanf("%I64d",&a[i]);
		sum+=a[i];
	}
	if (sum<k){
		printf("-1\n");
		return 0;
	}
	else if (sum==k){
		return 0;
	}
	__int64 number=find();
	top=0;
	for (int i=1;i<=n;i++){
		if (a[i]>number){
			b[++top]=a[i]-number;
			c[top]=i;
			k-=number;
		}
		else k-=a[i];
	}
	int cal=0;
	for (int i=1;i<=k;i++){
		if (b[i]>1){
			cal++;
			b[top+cal]=b[i]-1;
			c[top+cal]=c[i];
		}
	}
	for (int i=k+1;i<=top+cal-1;i++){
		printf("%I64d ",c[i]);
	}
	printf("%I64d\n",c[top+cal]);
}
	     			   	   	  					 	