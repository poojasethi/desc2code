#include<cstdio>
#include<numeric>
#include<iostream>
#include<algorithm>

#define mp       make_pair
#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

typedef long long ll;

int main(){
	int n;
	ll k,a[100000]; cin>>n>>k;
	rep(i,n) cin>>a[i];

	if(accumulate(a,a+n,0LL)<k){
		puts("-1");
		return 0;
	}

	static pair<ll,int> ord[100000];
	rep(i,n) ord[i]=mp(a[i],i);
	sort(ord,ord+n);

	static bool home[100000];
	ll offset=0;
	rep(i,n){
		ll aa=ord[i].first-offset;
		int id=ord[i].second;
		if(aa*(n-i)<=k){
			home[id]=true;
			offset+=aa;
			k-=aa*(n-i);
		}
		else{
			offset+=k/(n-i);
			k-=k/(n-i)*(n-i);
			break;
		}
	}

	int p;
	for(p=0;k>0;p=(p+1)%n){
		if(home[p]) continue;
		if(a[p]-offset==1) home[p]=true;
		k--;
	}

	int nans=0;
	static int ans[100000];
	for(int i=p;i<n;i++) if(!home[i]) ans[nans++]=i;
	for(int i=0;i<p;i++) if(!home[i]) ans[nans++]=i;
	rep(i,nans) printf("%d%c",ans[i]+1,i<nans-1?' ':'\n');

	return 0;
}
