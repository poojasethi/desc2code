#include <stdio.h>
#include <assert.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

#define REP(i,n) for (int i=0,_n=n; i<_n; i++)
#define MAXN 100001

long long n, k, a[MAXN];

int main(){
	cin >> n >> k;
	long long sum = 0;
	REP(i,n){
		cin >> a[i];
		sum += a[i];
	}
	if (k > sum){ puts("-1"); return 0; }
	if (k == sum) return 0;

	long long lo=0, hi=2000000000, base;
	while (lo<=hi){
		long long med = (lo+hi)/2, tot = 0;
		REP(i,n) tot += min(med, a[i]);
		if (tot <= k){
			base = med;
			lo = med+1;
		} else {
			hi = med-1;
		}
	}
	REP(i,n){
		long long rem = min(base, a[i]);
		a[i] -= rem;
		k -= rem;
	}
	int j = 0;
	REP(i,n){
		if (k>0){
			if (a[i]){ a[i]--; k--; j = (i+1)%n; }
		} else {
			break;
		}
	}
	int f = 1;
	REP(i,n){
		if (a[j] > 0){
			if (f) f = 0; else printf(" ");
			printf("%d",j+1);
		}
		j = (j+1)%n;
	}
	puts("");
	return 0;
}
