#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>

using namespace std;

int n;
long long K;
int a[100000];

inline long long gao(int pm) {
	long long ret = 0;
	for (int i = 0; i < n; ++i) {
		ret += min(pm, a[i]);
	}
	return ret;
}

int main() {
	scanf("%d%I64d", &n, &K);
	long long sum = 0;
	for (int i = 0; i < n; ++i) {
		scanf("%d", &a[i]);
		sum += a[i];
	}
	if (sum < K) {
		printf("-1\n");
	} else if (sum == K) {
		printf("\n");
	} else {
		int pl = 0, pr = 1000000001;
		while (pl + 1 < pr) {
			int pm = pl + (pr - pl) / 2;
			if (gao(pm) <= K) {
				pl = pm;
			} else {
				pr = pm;
			}
		}
		K -= gao(pl);
		int idx = 0;
		for (; K > 0; ++idx) {
			a[idx]-- > pl && --K;
		}
		vector <int> res;
		for (int i = 0; i < n; ++i) {
			if (a[(idx + i) % n] > pl) {
				res.push_back((idx + i) % n);
			}
		}
		for (int i = 0; i < (int)res.size(); ++i) {
			i > 0 && printf(" ");
			printf("%d", res[i] + 1);
		}
		printf("\n");
	}
	return 0;
}
