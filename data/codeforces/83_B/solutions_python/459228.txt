# -*- coding: UTF-8 -*-

# from itertools import *
# from collections import defaultdict

# def gcd(a,b):
#     while b > 0: a,b = b, a%b
#     return a

# def baseN(num,b,numerals="0123456789abcdefghijklmnopqrstuvwxyz"):
#     return ((num == 0) and  "0" ) or ( baseN(num // b, b).lstrip("0") + numerals[num % b])

# T = input()
# St = raw_input()
n, k = map(int, raw_input().split())
data2 = map(int, raw_input().split())
s = sum(data2)
if s < k:
    print "-1"
elif s == k:
    print ""
else:
    right = max(data2)
    left = 1
    data2 = list(enumerate(data2))
    max_k = 0
    max_m = 0
    while right-left > 1:
        mid = left+(right-left)/2
        temp_s = 0
        for i in data2:
            temp_s += min(mid, i[1])
        if temp_s > k:
            right = mid
        if temp_s <= k:
            max_k = mid
            max_m = temp_s
            left = mid
    if max_k == 0 and len(data2) < k:
        max_m = len(data2)
        max_k = 1
    k -= max_m
    data2 = [(i+1, j-max_k) for i, j in data2 if j-max_k > 0]
    for i in data2[k:]:
        print i[0],
    for i in data2[:k]:
        if i[1] > 1:
            print i[0],
