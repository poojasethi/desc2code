from collections import deque

n, k = map (int, raw_input ().split ())
a = map (int, raw_input ().split ())

b = sorted (enumerate (a), reverse=True, key=lambda x: x[1])
shift = 0
while len (b) and k - (b[-1][1] - shift) * n >= 0:
	k -= (b[-1][1] - shift) * n
	shift = b[-1][1]
	while len (b) and b[-1][1] == shift:
		n -= 1
		b.pop ()
if len (b) and k - (b[-1][1] - shift) * n < 0:
	shift += k / n
	k %= n
q = deque (sorted (b, key=lambda x: x[0]))
while len (q) and k:
	cur = q.popleft ()
	cur = (cur[0], cur[1] - 1)
	if cur[1] - shift:
		q.append (cur)
	k -= 1
if k: print -1
else: print ' '.join (map (str, [i + 1 for i, j in q]))
	
