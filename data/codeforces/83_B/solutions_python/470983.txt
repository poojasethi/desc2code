from collections import deque
from sys import  exit
n, k = map(long, raw_input().split())
a = map(long, raw_input().split())
map = dict()
for i in range (0, n):
        if map.has_key(a[i]):
            map[a[i]]+=1
        else:
            map[a[i]] = 1

left, rounds = n, 0L
keySet = deque(sorted(set(map.keys())))

while True:
    if k > 0 and not len(keySet):
        print -1
        exit()
    if not len(keySet):
        exit()

    first = keySet.popleft()
    if k - (first - rounds)*left >= 0:
        k -= (first - rounds)*left
        left -= map[first]
        rounds = first
    else:
        keySet.appendleft(first)
        num = k/left + rounds + int(k%left > 0)
        k%=left
        b = [0]*left
        inc = 0
        for i in range (0, n):
            if a[i] >= first:
                b[inc] = i + 1
                inc += 1
        print b[int(k)],
        i = (int(k) + 1)%left
        while i != k:
            if b[i] and (i > k or a[b[i]-1] > num):
                print b[i],
            i = (i+1)%left
        break