#include <stdio.h>
#include <memory.h>
#define N 1002
#define inf 2000000000

struct line {
	int x1, x2, y1, y2, dir;
} li[N];

int vis[N][N][4];

int dx[] = {1, -1, 0, 0};
int dy[] = {0, 0, -1, 1};
int nn[N][N][4];

int arr[N][N];

int X[5000000], Y[5000000];

int main() {
//	freopen ("in.txt", "r", stdin);
	int m, n, i, j, k, q, x, y, di;
	__int64 ti;
	char c;
	scanf ("%d %d", &n, &m);


	memset (arr, -1, sizeof(arr));
	for (i=0; i<n; i++) {
		scanf ("%d %d %d %d", &li[i].x1, &li[i].y1, &li[i].x2, &li[i].y2);
		if (li[i].x1 < li[i].x2) li[i].dir = 0;
		if (li[i].x1 > li[i].x2) li[i].dir = 1;
		if (li[i].y1 < li[i].y2) li[i].dir = 3;
		if (li[i].y1 > li[i].y2) li[i].dir = 2;
		if (li[i].x1 == li[i].x2 && li[i].y1 == li[i].y2) {
			li[i].dir = 4;
		}

		if (li[i].dir == 0) for (j = li[i].x1; j <= li[i].x2; j++) for (k = li[i].y1; k <= li[i].y2; k++) arr[j][k] = i;
		else if (li[i].dir == 1) for (j = li[i].x1; j >= li[i].x2; j--) for (k = li[i].y1; k <= li[i].y2; k++) arr[j][k] = i;
		else if (li[i].dir == 2) for (j = li[i].x1; j >= li[i].x2; j--) for (k = li[i].y1; k >= li[i].y2; k--) arr[j][k] = i;
		else for (j = li[i].x1; j >= li[i].x2; j--) for (k = li[i].y1; k <= li[i].y2; k++) arr[j][k] = i;

	}
	scanf ("%d", &q);

	int Runs = 0;

	while (q--) {
		//for (i = 0; i <= m; i++) for (j = 0; j <= m; j++) vis[i][j] = inf;
		Runs++;
		scanf ("%d %d\n%c\n%I64d", &x, &y, &c, &ti);

		if (c == 'R') di = 0;
		else if (c == 'L') di = 1;
		else if (c == 'D') di = 2;
		else di = 3;

		bool out = 0, gori = 0;

		int step=0;
		X[0] = x; Y[0] = y;
		nn[x][y][di] = 0;
		vis[x][y][di] = Runs;

		bool stop = 0;
		while (step < ti) {

			if (arr[x][y] > -1) {
				di = li[arr[x][y]].dir;
			}

			if (di==4) {
				stop = 1;
				break;
			}

			step++;
			x += dx[di]; y += dy[di];

			X[step] = x; Y[step] = y;

			if (x < 0 || y < 0 || x > m || y > m) {out = 1; break;}

			if (vis[x][y][di] == Runs) {
				gori = 1;
				break;
			}

			vis[x][y][di] = Runs;
			nn[x][y][di] = step;

		}

		if (stop ) {
			printf ("%d %d\n", x,y);
		}

		else if (out) {
			//puts ("out");
			printf ("%d %d\n", x - dx[di], y - dy[di]);
		}
		else if (gori) {
			//puts ("gori");
			ti -= nn[x][y][di];
			ti %= (step - nn[x][y][di]);
			printf ("%d %d\n", X[nn[x][y][di] + ti], Y[nn[x][y][di] + ti]);
		}
		else printf ("%d %d\n", X[step], Y[step]);
	}
	return 0;
}
