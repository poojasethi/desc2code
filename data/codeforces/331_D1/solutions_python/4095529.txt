#include <stdio.h>
#include <string.h>

#define MAXN 40

int mat[MAXN][MAXN];
int n, m;
int visit[MAXN][MAXN];
int pts[MAXN * MAXN];

int msk[4][2] = {
	{0, 1}, {0, -1}, {1, 0}, {-1, 0}
};

int main()
{
	int i, j, x, y;
	long long t;
	int dir, nx, ny, q;
	int x1, x2, y1, y2;
	char str[10];
	while (scanf("%d%d", &m, &n) != EOF)
	{
		memset (mat, -1, sizeof mat);
		while (m--)
		{
			scanf("%d%d%d%d", &x1, &y1, &x2, &y2);
			// printf("%d %d %d %d\n", x1, y1, x2, y2);
			if (x1 == x2)
			{
				if (y1 < y2)
					for (i = y1; i <= y2; i++)
						mat[x1][i] = 0;
				else
					for (i = y2; i <= y1; i++)
						mat[x1][i] = 1;
			}
			else
			{
				if (x1 < x2)
					for (i = x1; i <= x2; i++)
						mat[i][y1] = 2;
				else
					for (i = x2; i <= x1; i++)
						mat[i][y1] = 3;
			}
		}
		// for (i = 0; i <= n; i++)
		// {
			// for (j = 0; j <= n; j++)
				// printf("%d ", mat[i][j]);
			// printf("\n");
		// }
		scanf("%d", &q);
		while (q--)
		{
			memset (visit, -1, sizeof visit);
			scanf("%d%d%s%I64d", &x, &y, &str, &t);
			if (str[0] == 'U') dir = 0;
			if (str[0] == 'D') dir = 1;
			if (str[0] == 'R') dir = 2;
			if (str[0] == 'L') dir = 3;
			bool flag_out = false;
			nx = x; ny = y;
			for (i = 0; i < t; i++, x = nx, y = ny)
			{
				if (visit[x][y] != -1 && mat[x][y] != -1)
				{
					flag_out = true;
					break;
				}
				visit[x][y] = i;
				// printf("  now at: %d %d  i = %d t = %I64d\n", x, y, i, t);
				pts[i] = x * (n + 1) + y;
				if (mat[x][y] != -1) dir = mat[x][y];
				nx = x + msk[dir][0];
				ny = y + msk[dir][1];
				if (nx < 0 || nx > n || ny < 0 || ny > n)
					break;
			}
			if (flag_out)
			{
				// printf("jump: %d %d  have: %d at: \n", x, y, visit[x][y], i);
				int loop = i - visit[x][y];
				int we_need = (t - visit[x][y]) % loop + visit[x][y];
				x = pts[we_need] / (n + 1);
				y = pts[we_need] % (n + 1);
			}
			printf("%d %d\n", x, y);
		}
	}
	return 0;
}
