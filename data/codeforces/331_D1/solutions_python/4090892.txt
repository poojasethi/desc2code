#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <utility>
#define MAXN 35

using namespace std;

int main ()
{
	int N, B;
	scanf("%d %d",&N,&B);
	static long long a[MAXN][MAXN][4];
	static int d[4][2] = {{0, 1}, {0, -1}, {-1, 0}, {1, 0}};
	int x, y, dir;
	static int ch[MAXN][MAXN];
	for (x = 0; x <= B; x++)
	{
		for (y = 0; y <= B; y++)
		{
			ch[x][y] = -1;
		}
	}
	int X0, Y0, X1, Y1;
	int i, temp;
	for (i = 0; i < N; i++)
	{
		scanf("%d %d %d %d",&X0,&Y0,&X1,&Y1);
		int ndir = -1;
		if (X0 == X1)
		{
			if (Y0 < Y1) ndir = 0;
			else ndir = 1;
		}
		else
		{
			if (X0 < X1) ndir = 3;
			else ndir = 2;
		}
		if (X0 > X1) { temp = X0; X0 = X1; X1 = temp; }
		if (Y0 > Y1) { temp = Y0; Y0 = Y1; Y1 = temp; }
		if (X0 == X1)
		{
			x = X0;
			for (y = Y0; y <= Y1; y++)
			{
				ch[x][y] = ndir;
			}
		}
		else
		{
			y = Y0;
			for (x = X0; x <= X1; x++)
			{
				ch[x][y] = ndir;
			}
		}
	}
	int Q;
	scanf("%d",&Q);
	int iQ;
	for (iQ = 0; iQ < Q; iQ++)
	{
		for (x = 0; x <= B; x++)
		{
			for (y = 0; y <= B; y++)
			{
				for (dir = 0; dir < 4; dir++)
				{
					a[x][y][dir] = -1;
				}
			}
		}
		long long T;
		char c;
		scanf("%d %d %c %I64i",&x,&y,&c,&T);
		if (c == 'U') dir = 0;
		else if (c == 'D') dir = 1;
		else if (c == 'L') dir = 2;
		else dir = 3;
		long long t = 0LL;
		while (1)
		{
			if (a[x][y][dir] != -1)
			{
				long long cycle = t - a[x][y][dir];
				T -= a[x][y][dir];
				T %= cycle;
				T += a[x][y][dir];
				break;
			}
			a[x][y][dir] = t;
			if (t == T)
			{
				break;
			}
			if (ch[x][y] != -1) dir = ch[x][y];
			x += d[dir][0];
			y += d[dir][1];
			if ((x < 0) || (x > B) || (y < 0) || (y > B))
			{
				T = t;
				break;
			}
			t++;
		}
		int resx, resy;
		resx = 0; resy = 0;
		for (x = 0; x <= B; x++)
		{
			for (y = 0; y <= B; y++)
			{
				for (dir = 0; dir < 4; dir++)
				{
					if (a[x][y][dir] == T)
					{
						resx = x; resy = y;
					}
				}
			}
		}
		printf("%d %d\n",resx,resy);
	}
	return 0;
}