#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int N = 21000;
int dfn[N], que[N], dep[N], fa[N], cnt[N][2], sum[2], pre[N];
int last[N], next[N], adj[N], ans[N], num[N];
int n, m, mm = 1, DFN, an, spe;

void link(int x, int y, int i) {adj[++mm] = y, next[mm] = last[x], last[x] = mm, num[mm] = i;}

void dfs(int x)
{
	dfn[x] = ++DFN;
	que[DFN] = x;
	dep[x] = dep[fa[x]] + 1;
	for (int p = last[x]; p; p = next[p])
	{
		int y = adj[p];
		if (!dfn[y])
		{
			fa[y] = x;
			pre[y] = p;
			dfs(y);
		} else 
		{
			if (p == (pre[x] ^ 1)) continue;
			
			if (dfn[y] < dfn[x])
			{
				int t = (dep[x] - dep[y]) & 1; t ^= 1;
				cnt[x][t]++;
				cnt[y][t]--;
				sum[t]++;
				if (t == 1) spe = num[p];
			}
		}
	}
}


int main()
{
	
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= m; i++)
	{
		int u, v;
		scanf("%d%d", &u, &v);
		link(u, v, i);
		link(v, u, i);
	}
	
	for (int i = 1; i <= n; i++) if (dfn[i] == 0) dfs(i);
	
	if (sum[1] == 0) 
	{
		for (int i = 1; i <= m; i++) ans[++an] = i;
	} else 
	{
		for (int i = n; i > 1; i--)
		{
			int x = que[i];
			if (cnt[x][1] == sum[1] && cnt[x][0] == 0) ans[++an] = num[pre[x]];
			cnt[fa[x]][0] += cnt[x][0];
			cnt[fa[x]][1] += cnt[x][1];
		}
		if (sum[1] == 1) ans[++an] = spe;
	}
	
	sort(ans + 1, ans + 1 + an);
	printf("%d\n", an);
	for (int i = 1; i <= an; i++) printf("%d ", ans[i]); puts("");
	
	return 0;
}
