#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
struct Edge
{
	int num;
	int key;
	int next;
};
Edge e[200001];
int f[200001];
int p[20001];
int cnt;
int n, m;
int z;
bool vis[20001];
int d[20001];
int ans[20001], zz;
void add(int u, int v, int k)
{
	z++;
	e[z].key = k;
	e[z].num = v;
	e[z].next = p[u];
	p[u] = z;
}
void dfs(int u, int fa)
{
	vis[u] = true;
	for(int temp = p[u]; temp != -1; temp = e[temp].next)
	{
		int v = e[temp].num;
		if(v == fa)
			continue;
		if(!vis[v])
		{
			d[v] = d[u] + 1;
			dfs(v, u);
			f[temp] = f[v];
			f[u] += f[v];
		}
		else if(d[v] < d[u] && (d[v] & 1) == (d[u] & 1))
		{
			f[v] --;
			f[u] ++;
			f[temp] = 1;
			cnt++;
		}
		else if(d[v] < d[u])
		{
			f[u] --;
			f[v] ++;
		}
	}
	return ;
}
int main()
{
	memset(p, -1, sizeof(p));
	scanf("%d%d", &n, &m);
	z = n;
	for(int i = 1; i <= m; i++)
	{
		int k1, k2;
		scanf("%d%d", &k1, &k2);
		add(k1, k2, i);
		add(k2, k1, i);
	}
	for(int i = 1; i <= n; i++)
		if(!vis[i])
			dfs(i, 0);
	if(cnt == 0)
	{
		printf("%d\n", m);
		for(int i = 1; i <= m; i++)
			printf("%d%c", i, i == m ? '\n' : ' ');
		return 0;
	}
	for(int i = n+1; i <= z; i+=2)
		if(f[i] + f[i+1] == cnt)
			ans[++zz] = e[i].key;
	printf("%d\n", zz);
	for(int i = 1; i <= zz; i++)
		printf("%d%c", ans[i], i == zz ? '\n' : ' ');
	return 0;
}
