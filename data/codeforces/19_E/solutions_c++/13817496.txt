#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <iostream>

using namespace std;

int N,M;
struct bian_
{
	int to;
	int next;
}bian[20010]={{0,0}};
int First[10010]={0};
int F[10010]={0};
int G[10010]={0};
int hash[10010]={0};
int color[10010]={0};
int Num=0;
int Fa[10010]={0};
int Fan=0;

void Add(int p,int q,int k)
{
	bian[k].to=q;
	bian[k].next=First[p];
	First[p]=k;
	return;
}

void dfs(int cnt)
{
	for(int i=First[cnt];i!=0;i=bian[i].next)
	{
		if(hash[(i+1)>>1]==1) continue;
		hash[(i+1)>>1]=1;
		int u=bian[i].to;
		if(color[u]==0)
		{
			color[u]=3-color[cnt];
			Fa[u]=(i+1)>>1;
			dfs(u);
			F[cnt]+=F[u];
			G[cnt]+=G[u];
		}
		else
		{
			if(color[u]==color[cnt])
			{
				F[cnt]++;
				F[u]--;
				Num++;
				Fan=(i+1)>>1;
			}
			else
			{
				G[cnt]++;
				G[u]--;
			}
		}
	}
	return;
}

int main()
{
	cin>>N>>M;
	for(int i=1;i<=M;i++)
	{
		int p,q;
		scanf("%d%d",&p,&q);
		Add(p,q,(i<<1)-1);
		Add(q,p,i<<1);
	}
	
	for(int i=1;i<=N;i++)
	{
		
		if(color[i]==0)
		{
			color[i]=1;
			dfs(i);
		}
	}
	if(Num==0)
	{
		printf("%d\n",M);
		for(int i=1;i<=M;i++)
			printf("%d ",i);
		return 0;
	}
	int Out[10010]={0};
	int op=0;
	for(int i=1;i<=N;i++)
	{
		if(F[i]==Num && G[i]==0)
			Out[++op]=Fa[i];
	}
	if(Num==1) Out[++op]=Fan;
	sort(Out+1,Out+op+1);
	cout<<op<<endl;
	for(int i=1;i<=op;i++)
		printf("%d ",Out[i]);
	return 0;
}
