#include<cstdio>
#include<algorithm>
#include<vector>
using namespace std;
int n,m,tag[100001],col[100001],sv[100001],odd[100001],even[100001],c1,tmp1;
vector <int> ans;
vector <pair<int,int> > e[100001];
int dfs(int s,int h,int c){
  col[s] = c; tag[s] = 1;
  for(int i=0;i<e[s].size();i++){
    int next = e[s][i].first;
    if(next != h){
      if(tag[next] == 0){
    sv[next] = e[s][i].second;
    dfs(next,s,-c);
    odd[s] += odd[next]; even[s] += even[next];
      }
      else if(tag[next] == 1){
    if(col[s] == col[next]){
      odd[s]++; tmp1 = e[s][i].second;
      c1++;
    }
    else even[s]++;
      }
      else{
    if(col[s] == col[next]) odd[s]--;
    else even[s]--;
      }
    }
  }
  tag[s] = 2;
  return 0;
}
int main(){
  scanf("%d%d",&n,&m);
  for(int i=1,u,v;i<=m;i++){
    scanf("%d%d",&u,&v);
    e[u].push_back(make_pair(v,i));
    e[v].push_back(make_pair(u,i));
  }
  for(int i=1;i<=n;i++)
    if(!tag[i])
      dfs(i,-1,1);
  if(c1 == 0){
    for(int i=1;i<=m;i++) ans.push_back(i);
  }
  else{
    for(int i=1;i<=n;i++)
      if(odd[i] == c1 && even[i] == 0)
    ans.push_back(sv[i]);
    if(c1 == 1) ans.push_back(tmp1);
    sort(ans.begin(),ans.end());
  }
  printf("%d\n",ans.size());
  for(int i=0;i<ans.size();i++) printf("%d ",ans[i]);
  return 0;
}
