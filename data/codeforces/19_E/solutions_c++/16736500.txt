#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
 
#define ll long long
#define inf 1e9
#define eps 1e-8
#define md
#define N 1000010
using namespace std;
struct yts { int x,t,ne;} e[2*N];
int a[N],b[N],v[N],dep[N],E[N],q[N];
bool vis[N];
int num=1,jh,edge;

void put(int x,int y)
{
    num++; e[num].x=x; e[num].t=y;
    e[num].ne=v[x]; v[x]=num;
}

void dfs(int x,int fa)
{
    vis[x]=1;
    for (int i=v[x];i;i=e[i].ne)
    {
        if (i==(fa^1)) continue;
        int y=e[i].t;
        if (vis[y])
        {
            if (dep[y]>dep[x]) continue;
            if ((dep[x]-dep[y])&1) { a[x]++; a[y]--;}
              else { jh++; edge=i; b[x]++; b[y]--;}
        }
        else
        {
            E[y]=i; dep[y]=dep[x]+1;
            dfs(y,i);
            a[x]+=a[y]; b[x]+=b[y];
        }
    }
}

int main()
{
    int n,m;
    scanf("%d%d",&n,&m);
    for (int i=1;i<=m;i++)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        put(x,y); put(y,x);
    }
    for (int i=1;i<=n;i++) if (!vis[i]) { dep[i]=1; dfs(i,0);}
    int ans=0;
    if (jh==0)
    {
        for (int i=2;i<num;i+=2) q[++ans]=i/2;
    }
    else
    {
        if (jh==1) q[++ans]=edge/2;
        for (int i=1;i<=n;i++)
          if (dep[i]!=1&&a[i]==0&&b[i]==jh) q[++ans]=E[i]/2;
        sort(q+1,q+ans+1);
    }
    printf("%d\n",ans);
    if (ans) printf("%d",q[1]); for (int i=2;i<=ans;i++) printf(" %d",q[i]); printf("\n");
    return 0;
}
