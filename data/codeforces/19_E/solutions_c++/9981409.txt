#include<cstdio>
#include<algorithm>
using namespace std;
#define NN 11111
int o[NN],from[NN],num1[NN],num2[NN],b[NN],aa[NN*2][2],deep[NN];
int n,m,it,cnt,tot=1;
bool vt[NN];
void dfs(int v)
{
	vt[v]=true;
	for (int p=o[v];p;p=aa[p][0])
	{
		int y=aa[p][1];
		if ((p^1)==from[v]) continue;
		if (!vt[y])
		{
			from[y]=p;
			deep[y]=deep[v]+1;
			dfs(y);
			num1[v]+=num1[y];
			num2[v]+=num2[y];
		}
		else if (deep[v]>deep[y])
		{
			int t=deep[v]-deep[y];
			if ((t&1)==0)
			{
				it=p;
				cnt++;
				num1[v]++,num1[y]--;
			}
			else num2[v]++,num2[y]--;
		}
	}
}
void addedge(int p,int q)
{
	tot++;
	aa[tot][1]=q;
	aa[tot][0]=o[p];
	o[p]=tot;
}
int main()
{
	scanf("%d%d",&n,&m);
	int i,x,y;
	for (i=1;i<=m;i++)
	{
		scanf("%d%d",&x,&y);
		addedge(x,y),addedge(y,x);
	}
	for (i=1;i<=n;i++)
		if (!vt[i]) dfs(i);
	if (cnt==0)
	{
		printf("%d\n",m);
		for (i=1;i<=m;i++) printf("%d ",i);
	}
	else
	{

		int ans=0;
		for (i=1;i<=n;i++)
			if (num1[i]==cnt&&num2[i]==0)
			{
				ans++;
				b[++b[0]]=from[i]>>1;
			}
		if (cnt==1) ans++,b[++b[0]]=it>>1;
		printf("%d\n",ans);
		sort(b+1,b+b[0]+1);
		for (i=1;i<=b[0];i++) printf("%d ",b[i]);
	}
	return 0;
}
