#include <cstdio>
#include <cstring>
#include <iostream>
#include <cctype>
#include <algorithm>
#include <cctype>
#include <cstdlib>
#include <vector>
#define N 50010
using namespace std;
int col[N], good[N], e[N], bad[N], s[N], vis[N];
int val[N], cnt;
vector <int> g[N], h[N];
int n, m, odd, oed;

void dfs(int cur, int fa, int c)
{
    int i, j;
	vis[cur] = 1;
	val[cur] = c;
	for (i = 0; i < g[cur].size(); i++)
	{
		int v = g[cur][i];
		if (v == fa) continue;
		if (!vis[v])
		{
		    e[v] = h[cur][i];
			dfs(v, cur, 1 - c);
			good[cur] += good[v];
			bad[cur] += bad[v];
		} else if (vis[v] == 1)
		{
			if (val[v] == c)
			{
				odd++;
				bad[cur]++;
				oed = h[cur][i];
			} else good[cur]++;
		} else {
			if (val[v] == c) bad[cur]--;
			else good[cur]--;
		}
	}
	vis[cur] = 2;
}

int main()
{
	int i, j, a, b;
	scanf("%d%d", &n, &m);
	for (i = 1; i <= m; i++)
	{
		scanf("%d%d", &a, &b);
		g[a].push_back(b);
		g[b].push_back(a);
		h[a].push_back(i);
		h[b].push_back(i);
	}
	for (i = 1; i <= n; i++)
	if (!vis[i]) dfs(i, -1, 0);
	if (odd == 0)
	{
		cnt = m;
		for (i = 1; i <= m; i++) s[i] = i;
	} else{
		 if (odd == 1) s[++cnt] = oed;
		 for (i = 1; i <= n; i++)
		 if (e[i] && bad[i] == odd && good[i] == 0)
		 	s[++cnt] = e[i];
	}
	sort(s + 1, s + 1 + cnt);
	printf("%d\n", cnt);
	for (i = 1; i < cnt; i++) printf("%d ", s[i]);
	if (cnt)  printf("%d\n", s[cnt]);
	return 0;
}
