#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int nn=10005;
int n,m,te=1,sum,cnt;
int p[nn],q[2*nn],e[2*nn];
int h[nn],u[nn],v[nn],ans[nn];
inline void add(int x,int y){
	e[++te]=y;
	q[te]=p[x];p[x]=te;
}
void init(){
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;++i){
		int x,y;
		scanf("%d%d",&x,&y);
		add(x,y);add(y,x);
	}
}
void search(int x){
	for(int i=p[x];i;i=q[i])
		if(!h[e[i]]){
			h[e[i]]=h[x]+1;
			search(e[i]);
		}
		else if(h[e[i]]>h[x]&&(h[e[i]]&1)==(h[x]&1))++sum;
}
void getans(int x){
	for(int i=p[x];i;i=q[i])
		if(h[e[i]]+1!=h[x]){
			if(h[e[i]]==h[x]+1){
				getans(e[i]);
				if(u[e[i]]==sum&&!v[e[i]])ans[++cnt]=i>>1;
				u[x]+=u[e[i]];
				v[x]+=v[e[i]];
			}
			else if((h[e[i]]&1)==(h[x]&1)){
				u[x]+=h[e[i]]<h[x]?1:-1;
				if(sum==1&&h[e[i]]>h[x])ans[++cnt]=i>>1;
			}
			else v[x]+=h[e[i]]<h[x]?1:-1;
		}
}
void work(){
	for(int i=1;i<=n;++i)
		if(!h[i]){
			h[i]=1;
			search(i);
		}
	if(sum){
		for(int i=1;i<=n;++i)
			if(h[i]==1)getans(i);
		sort(ans+1,ans+cnt+1);
	}
	else for(int i=1;i<=m;++i)ans[++cnt]=i;
	printf("%d\n",cnt);
	for(int i=1;i<cnt;++i)printf("%d ",ans[i]);
	if(cnt)printf("%d\n",ans[cnt]);
}
int main(){
	init();
	work();
	return 0;
}
