#include <cstdio>
#include <cstring>

const int maxn = 10010;
int n, m, u, v, cnte, fa[maxn], e[maxn], cnt[maxn], anc[maxn], c[maxn], err, ans, h[maxn];
bool s[maxn];
int head[maxn], px[maxn * 2], next[maxn * 2];

void dfs(int x, int f){
	fa[x] = f; c[x] = c[f] ^ 1; h[x] = h[f] + 1;
	for (int ptr = head[x]; ptr; ptr = next[ptr]){
		if (px[ptr] == f) continue;
		if (!h[px[ptr]]) dfs(px[ptr], x), e[px[ptr]] = (ptr + 1) >> 1;
		else if (h[x] < h[px[ptr]]){
			if (c[px[ptr]] == c[x]){
				ans++; s[(ptr + 1) >> 1] = true;
				err++; cnt[x]--; cnt[px[ptr]]++;
			}else anc[x]--, anc[px[ptr]]++;
		}
	}
}

void find(int x){
	for (int ptr = head[x]; ptr; ptr = next[ptr])
		if (fa[px[ptr]] == x){
			find(px[ptr]);
			cnt[x] += cnt[px[ptr]];
			anc[x] += anc[px[ptr]];
		}
	if (cnt[x] == err && anc[x] == 0) ans++, s[e[x]] = true;
}

int main(){
	scanf("%d%d", &n, &m);
	for (int i = 0; i < m; i++){
		scanf("%d%d", &u, &v);
		px[++cnte] = v; next[cnte] = head[u]; head[u] = cnte;
		px[++cnte] = u; next[cnte] = head[v]; head[v] = cnte;
	}
	for (int i = 1; i <= n; i++) if (!fa[i]) dfs(i, 0);
	if (err == 0){
		printf("%d\n", m);
		for (int i = 1; i <= m; i++) printf("%d ", i);
	}else{
		if (err > 1) ans = 0, memset(s, false, sizeof(s));
		for (int i = 1; i <= n; i++) if (!fa[i]) find(i);
		printf("%d\n", ans);
		for (int i = 1; i <= m; i++) if (s[i]) printf("%d ", i);
	}
}
