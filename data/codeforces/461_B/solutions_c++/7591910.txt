#include<bits/stdc++.h>
using namespace std;

const int mod=1000000007;
vector<int> v[100005];
bool f[100005];
long long dp[100005][2];

void dfs(int x,int p)
{
	int i,j=v[x].size(),y;
	long long t0,t1;
	dp[x][f[x]]=1;
	for(i=0;i<j;i++)
	{
		if((y=v[x][i])==p)
			continue;
		dfs(y,x);
		t0=dp[x][0],t1=dp[x][1];
		dp[x][0]=(t0*dp[y][0]+t0*dp[y][1])%mod;
		dp[x][1]=(t0*dp[y][1]+t1*dp[y][0]+t1*dp[y][1])%mod;
	}
}

int main()
{
	int n,i,a;
	for(scanf("%d",&n),i=1;i<n;i++)
		scanf("%d",&a),v[a].push_back(i),v[i].push_back(a);
	for(i=0;i<n;i++)
		scanf("%d",&a),f[i]=a;
	dfs(0,-1);
	printf("%I64d\n",dp[0][1]);
	return 0;
}
