#include<iostream>
#include<vector>
#define MAXN 100010
#define mod 1000000007
using namespace std;
vector<int>tree[MAXN];
__int64 dp[MAXN][2];
void dfs(int u)
{
	int l=tree[u].size();
	if(l==0)return;
	for(int i=0;i<l;i++)
	{
		int son=tree[u][i];
		dfs(son);
		dp[u][1]=(dp[u][1]*dp[son][0]%mod+dp[u][0]*dp[son][1]%mod+dp[u][1]*dp[son][1]%mod)%mod;
		dp[u][0]=(dp[u][0]*dp[son][0]%mod+dp[u][0]*dp[son][1]%mod)%mod;
	}
}
int main()
{
	int n;
	cin>>n;
	for(int i=0;i<n-1;i++)
	{
		int pi;
		cin>>pi;
		tree[pi].push_back(i+1);
	}
	int c;
	for(int i=0;i<n;i++)
	{
		cin>>c;
		if(c)
			dp[i][1]=1;
		else
			dp[i][0]=1;
	}
	dfs(0);
	cout<<dp[0][1]<<endl;
	return 0;
}