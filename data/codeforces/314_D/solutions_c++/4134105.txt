#include<stdio.h>
#include<algorithm>
using namespace std;
const int N=100001,inf=2000000000;
struct node{
    int x,y;
    bool operator <(const node &m)const{
        return x<m.x;
    }
}a[N];
int upmx[N],upmn[N],dmx[N],dmn[N];
    
int main(){
    int n,m,i,j,f,x,y,l,r,mx,mn,mid,ans=inf;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d%d",&x,&y),a[i].x=x+y,a[i].y=x-y;
    sort(a,a+n);
    upmx[0]=upmn[0]=a[0].y,dmx[n-1]=dmn[n-1]=a[n-1].y;
    for(i=1;i<n;i++)
        upmx[i]=max(upmx[i-1],a[i].y),upmn[i]=min(upmn[i-1],a[i].y);
    for(i=n-2;i>=0;i--)
        dmx[i]=max(dmx[i+1],a[i].y),dmn[i]=min(dmn[i+1],a[i].y);
    for(i=0;i<n;i++){
        for(l=i,f=0,r=n-1;f<2;){
            mx=-inf,mn=inf;
            if(i) mx=max(mx,upmx[i-1]),mn=min(mn,upmn[i-1]);
            mid=(l+r)>>1;
            if(mid<n-1) mx=max(mx,dmx[mid+1]),mn=min(mn,dmn[mid+1]);
            ans=min(ans,max(a[mid].x-a[i].x,mx-mn));
            if(a[mid].x-a[i].x>=mx-mn) r=mid;
            else l=mid+1;
            if(l>=r) f++;
        }
    }
    printf("%lf\n",1.0*ans/2);
    return 0;
}   