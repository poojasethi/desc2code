#include <algorithm>
#include <iostream>
#include <utility>
#include <vector>
#include <cstdio>
#define X first
#define Y second
#define MAX first
#define MIN second
#define mk make_pair
#define data pair<long long, long long>
#define MAXN 100005
#define MAX_INF 2000000005LL

using namespace std;

int n;
data a[MAXN], YL[MAXN], YR[MAXN];

bool check(int p)
{
  for (int i = 1, j = 1; i <= n; i++)
  {
    while (j < n && a[j + 1].X - a[i].X <= p) j++;
    if (max(YL[i - 1].MAX, YR[j + 1].MAX) - min(YL[i - 1].MIN, YR[j + 1].MIN) <= p) return 1;
  }
  return 0;
}

main()
{
  cin >> n;
  for (int i = 1; i <= n; i++)
  {
    int x, y;
    cin >> x >> y;
    a[i] = mk(x + y, x - y);
  }
  sort(a + 1, a + n + 1);
  
  YL[0] = mk(-MAX_INF, MAX_INF);
  for (int i = 1; i <= n; i++)
    YL[i] = mk(max(a[i].Y, YL[i - 1].MAX), min(a[i].Y, YL[i - 1].MIN));
  
  YR[n + 1] = mk(-MAX_INF, MAX_INF);
  for (int i = n; i; i--)
    YR[i] = mk(max(a[i].Y, YR[i + 1].MAX), min(a[i].Y, YR[i + 1].MIN));
    
  long long l, r, mid;
  l = -1, r = MAX_INF << 1;
  while (r - l > 1)
  {
    mid = (l + r) / 2;
    if (check(mid)) r = mid; else l = mid;
  }
  
  printf("%0.9f", 0.5 * r);
//  system("pause");
}
