#include <algorithm>
#include <stdio.h>

using namespace std;

#define x first
#define y second
#define NN 110000
#define inf 1111111111LL

typedef long long INT;
typedef pair<INT, INT> point;

int N;
point p[NN];
INT fmax[NN], fmin[NN], bmax[NN], bmin[NN];

bool possible(INT d) {
	int i, j;
	INT mx, mn;
	for (i=j=0; i<N; i++) {
		while (j<N && p[j].x<=p[i].x+d) j++;
		mx=max(fmax[i], bmax[j]);
		mn=min(fmin[i], bmin[j]);
		if (mx-mn<=d) return true; 
	}
	return false;
}

int main() {
	int i;
	INT x, y, high, low, mid;
	
	scanf("%d", &N);
	for (i=0; i<N; i++) {
		scanf("%I64d%I64d", &x, &y);
		p[i]=point(x+y, x-y);
	}
	
	sort(p, p+N);
	
	fmin[0]=inf; fmax[0]=-inf;
	for (i=1; i<=N; i++) {
		fmin[i]=min(fmin[i-1], p[i-1].y);
		fmax[i]=max(fmax[i-1], p[i-1].y);
	}
	bmin[N]=inf; bmax[N]=-inf;
	for (i=N-1; i>=0; i--) {
		bmin[i]=min(bmin[i+1], p[i].y);
		bmax[i]=max(bmax[i+1], p[i].y);
	}
	
	low=0; high=inf*2;
	while (high>low+1) {
		mid=(high+low)/2;
		if (possible(mid)) high=mid;
		else low=mid;
	}
	if (possible(low)) printf("%lf\n", low/2.0);
	else printf("%lf\n", high/2.0);
	
	return 0;
}