#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int maxn=2e5+10;
const double eps=1e-8,INF=1e10;
int dcmp(double x)
{
	if (x>eps) return 1;
	if (x<-eps) return -1;
	return 0;
}
struct node
{
	double x,y;
}a[maxn];
bool cmp(node i,node j)
{
	return i.x<j.x;
}
int n,m;
double fs[maxn],ft[maxn],gs[maxn],gt[maxn];
double getmax(int l,int r)
{
	if (l>r) return -INF;
	if (l==1) return fs[r]; else return ft[l];
}
double getmin(int l,int r)
{
	if (l>r) return INF;
	if (l==1) return gs[r]; else return gt[l];
}
bool check(double x)
{
	int i,j;
	double t1,t2;
	for (i=1;i<=n;++i)
		if (dcmp(a[1].x+x-a[i].x)==-1) break;
	j=i;
	for (i=2;i<=n+1;++i)
	{
		t1=max(getmax(1,i-2),getmax(j,n));
		t2=min(getmin(1,i-2),getmin(j,n));
		if (dcmp(t2-INF)==0) return 1;
		if (dcmp(t1-t2-x)<=0) return 1;
		while (j<=n&&dcmp(a[i].x+x-a[j].x)>=0) j++;
	}
	return 0;
}
int main()
{
	double ans,x,y,l,r,mid;
	int i;
	while (scanf("%d",&n)==1)
	{
		for (i=1;i<=n;++i)
		{
			scanf("%lf%lf",&x,&y);
			a[i].x=x+y;
			a[i].y=x-y;
		}
		sort(a+1,a+n+1,cmp);
		fs[1]=gs[1]=a[1].y;
		for (i=2;i<=n;++i) fs[i]=max(fs[i-1],a[i].y),gs[i]=min(gs[i-1],a[i].y);
		ft[n]=gt[n]=a[n].y;
		for (i=n-1;i;--i) ft[i]=max(ft[i+1],a[i].y),gt[i]=min(gt[i+1],a[i].y);
		l=0;r=a[n].x-a[1].x+1;
		while (l+1e-6<r)
		{
			mid=(l+r)/2;
			if (check(mid)) ans=mid,r=mid; else l=mid;
		}
		printf("%.8lf\n",ans/2);
	}
	return 0;
}

 	 	   	  	    			   	 		    		