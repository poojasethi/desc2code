#include <stdio.h>
#include <algorithm>
#define MAX 100005
#define INF (1e11)

using namespace std;

struct s
{
    double x,y;
};

s inp[MAX];
double miny[MAX],maxy[MAX],miny1[MAX],maxy1[MAX];

bool cmp(s a,s b)
{
    if (a.x!=b.x) return a.x<b.x;
    return a.y<b.y;
}

int main()
{
    int n,i,cnt,j;
    double x,y,lo,hi,mid,mny,mxy;
    scanf("%d",&n);
    for (i=1;i<=n;i++)
    {
        scanf("%lf%lf",&x,&y);
        inp[i].x=x+y;
        inp[i].y=x-y;
    }
    sort(inp+1,inp+n+1,cmp);
    miny[0]=INF;
    maxy[0]=-INF;
    miny1[n+1]=INF;
    maxy1[n+1]=-INF;
    for (i=1;i<=n;i++)
    {
        miny[i]=min(miny[i-1],inp[i].y);
        maxy[i]=max(maxy[i-1],inp[i].y);
    }
    for (i=n;i>=1;i--)
    {
        miny1[i]=min(miny1[i+1],inp[i].y);
        maxy1[i]=max(maxy1[i+1],inp[i].y);
    }
    lo=0.0;
    hi=INF;
    cnt=0;
    while (cnt<80)
    {
        cnt++;
        mid=(lo+hi)/2.0;
        j=1;
        for (i=1;i<=n;i++)
        {
            while (j<=n&&inp[i].x+2.0*mid>=inp[j].x) j++;
            if (i-1==0&&j==n+1) mny=mxy=0.0;
            else
            {
                mny=min(miny[i-1],miny1[j]);
                mxy=max(maxy[i-1],maxy1[j]);
            }
            if ((mxy-mny)/2.0<=mid) break;
        }
        if (i<=n) hi=mid;
        else lo=mid;
    }
    printf("%.10lf\n",(lo+hi)/2.0);
    return 0;
}
