#include <cstring>
#include <cstdio>
#include <algorithm>
#include <iostream>
using namespace std;
const int maxn=100010;
int xx[maxn], yy[maxn], x[maxn], y[maxn], id[maxn];
int n, premax[maxn], sufmax[maxn], premin[maxn], sufmin[maxn];

int getmax(int x, int y){if (x>y) return x; return y;}
int getmin(int x, int y){if (x<y) return x; return y;}

bool cmp(const int i, const int j)
{
	return xx[i]<xx[j];
}

bool check(double mid)
{
	int l,r;
	for (l=1, r=1; l<=n; l++)
	{
		while (xx[id[l]]+mid+1e-8>xx[id[r]] && r<=n) r++;
		if (getmax(premax[l-1], sufmax[r])-getmin(premin[l-1], sufmin[r])<mid+1e-8) return 1;
	}
	return 0;
}

int main()
{
	scanf("%d", &n);
	for (int i=1; i<=n; i++)
		scanf("%d%d", &x[i], &y[i]), xx[i]=x[i]+y[i], yy[i]=x[i]-y[i], id[i]=i;
	
	
	sort(id+1, id+n+1, cmp);
	premax[0]=sufmax[n+1]=-1<<30;
	premin[0]=sufmin[n+1]=1<<30;
	for (int i=1; i<=n; i++)
	{
		premax[i]=getmax(premax[i-1], yy[id[i]]);
		premin[i]=getmin(premin[i-1], yy[id[i]]);
	}
	
	for (int i=n; i; i--)
	{
		sufmax[i]=getmax(sufmax[i+1], yy[id[i]]);
		sufmin[i]=getmin(sufmin[i+1], yy[id[i]]);
	}
	
	long long l=-1, r=1ll<<33, mid;
	while (l+1<r)
	{
		mid=(l+r)>>1;
		if (check(mid)) r=mid; else l=mid;
	}
	printf("%.10lf\n",r/2.0);
	//for (;;);
	//for (;;);
}
