//By momoâ„¢
#include <set>
#include <cstdio>
#include <algorithm>
#define MXN 100010
#define LL long long
using namespace std;

LL N, ans;

struct coord{
	LL x, y; coord(){}
	coord(LL a,LL b){x=a,y=b;}
}A[MXN];

bool comp(coord a, coord b)
{ return a.x < b.x; }

multiset<LL> yy;

LL dify(){
	if(yy.empty()) return 0;
	multiset<LL>::iterator it = yy.end(); it--;
	return *it - *yy.begin();
}

LL difx(LL i, LL j){
	if(i >= j) return 0;
	return A[j-1].x - A[i].x;
}

void solve(){
	ans = 100000000000000000ll;
	for(LL i = 0; i < N; i++)
		yy.insert(A[i].y);

	LL j = 0;
	for(LL i = 0; i < N; i++){
		while(j < N && dify() > difx(i, j)){
			ans = min(ans, max(difx(i, j), dify()));
			yy.erase(yy.find(A[j].y)); j++;
		}
		ans = min(ans, max(difx(i, j), dify()));

		if(i < j) yy.insert(A[i].y);
		else j++;
	}
	printf("%.6lf\n", ans / 2.);
}

int main (){
	scanf("%I64d", &N);
	for(LL i = 0; i < N; i++){
		LL x, y; scanf("%I64d%I64d", &x, &y);
		A[i] = coord(x - y, x + y);
	}
	sort(A, A + N, comp);
	solve();
}
