#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<queue>
#define LL long long
using namespace std;
int n;
struct pt{
  int x,y;
  bool operator<(const pt &k) const{
    return x<k.x;
  }
}s[100005];
struct num{
  int y,id;
  bool operator<(const num & k) const{
    return y>k.y;
  }
};
priority_queue<num> Q,R;

bool ok(LL lx){
  bool res=false;
  int r=1;
  for(int i=1;i<=n;i++){
    while(r<=n && s[r].x-s[i].x<=lx) r++;
    while(!Q.empty()){
      int tmp=Q.top().id;
      if(i<=tmp && tmp<r) Q.pop();
      else break;
    }
    while(!R.empty()){
      int tmp=R.top().id;
      if(i<=tmp && tmp<r) R.pop();
      else break;
    }
    if(Q.empty()) res=true;
    else{
      LL aq=Q.top().y,ar=-R.top().y;
      if(abs(aq-ar)<=lx) res=true;
    }
    Q.push((num){s[i].y,i});
    R.push((num){-s[i].y,i});
  }
  return res;
}
int main(){
  scanf("%d",&n);
  for(int i=1;i<=n;i++){
    int a,b;
    scanf("%d %d",&a,&b);
    s[i].x=a+b,s[i].y=a-b;
  }
  sort(s+1,s+n+1);
  for(int i=1;i<=n;i++){
    Q.push((num){s[i].y,i});
    R.push((num){-s[i].y,i});
  }
  
  LL l=-1,r=3E9;
  while(r-l>1){
    LL m=(l+r)>>1;
    if(ok(m)) r=m;
    else l=m;
  }
  printf("%.5lf\n",r/2.0);
  return 0;
}