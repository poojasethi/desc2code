#include<stdio.h>
#include<stdlib.h>
#include<algorithm>
#define LL long long
#define N 100000
#define INF 2000000018
using namespace std;
struct node{
       long long x,y;
}p[N+18];
bool cmp(node a,node b){
     return a.x<b.x;
}
LL Min(LL a,LL b){
    return a<b?a:b;
}
LL Max(LL a,LL b){
    return a>b?a:b;
}
LL Abs(LL a){
    return a<0?(0-a):a;
}
LL n,x,y,i,y1,y2;
LL ans,l,r,mid;
LL priMin[N+18],priMax[N+18],sufMin[N+18],sufMax[N+18];

bool check(int d){
     int i,j=1;
     for (i=1;i<=n;i++){
         while (p[i].x>p[j].x+d) j++;
         y1=Max(priMax[j-1],sufMax[i+1]);
         y2=Min(priMin[j-1],sufMin[i+1]);
         if (y1-y2<=d) return 1;
     }
     return 0;
}

int main(){
    
    scanf("%I64d",&n);
    for (i=1;i<=n;i++){
        scanf("%I64d%I64d",&x,&y);
        p[i].x=x-y; p[i].y=x+y;
    }
    sort(p+1,p+n+1,cmp);
    
    priMin[0]=INF; priMax[0]=-INF;
    for (i=1;i<=n;i++){
        priMin[i]=Min(priMin[i-1],p[i].y);
        priMax[i]=Max(priMax[i-1],p[i].y);
    }
    sufMin[n+1]=INF; sufMax[n+1]=-INF;
    for (i=n;i>=1;i--){
        sufMin[i]=Min(sufMin[i+1],p[i].y);
        sufMax[i]=Max(sufMax[i+1],p[i].y);  
    }

    ans=INF;
    l=0; r=INF;
    while (l<=r){
        mid=(l+r)/2;
        if (check(mid)){
            ans=mid; 
            r=mid-1;
        }else{
            l=mid+1;
        }
    }
    printf("%.6lf\n",ans/2.0);
    return 0;
}
