#include <cstdio>
#include <algorithm>
using namespace std;
typedef long long ll;
typedef pair<int,int> vec;
#define x first
#define y second
const int N=1e5+5,inf=2.1e9;
int n;
vec a[N];
int min1[N],min2[N],max1[N],max2[N];
inline bool check(ll len){
	for(int i=1,j=i;i<=n;i++){
		for(;j<=n&&a[i].x+len>=a[j].x;j++);
		if(max(max1[i-1],max2[j])-min(min1[i-1],min2[j])<=len)
			return 1;
	}
	return 0;
}
int main(){
	scanf("%d",&n);
	for(int i=1;i<=n;i++){
		int x,y;
		scanf("%d%d",&x,&y);
		a[i].x=x+y;
		a[i].y=x-y;
	}
	sort(a+1,a+n+1);
	min1[0]=min2[n+1]=inf;
	max1[0]=max2[n+1]=-inf;
	for(int i=1;i<=n;i++){
		min1[i]=min(min1[i-1],a[i].y);
		max1[i]=max(max1[i-1],a[i].y);
	}
	for(int i=n;i>=1;i--){
		min2[i]=min(min2[i+1],a[i].y);
		max2[i]=max(max2[i+1],a[i].y);
	}
	ll l=-1,r=inf*2LL;
	while(r-l>1){
		ll mid=l+r>>1;
		if(check(mid))
			r=mid;
		else
			l=mid;
	}
	printf("%lf\n",r/2.);
}
