#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>

using namespace std;

#define IO(a,b) freopen(a,"r",stdin);\
				freopen(b,"w",stdout)
#define REP(i,n) for(int i=0;i<n;++i)
#define FOR(i,a,b) for(int i=a;i<=b;++i)
#define FORD(i,a,b) for(int i=a;i>=b;--i)
#define mk make_pair
#define fi first
#define se second
#define LL long long

#define N 100010
#define ZERO 1e-10

int n;
pair<int,int> P[N];
int premax[N],premin[N],sufmax[N],sufmin[N];

inline bool check(double delta){
	for(int i=1,j=1;j<=n;++i){
		while(P[j].fi-P[i].fi<=delta && j<=n) ++j;
		if(max(premax[i-1],sufmax[j])-min(premin[i-1],sufmin[j])<=delta) return true;
	}
	return false;
}

int main(){
	//IO("test.in","test.out");
	
	scanf("%d",&n);
	FOR(i,1,n){
		int a,b;
		scanf("%d%d",&a,&b);
		P[i]=mk(a+b,a-b);	
	}
	
	sort(P+1,P+n+1);
	
	premin[0]=sufmin[n+1]=(int)1e9;
	premax[0]=sufmax[n+1]=(int)-1e9;
	
	FOR(i,1,n){
		premax[i]=max(premax[i-1],P[i].se);
		premin[i]=min(premin[i-1],P[i].se);
	}
	
	FORD(i,n,1){
		sufmax[i]=max(sufmax[i+1],P[i].se);
		sufmin[i]=min(sufmin[i+1],P[i].se);	
	}
	
	double l=0,r=1e9,mid;
	
	while(r-l>ZERO){
		if(check(mid=l+r)) r=mid/2;
		else l=mid/2;
	}
	
	printf("%.8lf\n",l);
	
	return 0;
}
