#include<algorithm>
#include<cstdio>
#include<iostream>
using namespace std;

typedef long long LL;

const LL INF=0x3f3f3f3f3f3f3f3fLL;

struct Point{
	LL x,y;
	Point(){}
	Point(LL x,LL y):x(x),y(y){}
	bool operator<(const Point& A)const{
		return x<A.x||(x==A.x&&y<A.y);
	}
};
Point operator + (const Point &A, const Point &B)	{ return Point(A.x+B.x, A.y+B.y); }
Point operator - (const Point &A, const Point &B)	{ return Point(A.x-B.x, A.y-B.y); }

const int maxn=100010;

int n;

Point A[maxn];

LL pmn[maxn],pmx[maxn];
LL smn[maxn],smx[maxn];

bool check(LL lam){
	LL res=INF;
	for(int l=1,r=2;l<=n;++l){
		for(;r<=n&&A[r].x-A[l].x<=lam;++r);
		res=min(res,max(pmx[l-1],smx[r])-min(pmn[l-1],smn[r]));
	}
	return res<=lam;
}

int main(){
//	freopen("J.in","r",stdin);
	scanf("%d",&n);
	for(int i=1;i<=n;++i){
		int x,y; scanf("%d%d",&x,&y);
		A[i]=Point(x+y,x-y);
	}
	sort(A+1,A+1+n);
	pmn[0]=INF; for(int i=1;i<=n;++i) pmn[i]=min(pmn[i-1],A[i].y);
	pmx[0]=-INF; for(int i=1;i<=n;++i) pmx[i]=max(pmx[i-1],A[i].y);
	smn[n+1]=INF; for(int i=n;i>=1;--i) smn[i]=min(smn[i+1],A[i].y);
	smx[n+1]=-INF; for(int i=n;i>=1;--i) smx[i]=max(smx[i+1],A[i].y);
	
	check(0LL);
	LL l=-1, r=2000000000;
	while (l+1<r){
		LL m=(l+r)/2;
		if(check(m))r=m;else l=m;
	}
	printf("%.15lf\n",r/2.0);
//	for(;;);
	return 0;
}

  	   		  		 		  		 		 		 		  	