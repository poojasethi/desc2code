import sys
import math
from Queue import Queue
from sets import Set

class pythonin:
    _data = []
    _ldata = []
    _cur = 0
    _lcur = 0
    
    def __init__(self):
        while True:
            try: self._ldata.append(raw_input())
            except EOFError : break

    def _convert(self):
        if self._lcur == len(self._ldata) : return
        l = self._ldata[self._lcur].split(" ")
        self._lcur += 1
        for x in l :
            if x != "" and x != "\t" :
                self._data.append(x)
        
    def eof(self) : 
        self._convert()
        return self._cur == len(self._data)

    def nextToken(self) :
        if self.eof() : return
        self._cur += 1
        return self._data[self._cur - 1]
    
    def nextInt(self) :
        return int(self.nextToken())
    
    def nextFloat(self) :
        return float(self.nextToken())
    
    def nextLine(self) :
        if self._lcur == len(self._ldata) : return 
        self._lcur += 1
        return self._ldata[self._lcur - 1]
    
#sys.stdin = open("input.txt", "r")
#sys.stdout = open("output.txt", "w")

pin = pythonin()

a = pin.nextInt()
b = pin.nextInt()

div = []

mx = int(math.sqrt(max(a, b) + 1)) + 1

for i in xrange(1, mx) :
    if a % i == 0 or b % i == 0:
        if a % i == 0 and b % i == 0 : div.append(i)
        ra = a / i
        rb = b / i
        if a % ra == 0 and b % ra == 0 :
            div.append(ra)
        if a % rb == 0 and b % rb == 0 :
            div.append(rb)

div = list(set(div))
div.sort()
 
n = pin.nextInt()

for i in xrange(0, n):
    
    low = pin.nextInt()
    high = pin.nextInt()
    
    l = 0
    r = len(div)
    
    while r - l > 1 :
        t = (l + r) / 2
        if high < div[t] : r = t
        else :             l = t
    
    if  low <= div[l] <= high : print div[l]
    else :                      print -1



#print ("Press any key to continue")
#raw_input() 
