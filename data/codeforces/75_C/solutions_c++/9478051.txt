#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

vector<int> divis;

int main()
{
	int a, b, c, i = 1;
	cin >> a >> b;
	c = __gcd(a, b);
	while (i * i < c)
	{
		if (c % i == 0)
		{
			divis.push_back(i);
			divis.push_back(c / i);
		}
		i ++;
	}
	if (i * i == c)
		divis.push_back(i);
	sort(divis.begin(), divis.end());
	int q;
	cin >> q;
	while (q --)
	{
		int l, r;
		cin >> l >> r;
		int pos = upper_bound(divis.begin(), divis.end(), r) - divis.begin() - 1;
		if (pos == -1 || divis[pos] < l)
			cout << -1 << '\n';
		else
			cout << divis[pos] << '\n';
	}
	return 0;
}
