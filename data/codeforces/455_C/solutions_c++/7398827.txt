#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;

const int N=300010;
int n,m,Q,i,j,k,l,p,x,y,z;
int len[N],fa[N];
int get(int i){return fa[i]==i?i:fa[i]=get(fa[i]);}
void merge(int x,int y)
{
	x=get(x);y=get(y);
	if(x!=y)
	{
		fa[y]=x;
		len[x]=max(max(len[x],len[y]),(len[x]+1)/2+(len[y]+1)/2+1);
	}
}

int q[N],d[N],tt[N],T;vector<int> e[N];
int bfs(int s)
{
	int i,j,v;
	for(i=j=1,q[1]=s,d[s]=1,tt[s]=++T;i<=j;i++)
	for(int k=0;k<e[q[i]].size();k++){
		v=e[q[i]][k];
		if(tt[v]!=T)tt[v]=T,q[++j]=v,d[v]=d[q[i]]+1;
	}
	return q[0]=j,q[j];
}

int main()
{
	scanf("%d%d%d",&n,&m,&Q);
	for(int i=1;i<=m;i++)
	{
		scanf("%d%d",&x,&y);
		e[x].push_back(y);
		e[y].push_back(x);
	}
	for(int i=1;i<=n;i++)if(!d[i])
	{
		int p=bfs(bfs(i));
		len[i]=d[p]-1;for(int k=1;k<=q[0];k++)fa[q[k]]=i;
	}
	
	for(int i=1;i<=Q;i++)
	{
		scanf("%d",&z);
		if(z==2)
		{
			scanf("%d%d",&x,&y);
			merge(x,y);
		}
		else
		{
			scanf("%d",&x);
			printf("%d\n",len[get(x)]);
		}
	}
	
	
	return 0;
}