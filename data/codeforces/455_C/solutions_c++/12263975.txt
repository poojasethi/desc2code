#include<cstdio>
#include<cstring>
#define N 300007
#define MAX(a,b) ((a)>(b)?(a):(b))
bool vis[N];
int f[N];
int lg[N];
int et,ehead[N];
int maxLen,maxV;
struct Edge{
	int t,next;
}	e[N<<1];
void addEdge(int u,int v){
	e[et].t=v,e[et].next=ehead[u],ehead[u]=et++;
}
void dfs(int v,int dep,int p=-1){
	vis[v]=true;
	int i,u;
	for(i=ehead[v];i!=-1;i=e[i].next)
	if((u=e[i].t)!=p){
		dfs(u,dep+1,v);
	}
	if(dep>maxLen){
		maxV=v;
		maxLen=dep;
	}
}
int root(int t){
	int x=t,r;
	while(x!=f[x]) x=f[x];
	r=x,x=t;
	while(x!=f[x]) t=f[x],f[x]=r,x=t;
	return r;
}
int main(){
	int n,m,q;
	int i,x,u,v;

	scanf("%d%d%d",&n,&m,&q);
	for(i=1;i<=n;++i){
		vis[i]=false;
		f[i]=i;
	}
	et=0,memset(ehead,-1,sizeof(ehead));
	for(i=1;i<=m;++i){
		scanf("%d%d",&u,&v);
		addEdge(u,v),addEdge(v,u);
		int fu=root(u);
		int fv=root(v);
		if(fu!=fv) f[fu]=fv;
	}
	memset(lg,0,sizeof(lg));
	for(i=1;i<=n;++i)
	if(!vis[i]){
		maxLen=-1;
		dfs(i,0);
		maxLen=-1;
		dfs(maxV,0);
		lg[root(i)]=maxLen;
	}
	while(q--){
		scanf("%d",&x);
		if(x==1){
			scanf("%d",&x);
			printf("%d\n",lg[root(x)]);
		}
		else{
			scanf("%d%d",&u,&v);
			u=root(u),v=root(v);
			if(u==v) continue;
			f[v]=u;
			lg[u]=MAX(lg[u],MAX(lg[v],(lg[u]+1)/2+(lg[v]+1)/2+1));
		}
	}
	return 0;
}
		 		 			  		 	   	 		  	 	 			