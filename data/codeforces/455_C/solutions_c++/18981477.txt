#include <cstdio>
#include <algorithm>
#include <vector>
#include <cstring> 
using namespace std;
vector<int> v[500000]; 
int root,maxn,f[500000],k,n,m,q,d[500000],x,y;
int sf(int x){return x==f[x]?x:f[x]=sf(f[x]);}
int dfs(int x,int d,int last){
    int flag=0; 
    for(int i=0;i<v[x].size();i++){
        if(v[x][i]==last)continue;
        flag++;
        dfs(v[x][i],d+1,x);
    }if(!flag&&d>maxn)maxn=d,root=x;
}
int path(int x){
	dfs(x,root=maxn=0,0);  
    if(root)dfs(root,maxn=0,0);
    return maxn;
}
int main(){
    scanf("%d%d%d",&n,&m,&q);
    for(int i=1;i<=n;i++)d[i]=1,f[i]=i;
    for(int i=1;i<=m;i++){
        scanf("%d%d",&x,&y);
        v[x].push_back(y);
		v[y].push_back(x); 
        x=sf(x); y=sf(y);
        if(x==y)continue;
        if(x<y)swap(x,y);
        f[x]=y;
    }for(int i=1;i<=n;i++)if(f[i]==i)d[i]=path(i)+1;
    for(int i=1;i<=q;i++){
        scanf("%d",&k);
        if(k==1){
            scanf("%d",&x);
            printf("%d\n",d[sf(x)]-1);
        }else{
            scanf("%d%d",&x,&y);
            x=sf(x); y=sf(y);
            if(x==y)continue;
            if(x<y)swap(x,y);
            f[x]=y; d[y]=max(max(d[x],d[y]),d[y]/2+d[x]/2+2);
        }
    }return 0;
}
							 	 	  		   	    		 		 	