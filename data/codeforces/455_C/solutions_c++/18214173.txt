#include<cstdio>
#include<algorithm>
#define N 300005
using namespace std;
struct arr{int go,next;}a[N*2];
int end[N],visit[N],d[N],ans[N],f[N];
int n,m,Q,i,x,y,z,father,now,num,cnt,opt;
inline void add(int u,int v){a[++cnt].go=v;a[cnt].next=end[u];end[u]=cnt;}

void dfs(int k)
{
  visit[k]=num;f[k]=father;
  if (d[k]>d[now]) now=k;
  for (int i=end[k];i;i=a[i].next)
  {
    int go=a[i].go;if (visit[go]==num) continue;
    d[go]=d[k]+1;dfs(go);
  }
}
int get(int u){return f[u]==u?u:f[u]=get(f[u]);}
int main()
{
  scanf("%d%d%d",&n,&m,&Q);
  for (i=1;i<=m;i++)
    scanf("%d%d",&x,&y),add(x,y),add(y,x);
  for (i=1;i<=n;i++)
    if (!visit[i]) 
    {
      father=i;
      now=i;num=1;d[i]=0;dfs(i);
      num=2;d[now]=0;dfs(now);
      ans[father]=d[now];
    }
  while (Q--)
  {
    scanf("%d%d",&opt,&x);
    if (opt==1) {printf("%d\n",ans[get(x)]);continue;}
    scanf("%d",&y);x=get(x);y=get(y);if (x==y) continue;
    f[y]=x;ans[x]=max(max(ans[y],ans[x]),(ans[x]+1)/2+(ans[y]+1)/2+1);
  }
  return 0;
}