#include <cstdio>
#include <algorithm>
#define N 300005
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int n, m, q, f[N], v[N + N], o[N + N], p, s[N], z[N], dp[N];
bool u[N];

int fa(int x){
	return x == s[x] ? x : s[x] = fa(s[x]);
}

void bd(int a, int b){
	v[++p] = b; o[p] = f[a]; f[a] = p;
}

void dfs(int x, int y){
	s[x] = y;
	u[x] = 1;
	
	fe(i, f[x], o) if(!u[v[i]]){
		dfs(v[i], y);
		z[y] = max(z[y], dp[v[i]] + 1 + dp[x]);
		dp[x] = max(dp[x], dp[v[i]] + 1);
	}
}

int main(){
	scanf("%d %d %d", &n, &m, &q);
	fi(i, 0, m){
		int a, b;
		scanf("%d %d", &a, &b);
		bd(a, b);
		bd(b, a);
	}
	
	FI(i, 1, n) if(!u[i]) dfs(i, i);
	
	fi(i, 0, q){
		int type;
		scanf("%d", &type);
		
		if(type == 2){
			int a, b, x, y;
			scanf("%d %d", &a, &b);
			if(fa(a) == fa(b)) continue;
			x = z[fa(b)];
			y = z[fa(a)];
			z[fa(b)] = max((x + 1) / 2 + (y + 1) / 2 + 1, max(x, y));
			s[fa(a)] = fa(b);
		}else{
			int a;
			scanf("%d", &a);
			printf("%d\n", z[fa(a)]);
		}
	}
	
	scanf("\n");
}
