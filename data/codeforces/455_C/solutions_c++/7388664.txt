#include<bits/stdc++.h>
using namespace std;
const int MAX_N=3e5+5;

int n,m,q,fa[MAX_N],len[MAX_N],mxlen;
vector<int> e[MAX_N];
bool vis[MAX_N];

int dfs(int v,int f)
{
	fa[v]=f;
	vis[v]=true;
	int l1=0,l2=0;
	for(int i=0;i<e[v].size();i++)
	{
		int u=e[v][i];
		if(u!=f)
		{
			int tmp=dfs(u,v)+1;
			if(tmp>l1)
			{
				l2=l1,l1=tmp;
			}
			else if(tmp>l2) l2=tmp;
		}
	}
	mxlen=max(mxlen,l1+l2);
	return l1;
}

int getFa(int x) { return fa[x]==x?x:(fa[x]=getFa(fa[x])); }

int main()
{
	scanf("%d%d%d",&n,&m,&q);
	for(int i=0;i<m;i++)
	{
		int u,v;
		scanf("%d%d",&u,&v);
		e[u].push_back(v);
		e[v].push_back(u);
	}
	for(int i=1;i<=n;i++)
	{
		if(!vis[i])
		{
			mxlen=0;
			dfs(i,i);
			len[i]=mxlen;
		}
	}
	
	while(q--)
	{
		int t,x,y;
		scanf("%d",&t);
		if(t==1)
		{
			scanf("%d",&x);
			printf("%d\n",len[getFa(x)]);
		}
		else
		{
			scanf("%d%d",&x,&y);
			int fx=getFa(x),fy=getFa(y);
			if(fx==fy) continue;
			fa[fx]=fy;
			int t=max(len[fx],len[fy]);
			t=max(t,(len[fx]+1)/2+(len[fy]+1)/2+1);
			len[fy]=t;
		}
	}
	return 0;
}
