#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<set>
#include<queue>
#include<vector>
#define maxn 301000
using namespace std;
int i,j,k,m,n,farnode,fard;
int f[maxn];
vector<int> g[maxn];
int d[maxn];
int parent(int x){return x==f[x]?x:(f[x]=parent(f[x]));}
void dfs(int x,int fa,int d)
{
  if (d>fard){fard=d;farnode=x;}
  for (int i=0;i<g[x].size();i++)
  if (fa!=g[x][i])
  dfs(g[x][i],x,d+1);
}
int dist(int x)
{
  fard=-1;
  dfs(x,-1,0);
  fard=-1;
  dfs(farnode,-1,0);
  return fard;
}
int ty,a,b,q;
int main()
{
  cin>>n>>m>>q;
  for (i=1;i<=n;i++)f[i]=i;
  for (i=1;i<=m;i++)
  {
    scanf("%d%d",&a,&b);
    g[a].push_back(b);
    g[b].push_back(a);
    int fa=parent(a),fb=parent(b);
    f[fa]=fb;
  }
  for (i=1;i<=n;i++)
  if (i==f[i])
  d[i]=dist(i);
  while (q--)
  {
    scanf("%d%d",&ty,&a);
    if (ty==1)
    {
      int fa=parent(a);
      printf("%d\n",d[fa]);
    }
    else
    {
      scanf("%d",&b);
      int fa=parent(a),fb=parent(b);
      if (fa!=fb)
      {
        int mx=max(d[fa],d[fb]);
        mx=max(mx,1+(d[fa]+1)/2+(d[fb]+1)/2);
        f[fa]=fb;
        d[fb]=mx;
      }
    }
  }
  //system("pause");
  return 0;
}
