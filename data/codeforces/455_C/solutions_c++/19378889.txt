#include<cstdio>
#include<iostream>
#include<algorithm>
using namespace std;
const int N=300005;

int head[N],tot=1,fa[N],md[N],ver[N<<1|1],next[N<<1|1];
int n,m,q;
int maxd,maxi,now;

void add(int x,int y){ver[tot]=y,next[tot]=head[x],head[x]=tot++;}

int get(int x){
	return fa[x]^x?fa[x]=get(fa[x]):x;
}

void link(int x,int y){
	x=get(x),y=get(y);
	if(x==y)return;
	if(md[x]<md[y])swap(x,y);
	md[x]=max(md[x] , (md[x]+1)/2 + (md[y]+1)/2 + 1 );
	fa[y]=x;
}

void dfs(int x,int pre,int D){
	fa[x]=now;
	if(D>maxd)
		maxd=D,maxi=x;
	for(int i=head[x];i;i=next[i])
		if(ver[i]!=pre)dfs(ver[i],x,D+1);
}

int main(){
	int i,x,y;
	scanf("%d%d%d",&n,&m,&q);
	for(i=0;i++<m;)
		scanf("%d%d",&x,&y),
		add(x,y),add(y,x);
	for(i=1;i<=n;i++)fa[i]=i;
	for(i=1;i<=n;i++)
		if(fa[i]==i)
			maxd=-1,
			dfs(now=i,0,0),
			maxd=-1,
			dfs(now=maxi,0,0),
			md[now]=maxd;
	while(q--){
		scanf("%d",&i);
		if(i&1)
			scanf("%d",&x),printf("%d\n",md[get(x)]);
		else
			scanf("%d%d",&x,&y),link(x,y);
	}
}

	  	 	    		 			    		  			 		