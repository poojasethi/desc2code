#include<bits/stdc++.h>

using namespace std;

#define N 300005

vector < int > V[N];

int ata[N],L[N],n,u,v,i,w,w2,a;

bool H[N];

int find(int x){
	return ata[x] = ata[x] == x ? x : find(ata[x]);
}

int f(int x){

	int t,i,mx=0;

	H[x] = 1;

	for(i=0;i<V[x].size();i++)
		if(!H[ V[x][i] ]){
			L[find(x)] = max(L[find(x)] , mx + (t = 1 + f(V[x][i])));
	        mx = max(mx , t);
		}
	return mx;
}
int main(){

	cin >> n >> w >> w2;

	for(i=1;i<=n;i++)
		ata[i] = i;

	while(w--){
		scanf("%d %d",&u,&v);
		ata[find(u)] = v;
		V[u].push_back(v);
		V[v].push_back(u);
	}

	for(i=1;i<=n;i++)
		if(!H[i])
			f(i);

	while(w2--){
		scanf("%d %d",&a,&u);
		if(a == 1)
			printf("%d\n",L[find(u)]);
		else{
			scanf("%d",&v);
			if(find(u) != find(v)){
				L[find(u)] = max( max(L[find(u)] , L[find(v)]) , (L[find(u)]+1) / 2 + (L[find(v)]+1) / 2 + 1);
				ata[find(v)] = u;
			}
		}
	}
	
	return 0;
}
