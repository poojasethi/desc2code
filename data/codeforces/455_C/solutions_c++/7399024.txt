#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;

int N,M,Q;

struct edge{
    int t,n;
} E[700000];
int st[400000],en;

void ade(int a,int b) {
    E[++en]=(edge){b,st[a]};
    st[a]=en;
}

int dep[400000];
int dfs(int x,int f) {
    dep[x]=dep[f]+1;
    int im=0,po=x;
    for (int i=st[x];i;i=E[i].n) if (E[i].t!=f) {
        int t=dfs(E[i].t,x);
        if (dep[t]>im) {im=dep[t];po=t;}
    }
    return po;
}

int fa[400000],dm[400000];
int ff(int x) {return fa[x]?(fa[x]=ff(fa[x])):x;}

void merge(int x,int y) {
    int tmp=max(max(dm[x],dm[y]),(dm[x]+1)/2+(dm[y]+1)/2+1);
    dm[x]=0;
    fa[x]=y;
    dm[y]=tmp;
}

int main() {
    scanf("%d%d%d",&N,&M,&Q);
    for (int i=0,a,b;i<M;i++) {
        scanf("%d%d",&a,&b);
        ade(a,b);ade(b,a);
        fa[ff(a)]=ff(b);
    }

    for (int i=1;i<=N;i++) if (ff(i)==i) {
        int x=dfs(i,0);
        dm[i]=dep[dfs(x,0)]-1;
        //cerr<<"dm"<<i<<"="<<dm[i]<<endl;
    }

    while (Q--) {
        int cmd,x,y;
        scanf("%d%d",&cmd,&x);
        if (cmd==1)
            printf("%d\n",dm[ff(x)]);
        else {
            scanf("%d",&y);
            if (ff(x)!=ff(y)) merge(ff(x),ff(y));
        }
    }
}
