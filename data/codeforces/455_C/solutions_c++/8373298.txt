#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;
const int MXN = 300005;
int N,M,Q,x,y;
vector <int> v[MXN];
int tgf[MXN];
int m[MXN];
int uz[MXN];
int f(int k)
{
	if(tgf[k] == k)
		return k;
	return tgf[k] = f(tgf[k]);
}
void uni(int x,int y)
{
	tgf[f(x)] = f(y);
}
int dfs(int k)
{
	m[k] = 1;
	int ret = 0;
	int ret2 = 0;
	for(int i = 0;i<(int)v[k].size();i++)
	{
		if(m[v[k][i]])  continue;
		int d = dfs(v[k][i]);
		//~ printf("%d %d %d\n",k,v[k][i],d);
		if(ret <= d)
		{
			ret2 = ret;
			ret = d;
		}
		else
			ret2 = max(ret2,d);
	}
	uz[f(k)] = max(uz[f(k)] , ret+ret2);
	//~ printf("%d %d %d\n",k,ret,ret2);
	return ret + 1;
}
int main()
{
	scanf("%d %d %d",&N,&M,&Q);
	for(int k = 1;k<=N;k++)
		tgf[k] = k;
	for(int i = 0;i<M;i++)
	{
		scanf("%d %d",&x,&y);
		uni(x,y);
		v[x].push_back(y);
		v[y].push_back(x);
	}
	for(int i = 1;i<=N;i++)
		if(!m[i])
			dfs(i);
	for(int i = 0;i<Q;i++)
	{
		scanf("%d %d",&x,&y);
		if(x == 1)
			printf("%d\n",uz[f(y)]);
		else
		{
			scanf("%d",&x);
			if(f(x) == f(y))
				continue;
			int k = uz[f(y)];
			int l = uz[f(x)];
			uni(x,y);
			uz[f(x)] = max(max(k,l),((k+1)/2 + (l+1)/2) + 1);
		}
	}
	return 0;
}
