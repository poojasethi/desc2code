#include<iostream>
#include<cstdio>
#include<cstring>
#include<vector>
using namespace std;
#define MAXN 300300
int f[MAXN],dis[MAXN],maxl,tmp;
vector<int> edge[MAXN];
int find(int x){
	if(f[x]==x)
		return x;
	return f[x]=find(f[x]);
}
void dfs(int x,int y,int d){
	if(edge[x].size()==0)
		return;
	if(edge[x].size()==1 && d!=0){
		if(d>maxl){
			tmp=x;
			maxl=d;
		}
		return;
	}
	for(int i=0;i<edge[x].size();++i){
		if(edge[x][i]!=y){
			dfs(edge[x][i],x,d+1);
		}
	}
}
int main(){
	int n,m,q,u,v,t,a,b;
	while(cin>>n>>m>>q){
		for(int i=1;i<=n;++i){
			f[i]=i;
			edge[i].clear();
		}
		memset(dis,0,sizeof(dis));
		for(int i=0;i<m;++i){
			scanf("%d %d",&u,&v);
			edge[u].push_back(v);
			edge[v].push_back(u);
			f[find(u)]=find(v);
		}
		for(int i=1;i<=n;++i)
			if(f[i]==i){
				maxl=0;
				tmp=i;
				dfs(i,0,0);
				dfs(tmp,0,0);
				dis[i]=max(dis[i],maxl);
			}
		for(int i=0;i<q;++i){
			scanf("%d",&t);
			if(t==2){
				scanf(" %d %d",&a,&b);
				int fa=find(a),fb=find(b);
				if(fa!=fb){
					int d=(dis[fa]+1)/2+(dis[fb]+1)/2+1;
					dis[fa]=max(dis[fa],max(dis[fb],d));
					f[fb]=fa;
				}
			}
			if(t==1){
				scanf(" %d",&a);
				cout<<dis[find(a)]<<endl;
			}
		}
	}
}
	   	 	 	 	 		  	  		   		