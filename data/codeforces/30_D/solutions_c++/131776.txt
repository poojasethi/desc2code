#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <math.h>
#include <vector>
using namespace std;

typedef long long int64;

int n,start;
int x[100000],xx,yy;
double r;

double dist(int a) {
	double dx=x[a]-xx, dy=yy;
	return sqrt(dx*dx+dy*dy);
}

double getup(int a, int b) {
	double d=abs(x[b]-x[a]);
	return min(abs(start-x[a])+d+dist(b), abs(x[b]-start)+d+dist(a));
}

double getdown(int a, int b) {
	return min(dist(a),dist(b))+abs(x[b]-x[a]);
}

int main() {
	int k;
	//freopen("D.in","r",stdin);
	scanf("%d %d",&n,&k);
	k--;
	for (int i=0;i<n;i++) scanf("%d",&x[i]);
	start=x[k];
	sort(x,x+n);
	scanf("%d %d",&xx,&yy);

	if (k==n) {
		printf("%.9lf\n",getdown(0,n-1));
		return 0;
	}

	//finish on top
	int d=x[n-1]-x[0];
	r=getup(0,n-1);
	//come down
	for (int i=0;i<n;i++) {
		if (i>0) r=min(r,getup(0,i-1)+getdown(i,n-1));
		if (i<n-1) r=min(r,getup(i+1,n-1)+getdown(0,i));
	}
	printf("%.9lf\n",r);
    return 0;
}
