#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
using namespace std;
#define MAXN 100005
#define REP(i,n) for(i=0;i<n;i++)
int N,M;
double x[MAXN];
double xn1,yn1;
double getd(int i)
{
    return sqrt((xn1-x[i])*(xn1-x[i])+yn1*yn1);
}
double solve(int l,int r)
{
    if(r<l) return 0;
    double ret=x[r]-x[l];
    if(l<=M&&M<=r) return ret+min(x[M]-x[l]+getd(r),x[r]-x[M]+getd(l));
    return ret+min(getd(l),getd(r));
}
int main()
{
    int i;
    scanf("%d%d",&N,&M);M--;
    REP(i,N) scanf("%lf",x+i);
    int tx=x[M];
    sort(x,x+N);
    scanf("%lf%lf",&xn1,&yn1);
    double ret=1e99;
    if(M==N)
    {
        ret=x[N-1]-x[0]+min(getd(N-1),getd(0));
    }
    else
    {
        REP(i,N) if(x[i]==tx) M=i;
        REP(i,N) ret=min(ret,solve(0,i-1)+solve(i,N-1));
    }
    printf("%.10lf\n",ret);
    return 0;
}
