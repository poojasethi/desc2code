#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
using namespace std;
const int mN=100020;
const double eps=1e-12;
#define y1 y11
int n;
double a[mN],x1,ans,now,y1,k;

double dist(int i)
{
	return hypot(a[i]-x1,y1);
}

double tour(int l,int r)
{
	if (l>r)
		return 0;
	return (a[r]-a[l])+min(dist(l),dist(r));
}
double cover(int l,int r)
{
	return min(fabs(k-a[l])+dist(r),fabs(k-a[r])+dist(l))+a[r]-a[l];
}
int main()
{
	
	ios::sync_with_stdio(false);
	int kk;
	cin>>n>>kk;
	int i;
	for (i=1;i<=n;i++)
		cin>>a[i];
	cin>>x1>>y1;
	if (kk!=n+1)
		k=a[kk];
	sort(a+1,a+1+n);
	if (kk==n+1)
	{
		printf("%.20f\n",tour(1,n));
		return 0;
	}
	for (i=1;i<=n;i++)
	{
		if (fabs(k-a[i])<eps)
			kk=i;
	}
	ans=100000000;
	for(i=1;i<=n;i++)
	{
		now=cover(1,i)+tour(max(kk,i)+1,n);
		ans=min(ans,now);
	}
	for (i=1;i<=n;i++)
	{
		now=cover(i,n)+tour(1,min(kk,i)-1);
		ans=min(ans,now);
	}
	printf("%.20f\n",ans);
}
