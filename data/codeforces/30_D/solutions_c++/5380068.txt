#include <cmath>
#include <cstdio>
#include <algorithm>
#define dis(p) sqrt((a[p]-X)*(a[p]-X)+Y*Y)
#define f1(l,r) (a[r]-a[l]+min(a[r]-a[K]+dis(l),a[K]-a[l]+dis(r)))
#define f2(l,r) (l>r?0:a[r]-a[l]+min(dis(l),dis(r)))
using namespace std;

int N,K,xx,a[100005];
double X,Y,ans=1e9;

int main()
{
	scanf("%d%d",&N,&K);
	for (int i=1; i<=N; i++) scanf("%d",&a[i]);
	scanf("%lf%lf",&X,&Y),xx=a[K],sort(a+1,a+N+1);
	if (K==N+1) {printf("%.9lf\n",min(dis(1),dis(N))+a[N]-a[1]); return 0;}
	for (int i=1; i<=N; i++) if (a[i]==xx) {K=i; break;}
	for (int i=1; i<=N; i++) if (K<=i) ans=min(ans,f1(1,i)+f2(i+1,N)); else ans=min(ans,f1(i+1,N)+f2(1,i));
	printf("%.9lf\n",ans);
}