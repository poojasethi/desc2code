#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <queue>
#include <stack>
using namespace std;
const int M = 1e5+10;
int cnt[2][M],n,m;
priority_queue<int>Q;
queue<int>q;
stack<int>sta;

int main(){
	cin>>n>>m;
	memset(cnt,0,sizeof(cnt));
	for(int t=0;t<2;t++){
		for(int i=0;i<n;i++){
			int x;cin>>x;
			cnt[t][x]++;
		}
	}
	int tmp=0;
	for(int i=0,j;j=m-1-i,i<m;i++){
		int k=min(cnt[0][i],cnt[1][j]);
		cnt[0][i]-=k,cnt[1][j]-=k;
		tmp+=k;
		while(cnt[0][i]--){
			sta.push(i);
		}
		while(cnt[1][j]--){
			if(!sta.empty()){
				Q.push((sta.top()+j)%m);
				sta.pop();
			}
			else{
				q.push(j);
			}
		}
	}
	while(tmp--)printf("%d ",m-1);	
	while(!q.empty()){
		Q.push((sta.top()+q.front())%m);
		q.pop();sta.pop();
	}
	while(!Q.empty()){
		printf("%d ",Q.top());
		Q.pop();
	}
	return 0;
}
