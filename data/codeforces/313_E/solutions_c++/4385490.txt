#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<stack>
using namespace std;

int n, m;
typedef vector<int> vi;

vi a, b, c;

void Solve()
{
	queue<int> q;
	stack<int> s;

	for (int i = m - 1; i >= 0; --i)
	{
		while (b[m - 1 - i]--) s.push(m - 1 - i); // Add to the stack all available complementary values
		
		while (a[i]--)
		{
			if (!s.empty())
				c.push_back(i + s.top()), s.pop(); // found a corresponding value, add to the result
			else
				q.push(i); // Add to the queue for subsequent matching

		}
	}

	while (!q.empty())
		c.push_back((q.front() + s.top()) % m), s.pop(), q.pop();

	sort(c.rbegin(), c.rend());
	
	for (int i = 0; i < c.size(); ++i)
		cout << c[i] << " ";
	
}

int main()
{
	cin >> n >> m;
	a.resize(m, 0), b.resize(m, 0);

	for (int i = 0; i < n; ++i) { int v; cin >> v, ++a[v]; }
	for (int i = 0; i < n; ++i) { int v; cin >> v, ++b[v]; }

	Solve();	

	return 0;
}
