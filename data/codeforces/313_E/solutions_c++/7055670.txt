#include <algorithm>
#include <cstdio>
#include <cstring>
#include <queue>
#include <stack>
#include <vector>

const int M = (int) (1e5);

int n, m, c[2][M];

std::queue<int> Q;
std::stack<int> S;
std::vector<int> ans;

int main() {
	scanf("%d %d", &n, &m);
	memset(c, 0, sizeof(c));
	for (int i = 0; i < 2; ++i) {
		for (int j = 0; j < n; ++j) {
			int x;
			scanf("%d", &x);
			c[i][x]++;
		}
	}
	for (int i = m - 1; i >= 0; --i) {
		for (int j = 0; j < c[0][m - 1 - i]; ++j) {
			S.push(m - 1 - i);
		}
		for (int j = 0; j < c[1][i]; ++j) {
			if (S.empty()) {
				Q.push(i);
			} else {
				ans.push_back(i + S.top());
				S.pop();
			}
		}
	}
	while (!S.empty()) {
		ans.push_back((S.top() + Q.front()) % m);
		S.pop(), Q.pop();
	}
	std::sort(ans.begin(), ans.end());
	for (int i = n - 1; i >= 0; --i) {
		printf("%d%s", ans[i], i ? " " : "\n");
	}
	return 0;
}


		 	   		   	 	  									