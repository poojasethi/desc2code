def gcd(a,b):
    if b==0: return a
    return gcd(b,a%b)
def extend_euclid(a,b):
    if b==0:
        return 1,0
    else:
        y,x = extend_euclid(b,a%b)
        y = y - (a/b)*x
        return x,y

n,m,K=map(int,raw_input().split())
a=map(int,raw_input().split())

lcm=1
for i in a:
    lcm = (lcm*i)/gcd(lcm,i)
    if lcm > n: print "NO"; exit()

j=0
m1=1
suc=True
for i in xrange(K):
    x,y=extend_euclid(m1,a[i])
    res = m1*x+a[i]*y
    if (-i-j)%res != 0:
        suc=False
        break
    res =  (-i-j)/res
    x,y = x*res, y*res

    j+=m1*x
    t = m1*a[i]
    #print "t=%d" % (t)
    if j>t: j-= (j/t)*t
    if j<0: j += ((-j+t-1)/t)*t
    if j==0: j = t

    #print "j=%d" % (j)
    #for k in xrange(i):
    #    print "(j+%d) Mod(%d) = %d" % (k,a[k],(j+k)%a[k])

    m1 = (m1*a[i])/gcd(m1,a[i])
    #print "m1=%d" % (m1)
    #if j + K-1 >m: suc=False;break;

if j + K-1 >m or suc==False: print "NO";exit()
b=[gcd(lcm,j+i) for i in xrange(K)]
for i in xrange(K):
    if (a[i]!=b[i]):
        print "NO"
        exit()
print "YES"
