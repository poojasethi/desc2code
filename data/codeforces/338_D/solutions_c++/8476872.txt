#include <cstdio>
#include <algorithm>
#include <iostream>

using namespace std;

typedef long long i64;

i64 n, m, k, a[10010];

i64 gcd(i64 a, i64 b) {
	return b? gcd(b, a % b): a;
}
void exgcd(i64 a, i64 &x, i64 b, i64 &y) {
	if (!b) x = 1, y = 0;
	else exgcd(b, y, a % b, x), y -= x * (a / b);
}
i64 mul(i64 a, i64 b, i64 p) {
	a = (a % p + p) % p;
	return (a * b - (i64)((long double)a * b / p) * p + p) % p;
}
bool check(i64 i, i64 j) {
	for (int l = 0; l < k; ++l)
		if (gcd(i, j + l) != a[l]) return 0;
	return 1;
}
int main() {
	cin >> n >> m >> k;
	i64 lcm = 1, X = 1;
	for (int i = 0; i < k; ++i) {
		cin >> a[i];
		if (lcm / gcd(a[i], lcm) > n / a[i] + 1) {
			printf("NO\n");
			return 0;
		}
		i64 x, y, z = ((-i - X) % a[i] + a[i]) % a[i];
		exgcd(lcm, x, a[i], y);
		i64 g = gcd(lcm, a[i]);
		if (z % g) {
			printf("NO\n");
			return 0;
		}
		x = mul(x, z / g, a[i] / g);
		X += x * lcm;
		lcm = lcm / gcd(a[i], lcm) * a[i];
	}
	if (lcm > n || X + k - 1 > m) {
		printf("NO\n");
		return 0;
	}
	printf("%s\n", check(lcm, X)? "YES": "NO");
}
