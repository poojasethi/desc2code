#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;
int k;
typedef long long LL;
LL A[10005],a,b,c,d,x1,x2,n,m;
LL exgcd(LL x,LL y){
	if(y==0){
		x1=1;x2=0;
		return x;
	}else{
		LL gcd=exgcd(y,x%y);
		x1-=x2*(x/y);
		swap(x1,x2);
		return gcd;
	}
}
LL mul(LL a,LL b,LL c){
	LL tmp=0,flag=1;
	if(b<0)flag=-1,b=-b;
	for(;b;b>>=1,(a+=a)%=c)
		if(b&1)(tmp+=a)%=c;
	return tmp*flag;
}
int main(){
	scanf("%I64d%I64d%d",&n,&m,&k);
	for(int i=1;i<=k;i++)
		scanf("%I64d",&A[i]);
	LL row=A[1];
	for(int i=2;i<=k;i++){
		if(A[i]<=0)return puts("NO"),0;
		d=__gcd(row,A[i]);
		if(row/d>n/A[i])return puts("NO"),0;
		row=row/__gcd(row,A[i])*A[i];
	}
	if(row>n)return puts("NO"),0;

	a=0;b=A[1];
	for(int i=2;i<=k;i++){
		c=1-i;
		d=A[i];
		c%=d;
		if(c<0)c+=d;
		LL gcd=__gcd(b,d);
		if(a%gcd!=c%gcd)
			return puts("NO"),0;
		exgcd(b,d);
		x1%=d/gcd;
		if(x1<0)x1+=d/gcd;
		LL oldb=b;
		b=b/gcd*d;
		(a+=mul(mul(x1,(c-a)/gcd,b),oldb,b))%=b;;
		if(a<0)a+=b;
	}
	if(a==0)a=b;
	if(a+k-1>m)return puts("NO"),0;
	for(int i=0;i<k;i++)
		if(__gcd(a+i,row)!=A[i+1])return puts("NO"),0;
	puts("YES");
}
