#include <iostream>
#include <string>
#include <map>
using namespace std;
typedef long long LL;

map< pair<int,int>, LL > memo;
LL rec(int i, int cur, const string& str)
{
	if( i == str.size()-1 )
		return 1;

	pair<int,int> key(i, cur);
	if( memo.count(key) )
		return memo[key];

	int next = cur + str[i+1]-'0';
	LL answer = rec(i+1, next/2, str);
	if(next&1) answer += rec(i+1, next/2+1, str);

	return memo[key] = answer;
}

bool selfcheck(const string& str)
{
	for(int i=0; i<str.size()-1; ++i)
	{
		int cur = str[i]-'0';
		int nxt = str[i+1]-'0';
		if( (cur+nxt)/2!=nxt && (cur+nxt+1)/2!=nxt )
			return false;
	}
	return true;
}

int main()
{
	string str;
	cin >> str;

	LL answer = 0;
	for(int first=0; first<=9; ++first)
		answer += rec(0, first, str);
	cout << answer-(selfcheck(str)?1:0) << endl;

}
