#include <iostream>
#include <algorithm>
#define maxN (50+2)
#define maxD (10+1)
#define int long long

using namespace std;

int d [maxN][maxD];

bool create (string s)
{
	int t = s[0];
	for (int i = 0; i < s.size()-1; i++)
	{
		int sum = s[i+1] + t;
		if (s[i+1]==sum/2)
		{
			t=sum/2;
			continue;
		}

		if (sum%2 && s[i+1]==sum/2+1)
		{
			t=sum/2+1;
			continue;
		}

		return 0;
	}

	return 1;
}

main()
{
	string s;
	cin>>s;
	string t = s;
	reverse (s.begin(), s.end());

	int n=s.size();
	for (int j=0; j<10; j++)
		d[0][j]=1;
	for (int i=1; i<n; i++)
		for (int j=0; j<10; j++)
		{
			int sum = j + s[i-1] - '0';
			d[i][j]+=d[i-1][sum/2];
			if (sum%2)
				d[i][j]+=d[i-1][sum/2+1];
		}

	int sum = 0;
	for (int i=0; i<10; i++)
		sum+=d[n-1][i];

	if (create(t))
		sum--;

	cout<<sum<<endl;

	return 0;
}
