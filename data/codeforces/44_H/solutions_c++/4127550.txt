#include<cstdio>
#include<cstring>
#include<queue>
#include<vector>
#include<iostream>
#include<algorithm>
using namespace std;

typedef long long i64;
i64 d[55][12];
int n;
char s[55];
i64 dp(int pos,int pre)
{
	if(d[pos][pre]!=-1)	return d[pos][pre];
	if(pos==n)	return d[pos][pre]=1;
	int nex=pre+(s[pos]-'0');
	if(nex&1)
		return d[pos][pre]=dp(pos+1,nex/2)+dp(pos+1,(nex+1)/2);
	return d[pos][pre]=dp(pos+1,nex/2);
}
bool ok(int pos,int pre)
{
	if(pos==n)	return true;
	int nex=pre+(s[pos]-'0');
	if(nex/2==(s[pos]-'0'))
		return ok(pos+1,nex/2);
	if(nex%2==1&&nex/2+1==(s[pos]-'0'))
		return ok(pos+1,nex/2+1);
	return false;
}
int main()
{
	scanf("%s",s);
	n=strlen(s);
	memset(d,-1,sizeof(d));
	i64 ans=0;
	for(int i=0;i<10;++i)	ans+=dp(1,i);
	if(ok(1,s[0]-'0'))	ans--;
	cout<<ans<<endl;
	return 0;
}
			 	    	 	  		  	   	 	