#include<iostream>
#include<string>
#include<vector>
#include<algorithm>

using namespace std;

int n;
string str;

long long int dp[51][10];
bool mark[51][10];

long long int f(int r,int l)
{
    if (r == n-1)
        return 1;
    if (mark[r][l])
        return dp[r][l];
    mark[r][l] = 1;
    int next = (l + str[r+1] - '0');
    return dp[r][l] = f(r + 1 , next/2) + (next % 2 ? f(r+1,next/2 + 1) : 0);
}

int main()
{
    cin>>str;
    long long int ans = 0;
    n = str.size();
    for (int i=0;i<10;i++)
        ans += f(0,i);
    bool can = true;
    for (int i=0;i<n-1 && can;i++)
        if (str[i]-str[i+1] != 1  && str[i]-str[i+1] != -1 && str[i]-str[i+1] != 0)
            can = false;
    cout<<ans-can<<endl;
    return 0;
}