#include <string>
#include <iostream>
using namespace std;
string inp;
int n,t;
long long res;
long long d[100][100];
bool mark[100][100];
long long find(int a,int b)
{
	if (mark[a][b])
		return d[a][b];
	mark[a][b]=1;
	if (a==t)
		return d[a][b]=1;
	int temp=b+inp[a]-'0';
	if (temp%2==0)
		return d[a][b]=find(a+1,temp/2);
	else
		return d[a][b]=find(a+1,(temp+1)/2)+find(a+1,(temp-1)/2);
}
bool av(int a)
{
	int last=a;
	for (int i=1;i<t;i++)
	{
		int temp=last+inp[i]-'0';
		if (temp%2==0)
		{
		if ( inp[i]-'0'!=temp/2)
			return 0;
		last=temp/2;
		}
		else
		{
			if (inp[i]-'0' != (temp-1)/2 && inp[i]-'0' != (temp+1)/2)
				return 0;
			last=inp[i]-'0';
		}
	}
	return 1;
}
int main()
{
	cin>>inp;
	t=inp.size();
	for (int i=0;i<10;i++)
		res+=find(1,i);
		if (av(inp[0]-'0'))
		{
			res--;
		}
	cout<<res<<endl;
	return 0;
}
