import sys
from random import randint
from time import time

def readIn():
    return map(lambda x:int(x),sys.stdin.readline().strip('\n').split(" "))

n,=readIn()
costs=readIn()
m,=readIn()
roadsOut=[]
roadsIn=[]
for i in xrange(0,n):
    roadsOut.append([])
    roadsIn.append([])

for i in xrange(0,m):
    u,v=readIn()
    roadsOut[u-1].append(v-1)
    roadsIn[v-1].append(u-1)

notAccountedFor=set(range(0,n))
cycles=[]
while len(notAccountedFor)>0:
    currentOut=set()
    currentIn=set()
    seed=notAccountedFor.pop()
    queue=[seed]
    currentOut.add(seed)
    while len(queue)>0:
        look=queue.pop()
        for x in roadsOut[look]:
            if x not in currentOut and x in notAccountedFor:
                currentOut.add(x)
                queue.append(x)
    queue=[seed]
    currentIn.add(seed)
    while len(queue)>0:
        look=queue.pop()
        for x in roadsIn[look]:
            if x not in currentIn and x in notAccountedFor:
                currentIn.add(x)
                queue.append(x)
    current=currentOut.intersection(currentIn)
    notAccountedFor-=current
    cycles.append(current)
#print cycles
minCost=0
possibilities=1
for x in cycles:
    numMins=0
    minPrice=10000000000
    costSet=map(lambda i:costs[i],x)
    for y in costSet:
        if y<minPrice:
            minPrice=y
            numMins=1
        elif y==minPrice:
            numMins+=1
    minCost+=minPrice
    possibilities=(numMins*possibilities)%1000000007

print minCost,possibilities%1000000007
