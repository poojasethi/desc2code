#include<bits/stdc++.h>
using namespace std;
#define mod 1000000007
vector<int>v[100010];
vector<int>v1[100010];
long long ans=0;
long long counter=1;
long long y=1;
int visit[100010],n;
long long cost[100010];
stack<int>s;
long long mini=100000000000L;
void dfs(int x)
{
	visit[x]=1;
	for(int i=0;i<v[x].size();i++)
		if(visit[v[x][i]]==0)
			dfs(v[x][i]);
	s.push(x);
}
void dfs1(int x)
{
	//cout<<x<<endl;
	visit[x]=1;
	if(mini>cost[x])
	{
		mini=cost[x];
		y=1;
	}
	else if(mini==cost[x])
		y++;
	for(int i=0;i<v1[x].size();i++)
		if(visit[v1[x][i]]==0)
			dfs1(v1[x][i]);
			
}
void solve()
{
	for(int i=1;i<=n;i++)
		if(visit[i]==0)
			dfs(i);
	int x;
	memset(visit,0,sizeof(visit));
	while(!s.empty())
	{
		x=s.top();
		s.pop();
		if(visit[x]==0)
		{
			dfs1(x);
			ans+=mini;
			counter=(counter*y)%mod;
			//cout<<x<<" "<<mini<<endl;
			y=1;
			mini=100000000000L;
		}	
	}
	cout<<ans<<" "<<counter<<endl;
}
int main()
{
	int m,i,x,y;
	cin>>n;
	for(i=1;i<=n;i++)
		scanf("%lld",&cost[i]);
	cin>>m;
	for(i=0;i<m;i++)
	{
		scanf("%d%d",&x,&y);
		v[x].push_back(y);
		v1[y].push_back(x);
	}
	solve();
	return 0;
}
