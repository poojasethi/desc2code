#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
const int mod = (int) 1e9 + 7;
using namespace std;

typedef int arr32[1000010];

arr32 c, next, g, vis, val, q, in, slf, dmp;
long long ans = 0, way = 1;
int n, m, x, y, tA, dE, ap;

void link(int x, int y)  {
	c[++ap] = y, next[ap] = g[x], g[x] = ap;
}
void dfs(int z)  {
	vis[z] = 1, q[++tA] = z, in[z] = 1;  slf[z] = dmp[z] = ++dE;
	for (int x = g[z]; x; x = next[x])
		if (!vis[c[x]])  dfs(c[x]), slf[z] = min(slf[z], slf[c[x]]);
		else  if (in[c[x]])  slf[z] = min(slf[z], dmp[c[x]]);
	if (slf[z] == dmp[z])  {
	  int res = (int) 1e9 + 10, cnt = 0;
		do  {
			if (val[q[tA]] == res)  cnt++;
			else  if (val[q[tA]] < res)  res = val[q[tA]], cnt = 1;
			in[q[tA]] = 0;
		}
		while (q[tA--] != z);
		ans += res;
		way *= cnt;
		way %= mod;
	}
}
int main()  {
	//freopen("C.in", "r", stdin);
	//freopen("C.out", "w", stdout);

	scanf("%d", &n);
	for (int i = 1; i <= n; ++i)  scanf("%d", val + i);
	scanf("%d", &m);
	for (int i = 1; i <= m; ++i)  {
		scanf("%d %d", &x, &y);
		link(x, y);
	}
	for (int i = 1; i <= n; ++i)
		if (!vis[i])  dfs(i);

	cout << ans << " " << way << endl;
}
