#include<bits/stdc++.h>
using namespace std;
int n;
stack <int> S;
vector <int> G[100010];
vector <int> T[100010];
int wt[100010];
vector <int> V;
bool visited[100005]={0};
bool visited1[100005]={0};
long long mod=1000000007;
void dfs1(int v)
{
	V.push_back(wt[v]);
	//printf("%d ",v);
	
	int i;
	visited1[v]=1;
	for(i=0;i<T[v].size();i++)
	{
		if(!visited1[T[v][i]])
			dfs1(T[v][i]);
	}
	
}

void dfs(int v)
{
	int i;
	visited[v]=1;
	for(i=0;i<G[v].size();i++)
	{
		if(!visited[G[v][i]])
			dfs(G[v][i]);
	}
	//printf("%d\n",v);
	S.push(v);
}
int main()
{
	int i,j,fl,m,x,y;
	long long ans=1,sum=0;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	{
		scanf("%d",&wt[i]);
	}

	scanf("%d",&m);
	for ( i = 0; i < m; ++i)
	{
		scanf("%d%d",&x,&y);
		G[x].push_back(y);
		T[y].push_back(x);
	}
	for(i=1;i<=n;i++)
	{
		if(!visited[i])
			dfs(i);
	}
	while(!S.empty())
	{	
		if(!visited1[S.top()])
		{	int temp=0;
			V.clear();
			dfs1(S.top());
			sort(V.begin(), V.end());
			sum+=V[0];
			for(i=1;i<V.size();i++)
			{
				if(V[i]!=V[i-1])
					break;
				temp++;
			}
			
			ans=(ans*(temp+1))%mod;
		}
		S.pop();
	}
	printf("%lld %lld\n",sum,ans);
	return 0;
}
