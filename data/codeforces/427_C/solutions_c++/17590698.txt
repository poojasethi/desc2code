#include <bits/stdc++.h>
using namespace std;
int visited[100100],visited2[100010];
long long ma,level[100010];
map<long long,long long>name;
vector<int>vc[100100],store,graph[100010];
void dfs(int v)
{
    visited[v]=1;
    for(int i=0;i<vc[v].size();i++){
        int w=vc[v][i];
        if(visited[w]==0){
            dfs(w);
        }
    }
    store.push_back(v);

}
void dfs2(int v)
{
    visited2[v]=1;
    if(level[v]<ma)ma=level[v];
    name[level[v]]++;
    for(int i=0;i<graph[v].size();i++){
      int   w=graph[v][i];
        if(visited2[w]==0){
            dfs2(w);
        }
    }


}
int main()
{
   int i,j,k,l,m,n;
   long long mul=1,sum=0;
   cin>>n;
   for(i=1;i<=n;i++)scanf("%I64d",&level[i]);
   cin>>m;
   for(i=1;i<=m;i++){
    scanf("%d%d",&l,&k);
    vc[l].push_back(k);
    graph[k].push_back(l);
   }
   for(i=1;i<=n;i++){
    if(visited[i]==0){
        dfs(i);
    }
   }
    for(i=store.size()-1;i>=0;i--){
        k=store[i];
        if(visited2[k]==0){
                name.clear();
                ma=214748364747888;
            dfs2(k);
            sum=sum+ma;
        mul=(mul*name[ma])%1000000007;

        }

    }
    printf("%I64d %I64d\n",sum,mul%1000000007);
}

						 	   	 	    		 			 	   		