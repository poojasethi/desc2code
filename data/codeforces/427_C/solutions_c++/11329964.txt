# include <bits/stdc++.h>

using namespace std;

typedef long long int ll;

const int maxn = 1e5 + 85;
int n, m, minn, cnt;
int mod = 1e9 + 7;
int c[maxn];
bool mark[maxn];
vector <int> adj1[maxn];
vector <int> adj2[maxn];
stack <int> st;

void dfs1(int v){
	mark[v] = true;
	for(int i=0 ; i<adj1[v].size() ; i++){
		int u = adj1[v][i];
		if(!mark[u])
			dfs1(u);
	}
	st.push(v);
}

void dfs2(int v){
	mark[v] = true;
	
	if(c[v] < minn)
		minn = c[v] , cnt = 0;
	
	if(c[v] == minn)
		cnt++;
	
	for(int i=0 ; i<adj2[v].size() ; i++){
		int u = adj2[v][i];
		if(!mark[u])
			dfs2(u);
	}
}

int main(){
	cin >> n;
	for(int i=1 ; i<=n ; i++)
		cin >> c[i];
	cin >> m;
	for(int i=0 ; i<m ; i++){
		int fi, se;
		cin >> fi >> se;
		adj1[fi].push_back(se);
		adj2[se].push_back(fi);
	}

	for(int i=1 ; i<=n ; i++)
		if(!mark[i])
			dfs1(i);

	memset(mark , 0 , sizeof mark);
	
	ll ans1 = 0 , ans2 = 1;
	while(st.size()){
		int v = st.top();
		st.pop();
		minn = 1e9 + 10;
		if(!mark[v]){
			dfs2(v);
			ans1 += minn;
			ans2 = (ans2 * cnt) % mod;
		}
	}

	cout << ans1 <<" "<< ans2 << endl;

	return 0;
}
