#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <vector>
#include <cmath>
using namespace std;
typedef long long ll;
typedef double D;
const int N=300010;
const int mod=1000000007;
int n,m,c[N],g[N],to[N],nxt[N],tot;
int index,dfn[N],low[N],heap[N],t;
ll ans,way;
bool f[N],in[N];
void addedge(int x,int y){to[++tot]=y;nxt[tot]=g[x];g[x]=tot;}
void Tarjan(int x){
  dfn[x]=low[x]=++index;
  in[heap[++t]=x]=f[x]=1;
  for (int k=g[x];k;k=nxt[k]) if (!f[to[k]]) {
    Tarjan(to[k]);
    low[x]=min(low[x],low[to[k]]);
  } else if (in[to[k]]) low[x]=min(low[x],dfn[to[k]]);
  if (dfn[x]==low[x]){
    ll tmp=100000000000LL,num=0;
    while (heap[t+1]!=x){
      if (c[heap[t]]<tmp) tmp=c[heap[t]],num=1;
      else if (c[heap[t]]==tmp) num++;
      in[heap[t--]]=0;
    }
    ans+=tmp;
    way=((ll)way*(ll)num)%mod;
  }
}
int main(){
  int i,x,y;
  for (scanf("%d",&n),i=1;i<=n;i++) scanf("%d",&c[i]);
  for (scanf("%d",&m),i=1;i<=m;i++) scanf("%d%d",&x,&y),addedge(x,y);
  for (index=ans=0,way=i=1;i<=n;i++) if (!f[i]) Tarjan(i);
  printf("%I64d %I64d\n",ans,way);
  return 0;
}
  
  
