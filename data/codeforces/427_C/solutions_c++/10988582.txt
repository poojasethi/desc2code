#include <bits/stdc++.h>
using namespace std; 

#define mod 1000000007

int mn, cnt;
int cost[100010], vis[100010];
vector <int> order, edge[100010], rev[100010];

void DFS2(int u) {
	vis[u] = 0;

	if(cost[u] < mn) { mn = cost[u]; cnt = 1; }
	else if(cost[u] == mn) ++cnt;

	for(int i = 0, s = rev[u].size(); i < s; ++i) if(vis[rev[u][i]]) DFS2(rev[u][i]);
}

void DFS1(int u) {
	vis[u] = 1;
	for(int i = 0, s = edge[u].size(); i < s; ++i) if(!vis[edge[u][i]]) DFS1(edge[u][i]);
	order.push_back(u);
}

int main() {
	int n, m, u, v;

	scanf("%d", &n);
	for(int i = 1; i <= n; ++i) scanf("%d", &cost[i]);

	scanf("%d", &m);
	while(m--) {
		scanf("%d%d", &u, &v);
		edge[u].push_back(v);
		rev[v].push_back(u);
	}

	for(int i = 1; i <= n; ++i) if(!vis[i]) DFS1(i);

	long long c = 0LL, way = 1LL;
	for(int i = 0; i < n; ++i) {
		u = order[n-1-i];

		if(vis[u]) {
			mn = INT_MAX;
			cnt = 1;

			DFS2(u);
			c += mn;
			way *= (long long) cnt;
			way %= mod;
		}
	}

	printf("%lld %lld\n", c, way);

	return 0;
}
