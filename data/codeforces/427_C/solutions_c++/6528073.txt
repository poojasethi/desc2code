#include <iostream>
#include <vector>
using namespace std;

#define NMax 100010
#define inf 2100000000
#define MOD 1000000007
#define f cin
#define g cout

int n,m,nr;
int viz[NMax],postordine[NMax];
vector<int> v[NMax],w[NMax];
int cost[NMax];
int mn,ap;
long long sum,prod=1LL;

void dfs(int s)
{
    int i,e;
    e=v[s].size();
    viz[s]=1;
    for(i=0;i<e;i++) if(!viz[ v[s].at(i) ]) dfs(v[s].at(i));
    postordine[++nr]=s;
}

void dfst(int s)
{
    int i,e;
    e=w[s].size();
    viz[s]=0;

    if(cost[s]<mn)
    {
        mn=cost[s];
        ap=1;
    }
    else if(cost[s]==mn) ap++;

    for(i=0;i<e;i++) if(viz[ w[s].at(i) ]) dfst(w[s].at(i));

}

int main()
{
    int i,a,b;

    f>>n;
    for(i=1;i<=n;i++) f>>cost[i];

    f>>m;
    for(i=1;i<=m;i++)
    {
        f>>a>>b;
        v[a].push_back(b);
        w[b].push_back(a);
    }

    for(i=1;i<=n;i++) if(!viz[i]) dfs(i);

    for(i=n;i>=1;i--) if(viz[postordine[i]])
    {
        ap=0;
        mn=inf;
        dfst(postordine[i]);
        sum+=(long long)mn;
        prod=(prod*ap)%MOD;
    }

    g<<sum<<" "<<prod<<"\n";

    return 0;
}
