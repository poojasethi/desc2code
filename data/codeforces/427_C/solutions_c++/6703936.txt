#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

const int MOD = 1e9+7;
const int N = 222222;
int n,m , cc=1;
long long cnt=1,ans;
int a[N],dns[N],low[N],sta[N],fro;
vector<int> vec[N];
void dfs(int u){
    int minc=dns[u]=low[u]=++cc;
    sta[fro++]=u;
    int w;
    for(int i = 0;i < vec[u].size();i++){
        if(!dns[w=vec[u][i]])
            dfs(w);
        if(low[w]<minc)minc=low[w];
    }
    if(minc<low[u]){
        low[u]=minc;return;
    }
    int tc=0,min_a=0x3f3f3f3f;
    do{
        low[w=sta[--fro]]=n+1;
        if(a[w] < min_a){ min_a = a[w]; tc=1; }
        else if(a[w] == min_a) tc++;
    }while(u!=w);
    ans += min_a;
    cnt = (long long )cnt * tc % MOD;
}
int main(){
    scanf("%d",&n);
    for(int i = 1;i <= n;i++)
        scanf("%d",a+i);
    scanf("%d",&m);
    for(int i=0,a,b;i < m;i++){
        scanf("%d %d",&a,&b);
        vec[a].push_back(b);
    }
    for(int i = 1;i <= n;i++ ){
        if(!dns[i])
            dfs(i);
    }
    cout << ans << " "<<cnt<<endl;
    return 0;
}
