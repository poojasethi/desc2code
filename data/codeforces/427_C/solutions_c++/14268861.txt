#include <iostream>
#include <algorithm>
#include <set>
#include <queue>
#include <map>
#include <vector>

using namespace std;
const int Mod=1e9+7;
vector<int> g1[100010];
vector<int> g2[100010];
bool vis1[100010];
bool vis2[100010];
int a[100010];
int c,mincost,cnt;
long long anscost;
int ansfa=1;
int q[100010];
void dfs1(int n){
	vis1[n]=true;
	for (int i=0;i<g1[n].size();i++){
		if (vis1[g1[n][i]]==false){
			dfs1(g1[n][i]);
		}
	}
	c++;
	q[c]=n;
}
void dfs2(int n){
	vis2[n]=1;
	if (a[n]<mincost){
		cnt=1;
		mincost=a[n];
	}
	else if (a[n]==mincost){
		cnt++;
	}
	for (int i=0;i<g2[n].size();i++){
		if (vis2[g2[n][i]]==0){
			dfs2(g2[n][i]);
		}
	}
}
int main(){
	int n;
	cin>>n;
	for (int i=1;i<=n;i++){
		cin>>a[i];
	}
	int m;
	cin>>m;
	for (int i=1;i<=m;i++){
		int x,y;
		cin>>x>>y;
		g1[x].push_back(y);
		g2[y].push_back(x);
	}
	for (int i=1;i<=n;i++){
		if(vis1[i]==0){
			dfs1(i);
		}
	}
	for (int i=n;i>=1;i--){
		if (vis2[q[i]]==0){
			mincost=1e9;
			cnt=0;
			dfs2(q[i]);
			anscost+=mincost;
			ansfa=((long long)ansfa*cnt)%Mod;
		}
	}
	cout<<anscost<<" "<<ansfa%Mod<<endl;
	return 0;
}