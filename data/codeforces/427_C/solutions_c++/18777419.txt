#include<bits/stdc++.h>
using namespace std;
#define maxm 100500
const int mod =1000000007;
const int inf = 1000000009;
int n,m;
vector<int> adj[maxm], radj[maxm];
int cost[maxm];

bool visited[maxm];
vector<int> v;
int g[maxm], gn;
int opt, optc;
void dfs(int v_) {
	visited[v_]=true;
	for(int i=0;i<adj[v_].size();i++) {
		int u = adj[v_][i];
		if(visited[u])
			continue;
		dfs(u);
	}
	v.push_back(v_);
}
void rdfs(int v_) {
	visited[v_]=true;
	g[v_]=gn;
	if(cost[v_]<opt) {
		optc=0;
		opt=cost[v_];
	}
	if(cost[v_]==opt) 
		optc++;
	int u;
	for(int i=0;i< radj[v_].size();i++) {
		u = radj[v_][i];
		if(visited[u])
			continue;
		rdfs(u);
	}
}

void solve() {
	long long a1=0,a2=1;
	v.clear();
	for(int v_=1;v_<=n;v_++) {
		if(!visited[v_])	
			dfs(v_);
	}
	memset(visited,0,sizeof(visited));
	gn=0;
	for(int i=n-1;i>=0;i--) {
		int v_ = v[i];
		if(!visited[v_]) {
			optc =0;
			opt=inf;
			rdfs(v_);
			gn++;
			a1+= opt;
			a2=(a2*optc)%mod;
		}
	}
	cout << a1 << " " << a2 << endl;
}

int main() {
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%d",&cost[i]);
	scanf("%d",&m);
	for(int i=0;i<m;i++) {
		int x,y;
		scanf("%d %d",&x,&y);
		adj[x].push_back(y);
		radj[y].push_back(x);
	}
	solve();
	return 0;
}
