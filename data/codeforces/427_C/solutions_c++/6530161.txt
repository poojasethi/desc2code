#include<stdio.h>
#include<iostream>
#include<vector>
#include<algorithm>
#include<stack>
#define MOD 1000000007

using namespace std;

stack<int> s;
int visited[100004];
int cycle[100004];
vector<int> edge[100004];
vector<int> edget[100004];
int cost[100004];
int n;
long long ct,mn;
void dfs(int node)
{
	int i;
	visited[node]=1;
	for(i=0;i<edge[node].size();i++)
	{
		if(!visited[edge[node][i]])	dfs(edge[node][i]);
	}
	s.push(node);
}

void dfs2(int node)
{
	int i;
	visited[node]=1;
	if(cost[node]==mn)	ct++;
	else if(cost[node]<mn)
	{
		ct=1;
		mn=cost[node];
	}
	for(i=0;i<edget[node].size();i++)
	{
		if(!visited[edget[node][i]])	dfs2(edget[node][i]);
	}
}

int main()
{
	int i,j,k,m;
	long long int ans=1,money=0;;
//	string s;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	{
		scanf("%d",&cost[i]);
	}
	scanf("%d",&m);
	for(i=0;i<m;i++)
	{
		scanf("%d%d",&j,&k);
		edge[j].push_back(k);
		edget[k].push_back(j);
	}
	for(i=1;i<=n;i++)	visited[i]=0;
	for(i=1;i<=n;i++)
	{
		if(!visited[i])	dfs(i);
	}
	for(i=1;i<=n;i++)	visited[i]=0;
	while(!s.empty())
	{
		i=s.top();
		s.pop();
		if(!visited[i])
		{
			ct=0;
			mn=10000000000;
			dfs2(i);
			ans=(ans*ct)%MOD;
			money+=mn;
		}
	}
	printf("%lld %lld\n",money,ans);
	return 0;
}
