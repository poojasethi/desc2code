#include <bits/stdc++.h>

using namespace std;
#define f(i, n) for (int i = 0; i < (int)(n); i++)
#define Z size()
typedef long long ll;

const int X=1e5+9;
bool vis[X],vss[X];
int cost[X];
ll mod=1000000007;
map<int,vector<int> > adj,radj;
map<int,int> cmin;
vector<int> tsort;

void dfs(int j){
vis[j]=1;

f(i,radj[j].Z)
if(!vis[radj[j][i]] )
    dfs(radj[j][i]);

tsort.push_back(j);
}

void dfs2(int j){
vss[j]=1;
cmin[cost[j]]++;
f(i,adj[j].Z)
if(!vss[adj[j][i]] )
dfs2(adj[j][i]);
}

int main()
{
    ll sum=0,ways=1;
    int m,n,a,b;
    cin>>n;
    for(int i=1; i<=n; i++)cin>>cost[i];
    cin>>m;
    f(i,m){
    cin>>a>>b;
    adj[a].push_back(b);
    radj[b].push_back(a);
    }

    for(int i=1; i<=n; i++)
    if(!vis[i])dfs(i);

    for(int i=tsort.Z-1; i>-1; i--){
        if(!vss[tsort[i]]){
            dfs2(tsort[i]);
       sum+=cmin.begin()->first;
       ll g=cmin.begin()->second;
       ways*=g;
       ways%=mod;
       cmin.clear();
    }
    }
    cout<<sum<<" "<<ways<<endl;
    return 0;
}
