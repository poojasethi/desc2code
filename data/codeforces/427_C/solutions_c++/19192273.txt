#include <bits/stdc++.h>
using namespace std;
int n , cost[300007];
bool vis[300007];
vector <int> g[300007] , gr[300007] , st;
map <int , int> comp;

void dfs_ord (int v)
{
	vis[v] = 1;
	for (int i = 0;i < g[v].size();i ++)
	{
		int to = g[v][i];
		if (!vis[to])
			dfs_ord (to);
	}
	st.push_back (v);
}
void dfs (int v)
{
	vis[v] = 1;
	comp[cost[v]] ++;       
	for (int i = 0;i < gr[v].size();i ++)
	{
		int to = gr[v][i];
		if (!vis[to])
		dfs (to);
	}
}

int main()
{               
	scanf ("%d" , &n);
	for (int i = 1;i <= n; i++)	
		scanf ("%d" , &cost[i]);

	int x,y,m;
	scanf ("%d",&m);
	
	for (int i = 1;i <= m;i ++)
	{ 
		scanf ("%d %d" , &x , &y);
		g[x].push_back (y);
		gr[y].push_back (x);
	}
	
	for (int i = 1;i <= n;i ++)
	{
		if (!vis[i])
			dfs_ord(i);	
	}
	long long int sum = 0 , ans = 1;
	memset (vis, 0 , sizeof (vis));

	for (int i = n - 1;i >= 0;i --)
	{
		int v = st[i];
		if (!vis[v])
		{
			dfs (v);
			sum += comp.begin() -> first;
			ans *= comp.begin() -> second;
			ans =ans%1000000007;
			comp.clear();     
		}
	}
	cout<<sum<<" "<<ans<<endl;
	return 0;
}	