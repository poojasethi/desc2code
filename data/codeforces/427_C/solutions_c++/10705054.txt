#include<iostream>
#include<vector>
using namespace std;
long long a[100001];
vector<long long> v[100001];
vector<long long> u[100001];
long long vis[100001];
long long stack[100001];
long long top=-1;
long long mn,count;
long long k=1000000007;
void dfs(long long i)
{
	vis[i]=1;
	for(long long j=0;j<v[i].size();j++)
		if(vis[v[i][j]]==0)
		{
			dfs(v[i][j]);
			stack[++top]=v[i][j];
		}
}
void revdfs(long long i)
{
	if(a[i]==mn)
		count++;
	if(a[i]<mn)
	{
		mn=a[i];
		count=1;
	}
	vis[i]=1;
	for(long long j=0;j<u[i].size();j++)
		if(vis[u[i][j]]==0)
			revdfs(u[i][j]);
}
int main()
{
	long long n;
	cin>>n;
	for(long long i=1;i<=n;i++)
		cin>>a[i];
	long long m;
	cin>>m;
	while(m--)
	{
		long long x,y;
		cin>>x>>y;
		v[x].push_back(y);
		u[y].push_back(x);
	}
	for(long long i=1;i<=n;i++)
		if(vis[i]==0)
		{
			dfs(i);
			stack[++top]=i;
		}
	for(long long i=1;i<=n;i++)
		vis[i]=0;
	long long ans=0,mul=1;
	while(top!=-1)
	{
		count=0;
		mn=a[stack[top]];
		if(vis[stack[top]]==0)
		{
			revdfs(stack[top]);
			ans+=mn;
			mul=((mul%k)*(count%k))%k;
		}
		top--;
	}
	cout<<ans<<" "<<mul;
	return 0;
}
