#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
using namespace std;
const int P=1000003;
const int maxn=2100;
int n,N,A[maxn];

namespace Ninit{
	char buf[maxn],*a=buf;
	void init(){
		int i,m;
		scanf("%s",a+1);
		if(a[1]=='*' || a[1]=='/')A[0]=1;
		a[0]='0',isdigit(a[1])?++a:a;
		m=strlen(a);
		for(i=0;;N+=A[n]){
			for(;i<m && isdigit(a[i]);++i);
			if(i==m)break;++A[++n];
			for(++i;i<m && !isdigit(a[i]);++i)
				if(++A[n],a[i]=='/' || a[i]=='*')A[0]=1;
			if(i==m)A[0]=1;
		}
	}
}

namespace Nsolve{
	int F[maxn][maxn],H[maxn][maxn];
	void solve(){
		int i,j;
		if(A[0])return printf("0\n"),void();
		F[0][0]=H[0][0]=1;
		for(i=1;i<=n;++i){
			for(j=A[i];j<=N;++j)
				F[i][j]=H[i-1][j-A[i]];
			for(j=N;j>=0;--j)H[i][j]=(H[i][j+1]+F[i][j])%P;	
		}
		cout<<H[n][0]<<endl;
	}
}

int main(){
	//freopen("A.in","r",stdin);
	Ninit::init();
	Nsolve::solve();
	return 0;
}
