// Stack DP
// スタック 動的計画法

#include<cstdio>
#include<cstdlib>
#include<cstring>

void Get(int &T)
{
	char C;bool F=0;
	for(;C=getchar(),C<'0'||C>'9';)if(C=='-')F=1;
	for(T=C-'0';C=getchar(),C>='0'&&C<='9';T=T*10+C-'0');
	F&&(T=-T);
}

char S[2005];
int N;

int M;
int F[2005];

void Init()
{
	gets(S+1);
	N=strlen(S+1);
}

#define Mod (1000003)

void Work()
{
	for(int i=1;i<=N;i++)
	{
		if(S[i]>='0'&&S[i]<='9')
			S[i]='9';
		if(S[i]=='-')S[i]='+';
		if(S[i]=='/')S[i]='*';
		if(S[i]=='*'&&S[i-1]!='9')
		{
			puts("0");
			exit(0);
		}
	}
	
	F[0]=1;
	
	for(int i=1;i<=N;i++)
	{
		if(S[i]=='9'&&S[i+1]=='9')
			continue;
		
		if(S[i]!='9')
		{
			M++;
			for(int i=M;i>=1;i--)
				F[i]=F[i-1];
			F[0]=0;
		}
		else
		{
			for(int i=M;i>=1;i--)
				(F[i-1]+=F[i])%=Mod;
		}
	}
}

void Output()
{
	printf("%d\n",F[0]);
}

int main()
{
	Init();
	Work();
	Output();
	return 0;
}