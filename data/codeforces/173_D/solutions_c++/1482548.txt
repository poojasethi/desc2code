#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

vector<int> a[100005];
int g[100005];
int u[100005];
int ans[100005];

void dfs(int x, int c) {
	u[x] = 1;
	g[x] = c;
	for(int i=0;i<(int)a[x].size();i++) {
		if(!u[a[x][i]]) dfs(a[x][i], 1-c);
	}
}

int n, m;
void OUTPUT_YES() {
	puts("YES");
	for(int i=1;i<=n;i++) printf("%d ", ans[i]);
	puts("");
}
void OUTPUT_NO() {
	puts("NO");
}

//Left 1 Right 2
bool case1(vector<int> &s, vector<int> &t) {
	int best=0;
	for(int i=0;i<(int)s.size();i++) if(a[s[best]].size() > a[s[i]].size()) best = i;
	int v = s[best];
	if((int)a[v].size()+2 > (int)t.size()) return false;
	memset(u, 0, sizeof(u));
	for(int i=0;i<(int)a[v].size();i++) u[a[v][i]] = 1;
	int cnt=1, ctr=0;
	ans[v] = 1;
	for(int i=0;i<(int)t.size() && ctr<2;i++) if(!u[t[i]]) ans[t[i]] = 1, ++ctr;
	++cnt;
	ctr=0;
	for(int i=0;i<(int)s.size();i++) {
		if(!ans[s[i]]) {
			ans[s[i]] = cnt;
			if(++ctr==3) { ++cnt; ctr=0; }
		}
	}
	for(int i=0;i<(int)t.size();i++) {
		if(!ans[t[i]]) {
			ans[t[i]] = cnt;
			if(++ctr==3) { ++cnt; ctr=0; }
		}
	}
	return true;
}

//Left 2 Right 1
bool cmp(int x, int y) {
	return a[x].size() < a[y].size();
}
bool case2(vector<int> &s, vector<int> &t) {
	sort(t.begin(), t.end(), cmp);
	if(t.size()<2 || s.size()<4) return false;
	if((int)a[t[1]].size() + 2 > (int)s.size()) return false;

	int cnt=1, ctr=0;
	memset(u, 0, sizeof(u));
	ans[t[0]] = 1; for(int i=0;i<(int)a[t[0]].size();i++) u[a[t[0]][i]]=1;
	for(int i=0;i<(int)s.size() && ctr<2;i++) if(!u[s[i]]) {++ctr; ans[s[i]] = 1;}
	ctr=0;
	cnt=2;
	memset(u, 0, sizeof(u));
	ans[t[1]] = 2; for(int i=0;i<(int)a[t[1]].size();i++) u[a[t[1]][i]] = 1;
	for(int i=0;i<(int)s.size() && ctr<2;i++) if(!u[s[i]]) {++ctr; ans[s[i]] = 2;}
	++cnt;
	ctr=0;
	for(int i=0;i<(int)s.size();i++) {
		if(!ans[s[i]]) {
			ans[s[i]] = cnt;
			if(++ctr==3) { ++cnt; ctr=0; }
		}
	}
	for(int i=0;i<(int)t.size();i++) {
		if(!ans[t[i]]) {
			ans[t[i]] = cnt;
			if(++ctr==3) { ++cnt; ctr=0; }
		}
	}
	return true;
}

int main(void) {
	scanf("%d%d", &n, &m);
	for(int i=0;i<m;i++) {
		int x, y;
		scanf("%d%d", &x, &y);
		a[x].push_back(y);
		a[y].push_back(x);
	}
	for(int i=1;i<=n;i++) if(!u[i]) dfs(i, 0);
	int w[2]={};
	vector<int> s[2];
	for(int i=1;i<=n;i++) {
		w[g[i]]++;
		s[g[i]].push_back(i);
	}
	if(w[0]%3==0 && w[1]%3==0) {
		int cnt=0;
		for(int i=0;i<2;i++)
			for(int j=0;j<(int)s[i].size();j+=3) {
				++cnt;
				ans[s[i][j]] = ans[s[i][j+1]] = ans[s[i][j+2]] = cnt;
			}
		OUTPUT_YES();
	} else {
		if(case1((w[0]%3==1? s[0]: s[1]), (w[0]%3==2? s[0]:s[1]))) OUTPUT_YES();
		else if(case2((w[0]%3==1? s[0]: s[1]), (w[0]%3==2? s[0]:s[1]))) OUTPUT_YES();
		else OUTPUT_NO();
	}
	return 0;
}
