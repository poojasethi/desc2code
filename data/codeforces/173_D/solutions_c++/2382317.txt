#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<string>
#include<cstdlib>
#include<functional>
#include<iostream>
#define fo(i,a,b) for(i=a;i<=b;i++)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define MP(a,b) make_pair(a,b)
#define clr(x,y) memset(x,y,sizeof x)
#define fi first
#define se second
#define sqr(z) ((z)*(z))
using namespace std;
typedef pair<int,int> PII;
const int oo=1047483647,maxn=110000;
int n,i,j,k,m,q,s1,s2,a[maxn],b[maxn],now,kind[maxn],du[maxn],ge,c[maxn];
bool sol,v[maxn],rt[maxn],flag;
struct node
{
	int next[2*maxn],y[2*maxn],g[maxn],tt;
	void add(int i,int j)
	{
		next[++tt]=g[i];
		g[i]=tt;
		y[tt]=j;
	}
}e;
void dfs(int x,int r)  //��bfs better
{
	v[x]=1;
	if (r==0) a[++s1]=x;
	else b[++s2]=x,rt[x]=1;
	for(int p=e.g[x];p;p=e.next[p])
	{
		if (!v[e.y[p]])
		{
			dfs(e.y[p],1-r);
		}
	}
}
void print()
{
    	printf("YES\n");
		fo(i,1,s1)
		if (kind[a[i]]==0)
		{
			if (ge%3==0) ++now;
			kind[a[i]]=now;ge++;
		}
		fo(i,1,s2)
		if (kind[b[i]]==0)
		{
            if (ge%3==0) ++now;
			kind[b[i]]=now;ge++;
		}
		fo(i,1,n)
		{
			if (i!=1) printf(" ");
			printf("%d",kind[i]);
		}
}
int link(int x)
{
		clr(v,1);
			for(int p=e.g[x];p;p=e.next[p])
			{
				int j=e.y[p];
				v[j]=0;
			}
			fo(i,1,n)
			if (v[i] && rt[x]!=rt[i] && kind[i]==0)
			{
				++ge;kind[i]=now;
				if (ge%3==0) break;
			}
}
int main()
{
	//freopen("1.in","r",stdin);
	scanf("%d%d",&n,&m);
	e.tt=0;clr(e.g,0);
	fo(i,1,m)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		e.add(x,y);e.add(y,x);
		du[x]--;du[y]--;
	}
	s1=s2=0;
	clr(v,0);
	fo(i,1,n)
	if (!v[i]) dfs(i,0);
	fo(i,1,n) if (rt[i]) du[i]+=s1;
	else du[i]+=s2;
	if (s1%3==0)
	{
		ge=0;now=0;
		print();
		return 0;
	} else
	{
		if (s1%3==2)
		{
			swap(s1,s2);
			memcpy(c,a,sizeof a);
			memcpy(a,b,sizeof b);
			memcpy(b,c,sizeof c);
		}
		fo(i,1,s1)
		if (du[a[i]]>=2) break;
		if (du[a[i]]>=2)
		{
			now=1;ge=1;kind[a[i]]=1;
			link(a[i]);
			print();
			flag=1;
		}
		if (flag) return 0;
		int tp=0,w[3];
		for(i=1;i<=s2 && tp<2;i++)
		if (du[b[i]]>=2)w[++tp]=b[i];
		if (tp==2)
		{
			now=ge=1;
			kind[w[1]]=now;
			link(w[1]);
			now=2;
			kind[w[2]]=now;ge++;
			link(w[2]);
			print();
			flag=1;
		}
		if (flag) return 0;
	}
	printf("NO");
	return 0;
}
