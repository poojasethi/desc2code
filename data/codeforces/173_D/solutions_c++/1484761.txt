//SkyHawk, CMC MSU

#include <iostream>
#include <list>
#include <string>
#include <vector>
#include <iterator>
#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <time.h>
#include <set>
#include <deque>

using namespace std;

#define FOR(i,n) for(int i = 0;i < n;++i)
#define EPS 0.00000001
#define INF 1000000000ll

int n,m;
vector<int> v[100010];
int used[100010];
int ans[100010];
int temp[100010];

void dfs(int k)
{
	FOR(i,v[k].size())
		if(!used[v[k][i]])
		{
			used[v[k][i]] = used[k]==1?2:1;
			dfs(v[k][i]);
		}
}

void simpleSolve(int start)
{
	int count = 0;
	FOR(i,n)
		if(used[i] == 1)
		{
			ans[i] = start;
			++count;
			if(count == 3)
			{
				count = 0;
				++start;
			}
		}
	FOR(i,n)
		if(used[i] == 2)
		{
			ans[i] = start;
			++count;
			if(count == 3)
			{
				count = 0;
				++start;
			}
		}
	cout << "YES" << endl;
	FOR(i,n)
		cout << ans[i] << " ";
	cout << endl;
}

int main(int argc, char** argv)
{
	//freopen("IntegerArray.txt","r",stdin);
	cin >> n >> m;
	int a,b;
	FOR(i,m)
	{
		cin >> a >> b;
		--a,--b;
		v[a].push_back(b);
		v[b].push_back(a);
	}
	int s1 = 0;
	int s2 = 0;
	FOR(i,n)
	{
		if(!used[i])
		{
			used[i] = 1;
			dfs(i);
		}
		s1 += (used[i] == 1);
		s2 += (used[i] == 2);
	}
	//cerr << s1 << " " << s2 << endl;
	if(s1%3 == 1)
	{
		FOR(i,n)
			if(used[i] == 1 && v[i].size()<s2-1)
			{
				ans[i] = 1;
				used[i] = 0;
				FOR(j,v[i].size())
					temp[v[i][j]] = 1;
				int stop = 0;
				FOR(j,n)
					if(!temp[j] && j!=i && used[j]==2)
					{
						++stop;
						ans[j] = 1;
						used[j] = 0;
						if(stop == 2)
							break;
					}
				simpleSolve(2);
				return 0;
			}
		int gh = 0;
		//cerr << "#";
		FOR(i,n)
		{
			if(used[i] == 2 && v[i].size()<s1-1)
			{
				++gh;
				ans[i] = gh;
				used[i] = 0;
				//cerr << "$$$" << i << endl;
				memset(temp,0,sizeof(int)*100010);
				//cerr << "$";
				FOR(j,v[i].size())
				{
					temp[v[i][j]] = 1;
					//cerr << v[i][j] << endl;
				}
				int stop = 0;
				FOR(j,n)
					if(!temp[j] && j!=i && used[j]==1)
					{
						//cerr << "$$$" << j << endl;
						++stop;
						ans[j] = gh;
						used[j] = 0;
						if(stop == 2)
							break;
					}
				if(gh == 2)
				{
					simpleSolve(3);
					return 0;
				}
			}
		}
		cout << "NO" << endl;
		return 0;
	}
	else if(s2%3 == 1)
	{
		FOR(i,n)
			if(used[i] == 2 && v[i].size()<s1-1)
			{
				ans[i] = 1;
				used[i] = 0;
				FOR(j,v[i].size())
					temp[v[i][j]] = 1;
				int stop = 0;
				FOR(j,n)
					if(!temp[j] && j!=i && used[j]==1)
					{
						++stop;
						ans[j] = 1;
						used[j] = 0;
						if(stop == 2)
							break;
					}
				simpleSolve(2);
				return 0;
			}
		int gh = 0;
		FOR(i,n)
			if(used[i] == 1 && v[i].size()<s2-1)
			{
				//cerr << v[i].size() << " " << i << " " << used[i] << endl;
				++gh;
				ans[i] = gh;
				used[i] = 0;
				memset(temp,0,sizeof(int)*100010);
				FOR(j,v[i].size())
					temp[v[i][j]] = 1;
				int stop = 0;
				FOR(j,n)
					if(!temp[j] && used[j]==2)
					{
						++stop;
						ans[j] = gh;
						used[j] = 0;
						if(stop == 2)
							break;
					}
				if(gh == 2)
				{
					simpleSolve(3);
					return 0;
				}
			}
		cout << "NO" << endl;
		return 0;
	}
	else 
	{
		simpleSolve(1);
		return 0;
	}
	return 0;
}		
