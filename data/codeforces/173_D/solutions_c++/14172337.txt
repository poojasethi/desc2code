#include<cstdio>
#include<algorithm>
using namespace std;
const int maxn = 101011;
int n,m,x,s,tot;
int g[maxn],y[maxn*2],next[maxn*2],d[maxn],c[maxn],u[maxn],lis[maxn];
void ins(int i, int j)
{
     next[++tot] = g[i]; g[i] = tot; y[tot] = j;
}
void bfs(int r) {
     c[r] = 0;
     lis[1] = r;
     for (int p1=1,q1=1; p1 <= q1; ++p1) {
         r = lis[p1];
         for (int p = g[r]; p; p = next[p]) 
             if (c[y[p]] == -1) {
                c[y[p]] = c[r]^1;
                lis[++q1] = y[p];
             }
     }
}
int main() {
    scanf("%d%d", &n, &m);
    for (int i = 1,x1,y1; i <= m; ++i) {
        scanf("%d%d", &x1, &y1);
        ins(x1,y1);  ins(y1,x1);
        ++d[x1], ++d[y1];
    }
    fill(c + 1, c + n + 1, -1);
    for (int i = 1; i <= n; ++i) {
        if (c[i] == -1) bfs(i);
        s += c[i];
    }
    x = -1;
    if (s % 3 != 0) {
       int y1;
       if (s % 3 == 1) x = 1,y1 = n-s; else x = 0, y1 = s;
       for (int i = 1; i <= n; ++i)
           if (c[i] == x && d[i] <= y1-2) {
              u[i] = n;
              for (int p = g[i]; p; p = next[p]) u[y[p]] = 1;
              for (int j = 1,t = 2; j <= n && t; ++j) 
                  if (!u[j] && c[j]!= x) --t, u[j] = n;
              x = -1;
              break;
           }
       if (x != -1) {
          y1 = n-y1;
          int ts[2],t=2;
          for (int i = 1; t&& i <= n; ++i) 
              if (c[i]!=x && d[i] <= y1-2) ts[2-t] = i,--t;
          if (t == 0) {
             for (int i; t < 2; ++t) {
                 i = ts[t];
                 for (int j = 1; j <= n; ++j) if (u[j]==1) u[j] = 0;
                 
                 for (int p = g[i]; p; p = next[p]) u[y[p]] = u[y[p]]?u[y[p]]:1;
                 for (int j = 1,t1 = 2; j <= n && t1; ++j) 
                     if (!u[j] && c[j]== x) --t1, u[j] = n-t;
                 u[i] = n-t;
             }
             x = -1;
          }
       }
    }
    if (x != -1) printf("NO\n");
    else {
         int t,i;
         for (t = 2,i = 1; i <= n; ++i) if (!c[i] && u[i]<2) u[i] = ++t;
         for (i = 1; i <= n; ++i) if (c[i] && u[i] < 2) u[i] = ++t;
         printf("YES\n");
         for (int i = 1; i <= n; ++i) printf("%d ", u[i]/3);
         printf("\n");
    }
    return 0;
}
