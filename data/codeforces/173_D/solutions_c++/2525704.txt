#include <cstdio>
#include <cstring>
#include <algorithm>
#include <ctime>
#include <iostream>
#include <vector>
using namespace std;

typedef unsigned int USN;
typedef long long LL;
typedef unsigned long long ULL;

#define rep(i,l,r) for (int i=(l); i<=(r); i++)
#define repd(i,r,l) for (int i=(r); i>=(l); i--)

#define maxn 100010

vector<int> e[maxn], w[maxn];
int vis[maxn], c[maxn], l[maxn], which[maxn], final[maxn];

void dfs(int cur, int color)
{
	vis[cur]=color;
	for (vector<int>::iterator iter=e[cur].begin(); iter!=e[cur].end(); iter++)
		if (!vis[*iter])
			dfs(*iter,3-color);
}

void lemon()
{
	int n,m; scanf("%d%d",&n,&m);
	rep(i,1,n) e[i].clear();
	rep(i,1,m)
	{
		int x,y; scanf("%d%d",&x,&y);
		e[x].push_back(y); e[y].push_back(x);
	}
	memset(vis,0,sizeof vis);
	rep(i,1,n) if (!vis[i]) dfs(i,1);
	int left=0;
	rep(i,1,n) if (vis[i]==1) left++;
	if (left%3==0)
	{
		int k=1, s=0;
		rep(i,1,n)
			if (vis[i]==1)
			{
				final[i]=k; s++;
				if (s==3) s=0, k++;
			}
		rep(i,1,n)
			if (vis[i]==2)
			{
				final[i]=k; s++;
				if (s==3) s=0, k++;
			}
		printf("YES\n");
		rep(i,1,n) printf("%d ",final[i]); printf("\n");
		return;
	}
	if (left%3==2) 
	{ 
		rep(i,1,n) vis[i]=3-vis[i]; 
		left=n-left;
	}
	int right=n-left;
	
	int found=0, p;
	rep(i,1,n)
		if (vis[i]==1)
			if (e[i].size()<=right-2)
			{
				found=1; p=i;
				break;
			}
	
	if (found)
	{
		memset(c,0,sizeof c);
		for(vector<int>::iterator iter=e[p].begin(); iter!=e[p].end(); iter++) c[*iter]=1;
		final[p]=1; int s=1, k=1;
		rep(i,1,n) if (vis[i]==2 && !c[i]) { final[i]=1; s++; if (s==3) break; }
		s=0; k=2;
		rep(i,1,n)
			if (vis[i]==1 && !final[i])
			{
				final[i]=k; s++;
				if (s==3) s=0, k++;
			}
		rep(i,1,n)
			if (vis[i]==2 && !final[i])
			{
				final[i]=k; s++;
				if (s==3) s=0, k++;
			}
		printf("YES\n");
		rep(i,1,n) printf("%d ",final[i]); printf("\n");
		return;
	}
	
	right=0;
	rep(i,1,n) if (vis[i]==2) l[++right]=i;
	memset(c,0,sizeof c); int cl2=0;
	rep(i,1,n) w[i].clear();
	rep(i,1,n)
		if (vis[i]==1)
		{
			cl2++;
			for(vector<int>::iterator iter=e[i].begin(); iter!=e[i].end(); iter++) c[*iter]=cl2;
			rep(k,1,right) if (c[l[k]]!=cl2) w[l[k]].push_back(i);
		}
	
	int cnt=0;
	rep(k,1,right) if (w[l[k]].size()>=2) which[++cnt]=l[k];
	if (cnt<2) { printf("NO\n"); return; }
	
	rep(i,1,2)
	{
		final[which[i]]=i;
		rep(j,0,1) final[w[which[i]][j]]=i;
	}
	
	int s=0, k=3;
	rep(i,1,n)
		if (vis[i]==1 && !final[i])
		{
			final[i]=k; s++;
			if (s==3) s=0, k++;
		}
	rep(i,1,n)
		if (vis[i]==2 && !final[i])
		{
			final[i]=k; s++;
			if (s==3) s=0, k++;
		}
	printf("YES\n");
	rep(i,1,n) printf("%d ",final[i]); printf("\n");
}

int main()
{
	ios::sync_with_stdio(true);
	#ifndef ONLINE_JUDGE
		freopen("173D.in","r",stdin);
	#endif
	lemon();
	return 0;
}