#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<cctype>
using namespace std;

const int N=21,size=1<<24;
const int go[4][2]={{1,0},{-1,0},{0,1},{0,-1}};
char g[N][N];
bool used[1<<24];
int q[1<<24],step[1<<24],st,ed; 
int length,n,m;

int main(){
	scanf("%d%d",&n,&m);
	int x,y;
	for(int i=0;i<n;i++){
		scanf("%s",&g[i]);
		for(int j=0;j<m;j++){
			if(isdigit(g[i][j])){
				length=max(length,g[i][j]-'0');
				if(g[i][j]=='1'){
					x=i;y=j;
				} 
			}
		}
	}
	int id=x*m+y;
	for(int i=2;i<=length;i++){
		for(int c=0;c<4;c++){
			int x1=x+go[c][0],y1=y+go[c][1];
			if(x1<0||x1>=n||y1<0||y1>=m||g[x1][y1]-48!=i) continue;
			x=x1;y=y1;
			id=(id<<2)+c;
			break;
		}
	}
	st=0;ed=1;q[ed]=id;step[ed]=0;
	memset(used,false,sizeof(used));
//	printf("%d\n",id);
	while(st!=ed){
		st=(st+1)%size;
		int snake=q[st],d=step[st];
		bool can[N][N];
		memset(can,true,sizeof(can));
		int pos=snake>>(length-1)*2,x=pos/m,y=pos%m,shape=snake^(pos<<(length-1)*2);
	//	printf("%d %d\n",x,y);
		for(int i=length-2,t=shape,x1=x,y1=y;i>=1;i--){
			int c=t>>i*2;
			x1+=go[c][0];y1+=go[c][1];
			can[x1][y1]=false;
		//	printf("%d %d\n",x1,y1);
			t^=c<<i*2;
		}
		shape>>=2;
		for(int c=0;c<4;c++){
			int x1=x-go[c][0],y1=y-go[c][1];
			if(x1<0||x1>=n||y1<0||y1>=m||!can[x1][y1]||g[x1][y1]=='#') continue;
			int next=(shape)|(c<<(length-2)*2)|((x1*m+y1)<<((length-1)*2));
		//	printf("%d %d\n",c,next);
			if(!used[next]){
			//	printf("step=%d %d %d %d\n",d,c,x1,y1);
				if(g[x1][y1]=='@'){
					printf("%d\n",d+1);
					return 0;
				}
				used[next]=true;
				ed=(ed+1)%size;
				q[ed]=next;step[ed]=d+1;
			}
		}
	}
	printf("-1\n");
	return 0;
} 
	 						 	  	  					 	    		