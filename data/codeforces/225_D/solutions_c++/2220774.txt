#include<queue>
#include<cctype>
#include<cstdio>
#include<cstring>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

const int dx[]={1,0,-1,0},dy[]={0,-1,0,1};

int len;
struct state{
	int x,y;
	int dir[7];
	int enc(){
		int res=0;
		rep(i,len-2) res=res*4+dir[i];
		return res;
	}
};

int main(){
	int h,w; scanf("%d%d",&h,&w);
	char B[15][16];
	rep(i,h) scanf("%s",B[i]);

	rep(i,h) rep(j,w) if(isdigit(B[i][j])) len=max(len,B[i][j]-'0');

	state ini;
	rep(i,h) rep(j,w) if(B[i][j]=='1') {
		int x=ini.x=j;
		int y=ini.y=i;
		rep(k,len-2){
			rep(l,4){
				int xx=x+dx[l];
				int yy=y+dy[l];
				if(0<=xx && xx<w && 0<=yy && yy<h && B[yy][xx]==B[y][x]+1){
					ini.dir[k]=l;
					x=xx;
					y=yy;
					break;
				}
			}
		}
	}

	rep(i,h) rep(j,w) if(isdigit(B[i][j])) B[i][j]='.';

	static int dp[15][15][1<<14];
	memset(dp,-1,sizeof dp);
	dp[ini.y][ini.x][ini.enc()]=0;

	queue< pair<int,state> > Q; Q.push(make_pair(0,ini));
	while(!Q.empty()){
		int t=Q.front().first;
		state S=Q.front().second; Q.pop();

		int x=S.x;
		int y=S.y;

		rep(k,4){
			int xx=x+dx[k];
			int yy=y+dy[k];
			if(0<=yy && yy<h && 0<=xx && xx<w && (B[yy][xx]=='.' || B[yy][xx]=='@')){
				// 自分の体にぶつからないかチェック
				bool ok=true;
				int x2=x,y2=y;
				rep(i,len-2){
					x2+=dx[S.dir[i]];
					y2+=dy[S.dir[i]];
					if(x2==xx && y2==yy){ ok=false; break; }
				}
				if(!ok) continue;

				// ゴール
				if(B[yy][xx]=='@'){ printf("%d\n",t+1); return 0; }

				state S2=S;
				S2.x=xx;
				S2.y=yy;
				for(int i=len-3;i>0;i--) S2.dir[i]=S2.dir[i-1];
				S2.dir[0]=(k+2)%4;

				int e=S2.enc();
				if(dp[S2.y][S2.x][e]==-1){
					dp[S2.y][S2.x][e]=t+1;
					Q.push(make_pair(t+1,S2));
				}
			}
		}
	}

	puts("-1");

	return 0;
}
