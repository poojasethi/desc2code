#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>
#include <vector>

const int N=100010;
const int inf=0x3f3f3f3f;

using namespace std;

#define pb push_back
#define sz(x) ((x).size())

int n,m,k,tt;
map<vector<int> ,int> dis;
char S[N];
int dir[4][2]={{0,1},{0,-1},{1,0},{-1,0}};

bool check(int x,int y)
{
	if(x<0 || y<0 || x>=n || y>=m) return 1;
	return 0;
}

void out(vector<int> vt)
{
	for(int i=0;i<sz(vt);i++)
		cout<<vt[i]<<" ";cout<<endl;
}

int dfs(vector<int> st)
{
	dis[st]=1;
	queue<vector<int> > que;
	que.push(st);
	while(!que.empty())
	{
		vector<int> s=que.front();
		que.pop();
		if(s[0]==tt) return dis[s];
		for(int i=0;i<4;i++)
		{
			int x=dir[i][0]+s[0]/m,y=dir[i][1]+s[0]%m;
			if(check(x,y)) continue;
			int t=x*m+y;
			if(S[t]=='#') continue;
			bool f=0;
			for(int j=1;j<k-1;j++)
				if(s[j]==t) f=1;
			if(f) continue;
			vector<int> str=s;
			for(int j=k-1;j>=1;j--)
				str[j]=s[j-1];
			str[0]=t;
			if(dis[str]) continue;
			dis[str]=dis[s]+1;
			que.push(str);
		}
	}
	return inf;
}

int main()
{
	//double st=clock();
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;i++)
	{
		char str[111];
		scanf("%s",str);
		for(int j=0;str[j];j++)
			S[i*m+j]=str[j];
	}
	int t[10];
	for(int i=0;i<n*m;i++)
		if(S[i]<='9' && S[i]>='1') k++,t[S[i]-'0']=i,S[i]='.';
		else if(S[i]=='@') tt=i;
	vector<int> vt;
	for(int i=1;i<=k;i++)
		vt.pb(t[i]);
	int ret=dfs(vt);
	if(ret==inf) cout<<-1<<endl;
	else cout<<ret-1<<endl;
	//cout<<(clock()-st)/CLOCKS_PER_SEC<<endl;
	return 0;
}
