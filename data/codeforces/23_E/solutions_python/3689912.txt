def cmp((a,b),(c,d)):
    if b*c<a*d:
        return 1;
    return -1;
def DFS(p,fa):
    sonp=[];
    for q in to[p]:
        if q!=fa:
            DFS(q,p);
            sonp.append((ans[q][0],ans[q][1]));
    sonp.sort(cmp);
    tmp=1;
    for v in sonp:
        tmp=tmp*v[0];
    ans[p]=(tmp,tmp);
    now=tmp;
    maxv=ans[p][0];
    i=1;
    for v in sonp:
        now=now/v[0]*v[1];
        maxv=max(maxv,now*(i+1));
        i+=1;
    for q in to[p]:
        if q!=fa:
            sonq=[];
            for j in range(size[q]):
                if to[q][j]!=p:
                    sonq.append((ans[to[q][j]][0],ans[to[q][j]][1]));
            sonq.sort(cmp);
            now=ans[p][1]/ans[q][0]*ans[q][1];
            i=1;
            for v in sonq:
                now=now/v[0]*v[1];
                maxv=max(maxv,now*(i+2));
                i+=1;
    ans[p]=(maxv,ans[p][1]);
n=input();
ans = [ (1,1) for i in range(1,n+2) ];
to=[ [] for i in range(1,n+2) ];
size=[0 for i in range(1,n+2) ];
for i in range(1,n):
    a,b=map(int,raw_input().split(' '));
    to[a]+=[b];
    to[b]+=[a];
    size[a]+=1;
    size[b]+=1;
DFS(1,-1);
print ans[1][0];