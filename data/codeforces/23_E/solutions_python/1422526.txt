n=int(raw_input())
a=[[] for i in range(n)]
for i in range(n-1):
	u,v=map(int,raw_input().split())
	a[u-1].append(v-1)
	a[v-1].append(u-1)
f=[1]*n
g=[1]*n
s=[[] for i in range(n)]

def dp(fx,x):
	child=s[x]
	for i in range(len(a[x])):
		v=a[x][i]
		if (v!=fx):
			dp(x,v)
			g[x]*=f[v]
			child.append(v)
	for i in range(len(child)):
		for j in range(i+1,len(child)):
			if (g[child[i]]*f[child[j]]<g[child[j]]*f[child[i]]):
				child[i],child[j] = child[j],child[i]
	f[x]=g[x]
	tv=g[x]
	for i in range(len(child)):
		v=child[i]
		tv/=f[v]
		tv*=g[v]
		f[x]=max(f[x],tv*(i+2))
		tchild=s[v]
		tv2=g[v]
		for j in range(len(tchild)):
			u=tchild[j]
			tv2/=f[u]
			tv2*=g[u]
			f[x]=max(f[x],tv2*(j+3)*(g[x]/f[v]))

dp(-1,0)
print f[0]
