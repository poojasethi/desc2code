import sys
nxt=[0]*240000
head=[0]*120000
w=[0]*240000
vis=[0]*1000
index=[0]*2
son = [0] * 1000
sys.setrecursionlimit(2*10**5)
n = int(raw_input())

def add(x,y):
    index[0]+=1
    nxt[index[0]]=head[x]
    w[index[0]] = y
    head[x]=index[0]
    
def dfs(u, fa):
	res = [0] * 710
	vis[u]=1
	i = head[u]
	res[1] = 1
	son[u] = 1
	while (i != -1):
		if (vis[w[i]]==0):
			v = w[i]
			tmp = dfs(v, u)
			j = son[u]
			while (j >= 0):
				k = son[v]
				while (k >= 0):
					if (tmp[k] * res[j] > res[j + k]):
						res[j + k] = tmp[k] * res[j]
					k -= 1
				j -= 1
			son[u] += son[v]
		i = nxt[i]
	for i in range(0, son[u] + 1):
		if (res[i] * i > res[0]): res[0] = res[i] * i
	return res


for i in range(0, n) : head[i] = -1
for i in range(0, n - 1) : 
	x, y = map(int, raw_input().split())
	x -= 1
	y -= 1
	add(x, y)
	add(y, x)

res = dfs(0, -1)
print res[0]
