n=int(raw_input())
G=[[] for i in range(n+1)]
f=[1]*(n+1)
g=[[0]*(n+1) for i in range(n+1)]
size=[1]*(n+1)
for i in range(n-1):
	u,v=map(int,raw_input().split(' '))
	G[u].append(v)
	G[v].append(u)
def cmp((a,b),(c,d)):
	if b*c>a*d:
		return -1
	if b*c==a*d:
		return 0
	return 1
def dfs(u,fa):
	g[u][1]=1
	T=[]
	for v in G[u]:
		if v!=fa:
			dfs(v,u)
			size[u]+=size[v]
			g[u][1]*=f[v]
			T.append((f[v],g[v][1]))
	T.sort(cmp)
	t=g[u][1]
	c=1
	S=size[u]
	for fm,fz in T:
		c+=1
		t=t*fz/fm
		g[u][c]=max(g[u][c],t)

	f[u]=g[u][1]
	for i in range(2,S+1):
		for v in G[u]:
			if v!=fa:
				g[u][i]=max(g[u][i],g[v][i-1]*g[u][1]/f[v])
		f[u]=max(f[u],g[u][i]*i)
	
dfs(1,0)
print f[1] 
