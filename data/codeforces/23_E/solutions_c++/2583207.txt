#include<cstdio>
const int p=100000000;
int N,M,i,e,X,Y;
int son[705],ed[1405],next[1405],size[705];
long long tmp[40],f[705][705][40];
void Addedge(int X,int Y)
{
	ed[++e]=Y,next[e]=son[X],son[X]=e;
}
void Ok(long long a[])
{
	int i;
	for(i=1;i<a[0];++i)
	{
		a[i+1]+=a[i]/p;
		a[i]%=p;
	}
	for(;a[a[0]]>=p;) a[a[0]+1]=a[a[0]]/p,a[a[0]]%=p,++a[0];
	for(;a[0]>0&&a[a[0]]==0;--a[0]);
}
void Mul(long long a[],long long b[],long long c[])
{
	int i,j;
	for(i=1;i<=c[0];++i) c[i]=0;
	c[0]=a[0]+b[0]-1;
	for(i=1;i<=a[0];++i)
		for(j=1;j<=b[0];++j)
			c[i+j-1]+=a[i]*b[j];
	Ok(c);
}
void mul(long long a[],long long b,long long c[])
{
	int i;
	for(i=1;i<=c[0];++i) c[i]=0;
	c[0]=a[0];
	for(i=1;i<=a[0];++i) c[i]=a[i]*b;
	Ok(c);
}
void Renew(long long a[],long long b[])
{
	int i;
	if(a[0]<b[0]) return;
	if(a[0]==b[0])
		for(i=a[0];i;--i)
		{
			if(a[i]<b[i]) return;
			if(a[i]>b[i]) break;
		}
	for(i=0;i<=a[0];++i) b[i]=a[i];
}
void print(long long a[])
{
	int i;
	printf("%I64d",a[a[0]]);
	for(i=a[0]-1;i;--i) printf("%.08I64d",a[i]);
	printf("\n");
}
void dfs(int x,int y)
{
	int p,i,j,k;
	size[x]=1;
	f[x][0][1]=f[x][0][0]=f[x][1][1]=f[x][1][0]=1;
	for(p=son[x];p;p=next[p])
		if(ed[p]!=y)
		{
			i=ed[p],dfs(i,x);
			for(j=size[x];j>=0;--j)
				for(k=size[i];k>=0;--k)
				{
					Mul(f[x][j],f[i][k],tmp);
					Renew(tmp,f[x][j+k]);
				}
			size[x]+=size[i];
		}
	for(j=1;j<=size[x];++j)
	{
		mul(f[x][j],j,tmp);
		Renew(tmp,f[x][0]);
	}
}
int main()
{
	scanf("%d",&N);
	for(i=1;i<N;++i)
	{
		scanf("%d%d",&X,&Y);
		Addedge(X,Y),Addedge(Y,X);
	}
	dfs(1,0);
	print(f[1][0]);
	return 0;
}
