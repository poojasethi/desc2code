#include <cstdio>
#include <cstring>
int n,head[1000],to[10000],next[10000],size[1000],prt[1000];
struct longlonglong
{
	int len,b[55];
	longlonglong() {len=0;memset(b,0,sizeof(b));}
	inline longlonglong & operator *(const longlonglong &m)
	{
		longlonglong tmp; int i,j;
		for(i=1;i<=len;i++)
			for(j=1;j<=m.len;j++)
			tmp.b[i+j-1] += b[i]*m.b[j];
		for(i=1;i<=len+m.len-1 || tmp.b[i];i++)
		{
			tmp.b[i+1] += tmp.b[i]/10000;
			tmp.b[i] %= 10000;
		}
		tmp.len = tmp.b[i]>0?i:i-1;
		if(tmp.len==0) printf("%d\n",tmp.b[1]);
		return tmp;
	}
}f[1000][1000],h[1000];
longlonglong c(int i)
{
	longlonglong re;
	memset(re.b,0,sizeof(re.b)); 
	re.len=1;
	re.b[1] = i;
	return re;
}
inline bool operator <(const longlonglong &B, const longlonglong &A)
{
	if(B.len < A.len)
		return true;
	if(B.len > A.len)
		return false;
	for(int i=B.len;i;i--)
	{
		if(B.b[i] > A.b[i]) return false;
		if(B.b[i] < A.b[i]) return true;
	}
	return false;
}
void dfs(int u)
{ 
	int i,v,j,k;
	f[u][1] = c(1); size[u]=1; h[u] = c(1);
	for(i=head[u];i;i=next[i])
	if(to[i] != prt[u])
	{
		v = to[i]; prt[v] = u; 
		dfs(v);
		for(j=size[u]+1;j<=size[u]+size[v];j++)
			f[u][j] = c(1);
		for(j=size[u];j;j--)
		{
			for(k=size[v];k;k--)
				if(f[u][j+k] < f[u][j]*f[v][k])
				f[u][j+k] = f[u][j]*f[v][k];
			f[u][j] = f[u][j]*h[v];
		}
		size[u] += size[v];
	}
	for(i=1;i<=size[u];i++)
		if(h[u] < (f[u][i] * c(i)))
			h[u] = f[u][i]*c(i);
}
int main()
{
	//freopen("input.txt","r",stdin);
	scanf("%d",&n); int i,u,v;
	for(i=1;i<n;i++)
	{
		scanf("%d%d",&u,&v);
		to[i]=v; next[i]=head[u]; head[u]=i;
		to[i+n]=u; next[i+n]=head[v]; head[v]=i+n;
	}
	dfs(1);
	printf("%d",h[1].b[h[1].len]);
	for(i=h[1].len-1;i;i--)
		printf("%04d",h[1].b[i]);
}