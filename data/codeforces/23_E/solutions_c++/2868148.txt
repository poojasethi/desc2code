#include<cstdio>
#include<cstring>
const int t=705;
const int wei=10000;
struct edge{
	edge *nxt;
	int des;
	void maker(edge *&a,int b){
		nxt=a,des=b;
		a=this;
	}
} *sta[t],*tot,w[t<<1];
int si[t],fa[t];
struct llint{
	int sz,a[30];
	void operator =(int b){
		memset(a,0,sizeof a);
		a[sz=0]=b;
	}
	bool operator >(const llint &b) const{
		if (sz!=b.sz) return sz>b.sz;
		int i;
		for (i=sz;i && a[i]==b.a[i];i--);
		return a[i]>b.a[i];
	}
} ans[t][t];
llint operator *(const llint &a,const llint &b){
	llint c;
	c=0;
	if (!a.sz && !a.a[0] || !b.sz && !b.a[0]) return c;
	int i,j;
	for (i=0;i<=a.sz;i++)
		for (j=0;j<=b.sz;j++)
			c.a[i+j]+=a.a[i]*b.a[j];
	for (i=0;i<=a.sz+b.sz;i++){
		c.a[i+1]+=c.a[i]/wei;
		c.a[i]%=wei;
	}
	c.sz=a.sz+b.sz+(c.a[a.sz+b.sz+1]!=0);
	return c;
}
llint operator *(const llint &a,int b){
	llint c;
	c=b;
	return a*c;
}
void cmax(llint &a,const llint b){
	if (b>a) a=b;
}
void dfs(int i){
	si[i]=1;
	ans[i][1]=1;
	int j,k;
	for (edge *e=sta[i];e;e=e->nxt) if (e->des!=fa[i]){
		fa[e->des]=i;
		dfs(e->des);
		for (j=si[i];j;j--)
			for (k=si[e->des];k>=0;k--)
				cmax(ans[i][j+k],ans[i][j]*ans[e->des][k]);
		si[i]+=si[e->des];
	}
	for (j=1;j<=si[i];j++)
		cmax(ans[i][0],ans[i][j]*j);
}
void print(const llint &a){
	printf("%d",a.a[a.sz]);
	for (int i=a.sz-1;i>=0;i--) printf("%04d",a.a[i]);
	puts("");
}
int main(){
	int n,i,a,b;
//	freopen("23e.in","r",stdin);
//	freopen("23e.out","w",stdout);
	scanf("%d",&n);
	for (i=1;i<=n;i++) sta[i]=NULL;
	for (tot=w,fa[i=1]=0;i<n;i++){
		scanf("%d%d",&a,&b);
		(tot++)->maker(sta[a],b);
		(tot++)->maker(sta[b],a);
	}
	memset(ans,0,sizeof ans);
	dfs(1);
	print(ans[1][0]);
	return 0;
}
