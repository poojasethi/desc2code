#include <cstring>
#include <cstdio>
using namespace std;
const int base=10000,maxn=710;
typedef int arr[100];

arr f[maxn][maxn];
int visit[maxn],size[maxn];
int son[maxn], point[maxn*2], next[maxn*2],n,tot;

void mul(arr a, arr b, arr c)
{
	c[0]=a[0]+b[0];
	for (int i=1; i<=a[0]; i++)
	for (int j=1; j<=b[0]; j++)
		c[i+j-1]+=a[i]*b[j];
		
	for (int i=1; i<=c[0]; i++)
		c[i+1]+=c[i]/base, c[i]%=base;
	if (!c[c[0]] && c[0]) c[0]--;
}

bool bigger(arr a, arr b)
{
	if (a[0]>b[0]) return 1;
	if (a[0]<b[0]) return 0;
	for (int i=a[0]; i; i--)
	{
		if (a[i]>b[i]) return 1;
		if (a[i]<b[i]) return 0;
	}
	return 0;
}

void addedge(int x, int y)
{
	point[++tot]=y; next[tot]=son[x]; son[x]=tot;
}

void dfs(int x)
{
	int y; visit[x]=size[x]=1;
	f[x][1][1]=f[x][1][0]=1;
	for (int p=son[x]; p; p=next[p])
	{
		y=point[p];
		if (visit[y]) continue;
		dfs(y);
		for (int i=size[x]; i; i--)
		{
			for (int j=1; j<=size[y]; j++)
			{
				arr tmp; memset(tmp,0,sizeof(tmp)); 
				mul(f[x][i],f[y][j],tmp);
				if (bigger(tmp,f[x][i+j])) memcpy(f[x][i+j],tmp,sizeof(tmp));
			}
		
			arr tmp; memset(tmp,0,sizeof(tmp)); 
			mul(f[x][i],f[y][0],tmp); 
			memcpy(f[x][i],tmp,sizeof(tmp));
		}
		size[x]+=size[y];
	}
	
	for (int i=1; i<=size[x]; i++)
	{
		arr tmp; memset(tmp,0,sizeof(tmp));
		arr tmp2; memset(tmp2,0,sizeof(tmp2)); tmp2[0]=1; tmp2[1]=i; 
		mul(f[x][i],tmp2,tmp); 
		if (bigger(tmp,f[x][0])) memcpy(f[x][0],tmp,sizeof(tmp));
	}
}

void print(arr a)
{
	printf("%d", a[a[0]]);
	for (int i=a[0]-1; i; i--)
	{
		if (a[i]<1000) printf("0");
		if (a[i]<100) printf("0");
		if (a[i]<10) printf("0");
		printf("%d",a[i]);
	}
	printf("\n");
}
int main()
{
	
	scanf("%d",&n);
	for (int i=1; i<n; i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		addedge(x,y); addedge(y,x);
	}
	
	dfs(1);
	print(f[1][0]);
	
	//for (;;);
	return 0;
}
