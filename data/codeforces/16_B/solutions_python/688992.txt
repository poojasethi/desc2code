#!/usr/bin/env python2
# -*- coding: utf-8 -*-
import sys
input = sys.stdin
output = sys.stdout

def solve(n,M):
    M = sorted(M, key=lambda t: t[1], reverse=True)
    s = 0
    sn = 0
    for t in M:
        a,b = t
        #print a,b
        k = min(a,n-sn)
        #print 'adding %d packets, %d in each' % (dn,b)
        sn += k
        s += k*b
        if sn == n:
            break
    return s

def numbers_from_line(d=' '):
    return [int(s) for s in input.readline().strip().split(d) if len(s.strip())>0]

n,m = tuple(numbers_from_line())

M = []
for _ in range(m):
    a,b = tuple(numbers_from_line())
    M.append((a,b))

a = solve(n,M)
output.write('%d\n' % a)
