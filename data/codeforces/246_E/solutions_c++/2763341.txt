//By momo
#include<map>
#include<set>
#include<deque>
#include<string>
#include<cstdio>
#include<vector>
#include<iostream>
#include<algorithm>

#define N 100010
#define PB push_back
#define SZ(x) (int)((x).size())
#define FOR(it, c) for(__typeof((c).begin())it=(c).begin();it!=(c).end();it++)

using namespace std;

map<string, int> chg;
vector<int> G[N], Q[N];
deque<set<int> > deq[N];
int k[N], sz[N], who[N], clr[N], ans[N];

set<int> add;
void dfs(int p){
	who[p] = p;
	int mx = -1, &id = who[p];
	FOR(it, G[p]){
		dfs(*it); sz[p] += sz[*it];
		if(sz[*it] > mx) mx = sz[*it], id = who[*it];
	}
	FOR(it, G[p]){
		int w = who[*it];
		if(w == id) continue;
		for(int l = 0; l < SZ(deq[w]); l++){
			if(SZ(deq[id]) <= l) deq[id].PB(add);
			FOR(it2, deq[w][l]) deq[id][l].insert(*it2);
		}
	}
	FOR(it, Q[p]){
		if(SZ(deq[id]) < k[*it]) ans[*it] = 0;
		else ans[*it] = SZ(deq[id][k[*it]-1]);
	}
	deq[id].push_front(add);
	deq[id][0].insert(clr[p]); sz[p]++;
}

int main(){
	int n, cnt = 0; scanf("%d", &n);
	for(int i = 1; i <= n; i++){
		string na; int fa;
		cin >> na >> fa; G[fa].PB(i);
		if(!chg[na]) chg[na] = cnt++;
		clr[i] = chg[na];
	}
	
	int m; scanf("%d", &m);
	for(int i = 0, v; i < m; i++) scanf("%d%d", &v, &k[i]), Q[v].PB(i);
	
	for(int i = 1; i <= n; i++) if(sz[i] == 0) dfs(i);
	for(int i = 0; i < m; i++) printf("%d\n", ans[i]);
}
