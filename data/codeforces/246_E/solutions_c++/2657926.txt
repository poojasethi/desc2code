#include<cstdio>
#include<string>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
using namespace std;
vector<int>v[100010];
vector<pair<int,int> >poi[100010];
map<pair<int,int>,int >sta;
int n, m, sn, deep[100010], l[100010], r[100010], i;
char s[100010][40];
int dfs(int k, int d){
	vector<int>::iterator p;
	l[k] = ++sn;
	poi[d].push_back(make_pair(sn, k));
	deep[k] = d;
	for(p = v[k].begin();p != v[k].end();p++)dfs(*p, d+1);
	r[k] = ++sn;
	return 0;
}
int work(int w, int k) {
	if(sta[make_pair(w, k)])return sta[make_pair(w, k)];
	set<string>list;
	vector<pair<int,int> >::iterator a, b, p;
	a = lower_bound(poi[deep[w]+k].begin(), poi[deep[w]+k].end(), make_pair(l[w], 100010));
	b = lower_bound(poi[deep[w]+k].begin(), poi[deep[w]+k].end(), make_pair(r[w], 0));
	for(p=a;p!=b;p++)list.insert(s[(*p).second]);
	return sta[make_pair(w, k)] = list.size();
}
int main() {
	scanf("%d", &n);
	for(i=1;i<=n;i++){
		int k;
		scanf("%s%d", s[i], &k);
		v[k].push_back(i);
	}
	dfs(0,0);
	scanf("%d", &m);
	for(i=1;i<=m;i++){
		int w, k;
		scanf("%d%d",&w, &k);
		printf("%d\n",work(w, k));
	}
	return 0;
}