#include<map>
#include<set>
#include<vector>
#include<string>
#include<stdio.h>
#include<string.h>
#include<iostream>
#include<algorithm>
using namespace std;
const int maxn=222222;

vector<int> p[maxn],dp[maxn];
string name[maxn],str[maxn];
int dep[maxn],l[maxn],r[maxn];
int tot=0;
map<pair<int,int>,int> mp;

void dfs(int i,int deph){
    dep[i]=deph;
    dp[deph].push_back(++tot);
    l[i]=tot;str[tot]=name[i];
    for(int j=0;j<p[i].size();j++){
        int v=p[i][j];
        dfs(v,deph+1);
    }
    dp[deph].push_back(++tot);
    r[i]=tot;str[tot]=name[i];
}

int gao(int v,int k){
    if(mp.find(make_pair(v,k))!=mp.end()) return mp[make_pair(v,k)];
//    puts("*");
    int L=upper_bound(dp[k].begin(),dp[k].end(),l[v])-dp[k].begin();
    int R=lower_bound(dp[k].begin(),dp[k].end(),r[v])-dp[k].begin();
    set<string> st;
    for(int i=L;i<R;i++) st.insert(str[dp[k][i]]);
    return mp[make_pair(v,k)]=st.size();
}

int main(){
    int n;scanf("%d",&n);
    for(int i=1;i<=n;i++){
        int x;cin>>name[i]>>x;
        p[x].push_back(i);
    }
    dfs(0,0);mp.clear();
    int m;scanf("%d",&m);
//    for(int i=1;i<=n;i++) printf("%d %d\n",i,dep[i]);
//    for(int i=1;i<=3;i++){
//        printf("%d ",i);
//        for(int j=0;j<dp[i].size();j++) printf("%d ",dp[i][j]);
//        puts("");
//    }
    while(m--){
        int v,k;scanf("%d%d",&v,&k);
        printf("%d\n",gao(v,k+dep[v]));
    }
    return 0;
}

 	    	 		   		   					 	  		 	