#include <cstdio>
#include <string>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
using namespace std;

#define maxn 100010
vector<int> v[maxn];
vector< pair<int,int> > point[maxn];
map< pair<int,int>,int > mp;
int n,m,w,k,pppp,depth[maxn],pos[maxn][2];
char s[maxn][23];

void Dfs(int k,int d) {
    pos[k][0]=++pppp;
    point[d].push_back(make_pair(pppp,k));
    depth[k]=d;
    for (vector<int>::iterator p=v[k].begin();p!=v[k].end();++p) Dfs(*p,d+1);
    pos[k][1]=++pppp;
}

int Work() {
    if (mp[make_pair(w,k)]) return mp[make_pair(w,k)]-1;
    set<string> list;
    vector< pair<int,int> >::iterator
        l=lower_bound(point[depth[w]+k].begin(),point[depth[w]+k].end(),make_pair(pos[w][0],maxn)),
        r=lower_bound(point[depth[w]+k].begin(),point[depth[w]+k].end(),make_pair(pos[w][1],0));
    for (vector< pair<int,int> >::iterator p=l;p!=r;++p) list.insert(s[(*p).second]);
    return (mp[make_pair(w,k)]=list.size()+1)-1;
}

int main() {
    scanf("%d",&n);
    for (int i=1;i<=n;++i) {scanf("%s%d",&s[i],&k);v[k].push_back(i);}
    Dfs(0,0);
    scanf("%d",&m);
    for (int i=1;i<=m;++i) {scanf("%d%d",&w,&k);printf("%d\n",Work());}
    return 0;
}