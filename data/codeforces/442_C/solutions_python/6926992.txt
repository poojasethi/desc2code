import sys, heapq
read = lambda t=int: list(map(t,sys.stdin.readline().split()))
array = lambda *ds: [array(*ds[1:]) for _ in range(ds[0])] if ds else 0

_ = read()
xs = [0]+read()+[0]
N = len(xs)

ls = [0]+list(range(N-1))
rs = list(range(1,N))+[0]
qs = []
def testappend(i):
    if xs[i] != 0 and xs[i] <= xs[ls[i]] and xs[i] <= xs[rs[i]]:
        qs.append(i)
for i in range(N):
    testappend(i)

def findlist():
    res = []
    i = 0
    while True:
        res.append(xs[i])
        i = rs[i]
        if i == 0:
            break
    return res

# def printlist():
#     i = 0
#     while True:
#         print(xs[i], end=' ')
#         i = rs[i]
#         if i == 0:
#             break
#     print()


# print(xs)
# print(ls)
# print(rs)
# print(qs)

done = set()
res = 0
while qs:
    i = qs.pop()
    if not (xs[i] != 0 and xs[i] <= xs[ls[i]] and xs[i] <= xs[rs[i]]):
        # print('skip 1')
        continue
    if i in done:
        # print('skip 2')
        continue
    done.add(i)
    # print('doing', i, xs[i])

    res += min(xs[ls[i]], xs[rs[i]])
    ls[rs[i]] = ls[i]
    rs[ls[i]] = rs[i]
    # if xs[ls[i]] < xs[rs[i]]:
    #     res += xs[ls[i]]
    testappend(ls[i])
    testappend(rs[i])

ys = list(sorted(findlist()))
res += sum(ys[:-2])
print(res)
