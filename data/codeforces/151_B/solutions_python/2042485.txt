n=input()
f=[[0]*3]*n
F=[]

for i in range(n):
    m, s=raw_input().split()
    F += [s]
    P = lambda s: all([a < b for a,b in zip(s[1:], s)])
    T = lambda s: s.count(s[0]) == len(s)
    N = [raw_input().replace('-','') for _ in ' '*int(m)]
    for n in N:
        f[i] = map(sum, zip(f[i], [P(n), not (P(n) or T(n)), T(n)]))
def D(i):
    M=lambda E: E[i]  

    return ', '.join([F[j] for j, e in enumerate(f) if e[i] == M(max(f, key=M))])

print "If you want to call a taxi, you should call: %s." % D(2)
print "If you want to order a pizza, you should call: %s." % D(0)
print "If you want to go to a cafe with a wonderful girl, you should call: %s." % D(1)