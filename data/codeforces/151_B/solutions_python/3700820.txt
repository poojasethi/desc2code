#!/usr/bin/env python
from sys import stdin
from itertools import ifilter
from collections import OrderedDict

func = lambda k: k != '-'
taxi = "If you want to call a taxi, you should call: "
pizza = "If you want to order a pizza, you should call: "
girl = "If you want to go to a cafe with a wonderful girl, you should call: "
phoneBook = [taxi, pizza, girl]

def canDo(number):
    k = len(set(number))
    if k == 1:
        return 0 #Taxi
    elif sorted({ el : 0 for el in number }.keys()) == number[::-1] and k == len(number):
        return 1 #pizza
    return 2 #Girl

n, F, mH = int(raw_input()), OrderedDict(), [0,0,0]
for i in xrange(n):
    p, name = map(str, stdin.readline().strip().split())
    p, F[name] = int(p), [0,0,0]
    for row in xrange(p):
        t = canDo( [ w for w in ifilter(func , stdin.readline().strip()) ] )
        F[name][t] = -~F[name][t]
        if F[name][t] > mH[t]:
            mH[t] = F[name][t]

for t, m in enumerate(mH):
    name = ", ".join( st for st in F if F[st][t] == m )
    phoneBook[t] += name + "."
    
print "\n".join(phoneBook)