#include <iostream>
#include <string>
#include <cstdio>
#include <cstring>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cmath>
#include <sstream>
#include <algorithm>
#include <numeric>
using namespace std;
template<typename X> inline bool maximize(X&p,X q){if(p>=q)return 0;p=q;return 1;}
const int MAXN=10005;
set<int> head[MAXN];
int temp[MAXN];
int main()
{
    ios::sync_with_stdio(false);
    map<string,int>Map;
    int M,num=0;
    string str1,str2;
    cin>>M;
    while(M--){
        cin>>str1>>str2;
        int&u=Map[str1],&v=Map[str2];
        if(!u)u=++num;if(!v)v=++num;
        head[u].insert(v);
        head[v].insert(u);
    }
    cout<<num<<endl;
    for(map<string,int>::iterator it=Map.begin();it!=Map.end();++it){
        int u=it->second,ans=0,Maxc=0;
        for(int v=1;v<=num;++v){
            if(v==u||head[u].count(v))continue;
            int cnt=set_intersection(head[u].begin(),head[u].end(),head[v].begin(),head[v].end(),temp)-temp;
            if(cnt>Maxc)Maxc=cnt,ans=1;
            else if (cnt==Maxc) ++ans;
        }
        cout<<it->first<<' '<<ans<<endl;
    }
    return 0;
}
	   		 	 	   	     	  	