#include<cstdio>
#include<iostream>
#include<cstring>
#include<queue>
#include<vector>
#include<algorithm>
#include<set>
#include<map>

using namespace std;

int N,M,inter[10010],vis[10010],temp[10010];
map<string,int> Name_Num;
map<int,string> Num_Name;
vector<int> Chain[10010];

int main()
{
	//readdata
	scanf("%d",&M);
	for(int i=1;i<=M;i++)
	{
		char s1[25],s2[25];
		scanf("%s%s",s1,s2);
		if(!Name_Num.count(s1)) {Name_Num[s1]=N;Num_Name[N++]=s1;}
		if(!Name_Num.count(s2)) {Name_Num[s2]=N;Num_Name[N++]=s2;}

		Chain[Name_Num[s1]].push_back(Name_Num[s2]);
		Chain[Name_Num[s2]].push_back(Name_Num[s1]);
	}
	printf("%d\n",N);
	for(int i=0;i<N;i++)
		sort(Chain[i].begin(),Chain[i].end());

	for(int i=0;i<N;i++)
	{
		int ans=0,Max=0;
		cout <<Num_Name[i];
		for(int j=0;j<N;j++)
		{
			if(j==i || binary_search(Chain[i].begin(),Chain[i].end(),j)) continue;
			
			int cnt=set_intersection(Chain[i].begin(),Chain[i].end(),Chain[j].begin(),Chain[j].end(),temp)-temp;
			/*
			int cnt=0;
			for(int k=0;k<Chain[i].size();k++)
				if(binary_search(Chain[j].begin(),Chain[j].end(),Chain[i][k])) cnt++;
			*/
			if(Max==cnt) ans++;
			if(Max<cnt) Max=cnt,ans=1;
			//cout <<' '<< Num_Name[j]<<cnt;
		}
		printf(" %d\n",ans);
	}

	return 0;
}

 	  	 						  		   	 	 	 		