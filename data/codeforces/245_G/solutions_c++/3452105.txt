#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <vector>
#include <map>
using namespace std;
const int M = 10010;
vector<int>v[M];
map<string,int>hash;
map<int,string>has;
int flag[M],n,m;

void init(){
	n=1;
	hash.clear();
	has.clear();
	for(int i=1;i<=m*2;i++){
		v[i].clear();
	}
}
inline int mapp(char ch[25]){
	if(hash[ch]==0){
		hash[ch]=n++;
		has[n-1]=ch;
	}
	return hash[ch];
}
void input(){
	while(m--){
		char ch1[25],ch2[25];
		scanf("%s %s",ch1,ch2);
		int x=mapp(ch1);
		int y=mapp(ch2);
		v[x].push_back(y);
		v[y].push_back(x);
	}
}
int main(){
	while(~scanf("%d",&m)){
		init();
		input();
		cout<<n-1<<endl;
		for(int i=1;i<n;i++){
			cout<<has[i]<<" ";
			memset(flag,0,sizeof(flag));
			flag[i]=-1;
			bool f=0;
			for(int j=0;j<v[i].size();j++){
				int x=v[i][j];
				flag[x]=-1;
				if(v[x].size())
					f=1;
				for(int k=0;k<v[x].size();k++){
					int y=v[x][k];
					if(-1!=flag[y]){
						flag[y]++;
					}
				}
			}
			int cnt=0,maxx=-10000;
			for(int j=1;j<n;j++){
				if(flag[j]==-1){
					continue;
				}
				if(maxx==flag[j]){
					cnt++;
				}
				if(flag[j]>maxx){
					maxx=flag[j],cnt=1;
				}
			}
			!f?cout<<n-1-v[i].size()<<endl:cout<<cnt<<endl;
		}
	}
	return 0;
}
 		 	  									   		  	