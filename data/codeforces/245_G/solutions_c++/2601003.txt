#include<map>
#include<string>
#include<cstdio>
#include<vector>
#include<algorithm>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

short buf[10000][10000]; // メモリが足りないので, 最上位 bit に bool E[][] を, そのほかに short cnt[][] を割り当てる

int main(){
	int m; scanf("%d",&m);
	int n=0;
	map<string,int> f;
	string f_inv[10000];
	vector<int> G[10000];
	// bool E[10000][10000];
	rep(i,m){
		char s[21],t[21]; scanf("%s%s",s,t);
		if(f.count(s)==0) f[s]=n, f_inv[n++]=s;
		if(f.count(t)==0) f[t]=n, f_inv[n++]=t;
		int u=f[s],v=f[t];
		G[u].push_back(v);
		G[v].push_back(u);
		// E[u][v]=E[v][u]=true;
		buf[u][v]|=1<<15;
		buf[v][u]|=1<<15;
	}
	// rep(u,n) E[u][u]=true;
	rep(u,n) buf[u][u]=1<<15;

	static short cnt[10000][10000];
	rep(u,n) rep(j,G[u].size()) rep(i,j) {
		int v=G[u][i],w=G[u][j];
		// if(!E[v][w]) cnt[v][w]++, cnt[w][v]++;
		if((buf[v][w]&1<<15)==0) buf[v][w]++, buf[w][v]++;
	}

	printf("%d\n",n);
	rep(u,n){
		int cnt_max=0;
		// rep(v,n) cnt_max=max(cnt_max,cnt[u][v]);
		rep(v,n) cnt_max=max(cnt_max,buf[u][v]&(1<<15)-1);
		int ans=0;
		// rep(v,n) if(!E[u][v] && cnt[u][v]==cnt_max) ans++;
		rep(v,n) if((buf[u][v]&1<<15)==0 && (buf[u][v]&(1<<15)-1)==cnt_max) ans++;
		printf("%s %d\n",f_inv[u].c_str(),ans);
	}

	return 0;
}
