#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <utility>
#define pii pair<int, int>
#define PB push_back
typedef long long LLD;
using namespace std;
vector<int> V[10001];
bool dst[10001];
int com[10001];
map<string, int> H;
string inv[10001];
int main()
{
    int N = 0, M;
    cin >> M;
    for(int i = 0; i < M; i ++)
    {
	string a, b;
	cin >> a >> b;
	if(H.count(a) == 0)
	{
	    H[a] = N ++;
	    inv[N-1] = a;
	}
	if(H.count(b) == 0)
	{
	    H[b] = N ++;
	    inv[N-1] = b;
	}
	V[H[a]].PB(H[b]);
	V[H[b]].PB(H[a]);
    }
    cout << N << endl;
    for(int a = 0; a < N; a ++)
    {
	memset(com, 0, sizeof com);
	memset(dst, 0, sizeof dst);
	int sz = V[a].size();
	for(int j = 0; j < sz; j ++)
	{
	    int b = V[a][j];
	    dst[b] = 1;
	    int ssz = V[b].size();
	    for(int k = 0; k < ssz; k ++)
	    {
		int c = V[b][k];
		com[c] ++;
	    }
	}
	int ans = 0, mx = 0;
	for(int i = 0; i < N; i ++)
	{
	    if(i == a || dst[i])
		continue;
	    if(com[i] > mx)
	    {
		mx = com[i];
		ans = 1;
	    }
	    else if(mx == com[i])
		ans ++;
	}
	cout << inv[a] << " " << ans << endl;
    }
    return 0;
}
