#include <stdio.h>
#include <algorithm>
#include <iostream>
#include <memory.h>
#include <string.h>
#include <numeric>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <vector>
#include <stdlib.h>
#include <deque>
#include <list>
#include <assert.h>
using namespace std;

void TLE(){for(;;);}
void MLE(){int*a=new int[500000000];a[1]=1;}
void RTE(){int*a=NULL;*a=1;}

#define maxn 10100

bool a[maxn][maxn];
int f[maxn],t[maxn],p[maxn],c[maxn],n,i,all,x,y,best,kol,j,cur,ii;
string s1,s2,str[maxn];
map<string,int>ma;

int pairs(int x,int y){
	if(c[x]>c[y])swap(x,y);
	int ret=0,q=f[x];
	while(q){
		ret+=a[y][t[q]];
		q=p[q];
	}
	return ret;
}

int main(){
	cin>>n;
	for(i=1;i<=n;i++){
		cin>>s1>>s2;
		if(!ma[s1]){
			ma[s1]=++all;
			str[all]=s1;
		}
		if(!ma[s2]){
			ma[s2]=++all;
			str[all]=s2;
		}
		x=ma[s1];y=ma[s2];
		a[x][y]=a[y][x]=1;
		++c[x];++c[y];
		t[++ii]=y;p[ii]=f[x];f[x]=ii;
		t[++ii]=x;p[ii]=f[y];f[y]=ii;
	}
	cout<<all<<endl;
	for(i=1;i<=all;i++){
		best=-1,kol=0;
		for(j=1;j<=all;j++)if(!a[i][j]&&i!=j){
			cur=pairs(i,j);
			if(cur>best)best=cur,kol=1;else if(cur==best)++kol;
		}
		cout<<str[i]<<" "<<kol<<endl;
	}
    return 0;
}
