#include <cstdio>
#include <cstring>
#include <algorithm>
#include <map>
#include <string>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define FOD(i,s,e) for (int i=(s)-1; i>=(e); i--)
#define CLR(a,x) memset(a, x, sizeof(a))
#define EXP(i,l) for (int i=(l); i; i=qn[i])
#define N 10005
using namespace std;

int n, m, x, y, cnt, ed;
short u[N], v[N], mx;
int l[N], qd[N], qn[N];
char s1[25], s2[25], name[10005][25];
map<string, int> DICT;

int trans(char _s[]){
	string s = (string)_s;
	if (DICT[s]) return DICT[s];
	DICT[s] = ++n;
	strcpy(name[n], _s);
	return n;
}

void bd(int x, int y){
	qd[++ed] = y, qn[ed] = l[x], l[x] = ed;
}

int main(){
	scanf("%d", &m);
	while (m--){
		scanf("%s%s", s1, s2);
		x = trans(s1), y = trans(s2);
		bd(x, y), bd(y, x);
	}

	printf("%d\n", n);
	FOE(i,1,n){
		FOE(j,1,n) u[j] = 0;
		mx = 0;

		EXP(j,l[i]) v[qd[j]] = i;
 		EXP(j,l[i]){
			EXP(k,l[qd[j]]){
				if (qd[k] == i || v[qd[k]] == i) continue;
				++u[qd[k]];
				mx = max(mx, u[qd[k]]);
			}
		}
		
		cnt = 0;
		FOE(j,1,n) if (j != i && v[j] != i) cnt += (u[j] == mx);
		printf("%s %d\n", name[i], cnt);
	}
	return 0;
}
