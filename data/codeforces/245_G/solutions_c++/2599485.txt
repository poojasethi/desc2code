#include <iostream>
#include <set>
#include <map>

using namespace std;

const int MAXN = 10000 + 10;

set <string> name;
set <int> g[MAXN];
map <string, int> mm;
int m, n, f[MAXN];

int main()
{
	ios::sync_with_stdio(0);
	cin >> m;
	for (int i = 0 ; i < m ; i++)
	{
		string s1, s2;
		cin >> s1 >> s2;
		if (name.find(s1) == name.end())
		{
			name.insert(s1);
			n++;
			mm[s1] = n;
		}
		if (name.find(s2) == name.end())
		{
			name.insert(s2);
			n++;
			mm[s2] = n;
		}
		int u = mm[s1];
		int v = mm[s2];
		g[u].insert(v);
		g[v].insert(u);
	}
	for (int i = 1 ; i <= n ; i++)
	{
		int cnt = 0;
		int ans = 0;
		for (int j = 1 ; j <= n ; j++)
			if (i != j && g[i].find(j) == g[i].end())
			{
				int temp = 0;
				for (set<int>::iterator it = g[i].begin() ; it != g[i].end() ; it++)
					if (g[j].find(*it) != g[j].end())
						temp++;
				if (temp == cnt)
					ans++;
				if (temp > cnt)
				{
					cnt = temp;
					ans = 1;
				}
			}
		f[i] = ans;
	}
	cout << n << endl;
	for (set<string>::iterator it = name.begin() ; it != name.end() ; it++)
		cout << *it << " " << f[mm[*it]] << endl;
	return 0;
}
