//By Lin
#include<cstdio>
#include<cstring>
#include<map>
#include<string>
#define maxn 5005
using namespace std;

int		ecnt;
struct	Edge{
	int to; 
	Edge *next;
}*mat[maxn*2],edges[maxn*2];
void	link(int x,int y){
	edges[ecnt].to = y;
	edges[ecnt].next = mat[x];
	mat[x] = &edges[ecnt++];
}

int		n,m;
map<string,int> mm;
char 	name[maxn*2][50],s[50];
int		dev[maxn*2];

int		get_id( char s[] ) {
	string ss(s);
	if ( mm.find(ss) == mm.end() ) {
		memcpy( name[n] , s ,  sizeof(name[n]) );
		mm[ss] = n++;
	}
	return mm[ss];
}
int		main(){
	int	g,h;
	scanf("%d", &m );
	while ( m -- ) {
		scanf("%s", s );
		g = get_id(s);
		scanf("%s", s );
		h = get_id(s);
		link(g,h);
		link(h,g);
	}
	printf("%d\n", n );
	for (int i = 0; i<n; i++ ) {
		memset( dev , 0 , sizeof(dev) );
		for ( Edge *p1 = mat[i]; p1 ; p1 = p1->next ) {
			int to = p1->to;
			dev[to] -= maxn*10;
			for ( Edge *p = mat[to]; p ; p = p->next ) {
				int to = p->to;
				dev[to]++;
			}
		}
//		for (int j = 0; j<n; j++) printf("%d ", dev[j]);puts("");
		int g = 0 , h = 0; 
		for (int j = 0; j<n; j++) 
			if ( i!=j ) {
				if ( dev[j] > h ) h = dev[j] , g = 0;
				if ( dev[j] == h ) g++;
			}
		printf("%s %d\n" , name[i] , g );
	}
	return 0;
}
