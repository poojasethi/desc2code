

stdin_flag=1
if not stdin_flag:
  read_line_index=0
  testcasefilename="test.txt"
  Stestcase=open(testcasefilename).read()
  read_line_datas=Stestcase.split("\n")


def debugs(s):
  if not stdin_flag:
    print ";;;",s

#####################################
######################################

def read_line():
  global read_line_index
  if stdin_flag:
    return raw_input()
  else:
    s=read_line_datas[read_line_index]
    read_line_index+=1
    return s

def answer():
  if stdin_flag:
    return solve()
  else:
    while read_line_proceed():
      solve()
      

def read_line_proceed():
  global read_line_index
  print"##################"
  while 1:
    if read_line_index>= len (read_line_datas ):
      return False
    if read_line_datas[read_line_index]=="%%%":
      read_line_index+=1
      return True
    read_line_index+=1


def readint():
  return int (read_line() )


def readints():
  return map(int, read_line().split(" "))

def reads():
  return read_line()




###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################

def compute(m,n,d):
  pass

def solve():
  n,m=readints()
  data=[reads() for i in xrange(n)]
  xx=[0 for i in xrange(m)]
  yy=[0 for i in xrange(n)]
  for y,s in enumerate(data):
    for x,c in enumerate(s):
      if c=="*":
        xx[x]+=1
        yy[y]+=1
  total=0
  debugs(`xx`+`yy`)
  for y,s in enumerate(data):
    for x,c in enumerate(s):
      if c=="*":
        total+=(xx[x]-1)*(yy[y]-1)

  print total

def test():
  pass

test()
answer()
