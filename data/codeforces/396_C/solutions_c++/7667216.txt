#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;
typedef long long ll;
typedef double db;

const int mo=1e9+7,N=3e5+5;
int n,m,len;
ll s[N],t[N];
struct node{
	node *pa,*son,*next;
	int depth,st,en;
	void dfs(){
		st=++len;
		for(node *v=son;v;v=v->next){
			v->depth=depth+1;
			v->dfs();
		}
		en=len;
	}
} V[N];

void add(int x,ll b,ll k){
	for(;x;x-=x&-x) (s[x]+=b)%=mo,(t[x]+=k)%=mo;
}

int main(){
	scanf("%d",&n);
	for(int i=2;i<=n;i++){
		int p; scanf("%d",&p);
		V[i].pa=V+p;
		V[i].next=V[p].son;
		V[p].son=V+i;
	}
	V[1].dfs();
	scanf("%d",&m);
	while(m--){
		int type,v; scanf("%d%d",&type,&v);
		if(type==1){
			ll x,k;
			scanf("%I64d%I64d",&x,&k);
			(x+=k*V[v].depth)%=mo;
			add(V[v].st-1,-x,-k);
			add(V[v].en,x,k);
		}
		else{
			ll b=0,k=0;
			for(int x=V[v].st;x<=len;x+=x&-x)
				(b+=s[x])%=mo,(k+=t[x])%=mo;
			printf("%I64d\n",((b-k*V[v].depth)%mo+mo)%mo);
		}
	}
	scanf("\n");
}
