//be naame khodaa

#include <bits/stdc++.h>

typedef long long ll;

const int maxn = 300005;
const ll MOD = 1e9 + 7;

using namespace std;

int n, q, tot = 0;
ll st[maxn], ed[maxn], h[maxn], son[maxn], next[maxn];
ll fen1[maxn], fen2[maxn];

void dfs(int cur)
{
	st[cur] = ++tot;
	ed[cur] = tot+1;
	for (int u = son[cur]; u; u = next[u])
		dfs(u), ed[cur] = ed[u];
}

void add(int x, int v1, int v2)
{
	for (; x <= n; x += x&-x)
	{
		fen1[x] = (fen1[x] + v1)%MOD;
		fen2[x] = (fen2[x] + v2)%MOD;
	}
}

int get(int x, ll d)
{
	int ans = 0;
	for (; x; x -= x&-x)
	{
		ans = (ans + fen1[x])%MOD;
		ans = (MOD + ans - (d*fen2[x])%MOD)%MOD;
	}
	return (ans + MOD)%MOD;
}

int main()
{
	scanf("%d", &n);
	for (int i = 2; i <= n; i++)
	{
		int p;
		scanf("%d", &p);
		h[i] = h[p]+1;
		next[i] = son[p];
		son[p] = i;
	}
	dfs(1);

	scanf("%d", &q);
	while (q--)
	{
		int type, v, x, k;
		scanf("%d", &type); scanf("%d", &v);
		if (type == 1)
		{
			scanf("%d", &x); scanf("%d", &k);
			add(st[v], (x + h[v]*k)%MOD, k);
			add(ed[v],-((x + h[v]*k)%MOD), -k);
		}
		else
			printf("%d\n", get(st[v], h[v]));
	}
    return 0;
}
