#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

#define mo 1000000007
const int maxn=300010;
int p[maxn],n1[maxn],h[maxn],st[maxn],ed[maxn],tot=0,d[maxn]={0},ee=0,n;

typedef long long ll;

struct BIT {
	ll c[1000010];
	inline void add(int x, ll v)
	{
		for (; x <= n; x += x & -x)
			c[x] = (c[x] + v) % mo;
	}
	inline ll ask(int x)
	{
		ll ans = 0;
		for (; x; x -= x & -x) ans = (ans + c[x]) % mo;
		return ans;
	}
}c1, c2;

void ae(int x,int y){
	p[ee]=y;	n1[ee]=h[x];	h[x]=ee++;
}
void dfs(int x){
	st[x]=++tot;
	for(int i=h[x];~i;i=n1[i])	d[p[i]]=d[x]+1,dfs(p[i]);
	ed[x]=tot;
}
int main(){
	scanf("%d",&n);
	memset(h,-1,sizeof(h));
	int x,y,z,q,op;
	for(int i=2;i<=n;i++){
		scanf("%d",&x);
		ae(x,i);
	}
	dfs(1);
	scanf("%d",&q);
	while(q--){
		scanf("%d",&op);
		if(op==1){
			scanf("%d%d%d",&x,&y,&z);
			c1.add(st[x],(y+1ll*z*d[x])%mo);
			c1.add(ed[x]+1,(-y-1ll*z*d[x])%mo);
			c2.add(st[x],-z);
			c2.add(ed[x]+1,z);
		}else{
			scanf("%d",&x);
			long long ans=c1.ask(st[x])+c2.ask(st[x])*d[x]%mo;
			printf("%I64d\n",(ans%mo+mo)%mo);
		}
	}
	return 0;
}
