#include<cstdio>
#include<vector>
using namespace std;
const int maxn = 1200000, M = 1e9+7;
int n, q, v, k, x, y, tot, plus, l[maxn], r[maxn], d[maxn];
vector<int> rou[maxn];
struct Node {
  int val, flg;
} t[maxn];
void Search(int u, int dep) {
  l[u] = ++tot, d[u] = dep;
  for (int i = 0; i < rou[u].size(); i++) Search(rou[u][i], dep+1);
  r[u] = tot;
}
void Add(int u, int l, int r) {
  if (x<=l && r<=y) {
    t[u].flg = (t[u].flg-k)%M;
    t[u].val = (t[u].val+plus)%M;
  } else {
    int m = (l+r)>>1;
    if (x<=m && l<=y) Add(u<<1, l, m);
    if (x<=r && m+1<=y) Add((u<<1)+1, m+1, r);
  }
}
int Num(int u, int l, int r) {
  int ans = 0;
  if (l < r) {
    int m = (l+r)>>1;
    if (l<=x && x<=m) ans = Num(u<<1, l, m);
    if (m+1<=x && x<=r) ans = Num((u<<1)+1, m+1, r);
  }
  return (1LL*d[v]*t[u].flg+t[u].val+ans)%M;
}
int main()
{
  scanf("%d", &n);
  for (int i = 2; i <= n; i++) {
    scanf("%d", &q);
    rou[q].push_back(i);
  }
  Search(1, 0);
  scanf("%d", &q);
  for (int t, i = 1; i <= q; i++) {
    scanf("%d%d", &t, &v);
    x = l[v], y = r[v];
    if (t == 1) {
      scanf("%d%d", &plus, &k);
      plus = (1LL*d[v]*k+plus)%M, Add(1, 1, n);
    } else {
      printf("%d\n", (Num(1, 1, n)+M)%M);
    }
  }
}