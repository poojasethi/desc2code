#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
typedef long long ll;
#define rep(i,n) for (int i=1;i<=n;++i)
const int N=600005,P=1000000007;
int n,fa,type,x,v,k,Q,tot,L[N],R[N],d[N],son[N],next[N],a[N],b[N];
void dfs(int x)
{
	L[x]=++tot;
	for (int p=son[x],y;p;p=next[p]) dfs(p);
	R[x]=tot;
}
int get(int x,ll d)
{
	int ans=0;
	for (;x;x-=x&-x) ans=(ans+a[x])%P,ans=(ans+d*b[x])%P;
	return (ans+P)%P;
}
void add(int x,int v1,int v2)
{
	for (;x<=n;x+=x&-x) a[x]=(a[x]+v1)%P,b[x]=(b[x]+v2)%P;
}
int main()
{
	scanf("%d",&n);
	rep(i,n) if (i>1) scanf("%d",&fa),d[i]=d[fa]+1,next[i]=son[fa],son[fa]=i;
	dfs(1);
	scanf("%d",&Q);
	while (Q--){
		scanf("%d%d",&type,&x);
		if (type==2) printf("%d\n",get(L[x],d[x]));
		else scanf("%d%d",&v,&k),add(L[x],(v+1LL*d[x]*k)%P,-k),add(R[x]+1,-(v+1LL*d[x]*k)%P,k);
	}
	return 0;
}
