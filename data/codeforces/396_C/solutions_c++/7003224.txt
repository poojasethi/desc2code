#include <stdio.h>
#include<algorithm>
#include<vector>
using namespace std;
#define N 300100
#define Mod 1000000007
typedef __int64 ll;
int p[N];
int a[N], dis[N];
int st[N], en[N];
int cnt;
ll A[N], B[N], C[N];
vector<int>jjw[N];
void DFS(int u,int step){
	int sz,k;
	++cnt;
	a[cnt]=u, dis[cnt]=step;
	st[u]=cnt;
	sz=jjw[u].size();
	for (int i=0;i<sz;i++){
		k=jjw[u][i];
		DFS(k, step+1);
	}
	en[u]=cnt;
}

void Add(int pos, ll x, ll k, ll d) {
	for (int i=pos; i<=cnt; i+=i&-i) {
		A[i]=(A[i]+x)%Mod;
		B[i]=(B[i]-k)%Mod;
		C[i]=(C[i]+k*d)%Mod;
	}
}
ll Calc(int pos) {
	ll ret=0;
	ll AA=0, BB=0, CC=0;
	for (int i=pos; i; i-=i&-i) {
		AA=(AA+A[i])%Mod;
		BB=(BB+B[i])%Mod;
		CC=(CC+C[i])%Mod;
	}
	ret=(AA+BB*dis[pos]+CC)%Mod;
	if (ret<0) ret+=Mod;
	return ret;
}

int main(){
	int n, q,i;
	scanf("%d", &n);
	for(i=2;i<=n;i++){
		scanf("%d",p+i);
		jjw[p[i]].push_back(i);
	}
	cnt=0;
	DFS(1, 0);
	scanf("%d", &q);
	while (q--){
		int type, v;
		scanf("%d %d", &type,&v);
		if (type==1){
			ll x, k;
			scanf("%I64d %I64d", &x, &k);
			Add(st[v],x,k,1LL*dis[st[v]]);
			Add(en[v]+1,-x,-k,1LL*dis[st[v]]);
		}
		else {
			printf("%I64d\n", Calc(st[v]));
		}
	}
}
