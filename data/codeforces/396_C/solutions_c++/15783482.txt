#include <bits/stdc++.h>
using namespace std;
#define ll long long
const int N = 3e5+5;
const int mod= 1e9+7;
ll hvk[N*8],K[N*8];
vector<int> adj[N];
int s[N],f[N],pp=0,h[N];
void dfs(int ind,int H){
	s[ind]= ++pp;
	h[ind]= H;
	int i;
	for(i=0;i<adj[ind].size();++i)
		dfs(adj[ind][i],H+1);
	f[ind]= ++pp;
}
void update(int v,int x,int k,int pos,int l,int r){
	if(f[v]<=l || s[v]>=r)return;
	if(s[v]<=l && r<=f[v]){
		(K[pos] += k)%=mod;
		(hvk[pos] +=  1LL*h[v]*k  + x)%=mod;
		return;
	}
	int mid = (l+r)/2;
	update(v,x,k,2*pos,l,mid);
	update(v,x,k,2*pos+1,mid,r);
}
ll query(int v,int pos,int l,int r){
	if(f[v]<=l || s[v]>=r)return 0;
	ll ans=0;
	ans = (hvk[pos]- (K[pos]*h[v])%mod+mod)%mod;
	if(r-l<2)return ans;
	int mid=(l+r)/2;
	if(s[v]<mid)return (ans+query(v,2*pos,l,mid))%mod;
	return (ans+query(v,2*pos+1,mid,r))%mod;
}
int main(){
	memset(hvk,0,sizeof(hvk));
	memset(K,0,sizeof(K));
	int type,v,k,xn,q,i,j,a,x,n;
	cin>>n;
	for(i=2;i<=n;++i)
		scanf("%d",&a),adj[a].push_back(i);
	dfs(1,1);
	cin>>q;
	while(q--){
		scanf("%d%d",&type,&v);
		if(type==2){
			cout<<query(v,1,1,pp)<<endl;
		}
		else{
			scanf("%d%d",&x,&k);
			update(v,x,k,1,1,pp);
		}
	}
}
