#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 600010
#define mo 1000000007
#define int64 long long
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,t,x,y,z,ty;
int next[N],head[N],L[N],R[N],dep[N],tr[2][N];
void dfs(int x) {
	L[x]=++t;
	int v;
	for (v=head[x];v;v=next[v]) dep[v]=dep[x]+1,dfs(v);
	R[x]=++t;
}
inline void inc(int x,int y,int z) {
	for (;x<=t;x+=x&-x) tr[z][x]=(tr[z][x]+y)%mo;
}
inline void add(int x,int y,int z) {
	inc(L[x],y,z);
	inc(R[x],-y,z);
}
inline int cal(int x,int z) {
	int an=0;
	for (;x;x-=x&-x) an=(an+tr[z][x])%mo;
	return an;
}
int main() {
	scanf("%d",&n);
	For(i,2,n) {
		scanf("%d",&k);
		next[i]=head[k],head[k]=i;
	}
	dfs(1);
	scanf("%d",&m);
	For(i,1,m) {
		scanf("%d",&ty);
		if (ty==1) {
			scanf("%d%d%d",&x,&y,&z);
			add(x,-z,0);
			add(x,((int64)z*dep[x]+y)%mo,1);
		} else {
			scanf("%d",&x);
			int64 A=cal(L[x],0),B=cal(L[x],1),an=(B+A*dep[x])%mo;
			if (an<0) an+=mo;
			printf("%I64d\n",an);
		}
	}
	//for(;;);
	return 0;
}
