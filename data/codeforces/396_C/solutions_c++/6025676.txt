#include <iostream>
#include <vector>
#include <cstdio>
using namespace std;
const int MOD=1e9+7;
const int N=3e5+10;
typedef long long ll;
vector<int> G[N];
ll bit1[N],bit2[N], level[N];
int n,q,L[N],R[N],a, line=0;
void dfs(int u, int fa, int l) {
    L[u]=++line;
    level[u]=l;
    for(int i=0;i<G[u].size();i++) {
        int v=G[u][i];
        if(v==fa) continue;
        dfs(v, u, l+1);
    }
    R[u]=line;
}

void add(int x, ll v1, ll v2) {
    for(; x<=n; x+=(x&(-x))) {
        bit1[x]+=v1;
        bit2[x]+=v2;
        bit1[x]=(bit1[x]+MOD)%MOD;
        bit2[x]=(bit2[x]+MOD)%MOD;
    }
}

ll sum(int v) {
    ll ans=0;
    int x=L[v];
    int k=level[v];
    for(; x>=1; x-=(x&(-x))) {
        ans=(ans+bit1[x]+MOD)%MOD;
        ans=(ans-k*bit2[x]+MOD)%MOD;
    }
    return (ans+MOD)%MOD;
}
int main() {
  //  freopen("c:\\data.txt","r", stdin);
    cin>>n;
    for(int i=2;i<=n;i++) {
        cin>>a;
        G[i].push_back(a);
        G[a].push_back(i);
    }
    dfs(1,-1,1);
  //  for(int i=1;i<=3;i++) cout<<L[i]<<" "<<R[i]<<" "<<level[i]<<endl;
    int cmd, v;
    ll x, k;
    cin>>q;
    while(q--) {
        cin>>cmd;
        if(cmd==1) {
            cin>>v>>x>>k;
            add(L[v],x+level[v]*k, k);
            add(R[v]+1,(-(x+level[v]*k)+MOD)%MOD,(-k+MOD)%MOD);
        } else {
            cin>>v;
            cout<<sum(v)<<endl;
        }
    }
}
