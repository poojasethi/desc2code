#include <stdio.h>
#define N 300100

typedef __int64 ll;

int to[N], next[N], head[N];
int p[N];
int a[N], dis[N];
int st[N], en[N];
int cnt;
ll A[N], B[N], C[N];
const ll Mod=1000000007;

void DFS(int u, int dp) {
	++cnt;
	a[cnt]=u, dis[cnt]=dp;
	st[u]=cnt;
	for (int i=head[u]; i; i=next[i]) {
		int v=to[i];
		DFS(v, dp+1);
	}
	en[u]=cnt;
}

void Add(int pos, ll x, ll k, ll d) {
	for (int i=pos; i<=cnt; i+=i&-i) {
		A[i]=(A[i]+x)%Mod;
		B[i]=(B[i]-k)%Mod;
		C[i]=(C[i]+k*d)%Mod;
	}
}

ll Calc(int pos) {
	ll ret=0;
	ll AA=0, BB=0, CC=0;
	for (int i=pos; i; i-=i&-i) {
		AA=(AA+A[i])%Mod;
		BB=(BB+B[i])%Mod;
		CC=(CC+C[i])%Mod;
	}
	ret=(AA+BB*dis[pos]+CC)%Mod;
	if (ret<0) ret+=Mod;
	return ret;
}

int main() {
	int n, q;
//	freopen ("big.in", "r", stdin);
//	freopen ("out.txt", "w", stdout);
	scanf("%d", &n);
	for (int i=2; i<=n; i++) {
		scanf("%d", p+i);
		to[i-1]=i, next[i-1]=head[p[i]], head[p[i]]=i-1;
	}
	cnt=0;
	DFS(1, 0);
	scanf("%d", &q);
	while (q--) {
		int bf, v;
		scanf("%d %d", &bf, &v);
		if (bf==1) {
			ll x, k;
			scanf("%I64d %I64d", &x, &k);
			Add(st[v], x, k, 1LL*dis[st[v]]);
			Add(en[v]+1, -x, -k, 1LL*dis[st[v]]);
		} else {
			printf("%I64d\n", Calc(st[v]));
		}
	}
}
