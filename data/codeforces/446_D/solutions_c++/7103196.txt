#include <cstdio>
#include <vector>
using namespace std;
const int N=510;
const int T=110;
double p[N][N];
double con[N][N];
double inv[N][N];
double trans[T][T];
double transT[T][T];
double prob[T];
double probT[T];
void mul(int n){
	for(int i=0;i<n;i++)probT[i]=prob[i];
	for(int i=0;i<n;i++){
		prob[i]=0;
		for(int j=0;j<n;j++)prob[i]+=probT[j]*trans[j][i];
	}
	//puts("prob-----");
	//for(int i=0;i<n;i++)printf("%lf ",prob[i]);puts("");
}
void printT(int n){
	puts("----trans----");
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++)printf("%lf ",trans[i][j]);puts("");
	}
}
void square(int n){
	for(int i=0;i<n;i++)for(int j=0;j<n;j++)transT[i][j]=trans[i][j];
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			trans[i][j]=0;
			for(int k=0;k<n;k++)trans[i][j]+=transT[i][k]*transT[k][j];
		}
	}
	//printT(n);
}
typedef vector<int> VI;
int t[N];
double d[N];
int n,m,k;
void add(int a,int b){
	d[a]+=1;d[b]+=1;
	if(t[b]!=1)p[a][b]-=1;
	if(t[a]!=1)p[b][a]-=1;
	con[a][b]+=1;con[b][a]+=1;
}
void init(){
	for(int i=1;i<=n;i++)for(int j=1;j<=n;j++)
	{
		if(i!=j)con[i][j]=inv[i][j]=p[i][j]=0;
		else {
			inv[i][j]=p[i][j]=1;
			con[i][j]=0;
		}
	}
	for(int i=1;i<=n;i++)d[i]=0;
}
void normM(){
		for(int i=1;i<=n;i++){
			for(int j=1;j<=n;j++){
				if(i!=j){
					p[i][j]/=d[i];
					con[i][j]/=d[i];
				}
			}
		}
}
void printP(double p[][N]){
		puts("--------");
		for(int i=1;i<=n;i++){
			for(int j=1;j<=n;j++){
				printf("%lf ",p[i][j]);
			}
			puts("");
		}
}
double calc(int i,int j){
	double ans=0;
	for(int k=1;k<=n;k++)ans+=inv[i][k]*con[k][j];
	return ans;
}
int main(){

	while(~scanf("%d %d %d",&n,&m,&k)){
		init();
		VI w;
		for(int i=0;i<n;i++){
			scanf("%d",&t[i+1]);
			if(t[i+1]==1)w.push_back(i+1);
		}
		int tmp1,tmp2;
		for(int i=0;i<m;i++){
			scanf("%d %d",&tmp1,&tmp2);
			add(tmp1,tmp2);
		}
		normM();
		//printP(p);//printP(inv);
		//printP(con);
		for(int i=1;i<=n;i++){
			double c=p[i][i];
			for(int j=1;j<=n;j++){
				p[i][j]/=c;
				inv[i][j]/=c;
			}
			for(int j=1;j<=n;j++){
				if(j!=i){
					c=p[j][i];
					for(int k=1;k<=n;k++){
						p[j][k]-=c*p[i][k];
						inv[j][k]-=c*inv[i][k];
					}
				}
			}
		}
		//printP(inv);//printP(p);
		for(int i=0;i<w.size();i++){
			for(int j=0;j<w.size();j++){
				trans[i][j]=calc(w[i],w[j]);
			}
		}
		for(int i=0;i<w.size();i++){
		prob[i]=calc(1,w[i]);}//printf("%lf ",prob[i]);}

		k-=2;
		while(k>0){
			//printf("k= %d\n",k);
			if(k%2==1)mul(w.size());
			square(w.size());
			k/=2;
		}
		printf("%lf\n",prob[w.size()-1]);
	}
}
