#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
#include <cassert>
#include <complex>
using namespace std;
#define rep(i,a,n) for (int i=a;i<(int)n;i++)
#define per(i,a,n) for (int i=n-1;i>=a;i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define SZ(x) ((int)(x).size())
#define ACCU accumulate
#define TWO(x) (1<<(x))
#define TWOL(x) (1ll<<(x))
#define clr(a) memset(a,0,sizeof(a))
#define POSIN(x,y) (0<=(x)&&(x)<n&&0<=(y)&&(y)<m)
#define PRINTC(x) cout<<"Case #"<<++__<<": "<<x<<endl 
#define POP(x) (__builtin_popcount(x))
#define POPL(x) (__builtin_popcountll(x))
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long ll;
typedef long double LD;
typedef pair<int,int> PII;
typedef pair<ll,ll> PLL;
typedef vector<ll> VL;
typedef vector<PII> VPII;
typedef complex<double> CD;
const int inf=0x20202020;
const ll mod=1000000009;
const double eps=1e-9;
const double pi=3.1415926535897932384626;
const int DX[]={1,0,-1,0},DY[]={0,1,0,-1};
ll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll powmod(ll a,ll b,ll mod) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}
// head

const int N=510;
int n,m,l,x,y;
int g[N][N],d[N],tp[N];
double mat[N][2*N],res[N][N],base[N][N],tmp[N][N],p[N][N];
double b[N];
VI vep;
int main() {
	scanf("%d%d%d",&n,&m,&l); l-=2;
	rep(i,0,n) scanf("%d",tp+i);
	rep(i,0,m) {
		scanf("%d%d",&x,&y); --x; --y;
		g[x][y]++; g[y][x]++;
		d[x]++; d[y]++;
	}
	rep(i,0,n) rep(j,0,n) if (i==j) mat[i][j]=1;
		else if (!tp[j]) mat[i][j]=-1.*g[i][j]/d[j];
	rep(i,0,n) mat[i][i+n]=1;
	rep(i,0,n) {
		double coff=mat[i][i];
		rep(j,0,2*n) mat[i][j]/=coff;
		rep(j,0,n) if (j!=i) {
			coff=-mat[j][i];
			rep(k,0,2*n) mat[j][k]+=coff*mat[i][k];
		}
	}
	rep(i,0,n) {
		rep(j,0,n) b[j]=1.*g[i][j]/d[i];
		rep(j,0,n) rep(k,0,n) p[i][j]+=mat[j][k+n]*b[k];
	}
	rep(i,0,n) if (tp[i]) vep.pb(i);
	m=SZ(vep);
	rep(i,0,m) rep(j,0,m) base[i][j]=p[vep[i]][vep[j]];
	rep(i,0,m) res[i][i]=1;
	for (;l;l>>=1) {
		if (l&1) {
			rep(i,0,m) rep(j,0,m) {
				tmp[i][j]=0;
				rep(k,0,m) tmp[i][j]+=res[i][k]*base[k][j];
			}
			rep(i,0,m) rep(j,0,m) res[i][j]=tmp[i][j];
		}
		rep(i,0,m) rep(j,0,m) {
			tmp[i][j]=0;
			rep(k,0,m) tmp[i][j]+=base[i][k]*base[k][j];
		}
		rep(i,0,m) rep(j,0,m) base[i][j]=tmp[i][j];
	}
	double ans=0;
	rep(i,0,m) ans+=p[0][vep[i]]*res[i][m-1];
	printf("%.10f\n",ans);
}
