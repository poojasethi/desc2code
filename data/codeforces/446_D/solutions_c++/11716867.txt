#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define n   105
#define m   505
#define DB  double
#define CH  (ch=getchar())
#define For(i,a,b)  for(int i=a;i<=b;i++)

int     N,M,K,A[m],ID[m],B[m][m];
DB      Ans,F[m][m],Inv[m][m];

int     IN(){
        int x=0,ch;
        for (;CH<'0'||ch>'9';);
        for (;ch>='0'&&ch<='9';CH)  (x*=10)+=ch-'0';
        return  x;
}

struct  Mat{
        DB      A[n][n];
        Mat()   {memset(A,0,sizeof(A));}

        Mat operator *  (const Mat&b){
            Mat c,a=*this;
            For(i,1,*ID)    For(j,1,*ID)    For(k,1,*ID)
                c.A[i][j]+=a.A[i][k]*b.A[k][j];
            return  c;
        }
        Mat operator ^  (int b){
            Mat ret,a=*this;
            For(i,1,*ID)    ret.A[i][i]=1;
            for (;b;b>>=1,a=a*a)
                if  (b&1)   ret=ret*a;
            return  ret;
        }
}S;

int     main(){
        N=IN(); M=IN(); K=IN();
        For(i,1,N)  {
            A[i]=IN();
            if  (A[i])  ID[i]=++*ID;
        }
        For(i,1,M)  {
            int u=IN(),v=IN();
            B[u][v]++;  ++*B[u];    B[v][u]++;  ++*B[v];
        }

        For(i,1,N)  For(j,1,N)
            if  (!A[j]&&B[j][i])    F[i][j]-=1.*B[j][i]/(*B[j]);
        For(i,1,N)  F[i][i]++,Inv[i][i]=1;

        for (int i=1,j;i<=N;i++){
            for (j=i;j<=N&&!F[j][i];j++);
            if  (j>N)   continue;
            For(k,1,N)  swap(F[j][k],F[i][k]),swap(Inv[j][k],Inv[i][k]);

            DB  t=F[i][i];
            For(j,1,N)  F[i][j]/=t,Inv[i][j]/=t;
            For(j,1,N)  if  (i^j)   {
                t=F[j][i];
                For(k,1,N)  F[j][k]-=t*F[i][k],Inv[j][k]-=t*Inv[i][k];
            }
        }

        For(i,1,N)  if  (A[i])  For(j,1,N)  if  (B[i][j])
            For(k,1,N)  if  (A[k])  S.A[ID[i]][ID[k]]+=1.*Inv[k][j]*B[i][j]/(*B[i]);
        S=S^(K-2);
        For(i,1,N)  if  (A[i])  Ans+=Inv[i][1]*S.A[ID[i]][*ID];
        printf("%.10lf\n",Ans);
}