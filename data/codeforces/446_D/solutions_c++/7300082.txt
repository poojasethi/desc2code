#include<cstdio>
#include<cstring>
#include<vector>
#include<cmath>

using namespace std;

typedef vector<double> vd;
typedef vector<vd>    vvd;

vvd mul(const vvd &a, const vvd &b) {
    vvd ret(a.size(), vd(a.size(), 0));
    for(int k=0;k<a.size();++k)
    for(int i=0;i<a.size();++i) if(a[i][k]>1e-9)
    for(int j=0;j<a.size();++j) if(b[k][j]>1e-9)
        ret[i][j] += a[i][k] * b[k][j];
    return ret;
}

vector<int> trap;
int n,m,k;
int ck[505];
int deg[505],edge[505][505];
double mat[505][505*2];

int main(){
#ifdef LOCAL
    freopen("input.txt","r",stdin);
#endif
    scanf("%d%d%d",&n,&m,&k);
    for(int i=0;i<n;++i) {
        scanf("%d",ck+i);
        if(ck[i]) trap.push_back(i);
    }
    while(m--) {
        int u,v; scanf("%d%d",&u,&v),u--,v--;
        deg[u]++, deg[v]++;
        edge[u][v]++, edge[v][u]++;
    } m = trap.size();
    for(int i=0;i<n;++i) {
        mat[i][i] = mat[i][n+i] = 1;
        if(!ck[i]) {
            for(int j=0;j<n;++j) if(i != j)
                mat[i][j] = -double(edge[i][j]) / deg[i];
        }
    }

    for(int i=0;i<n;++i) {
        double h = mat[i][i];
        for(int k=0;k<2*n;++k) mat[i][k] /= h;
        for(int j=0;j<n;++j) if(j != i) {
            double t = mat[j][i] / mat[i][i];
            for(int k=0;k<2*n;++k) mat[j][k] -= t * mat[i][k];
        }
    }

    vvd a(m,vd(m,0));
    vvd ret(m,vd(m,0));
    for(int i=0;i<m;++i) {
        for(int j=0;j<m;++j) {
            int u = trap[i];
            int v = trap[j];
            a[i][j] = 0;
            for(int k=0;k<n;++k) a[i][j] += mat[k][v+n] * edge[u][k] / deg[u];
        }
    }
    for(int i=0;i<m;++i) ret[ i ][ i ] = mat[0][ trap[i] + n ];

    k -= 2;

    while(k) {
        if(k & 1) ret = mul(ret, a);
        a = mul(a, a), k >>= 1;
    }

    double ans = 0;
    for(int i=0;i<m;++i) ans += ret[i][m-1];
    printf("%.5lf\n",ans);

}