#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<vector>
#include<map>
#include<queue>
#include<string>
#include<bitset>
#include<iomanip>
#include<iostream>
#include<cmath>
using namespace std;
 
#define rep(i,x,y) for(i=x;i<=y;i++)
#define _rep(i,x,y) for(i=x;i>=y;i--)
#define CL(S,x) memset(S,x,sizeof(S))
#define CP(S1,S2) memcpy(S1,S2,sizeof(S2))
#define ALL(x,S) for(x=S.begin();x!=S.end();x++)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define fi first
#define se second
#define upmin(x,y) x=min(x,y)
#define upmax(x,y) x=max(x,y)
#define pb push_back
#define COUT(S,x) cout<<fixed<<setprecision(x)<<S<<endl
 
typedef long long ll;
typedef double ld;
typedef pair<int,int> pii;
 
template<class T> inline void read(T&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};
template<class T> inline void read(T&x,T&y){read(x);read(y);}
template<class T> inline void read(T&x,T&y,T&z){read(x);read(y);read(z);}
inline char getc(){char c;for(c=getchar();c<=32;c=getchar());return c;}

 

const int N=503;
const int L=N;

const ld eps=1e-12;
int n,m,hp,h,i,j,k,l,p,x,y,z,t;
int a[N],e[N][N];int d[N];
ld c[N][N+N],b[N+N];
void gauss()
{
    int i,j,k,l,p;
    rep(i,1,n)
    {
        rep(j,i,n)if(abs(c[j][i])>abs(c[i][i]))
        {rep(k,1,n+n)swap(c[j][k],c[i][k]);}
        rep(j,1,n)if(j!=i){ld K=c[j][i]/c[i][i];rep(k,i,n+n)c[j][k]-=c[i][k]*K;}
    }
}


struct mat{ld s[L][L];}G,E,T,D;

mat operator*(mat a,mat b)
{
    mat c;int i,j,k;
    rep(i,1,n)rep(j,1,n)c.s[i][j]=0;
    
    rep(i,1,n)rep(k,1,n)if(a.s[i][k]>0)
    rep(j,1,n)c.s[i][j]=c.s[i][j]+a.s[i][k]*b.s[k][j];
    
    return c;
}
mat operator^(mat a,ll x){mat ans=E;for(;x;x>>=1,a=a*a)if(x&1)ans=ans*a;return ans;}
void print(mat a){int i,j;rep(i,1,n)rep(j,1,n)printf("%.3lf%s",a.s[i][j],j==n?"\n":" ");printf("\n");}


int main()
{
    //freopen("1.in","r",stdin);freopen("1.out","w",stdout);
    
    read(n,m,hp);
    rep(i,1,n)read(a[i]);
    rep(i,1,m)
    {
        read(x,y);
        e[x][y]++;d[x]++;
        e[y][x]++;d[y]++;
    }
    
    rep(i,1,n)rep(j,1,n)if(a[j]==0)c[i][j]+=1.0*e[i][j]/d[i];
    rep(i,1,n)c[i][i]-=1;
    rep(i,1,n)c[i][n+i]=1;
     
    gauss();
    
    
    rep(i,1,n)E.s[i][i]=1;
    
    rep(i,1,n)rep(j,1,n)
    if(a[j])D.s[j][i]+=1.0*e[i][j]/d[i];
    
    rep(i,1,n)rep(j,1,n)
    T.s[j][i]=c[i][n+j]/(-c[i][i]);
    
    //print(D);
    
    //print(T);
    
    D=D*T;
    D=D^(hp-1);
    
    //print(D);
    //print(D);
    
    cout<<D.s[n][1]<<endl;
    
    scanf("\n");
    return 0;
}
