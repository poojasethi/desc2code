#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <cmath>

using namespace std;

typedef long long int lint;

char s[100005];
int n;

int ind[100005];
int alto[100005];

int valor[100005];
int posicion[100005];
int ivalor=-1;

int sa[100005];
int tmp[100005];
int pos[100005];
int gap;

bool compara(int i1,int i2)
{
  if (pos[i1]<pos[i2]) return true;
  if (pos[i1]>pos[i2]) return false;
  i1+=gap;
  i2+=gap;
  if (i1<n and i2<n) return pos[i1]<pos[i2];
  return i1>i2;
}

int main()
{
  scanf("%s",s);
  n=strlen(s);
  for (int i=0;i<n;i++) {
    pos[i]=s[i];
    sa[i]=i;
  }
  gap=1;
  tmp[0]=0;
  do {
    sort(sa,sa+n,compara);
    for (int i=0;i<n-1;i++)
      tmp[i+1]=tmp[i]+compara(sa[i],sa[i+1]);
    for (int i=0;i<n;i++)
      pos[sa[i]]=tmp[i];
    gap*=2;
  } while (tmp[n-1]!=n-1);
  int k=0;
  for (int i=0;i<n;i++) {
    if (pos[i]!=n-1) {
      while (i+k<n and sa[pos[i]+1]+k<n and s[i+k]==s[sa[pos[i]+1]+k]) k++;
      alto[pos[i]]=k;
      if (k) k--;
    }
  }
  alto[n-1]=0;
  lint sol=n;
  for (int i=0;i<n;i++) {
    sol+=n-1-i;
    ivalor++;
    valor[ivalor]=alto[i];
    posicion[ivalor]=i;
    while (ivalor>0 and valor[ivalor-1]>=valor[ivalor]) {
      int valorant=0;
      int posant=-1;
      if (ivalor-1>0) {
	valorant=valor[ivalor-2];
	posant=posicion[ivalor-2];
      }
      sol+=lint(i-posant)*(i-posant-1)/2*
	(valor[ivalor-1]-max(valorant,valor[ivalor]));
      valor[ivalor-1]=valor[ivalor];
      posicion[ivalor-1]=posicion[ivalor];
      ivalor--;
    }
  }
  cout<<sol<<endl;
}
