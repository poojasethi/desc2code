#include<cstdio>
#include<cstring>

#define MAXX 100111
#define MAXN (MAXX<<1)
#define N 26

int nxt[MAXN][N],fal[MAXN],val[MAXN],cnt;
long long sz[MAXN];
int rt,last;

inline int neww(int v=0)
{
    val[++cnt]=v;
    return cnt;
}

inline void add(int w)
{
    static int p,np,q,nq;
    p=last;
    last=np=neww(val[p]+1);
    sz[np]=1;
    while(p && !nxt[p][w])
    {
        nxt[p][w]=np;
        p=fal[p];
    }
    if(!p)
        fal[np]=rt;
    else
    {
        q=nxt[p][w];
        if(val[q]==val[p]+1)
            fal[np]=q;
        else
        {
            nq=neww(val[p]+1);
            memcpy(nxt[nq],nxt[q],sizeof nxt[0]);
            fal[nq]=fal[q];

            fal[q]=fal[np]=nq;
            while(p && nxt[p][w]==q)
            {
                nxt[p][w]=nq;
                p=fal[p];
            }
        }
    }
}

int len,v[MAXN],the[MAXN];

long long ans,tmp;
char buf[MAXX];
int i,j,k;

int main()
{
    scanf("%s",buf);
    rt=last=neww();
    for(i=0;buf[i];++i)
        add(buf[i]-'a');
    len=i;
    for(i=1;i<=cnt;++i)
        ++v[val[i]];
    for(i=1;i<=len;++i)
        v[i]+=v[i-1];
    for(i=1;i<=cnt;++i)
        the[v[val[i]]--]=i;
    for(i=cnt;i;--i)
        if(fal[k=the[i]])
        {
            sz[fal[k]]+=sz[k];
            tmp=val[k]-val[fal[k]];
            ans+=(sz[k]*(sz[k]+1)/2)*tmp;
        }
    printf("%I64d\n",ans);
    return 0;
}
