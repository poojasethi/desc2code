#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <vector>
#include <stack>
#include <queue>
#define fi first
#define se second
#define ll long long 
#define pb push_back
#define mp make_pair
#define maxn 500005
#define pii pair  <int ,int > 
using namespace std;
ll res;
char str[maxn];
pair < pii,int > d[maxn];
int suf[maxn][20],ar[maxn],i,j,k,n,m,a,b,c,h[maxn],len[maxn];
int lcp(int x,int y){
	int cnt=0,i;
	for(i=18;i>=0;i--){
		if(suf[x][i]==suf[y][i]){
			x+=(1<<i);
			y+=(1<<i);
			cnt+=(1<<i);
		}
	}
	return cnt;
}
void judge(){
	 stack < pair < int ,int > > s;
	 s.push(mp(-1,0));
	 int i;
	 h[0]=-1;
	 for(i=1;i<=n;i++){
		 while(h[i]<=h[s.top().se]){
			 int wid=s.top().fi;
			 s.pop();
			 int mx=max(h[i],h[s.top().se]);
			 res+=(i-s.top().se)*1ll*(wid-mx)*(i-s.top().se+1)/2;
	     }
	     s.push(mp(h[i],i));
	 }
}
int main(){
	//freopen("123d.gir","r",stdin);
	//freopen("123d.cik","w",stdout);
	scanf("%s",str+1);
	n=strlen(str+1);
	for(i=1;i<=n;i++)
	d[i]=mp(mp(str[i],0),i);
	sort(d+1,d+n+1);
	for(i=1;i<=n;i++)
		suf[d[i].se][0]=suf[d[i-1].se][0]+(d[i].fi!=d[i-1].fi);
	for(i=1;i<=18;i++){
		for(j=1;j<=n;j++)
		d[j]=mp( mp(suf[j][i-1],suf[j+(1<<i-1)][i-1]),j);
		sort(d+1,d+n+1);
		for(j=1;j<=n;j++)
		suf[d[j].se][i]=suf[d[j-1].se][i]+(d[j].fi!=d[j-1].fi);
	}
	for(i=1;i<=n;i++){
	ar[suf[i][18]]=i;
	len[i]=n-d[i].se+1;
    }
	for(i=1;i<n;i++)
	h[i]=lcp(ar[i],ar[i+1]);
	res+=(n-len[1]+1-h[1]);
	for(i=2;i<n;i++)
	res+=(n-len[i]+1-max(h[i-1],h[i]));
	res+=(n-len[i]+1-h[i-1]);
	judge();
	printf("%lld\n",res);
	return 0;
}
