#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
#define N 100010
struct node
{
    node *parent, *next, *go[26];
    int sum, len;
};
node mem[N*2], *head[N], *root, *last, *cur;
node *new_node(int len =0)
{
    memset(cur->go, 0, sizeof cur->go);
    cur->sum = 0;
    cur->len = len;
    cur->next = head[len];
    head[len] = cur;
    return cur++;
}
void init()
{
    memset(head, 0, sizeof head);
    cur =mem;
    root = last = new_node();
}
void extend(int w)
{
    node *p = last;
    node *np = new_node(p->len + 1);
    np->sum = 1;
    while(p&&!p->go[w])
        p->go[w] = np, p = p->parent;
    if(!p)np->parent = root;
    else
    {
        node *q = p->go[w];
        if(p->len + 1 ==q->len)
            np->parent = q;
        else
        {
            node *nq = new_node(p->len + 1);
            memcpy(nq->go, q->go, sizeof q->go);
            nq->parent = q->parent;
            q->parent = nq;
            np->parent = nq;
            while(p&&p->go[w]==q)
                p->go[w] = nq, p = p->parent;
        }
    }
    last = np;
}
char s[N];
int main(int argc, char **argv)
{
    scanf("%s",s);
    init();
    for(char *c = s;*c;c++)
        extend(*c - 'a');
    long long ans = 0;
    for(int i = strlen(s);i>0;i--)
        for(node *t= head[i];t;t=t->next)
            if(t->parent)
            {
                t->parent->sum += t->sum;
                ans += (long long)(t->len - t->parent->len) * t->sum * (t->sum+1)/2;
            }
            else ans += (long long)t->len * t->sum * (t->sum+1)/2;
    cout<<ans<<endl;
    return 0;
}
