#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int N = 200010;
struct samnode
{
    int l;
    long long ml;
    samnode *ch[26],*f;
}e[N],*tail,*head,*tmp,*a[N];

int cnt = 0;
void add(int c,int len)
{
    samnode *p = tail,*np = &e[cnt ++];
    np->l = len;
    np->ml = 0;
    for(; p && !p->ch[c]; p = p->f) p->ch[c] = np;
    tail = np;
    if(!p) np->f = head;
    else {
        if(p->ch[c]->l == p->l + 1) np->f = p->ch[c];
        else {
            samnode *q = p->ch[c], *r = &e[cnt ++];
            *r = *q;
            r->ml = 0;
            r->l = p->l + 1;
            q->f = np->f = r;
            for(; p && p->ch[c] == q; p = p->f) p->ch[c] = r;
        }
    }
}

char s[N];
int c[N];

void topo_sort()
{
    for(int i = 0; i < cnt; i ++) c[i] = 0;
    for(int i = 0; i < cnt; i ++)
        c[e[i].l] ++;
    for(int i = 1; i < cnt; i ++) c[i] += c[i - 1];
    for(int i = 0; i < cnt; i ++) a[-- c[e[i].l]] = &e[i];
}

int main()
{
    scanf("%s",s);
    tmp = tail = head = &e[cnt ++];
    for(int i = 0; s[i]; i ++)
        add(s[i] - 'a',i + 1);
    topo_sort();
    tmp = head;
    for(int i = 0; s[i]; i ++)
        (tmp = tmp->ch[s[i] - 'a'])->ml ++;
    long long ans = 0;
    for(int i = cnt - 1; i > 0; i --) {
        a[i]->f->ml += a[i]->ml;
        ans += a[i]->ml * (a[i]->ml + 1) / 2 * (a[i]->l - a[i]->f->l);
    }
    cout << ans << endl;
    return 0;
}

    			 									  	    	 	