#include<cstdio>
#include<cstring>
#include<vector>
#define N 200005
using namespace std;char s[N];
int step[N],son[N][26],size[N],f[N];
int i,j,k,n,cnt,last=1,tot=1;
vector<int>a[N];long long tmp,ans;
inline void Insert(int ch){
  int np=++tot,p,q;step[np]=step[last]+1;
  for (p=last;p&&!son[p][ch];p=f[p]) son[p][ch]=np;
  last=np;if (!p) {f[np]=1;return;}
  if (step[q=son[p][ch]]==step[p]+1) {f[np]=q;return;}
  int nq=++tot;step[nq]=step[p]+1;
  memcpy(son[nq],son[q],sizeof(son[q]));
  f[nq]=f[q];f[np]=f[q]=nq;
  for (;p&&son[p][ch]==q;p=f[p]) son[p][ch]=nq;
}
void DFS(int x){
    for (int i=0;i<a[x].size();i++)
        DFS(a[x][i]),size[x]+=size[a[x][i]];
    tmp=1ll*size[x]*(size[x]+1)/2ll;
    ans+=1ll*(step[x]-step[f[x]])*tmp;
}
int main(){
  scanf("%s",s+1);n=strlen(s+1);
  for (i=1;i<=n;i++)
    Insert(s[i]-'a'),size[last]++;
  for (i=2;i<=tot;i++)
    a[f[i]].push_back(i);
  DFS(1);
  printf("%I64d\n",ans);
}