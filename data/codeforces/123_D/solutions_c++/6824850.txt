#include <cstdio>
#define sz 200200
typedef long long int ll;
class SAM{
public:
  ll go[sz][26], par[sz], f[sz], g[sz], tm[sz];
  ll n, last;
  SAM(){n = last = 1;}
  void expand(char c){
    ll i, j, p, q, nq;
    i = last; last = p = ++n; tm[p] = tm[i] + 1;
    for (; i && !go[i][c]; i = par[i])
      go[i][c] = p;
    if (!go[i][c]){par[p] = 1; return;}
    q = go[i][c];
    if (tm[q] == tm[i] + 1){par[p] = q; return;}
    nq = ++n; tm[nq] = tm[i] + 1;
    for (j = 0; j < 26; j++) go[nq][j] = go[q][j];
    par[nq] = par[q]; par[q] = par[p] = nq;
    for (; go[i][c] == q; i = par[i])
      go[i][c] = nq;
  }
  ll q[sz], deg[sz];
  void dp(){
    ll i, j, k, l, r;
    q[l = r = 1] = 1;
    for (i = 1; i <= n; i++)
      for (j = 0; j < 26; j++)
	if (go[i][j]) deg[go[i][j]]++;
    while (l <= r){
      k = q[l++];
      for (j = 0; j < 26; j++)
	if (go[k][j]){
	  deg[go[k][j]]--;
	  if (deg[go[k][j]] == 0) q[++r] = go[k][j];
	}
    }
    g[1] = 1;
    for (i = last; i; i = par[i]) f[i] = 1;
    for (i = 1; i <= r; i++)
      for (j = 0; j < 26; j++)
	if (go[q[i]][j]) g[go[q[i]][j]] += g[q[i]];
    for (i = r; i; i--)
      for (j = 0; j < 26; j++)
	if (go[q[i]][j]) f[q[i]] += f[go[q[i]][j]];
  }
} CC;
char s[sz];
int main(){
  ll i, ans = 0;
  scanf("%s", s);
  for (i = 0; s[i]; i++) CC.expand(s[i] - 'a');
  CC.dp();
  for (i = 2; i <= CC.n; i++)
    ans += CC.g[i] * (CC.f[i] * (CC.f[i] + 1));
  printf("%I64d", ans >> 1);
  return 0;
}
