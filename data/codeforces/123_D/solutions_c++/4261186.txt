#include <stdio.h>
#include <string.h>
const int maxn = 300005;
struct sanode{
    sanode *f, *ch[26];
    int l, m;
    void init(int _l){
        f = 0, l = _l, m = 1;
        memset(ch, 0, sizeof(ch));
    }
}sam[maxn], *b[maxn];
int cnt[maxn], tot;
sanode *tail, *s;
void add(int c, int len){
    sanode *p = tail, *np = &sam[++tot];
    np->init(len);
    tail = np;
    for(;p && !p->ch[c]; p = p->f) p->ch[c] = np;
    if(!p) np->f = s;
    else{
        if(p->ch[c]->l == p->l + 1) np->f = p->ch[c];
        else{
            sanode *q = p->ch[c], *r = &sam[++tot];
            *r = *q; r->m = 0; r->l = p->l + 1; q->f = np->f = r;
            for(;p && p->ch[c] == q; p = p->f) p->ch[c] = r;
        }
    }
}
int main(){
    int len; char c;
    s = &sam[tot = 0]; s->init(0); tail = s;
    for(c = getchar(), len = 0; c!='\n'; c = getchar()){
        add(c-'a', ++ len);
    }
    for(int i = 0; i <= tot; i ++) cnt[sam[i].l] ++;
    for(int i = 1; i <= len; i ++) cnt[i] += cnt[i - 1];
    for(int i = 0; i <= tot; i ++) b[--cnt[sam[i].l]] = &sam[i];
    long long ans = 0;
    for(int i = tot; i > 0; i --){
        b[i]->f->m += b[i]->m;
        ans = ans + (long long)(b[i]->l - b[i]->f->l)*(b[i]->m + 1) * b[i]->m/2;
    }
    printf("%I64d\n", ans);
}
