#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
#define SZ(x) ((int)((x).size()))
#define foreach(i,x) for (__typeof((x).begin()) i=(x).begin();i!=(x).end();i++)
#define FOR(i,l,r) for (int i=(l);i<=(r);i++)
using namespace std;
#define N 200000
int x[N],y[N],r[N],p[N],h[N],a[N],z[N],b[N];
char aa[N];

bool cmp(int i,int j) {return x[i]<x[j] || x[i]==x[j] && y[i]<y[j];}

int main() {
  gets(aa);
  int n=strlen(aa);
  FOR(i,1,n) r[i]=(int)aa[i-1]+100;
  memcpy(a,r,sizeof a);
  int l=1;
  while (1) {
    FOR(i,1,n) {
      p[i]=i;
      x[i]=r[i];
      if (i+l<=n) y[i]=r[i+l]; else y[i]=0;
    };
    sort(p+1,p+n+1,cmp);
    int t=0;
    FOR(i,1,n) {
      if (i==1 || x[p[i]]!=x[p[i-1]] || y[p[i]]!=y[p[i-1]]) t++;
      r[p[i]]=t;
    };
    if (t==n) break;
    l*=2;
  };
  l=0;
  FOR(i,1,n) {
    if (l>0) l--;
    if (r[i]>1) {
      int pre=p[r[i]-1];
      while (a[i+l]==a[pre+l]) l++;
      h[r[i]]=l;
    };
  };
  int t=0;
  long long ans=0,zs=0;
  FOR(i,2,n) {
    int ms=1;
    while (t>0 && z[t]>h[i]) {
      zs-=(long long)z[t]*b[t];
      ms+=b[t--];
    };
    z[++t]=h[i];
    b[t]=ms;
    zs+=(long long)h[i]*ms;
    ans+=zs;
  };
  ans+=((long long)n)*(n+1)/2;
  printf("%I64d",ans);
}
