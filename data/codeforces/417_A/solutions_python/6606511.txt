# coding=utf-8
'''
http://codeforces.ru/contest/417/problem/A

A. Отбор
ограничение по времени на тест 1 секунда
ограничение по памяти на тест 256 мегабайт
ввод стандартный ввод
вывод стандартный вывод
Финалистами соревнований «Russian Code Cup» в 2214 году будут участники, ставшие победителями в одном из отборочных раундов.

Отборочные раунды делятся на основные и дополнительные. Каждый из основных отборочных раундов должен состоять из c задач, а победителями раунда считаются n человек, занявшие первые места в этом раунде. Каждый из дополнительных отборочных раундов состоит из d задач. Победителем дополнительного раунда становится один человек. Кроме этого, на финал без конкурса приглашаются k победителей финалов прошлых лет.

В результате всех отборочных раундов в финал должно пройти не менее n*m человек. Каким образом нужно организовать отборочные раунды, чтобы в результате всех отборочных раундов в финал прошли не менее n·m человек, а при этом суммарное количество использованных в раундах задач было как можно меньше?

Входные данные
Первая строка содержит два целых числа c и d (1<=c,d<=100) — количество задач в основном и дополнительном раундах соответственно. Вторая строка содержит два целых числа n и m (1<=n,m<=100). Наконец, третья строка содержит целое число k (1<=k<=100) — число заранее отобранных победителей.

Выходные данные
В первой строке выведите единственное целое число — минимальное количество задач, которое нужно подготовить членам жюри.
'''

from __future__ import division
import math

c, d = map(lambda x: int(x), raw_input().split())
n, m = map(lambda x: int(x), raw_input().split())
k = int(raw_input())

# минимальное количество финалистов из победителей отборочных раундов
p = n*m - k

if p > 0:	
	res = -1
	# цикл по количеству основных раундов
	for i in range(int(math.ceil(p/n)) + 1):
		# количество дополнительных раундов
		j = p - n*i
		if j < 0:
			j = 0
		# количество задач при i основных и j дополнительных раундах
		z = c*i + d*j
		#print i, j, z
		if res < 0 or z < res:
			res = z
else:
	res = 0
	
print res