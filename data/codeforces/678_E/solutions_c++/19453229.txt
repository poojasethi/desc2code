#include <iostream>
using namespace std;

const int maxn = 20;

int left[maxn], right[maxn];
int lsize, rsize, siths, states;
double win[maxn][maxn];

double dp[1 << maxn][maxn];

int main()
{
	int i, j, k;

	cin >> siths;
	for (i = 0; i < siths; i++)
		for (j = 0; j < siths; j++)
			cin >> win[i][j];

	states = 1 << siths;

	for (i = 0; i < states; i++)
		for (j = 0; j < siths; j++)
			dp[i][j] = 0.0;
	dp[1][0] = 1.0;

	for (i = 0; i < states; i++)
	for (j = 0; j < siths; j++)
	if ((i << j) & i)
	for (k = 0; k < siths; k++)
	if (i & (1 << k))
	if (k != j)
	{
		double temp = win[j][k] * dp[i ^ (1 << k)][j];
		temp += win[k][j] * dp[i ^ (1 << j)][k];
		if (temp > dp[i][j])
			dp[i][j] = temp;
	}

	double ans = 0.0;
	for (i = 0; i < siths; i++)
		if (dp[states - 1][i] > ans)
			ans = dp[states - 1][i];

	cout << fixed;
	cout.precision(8);
	cout << ans << endl;

	return 0;
}
  			  		 	 			  	 	  		  			