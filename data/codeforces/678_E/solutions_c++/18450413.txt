#include <bits/stdc++.h>
using namespace std;
double dp[1 << 19][19];
double prob[19][19];
int n;

double solve(int mask, int pre){
	if(mask+1 == (((1 << n) - 1))) return 1.0;
	if(mask & 1) return 0.0;
	
	if(dp[mask][pre] != -1.0) return dp[mask][pre];
	double res = 0.0;
	for(int i = 0; i < n; i++){
		if(!(mask & (1 << i)))
			res = max(res, solve(mask | (1 << i), pre) * prob[pre][i]
						 + solve(mask | (1 << pre), i) * prob[i][pre]);
	}
	return dp[mask][pre] = res; 
}

int main(){
	cin >> n;
	for(int i = 0; i < (1 << n); i++)
		for(int j = 0; j < n; j++)
			dp[i][j] = -1.0;
	for(int i = 0; i < n; i++)
		for(int j = 0; j < n; j++)
			cin >> prob[i][j];
	double ans = 0.0;
	for(int i = 0; i < n; i++)
		ans = max(ans, solve(0, i));
	printf("%.10lf\n",ans);
	}