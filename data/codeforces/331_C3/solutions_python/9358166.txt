#include <map>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long LL;
typedef pair<LL
, int> PI;

map<PI, PI> mp;

LL max(LL a, LL b){return a>=b ? a : b;}

PI dp(PI x)
{
	LL n = x.first, tp = 1;
	int a = x.second;
	
	if(!n) return PI(0, 0);
	if(n<10) return PI(1, max(a-n, 0));
	if(mp.find(x)!=mp.end()) return mp[x];
	
	for(; tp<1e18 && tp*10<=n; tp*=10);
	
	PI ret(0, 0);
	for(; n>0;)
	{
		int b = max(a, n/tp);
		PI dep = dp(PI(n % tp, b));
		ret.first += dep.first;
		n -= n % tp + dep.second;
		if(n && n%tp == 0) n -= b, ret.first ++;
	}
	if(n<0) ret.second = -n;
	
	mp.insert(make_pair(x, ret));
	return ret;
	
}

int main()
{
	LL n;
	
	scanf("%I64d", &n);
	
	printf("%I64d\n", dp(PI(n, 0)).first);
	
	return 0;
}
