#include <iostream>
#include <utility>
#include <map>

#define llint long long
#define data pair<llint, llint>
#define mk make_pair
#define N first
#define D second
#define S first

using namespace std;

llint n;
map<data, data> m;

int process(llint n, llint digitMax)
{
  data key = mk(n, digitMax);
  if (m.find(key) != m.end()) return 0;
  if (n < 10)
  {
    m[key] = mk(0, n);
    return 0;
  }
  
  llint base = 1;
  while (n / (base * 10)) base *= 10;
  
  llint s = 0;
  while (n > 0)
  {
    int d = max(digitMax, n / base);
    process(n % base, d);
    
    data p = m[mk(n % base, d)];
    s += p.S;
    n -= (n % base) - p.D;
    
    if (n < 10) break;
    
    if (p.D > d) 
    {
      s += 1;
      n -= p.D;
    }
    
    s += 1;
    n -= d;
  }
  
  m[key] = mk(s, n);
}

main()
{
  cin >> n;
  process(n, 0);
  data res = m[mk(n, 0)];
  cout << res.S + (res.D > 0);
  //system("pause");
}