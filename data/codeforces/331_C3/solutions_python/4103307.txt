#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <iostream>
using namespace std;
#define ll long long
typedef pair<ll, int> pp;
map<pp, pp> mp;
int cc;
pp solve(ll v, int mx) {
	pp p = make_pair(v, mx);
	if(mp.find(p) != mp.end()) return mp[p];
	if(v < 10) {
		if(v == 0) return pp(0, 0);
		return pp(1, v - max((int)v, mx));
	}
	ll md = 1;
	while(md <= v / 10) md *= 10;
	pp ans(0, 0);
	while(true) {
		int dig = v / md;
		int newmx = max(dig, mx);
		pp tmp = solve(v % md, newmx);
		v -= v % md;
		ans.first += tmp.first;
		v += tmp.second;
		int newdig = v / md;
		if(tmp.second == 0) {
			v -= newmx;
			if(newmx != 0) ans.first++;
		}
		if(dig == 0) break;
	}
	ans.second = v;
	mp[p] = ans;
	return ans;
}
int main() {
	ll n;
	while(cin >> n) {
		mp.clear();
		cout<< solve(n, 0).first << endl;
	}
	return 0;

}
