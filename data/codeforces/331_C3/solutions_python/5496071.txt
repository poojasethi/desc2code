#include <cstdio>
#include <map>
#include <algorithm>
using namespace std;
typedef long long ll;

map< pair<int, ll>, pair<ll, int> > M;
ll n, ten[20];
int glen(ll x) {
	int ans = 0;
	for (; x; x/=10) ++ans;
	return ans;
}
pair<ll, int> dp(pair<int, ll> x, int len) {
	if (M.count(x)) return M[x];
	if (len == 1) return x.first>x.second ? make_pair(0ll, (int)x.second) : make_pair(1ll, 0);
	int top = x.second / ten[len-1], mx;
	ll ans = 0, cur = x.second-top*ten[len-1];
	pair<ll, int> res;
	for (int i=top; i; --i) {
		mx = max(i, x.first);
		res = dp(make_pair(mx, cur), len-1);
		ans += res.first + 1;
		cur = ten[len-1] + res.second - mx;
	}
	res = dp(make_pair(x.first, cur), len-1);
	res.first += ans;
	M[x] = res;
	return res;
}
int main() {
	scanf("%I64d", &n);
	ten[0] = 1;
	for (int i=1; i<=18; ++i) ten[i] = ten[i-1]*10;
	int len = glen(n);
	printf("%I64d\n", len ? dp(make_pair(0, n), len).first : 0ll);
	return 0;
}