#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
#include <map>
using namespace std;

#define fst first
#define snd second

typedef long long i64;
typedef pair<i64, i64> Data;

i64 n;
map<Data, Data> hash;

Data Dfs(i64 mx, i64 n) {
	if (hash[Data(mx, n)].fst)
		return hash[Data(mx, n)];
	if (n < 10)
		return Data(mx || n, max(mx, n) - n);
	i64 bse = 1;
	for (i64 i = n; i / 10; i /= 10, bse *= 10);
	i64 m = (n / bse) * bse;
	Data a = Dfs(max(mx, n / bse), n - m);
	Data b = Dfs(mx, m - a.snd);
	return hash[Data(mx, n)] = Data(a.fst + b.fst, b.snd);
}

int main() {

	scanf("%I64d", &n);
	printf("%I64d\n", Dfs(0, n).fst);

	return 0;
}
