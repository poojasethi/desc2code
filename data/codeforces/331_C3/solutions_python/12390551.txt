#include <cstdio>
#include <cstring>
#include <cmath>
#include <map>
#include <queue>
#include <utility>
#include <vector>
#include <algorithm>
using namespace std;
typedef long long ll;
typedef pair<ll,ll> pi;
const int maxn = 100005;
map<pi,pi> mp;
pi dfs(ll n,ll m){
//	printf("%I64d %I64d\n",n,m);
	if(n==0) return make_pair(n||m,-m);
	if(n>0&&n<=9) return make_pair(1ll,n-max(n,m));
	if(mp.find(make_pair(n,m))!=mp.end()) return mp[make_pair(n,m)];
	ll p=1,temp=n;
	while(temp/=10) p*=10;
	pi t1=dfs(n%p,max(m,n/p));
	pi t2=dfs(n/p*p+t1.second,m);
	t2.first+=t1.first;
	return mp[make_pair(n,m)]=t2;
}
int main(){
	#ifdef LOCAL
	freopen("in.xcode","r",stdin);
	#endif
	ll n;
	while(~scanf("%I64d",&n)){
		mp.clear();
		printf("%I64d\n",dfs(n,0).first);
	}
	return 0;
}

  	 		       	   	 	 				 				