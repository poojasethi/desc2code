#include <iostream>
#include <cstdio>
#include <map>
using namespace std;

typedef pair<long long,long long> par;
typedef map<par,par> mp;

mp dp;
long long N;

par DP(long long n,long long mx)
{
    if(n<10) return par(1LL,n-max(mx,n));
    par ret=par(n,mx);
    if(dp.find(ret)!=dp.end()) return dp[ret];
    par ans=par(0,0);
    long long bigbit=1LL;
    while(bigbit<n) bigbit*=10LL;
    if(bigbit>n) bigbit/=10LL;

    while(n>0)
    {
        //cout<<n<<" "<<ret.first<<endl;
        par tmp=DP(n%bigbit,max(mx,n/bigbit));
        ans.first+=tmp.first;
        n=n-n%bigbit+tmp.second;
       // cout<<n<<endl;
    }
    ans.second=n;
    dp.insert(pair<par,par>(ret,ans));
    return ans;
}

int main()
{
    dp.clear();
    while(cin>>N)
    {
        if(N>0) cout<<DP(N,0).first<<endl;
        else cout<<"0"<<endl;
    }
    return 0;
}
