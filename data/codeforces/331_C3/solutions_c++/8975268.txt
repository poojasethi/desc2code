#include<cstdio>
#include<algorithm>
#include<map>
#include<cstring>
#define rep(i,l,r) for (int i=l; i<=r; ++i)
using namespace std;

typedef long long i64;
typedef pair<i64,int> PLI;

int n;
char s[22];
PLI dp[10][20][10];
bool vis[10][20][10];

PLI solve(int px,int i,int ty){
	if (vis[px][i][ty]) return dp[px][i][ty];
	else vis[px][i][ty]=1;

	PLI &ret=dp[px][i][ty];
	if (i==n){
		int x=ty?10-ty:s[i]-'0',t=0;
		while (x>=0){
			x-=max(px,x);
			++t;
		}
		ret=make_pair(t,-x);
	} else{
		int cur,tail;
		if (!ty){
			PLI trs=solve(max(px,s[i]-'0'),i+1,0);
			ret.first+=trs.first;
			cur=s[i]-'0'-1;
			tail=trs.second;
		} else{
			cur=9;
			tail=ty;
		}
		while (cur>=0){
			PLI trs=solve(max(px,cur),i+1,tail);
			ret.first+=trs.first;
			--cur;
			tail=trs.second;
		}
		ret.second=tail;
	}
	return ret;
}
int main(){
	scanf("%s",s+1),n=strlen(s+1);
	PLI ans=solve(1,1,0);
	printf("%I64d\n",ans.first-1);
}
