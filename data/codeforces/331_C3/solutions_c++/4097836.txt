#include <iostream>
#include <cstring>
#include <cstdio>
#include <algorithm>
#include <cassert>
#include <set>
#include <vector>
#include <map>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<ll, ll> pii;

#define mp make_pair

const int N = 300010;
const ll inf = 0x3f3f3f3f3f3f3f3fll;

map<ll, pii> dp[11];

pii dfs(ll n, ll mx){
	if(n == 0 && mx == 0)
		return mp(0, 0);
	if(n < 10)
		return mp(1ll, (max(n, mx) - n));
	if(dp[mx].count(n))
		return dp[mx][n];
	ll t = 1, tn = n;
	while(t * 10.0 <= n) t *= 10;
	pii ans = mp(0, 0);
	while(n > 0){
		ll k = n / t;
		pii tmp = dfs(n % t, max(mx, k));
		ans.first += tmp.first;
		n -= n % t + tmp.second;
	}
	ans.second = -n;
	dp[mx].insert(mp(tn, ans));
	return ans;
}

int main()
{
	ll n;
	cin >> n;
	cout << dfs(n, 0).first << endl;
	return 0;
}