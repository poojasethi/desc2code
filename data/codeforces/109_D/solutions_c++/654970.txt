#include <string>
#include <vector>
#include <set>
#include <map>
#include <iostream>
#include <sstream>
#include<cmath>
#include<algorithm>
#include<fstream>
#include<cstring>
using namespace std;
# define FOR(i,a,n) for(int i=a;i<n;++i)
# define REP(i,n) FOR(i,0,n)
vector<pair<int,int> > ans,v,vv;
set<int> S;
map<pair<int,int> ,int> M;
void calc(int num)
{
	if(num) S.insert(num);
	if(num*4LL>=1000000000LL) return;
	calc(num*10+4);
	calc(num*10+7);
}
int main()
{
	calc(0);
	int n,ind=-1;
	cin>>n;
	
	REP(i,n) 
	{
		int num;
		cin>>num;
		v.push_back(make_pair(num,i));
		M[make_pair(num,i)]=i;
		if(S.find(num)!=S.end())
		{
			ind=i;
		}
	}
	int done=true;
	REP(i,n) if(i) if(v[i]<v[i-1]) done=false;
	if(done) cout<<0<<endl;
	else if(ind==-1) cout<<-1<<endl;
	else
	{
		vv=v;
		sort(vv.begin(),vv.end());
		REP(i,n)
		{
			if(vv[i]==v[i]) continue;
			if(ind!=i)
			{
				swap(v[ind],v[i]);
				swap(M[v[ind]],M[v[i]]);
				ans.push_back(make_pair(M[v[ind]],M[v[i]]));
				ind=i;
			}
			int j=M[vv[i]];
			if(ind!=j)
			{
				swap(v[ind],v[j]);
				swap(M[v[ind]],M[v[j]]);
				ans.push_back(make_pair(M[v[ind]],M[v[j]]));
				ind=j;
		    }
		}
		REP(i,n) if(vv[i].first==v[ind].first)
		{
			if(ind!=i)
			{
				swap(v[ind],v[i]);
				ans.push_back(make_pair(M[v[ind]],M[v[i]]));
				break;
			}
		}
		int si=ans.size();
		cout<<si<<endl;
		REP(i,si) 
		{
			cout<<ans[i].first+1<<" "<<ans[i].second+1<<endl;
		}
	}
}
			
			
		
	
	
		
	
