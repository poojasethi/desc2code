#include <iostream>
#include <algorithm>
#include <vector>
#include <cstdio>

using namespace std;

int n;
int a[100005];
int f[100005];
int g[100005];
vector<pair<int, int> > res;

int lucky(int x) {
	while (x > 0) {
		if (x % 10 != 4 && x % 10 != 7) return 0;
		x /= 10;
	}
	return 1;
}

bool mycmp(int i, int j) {
	return a[i] < a[j];
}

int main() {
	scanf("%d", &n);
	for (int i = 0; i < n; ++i) scanf("%d", &a[i]);
	int idx = -1;
	for (int i = 0; i < n; ++i) {
		if (lucky(a[i])) {
			idx = i;
			break;
		}
	}
	if (idx == -1) {
		for (int i = 1; i < n; ++i)
			if (a[i] < a[i - 1]) {
				printf("-1\n");
				return 0;
			}
		printf("0\n");
		return 0;
	}
	for (int i = 0; i < n; ++i) f[i] = i;
	sort(f, f + n, mycmp);
	for (int i = 0; i < n; ++i) g[f[i]] = i;
	for (int i = 0; i < n; ++i) {
		if (f[i] != i) {
			if (idx + 1 != i + 1) {
				res.push_back(make_pair(idx + 1, i + 1));
				f[g[idx]] = i;
				f[g[i]] = idx;
				swap(g[idx], g[i]);
				swap(a[idx], a[i]);
				idx = i;
			}
			if (f[i] != i) {
				res.push_back(make_pair(f[i] + 1, i + 1));
				swap(a[f[i]],a[i]);
				idx = f[i];
				f[g[f[i]]] = i;
				f[g[i]] = idx;
				swap(g[idx], g[i]);
			}
		}
	}
	cout << res.size() << endl;
	for (int i = 0; i < res.size(); ++i)
		cout << res[i].first << " " << res[i].second << endl;
	return 0;
}