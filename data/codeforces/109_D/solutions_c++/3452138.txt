#include<stdio.h>
#include<algorithm>
#include<map>
#include<vector>
using namespace std;
typedef pair<int,int> P;
vector<P> ans;
int ar[100000];
P sar[100000];
int pos[100000];
void swap(int &a,int &b){int p=a;a=b;b=p;}
bool islucky(int x){
    while(x>0){
        if(x%10!=4&&x%10!=7)break;
        x/=10;
    }
    if(x!=0)return false;
    return true;
}
int main(){
    int n,i;
    scanf("%d",&n);
    for(i=0;i<n;i++){
        scanf("%d",&ar[i]);
        sar[i]=P(ar[i],i);
    }
    for(i=0;i<n-1;i++)if(ar[i]>ar[i+1])break;
    if(i==n-1){
        printf("0\n");
        return 0;
    }
    for(i=0;i<n;i++)if(islucky(ar[i]))break;
    if(i==n){
        printf("-1\n");
        return 0;
    }
    int p=i;
    sort(sar,sar+n);
    for(i=0;i<n;i++){
        ar[sar[i].second]=i;
        pos[i]=sar[i].second;
    }
    for(i=0;i<n;i++){
        if(ar[i]!=i){
            if(i!=p){
                int a=ar[i];
                int b=ar[p];
                ans.push_back(P(i+1,p+1));
                swap(ar[i],ar[p]);
                swap(pos[a],pos[b]);
                p=pos[b];
            }
            if(i==pos[i])continue;
            int a=ar[i];
            int b=ar[pos[i]];
            ans.push_back(P(i+1,pos[i]+1));
            swap(ar[i],ar[pos[i]]);
            swap(pos[a],pos[b]);
            p=pos[a];
        }
    }
    printf("%d\n",ans.size());
    for(i=0;i<ans.size();i++)printf("%d %d\n",ans[i].first,ans[i].second);
    return 0;
}