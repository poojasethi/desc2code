#include<cstdio>
#include<algorithm>
#include<vector>
using namespace std;

#define ran 111111

int n,pivot;
pair<int,int> v[ran],r[ran];
vector<pair<int,int> > ans;
bool finish;

bool chk(int n){
	for(;n;n/=10){
		int id=n%10;
		if(id!=4&&id!=7) return false;
	}
	return true;
}
void rec(int x,int y){
	swap(r[x],r[y]);
	if(pivot==x || pivot==y)
		pivot=x+y-pivot;
	ans.push_back(make_pair(x,y));
	finish=false;
}

int main(){
	scanf("%d",&n);
	for(int i=0;i<n;i++){
		int a;
		scanf("%d",&a);
		v[i]=make_pair(a,i);
	}
	sort(v,v+n);
	
	pivot=-1;
	for(int i=0;i<n;i++){
		int id=v[i].second;
		r[id]=make_pair(i,chk(v[i].first));
		if(r[id].second)
			pivot=id;
	}
	if(pivot==-1){
		for(int i=0;i<n;i++)
			if(r[i].first!=i){
				printf("-1\n");
				return 0;
			}
	}
	
	ans.clear();
	finish=false;
	while(!finish){
		finish=true;
		for(int i=0;i<n;i++){
			int to=r[i].first;
			if(i==to || i==pivot) continue;
			if(r[i].second || r[to].second)
				rec(i,to);
			else{
				rec(pivot,to);
				rec(i,to);
			}
		}
	}
	printf("%d\n",ans.size());
	for(int i=0;i<(int)ans.size();i++)
		printf("%d %d\n",ans[i].first+1,ans[i].second+1);

	return 0;
}