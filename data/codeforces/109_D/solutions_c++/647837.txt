#include <cmath>
#include <queue>
#include <iostream>
#include <algorithm>
#include <string>
#include <cstdio>
#include <map>
#include <vector>
#include <set>

using namespace std;
typedef pair<int, int> pii;
int i, j, k, m, n, a[100005], u, wh[100005];
pii p[100005];

vector<int> aa, b;

int islucky(int x) {
    while (x != 0) {
        if (x % 10 == 4 || x % 10 == 7) x /= 10;
        else return 0;
    }
    return 1;
}

void swap(int x, int y) {
    if (x == y) return;
    aa.push_back(x);
    b.push_back(y);
    int z = a[x]; a[x] = a[y]; a[y] = z;
    wh[a[x]] = x;
    wh[a[y]] = y;
}

int main() {
    //freopen("x.in", "r", stdin);

    cin >> n;
    for (i = 0; i < n; i++) {
        scanf("%d", &p[i].first);
        p[i].second = i + 1;
    }

    for (i = 1; i < n; i++)
        if (p[i].first < p[i-1].first) break;

    if (i == n) {
        cout << 0;
        return 0;
    }

    for (i = 1; i <= n; i++)
        a[i] = wh[i] = i;

    sort(p, p + n);
    for (i = 0; i < n; i++) {
        if (islucky(p[i].first)) break;
    }
    if (i == n) {
        cout << -1;
        return 0;
    }


    j = i;

    k = p[i].second;

    for (i = 0; i < n; i++) if (i != j) {
        swap(wh[k], i + 1);
        swap(wh[ p[i].second ], wh[k]);
    }
    cout << aa.size() << endl;
    for (i = 0; i < aa.size(); i++)
        printf("%d %d\n", aa[i], b[i]);
        
    return 0;
}
