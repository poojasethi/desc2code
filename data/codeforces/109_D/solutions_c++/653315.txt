#include <iostream>
#include <sstream>
#include <algorithm>

using namespace std;

typedef pair<int,int> P;

int A[100001];
P B[100001];
int pos[100001];
int val[100001];
int real[100001];

int main()
{

  int N;
  cin>>N;
  for(int i=0;i<N;i++){
    cin>>A[i];
    B[i]=P(A[i],i);
  }

  sort(B,B+N);

  int lucky=-1;

  for(int i=0;i<N;i++){
    pos[i]=B[i].second;
    val[B[i].second]=i;
    real[i]=B[i].first;

    int ok=1;
    for(int k=B[i].first;k>0;k/=10){
      if((k%10)==4 || (k%10)==7) continue;
      ok=0;
    }
    if(ok) lucky=i;
  }

  int n=0;
  ostringstream res;

  for(int i=0;i<N;i++){
    int k=val[i];
    if(k!=i){
      if(lucky==-1){
        cout<<-1<<endl;
        return 0;
      }
      if(k!=lucky){
        n+=1;
        //res<<i+1<<" "<<pos[lucky]+1<<" ("<<real[k]<<","<<real[lucky]<<")"<<endl;
        res<<i+1<<" "<<pos[lucky]+1<<endl;
        swap(val[i],val[pos[lucky]]);
        swap(pos[k],pos[lucky]);
      }
      if(lucky!=i){
        n+=1;
        //res<<i+1<<" "<<pos[i]+1<<" ("<<real[lucky]<<","<<real[i]<<")"<<endl;
        res<<i+1<<" "<<pos[i]+1<<endl;
        swap(val[i],val[pos[i]]);
        swap(pos[lucky],pos[i]);
      }
    }
  }

  cout<<n<<endl<<res.str();

  return 0;
}
