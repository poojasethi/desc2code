#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<map>

using  namespace std;
const int N=100010;
struct A
{
    int x,id;
}b[N];
int a[N],ans[N*2][2],c[N],d[N];

bool cmp(const A &a,const A &b)
{
    return a.x<b.x;
}

int check(int x)
{
    while (x>0)
    {
        if (x%10!=4 && x%10!=7) return 0;
        x/=10;
    }
    return 1;
}

int main()
{
    int i,n,k,j,res=0,p;
    scanf("%d",&n);
    for (i=1; i<=n; i++)
    {
        scanf("%d",&a[i]);
        b[i].x=a[i]; b[i].id=i;
    }
    sort(b+1,b+n+1,cmp);
    for (i=1; i<=n; i++) if (a[i]!=b[i].x) break;
    if (i>n) {printf("0\n"); return 0;}
    for (i=1; i<=n; i++) if (check(a[i])) {p=i; break;}
    if  (i>n) {printf("-1\n"); return 0;}
    for (i=1; i<=n; i++) a[b[i].id]=i;
    for (i=1; i<=n; i++) c[a[i]]=i;
    for (i=1; i<=n; i++)
    {
        if (a[i]==i) continue;
        if (i!=p)
        {
            swap(a[i],a[p]); swap(c[a[i]],c[a[p]]); res++; ans[res][0]=i; ans[res][1]=p; p=i;
        }
        if (a[i]==i) continue;
        k=c[i];
        swap(a[i],a[k]); swap(c[a[i]],c[a[k]]); res++;  ans[res][0]=i; ans[res][1]=k; p=k;
    }
    printf("%d\n",res);
    for (i=1; i<=res; i++) printf("%d %d\n",ans[i][0],ans[i][1]);
}

			 		 	  	 	 	    	 				