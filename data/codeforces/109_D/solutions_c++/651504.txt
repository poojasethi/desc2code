#include <algorithm>
#include <iostream>
#include <cstdio>
#include <vector>
#define FOR(i, n) for (int i=0; i<(n); i++)
#define SZ(x) (int)x.size()
#define PB push_back
using namespace std;
const int maxN = 100000 + 10;
int n, a[maxN], rank[maxN], reverse2[maxN];
pair <int, int> tmp[maxN];
vector <pair <int, int> > answer;
inline bool isLucky(int x){
	while (x){
		if (x % 10 != 4 && x % 10 != 7)
			return false;
		x /= 10;
	}
	return true;
}
void mySwap(int x, int y){
	swap(a[x], a[y]);
	answer.PB(make_pair(x, y));
	swap(rank[x], rank[y]);
	swap(reverse2[rank[x]], reverse2[rank[y]]);
}
int main(){
	cin >> n;
	FOR (I, n)
		scanf("%d", &a[I]);
	int index = -1;
	FOR (I, n)
		if (isLucky(a[I]))
			index = I;
	if (index == -1){
		FOR (I, n - 1)
			if (a[I + 1] < a[I]){
				cout << -1 << endl;
				return 0;
			}
		cout << 0 << endl;
		return 0;
	}
	FOR (I, n)
		tmp[I] = make_pair(a[I], I);
	sort(tmp, tmp + n);
	FOR (I, n){
		reverse2[I] = tmp[I].second;
		rank[tmp[I].second] = I;
	}
	int id = rank[index];
	FOR (I, n){
		index = reverse2[id];
		if (I == rank[index])
			continue;
		if (I != index)
			mySwap(I, index);
		if (I != reverse2[I])
			mySwap(I, reverse2[I]);
	}
	cout << SZ(answer) << endl;
	FOR (I, SZ(answer))
		cout << answer[I].first + 1 << " " << answer[I].second + 1 << endl;
	FOR (I, n)
		cerr << a[I] << " ";
	return 0;
}
