#include <cstdio>
#include <algorithm>
using namespace std;
int N,M=0;
struct node{
  int v,i,v2;
}a[100005];
int whh;

int ans[300005][2], Z=0;

bool cmp1(node a, node b){
  return a.v < b.v;
}
bool cmp2(node a, node b){
  return a.i < b.i;
}

bool luck(int k){
  while (k){
    if (k%10!=4 && k%10!=7) return false;
    k /= 10;
  }
  return true;
}

bool vis[100005];

void re(int u){
  vis[u] = true;
  if (u!=whh){
    re(a[u].v2);
    ans[Z][0] = u;
    ans[Z][1] = a[u].v2;
    ++Z;
  }else{
    ans[Z][0] = u;
    ans[Z][1] = M;
    ++Z;
  }
}

int main(){
  
  scanf("%d",&N);
  bool tmp = true;
  for (int i=1;i<=N;++i){
    scanf("%d",&a[i].v);
    a[i].i = i;
    if (i>1 && a[i].v < a[i-1].v) tmp = false;
  }
  if (tmp){
    puts("0");
    return 0;
  }

  sort(a+1,a+N+1,cmp1);

  for (int i=1;i<=N;++i){
    a[i].v2 =  i;
  }

  sort(a+1,a+N+1, cmp2);

  for (int i=1;i<=N;++i){
    while (luck(a[i].v) && a[i].v2 != i){
      ans[Z][0] = i;
      ans[Z][1] = a[i].v2;
      ++Z;
      int j = a[i].v2;
      swap(a[i], a[j]);
    }
  }

  for (int i=1;i<=N;++i){
    if (luck(a[i].v)){
      M=i;
      break;
    }
  }

  if (M==0){
    puts("-1");
    return 0;
  }

  for (int i=1;i<=N;++i){
    if (a[i].v2 != i && vis[i]==false){
      whh = i;
      re(a[i].v2);
      ans[Z][0] = M;
      ans[Z][1] = a[i].v2;
      ++Z;
    }
  }

  printf("%d\n",Z);
  for (int i=0;i<Z;++i){
    printf("%d %d\n",ans[i][0], ans[i][1]);
  }
  return 0;
}
