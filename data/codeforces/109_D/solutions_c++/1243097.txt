#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

int a[100005];

bool islucky(int x) {
	while(x>0) if(x%10!=4 && x%10!=7) return false; else x/=10;
	return true;
}
int srt[100005];
bool cmp(int x, int y) {
	return a[x] < a[y];
}
int pos[100005], place[100005];
vector<pair<int, int> > ans;
int main(void) {
	int n;
	scanf("%d", &n);
	for(int i=0;i<n;i++)
		scanf("%d", &a[i]);
	int luk=-1;
	for(int i=0;i<n;i++)
		if(islucky(a[i]))
			luk=i;

	int flg=0;
	for(int i=1;i<n;i++)
		if(a[i]<a[i-1]) flg=1;
	if(!flg) {printf("0\n");return 0; }
	if(luk==-1) { puts("-1"); return 0; }
	for(int i=0;i<n;i++)
		srt[i]=i;
	sort(srt, srt+n, cmp);
	for(int i=0;i<n;i++) pos[i] = i, place[i] = i;
	for(int i=0;i<n;i++)
		if(i != pos[srt[i]] && srt[i] != luk) {
			if(pos[luk]!=i) {
				ans.push_back(make_pair(pos[luk]+1, i+1));
				int PA = pos[luk], PB = i;
				swap(place[PA], place[PB]);
				pos[place[PA]] = PA; pos[place[PB]] = PB;
			}
			ans.push_back(make_pair(pos[luk]+1, pos[srt[i]]+1));
			int PA = pos[luk], PB = pos[srt[i]];
			swap(place[PA], place[PB]);
			pos[place[PA]] = PA; pos[place[PB]] = PB;
		}
	printf("%d\n", (int)ans.size());
	for(int i=0;i<(int)ans.size();i++)
		printf("%d %d\n", ans[i].first, ans[i].second);
	return 0;
}

