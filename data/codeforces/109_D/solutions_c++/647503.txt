#include <algorithm>
#include <vector>
#include <iostream>
#include <cstdio>
#include <string>

#define print(x) cerr << ((#x)) << ": " << ((x)) << endl
#define FOR(i,m,n) for(int i = m; i < (n); i++)
using namespace std;
typedef long long LL;
typedef pair<int,int> pii;
#define SZ(x) (int)x.size()
#define PB push_back
#define F first
#define S second

const int maxN = 1000*100+100;

int n;
pii a[maxN];

int dont_set = -1;
int pos[maxN];

bool lucky(int x){
	while(x){
		if(x%10 != 4 && x%10 != 7)
			return 0;
		x /= 10;
	}
	return 1;
}

bool ok(){
	FOR(i,0,n)
		if(a[i].S != i)
			return 0;
	return 1;
}

int ind;
int p[maxN];
int rev_p[maxN];

vector <pii> ans;

void SWAP(int i){
	if(ind != i)
		ans.PB(pii(ind+1,i+1));
	swap(p[i], p[ind]);
	swap(rev_p[p[i]], rev_p[p[ind]]);
	ind = i;
}

int main(){
	ios_base::sync_with_stdio(false);
	cin >> n;
	FOR(i,0,n){
		cin >> a[i].F;
		a[i].S = i;
	}
	sort(a, a+n);
	if(ok()){
		cout << 0 << endl;
		return 0;
	}
	FOR(i,0,n)
		if(lucky(a[i].F)){
			dont_set = i;
			ind = a[i].S;
		}
	if(dont_set == -1){
		cout << -1 << endl;
		return 0;
	}

	FOR(i,0,n){
		p[a[i].S] = i;
		rev_p[i] = a[i].S;
	}

	FOR(i,0,n){
		if(i == dont_set)
			continue;
		SWAP(i);
		SWAP(rev_p[i]);
	}

	cout << SZ(ans) << endl;
	FOR(i,0,SZ(ans))
		cout << ans[i].F << " " << ans[i].S << endl;

	return 0;
}
