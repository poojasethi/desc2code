#include <stdio.h>
#include <set>
#include <vector>

using namespace std;

const int MAXN = 100000;

set<pair<int, int> > s;
int a[MAXN];
int n;

inline bool islucky(int x) {
  while (x) {
    if (x % 10 != 4 && x % 10 != 7) return false;
    x /= 10;
  }
  return true;
}

int main() {
  bool des = false;
  int id = -1;
  scanf("%d", &n);
  for (int i = 0; i < n; ++i) {
    scanf("%d", a + i);
    if (i > 0 && a[i] < a[i - 1]) des = true;
    if (islucky(a[i])) {
      id = i;
    }
  }
  if (id == -1 && des) {
    puts("-1");
  } else if (!des) {
    puts("0");
  } else {
    for (int i = 0; i < n; ++i) {
      if (i != id) s.insert(make_pair(a[i], i));
    }
    vector<pair<int, int> > ans;
    int val = a[id];
    bool first = true;
    for (int i = 0; i < n; ++i) {
      if (s.empty()) continue;
      pair<int, int> p = *s.begin();
      if (val <= p.first && first) {
        first = false;
        continue;
      }
      s.erase(p);
      if (p.second == i) continue;
      if (id == i) {
        ans.push_back(make_pair(id, p.second));
      } else {
        ans.push_back(make_pair(id, i));
        ans.push_back(make_pair(i, p.second));
        s.erase(make_pair(a[i], i));
        s.insert(make_pair(a[i], id));
        a[id] = a[i];
      }
      id = p.second;
    }
    printf("%u\n", ans.size());
    for (size_t i = 0; i < ans.size(); ++i) {
      printf("%d %d\n", ans[i].first + 1, ans[i].second + 1);
    }
  }
  return 0;
}
