#include<cstdio>
#include<iostream>
#include<algorithm>
#include<map>
#include<cstring>
using namespace std;
const int N=100010;
struct node {
	int x,idx;
}b[N];
int a[N],ans[N*2][2],c[N],d[N];
bool cmp(node a,node b){
	return a.x<b.x;
}
int ju(int x){
	while(x>0){
		if(x%10!=4&&x%10!=7)return 0;
		x/=10;
	}
	return 1;
}
int main()
{
	int i,n,k,j,tmp=0,p;
	scanf("%d",&n);
	for(i=1;i<=n;i++){
		scanf("%d",&a[i]);
		b[i].x=a[i];
		b[i].idx=i;
	}
	sort(b+1,b+1+n,cmp);
	for(i=1;i<=n;i++){
		if(a[i]!=b[i].x)break;
	}
	if(i>n){
		puts("0");
		return 0;
	}
	for(i=1;i<=n;i++){
		if(ju(a[i])){
			p=i;
			break;
		}
	}
	if(i>n){
		puts("-1");
		return 0;
	}
	for(i=1;i<=n;i++)a[b[i].idx]=i;
	for(i=1;i<=n;i++)c[a[i]]=i;
	for(i=1;i<=n;i++){
		if(a[i]==i)continue;
		if(i!=p){
			swap(a[i],a[p]);
			swap(c[a[i]],c[a[p]]);
			ans[tmp][0]=i,ans[tmp++][1]=p;
			p=i;
		}
		if(a[i]==i)continue;
		k=c[i];
		swap(a[i],a[k]);
		swap(c[a[i]],c[a[k]]);
		ans[tmp][0]=i,ans[tmp++][1]=k;
		p=k;
	}
	printf("%d\n",tmp);
	for(i=0;i<tmp;i++)printf("%d %d\n",ans[i][0],ans[i][1]);
	return 0;
}
  			 	   	 	 	 			  			 	 				