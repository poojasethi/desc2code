#include <ctime>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <cstdlib>

#include <algorithm>
#include <iostream>
#include <bitset>
#include <vector>
#include <queue>
#include <map>
#include <set>

using namespace std;

const bool debug = false;

const int maxn = 101000;

int n, data[maxn], curpos[maxn], who[maxn];
pair<int, int> sorted[maxn];
vector< pair<int, int> > answer;

bool happy(int x)
{
	for (; x; x /= 10)
		if (x % 10 != 4 && x % 10 != 7)
			return false;
	return true;
}

void do_swap(int i, int j)
{
	if (i == j) return;
	swap(curpos[who[i]], curpos[who[j]]);
	swap(who[i], who[j]);
	answer.push_back(make_pair(i + 1, j + 1));
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> data[i], 
		sorted[i] = make_pair(data[i], i), 
		curpos[i] = i,
		who[i] = i;
		
	int id = -1;
	for (int i = 0; i < n; i++)
		if (happy(data[i])) id = i;
		
	if (id == -1)
	{
		bool ok = true;
		for (int i = 0; i + 1 < n; i++)
			ok &= data[i] <= data[i + 1];
		cout << (ok ? 0 : -1) << endl;
		return 0;
	}
	
	sort(sorted, sorted + n);
	for (int i = 0; i < n; i++)
	{
		if (curpos[sorted[i].second] == i) continue;
		do_swap(curpos[id], i);
		do_swap(i, curpos[sorted[i].second]);
	}
	
	cout << answer.size() << endl;
	for (size_t i = 0; i < answer.size(); i++)
		cout << answer[i].first << " " << answer[i].second << endl;
	return 0;
}
