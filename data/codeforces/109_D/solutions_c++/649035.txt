#include <cstdio>
#include <algorithm>
#include <cstring>
#define N 100005
using namespace std;

struct num{
	int v, p;
	bool operator < (num const &T) const{return v < T.v;}
};

int n, pp, pr, ok, cnt, a[N], rank[N], pos[N], recx[N*2], recy[N*2];
num b[N];

int isLucky(int x){
	while (x){
		if (x%10!=4 && x%10!=7) return 0;
		x /= 10;
	}
	return 1;
}

void Swap(int x, int y){
	if (x == y) return;
	recx[cnt] = x;
	recy[cnt++] = y;
	swap(rank[x], rank[y]);
	swap(pos[rank[x]], pos[rank[y]]);
}

int main(){

	scanf("%d", &n);
	pp = 0;
	ok = 1;
	for (int i=1; i<=n; i++){
		scanf("%d", &a[i]);
		if (a[i-1] > a[i]) ok = 0;
		if (isLucky(a[i])) pp = i;
		b[i].v = a[i];
		b[i].p = i;
	}
	
	if (!pp){
		if (ok) printf("0\n");
		else printf("-1\n");
		return 0;
	}
	
	sort(b+1, b+n+1);
	for (int i=1; i<=n; i++){
		rank[b[i].p] = i;
		pos[i] = b[i].p;
		if (b[i].p == pp) pr = i;
	}
	

	cnt = 0;
	for (int i=1; i<=n; i++){
		if (rank[i] == i || i==pr) continue;
		Swap(i, pos[pr]);
		Swap(pos[pr], pos[i]);
	}
	
	
	printf("%d\n", cnt);
	for (int i=0; i<cnt; i++) printf("%d %d\n", recx[i], recy[i]);
	
	return 0;
}
