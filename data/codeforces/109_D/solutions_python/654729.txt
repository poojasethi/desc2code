import sys
def read_values():
  return map(int,raw_input().split())

n = input()
a = read_values()
toWrite = []
index = range(n)
index.sort(key=a.__getitem__)
rank = [0]*n
for r in range(n): rank[index[r]] = r
  
def swap(i,j):
  if i!=j:
    a[i],a[j] = a[j],a[i]
    index[rank[i]], index[rank[j]] = index[rank[j]], index[rank[i]]
    rank[i], rank[j] = rank[j], rank[i]
    line = ' '.join(map(str,[i+1,j+1]))
    toWrite.append(line)
  
def isLucky(m):
  if m==0: return True
  if m%10 in [4,7]:
    return isLucky(m/10)
  return False

r=0
while r<n and not isLucky(a[index[r]]): r += 1

# index[k] = the "inverse" of a, if a was a permutation.
#            a[index[k]] is the value ranked k-th.
# rank[i] = the rank of index i.
#           Note: rank[index[k]] == k.

# r is the rank of the first lucky number.
# Note that r and a[index[r]] won't change after updating 
# index and rank.

if r==n:
  possible = True
  for i in range(1,n):
    possible &= a[i-1]<=a[i]
  if possible: print 0
  else: print -1
else:
  for j in range(n):
    if j!=index[r]:
      swap(j,index[r])
    if j!=index[j]:
      swap(j,index[j])
  print len(toWrite)
  print '\n'.join(toWrite)
