#!/usr/bin/env python

MOD = 1000000007

def gcd(a, b):
    if a == 0:
        return b, 0, 1
    d, x, y = gcd(b % a, a)
    return d, y - b / a * x, x

def div(a):
    d, x, y = gcd(a, MOD)
    return x

def c(n, k):
    if k > n or k < 0:
        return 0
    res = 1
    for i in xrange(max(k + 1, n - k + 1), n + 1):
        res = res * i % MOD
        res = res * div(n - i + 1) % MOD
    return res

def is_lucky(num):
    return num.replace('4', '').replace('7', '') == ""

if __name__ == "__main__":
    n, k = map(int, raw_input().strip().split())
    luckies = filter(is_lucky, raw_input().strip().split())
    others = n - len(luckies)
    lucky_dict = {}
    for lucky in luckies:
        if lucky not in lucky_dict:
            lucky_dict[lucky] = 0
        lucky_dict[lucky] += 1
    
    dp_count = []
    for lucky, count in lucky_dict.iteritems():
        dp_count.append(0)
        for i in range(len(dp_count)-1, -1, -1):
            if i !=0:
                dp_count[i] += dp_count[i - 1] * count
            else:
                dp_count[i] += count
            dp_count[i] %= MOD

    res = 0
    max_count = len(dp_count) if len(dp_count) < k else k
    cur_binom = c(others, k - max_count)
    for i in range(max_count-1, -1, -1):
        res += cur_binom * dp_count[i]
        res %= MOD
        if k - i > others:
            cur_binom = 0
            break
        cur_binom = cur_binom * div(k - i) * (others - k + i + 1) % MOD
    res += cur_binom
    res %= MOD
    print res
