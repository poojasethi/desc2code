//In the Name of God

#include<iostream>
#include<algorithm>
#include<vector>
#define pb push_back
#define int long long

using namespace std;

const int maxn=100100;
const int maxln=1024+100;
const int M=1e9+7;
int f[maxn];
int cnt[maxln],dp[maxln][maxln];
int n,k,N,ln;
int ans;
vector<int> v;

void bt(int x)
{
  if(x>M)
    return;
  v.pb(x);
  bt(x*10+4);
  bt(x*10+7);
}

void precompute()
{
  bt(4),bt(7);
  sort(v.begin(),v.end());
  ln=v.size();
}

bool check(int x)
{
  for(int X=x;X;X/=10)
    if(X%10!=4 and X%10!=7)
      return false;
  cnt[lower_bound(v.begin(),v.end(),x)-v.begin()+1]++;
  return true;
}

int P(int x,int p)
{
  if(!p)
    return 1;
  int c=P(x,p/2);
  (c*=c)%=M;
  if(p&1)
    return (c*x)%M;
  return c;
}

main()
{
  ios_base::sync_with_stdio(0);cin.tie(0);
  precompute();
  cin>>n>>k;
  N=n;
  for(int x,i=n;i--;)
    {
      cin>>x;
      if(check(x))
	N--;
    }
  dp[0][0]=1;
  for(int i=1;i<=ln;i++)
    {
      dp[i][0]=1;
      for(int j=1;j<=ln;j++)
	dp[i][j]=(dp[i-1][j]+dp[i-1][j-1]*cnt[i])%M;
    }
  f[0]=1;
  for(int i=1;i<=N;i++)
    f[i]=(((f[i-1]*(N-i+1))%M)*P(i,M-2))%M;
  for(int i=0;i<=k;i++)
    (ans+=f[i]*dp[ln][k-i])%=M;
  cout<<ans<<endl;
  return 0;
}
