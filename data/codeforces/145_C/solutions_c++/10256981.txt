#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#define N 300005
#define mo 1000000007
#define For(i,l,r) for(int i=l;i<=r;i++)
#define Dor(i,r,l) for(int i=r;i>=l;i--)
using namespace std;
bool Judge(int x){
    while(x){
        if(x%10!=7 && x%10!=4) return 0;
        x/=10;
    }
    return 1;
}
int power(int a,int b){
    int c=1;
    while(b){
        if(b&1) c=1LL*c*a%mo;
        b>>=1; a=1LL*a*a%mo;
    }
    return c;
}
int Fac[N],Rev[N],a[N],num[N],cnt,tot;
int F[2005][2005];
int C(int n,int m){
    if(m<0) return 0;
    if(n<m) return 0;
    return 1LL*Fac[n]*Rev[m]%mo*Rev[n-m]%mo;
}
int main(){
    int n,K; scanf("%d%d",&n,&K);
    For(i,1,n) scanf("%d",&a[i]);
    sort(a+1,a+1+n);
    
    for(int i=1,j=1;i<=n;i=j){
        for(;a[i]==a[j];j++);
        if( Judge(a[i]) ) num[++cnt]=j-i;
        else tot+=j-i;
    }
    
    Fac[0]=1; For(i,1,n) Fac[i]=1LL*Fac[i-1]*i%mo;
    Rev[n]=power(Fac[n],mo-2); Dor(i,n,1) Rev[i-1]=1LL*Rev[i]*i%mo;
    
    F[0][0]=1;
    For(i,1,cnt) For(j,0,i) F[i][j]=(F[i-1][j]+1LL*num[i]*F[i-1][j-1])%mo;
    
    int Ans=0;
    For(i,0,cnt){
        Ans=(Ans+1LL*F[cnt][i]*C(tot,K-i))%mo;
    }
    printf("%d\n",Ans);
}