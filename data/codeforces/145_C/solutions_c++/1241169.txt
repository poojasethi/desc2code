#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;

inline int islucky(int x) {
	while(x>0) { if(x%10!=4 && x%10!=7) return false; x/=10;}
	return true;
}
typedef long long LL;
int a[100005];
LL dp[100005];
const LL MOD = 1000000007;
map<int, int> c;
LL inv[100005];
LL Cnm[100005];

LL getinv(LL x, LL y, LL p, LL q, LL r, LL s) {
	if(y==0) return (p%MOD+MOD)%MOD;
	return getinv(y, x%y, r, s, p-r*(x/y), q-s*(x/y));
}

int main(void) {
	int k, n;
	scanf("%d%d", &n, &k);
	int m=0;
	for(int i=0;i<n;i++) {
		scanf("%d", &a[i]);
		if(!islucky(a[i])) { ++m; --i; --n; }
		else c[a[i]]++;
	}
	for(int i=1;i<=m;i++) inv[i] = getinv(i, MOD, 1, 0, 0, 1);
	Cnm[0] = 1;
	for(int i=1;i<=m;i++) Cnm[i] = Cnm[i-1] * (m-i+1)%MOD*inv[i]%MOD;
	dp[0] = 1;
	m=0;
	for(map<int,int>::iterator it=c.begin();it!=c.end();it++) {
		m=min(m+1, k);
		for(int i=m;i>0;i--) dp[i] = (dp[i]+dp[i-1]*(it->second))%MOD;
	}
	LL ans=0;
	for(int i=0;i<=k;i++) ans = (ans + dp[i] * Cnm[k-i])%MOD;
	printf("%I64d\n", ans);
	return 0;
}

