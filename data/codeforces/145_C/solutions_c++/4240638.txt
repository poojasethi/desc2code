#include<iostream>
#include<vector>
#include<string>
#include<cstring>
#include<algorithm>
#include<cstdio>
#include<cstdlib>

#define int long long

using namespace std;

const int maxn=1000*100+100,mod=1000*1000*1000+7;

int dp[2][maxn],a[maxn],t=1,x,m,tt,ta,f[maxn],l,k,n;

bool flag=0;

int tavan(int x,int y){
	if(y==0)
		return 1;
	if(y==1)
		return x;
	int f=tavan(x,y/2);
	f*=f;
	f%=mod;
	if(f<0)
		f+=mod;
	if(y%2)
		f*=x;
	f%=mod;
	if(f<0)
		f+=mod;
	return f;
}

main(){
	ios::sync_with_stdio(false);
	f[0]=1;
	cin>>n>>k;
	for(int i=1;i<=n;i++){
		f[i]=i*f[i-1];
		f[i]%=mod;
	}
	for(int i=0;i<n;i++){
		cin>>a[i];
		flag=0;
		x=a[i];
		while(x){
			m=x%10;
			if(m!=7&&m!=4){
				flag=1;
				break;
			}
			x/=10;
		}
		if(flag){
			a[i]=0;
			ta++;
		}
	}
	sort(a,a+n);
	for(int i=0;i<=min(ta,k);i++){
		int y=f[i]*f[ta-i];
		y%=mod;
		if(y<0)
			y+=mod;
		int z=tavan(y,mod-2);
		dp[0][i]=f[ta]*z;
		dp[0][i]%=mod;
		if(dp[0][i]<0)
			dp[0][i]+=mod;
	}
	l=ta;
	for(int i=ta;i<n;i++){
		if(a[i]!=a[i+1]){
			for(int j=0;j<=min(k,ta+t);j++){
				dp[t%2][j]=dp[(t-1)%2][j-1]*(i-l+1)+dp[(t-1)%2][j];
				dp[t%2][j]%=mod;
			}
			t++;
			l=i+1;
		}
	}
	cout<<dp[(t-1)%2][k]%mod<<endl;
	return 0;
}
