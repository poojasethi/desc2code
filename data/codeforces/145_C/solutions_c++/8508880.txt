#include <cstdio>
#include <iostream>
#include <map>
using namespace std;
typedef long long ll;
const int mod=1000000007;
map <int, int> g;
ll f[100100]={1},dp[100100]={1};
ll fe(ll a, ll b)
{
	ll res=1;
	while (b)
	{
		if (b&1) res=res*a%mod;
		b>>=1; a=(a*a)%mod;
	}
	return res;
}
ll c(ll a, ll b)
{
	if (a<b) return 0;
	ll res=f[a];
	res=res*fe(f[b],mod-2)%mod;
	res=res*fe(f[a-b],mod-2)%mod;
	return res;
}
bool luck(int x)
{
	while (x)
	{
		if (x%10!=4 && x%10!=7) return false;
		x/=10;
	}
	return true;
}
int main()
{
	int k,n,m,x,cnt;
	ll res;
	res=cnt=0;
	for (int i=1; i<=100000; i++) f[i]=f[i-1]*i%mod;
	scanf("%d%d",&n,&k);
	for (int i=1; i<=n; i++)
	{
		scanf("%d",&x);
		if (luck(x)) g[x]++; else cnt++;
	}
	m=0;
	for (map <int, int>::iterator gi=g.begin(); gi!=g.end(); gi++)
	{
		m=min(m+1,k);
		for (int i=m; i; i--)
		{
		    dp[i]+=dp[i-1]*gi->second;
		    dp[i]%=mod;
		}
	}
	for (int i=0; i<=m; i++) res=(res+dp[i]*c(cnt,k-i))%mod;
	printf("%I64d\n",res);
	return 0;
}
 		    		  					  	 				  			