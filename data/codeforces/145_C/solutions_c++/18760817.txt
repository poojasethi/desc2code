#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int MAXN=1e5+5;
const int MOD=1e9+7;
int fact[MAXN];
int n,k,i,j,t,tt,unlucky,val;
ll fac[MAXN],vec[MAXN],dp[MAXN],m[MAXN],ans;
ll fast_exp(ll base, ll exp ){
    ll res=1;
    while(exp>0){
    if(exp%2==1)
    res=(res*base)%MOD;
    base=(base*base)%MOD;
    exp/=2;
    }
    return res%MOD;
}

bool is_lucky(int x){
	while (x){
		if (x % 10 != 4 && x % 10 != 7)	return false;
		x /= 10;
	}
	return true;
}

int main(){
    cin>>n>>k;
    for( i=0;i<n;i++){
    cin>>val;
    if(is_lucky(val))
    m[t++]=val;
    else
    unlucky++;
    }
    sort(m,m + t);
    for( i=0;i<t;){
        j=i;
        while(j<t && m[i]==m[j])
            j++;
        vec[tt++]=j-i;
        i=j;
    }
    fac[0]=1;
    for(i=1;i<MAXN;i++)
    fac[i]=(fac[i-1]*i)%MOD;

    dp[0]=1;
    for( i=0;i<tt;i++)
        for(j=i+1;j;j--)
        dp[j]=(dp[j]+dp[j-1]*vec[i])%MOD;

    for(i=0; i<=tt;i++){
           // cout<<"YES"<<endl;
            if(k-i<=unlucky)
			ans = (ans + dp[i] * (fac[unlucky] * fast_exp(fac[k - i] * fac[unlucky - (k - i)] % MOD, MOD - 2) % MOD)) % MOD;
    }
    cout<<ans;
    return 0;
}
