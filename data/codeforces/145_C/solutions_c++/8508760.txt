#include<iostream>
#include<cstring>
#include<cstdio>
#include<map>
#define mod 1000000007
using namespace std;
const int N = 1300;
map<int,int> MP;
int mnt[N],dp[N][N],C[N*N];
typedef long long ll;
bool lucky(int val){
	while(val){
		if(val % 10 != 4 && val %10 != 7) return 0;
		val /= 10;
	}
	return 1;
}
void exgcd(int a,int b,ll &x, ll &y){
	if(b == 0){
		x = 1, y = 0; 
		return;
	}
	exgcd(b,a%b,x,y);
	ll t=y;y=x-a/b*t;x=t;
	return;
}
ll res(int v){
	ll x,y;
	exgcd(v,mod,x,y);
	return (x+mod)%mod;
}
int main(){
	int n,k,len=1,cnt=0;
	scanf("%d%d",&n,&k);
	for(int i=0;i<n;i++){
		int v;scanf("%d",&v);
		if(lucky(v)){
			if(MP.find(v) == MP.end()) MP[v] = len ++;
			mnt[MP[v]] ++;
		}else cnt++;
	}
	for(int i=0;i<=len;i++){
		dp[i][0] = 1;
	}
	for(int i=1;i<=len;i++)
		for(int j=1;j<=i;j++)
			dp[i][j]=(dp[i-1][j] + 1LL*mnt[i]*dp[i-1][j-1])%mod;
	int l=0;
	C[l]=1;
	for(int i=1; i<=cnt;i++){
		C[i]=(1LL*C[i-1]*(cnt-i+1)%mod*res(i))%mod;
	}
	int ans=0;
	for(int i=min(len,k);i>=0&&k-i<=cnt;i--){
		ans=(ans+1LL*dp[len][i]*C[k-i])%mod;
	}
	cout<< ans << endl;
}
 

		 				   	 			 	      		 	  		