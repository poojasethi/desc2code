#include <bits/stdc++.h>
//Damned if I don't take what I want.

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 1e5 + 10, MOD = 1e9 + 7;

inline int mul(int a, int b){ return ( (ll)a * b )% MOD ; }
inline void sadd(int &a, int b){ a = ( (ll)a + b) % MOD; }

map<int, int> cnt;

int dp[MAXN], fact[MAXN];

inline bool lucky(int a){
	while(a){
		if (a % 10 != 4 && a % 10 != 7) return false;
		a /= 10;
	}
	return true;
}

inline int mpow(int a, ll b){
	int outp = 1;
	for (; b; b /= 2, a = mul(a, a) )
		if (b % 2) outp = mul(a, outp);
	return outp;
}

inline int C(int n, int r){ return mul(fact[n], mpow(mul(fact[n - r], fact[r]), MOD - 2) ); }

int main(){
	int n, k; scanf("%d%d", &n, &k);

	fact[0] = 1;
	for (int i = 1; i < MAXN; i++)
		fact[i] = mul(fact[i - 1], i);

	int ord = 0;
	for (int i = 0; i < n; i++){
		int x; scanf("%d", &x);
		if (lucky(x)) cnt[x]++;
		else ord++;
	}

	dp[0] = 1;
	for (map<int, int> :: iterator iter = cnt.begin(); iter != cnt.end(); iter++){
		for (int i = 1025 - 1; i > 0; i--)
			sadd(dp[i], mul(dp[i - 1], iter->second));
	}

	int ans = 0; int e = min(k, 1025);
	for (int x = max(k - ord, 0); x <= e; x++)
		sadd(ans, mul(dp[x], C(ord, k -x)));
	
	cout << ans << endl;
}

