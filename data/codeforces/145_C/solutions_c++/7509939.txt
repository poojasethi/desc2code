#include <cstdio>
#include <cstring>
#include <algorithm>
#include <map>
#define maxn 100009
#define INF 1e9
#define MOD 1000000007
using namespace std;
long long fact[maxn],rfact[maxn];
bool check(int x)
{
	while(x)
	{
		if(x%10!=4&&x%10!=7)
			return 0;
		x/=10;
	}
	return 1;
}
long long C(int n,int m)
{
	if(m>n)
		return 0;
	return fact[n]*rfact[m]%MOD*rfact[n-m]%MOD;
}
long long mgml(long long a,int b)
{
	long long res=1;
	while(b)
	{
		if(b&1)
			res=res*a%MOD;
		a=a*a%MOD;
		b>>=1;
	}
	return res;
}
map<int,int>mp;
long long f[maxn];
int main()
{
	int n,m;
	int cnt=0;
	fact[0]=rfact[0]=1;
	for(int i=1;i<maxn;i++)
	{
		fact[i]=fact[i-1]*i%MOD;
		rfact[i]=mgml(fact[i],MOD-2);
	}
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++)
	{
		int x;
		scanf("%d",&x);
		if(check(x))
			mp[x]++;
		else
			cnt++;
	}
	f[0]=1;
	int from=min((int)mp.size(),m);
	for(map<int,int>::iterator it=mp.begin();it!=mp.end();++it)
	{
		for(int j=from;j>0;j--)
		{
			f[j]=(f[j]+f[j-1]*(it->second))%MOD;
		}
	}
	long long ans=0;
	for(int i=0;i<=m;i++)
	{
		ans=(f[i]*C(cnt,m-i)+ans)%MOD;
	}
	printf("%I64d\n",ans);
	//system("pause");
	return 0;
}
