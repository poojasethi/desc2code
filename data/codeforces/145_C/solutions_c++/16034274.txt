#include<cstdio>
using namespace std;
long long P=1000000007,now,f[100010],ff[100010],ans,g[1100][1100];
int n,k,t,tot,a[2010],cnt[2010],i,j,num;
long long c(int a,int b)
{
	return f[a]*ff[a-b]%P*ff[b]%P;
}
long long sqr(long long x){return x*x%P;}
long long pow(long long a,long long n)
{
	if (n==0) return 1;
	if (n%2==0) return sqr(pow(a,n/2));
	else return sqr(pow(a,n/2))*a%P;
}
int main()
{
	scanf("%d%d",&n,&k);
	for (i=1;i<=n;i++)
	{
		scanf("%d",&t);
		bool flag=1;
		int ch=1;
		while (t>0)
		{
			int x=t%10;
			t/=10;
			if (x!=4&&x!=7) {flag=0;break;}
			if (x==4) ch*=2;
			else ch=ch*2+1;
		}
		if (flag) cnt[ch]++;
		else tot++;
	}
	for (i=0;i<=1024;i++)
	  if (cnt[i]>0)
	  {
		  a[++num]=cnt[i];
	  }
	ans=0;
	f[0]=1;
	for (i=1;i<=tot;i++) f[i]=f[i-1]*i%P;
	ff[0]=1;
	for (i=1;i<=tot;i++) ff[i]=ff[i-1]*pow(i,P-2)%P;
	for (i=1;i<=num;i++) g[i][1]=(g[i-1][1]+a[i])%P;
	for (i=2;i<=num;i++)
	  for (j=1;j<=num;j++)
	    g[j][i]=(g[j-1][i]+g[j-1][i-1]*a[j]%P)%P;
	g[num][0]=1;
	for (i=0;i<=k;i++)
	{
		if (i>tot||k-i>num) continue;
		now=c(tot,i);
		ans=(ans+now*g[num][k-i]%P)%P;
	}
	printf("%I64d\n",ans);
	return 0;
}