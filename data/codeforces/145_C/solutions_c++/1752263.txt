// <-------------------[sWitCHcAsE]---------------------->
#include<cstdio>
#include<iostream>
#include<map>

#define FOR(i,n) for(int i=0;i<n;i++)
#define FORS(i,a,n) for(int i=a;i<n;i++)
#define foreach(it, x) for(typeof(x.begin()) it = x.begin(); it!=x.end();it++)
using namespace std;

typedef long long ll;

static const int MOD=1000*1000*1000 + 7;

int is_lucky(int a) {
	while(a) if (a%10!=4 && a%10!=7)return 0; else a/=10;
	return 1;
}

ll power(ll a, ll b) {
	if ( b==1ll) return a;
	if ( b==0) return 1;
	ll sq = power(a,b/2)%MOD;
	sq=(sq*sq)%MOD;
	if ( b&1) {
		return (sq*a)%MOD;
	}
	else return sq;
}


ll inv(int a) {
	return power(a,MOD-2)%MOD;
}
map<int,int> L;

int arr[100005];
ll dp[1200][1200];
ll ncr[100005];
int n,k,others=0;

int main() 
{
	cin>>n>>k;
	FOR(i,n) {
		scanf("%d",&arr[i]);
		if ( is_lucky(arr[i])) {
			L[arr[i]]++;
		}
		else others++;
	}

	int lc ;

	dp[0][0]=1ll;
	int c = 0;
	foreach(it,L) {
		c++;
		dp[c][0]=1;
		FORS(j,1,c+1) {
			dp[c][j] = (dp[c-1][j] + it->second*dp[c-1][j-1])%MOD;
		}
	}
	lc = c;
	ncr[0]=1ll;
	for(int i=1;i<=k;i++) {
		ncr[i] = (ncr[i-1]*(others-i+1))%MOD * inv(i)%MOD;
	}
	ll ans = 0;
	FOR(i,k+1) {
		ans= (ans + ncr[i]*dp[lc][k-i])%MOD;
	}
	cout<<ans<<endl;;
}
