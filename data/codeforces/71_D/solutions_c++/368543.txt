#include<cstring>
#include<string>
#include<cstdio>
#include<map>
using namespace std;

const int mx=55;

bool us[mx];
map<char,int> ma;
map<string,int> id;
string sn[mx];

int n,m;
char s[mx][mx][5];
int si,sj,ti,tj;
int pos[2][2];
bool canput[mx][mx];

void init()
{
	int i,j;
	char s[]={'C','D','H','S'};
	char t[]={'2','3','4','5','6','7','8','9','T','J','Q','K','A'};
	for(i=0;i<13;i++)
		ma[t[i]]=i;
	for(i=0;i<4;i++)
	{
		for(j=0;j<13;j++)
		{
			string ss="";ss+=t[j];ss+=s[i];
			id[ss]=i*13+j;
			sn[i*13+j]=ss;
		}
	}
	id["J1"]=52;id["J2"]=53;
	memset(us,false,sizeof(us));
	memset(canput,false,sizeof(canput));
}

bool calput(int x,int y)
{
	if(x+3>n||y+3>m) return false;
	int i,j,k,l;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			for(k=0;k<3;k++)
				for(l=0;l<3;l++)if(i!=k||j!=l)
					if(s[x+i][y+j][1]!=s[x+k][y+l][1]
							&&s[x+i][y+j][0]==s[x+k][y+l][0])
						return false;
		}
	}
	return true;
}

bool can()
{
	int i,j,k,l;
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			canput[i][j]=calput(i,j);
			//printf("%d ",canput[i][j]?1:0);
		}
		//printf("\n");
	}
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++) if(canput[i][j])
		{
			for(k=0;k<n;k++)
				for(l=0;l<m;l++) if((i!=k||j!=l)&&canput[k][l])
				{
					if((i-k>=3||k-i>=3)||(j-l>=3||l-j>=3))
					{
						si=i;sj=j;
						ti=k;tj=l;
						return true;
					}
				}
		}
	}
	return false;
}


int main()
{
	int i,j;
	init();
	scanf("%d%d",&n,&m);
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			scanf("%s",s[i][j]);
			string tmp=s[i][j];
			us[id[tmp]]=true;
			if(strcmp(s[i][j],"J1")==0)
				pos[0][0]=i,pos[0][1]=j;
			else if(strcmp(s[i][j],"J2")==0)
				pos[1][0]=i,pos[1][1]=j;
		}
	}
	if(us[52]&&us[53])
	{
		int x1=pos[0][0],y1=pos[0][1],x2=pos[1][0],y2=pos[1][1];
		for(i=0;i<52;i++)
		{
			if(us[i])continue;
			for(j=0;j<52;j++)
			{
				if(i==j||us[j])continue;
				s[x1][y1][0]=sn[i][0];s[x1][y1][1]=sn[i][1];
				s[x2][y2][0]=sn[j][0];s[x2][y2][1]=sn[j][1];
				//for(int w=0;w<n;w++)
				//{
					//for(int e=0;e<m;e++)
						//printf("%c%c ",s[w][e][0],s[w][e][1]);
					//printf("\n");
				//}
				//getchar();
				if(can())
				{
					printf("Solution exists.\n");
					printf("Replace J1 with %c%c and J2 with %c%c.\n",
							sn[i][0],sn[i][1],sn[j][0],sn[j][1]);
					printf("Put the first square to (%d, %d).\n",si+1,sj+1);
					printf("Put the second square to (%d, %d).\n",ti+1,tj+1);
					break;
				}
			}
			if(j<52)break;
		}
		if(i>=52)
			printf("No solution.\n");
	}
	else if(us[52]||us[53])
	{
		int x=us[52]?pos[0][0]:pos[1][0],y=us[52]?pos[0][1]:pos[1][1];
		string J=us[52]?"J1":"J2";
		for(i=0;i<52;i++)
		{
			if(us[i])continue;
			s[x][y][0]=sn[i][0];
			s[x][y][1]=sn[i][1];
			if(can())
			{
				printf("Solution exists.\n");
				printf("Replace %s with %c%c.\n",J.c_str(),sn[i][0],sn[i][1]);
				printf("Put the first square to (%d, %d).\n",si+1,sj+1);
				printf("Put the second square to (%d, %d).\n",ti+1,tj+1);
				break;
			}
		}
		if(i>=52)
			printf("No solution.\n");
	}
	else
	{
		if(can())
		{
			printf("Solution exists.\nThere are no jokers.\n");
			printf("Put the first square to (%d, %d).\n",si+1,sj+1);
			printf("Put the second square to (%d, %d).\n",ti+1,tj+1);
		}
		else
			printf("No solution.\n");
	}
	

	return 0;
}
