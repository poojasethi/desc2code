#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <climits>
#include <cfloat>
#include <map>
#include <utility>
#include <set>
#include <iostream>
#include <memory>
#include <string>
#include <vector>
#include <algorithm>
#include <functional>
#include <sstream>
#include <complex>
#include <stack>
#include <queue>
using namespace std;
static const double EPS = 1e-10;
typedef long long ll;

/*
6 3
J1 2S 3S
4S 5S 6S
7S 8S 9S
J2 2H 3H
4H 5H 6H
7H 8H 9H
*/

int n, m, j1x=-1, j1y=-1, j2x=-1, j2y=-1;
char S[17][17], R[17][17];
char A[4] = {'S', 'H', 'C', 'D'}, B[13] = {'A', '2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K'};

bool checkC(int x, int y){
	map<char, int> memo;
	for(int i = 0; i < 3; i++){
		for(int j = 0; j < 3; j++){
			memo[S[i+y][j+x]]++;
		}
	}
	if(memo['S'] == 9 || memo['H'] == 9 || memo['C'] == 9 || memo['D'] == 9) return true;
	else return false;
}

bool checkR(int x, int y){
	map<char, int> memo;
	for(int i = 0; i < 3; i++){
		for(int j = 0; j < 3; j++){
			memo[R[i+y][j+x]]++;
			if(memo[R[i+y][j+x]] == 2) return false;
		}
	}
	return true;
}

void print(){
	for(int i = 0; i < n; i++){
		for(int j = 0; j < m; j++){
			cout << R[i][j] << S[i][j] << " ";
		}
		cout << endl;
	}
	cout << endl;
}

int main(){
	cin >> n >> m;
	for(int i = 0; i < n; i++){
		for(int j = 0; j < m; j++){
			char a, b;
			cin >> R[i][j] >> S[i][j];
			if(R[i][j] == 'J' && S[i][j] == '1'){
				j1x = j;
				j1y = i;
			}
			if(R[i][j] == 'J' && S[i][j] == '2'){
				j2x = j;
				j2y = i;
			}
		}
	}
	
	for(int i = 0; i < 52; i++){
		if(j1x != -1){
			S[j1y][j1x] = A[i/13];
			R[j1y][j1x] = B[i%13];
		}
		for(int j = 0; j < 52; j++){
			//if(i == j) continue;
			if(j2x != -1){
				S[j2y][j2x] = A[j/13];
				R[j2y][j2x] = B[j%13];
			}
			
			bool f = true;
			map<char, map<char, int> > memo;
			for(int ii = 0; ii < n; ii++){
				for(int jj = 0; jj < m; jj++){
					memo[S[ii][jj]][R[ii][jj]]++;
					if(memo[S[ii][jj]][R[ii][jj]] > 1) f = false;
				}
			}
			if(f == false) continue;
			
			for(int y = 0; y < n-2; y++){
				for(int x = 0; x < m-2; x++){
					for(int yy = 0; yy < n-2; yy++){
						for(int xx = 0; xx < m-2; xx++){
							if(abs(y-yy) < 3 && abs(x-xx) < 3) continue;
//							if(S[j1y][j1x] == 'C' && R[j1y][j1x] == 'T' && x == 0 && y == 0 && xx == 3 && yy == 1){
//								print();
//								cout << checkC(x, y) << ", " << checkR(x, y) << ", " << checkC(xx, yy) << ", " << checkR(xx, yy) << endl;
//								cout << 1 << endl;
//							}
							if((checkC(x, y) || checkR(x, y)) && (checkC(xx, yy) || checkR(xx, yy))){
								cout << "Solution exists." << endl;
								if(j1x == -1 && j2x == -1) cout << "There are no jokers." << endl;
								else if(j1x != -1 && j2x == -1){
									cout << "Replace J1 with " << R[j1y][j1x] << S[j1y][j1x] << "." << endl;
								}
								else if(j1x == -1 && j2x != -1){
									cout << "Replace J2 with " << R[j2y][j2x] << S[j2y][j2x] << "." << endl;
								}
								else if(j1x != -1 && j2x != -1){
									cout << "Replace J1 with " << R[j1y][j1x] << S[j1y][j1x] << " and J2 with " << R[j2y][j2x] << S[j2y][j2x] << "." << endl;
								}
								cout << "Put the first square to (" << y+1 << ", "<< x+1 << ")." << endl;
								cout << "Put the second square to (" << yy+1 << ", "<< xx+1 << ")." << endl;
								return 0;
							}
						}
					}
				}
			}
		}
	}
	cout << "No solution." << endl;
	return 0;
}
