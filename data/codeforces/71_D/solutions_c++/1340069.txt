#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
#include <string>
#include <set>
#include <iostream>
using namespace std;

string c[52][52];
string r[2];
set<string> used;
int n, m;
vector<pair<int,int> > joker;
string cname[52];

bool overlap(int i, int j, int k, int l) {
	if(i-k>=3||k-i>=3||j-l>=3||l-j>=3) return false;
	return true;
}

int uu[128],ucs;
bool check(int i, int j) {
	++ucs;
	int f1=0,f2=0;
	for(int u=0;u<3;u++)
		for(int v=0;v<3;v++) {
			string &ref=(c[i+u][j+v]=="J1"?r[0]:(c[i+u][j+v]=="J2"?r[1]:c[i+u][j+v]));
			string &ref2=(c[i][j]=="J1"?r[0]:(c[i][j]=="J2"?r[1]:c[i][j]));
			if(ref[1]!=ref2[1]) f2=1;
			if(uu[(int)ref[0]]==ucs) f1=1;
			uu[(int)ref[0]]=ucs;
		}
	//printf("i=%d, j=%d f1=%d, f2=%d\n", i, j, f1, f2);
	return !f1||!f2;
}

void output(int i, int j, int k, int l) {
	puts("Solution exists.");
	if(joker.size()==0) puts("There are no jokers.");
	else if(joker.size()==1) {
		printf("Replace %s with %s.\n",
				c[joker[0].first][joker[0].second].c_str(), r[0].c_str());
	} else {
		int f=c[joker[0].first][joker[0].second]=="J1";
		f=1;
		printf("Replace J1 with %s and J2 with %s.\n",
			f?r[0].c_str():r[1].c_str(), f?r[1].c_str():r[0].c_str());
	}
	printf("Put the first square to (%d, %d).\n", i+1, j+1);
	printf("Put the second square to (%d, %d).\n", k+1, l+1);
}

bool test() {
	for(int i=0;i+3<=n;i++)
		for(int j=0;j+3<=m;j++)
			for(int k=0;k+3<=n;k++)
				for(int l=0;l+3<=m;l++)
					if(overlap(i,j,k,l)==false && check(i,j) && check(k,l)) {
						output(i,j,k,l);
						return true;
					}
	return false;
}
int main(void) {
	cin >> n >> m;
	string suit="CDHS";
	string rank="A23456789TJQK";
	for(int i=0;i<52;i++)
		cname[i] = rank.substr(i/4,1)+suit.substr(i%4,1);
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++) {
			cin >> c[i][j];
			used.insert(c[i][j]);
			if(c[i][j]=="J1" || c[i][j]=="J2")
				joker.push_back(make_pair(i, j));
		}
	if(joker.size()==0) {
		if(test()) return 0;
	} else if(joker.size()==1) {
		for(int r0=0;r0<52;r0++) {
			if(used.find(cname[r0])!=used.end()) continue;
			r[0] = r[1] = cname[r0];
			if(test()) return 0;
		}
	} else if(joker.size()==2) {
		for(int r0=0;r0<52;r0++) {
			if(used.find(cname[r0])!=used.end()) continue;
			for(int r1=0;r1<52;r1++) {
				r[0]=cname[r0];
				r[1]=cname[r1];
				if(r1==r0 || used.find(cname[r1])!=used.end()) continue;
				if(test()) return 0;
			}
		}
	}
	puts("No solution.");
	return 0;
}

