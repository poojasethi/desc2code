#include<set>
#include<string>
#include<vector>
#include<cstdlib>
#include<iostream>

#define	pb			push_back
#define	rep(i,n)	for(int i=0;i<(n);i++)

using namespace std;

struct P{ int x,y; P(){} P(int X,int Y):x(X),y(Y){} };

int m,n;
string card[17][17];

bool isOK(const P &p){
	bool a[128]={};
	rep(i,3)rep(j,3){
		int x=p.x+j,y=p.y+i;
		if(a[card[y][x][0]])	return false;
		a[card[y][x][0]]=true;
	}
	return true;
}

bool solve(P &p1,P &p2){
	rep(i1,m-2)rep(j1,n-2){
		if(!isOK(P(j1,i1)))	continue;
		rep(i2,m-2)rep(j2,n-2){
			if(abs(i1-i2)<3 && abs(j1-j2)<3)	continue;	// not intersect
			if(!isOK(P(j2,i2)))	continue;
			p1=P(j1,i1);
			p2=P(j2,i2);
			return true;
		}
	}
	return false;
}

int main(){
	cin>>m>>n;
	vector<P> joker;
	vector<string> jname;
	set<string> used;
	rep(i,m)rep(j,n){
		cin>>card[i][j];
		if(card[i][j]=="J1" || card[i][j]=="J2"){
			joker.pb(P(j,i));
			jname.pb(card[i][j]);
		}
		else	used.insert(card[i][j]);
	}
	if(joker.size()==2 && jname[0]=="J2"){
		swap(joker[0],joker[1]);
		swap(jname[0],jname[1]);
	}

	vector<string> notused;
	const char suit[]="CDHS",rank[]="23456789TJQKA";
	rep(i,4)rep(j,13){
		string s(2,'@');
		s[0]=rank[j];
		s[1]=suit[i];
		if(used.count(s)==0)	notused.pb(s);
	}

	P p1,p2;
	string msg;
	if(joker.size()==0){
		if(solve(p1,p2)){
			msg="There are no jokers.";
			goto FOUND;
		}
	}
	else if(joker.size()==1){
		rep(i,notused.size()){
			card[joker[0].y][joker[0].x]=notused[i];
			if(solve(p1,p2)){
				msg="Replace "+jname[0]+" with "+notused[i]+".";
				goto FOUND;
			}
		}
	}
	else{
		rep(i,notused.size()){
			rep(j,notused.size()){
				if(i==j)	continue;
				card[joker[0].y][joker[0].x]=notused[i];
				card[joker[1].y][joker[1].x]=notused[j];
				if(solve(p1,p2)){
					msg="Replace "+jname[0]+" with "+notused[i]+" and "+jname[1]+" with "+notused[j]+".";
					goto FOUND;
				}
			}
		}
	}

	cout<<"No solution."<<endl;
	return 0;

	FOUND:
	cout<<"Solution exists."<<endl;
	cout<<msg<<endl;
	cout<<"Put the first square to ("<<p1.y+1<<", "<<p1.x+1<<")."<<endl;
	cout<<"Put the second square to ("<<p2.y+1<<", "<<p2.x+1<<")."<<endl;
	return 0;
}
