#include<cstdio>
#include<cstring>
//                            Last Change:  2011-09-26 20:53:19
#include<set>
#include<string>
#include<iostream>
using namespace std;
string rank[]={"2", "3", "4", "5", "6", "7", "8", "9", "T", "J", "Q", "K", "A"};
string suit[]={"C", "D", "H", "S"};
int n,m,j1x,j1y,j2x,j2y;
set<string> h,h1,h2;
set<char> app;
string f[21][21];
bool check(int x,int y){
	if(x+3>n||y+3>m)return 0;
	bool s1=1,s2=1;
	app.clear();
	for(int i=0;i<3;++i)
		for(int j=0;j<3;++j){
			if(f[x+i][y+j][1]!=f[x][y][1])
				s1=0;
			if(app.count(f[x+i][y+j][0]))s2=0;
			else app.insert(f[x+i][y+j][0]);
		}
	if(s1||s2)return 1;
	return 0;
}
int main(){
	for(int i=0;i<13;++i)
		for(int j=0;j<4;++j)
			h.insert(rank[i]+suit[j]);
	scanf("%d%d",&n,&m);
	bool j1=0,j2=0;
	for(int i=0;i<n;++i)
		for(int j=0;j<m;++j){
			string x;
			cin>>x;f[i][j]=x;
			if(x=="J1")j1=1,j1x=i,j1y=j;
			else if(x=="J2")j2=1,j2x=i,j2y=j;
			else h.erase(x);
		}
	if(j1)h1=h;else h1.insert("cnx1");
	if(j2)h2=h;else h2.insert("cnx2");
	string s1="",s2="";
	int x1,y1,x2,y2;
	bool found=0;
	for(set<string>::iterator a=h1.begin();a!=h1.end()&&!found;++a)
		for(set<string>::iterator b=h2.begin();b!=h2.end()&&!found;++b)
			if(*a!=*b){
				if(*a!="cnx1")f[j1x][j1y]=*a;
				if(*b!="cnx2")f[j2x][j2y]=*b;
				for(int i1=0;i1<n&&!found;++i1)
					for(int j1=0;j1<m&&!found;++j1)
						if(check(i1,j1))
							for(int i2=0;i2<n&&!found;++i2)
								for(int j2=0;j2<m&&!found;++j2){
									if(i1+2>=i2&&i2+2>=i1&&j1+2>=j2&&j2+2>=j1)continue;
									if(check(i2,j2))
										found=1,x1=i1,y1=j1,x2=i2,y2=j2;
								}
				if(found)s1=*a,s2=*b;
			}
	if(!found)puts("No solution.");
	else{
		puts("Solution exists.");
		if(j1&&!j2)cout<<"Replace J1 with "<<s1<<".\n";
		if(j2&&!j1)cout<<"Replace J2 with "<<s2<<".\n";
		if(j1&&j2)cout<<"Replace J1 with "<<s1<<" and J2 with "<<s2<<".\n";
		if(!j1&&!j2)puts("There are no jokers.");
		printf("Put the first square to (%d, %d).\n",x1+1,y1+1);
		printf("Put the second square to (%d, %d).\n",x2+1,y2+1);
	}
	return 0;
}
