//By Lin
#include<cstdio>
#include<cstring>
#include<cctype>
#include<algorithm>
using namespace std;
const   char mm[15] = "A23456789TJQK";
const   char dd[5] = "CDHS";
int     data[20][20],n,m,x[2],y[2];
bool    mark[60],ans[20][20];
int     s_to_int( char s[] ) {
    if ( s[0] == 'J' && isdigit(s[1]) ) return 51+s[1]-'0';
    int g ,h;
    if ( isdigit(s[0]) ) g = s[0]-'1';
    else if ( s[0] == 'A' ) g = 0;
    else if ( s[0] == 'T' ) g = 9;
    else if ( s[0] == 'J' ) g = 10;
    else if ( s[0] == 'Q' ) g = 11;
    else if ( s[0] == 'K' ) g = 12;

    if ( s[1] == 'C' ) h = 0; 
    else if ( s[1] == 'D' ) h = 1;
    else if ( s[1] == 'H' ) h = 2;
    else if ( s[1] == 'S' ) h = 3;

    return h*13+g;
}

bool    pan(int x,int y){
    bool num[13],hua[4];
    memset( num, false , sizeof(num) );
    memset( hua, false , sizeof(hua) );
    for (int i = x; i<x+3; i++)
        for (int j = y; j<y+3; j++) 
            num[data[i][j]%13] = hua[data[i][j]/13] = true;
    int cnt = 0; 
    for (int i = 0; i<13; i++) if ( num[i] ) cnt++;
    if ( cnt == 9 ) return true;
    cnt = 0;
    for (int i = 0; i<4; i++) if ( hua[i] ) cnt++;
    return cnt == 1;
}
bool    ok(int x0,int y0,int x1,int y1) {
    return abs(x0-x1)>=3 || abs(y0-y1)>=3;
}
bool    solve(int g,int h) {
    if ( mark[52] ) data[x[0]][y[0]] = g; 
    if ( mark[53] ) data[x[1]][y[1]] = h; 
    for (int i = 0; i<n-2; i++) 
        for (int j = 0; j<m-2; j++)
            ans[i][j] = pan(i,j);
//  if ( g == 27 ) {
//      for (int i = 0; i<n-2; i++) {
//          for (int j = 0; j<m-2; j++) printf("%d " , ans[i][j] ); puts("");}
//  }
    for (int i = 0; i<n-2; i++) 
        for (int j = 0; j<m-2; j++) if ( ans[i][j] )
            for (int p = 0; p<n-2; p++)
                for (int q = 0; q<m-2; q++ ) if ( ans[p][q] ) 
                    if ( ok(i,j,p,q) ) {
                        puts("Solution exists.");
                        if ( !mark[52] && !mark[53] ) puts("There are no jokers.");
                        else if ( mark[52] && !mark[53] ) printf("Replace J1 with %c%c.\n",mm[g%13],dd[g/13]);
                        else if ( !mark[52] && mark[53] ) printf("Replace J2 with %c%c.\n",mm[h%13],dd[h/13]);
                        else printf("Replace J1 with %c%c and J2 with %c%c.\n",mm[g%13],dd[g/13],mm[h%13],dd[h/13]);
                        printf("Put the first square to (%d, %d).\n",i+1,j+1);
                        printf("Put the second square to (%d, %d).\n",p+1,q+1);
                        return true;
                    }
    return false;
}
int     main(){
    scanf("%d%d", &n, &m );
    for (int i = 0; i<n; i++) 
        for (int j = 0; j<m; j++) {
            char s[10];
            scanf("%s", s );
            data[i][j] = s_to_int(s);
            mark[data[i][j]] = 1;
            if ( data[i][j] == 52 ) x[0] = i , y[0] = j;
            if ( data[i][j] == 53 ) x[1] = i , y[1] = j;
        }
//  for (int i = 0; i<n; i++) {
//      for (int j = 0; j<m; j++) printf("%2d ", data[i][j] ); 
//      puts("");
//  }
    for ( int i = (mark[52]?0:55); i<=(mark[52]?51:55); i++) if ( !mark[i] )
        for (int  j = (mark[53]?0:56); j<=(mark[53]?51:56); j++) if ( !mark[j] && i != j ){
            if( solve(i,j) ) {
//              printf("%d %d\n" , i , j );
                return 0;
            }
        }
    puts("No solution.");
    return 0;
}
