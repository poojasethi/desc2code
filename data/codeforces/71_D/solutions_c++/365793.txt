#include <cstdio>
#include <cstring>
#include <algorithm>
#include <map>
#include <string>
using namespace std;

#define N 55

map < string, bool > use;
char c[100][5];

bool hao;
int n, m;
char s[N][N][10];
int pos[2], id1[128], id2[128];

inline bool lala(int x, int y) {
    char f1[13] = {0}, f2[4] = {0};
    bool o1 = 1, o2 = 1;
    for (int i = x; i < x+3; ++i)
        for (int j = y; j < y+3; ++j) {
            int t1 = id1[ s[i][j][0] ], t2 = id2[ s[i][j][1] ];
            ++f1[t1]; ++f2[t2];
            if (f1[t1] > 1) o1 = 0;
            if (f2[t2] > 1) o2 = 0;
            if (!o1 && !o2) return 0;
        }
    return 1;
}

inline bool ok(int i1, int j1, int i2, int j2) {
    if (!((i1+2 < i2) || (i2+2 < i1) || (j1+2 < j2) || (j2+2 < j1))) return 0;
    if (!lala(i1, j1)) return 0;
    if (!lala(i2, j2)) return 0;
    return 1;
}

void dfs(int k) {
    if (hao) return;
    if (k == 2) {
        for (int i = 2; i < n; ++i) for (int j = 2; j < m; ++j)
            for (int i1 = 2; i1 < n; ++i1) for (int j1 = 2; j1 < m; ++j1) if (ok(i-2, j-2, i1-2, j1-2)) {
                hao = 1;
                int jo = 0;
                puts("Solution exists.");
                for (int t = 0; t < 2; ++t) if (pos[t] != -1) {
                    ++jo;
                }
                if (!jo) puts("There are no jokers.");
                else if (jo == 1) {
                    for (int t = 0; t < 2; ++t) if (pos[t] != -1) {
                        int x = pos[t]/100, y = pos[t] % 100;
                        printf("Replace J%d with %s.\n", t+1, s[x][y]);
                    }
                } else
                    printf("Replace J1 with %s and J2 with %s.\n", s[ pos[0]/100 ][ pos[0]%100 ], s[ pos[1]/100 ][ pos[1]%100 ]);
                printf("Put the first square to (%d, %d).\n", i-1, j-1);
                printf("Put the second square to (%d, %d).\n", i1-1, j1-1);
                return;
            }
        return;
    }
    if (pos[k] == -1) dfs(k+1);
    else {
        int x = pos[k]/100, y = pos[k] % 100;
        for (int i = 0; i < 52; ++i) if (!use[ c[i] ]) {
            use[ c[i] ] = 1;
            strcpy(s[x][y], c[i]);
            dfs(k+1);
            use[ c[i] ] = 0;
        }
    }
}

int main() {
    char g[] = "CDHS", la[] = "TJQKA";
    for (int i = 2; i < 10; ++i) id1[i+'0'] = i-2;
    for (int i = 0; i < 5; ++i) id1[ la[i] ] = i+8;
    for (int i = 0; i < 4; ++i) id2[ g[i] ] = i;
    int cn = 0;
    for (int i = 0; i < 4; ++i) {
        for (int j = 2; j < 10; ++j) {
            c[cn][0] = j+'0';
            c[cn][1] = g[i];
            c[cn++][2] = 0;
        }
        for (int j = 0; j < 5; ++j) {
            c[cn][0] = la[j];
            c[cn][1] = g[i];
            c[cn++][2] = 0;
        }
    }
    scanf("%d %d", &n, &m);
    pos[0] = pos[1] = -1;
    for (int i = 0; i < n; ++i)
        for (int j = 0; j < m; ++j) {
            scanf("%s", s[i][j]);
            use[ s[i][j] ] = 1;
            if (s[i][j][0] == 'J') {
                pos[ s[i][j][1]-'1' ] = i*100 + j;
            }
        }
    hao = 0;
    dfs(0);
    if (!hao) puts("No solution.");
    return 0;
}
