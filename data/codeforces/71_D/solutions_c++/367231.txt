#include <iostream>
#include <string>
#include <vector>
#include <set>

using namespace std;

char rank[13][4]=
  {"2", "3", "4", "5", "6", "7", "8", "9", "T", "J", "Q", "K", "A"};
char suit[4][2]=
  {"C", "D", "H", "S"};

int absolut(int x)
{
  if (x<0) return -x;
  return x;
}

bool bloccorrecte1(vector<vector<string> > &input,
		  int i,int j)
{
  set<char> s;
  for (int ii=i;ii<i+3;ii++) {
    for (int jj=j;jj<j+3;jj++) {
      if (s.find(input[ii][jj][0])!=s.end()) return false;
      s.insert(input[ii][jj][0]);
    }
  }
  return true;
}

bool bloccorrecte2(vector<vector<string> > &input,
		  int i,int j)
{
  for (int ii=i;ii<i+3;ii++) {
    for (int jj=j;jj<j+3;jj++) {
      if (input[ii][jj][1]!=input[i][j][1]) return false;
    }
  }
  return true;
}

void trobasolucio(vector<vector<string> > &input,
		  int i1,int j1,int i2,int j2,
		  int &i1sol,int &j1sol,
		  int &i2sol,int &j2sol)
{
  //cout<<"entrem "<<i1<<","<<j1<<","<<i2<<","<<j2<<endl;
  if ((bloccorrecte1(input,i1,j1) or bloccorrecte2(input,i1,j1)) and
      (bloccorrecte1(input,i2,j2) or bloccorrecte2(input,i2,j2))) {
    i1sol=i1;
    j1sol=j1;
    i2sol=i2;
    j2sol=j2;
  }
  //cout<<"sortim"<<endl;
}

int main()
{
  set<string> resto;
  for (int i=0;i<13;i++) {
    string ra(rank[i]);
    for (int j=0;j<4;j++) {
      string su(suit[j]);
      resto.insert(ra+su);
    }
  }
  resto.insert("J1");
  resto.insert("J2");
  int n,m;
  cin>>n>>m;
  vector<vector<string> > input(n,vector<string> (m));
  int ij1=-1;
  int jj1=-1;
  int ij2=-1;
  int jj2=-1;
  for (int i=0;i<n;i++) {
    for (int j=0;j<m;j++) {
      cin>>input[i][j];
      resto.erase(input[i][j]);
      if (input[i][j]=="J1") {
	ij1=i;jj1=j;
      }
      if (input[i][j]=="J2") {
	ij2=i;jj2=j;
      }
    }
  }
  int numpos=n*m;
  int i1sol=-1;
  int j1sol=-1;
  int i2sol=-1;
  int j2sol=-1;
  for (int pos1=0;pos1<numpos and i1sol==-1;pos1++) {
    for (int pos2=pos1+1;pos2<numpos  and i1sol==-1;pos2++) {
      int i1=pos1/m;
      int j1=pos1%m;
      int i2=pos2/m;
      int j2=pos2%m;
      if (i1+3<=n and i2+3<=n and
	  j1+3<=m and j2+3<=m and
	  (absolut(i1-i2)>=3 or absolut(j1-j2)>=3)) {
	for (set<string>::iterator it1=resto.begin();it1!=resto.end()
	        and i1sol==-1;it1++) {
	  for (set<string>::iterator it2=resto.begin();it2!=resto.end()
		  and i1sol==-1;it2++) {
	    if ((*it1)!=(*it2) and (*it1)!="J2" and (*it2)!="J1") {
	      if (ij1!=-1) {
		input[ij1][jj1]=(*it1);
	      }
	      if (ij2!=-1) {
		input[ij2][jj2]=(*it2);
	      }
	      trobasolucio(input,i1,j1,i2,j2,i1sol,j1sol,i2sol,j2sol);
	    }
	  }
	}
      }
    }
  }
  if (i1sol==-1) {
    cout<<"No solution."<<endl;
  } else {
    cout<<"Solution exists."<<endl;
    if (ij1!=-1 and ij2==-1) {
      cout<<"Replace J1 with "<<input[ij1][jj1]<<"."<<endl;
    } else if (ij1==-1 and ij2!=-1) {
      cout<<"Replace J2 with "<<input[ij2][jj2]<<"."<<endl;
    } else if (ij1!=-1 and ij2!=-1) {
      cout<<"Replace J1 with "<<input[ij1][jj1]<<" and J2 with "<<
	input[ij2][jj2]<<"."<<endl;
    } else {
      cout<<"There are no jokers."<<endl;
    }
    i1sol++;j1sol++;i2sol++;j2sol++;
    cout<<"Put the first square to ("<<i1sol<<", "<<j1sol<<")."<<endl;
    cout<<"Put the second square to ("<<i2sol<<", "<<j2sol<<")."<<endl;
  }
}
