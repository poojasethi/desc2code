#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <string>
using namespace std;
#define p(x) cout<<#x<<":"<<x<<"\n"
#define in(x,y,a,b) (x>=a && x<=a+2 && y>=b && y<=b+2)
#define lim 17
#define lim2 3

int n,m,i,j,x,y,x2,y2;
bool f;
char r0,s0,s1,r1;
string rank="23456789TJQKA";
string suit="CDHS";
char R[lim][lim],S[lim][lim];
bool B[lim][lim],M[lim][lim];
int X[lim2],Y[lim2],C[14];

void rec(int i)
{
  int j,k,p,q;

  if(f)
    return;
  if(i==2)
  {
    for(j=0;j+2<n;j++)
      for(k=0;k+2<m;k++)
      {
        M[j][k]=1;      
        for(p=0;p<3;p++)
          for(q=0;q<3;q++)
            if(S[j+p][k+q]!=S[j][k])
              M[j][k]=0;
        if(!M[j][k])
        {
          memset(C,0,sizeof C);
          for(p=0;p<3;p++)
            for(q=0;q<3;q++)
              C[rank.find(R[j+p][k+q])]++;
          for(p=0;p<13 && C[p]<=1;p++);
          M[j][k]=p==13;
        }
      }
    for(j=0;j+2<n;j++)
      for(k=0;k+2<m;k++)
        if(M[j][k])
          for(p=j;p+2<n;p++)
          {
            if(p==j)
              q=k+3;
            else
              q=0;
            for(;q+2<m;q++)
              if(M[p][q])
                if(!in(p,q,j,k) && !in(p,q+2,j,k) && !in(p+2,q,j,k) && !in(p+2,q+2,j,k))
                {
                  if(X[0]!=-1)
                  {
                    r0=R[X[0]][Y[0]];
                    s0=S[X[0]][Y[0]];
                  }
                  if(X[1]!=-1)
                  {
                    r1=R[X[1]][Y[1]];
                    s1=S[X[1]][Y[1]];
                  }
                  f=1;
                  x=j;
                  y=k;
                  x2=p;
                  y2=q;
                }
          }
      
  }
  else
    if(X[i]==-1)
      rec(i+1);
    else
      for(j=0;j<13;j++)
        for(k=0;k<4;k++)
          if(!B[j][k])
          {
            B[j][k]=1;
            R[X[i]][Y[i]]=rank[j];
            S[X[i]][Y[i]]=suit[k];
            rec(i+1);
            B[j][k]=0;
          }
}
int main()
{
  X[0]=X[1]=-1;
  scanf("%d%d",&n,&m);
  for(i=0;i<n;i++)
    for(j=0;j<m;j++)
    {
      cin>>R[i][j]>>S[i][j];
      if(S[i][j]=='1' || S[i][j]=='2')
      {
        X[S[i][j]-'1']=i;
        Y[S[i][j]-'1']=j;
      }
      else
        B[rank.find(R[i][j])][suit.find(S[i][j])]=1;
    }   
  rec(0);
  if(f)
  {
    printf("Solution exists.\n");
    if(X[0]==-1)
      if(X[1]==-1)
        printf("There are no jokers.\n");
      else
        printf("Replace J2 with %c%c.\n",r1,s1);
    else
      if(X[1]==-1)
        printf("Replace J1 with %c%c.\n",r0,s0);
      else
        printf("Replace J1 with %c%c and J2 with %c%c.\n",r0,s0,r1,s1);
    printf("Put the first square to (%d, %d).\n",x+1,y+1);
    printf("Put the second square to (%d, %d).\n",x2+1,y2+1);
  }
  else
    printf("No solution.\n");
  return 0;
}
