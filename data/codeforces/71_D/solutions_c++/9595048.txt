#include<iostream>
#include<algorithm>
#include<cstring>
#include<vector>
#include<set>

#define SZ(c) int((c).size())
#define ALL(c) (c).begin(), (c).end()
#define foreach(it, c) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
#define WAIT 
//cout<<flush, system("PAUSE")
using namespace std;
typedef pair<int,int> pii;
typedef long double ld;
#define MAX 55

int N, M;
string A[MAX][MAX], B[MAX][MAX];
const int NN=13, NS=4;
string numb[NN] = {"2", "3", "4", "5", "6", "7", "8", "9", "T", "J", "Q", "K", "A"};
string suit[NS] = {"C", "D", "H", "S"};
set<string> S;
vector<string> R;
pii pj1, pj2;
string j1, j2;
bool hj1, hj2;

int xa, ya, xb, yb;
bool disjoint(){
   return (xb>=xa+3) || (xa>=xb+3) || (yb>=ya+3) || (ya>=yb+3);
}
bool ok(int x, int y){
   set<char> nm;
   set<char> st;
   for(int I=0; I<3; I++)
   for(int K=0; K<3; K++){
      nm.insert(B[x+I][y+K][0]);
      st.insert(B[x+I][y+K][1]);
   }
   return SZ(nm)==9 || SZ(st)==1;
}
bool check(){
   for(int I=1; I<=N; I++)
   for(int K=1; K<=M; K++){
      B[I][K]=A[I][K];
      if (B[I][K]=="J1") B[I][K]=j1;
      if (B[I][K]=="J2") B[I][K]=j2;
   }
   /*
   for(int I=1; I<=N; I++){
   for(int K=1; K<=M; K++)
      cout<<B[I][K]<<" ";
   cout<<endl;
   }
   */
   for(xa=1; xa+2<=N; xa++)
   for(xb=1; xb+2<=N; xb++)
   for(ya=1; ya+2<=M; ya++)
   for(yb=1; yb+2<=M; yb++) if (disjoint()){
      if (ok(xa, ya) && ok(xb, yb))
         return true;
   }
   return false;
}
void print(){
   cout<<"Put the first square to ("<<xa<<", "<<ya<<")."<<endl;
   cout<<"Put the second square to ("<<xb<<", "<<yb<<")."<<endl;
}

int main(){
   ios_base::sync_with_stdio(0);
   cin.tie(0);
   
   for(int n=0; n<NN; n++)
   for(int s=0; s<NS; s++)
      S.insert(numb[n]+suit[s]);
      
   cin>>N>>M;
   for(int I=1; I<=N; I++)
   for(int K=1; K<=M; K++){
      cin>>A[I][K];
      if (A[I][K]=="J1"){
         pj1=pii(I,K);
         hj1=true;
      }
      if (A[I][K]=="J2"){
         pj2=pii(I,K);
         hj2=true;
      }
      S.erase(A[I][K]);
   }
   R = vector<string>(ALL(S));
   
   if (!hj1&&!hj2){
      if (check()){
         cout<<"Solution exists."<<endl;
         cout<<"There are no jokers."<<endl;
         print();
         WAIT;
         return 0;
      }
   }else if (hj1&&!hj2){
      foreach(it, S){
         j1=*it;
         if (check()){
            cout<<"Solution exists."<<endl;
            cout<<"Replace J1 with "<<j1<<"."<<endl;
            print();
            WAIT;
            return 0;
         }         
      }
   }else if (!hj1&&hj2){
      foreach(it, S){
         j2=*it;
         if (check()){
            cout<<"Solution exists."<<endl;
            cout<<"Replace J2 with "<<j2<<"."<<endl;
            print();
            WAIT;
            return 0;
         }         
      }   
   }else{
      for(int I=0; I<SZ(R); I++)
      for(int K=0; K<SZ(R); K++){
         if (I==K) continue;
         j1=R[I];
         j2=R[K];         
         if (check()){
            cout<<"Solution exists."<<endl;
            cout<<"Replace J1 with "<<j1<<" and J2 with "<<j2<<"."<<endl;
            print();
            WAIT;
            return 0;
         } 
      }
   }
   cout<<"No solution."<<endl;
   WAIT;
   // MUST redefine WAIT
}














