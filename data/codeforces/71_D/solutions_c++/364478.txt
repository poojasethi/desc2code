#include <stdio.h>
#include <string.h>
#define maxn 100
int askRank(char c){
	if (c>='0' && c<='9') return c-'0';
	if (c=='T') return 10;
	if (c=='J') return 11;
	if (c=='Q') return 12;
	if (c=='K') return 13;
	if (c=='A') return 1;
}
int askSuit(char c){
	if (c=='C') return 0;
	if (c=='D') return 1;
	if (c=='H') return 2;
	if (c=='S') return 3;
}
int a[maxn][maxn],b[maxn][maxn];
int t[maxn][maxn];
int num[15];
int used[15][5];
int x1,x2,y1,y2;
int n,m;
int check(){
	int i,j,k,l;
	memset(t,0,sizeof(t));
	for (i=0;i+2<n;i++)
		for (j=0;j+2<m;j++){
			int flag1=1,flag2=1;
			memset(num,0,sizeof(num));
			for (k=0;k<3;k++)
				for (l=0;l<3;l++){
					if (b[i+k][j+l]!=b[i][j]) flag1=0;
					if (num[a[i+k][j+l]]) flag2=0;
					num[a[i+k][j+l]]=1;
				}
			if (flag1 || flag2) t[i][j]=1;
		}
	for (i=0;i+2<n;i++)
		for (j=0;j+2<m;j++)
			if (t[i][j])
				for (k=0;k+2<n;k++)
					for (l=0;l+2<m;l++)
						if (t[k][l] && (k>i+2 || l>j+2)){
							x1=i+1;
							y1=j+1;
							x2=k+1;
							y2=l+1;
							return 1;
						}
	return 0;
}
char S1(int x){
	if (x==1) return 'A';
	if (x==10) return 'T';
	if (x==11) return 'J';
	if (x==12) return 'Q';
	if (x==13) return 'K';
	return '0'+x;
}
char S2(int x){
	if (x==0) return 'C';
	if (x==1) return 'D';
	if (x==2) return 'H';
	if (x==3) return 'S';
}
int check1(){
	int i,j,k,l,tmp;
	for (i=0;i<n;i++)
		for (j=0;j<m;j++)
			if (a[i][j]==14){
				for (k=1;k<=13;k++)
					for (l=0;l<4;l++)
						if (!used[k][l]){
							tmp=b[i][j];
							a[i][j]=k;
							b[i][j]=l;
							if (check()){
								printf("Solution exists.\n");
								printf("Replace J%d with %c%c.\n",tmp+1,S1(k),S2(l));
								printf("Put the first square to (%d, %d).\n",x1,y1);
								printf("Put the second square to (%d, %d).\n",x2,y2);			
								return 1;
							}
							b[i][j]=tmp;
							a[i][j]=14;
						}
			}
	return 0;
}
int w[2],q[2];
int check2(int dep){
	int i,j,k,l,t;
	for (i=0;i<n;i++)
		for (j=0;j<m;j++)
			if (a[i][j]==14){
				for (k=1;k<=13;k++)
					for (l=0;l<4;l++)
						if (!used[k][l]){
							used[k][l]=1;
							w[b[i][j]]=l;
							q[b[i][j]]=k;
							t=b[i][j];
							a[i][j]=k;
							b[i][j]=l;
							if (dep==0){
								if (check2(dep+1)) return 1;
							}else{
								if (check()){
									printf("Solution exists.\n");
									printf("Replace J1 with %c%c and J2 with %c%c.\n",S1(q[0]),S2(w[0]),S1(q[1]),S2(w[1]));
									printf("Put the first square to (%d, %d).\n",x1,y1);
									printf("Put the second square to (%d, %d).\n",x2,y2);								
									return 1;
								}
							}
							a[i][j]=14;
							b[i][j]=t;
							used[k][l]=0;
						}
			}
	return 0;
}
int main(){
	int i,j,k;
	scanf("%d %d",&n,&m);
	char s[10];
	int totj=0;
	for (i=0;i<n;i++)
		for (j=0;j<m;j++){
			scanf("%s",s);
			if (s[1]=='1' || s[1]=='2'){
				a[i][j]=14;
				b[i][j]=s[1]-'1';
				totj++;
			}else{
				a[i][j]=askRank(s[0]);
				b[i][j]=askSuit(s[1]);
			}
		}
	memset(used,0,sizeof(used));
	for (i=0;i<n;i++)
		for (j=0;j<m;j++)
			if (a[i][j]<14) used[a[i][j]][b[i][j]]=1;
	if (totj==0){
		if (check()){
			printf("Solution exists.\n");
			printf("There are no jokers.\n");
			printf("Put the first square to (%d, %d).\n",x1,y1);
			printf("Put the second square to (%d, %d).\n",x2,y2);
		}else printf("No solution.\n");
	}else
	if (totj==1){
		if (!check1()) printf("No solution.\n");
	}else{
		if (!check2(0)) printf("No solution.\n");
	}
	return 0;
}
