#include<bits/stdc++.h>

using namespace std;

string s;
map<string, string> mp;
int dp[101000], sz;
vector<string> ans;

bool solve(int idx) {
	if (idx == s.size()) return 1;
	if (dp[idx] != -1) return dp[idx];
	string got = "";
	for (int i = idx; i < idx + sz; i++) {
		got += s[i];
		if (mp[got].size() != 0) {
			ans.push_back(got);
			if (solve(i + 1)) return dp[idx] = 1;
			ans.pop_back();
		}
	}
	return dp[idx] = 0;
}

int main() {
	ios_base::sync_with_stdio(0);
	int n, m;
	cin >> n >> s >> m;
	memset(dp, -1, sizeof dp);
	for (int i = 0; i < m; i++) {
		string t;
		cin >> t;
		string tmp = t;
		reverse(tmp.begin(), tmp.end());
		for (int j = 0; j < tmp.size(); j++) {
			tmp[j] = (tmp[j] >= 'A' && tmp[j] <= 'Z') ? (tmp[j] - 'A' + 'a') : (tmp[j]);
		}
		sz = max(sz, (int)tmp.size());
		mp[tmp] = t;
	}
	solve(0);
	for (int i = 0; i < ans.size(); i++) {
		cout << mp[ans[i]] << " ";
	}
	return 0;
}