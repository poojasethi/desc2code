#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<queue>
#include<cmath>
#define LL long long
using namespace std;
int n,m;
char s[11000];
char t[100005][1005];
int d[11000],e,f,g,h;
int l[100005],ans[10005];
struct abc{
	int a,b,c;
	bool operator < (const abc&T) const{
		if (b!=T.b) return b<T.b;
		else return c<T.c;
	}
} a[110000],b;

int main(){
	scanf("%d",&n);
	scanf("%s",s+1);
	scanf("%d",&m);
	for (int i=1;i<=m;i++){
		scanf("%s",t[i]);
		l[i]=strlen(t[i]);
		h=max(h,l[i]);
		a[i].a=i;
		for (int j=l[i]-1;j>=0;j--){
			a[i].b=(a[i].b*27+t[i][j]+32*(t[i][j]<97))%1000000007;
			a[i].c=(a[i].c*26+t[i][j]+32*(t[i][j]<97))%100000007;
		}
	}
	sort(a+1,a+1+m);
	d[0]=1;
	for (int i=0;i<n;i++)
		if (d[i]){
			e=f=0;
			for (int j=i+1;j<=i+h;j++){
				e=(e*27+s[j])%1000000007;
				f=(f*26+s[j])%100000007;
				b.b=e;
				b.c=f;
				if (!d[j]){
					g=lower_bound(a+1,a+1+m,b)-a;
					if (a[g].b==e && a[g].c==f) d[j]=a[g].a;
				}
			}
		}
	e=0;
	for (int i=n;i;i-=l[d[i]])	ans[++e]=d[i];
	for (int i=e;i>=1;i--) printf("%s%c",t[ans[i]],i==1?'\n':' ');
    return 0;
}

