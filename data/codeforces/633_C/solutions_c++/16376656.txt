#include<bits/stdc++.h>
		 
using namespace std;
#define foreach(i,x) for(type(x)i=x.begin();i!=x.end();i++)
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define FORE(ii,aa,bb) for(int ii=aa;ii<bb;ii++)
#define ROF(ii,aa,bb) for(int ii=aa;ii>=bb;ii--)
#define type(x) __typeof(x.begin())

#define dbg(x) cerr << (#x) << " --> " << (x) << endl
#define y1 sdfsdfsdf
#define ll long long
#define pii pair<int,int>
#define N (int)(2e5+10)
#define mp make_pair
#define pb push_back
#define sd second
#define ft first
#define endll puts("")
#define endl '\n'
#define ort ((sol+sag)/2)
const int mod = 1e6+3;
int m,n;
ll ata[N];
string str,str2,temp;
ll h;
map<ll,string>M;
void yaz_kizim(int x){
	if(x == 0) return;
	string temp = M[ata[x]];
	yaz_kizim(x - temp.size());
	cout << temp << ' ';
}
int main(){
	memset(ata , -1 , sizeof ata);
	cin >> m >> str >> n;
	ata[0] =0;
	FOR(i,1,n){
		cin >> str2;
		h = 0;
		FORE(j,0,str2.size())
			h = h*mod + tolower(str2[j]);
		M[h] = str2;
	}
	FOR(i,1,m){
		h = 0;
		ROF(j,i-1,0){
			h = h*mod + tolower(str[j]);
			if(ata[j] != -1 and M.count(h)){
				ata[i] = h;
				break;
			}
		}
	}
	yaz_kizim(m);
}
