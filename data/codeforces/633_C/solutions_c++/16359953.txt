#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

string s,p[2000000],d[2000000];
int trie[1000000][30],n,f[100000],m,cur,en[3000000];

void add(int cs,int node,int to)
{
    if (to==p[cs].length())
    {
        en[node]=cs;
        return;
    }
    int tmp=p[cs][to]-'a';
    if (trie[node][tmp]==0)
    {
        trie[node][tmp]=++cur;
        add(cs,cur,to+1);
    }
    else add(cs,trie[node][tmp],to+1);
}

int main()
{
    cin >> m >> s >> n;
    for (int i=1;i<=n;i++)
    {
        cin >> p[i];
        d[i]=p[i];
        transform(p[i].begin(),p[i].end(),p[i].begin(),::tolower);
        reverse(p[i].begin(),p[i].end());
        add(i,0,0);
    }
    f[m+1]=1;
    for (int i=m;i>=1;i--)
    {
        int cur=0;
        for (int j=i;j<=m;j++)
        {
            int tmp=s[j-1]-'a';
            if (trie[cur][tmp]==0) break;
            cur=trie[cur][tmp];
            if (en[cur] and f[j+1]) f[i]=en[cur];
        }
    }
    int tmp=1;
    while (tmp<=m)
        cout << d[f[tmp]] << " ",tmp+=d[f[tmp]].length();
}
