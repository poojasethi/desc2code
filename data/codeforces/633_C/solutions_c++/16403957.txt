#include <cstdio>
#include <cstring>
int getint() {
	int r=0,k=1;char c=getchar();
	for (;c<'0'||c>'9';c=getchar())if(c=='-')k=-1;
	for (;'0'<=c&&c<='9';c=getchar())r=r*10-'0'+c;
	return r*k;
}
const int maxn = 10005;
int n, m;
char str[maxn], word[100010][1005];
char *wrd;
int son[1000100][26], end[1000100], last[maxn], ans[maxn];
int tot = 0;
int root;
int nnd() { return ++tot; }
void dfs(int now) {
	if (last[now]) dfs(last[now]);
	printf("%s ", word[ans[now]]);
}
int main () {
	n = getint();
	scanf("%s", str+1);
	m = getint();
	root = nnd();
	int l;
	for (int i = 1; i <= m; ++i) {
		wrd = word[i];
		scanf("%s", wrd);
		l = strlen(wrd);
		int now = root, x;
		for (int j = l-1; j >= 0; --j) {
			if (wrd[j]<='Z') x = wrd[j]-'A';
			else x = wrd[j]-'a';
			if (!son[now][x]) son[now][x] = nnd();
			now = son[now][x];
		}
		end[now] = i;
	}
	ans[0] = -1;
	for (int i = 1; i <= n; ++i) {
		int now = root;
		if (!ans[i-1]) continue;
		for (int j = i; j <= n; ++j) {
			now = son[now][str[j]-'a'];
			if (!now) break;
			if (end[now]) {
				last[j] = i - 1;
				ans[j] = end[now];
			}
		}
	}
	dfs(n);
}
