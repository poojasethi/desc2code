#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
using namespace std;
#define N (int)(2e5+5e3)
int seg[N*4][11][11];
int lmost[N*4],rmost[N*4],flag[N*4];
string s;
int n,m,k;
void combine(int idx){
    lmost[idx]=lmost[2*idx];
    rmost[idx]=rmost[2*idx+1];
    for(int i=0;i<k;i++){
        for(int j=0;j<k;j++){
            seg[idx][i][j]=seg[2*idx][i][j]+seg[2*idx+1][i][j];
        }
    }
    seg[idx][rmost[2*idx]][lmost[2*idx+1]]++;
}
void build(int idx,int l,int r){
    flag[idx]=-1;
    if(l==r){
        int x=s[l]-'a';
        lmost[idx]=rmost[idx]=x;
        return;
    }
    int mid=(l+r)>>1;
    build(2*idx,l,mid);
    build(2*idx+1,mid+1,r);
    combine(idx);
}
void prop(int idx,int l,int r){
    if(flag[idx]==-1)
        return;
    int mid=(l+r)>>1;
    flag[2*idx]=flag[2*idx+1]=flag[idx];
    lmost[2*idx]=rmost[2*idx]=lmost[2*idx+1]=rmost[2*idx+1]=flag[idx];
    for(int i=0;i<k;i++){
        for(int j=0;j<k;j++){
            seg[2*idx][i][j]=seg[2*idx+1][i][j]=0;
        }
    }
    seg[2*idx][flag[idx]][flag[idx]]=mid-l;
    seg[2*idx+1][flag[idx]][flag[idx]]=r-mid-1;
    flag[idx]=-1;
}
void update(int idx,int l,int r,int ql,int qr,int x){
    if(ql>r||qr<l)
        return;
    if(ql<=l&&r<=qr){
        lmost[idx]=x;
        rmost[idx]=x;
        for(int i=0;i<k;i++)
            for(int j=0;j<k;j++){
                seg[idx][i][j]=0;
            }
        seg[idx][x][x]=r-l;
        flag[idx]=x;
        return;
    }
    prop(idx,l,r);
    int mid=(l+r)>>1;
    update(2*idx,l,mid,ql,qr,x);
    update(2*idx+1,mid+1,r,ql,qr,x);
    combine(idx);
}
int main(){
    cin>>n>>m>>k;
    cin>>s;
    build(1,0,n-1);
    while(m--){
        int t;
        cin>>t;
        if(t==1){
            int l,r;
            char c;
            cin>>l>>r>>c;
            int x=c-'a';
            update(1,0,n-1,l-1,r-1,x);
        }
        else{
            string c;
            cin>>c;
            int idx[101];
            for(int j=0;j<c.size();j++){
                idx[c[j]-'a']=j;
            }
            int ans=0;
            for(int i=0;i<k;i++){
                for(int j=0;j<k;j++){
                    if(idx[i]>=idx[j]){
                      ans+=seg[1][i][j];
                    }
                }
            }
            cout<<ans+1<<endl;
        }
    }
    return 0;
}
