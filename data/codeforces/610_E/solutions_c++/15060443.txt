#include<bits/stdc++.h>
using namespace std;
struct IT
{
    int d[800000][10][10];
    int lz[800000];
    int ll[800000];
    int rr[800000];
    IT()
    {
        memset(lz,-1,sizeof lz);
    }
    void lazy(int num,int l,int r)
    {
        if(lz[num]==-1 || l==r) return;
        insert(num*2,l,(l+r)/2,lz[num]);
        insert(num*2+1,(l+r)/2+1,r,lz[num]);
        lz[num]=-1;
        for(int i=0;i<10;i++)
        for(int j=0;j<10;j++) d[num][i][j]=d[num*2][i][j]+d[num*2+1][i][j];
        d[num][rr[num*2]][ll[num*2+1]]++;
        ll[num]=ll[num*2]; rr[num]=rr[num*2+1];
    }
    void insert(int num,int l,int r,int z)
    {
        memset(d[num],0,sizeof d[num]);
        d[num][z][z]=(r-l);
        lz[num]=ll[num]=rr[num]=z;
    }
    void upd(int num,int l,int r,int x,int y,int z){
            if(l>r|| x>y || x>r || y<l) return;
            lazy(num,l,r);
            if(x<=l && r<=y){
                insert(num,l,r,z);
                return;
            }
            upd(num*2,l,(l+r)/2,x,y,z);
            upd(num*2+1,(l+r)/2+1,r,x,y,z);
            for(int i=0;i<10;i++)
            for(int j=0;j<10;j++) d[num][i][j]=d[num*2][i][j]+d[num*2+1][i][j];
            d[num][rr[num*2]][ll[num*2+1]]++;
            ll[num]=ll[num*2]; rr[num]=rr[num*2+1];
    }
}it;
int main()
{
    int n,m,k,i,x,y;
    char z;
    string s,t;
    //freopen("test.inp","r",stdin);
    scanf("%d %d %d",&n,&m,&k);
    cin>>s;
    for(i=0;i<s.size();i++) it.upd(1,1,n,i+1,i+1,s[i]-'a');
    for(i=1;i<=m;i++)
    {
        int type;
        scanf("%d",&type);
        if(type==1){
            scanf("%d %d %c",&x,&y,&z);
            it.upd(1,1,n,x,y,z-'a');
        }
        else{
            cin>>t;
            int sum=0;
            sum=s.size();
            for(int i=0;i<t.size();i++){
            for(int j=i+1;j<t.size();j++){
                sum-=it.d[1][t[i]-'a'][t[j]-'a'];
            }}
            cout<<sum<<'\n';
        }
    }
}
