#include <cmath>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;

#define LY(p) freopen (p".in", "r", stdin); freopen (p".out", "w", stdout)
#define arrset(A, u) memset (A, u, sizeof (A))
#define LL long long
#define dbl double
#define ld long double
#ifdef WIN32
#define L_L "%I64d"
#else
#define L_L "%lld"
#endif
#define N 200010
char ch[N], p[10], z;
int n, m, k, x, y, opt;
int val[N << 2][10][10], lv[N << 2], rv[N << 2], laz[N << 2];

void up (int o) {
	for (int i = 0; i < k; i++)
		for (int j = 0; j < k; j++)
			val[o][i][j] = val[o << 1][i][j] + val[o << 1 | 1][i][j];
	val[o][ rv[o << 1] ][ lv[o << 1 | 1] ] ++;
	lv[o] = lv[o << 1], rv[o] = rv[o << 1 | 1];
}

void push (int o) {
	if (laz[o] != -1) {
		laz[o << 1] = laz[o << 1 | 1] = laz[o];
		arrset (val[o << 1], 0), arrset (val[o << 1 | 1], 0);
		lv[o << 1] = rv[o << 1] = lv[o << 1 | 1] = rv[o << 1 | 1] = laz[o];
		laz[o] = -1;
	}
}

void build (int o, int l, int r) {
	int mid = l + r >> 1;
	laz[o] = -1;
	lv[o] = ch[l] - 'a', rv[o] = ch[r] - 'a';
	if (l < r)
		build (o << 1, l, mid), build (o << 1 | 1, mid + 1, r), up (o);
}

void modify (int o, int l, int r, int L, int R, int x) {
	if (r < L || R < l) return;
	if (l < r)
		push (o);
	if (L <= l && r <= R) {
		arrset (val[o], 0);
		lv[o] = rv[o] = laz[o] = x;
		return;
	}
	int mid = l + r >> 1;
	modify (o << 1, l, mid, L, R, x);
	modify (o << 1 | 1, mid + 1, r, L, R, x);
	up (o);
}

int query (char *p) {
	int ans = n;
	for (int i = 1; i <= k; i++)
		for (int j = i + 1; j <= k; j++)
		ans -= val[1][p[i] - 'a'][p[j] - 'a'];
	return ans;
}

int main()
{
#ifndef ONLINE_JUDGE
	LY("E");
#endif
	scanf ("%d %d %d", &n, &m, &k);
	scanf ("%s", ch + 1);
	build (1, 1, n);
	for (int i = 1; i <= m; i++) {
		scanf ("%d", &opt);
		if (opt == 1) {
			scanf ("%d %d %s", &x, &y, &z);
			modify (1, 1, n, x, y, z - 'a');
		}
		else {
			scanf ("%s", p + 1);
			printf ("%d\n", query (p));
		}
	}
	return 0;
}
