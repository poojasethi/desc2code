#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>
#include <cmath>
#include <stack>
#include <map>
#include <set>
#include <deque>
#include <cstring>
#include <functional>
#include <climits>
#include <list>
#include <ctime>
#include <complex>
#include <sys/time.h>

#define F1(x,y,z) for(int x=y;x<z;x++)
#define F2(x,y,z) for(int x=y;x<=z;x++)
#define F3(x,y,z) for(int x=y;x>z;x--)
#define F4(x,y,z) for(int x=y;x>=z;x--)
#define pb push_back
#define LL long long
#define co complex<double>
 
#define MAX 100005
#define AMAX 1500
#define MOD 1000000007

#define f(c,d) ((1<<(c))*(d))

using namespace std;

int n,m,k,ta,tb,y[11][11],ans;
char x[MAX*2],z[11];
set<pair<int,char> > s;
set<pair<int,char> >::iterator ia,ib,ic;

int main(){
	scanf("%d%d%d%s",&n,&m,&k,x+1);
	n++;
	F1(a,1,n)x[a]-='a';
	x[0]=x[n]=10;
	s.insert(s.end(),make_pair(0,10));
	F2(a,1,n){
		if(x[a]!=x[a-1])s.insert(s.end(),make_pair(a,x[a]));
		y[x[a-1]][x[a]]++;
	}
	while(m--){
		scanf("%d",&ta);
		if(ta==1){
			scanf("%d%d%s",&ta,&tb,z);
			z[0]-='a';
			z[1]=11;
			ia=s.lower_bound(make_pair(ta,0));
			ic=ia;
			--ic;
			if((*ia).first<=tb)y[(*ic).second][(*ic).second]-=(*ia).first-ta;			
			++ic;
			while((*ia).first<=tb){
				ib=ia;
				--ib;
				y[(*ib).second][(*ia).second]--;
				z[1]=(*ia).second;
				++ia;
				++ib;
				y[(*ib).second][(*ib).second]-=(*ia).first-(*ib).first-1;
			}
			ib=ia;
			--ib;
			if(z[1]!=11){
				if((*ia).first==tb+1){
					y[(*ib).second][(*ia).second]--;
					s.erase(ic,ia);
				}
				else{
					s.erase(ic,ia);
					ia=s.insert(make_pair(tb+1,z[1])).first;
					ib=ia;
					++ia;
					y[z[1]][z[1]]+=(*ia).first-(*ib).first-1;
				}
			}else{
				--ic;
				if((*ia).first==tb+1){
					y[(*ic).second][(*ic).second]-=tb-ta+1;					
					y[(*ic).second][(*ia).second]--;
				}
				else{
					y[(*ic).second][(*ic).second]-=tb-ta+2;
					s.insert(make_pair(tb+1,(*ic).second)).first;
				}
			}			
			ia=s.insert(make_pair(ta,z[0])).first;
			ib=ia;
			--ib;
			y[(*ib).second][(*ia).second]++;
			++ib;
			++ia;
			y[(*ib).second][(*ia).second]++;
			y[(*ib).second][(*ib).second]+=(*ia).first-(*ib).first-1;
		}else{
			ans=1;
			scanf("%s",z);
			F1(a,0,k)z[a]-='a';
			F1(a,0,k)F1(b,a,k)ans+=y[z[b]][z[a]];
			printf("%d\n",ans);
		}
	}
	//system("pause");
	return 0;
}
