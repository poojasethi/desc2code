#include<cstdio>
#include<cstring>
#include<iostream>
using namespace std;
const int N=2e5+100;
char ss[N];
int ls[N<<2],rs[N<<2],fg[N<<2],sum[N<<2][10][10];
#define ll o<<1
#define rr o<<1|1
#define mid (l+r)/2
int n,m,k;
void pushup(int l,int r,int o){
    for(int i=0;i<k;i++){
        for(int j=0;j<k;j++){
            sum[o][i][j]=sum[ll][i][j]+sum[rr][i][j];
        }
    }
    ls[o]=ls[ll];rs[o]=rs[rr];
    sum[o][rs[ll]][ls[rr]]++;
}
void pushdown(int l,int r,int o){
    if(fg[o]!=-1){
        memset(sum[ll],0,sizeof(sum[ll]));
        memset(sum[rr],0,sizeof(sum[rr]));
        fg[ll]=fg[rr]=ls[ll]=rs[ll]=ls[rr]=rs[rr]=fg[o];
        sum[ll][fg[o]][fg[o]]=mid-l;
        sum[rr][fg[o]][fg[o]]=r-(mid+1);
        fg[o]=-1;
    }
}
void build(int l,int r,int o){
    fg[o]=-1;
    if(l==r){
        memset(sum[o],0,sizeof(sum[o]));
        ls[o]=rs[o]=ss[l]-'a';
        return ;
    }
    build(l,mid,ll);build(mid+1,r,rr);
    pushup(l,r,o);
}
int L,R,X;
void update(int l,int r,int o){
    if(L<=l&&r<=R){
        ls[o]=rs[o]=X;fg[o]=X;
        memset(sum[o],0,sizeof(sum[o]));
        sum[o][X][X]=r-l;
        return ;
    }
    pushdown(l,r,o);
    if(L<=mid)update(l,mid,ll);
    if(R>mid)update(mid+1,r,rr);
    pushup(l,r,o);
}
int mp[10][10];

int main(){
    #ifdef DouBi
    freopen("in.cpp","r",stdin);
    #endif // DouBi
    while(scanf("%d%d%d",&n,&m,&k)!=EOF){
        scanf("%s",ss+1);
        build(1,n,1);
//        for(int i=0;i<k;i++){
//            for(int j=0;j<k;j++)printf("%d ",sum[1][i][j]);printf("\n");
//        }
        for(int i=0;i<m;i++){
            int op;scanf("%d",&op);
            if(op==1){
                scanf("%d%d",&L,&R);scanf("%s",ss);X=ss[0]-'a';
                update(1,n,1);
            }
            else {
                scanf("%s",ss);
                memset(mp,0,sizeof(mp));
                for(int i=0;i<k;i++){
                    for(int j=i;j<k;j++){
                        mp[ss[j]-'a'][ss[i]-'a']=1;
                    }
                }
//                for(int i=0;i<k;i++){
//                    for(int j=0;j<k;j++)printf("%d ",mp[i][j]);printf("\n");
//                }printf("\n");
//                for(int i=0;i<k;i++){
//                    for(int j=0;j<k;j++)printf("%d ",sum[1][i][j]);printf("\n");
//                }
                int ans=1;
                for(int i=0;i<k;i++){
                    for(int j=0;j<k;j++){
                        ans+=mp[i][j]*sum[1][i][j];
                    }
                }
                printf("%d\n",ans);
            }
        }
    }
    return 0;
}
