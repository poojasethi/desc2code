#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

int n, m, k;

char s[200009];

int cnt[10][10];

int fwt[200009];
void fwt_add(int k, int d)
{
    while (k <= n) {
        fwt[k] += d;
        k += k & (-k);
    }
}
int fwt_get(int k)
{
    int ans = 0;
    while (k) {
        ans += fwt[k];
        k -= k & (-k);
    }
    return ans;
}
int fwt_getKth(int k)
{
    if (k == 0) return 0;

    int ans = 0;
    for (int i = 18; i >= 0; i--) {
        if (ans + (1<<i) <= n && fwt[ ans + (1<<i) ] < k) {
            ans += (1<<i);
            k -= fwt[ans];
        }
    }
    return ans + 1;
}

char S(int i) {
    i = fwt_getKth( fwt_get(i) );
    if (i == 0)
        i = 1;
    return s[i];
}

int main()
{
    //freopen("input.txt", "r", stdin);

    ios::sync_with_stdio(false);

    cin >> n >> m >> k;
    cin >> s + 1;

    for (int i = 2; i <= n; i++) {
        if (s[i] != s[i - 1]) {
            cnt[ s[i - 1] - 'a' ][ s[i] - 'a' ]++;
            fwt_add(i, 1);
        }
    }

    while (m--) {
        int t;
        cin >> t;

        if (t == 1) {
            int l, r; char c;
            cin >> l >> r >> c;

            char tmp = S(r + 1);

            int cur = min(r + 1, n);
            while (cur >= l) {
                if (fwt_get(cur) > fwt_get(cur - 1)) {
                    cnt[ S(cur - 1) - 'a' ][ S(cur) - 'a' ]--;
                    fwt_add(cur, -1);
                }

                cur = fwt_getKth( fwt_get(cur) );
            }

            s[l] = c;
            if (l >= 2 && S(l - 1) != c) {
                cnt[ S(l - 1) - 'a' ][ c - 'a' ]++;
                fwt_add(l, 1);
            }

            if (r <= n - 1 && tmp != c) {
                cnt[ c - 'a' ][ tmp - 'a' ]++;
                s[r + 1] = tmp;
                fwt_add(r + 1, 1);
            }
        }
        else {
            string p; cin >> p;

            int ans = n;

            for (int i = 0; i < k; i++) {
                for (int j = i + 1; j < k; j++) {
                    ans -= cnt[ p[i] - 'a' ][ p[j] - 'a' ];
                }
            }

            cout << ans << endl;
        }
    }

}
