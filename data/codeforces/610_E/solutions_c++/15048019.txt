#include<stdio.h>
#define M 200000
#define N 10
using namespace std;
int c[4*M + 2][N + 1][N + 1] , lazy[4*M + 2] , sta[4*M + 2] , fin[4*M + 2] , t , n , m , p[N + 5];
char s[M + 5] , xx[22];
void fix(int k,int p,int q){
    if(lazy[k] != -1){
        sta[k] = lazy[k] ; fin[k] = lazy[k];
        for(int x = 0 ; x < t ; x++)    for(int y = 0 ; y < t ; y++)    c[k][x][y] = 0;
        c[k][sta[k]][fin[k]] = (q - p);
        if(p != q){
            lazy[k*2] = lazy[k] ; lazy[k*2 + 1] = lazy[k];
        }
        lazy[k] = -1;
    }
}
void build(int k,int p,int q){
    lazy[k] = -1;
    if( p == q ){
        sta[k] = s[p - 1] - 'a'; fin[k] = s[p - 1] - 'a';
        return ;
    }
    build(k*2 , p , (p + q)/2);
    build(k*2 + 1 , (p + q)/2 + 1 , q);
    for(int x = 0 ; x < t ; x++)    for(int y = 0 ; y < t ; y++)    c[k][x][y] = c[k*2][x][y] + c[k*2 + 1][x][y];
    c[k][fin[k*2]][sta[k*2 + 1]]++;
    sta[k] = sta[k*2] ; fin[k] = fin[k*2 + 1];
}
void upd(int k,int p,int q,int u,int v,int z){
    fix(k , p , q);
    if( p > v || u > q ) return ;
    if( p >= u && v >= q ){
         lazy[k] = z; fix(k , p , q);
         return ;
    }
    upd(k*2 , p , (p + q)/2 , u , v , z);
    upd(k*2 + 1 , (p + q)/2 + 1 , q , u , v , z);
    for(int x = 0 ; x < t ; x++)    for(int y = 0 ; y < t ; y++)    c[k][x][y] = c[k*2][x][y] + c[k*2 + 1][x][y];
    c[k][fin[k*2]][sta[k*2 + 1]]++;
    sta[k] = sta[k*2] ; fin[k] = fin[k*2 + 1];  
}
main(){
//  freopen("test.inp","r",stdin);
    scanf("%d %d %d",&n,&m,&t); scanf("%s",s);
    build(1 , 1 , n);
    while(m > 0){
        int tt;
        scanf("%d",&tt);
        if(tt == 1){
            int x , y; scanf("%d %d %s",&x,&y,xx);
            upd(1 , 1 , n , x , y , xx[0] - 'a');
        }
        else{
            scanf("%s",xx);
            int ans = 1;
            for(int i = 0 ; i < t ; i++)    p[xx[i] - 'a'] = i;
            for(int x = 0 ; x < t ; x++)    for(int y = 0 ; y < t ; y++)    if(p[x] >= p[y])    ans += c[1][x][y];
            printf("%d\n",ans);
        }
        m--;
    }
}