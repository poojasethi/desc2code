#include<bits/stdc++.h>
using namespace std;
int const lim = 200000;
int st[4*lim][10][10]={0},lazy[4*lim],last[4*lim],first[4*lim];
string s;int k=0;
void merg(int index)
{
    int lef = index*2+1,rig = index*2+2;
    for(int i = 0;i<k;i++)
        for(int j = 0 ;j<k;j++)
            st[index][i][j] = st[lef][i][j]+st[rig][i][j];
    st[index][last[lef]][first[rig]]++;
    first[index] = first[lef];last[index] = last[rig];
}
void build(int index ,int i,int j)
{
    if(i==j){last[index] = first[index] =  s[i]-'a';return;}
    int mid = (i+j)/2;
    build(index*2+1,i,mid);
    build(index*2+2,mid+1,j);
    merg(index);return;
}
void update(int i,int j ,int index,int l, int r,int v)
{
    if(j<l||i>r)return;
    if(i>=l&&j<=r)
    {
        lazy[index]  = v;
        for(int i = 0;i<k;i++)
            for(int j = 0 ;j<k;j++)
                st[index][i][j] = 0;
        st[index][v][v] = j-i;
        last[index] = first[index] = v;
        return;
    }
    if(lazy[index]!=-1)
    {
        /*lazy[index*2+1] = lazy[index];
        last[index*2+1] = first[index*2+1] = lazy[index];
        last[index*2+2] = first[index*2+2] = lazy[index];
        lazy[index*2+2] = lazy[index];
        for(int i = 0;i<k;i++)
            for(int j = 0 ;j<k;j++)
                st[index*2+1][i][j] = 0;
        for(int i = 0;i<k;i++)
            for(int j = 0 ;j<k;j++)
                st[index*2+2][i][j] = 0;
        int mid = (i+j)/2;
        st[index*2+1][lazy[index]][lazy[index]] = mid-i;
        st[index*2+1][lazy[index]][lazy[index]] = j-(mid+1);*/
        int mid = (i+j)/2;
        update(i,mid,index*2+1,i,mid,lazy[index]);
        update(mid+1,j,index*2+2,mid+1,j,lazy[index]);
        lazy[index] = -1;
    }
    int mid = (i+j)/2;
    update(i,mid,index*2+1,l,r,v);
    update(mid+1,j,index*2+2,l,r,v);
    merg(index);
}
int main()
{
    memset(lazy,-1,sizeof lazy);
    int n,q;cin >> n >> q >> k>>s;
    build(0,0,n-1);
    while(q--)
    {
        int t;cin >> t;
        if(t == 1)
        {
            char x;int l,r;cin >>l >>r>>x;l--;r--;
            update(0,n-1,0,l,r,x-'a');
        }
        else
        {
            string ss;cin >> ss;
            int cost[10][10]={0};
            for(int i = 0;i<ss.size();i++)
                for(int j = 0;j<=i;j++)
                    cost[ss[i]-'a'][ss[j]-'a']++;
            int ans = 0;
            for(int i = 0;i<k;i++)
                for(int j = 0;j<k;j++)
                    ans += st[0][i][j]*cost[i][j];
            cout << ans+1 << endl;
        }
    }
}
