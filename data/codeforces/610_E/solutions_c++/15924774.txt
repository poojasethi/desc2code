#include <bits/stdc++.h>
using namespace std;
const int N = 2e5+5;
int ql,qr,n,m,k,t[N*4][10][10];
char s[N],lef[N*4],rig[N*4],lazy[N*4],qv;
void merge(int x){
	int i,j;
	for(i=0;i<k;++i)
		for(j=0;j<k;++j)
			t[x][i][j]= t[x<<1][i][j]+t[x<<1|1][i][j];
	++t[x][rig[x<<1]-'a'][lef[x<<1|1]-'a'];
	lef[x]= lef[x<<1];rig[x]= rig[x<<1|1];
}
void build(int p,int l,int r){
	if(l==r){
		lef[p]=rig[p]= s[l];
		return;
	}
	int mid= (l+r)/2;
	build(p*2,l,mid);build(p*2+1,mid+1,r);
	merge(p);
}
void modify(int p,int v){
	lazy[p]=lef[p]=rig[p]=v;
	memset(t[p],0,sizeof(t[p]));
}
void push(int p){
	if(lazy[p]){
		modify(p<<1,lazy[p]);
		modify(p<<1|1,lazy[p]);
		lazy[p]=0;
	}
}
void update(int p,int l,int r){
	if(ql<=l && r<=qr){
		modify(p,qv);
		return;
	}
	push(p);
	int mid= (l+r)/2;
	if(ql<=mid)update(2*p,l,mid);
	if(mid<qr)update(2*p+1,mid+1,r);
	merge(p);
}
int main(){
	int type,i,j;cin>>n>>m>>k;
	scanf("%s",s+1);
	build(1,1,n);
	while(m--){
		scanf("%d",&type);
		if(type==1){
			scanf("%d%d",&ql,&qr);cin>>qv;
			update(1,1,n);
		}
		else{
			int ret=n;
			scanf("%s",s);
			for(i=0;i<k;++i)
				for(j=i+1;j<k;++j)
					ret-=t[1][s[i]-'a'][s[j]-'a'];
			printf("%d\n",ret);
		}
	}
}
