#include<bits/stdc++.h>
#define MAXN 200009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
char s[MAXN],cc[3];
int n,m,k;
int lef[MAXN<<2],rig[MAXN<<2],seg[MAXN<<2][11][11],lazy[MAXN<<2];
void upd(int v,int nd,int x,int y){
	lazy[nd]=v;
	for(int i=1;i<=k;i++)
		for(int j=1;j<=k;j++)
			seg[nd][i][j]=0;
	seg[nd][v][v]=(y-x);
	lef[nd]=rig[nd]=v;
}
void shift(int nd,int x,int y){
	if(lazy[nd]==0)
		return;
	int mid=(x+y)>>1;	
	upd(lazy[nd],nd<<1,x,mid);	
	upd(lazy[nd],nd<<1|1,mid+1,y);
	lazy[nd]=0;	
}
void inc(int l,int r,int v,int nd,int x,int y){
	if(l>y or x>r)
		return;
	if(l<=x and y<=r){
		upd(v,nd,x,y);
		return;
	}
	shift(nd,x,y);
	int mid=(x+y)>>1;
	inc(l,r,v,nd<<1,x,mid);
	inc(l,r,v,nd<<1|1,mid+1,y);
	for(int i=1;i<=k;i++)	
		for(int j=1;j<=k;j++)
			seg[nd][i][j]=seg[nd<<1][i][j]+seg[nd<<1|1][i][j];
	seg[nd][rig[nd<<1]][lef[nd<<1|1]]++;
	lef[nd]=lef[nd<<1],rig[nd]=rig[nd<<1|1];
}
void build(int nd,int x,int y){
	if(x==y){
		lef[nd]=rig[nd]=s[x]-'a'+1;
		return;
	}
	int mid=(x+y)>>1;
	build(nd<<1,x,mid);
	build(nd<<1|1,mid+1,y);
	for(int i=1;i<=k;i++)	
		for(int j=1;j<=k;j++)
			seg[nd][i][j]=seg[nd<<1][i][j]+seg[nd<<1|1][i][j];
	seg[nd][rig[nd<<1]][lef[nd<<1|1]]++;
	lef[nd]=lef[nd<<1],rig[nd]=rig[nd<<1|1];		
}
int bul(){
	int ans=0;
	scanf("%s",s+1);
	for(int i=1;i<=k;i++)
		for(int j=1;j<=i;j++)
			ans+=seg[1][s[i]-'a'+1][s[j]-'a'+1];
	return ans;		
}
int main(){
	scanf("%d%d%d",&n,&m,&k);
	scanf("%s",s+1);
	build(1,1,n);
	while(m--){
		int type;
		scanf("%d",&type);
		if(type==1){
			int l,r;
			scanf("%d%d %c",&l,&r,&cc[0]);
			inc(l,r,cc[0]-'a'+1,1,1,n);
		}
		else
			printf("%d\n",bul()+1);
	}
	return 0;
}

