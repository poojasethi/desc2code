#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <map>
using namespace std;

map<string, int> memo;

char s[1000];

int n, m;

int Solve(int l, int r) {
    int depth;
    depth = 0;
    for (int i = r - 1; i >= l; i--) {
        depth += s[i] == '('; depth -= s[i] == ')';
        if (!depth && (s[i] == '+' || s[i] == '-')) {
            int L = Solve(l, i), R = Solve(i + 1, r);
            return L && R && (s[i] != '-' || R > 1);
        }
    }
    depth = 0;
    for (int i = r - 1; i >= l; i--) {
        depth += s[i] == '('; depth -= s[i] == ')';
        if (depth == 0 && (s[i] == '*' || s[i] == '/')) {
            int L = Solve(l, i), R = Solve(i + 1, r);
            return (L > 1 && R > 1 && (s[i] != '/' || R > 2)) * 2;
        }
    }
    if (s[l] == '(') return Solve(l + 1, r - 1) ? 3 : 0;
    string tmp(s + l, s + r);
    if (memo.find(tmp) != memo.end()) return memo[tmp];
    else return 3;
}

int Test() {
    gets(s);
    m = 0;
    for (int i = 0; s[i]; i++) if (s[i] != ' ')
        s[m++] = s[i];
    s[m] = 0;
    return Solve(0, m);
}

int main() {
//  freopen("data.in", "r", stdin);
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        string str;
        scanf(" #%*s");
        cin >> str;
        memo[str] = Test();
    }
    printf("%s\n", Test() ? "OK" : "Suspicious");
    return 0;
}
