#include<cstdio>
#include<cstring>
#include<algorithm>
#include<map>
#include<iostream>
using namespace std;
int P[1111];
char s[1000];
string S,T;
map <string,int> hash;

int solve(int l,int r)
{
    int i,x=0;
    for (i=r; i>=l; i--)
    {
        x+=P[s[i]];
        if (x==0 && (s[i]=='+' || s[i]=='-'))
        {
            int vl=solve(l,i-1),vr=solve(i+1,r);
            return (vl==-2 || vr==-2 || (s[i]=='-' && vr==2)) ? -2 : 2;
        }
    }
    for (x=0,i=r; i>=l; i--)
    {
        x+=P[s[i]];
        if (x==0 && (s[i]=='*' || s[i]=='/'))
        {
            int vl=solve(l,i-1),vr=solve(i+1,r);
            return (vl==-2 || vr==-2 || vl==2 || vr==2 || (s[i]=='/' && vr==1)) ? -2 : 1;
        }
    }
    if (s[l]=='(')
        return (solve(l+1,r-1)==-2) ? -2 : -1;
    T="";
    for (i=l; i<=r; i++)
        T+=s[i];
    return hash.count(T) ? hash[T] : -1;
}

int main()
{
    hash.clear();
    P['(']=1,P[')']=-1;
    int n;
    for (scanf("%d",&n),gets(s),n++; n--;)
    {
        if (n)
        {
            scanf("%s",s);
            if (s[1]!='d')
                scanf("%s",s);
            scanf("%s",s);
            S=s;
        }
        gets(s);
        int l=0;
        for (int i=0; s[i]; i++)
            if (s[i]!=' ' && s[i]!=13)
                s[l++]=s[i];
        s[l]=0;
        int T=solve(0,l-1);
        if (n)
            hash[S]=T;
        else
            puts(T==-2 ? "Suspicious" : "OK");
    }
    return 0;
}