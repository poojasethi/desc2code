#include <cstdio>
#include <cstring>
#include <string>
#include <map>

using namespace std;

int Test, n;
char name[110], expr[110];
map<string, int> macro;

int eval(int l, int r){
	if (expr[l] == ' ') return eval(l + 1, r);
	if (expr[r] == ' ') return eval(l, r - 1);

	for (int i = r, depth = 0; i > l; i--){
		if (expr[i] == '(') depth--;
		if (expr[i] == ')') depth++;
		if (!depth && (expr[i] == '+' || expr[i] == '-')){
			int L = eval(l, i - 1), R = eval(i + 1, r);
			if (!L || !R || (expr[i] == '-' && R == 1)) return 0;
			return 1;
		}
	}

	for (int i = r, depth = 0; i > l; i--){
		if (expr[i] == '(') depth--;
		if (expr[i] == ')') depth++;
		if (!depth && (expr[i] == '*' || expr[i] == '/')){
			int L = eval(l, i - 1), R = eval(i + 1, r);
			if (L < 2 || R < 2 || (expr[i] == '/' && R == 2)) return 0;
			return 2;
		}
	}

	if (expr[l] == '('){
		int ret = eval(l + 1, r - 1);
		return ret ? 3 : 0;
	}

	string name = string(expr + l, expr + r + 1);
	return macro.find(name) == macro.end() ? 3 : macro[name];
}

int main(){
	for (Test = 1; Test--;){
		macro.clear();

		for (scanf("%d\n", &n); n--;){
			scanf("#%*s %s %[^\n]\n", name, expr);
			int ret = eval(0, strlen(expr) - 1);
			macro[string(name)] = ret;
		}

		scanf("%[^\n]", expr);
		printf("%s\n", eval(0, strlen(expr) - 1) ? "OK" : "Suspicious");
	}
}
