#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<list>
#include<queue>
#include<cassert>
#include<ctime>
using namespace std;
enum Property{
	add,mul,atom,chaos
};
map<string,Property> m;
Property work(char *start,char* end){
	int cnt=0;
	for(char *c=end;c>=start;c--){
		if(*c==')')cnt++;else if(*c=='(')cnt--;
		if(0==cnt && (*c=='+' || *c=='-')){
			Property left=work(start,c-1),right=work(c+1,end);
			if(left==chaos || right==chaos) return chaos;
			if(*c=='-' && right==add) return chaos;
			return add;
		}
	}
	for(char* c=end;c>=start;c--){
		if(*c==')')cnt++;else if(*c=='(')cnt--;
		if(0==cnt && (*c=='*' || *c=='/')){
			Property left=work(start,c-1),right=work(c+1,end);
			if(left==chaos||right==chaos||
					left==add||right==add) return chaos;
			if(*c=='/' && right==mul) return chaos;
			return mul;
		}
	}
	if(*start=='('){
		Property p=work(start+1,end-1);
		if(p==chaos)return chaos;
		return atom;
	}
	if(m.find(string(start,end+1))!=m.end())
		return m[string(start,end+1)];
	return atom;
}
int main(){
	int n;
	scanf("%d",&n);
	for(int i=1;i<=n;i++){
		char name[100],value[100],*k,*c;
		scanf(" # define %s",name);
		gets(value);
		for(c=value,k=value;*c;c++){
			if(*c>' ')*k++ = *c;
		}
		*k=0;
		m[name]=work(value,k-1);
	}
	char value[100],*c,*k;
	gets(value);
	for(c=value,k=value;*c;c++){
		if(*c>' ')*k++=*c;
	}
	*k=0;
	if(work(value,k-1)==chaos)
		puts("Suspicious");
	else
		puts("OK");
	return 0;
}
