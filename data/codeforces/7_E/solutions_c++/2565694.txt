#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <map>
#include <string>
#include <algorithm>
using namespace std;

const int maxn = 105;
map<string, int> hash;
char s[maxn], s1[maxn], st[maxn];
int n;

int check(int l, int r) {
    int i, dep, a, b; dep = 0;
    for (i = r; i >= l; --i) {
        if (s[i] == '(') ++dep;
        if (s[i] == ')') --dep;
        if (!dep && (s[i] == '+' || s[i] == '-')) {
            a = check(l, i - 1); b = check(i + 1, r);
            return a == -1 || b == -1 || (s[i] == '-' && b == 1) ? -1 : 1;
        }
    }
    for (i = r; i >= l; --i) {
        if (s[i] == '(') ++dep;
        if (s[i] == ')') --dep;
        if (!dep && (s[i] == '*' || s[i] == '/')) {
            a = check(l, i - 1); b = check(i + 1, r);
            return abs(a) == 1 || abs(b) == 1 || (s[i] == '/' && !b) ? -1 : 0;
        }
    }
    if (s[l] == '(' && s[r] == ')') return check(l + 1, r - 1) == -1 ? -1 : 2;
    for (i = l; i <= r; ++i) st[i - l] = s[i]; st[r - l + 1] = '\0';
    return hash.count(st) ? hash[st] : 2;
}

void work() {
    int i, m, t;
    scanf("%d\n", &n); ++n;
    while (n--) {
        if (n) scanf("\n#%*s%s", s1);
        gets(s); t = strlen(s);
        for (i = m = 0; i < t; ++i)
            if (s[i] != ' ' && s[i] != '\n')
                s[m++] = s[i];
        s[m] = '\0';
        t = check(0, m - 1);
        if (n) hash[s1] = t;
        else puts(t == -1 ? "Suspicious" : "OK");
    }
}

int main() {
    work();
    return 0;
}
