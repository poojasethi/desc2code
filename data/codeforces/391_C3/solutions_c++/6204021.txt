#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <cstring>
using namespace std;
typedef long long LL;
const int maxn=200010;
struct player
{
	int p,e;
	player(int p=0,int e=0):p(p),e(e){}
} a[maxn];
int cmp1(player x,player y){return x.e<y.e;}
int cmp2(player x,player y){return (x.p<y.p) || (x.p==y.p && x.e<y.e);}
int main()
{
	int n,k,m;
	scanf("%d%d",&n,&k);
	m=n-k+1;
	for(int i=0;i<n;i++) scanf("%d%d",&a[i].p,&a[i].e);
	LL ans=-1;
	sort(a,a+n,cmp2);
	int w=a[m-1].p;
	int t1,t2;
	for(int i=0;i<n;i++)
		if(a[i].p>=w)
		{
			t1=i;break;
		}
	for(int i=0;i<n;i++)
		if(a[i].p>=w-1)
		{
			t2=i;break;
		}
	t1=m-t1;
	t2=m-t2;
	//condition 1
	sort(a,a+n,cmp1);
	LL tmp=0;
	if(w+2<=n)
	{
		for(int i=0;i<w+2;i++) tmp+=a[i].e;
		ans=tmp;
	}
	//condition 2
	tmp=0;
	vector<player> v1,v2;
	if(w+1<=n)
	{
		for(int i=0;i<n;i++) 
		{
			if(a[i].p==w || a[i].p==w+1) v1.push_back(a[i]);
			else v2.push_back(a[i]);
		}
		if(v1.size()>=t1)
		{
			sort(v1.begin(),v1.end(),cmp1);
			for(int i=0;i<t1;i++) tmp+=v1[i].e;
			for(int i=t1;i<v1.size();i++) v2.push_back(v1[i]);
			sort(v2.begin(),v2.end(),cmp1);
			for(int i=0;i<w+1-t1;i++) tmp+=v2[i].e;
			if(ans==-1) ans=tmp;
			else ans=min(ans,tmp);
		}
	}
	//condition 3
	tmp=0;
	v1.clear();v2.clear();
	if(w<=n)
	{
		for(int i=0;i<n;i++)
		{
			if(a[i].p==w-1 || a[i].p==w) v1.push_back(a[i]);
			else v2.push_back(a[i]);
		}
		if(v1.size()>=t2)
		{
			sort(v1.begin(),v1.end(),cmp1);
			for(int i=0;i<t2;i++) tmp+=v1[i].e;
			for(int i=t2;i<v1.size();i++) v2.push_back(v1[i]);
			sort(v2.begin(),v2.end(),cmp1);
			for(int i=0;i<w-t2;i++) tmp+=v2[i].e;
			if(ans==-1) ans=tmp;
			else ans=min(ans,tmp);
		}
	}
	if(m==0 && ans==-1) ans=0;
	cout<<ans<<"\n";
	return 0;
}