#include <iostream>
#include <fstream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <string.h>
#define inf 1000000000
#define mod 1000000007
using namespace std;
struct chel
{
    int points;
    int power;
};
chel a[200003];
chel b1[200003];
chel b2[200003];
chel tem[200003];
void mergesort1(chel *a,chel *b,int n)
{
    int i,j,i0,i1,iRight,iEnd,width;
    for(width=1;width<n;width*=2)
        for(i=0;i<n;i+=width*2)
        {
            i0=i;
            i1=iRight=min(i+width,n);
            iEnd=min(i+width*2,n);
            for(j=i;j<iEnd;j++)
                if(i0<iRight && (i1==iEnd || a[i0].points<a[i1].points))
                    b[j]=a[i0++];
                else
                    b[j]=a[i1++];
            for(j=i;j<iEnd;j++)
                a[j]=b[j];
        }
}
void mergesort2(chel *a,chel *b,int n)
{
    int i,j,i0,i1,iRight,iEnd,width;
    for(width=1;width<n;width*=2)
        for(i=0;i<n;i+=width*2)
        {
            i0=i;
            i1=iRight=min(i+width,n);
            iEnd=min(i+width*2,n);
            for(j=i;j<iEnd;j++)
                if(i0<iRight && (i1==iEnd || a[i0].power<a[i1].power))
                    b[j]=a[i0++];
                else
                    b[j]=a[i1++];
            for(j=i;j<iEnd;j++)
                a[j]=b[j];
        }
}
int n,k;
long long rec=(long long)inf*inf;
int s[200003];
int main()
{
    scanf("%d %d",&n,&k);
    int i,j,kk;
    for(i=0;i<n;i++)
        scanf("%d %d",&a[i].points,&a[i].power);
    mergesort1(a,tem,n);
    for(i=0;i<n;i++)
        s[a[i].points]++;
    for(i=1;i<=n;i++)
        s[i]+=s[i-1];
    for(int win=0;win<n+1;win++)
    {
        if(n+1-k==0 || (win>1 && s[win-2]>=n+1-k))
        {
            mergesort2(a,tem,n);
            long long sum=0;
            for(i=0;i<win;i++)
                sum+=a[i].power;
            rec=min(rec,sum);
            break;
        }
        int nado=n+1-k;
        if(win>1)
            nado-=s[win-2];
        if(s[win]>=n+1-k && nado<=win)
        {
            long long sum=0;
            int coun1,coun2,coun3;
            coun1=coun2=0;
            for(i=0;i<n;i++)
            {
                if(a[i].points!=win && a[i].points!=win-1)
                    b2[coun2++]=a[i];
                else
                    b1[coun1++]=a[i];
            }
            mergesort2(b1,tem,coun1);
            mergesort2(b2,tem,coun2);
            j=0;
            kk=0;
            for(j=0;j<n+1-k-s[win-2];j++)
                sum+=b1[j].power;
            coun3=win-j;
            while(coun3>0)
            {
                if(j<coun1 && (kk==coun2 || b1[j].power<b2[kk].power))
                    sum+=b1[j++].power;
                else
                    sum+=b2[kk++].power;
                coun3--;
            }
            rec=min(rec,sum);
        }
    }
    if(rec==(long long)inf*inf)
        printf("-1\n");
    else
        printf("%I64d\n",rec);
    return 0;
}
/*

 */
