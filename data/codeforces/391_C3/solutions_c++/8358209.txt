#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstring>
#include<algorithm>
#define maxn 200009
#define INF 1000000000000000LL
using namespace std;
typedef long long int64;
char ch;
int n,k,tmp;
int64 ans;
bool bo[maxn];
struct DATA{
	int score,pain;
}no[maxn];
bool cmp1(DATA a,DATA b){return a.score>b.score;}
bool cmp2(DATA a,DATA b){return a.pain<b.pain;}
void read(int &x){
	for (ch=getchar();!isdigit(ch);ch=getchar());
	for (x=0;isdigit(ch);x=x*10+ch-'0',ch=getchar());
}
int64 check(int p){
	int64 ans=0;
	int cnt_1=0,cnt_2=0;
	memset(bo,0,sizeof(bo));
	for (int i=1;i<=n;i++)
		if (no[i].score>=p-1) cnt_1++;
	cnt_1-=(k-1);
	for (int i=1;i<=n&&cnt_2<cnt_1;i++)
		if (no[i].score==p||no[i].score==(p-1)){
			ans+=no[i].pain;
			cnt_2++;
			bo[i]=1;	
		}
	for (int i=1;i<=n&&cnt_2<p;i++)
		if (!bo[i]){
			ans+=no[i].pain;
			cnt_2++;	
		}
	return ans;
}
int main(){
	read(n),read(k);
	for (int i=1;i<=n;i++) read(no[i].score),read(no[i].pain);
	sort(no+1,no+n+1,cmp1);
	tmp=no[k].score;
	sort(no+1,no+n+1,cmp2);
	ans=INF;
	for (int i=tmp;i<=tmp+2&&i<=n;i++)
		ans=min(ans,check(i));
	if (ans==INF) ans=-1;
	printf("%I64d\n",ans);
	return 0;	
}

 		    	  	  			    		  			  	