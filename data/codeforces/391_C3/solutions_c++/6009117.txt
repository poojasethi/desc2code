#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef double ld;

const int MAX=200000+10;
const LL INF=1e18;

int n,k,y[MAX];
pair<int,int> man[MAX];

struct Node
{
	int size;
	LL sum;
	Node()
	{
		size=0;
		sum=0;
	}
}tree[MAX*10];

void add(int u,int l,int r,int x,int delta)
{
	tree[u].sum+=x*delta;
	tree[u].size+=delta;
	if(l==r)
		return;
	int mid=(l+r)/2;
	if(x<=mid)
		add(u*2,l,mid,x,delta);
	else
		add(u*2+1,mid+1,r,x,delta);
}

LL ask(int u,int l,int r,int k)
{
	if(k<=0)
		return 0;
	if(l==r)
		return (LL)k*l;
	int mid=(l+r)/2;
	int p=tree[u*2].size;
	if(k>p)
		return tree[u*2].sum+ask(u*2+1,mid+1,r,k-p);
	else return ask(u*2,l,mid,k);
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
	int i,j,l;

	cin>>n>>k;
	REP(i,1,n)
		scanf("%d%d",&man[i].x,&man[i].y);
	sort(man+1,man+n+1);
	LL ans=INF;

	int need=n+1-k;
	int x;

	REP(i,1,n)
		add(1,0,MAX,man[i].y,1);
	l=1,i=1;
	REP(x,0,n)
	{
		for(;i<=n && man[i].x<=x-2;++i)
			;
		for(;l<=n && man[l].x<=x;++l)
			;
		int top=0;
		for(j=l-1;j>0 && man[j].x>=x-1;--j)
			y[++top]=man[j].y;
		sort(y+1,y+top+1);
		REP(j,1,top)
			add(1,0,MAX,y[j],-1);
		LL sum=0;
		for(j=0;j<=top;sum+=y[++j])
		{
			if(i-1+j<need || tree[1].size<x-j)
				continue;
			ans=min(ans,sum+ask(1,0,MAX,x-j));
		}
		REP(j,1,top)
			add(1,0,MAX,y[j],1);
	}
	/*
	LL ans2=INF;

	REP2(i,0,(1<<n))
	{
		LL sum=0;
		int x=0;
		int j;
		REP2(j,0,n)
			if((i>>j)&1)
			{
				x++;
				sum+=man[j+1].y;
			}
		if(sum>=ans2)
			continue;
		int t=0;
		REP2(j,0,n)
		{
			if((i>>j)&1)
			{
				if(man[j+1].x<=x)
					++t;
			}
			else
			{
				if(man[j+1].x+1<x)
					++t;
			}
		}
		if(t>=need)
			ans2=sum;
	}
	*/
	if(ans==INF)
		ans=-1;
	cout<<ans<<endl;
	return 0;
}
