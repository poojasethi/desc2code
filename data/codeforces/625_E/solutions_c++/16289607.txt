#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<iostream>
#include<set>
using namespace std;
int n,m;
int p[100000+10],a[100000+10];
int x[100000+10];
int next[100000+10],pre[100000+10];
bool cmp(int i,int j)
{
	return p[i]<p[j];
}
typedef pair<int,int>pii;
set<pii>st;
set<pii>::iterator it;
const int inf=0x3f3f3f3f;
int dis(int i,int j)
{
	if(i==j)return inf;
	int d=(p[j]-p[i]+m)%m;
	if(i>j)(d+=a[j])%=m;
	if(d<=a[i])return 1;
	if(a[i]<=a[j])return inf;
	int s=a[i]-a[j];
	return ((d-a[j]+s-1)/s);
}
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++){scanf("%d%d",&p[i],&a[i]);p[i]--;x[i]=i;}
	sort(x+1,x+n+1,cmp);
	for(int i=1;i<=n;i++)
	{
		if(i<n)next[x[i]]=x[i+1];
		else next[x[i]]=x[1];
		pre[next[x[i]]]=x[i];
	}
	for(int i=1;i<=n;i++)
	{
		st.insert(make_pair(dis(i,next[i]),i));
	}
	while(!st.empty())
	{
		it=st.begin();
		if(it->first==inf)break;
		int i=it->second;
		st.erase(it);
		st.erase(make_pair(dis(next[i],next[next[i]]),next[i]));
		st.erase(make_pair(dis(pre[i],i),pre[i]));
		p[i]+=dis(i,next[i]);
		a[i]--;
		next[i]=next[next[i]];
		pre[next[i]]=i;
		st.insert(make_pair(dis(pre[i],i),pre[i]));
		st.insert(make_pair(dis(i,next[i]),i));
	}
	printf("%d\n",st.size());
	for(it=st.begin();it!=st.end();it++)
	{
		if(it!=st.begin())printf(" ");
		printf("%d",it->second);
	}
	printf("\n");
	return 0;
}