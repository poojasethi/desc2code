#include <cstdio>
#include <cstring>
#include <algorithm>
#include <utility>
#include <set>
using namespace std;
#define N 100010
typedef pair<int,int> pii;
const int inf=0x3f3f3f3f;
int nex[N],pre[N],ran[N],a[N],x[N];
int n,m;
set<pii> se;
set<pii>::iterator it;
bool comp(int a,int b)
{
    return x[a]<x[b];
}
int dis(int i,int j)
{
    if(i==j) return inf;
    int d=(x[j]-x[i]+m)%m;
    if(j<i) d=(d+a[j])%m;
    if(d<=a[i]) return 1;
    if(a[i]<=a[j]) return inf;
    int s=a[i]-a[j];
    return (d-a[j]-1)/s+1;
}
int main()
{
    scanf("%d%d",&n,&m);
    for(int i=1;i<=n;++i)
    {
        scanf("%d%d",&x[i],&a[i]);
        ran[i]=i;
    }
    sort(ran+1,ran+n+1,comp);
    for(int i=1;i<=n;++i)
    {
        if(i<n) nex[ran[i]]=ran[i+1];
        else nex[ran[i]]=ran[1];
        pre[nex[ran[i]]]=ran[i];
    }
    se.clear();
    for(int i=1;i<=n;++i)
        se.insert(make_pair(dis(i,nex[i]),i));
    while(!se.empty())
    {
        it=se.begin();
        if(it->first==inf) break;
        int i=it->second;
        se.erase(it);
        se.erase(make_pair(dis(nex[i],nex[nex[i]]),nex[i]));
        se.erase(make_pair(dis(pre[i],i),pre[i]));
        x[i]+=dis(i,nex[i]);
        a[i]--;
        nex[i]=nex[nex[i]];
        pre[nex[i]]=i;
        se.insert(make_pair(dis(i,nex[i]),i));
        se.insert(make_pair(dis(pre[i],i),pre[i]));
    }
    printf("%d\n",se.size());
    for(it=se.begin();it!=se.end();++it)
        printf("%d ",it->second);
    return 0;
}

			  				   	    			    					 	