#include<cstdio>
#include<cmath>
#include<stdlib.h>
#include<map>
#include<set>
#include<time.h>
#include<vector>
#include<stack>
#include<queue>
#include<string>
#include<string.h>
#include<iostream>
#include<algorithm>
using namespace std;
const int inf=2e9;
int n,m;
long long p[1000005];
long long a[1000005];
vector<pair<long long,int> >vec;
int next[1000005];
int pre[1000005];
bool vis[1000005];
long long gettime(int i,int j)
{
    if(i==j)
        return inf;
    long long pa=p[i],pb=p[j];
    long long d=(pb-pa+m)%m;
    if(i>j)
        d=(d+a[j])%m;
    if(d<=a[i])
        return 1;
    if(a[j]>=a[i])
        return inf;
    long long v=a[i]-a[j];
    d-=a[j];
    long long ans=0;
    ans+=d/v;
    if(d%v==0)
        ;
    else
        ans++;
//    printf("\t%d %d\n",i,j);
//    printf("\t%I64d %I64d\n",d,v);
//    printf("\t\t%I64d %I64d %I64d %I64d\n",p[i],a[i],p[j],a[j]);
//    printf("\t\t%I64d %I64d\n",ans,(d-a[j]-1)/v+1);
    return ans;
    return (d-a[j]-1)/v+1;
}
int main()
{
    scanf("%d%d",&n,&m);
    for(int i=0;i<n;i++)
    {
        scanf("%I64d%I64d",&p[i],&a[i]);
        p[i]--;
        vec.push_back(make_pair(p[i],i));
    }
    sort(vec.begin(),vec.end());
//    for(int i=0;i<n;i++)
//        printf("%d %d\n",vec[i].first,vec[i].second);
    for(int i=0;i<n;i++)
    {
        next[vec[i].second]=vec[(i+1)%n].second;
        pre[vec[i].second]=vec[(i+n-1)%n].second;
    }
    set<pair<long long,int> >s;
    for(int i=0;i<n;i++){//printf("%d\n",i);
        s.insert(make_pair(gettime(i,next[i]),i));}
    while(!s.empty())
    {
        pair<long long,int>head=*s.begin();
//        printf("%d %d\n",head.first,head.second);
        if(head.first==inf)
            break;
        int x=head.second;
        vis[next[x]]=1;
        s.erase(head);
        s.erase(make_pair(gettime(next[x],next[next[x]]),next[x]));
        s.erase(make_pair(gettime(pre[x],x),pre[x]));
        p[x]+=gettime(x,next[x]);
        p[x]%=m;
        a[x]--;
        next[x]=next[next[x]];
        pre[next[x]]=x;
        s.insert(make_pair(gettime(pre[x],x),pre[x]));
        s.insert(make_pair(gettime(x,next[x]),x));
    }
    int ans=0;
    vector<int>vec;
    for(int i=0;i<n;i++)
    {
        if(vis[i])
            ;
        else
        {
            ans++;
            vec.push_back(i+1);
        }
    }
    printf("%d\n",ans);
    for(int i=0;i<ans;i++)
        printf("%d ",vec[i]);
    printf("\n");
    return 0;
}
