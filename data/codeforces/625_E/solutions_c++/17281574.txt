#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<string>
#include<iomanip>
#include<vector>
#include<set>
#include<map>
#include<queue>

using namespace std;
typedef long long LL;
typedef unsigned long long ULL;

#define rep(i,k,n) for(int i=(k);i<=(n);i++)
#define rep0(i,n) for(int i=0;i<(n);i++)
#define red(i,k,n) for(int i=(k);i>=(n);i--)
#define sqr(x) ((x)*(x))
#define clr(x,y) memset((x),(y),sizeof(x))
#define pb push_back
#define mod 1000000007
const int inf=0x7fffffff;
typedef pair<int,int> mp;
int n,m,nxt[100010],pre[100010];
mp b[100010];
struct Frog
{
	int p,a,id;
}a[100010];
set<mp> s;
inline bool operator <(Frog a,Frog b)
{
	return a.p<b.p;
}
inline int cal(int i,int j)
{
	if(i==j)return inf;
	int p1=a[i].p,p2=a[j].p;
	if(i>j)(p2+=a[j].a)%=m;
	int d=(p2-p1+m)%m,step=(a[i].a-a[j].a);
	if(d<=a[i].a)return 1;
	if(a[j].a>=a[i].a)return inf;
	return (d-a[j].a+step-1)/step;
}


int main()
{
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;i++)
	{
		scanf("%d%d",&a[i].p,&a[i].a);
		a[i].p--;
		b[i]=mp(a[i].p,i);
	}
	sort(b,b+n);
	for(int i=0;i<n;i++)
	{
		nxt[b[i].second]=b[(i+1)%n].second;
		pre[b[(i+1)%n].second]=b[i].second;
	}
	for(int i=0;i<n;i++)s.insert(mp(cal(i,nxt[i]),i));
	while(!s.empty())
	{
		set<mp>::iterator it=s.begin();int i=it->second;
		if(it->first==inf)break;
		s.erase(it);
		s.erase(mp(cal(nxt[i],nxt[nxt[i]]),nxt[i]));
		s.erase(mp(cal(pre[i],i),pre[i]));
		a[i].p+=cal(i,nxt[i]);
		a[i].a--;
		nxt[i]=nxt[nxt[i]];
		pre[nxt[i]]=i;
		s.insert(mp(cal(pre[i],i),pre[i]));
		s.insert(mp(cal(i,nxt[i]),i));
	}
	printf("%d\n",s.size());
	for(set<mp>::iterator it=s.begin();it!=s.end();it++)printf("%d ",it->second+1);
	
	return 0;
}
