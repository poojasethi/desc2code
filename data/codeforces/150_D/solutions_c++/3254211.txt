#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>
using namespace std;

const int inf	=	500000000;
const int maxn	=	155;

int n,a[maxn],f[maxn][maxn][maxn],g[maxn];
char s[maxn];

inline int solve(int l,int r,int last)
{
	if (l>r){
		if (last==0) return 0;
		if (a[last]==-1) return -inf;
		return a[last];
	}
	
	int &res=f[l][r][last];
	if (res!=-1) return res;
	res=-inf;
	
	if (s[l]==s[r]){
		res=max(res,solve(l+1,r-1,last+1+(l!=r)));
	}
	
	if (a[last]!=-1){
		res=max(res,solve(l,r,0)+a[last]);
	}
	
	for (int i=l;i<r;++i){
		res=max(res,solve(i+1,r,last)+solve(l,i,0));
	}
	for (int j=r;j>l;--j){
		res=max(res,solve(l,j-1,last)+solve(j,r,0));
	}
//printf("%d %d %d: %d\n",l,r,last,res);
	return res;
}

int main()
{
	scanf("%d",&n);
	for (int i=1;i<=n;++i){
		scanf("%d",&a[i]);
	}
	scanf("%s",s);
	memset(f,-1,sizeof(f));
	
	g[0]=0;
	for (int i=1;i<=n;++i){
		g[i]=g[i-1];
		for (int j=0;j<i;++j){
			g[i]=max(g[i],g[j]+solve(j,i-1,0));
		}
	}
	printf("%d\n",g[n]);
	
	return 0;
}

						 					  	  		 	 		