#include <bits/stdc++.h>

#define mp make_pair
#define st first
#define nd second
#define pb push_back

using namespace std;

typedef long long ll;
typedef pair< ll,ll > pll;
typedef pair< int,int > pii;

const int inf = 500000000, N = 150;

int n, a[N+5], dp[N+5][N+5][N+5], dp2[N+5][N+5][N+5];
char s[N+5];

int full(int l, int r, int cnt) {
	int &ret = dp2[l][r][cnt];

	if (ret != -1)
		return ret;

	if (l > r)
		return ret = a[cnt];

	int ans = -inf;

	if (cnt > 0)
		ans = max(ans, full(l, r, 0) + a[cnt]);
	
	if (s[l] == s[r])
		ans = max(ans, full(l+1, r-1, cnt + (l != r) + 1));

	for (int i = l; i < r; i++) {
		ans = max(ans, full(l, i, cnt) + full(i+1, r, 0));
		ans = max(ans, full(l, i, 0) + full(i+1, r, cnt));
	}

	return ret = max(-inf, ans);
}

int solve(int l, int r, int cnt) {
	int &ret = dp[l][r][cnt];

	if (ret != -1)
		return ret;

	if (l > r)
		return ret = a[cnt];

	int ans = 0;

	if (cnt > 0)
		ans = max(ans, full(l, r, 0) + a[cnt]);

	if (s[l] == s[r])
		ans = max(ans, solve(l+1, r-1, cnt + (l != r) + 1));

	for (int i = l; i < r; i++) {
		if (cnt > 0) {
			ans = max(ans, solve(l, i, cnt) + full(i+1, r, 0));
			ans = max(ans, full(l, i, 0) + solve(i+1, r, cnt));
		}
		else
			ans = max(ans, solve(l, i, 0) + solve(i+1, r, 0));
	}

	return ret = ans;
}

int main()
{
	scanf("%d", &n);

	for (int i = 1; i <= n; i++) {
		scanf("%d", a+i);
		
		if (a[i] < 0)
			a[i] = -inf;
	}

	scanf(" %s", s+1);

	memset(dp, -1, sizeof dp);
	memset(dp2, -1, sizeof dp2);

	cout << solve(1, n, 0) << endl;

	return 0;
}
