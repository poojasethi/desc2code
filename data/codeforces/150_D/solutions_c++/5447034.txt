#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <sstream>

using namespace std;

#define REP(i,s,t) for(int i=(s);i<(t);i++)
#define FOREACH(i,v) for(typeof((v).begin()) i=(v).begin(); i!=(v).end(); i++)

typedef long long ll;

int N;
int gen[100010];
char line[200];

int pal[200][200][200];
int del[200][200];
int upto[200];

int main() {
	scanf("%d", &N);
	REP(i,1,N+1)
		scanf("%d", gen+i);
	scanf("%s", line);
	REP(dif,0,N) REP(a,0,N) {
		int b = a+dif;
		if (b >= N)
			continue;
		del[a][b] = -1E9;
		REP(f,1,N+1) {
			if (f > b-a+1)
				pal[a][b][f] = -1E9;
			else if (a == b)
				pal[a][b][f] = 0;
			else {
				pal[a][b][f] = -1E9;
				for (int c = a+1; c <= b; c++)
					pal[a][b][f] = max(pal[a][b][f], del[a][c-1]+pal[c][b][f]);
				for (int c = a; c < b; c++)
					pal[a][b][f] = max(pal[a][b][f], del[c+1][b]+pal[a][c][f]);
				if (line[a] == line[b] && f >= 2)
					pal[a][b][f] = max(pal[a][b][f], pal[a+1][b-1][f-2]);
			}
			if (gen[f] != -1)
				del[a][b] = max(del[a][b], pal[a][b][f]+gen[f]);
		}
		pal[a][b][0] = del[a][b];
	}
// 	REP(i,0,N)
// 		printf("%d-%d: %d\n", i, i, del[i][i]);
// 	printf("%d\n", pal[2][4][2]);
	upto[0] = max(0, del[0][0]);
	REP(a,1,N) {
		upto[a] = max(upto[a-1], del[0][a]);
		for (int c = 1; c <= a; c++)
			upto[a] = max(upto[a], del[c][a]+upto[c-1]);
	}
	printf("%d\n", upto[N-1]);
	return 0;
}

		   	   						 			 					