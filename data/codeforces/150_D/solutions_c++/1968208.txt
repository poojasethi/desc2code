#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>

using namespace std;
const int N=200;
int a[N],dp[N];
char s[N];
int f[N][N][N];

int main()
{
    int i,j,n,k,p;
    scanf("%d",&n);
    for (i=1; i<=n; i++) scanf("%d",&a[i]);
    scanf("%s",s+1);
    memset(f,-1,sizeof(f));
    for (i=n; i>=1; i--)
     for (j=i; j<=n; j++)
     {
         if (i==j) f[i][j][1]=0;
         if (i==j-1 && s[i]==s[j]) f[i][j][2]=0;
         for (k=j-i+1; k>=0; k--)
         {
            for (p=i; p<j; p++)
            {
                if (f[i][p][k]!=-1 && f[p+1][j][0]!=-1)
                f[i][j][k]=max(f[i][j][k],f[i][p][k]+f[p+1][j][0]);
                if (f[i][p][0]!=-1 && f[p+1][j][k]!=-1)
                f[i][j][k]=max(f[i][j][k],f[i][p][0]+f[p+1][j][k]);
            }
            if (f[i][j][k]!=-1)
            {
                //cout<<i<<' '<<j<<' '<<k<<' '<<f[i][j][k]<<endl;
                if (a[k]!=-1) f[i][j][0]=max(f[i][j][0],f[i][j][k]+a[k]);
                if (i>1 && j<n && s[i-1]==s[j+1])
                f[i-1][j+1][k+2]=max(f[i-1][j+1][k+2],f[i][j][k]);
            }
         }
     }
    dp[0]=0;
    for (i=1; i<=n; i++)
    {
        dp[i]=dp[i-1];
        for (j=0; j<i; j++)
          if (f[j+1][i][0]!=-1) dp[i]=max(dp[i],dp[j]+f[j+1][i][0]);
    }
    printf("%d\n",dp[n]);
}
