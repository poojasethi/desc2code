#include <iostream>
#include <map>
#include <string>
#include <cstring>
using namespace std;

typedef long long ll;

const ll MAXn = 3 * 100 * 1000 + 13;

// dp[i] is decreasing
ll n, dp[MAXn][30];
string s;
map<char, ll> last;

int main(){
	cin >> s;
	n = s.length();
	memset(dp, -1, sizeof dp);
	dp[0][1] = 0;
	last[s[0]] = 0;
	for(ll i = 1; i < n; i++){
		dp[i][1] = i;
		for(ll j = 2; j < 30; j++){
			ll ind = dp[i-1][j-1];
			if(last.find(s[i]) == last.end()
			|| last[s[i]] < ind)
				dp[i][j] = ind;
			else
				dp[i][j] = dp[i-1][j];
		}
		last[s[i]] = i;
	}
	ll m = last.size();
	cout << m << endl;
	for(ll i = 1; i <= m; i++){
		ll cnt = 0;
		for(ll j = 0; j < n; j++)
			cnt += dp[j][i] - dp[j][i+1];
		cout << cnt << endl;
	}
	return 0;
}
