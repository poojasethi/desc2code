#! /usr/bin/env python
# -*- coding: utf-8 -*-

def main():
        (n, m) = getLineAs(int)

        if n > m:
                (n, m) = (m, n)

        ans = []

        for j in [0, 1]:
                nm = [n, m]
                nm[j] -= 1
                p = j

                s = 0
                d = 0

                t = 1

                while nm[0] + nm[1] > 0:
                        if t == 0:
                                nx = p
                        else:
                                nx = 1 - p

                        if nm[nx] == 0:
                                nx = 1 - nx

                        nm[nx] -= 1
                        if p == nx:
                                s += 1
                        if p != nx:
                                d += 1

                        p = nx
                        t = 1 - t

                ans.append((s, d))

        if ans[0][0] > ans[1][0]:
                a = 0
        elif ans[0][0] == ans[1][0]:
                if ans[0][1] < ans[1][1]:
                        a = 0
                else:
                        a = 1
        else:
                a = 1

        print ans[a][0], ans[a][1]

        return 0

## -------------------------------------------
## TEMPLATE

from sys import stdin
from sys import setrecursionlimit
from copy import deepcopy
from math import sqrt
from itertools import permutations
from itertools import combinations

def getline():
        return stdin.readline()

def getLineAs(tp):
        return map(tp, getline().split())

def array(n, init = 0):
        return [deepcopy(init) for i in range(n)]

def count_if(lst, pred):
        ret = 0
        for i in lst:
                if pred(i): ret = ret + 1
        return ret

def toSepStr(lst):
        if len(lst):
                return "".join([str(item) + " " for item in lst])[:-1]
        else:
                return ""

if __name__ == "__main__":
        setrecursionlimit(1024 * 1024)
        main()
