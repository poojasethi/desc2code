#include <bits/stdc++.h>
using namespace std;

#define N (1000000 + 10)
#define M 2000000
#define inf (long long)1e17
#define ULL unsigned long long 
#define LL long long
#define mod 1000000007

int a,b, c[N];
int cnt, d[N];
	int n;

void gao(int x) {
	for(int i = 2; i * i <= x; ++i) {
		if(x % i == 0) {
			d[cnt++] = i;
			while(x % i == 0) x /= i;
		}
	}
	if(x > 1) d[cnt++] = x;
}


LL dp[N][3];

LL f(int p) {
	dp[0][0] = 0;
	dp[0][1] = dp[0][2] = inf;

	for(int i = 1; i <= n; ++i) {
		for(int j = 0; j < 3; ++j)
			dp[i][j] = inf;
		if(c[i] % p == 0) {
			dp[i][0] = dp[i-1][0];
			dp[i][1] = min(dp[i-1][0] + a, dp[i-1][1] + a);
			dp[i][2] = min(dp[i-1][2], dp[i-1][1]);
		}
		else if((c[i]+1)%p == 0 || (c[i]-1+p)%p == 0) {
			dp[i][0] = dp[i-1][0] + b;
			dp[i][1] = min(dp[i-1][0] + a, dp[i-1][1] + a);
			dp[i][2] = min(dp[i-1][2] + b, dp[i-1][1] + b);
		}
		else {
			dp[i][1] = min(dp[i-1][0] + a, dp[i-1][1] + a);
		}
	}
	return min(min(dp[n][0], dp[n][1]), dp[n][2]);
}



int main() {
	scanf("%d%d%d", &n, &a, &b);
	for(int i = 1; i <= n; ++i)
		scanf("%d", &c[i]);
	for(int i = -1; i <= 1; ++i) {
		gao(c[1]+i); gao(c[n] + i);
	}

	sort(d, d + cnt);
	cnt = unique(d, d+cnt) - d;
	LL ans = inf;
	for(int i = 0; i < cnt; ++i)
		ans = min(ans, f(d[i]));
	printf("%I64d\n", ans);

}

