#include<cmath>
#include<cstdio>
#include<algorithm>
using namespace std;
typedef long long ll;
const int N=1e6+5;
int n,wa,wb;
int a[N];
int p[100],num;
void Add(int x){
	for(int j=1;j<=num;j++){
		if(p[j]==x) return;
	}
	p[++num]=x;
}
void Prime(int x){
	for(int i=2,r=sqrt(x);i<=r;i++){
		if(x%i) continue;
		Add(i);
		x/=i;
		while(!(x%i)) x/=i;
		if(x==1) return;
	}
	if(x!=1) Add(x);
}
ll f[N][3];
ll DP(int x){
	f[0][0]=f[0][2]=0;
	f[0][1]=1e18;
	for(int i=1;i<=n;i++){
		if(!(a[i]%x)){
			f[i][0]=f[i-1][0];
			f[i][2]=f[i-1][2];
		}
		else if(!((a[i]+1)%x) || !((a[i]-1)%x)){
			f[i][0]=f[i-1][0]+wb;
			f[i][2]=f[i-1][2]+wb;
		}
		else f[i][0]=f[i][2]=1e18;
		f[i][1]=min(f[i-1][0],f[i-1][1])+wa;
		f[i][2]=min(f[i][2],f[i][1]);
	}
	return f[n][2];
}
void Init(){
	scanf("%d%d%d",&n,&wa,&wb);
	for(int i=1;i<=n;i++) scanf("%d",a+i);
	Prime(a[1]-1);
	Prime(a[1]);
	Prime(a[1]+1);
	if(n!=1){
		Prime(a[n]-1);
		Prime(a[n]);
		Prime(a[n]+1);
	}
}
int main(){
	Init();
	ll ans=1e18;
	for(int i=1;i<=num;i++) ans=min(ans,DP(p[i]));
	printf("%I64d\n",ans);
	return 0;
}
	   	  	   	 	 		  						     	