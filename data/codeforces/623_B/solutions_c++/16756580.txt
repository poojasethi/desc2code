#include<cstdio>
#include<algorithm>
using namespace std;
long long n,a[1200000],ans,fl[1200000],chan,del;
const long long inf=(long long)1e18;
inline void solve(long long x,long long ad)
{
	long long le=n+1,ri=0,tmp=ad*chan;
	for (long long i=2;i<=n;i++)
	{
		fl[i]=0;
		if(a[i]%x!=0)
		{
			if(a[i]%x!=1&&a[i]%x!=(x-1))
			{
				le=min(le,i);
				ri=max(ri,i);
			}
			tmp+=chan;
			fl[i]=1;
		}
		fl[i]+=fl[i-1];
	}
	long long ctmp=0;
	for (long long i=1;i<=n;i++)
	{
		if(i<le)ctmp=max(ctmp,del*i-fl[i]*chan);
		if(i>=ri)ans=min(ans,tmp+del*i-fl[i]*chan-ctmp);
	}
}
inline void work(long long x,long long ad)
{
	long long xp=x;
	for (long long i=2;i*i<=x;i++)
	{
		if(xp%i==0)
		{
			solve(i,ad);
			while (xp%i==0)xp/=i;
		}
	}
	if(xp!=1)
	{
		solve(xp,ad);
	}
}
int main()
{
	ans=inf;
	scanf("%I64d %I64d %I64d",&n,&del,&chan);
	for (long long i=1;i<=n;i++)
	{
		scanf("%I64d",&a[i]);
	}
	work(a[1]-1,1);
	work(a[1],0);
	work(a[1]+1,1);
	reverse(a+1,a+n+1);
	work(a[1]-1,1);
	work(a[1],0);
	work(a[1]+1,1);
	printf("%I64d\n",ans);
	return 0;
}
