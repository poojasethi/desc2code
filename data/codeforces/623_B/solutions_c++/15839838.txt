#include <cstdio>
#include <algorithm>
#define N 1000005
#define INF (1LL << 60)
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
#define LL long long
using namespace std;

int n, a, b, s[N], f[N], p, t[N];
LL ans, cl[N], cr[N];

void pf(int x){
	p = 0;
	for(int i = 2; i * i <= x; i++){
		if(x % i == 0){
			while(x % i == 0) x /= i;
			f[p++] = i;
		}
	}
	
	if(x > 1) f[p++] = x;
}

void solve2(int f){
	FI(i, 1, n){
		if(s[i] % f == 0) t[i] = 0;
		else if((s[i] + 1) % f == 0 || (s[i] - 1) % f == 0) t[i] = 1;
		else t[i] = 2;
	}
	
	cl[0] = 0;
	FI(i, 1, n) cl[i] = min(cl[i - 1] + t[i] * b + (t[i] == 2) * INF, INF);
	
	cr[n + 1] = 0;
	FD(i, n, 1) cr[i] = min(cr[i + 1] + t[i] * b + (t[i] == 2) * INF, INF);
	
	LL best = 0;
	FI(i, 1, n){
		best = max(best, (LL) a * i - cl[i]);
		ans = min(ans, cr[i + 1] + (LL) a * i - best);
	}
}

void solve(){
	pf(s[1]);
	fi(i, 0, p) solve2(f[i]);
	
	pf(s[1] - 1);
	fi(i, 0, p) solve2(f[i]);
	
	pf(s[1] + 1);
	fi(i, 0, p) solve2(f[i]);
}

int main(){
	ans = INF;
	scanf("%d %d %d", &n, &a, &b);
	FI(i, 1, n) scanf("%d", &s[i]);
	
	if(n == 1){
		puts("0");
		return 0;
	}
	
	solve();
	
	FI(i, 1, n / 2) swap(s[i], s[n - i + 1]);
	
	solve();
	
	printf("%I64d\n", ans);
	scanf("\n");
}
