#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long ll;
const int N=1e6+5;
const ll INF=1e12;
vector<int>gcd;
int a[N];
ll cost[N];
ll f[N][3];
int n,aa,bb;
ll solve(int x)
{
    for(int i=1;i<=n;i++){
        cost[i]=INF;
        if(a[i]%x==0)cost[i]=0;
        else if((a[i]+1)%x==0||(a[i]-1)%x==0)cost[i]=bb;
    }
    for(int i=1;i<=n;i++){
        f[i][0]=f[i-1][0]+cost[i];
        f[i][1]=min(f[i-1][0],f[i-1][1])+aa;
        f[i][2]=min(f[i-1][1],f[i-1][2])+cost[i];
    }
    return min(min(f[n][0],f[n][1]),f[n][2]);
}
void prime(int x)
{
    for(int i=2;i*i<=x;i++){
        if(x%i==0)gcd.push_back(i);
        while(x%i==0)x/=i;
    }
    if(x>1)gcd.push_back(x);
}
int main()
{
    scanf("%d%d%d",&n,&aa,&bb);
    for(int i=1;i<=n;i++)scanf("%d",&a[i]);
    for(int i=-1;i<=1;i++){
        prime(a[1]+i);
        prime(a[n]+i);
    }
    sort(gcd.begin(),gcd.end());
    gcd.erase(unique(gcd.begin(),gcd.end()),gcd.end());
    ll ans=1e18;
    for(int i=0;i<gcd.size();i++){
        ans=min(ans,solve(gcd[i]));
    }
    cout<<ans<<endl;
}