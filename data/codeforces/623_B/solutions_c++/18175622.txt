#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iostream>
#include<algorithm>
#define maxn 1000100

using namespace std;

int n;
long long dp[maxn][3],ans,a[maxn],A,B;

long long Dp(long long p)
{
	for (int i=1;i<=n;i++) dp[i][0]=dp[i][1]=dp[i][2]=1ll*(n-1)*A;
	dp[0][0]=0ll;
	for (int i=1;i<=n;i++)
	{
	  if (a[i]%p==0) dp[i][0]=dp[i-1][0],dp[i][2]=min(dp[i-1][1],dp[i-1][2]);
	  if ((a[i]+1)%p==0 || (a[i]-1)%p==0) dp[i][0]=dp[i-1][0]+B,dp[i][2]=min(dp[i-1][1],dp[i-1][2])+B;
	  dp[i][1]=min(dp[i-1][1],dp[i-1][0])+A;
	}
	return min(dp[n][0],min(dp[n][1],dp[n][2]));
}

long long calc(long long x)
{
	long long ans=(long long)(n-1)*A;
	for (long long i=2;i*i<=x;i++)
	  if (x%i==0)
	  {
	  	ans=min(ans,Dp(i));
	  	while (x%i==0) x/=i;
	  }
	if (x!=1) ans=min(ans,Dp(x));
	return ans;
}

int main()
{
	scanf("%d%I64d%I64d",&n,&A,&B);
	for (int i=1;i<=n;i++) scanf("%I64d",&a[i]);
	ans=(long long)(n-1)*A;
	ans=min(ans,calc(a[1]-1));
	ans=min(ans,calc(a[1]));
	ans=min(ans,calc(a[1]+1));
	ans=min(ans,calc(a[n]-1));
	ans=min(ans,calc(a[n]));
	ans=min(ans,calc(a[n]+1));
	printf("%I64d\n",ans);
	return 0;
}
