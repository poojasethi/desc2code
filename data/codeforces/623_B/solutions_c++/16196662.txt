#include <bits/stdc++.h>
//Keep your friends rich, and your enemies rich, and wait to find out which is which.

using namespace std;

typedef long long ll;
typedef pair<ll, ll> pii;
#define smin(a, b) if (a > b) a = b
#define smax(a, b) if (a < b) a = b

ll n, a, b;

const ll MAXN = 1e6 + 100;
ll cost[MAXN], x[MAXN];
ll pre[MAXN];


ll calc(ll p){
	ll s = -1, e = -1;
	bool found = false;

	for (ll i = 0; i < n; i++){
		pre[i + 1] = pre[i];

		if (x[i] % p == 0) cost[i] = 0;
		else if ( x[i] % p == 1 || x[i] % p == p -1) cost[i] = 1, pre[i + 1]++;
		else {
			cost[i] = 2;
			if (s == -1) s = i; e = i;
			found = true;

			pre[i + 1]++;
		}
	}

	ll ans = -1LLu/2, sum = pre[n] * b;
	if (!found) ans = sum;

	ll prefix = 0;

	for (ll i = 1; i <= n; i++){
		if (i > e || e == -1)
			smin(ans, sum + prefix - pre[i] * b + i * a);
		if (i <= s || s == -1)
			smin(prefix, pre[i] * b - i * a);
	}

	
	return ans;
}

int main(){
	scanf("%I64d%I64d%I64d", &n, &a, &b);

	ll ans = a * (n - 1);
	for (ll i = 0; i < n; i++)
		scanf("%I64d", &x[i]);

	ll ex[6]; 
	ex[0] = x[0], ex[1] = x[0] + 1, ex[2] = x[0] - 1;
	ex[3] = x[n - 1], ex[4] = x[n - 1] + 1, ex[5] = x[n - 1] - 1;

	for (ll t = 0; t < 6; t++){

		ll tmp = ex[t];
		for (ll i = 2; i * i <= tmp; i++) if ( tmp % i == 0 ) {
			smin(ans, calc(i));
			while(tmp % i == 0) tmp /= i;
		}
		if (tmp !=  1)
			smin(ans, calc(tmp));

	}

	cout << ans << endl;
}

