import sys
M = N = 0
A = []
MAX = 51     
dp = {}
# init combinations
C = [[0.0] * MAX for x in xrange(MAX)]
for i in xrange(MAX):
        C[i][0] = 1.0
        for j in xrange(1, i + 1):            
            C[i][j] = C[i - 1][j] + C[i - 1][j - 1]

def rec(k, left, mx):        
    if k == M:
        return mx if left == 0 else 0
    p = (k, left, mx)
    if dp.get(p) != None:
        return dp.get(p)                       
    r = 0.0
    for i in xrange(left + 1):
        nmx = (i + A[k] - 1) / A[k]
        r += rec(k + 1, left - i, max(mx, nmx)) * C[left][i]
    dp[p] = r
    return r
     
def main():
    global N, M, A        
    [N, M] = [int(x) for x in sys.stdin.readline().split()]
    A = [int(x) for x in sys.stdin.readline().split()]
    ans = rec(0, N, 0)
    ans /= (M ** N)
    print "%0.12lf" % ans    

if __name__ == "__main__":
    main()