#include <iostream>
#include <string>
#include <algorithm>
#include <string.h>

using namespace std;

int main(){
	int x[25], y[25];
	static int path[1<<24];
	static int cost[1<<24];
	int dist[25][25];
	while(cin >> x[0] >> y[0]){
		int n; cin >> n;
		memset(path, -1, sizeof(path));
		memset(cost, -1, sizeof(cost));
		for(int i=1;i<=n;i++) cin >> x[i] >> y[i];
		for(int i=0;i<=n;i++){
			for(int j=0;j<=n;j++){
				int dx = x[i]-x[j];
				int dy = y[i]-y[j];
				dist[i][j] = dx*dx + dy*dy;
			}
		}
		cost[0] = 0; path[0] = 0;
		for(int i=0;i<(1<<n)-1;i++){
			if(cost[i]==-1) continue;
			int f = 0;
			while((i>>f)&1) f++;
			for(int j=f;j<n;j++){
				if(((i>>j)&1)==1) continue;
				int mask = ((1<<f)|(1<<j));
				int d = dist[0][j+1] + dist[j+1][f+1] + dist[f+1][0];
				if(cost[i|mask]==-1||cost[i]+d<cost[i|mask]){
					cost[i|mask] = cost[i] + d;
					path[i|mask] = mask;
				}
			}
		}
		int pos = (1<<n)-1;
		cout << cost[pos] << endl;
		cout << 0;
		while(pos){
			int mask = path[pos];
			for(int i=0;i<n;i++) if((mask>>i)&1) cout << " " << i+1;
			pos ^= mask;
			cout << " " << 0;
		}
		cout << endl;
	}
}