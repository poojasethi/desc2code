#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <cstdlib>
using namespace std;



int dist(int x1,int y1,int x2,int y2)
{
	return (x1-x2)*(x1-x2)+(y1-y2)*(y1-y2);
}


int f[1<<24],g[1<<24];

int xs,ys,n;
int xp[30],yp[30];



int main()
{
	cin>>xs>>ys>>n;
	int i,j,k,l,m,pre,t;
	for(i=0;i<n;i++)
		cin>>xp[i]>>yp[i];
	f[0]=g[0]=0;
	for(i=1;i<(1<<n);i++)
	{
		j=__builtin_ctz(i);	
		k=i-(i&-i);
		f[i]=f[k]+2*dist(xp[j],yp[j],xs,ys);
		g[i]=k;
		for(;k;k-=k&-k)
		{
			l=__builtin_ctz(k);
			pre=i-(1<<j)-(1<<l);
			t = f[pre]+dist(xs,ys,xp[j],yp[j])+dist(xs,ys,xp[l],yp[l])+dist(xp[j],yp[j],xp[l],yp[l]);
			if(t<f[i])
			{
				f[i]=t;
				g[i]=pre;
			}
		}
	}
	printf("%d\n",f[(1<<n)-1]);
	printf("0 ");
	for(j=(1<<n)-1;j;j=g[j])
	{
		pre=g[j];
		k=pre^j;
		if(k==(k&-k))
		{
			printf("%d 0 ",__builtin_ctz(k)+1);
		}
		else
		{
			printf("%d %d 0 ",__builtin_ctz(k)+1,__builtin_ctz(k-(k&-k))+1);
		}
	}
	printf("\n");
	return 0;
}
