#include <cstdio>
#include <cmath>
const int INF = 0x3fffffff;
int dp[1<<25], f[1<<25];
int x[25], y[25];
int n;
int cal(int i, int j) {
	return (x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
}
int Log[1<<25];
void dfs(int u) {
	if(!u) {
		printf("0 ");
		return;
	}
	dfs(f[u]);
	for(int i = u^f[u]; i;i-=i&-i) {
		printf("%d ", (int)log2(i&-i)+1);
	}
	printf("0 ");
}
int main() {
	int i, j, k;
	scanf("%d%d%d", &x[0], &y[0], &n);
	for(i = 1; i <= n; i++)
		scanf("%d%d", &x[i], &y[i]);
	for(i = 0; i <(1<<n); i++)
		dp[i] = INF;
	dp[0] = 0;
	for(i = 0; i < (1<<n); i++) if(dp[i] != INF){
			for(j = 0; j < n; j++) if(!(i&(1<<j))) break;
			int st = i|(1<<j);
			int val = dp[i]+cal(0, j+1)*2;
			if(dp[st] > val) {
				dp[st] = val;
				f[st] = i;
			}
			for(k = j+1; k <= n; k++) if(!(i&(1<<k))){
				int val = dp[i]+cal(0, j+1)+cal(j+1, k+1)+cal(k+1, 0);
				int st = i|(1<<j)|(1<<k); 
				if(dp[st] > val) {
					dp[st] = val;
					f[st] = i;
				}
			} 
		}
	printf("%d\n", dp[(1<<n)-1]); dfs((1<<n)-1);
	return 0;
}

 	   	     				 			 	  			