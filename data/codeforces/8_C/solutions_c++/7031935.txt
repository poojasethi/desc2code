#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int INF = 0x3f3f3f3f;

#define ctz(a) __builtin_ctz(a)
#define popcount(a) __ builtin_popcount(a)

int n;
int pre[1<<24];
int f[1<<24];
int posx,posy;
int x[24],y[24];

inline int lowbit(int a){return a&(-a);}
int dist(int a,int b,int c,int d){return (a-c)*(a-c)+(b-d)*(b-d);}
inline int checkmin(int &a,int b){if(b<a) return (a=b) && 1;return 0;}
int main()
{
	scanf("%d%d%d",&posx,&posy,&n);
	for(int i=0;i<n;i++) scanf("%d%d",&x[i],&y[i]);
	memset(f,0x3f,sizeof(f));f[(1<<n)-1]=0;
	for(int i=(1<<n)-1;i;i--){
		int t=lowbit(i),j=ctz(i),p=i^t;
		if(checkmin(f[p],f[i]+2*dist(posx,posy,x[j],y[j]))) pre[p]=t;
		for(int k=0;k<n;k++) if(p&(1<<k))
			if(checkmin(f[p^(1<<k)]
				,f[i]+dist(posx,posy,x[j],y[j])
				+dist(x[j],y[j],x[k],y[k])
				+dist(x[k],y[k],posx,posy))) pre[p^(1<<k)]=t|(1<<k);
	}
	printf("%d\n",f[0]);
	printf("0");
	for(int i=0,j=pre[i];j;i^=j,j=pre[i]){
		int p=j^lowbit(j);printf(" %d",ctz(j)+1);
		if(p) printf(" %d",ctz(p)+1);
		printf(" 0");
	}
	return 0;
}
