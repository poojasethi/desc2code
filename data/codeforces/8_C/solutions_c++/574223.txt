#include<cstdio>
#include<iostream>

#define sqr(x) ( (x)*(x) )

const int inf = 2000000000;

using namespace std;

int n,m,x0,y0,f[16777217],p[16777216][2] = {0},x[25],y[25];
int main()
{
	scanf("%d%d", &x0, &y0);
	scanf("%d", &n);
	for (int i = 0; i<n; i++) scanf("%d%d", &x[i], &y[i]);
	int all = (1 << n)-1;
	f[0] = 0;
	for (int i = 1; i<=all; i++) f[i] = inf;
	for (int mask = 0; mask<all; mask++)
	{
		if (mask == inf) continue;
		for (int j = 0; j<n; j++)
			if ( ((1 << j)&mask)==0 )
			{
				for (int k = j; k<n; k++)
					if ( ((1 << k)&mask) == 0 )
					{
						int nmask = mask | (1 << j) | (1 << k);
						int d = sqr(x0-x[j])+sqr(y0-y[j]);
						d += sqr(x[j] - x[k])+ sqr(y[j]-y[k]);
						d += sqr(x0-x[k])+sqr(y0-y[k]);
						if (f[nmask] > f[mask]+d) 
						{
							f[nmask] = f[mask]+d;
							p[nmask][1] = j;
							p[nmask][2] = k;
						}
					}
					break;
			}
	}
	printf("%d\n0 ", f[all]);
	int cur = all;
	while (cur)
	{
		if (p[cur][1] == p[cur][2]) {printf("%d 0 ",p[cur][1]+1); cur = cur - (1 << p[cur][1]);}
		else {printf("%d %d 0 ",p[cur][1]+1,p[cur][2]+1); cur = cur - (1 << p[cur][1]) - (1 << p[cur][2]);}
	}
	return 0;
}