#include <iostream>
#include<cstring>
#include<cstdio>
#include<algorithm>
#define MAXN 24
using namespace std;
struct inf
{
	int x,y;
}a[30];
int n,dp[1<<MAXN],pre[1<<MAXN],dis[30][30];
int cal(inf a,inf b)
{
	return (a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y);
}
void outp(int x)
{
	if(!x) printf("0");
	else
	{
		outp(pre[x]);
		int i;
		for(i=0;i<n;i++)
			if((x&(1<<i))&&!(pre[x]&(1<<i)))
				printf(" %d",i+1);
		printf(" 0");
	}
}
int main()
{
	int i,j,m,k,t,x,y;
	scanf("%d%d",&x,&y);
	scanf("%d",&n);
	a[n].x=x; a[n].y=y;
	for(i=0;i<n;i++)
		scanf("%d%d",&a[i].x,&a[i].y);
	for(i=0;i<=n;i++)
		for(j=0;j<=n;j++)
			dis[i][j]=cal(a[i],a[j]);
	m=(1<<n);
	for(i=1;i<m;i++)
		for(j=0;j<n;j++)
			if(i&(1<<j))
			{
				x=i-(1<<j);
				dp[i]=dp[x]+dis[n][j]+dis[n][j];
				pre[i]=x;
				for(k=j+1;k<n;k++)
					if(i&(1<<k))
					{
						x=i-(1<<j)-(1<<k);
						if(dp[i]>dp[x]+dis[n][j]+dis[j][k]+dis[k][n])
						{
							dp[i]=dp[x]+dis[n][j]+dis[j][k]+dis[k][n];
							pre[i]=x;
						}
					}
				break;
			}
	printf("%d\n",dp[m-1]);
	outp(m-1);
	printf("\n");
}
