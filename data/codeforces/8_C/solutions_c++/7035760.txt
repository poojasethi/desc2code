#include <cstdio>
using namespace std;

const int INFTY = 1000000000;
int N;
int X[25], Y[25];
int D[25][25];
int dp[1<<24];
int back[1<<24];

int main()
{
	int xs, ys;
	scanf("%d%d%d", &xs, &ys, &N);
	for (int i = 0; i < N; i++)
		scanf("%d%d", &X[i], &Y[i]);
	X[N] = xs;
	Y[N] = ys;

	for (int i = 0; i <= N; i++)
		for (int j = i + 1; j <= N; j++)
			D[i][j] = D[j][i] = (X[i]-X[j])*(X[i]-X[j]) + (Y[i]-Y[j])*(Y[i]-Y[j]);

	for (int i = 1; i < 1<<N; i++)
		dp[i] = INFTY;

	for (int mask = 0; mask < 1<<N; mask++)
	{
		if (dp[mask] == INFTY)
			continue;

		for (int i = 0; i < N; i++)
		{
			if (mask&(1<<i))
				continue;

			for (int j = i; j < N; j++)
			{
				if (mask&(1<<j))
					continue;

				int nmask = mask|(1<<i)|(1<<j), add = D[N][i] + D[i][j] + D[j][N];
				if (add + dp[mask] < dp[nmask])
				{
					dp[nmask] = dp[mask] + add;
					back[nmask] = mask;
				}
			}

			break;
		}
	}

	printf("%d\n0", dp[(1<<N)-1]);
	for (int i = (1<<N)-1; i > 0; i = back[i])
	{
		for (int j = 0; j < N; j++)
			if ((back[i]^i)&(1<<j))
				printf(" %d", j + 1);
		printf(" 0");
	}

	return 0;
}