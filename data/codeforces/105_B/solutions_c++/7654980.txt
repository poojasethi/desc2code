#include <cstdio>
#include <algorithm>
#include <cstring>
#include <iostream>
using namespace std;
const int N = 10;
int n, K, A, mid;
int a[N], b[N];
double G = 0, ans;

void dfs(double cur, int i, int B, int cnt) {
	if (i == n) {
		if (cnt > n / 2) {
			ans += cur;
		} else {
			cur *= (double)A / (A + B);
			ans += cur;
		}
	} else {
		dfs(cur * b[i] / 100, i + 1, B, cnt + 1);
		dfs(cur * (100 - b[i]) / 100, i + 1, B + a[i], cnt);
	}
}

void D(int i, int K) {
	if (i == n) {
		ans = 0;
		dfs(1, 0, 0, 0);
		if (ans > G)
			G = ans;
	} else {
		if (K > 0 && b[i] != 100) {
			b[i] += 10;
			D(i, K - 1);
			b[i] -= 10;
		}
		D(i + 1, K);
	}
}

int main() {
	int idx;
	double p;
	scanf("%d%d%d", &n, &K, &A);
	for (int i = 0; i < n; ++i) 
		scanf("%d%d", &a[i], &b[i]);
	D(0, K);
	printf("%.10f\n", G);
	return 0;
}

   	   		 	  		 	      	