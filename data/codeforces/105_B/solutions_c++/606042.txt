#include <cstdio>
#include <algorithm>

using namespace std;

const int MAXN = 10;

int p[MAXN], r[MAXN];

int n, k, a;
double res;

void dfs(int ind, int left)
{
	if (ind == n) {
		double cur = 0;
		for (int i = 0; i < (1 << n); ++i) {
			int ct = 0;
			double poss = 1.0;
			int sump = 0;
			for (int j = 0; j < n; ++j) {
				if (i & (1 << j)) {
					poss *= (r[j] / 10.0);
					++ct;
				}
				else {
					poss *= ((10 - r[j]) / 10.0);
					sump += p[j];
				}
			}
			if (ct + ct > n) {
				cur += poss;
			}
			else {
				cur += poss * (a * 1.0 / (a + sump));
			}
		}
		res = max(res, cur);
	}
	else {
		int t = r[ind];
		for (int i = r[ind], j = 0; i <= 10 && j <= left; ++i, ++j) {
			r[ind] = i;
			dfs(ind + 1, left - j);
		}
		r[ind] = t;
	}
}

double run()
{
	res = 0;
	scanf("%d %d %d", &n, &k, &a);
	for (int i = 0; i < n; ++i) {
		scanf("%d %d", p + i, r + i);
		r[i] /= 10;
	}
	dfs(0, k);
	return res;
}

int main()
{
	printf("%.10lf\n", run());
	return 0;
}