#include <vector>
#include <set>
#include <map>
#include <cmath>
#include <string>
#include <cstring>
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <sstream>
#include <queue>

using namespace std;


int n, k, pw;

int A[10];
int l[10];

double DFS(int pos, int candy){
	if (pos != n){
		double ret = -1;
		if (candy){
			l[pos] += 10;
			ret = max(ret, DFS(pos, candy-1));
			l[pos] -= 10;
		}
		ret = max(ret, DFS(pos+1, candy));
		return ret;
	} else {
		double ret = 0;
		for (int i=0; i<(1<<n); i++){
			double p = 1;
			int q = 0, sum = 0;
			for (int j=0; j<n; j++){
				if (i & (1<<j)){
					p *= (100.0 - min(100, l[j]))/100.0;
					sum += A[j];
				} else {
					q++;
					p *= min(100, l[j])/100.0;
				}
			}
			if (q*2 > n){
				ret += p;
			} else {
				ret += p * pw / (pw + sum);
			}
		}
		return ret;
	}
}

int main(){
	cin >> n >> k >> pw;
	for (int i=0; i<n; i++){
		cin >> A[i] >> l[i];
	}
	printf("%.10lf\n", DFS(0, k));
	return 0;
}
