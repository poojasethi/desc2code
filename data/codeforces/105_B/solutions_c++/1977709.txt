#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

const int N=11;
const int inf=0x3f3f3f3f;

using namespace std;

int n,k,A,l[N],b[N];
double ret;

void dfs(int a,int c)
{
	if(a==n)
	{
		double r=0;
		for(int i=0;i<1<<n;i++)
		{
			int cnt=0,sum=0;
			double p=1.0;
			for(int j=0;j<n;j++)
			{
				if(i&(1<<j)) p*=l[j]*0.01,cnt++;
				else {p*=(100-l[j])*0.01;
					sum+=b[j];}
			}
			if(cnt*2>n) r+=p;
			else r+=p*1.0*A/(sum+A);
		}
		ret=max(ret,r);
		return ;
	}
	for(int i=0;i<=c && l[a]+i*10<=100;i++)
	{
		l[a]+=i*10;
		dfs(a+1,c-i);
		l[a]-=i*10;
	}
	return ;
}

int main()
{
	scanf("%d%d%d",&n,&k,&A);
	for(int i=0;i<n;i++)
		scanf("%d%d",&b[i],&l[i]);
	ret=0;
	dfs(0,k);
	printf("%.11f\n",ret);
	return 0;
}
