#include <iostream>

using namespace std;

typedef long long int ll;

struct date {
  ll s,m,h,d,mon,y;
  date() {}
  date(ll s,ll m,ll h,ll d,ll mon,ll y):s(s),m(m),h(h),d(d),mon(mon),y(y) {}
};

void escribe(date dat)
{
  cout<<"("<<dat.s<<","<<dat.m<<","<<dat.h<<","<<dat.d<<","<<dat.mon<<","<<dat.y<<")";
  cout<<endl;
}

ll leapsbefore(ll y)
{
  y--;
  return y/4-y/100+y/400;
}

ll leapssince1970(ll y)
{
  return leapsbefore(y)-leapsbefore(1969);
}

bool isleap(ll y)
{
  return y%400==0 or (y%100!=0 and y%4==0);
}

ll daysbefore(ll y)
{
  return 365*(y-1970)+leapssince1970(y);
}

const ll secondsperday=86400;

ll ll2y(ll x)
{
  ll d=x/secondsperday;
  ll inf=1970;
  ll sup=10000000000LL;
  while (inf+1<sup) {
    ll med=(inf+sup)/2;
    if (daysbefore(med)<=d) inf=med;
    else sup=med;
  }
  return inf;
}

int m2d[12]={31,28,31,30,31,30,31,31,30,31,30,31};

ll daysthismonth(ll mon,ll y)
{
  if (mon==1 and isleap(y)) return 29;
  return m2d[mon];
}

ll daysthismonth(date dat)
{
  return daysthismonth(dat.mon,dat.y);
}

ll daysbefore(ll mon,ll y)
{
  ll d=0;
  for (int i=0;i<mon;i++)
    d+=daysthismonth(i,y);
  return d;
}

ll daysbefore(date dat)
{
  return daysbefore(dat.y)+daysbefore(dat.mon,dat.y)+dat.d;
}

ll dayofweek(date dat)
{
  return (3+daysbefore(dat))%7;
}

date ll2date(ll x)
{
  ll y=ll2y(x);
  x-=daysbefore(y)*secondsperday;
  ll mon=0;
  while (mon<12 and daysbefore(mon+1,y)*secondsperday<=x) mon++;
  x-=daysbefore(mon,y)*secondsperday;
  return date(x%60,x/60%60,x/3600%24,x/86400,mon,y);
}

ll date2ll(date dat)
{
  ll d=daysbefore(dat.y)+daysbefore(dat.mon,dat.y)+dat.d;
  return d*secondsperday+dat.s+dat.m*60+dat.h*3600;
}

date nextyear(date dat)
{
  dat.y++;
  dat.s=dat.m=dat.h=dat.d=dat.mon=0;
  return dat;
}

date nextmonth(date dat)
{
  if (dat.mon==11) return nextyear(dat);
  dat.mon++;
  dat.s=dat.m=dat.h=dat.d=0;  
  return dat;
}

date nextday(date dat)
{
  if (dat.d+1==daysthismonth(dat)) return nextmonth(dat);
  dat.d++;
  dat.s=dat.m=dat.h=0;  
  return dat;
}

date nexthour(date dat)
{
  if (dat.h==23) return nextday(dat);
  dat.h++;
  dat.s=dat.m=0;  
  return dat;
}

date nextminute(date dat)
{
  if (dat.m==59) return nexthour(dat);
  dat.m++;
  dat.s=0;  
  return dat;
}

date nextsecond(date dat)
{
  if (dat.s==59) return nextminute(dat);
  dat.s++;
  return dat;
}

ll rs,rm,rh,rdw,rd,rmon;

void solve(ll x)
{
  //cout<<endl;
  //cout<<"tratar "<<x<<endl;
  x++;
  date dat=ll2date(x);
  //escribe(dat);
  for (;;) {
    if (rmon!=-1 and rmon!=dat.mon) dat=nextmonth(dat);
    else if ((rdw!=-1 and rd!=-1 and rdw!=dayofweek(dat) and rd!=dat.d) or
	     (rdw!=-1 and rd==-1 and rdw!=dayofweek(dat)) or
	     (rdw==-1 and rd!=-1 and rd!=dat.d)) dat=nextday(dat);
    else if (rh!=-1 and rh!=dat.h) dat=nexthour(dat);
    else if (rm!=-1 and rm!=dat.m) dat=nextminute(dat);
    else if (rs!=-1 and rs!=dat.s) dat=nextsecond(dat);
    else break;
    //escribe(dat);
  }
  cout<<date2ll(dat)<<endl;
}

int main()
{
  cin>>rs>>rm>>rh>>rdw>>rd>>rmon;
  if (rdw!=-1) rdw--;
  if (rd!=-1) rd--;
  if (rmon!=-1) rmon--;
  int n;
  cin>>n;
  for (int cas=0;cas<n;cas++) {
    ll x;
    cin>>x;
    solve(x);
  }
}
