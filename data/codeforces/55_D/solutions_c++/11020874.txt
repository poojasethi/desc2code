#include<cstdio>
#include<cstring>
#define ll __int64
const int LCM=2520;
int a[19],b[LCM+1];
ll dp[19][48][2520];
int gcd(int a,int b){return b?gcd(b,a%b):a;}
ll dfs(int i,int preLcm,int preSum,bool e){
	if(i==-1)return preSum%preLcm==0;
	if(!e&&dp[i][b[preLcm]][preSum]!=-1)return dp[i][b[preLcm]][preSum];
	ll res=0;
	int u=e?a[i]:9,d;
	for(d=0;d<=u;d++){
		int nowLcm=preLcm,nowSum=(preSum*10+d)%LCM;
		if(d)nowLcm=preLcm*d/gcd(preLcm,d);
		res+=dfs(i-1,nowLcm,nowSum,e&&d==u);
	}
	return e?res:dp[i][b[preLcm]][preSum]=res;
}
ll cal(ll n){
	int i=0;
	while(n){a[i++]=n%10,n/=10;}
	return dfs(i-1,1,0,1);
}
int main(){
	int T,i,cnt=0;
	ll l,r;
	scanf("%d",&T);
	for(i=1;i<=LCM;i++)if(LCM%i==0)b[i]=cnt++;
	memset(dp,-1,sizeof(dp));
	while(T--){
		scanf("%I64d%I64d",&l,&r);
		printf("%I64d\n",cal(r)-cal(l-1));
	}
	return 0;
}
	 		 	  		  		 		 	 	 	 					