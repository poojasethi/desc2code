#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long LL;
int nu[20],h[2550],mo[255][10],lc[2550][10];
LL f[20][255][55];
LL dfs(int p,int m,int l,bool li){
    if(p==-1)return (m%l==0);
    if(!li && ~f[p][m][h[l]]) return f[p][m][h[l]];
    int e=li?nu[p]:9;LL r=0;
    for (int i=0;i<=e;i++){r+=dfs(p-1,p==0?(m*10+i):mo[m][i],i?lc[l][i]:l,li&&(i==e));}
    return li?r:f[p][m][h[l]]=r;
}
LL cal(LL x){
    int i=0;
    while(x){nu[i++]=x%10;x/=10;}
    return dfs(i-1,0,1,1);
}
int main(){
    memset(f,-1,sizeof(f));int i,j,id=0;
    for (i=0;i<=252;i++)for (j=0;j<10;j++){mo[i][j]=(i*10+j)%252;}
    for (i = 0; i <= 2520; i ++){
        if (i>0 && 2520%i==0){h[i]=id++;}
        for(j=1;j<10;j++)lc[i][j]=i*j/__gcd(i,j);
    }
    int t;scanf("%d",&t);
    while(t--){
        LL l,r;scanf("%I64d %I64d",&l,&r);
        printf("%I64d\n",cal(r)-cal(l-1));
    }
    return 0;
}
