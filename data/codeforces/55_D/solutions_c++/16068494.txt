#include<cstdio>
#include<cstring>
#include<algorithm>
#define ll long long
using namespace std;
int cas,cnt,bit[20],inx[2525];
ll l,r,f[20][2520][50];
ll gcd(ll x,ll y)
{
	return y?gcd(y,x%y):x;
}
ll lcm(ll x,ll y)
{
	return x/gcd(x,y)*y;
}
ll dfs(int pos,int presum,int prelcm,bool flag)
{
	if(pos==-1)return presum%prelcm==0;
	if(!flag&&f[pos][presum][inx[prelcm]]!=-1)return f[pos][presum][inx[prelcm]];
	ll res=0;
	int end=flag?bit[pos]:9;
	for(int i=0;i<=end;++i)res+=dfs(pos-1,(presum*10+i)%2520,i?lcm(prelcm,i):prelcm,flag&&i==end);
	if(!flag)f[pos][presum][inx[prelcm]]=res;
	return res;
}
ll cal(ll x)
{
	int tot=0;
	while(x)
	{
		bit[tot++]=x%10;
		x/=10;
	}
	return dfs(tot-1,0,1,1);
}
int main()
{
	scanf("%d",&cas);
	memset(f,-1,sizeof f);
	for(int i=1;i<=2520;++i)if(2520%i==0)inx[i]=cnt++;
	while(cas--)
	{
		scanf("%I64d%I64d",&l,&r);
		printf("%I64d\n",cal(r)-cal(l-1));
	}
}
		 	  	 	 	 			 	 	 		 	 		 			