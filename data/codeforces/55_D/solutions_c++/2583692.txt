#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
typedef long long ll;
const int MOD=2520;
ll dp[20][MOD][55];
int hsh[1<<13],dig[20];
ll gcd(ll a,ll b)
{
    return b?gcd(b,a%b):a;
}
ll lcm(ll a,ll b)
{
    if(b==0) return a;
    return a/gcd(a,b)*b;
}
ll dfs(int pos,int sum,int mod,bool fg)//fg=1 lim=9
{
    if(pos<0) return sum%mod==0;
    if(fg&&~dp[pos][sum][hsh[mod]]) return dp[pos][sum][hsh[mod]];
    int lim=fg?9:dig[pos];
    ll ans=0;
    for(int i=0;i<=lim;i++) ans+=dfs(pos-1,(sum*10+i)%MOD,lcm(mod,i),fg||i<lim);
    return fg?dp[pos][sum][hsh[mod]]=ans:ans;
}
ll cal(ll x)
{
    int i=0;
    for(;x;x/=10) dig[i++]=x%10;
    return dfs(i-1,0,1,0);
}
int main()
{
    int t,idx=0;
    cin>>t;
    for(int i=1;i<=MOD;i++) if(MOD%i==0) hsh[i]=idx++;
    memset(dp,-1,sizeof(dp));
    while(t--)
    {
        ll l,r;
        cin>>l>>r;
        cout<<cal(r)-cal(l-1)<<endl;
    }
    return 0;
}

  	        	  		    	