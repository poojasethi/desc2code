#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;

const int MOD=2520;
typedef long long LL;

LL dp[20][1<<8][2520];

bool check(int s,int x) {
	for(int i=2;i<10;i++)
		if(s&(1<<(i-2)))
			if(x%i)return 0;
	return 1;
}

int d[20],len;

LL rec(int pos,int st,int mod,bool lim) {
	if(!pos)return check(st,mod);
	if(!lim&&dp[pos][st][mod]!=-1)return dp[pos][st][mod];
	int ed=lim?d[pos]:9;
	LL res=0;
	for(int i=0;i<=ed;i++) {
		int nst=st;
		if(i>1)nst|=(1<<(i-2));
		res+=rec(pos-1,nst,(mod*10+i)%MOD,lim&&i==ed);
	}
	if(!lim)dp[pos][st][mod]=res;
	return res;
}

LL solve(LL x) {
	for(len=0;x;x/=10)d[++len]=x%10;
	return rec(len,0,0,1);
}

int main() {
//	freopen("input.txt","r",stdin);
	memset(dp,-1,sizeof(dp));
	int T; cin>>T;
	while(T--) {
		LL a,b;
		cin>>a>>b;
		cout<<solve(b)-solve(a-1)<<endl;
	}
	return 0;
}
