#include <cstdio>
#include <cstring>
using namespace std;

typedef long long LL;
int a[20];
LL dp[20][1<<8][2520];

LL dfs(int i, int st, int mod, bool limit)
{
	if(i < 1) {
		for(int i=2; i<10; i++) {
			if(st & (1<<i-2) && mod % i != 0)	return 0;
		}
		return 1;
	}
	if(!limit && dp[i][st][mod] != -1)	return dp[i][st][mod];
	LL ret = 0;
	int maxn = limit ? a[i] : 9;
	for(int j=0; j<=maxn; j++) {
		int new_st = st;
		if(j>=2) {
			new_st |= 1<<j-2;
		}
		ret += dfs(i-1, new_st, (10*mod+j)%2520, limit&&(j==maxn));
	}
	if(!limit)	dp[i][st][mod] = ret;
	return ret;
}

LL f(LL n) 
{
	int len = 0;
	while(n) {
		a[++len] = n % 10;
		n /=10;
	}
	return dfs(len, 0, 0, 1);	
}

int main ()
{
	int t;
	LL l, r;
	scanf("%d", &t);
	memset(dp, -1, sizeof(dp));
	while(t--) {
		scanf("%I64d%I64d", &l, &r);
		printf("%I64d\n", f(r) - f(l-1));
	}
	return 0;
}
	  	 			  	 			 					    		 		