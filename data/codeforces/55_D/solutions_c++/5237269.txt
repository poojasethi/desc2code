#include<cstdio>
#include<algorithm>
#include<cstring>
using namespace std;
int sv[2521],r,t,st[20],n_s;
long long dp[19][49][252],a,b;
long long cal(int l,int lcm,int s,int bit){
    if(l < 0) return s%lcm == 0;
    if(!bit && dp[l][sv[lcm]][s] != -1) return dp[l][sv[lcm]][s];
    int lim = bit ? st[l] : 9;
    long long tmp = 0;
    for(int i=0;i<=lim;i++)
        tmp += cal(l-1, i == 0 ? lcm : lcm*i/(__gcd(lcm,i)), l > 0 ? (s*10+i)%252 : s*10+i, bit&&(i==lim));
    if(!bit)
        dp[l][sv[lcm]][s] = tmp;
    return tmp;
}
long long W(long long x){
    for(n_s=0;x != 0;x/=10,n_s++)
        st[n_s] = x%10;
    return cal(n_s-1,1,0,1);
}
int main(){
    for(int i=1;i<=2520;i++)
        if(2520%i == 0)
            sv[i] = r++;
    scanf("%d",&t);
    memset(dp,-1,sizeof(dp));
    while(t--){
        scanf("%I64d%I64d",&a,&b);
        printf("%I64d\n",W(b)-W(a-1));
    }
    return 0;
}