#include <stdio.h>
#include <string.h>

int q[19],q1[2522];
__int64 dp[19][48][2522];

int gcd(int a,int b)
{
	return b?gcd(b,a%b):a;
}

__int64 dfs(int pos,int lcm,int sum,bool up)
{
	if(pos==-1)
	return sum%lcm==0;
	if(!up&&dp[pos][q1[lcm]][sum]!=-1)
	return dp[pos][q1[lcm]][sum];
	int stop=up?q[pos]:9;
	__int64 ans=0;
	for(int i=0;i<=stop;i++)
	{
		int curlcm=lcm;
		int cursum1=(sum*10+i)%2520;
		if(i)
		curlcm=lcm*i/gcd(lcm,i);
		ans+=dfs(pos-1,curlcm,cursum1,up&&i==stop);
	}
	return up?ans:dp[pos][q1[lcm]][sum]=ans;
}

__int64 aa(__int64 a)
{
	int len=0;
	while(a)
	{
		q[len++]=a%10;
		a/=10;
	}
	return dfs(len-1,1,0,1);
}

int main()
{
	int n,t=0;
	__int64 a,b;
	for(int i=1;i<=2520;i++)
	if(2520%i==0)
	q1[i]=t++;
	memset(dp,-1,sizeof(dp));
	scanf("%d",&t);
	while(t--)
	{
		scanf("%I64d%I64d",&a,&b);
		printf("%I64d\n",aa(b)-aa(a-1));
	}
}
 	   	   	  	   			 	 	  				