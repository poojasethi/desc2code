#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

typedef __int64 ll;

ll dp[20][50][2550];
int a[2550], num[20];

ll gcd(ll a, ll b){
  if(a<b) swap(a,b);
	return b==0? a: gcd(b,a%b);	 
}

ll lcm(ll a, ll b){
  return a/gcd(a,b)*b;	 
}

ll dfs(int len, int m, int n, int p){
  if(len == -1) return n % m == 0;
	if(!p&&dp[len][a[m]][n]>=0) return dp[len][a[m]][n];
	ll ans = 0;
	int maxd = (p? num[len]: 9);
	for(int i = 0; i <= maxd; i++)
	  ans += dfs(len-1,i?lcm(i,m):m,(n*10+i)%2520,p&&i==maxd);
	if(!p) dp[len][a[m]][n] = ans;
	return ans;	  		
}

ll cal(ll x){
  int len = 0;
	for(;x;x/=10) num[len++] = x%10;
	return dfs(len-1,1,0,1);	 
}


int main(){
	memset(dp,-1,sizeof(dp));
	for(int i=1,j=0; i <= 2520; i++)
	  if(2520%i==0) a[i] = ++j;
	  else a[i] = 0;
	int T;
	ll L, R;
	scanf("%d",&T);
	while(T--){
	  scanf("%I64d%I64d",&L,&R);
		printf("%I64d\n",cal(R)-cal(L-1));					 
  }  
  return 0;		
}
 		 	 		  	  			 	   	 	 		   	