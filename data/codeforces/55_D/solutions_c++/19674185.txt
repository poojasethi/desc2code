#include <cstdio>
#include <map>
#include <vector>
using namespace std;
typedef __int64 ll;
typedef vector<int> vi;

const int MOD = 2520;
int T, dig[20];
ll L, R;
map<int, ll> dp[20][MOD];

int GCD(int a, int b) { return b ? GCD(b, a % b) : a; }
int LCM(int a, int b) { return a * b / GCD(a, b); }

ll dfs(int pos, bool up, int lc, int re) {
	if (pos < 0) return re % lc == 0;
	if (!up && dp[pos][re].find(lc) != dp[pos][re].end()) return dp[pos][re][lc];
	int ubnd = up ? dig[pos] : 9;
	ll ret = 0;
	for (int i = 0; i <= ubnd; ++i)
		ret += dfs(pos - 1, up && (i == dig[pos]), (i ? LCM(lc, i) : lc), (re * 10 + i) % MOD);
	return up ? ret : dp[pos][re][lc] = ret;
}

ll solve(ll x) {
	int pos = 0;
	for (; x; x /= 10) dig[pos++] = x % 10;
	return dfs(pos - 1, true, 1, 0);
}

int main() {
	scanf("%d", &T);
	while (T--) {
		scanf("%I64d %I64d", &L, &R);
		printf("%I64d\n", solve(R) - solve(L - 1));
	}
}
   		 				          	 	  		  	