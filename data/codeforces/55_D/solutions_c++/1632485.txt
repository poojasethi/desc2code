#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long LL;
LL dp[2][20][49][2520];
int a[20],n,id[2521];
int gcd(int x,int y)
{
	return y==0?x:gcd(y,x%y);
}

LL dfs(int s, int pos, int lcm, int left)
{
	if(pos==-1)
	{
		return (left%lcm==0);
	}
	LL &ret = dp[s][pos][id[lcm]][left];
	if(ret!=-1)return ret;
	ret = 0;
	int up = s?a[pos]:9;
	for(int i = 0; i <= up; i++)
	{
		ret += dfs(s&&i==up,pos-1,i?lcm*i/gcd(lcm,i):lcm,(left*10+i)%2520);
	}
	return ret;
}

LL f(LL hi)
{
	if(hi==0)return 1;
	n = 0;
	while(hi)
	{
		a[n++] = hi%10;
		hi/=10;
	}
	memset(dp[1],-1,sizeof(dp[1]));
	LL ret = dfs(1,n-1,1,0);
	return ret;
}

int main()
{
	int ct = 0;
	for(int i = 1; i <= 2520; i++)
		if(2520%i==0)
			id[i] = ct++;
	int T;
    scanf("%d",&T);
	memset(dp,-1,sizeof(dp));
	while(T--)
	{
		LL a,b;
		scanf("%I64d%I64d",&a,&b);
		printf("%I64d\n",f(b)-f(a-1));
	}

	return 0;
}

   	 	 			   	  			 	 		