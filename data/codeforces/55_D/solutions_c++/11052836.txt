#include<stdio.h>
#include<string.h>
__int64 dp[19][48][2520];
int a[19],b[2521];
int gcd(int a,int b)
{
	if(b==0) return a;
	return gcd(b,a%b);
}

__int64 dfs(int pos,int lcm,int s,bool f)
{
	if(pos==-1) return s%lcm==0;
	if(!f&&dp[pos][b[lcm]][s]!=-1) return dp[pos][b[lcm]][s];
	int x=f? a[pos]:9;
	__int64 ans=0;
	for(int i=0;i<=x;i++)
	{
		int llcm=lcm,ss=(s*10+i)%2520;
		if(i)
			llcm=lcm*i/gcd(lcm,i);
		ans+=dfs(pos-1,llcm,ss,f&&i==x);
	}
	if(!f) dp[pos][b[lcm]][s]=ans;
	return ans;
}

__int64 solve(__int64 n)
{
	int i,l;
	memset(a,0,sizeof(a));
	l=0;
	while(n)
	{
		a[l++]=n%10;
		n/=10;
	}
	return dfs(l-1,1,0,1);
}

int main()
{
	int i,j,t,s=0;
	__int64 n,m;
	for(i=1;i<=2520;i++)
		if(2520%i==0) b[i]=s++;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%I64d %I64d",&n,&m);
		memset(dp,-1,sizeof(dp));
		printf("%I64d\n",solve(m)-solve(n-1));
	}
	return 0;
}
	 		 	 							  	  		