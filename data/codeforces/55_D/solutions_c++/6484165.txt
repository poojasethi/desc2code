#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
#include<queue>
#include<vector>
using namespace std;
#define N 2525
#define ll __int64

ll dp[25][1<<8][2520];
ll digit[35];

ll dfs(ll len,ll mask,ll num,bool limit)
{
	ll i;
	if(len==0)
	{
		for(i=2;i<=9;i++)
		{
			if((mask&(1<<(i-2)))&&num%i!=0)return 0;
		}
		return 1;
	}
	if(!limit&&dp[len][mask][num]!=-1)return dp[len][mask][num];
	ll maxi=limit?digit[len]:9;
	ll ret=0;
	for(i=0;i<=maxi;i++)
	{
		ret+=dfs(len-1,i<2?mask:(mask|(1<<(i-2))),(num*10+i)%2520,limit&&(i==maxi));
	}
	if(!limit)dp[len][mask][num]=ret;
	return ret;
}

ll solve(ll n)
{
	ll len=0;
	while(n)
	{
		digit[++len]=n%10;
		n/=10;
	}
	digit[len+1]=0;
	return dfs(len,0,0,true);
}

int main()
{
	memset(dp,-1,sizeof dp);
	int t;
	scanf("%d",&t);
	while(t--)
	{
		ll l,r;
		scanf("%I64d%I64d",&l,&r);
		printf("%I64d\n",solve(r)-solve(l-1));
	}
	return 0;
}
 	   				  		 		   	   	  	