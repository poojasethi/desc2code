#include<cstdio>
#include<cstring>
typedef long long LL;
LL dp[20][50][2522];
int bit[20],mp[2522];
int g[2550][11],md[255][11];
inline int gcd(int a,int b){return b?gcd(b,a%b):a;}

inline LL dfs(int pos,int s,int mod,int e){
	if(pos<1) return mod%s==0;
	if(!e && ~dp[pos][mp[s]][mod]) return dp[pos][mp[s]][mod];
	int mx=e?bit[pos]:9,i;LL ret=0;
	for(i=0;i<=mx;++i)
		ret+=dfs(pos-1,g[s][i],pos>1?md[mod][i]:((mod<<1)+(mod<<3)+i),e&&i==mx);
	return e?ret:dp[pos][mp[s]][mod]=ret;
}
inline LL work(LL val){
	int len=0;
	for(;val;val/=10) bit[++len]=val%10;
	return dfs(len,1,0,1);
}
int main(){
	LL n,m=0;memset(dp,-1,sizeof dp);
	int t;
	for(t=1;t<=2520;++t)
		if(2520%t==0) mp[t]=m++;
	for(t=0;t<10;++t){
		for(int i=1;i<=2520;++i)
			g[i][t]=t?i/gcd(i,t)*t:i;
		for(int i=0;i<=252;++i)
			md[i][t]=((i<<1)+(i<<3)+t)%252;
	}
	scanf("%d",&t);
	while(t--){
		scanf("%lld%lld",&n,&m);
		printf("%lld\n",work(m)-work(n-1));
	}
	return 0;
}

  			 		  	 		 	    						