#shuru list 0 0 0 1 2 3 => 1 2 3
def ql(nums):
    nums.reverse()
    ret = []
    flag = 0
    for i in nums:
        if(i == 0 and flag == 0):
            continue;
        flag = 1
        ret.append(i)
    return ret

def f(nums, sumo, flag):
    sm = sum(nums)
    if((flag == 1) and (sumo == sm)):
        return nums
    #print sm
    ret = []
    if(sumo > sm):
        sumo -= sm
        nums.reverse()
        for i in range(400):
            nums.append(0)
        i = 0
        while(sumo > 0):
            d = 9 - nums[i]
            if(d <= sumo):
                sumo -= d
                nums[i] = 9
            else :
                nums[i] += sumo
                sumo = 0
            i+=1
        #print ql(nums)
        return ql(nums)
    else :
        nums.insert(0,0)

        ll = len(nums)
        for i in range(len(nums)-1,-1,-1):
            ss = sum(nums[0:i+1])
            
            if((nums[i] < 9) and (ss < sumo)):
                nums[i] += 1
                nums.reverse()
                return f(ql(nums), sumo, 1)
            nums[i] = 0

n = int(raw_input())
ret = [0]
for i in range(n):
    ret = f(ret,int(raw_input()), 0)
    print ''.join(str(j) for j in ret)
    