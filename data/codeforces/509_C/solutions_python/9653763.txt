#!/usr/bin/env python
#-*- coding:utf-8 -*-

import sys
import math
import random
import operator
from fractions import Fraction, gcd
from decimal import Decimal, getcontext
from itertools import product, permutations, combinations
getcontext().prec = 100

MOD = 10**9 + 7
INF = float("+inf")

n = int(raw_input())

a = int(raw_input())
MAXLEN = 350


def drop(pos, val):
    while val:
        delta = min(9 - res[pos], val)
        res[pos] += delta
        val -= delta
        pos += 1
    return pos - 1


def pr():
    print "".join(map(str, res)[::-1]).lstrip("0")


res = [0] * MAXLEN
drop(0, a)
pr()
for _ in xrange(n - 1):
    prev = a
    # assert sum(res) == prev
    a = int(raw_input())
    if a <= prev:
        to_take = prev - a + 1
        for pos in xrange(len(res)):
            delta = min(res[pos], to_take)
            res[pos] -= delta
            to_take -= delta
            if to_take == 0:
                break

        pos = drop(pos + 1, 1)

        to_drop = 0
        pos -= 1
        while pos >= 0:
            to_drop += res[pos]
            res[pos] = 0
            pos -= 1

        # print res
        drop(0, to_drop)

    else:
        drop(0, a - prev)
        # assert sum(res) == a
    pr()
