#include <cstdio>
#include <cstdlib>
#include <cstring>
const int oo=1073741819;
int u[3000000],l[524288],r[524288],ss,ansi,m1,n,m;
long long sum,ans,ex,ey,rx,ry,a[524288],b[524288];
int check(int i,int j,int k)
{
  ex=a[j]-a[i],ey=b[j]-b[i];
  rx=a[k]-a[i],ry=b[k]-b[i];
  return ex*ry-ey*rx>=0;
}
void merge(int x)
{
  int ne,na,i,j;
  ne=x<<1,na=ne+1;
  l[x]=ss+1;
  for (i=l[ne],j=l[na];i<=r[ne] || j<=r[na];) {
    if (((a[u[i]]<a[u[j]] || (a[u[i]]==a[u[j]] && b[u[i]]<=b[u[j]])) && i<=r[ne]) || (j>r[na])) {
      for (;(ss>l[x])&&(check(u[ss-1],u[ss],u[i]));ss--) ;
      u[++ss]=u[i];i++;
    }
    else {
      for (;(ss>l[x])&&(check(u[ss-1],u[ss],u[j]));ss--) ;
      u[++ss]=u[j];j++;
    }
  }
  r[x]=ss;
}
void origin()
{
  int i;
  for (m1=1;m1<=n+2;m1<<=1) ;
  ss=0;
  for (i=1;i<=n;i++) {
    l[i+m1]=r[i+m1]=++ss;
    u[ss]=i;
  }
  for (i=m1-1;i>=1;i--) merge(i);
}
void updata(int x,long long p)
{
  int ll,rr,mid;
  for (ll=l[x],rr=r[x]-1;ll<=rr;) {
    mid=(ll+rr)>>1;
    if (a[u[mid]]*p+b[u[mid]]<a[u[mid+1]]*p+b[u[mid+1]]) ll=mid+1;else rr=mid-1;
  }
  sum=a[u[ll]]*p+b[u[ll]];
  if (sum>ans) ans=sum,ansi=u[ll];
}
void ask(int l,int r,long long p)
{
  l+=m1-1,r+=m1+1;
  for (;!(1==(l^r));l>>=1,r>>=1) {
    if (0==(l&1)) updata(l+1,p);
    if (1==(r&1)) updata(r-1,p);
  }
}
void init()
{
  int i,l,r;
  long long p;
  scanf("%d%d\n",&n,&m);
  for (i=1;i<=n;i++) scanf("%I64d%I64d\n",&b[i],&a[i]);
  origin();
  for (i=1;i<=m;i++) {
    scanf("%d%d%I64d\n",&l,&r,&p);
    ans=-oo,ansi=0;
    ask(l,r,p);
    printf("%d\n",ansi);
  }
}
int main()
{
   init();
  return 0;
}
