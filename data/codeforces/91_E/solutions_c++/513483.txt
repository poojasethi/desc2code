#include<cstdio>
#include<algorithm>
using namespace std;

#define x first
#define y second

const int maxn=100000+10;
pair<int,int> A[maxn];
int id[maxn],buf[maxn];
pair<int,int> t[maxn*4],g[maxn*18];
int n,q,res,tot;

int gettime(int a,int b)
{
    if (A[a].x<=A[b].x) return 0;
    if (A[a].y==A[b].y) return 1000000000;
    return (A[a].x-A[b].x+A[b].y-A[a].y-1)/(A[b].y-A[a].y);
}

void process(int d,int l,int r)
{
    if (l!=r)
    {
        process(d*2,l,(l+r)/2);
        process(d*2+1,(l+r)/2+1,r);
        int m=0,i=l,j=(l+r)/2+1;
        for (;i<=(l+r)/2 && j<=r;)
        if (A[id[i]].y<A[id[j]].y) buf[m++]=id[i++];
        else buf[m++]=id[j++];
        for (;i<=(l+r)/2;i++) buf[m++]=id[i];
        for (;j<=r;j++) buf[m++]=id[j];
        for (int i=0;i<r-l+1;i++) id[l+i]=buf[i];
    }
    t[d].x=tot+1;t[d].y=tot;
    for (int i=l;i<=r;i++)
    {
        while (t[d].x<=t[d].y && gettime(g[t[d].y].x,id[i])<=g[t[d].y].y) t[d].y--;
        if (t[d].x>t[d].y) g[++t[d].y]=make_pair(id[i],0);
        else {g[t[d].y+1]=make_pair(id[i],gettime(g[t[d].y].x,id[i]));t[d].y++;}
    }
    tot=t[d].y;
}

void query(int d,int ln,int rn,int l,int r,int tt)
{
    if (ln==l && rn==r)
    {
        l=t[d].x;r=t[d].y+1;
        while (l+1<r)
        {
            if (g[(l+r)/2].y<=tt) l=(l+r)/2;
            else r=(l+r)/2;
        }
        if ((long long)A[res].y*tt+A[res].x<(long long)A[g[l].x].y*tt+A[g[l].x].x)
            res=g[l].x;
        return;
    }
    if (r<=(ln+rn)/2) query(d*2,ln,(ln+rn)/2,l,r,tt);else
    if (l>(ln+rn)/2) query(d*2+1,(ln+rn)/2+1,rn,l,r,tt);
    else
    {
        query(d*2,ln,(ln+rn)/2,l,(ln+rn)/2,tt);
        query(d*2+1,(ln+rn)/2+1,rn,(ln+rn)/2+1,r,tt);
    }
}

int main()
{
    //freopen("input.txt","r",stdin);

    scanf("%d%d",&n,&q);
    for (int i=1;i<=n;i++) scanf("%d%d",&A[i].x,&A[i].y),id[i]=i;
    process(1,1,n);
    for (;q--;)
    {
        int l,r,tt;
        scanf("%d%d%d",&l,&r,&tt);
        res=l;
        query(1,1,n,l,r,tt);
        printf("%d\n",res);
    }
}
