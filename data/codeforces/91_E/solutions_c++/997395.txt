#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

typedef pair<int,int> ii;
typedef pair<ii,int> seg;
typedef long long ll;

#define Z 100100
#define S 262144
#define fi first.first
#define se first.second
#define id second
#define all(a) (a).begin(),(a).end()
#define sz(a) ((int)(a).size())

void add_seg(vector<seg> &v,seg t) {
    while(sz(v)>=2) {
        seg b=v.back(),a=v[sz(v)-2];
        if(ll(a.se-b.se)*(t.fi-a.fi) >= ll(a.se-t.se)*(b.fi-a.fi)) {
            v.pop_back();
        } else {
            break;
        }
    }
    v.push_back(t);
}
void process_seg(vector<seg> &v) {
	sort(all(v));
	vector<seg> t;
	for(int i=0;i<sz(v);i++) {
		add_seg(t,v[i]);
	}
	swap(v,t);
}
seg query_seg(const vector<seg> &v,seg t) {
    int low=0,high=sz(v),mid;
    while(low+1<high) {
        mid=(low+high-1)/2;
        seg b=v[mid+1],a=v[mid];
        if(ll(a.se-b.se)*t.se <= ll(b.fi-a.fi)*t.fi) {
            low=mid+1;
        } else {
            high=mid+1;
        }
    }
    return v[low];
}

seg segs[Z];
vector<seg> comps[S];
int num;
void _init(int p,int l,int r) {
	if(l+1==r) {
		comps[p].push_back(segs[l]);
		return;
	}
	int m=(l+r)/2;
	_init(p*2,l,m);
	_init(p*2+1,m,r);
	comps[p].assign(all(comps[p*2]));
	comps[p].insert(comps[p].end(),all(comps[p*2+1]));
//	cout<<p<<' '<<l<<' '<<r<<' '<<sz(comps[p])<<endl;
	process_seg(comps[p]);
}
void init(int n) {
	num=n;
	_init(1,0,num);
}

ll dot(seg a,seg b) {
	return ll(a.fi)*b.fi+ll(a.se)*b.se;
}
int low,high;
seg val;
int besti;
ll best;
void _query(int p,int l,int r) {
	if(r<=low || l>=high) return;
	if(l>=low && r<=high) {
		seg res=query_seg(comps[p],val);
		ll pot=dot(val,res);
		if(pot>best) {
			best=pot;
			besti=res.id;
		}
		return;
	}
	int m=(l+r)/2;
	_query(p*2,l,m);
	_query(p*2+1,m,r);
}
int query(int a,int b,seg q) {
	low=a;
	high=b;
	val=q;
	best=-1;
	besti=-1;
	_query(1,0,num);
	return besti;
}

int main() {
	int n,q;
	cin>>n>>q;
	for(int i=0;i<n;i++) {
		cin>>segs[i].fi>>segs[i].se;
		segs[i].id=i;
	}
	init(n);
	seg qt;
	for(int i=0;i<q;i++) {
		int a,b,t;
		cin>>a>>b>>t;
		a--;
		qt.fi=1;
		qt.se=t;
		qt.id=-1;
		cout<<query(a,b,qt)+1<<'\n';
	}
}
