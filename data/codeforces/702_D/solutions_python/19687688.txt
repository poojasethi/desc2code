d, k, a, b, t = map(int, raw_input().split())


def brute():
    t_car = k * a
    d_end = d - d / k * k
    t_end = d_end * a
    # print 'd_end: %d, t_end: %d' % (d_end, t_end)

    z0, t0 = 0, 0
    mi = 10 ** 18
    while z0 < d:
        if z0 + k > d:
            assert (d - z0) == d_end
            z0 += d_end
            t0 += t_end
            break
        z0 += k
        t0 += t_car
        if z0 == d:
            break
        t_walk = t0 + (d - z0) * b
        t0 += t
        print 'dist: %d, t spent: %d, t end by walk: %d' % (z0, t0, t_walk)
        mi = min(mi, t_walk)
    print 'Time only by car: %d' % t0
    return min(t0, mi)


def solve(mi, ma):
    m, y0 = k*(a-b)+t, d*b-t
    # print 'm=%d y0=%d' % (m, y0)
    if m >= 0:
        # print '1) y = %d' % mi
        return k*a + (d-mi*k)*b
    y1 = min(ma, -y0 / m)
    # print '2) y = %d' % y1
    return k*y1*a + t*(y1-1) + (d-k*y1)*b


t_only_car = d*a + t*((d-1)/k)
t_only_walk = d*b

if d <= k:
    print t_only_car
else:
    ymi, yma = 1, d/k
    print min(t_only_walk, t_only_car, solve(ymi, yma))
    # print brute()
