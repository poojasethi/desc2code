#include <bits/stdc++.h>

#define ll long long
#define fi freopen("", "r", stdin)
#define fo freopen("", "w", stdout)

using namespace std;

struct edge{
  int u, v, l, r;
};

const int N = 5010;

int n, m;
edge e[N];
int root[N];

bool comp(edge p, edge q)
{
  return p.r < q.r;
}

int get_root(int u){
  return (root[u] == u) ? u : root[u] = get_root(root[u]);
}

int main()
{
  fi;fo;
  cin >> n >> m;
  for(int i = 1; i <= m; i++) scanf("%d%d%d%d", &e[i].u, &e[i].v, &e[i].l, &e[i].r);
  int ans = -1;
  sort(e + 1, e + m + 1, comp);
  for(int i = 1; i <= m; i++){
    for(int j = 1; j <= n; j++) root[j] = j;
    for(int j = m; j >= 1; j--){
      if(e[j].r < e[i].l) break;
        else if(e[j].l > e[i].l) continue;
          else root[get_root(e[j].u)] = get_root(e[j].v);
      if(get_root(1) == get_root(n)) ans = max(ans, e[j].r - e[i].l + 1);
    }
  }
  if(ans == -1) cout << "Nice work, Dima!";
  else cout << ans;
  return 0;
}
