#include <stdio.h>
#include <algorithm>
using namespace std;
#define MMAX 3100
struct Edge
{
  int a, b, l, r;
  bool operator<(const Edge& other) const
  {
    return r > other.r;
  }
};
Edge es[MMAX];
int fa[MMAX];
int Find(int x)
{
  while (fa[x] != x)
  {
    x = fa[x];
  }
  return x;
}

int main()
{
  int n, m;
  scanf("%d%d", &n, &m);
  int i, j;
  for (i = 0; i < m; ++i)
  {
    scanf("%d%d%d%d", &es[i].a, &es[i].b, &es[i].l, &es[i].r);
  }
  sort(es, es+m);

  int ans = 0;
  for (i = 0; i < m; ++i)
  {
    for (j = 1; j <= n; ++j)
    {
      fa[j] = j;
    }

    for (j = 0; j < m; ++j)
    {
      if (es[j].l <= es[i].l)
      {
        int x = Find(es[j].a);
        int y = Find(es[j].b);
        if (x != y)
        {
          fa[x] = y;
        }
        if (Find(1) == Find(n))
        {
          ans = max(ans, es[j].r - es[i].l + 1);
          break;
        }
      }
    }
  }
  if (ans == 0) printf("Nice work, Dima!\n");
  else printf("%d\n", ans);
  return 0;
}
