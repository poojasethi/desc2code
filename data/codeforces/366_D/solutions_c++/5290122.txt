#include <cstdio>
#include <vector>
#include <utility>
#include <algorithm>
#define st first
#define nd second.first
#define rd second.second
#define mp(a,b,c) make_pair(a,make_pair(b,c))
#define s (p+k+1)/2
using namespace std;

const int N=1005;

int vis[N],R,n;

vector <int> pos;
vector <pair<int,pair<int,int> > > G[N];

void dfs(int a,int p,int k){
	vis[a]=R;
	for (int i=0;i<G[a].size();i++){
		if (vis[G[a][i].st]!=vis[a])
			if (G[a][i].nd<=p&&G[a][i].rd>=k) dfs(G[a][i].st,p,k);
	}
}

bool mozna(int d){
	for (int i=0;i<pos.size();i++){
		++R;
		dfs(1,pos[i],pos[i]+d-1);
		if (vis[n]==R) return 1;
	}
	return 0;
}

int main(){
	int m,a,b,c,d;
	scanf("%d%d",&n,&m);
	for (int i=0;i<m;i++){
		scanf("%d%d%d%d",&a,&b,&c,&d);
		G[a].push_back(mp(b,c,d));
		G[b].push_back(mp(a,c,d));
		pos.push_back(c);
	}
	sort(pos.begin(),pos.end());
	pos.resize(unique(pos.begin(),pos.end())-pos.begin());
	int p=0,k=1000000;
	while(p<k){
		if (mozna(s)) p=s;
		else k=s-1;
	}
	if (p) printf("%d\n",p);
	else printf("Nice work, Dima!\n");
	return 0;
}
