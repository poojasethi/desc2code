#include <cstdio>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <cstring>	

using namespace std;

struct Node
{
	int x,y,l,r;
}a[3005];
int fa[3005];
bool cmp(Node a,Node b)
{
	return a.r>b.r;
}
int getfather(int x)
{
	if (fa[x]!=x) fa[x]=getfather(fa[x]);
	return fa[x];
}
void union1(int x,int y)
{
	int xx=getfather(x),yy=getfather(y);
	if (xx!=yy) fa[xx]=yy;
}
int ans,n,m,dql,dqr,dq,dqx,dqy;
int main()
{
	ans=-19950920;
	scanf("%d%d",&n,&m);
	for (int i=1;i<=m;++i)
	{
		scanf("%d%d%d%d",&a[i].x,&a[i].y,&a[i].l,&a[i].r);
	}
	sort(a+1,a+m+1,cmp);
	for (int i=1;i<=m;++i)
	{
		dql=a[i].l;dqr=0;
		for (int j=1;j<=n;++j) fa[j]=j;
		for (int j=1;j<=m;++j)
		{
			dqx=a[j].x;dqy=a[j].y;
			if (dql>=a[j].l&&dql<=a[j].r) union1(dqx,dqy);
			if (getfather(1)==getfather(n))
			{
				dqr=a[j].r;
				break;
			}
		}
		dq=dqr-dql+1;
		ans=max(ans,dq);
	}
	if (ans<=0) printf("Nice work, Dima!\n");
	else printf("%d\n",ans);
	return 0;
}
 	 	   	 									 	 	 	 	  	