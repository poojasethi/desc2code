#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>
using namespace std;
#define N 3005
struct Edge
{
    int u,v,l,r;
    bool operator < (const Edge &edge)const
    {
        return r>edge.r;
    }
}e[N];
int father[1005];
int find(int x)
{
    if(father[x]!=x) father[x] = find(father[x]);
    return father[x];
}
void merge(int x,int y)
{
    int xf = find(x);
    int yf = find(y);
    if(xf==yf) return ;
    father[xf] = yf;
}
int main()
{
    int n,m;
    cin>>n>>m;
    for(int i=0; i<m; i++) cin>>e[i].u>>e[i].v>>e[i].l>>e[i].r;
    sort(e,e+m);
    int ans = 0;
    for(int i=0; i<m; i++)
    {
        for(int j=1; j<=n; j++) father[j] = j;
        for(int j=0; j<m; j++)
        {
            if(e[j].l<=e[i].l) 
            {
                merge(e[j].u,e[j].v);
                if(find(1)==find(n)) ans = max(ans,e[j].r-e[i].l+1);
            }
        }
    }
    if (!ans) puts("Nice work, Dima!"); 
    else printf("%d\n",ans);
    return 0;
}