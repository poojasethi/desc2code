#include <stdio.h>
#include <algorithm>
using namespace std;
struct abc{
    int x, y, l, r;
    bool operator < (const abc &a) const{
        return l < a.l;
    }
}c[3010];
int u[1010];
void init(){
    for (int i = 0; i < 1010; i++) u[i] = i;
}
int find(int x){
    if (u[x] == x) return x;
    return u[x] = find(u[x]);
}
void merge(int x, int y){
    x = find(x), y = find(y);
    u[x] = y;
}
int main(){
    int n, m, i, j, best = -1;
    scanf("%d%d", &n, &m);
    for (i = 0; i < m; i++) scanf("%d%d%d%d", &c[i].x, &c[i].y, &c[i].l, &c[i].r);
    sort(c, c + m);
    for (i = 0; i < m; i++){
        init();
        for (j = 0; j < m; j++){
            if (c[j].l > c[i].r) break;
            if (c[j].r < c[i].r) continue;
            merge(c[j].x, c[j].y);
            if (find(1) == find(n)){
                best = max(best, c[i].r - c[j].l + 1);
                break;
            }
        }
    }
    if (best < 0) printf("Nice work, Dima!\n");
    else printf("%d\n", best);
    return 0;
}
