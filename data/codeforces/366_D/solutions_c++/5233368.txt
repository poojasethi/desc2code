#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
using namespace std;
struct edge
{
    int u,v,l,r;
}e[3005];
int m,n;
int ans;
int f[1005];
bool cmp(edge a,edge b)
{
    return a.l<b.l;
}
int find(int x)
{
    if(f[x]==x)return x;
    f[x]=find(f[x]);
    return f[x];
}
void un(int x,int y)
{
    x=find(x);
    y=find(y);
    if(x<y)f[y]=x;
    else f[x]=y;
}
int main()
{
    scanf("%d%d",&n,&m);
    for(int i=0;i<m;i++)
    {
        scanf("%d%d%d%d",&e[i].u,&e[i].v,&e[i].l,&e[i].r);
    }
    sort(e,e+m,cmp);
    ans=0;
    for(int i=0;i<m;i++)
    {
        for(int j=1;j<=n;j++)f[j]=j;
        for(int j=0;j<m;j++)
        {
            if(e[j].l>e[i].r)break;
            if(e[j].r>=e[i].r)un(e[j].u,e[j].v);
            if(find(1)==find(n))
            {
                ans=max(ans,e[i].r-e[j].l+1);
                break;
            }
        }
    }
    if(ans)cout<<ans<<endl;
    else cout<<"Nice work, Dima!"<<endl;
    return 0;
}
