#include<cstdio>
#include<queue>
#include<algorithm>
using namespace std;

int n,m;
struct edge{int u,v,l,r;}e[6005];
int last[1005],next[6005];
int a[3005];
int dp[1005];
bool inQueue[1005];
int q[6000000];

main(){
  scanf("%d%d",&n,&m);
  for(int i=1;i<=n;i++)last[i]=-1;
  for(int i=0,j=0;i<m;i++){
    int u,v,l,r;
    scanf("%d%d%d%d",&u,&v,&l,&r);
    e[j]={u,v,l,r};
    next[j]=last[u];
    last[u]=j++;
    e[j]={v,u,l,r};
    next[j]=last[v];
    last[v]=j++;
    a[i]=l;
  }
  sort(a,a+m);
  m=unique(a,a+m)-a;
  int ans=0;
  for(int i=0;i<m;i++){
    int lo=a[i],f=0,l=1;
    fill(dp,dp+n+1,-1);
    dp[1]=1000006;
    q[0]=1;
    inQueue[1]=1;
    while(f!=l){
      int u=q[f++];
      for(int i=last[u];i>=0;i=next[i]){
	int v=e[i].v;
	if(e[i].l<=lo&&dp[v]<min(dp[u],e[i].r)){
	  dp[v]=min(dp[u],e[i].r);
	  if(!inQueue[v]){
	    inQueue[v]=1;
	    q[l++]=v;
	  }
	}
      }
      inQueue[u]=0;
    }
    ans=max(ans,dp[n]-lo+1);
  }
  printf(!ans?"Nice work, Dima!\n":"%d\n",ans);
}
