/*
 * Inspired in code of tourist__2, submission 5355303 in codeforces.com
 *
 */


#include <iostream>
#include <algorithm>
using namespace std;

struct edge
{
    int a, b, l, r;
} g[3005];

bool comp(edge a, edge b)
{
    return a.r > b.r;
}

int n, m, f[1005];
int find(int x)
{
    if (f[x] == x) return x;
    f[x] = find(f[x]);
    return f[x];
}

int main()
{
    cin >> n >> m;
    for(int i = 1; i <= m; i++)
        cin >> g[i].a >> g[i].b >> g[i].l >> g[i].r;
    int ans = 0;
    sort(g+1,g+m+1,comp);

    for(int i = 1; i <= m; i++) //using the i-th edge
    {
        for(int z = 0; z <= n; z++) f[z] = z;
        for(int j = 1; j <= m; j++)
            if (g[j].l <= g[i].l)
            {
                int x = find(g[j].a), y = find(g[j].b);
                if (x != y) f[x] = y;
                if (find(1) == find(n)) { ans = max(ans,1 + g[j].r - g[i].l); break; }
            }
    }
    if (ans) cout << ans << endl;
    else cout << "Nice work, Dima!" << endl;
}
