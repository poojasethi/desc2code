#include<cstdio>
#include<algorithm>
using namespace std;

struct edge{
  int u,v,l,r;
};

int n,m;
edge e[6005];
int last[1005],next[6005];
int a[3005];
int found[1005],ff;

inline bool dfs(int u,int l,int r){
  if(u==n)return 1;
  found[u]=ff;
  for(int i=last[u];i>=0;i=next[i]){
    if(e[i].l<=l&&r<=e[i].r&&found[e[i].v]!=ff&&dfs(e[i].v,l,r))return 1;
  }
  return 0;
}

inline bool can(int len){
  for(int i=0;i<m;i++){
    ff++;
    if(dfs(1,a[i],a[i]+len-1))return 1;
  }
  return 0;
}

main(){
  scanf("%d%d",&n,&m);
  for(int i=1;i<=n;i++)last[i]=-1;
  for(int i=0,j=0;i<m;i++){
    int u,v,l,r;
    scanf("%d%d%d%d",&u,&v,&l,&r);
    e[j]={u,v,l,r};
    next[j]=last[u];
    last[u]=j++;
    e[j]={v,u,l,r};
    next[j]=last[v];
    last[v]=j++;
    a[i]=l;
  }
  sort(a,a+m);
  m=unique(a,a+m)-a;
  int lo=1,hi=1e6;
  while(lo<=hi){
    int mid=lo+hi>>1;
    can(mid)
      ?lo=mid+1
      :hi=mid-1;
  }
  printf(!hi?"Nice work, Dima!\n":"%d\n",hi);
}
