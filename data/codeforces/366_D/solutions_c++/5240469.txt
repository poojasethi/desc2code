#include<iostream>
#include<algorithm>
using namespace std;
class node
{
public:
    int a,b,l,r;
    void input(){cin>>a>>b>>l>>r;}
    //bool operator >(const node &a){return l>a.l;}
};
bool cmp(node a,node b){return a.l<b.l;}
node edge[3333];
int n,m;
int u[1111];
void init()
{
    for(int i=0;i<=n;i++)u[i]=i;
}
int find(int x){return x==u[x]?x:x=find(u[x]);}
bool merge(int x,int y)
{
    return u[find(x)]=find(y);
}
int main()
{
    cin>>n>>m;
    for(int i=0;i<m;i++)
        edge[i].input();
    sort(edge,edge+m,cmp);
    int ans=0;
    for(int i=0;i<m;i++)
    {
        bool mark=false;
        int j;
        init();
        for(j=0;j<m;j++)
        {
            if(edge[j].r<edge[i].r)continue;
            if(edge[j].l>edge[i].r)break;
            merge(edge[j].a,edge[j].b);
            if(find(1)==find(n)){mark=true;break;}
        }
        if(mark)ans=max(ans,edge[i].r-edge[j].l+1);
    }
    ans==0?cout<<"Nice work, Dima!"<<endl:cout<<ans<<endl;
    return 0;
}
