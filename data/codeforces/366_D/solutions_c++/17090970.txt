#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
int n, m, f[1010];
struct point
{
	int s, e, l, r;
}p[3010];

int cmp(const void *a, const void *b)
{
	return (*(struct point *)a).l - (*(struct point *)b).l;
}
int find(int x)
{
	if(x != f[x])
	f[x] = find(f[x]);
	return f[x];
}

void merge(int x, int y)
{
	x = find(x);
	y = find(y);
	if(x != y)
	f[y] = x;
}

int main()
{
	int i, j, k;
	while(scanf("%d%d", &n, &m) != EOF)
	{
		for(i = 0; i < m; ++i)
		scanf("%d%d%d%d", &p[i].s, &p[i].e, &p[i].l, &p[i].r);
		qsort(p, m, sizeof(p[0]), cmp);
		int ans = 0;
		for(i = 0; i < m; ++i)
		{
			for(j = 1; j <= n; ++j)
			f[j] = j;
			for(j = 0; j < m; ++j)
			{
				if(p[j].l > p[i].r)
				break;
				if(p[j].r < p[i].r)
				continue;
				merge(p[j].s, p[j].e);
				if(find(1) == find(n))
				{
					if(p[i].r - p[j].l + 1> ans)
					ans = p[i].r - p[j].l + 1;
					break;
				}
			}
		}
		if(ans)
		printf("%d\n", ans);
		else
		printf("Nice work, Dima!\n");
	}
	return 0;
}

        		 	 	 	 	     	   	 	