#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <utility>
using namespace std;

int n,m;

struct node
{
    int x,y,l,r;
}e[3030];



int d[3030];

bool cmp(node x,node y)
{
    return x.r>y.r;
}

inline int findf(int x)
{
    while(d[x]!=x) x=d[x];
    return x;
}

int xx,yy;
inline void uu(int x,int y)
{
    xx=findf(x); d[x]=xx;
    yy=findf(y); d[y]=yy;
    d[xx]=yy;
}

inline int go(int low)
{
    for(int i=1;i<=n;++i) d[i]=i;
    for(int i=1;i<=m;++i)
    {
        if(e[i].l<=low) uu(e[i].x,e[i].y);
        if(findf(1)==findf(n)) return e[i].r-low+1;
    }
    return 0;
}

int main()
{
    scanf("%d%d",&n,&m);
    
    for(int i=1;i<=m;++i)
    {
        scanf("%d%d%d%d",&e[i].x,&e[i].y,&e[i].l,&e[i].r);
        d[i]=i;
    }
    sort(e+1,e+m+1,cmp);
    int ma=0;
    
    for(int i=1;i<=m;++i)
    {
        ma=max(ma,go(e[i].l));
    }
    if(ma==0) printf("Nice work, Dima!");
    else printf("%d\n",ma);
    
    return 0;
}
