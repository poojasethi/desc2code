#include <algorithm>
#include <iostream>
#include <cassert>
#include <cstdio>
#include <cstring>
#include <vector>

#define NMAX 100010

using namespace std;

vector<pair<int,int> > adj[NMAX];

int sub[NMAX];

long long pairs[NMAX];

int sum;

int wt[NMAX];

int N;

void init(int v, int p, int idx){
	int i;

	for(i = 0; i < (int)adj[v].size(); ++i){
		if(adj[v][i].first == p) continue;
		init(adj[v][i].first,v,adj[v][i].second);
		sub[v] += sub[adj[v][i].first];
	}

	++sub[v];
	if(idx >= 0) pairs[idx] = 1LL*sub[v]*(N-sub[v]);
}

int main(){
	int i,a,b;

	scanf("%d",&N);

	for(i = 0; i < N-1; ++i){
		scanf("%d%d%d",&a,&b,&wt[i]);
		--a,--b;
		adj[a].push_back(make_pair(b,i));
		adj[b].push_back(make_pair(a,i));
	}

	init(0,-1,-1);
	int q;

	scanf("%d",&q);

	long long sum = 0;

	for(i = 0; i < N-1; ++i){
		sum += wt[i]*pairs[i];
	}

	double exp,all;

	all = (1LL*N*(N-1))/2.0;

	while(q--){
		scanf("%d%d",&i,&a);
		--i;
		sum -= (wt[i]-a)*pairs[i];
		wt[i] = a;
		exp = (sum*3.0)/all;
		printf("%.8f\n",exp);
	}

	return 0;
}
