#include <bits/stdc++.h>
using namespace std;

typedef long long ll;

const int MAXN = 100005;
ll N, Q, st[MAXN], res;
vector<int> adj[MAXN], A, B, W;

void dfs(int v, int p, ll w){
  st[v] = 1;
  for(int i = 0; i < adj[v].size(); i++){
    int n = A[adj[v][i]] ^ B[adj[v][i]] ^ v;
    if(n == p) continue;
    dfs(n, v, W[adj[v][i]]);
    st[v] += st[n];
  }
  res += w * st[v] * (N - st[v]);
}

int main(){
  cin >> N;
  for(int i = 1; i < N; i++){
    int a, b, l;
    cin >> a >> b >> l;
    a--, b--;
    adj[a].push_back(A.size());
    adj[b].push_back(B.size());
    A.push_back(a);
    B.push_back(b);
    W.push_back(l);
  }
  dfs(0, -1, 0);
  cin >> Q;
  cout << fixed << setprecision(6);
  while(Q--){
    int r, w;
    cin >> r >> w;
    r--;
    if(st[A[r]] > st[B[r]]) swap(A[r], B[r]);
    res -= (W[r] - w) * st[A[r]] * (N - st[A[r]]);
    cout << 6.0 * res / N / (N - 1) << '\n';
    W[r] = w;
  }
}
