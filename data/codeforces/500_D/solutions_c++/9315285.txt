#include <cstdio>
#include <vector>
using namespace std;
vector<int> e[100010], en[100010];
int a[100010], b[100010], l[100010];
int w[100010], ch[100010];
void dfs(int v, int p = -1) {
	ch[v] = 1;
	for (int i = 0; i < e[v].size(); i++) {
		int to = e[v][i];
		if (to == p) continue;
		dfs(to, v);
		w[en[v][i]] = ch[to];
		ch[v] += ch[to];
	}
}
double ww[100010];
int main() {
	int n, q, x, y;
	scanf("%d", &n);
	for (int i = 0; i < n - 1; i++) {
		scanf("%d%d%d", &a[i], &b[i], &l[i]);
		--a[i]; --b[i];
		e[a[i]].push_back(b[i]);
		e[b[i]].push_back(a[i]);
		en[a[i]].push_back(i);
		en[b[i]].push_back(i);
	}
	dfs(0);
	double ans = 0;
	for (int i = 0; i < n - 1; i++) {
		ww[i] = 1.0 * w[i] / n * (n - w[i]) / (n - 1) * (n - 1 - w[i]) / (n - 2) * 6 + 1.0 * w[i] / n * (w[i] - 1) / (n - 1) * (n - w[i]) / (n - 2) * 6;
		ans += ww[i] * l[i];
	}
	scanf("%d", &q);
	while (q--) {
		scanf("%d%d", &x, &y);
		--x;
		ans -= ww[x] * (l[x] - y);
		printf("%.12f\n", ans);
		l[x] = y;
	}
	return 0;
}
