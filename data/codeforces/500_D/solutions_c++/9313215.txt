#include <iostream>
#include <cstdio>
#include <set>
#include <map>
#include <string>
#include <cstring>
#include <vector>
using namespace std;

vector <int> road[110000];
int n, q, x, y, sum[110000], a[110000], b[110000], w[110000];
long long weight[110000];

void dfs(int k, int p) {
	sum[k] = 1;
	for (int i = 0; i < (int) road[k].size(); i++) {
		int t = a[road[k][i]] + b[road[k][i]] - k;
		if (t != p) {
			dfs(t, k);
			sum[k] += sum[t];
		}
		weight[road[k][i]] = 1LL * sum[t] * (n - sum[t]);
	}
}

int main() {
	scanf("%d", &n);
	for (int i = 1; i < n; i++) {
		scanf("%d%d%d", &a[i], &b[i], &w[i]);
		road[a[i]].push_back(i);
		road[b[i]].push_back(i);
	}
	dfs(1, 0);
	long long ans = 0;
	for (int i = 1; i < n; i++)
		ans += weight[i] * w[i];
	scanf("%d", &q);
	while (q--) {
		scanf("%d%d", &x, &y);
		ans -= weight[x] * w[x];
		w[x] = y;
		ans += weight[x] * w[x];
		printf("%.10lf\n", 3.0 * ans / (1LL * n * (n - 1) / 2));
	}
	return 0;
}