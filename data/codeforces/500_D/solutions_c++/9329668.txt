#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <map>
#define N 100010
using namespace std;
typedef long long ll;

map<int, int> m[N];
bool visit[N];
ll use[N];
int l[N];
int n;
int a, b;
ll ans;
ll dfs(int root) {
	visit[root] = true;
	ll sum = 1;
	if (m[root].empty())
		return sum;
	
	for (map<int, int>::iterator it = m[root].begin(); it != m[root].end(); it++) {
		if (visit[it->first])
			continue;
		ll k = dfs(it->first);
		use[it->second] = k * (n - k);
		ans += use[it->second] * l[it->second];
		sum += k;
	}
	return sum;
}
int main() {
	cin >> n;
	for (int i = 1; i < n; i++) {
		cin >> a >> b >> l[i];
		m[a][b] = i;
		m[b][a] = i;
	}
	ans = 0;
	dfs(1);
	
	int q, r, w;
	cin >> q;
	while (q--) {
		cin >> r >> w;
		ans -= (l[r] - w) * use[r];
		l[r] = w;
		printf("%.10lf\n", ans * 6.0 / n / (n - 1));
	}

	return 0;
}