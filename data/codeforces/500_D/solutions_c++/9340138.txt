#include <iostream>
#include <stdio.h>
#include <list>
using namespace std;

typedef long long ll;

ll n, l[100500], ans = 0, us[100500] = {0};
list<pair<int, int> > ls[100500];

bool vs[100500] = {false};
ll dfs(int root) {
	ll res = 1;
	vs[root] = true;
	
	list<pair<int, int> >::iterator it = ls[root].begin();
	for(; it != ls[root].end(); it++) {
		if(!vs[it->first]) {
			ll k = dfs(it->first);
			
			us[it->second] = k * (n - k);
			
			ans += us[it->second] * l[it->second];
			
			res += k;
		}
	}
	
	return res;
}

int main() {
	cin >> n;
	
	int x, y;
	for(int i = 0; i < n - 1; i++) {
		cin >> x >> y >> l[i];
		
		x--, y--;
		
		ls[x].push_back(make_pair(y, i));
		ls[y].push_back(make_pair(x, i));
	}
	
	dfs(1);
	
	int q;
	cin >> q;
	
	while(q--) {
		cin >> x >> y;
		x--;
		ans -= (l[x] - y) * us[x];
		
		l[x] = y;
		
		printf("%.10f\n", 6.0 * ans / n / (n - 1));
	}
	
	return 0;
}