#include<bits/stdc++.h>
#include<string.h>
using namespace std;
typedef long long ll;
vector< pair<int,int> > v[100005];
int from[100005],to[100005],cost[100005];
int size[100005];
ll pairs[100005];
int n;
void dfs(int cur,int pr)
{
size[cur] = 1;
int l = v[cur].size();
int i,x;
for(i=0;i<l;i++)
{
	x = v[cur][i].first;
	if(x==pr)continue;
	dfs(x,cur);
	size[cur] += size[x];
	pairs[v[cur][i].second] = size[x] * 1LL *  (n-size[x]);
}
}
int main()
{
	
	scanf("%d",&n);
	int x,y,z;
	int i;
	for(i=0; i<n-1;i++)
	{
		scanf("%d%d%d",&from[i],&to[i],&cost[i]);
		x = from[i]-1;
		y = to[i] -1;
		v[x].push_back( make_pair(y,i));
		v[y].push_back( make_pair(x,i));
	}
	dfs(0,-1);
	long long total = 0;
	for(i=0;i<n-1;i++)
		total+= pairs[i] * cost[i];
	//cout<<" total is "<<total<<endl;
	int qry ;
	scanf("%d",&qry);
	double q = 6.0 / n / (n - 1);
	for(i=0;i<qry;i++)
	{
		scanf("%d%d",&x,&z);
		total -= pairs[x-1] * (cost[x-1] - z);
		cost[x-1] = z;
		 printf("%.7f\n", q * total);
	}
}