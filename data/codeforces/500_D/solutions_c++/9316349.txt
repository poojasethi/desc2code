#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
using namespace std;
long long zz[200000],f[200000],b[200000],y,n,ans;
vector<int> ed[200000];
int xx[200000],yy[200000],m,x;
void dfs(int x, int h, int y) {
    b[x]=h;
    f[x]=1;
    for (int i=0;i<ed[x].size();i++) {
        int to=ed[x][i];
        if (to==y) continue;
        dfs(to,h+1,x);
        f[x]=f[to]+f[x];
    }
}
int main() {
    ios_base::sync_with_stdio(0);
    cin >> n;
    for (int i=1;i<=n-1;i++) {
        cin >> xx[i] >> yy[i] >> zz[i];
        ed[xx[i]].push_back(yy[i]);
        ed[yy[i]].push_back(xx[i]);
    }
    dfs(1,1,0);
    for (int i=1;i<=n;i++) {
        if (b[xx[i]]>b[yy[i]]) swap(xx[i],yy[i]);
        ans+=zz[i]*f[yy[i]]*(n-f[yy[i]]);
    }
    cin >> m;
    cout.precision(7);
    for (int i=1;i<=m;i++) {
        cin >> x >> y;
        ans-=(zz[x]-y)*f[yy[x]]*(n-f[yy[x]]);
        zz[x]=y;
        cout << fixed << (1.0000000*ans*6)/n/(n-1) << "\n";
    }
    return 0;
}
