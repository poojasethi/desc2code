#include <cstdio>
#include <vector>
using namespace std;
typedef long long LL;
const int N = 100005;
struct edge { int x, y, w, n; } e[N];
vector<int> a[N];
int n, m;
int dfs(int x, int p) {
	int s = 1;
	for (int i = 0; i < a[x].size(); i++) {
		int y = e[a[x][i]].x^e[a[x][i]].y^x;
		if (y == p) continue;
		e[a[x][i]].n = dfs(y, x);
		s += e[a[x][i]].n;
	}
	return s;
}
LL C3(LL n) { return n*(n-1)*(n-2)/6; }
int main() {
	scanf("%d", &n);
	for (int i = 1; i < n; i++) {
		scanf("%d%d%d", &e[i].x, &e[i].y, &e[i].w);
		a[e[i].x].push_back(i);
		a[e[i].y].push_back(i);
	}
	dfs(1, 0);
	double ans = 0;
	for (int i = 1; i < n; i++) {
		double t = C3(n)-C3(e[i].n)-C3(n-e[i].n);
		ans += e[i].w*(t/C3(n));
	}
	scanf("%d", &m);
	while (m--) {
		int id, w;
		scanf("%d%d", &id, &w);
		double t = C3(n)-C3(e[id].n)-C3(n-e[id].n);
		ans -= e[id].w*(t/C3(n));
		e[id].w = w;
		ans += e[id].w*(t/C3(n));
		printf("%.9lf\n", 2*ans);
	}
	return 0;
}
