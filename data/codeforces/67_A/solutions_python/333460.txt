import sys

def read():
    return sys.stdin.readline().replace('\r', '').replace('\n', '')

class Item():
    def __init__(self, value):
        self.value = value
        
    def __repr__(self):
        return str(self.value)

class Node():
    def __init__(self, operation, left, right):
        self.operation = operation
        self.left = left
        self.right = right
        
    def __repr__(self):
        return self.operation

n = int(read())
marks = [k for k in read()]
items = [Item(1) for i in range(n)]
nodes = [Node(operation=marks[i], left=items[i], right=items[i+1]) for i in range(n-1)]


for i in range(n):
    for node in nodes:
        if node.operation == 'L':
            while node.left.value <= node.right.value:
                node.left.value += 1
        elif node.operation == 'R':
            while node.left.value >= node.right.value:
                node.right.value += 1
        elif node.operation == '=':
            if node.left.value < node.right.value:
                node.left.value += node.right.value - node.left.value
            elif node.left.value > node.right.value:
                node.right.value += node.left.value - node.right.value
    
print ' '.join([str(k) for k in items])
        
    
    



