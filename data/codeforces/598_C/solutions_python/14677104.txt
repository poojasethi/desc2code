import sys
sys.setrecursionlimit(1000000)

n = int(raw_input())
v = []
for i in xrange(n):
 x, y = map(int, raw_input().split())
 v.append((x,y,i+1))


def cmpa(a, b):
 if a[0] * b[0] < 0:
  return a[0] - b[0]
 return a[0] * b[1] - a[1] * b[0]

def cmpb(aa, bb):
 a1 = aa[0]
 a2 = aa[1]
 b1 = bb[0]
 b2 = bb[1]
 va = a1[0] * a2[0] + a1[1] * a2[1]
 va = va * abs(va)
 vb = b1[0] * b2[0] + b1[1] * b2[1]
 vb = vb * abs(vb)
 vb *= (a1[0] * a1[0] + a1[1] * a1[1] ) * (a2[0] * a2[0] + a2[1] * a2[1]);
 va *= (b1[0] * b1[0] + b1[1] * b1[1] ) * (b2[0] * b2[0] + b2[1] * b2[1]);
 return 1 if vb - va > 0 else (-1 if vb - va else 0)

v.sort(cmp = cmpa)
u = []
for i in xrange(n):
 u.append((v[i], v[(i+1)%n]))
res = u[0]
for o in u:
 if cmpb(res, o) > 0:
  res = o
print res[0][2], res[1][2]
