import math

def sqr(x):
    return x * x

def getLen(x, y):
    return math.sqrt(sqr(x) + sqr(y))

def getAngle(x, y):
    angle = math.asin(abs(y) / getLen(x, y))
    if x >= 0 and y >= 0:
        return angle
    elif x <= 0 and y >= 0:
        return math.pi - angle
    elif x <= 0 and y <= 0:
        return math.pi + angle
    else:
        return math.pi * 2 - angle

def getSinAbs(x, y):
    return (sqr(x[0] * y[1] - x[1] * y[0]), (sqr(x[0]) + sqr(x[1])) * (sqr(y[0]) + sqr(y[1])))
    
def main():
    n = int(raw_input())
    lt = []
    for i in xrange(n):
        x, y = map(int, raw_input().split())
        lt.append((x, y, i + 1, getAngle(x, y)))
    
    lt.sort(cmp = lambda x, y: cmp(x[3], y[3]))
    
    minn = math.pi * 2
    minsin = (0, 0)
    ans_idx = (1, 2)
    
    for i in xrange(n):
        angle = lt[i][3] - lt[i-1][3]
        angle = max(angle, -angle)
        angle = min(angle, math.pi * 2 - angle)
        sinValue = getSinAbs(lt[i], lt[i - 1])
        
        if abs(angle - minn) < 1e-6:
            if minn < math.pi / 2:
                if sinValue[0] * minsin[1] < minsin[0] * sinValue[1]:
                    minn = angle
                    minsin = sinValue
                    ans_idx = (lt[i][2], lt[i - 1][2])
            else:
                if sinValue[0] * minsin[1] > minsin[0] * sinValue[1]:
                    minn = angle
                    minsin = sinValue
                    ans_idx = (lt[i][2], lt[i - 1][2])
        elif angle < minn:
            minn = angle
            minsin = sinValue
            ans_idx = (lt[i][2], lt[i - 1][2])
            
    print ans_idx[0], ans_idx[1]

if __name__ == '__main__':
    main()