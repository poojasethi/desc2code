#include <iostream>
#include <algorithm>
#include <cmath>
using namespace std;

const long double PI = 3.141592653589793238462643383279502884197169399375105820974944;
const int MAXN = 100100;
int N;
pair<long double, int> R[MAXN];

int main()
{
	ios::sync_with_stdio(0);

	cin >> N;
	for (int i = 0, x, y; i < N; i++)
	{
		cin >> x >> y;
		R[i] = make_pair(atan2(y, x), i);
		if (y < 0)
			R[i].first += 2 * PI;
	}

	sort(R, R + N);

	long double best = 2*PI - R[N - 1].first + R[0].first;
	int idx1 = R[0].second, idx2 = R[N - 1].second;
	for (int i = 1; i < N; i++)
		if (R[i].first - R[i - 1].first < best)
		{
			best = R[i].first - R[i - 1].first;
			idx1 = R[i].second;
			idx2 = R[i - 1].second;
		}
		
	cout << idx1 + 1 << " " << idx2 + 1 << "\n";
	
	return 0;
}