#!/usr/bin/python3
def filter_long(l):
    if l > 0:
        return 1
    elif l == 0:
        return 0
    else:
        return -1

try:
    k, n, m = map(int, raw_input().split())
    b = [0 for i in range(k)]
    c = [0 for i in range(k)]
    ty = []
    a = map(int, raw_input().split())
    rec = [[] for i in range(k)]
    p = []
    for i in range(n):
        t, x, v = map(int, raw_input().split())
        x -= 1
        ty.append(t)
        if t == 1:
            if v > b[x]:
                b[x] = v
                c[x] = i
        elif t == 2:
            rec[x].append((v, i))
        else:
            if v > 1:
                p.append(((v - 1, 1), i))
    for i in range(k):
        if b[i] > a[i]:
            rec[i].append((b[i] - a[i], c[i]))
        rec[i].sort(cmp=lambda a, b: filter_long(a[0] - b[0] if a[0] != b[0] else a[1] - b[1]))
        last = a[i]
        for j in reversed(rec[i]):
            cur = last + j[0]
            p.append(((cur - last, last), j[1]))
            last = cur
    p.sort(cmp=lambda a, b: filter_long(a[0][0] * b[0][1] - b[0][0] * a[0][1]))
    limit = min(m, len(p))
    print limit
    ans = [[] for i in range(3)]
    for i in range(limit):
        x = p[len(p) - i - 1][1]
        ans[ty[x] - 1].append(x)
    for i in range(3):
        for k in ans[i]:
            print k + 1,
except Exception as e:
    print e
			  		 				   		 			   		   	