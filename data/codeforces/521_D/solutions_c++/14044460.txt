#include <bits/stdc++.h>
#define fi first
#define se second
#define m ((b+s)>>1)
#define umax(a,b) a=max(a,b)
#define umin(a,b) a=min(a,b)
#define foreach(asd,it) for(__typeof(asd.begin()) it=asd.begin();it!=asd.end();it++)

using namespace std;

typedef long long lint;
typedef double db;
typedef pair <lint,lint> ii;
typedef vector <lint> vi;
typedef vector <ii> vii;

const lint maxn=1e5+20;

struct node{
	lint a,b,q;
	
	node(lint _a=0 ,lint _b=0,lint _q=0){
		a=_a , b=_b , q=_q;
	}
	
	friend bool operator <( const node &a , const node &b){
		return a.a*b.b < a.b*b.a;
	}
};

lint N,K,M,ar[maxn],t[maxn];
ii as[maxn];
vii add[maxn],ans;
vector <node> v;

int main(){
	scanf("%lld %lld %lld",&K,&N,&M);
	
	for(lint i=1;i<=K;i++)
		scanf("%lld",&ar[i]);
	
	for(lint i=1;i<=N;i++){
		lint a,b;
		scanf("%lld %lld %lld",&t[i],&a,&b);
		if(t[i]==1)
			umax(as[a],ii(b,i));
		
		if(t[i]==2)
			add[a].push_back(ii(b,i));
		
		if(t[i]==3)
			v.push_back(node(b-1,1,i));// , printf("%lld %lld %lld -- asd\n",b-1,1,i);
	}
	
	for(lint i=1;i<=K;i++){
		if(as[i].fi>ar[i])
			add[i].push_back(ii(as[i].fi-ar[i],as[i].se));
		
		sort(add[i].begin(),add[i].end());
		reverse(add[i].begin(),add[i].end());
	}
	
	for(lint i=1;i<=K;i++)
		for(lint j=0,sum=ar[i];j<add[i].size();j++)
			v.push_back(node(add[i][j].fi,sum,add[i][j].se)) , sum+=add[i][j].fi;// , printf("%lld %lld %lld -- qwe\n",add[i][j].fi,sum-add[i][j].fi,add[i][j].se);
	
	sort(v.begin(),v.end());
	reverse(v.begin(),v.end());
	
	//~ puts("\n**********");
	//~ for(lint i=0;i<v.size();i++)
		//~ printf("%lld ",v[i].q);
	//~ puts("\n**********");
	
	for(lint i=0;i<v.size() && i<M;i++)
		ans.push_back(ii(t[v[i].q] , v[i].q));
	
	sort(ans.begin(),ans.end());
	
	cout << ans.size() << endl;
	for(lint i=0;i<ans.size();i++)
		printf("%lld ",ans[i].se);
	puts("");
	
	return 0;
}
