#include <bits/stdc++.h>

#define	st first
#define	nd second
#define	mp make_pair
#define	pb push_back
#define	lli long long int
#define	all( gg )	gg.begin(),gg.end()
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	FP( ii,aa,bb ) for( lli ii=aa;ii<=bb;ii++ )
#define	FM( ii,aa,bb ) for( lli ii=aa;ii>=bb;ii-- )
#define	debug(ccc)	cout << #ccc << " = " << ccc << endl;

#define	double	long double

#define	mod	1000000007LL
using namespace std;

int	k,n,m;
int	a[200000];

vector<pair<double,int> >	Mult;

vector< pair< pair<int,int>,int > >	arr[200000];
vector<pair<int,int> >	v;

int	h[200000];

bool	cmp( pair<double,int> a,pair<double,int> b ){
	return	h[a.nd]<h[b.nd];
}

int main(){
	cin >> n >> m >> k;
	FP( i,1,n ){
		scanf("%d",a+i);
	}
	FP( i,1,m ){
		int	c,x,p;
		scanf("%d %d %d",&c,&x,&p);
		h[i] = c;
		if( c==3 ){
			Mult.pb( mp((double)p,i) );
		}
		else
			arr[x].pb( mp(mp(c,p),i) );
	}

	FP( i,1,n ){
		if( !arr[i].size() )	continue;
		sort( all( arr[i] ) );
		reverse( all( arr[i] ) );
		while( arr[i].size()>=2 and arr[i].back().st.st==1 and arr[i][arr[i].size()-2].st.st==1 )	arr[i].pop_back();
		if( arr[i].back().st.st==1 )	arr[i].back().st.nd = arr[i].back().st.nd-a[i];
		v.clear();
		foreach( arr[i],it )
			if( it->st.nd>0 )	v.pb( mp(it->st.nd,it->nd) );
		if( !v.size() )	continue;
		sort( all(v) );
		reverse( all(v) );
		lli	t=a[i];
		foreach( v,it ){
			Mult.pb( mp( 1.0*(t+it->st)/t,it->nd ) );
			t += it->st;
		}
	}

	sort( all( Mult ) );
	reverse( all( Mult ) );
	vector< pair<double,int> >	res;
	FP( i,0,min((int)Mult.size(),k)-1 )
		if( Mult[i].st>1.0 )
			res.pb( Mult[i] );
	
	cout << res.size() << endl;
	
	sort( all(res),cmp );
	foreach( res,it )
		cout << it->nd << " ";
	cout << endl;

}
