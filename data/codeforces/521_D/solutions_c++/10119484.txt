#include <iostream>
#include <fstream>
using namespace std;

//ifstream f("wow.in");

#define x first
#define y second
#define mp make_pair
#define LE 100666
#define db double
#define pb push_back
#include <cmath>
#include <algorithm>
#include <vector>
#define f cin

int typ[LE],A[LE],P[LE],val[LE];
pair<int,int> Ass[LE];
vector<pair<db,int> > H[LE];
pair<db,int> R[LE];

bool comp(pair<db,int>i1,pair<db,int> i2)
{
   return (i1>i2);
}

bool comp2(pair<db,int> i1,pair<db,int> i2)
{
   return typ[i1.y]<typ[i2.y];
}

int main()
{
    int n,k,m,i,j,Nr=0;
    f>>k>>n>>m;

    for(i=1; i<=k; ++i) f>>A[i];

    for(i=1; i<=n; ++i)
    {
        f>>typ[i]>>P[i]>>val[i];

        if (typ[i]==1) Ass[P[i]]=max(Ass[P[i]],mp(val[i],i));

        if (typ[i]==2)  H[P[i]].pb(mp(val[i],i));

        if (typ[i]==3)  R[++Nr]=mp(log((db)val[i]),i);
    }

    for(i=1; i<=k; ++i)
        if (Ass[i].x>A[i])
            H[i].pb(mp(Ass[i].x-A[i],Ass[i].y));

    for(i=1; i<=k; ++i)
    {
        sort(H[i].begin(),H[i].end());
        int N=H[i].size();
        db val=A[i];

        for(j=N-1; j>=0; --j)
        {
            db val2=val+H[i][j].x;
            db diff=log(val2)-log(val);
            val=val2;
            R[++Nr]=mp(diff,H[i][j].y);
        }
    }

    if (Nr<m) m=Nr;
    sort(R+1,R+Nr+1,comp);
    sort(R+1,R+m+1,comp2);

    cout<<m<<'\n';

    for(i=1; i<=m; ++i)
        cout<<R[i].y<<" ";

    return 0;
}
