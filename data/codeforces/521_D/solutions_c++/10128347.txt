#include <bits/stdc++.h>
using namespace std;
#define fo(i,a,b) for (int i = (a); i < (b); i++)
#define N 123456
#define pb push_back
#define mp make_pair

int k, m, n, a[N], t[N], sk[N], v[N];
vector<pair<int,int> > ops[N][2], ans;
vector<pair<double,int> > fops;
int main() {
	scanf("%d %d %d", &k, &n, &m);
	fo(i,0,k) scanf("%d", a+i);
	fo(i,0,n) scanf("%d %d %d", t+i, sk+i, v+i), t[i]==3 ? fops.pb(mp(v[i], i)) : ops[sk[i]-1][t[i]-1].pb(mp(v[i], i));
	fo(i,0,k) if (!ops[i][0].empty()) {
		int bst = ops[i][0][0].second;
		fo(j,1,ops[i][0].size()) if (ops[i][0][j].first > v[bst]) bst = ops[i][0][j].second;
		if (v[bst] > a[i]) ops[i][1].pb(mp(v[bst]-a[i], bst));
	}
	fo(i,0,k) {
		sort(ops[i][1].begin(), ops[i][1].end()); reverse(ops[i][1].begin(), ops[i][1].end());
		double slf = a[i];
		fo(j,0,ops[i][1].size()) {
			fops.pb(mp(1 + ops[i][1][j].first/slf, ops[i][1][j].second));
			slf += ops[i][1][j].first;
		}
	}
	sort(fops.begin(), fops.end()); reverse(fops.begin(), fops.end());
	fo(i,0,min(m, (int)fops.size())) ans.pb(mp(t[fops[i].second], fops[i].second));
	sort(ans.begin(), ans.end());
	printf("%d\n", ans.size());
	fo(i,0,ans.size()) printf("%d ", ans[i].second+1);

	return 0;
}