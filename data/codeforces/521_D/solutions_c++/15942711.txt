#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int> P;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
#define pb push_back
#define mp make_pair
#define eps 1e-9
#define INF 2000000000
#define sz(x) ((int)(x).size())
#define fi first
#define sec second
#define all(x) (x).begin(),(x).end()
#define rep(i,n) for(int (i)=0;(i)<(int)(n);(i)++)
#define repn(i,a,n) for(int (i)=(a);(i)<(int)(n);(i)++)
#define EQ(a,b) (abs((a)-(b))<eps)
template<class T> void chmin(T& a,const T& b){if(a>b)a=b;}
template<class T> void chmax(T& a,const T& b){if(a<b)a=b;}
struct st{
	ll a,b; // a/b
	int idx,type;
	st(){}
	st(ll a,ll b,int idx,int type):a(a),b(b),idx(idx),type(type){}
};
bool comp(st a,st b){
	return a.a*b.b > a.b*b.a;
}
bool comp_type(st a,st b){
	return a.type < b.type;
}
int k,n,m;
ll a[100100];
int t[100100],id[100100],b[100100];
int mx[100100],mxid[100100];
vector<P> g[100100];
vector<st> vec;
vector<st> ans;
int main(){
	scanf("%d %d %d",&k,&n,&m);
	for(int i=0;i<k;i++)scanf("%I64d",&a[i]);
	for(int i=0;i<n;i++){
		scanf("%d %d %d",&t[i],&id[i],&b[i]);
		id[i]--;
		int T=t[i],ID=id[i],B=b[i];
		if(T==1){
			if(B>a[ID]&&B>mx[ID]){
				mx[ID]=B;
				mxid[ID]=i;
			}
		}else if(T==2){
			g[ID].pb(P(B,i));
		}else if(T==3){
			if(B>1)vec.pb(st(B-1,1,i,3));
		}
	}
	for(int i=0;i<k;i++){
		if(mx[i]>0)g[i].pb(P(mx[i]-a[i],mxid[i]));
	}
	for(int i=0;i<k;i++){
		sort(all(g[i]),greater<P>());
		ll sum = a[i];
		for(int j=0;j<g[i].size();j++){
			P p = g[i][j];
			vec.pb(st(p.fi,sum,p.sec,t[p.sec]));
			sum += p.fi;
		}
	}
	sort(all(vec),comp);
	for(int i=0;i<min(m,sz(vec));i++)ans.pb(vec[i]);
	sort(all(ans),comp_type);
	printf("%d\n",sz(ans));
	for(int i=0;i<ans.size();i++)printf("%d%c",ans[i].idx+1,(i==sz(ans)-1)?'\n':' ');
	return 0;
}
