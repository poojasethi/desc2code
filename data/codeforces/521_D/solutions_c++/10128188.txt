#include <cstdio>
#include <algorithm>
#include <vector>
#include <functional>
using namespace std;

#define double long double

const int Size=(int)1e5+5;

typedef pair<double,int> data;
#define fi first
#define se second

int k,n,m,a[Size];
data c[Size];
vector<data> e,d[Size];
bool flag[Size];
int type[Size];

bool cmp2(const data &a,const data &b){
	return type[a.se]<type[b.se];
}

int main(){
	scanf("%d%d%d",&k,&n,&m);
	for(int i=1;i<=k;i++) scanf("%d",&a[i]);
	for(int num=1;num<=n;num++){
		int i,b; scanf("%d%d%d",&type[num],&i,&b);
		if(type[num]==1)
			c[i]=max(c[i],data(b,num));
		else
		if(type[num]==2)
			d[i].push_back(data(b,num));
		else
			e.push_back(data(b,num));
	}
	for(int i=1;i<=k;i++){
		if(c[i].fi>a[i]) d[i].push_back(data(c[i].fi-a[i],c[i].se));
		sort(d[i].begin(),d[i].end(),greater<data>());
		double now=a[i];
		for(int j=0;j<d[i].size();j++){
			e.push_back(data((now+d[i][j].fi)/now,d[i][j].se));
			now+=d[i][j].fi;
		}
	}
	m=min(m,(int)e.size());
	nth_element(e.begin(),e.begin()+(m-1),e.end(),greater<data>());
	printf("%d\n",m);
	sort(e.begin(),e.begin()+m,cmp2);
	for(int i=0;i<m;i++) printf("%d ",e[i].se);
}
