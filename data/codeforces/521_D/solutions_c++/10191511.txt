#include<stdio.h>
#include<vector>
#include<algorithm>
#define pb push_back
#define mp make_pair
#define ft first
#define sd second
using namespace std;
typedef pair<double,int> pdi;
const int maxn=100050;
struct Oper
{
	int t,x,b;
};
int K,n,m,a[maxn];
Oper op[maxn];
int as[maxn];
vector<int> ad[maxn];
pdi p[maxn];
int ps=0;
bool cmp(const int &xx,const int &yy) { return op[xx].b>op[yy].b; }
bool cmp_ans(const pdi &xx,const pdi &yy) { return op[xx.sd].t<op[yy.sd].t; }
int main()
{
#ifndef ONLINE_JUDGE
	freopen("data.in","r",stdin);
	freopen("data.out","w",stdout);
#endif
	int i,j,k;
	scanf("%d%d%d",&K,&n,&m);
	for(i=1;i<=K;i++)
		scanf("%d",&a[i]);
	for(i=1;i<=n;i++)
	{
		scanf("%d%d%d",&op[i].t,&op[i].x,&op[i].b);
		if(op[i].t==1)
		{
			op[i].b-=a[op[i].x];
			if(op[i].b>op[as[op[i].x]].b)
				as[op[i].x]=i;
		}
		else if(op[i].t==2)
			ad[op[i].x].pb(i);
		else
			p[ps++]=mp(-op[i].b,i);
	}
	for(i=1;i<=K;i++)
	{
		double t=a[i];
		if(as[i]) ad[i].pb(as[i]);
		sort(ad[i].begin(),ad[i].end(),cmp);
		//for(j=0;j<ad[i].size();j++) printf("%d ",ad[i][j]); printf("\n");
		for(j=0;j<ad[i].size();j++)
			p[ps++]=mp(-(t+op[ad[i][j]].b)/t,ad[i][j]),t+=op[ad[i][j]].b;
	}
	sort(p,p+ps);
	//for(i=0;i<ps;i++) printf("%lf %d\n",p[i].ft,p[i].sd);
	if(ps<m) m=ps;
	sort(p,p+m,cmp_ans);
	printf("%d\n",m);
	for(i=0;i<m;i++)
		printf("%d%c",p[i].sd,i<m-1?' ':'\n');
	return 0;
}
