#include <stdio.h>
#include <vector>
#include <algorithm>
#include <set>
#include <utility>
#include <iostream>
#include <string>
#include <math.h>
#include <string.h>
#include <stack>
#include <iomanip>
#include <map>
#include <queue>
using namespace std;
//printf("%.7f\n", double value);

typedef long long ll;

int k,n,m;
int a[100005];
int t[100005], ind[100005];
double b[100005];

vector<pair<double,int> > add[100005][2];
vector<pair<double,int> > p; //b, i for v;
vector<pair<int,int> > mylist; //type, ind

int main () {

  cin>> k >> n >> m;
  for(int i=0;i<k; i++) {
    cin>> a[i];
  }
  for(int i=0; i<n; i++) {
    cin >> t[i]>> ind[i] >> b[i];
    if(t[i]==3) p.push_back(make_pair(b[i],i));
    else add[ind[i]-1][t[i]-1].push_back(make_pair(b[i],i));
  }

  for(int i=0; i<k; i++) {
    if(add[i][0].size() !=0 ) {
      int am = a[i];
      int id  = -1;
      for(int j=0; j<add[i][0].size(); j++) {
        if(add[i][0][j].first > am) {
          am = add[i][0][j].first;
          id = add[i][0][j].second;
        }
      }
      if(am>a[i]) add[i][1].push_back(make_pair(b[id]-a[i],id));
    }
  }

  for(int i=0; i<k; i++) {
    sort(add[i][1].begin(), add[i][1].end());
    reverse(add[i][1].begin(), add[i][1].end());
    double r=a[i];
    for(int j=0; j<add[i][1].size(); j++) {
      p.push_back( make_pair(1+ add[i][1][j].first/ r, add[i][1][j].second));
      r += add[i][1][j].first;
    }
  }
  sort(p.begin(), p.end());
  reverse(p.begin(), p.end());

  for(int i=0; i<min(m,(int)p.size()); i++) mylist.push_back(make_pair(t[p[i].second],p[i].second));

  cout<< mylist.size()<< endl;
  sort(mylist.begin(), mylist.end());
  for(int i=0; i<mylist.size(); i++)
    cout << mylist[i].second+1 << " ";

  return 0;
}