#include <cstdio>
#include <algorithm>
#include <vector>
#define N 100005
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define fi(a, b, c) for(int a = (b); a < (c); a++)
using namespace std;

int k, n, m, a[N], b[N], c[N], t[N], p[N], v[N], q[N], s, ans[N];
vector<int> opt[N];
double mul[N];

bool cmp1(int a, int b){
	return v[a] > v[b];
}

bool cmp2(int a, int b){
	return mul[a] > mul[b];
}

int main(){
	scanf("%d %d %d", &k, &n, &m);
	
	FI(i, 1, k){
		scanf("%d", &a[i]);
		b[i] = a[i];
	}
	
	FI(i, 1, n){
		scanf("%d %d %d", &t[i], &p[i], &v[i]);
		if(t[i] == 1){
			if(v[i] > b[p[i]]){
				b[p[i]] = v[i];
				c[p[i]] = i;
			}
		}else if(t[i] == 2) opt[p[i]].push_back(i);
		else{
			mul[i] = v[i];
			q[s++] = i;
		}
	}
	
	FI(i, 1, k){
		if(c[i]){
			opt[i].push_back(c[i]);
			v[c[i]] -= a[i];
		}
		
		sort(opt[i].begin(), opt[i].end(), cmp1);
		
		double sum = a[i];
		fi(j, 0, opt[i].size()){
			int d = opt[i][j];
			mul[d] = (sum + v[d]) / sum;
			sum += v[d];
			q[s++] = d;
		}
	}
	
	sort(q, q + s, cmp2);
	m = min(m, s);
	printf("%d\n", m);
	
	s = 0;
	FI(z, 1, 3) fi(i, 0, m) if(t[q[i]] == z) ans[s++] = q[i];
	fi(i, 0, m) printf("%d%c", ans[i], i == m - 1 ? '\n' : ' ');
}

