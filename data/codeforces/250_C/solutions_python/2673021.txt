####################################################
# -*- coding: utf-8 -*-
import sys

w = sys.stdout.write
read = sys.stdin.readline
reads = sys.stdin.read

def r(f=None):
    if f:
        return map(f, read().split())
    else:
        return read().split()

def rs(t,f=None):
    result = []
    result_append = result.append
    for i in xrange(t):
        if f:
            result_append(tuple(map(f, read().split())))
        else:
            result_append(list(read().split()))
    return result


####################################################
import math
sqrt = math.sqrt
from collections import deque


[n, k] = r(int)
ax = r(int)

dd = {}
l2 = ax[0]
dd[l2] = -1
dd[ax[-1]] = dd.get(ax[-1], 0) - 1
for i in xrange(1, len(ax), 1):
    if l2 != ax[i]:
        l1 = ax[i]
        ii = i
        break

for i in xrange(ii+1, len(ax), 1):
    if ax[i] == l1:
        continue
    if l2 == ax[i]:
        d = -2
    else:
        d = -1
    dd[l1] = dd.get(l1, 0) + d
    l2, l1 = l1, ax[i]

res = min(dd.items(), key=lambda x: x[1])
w(str(res[0]))
#print dd