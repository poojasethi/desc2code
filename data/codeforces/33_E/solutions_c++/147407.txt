#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <queue>
using namespace std;
#define   sqr(a)         ((a)*(a))
#define   rep(i,a,b)  for(int i=(a);i<(b);i++)
#define   per(i,a,b)  for(int i=((a)-1);i>=(b);i--)
#define   PER(i,n)     per(i,n,0)
#define   REP(i,n)     rep(i,0,n)
#define   FOREACH(it,c) for(typeof((c).begin()) it=(c).begin();it!=(c).end();++it)
#define   clr(a)      memset((a),0,sizeof (a))
#define   mabs(a)     ((a)>0?(a):(-(a)))
#define   inf         1000000001
#define  MAXT     (31*24*60+100)
#define  MAXN     161
#define  eps      1e-6
int M,N,K;
map<string,int> msi;
char cs[MAXN][MAXN];
int tsum[MAXT];
int Tm[MAXT];
int uset[MAXN];
int edt[MAXN];
int money[MAXN];
int tid[MAXN];
int dp[MAXN][MAXT];
int pre[MAXN][MAXT];
void outtime(int t)
{
    int day=t/(24*60)+1;
    int m=t/60%24;
    int s=t%60;
    printf("%d %02d:%02d",day,m,s);
}
void print(int idx,int t)
{
    if(idx==0) return ;
    print(idx-1,pre[idx][t]);
    if(pre[idx][t]!=t)
    {
        printf("%d ",tid[idx]);
        outtime(Tm[pre[idx][t]+1]);
        printf(" ");
        outtime(Tm[t]);
        printf("\n");
    }
}
int main()
{
    scanf("%d%d%d",&M,&N,&K);
    REP(i,M) scanf("%s",cs[i]);
    REP(i,M)
    {
        int v;scanf("%d",&v);
        msi[string(cs[i])]=v;
    }
    clr(tsum);REP(i,MAXT) tsum[i]=1;
    REP(i,4)
    {
        int a,b,c,d;
        scanf("%d:%d-%d:%d",&a,&b,&c,&d);
        int bg=a*60+b,ed=c*60+d;
        for(int j=0;;j++)
        {
            int offset=j*24*60;
            bool f=false;
            rep(k,offset+bg,offset+ed+1)
            {
                if(k>=MAXT)
                {
                    f=true;break;
                }
                tsum[k]=0;
            }
            if(f)break;
        }
    }
    rep(i,1,MAXT) tsum[i]+=tsum[i-1];
    memset(Tm,0x7f,sizeof Tm);
    PER(i,MAXT) Tm[tsum[i]]=i;
    rep(i,1,N+1)
    {
        char name[MAXN];int a,b,c,m;
        scanf("%s%d%d:%d%d",name,&a,&b,&c,&m);
        tid[i]=i;
        if(msi.count(string(name))>0) uset[i]=msi[string(name)],edt[i]=((a-1)*24+b)*60+c;
        else edt[i]=-1;
        money[i]=m;
    }
    rep(i,1,N+1) rep(j,i+1,N+1)
        if(edt[i]>edt[j])
        {
            swap(edt[i],edt[j]);
            swap(uset[i],uset[j]);
            swap(money[i],money[j]);
            swap(tid[i],tid[j]);
        }
    clr(pre);
    memset(dp,0xff,sizeof dp);dp[0][0]=0;
    REP(i,N)
    {
        REP(j,MAXT) if(dp[i][j]>=0)
        {
            if(dp[i+1][j]<dp[i][j]) dp[i+1][j]=dp[i][j],pre[i+1][j]=j;
            if(edt[i+1]==-1) continue;
            int nj=j+uset[i+1];
            if(nj>=MAXT||Tm[nj]>=edt[i+1]) continue;
            if(dp[i+1][nj]<dp[i][j]+money[i+1]) dp[i+1][nj]=dp[i][j]+money[i+1],pre[i+1][nj]=j;
        }
    }
    int ret=-1,maxi=-1;
    REP(i,MAXT) if(dp[N][i]>ret) ret=dp[N][i],maxi=i;
    int cnt=0;
    int j=maxi;
    PER(i,N+1) if(pre[i][j]!=j) cnt++,j=pre[i][j];
    printf("%d\n%d\n",ret,cnt);
    print(N,maxi);
    return 0;
}
