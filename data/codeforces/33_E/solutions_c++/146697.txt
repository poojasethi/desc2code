#include <map>
#include <cmath>
#include <cstdio>
#include <string>
#include <vector>
#include <cstring>
#include <cstdlib>
#include <utility>
#include <iostream>
#include <algorithm>
#define LL long long
#define pi 3.1415926535897932384626433 
#define sqr(a) ((a)*(a))

using namespace std;
    
const int maxn = 120;
const int maxl = 30 * 24 * 60 + 100;
const int inf  = 100020000;

int n, m, k, ans;
map<string, int> Map;
int st[4], en[4];
int s[maxl], id[maxn];
int opt[maxn][maxl], last[maxn][maxl];
int dead[maxn], Time[maxn], value[maxn];
string name[maxn];

int make(string s)
{
    return ((s[0] - 48) * 10 + (s[1] - 48)) * 60 + (s[3] - 48) * 10 + (s[4] - 48) + 1;
}

int out(int time)
{
    int day = time / 1440, h, m;
    if (time % 1440) day ++;
    cout << day << " ";
    if (time % 1440) time %= 1440; else time = 1440;
    h = time / 60; if (time % 60 == 0) h --;
    m = (time - 1) % 60;
    if (h < 10) cout << "0"; cout << h << ":";
    if (m < 10) cout << "0"; cout << m;
}
    
void print1(int x, int Time)
{
    if (! x) return;
    print1(x - 1, last[x][Time]);
    if (last[x][Time] != Time) ans ++;
}

void print2(int x, int Time)
{
    if (! x) return;
    print2(x - 1, last[x][Time]);
    if (last[x][Time] != Time)
    {
        int y = last[x][Time] + 1;
        while (s[y] == s[y - 1]) y ++;
        cout << id[x] << " ";
        out(y);
        cout << " ";
        out(Time);
        cout << endl;
    }
}

int main()
{
    cin >> m >> n >> k;
    Map.clear();
    //INPUT
    for (int i = 1; i <= m; i ++)
        cin >> name[i];
    for (int i = 1; i <= m; i ++)
    {
        int x; cin >> x;
        Map[name[i]] = x;
    }
    for (int i = 0; i < 4; i ++)
    {
        string s, a, b;
        cin >> s;
        a = s.substr(0, 5);
        b = s.substr(6, 5);
        st[i] = make(a);
        en[i] = make(b);
    }
    m = k * 24 * 60;
    for (int i = 1; i <= n; i ++)
    {
        string s; int day;
        cin >> s;
        if (Map.count(s))
            Time[i] = Map[s]; else Time[i] = m + 100;
        cin >> day >> s >> value[i];
        dead[i] = (day - 1) * 1440 + make(s);
        id[i] = i;
    }
    for (int i = 1; i <= n; i ++)
        for (int j = i + 1; j <= n; j ++)
            if (dead[i] > dead[j])
            {
                swap(Time[i], Time[j]);
                swap(dead[i], dead[j]);
                swap(value[i], value[j]);
                swap(id[i], id[j]);
            }
    //make s[]
    s[0] = 0;
    for (int i = 1; i <= m; i ++)
        s[i] = 1;
    for (int i = 0; i < 4; i ++)
    {
        int x = st[i], y = en[i];
        for (int j = 1; j <= k; j ++)
        {
            for (int p = x; p <= y; p ++)
                s[p] = 0;
            x += 24 * 60;
            y += 24 * 60;
        }
    }
    for (int i = 2; i <= m; i ++)
        s[i] += s[i - 1];
    for (int i = 0; i <= n; i ++)
        for (int j = 0; j <= m; j ++)
            opt[i][j] = -inf;
    opt[0][0] = 0;
    for (int i = 0; i < n; i ++)
        for (int j = 0; j <= m; j ++)
            if (opt[i][j] != -inf)
            {
                //do not choose
                if (opt[i][j] > opt[i + 1][j])
                {
                    opt[i + 1][j] = opt[i][j];
                    last[i + 1][j] = j;
                }
                //choose
                int L = j + 1, R = dead[i + 1] - 1, ans = -1;
                while (L <= R)
                {
                    int mid = (L + R) >> 1;
                    if (s[mid] - s[j] >= Time[i + 1]) ans = mid;
                    if (s[mid] - s[j] >= Time[i + 1]) R = mid - 1; else L = mid + 1;
                }
                if (ans != -1)
                    if (opt[i][j] + value[i + 1] > opt[i + 1][ans])
                    {
                        opt[i + 1][ans] = opt[i][j] + value[i + 1];
                        last[i + 1][ans] = j;
                    }
            }
    ans = -inf; int o;
    for (int i = 0; i <= m; i ++)
        if (opt[n][i] > ans)
        {
            ans = opt[n][i]; o = i;
        }
    cout << ans << endl;
    ans = 0;
    print1(n, o);
    cout << ans << endl;
    print2(n, o); 
    return 0;
}
