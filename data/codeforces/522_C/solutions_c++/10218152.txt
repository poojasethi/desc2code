/*
    DJ ZaK
*/
#include <iostream>
#include<bits/stdc++.h>
#define forn(i, n) for (int i = 0; i < int(n); i++)
using namespace std;

const int INF=1000000000;

int main(){
	int ts;
	scanf("%d", &ts);
	while(ts--){

	int m,k;
	scanf("%d %d", &m, &k);
	vector<int> a(k);
	forn(c,k)
		scanf("%d", &a[c]);
		
	vector<int> b(a);
	vector<int> t(m-1),r(m-1);
	int upset=-1;
	int unknown=0;
	int unknownBeforeUpset=0;
	
	forn(c,m-1){
		scanf("%d %d", &t[c], &r[c]);
		t[c]--;
		if(r[c] && upset==-1)
		upset=c;
		
		if(t[c]==-1){
			unknown++;
			if(upset==-1)
			unknownBeforeUpset++;
		}
		else{
			b[t[c]]--;
		}
	}
	string result(k,'N');
	
	if(upset==-1){
		forn(c,k)
		if(b[c]<=unknown)
		result[c]='Y';
	}
	else{
		vector<bool> usedAfter(k, false);
		for(int c=upset;c<m-1;c++)
		if(t[c]!=-1)
		usedAfter[t[c]]=true;
		
		int minFirstFinished=-1;
		forn(c,k)
		if(!usedAfter[c] && unknownBeforeUpset>=b[c]){
			result[c]='Y';
			if(minFirstFinished==-1 || b[minFirstFinished]>b[c])
			minFirstFinished=c;
		}
		if(minFirstFinished!=-1){
			int restUnknown=unknown-b[minFirstFinished];
			forn(c,k)
			if(b[c]<=restUnknown)
			result[c]='Y';
		} 
	}
	printf("%s\n", result.c_str());
}


    return 0;
}
