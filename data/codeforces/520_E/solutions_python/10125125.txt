
n,k = map(int, raw_input().split())
MOD = int(1e9 + 7)
s = raw_input()
sums = [0]
a = 0
for i in s:
    a += ord(i) - 48
    sums += [a]
s = ' ' + s

def b_pow(base, deg):
    global MOD
    if deg==0: return 1
    else:
        tmp = b_pow(base, deg/2)
        return ((tmp*tmp)%MOD * (base if deg%2 == 1 else 1)) % MOD 

facts = [1]
facts_neg = [1]
for i in xrange(1,n+1):
    facts += [(facts[i-1] * i) % MOD]
    facts_neg += [b_pow(facts[i], MOD-2)]
    
   
    
def comb(n, k):
    global facts, MOD
    return (facts[n] * facts_neg[n-k] * facts_neg[k]) % MOD
    
ans = 0
ten = 1
if k == 0: print int(s) % MOD; exit(0)
for i in xrange(1, n-k+1):
    ans += ((sums[n-i] * comb(n-i-1, k-1) + (ord(s[n-i+1])-48) * comb(n-i, k)) %MOD) * ten % MOD
    ten *= 10
    ten %= MOD
    ans%=MOD
    
print ans