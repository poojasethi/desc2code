#include<iostream>
#include<algorithm>
#include<cstdio>
#include<set>

using namespace std;
#define MAX_N 100010
#define rep(i, n)	for(int i = 0; i < n; i ++)
multiset<int> dist;
multiset<int>::iterator it;
int pos[MAX_N], d[MAX_N];

int main() {
	int n, x, t;
	while(cin >> n) {
		dist.clear();
		rep(i, n) { 
			cin >> t;
			pos[t] = i;
		}
		rep(i, n) {
			cin >> t;
			d[i] = i - pos[t];
			dist.insert(d[i]);
		}
		rep(i, n) {
			it = dist.lower_bound(i);
			int ans = n - 1;
			if(it == dist.end())	it --;
			ans = min(ans, abs(*it - i));
			if(it != dist.begin())
				ans = min(ans, abs(i - *(-- it)));
			printf("%d\n", ans);
			it = dist.lower_bound(d[i]);
			dist.erase(it);
			dist.insert(d[i] + n);
		}
	}
	return 0;
}

