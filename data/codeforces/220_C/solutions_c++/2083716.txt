#include <iostream>
#include <set>
using namespace std;
const int N = 100010;
int a[N],b[N],c[N],d[N],n;
multiset<int> S;
int main() {
    cin>>n;
    for (int i=1;i<=n;++i){cin>>a[i];c[a[i]]=i;}
    for (int i=1;i<=n;++i){cin>>b[i];d[b[i]]=i;}
    S.clear();
    for (int i=1;i<=n;++i) S.insert(d[i]-c[i]);
    for (int i=0;i<n;++i){
        multiset<int>::iterator it = S.lower_bound(i);
        int res=100001;
        if (it!=S.end()) res=min(res,(*it)-i);
        if (it!=S.begin()) res=min(res,i-(*(--it)));
        cout<<res<<"\n";
        int t=b[i+1];
        S.erase(S.find(d[t]-c[t]));
        d[t]=i+n+1;
        S.insert(d[t]-c[t]);
    }
    return 0;
}
