#include <bits/stdc++.h>
using namespace std;

void split(string s, string &l, string &r) {
  int i = 0;
  while (s[i] != '@') l += s[i++];
  i++;
  while (i < s.size()) r += s[i++];
}

void downcasing(string &s) {
  for (int i = 0; i < s.size(); i++) {
    char &c = s[i];
    if (c >= 'A' && c <= 'Z') c = c - 'A' + 'a';
  }
}

string normalize(string s) {
  string ret;
  int k = 0;
  while (k < s.size() && s[k] != '+') k++;
  for (int i = 0; i < k; i++) {
    char c = s[i];
    if (c == '.') continue;
    ret += c;
  }
  return ret;
}

int main() {
  typedef map<string, vector<string> > memo;
  memo m;
  int n;
  cin >> n;
  for (int i = 0; i < n; i++) {
    string email, login, rlogin, domain;
    cin >> email;
    split(email, login, domain);
    downcasing(login);
    downcasing(domain);
    if (domain == "bmail.com") {
      login = normalize(login);
    }
    m[login + '@' + domain].push_back(email);
  }
  cout << m.size() << endl;
  for (memo::iterator it = m.begin(); it != m.end(); ++it) {
    vector<string> a = it->second;
    cout << a.size();
    for (int i = 0; i < a.size(); i++) {
      cout << " " << a[i];
    }
    cout << endl;
  }
}
