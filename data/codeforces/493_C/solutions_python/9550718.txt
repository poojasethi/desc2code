import itertools, math, operator
from collections import *
from decimal import *
from fractions import *
from itertools import combinations, permutations, product
from math import ceil, exp, log, sqrt
from Queue import *
getcontext().prec = 100
MOD = 10 ** 9 + 7
INF = float('+inf')

n = input()
a = sorted(map(int, raw_input().split()))
m = input()
b = sorted(map(int, raw_input().split()))
#m, n = map(int, raw_input().split())
#a = [map(int,raw_input().split())for _ in xrange(n)]
#s = raw_input()
#a = [raw_input() for _ in xrange(n)]

d = min(a) - 1
x = 0
for i in b:
    if i > d:
        break
    else:
        x += 1
ma, mb = 3 * n, x * 2 + (m - x) * 3

x, y, k, l = n, m, 0, 0

for i in xrange(max(n, m)):
    d = a[i] if n > m else b[i]
    for j in xrange(k, n):
        k = j
        if a[j] > d:
            break
        else:
            x -= 1
    for j in xrange(l, m):
        l = j
        if b[j] > d:
            break
        else:
            y -= 1
    x, y = max(0, x), max(0, y)
    A = x * 3 + (n - x) * 2
    B = y * 3 + (m - y) * 2
    #print 'hui', i, A, B, x, y#, a[k], b[l]
    if A - B > ma - mb:
        ma, mb = A, B
    
print '%s:%s' % (ma, mb)