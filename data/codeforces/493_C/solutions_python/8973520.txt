import bisect
n = input()
a = map(int, raw_input().split())
m = input()
b = map(int, raw_input().split())

def check(x, d):
    res = 0
    index = bisect.bisect_left(d, x)
    res += 2 * index
    res += 3 * (len(d) - index)
    return res
ans = -1 * (1 << 30)
a.sort()
b.sort()
for i in range(len(a) + 1):
    if (i == len(a)):
        A = check(a[len(a) - 1] + 1, a)
        B = check(a[len(a) - 1] + 1, b)
    else:
        A = check(a[i], a)
        B = check(a[i], b)
    if (A - B > ans):
        ans = A - B
        x = A
        y = B
for i in range(len(b) + 1):
    if (i == len(b)):
        A = check(b[len(b) - 1] + 1, a)
        B = check(b[len(b) - 1] + 1, b)
    else:
        A = check(b[i], a)
        B = check(b[i], b)

    if (A - B > ans):
        ans = A - B
        x = A
        y = B
print ("%d:%d") % (x, y)
    
    
