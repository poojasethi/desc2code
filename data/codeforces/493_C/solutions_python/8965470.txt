#br = open('c.in')
f = lambda: map(int, raw_input().strip().split())
a = [[0, 2]]
n = f()[0]
a.extend([[i, 0] for i in f()])
m = f()[0]
a.extend([[i, 1] for i in f()])
a = sorted(a, key = lambda x: x[0])
a.append([max(v[0] for v in a) + 1, 2])

def solve(q=None):
  c, i, N, dif, r, ma = [0, 0], 0, len(a), -1e16, '', -1e16

  while i < N:
    j = i
    ct = [0, 0]
    while j < N and a[j][0] == a[i][0]:
      if a[j][1] < 2: 
        ct[a[j][1]] += 1
      j += 1

    r1 = n - ct[0] - c[0]
    r2 = m - ct[1] - c[1]
    
    c[0] += ct[0]
    c[1] += ct[1]

    s1, s2 = r1 * 3 + c[0] * 2, r2 * 3 + c[1] * 2
    if s1 - s2 >= dif:
      if q is not None and q == s1 - s2 and s1 > ma:
        r = '%d:%d' % (s1, s2)
        ma = s1
      dif = s1 - s2
    i = j 

  return [dif, r][q is not None]

r = solve()
print solve(r)
