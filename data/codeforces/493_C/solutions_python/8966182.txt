from bisect import bisect_right as br
import sys, math
def rs():
    return sys.stdin.readline().strip()
def ri():
    return int(sys.stdin.readline().strip())
def ras():
    return list(sys.stdin.readline().strip())
def rai():
    return map(int,sys.stdin.readline().strip().split())
def raf():
    return map(float,sys.stdin.readline().strip().split())

MAX = 10**7
def solve():
    n = ri()
    arr1 = map(lambda x: (x, 1), rai())
    m = ri()
    arr2 = map(lambda x: (x, 2), rai())
    arr = sorted(arr1 + arr2, key=lambda x: x[0])
    a,b = 0,0
    c1,c2 = 0,0
    mx = -10**10
    mxa = 0
    s = 0
    i = 0
    while i < (m+n):
        while i < (m+n) and arr[i][0] <= s:
            if arr[i][1] == 1:
                c1 += 1
            else:
                c2 += 1
            i += 1
        a = c1*2 + (n-c1)*3
        b = c2*2 + (m-c2)*3
        if a - b > mx:
            mx = a - b
            mxa = a
            mxb = b
        if i < (n + m):
            s = arr[i][0]

    return str(mxa) + ":" + str(mxb)


print solve()
