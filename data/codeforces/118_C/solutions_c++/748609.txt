#include <iostream>
#include <utility>
#include <algorithm>
#include <vector>

using namespace std;

vector<int> digits[10];
pair<int,string> a[11];
int main () {
	string s;
	int n,k;
	cin >> n >> k >> s;
	for(int i = 0; i < s.size(); i++) {
		digits[s[i]-'0'].push_back(i);
	}
	string orig = s;
	for(int best = 0; best <= 9; best++) { 
		s = orig;
		int left = k-(int)digits[best].size(), l = best-1, h = best+1;
		int cost = 0;
		while(left>0) {
			if(h<=9) {
				for(int i = 0; i < digits[h].size() and left>0; i++,left--) s[digits[h][i]] = best+'0', cost+=(h-best);
				h++;
			}
			if(l>=0) {
				for(int i = (int)digits[l].size()-1; i >=0 and left>0; i--,left--) s[digits[l][i]] = best+'0', cost+=(best-l);
				l--;
			}
		}
		a[best ] = pair<int,string>(cost,s);
	}
	sort(a,a+10);
	cout << a[0].first << endl << a[0].second << endl;
	return 0;
}
