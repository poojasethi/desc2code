#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
const int INF = 0x7FFFFFFF;
struct node {
        int p, v;
} w[10001];
int n, k, i, num, ans, tmp;
string s, s1, anss;
bool mycmp ( node l, node r ) {
        if ( l.v != r.v ) return l.v < r.v;
        if ( s[l.p] == s[r.p] ) {
                if ( s[l.p] >= num + '0' ) return l.p < r.p;
                else return l.p > r.p;
        }
        return s[l.p] > s[r.p];
}
int main ( ) {
        cin >> n >> k;
        cin >> s;
        for ( ans = INF, num = 0; num <= 9; ++num ) {
                for ( s1 = s, i = 0; s[i]; ++i ) w[i].p = i, w[i].v = abs ( s[i] - '0' - num );
                sort ( w, w + n, mycmp );
                for ( tmp = i = 0; i < k; ++i ) tmp += w[i].v, s1[w[i].p] = num + '0';
                if ( ans > tmp ) ans = tmp, anss = s1;
                else if ( ans == tmp && anss > s1 ) anss = s1;
        }
        cout << ans <<  endl << anss << endl;
}
