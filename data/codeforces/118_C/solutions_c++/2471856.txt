#include <algorithm>
#include <string.h>
#include <stdio.h>
#include <queue>
#define  inf       1 << 30
#define  maxn      10003
using    namespace std;

struct po
{
  int x,y;
};

bool operator<(po a , po b)
{
  if(a.x!=b.x)      return a.x>b.x;
  return a.y>b.y; 
}

int n,k,best=inf;
char s[maxn];
char s2[maxn];
char ans[maxn];

int main()
{
  scanf("%d%d",&n,&k);
  scanf("%s",s);
  for(int i=0 ; i<10 ; i++)
  {
    int cost=0;
    priority_queue<po>heap;
    memset(s2,0,maxn);
    strcpy(s2,s);
    for(int j=0 ; j<n ; j++)
    {
      po tmp;
      tmp.x=abs(s[j]-i-'0');
      if(s[j]-'0'<i)
        tmp.y=2*n-j;
      else
        tmp.y=j;
      heap.push(tmp);    
    }   
    for(int j=0 ; j<k ; j++)
    {
      po tmp=heap.top();
      heap.pop();
      s2[n-abs(tmp.y-n)]=i+'0';
      cost+=tmp.x;
    }
    if(cost<best || (cost==best && strcmp(s2,ans)==-1))
    {
      best=cost;
      strcpy(ans,s2);
    }
  }
  printf("%d\n%s\n",best,ans);
  return 0;
}
