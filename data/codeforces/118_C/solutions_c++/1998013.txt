#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

const int N=100010;
const int inf=0x3f3f3f3f;

using namespace std;

struct data
{
	int id,k1,k2;
	bool operator < (const data & r) const
	{
		if(k1!=r.k1) return k1<r.k1;
		if(k2!=r.k2) return k2<r.k2;
		if(k2) return id>r.id;
		return id<r.id;
	}
}a[N];

char s[N];

int main()
{
	int n,k;
	scanf("%d%d",&n,&k);
	scanf("%s",s);
	int ret=inf;
	string d="";
	for(int j=0;j<10;j++)
	{
		for(int i=0;s[i];i++)
		{
			if(s[i]-'0'==j) a[i].id=i,a[i].k2=0,a[i].k1=0;
			else if(s[i]-'0'>j) a[i].id=i,a[i].k2=0,a[i].k1=s[i]-'0'-j;
			else a[i].id=i,a[i].k2=1,a[i].k1=j-s[i]+'0';
		}
		sort(a,a+n);
		string h="";
		for(int i=0;i<n;i++)
			h+=s[i];
		int cnt=0;
		for(int i=0;i<k;i++)
			cnt+=a[i].k1,h[a[i].id]='0'+j;
		//cout<<j<<" "<<cnt<<" "<<h<<endl;
		if(cnt<ret) d=h,ret=cnt;
		else if(cnt==ret && d>h) d=h;
	}
	cout<<ret<<endl;
	cout<<d<<endl;
	return 0;
}
