#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>

using namespace std;

#define MAXN 10100

char str[MAXN];

char t[MAXN];

int n,k;
int Minsum;

int abs(int a)
{
	return a>=0?a:-a;
}

struct Node{
	int dx;
	int id;
	int Old;
	int New;
}p[MAXN];

bool cmp(Node a,Node b)
{
	if(a.dx!=b.dx)	return a.dx<b.dx;
	if(a.Old!=b.Old) return a.Old>b.Old;
	if(a.New<a.Old)	return a.id<b.id;
	return a.id>b.id;
}

int main()
{
	scanf("%d%d",&n,&k);
	int i,j;
	scanf("%s",str);
	int len=n;
	Minsum=1<<30;
	char c[MAXN];
	for(i=0;i<10;i++)
	{
		int tmp=0;
		for(j=0;j<len;j++)
		{
			p[j].dx=abs(str[j]-'0'-i);
			p[j].id=j;
			p[j].Old=str[j]-'0';
			p[j].New=i;
		}
		sort(p,p+n,cmp);
		for(j=0;j<k;j++)
			tmp+=p[j].dx;
		for(j=0;j<len;j++)
			c[j]=str[j];
		for(j=0;j<k;j++)
			c[p[j].id]=i+'0';
		c[len]='\0';
		if(tmp<Minsum)
		{
			Minsum=tmp;
			strcpy(t,c);
		}
		else if(tmp==Minsum && strcmp(c,t)<0)
			strcpy(t,c);
	}
	printf("%d\n%s\n",Minsum,t);
	return 0;
}
/*
5 4
44345
*/

 		   				 	  			 			 		 	