def c(digits_str, k):
  min_cost = 10 * len(digits_str)
  min_res = ''

  for b in range(10):
    digits = [int(_) for _ in digits_str]
    costs = {}
    for x in range(-9, 10):
      costs[x] = []
    for i, d in enumerate(digits):
      cost = b - d
      costs[cost].append(i)

    found = 0
    total_cost = 0
    for c in [0, -1, 1, -2, 2, -3, 3, -4, 4, -5, 5, -6, 6, -7, 7, -8, 8, -9, 9]:
      iterator = costs[c]
      if c > 0:
        iterator = reversed(iterator)

      for index in iterator:
        digits[index] = b
        total_cost += abs(c)
        found += 1
        if found == k:
          #print b, total_cost, min_cost, min_res, digits
          if total_cost < min_cost:
            min_res = ''.join(str(_) for _ in digits)
            min_cost = total_cost
          if total_cost == min_cost:
            min_res = min(min_res, ''.join(str(_) for _ in digits))

  return min_cost, min_res

n, k = [int(_) for _ in raw_input().split(" ")]
digits = [int(_) for _ in raw_input()]

#print digits
cost, res = c(digits, k)
print cost
print res
