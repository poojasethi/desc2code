def update(newCost, newNum):
		global cost, ans
		if cost > newCost:
				cost, ans = newCost, newNum
		if cost == newCost and newNum <= ans:
				cost, ans = newCost, newNum

n, k = map(int, raw_input().split())
presented = [0 for i in range(10)]
cost, ans = 10 ** 9, "9" * n
num = raw_input()
for x in num:
		presented[int(x)] += 1
for digit in range(10): # what digits are of quantity >= k
		d = str(digit)
		need = k - presented[digit]
		curCost, cn = 0, num
		i = 0
		for difference in range(1, 10):
				if need <= 0: break
				for pos in range(n):
						if need <= 0: break
						if int(cn[pos]) - digit == difference:
								cn = cn[:pos] + d + cn[pos + 1:]
								curCost += difference
								need -= 1
				for pos in range(n - 1, -1, -1):
						if need <= 0: break
						if int(cn[pos]) - digit == -difference:
								cn = cn[:pos] + d + cn[pos + 1:]
								curCost += difference
								need -= 1
		update(curCost, cn)
print(cost)
print(ans)