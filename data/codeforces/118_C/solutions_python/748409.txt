import sys
if len(sys.argv) > 1:
	infile = open(sys.argv[1], 'r')
else:
	infile = sys.stdin
def input():
	return infile.readline().rstrip()

n, k = map(int, input().split())
s0 = input()
s = [int(i) for i in s0]

cnt = {}
for i in range(10):
	cnt[i] = 0
for i in s:
	cnt[i] += 1
ans = None
for beautiful in range(0,10):
	sum = cnt[beautiful]
	cost = 0
	solu = {}
	for distance in range(1, 10):
		if sum >= k:
			break
		d1 = beautiful - distance
		d2 = beautiful + distance
		if d1 < 0 and d2 > 9:
			break
		if d2 <= 9:
			cnt2 = cnt[d2]
			if not cnt2 + sum < k:
				cnt2 = k - sum
			sum += cnt2
			cost += cnt2 * distance
			solu[d2] = cnt2
		if sum < k and d1 >= 0:
			cnt1 = cnt[d1]
			if not cnt1 + sum < k:
				cnt1 = k - sum
			sum += cnt1
			cost += cnt1 * distance
			solu[d1] = cnt1
	if sum >= k:
		if ans == None or ans[0] >= cost:
			s1 = []
			delay = {}
			for i in s:
				if solu.get(i, 0) > 0:
					if i < beautiful:
						if delay.get(i, 0) + solu[i] < cnt[i]:
							# don't change this i, add a delay
							s1.append(str(i))
						else:
							s1.append(str(beautiful))
							solu[i] -= 1
						delay[i] = delay.get(i, 0) + 1
					else:
						s1.append(str(beautiful))
						solu[i] -= 1
				else:
					s1.append(str(i))
			if ans == None or ans[0] > cost or ans[0] == cost and s1 < ans[1]:
				ans = (cost, s1)

cost, s1 = ans
print cost
print ''.join(s1)

