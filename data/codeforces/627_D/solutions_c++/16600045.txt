#include<cstdio>
#include<algorithm>
#include<cstring>
#define N 200010
#define inf 1000007
using namespace std;
int n,m,size1;
int key[N],first[N];
struct node
{
	int next,to;
};
node bian[N<<1];
int exist[N],dad[N];
int dp[N],mx[N],se[N];


void inser(int a,int b)
{
	size1++;
	bian[size1].to=b;
	bian[size1].next=first[a];
	first[a]=size1;
}


void dfs(int x,int k)
{
	if(key[x]<k) {exist[x]=1;return;}
	dp[x]=1;
	for(int i=first[x];i;i=bian[i].next)
	{
		if(bian[i].to!=dad[x])
		{
			dad[bian[i].to]=x;
			dfs(bian[i].to,k);
			if(exist[bian[i].to]) 
			{
				exist[x]++;
				if(mx[x]<dp[bian[i].to])
				{
					se[x]=mx[x];
					mx[x]=dp[bian[i].to];
				}
				else
				{
					if(se[x]<dp[bian[i].to])
						se[x]=dp[bian[i].to];
				} 
			}
			else dp[x]+=dp[bian[i].to];
		}
	}
	dp[x]+=mx[x];
}

void work(int x,int k)
{
	if(key[x]<k) return;
	int dp1,ex;
	for(int i=first[x];i;i=bian[i].next)
	{
		if(bian[i].to!=dad[x]&&key[bian[i].to]>=k)
		{
			if(exist[bian[i].to])                                 //失去 
			{
				if(dp[bian[i].to]==mx[x])
				{
					dp1=dp[x]+se[x]-mx[x];
				}
				else
				{
					dp1=dp[x];
				} 
			} 
			else
			{
				dp1=dp[x]-dp[bian[i].to];
			}
			ex=exist[x]-(exist[bian[i].to]>0);
			if(ex)         					           //得到 
			{
				exist[bian[i].to]++;
				dp[bian[i].to]-=mx[bian[i].to];
				if(mx[bian[i].to]<dp1)
				{
					mx[bian[i].to]=dp1;
					se[bian[i].to]=mx[bian[i].to];
				}
				else
				{
					if(se[bian[i].to]<dp1) se[bian[i].to]=dp1;
				}
				dp[bian[i].to]+=mx[bian[i].to];
			}
			else
			{
				dp[bian[i].to]+=dp1;
			}
			work(bian[i].to,k);
		}
	}
}

bool check(int x)
{
	memset(exist,false,sizeof(exist));
	memset(dp,0,sizeof(dp));
	memset(mx,0,sizeof(mx));
	memset(se,0,sizeof(se));
	memset(dad,0,sizeof(dad));
	for(int i=1;i<=n;i++)
	{
		if(!dad[i])
		{
			dfs(i,x);
		}
	}
	for(int i=1;i<=n;i++)
	{
		if(!dad[i])
		{
			work(i,x);
		}
	}
	int maxx=0;
	for(int i=1;i<=n;i++)
	{
		maxx=max(maxx,dp[i]);
	}
	if(maxx>=m) return 1;
	return 0;
}

int main()
{
	int i,j,k,s,t;
	scanf("%d%d",&n,&m);
	for(i=1;i<=n;i++) scanf("%d",&key[i]);
	for(i=1;i<n;i++)
	{
		scanf("%d%d",&s,&t);
		inser(s,t);inser(t,s);
	}
	int mid,l=0,r=inf;
	while(r-l>1)
	{
		mid=l+r>>1;
		if(check(mid)) l=mid;
		else r=mid;
	}
	printf("%d",l);
	return 0;
}
 