#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

#define ll long long
#define inf 1e9
#define eps 1e-8
#define md
#define N 200010
using namespace std;
struct yts { int x,t,ne;} e[2*N];
int v[N],f[N],sz[N],tmp[N],a[N],q[N],fa[N];
int num,top=0,n,m;
void put(int x,int y)
{
	num++; e[num].x=x;e [num].t=y;
	e[num].ne=v[x]; v[x]=num;
}

void dfs(int x)
{
	sz[x]=1;
	for (int i=v[x];i;i=e[i].ne)
	{
		int y=e[i].t;
		if (y==fa[x]) continue;
		fa[y]=x; dfs(y);
		sz[x]+=sz[y];
	}
	q[++top]=x;
}

bool dp(int k)
{
	for (int i=1;i<=n;i++) tmp[i]=(a[i]>=k);
	for (int i=1;i<n;i++) tmp[fa[q[i]]]+=tmp[q[i]];
	for (int j=1;j<=n;j++)
	{
		int x=q[j],sum=0;
		if (a[x]<k) { f[x]=0; continue;}
		for (int i=v[x];i;i=e[i].ne)
		{
			int y=e[i].t;
			if (y==fa[x]) continue;
			if (tmp[y]==sz[y]) sum+=sz[y];
		}
		if (tmp[1]-tmp[x]==sz[1]-sz[x]) sum+=sz[1]-sz[x];
		sum++; if (sum>=m) return 1;
		int mx=0;
		for (int i=v[x];i;i=e[i].ne)
		{
			int y=e[i].t;
			if (y==fa[x]||sz[y]==tmp[y]) continue;
			if (mx+sum+f[y]>=m) return 1;
			mx=max(mx,f[y]);
		}
		if (tmp[1]-tmp[x]==sz[1]-sz[x]) sum-=sz[1]-sz[x];
		f[x]=sum+mx;
	}
	return 0;
}
			
int main()
{
	scanf("%d%d",&n,&m);
	for (int i=1;i<=n;i++) scanf("%d",&a[i]);
	for (int i=1;i<n;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		put(x,y); put(y,x);
	}
	dfs(1);
	int l=0,r=1000000;
	while (l!=r)
	{
		int mid=(l+r+1)>>1;
		if (dp(mid)) l=mid; else r=mid-1;
	}
	printf("%d\n",l);
	return 0;
}

