#include <bits/stdc++.h>

#define FI(i,a,b) for(int i=(a);i<=(b);i++)
#define FD(i,a,b) for(int i=(a);i>=(b);i--)

#define LL long long

#define PII pair<int,int>
#define PLL pair<LL,LL>
#define mp make_pair
#define fi first
#define se second

#define M 200005

using namespace std;


int n,k,mc;
int s[M],cb[M],surv[M],pure[M];
PII ffi[M],sse[M];
bool bad[M];

vector<int> V[M],V2[M],V3[M];

void dfs(int id,int prev){
	FI(i,0,(int)V[id].size()-1){
		int to=V[id][i];
		if(to==prev) continue;
		dfs(to,id);
		cb[id]+=cb[to];
		if(!cb[to]) surv[id]+=surv[to];
		else{
			if(ffi[id].fi<surv[to]){
				sse[id]=ffi[id];
				ffi[id]=mp(surv[to],to);
			}else if(sse[id].fi<surv[to]){
				sse[id]=mp(surv[to],to);
			}
		}
	}
	
	if(bad[id]){
		pure[id]=surv[id]=0;
	}else{
		pure[id]=++surv[id];
		surv[id]+=ffi[id].fi;
	}
	
	FI(i,0,(int)V[id].size()-1){
		int to=V[id][i];
		if(to==prev){
		  V2[id][i]=0;
		  V3[id][i]=0;
		}
		else if(!cb[to]){
			V2[id][i]=(surv[id]-pure[to]);
			V3[id][i]=(pure[id]-pure[to]);
		}
		else{
			if(to==ffi[id].se) V2[id][i]=(pure[id]+sse[id].fi);
			else V2[id][i]=(surv[id]);
			V3[id][i]=(pure[id]);
		}
	}
	return;
}

void dfs2(int id,int prev,int res){
	if(prev==-1 || bad[id]){}
	else{
		mc=max(mc,res+pure[id]);
		if(cb[id]==cb[1]) mc=max(mc,res+surv[id]);
		mc=max(mc,surv[id]);
	}
	FI(i,0,(int)V[id].size()-1){
		int to=V[id][i];
		if(to==prev) continue;
		if(bad[id]) dfs2(to,id,0);
		else if(cb[id]==cb[1]) dfs2(to,id,res+V2[id][i]);
		else dfs2(to,id,max(V2[id][i],res+V3[id][i]));
	}
	return;
}
int bes(int m){
	FI(i,1,n){
		if(s[i]<m) bad[i]=true;
		else bad[i]=false;
		cb[i]=bad[i];
		//multiple times, reset important!!
		ffi[i]=sse[i]=mp(0,0);
		pure[i]=surv[i]=0;
	}
	
	dfs(1,-1);
	mc=surv[1];
	dfs2(1,-1,0);
	return mc;
}

int main(){
	scanf("%d %d",&n,&k);
	FI(i,1,n) scanf("%d",&s[i]);
	FI(i,2,n){
		int a,b;
		scanf("%d %d",&a,&b);
		V[a].push_back(b);
		V[b].push_back(a);
		V2[a].push_back(0);
		V2[b].push_back(0);
		V3[a].push_back(0);
		V3[b].push_back(0);
	}
	
	
	int l=0,r=1000001;
	while(r-l>1){
		int m=(l+r)>>1;
		if(bes(m)>=k) l=m;
		else r=m;
	}
	printf("%d\n",l);
	return 0;
}