#include <bits/stdc++.h>

#define fi first
#define se second
#define mm ((b+s)>>1)
#define umax(a,b) a=max(a,b)
#define umin(a,b) a=min(a,b)
#define inf 1000000009
#define max3(a,b,c) max((a),max((b),(c)))
#define bit(k) (1ll<<(k))
#define fbit(k,i) ((k) & (bit(i)))
#define count(a) __builtin_popcount(a)
#define pq priority_queue
#define all(v) v.begin(),v.end()
#define type(x) __typeof(x.begin())
#define foreach(v,it) for(type(v) it=v.begin(); it!=v.end();it++)

using namespace std;

typedef double db;
typedef long long lint;
typedef pair <lint,lint> ii;
typedef pair <ii,lint> iii;
typedef vector <lint> vi;
typedef vector <ii> vii;

const lint maxn=2e5+20;

lint N,K,cnt[maxn],bad[maxn],sze[maxn],ok[maxn],all_bad,ar[maxn];
vi komsu[maxn];

bool dfs(lint u,lint p){
	cnt[u]=ok[u];
	bad[u]=!ok[u];
	sze[u]=1;
	
	lint mx=0,mx2=0;
	foreach(komsu[u],it){
		lint v=*it;
		
		if(v==p) continue;
		
		if(dfs(v,u)) return 1;
		
		sze[u]+=sze[v];
		bad[u]+=bad[v];
		
		if(!ok[u] || !ok[v]) continue;
		
		if(cnt[v]==sze[v])
			cnt[u]+=cnt[v];
		
		else{
			umax(mx2,cnt[v]);
			if(mx2>mx) swap(mx,mx2);
		}
	}
	
	cnt[u]+=mx;
	if(ok[u])
		return cnt[u]+mx2+(bad[u]==all_bad ? N-sze[u]:0) >= K;
	return 0;
}

int main(){
	cin >> N >> K;
	
	for(lint i=1;i<=N;i++)
		scanf("%lld",&ar[i]);
	
	for(lint i=1;i<N;i++){
		lint a,b;
		scanf("%lld %lld",&a,&b);
		komsu[a].push_back(b);
		komsu[b].push_back(a);
	}
	
	lint cur=0;
	
	for(lint k=19;k>=0;k--){
		lint x=cur+bit(k);
		
		all_bad=0;
		for(lint i=1;i<=N;i++){
			ok[i] = ar[i]>=x;
			all_bad+=!ok[i];
		}
		
		if(dfs(1,0)) cur=x;
	}
	
	cout << cur << endl;
	
	return 0;
}
