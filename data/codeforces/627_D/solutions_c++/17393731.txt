/*----------------
	Author:Longjie Qi
		zhzxcool
	Date:04.20.2016
----------------*/
#include <cstdio>
#include <algorithm>
#include <cstring>
#define maxn 200010
using namespace std;
int a[maxn],dp[maxn],size[maxn],h[maxn<<1],last[maxn<<1],head[maxn],v[maxn],tag[maxn],tot,n,k,l,cnt,ans;

void add(int x,int y)
{
	h[++l] = y;
	last[l] = head[x];
	head[x] = l;
}
void dfs(int x,int fa)
{
	size[x] = 1;
	for (int i = head[x];i;i = last[i])
	{
		int j = h[i];
		if (j == fa) continue;
		dfs(j,x);
		size[x] += size[j];
	}
}
void treedp(int x,int fa)
{
	if (tot>=k) return;
	int pos=0,max1=0,max2=0;
	for (int i = head[x];i;i = last[i])
	{
		int j = h[i];
		if (j == fa) continue;
		treedp(j,x);
		tag[x] += tag[j];
		if (dp[j] == size[j]) pos += dp[j];
		else if (dp[j] > max1) max2 = max1,max1 = dp[j];
		else if (dp[j] > max2) max2 = dp[j];
	}
	if (v[x]) dp[x] = pos+max1+1,tag[x]++;
	else dp[x] = 0;
	if (n-size[x]==cnt-tag[x])
		pos += n-size[x];
	if (v[x]) tot = max(tot,pos+max1+max2+1);
}

int main()
{
	scanf("%d%d",&n,&k);
	for (int i = 1;i <= n;i++)
		scanf("%d",&a[i]);
	for (int i = 1;i < n;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		add(x,y);add(y,x);
	}
	dfs(1,-1);
	for (int L=1,R=1000000;L<=R;)
	{
		int mid =L+R>>1;cnt = 0;
		for (int i = 1;i <= n;i++)
			cnt += (v[i] = a[i]>=mid);
		memset(tag,0,sizeof(tag));
		tot = 0;
		treedp(1,-1);
		if (tot>=k) ans = mid,L = mid+1;
		else R = mid-1;
	}
	printf("%d",ans);
	return 0;
}
