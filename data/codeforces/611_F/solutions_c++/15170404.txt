#include <iostream>
#include <cassert>
#include <vector>
using namespace std;

const long long MOD = 1000000007LL;
const int N = 555555;
int n, h, w;
char cmd[N];
int f[N], fn;

long long add(long long a, long long b) { return (a + b) % MOD; }
long long mul(long long a, long long b) { return (a * b) % MOD; }

long long calc() {
    int minx = 0, maxx = 0, miny = 0, maxy = 0;
    int x = 0, y = 0;
    long long h1 = 1, h2 = h, w1 = 1, w2 = w;
    long long ans = 0;
    for (int i = 0; i < n && h1 <= h2 && w1 <= w2; i++) {
        char ch = cmd[i];
        switch (ch) {
            case 'U':
                if (--x < minx) {
                    minx = x;
                    ans = add(ans, mul(w2 - w1 + 1, i + 1));
                    h1++;
                }
                break;
            case 'D':
                if (++x > maxx) {
                    maxx = x;
                    ans = add(ans, mul(w2 - w1 + 1, i + 1));
                    h2--;
                }
                break;
            case 'L':
                if (--y < miny) {
                    miny = y;
                    ans = add(ans, mul(h2 - h1 + 1, i + 1));
                    w1++;
                }
                break;
            case 'R':
                if (++y > maxy) {
                    maxy = y;
                    ans = add(ans, mul(h2 - h1 + 1, i + 1));
                    w2--;
                }
                break;
        }
    }
    if (h1 <= h2 && w1 <= w2 && x == 0 && y == 0) { return -1; }
    if (h1 > h2 || w1 > w2) return ans;
    //cout << "ans = " << ans << endl;
    long long a = h1, b = h2, c = w1, d = w2;
    fn = 0;
    for (int i = 0; i < n; i++) {
        switch (cmd[i]) {
            case 'U': if (--x < minx) { minx = x; f[fn++] = i; } break;
            case 'D': if (++x > maxx) { maxx = x; f[fn++] = i; } break;
            case 'L': if (--y < miny) { miny = y; f[fn++] = i; } break;
            case 'R': if (++y > maxy) { maxy = y; f[fn++] = i; } break;
        }
    }
    int idx = 0;
    long long inc = n;
    while (h1 <= h2 && w1 <= w2) {
        switch (cmd[f[idx]]) {
            case 'U':
                ans = add(ans, mul(w2 - w1 + 1, inc + f[idx] + 1)); h1++;
                break;
            case 'D':
                ans = add(ans, mul(w2 - w1 + 1, inc + f[idx] + 1)); h2--;
                break;
            case 'L':
                ans = add(ans, mul(h2 - h1 + 1, inc + f[idx] + 1)); w1++;
                break;
            case 'R':
                ans = add(ans, mul(h2 - h1 + 1, inc + f[idx] + 1)); w2--;
                break;
        }
        if (++idx == fn) { inc = add(inc, n); idx = 0; }
    }
    return ans;
}

int main() {
    cin >> n >> h >> w;
    cin >> cmd;
    cout << calc() << endl;
    return 0;
}
