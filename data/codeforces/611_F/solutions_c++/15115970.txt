#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long ll;
#define MOD 1000000007ll

int N,X,Y;
char buf[500010];
int dx[] = {1,0,-1,0}, dy[] = {0,1,0,-1};
string ds = "RULD";
int dir[500010];

vector <pair <ll, int> > event;

int d[500010];
int s[500010];
int a[500010];

vector <ll> func(void){
    int i;
    
    REP(i,N) d[i] = dx[dir[i]];
    REP(i,N) s[i+1] = s[i] + d[i];
    int CYCLE = s[N];
    
    int MAX = 0;
    REP(i,N+1) if(s[i] > MAX){
        MAX++;
        a[MAX] = i;
    }
    
    vector <ll> ans;
    for(i=1;i<500005;i++){
        if(i <= MAX){
            ans.push_back(a[i]);
        } else if(CYCLE > 0){
            ll tmp = (i - MAX + CYCLE - 1) / CYCLE;
            ans.push_back(tmp * N + a[i - CYCLE * tmp]);
        }
    }
    
    return ans;
}

int main(void){
    int i,j;
    
    cin >> N >> Y >> X;
    scanf("%s", buf);
    REP(i,N) REP(j,4) if(buf[i] == ds[j]) dir[i] = j;
    
    event.push_back(make_pair(0, -1));
    
    REP(i,4){
        vector <ll> v = func();
        if(i % 2 == 0){
            REP(j,v.size()) event.push_back(make_pair(v[j], 0));
        } else {
            REP(j,v.size()) event.push_back(make_pair(v[j], 1));
        }
        REP(j,N) dir[j] = (dir[j] + 1) % 4;
    }
    
    sort(event.begin(),event.end());
    
    ll x = X, y = Y;
    ll ans = 0;
    
    for(i=1;i<event.size();i++){
    //  cout << event[i].first << ' ' << event[i].second << endl;
        ll dt = event[i].first - event[i-1].first;
        if(x > 0 && y > 0){
            ans = (ans + dt % MOD * x % MOD * y) % MOD;
        //  cout << dt << ' ' << x << ' ' << y << endl;
        }
        if(event[i].second == 0) x--; else y--;
    }
    
    if(x > 0 && y > 0) ans = -1;
    cout << ans << endl;
    
    return 0;
}
