#include <iostream>
#include <iomanip>
#include <climits>
#include <stack>
#include <fstream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <cassert>

#define FOR(i,n) for(int i=0,_n=n;i<_n;i++)
#define FORR(i,s,n) for(int i=s,_n=n;i<_n;i++)
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define pli pair<ll,int>
#define vi vector<int>
#define fs first
#define sec second

#define maxn 500000

using namespace std;
typedef long long ll;

const ll MOD = 1000000007LL;

ll nxt[maxn+10];
char s[maxn+10];
ll off[maxn+10];

int main(){
	ll n,w,h;
	scanf("%lld%lld%lld",&n,&h,&w);
	scanf("%s",s);
	ll rez=0LL;
	ll maxx=w,maxy=h,miny=1LL,minx=1LL;
	ll offx=0LL,offy=0LL;
	FOR(i,n){
		if(maxx<minx || maxy<miny)break;
		if(s[i]=='U')offy++;
		if(s[i]=='D')offy--;
		if(s[i]=='L')offx--;
		if(s[i]=='R')offx++;
		if(minx+offx<1LL)minx++,rez=(rez+(i+1LL)*(maxy-miny+1LL))%MOD;
		if(maxx+offx>w)maxx--,rez=(rez+(i+1LL)*(maxy-miny+1LL))%MOD;
		if(miny+offy<1LL)miny++,rez=(rez+(i+1LL)*(maxx-minx+1LL))%MOD;
		if(maxy+offy>h)maxy--,rez=(rez+(i+1LL)*(maxx-minx+1LL))%MOD;
	}
	if(maxx<minx || maxy<miny){
		printf("%lld\n",rez);
		return 0;
	}
	ll nsteps=n;
	ll fs=0LL;
	ll * prev=&fs;
	FOR(i,n){
		nsteps++;
		if(maxx<minx||maxy<miny)break;
		if(s[i]=='U')offy++;
		if(s[i]=='D')offy--;
		if(s[i]=='L')offx--;
		if(s[i]=='R')offx++;
		if(minx+offx<1LL){
			minx++;
			rez=(rez+nsteps*(maxy-miny+1LL))%MOD;
			*prev=i;
			prev=nxt+i;
		}
		if(maxx+offx>w){
			maxx--;
			rez=(rez+nsteps*(maxy-miny+1LL))%MOD;
			*prev=i;
			prev=nxt+i;
		}
		if(miny+offy<1LL){
			miny++;
			rez=(rez+nsteps*(maxx-minx+1LL))%MOD;
			*prev=i;
			prev=nxt+i;
		}
		if(maxy+offy>h){
			maxy--;
			rez=(rez+nsteps*(maxx-minx+1LL))%MOD;
			*prev=i;
			prev=nxt+i;
		}
	}
	if(maxx<minx || maxy<miny){
		printf("%lld\n",rez);
		return 0;
	}
	if(prev==&fs){
		printf("-1\n");
		return 0;
	}
	*prev=fs;
	nsteps=(fs+1LL+nsteps)%MOD;
	ll i=fs;
	while(maxx>=minx && maxy>=miny){
		if(s[i]=='U')maxy--,rez=(rez+nsteps*(maxx-minx+1LL))%MOD;
		if(s[i]=='D')miny++,rez=(rez+nsteps*(maxx-minx+1LL))%MOD;
		if(s[i]=='L')minx++,rez=(rez+nsteps*(maxy-miny+1LL))%MOD;
		if(s[i]=='R')maxx--,rez=(rez+nsteps*(maxy-miny+1LL))%MOD;
		ll nasl=nxt[i];
		if(nasl<=i)nsteps=(nsteps+n-i+nasl)%MOD;
		else nsteps=(nsteps+nasl-i)%MOD;
		i=nasl;
	}
	printf("%lld\n",rez);
	return 0;
}
