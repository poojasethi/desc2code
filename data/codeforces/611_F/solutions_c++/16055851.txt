#include <cstdio>
#include <queue>

using namespace std;

struct Tran {
	int x, y, len;
	Tran(int x = 0, int y = 0, int len = 0):x(x), y(y), len(len) {
	}
};
Tran operator + (const Tran &a, const Tran &b) {
	return Tran(a.x + b.x, a.y + b.y, a.len + b.len);
}

const int mod = 1000000007;

int t, n, m;
queue<Tran> a;

inline void add(int &a, int b) {
	a += b;
	if (a >= mod) {
		a -= mod;
	}
}
int cal() {
	int nn = n, mm = m, t = 0, ans = 0;
	Tran cur, l, r = Tran(nn - 1, mm - 1);
	while (!a.empty()) {
		cur = cur + a.front();
		l = l + a.front();
		r = r + a.front();
		a.pop();
		if (l.x < 0 || r.x >= n || l.y < 0 || r.y >= m) {
			add(t, cur.len);
			a.push(cur);
			cur = Tran();
		}
		if (l.x < 0 || r.x >= n) {
			add(ans, (long long)t * mm % mod);
			nn--;
		} else if (l.y < 0 || r.y >= m) {
			add(ans, (long long)t * nn % mod);
			mm--;
		}
		if (l.x < 0) {
			l.x++;
		}
		if (r.x >= n) {
			r.x--;
		}
		if (l.y < 0) {
			l.y++;
		}
		if (r.y >= m) {
			r.y--;
		}
		if (nn == 0 || mm == 0) {
			return ans;
		}
	}
	return -1;
}

int main() {
	scanf("%d%d%d", &t, &n, &m);
	for (int i = 0; i < t; i++) {
		char c;
		scanf(" %c", &c);
		if (c == 'R') {
			a.push(Tran(0, 1, 1));
		} else if (c == 'L') {
			a.push(Tran(0, -1, 1));
		} else if (c == 'U') {
			a.push(Tran(-1, 0, 1));
		} else if (c == 'D') {
			a.push(Tran(1, 0, 1));
		}
	}
	printf("%d\n", cal());
	return 0;
}

		  		 				      				      				