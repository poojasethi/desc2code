#include <cstdio>
#include <algorithm>

using namespace std;

#define N 500005

const int MOD = 1000000007;

typedef __int64 LL;

int n, h, w, px, py, rlt;
int minx, maxx, miny, maxy;

char s[N];

bool Move(char c, LL d) {
	if (c == 'L') py --;
	else if (c == 'R') py ++;
	else if (c == 'U') px --;
	else px ++;
	if (px < minx || maxx < px) {
		rlt = (rlt + (d + 1) * w % MOD) % MOD;
		h --;
		if (!h) {
			printf("%d\n", rlt);
			exit(0);
		}
		if (px < minx) minx = px;
		else if (maxx < px) maxx = px;
		return 1;
	}
	if (py < miny || maxy < py) {
		rlt = (rlt + (d + 1) * h % MOD) % MOD;
		w --;
		if (!w) {
			printf("%d\n", rlt);
			exit(0);
		}
		if (py < miny) miny = py;
		else if (maxy < py) maxy = py;
		return 1;
	}
	return 0;
}

void Go(char c, LL d) {
	if (c == 'L' || c == 'R') {
		rlt = (rlt + (d + 1) * h % MOD) % MOD;
		w --;
		if (!w) {
			printf("%d\n", rlt);
			exit(0);
		}
	} else {
		rlt = (rlt + (d + 1) * w % MOD) % MOD;
		h --;
		if (!h) {
			printf("%d\n", rlt);
			exit(0);
		}
	}
}

int sto[N], cnt;

main() {
	scanf("%d %d %d", &n, &h, &w);
	scanf("%s", s);
	for (int i = 0; i < n; i ++) Move(s[i], i);
	if (!px && !py) return puts("-1");
	for (int i = n; i < n + n; i ++) {
		if (Move(s[i % n], i)) sto[cnt ++] = i % n;
	}
	LL cur = n << 1;
    while (1) {
		for (int i = 0; i < cnt; i ++) Go(s[sto[i]], cur + sto[i]);
		cur += n;
    }
}
