#include <iostream>
#include <algorithm>
#include <vector>
#include <string>

using namespace std;

const long long MOD = 1e9+7;
string s;
int maxh,minh,maxw,minw;
int x,y;
int M;
long long ans;

pair <int,int> Rozszyfruj(char znak){
	if(znak == 'U') return make_pair(-1,0);
	if(znak == 'D') return make_pair(1,0);
	if(znak == 'R') return make_pair(0,1);
	if(znak == 'L') return make_pair(0,-1);
}

void PierwszyCykl(int n,int &h,int &w){
	int i;
	pair <int,int> move;
	for(i=0; i<n; i++){
		move = Rozszyfruj(s[i]);
		x += move.first;
		y += move.second;
		if(x>maxh || x<minh) {
			ans += (long long)(i+1)*(long long)w;
			h--;
		}
		if(y>maxw || y<minw) {
			ans += (long long)(i+1)*(long long)h;
			w--;
		}
		ans %= MOD;
		maxh = max(x,maxh); minh = min(x,minh);
		maxw = max(y,maxw); minw = min(y,minw);
		if(h==0 || w==0) break;
	}
}

void Kolejne(int n,int h,int w){
	int i,j;
	vector < pair<int,int> > P; 
	pair <int,int> move;
	//cout << h << " " << w << "\n";
	for(i=0; i<n; i++){
		move = Rozszyfruj(s[i]);
		x += move.first;
		y += move.second;
		if(x>maxh || x<minh) {
			P.push_back(make_pair(0,i+1));
		}
		if(y>maxw || y<minw) {
			P.push_back(make_pair(1,i+1));
		}
		maxh = max(x,maxh); minh = min(x,minh);
		maxw = max(y,maxw); minw = min(y,minw);
	}
	if(P.size() == 0){
		if(h!=0 && w!=0) cout << "-1" << "\n";
		else cout << ans << "\n";
		return;
	}
	for(i=0; (i+1)*P.size() < M; i++){
		if(h==0 || w==0) break;
		for(j=0; j<P.size(); j++){
			if(h==0 || w==0) break;
			if(P[j].first == 0){
				ans += ((long long)(i+1)*(long long)n+(long long)P[j].second)*(long long)w;
				h--;
			}
			else{
				ans += ((long long)(i+1)*(long long)n+(long long)P[j].second)*(long long)h;
				w--;
			}
			ans %= MOD;
		}
	}
	//cout << h << " " << w << "\n";
	if(h!=0 && w!=0) cout << "-1" << "\n";
	else cout << ans << "\n";
}

int main(){
	int n,h,w;
	int cykl;
	cin >> n >> h >> w >> s;
	M = 4*max(h,w);
	PierwszyCykl(n,h,w);
	Kolejne(n,h,w);
	return 0;
}
