#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <utility>

const int maxn = 5e5 + 20, Mod = 1e9 + 7;
const int COL = 1, ROW = 2;
const long long linf = 0x3f3f3f3f3f3f3f3fLL;
#define X first
#define Y second

int n, h, w;
char op[maxn];
std::pair<int,int> pos[maxn];
long long up[maxn], down[maxn], left[maxn], right[maxn];
int dx, dy;
std::pair<int,int> dmin, dmax;
int ans; 

int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
#endif  
    
    scanf("%d%d%d", &n, &h, &w);
    scanf("%s", op + 1);
    
    pos[0] = std::make_pair(0, 0);
    
    for(int i = 1; i <= n; i++)
    {
        if(op[i] == 'U') dx--;
        if(op[i] == 'D') dx++;
        if(op[i] == 'L') dy--;
        if(op[i] == 'R') dy++;
    
        pos[i] = std::make_pair(dx, dy);
    
        dmax.X = std::max(dmax.X, dx);
        dmax.Y = std::max(dmax.Y, dy);
    
        dmin.X = std::min(dmin.X, dx);
        dmin.Y = std::min(dmin.Y, dy);
    }
    
    for(int i = n; i >= 1; i--)
    {
        if(pos[i].X < 0) up[-pos[i].X] = i;
        if(pos[i].X > 0) down[pos[i].X] = i;
        
        if(pos[i].Y < 0) left[-pos[i].Y] = i;
        if(pos[i].Y > 0) right[pos[i].Y] = i;
    }
    
    for(int i = 1; i <= h; i++)
    {
        if(!up[i] && dmin.X && dx < 0) up[i] = up[i + dx] + n;
        if(!down[i] && dmax.X && dx > 0) down[i] = down[i - dx] + n;
    }
    for(int i = 1; i <= w; i++)
    {
        if(!left[i] && dmin.Y && dy < 0) left[i] = left[i + dy] + n;
        if(!right[i] && dmax.Y && dy > 0) right[i] = right[i - dy] + n;
    }
    
    int xl = 1, xr = h, yl = 1, yr = w;
    
    while(xl <= xr && yl <= yr)
    {
        std::pair<long long,int> Min = std::make_pair(linf, 0);
        
        if(up[xl]) Min = std::min(std::make_pair(up[xl], -ROW), Min);
        if(left[yl]) Min = std::min(std::make_pair(left[yl], -COL), Min);
        if(down[h + 1 - xr]) Min = std::min(std::make_pair(down[h + 1 - xr], ROW), Min);
        if(right[w + 1 - yr]) Min = std::min(std::make_pair(right[w + 1 - yr], COL), Min);
        
        if(Min.Y == 0) {ans = -1; break;}
        if(Min.Y == -ROW) (ans += Min.X * (yr - yl + 1) % Mod) %= Mod, xl++;
        if(Min.Y == -COL) (ans += Min.X * (xr - xl + 1) % Mod) %= Mod, yl++;
        if(Min.Y == ROW) (ans += Min.X * (yr - yl + 1) % Mod) %= Mod, xr--;
        if(Min.Y == COL) (ans += Min.X * (xr - xl + 1) % Mod) %= Mod, yr--;
    }
    
    printf("%d", ans);
    
#ifndef ONLINE_JUDGE
    fclose(stdin);
    fclose(stdout);
#endif  
    return 0;
}