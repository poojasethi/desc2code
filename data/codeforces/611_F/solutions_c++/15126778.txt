#include <bits/stdc++.h>
using namespace std;
const int MOD=1000000007;
long long cal1[500005],cal2[500005],ans1[500005],ans2[500005],H1,H2,temp;
char s[500005];
int main()
{
    int n,X,Y;
    while(cin>>n>>X>>Y)
    {
        cin>>s+1;
        long long ans=0;
        int UP=1,Down=X,Left=1,Right=Y;
        for (int i=1; i<=n; ++i)
        {
            ans=(ans+1ll*(Right-Left+1)*(Down-UP+1))%MOD;
            if (s[i]=='L')
                Left--,Right--;
            if (s[i]=='R')
                Left++,Right++;
            if (s[i]=='U')
                UP--,Down--;
            if (s[i]=='D')
                UP++,Down++;
            Left=max(Left,1),UP=max(UP,1);
            Right=min(Right,Y),Down=min(Down,X);
            Left=min(Left,Y+1),UP=min(UP,X+1);
            Right=max(Right,0),Down=max(Down,0);
        }
        ans1[0]=(Right-Left+1);
        ans2[0]=(Down-UP+1);
        if (!ans1[0] || !ans2[0])
        {
            cout<<ans;
            return 0;
        }
        for (int i=1; i<=n; ++i)
        {
            if (s[i]=='L')
                Left--,Right--;
            if (s[i]=='R')
                Left++,Right++;
            if (s[i]=='U')
                UP--,Down--;
            if (s[i]=='D')
                UP++,Down++;
            Left=max(Left,1),UP=max(UP,1);
            Right=min(Right,Y),Down=min(Down,X);
            Left=min(Left,Y+1),UP=min(UP,X+1);
            Right=max(Right,0),Down=max(Down,0);
            ans1[i]=(Right-Left+1);
            ans2[i]=(Down-UP+1);
        }
        long long H1=ans1[0]-ans1[n],H2=ans2[0]-ans2[n];
        if (!H1 && !H2)
        {
            puts("-1");
            continue;
        }
        for (int i=1; i<=500000; ++i)
        {
            cal1[i]=(cal1[i-1]+i)%MOD;
            cal2[i]=(cal2[i-1]+1ll*i*i)%MOD;
        }
        for (int i=0; i<n; ++i)
        {
            if (!H1)
                temp=ans2[i]/H2;
            else if (!H2)
                temp=ans1[i]/H1;
            else
                temp=min(ans2[i]/H2,ans1[i]/H1);
            ans=(ans+temp*ans1[i]%MOD*ans2[i]%MOD-(ans1[i]*H2+ans2[i]*H1)%MOD*cal1[temp-1]%MOD+H1*H2%MOD*cal2[temp-1])%MOD;
            ans1[i]-=temp*H1;
            ans2[i]-=temp*H2;
            ans=(ans+ans1[i]*ans2[i])%MOD;
        }
        cout<<(ans+MOD)%MOD<<endl;
    }
}
