#define N (1<<19)
#define M 1000000007
#define LL long long
#define PLI pair<LL,int>
#include <bits/stdc++.h>
using namespace std;

char s[N];
vector<PLI> p;
LL cnt,sum,res,row[N],col[N];
int n,h,w,dx,dy,xmx=-N,xmi=N,ymx=-N,ymi=N;

void updatecol(int x,int p)
{
	if(x<1 || x>w || col[x]) return;
	col[x]=p;
}

void updaterow(int x,int p)
{
	if(x<1 || x>h || row[x]) return;
	row[x]=p;
}

void updateres()
{
	for(int i=1;i<=h;i++)
		if(!row[i])
		{
			if(cnt==w) res+=sum,res%=M;
			else
			{
				res=-1;
				return;
			}
		}
}

int main()
{
	//freopen("in.txt","r",stdin);
	cin>>n>>h>>w>>(s+1);

	for(int i=1;i<=n;i++)
	{
		if(s[i]=='R')
		{
			dx++;
			updatecol(w+1-dx,i);
		}
		if(s[i]=='L')
		{
			dx--;
			updatecol(-dx,i);
		}
		if(s[i]=='U')
		{
			dy++;
			updaterow(dy,i);
		}
		if(s[i]=='D')
		{
			dy--;
			updaterow(h+1+dy,i);
		}
		xmx=max(xmx,dx);
		xmi=min(xmi,dx);
		ymx=max(ymx,dy);
		ymi=min(ymi,dy);
	}

	for(int i=1;i<=h;i++)
		if(!row[i])
		{
			if(dy>0)
			{
				int k=(i-ymx-1)/dy+1;
				row[i]=(LL)k*n+row[i-k*dy];
			}
			else if(dy<0)
			{
				int k=(h-i+1+ymi-1)/(-dy)+1;
				row[i]=(LL)k*n+row[i-k*dy];
			}
		}

	for(int i=1;i<=w;i++)
		if(!col[i])
		{
			if(dx>0)
			{
				int k=(w-i+1-xmx-1)/dx+1;
				col[i]=(LL)k*n+col[i+k*dx];
			}
			else if(dx<0)
			{
				int k=(i+xmi-1)/(-dx)+1;
				col[i]=(LL)k*n+col[i+k*dx];
			}
		}

	for(int i=1;i<=h;i++)
		if(row[i]) p.push_back(PLI(row[i],0));
	for(int i=1;i<=w;i++)
		if(col[i]) p.push_back(PLI(col[i],1));

	sort(p.begin(),p.end());
	for(int i=0;i<p.size();i++)
		if(p[i].second) cnt++,sum+=p[i].first,sum%=M;
		else res+=p[i].first%M*(w-cnt)%M+sum,res%=M;

	updateres();
	cout<<res<<endl;
	return 0;
}