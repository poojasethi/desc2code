#include <iostream>
#include <cstring>
#include <algorithm>
#include <cstdio>
using namespace std;
#define mod 1000000007
#define N 1001000
const long long oo = 99999999999999999;
struct node{
long long t;int d;}a[N],b[N];
long long s[N],g[N];
char ch[N];
bool cmp(node p,node q)
{
    if(p.d==q.d)
    return p.t<q.t;
    return p.d<q.d;
}
int main()
{
    int n,h,w,dh,dw,flag;long long tmp,sum;
    while(cin>>n>>h>>w)
    {
        getchar();
        gets(ch);
        flag=0;
        a[0].d=0;b[0].d=0;
        for(int i=1;i<=n;i++)
        {
            if(ch[i-1]=='L')
            {
            a[i].d=a[i-1].d-1,a[i].t=i;b[i].d=b[i-1].d;b[i].t=i;
            }
            else if(ch[i-1]=='R')
            {a[i].d=a[i-1].d+1,a[i].t=i;b[i].d=b[i-1].d;b[i].t=i;}
            else if(ch[i-1]=='U')
            {b[i].d=b[i-1].d-1,b[i].t=i;a[i].d=a[i-1].d;a[i].t=i;}
            else
            {b[i].d=b[i-1].d+1,b[i].t=i;a[i].d=a[i-1].d;a[i].t=i;}
        }
        dh=b[n].d;
        dw=a[n].d;
        sort(a+1,a+n+1,cmp);
        sort(b+1,b+n+1,cmp);
        /*for(int i=1;i<=n;i++)
        {
            printf("%d %d\n",a[i].d,a[i].t);
        }*/
        for(int i=0;i<=2*h;i++)
            g[i]=oo;
        for(int i=0;i<=2*w;i++)
            s[i]=oo;
        for(int i=1;i<=n;i++)
        {
           if(a[i].d+w>=0&&a[i].d+w<=2*w)
            s[a[i].d+w]=min(a[i].t,s[a[i].d+w]);
           if(b[i].d+h>=0&&b[i].d+h<=2*h)
            g[b[i].d+h]=min(b[i].t,g[b[i].d+h]);
        }
        /*for(int i=0;i<=2*w;i++)
        {
            printf("%d ",s[i]);
        }
        printf("\n");*/
        if(dh>0)
        {
            for(int i=dh;i<=2*h;i++)
            {
               g[i]=min(g[i-dh]+n,g[i]);
            }
        }
        else
        {
            for(int i=2*h+dh;i>=0;i--)
            {
                g[i]=min(g[i-dh]+n,g[i]);
            }
        }
        if(dw>0)
        {
            for(int i=dw;i<=2*w;i++)
            {
               s[i]=min(s[i-dw]+n,s[i]);
            }
        }
        else
        {
            for(int i=2*w+dw;i>=0;i--)
            {
                s[i]=min(s[i-dw]+n,s[i]);
            }
        }
        for(int i=0;i<w;i++)
        s[i]=min(s[i],s[i+w+1]);
        for(int i=0;i<h;i++)
        g[i]=min(g[i],g[i+h+1]);
        for(int i=0;i<w;i++)
        if(s[i]==oo&&flag==0)
        flag=1;
        for(int i=0;i<h;i++)
        if((g[i]==oo)&&flag==1)
        flag=2;
        if(flag==2)
        {
            printf("-1\n");continue;
        }
        sort(s,s+w);
        sort(g,g+h);
       /*         for(int i=0;i<h;i++)
        {
            printf("%d ",g[i]);
        }
        printf("\n");
        for(int i=0;i<w;i++)
        {
            printf("%d ",s[i]);
        }
        printf("\n");*/
        int k=0;tmp=0;sum=0;
        for(int i=0;i<w;i++)
        {
        while(s[i]>=g[k]&&k<h)
        {tmp+=g[k];k++;tmp%=mod;}
        sum+=tmp;
        sum%=mod;
        sum+=((h-k)*(s[i])%mod)%mod;
        sum%=mod;
        }
        printf("%lld\n",sum);
    }
}

			  	   			 	  		 	  	