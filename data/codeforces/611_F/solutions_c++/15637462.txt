#include <bits/stdc++.h>
using namespace std;
#define ll long long
const int N  = 5e5+5;
const int mod = 1e9+7;
char s[N];
int n,l[2],h[2],cur[2],d[2];
ll ret=0;
bool find(ll move,bool cc){
	if(move!=0 && move %n== 0 && cur[0]==0 && cur[1]==0){
		puts("-1");
		exit(0);
	}
	char c = s[move%n];
	if(c=='L') cc ? cur[0]= h[0]+1 : ++cur[0];
	else if(c=='R')cc? cur[0]= l[0]-1 : --cur[0];
	else if(c=='U')cc? cur[1]= h[1]+1 : ++cur[1];
	else cc? cur[1]= l[1]-1: --cur[1];
	bool change=false;
	for(int i=0;i<2;++i){
		if(cur[i]<l[i] || cur[i]>h[i]){
			ret= (ret + (move+1)%mod*d[i^1])%mod;
			--d[i];
			change= true;
		}
		l[i]= min(l[i],cur[i]);
		h[i]= max(h[i],cur[i]);
	}
	return change;
}
bool go(){
	return d[0]>0 && d[1]>0;
}
int main(){
	scanf("%d%d%d",&n,&d[1],&d[0]);
	scanf("%s",s);
	ll move;
	for(move=0;go()&&move<n;++move)
		find(move,false);
	vector<int> w;
	for(move=n;go()&&move<2*n;++move)
		if(find(move,false))w.push_back(move%n);
	for(ll k=2;go();++k)
		for(move=0;move<w.size();++move)
			if(go())
			find(k*n+w[move],true);
	cout<<ret<<endl;
	return 0;
}
