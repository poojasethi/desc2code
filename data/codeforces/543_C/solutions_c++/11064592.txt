#define N (1<<5)
#define INF (1<<29)
#include <bits/stdc++.h>
using namespace std;

char s[N][N];
vector<int> f[1<<7];
int n,m,a[N][N],dp[1<<20],g[1<<20];

int main()
{
	cin>>n>>m;
	for(int i=0;i<n;i++)
		scanf("%s",s[i]+1);

	for(int i=0;i<n;i++)
		for(int j=1;j<=m;j++)
			scanf("%d",&a[i][j]);

	for(int i=1;i<1<<n;i++)
		dp[i]=INF;

	dp[0]=0;

	for(int i=1;i<=m;i++)
	{
		for(int j=0;j<1<<7;j++)
			f[j].clear();
		for(int j=0;j<n;j++)
			f[s[j][i]].push_back(j);

		for(int j=0;j<1<<7;j++)
		{
			if(!f[j].size()) continue;

			int sum=0,mx=0,st=0;
			for(int k=0;k<1<<n;k++)
				g[k]=dp[k];

			for(int k=0;k<f[j].size();k++)
			{
				int x=f[j][k],w=a[x][i];
				sum+=w,mx=max(mx,w),st|=(1<<x);
				for(int r=(1<<n)-1;r>=0;r--)
					if(r&(1<<x)) dp[r]=min(dp[r],dp[r^(1<<x)]+a[x][i]);
			}

			sum-=mx;
			for(int r=0;r<1<<n;r++)
				dp[r|st]=min(dp[r|st],g[r]+sum);

		}
	}

	cout<<dp[(1<<n)-1]<<endl;
	return 0;
}
