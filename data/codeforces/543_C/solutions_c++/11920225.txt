#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;

#define maxn 21
int n,m;
char c[maxn][maxn];
int a[maxn][maxn];
int dp[1<<maxn];

int log2(int x)
{
	int res=0;
	while (x)
	{
		x>>=1;
		res++;
	}
	return res-1;
}

int main()
{
	cin>>n>>m;
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
			cin>>c[i][j];
	}
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++)
			cin>>a[i][j];
	for(int i=1;i<(1<<n);i++)
		dp[i]=1000000000;
	for(int msk=1;msk<(1<<n);msk++)
	{
		int pos=log2(msk&(-msk));
		for(int i=0;i<m;i++)
		{
			int cost,state,mx;
			cost=state=mx=0;
			for(int k=0;k<n;k++)
			{
				if (c[pos][i]==c[k][i])
				{
					cost+=a[k][i];
					mx=max(mx,a[k][i]);
					state|=(1<<k);
				}
			}
			cost-=mx;
			dp[msk]=min(dp[msk],dp[msk&(msk^state)]+cost);
			dp[msk]=min(dp[msk],dp[msk^(1<<pos)]+a[pos][i]);
		}
	}
	cout<<dp[(1<<n)-1]<<endl;
	return 0;
}