#include <bits/stdc++.h>
using namespace std;

const int maxn = 21;

int n,m,cnt[maxn][maxn],bit[maxn][maxn],a[maxn][maxn],dp[1<<maxn];
char ar[maxn][maxn];

int main(){
	
	scanf("%d%d",&n,&m);
	
	for( int i = 0 ; i < n ; i++ )
		scanf("%s",ar[i]);
	
	for( int i = 0 ; i < n ; i++ )
		for( int j = 0 ; j < m ; j++ )
			scanf("%d",&a[i][j]);
	
	for( int i = 0 ; i < n ; i++ )
		for( int j = 0 ; j < m ; j++ ){
			int mx = 0;
			for( int k = 0 ; k < n ; k++ )
				if( ar[i][j] == ar[k][j] ){
					bit[i][j] |= 1 << k;
					cnt[i][j] += a[k][j];
					mx = max(mx , a[k][j]);
				}
			cnt[i][j] -= mx;
		}
	
	memset(dp , 63 , sizeof dp);
	dp[0] = 0;
	for( int mask = 1 , e = 1 << n ; mask < e ; mask++ )
		for( int i = 0 ; i < n ; i++ )
			if( mask >> i & 1 )
				for( int j = 0 ; j < m ; j++ ){
					dp[mask] = min(dp[mask] , dp[mask & (mask ^ bit[i][j])] + cnt[i][j]);
					dp[mask] = min(dp[mask] , dp[mask ^ (1 << i)] + a[i][j]);
				}
	
	printf("%d\n",dp[(1 << n) - 1]);
	
	return 0;
}
