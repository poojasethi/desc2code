#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int N = 30;
char s[N][N];
int n,m,c[N][N],v[N][N],f[1<<22],state[N][N],tot;
int read(){
	int x = 0,f = 1,c = getchar();
	while (c<'0' || c>'9') {if (c=='-') f = -1;c = getchar();}
	while (c>='0' && c<='9') x = x*10+c-'0',c = getchar();
	return x*f;
}
int main(){
	n = read();m = read();
	for (int i=0;i<n;i++) scanf("%s",s[i]);
	for (int i=0;i<n;i++)
		for (int j=0;j<m;j++) c[i][j] = read();
	tot = (1<<n)-1;
	for (int i=0;i<n;i++)
		for (int k=0;k<m;k++){
			int Max = 0;
			for (int j=0;j<n;j++){
				if (s[i][k]!=s[j][k]) continue;
				v[i][k]+=c[j][k];
				Max = max(Max,c[j][k]);
				state[i][k]|=(1<<j);
			}
			v[i][k]-=Max;
		}
	memset(f,60,sizeof(f));
	f[0] = 0;
	for (int i=0;i<tot;i++)
		for (int j=0;;j++)
			if (!(i&(1<<j))){
				int a = 1<<j;
				for (int k=0;k<m;k++){
					int b = state[j][k];
					f[i|a] = min(f[i|a],f[i]+c[j][k]);
					f[i|b] = min(f[i|b],f[i]+v[j][k]);
				}
				break;
			}
	printf("%d",f[tot]);
	
}
