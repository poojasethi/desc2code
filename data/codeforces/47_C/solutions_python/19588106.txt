from sys import stdin, stdout
from itertools import permutations as perms

def get_map(per):
	table=[['.' for _ in range(len(per[3]))] for _ in range(len(per[2]))]

	for x in range(len(per[0])):
		table[0][x]=per[0][x]
	for x in range(len(per[1])):
		table[x][0]=per[1][x]

	tmp1=len(per[1])-1
	for x in range(len(per[4])):
		table[tmp1+x][-1]=per[4][x]
	tmp2=len(per[0])-1
	for x in range(len(per[5])):
		table[-1][tmp2+x]=per[5][x]

	for x in range(len(per[3])):
		table[tmp1][x]=per[3][x]
	for x in range(len(per[2])):
		table[x][tmp2]=per[2][x]

	return table

def main():
	lines=stdin.readlines()
	lines=map(lambda x: x.rstrip(), lines)
	ans=None

	for per in list(perms(lines)):
		per=list(per)
		if len(per[0])+len(per[5])-1!=len(per[3]): continue
		if len(per[1])+len(per[4])-1!=len(per[2]): continue
		if per[0][0]!=per[1][0]: continue
		if per[1][-1]!=per[3][0]: continue
		if per[0][-1]!=per[2][0]: continue
		if per[3][-1]!=per[4][0]: continue
		if per[2][-1]!=per[5][0]: continue
		if per[4][-1]!=per[5][-1]: continue
		if per[2][len(per[1])-1]!=per[3][len(per[0])-1]: continue

		tmp=get_map(per)
		if not ans: ans=tmp
		elif tmp<ans: ans=tmp

	if not ans:
		print 'Impossible'
	else:
		for line in ans:
			print ''.join(line)

if __name__=='__main__':
	main()