def permutation(L):
    if L == []:
        return [[]]
    else:
        return [[h]+t for i,h in enumerate(L) for t in permutation(L[:i]+L[i+1:])]

ls = []
for i in range(6):
    ls.append(str(raw_input()))

flag = False
for s in permutation(ls):
    j1 = len(s[0]) - 1
    i2 = len(s[1]) - 1
    i3 = len(s[2]) - 1
    j4 = len(s[3]) - 1
    i5 = len(s[4]) - 1
    j6 = len(s[5]) - 1
    if i3 != i2 + i5: continue
    if j4 != j1 + j6: continue
    if s[0][0] != s[1][0]: continue
    if s[0][-1] != s[2][0]: continue
    if s[1][-1] != s[3][0]: continue
    if s[2][i2] != s[3][j1]: continue
    if s[3][-1] != s[4][0]: continue
    if s[2][-1] != s[5][0]: continue
    if s[4][-1] != s[5][-1]: continue
    tmp = [['.' for i in range(j4+1)] for i in range(i3+1)]
    tmp[0][0:j1+1] = s[0]
    for i in range(i2+1): tmp[i][0] = s[1][i]
    for i in range(i3+1): tmp[i][j1] = s[2][i]
    tmp[i2][:] = s[3]
    for i in range(i5+1): tmp[i2+i][-1] = s[4][i]
    tmp[-1][j1:] = s[5]
    if not flag or tmp < res:
        res = tmp
        flag = True

if not flag: print "Impossible"
else:
    for r in res:
        resstr = ""
        for c in r:
            resstr += c
        print resstr

