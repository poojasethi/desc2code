#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>

using namespace std;

int main() {

    vector<string> ret;
    vector<string> in(6);
    for (int i = 0; i < 6; i++) cin >> in[i];
    sort(in.begin(), in.end());
    do {
        int l[6];
        for (int i = 0; i < 6; i++) l[i] = in[i].size();
        if (l[3]+l[5]!=l[4]+1 || l[0]+l[2]!=l[1]+1 ||
            in[0][0]!=in[3][0] || in[0][l[0]-1]!=in[4][0] ||
            in[1][0]!=in[3][l[3]-1] || in[1][l[0]-1]!=in[4][l[3]-1] || in[1][l[1]-1]!=in[5][0] ||
            in[2][0]!=in[4][l[4]-1] || in[2][l[2]-1]!=in[5][l[5]-1]
            ) continue;
        vector<string> cur(l[4], string(l[1], '.'));
        for (int j = 0; j < l[0]; j++) cur[0][j] = in[0][j];
        for (int j = 0; j < l[1]; j++) cur[l[3]-1][j] = in[1][j];
        for (int j = 0; j < l[2]; j++) cur[l[4]-1][j+l[0]-1] = in[2][j];
        for (int j = 0; j < l[3]; j++) cur[j][0] = in[3][j];
        for (int j = 0; j < l[4]; j++) cur[j][l[0]-1] = in[4][j];
        for (int j = 0; j < l[5]; j++) cur[j+l[3]-1][l[1]-1] = in[5][j];
        if (ret.size() == 0 || ret > cur) ret = cur;
    } while (next_permutation(in.begin(), in.end()));

    if (ret.size() == 0) puts("Impossible");
    else for (int i = 0; i < ret.size(); i++) puts(ret[i].c_str());

    return 0;
}
