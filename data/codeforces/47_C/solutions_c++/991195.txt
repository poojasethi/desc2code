#include <iostream>
#include <algorithm>
#include <string>
#include <vector>

using namespace std;

#define FOR(i, a, n) for (register int i = (a); i < (int)(n); ++i)
#define Size(n) ((int)(n).size())

bool add(char &a, char b) {
	if (a != '.' && a != b) return false;
	a = b;
	return true;
}

int main() {
	string s[6];
	FOR(i, 0, 6) cin >> s[i];
	sort(s, s+6);
	vector<string> res;
	do {
		vector<string> V(Size(s[0]), string(Size(s[1]), '.'));
		if (Size(s[0]) != Size(s[4])+Size(s[3])-1) continue;
		if (Size(s[1]) != Size(s[2])+Size(s[5])-1) continue;
		bool ok = true;
		FOR(i, 0, Size(s[0])) ok &= add(V[i][Size(s[2])-1], s[0][i]);
		FOR(i, 0, Size(s[1])) ok &= add(V[Size(s[3])-1][i], s[1][i]);
		FOR(i, 0, Size(s[2])) ok &= add(V[0][i], s[2][i]);
		FOR(i, 0, Size(s[3])) ok &= add(V[i][0], s[3][i]);
		FOR(i, 0, Size(s[4])) ok &= add(V[Size(s[3])-1+i][Size(s[1])-1], s[4][i]);
		FOR(i, 0, Size(s[5])) ok &= add(V[Size(s[0])-1][Size(s[2])-1+i], s[5][i]);
		if (!ok) continue;
		if (res.empty() || V < res) res = V;
	} while (next_permutation(s, s+6));
	if (res.empty())
		cout << "Impossible" << endl;
	else
		FOR(i, 0, Size(res)) cout << res[i] << endl;
	return 0;
}


