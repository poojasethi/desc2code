#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())


string str[6];

int main(){
	rep(i,6) cin>>str[i];
	vector<li> vec;
	rep(i,6) vec.pb(i);
	vector<string> res(100,string(100,'~'));
	do{
		if(sz(str[vec[0]])+sz(str[vec[5]])!=sz(str[vec[2]])+1) continue;
		if(sz(str[vec[1]])+sz(str[vec[4]])!=sz(str[vec[3]])+1) continue;
		if(str[vec[0]][0]!=str[vec[1]][0]) continue;
		if(str[vec[1]][sz(str[vec[1]])-1]!=str[vec[2]][0]) continue;
		if(str[vec[0]][sz(str[vec[0]])-1]!=str[vec[3]][0]) continue;
		if(str[vec[2]][sz(str[vec[2]])-1]!=str[vec[4]][0]) continue;
		if(str[vec[3]][sz(str[vec[3]])-1]!=str[vec[5]][0]) continue;
		if(str[vec[3]][sz(str[vec[1]])-1]!=str[vec[2]][sz(str[vec[0]])-1]) continue;
		if(str[vec[4]][sz(str[vec[4]])-1]!=str[vec[5]][sz(str[vec[5]])-1]) continue;
		vector<string> tmp(sz(str[vec[3]]),string(sz(str[vec[2]]),'.'));
		rep(i,sz(str[vec[0]])) tmp[0][i]=str[vec[0]][i];
		rep(i,sz(str[vec[1]])) tmp[i][0]=str[vec[1]][i];
		rep(i,sz(str[vec[2]])) tmp[sz(str[vec[1]])-1][i]=str[vec[2]][i];
		rep(i,sz(str[vec[3]])) tmp[i][sz(str[vec[0]])-1]=str[vec[3]][i];
		rep(i,sz(str[vec[4]])) tmp[i+sz(str[vec[1]])-1][sz(str[vec[2]])-1]=str[vec[4]][i];
		rep(i,sz(str[vec[5]])) tmp[sz(str[vec[3]])-1][sz(str[vec[0]])-1+i]=str[vec[5]][i];
		res=min(res,tmp);
	}while(next_permutation(vec.begin(),vec.end()));
	if(res==vector<string>(100,string(100,'~'))) cout<<"Impossible"<<endl;
	else rep(i,sz(res)) cout<<res[i]<<endl;
}
