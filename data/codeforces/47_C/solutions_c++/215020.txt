#include <vector>
#include <string>
#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstring>
using namespace std;

#define ALL(x) x.begin(),x.end()
#define REP(i,n) for(int i=0,_n=(n);i<_n;++i)
#define FOREACH(it,c) for(__typeof(c.begin()) it=c.begin();it!=c.end();++it)
#define PB push_back
#define N_P next_permutation

typedef vector<string> VS;
template<class T> inline int size(const T&c) { return c.size(); }

// Powered By TimoAI 2.2

const VS empty;

inline char back(const string &s) { return s[size(s)-1]; }
inline char front(const string &s) { return s[0]; }



char T[32][32];

void isi(const string&s,int sj,int si,int pj,int pi) {
	REP(i,size(s)) T[si+pi*i][sj+pj*i]=s[i];
}

VS calc(VS W) {

	string h1 = W[0];
	string h2 = W[1];
	string h3 = W[2];
	string v1 = W[3];
	string v2 = W[4];
	string v3 = W[5];

	int width = size(h2);
	int height = size(v2);

	if( size(h1) + size(h3) != width+1)
		return empty;
	if( size(v1) + size(v3) != height+1)
		return empty;
	if( !(front(h1)==front(v1) && front(h2)==back(v1)) )
		return empty;
	if( !(back(h1)==front(v2) && h2[size(h1)-1]==v2[size(v1)-1]) )
		return empty;
	if( !(back(v2)==front(h3) && back(h2)==front(v3) && back(h3)==back(v3)) )
		return empty;

	memset(T,'.',sizeof(T));
	// isi horizontal
	isi(h1,0,0,1,0);
	isi(h2,0,size(v1)-1,1,0);
	isi(h3,size(h1)-1,size(v2)-1,1,0);

	// isi vertical
	isi(v1,0,0,0,1);
	isi(v2,size(h1)-1,0,0,1);
	isi(v3,size(h2)-1,size(v1)-1,0,1);

	VS ret;
	REP(i,height) {
		string z="";
		REP(j,width) z.PB(T[i][j]);
		ret.PB(z);
	}
	return ret;
}

int main() {
	VS W(6);
	VS ans;

	REP(i,6) cin>>W[i];
	sort(ALL(W));
	do {
		VS temp = calc(W);
		if(size(temp)==0) continue;
		if(size(ans)==0 || temp < ans)
			ans = temp;
	}while(N_P(ALL(W)));
	if(size(ans)==0) puts("Impossible");
	else {
		FOREACH(it,ans)cout<<*it<<endl;
	}
	return 0;
}
