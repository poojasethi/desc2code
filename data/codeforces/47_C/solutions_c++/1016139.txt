#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;
#define REP(i,a,b) for(i=a;i<b;i++)

char a[50][50];
string s[6];
int l[6];

void puth(string s,int x,int y){
        int i;
        REP(i,0,s.size()) a[x][y+i]=s[i];
}

void putv(string s,int x,int y){
        int i;
        REP(i,0,s.size()) a[x+i][y]=s[i];
}

vector< string > solve(){
        vector< string > ret;
        int i,j;
        REP(i,0,6) l[i]=s[i].size();
        if (l[0]+l[2]-1!=l[1]) return ret;
        if (l[3]+l[5]-1!=l[4]) return ret;
        if (s[0][0]!=s[3][0]) return ret;
        if (s[0][l[0]-1]!=s[4][0]) return ret;
        if (s[1][0]!=s[3][l[3]-1]) return ret;
        if (s[1][l[0]-1]!=s[4][l[3]-1]) return ret;
        if (s[1][l[1]-1]!=s[5][0]) return ret;
        if (s[2][0]!=s[4][l[4]-1]) return ret;
        if (s[2][l[2]-1]!=s[5][l[5]-1]) return ret;
        REP(i,0,l[4])REP(j,0,l[1]) a[i][j]='.';
        puth(s[0],0,0);puth(s[1],l[3]-1,0);puth(s[2],l[4]-1,l[0]-1);
        putv(s[3],0,0);putv(s[4],0,l[0]-1);putv(s[5],l[3]-1,l[1]-1);
        REP(i,0,l[4]){
                ret.push_back("");
                REP(j,0,l[1]) ret[i]+=a[i][j];
        }
        return ret;
}

int main(){
        int i;
        REP(i,0,6) cin>>s[i];
        vector< string > ans;
        sort(s,s+6);
        do{
                vector< string > tmp=solve();
                if (!tmp.empty()&&(ans.empty()||tmp<ans)) ans=tmp;
        }while(next_permutation(s,s+6));
        if (ans.empty()) cout<<"Impossible"<<endl;
        else {
                REP(i,0,ans.size()) cout<<ans[i]<<endl;
        }
}
