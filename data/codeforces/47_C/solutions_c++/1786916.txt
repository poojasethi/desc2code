#include<stdio.h>
#include<cstring>
#include<algorithm>
using namespace std;
char str[6][40];
char mp[100][100],temp[100][100],ti,tj;
int mi,mj;
void get_data(){
	int i;
	for(i=0;i<6;i++)scanf("%s",str[i]);
}
bool mk[10];
char s[6][40];
void putit_hor(int si,int sj,char c[]){
	int i;
	for(i=0;c[i];i++)temp[si][sj+i]=c[i];
}
void putit_ver(int si,int sj,char c[]){
	int i;
	for(i=0;c[i];i++)temp[si+i][sj]=c[i];
}
void update(){
	bool ok=0;
	if(mi!=-1){
		int i,t;
		for(i=0;i<ti&&i<mi;i++){
			t=strcmp(temp[i],mp[i]);
			if(t==1)return;
			if(t==-1){ok=1;break;}
		}
	}
	for(int i=0;i<ti;i++)strcpy(mp[i],temp[i]);
	mi=ti;mj=tj;
}
void gogogo(){
	int i,j,l[6];
	for(i=0;i<6;i++)l[i]=strlen(s[i]);
	if(l[0]+l[2]-1!=l[1]||l[3]+l[5]-1!=l[4])return;
	if(s[0][0]!=s[3][0]||s[0][l[0]-1]!=s[4][0]||s[3][l[3]-1]!=s[1][0]||s[1][l[0]-1]!=s[4][l[3]-1]
		||s[1][l[1]-1]!=s[5][0]||s[4][l[4]-1]!=s[2][0]||s[2][l[2]-1]!=s[5][l[5]-1])return;
	ti=l[4];tj=l[1];
	for(i=0;i<ti;i++){
		for(j=0;j<tj;j++)temp[i][j]='.';
		temp[i][j]=0;
	}
	putit_hor(0,0,s[0]);
	putit_hor(l[3]-1,0,s[1]);
	putit_hor(l[4]-1,l[0]-1,s[2]);
	putit_ver(0,0,s[3]);
	putit_ver(0,l[0]-1,s[4]);
	putit_ver(l[3]-1,l[1]-1,s[5]);
	update();
}
void dfs(int loc){
	if(loc==6){
		gogogo();
		return;
	}
	int i;
	for(i=0;i<6;i++){
		if(mk[i])continue;
		strcpy(s[loc],str[i]);
		mk[i]=1;
		dfs(loc+1);
		mk[i]=0;
	}
}
void run(){
	mi=mj=-1;
	memset(mk,0,sizeof(mk));
	dfs(0);
	if(mi==-1)printf("Impossible\n");
	else{
		int i;
		for(i=0;i<mi;i++)printf("%s\n",mp[i]);
	}
}
int main(){
	get_data();
	run();
	return 0;
}
  			 						 	  	 		  		 	