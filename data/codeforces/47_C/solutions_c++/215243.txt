#include<iostream>
#include<sstream>
#include<algorithm>
#include<numeric>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<cstring>
#include<cassert>

#define rep(i,n) for(int i=0;i<n;i++)
#define all(c) (c).begin(),(c).end()
#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define mp make_pair
#define pb push_back
#define dbg(x) cerr<<#x<<" = "<<(x)<<endl

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int,int> pi;

const int inf=1<<28;
const double INF=1e12,EPS=1e-9;

string in[6];
vs tmp,ans;

bool ok(int *l){
  if(l[0]!=l[1]+l[2]-1||l[3]!=l[4]+l[5]-1)return 0;
  return 1;
}
bool ck(char *h,char *t){
  if(h[1]!=h[4]||t[4]!=h[0]||t[1]!=h[3])return 0;
  if(t[3]!=h[2]||t[0]!=h[5]||t[2]!=t[5])return 0;
  return 1;
}

void run()
{
  ans.clear();
  int l[6]; char h[6],t[6];
  rep(i,6)getline(cin,in[i]);
  sort(in,in+6);
  do{
    rep(i,6){
      l[i]=in[i].size();
      h[i]=in[i][0]; t[i]=in[i][l[i]-1];
    }
    if(!ok(l)||!ck(h,t)||in[0][l[1]-1]!=in[3][l[4]-1])continue;
    tmp=vs(l[0],string(l[3],'.'));

    rep(i,l[0])tmp[i][l[4]-1]=in[0][i];
    rep(i,l[1])tmp[i][0]=in[1][i];
    rep(i,l[2])tmp[l[0]-l[2]+i][l[3]-1]=in[2][i];
    rep(i,l[3])tmp[l[1]-1][i]=in[3][i];
    rep(i,l[4])tmp[0][i]=in[4][i];
    rep(i,l[5])tmp[l[0]-1][l[3]-l[5]+i]=in[5][i];

    if(ans.empty()||tmp<ans)ans=tmp;
  }while(next_permutation(in,in+6));
 
  if(ans.empty())cout<<"Impossible"<<endl;
  else rep(i,ans.size())cout<<ans[i]<<endl;
}

int main()
{
  //int cs=3;rep(i,cs)
  run(); return 0;
}
