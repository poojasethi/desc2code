#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;
char ans[33][33];
int ha_a,li_a;
char ss[33][33];
char str[6][33];
int arr[6];
int len[6];
bool ok;
void judge(int ii)
{
	int i;
	if(len[arr[0]]+len[arr[4]]!=len[arr[3]]+1) return;
	if(len[arr[1]]+len[arr[5]]!=len[arr[2]]+1) return;
	if(str[arr[0]][0]!=str[arr[1]][0]) return;
	if(str[arr[0]][len[arr[0]]-1]!=str[arr[2]][0]) return;
	if(str[arr[1]][len[arr[1]]-1]!=str[arr[3]][0]) return;
	if(str[arr[2]][len[arr[2]]-1]!=str[arr[4]][0]) return;
	if(str[arr[4]][len[arr[4]]-1]!=str[arr[5]][len[arr[5]]-1]) return;
	if(str[arr[3]][len[arr[3]]-1]!=str[arr[5]][0]) return;
	if(str[arr[3]][len[arr[0]]-1]!=str[arr[2]][len[arr[1]]-1]) return ;
	ok=1;
	memset(ss,'.',sizeof(ss));
	for(i=0;i<len[arr[0]];i++) ss[0][i]=str[arr[0]][i];
	for(i=0;i<len[arr[3]];i++) ss[len[arr[1]]-1][i]=str[arr[3]][i];
	for(i=0;i<len[arr[4]];i++) ss[len[arr[2]]-1][len[arr[0]]-1+i]=str[arr[4]][i];

	for(i=0;i<len[arr[1]];i++) ss[i][0]=str[arr[1]][i];
	for(i=0;i<len[arr[2]];i++) ss[i][len[arr[0]]-1]=str[arr[2]][i];
	for(i=0;i<len[arr[5]];i++) ss[len[arr[1]]-1+i][len[arr[3]]-1]=str[arr[5]][i];

	for(i=0;i<len[arr[2]];i++) ss[i][len[arr[3]]]='\0';
	for(i=0;i<len[arr[3]];i++) ss[len[arr[2]]][i]='\0';

	int hang=len[arr[2]];
	int lie=len[arr[3]];
	//printf("==%s\n",ss[0]);
	if(ha_a==0)
	{
		ha_a=hang;
		li_a=lie;
		for(i=0;i<ha_a;i++)
		{
			strcpy(ans[i],ss[i]);
		}
	}
	else
	{
		bool huan=1;
		int mmin=ha_a>hang?ha_a:hang;
		for(i=0;i<mmin;i++)
		{
			if(strcmp(ss[i],ans[i])>0)
			{
				huan=0;break;
			}
			else if(strcmp(ss[i],ans[i])<0)
			{
				huan=1;break;
			}
		}
		if(huan)
		{
			int j;
			for(i=hang;i<ha_a;i++)
			{
				for(j=0;j<lie;j++) ans[i][j]='.';
			}
			ha_a=hang;
			li_a=lie;
			for(i=0;i<ha_a;i++)
			{
				strcpy(ans[i],ss[i]);
			}
		}
	}
}
int main()
{
	int i;
	ok=0;
	ha_a=0;li_a=0;
	memset(ans,'.',sizeof(ans));
	for(i=0;i<6;i++) {scanf("%s",str[i]);len[i]=strlen(str[i]);}
	for(i=0;i<6;i++) arr[i]=i;
	for(i=0;i<720;i++)
	{
		judge(i);
		next_permutation(arr,arr+6);
	}
	if(!ok) printf("Impossible\n");
	else
	{
		for(i=0;i<ha_a;i++) printf("%s\n",ans[i]);
	}
	return 0;
}
	 	 				 	 		    	  						