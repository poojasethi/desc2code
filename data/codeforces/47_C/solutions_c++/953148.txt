#include <cstdio>
#include <cstring>
#include <vector>
#include <string>
#include <algorithm>
#include <iostream>
using namespace std;

bool test(string *a) {
	if(a[0].size() + a[5].size() != a[3].size() + 1) return false;
	if(a[1].size() + a[4].size() != a[2].size() + 1) return false;
	if(a[0][0] != a[1][0] ||
		*a[0].rbegin() != a[2][0] ||
		a[3][0] != *a[1].rbegin() ||
		a[3][a[0].size()-1] != a[2][a[1].size()-1]
		|| *a[3].rbegin() != a[4][0] ||
		a[5][0] != *a[2].rbegin() ||
		*a[4].rbegin() != *a[5].rbegin()) return false;
	return true;
}

char w[100][100];
string wans[100], rans[100];
int flag=0, RR;

void output(string *a) {
	int R = (int)a[2].size();
	int C = (int)a[3].size();
	memset(w, 0, sizeof(w));
	for(int i=0;i<R;i++) for(int j=0;j<C;j++) w[i][j] = '.';
	for(int i=0;i<(int)a[0].size();i++) w[0][i] = a[0][i];
	for(int i=0;i<(int)a[1].size();i++) w[i][0] = a[1][i];
	for(int i=0;i<(int)a[2].size();i++) w[i][a[0].size()-1] = a[2][i];
	for(int i=0;i<(int)a[3].size();i++) w[a[1].size()-1][i] = a[3][i];
	for(int i=0;i<(int)a[4].size();i++) w[i+a[1].size()-1][C-1] = a[4][i];
	for(int i=0;i<(int)a[5].size();i++) w[R-1][i+a[0].size()-1] = a[5][i];
	for(int i=0;i<R;i++) wans[i] = w[i];
}

bool lessthan(string *a) {
	for(int i=0;i<(int)a[2].size();i++)
		if(wans[i] != rans[i])
			return wans[i] < rans[i];
	return false;
}

int main(void) {
	string a[6];
	for(int i=0;i<6;i++) cin >> a[i];
	sort(a, a+6);
	do {
		if(test(a)) {
			output(a);
			if(flag==0 || (flag==1 && lessthan(a))) {
				for(int i=0;i<(int)a[2].size();i++)
					rans[i] = wans[i];
				RR = (int)a[2].size();
				flag=1;
			}
		}
	} while(next_permutation(a, a+6));
	if(flag) {
		for(int i=0;i<RR;i++)
			puts(rans[i].c_str());
	} else
	puts("Impossible");
	return 0;
}

