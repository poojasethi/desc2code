#include<iostream>
#include<string>
#include<algorithm>
#include<vector>

using namespace std;

int main()
{
	string word[6];
	for (int i=0;i<6;i++)
		cin>>word[i];
	int perm[6] = {0,1,2,3,4,5};
	string ans[50];
	string line[50];
	string w[6];
	int ans_h = 0;
	bool f = false;
	do
	{
		for (int i=0;i<6;i++)
			w[i] = word[perm[i]];	
		
		if (w[1].size() + w[5].size() != w[2].size()+1)
			continue;
		if (w[0].size() + w[4].size() != w[3].size()+1)
			continue;

		if (w[0][0] != w[1][0])
			continue;
		if (w[0][w[0].size()-1] != w[2][0])
			continue;
		if (w[1][w[1].size()-1] != w[3][0])
			continue;
		if (w[3][w[3].size()-1] != w[5][0])
			continue;
		if (w[5][w[5].size()-1] != w[4][w[4].size()-1])
			continue;
		if (w[2][w[2].size()-1] != w[4][0])
			continue;
		if (w[3][w[0].size()-1] != w[2][w[1].size()-1])
			continue;

		for (int  i=0;i<w[2].size();i++)
			line[i] = "";			
		line[0] = w[0] + string(w[4].size()-1,'.');
		for (int i=1;i<w[1].size()-1;i++)
			line[i] = w[1][i] + string(w[0].size()-2,'.') + w[2][i] + string(w[4].size()-1,'.');
		line[w[1].size()-1] = w[3];
		for (int i=w[1].size();i<w[2].size()-1;i++)
			line[i] = string(w[0].size()-1,'.') + w[2][i] + string(w[4].size()-2,'.') + w[5][i-w[1].size()+1];
		line[w[2].size()-1] = string(w[0].size()-1,'.') + w[4];
		
		bool replace = !f;
		
		for (int i=0;i<w[2].size() && !replace;i++)
		{
			if (line[i] < ans[i])
				replace = true;
			if (line[i] > ans[i])
				break;
		}
		if (replace)
		{
			for (int i=0;i<w[2].size();i++)
			{
				ans[i] = line[i];
				ans_h = w[2].size();
			}
			f = true;
		}	
	}while(next_permutation(perm,perm+6));
	if (f)
		for (int  i=0;i<ans_h;i++)
			cout<<ans[i]<<endl;
	else
		cout<<"Impossible"<<endl;
	return 0;
}