#include<iostream>
#include<algorithm>

#define SZ(c) int((c).size())
#define WAIT cout<<flush, system("PAUSE")
using namespace std;
#define MAX 33

int N=6;
string s[6], w[6];
int id[6], cnt;
char curr[MAX][MAX];
int ls;
string tmp[MAX], sol[MAX];

int h1, h2, h3, v1, v2, v3;
void update(){
   ls = v2;
   for(int I=0; I<ls; I++) sol[I]=tmp[I];
}
void board(){
   for(int I=0; I<v2; I++)
      for(int K=0; K<h2; K++)
         curr[I][K]='.';
   for(int I=0; I<h1; I++) curr[0][I]=w[0][I];
   for(int I=0; I<h2; I++) curr[v1-1][I]=w[1][I];
   for(int I=0; I<h3; I++) curr[v2-1][h1+I-1]=w[2][I];
   
   for(int I=0; I<v1; I++) curr[I][0]=w[3][I];
   for(int I=0; I<v2; I++) curr[I][h1-1]=w[4][I];
   for(int I=0; I<v3; I++) curr[v1+I-1][h2-1]=w[5][I];

   for(int I=0; I<v2; I++) {
      curr[I][h2]=0;
      tmp[I] = string(curr[I]);
      //cout<<tmp[I]<<endl;
   }
   //cout << endl;
   
   for(int I=0; I<min(v2, ls); I++){
      if (tmp[I]<sol[I]){ update();
         return;
      }
      if (tmp[I]>sol[I]) return;
   }
   if (ls>v2) update();
}
int main(){
   //string a="z";
   //string b="za";
   //cout << (a<b) << endl;
   
   ls=1000;
   sol[0]="Z";
   sol[0][0]++;
   for(int I=0; I<N; I++) cin>>s[I], id[I]=I;
   do{
      for(int I=0; I<N; I++) w[I]=s[id[I]];
      h1 = SZ(w[0]);
      h2 = SZ(w[1]);
      h3 = SZ(w[2]);
      v1 = SZ(w[3]);
      v2 = SZ(w[4]);
      v3 = SZ(w[5]);
      if (h2!=h1+h3-1)continue;
      if (v2!=v1+v3-1)continue;
      
      if (w[0][0]!=w[3][0])continue;
      if (w[0][h1-1]!=w[4][0])continue;
      
      if (w[1][0]!=w[3][v1-1])continue;
      if (w[1][h1-1]!=w[4][v1-1])continue;
      if (w[1][h2-1]!=w[5][0])continue;
      
      if (w[2][0]!=w[4][v2-1])continue;
      if (w[2][h3-1]!=w[5][v3-1])continue;
      
      board();
   }while(next_permutation(id, id+N));
   
   if (sol[0][0]>'Z')cout<<"Impossible"<<endl;
   else{
      for(int I=0; I<ls; I++)
         cout<<sol[I]<<endl;
   }
   //WAIT;
}









