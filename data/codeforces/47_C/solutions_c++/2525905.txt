#include <iostream>
#include <cstring>
#include <cstdio>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

string str[6];
vector<string> ans;

void check(){
    if(str[0].length() + str[4].length() - 1 != str[2].length()) return;
    if(str[1].length() + str[5].length() - 1 != str[3].length()) return;
    if(str[0][0] != str[1][0]) return;
    if(str[1][str[1].length() - 1] != str[2][0]) return;
    if(str[0][str[0].length() - 1] != str[3][0]) return;
    if(str[2][str[2].length() - 1] != str[5][0]) return;
    if(str[3][str[3].length() - 1] != str[4][0]) return;
    if(str[5][str[5].length() - 1] != str[4][str[4].length() - 1]) return;
    if(str[2][str[0].length() - 1] != str[3][str[1].length() - 1]) return;
    vector<string> now;
    for(int i = 0; i < str[3].length(); ++i){
        string s;
        for(int j = 0; j < str[2].length(); ++j) s += ".";
        now.push_back(s);
    }
    for(int i = 0; i < str[0].length(); ++i)
        now[0][i] = str[0][i];
    for(int i = 0; i < str[1].length(); ++i)
        now[i][0] = str[1][i];
    for(int i = 0; i < str[2].length(); ++i)
        now[str[1].length() - 1][i] = str[2][i];
    for(int i = 0; i < str[3].length(); ++i)
        now[i][str[0].length() - 1] = str[3][i];
    for(int i = 0; i < str[4].length(); ++i)
        now[str[3].length() - 1][i + str[0].length() - 1] = str[4][i];
    for(int i = 0; i < str[5].length(); ++i)
        now[str[1].length() - 1 + i][str[2].length() - 1] = str[5][i];
    if(ans.empty() || ans > now)
        ans = now;
}
int main(){
    for(int i = 0; i < 6; ++i) cin >> str[i];
    sort(str, str + 6);
    do{
        check();
    }while(next_permutation(str, str + 6));
    if(ans.empty()){
        puts("Impossible");
        return 0;
    }
    for(int i = 0; i < ans.size(); ++i) cout << ans[i] << endl;
    return 0;
}