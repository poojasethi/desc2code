#include<stdio.h>
#include<algorithm>
using namespace std;
struct node
{
	int id,num;
	bool operator < (const node &t)const 
	{
		return num<t.num;
	}
}a[1001];
int n,st,ans,l[1000001],r[1000001];
void work(node &a,node&b,node &c)
{
	while(a.num)
	{
		int t=b.num/a.num;
		for(int d=0;d<30&&t;d++)
		if(t>>d&1)
		{
			b.num-=a.num;a.num<<=1;
			++ans;l[ans]=a.id;r[ans]=b.id;
			t^=(1<<d);
		}
		else 
		{
			c.num-=a.num;a.num<<=1;
			++ans;l[ans]=a.id;r[ans]=c.id;
		}
		if(b<a)swap(a,b);if(c<a)swap(a,c);
		if(c<b)swap(b,c);
	}
}
int main()
{
	scanf("%d",&n);
	for(int i=1;i<=n;i++)scanf("%d",&a[i].num),a[i].id=i;
	sort(a+1,a+n+1);
	for(int i=1;i<=n;i++)if(a[i].num){st=i;break;}
	if(!st||st==n)return puts("-1"),0;
	for(int i=st;i<n-1;i++)
	{
		sort(a+i,a+i+3);
		work(a[i],a[i+1],a[i+2]);
	}
	printf("%d\n",ans);
	for(int i=1;i<=ans;i++)printf("%d %d\n",l[i],r[i]);
}
