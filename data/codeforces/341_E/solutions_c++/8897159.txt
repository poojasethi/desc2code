#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;
int ansx[1000005],ansy[1000005],A[1005],n,i,p,o,L2,L1;
void work(int x,int y)
{
    if (A[x]>A[y])
    {
        A[x]-=A[y];
        A[y]+=A[y];
    ansx[++o]=y;
    ansy[o]=x;
    } else
    {
        A[y]-=A[x];
        A[x]+=A[x];
    ansx[++o]=x;
    ansy[o]=y;
    }

}
void dfs(int a,int b,int c,int x,int y,int z)
{
    if (a>b) {swap(x,y); swap(a,b);}
    if (a>c) {swap(x,z); swap(a,c);}
    if (b>c) {swap(y,z); swap(b,c);}
    int q=b%a,p=b/a;
    while (p!=0)
    {
        if (p%2==1) work(x,y); else work(x,z);
        p/=2;
    }
    if (q==0) return;
    dfs(A[x],A[y],A[z],x,y,z);
}
int main()
{
    scanf("%d",&n);
    for (i=1; i<=n; i++)
    {
        scanf("%d",&A[i]);
        if (A[i]==0) p++;
    }
    if (n-p<2) {cout<<-1<<endl; return 0;}
    for (i=1; i<=n; i++) if (A[i]!=0) {if (L1==0) L1=i; else if (!L2) L2=i;}
    for (i=L2+1; i<=n; i++)
    if (A[i])
    {
        dfs(A[L1],A[L2],A[i],L1,L2,i);
        if (!A[L1]) L1=i; if (!A[L2]) L2=i;
    }
    cout<<o<<endl;
    for (i=1; i<=o; i++) printf("%d %d\n",ansx[i],ansy[i]);
    return 0;
}
