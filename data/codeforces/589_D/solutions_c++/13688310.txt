#include <bits/stdc++.h>

using namespace std;

const int maxn = 1000 + 5;

struct Walk
{
	int st, ed, spd, t;
}p[maxn];

int GetMeet(Walk a,Walk b)
{
	if (b.t < a.t)
		swap(a, b);
	if (a.t + abs(a.st - a.ed) < b.t) return 0;
	int pa = a.st + a.spd * (b.t - a.t), pb = b.st;
	if (a.spd == b.spd)
	{
		if(pa != pb)
			return 0;
		return 1;
	}
	if (a.spd  == -1)
	{
		swap(a, b);
		swap(pa, pb);
	}
	int x = min(abs(pa - a.ed) , abs(pb - b.ed));
	if(pa > pb || pa + a.spd * x < pb + x * b.spd)
		return 0;
	return 1;
}

int main()
{
	int n;
	scanf("%d", &n);
	for (int i = 0 ; i < n ; i++)
	{
		scanf("%d%d%d", &p[i].t, &p[i].st, &p[i].ed);
		if (p[i].st < p[i].ed)
			p[i].spd = 1;
		else 
			p[i].spd = -1;
	}
	
	for (int i = 0 ; i < n ; i++)
	{
		int ans = 0;
		for (int j = 0 ; j < n ; j++)
		{
			if(i == j)continue;
			ans += GetMeet(p[i], p[j]);
		}
		printf("%d%c", ans, (i == n-1) ? ('\n') : (' '));
	}
	return 0;
} 