#include <stdio.h>
#include <algorithm>
#include <vector>
#include <map>
#include <queue>
#include <string>
#include <math.h>
using namespace std;

int main()
{
  int n, k;
  scanf("%d %d", &n, &k);
  vector<pair<int, int> > V;
  for (int i=0; i<n; i++) {
    int p1, p2;
    scanf("%d %d", &p1, &p2);
    V.push_back(pair<int, int>(p1, p2));
  }
  if (n <= k) { printf("-1\n"); return 0; }
  sort(V.begin(), V.end());
  vector<pair<int, int> > res;
  for (int ii=0; ii<min(n, k+1); ii++)
    for (int jj_=0; jj_<min(n, k+1); jj_++) {
      int jj = n-1 - jj_;
      int cx = V[ii].first + V[jj].first;
      int cy = V[ii].second + V[jj].second;
      int unmatched = n;
      int j = n-1;
      for (int i=0; i<n; i++) {
        if (i>j) break;
        pair<int, int> A;
        A.first = cx - V[i].first;
        A.second = cy - V[i].second;
        if (A == V[i]) { unmatched --; continue; }
        while (j>=0 && A < V[j]) j--;
        if (A == V[j]) { unmatched -= 2; j --; }
      }
      if (unmatched > k) continue;
      res.push_back(pair<int, int>(cx, cy));
    }

  sort(res.begin(), res.end());
  res.erase(unique(res.begin(), res.end()), res.end());
  printf("%d\n", res.size());
  for (int i=0; i<res.size(); i++)
    printf("%.1f %.1f\n", res[i].first/2.0, res[i].second/2.0);
  return 0;
}
