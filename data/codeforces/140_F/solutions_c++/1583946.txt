#include <cstdio>
#include <algorithm>
#include <vector>
#include <cstring>
using namespace std;
#define mk make_pair
#define X first
#define Y second
#define pb push_back
#define ST sort
#define UN unique
typedef pair<int, int> PII;
int n, m;
PII A[4200010], B[400010], C[4200010], a[200010];
int nA, nB, nC;
vector<PII> ans;
int main() {
	scanf("%d%d", &n, &m);
	if (m >= n)
		return puts("-1"), 0;
	for (int i = 0; i < n; ++i)
		scanf("%d%d", &a[i].X, &a[i].Y);
	ST(a, a + n);
	for (int k = 0; k <= m; ++k) {
		nB = 0;
		for (int i = 0; i < n; ++i) {
			int j = n - i - 1 - k;
			if (0 <= j && j < n)
				B[nB++] = mk(a[i].X + a[j].X, a[i].Y + a[j].Y);
			if (!k)
				continue;
			j = n - i - 1 + k;
			if (0 <= j && j < n)
				B[nB++] = mk(a[i].X + a[j].X, a[i].Y + a[j].Y);
		}
		ST(B, B + nB);
		merge(A, A + nA , B, B + nB, C);
		nA += nB;
		memcpy(A, C, sizeof(PII) * nA);
	}
	for (int i = 0, j; i < nA; i = j) {
		for (j = i; j < nA && A[i] == A[j]; ++j);
		if (j - i >= n - m)
			ans.pb(A[i]);
	}
	ST(ans.begin(), ans.end());
	int tot = UN(ans.begin(), ans.end()) - ans.begin();
	printf("%d\n", tot);
	for (int i = 0; i < tot; ++i)
		printf("%lf %lf\n", ans[i].X / 2.0, ans[i].Y / 2.0);
}
