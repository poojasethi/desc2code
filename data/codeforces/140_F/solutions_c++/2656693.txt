#include <cstdio>
#include <utility>
#include <algorithm>
using namespace std;

#define _x first
#define _y second
typedef pair<int, int> pi;

const int N = 200050;

pi P[N], res[N];
int n, k, cres;

bool operator< (pi a, pi b) {
	return a._x == b._x ? a._y < b._y : a._x < b._x;
}
pi operator+ (pi a, pi b) { return pi(a._x + b._x, a._y + b._y); }

bool solve (int l, int r, int lim)
{
	pi cr = P[l] + P[r];
	for (++l, --r; l <= r; )
		if (P[l] + P[r] == cr) ++l, --r;
		else
		{
			if (P[l] + P[r] < cr) ++l; else --r;
			if (--lim < 0) return false;
		}
	res[++cres] = cr;
	return true;
}

int main ()
{
#ifdef LOCAL
	freopen("in", "r", stdin);
#endif
	scanf("%d%d", &n, &k);
	if (k >= n)
	{
		printf("-1\n");
		return 0;
	}
	for (int i = 1; i <= n; ++i)
		scanf("%d%d", &P[i]._x, &P[i]._y);
	sort(P + 1, P + n + 1);
	for (int i = 0; i <= k; ++i)
		for (int j = n; j >= i && n - j + i <= k; --j)
			solve(i + 1, j, k - (n - j + i));
	sort(res + 1, res + 1 + cres);
	cres = unique(res + 1, res + 1 + cres) - (res + 1);
	printf("%d\n", cres);
	for (int i = 1; i <= cres; ++i)
		printf("%.9lf %.9lf\n", res[i]._x / 2.0, res[i]._y / 2.0);
	return 0;
}

