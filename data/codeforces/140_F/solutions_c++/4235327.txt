#include<cstdio>
#include<algorithm>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<vector>

using namespace std;

#define PI pair<int,int>
#define MP(x,y) make_pair(x,y)
#define x first
#define y second
#define N 200005

PI point[N];
int n,k,cnt=0;
PI ans[N];

void init()
{
	scanf("%d%d",&n,&k);
	for(int i=1;i<=n;i++)
	{
		int p,q;
		scanf("%d%d",&p,&q);
		point[i]=MP(p,q);
	}
	sort(point+1,point+1+n);
}

bool check(int x,int y,int z,int z1)
{
	PI now1=point[z],now2=point[z1];
	int uu=0,l=1,r=n;
	while(l<=r&&uu<=k)
	{
		PI kk=MP(now1.x+now2.x,now1.y+now2.y);
		PI kk1=MP(point[l].x+point[r].x,point[l].y+point[r].y);
		if(kk==kk1)
			l++,r--;
		else
		{
			uu++;
			if(kk1<kk) l++;
			else	   r--;
		}
	}
	return uu<=k;
}
void work()
{
	if(k>=n) 
	{	printf("-1\n"); exit(0);}
	if(check(1,n,1,n))
		ans[++cnt]=MP(point[1].x+point[n].x,point[1].y+point[n].y);	
	for(int i=1;i<=k+1;i++)
		for(int j=n-k;j<=n;j++)
			if(check(i+1,j-1,i,j))
				ans[++cnt]=MP(point[i].x+point[j].x,point[i].y+point[j].y);	
	sort(ans+1,ans+1+cnt);
	cnt=unique(ans+1,ans+1+cnt)-ans-1;
	printf("%d\n",cnt);
	for(int i=1;i<=cnt;i++)
		printf("%.6lf %.6lf\n",(double)(ans[i].x)/2.0,(double)(ans[i].y)/2.0);	
	return ;
}

int main()
{
	init();
	work();
	return 0;
} 
 	  				 	 		    				   	