#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<algorithm>

using namespace std;
#define MP make_pair
#define fi first
#define sc second
const int maxn = 300000;
static int N,K,len;
pair<int,int> P[maxn];
pair<int,int> ans[maxn];
void ins(int x,int y){
	pair<int,int> A=MP(x,y);
	for (int i=1;i<=len;i++)
		if(ans[i]==A) return;
	len++;ans[len]=A;
}
bool Chk(int sx,int sy,int lef){
	int ed=N;
	for (int i=1;i<=N;i++){
		int tx=sx-P[i].fi,ty=sy-P[i].sc;
		while (ed>=1&&(P[ed].fi>tx||(P[ed].fi==tx&&P[ed].sc>ty))) ed--;
		if (P[ed].fi!=tx||P[ed].sc!=ty) lef--;
		if (lef<0) return false;
	}
	return true;
}
int main(){
	//freopen("140F.in","r",stdin);
	//freopen("140F.out","w",stdout);
	scanf("%d%d",&N,&K);
	if (N<=K) {
		printf("-1\n");return 0;
	}
	for (int i=1;i<=N;i++){
		int x,y;scanf("%d%d",&x,&y);
		P[i]=MP(x,y);
	}
	sort(P+1,P+N+1);
	for (int i=1;i<=K+1;i++)
	  for(int j=0;j+i-1<=K&&i+j<=N;j++){
		if(Chk(P[i].fi+P[N-j].fi,P[i].sc+P[N-j].sc,K))
			ins(P[i].fi+P[N-j].fi,P[i].sc+P[N-j].sc);
	}
	printf("%d\n",len);
	if (len)
	sort(ans+1,ans+len+1);
	for (int i=1;i<=len;i++)
		printf("%.8lf %.8lf\n",(double)ans[i].fi/2,(double) ans[i].sc/2);
	return 0;
}
