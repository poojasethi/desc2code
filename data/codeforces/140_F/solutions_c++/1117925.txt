#include <iostream>
#include <stdio.h>
#include <set>
#include <algorithm>
#define N 200000

using namespace std;

pair<int, int> p[N];
set<pair<int, int> > center, ans;

int main()
{
    int n, k, i, j, c, h, t;
    scanf("%d%d", &n, &k);
    if (n <= k) {
        printf("-1\n");
        return 0;
    }
    for (i = 0; i < n; i++) scanf("%d%d", &p[i].first, &p[i].second);
    sort(p, p + n);
    for (i = 0; i <= k; i++)
        for (j = 0; j <= k; j++) {
            pair<int, int> mid(p[i].first + p[n - j - 1].first, p[i].second + p[n - j - 1].second);
            if (center.insert(mid).second) {
                for (c = 0, h = 0, t = n - 1; h <= t;) {
                    pair<int, int> temp(p[h].first + p[t].first, p[h].second + p[t].second);
                    if (temp == mid) h++, t--;
                    else c++, temp < mid ? h++ : t--;
                }
                if (c <= k) ans.insert(mid);
            }
        }
    printf("%d\n", ans.size());
    for (set<pair<int, int> >::iterator it = ans.begin(); it != ans.end(); it++)
        printf("%.1lf %.1lf\n", it -> first * 0.5, it -> second * 0.5);
    return 0;
}
