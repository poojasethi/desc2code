#include<algorithm>
#include<cstdio>
#include<vector>
#include<string.h>
#include<cmath>
#include<queue>
#include<map>
#include<set>
#include<functional>
#include<iostream>
#include<cstdlib>
using namespace std;
int n,k,m;
struct poi
{
	int x,y;
};
struct poif
{
	double x,y;
};
poi p[200005];
poif A[200005];
bool cmp(poi x,poi y)
{
	return (x.x<y.x)||((x.x==y.x)&&(x.y<y.y));
}
int main()
{
    scanf("%d%d",&n,&k);
    if(k>=n)
    {
		puts("-1");
		return 0;
	}
    for(int i=1;i<=n;i++)
		scanf("%d%d",&p[i].x,&p[i].y);
	sort(p+1,p+n+1,cmp);
	//for(int i=1;i<=n;i++)printf("%d %d\n",p[i].x,p[i].y);
	for(int i=1;i<=k+1;i++)
		for(int j=n;j>=n-k-1;j--)
		{
			poif C;
			C.x=p[i].x+p[j].x;
			C.y=p[i].y+p[j].y;
			int l=1,r=n,out=0;
			while(l<=r)
			{
				if((p[l].x+p[r].x!=C.x)||(p[l].y+p[r].y!=C.y))
				{
					out++;
					if(out>k)goto orz;
					if((C.x-p[l].x<p[r].x)||((C.x-p[l].x==p[r].x)&&(C.y-p[l].y<p[r].y)))r--;
					else l++;
				}
				else
				{
					l++;
					r--;
				}
			}
			for(int u=1;u<=m;u++)
				if((abs(C.x/2-A[u].x)<1e-9)&&(abs(C.y/2-A[u].y)<1e-9))goto orz;
			m++;
			A[m].x=C.x/2;
			A[m].y=C.y/2;
			orz:;
		}
	printf("%d\n",m);
	for(int i=1;i<=m;i++)
		printf("%.9lf %.9lf\n",A[i].x,A[i].y);
    return 0;
}
