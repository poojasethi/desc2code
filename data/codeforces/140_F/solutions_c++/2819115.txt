/*
Author: LJQ
PROG: Codeforces #100 F. New Year Snowflake
DATE: 2012.12.23
*/
#include <set>
#include <cstdio>
#include <algorithm>

using namespace std;

typedef pair <int, int> PII;

const int maxn = 200005;

PII num[maxn];
set <PII> all, ret, H;
int n, K;

void init()
{
	scanf("%d%d", &n, &K);
	for (int i = 0; i < n; i ++){
		scanf("%d%d", &num[i].first, &num[i].second); all.insert(num[i]);
	}
}

void work()
{
	if (n <= K) return;
	sort(num, num + n);
	for (int i = 0; i <= K; i ++)
		for (int j = 0; j <= K; j ++){
			PII cur = make_pair(num[i].first + num[n-1-j].first, num[i].second + num[n-1-j].second);
			if (!H.insert(cur).second) continue;//already existed
			int cnt = 0;
			for (int k = 0; k < n && cnt <= K; k ++)
				cnt += !all.count(make_pair(cur.first - num[k].first, cur.second - num[k].second));
			if (cnt <= K) ret.insert(cur);
		}
}

void print()
{
	if (n <= K){
		puts("-1"); return;
	}
	printf("%d\n", ret.size());
	for (set <PII>::iterator it = ret.begin(); it != ret.end(); it ++)
		printf("%.10lf %.10lf\n", it->first * 0.5, it->second * 0.5);
}

int main()
{
	init();
	work();
	print();
	return 0;
}
