import math

def not_a(a, b):
	if a == b:
		if ord(a) == ord('z'):
			return 'a'
		return chr(ord(a)+1)
	r = [i for i in range(0, 26)]
	r.remove(ord(a)-ord('a'))
	r.remove(ord(b)-ord('a'))
	return chr(ord('a') + r[0])

n, t = [int(i) for i in raw_input().split(" ")]

s1 = raw_input()
s2 = raw_input()

diff_total = 0

done = 0

latest_op = -1

diff_cnt = 0
same_cnt = 0

out = [' ' for i in range(0, n)]

for i in range(0, n):
	if s1[i] == s2[i]:
		out[i] = '!'
		same_cnt += 1
	else:
		out[i] = '#'
		diff_cnt += 1
		
strong_strategy = False

pos = False

full_diff = t

dcnt = diff_cnt - t
			
if math.ceil(diff_cnt/2.0) <= t:
	for i in range(0, len(out)):
		if out[i] == '#':
			if dcnt <= 0:
				strong_strategy = True
			if strong_strategy:
				out[i] = not_a(s1[i], s2[i])
				diff_cnt -= 1
				full_diff -= 1
			else:
				if diff_cnt >= 2:
					if not pos:
						out[i] = s1[i]
						pos = True
					else:
						out[i] = s2[i]
						pos = False
						diff_cnt -= 2
						dcnt -= 1
						full_diff -= 1
					if diff_cnt < 2:
						strong_strategy = True
						
	for i in range(0, len(out)):
		if out[i] == '!':
			if full_diff == 0:
				out[i] = s1[i]
			else:
				out[i] = not_a(s1[i], s2[i])
				full_diff -= 1
			
	print "".join(out)
else:
	print -1