#!/usr/bin/python

#
# This is surprisingly tricky. Stomped again.
#
import sys
from math import *

def Ni(): return tuple(map(int, raw_input().split()))

n, t = Ni()
s1 = raw_input()
s2 = raw_input()

needmatches = n - t
s1matches = 0
s2matches = 0
output = [None] * n

for i in range(n):
    if s1[i] == s2[i] and needmatches > 0:
        output[i] = s1[i]
        needmatches -= 1
    if needmatches == 0:
        break

def differs(a, b):
    for c in "abcdefghijklmnopqrstuvwxyz":
        if a != c and b != c:
            return c
    assert "should not be here"

for i in range(n):
    if output[i] != None:
        continue

    if s1[i] == s2[i]:
        if s1matches < needmatches and s2matches < needmatches:
            output[i] = s1[i]
            s1matches += 1
            s2matches += 1
        else:
            output[i] = differs(s1[i], s2[i])
    else:
        if s1matches < needmatches:
            output[i] = s1[i]
            s1matches += 1
        elif s2matches < needmatches:
            output[i] = s2[i]
            s2matches += 1
        else:
            output[i] = differs(s1[i], s2[i])

    #print output, s1matches, s2matches

if s1matches < needmatches or s2matches < needmatches:
    print -1
    sys.exit()

print "".join(output)

