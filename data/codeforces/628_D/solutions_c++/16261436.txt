#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
const int N=2005,mo=1e9+7;
LL f[2][N][N];
char a[N],b[N];
int m,d;
void add(LL &x,LL y)
{
	x+=y; x%=mo;
}
long long solve(char *s)
{
	memset(f,0,sizeof(f));
	f[1][0][0]=1;
	int len=strlen(s+1);
	for (int i=1;i<=len;i++)
	{
		if (i&1)
		{
			for (int j=0;j<=9;j++)
			{
				if (j==d) continue;
				for (int k=0;k<m;k++)
				{
					int now=(k*10+j)%m;
					if (j<s[i]-'0') add(f[0][i][now],f[1][i-1][k]);
					add(f[0][i][now],f[0][i-1][k]);
					if (j==s[i]-'0') add(f[1][i][now],f[1][i-1][k]);
				}
			}
		}
		else
		{
			int j=d;
			for (int k=0;k<m;k++)
			{
				int now=(k*10+j)%m;
				if (j<s[i]-'0') add(f[0][i][now],f[1][i-1][k]);
				add(f[0][i][now],f[0][i-1][k]);
				if (j==s[i]-'0') add(f[1][i][now],f[1][i-1][k]);
			}
		}
	}
	return (f[1][len][0]+f[0][len][0])%mo;
}
bool check(char *s)
{
	int len=strlen(s+1);
	int now=0;
	for (int i=1;i<=len;i++)
	{
		if (i&1)
		{
			if (s[i]-'0'==d) return 0;
		}
		else if (s[i]-'0'!=d) return 0;
		now=now*10+s[i]-'0',now%=m;
	}
	if (now==0) return 1; return 0;
}
int main()
{
	scanf("%d%d",&m,&d);
	scanf("%s",a+1);
	long long ans1=solve(a);
	scanf("%s",b+1);
	long long ans2=solve(b);
	if (check(a)) ans1--;
	printf("%I64d\n",(ans2-ans1+mo)%mo);
}
