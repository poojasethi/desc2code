#include<bits/stdc++.h>
using namespace std;
int m,d,len,sum;
string a ,b;
const int MOD=1e9+7;
bool vis[2005][2005][2][2];
long long dp[2005][2005][2][2];

int f(int pos,int mod,bool up,bool down) {
    if(pos==len) {
        if(!mod) return 1;
        return 0;
    }
    if(vis[pos][mod][up][down]) return dp[pos][mod][up][down];
    vis[pos][mod][up][down]=1;
    long long ret=0; int low,high;
    if(up) low=0; else low=a[pos]-'0';
    if(down) high=9; else high=b[pos]-'0';
    if((pos+1)%2==0)  {
        if(d>high || d<low) return 0;
        if(high==low) ret=(ret+f(pos+1,(mod*10+d)%m,up,down))%MOD;
        else {
            if(d==high) ret=(ret+f(pos+1,(mod*10+d)%m,1,down))%MOD;
            else if(d==low) ret=(ret+f(pos+1,(mod*10+d)%m,up,1))%MOD;
            else ret=(ret+f(pos+1,(mod*10+d)%m,1,1))%MOD;
        }
    }
    else {
        if(low==high) {
            if(low!=d) ret=(ret+f(pos+1,(mod*10+high)%m,up,down))%MOD;
        }
        else {
            if(high!=d) ret=(ret+f(pos+1,(mod*10+high)%m,1,down))%MOD;
            if(low!=d) ret=(ret+f(pos+1,(mod*10+low)%m,up,1))%MOD;
            for(int i=low+1;i<high;i++) if(i!=d) ret=(ret+f(pos+1,(mod*10+i)%m,1,1))%MOD;
        }
    }
    dp[pos][mod][up][down]=ret%MOD;
    return dp[pos][mod][up][down];
}

int main() {
    cin>>m>>d>>a>>b;
    len=a.size();
    cout<<f(0,0,0,0);
}
