#include <bits/stdc++.h>
using namespace std;

int m, d, dp[2][2003][2], n, o;
char a[2003], b[2003];
const int p = 1000000007;

int f(char *s) {
  for (int j = 0; j < m; j++) {
    for (int k = 0; k < 2; k++) {
      dp[0][j][k] = 0;
    }
  }
  dp[0][0][1] = 1;
  for (int i = 0, I, J, K; i < n; i++) {
    I = (i+1) % 2;
    for (int j = 0; j < m; j++) {
      for (int k = 0; k < 2; k++) {
        dp[I][j][k] = 0;
      }
    }
    for (int j = 0; j < m; j++) {
      for (int k = 0; k < 2; k++) {
        for (int l = 0; l < 10; l++) {
          if (k && l > s[i]-'0') continue;
          if ((i % 2) == (l != d)) continue;
          J = (j*10+l) % m;
          K = k && s[i]-'0' == l;
          dp[I][J][K] = (dp[I][J][K]+dp[i%2][j][k]) % p;
        }
      }
    }
  }
  return (dp[n%2][0][0]+dp[n%2][0][1]) % p;
}

int g(char *s) {
  int r = 0;
  for (int i = 0; i < n; i++) {
    r = (r*10+s[i]-'0') % m;
    if ((i % 2) == (s[i]-'0' != d)) return 0;
  }
  return r == 0;
}

int main() {
  scanf("%d%d%s%s", &m, &d, a, b);
  n = strlen(a);
  printf("%d\n", (f(b)-f(a)+g(a)+p) % p);
  return 0;
}

