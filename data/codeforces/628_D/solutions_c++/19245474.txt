#include<cstdio>
#include<cstring>
using namespace std;
typedef long long ll;
const int N=2005,M=2000,Mod=1e9+7;
int n,na,nb,m,d;
char a[N],b[N];
int f[N][M][2][2];
bool vis[N][M][2][2];
int DP(int bit,int rmd,bool lead,bool oe,bool lim){
	if(n<bit) return !rmd;
	if(!lim){
		if(vis[bit][rmd][lead][oe]) return f[bit][rmd][lead][oe];
		vis[bit][rmd][lead][oe]=1;
	}
	int ans=0;
	int r=lim?a[bit]-'0':9;
	for(int i=0;i<=r;i++){
		if(!(lead && !i) && ((lead || oe) ^ (i!=d))) continue;
		ans+=DP(bit+1,(rmd*10+i)%m,lead&(!i),lead && i?0:oe^1,lim&(i==r));
		if(ans>=Mod) ans-=Mod;
	}
	if(!lim) f[bit][rmd][lead][oe]=ans;
	return ans;
}
void Init(){
	scanf("%d%d%s%s",&m,&d,a+1,b+1);
	nb=strlen(b+1);
	bool ok=1;
	for(int i=nb;i>=0;i--){
		if('0'<a[i]){
			a[i]--;
			break;
		}
		if(i==1){
			ok=0;
			break;
		}
		a[i]='9';
	}
	if(ok) na=nb;
}
int main(){
	Init();
	n=na;
	int ans;
	if(na) ans=DP(1,0,1,0,1);
	else ans=0;
	strcpy(a+1,b+1);
	n=nb;
	ans=DP(1,0,1,0,1)-ans;
	if(ans<0) ans+=Mod;
	printf("%d\n",ans);
	return 0;
}
