#include <iostream>
#include <memory.h>
#include <algorithm>
#include <vector>
#include <string>
#include <sstream>
using namespace std;
#define ll long long
ll cc[4], temp[4];
const int mod = 1e9 + 7;
string s, t;
ll dp[2005][2000][2][2][2];
int m, d, n;
ll sol(int ind, int cur, int big, int least,int magic){
	if (ind == n){
		if ( magic && cur == 0)return 1;
		return 0;
	}
	ll &ret = dp[ind][cur][big][least][magic];
	if (ret != -1)return ret;
	ret = 0;
	int y, x, i, f = 0, lim = 9, next, l, b;
	if (big)lim = t[ind] - '0';
	if (least)f = s[ind] - '0';
	for (i = f; i <= lim; ++i){
		if (ind & 1){
			if ( i != d)continue;
		}
		else{
			if (i == d)continue;
		}
		next = (cur * 10 + i) % m;
		l = ((i == f) &least);
		b = ( (i == lim) & big);
		ret = (ret + sol(ind + 1, next, b, l,1) ) % mod;
	}
	return ret;
}
int main(){
	memset(dp, -1, sizeof(dp));
	ll ret = 0;
	int i, magic = 0, u;
	cin >> m >> d >> s >> t;
	if (d == 0)magic = 1;
	n = s.size();
	for (i = s[0] - '0'; i <= t[0] - '0'; ++i){
		if (i == d)continue;
		ret = (ret + sol(1, i%m, i == (t[0] - '0'), i == (s[0] - '0'),1 )) % mod;
	}
	cout << ret << endl;
}