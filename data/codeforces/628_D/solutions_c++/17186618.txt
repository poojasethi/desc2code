#include<cstdio>
#include<iostream>
#include<cstring>
#include<cmath>
using namespace std;
const int mod=1e9+7;
typedef long long ll;
const int N=2000+5;
char s[N];
ll dp[N][N];
int all;
int m,d;
ll dfs(int pos,ll val,bool limit )
{
    if(pos==all+1) return val==0;
    if(!limit && dp[pos][val]!=-1) return dp[pos][val];
    int upper=limit?(s[pos]-'0'):9;
    ll ans=0;
    for(int i=0;i<=upper;i++)
    {
        if(pos%2 && i==d) continue;
        if(pos%2==0 && i!=d) continue;
        ans=(ans+dfs(pos+1,(val*10+i)%m,limit && i==(s[pos]-'0')))%mod;
    }
    if(!limit) dp[pos][val]=ans;
    return ans;
}
bool judge()
{
    int tt=0;
    for(int i=1;s[i]!='\0';i++)
    {
        if(i%2 && (s[i]-'0')==d) return false;
        if(i%2==0 && (s[i]-'0')!=d) return false;
        tt=(tt*10+s[i]-'0')%m;
    }
    if(tt) return false;
    return true;
}
int main()
{
    while(~scanf("%d%d",&m,&d))
    {
        all=0;
        memset(dp,-1,sizeof dp);
        scanf("%s",s+1);
        all=strlen(s+1);
//        cout<<all<<endl;
        ll t1=dfs(1,0,true);
        if(judge())t1--;
//        cout<<t1<<endl;
        scanf("%s",s+1);
        all=strlen(s+1);
        ll t2=dfs(1,0,true);
//        cout<<t2<<endl;
        ll ans=(t2-t1+mod)%mod;
        printf("%I64d\n",ans);
    }
    return 0;
}

	  	 		   			 	 		 		  		  		 	