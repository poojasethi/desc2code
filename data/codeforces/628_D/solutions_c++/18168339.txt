#include<cstdio>
#include<cstring>
#include<algorithm>


using namespace std;
typedef long long LL;
const LL MOD = 1e9+7;

char a[2005],b[2005];
int n,m,c,bit[2005];
LL dp[2005][2005];

void init(){
    memset(dp,-1,sizeof(dp));
}

LL dfs(int i,int s,bool e){
//printf("%d %d\n",i,s);
    if(i == n) return s == 0;
    if(!e&&dp[i][s]!=-1) return dp[i][s];
    LL res = 0;
    int d,u = e?bit[i]:9;
    if(i&1){
        if(c<=u) res = dfs(i+1,(s*10+c)%m,e&&(c==u));
    }else{
        for(d = 0;d <= u;d++){
            if(d==c) continue;
            res += dfs(i+1,(s*10+d)%m,e&&(d==u));
            res %= MOD;
        }
    }
    return e ? res : dp[i][s] = res;
}

LL sol(char *p){
    n = 0;
    while(*p != '\0'){
        bit[n++] = *p-'0';
        p++;
    }
//for(int i = 0;i < n;i++) printf("%d",bit[i]);putchar('\n');
    return dfs(0,0,1);
}

int main(){
    int i,j;
    init();
    scanf("%d%d",&m,&c);
    scanf("%s%s",a,b);
    for(i = strlen(a)-1;i >= 0;i--){
        if(a[i]=='0'){
            a[i] = '9';
            continue;
        }else{
            a[i]--;
            break;
        }
    }
    LL ans = sol(b)-sol(a);
    ans = (ans%MOD+MOD)%MOD;
    printf("%I64d\n",ans);

    return 0;
}
