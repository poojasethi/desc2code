/*************************************************************************
	> File Name: 628d.cpp
	> Author: Severus Qin
	> Mail: qinhuapeng425@gmail.com
	> Created Time: 2016年03月29日 星期二 21时23分46秒
 ************************************************************************/

#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>

using namespace std;

const int MOD = (int)1e9 + 7;

string a, b;
int dp[2001][2001][2][2], m, d;

int dfs(int index, int mod, int bit, int sm) {
    if (index == b.size()) return mod == 0;
    if (dp[index][mod][bit][sm] != -1) {
        return dp[index][mod][bit][sm];
    }
    long long ans = 0;
    for (int digit = 0; digit < 10; digit++) {
        if (!(index & 1) && digit == d) continue;
        if ((index & 1) && digit != d) continue;
        if (digit < (a[index] - '0') && !bit) continue;
        if (digit > (b[index] - '0') && !sm) continue;
        ans += dfs(index + 1, ((mod * 10) + digit) % m, bit | (digit > a[index] - '0'), sm | (digit < b[index] - '0')) % MOD;
    }
    ans %= MOD;
    return dp[index][mod][bit][sm] = ans;
}

int main() {
    memset(dp, -1, sizeof(dp));
    cin >> m >> d >> a >> b;
    cout << dfs(0, 0, 0, 0) << endl;
    return 0;
}
