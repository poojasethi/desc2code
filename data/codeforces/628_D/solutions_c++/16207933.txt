#include <bits/stdc++.h>
using namespace std;

#define mp(x, y) make_pair((x), (y))

typedef long long ll;

const ll mod=1000000007;

int n, m, dig;
char a[2005], b[2005];

ll f(const char *s, int n, int inkl)
{
	static ll dp[2005][2005];
	for(int i=0; i<n; i++) for(int j=0; j<m; j++) dp[i][j]=0;
	ll rest=0;
	for(int i=0; i<n; i++) {
		if(i%2==0) {
			for(int r=0; r<m; r++) {
				for(int d=0; d<=9; d++) {
					if(d==dig) continue;
					dp[i][(10*r+d)%m]=(dp[i][(10*r+d)%m]+(i>0 ? dp[i-1][r] : r==0))%mod;
				}
			}
			if(rest!=-1) {
				for(int d=0; d<s[i]-'0'; d++) {
					if(d==dig) continue;
					dp[i][(10*rest+d)%m]=(dp[i][(10*rest+d)%m]+1)%mod;
				}
			}
			if(s[i]-'0'==dig) rest=-1;
			else if(rest!=-1) rest=(10*rest+(s[i]-'0'))%m;
		} else {
			for(int r=0; r<m; r++) {
				dp[i][(10*r+dig)%m]=(dp[i][(10*r+dig)%m]+dp[i-1][r])%mod;
			}
			if(rest!=-1) {
				if(dig<s[i]-'0') dp[i][(10*rest+dig)%m]=(dp[i][(10*rest+dig)%m]+1)%mod;
			}
			if(rest!=-1 && s[i]-'0'==dig) rest=(10*rest+(s[i]-'0'))%m;
			else rest=-1;
		}
	}
	return (dp[n-1][0]+(inkl && rest==0 ? 1 : 0))%mod;
}

int main()
{
	scanf("%d %d\n", &m, &dig);
	scanf("%s\n%s", a, b);
	n=strlen(a);
	printf("%I64d\n", (f(b, n, 1)-f(a, n, 0)+mod)%mod);

	return 0;
}
