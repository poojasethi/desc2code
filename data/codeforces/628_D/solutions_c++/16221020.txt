#include <bits/stdc++.h>
using namespace std;

const int maxn = 2002;
const int mod  = (int) 1e9 + 7;

long long memo[maxn][2][2][maxn];
int n, m, d;
string a, b;

long long F(int pos, int x, int y, int MOD) {
    if(pos == n) {
        if(MOD != 0) return 0;
        return 1;
    }

    long long &res = memo[pos][x][y][MOD];
    if(res != -1) return res;

    res = 0;
    int lo = 0, hi = 9;
    if(x) lo = a[pos] - '0';
    if(y) hi = b[pos] - '0';

    for (int i = lo; i <= hi; i ++) {
        if(pos % 2 == 1 && i != d) continue;
        if(pos % 2 == 0 && i == d) continue;
        int nx = 0, ny = 0;
        if(x && i == a[pos] - '0') nx = 1;
        if(y && i == b[pos] - '0') ny = 1;
        res += F(pos + 1, nx, ny, (MOD * 10 + i) % m);
        res %= mod;
        ///if(pos == 0) cout << i << ' ' << res << endl;
    }
    return res;
}

int main() {
    cin >> m >> d;
    cin >> a >> b;
    n = b.size();
    while (a.size() < n) a = '0' + a;
    memset(memo, -1, sizeof memo);
    ///cout << a << ' ' << b << endl;
    ///cout << a << ' ' << b << endl;
    cout << F(0, 1, 1, 0) << endl;

}
