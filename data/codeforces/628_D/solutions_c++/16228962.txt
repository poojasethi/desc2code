#include <iostream>
#include <string>
using namespace std;

const int zmod = 1000000007;

int A[2001][2001][2];
int m,d;
inline int add(int &a, int b) { a=((a%zmod)+(b%zmod))%zmod; }
int doit(string & u) {
  for (int i=0; i<u.size(); i++) for (int j=0; j<m; j++) for (int k=0; k<2; k++) A[i][j][k] = 0;
  int pp=(int)(u[0]-'0'); for (int i=0; i<10; i++) if (i!=d) if (i<=pp) if (i==pp) A[0][i%m][1]++; else A[0][i%m][0]++;
  for (int i=1; i<(int)u.size(); i++) {
    
    for (int j=0; j<m; j++) for (int k=0; k<2; k++) {
    int fv=(int)(u[i]-'0');
    if (i&1) {
      if ((!k) || (k&&(d<=fv))) add(A[i][(j*10+d)%m][k&&(d==fv)],A[i-1][j][k]);
    } else {
      for (int f=0; f <= (k ? fv : 9); f++) {
        if (f==d) continue;
        add(A[i][(j*10+f)%m][k&&(f==fv)],A[i-1][j][k]);
      }
    }
  }

  }
  int ret = 0;
  add(A[(int)(u.size())-1][0][0],A[(int)(u.size())-1][0][1]);
  return A[(int)(u.size())-1][0][0];
}

int good(string& a) {
  int mm=0;
  for (int i=0; i<a.size(); i++) {
    int cv = (int)(a[i]-'0');
    if (i&1) { if (cv != d) return 0; }
    else if (cv==d) return 0;
    mm = (mm*10+cv)%m;
  }
  return !mm;
}

int main() {

  cin >> m >> d;
  string a,b;
  cin >> a >> b;

  int za,zb;
  za=doit(a);
  zb=doit(b);
  add(zb,-za);
  cout << (zb+good(a)+zmod)%zmod << endl;

return 0;
}
