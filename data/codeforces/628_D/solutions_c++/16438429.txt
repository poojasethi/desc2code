#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<algorithm>
using namespace std;
typedef long long ll;
const int N=2005;
const int mod=1e9+7;
int m,d;
char a[N],b[N];
ll f[N][N];
int bit[N];
int len;
ll dfs(int pos,int pre,bool lim)
{
    if(pos==len)return pre==0;
    if(!lim&&f[pos][pre]!=-1)return f[pos][pre];
    ll ans=0;
    int n=lim?bit[pos]:9;
    for(int i=0;i<=n;i++){
        if(pos&1&&i!=d)continue;
        if(!(pos&1)&&i==d)continue;
        ans=(ans+dfs(pos+1,(pre*10+i)%m,lim&&i==n)%mod)%mod;
    }
    if(!lim)f[pos][pre]=ans;
    return ans;
}
bool judge(char *s)
{
    int ok=0;
    for(int i=0;i<len;i++){
        int t=s[i]-'0';
        ok=(ok*10+t)%m;
        if(!(i&1)&&t==d)return false;
        if((i&1)&&t!=d)return false;
    }
    return ok==0;
}
ll solve(char *s)
{
    len=strlen(s);
    for(int i=0;i<len;i++)bit[i]=s[i]-'0';
    return dfs(0,0,1);
}
int main()
{
    scanf("%d%d",&m,&d);
    scanf("%s%s",a,b);
    memset(f,-1,sizeof(f));
    cout<<(solve(b)-solve(a)+judge(a)+mod)%mod<<endl;
}