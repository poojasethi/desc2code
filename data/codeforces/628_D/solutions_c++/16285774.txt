#include<stdio.h>
#include<string.h>

#define ll __int64

int len;
char str[2001];
ll dp[2001][2001];
int mod,d;

ll dfs(int pos,int m,bool f)
{
	if(pos==len)
		return m==0;
	if(dp[pos][m]!=-1 && !f)
		return dp[pos][m];
	ll ret=0;
	int ed,i;
	if(f) ed=str[pos]-'0';
	else ed=9;
	for(i=0;i<=ed;i++)
	{
		if(pos%2 && i!=d) continue;
		if(pos%2==0 && i==d) continue;
		ret+=dfs(pos+1,(m*10+i)%mod,f && (i==ed));
		ret%=1000000007;
	}
	if(!f) dp[pos][m]=ret;
	return ret;
}

int check()
{
	int i,m=0;
	for(i=0;i<len;i++)
	{
		if(i%2 && str[i]-'0'!=d) return false;
		if(i%2==0 && str[i]-'0'==d) return false;
		m=(m*10+str[i]-'0')%mod;
	}
	return m==0;
}

int main()
{
	scanf("%d%d",&mod,&d);
	getchar();
	gets(str);
	len=strlen(str);
	memset(dp,-1,sizeof(dp));
	ll ans1=dfs(0,0,1);
	int judge=check();
	gets(str);
	len=strlen(str);
	ll ans2=dfs(0,0,1);
	printf("%I64d\n",(ans2-ans1+judge+1000000007)%1000000007);
	return 0;
}