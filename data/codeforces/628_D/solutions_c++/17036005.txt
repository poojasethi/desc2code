#include <bits/stdc++.h>
using namespace std;
#define ll __int64
const int N=2010;
const int mod=1e9+7;
ll dp[N][N];
int m, d, bit[N], len;
ll dfs(int pos, int res, int lim)
{
	if(pos==len) return res==0;
	if(!lim && dp[pos][res]!=-1) return dp[pos][res];
	int end=lim?bit[pos]:9;
	ll ans=0;
	for(int i=0; i<=end; i++)
	{
		if(pos%2==1 && i!=d) continue;
		if(pos%2==0 && i==d) continue;
		ans = (ans+dfs(pos+1, (res*10+i)%m, lim&&i==end))%mod; 
	}
	if(!lim) dp[pos][res]=ans;
	return ans;
}
ll solve(string a)
{
	for(int i=0; i<len; i++)
	{
		bit[i]=a[i]-'0';
	}
	return dfs(0, 0, 1);
}
ll check(string a)
{
	int res=0;
	for(int i=1; i<=len; i++)
	{
		if(i%2==0 && a[i-1]-'0'!=d) return 0;
		if(i%2==1 && a[i-1]-'0'==d) return 0;
		res=res*10+(a[i-1]-'0');
		res%=m;
	}
	return res==0;
}
int main()
{
	memset(dp, -1, sizeof(dp));
	scanf("%d%d", &m, &d);
	string a, b;
	cin>>a>>b;
	len=a.size();
	printf("%I64d\n", (solve(b)-solve(a)+check(a)+mod)%mod);
	return 0;
}
	  		 	 				 	  		  	 	 						