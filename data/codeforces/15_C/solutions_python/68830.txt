import heapq
import sys
import unittest


def calcnimsum_slow(xi,mi):
    nimsum = 0
    for s in (xi+i for i in range(mi)):
         nimsum = nimsum ^ s
    return nimsum
                  
def f(n):
    return [n,1,n+1,0][n%4]

def calcnimsum(xi,mi):
    return f(xi-1)^f(xi+mi-1)

def solvecase(inf,outf):
    n, = map(int,inf.readline().split())
    stones = [] 
    nimsum = 0
    for i in range(n): 
        xi,mi = map(int,inf.readline().split())
        nimsum = nimsum ^ calcnimsum(xi,mi)
    if nimsum != 0:
        result = 'tolik'
    else:
        result = 'bolik' 
    #print 'Nimsum:%d' % nimsum
    outf.write('%s\n' % result)

if __name__=="__main__":
    solvecase(sys.stdin,sys.stdout)
