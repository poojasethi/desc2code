#include<cstdio>
const int K=9;
const long long oo=1000000007,P=500000004;
const int E[K][K]={
	{1,0,0,0,0,0,0,0,0},
	{1,0,0,1,1,0,0,0,0},
	{1,0,0,0,0,1,1,0,0},
	{1,1,0,0,0,0,0,0,0},
	{1,0,0,0,0,0,0,1,1},
	{1,0,1,0,0,0,0,0,0},
	{1,0,0,0,0,0,0,1,1},
	{1,0,0,1,1,0,0,0,0},
	{1,0,0,0,0,1,1,0,0}
};
int L,R;
long long A[K],B[K][K],a[K],b[K][K];
void Mul1()
{
	int i,j,k;
	for(i=0;i<K;++i) a[i]=0;
	for(i=0;i<K;++i) if(A[i])
		for(j=0;j<K;++j) if(B[i][j])
			a[j]=(a[j]+A[i]*B[i][j])%oo;
	for(i=0;i<K;++i) A[i]=a[i];
}
void Mul2()
{
	int i,j,k;
	for(i=0;i<K;++i)
		for(j=0;j<K;++j)
			b[i][j]=0;
	for(i=0;i<K;++i)
		for(j=0;j<K;++j) if(B[i][j])
			for(k=0;k<K;++k) if(B[j][k])
				b[i][k]=(b[i][k]+B[i][j]*B[j][k])%oo;
	for(i=0;i<K;++i)
		for(j=0;j<K;++j)
			B[i][j]=b[i][j];
}
void Mul(int N)
{
	for(;N;)
	{
		if(N&1) Mul1();
		N/=2,Mul2();
	}
}
int Get(int N)
{
	int i,j;
	if(N==0) return 0;
	for(i=0;i<K;++i)
		for(j=0;j<K;++j)
			B[i][j]=E[i][j];
	A[0]=4;
	for(i=1;i<K;++i) A[i]=1;
	Mul(N-1);
	return A[0];
}
int Work(int N)
{
	return (Get(N)+Get((N+1)/2))%oo*P%oo;
}
int main()
{
	scanf("%d%d",&L,&R);
	printf("%d\n",(Work(R)+oo-Work(L-1))%oo);
	return 0;
}
