#include <cstdio>
#include <cstring>
#define For(i,a,b) for(int i=a; i<b; ++i)
typedef long long LL;
typedef LL Arr1[9],Arr2[9][9];
const LL Mod=1000000007, Num=500000004;
const Arr2 Matrix={{0,0,0,0,1,1,0,0,1},
				   {0,0,0,0,0,0,1,1,1},
				   {0,0,0,0,1,1,0,0,1},
				   {0,0,0,0,0,0,1,1,1},
				   {1,0,0,0,0,0,0,0,1},
				   {0,0,1,1,0,0,0,0,1},
				   {0,1,0,0,0,0,0,0,1},
				   {0,0,1,1,0,0,0,0,1},
				   {0,0,0,0,0,0,0,0,1}};
Arr1 a,c1;
Arr2 b,c2;

void mul(Arr1 &a,Arr2 &b)
{
	For(i,0,9)
	{
		c1[i]=0;
		For(j,0,9)
			c1[i]=(c1[i]+a[j]*b[j][i])%Mod;
	}
	memcpy(a,c1,sizeof a);
}

void mul(Arr2 &a,Arr2 &b)
{
	For(i,0,9)
		For(j,0,9)
		{
			c2[i][j]=0;
			For(k,0,9)
				c2[i][j]=(c2[i][j]+a[i][k]*b[k][j])%Mod;
		}
	memcpy(a,c2,sizeof a);
}

LL calc(int x)
{
	if (!x) return 0;
	For(i,0,8) a[i]=1;
	a[8]=4;
	memcpy(b,Matrix,sizeof b);
	--x;
	while (x)
	{
		if (x&1) mul(a,b);
		mul(b,b);
		x>>=1;
	}
	return a[8];
}

int main()
{
	int l,r;
	scanf("%d%d",&l,&r);
	printf("%I64d\n",(calc(r)-calc(l-1)+calc((r+1)/2)-calc(l/2)+Mod+Mod)*Num%Mod);
	return 0;
}
