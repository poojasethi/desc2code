#include <cmath>
#include <ctime>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#define LL long long
using namespace std;
const LL pri=1000000007LL;
LL a[7][7]={{0,0,1,1,1,0,0},{0,0,1,1,0,1,0},{1,1,0,0,0,0,0},{0,0,0,0,0,0,0},{1,0,0,0,0,0,0},{0,1,0,0,0,0,0},{1,1,1,1,1,1,1}},
i[7][7]={{1,0,0,0,0,0,0},{0,1,0,0,0,0,0},{0,0,1,0,0,0,0},{0,0,0,1,0,0,0},{0,0,0,0,1,0,0},{0,0,0,0,0,1,0},{0,0,0,0,0,0,1}},
ans[7][7],c[7][7];
void cheng(LL a[7][7])
{
    memset(c,0,sizeof(c));
    for(int i=0;i<7;i++)
        for(int j=0;j<7;j++)
            for(int k=0;k<7;k++)
                c[i][j]=(c[i][j]+ans[i][k]*a[k][j]%pri)%pri;
    memcpy(ans,c,sizeof(c));
}
void ksm(LL y)
{
    if(y==0)
    {
        memcpy(ans,i,sizeof(i));
        return ;
    }
    ksm(y/2);
    cheng(ans);
    if(y&1)
        cheng(a);
}
LL work(LL l)
{
    ksm(l);
    LL T=(ans[6][0]+ans[6][1]+ans[6][2]+ans[6][3])%pri;
    ksm((l+1)/2);
    T=(T+ans[6][0]+ans[6][1]+ans[6][2]+ans[6][3])%pri;
    T=T*500000004LL%pri;
    return T;
}
int main()
{
    LL L,R;
    scanf("%I64d%I64d",&L,&R);
    printf("%I64d\n",(work(R)-work(L-1)+pri)%pri);
    return 0;
}
 	    		  	      	  		