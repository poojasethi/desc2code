//program 93-D

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

using namespace std;

const int Mod=1000000007;

int Calc(int N)
{
  if(N<=1)return (N<<2)+2;N--;
  static int G[30][9][9];
  memset(G,0,sizeof(G));
  G[0][1][5]=G[0][3][6]=1;
  G[0][2][7]=G[0][2][8]=1;
  G[0][4][7]=G[0][4][8]=1;
  G[0][5][1]=G[0][5][2]=1;
  G[0][6][3]=G[0][6][4]=1;
  G[0][7][1]=G[0][7][2]=1;
  G[0][8][3]=G[0][8][4]=1;
  for(int i=0;i<=8;i++)G[0][i][0]=1;
  for(int T=1;T<30;T++)
    for(int i=0;i<=8;i++)
      for(int j=0;j<=8;j++)
        for(int k=0;k<=8;k++)
          G[T][i][j]=((long long)G[T-1][i][k]*G[T-1][k][j]+G[T][i][j])%Mod;
  static int X[9];
  for(int i=0;i<=8;i++)X[i]=i?1:6;
  for(int T=0;T<30;T++)
    if(N&(1<<T))
      {
        static int Y[9];
        memset(Y,0,sizeof(Y));
        for(int i=0;i<=8;i++)
          for(int j=0;j<=8;j++)
            Y[j]=((long long)X[i]*G[T][i][j]+Y[j])%Mod;
        for(int i=0;i<=8;i++)X[i]=Y[i];
      }
  return X[0];
}

int Sum(int N)
{
  int Temp=Calc(N)+Calc((N+1)/2);
  if(Temp>=Mod)Temp-=Mod;
  if(Temp&1)Temp+=Mod;
  return Temp/2;
}

int main()
{
  int LB,UB;
  scanf("%d%d",&LB,&UB);
  int Ans=Sum(UB)-Sum(LB-1);
  if(Ans<0)Ans+=Mod;
  printf("%d\n",Ans);
  return 0;
}
