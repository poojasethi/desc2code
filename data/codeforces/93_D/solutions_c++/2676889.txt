#include <cstdio>
#include <cstring>
#include <iostream>
using namespace std;
typedef long long MatLine[9],Mat[9][9];
const Mat TheMat=
{
	{0,0,0,0,1,1,0,0,1},
	{0,0,0,0,0,0,1,1,1},
	{0,0,0,0,1,1,0,0,1},
	{0,0,0,0,0,0,1,1,1},
	{1,0,0,0,0,0,0,0,1},
	{0,0,1,1,0,0,0,0,1},
	{0,1,0,0,0,0,0,0,1},
	{0,0,1,1,0,0,0,0,1},
	{0,0,0,0,0,0,0,0,1}
};
MatLine a;
Mat b;

const long long MODER=1000000007;
const long long MAGIC=500000004;
void doMultiply(MatLine &a,Mat &b){
	MatLine c;
	memset(c,0,sizeof(c));
	for(int i=0;i<9;i++)
		for(int j=0;j<9;j++)
			c[i]=(c[i]+a[j]*b[j][i])%MODER;
	memcpy(a,c,sizeof(MatLine));
}

void doMultiply(Mat &a,Mat &b){
	Mat c;
	memset(c,0,sizeof(c));
	for(int i=0;i<9;i++)
		for(int j=0;j<9;j++)
			for(int k=0;k<9;k++)
				c[i][j]=(c[i][j]+a[i][k]*b[k][j])%MODER;
	memcpy(a,c,sizeof(Mat));
}

long fun(int x){
	if(!x) return 0;
	for(int i=0;i<8;i++)
		a[i]=1;
	a[8]=4;
	
	memcpy(b,TheMat,sizeof(b));
	for(x--;x;x>>=1){
		if(x&1)
			doMultiply(a,b);
		doMultiply(b,b);
	}
	return a[8];
}

int main(){
	int l,r;
	scanf("%d%d",&l,&r);
	long long ans=fun(r)-fun(l-1)+fun((r+1)/2)-fun(l/2);
	ans%=MODER;
	ans*=MAGIC;
	ans%=MODER;
	ans+=MODER;
	ans%=MODER;
	cout<<ans<<endl;
	return 0;
}