#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;
typedef long long LL;
const LL mod=1000000000+7;
struct matrix
{
	LL a[10][10];
	matrix(){ memset(a,0,sizeof(a)); }
	friend matrix operator * (matrix x,matrix y)
	{
		matrix c;
		for(int i=0;i<9;i++)
			for(int j=0;j<9;j++)
				for(int k=0;k<9;k++)
					c.a[i][j]=(c.a[i][j]+(x.a[i][k]*y.a[k][j])%mod)%mod;
		return c;
	}
}A,F,I;
matrix ksm(matrix x,LL p)
{
	if(p==0) return I;
	matrix ans=ksm(x,p/2);
	ans=ans*ans;
	if(p&1) ans=ans*x;
	return ans;
}
LL work(LL x)
{
	if(x==1) return 0;
	if(x==2) return 4;
	matrix k1=ksm(A,x-2),t1=k1*F;
	LL ans=0;
	for(int i=0;i<9;i++)
		ans=(ans+t1.a[i][0])%mod;
	matrix k2=ksm(A,(x+1)/2-2),t2=k2*F;
	for(int i=0;i<9;i++)
		ans=(ans+t2.a[i][0])%mod;
	ans=(ans*500000004)%mod;
	return ans;
}
int main()
{
	//freopen("input.txt","r",stdin);
	LL ans=0,L,R;
	scanf("%I64d %I64d",&L,&R);
	A.a[0][1]=A.a[0][7]=A.a[1][0]=A.a[2][3]=A.a[2][5]=A.a[3][2]=A.a[3][6]=A.a[4][3]=1;
    A.a[4][5]=A.a[5][4]=A.a[6][1]=A.a[6][7]=A.a[7][2]=A.a[7][6]=A.a[8][0]=A.a[8][1]=1;
	A.a[8][2]=A.a[8][3]=A.a[8][4]=A.a[8][5]=A.a[8][6]=A.a[8][7]=A.a[8][8]=F.a[0][0]=1;
	F.a[1][0]=F.a[2][0]=F.a[3][0]=F.a[4][0]=F.a[5][0]=F.a[6][0]=F.a[7][0]=I.a[0][0]=1;
	I.a[1][1]=I.a[2][2]=I.a[3][3]=I.a[4][4]=I.a[5][5]=I.a[6][6]=I.a[7][7]=I.a[8][8]=1;
	if(L==1) printf("%I64d\n",work(R)-work(L)+4);
	else printf("%I64d\n",(work(R)-work(L-1)+mod)%mod);
	return 0;
}