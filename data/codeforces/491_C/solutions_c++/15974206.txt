#include <cstdio>
#include <cstring>
#include <cctype>
#include <algorithm>
using namespace std;

const int INF = 100000000;

bool vx[52], vy[52];
int w[52][52], mx[52], my[52], wx[52], wy[52];

inline bool match(int u, int k)
{
  vx[u] = 1;
  for (int i = 0; i < k; ++i) if (!vy[i] && wx[u] + wy[i] == w[u][i]) {
  	vy[i] = 1;
  	if (my[i] == -1 || match(my[i], k)) {
  	  my[i] = u, mx[u] = i;
  	  return true;
  	}
  }
  return false;
}

int main()
{
  int n, k, a = 0;
  memset(w, 0, sizeof w), memset(mx, -1, sizeof mx), memset(my, -1, sizeof my);
  memset(wx, 0, sizeof wx), memset(wy, 0, sizeof wy);
  scanf("%d%d", &n, &k);
  char s[2][n+5];
  for (int i = 0; i < 2; ++i) scanf("%s", s[i]);
  for (int i = 0; s[0][i]; ++i) {
  	int e = isupper(s[0][i]) ? s[0][i]-'A'+26 : s[0][i]-'a', f = isupper(s[1][i]) ? s[1][i]-'A'+26 : s[1][i]-'a';
  	w[e][f]++, wx[e] = max(wx[e], w[e][f]);
  }
  for (int z = 0; z < k; ++z) {
  	while (1) {
  	  memset(vx, 0, sizeof vx), memset(vy, 0, sizeof vy);
  	  if (match(z, k)) break;
  	  int d = INF;
  	  for (int i = 0; i < k; ++i) if (vx[i])
  	    for (int j = 0; j < k; ++j) if (!vy[j])
  	  	  d = min(d, wx[i] + wy[j] - w[i][j]);
  	  for (int i = 0; i < k; ++i) if (vx[i]) wx[i] -= d;
  	  for (int j = 0; j < k; ++j) if (vy[j]) wy[j] += d;
  	}
  }
  for (int i = 0; i < k; ++i) a += w[i][mx[i]];
  printf("%d\n", a);
  for (int i = 0; i < k; ++i) putchar(mx[i] < 26 ? mx[i] + 'a' : mx[i] - 26 + 'A');
  puts("");
}