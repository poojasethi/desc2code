#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

const int K = 52 + 1;
const int N = 2e6;
const int INF = 1e9;

typedef long long ll;

ll a[K][K], f[N], s[N];
vector<int> ans;

int getNum(char c) {
    if (c >= 'a' && c <= 'z')
        return 1 + c - 'a';
    else
        return 1 + 26 + (c - 'A');
}

char getChar(int n) {
    if (n <= 26)
        return (char)('a' + n - 1);
    else
        return (char)('A' + n - 26 - 1);
}

void solve(int n) {
    ll m = n;
    vector<ll> u(n + 1), v(m + 1), p(m + 1), way(m + 1);
    for (int i = 1; i <= n; i++) {
        p[0] = i;
        ll j0 = 0;
        vector<ll> minv(m + 1, INF);
        vector<char> used(m + 1, false);
        do {
            used[j0] = true;
            ll i0 = p[j0],  delta = INF, j1;
            for (int j = 1; j <= m; j++)
                if (!used[j]) {
                    ll cur = a[i0][j] - u[i0] - v[j];
                    if (cur < minv[j])
                        minv[j] = cur,  way[j] = j0;
                    if (minv[j] < delta)
                        delta = minv[j],  j1 = j;
                }
            for (int j = 0; j <= m; j++)
                if (used[j])
                    u[p[j]] += delta,  v[j] -= delta;
                else
                    minv[j] -= delta;
            j0 = j1;
        } while (p[j0] != 0);
        do {
            ll j1 = way[j0];
            p[j0] = p[j1];
            j0 = j1;
        } while (j0);
    }
    ans.assign(n + 1, 0);
    for (int j = 1; j <= m; j++)
        ans[p[j]] = j;
}

int main() {
    // freopen("input.txt", "r", stdin);
    int n, k;
    char c;
    cin >> n >> k;
    scanf("%c", &c);
    for (int i = 0; i < n; i++) {
        scanf("%c", &c);
        f[i] = getNum(c);
    }
    scanf("%c", &c);
    for (int i = 0; i < n; i++) {
        scanf("%c", &c);
        s[i] = getNum(c);
    }
    for (int i = 0; i < n; i++)
        a[f[i]][s[i]]++;
    for (int i = 1; i <= k; i++)
        for (int j = 1; j <= k; j++)
            a[i][j] = n - a[i][j];
    solve(k);
    int val = 0;
    for (int i = 1; i <= k; i++)
        val += n - a[i][ans[i]];
    cout << val << endl;
    for (int i = 1; i <= k; i++)
        cout << getChar(ans[i]);
    cout << endl;
    return 0;
}
