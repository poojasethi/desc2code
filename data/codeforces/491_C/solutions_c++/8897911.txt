#include <bits/stdc++.h>
using namespace std;

int const MAXN = 2e6 + 10;
int const N = 52;
int const INF = 0x3f3f3f3f;

int w[N][N], lx[N], ly[N];
int mx[N], my[N], d;
bool vx[N], vy[N];
char s1[MAXN], s2[MAXN];

bool dfs(int x, int const n) {
	vx[x] = true;
	for (int y=0; y<n; ++y) if (!vy[y]) {
		if (lx[x] + ly[y] == w[x][y]) {
			vy[y] = true;
			if (my[y] == -1 || dfs(my[y], n)) {
				mx[x] = y, my[y] = x;
				return true;
			}
		} else {
			d = min(d, lx[x]+ly[y]-w[x][y]);
		}
	}
	return false;
}

void KM(int m, int n) {
	memset(mx, -1, sizeof(mx));
	memset(my, -1, sizeof(my));
	for (int i=0; i<m; ++i) for (int j=0; j<n; ++j) lx[i] = max(lx[i], w[i][j]);
	for (int k=0; k<m; ++k) {
		memset(vx, false, sizeof(vx));
		memset(vy, false, sizeof(vy));
		d = INF;
		if (dfs(k, n)) continue;
		for (int i=0; i<m; ++i) if (vx[i]) lx[i] -= d;
		for (int i=0; i<n; ++i) if (vy[i]) ly[i] += d;
		--k;
	}
}

inline char chr(int x) { return 0 <= x && x < 26 ? char(x+'a') : char(x-26+'A'); }
inline int ord(char x) { return islower(x) ? x - 'a' : x - 'A' + 26; }

int main() {
	int n, k;
	scanf("%d%d", &n, &k);
	scanf("%s%s", s1, s2);
	for (int i=0; i<n; ++i) ++w[ord(s1[i])][ord(s2[i])];
	KM(k, k);
	int tot = 0;
	for (int i=0; i<k; ++i) tot += w[i][mx[i]];
	printf("%d\n", tot);
	for (int i=0; i<k; ++i) printf("%c", chr(mx[i]));
	return 0;
}
