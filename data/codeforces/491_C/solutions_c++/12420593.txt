#include <algorithm>
#include <vector>
#include <queue>
#include <cstring>
#include <map>
#include <set>
#include <bitset>
#include <stack>
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <ctime>
#include <cmath>
 
using namespace std;
 
typedef long long LL;
typedef vector<int> VI;
typedef pair<int, int> PII;
typedef double DB;
 
#define X first
#define Y second
#define pb push_back
 
template<class T>
inline void chkmin(T &a, T b) {
    if (b < a) a = b;
}
 
template<class T>
inline void chkmax(T &a, T b) {
    if (a < b) a = b;
}
 
const int MN = 2123456;
const int MX = 55;
const int oo = int(1e9);
 
int s[MX], t[MX];
int a[MX], b[MX];
int l[2][MX], w[MX][MX];
int n, p;
char s1[MN], s2[MN];
 
int calc(char c) {
    if (islower(c)) return c - 'a';
    return c - 'A' + 26;    
}
 
int find(int u) {
     
    s[u] = 1;
    for (int v = 0; v < n; v++) {
        if (t[v] || l[0][u] + l[1][v] != w[u][v]) continue;
        t[v] = 1;
        if (b[v] == -1 || find(b[v])) {
            a[u] = v;
            b[v] = u;
            return 1;
        }
    }
    return 0;
}
 
int hungarian() {
     
    int i, k, j;
    int mv, md, p, q;
     
    memset(l, 0, sizeof(l));
    memset(a, -1, sizeof(a));
    memset(b, -1, sizeof(b));
     
    for (i = 0; i < n; i++) {
        for (mv = 0, k = 0; k < n; k++) chkmax(mv, w[i][k]);
        l[0][i] = mv;
    }
     
    for (i = 0; i < n; i++) {
         
        memset(s, 0, sizeof(s));
        memset(t, 0, sizeof(t));
        if (find(i)) continue;
         
        for (mv = oo, p = 0; p < n; p++) {
            if (!s[p]) continue;
            for (q = 0; q < n; q++) {
                if (t[q]) continue;
                md = l[0][p] + l[1][q] - w[p][q];
                chkmin(mv, md);
            }
        }
        for (k = 0; k < n; k++) {
            if (s[k]) l[0][k] -= mv;
            if (t[k]) l[1][k] += mv;
        }
        i--;
    }
    for (i = mv = 0; i < n; i++) mv += w[i][a[i]];
    return mv;
}
 
int main() {
//  freopen("data1.in", "r", stdin);
//  freopen("out.txt", "w", stdout);
     
    int i, j, k;
     
    scanf("%d%d", &p, &n);
    scanf("%s%s", s1, s2);
    for (i = 0; i < p; i++) {
        j = calc(s1[i]), k = calc(s2[i]);
        w[j][k]++;
    }
    printf("%d\n", hungarian());
    for (i = 0; i < n; i++) {
        if (a[i] < 26) putchar('a' + a[i]);
        else putchar('A' + a[i] - 26);
    } puts("");
     
    return 0;
} 

 		 			  	 	 	    		 			 	