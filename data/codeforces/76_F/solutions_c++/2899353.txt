#include<stdio.h>
#include<algorithm>
using namespace std;
long n,i,T,t,V;
struct type{long x,t;long long u,v;}point[100010];
long line[100010];
bool cmp(type x,type y){return x.u<y.u || (x.u==y.u && x.v<y.v);}
long find(long l,long r,long x){
     if (l==r) return l;
     long mid=(l+r+1)/2;
     return (line[mid]>x)?find(l,mid-1,x):find(mid,r,x);
}
int main(){
    scanf("%ld",&n);
    for (i=1;i<=n;i++)
        scanf("%ld%ld",&point[i].x,&point[i].t);
    for (scanf("%ld",&V),i=1;i<=n;i++){
        point[i].u=point[i].t*V+point[i].x;
        point[i].v=point[i].t*V-point[i].x;
        }
    sort(point+1,point+n+1,cmp);
    for (i=1;i<=n;i++,T=max(t,T)){
        if (point[i].u<0 || point[i].v<0) continue;
        t=find(0,T,point[i].v);
        line[++t]=point[i].v;
        }
    printf("%ld ",T);
    for (T=0,i=1;i<=n;i++,T=max(t,T)){
        t=find(0,T,point[i].v);
        line[++t]=point[i].v;
        }
    printf("%ld\n",T);
    return 0;
}
