#include <stdio.h>
#include <string.h>
#include <algorithm>
#define maxn 100010

using namespace std;

struct node{
	int x,y;
	friend bool operator < (const node &x,const node &y){
		return x.x<y.x || (x.x==y.x && x.y>y.y);
	}
} a[maxn];
int x[maxn],t[maxn];
int tag[maxn];
int f[maxn],fn;
int n;
int v;
int cal(){
	int i,j,k;
	fn=0;
	for (i=0;i<n;i++){
		int L=1,R=fn,mid;
		while (L<=R){
			mid=(L+R)>>1;
			if (f[mid]>=a[i].y) L=mid+1;else R=mid-1;
		}
		if (L==1 && tag[i]) continue;
		if (L>fn) fn++;
		f[L]=a[i].y;
	}
	return fn;
}
int main(){
	int i,j,k;
	scanf("%d",&n);
	for (i=0;i<n;i++) scanf("%d %d",x+i,t+i);
	scanf("%d",&v);
	for (i=0;i<n;i++){
		a[i].x=x[i]+v*t[i];
		a[i].y=x[i]-v*t[i];
	}
	sort(a,a+n);
	for (i=0;i<n;i++)
		if (a[i].x<0 || a[i].y>0) tag[i]=1;
	int ans1=cal(),ans2;
	memset(tag,0,sizeof(tag));
	ans2=cal();
	printf("%d %d\n",ans1,ans2);
	return 0;
}
