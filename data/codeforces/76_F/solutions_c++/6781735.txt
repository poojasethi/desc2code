#include<iostream>
#include<algorithm>
#include<climits>
using namespace std;


#define p first
#define q second

const int MAXN = 100000 + 10;

int n;
int v;

int x[MAXN];
int t[MAXN];
int dp[MAXN];

pair <int,int> a[MAXN];


int main()
{
	cin >> n;
	for(int i=0 ; i<n ; i++)
		cin >> x[i] >> t[i];
	cin >> v;
	for(int i=0 ; i<n ; i++){
		a[i].p = x[i] + ( v * t[i] );
		a[i].q = -x[i] + ( v * t[i] );
	}
	sort( a , a + n );
	fill( dp , dp+n , INT_MAX );
	int ans = 0;
	for(int i=0 ; i<n ; i++){
		if( a[i].p >= 0 && a[i].q >= 0 ){
			int carry = upper_bound( dp , dp + ans + 1 , a[i].q ) - dp;
			if( carry >= ans )
				dp[ ans++ ] = a[i].q;
			else
				dp[carry] = a[i].q;
		}
	}
	cout << ans << " ";
	fill( dp , dp+n , INT_MAX );
	ans = 0;
	for(int i=0 ; i<n ; i++){
		int carry = upper_bound( dp , dp + ans + 1 , a[i].q ) - dp;
		if( carry >= ans )
			dp[ ans++ ] = a[i].q;
		else
			dp[carry] = a[i].q;
	}
	cout << ans << endl;
	return 0;
}
