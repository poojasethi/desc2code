#include <cstdio>
#include <algorithm>
struct box
{
	int x,t,p,q;
}a[100005];
int c[100005],n,top;
int comp(const void *p,const void *q)
{
	if( (*(struct box*)p).p != (*(struct box*)q).p)
		return (*(struct box*)p).p - (*(struct box*)q).p;
	return (*(struct box*)p).q - (*(struct box*)q).q;
}
int main()
{
	//freopen("input.txt","r",stdin);
	int i,v;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
		scanf("%d%d",&a[i].x,&a[i].t);
	scanf("%d",&v);
	for(i=1;i<=n;i++)
	{
		a[i].p = a[i].t*v+a[i].x;
		a[i].q = a[i].t*v-a[i].x;
	}	
	qsort(a+1,n,sizeof(a[0]),comp);
	top = 1; c[top] = 0;
	for(i=1;i<=n;i++) if(a[i].p > 0) break;
	for(;i<=n;i++)
	{
		if(a[i].q >= c[top])
		{
			c[++top] = a[i].q;
			continue;
		}
		int next = std::upper_bound(c+1,c+top+1,a[i].q)-c;
		if(next>1) c[next] = a[i].q;
	}
	printf("%d ",top-1); top = 0;
	for(i=1;i<=n;i++)
	{
		if(top == 0 || a[i].q >= c[top])
		{
			c[++top] = a[i].q;
			continue;
		}
		int next = std::upper_bound(c+1,c+top+1,a[i].q)-c;
		c[next] = a[i].q;
	}
	printf("%d\n",top);
}