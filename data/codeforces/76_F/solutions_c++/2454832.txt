#include <cstdio>
#include <cstring>
#include <algorithm>
#include <functional>
#include <climits>
using namespace std;

#define x first
#define y second

typedef long long LL;

int n, xi[100011], ti[100011], v;
pair<LL, LL> p[100011];
LL f[100011];
int ans1(0), ans2(0), cnt(0), pos;

void init()
{
	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
		scanf("%d%d", &xi[i], &ti[i]);
	scanf("%d", &v);
	for (int i = 0; i < n; ++i)
		p[i] = make_pair(-xi[i] + v * ti[i], xi[i] + v * ti[i]);
	p[n] = make_pair(0, 0);
	sort(p, p + n + 1);
}

int find(int L, int R, LL v)
{
	int M;
	while (L < R)
	{
		M = (L + R) >> 1;
		if (f[M] < v) R = M;
		else L = M + 1;
	}
	return L;
}

void work()
{
	fill(f, f + n + 1, LONG_LONG_MIN);
	f[0] = LONG_LONG_MAX;
	for (int i = n; i >= 0; --i)
	{
		pos = find(0, cnt + 1, p[i].y);
		if (p[i].x == 0 && p[i].y == 0)
			ans1 = max(ans1, pos - 1);
		else
		{
			f[pos] = p[i].y;
			cnt = max(pos, cnt);
			ans2 = max(pos, ans2);
		}
	}
	printf("%d %d\n", ans1, ans2);
}

int main()
{
	init();
	work();
	return 0;
}
