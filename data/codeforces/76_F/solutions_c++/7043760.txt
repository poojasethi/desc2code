#include<iostream>
#include<algorithm>
#include<cstring>
#define N 120000
using namespace std;
pair<int,int>p[N];
int d[N];
int cmp(pair<int,int> a,pair<int,int>b)
{
	if(a.first==b.first)
	return a.second<b.second;
	return a.first<b.first;
}
int main()
{
	int n,m;
	while(cin>>n)
	{
		int i,v;
		for(i=0;i<n;i++)
		cin>>p[i].first>>p[i].second;
		cin>>v;
		for(i=0;i<n;i++)
		p[i]=pair<int,int>(p[i].first+p[i].second*v,-p[i].first+p[i].second*v);
		p[n++]=pair<int,int>(0,0);
		sort(p,p+n,cmp);
		memset(d,0x3f,sizeof(d));
		for(i=n-1;i>=0;i--)
		{
			int pa=upper_bound(d,d+n,-p[i].second)-d;
			if(p[i]==pair<int,int>(0,0))
			cout<<lower_bound(d,d+n,0)-d<<' ' ;
			else
			d[pa]=-p[i].second;
		}
		cout<<lower_bound(d,d+n,0x3f3f3f3f)-d<<endl;;
	}
}

 	  				   	 	 		   	  	  	