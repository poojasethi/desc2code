#include<cstdio>
#include<cstring>
#include<algorithm>
#include <iostream>
#define N 100050
#define LL __int64

using namespace std;
LL INF=2000000000;
struct node
{
	LL x,y;
}s[N];
LL x[N],t[N];
bool cmp(node a,node b)
{
	return a.x<b.x||a.x==b.x&&a.y<b.y;
}
int v,n,st;
LL q[N];
int tail;
int solve(LL minn)
{
	tail=0;
	sort(s,s+n,cmp);
	for(int i=0;i<n;++i)
	{
		if(s[i].x<minn||s[i].y<minn)
			continue;
		if(tail==0||s[i].y>=q[tail-1])
		{
			q[tail++]=s[i].y;
		}
		else
		{
			int l,r;
			l=0;r=tail-1;
			while(r-l>1)
			{
				int mid=(l+r)>>1;
				if(q[mid]>s[i].y)r=mid;
				else l=mid;
			}
			if(q[l]>s[i].y)q[l]=s[i].y;
			else q[r]=s[i].y;
		}
	}
	return tail;
}
int main() {
	INF+=INF;
	int flag=0;
	scanf("%d",&n);
	for(int i=0;i<n;++i)
	{
		scanf("%I64d%I64d",&x[i],&t[i]);
	}
	scanf("%d",&v);
	for(int i=0;i<n;++i)
	{
		s[i].x=x[i]+v*t[i];
		s[i].y=-x[i]+v*t[i];

	}
	int ans1=solve(-INF);
	s[n].x=0;s[n++].y=0;
	int ans=solve(0);
	printf("%d %d\n",ans-1,ans1);
	return 0;
}
