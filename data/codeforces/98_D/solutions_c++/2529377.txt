
// Codeforces Beta Round #78 (Div. 1 Only) D Help Monks

#include <algorithm>
#include <cstring>
#include <cstdio>
#include <vector>

using namespace std;

vector< pair<int, int> > step;
int r[20];

void solve(int i, int n, int a, int b, int c, bool flag) {
	if (i == n) return;
	int j = i + 1;
	while (j < n && r[j] == r[i]) j ++;
	if (j == n && flag) {
		for (int k = 0; k < j - i - 1; k ++)
			step.push_back(make_pair(a, b));
		step.push_back(make_pair(a, c));
		for (int k = 0; k < j - i - 1; k ++)
			step.push_back(make_pair(b, c));
		return;
	}
	if (j == i + 1) {
		solve(j, n, a, c, b, false);
		step.push_back(make_pair(a, c));
		solve(j, n, b, a, c, false);
	} else if (! flag) {
		solve(j, n, a, c, b, false);
		for (int k = 0; k < j - i; k ++)
			step.push_back(make_pair(a, c));
		solve(j, n, b, a, c, false);
	} else {
		solve(j, n, a, b, c, false);
		for (int k = 0; k < j - i; k ++)
			step.push_back(make_pair(a, b));
		solve(j, n, c, b, a, false);
		for (int k = 0; k < j - i; k ++)
			step.push_back(make_pair(b, c));
		solve(j, n, a, b, c, true);
	}
}

int main() {
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; i ++) scanf("%d", &r[i]);
	solve(0, n, 1, 2, 3, true);
	
	printf("%d\n", (int)step.size());
	for (int i = 0; i < step.size(); i ++)
		printf("%d %d\n", step[i].first, step[i].second);
	
	return 0;
}
