#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<vector>
#define pb push_back
#define mk make_pair
using namespace std;
int i,nn,n,x,a[120],p[120],ans;
vector <pair<int,int> > q;
void dfs(int x,int s,int t,int flag){
	int d=6-s-t;
	if(x==n){
		if(flag)for(int i=1;i<=p[x];++i)q.pb(mk(s,t));
		else {
			for(int i=1;i<p[x];++i)q.pb(mk(s,d));
			q.pb(mk(s,t));
			for(int i=1;i<p[x];++i)q.pb(mk(d,t));
		}
		return;
	}
	if(p[x]==1){
		dfs(x+1,s,d,1);
		q.pb(mk(s,t));
		dfs(x+1,d,t,1);
	}else
	if(!flag){
		dfs(x+1,s,t,1);
		for(int i=1;i<=p[x];++i)q.pb(mk(s,d));
		dfs(x+1,t,s,1);
		for(int i=1;i<=p[x];++i)q.pb(mk(d,t));
		dfs(x+1,s,t,0);
	}else{
		dfs(x+1,s,d,1);
		for(int i=1;i<=p[x];++i)q.pb(mk(s,t));
		dfs(x+1,d,t,1);
	}
}
int main(){
	scanf("%d",&nn);
	for(i=1;i<=nn;++i){
		scanf("%d",&x);
		if(x!=a[n])a[++n]=x,p[n]=1;
		else p[n]++;
	}
	dfs(1,1,3,0);
	printf("%d\n",q.size());
	for(i=0;i<q.size();++i)printf("%d %d\n",q[i].first,q[i].second);
}
