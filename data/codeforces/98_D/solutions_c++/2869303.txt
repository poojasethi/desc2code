#include <cstdlib>
#include <cstdio>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <cstring>

using namespace std;

typedef long long LL;
typedef unsigned long long ULL;

#define rep(i,l,r) for (int i=(l); i<=(r); i++)
#define repd(i,r,l) for (int i=(r); i>=(l); i--)
#define rept(i,c) for (typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)

#ifndef ONLINE_JUDGE
#define debug(x) { cerr<<#x<<" = "<<(x)<<endl; }
#else
#define debug(x) {}
#endif

int n;
vector< pair<int,int> > final;

void move(int a, int b, int cnt)
{
	rep(_,1,cnt) final.push_back(make_pair(a,b));
}

int A[30];

void solve(int a, int b, int c, int L, int order)
{
	if (L>n) return;
	int R=L; while (R<=n && A[R]==A[L]) R++;
	int cnt=R-L;
	if (R>n)
	{
		if (order)
		{
			move(a,b,cnt-1);
			move(a,c,1);
			move(b,c,cnt-1);
		}
		else  move(a,c,cnt);
		return;
	}
	if (R==L+1 || !order)
	{
		solve(a,c,b,R,0);
		move(a,c,cnt);
		solve(b,a,c,R,0);
	}
	else
	{
		solve(a,b,c,R,0);
		move(a,b,cnt);
		solve(c,b,a,R,0);
		move(b,c,cnt);
		solve(a,b,c,R,1);
	}
}

void lemon()
{
	scanf("%d",&n);
	rep(i,1,n) scanf("%d",&A[i]);
	solve(1,2,3,1,1);
	printf("%d\n",final.size());
	rept(it,final) printf("%d %d\n",it->first,it->second);
}

int main()
{
	ios::sync_with_stdio(true);
	#ifndef ONLINE_JUDGE
		freopen("98D.in","r",stdin);
	#endif
	lemon();
	return 0;
}