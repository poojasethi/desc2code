#include <iostream>
#include <stack>
#include <vector>

using namespace std;

#define pii pair<int, int>
int n;
vector<pii> v[30], v1[30];
int a[30];
void move(int index, int cnt, int c1, int c2, int c3)
{
	if (cnt == n + 1) return;
	int k = a[cnt];
	int i = cnt;
	while (i <= n && a[i] == k)
		i++;
	move(index, i, c1, c3, c2);
	for (int j = cnt; j < i; j++)
		v[index].push_back(pii(c1, c3));
	move(index, i, c2, c1, c3);

}
stack<int> s[4];
void move2(int cnt)
{
	if (cnt >= n + 1)
		return;
	move(cnt, cnt + 1, 1, 3, 2);
	v[cnt].push_back(pii(1, 3));
	move(cnt, cnt + 1, 2, 1, 3);
	v1[cnt] = v[cnt];
	v[cnt].clear();
	int i = cnt;
	while (i <= n && a[i] == a[cnt])
		i++;
	move(cnt, i, 1, 2, 3);
	for (int j = cnt; j < i; j++)
		v[cnt].push_back(pii(1, 2));
	move(cnt, i, 3, 2, 1);
	for (int j = cnt; j < i; j++)
		v[cnt].push_back(pii(2, 3));
	move2(i);
	vector<pii> tmp = v[i];
	for (int i = 0; i < tmp.size(); i++)
		v[cnt].push_back(tmp[i]);
	if (v1[cnt].size() < v[cnt].size())
		v[cnt] = v1[cnt];
}
int main()
{
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	move2(1);
	vector<pii> ans = v[1];
	cout << ans.size() << endl;
	for (int i = 0; i < ans.size(); i++)
		cout << ans[i].first << " " << ans[i].second << endl;
	/*
	for (int i = n; i >= 1; i--)
		s[1].push(i);

	for (int i = 0; i < v.size(); i++)
	{
		s[v[i].second].push(s[v[i].first].top());
		s[v[i].first].pop();
	}
	while (!s[3].empty())
	{
		cout << s[3].top() << endl;
		s[3].pop();
	}*/
}

 			 		 	     		 	    	 	