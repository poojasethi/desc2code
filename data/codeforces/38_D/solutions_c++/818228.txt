#include <iostream>
#include <cstdio>
#include <algorithm>

using namespace std;

int N;
const int MAXN = 101;

int x[MAXN], y[MAXN], side[MAXN];

int main()
{
  scanf("%d", &N);
  int answer = N;
  for (int i = 0; i < N; i++) {
    int x2, y2;
    scanf("%d%d%d%d", x+i, y+i, &x2, &y2);
    if (x2 < x[i]) swap(x[i], x2);
    if (y2 < y[i]) swap(y[i], y2);
    side[i] = x2 - x[i];
    int sum2x = 0, sum2y = 0;
    //printf(" at %d %d side %d\n", x[i], y[i], side[i]);
    int totw = 0;
    for (int j = i; j > 0; j--) {
      sum2x += (2 * x[j] + side[j]) * side[j] * side[j] * side[j];
      sum2y += (2 * y[j] + side[j]) * side[j] * side[j] * side[j];
      totw += side[j] * side[j] * side[j];
      //printf("     form %d (%d %d) : %.2lf %.2lf within %d %d %d %d\n", j, x[j], y[j], (double)sum2x/(2 * totw), (double)sum2y/(2 * totw), x[j-1], y[j-1], x[j-1]+side[j-1],y[j-1]+side[j-1]);
      if ( sum2x < totw * 2 * x[j-1]
        || sum2x > totw * 2 * (x[j-1] + side[j-1])
        || sum2y < totw * 2 * y[j-1]
	|| sum2y > totw * 2 * (y[j-1] + side[j-1])
	) {
	  answer = i;
	  break;
      }
    }
    if (answer < N) break;
  }
  printf("%d\n", answer);
  return 0;
}
