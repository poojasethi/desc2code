#include <iostream>
#include <cstdlib>
#include <cassert>

using namespace std;

int x1[101];
int x2[101];
int y1[101];
int y2[101];

//true if cube collapses
bool check(int bottom, int top){
  int momentx(0);
  int momenty(0);
  int weight(0);
  for(int i = bottom + 1;i<= top; i++){
    int width = abs(x2[i]-x1[i]);
    int thisweight(width * width *width);
    momentx += thisweight*((int)(x1[i] + x2[i]));
    momenty += thisweight*((int)(y1[i] + y2[i]));
    weight += thisweight;    
  }
  int gx(momentx);
  int gy(momenty);

  //  cout << gx << " " << gy << endl;
  // cout << x1[bottom] << " " << x2[bottom] << " " << y1[bottom] << " "  << y2[bottom] << endl;
  if(gx < min(x1[bottom],x2[bottom])*weight*2 || max(x1[bottom],x2[bottom])*weight*2 <gx ||gy < min(y1[bottom],y2[bottom])*weight*2 || max(y1[bottom],y2[bottom])*weight*2 < gy ){
    return true;
  } else {
    return false;
  }
}

int main(){
  int n;
  cin >> n;

  int i(0);
  for(i= 0;i<n;i++){
    cin >> x1[i] >> y1[i] >> x2[i] >> y2[i];

    for(int j=0;j<i;j++){
      if(check(j,i)){
	cout << i;
	return 0;
      }
    }
  }
  cout << i;
  return 0;
}
