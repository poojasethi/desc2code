#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long ll;
const int N = 105;
struct node {
    double x1, y1, x2, y2, cx, cy, w;
};
struct node a[N];
int main () {
    int n;
    scanf("%d", &n);
    for(int i = 1; i <= n;i ++) {
        scanf("%lf%lf%lf%lf", &a[i].x1, &a[i].y1, &a[i].x2, &a[i].y2);
        a[i].w = (a[i].x2 - a[i].x1) * (a[i].x2 - a[i].x1) * (a[i].x2 - a[i].x1);
        if(a[i].w < 0) a[i].w *= -1;
        a[i].cx = (a[i].x1 + a[i].x2) / 2.0;
        a[i].cy = (a[i].y1 + a[i].y2) / 2.0;
    }
    int i, j, ans = 0;
    for(i = 2; i <= n; i ++) {
        double cx = a[i].cx, cy = a[i].cy, w = a[i].w;
        for(j = i-1; j > 0; j --) {
            if( (cx - a[j].x1)*(cx - a[j].x2) > 0 || (cy - a[j].y1)*(cy - a[j].y2) > 0) break;//

            // Pw = (P[1] * W[1] + P[2]*W[2] + ... + P[n] * W[n]) / (W[1] + W[2] + ... + W[n])
            cx = (w * cx + a[j].w * a[j].cx)/(w + a[j].w);
            cy = (w * cy + a[j].w * a[j].cy)/(w + a[j].w);
            w += a[j].w;
        }
        //ans = max(ans, i-j);
        if(j) break;
    }
    printf("%d\n", i - 1);
    return 0;
}