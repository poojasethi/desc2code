#include <cstdio>
#include <cstdlib>
using namespace std;
const int N = 105;
const double eps = 1e-7;
double x0[N], y0[N], x1[N], y1[N], cx[N], cy[N];
double M, sx, sy;
double m[N];
int n;

void swap(double &a, double &b)
{double t = a; a = b; b = t;}

bool inrange(double x0, double y0, double x1, double y1, double x2, double y2)
{
	return x1 - eps <= x0 && x0 <= x2 + eps &&
		y1 - eps <= y0 && y0 <= y2 + eps;
}

int main()
{
	scanf("%d", &n);
	for (int i = 1; i <= n; ++i) {
		scanf("%lf%lf%lf%lf", &x0[i], &y0[i], &x1[i], &y1[i]);
		if (x0[i] > x1[i]) swap(x0[i], x1[i]);
		if (y0[i] > y1[i]) swap(y0[i], y1[i]);
		cx[i] = (x0[i] + x1[i]) / 2;
		cy[i] = (y0[i] + y1[i]) / 2;
		m[i] = x0[i] - x1[i];
		m[i] *= m[i] * m[i];
	}
	for (int i = 2; i <= n; ++i) {
		for (int j = 2; j <= i; ++j) {
			M = 0;
			sx = sy = 0;
			for (int k = j; k <= i; ++k) {
				M += m[k];
				sx += m[k] * cx[k];
				sy += m[k] * cy[k];
			}
			sx /= M;
			sy /= M;
			if (!inrange(sx, sy, x0[j - 1], y0[j - 1], x1[j - 1], y1[j - 1])) {
				printf("%d\n", i - 1);
				return 0;
			}
		}
	}
	printf("%d\n", n);
}