
#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <map>

using namespace std;

const int maxn = 100001;
typedef long long LL;
int k, b, b2, n, digit[maxn], cnt0;
map<int, int> mp;
LL result, result0;

int main() {
	int sum = 0;
	scanf("%d%d%d", &k, &b2, &n);
	if (b2 == k - 1) b = 0; else b = b2;
	mp[0] = 1;
	for (int i = 1; i <= n; ++i) {
		scanf("%d", &digit[i]);
		if (digit[i] == 0) ++cnt0; else cnt0 = 0;
		result0 += cnt0;
		sum += digit[i];
		sum %= (k - 1);
		result += mp[(((sum - b) % (k - 1)) + (k - 1)) % (k - 1)];
		mp[sum] += 1;
	}
	if (b2 == 0) {
		printf("%I64d\n", result0);
	} else if (b2 == k - 1) {
		printf("%I64d\n", result - result0);
	} else {
		printf("%I64d\n", result);
	}
	return 0;
}
