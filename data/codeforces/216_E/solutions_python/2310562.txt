from bisect import *
from itertools import islice

k, b, n = [int(x) for x in raw_input().split()]
nums = [int(x) for x in raw_input().split()]
km1 = k - 1
sums = [0]
for x in nums:
    sums.append((x + sums[-1]) % km1)

sums_with_idx = [(x, i) for i, x in enumerate(sums)]
sums_with_idx.sort()

ans = 0
for i, x in enumerate(islice(sums, 0, n)):
    t = (b + x) % km1
    ans += bisect_right(sums_with_idx, (t, n)) - bisect_left(sums_with_idx, (t, i+1))

if b != km1 and b != 0:
    print ans
else:
    zeros_idx_left = [i for i, x in enumerate(nums) if x == 0 and (i == 0 or nums[i-1] != 0)]
    zeros_idx_right = [i for i, x in enumerate(nums) if x == 0 and (i == n-1 or nums[i+1] != 0)]
    cont_zeros = [y - x + 1 for x, y in zip(zeros_idx_left, zeros_idx_right)]
    zeros = 0 if len(cont_zeros) == 0 else reduce(lambda x, y : x + (1 + y) * y / 2, cont_zeros[1:], cont_zeros[0] * (cont_zeros[0] + 1) / 2)
    if b == 0:
        print zeros
    else:
        print ans - zeros
