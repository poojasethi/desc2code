#include<iostream>
#include<vector>
#include<string>
using namespace std;
vector<string> f[10000];
vector<int> g[10000];
int j,k,b[10000],c[10000],ans1,ans2,p,m;
void dfs(int i,int d)
{
	b[i]=g[i].size();
	for (int j=0;j<g[i].size();j++)
	{
		dfs(g[i][j],d+1);
		b[i]+=b[g[i][j]];
		c[i]+=c[g[i][j]];
	}
	if (d>1)
	{
		ans1=max(ans1,b[i]);
		ans2=max(ans2,c[i]);
	}
}
int main()
{
	string s;
	while(cin>>s)
	{
		int n=s.size();j=0;
		for (int i=0;i<n;i=k+1)
		{
			for (k=i;k<n && s[k]!='\\';k++);
			if (k<n)
			{
				string t=s.substr(i,k-i);
				for (p=0;p<f[j].size();p++)
				{
					if (f[j][p]==t) break;
				}
				if (p==f[j].size())
				{
					f[j].push_back(t);
					g[j].push_back(++m);
					j=m;  
				}
				else j=g[j][p];
			}
			else c[j]++;
		}
	}
	dfs(0,0);
	cout<<ans1<<" "<<ans2<<endl;
	return 0;
}
