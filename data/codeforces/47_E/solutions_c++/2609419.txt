#include<iostream>
#include<iomanip>
#include<cmath>
#include<algorithm>
#include<set>
using namespace std;
struct rec{double x,y;int z;}a[210010];
struct{double x,y;}ans[10010];
double V,x,y,l,r,ti,g=9.8,eps=1e-10;
multiset<double> f;
multiset<double>::iterator it;
int n,m,t,i,j;

bool operator <(rec a,rec b)
{
	return a.x+eps<b.x||a.x<b.x+eps&&a.z>b.z;
}

double binary(double x,double y)
{
	double l,r,mid,t,yt;
	l=0,r=acos(-1.0)/4;
	while(l+eps<r)
	{
		mid=(l+r)/2;
		t=x/V/cos(mid);
		yt=V*sin(mid)*t-g*t*t/2;
		if(yt<y) l=mid; else r=mid;
	}
	return l;
}

int main()
{
	ios::sync_with_stdio(false);
	cin>>n>>V;
	for(i=1;i<=n;i++) cin>>a[i].x,a[i].z=i;
	cin>>m;
	for(t=n,i=1;i<=m;i++)
	{
		cin>>x>>y;
		l=binary(x,0),r=binary(x,y);
		if(l+1e-6>r) continue;
		a[++t].x=l,a[t].y=x,a[t].z=n+1;
		a[++t].x=r,a[t].y=x,a[t].z=0;
	}
	sort(a+1,a+t+1);
	for(i=1;i<=t;i++)
		if(a[i].z==n+1) f.insert(a[i].y);
		else if(a[i].z==0) it=f.lower_bound(a[i].y-eps),f.erase(it);
		else{
			x=V*V*sin(2*a[i].x)/g;
			if(f.size()) x=min(x,*f.begin());
			ti=x/V/cos(a[i].x);
			y=V*sin(a[i].x)*ti-g*ti*ti/2;
			ans[a[i].z].x=x,ans[a[i].z].y=y;
		}
	for(i=1;i<=n;i++)
		cout<<setprecision(10)<<fixed<<ans[i].x<<' '<<ans[i].y<<endl;
	return 0;
}