#include<stdio.h>
#include<math.h>
#include<algorithm>
using namespace std;
const double eps=1e-7;
struct wall
{
	double x,h;
	inline bool operator < (const wall &k2) const{return x<k2.x;}
};
struct ball
{
	double ang;
	int i;
	inline bool operator < (const ball &k2) const{return ang<k2.ang;}
};
wall W[100010];
ball B[10010];
int n,m,V;
double ansx[10010],ansy[10010];
int main()
{
	scanf("%d%d",&n,&V);
	for(int i=1;i<=n;i++)scanf("%lf",&B[i].ang),B[i].i=i;
	scanf("%d",&m);
	for(int i=1;i<=m;i++)scanf("%lf%lf",&W[i].x,&W[i].h);
	sort(B+1,B+n+1);
	sort(W+1,W+m+1);
	int bi=1,wi=1;
	for(;;)
	{
		if(wi>m||bi>n)break;
		double wx=W[wi].x,wh=W[wi].h+eps;
		double ac=-0.5*9.8/V/V/cos(B[bi].ang)/cos(B[bi].ang);
		double bc=tan(B[bi].ang);
		double y=ac*wx*wx+bc*wx;
		if(y<=eps)ansx[B[bi].i]=-bc/ac,bi++;
		else if(y<=wh)ansx[B[bi].i]=wx,ansy[B[bi].i]=y,bi++;
		else wi++;
	}
	for(;bi<=n;bi++)
	{
		double ac=-0.5*9.8/V/V/cos(B[bi].ang)/cos(B[bi].ang);
		double bc=tan(B[bi].ang);
		ansx[B[bi].i]=-bc/ac;
	}
	for(int i=1;i<=n;i++)printf("%.9lf %.9lf\n",ansx[i],ansy[i]);
	return 0;
}
