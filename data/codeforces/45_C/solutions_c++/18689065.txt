#include<bits/stdc++.h>
#define MOD 1000000007
#define MX 100010
#define ll long long
#define sc(n) scanf("%d",&n)
#define pr(m) printf("%d\n",m)
#define pi acos(-1.0)

using namespace std;

struct dance
{
    int l,r,v;
    dance(int a, int b, int c)
    {
        l=a,r=b,v=c;
    }
    bool operator < (const dance&a) const
    {
        return a.v<v || a.v==v && a.l<l;
    }
};

priority_queue<dance>pq;
struct ANS
{
    int l,r;
} ans[200004];
int num=0,n;
char s[200004],vis[200004];
int pre[200004],nex[200004],w[200004];
int main()
{
    memset(vis,0,sizeof(vis));
    scanf("%d%s",&n,s+1);
    for(int i=1; i<=n; i++)
    {
        sc(w[i]);
        pre[i]=i-1;
        nex[i]=i+1;
    }
    for(int i=1; i<n; i++)
        if(s[i]!=s[i+1])pq.push(dance(i,i+1,abs(w[i]-w[i+1])));
    while(!pq.empty())
    {
        dance u=pq.top();
        pq.pop();
        if(vis[u.l]||vis[u.r]) continue;
        vis[u.l]=vis[u.r]=1;
        ans[++num].l=u.l;
        ans[num].r=u.r;
        int L= pre[u.l];
        int R=nex[u.r];
        nex[L]=R,pre[R]=L;
        if(L>=1 && R<=n && s[L]!=s[R])
            pq.push(dance(L,R,abs(w[L]-w[R])));
    }
    pr(num);
    for(int i=1; i<=num; i++)printf("%d %d\n",ans[i].l,ans[i].r);
    return 0;
}

  	  		    				   	 							 			