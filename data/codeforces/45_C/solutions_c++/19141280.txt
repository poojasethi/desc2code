#include <bits/stdc++.h>

#pragma comment(linker, "/STACK:102400000,102400000")
using namespace std;

#define LL long long
#define pii pair<int,int>
#define MP make_pair
#define ls i << 1
#define rs ls | 1
#define md (ll + rr >> 1)
#define lson ll, md, ls
#define rson md + 1, rr, rs
#define Pi acos(-1.0)
#define mod 1000000007
#define eps 1e-10
#define inf 0x3f3f3f3f
#define N 200010
#define M 2000020

struct node{
	int x, y, dif;
	bool operator < (const node &b) const {
		return dif > b.dif || (dif == b.dif && x > b.x);
	}
};
int n, a[N], nxt[N], pre[N];
char ch[N];
priority_queue<node> q;
pii ans[N];
bool vis[N];
int main(){
	scanf("%d", &n);
	scanf("%s", ch + 1);
	for(int i = 1; i <= n; ++i){
		pre[i] = i - 1;
		nxt[i] = i + 1;
		scanf("%d", &a[i]);
	}
	for(int i = 1; i < n; ++i){
		if(ch[i] != ch[i+1]){
			node t;
			t.x = i, t.y = i + 1;
			t.dif = abs(a[i] - a[i+1]);
			q.push(t);
		}
	}
	int cnt = 0;
	while(!q.empty()){
		node t = q.top(); q.pop();
		int x = t.x, y = t.y;
		if(!vis[x] && !vis[y]){
			ans[++cnt] = MP(x, y);
			vis[x] = vis[y] = 1;
			x = pre[x], y = nxt[y];
			nxt[x] = y, pre[y] = x;
			if(x >= 1 && x <= n && y >= 1 && y <= n && ch[x] != ch[y]){
				t.x = x;
				t.y = y;
				t.dif = abs(a[x] - a[y]);
				q.push(t);
			}
		}
	}
	cout << cnt << endl;
	for(int i = 1; i <= cnt; ++i)
		printf("%d %d\n", ans[i].first, ans[i].second);

	return 0;
}
	    					 	  		    				     	