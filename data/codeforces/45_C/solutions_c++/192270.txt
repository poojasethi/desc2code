#include <stdio.h>

#include <set>

using namespace std;

#define mp make_pair
#define maxn 200005

struct vect
{
	int st, dr;
};

int n, nr;
int dr[maxn], st[maxn], v[maxn], f[maxn];
char s[maxn];
vect sol[maxn];

set <pair <int, pair <int, int> > > h;

inline int abs(int a) {return a < 0 ? -a : a;}

int main()
{
    #ifndef ONLINE_JUDGE
    freopen("c.in", "r", stdin);
    freopen("c.out", "w", stdout);
    #endif
	
    scanf ("%d\n", &n);
    scanf ("%s", s+1);
    s[n+1] = s[n];
	
	int i, n1, n2, pv, sc;

    for (i = 1; i <= n; i ++)
    {
        scanf("%d", &v[i]);
        dr[i] = i + 1;
        st[i] = i - 1;
    }
	
    for (i = 1; i <= n; i ++)
        if (s[i] != s[i + 1])
            h.insert (mp (abs (v[i] - v[i + 1]), mp(i, i + 1)));
	
    while (!h.empty())
    {
        n1 = (*h.begin()).second.first;
        n2 = (*h.begin()).second.second;
        h.erase (h.begin());
		
        if(f[n1] || f[n2] || dr[n1] != n2)
            continue;
		
        pv = st[n1];
        sc = dr[n2];
        f[n1] = f[n2] = 1;
        sol[++ nr].st = n1;
        sol[nr].dr = n2;
		
        st[sc]=pv;
        dr[pv]=sc;
		
        if(s[pv] != s[sc] && pv > 0 && sc <= n)
            h.insert (mp (abs (v[pv] - v[sc]), mp (pv, sc)));
    }
	
    printf("%d\n", nr);
    for (i = 1; i <= nr; i ++)
        printf("%d %d\n", sol[i].st, sol[i].dr);
    return 0;
}
