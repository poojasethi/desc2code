#include<iostream>
#include<cstdio>
#include<queue>
#include<cmath>
#include<cstring>
using namespace std;
struct node
{
    int l,r;
    int v;

}a;
inline bool operator<(const node a,const node b)
{
        if(a.v^b.v)return a.v>b.v;
        else return a.l>b.l;
}
int n;
char b[200011];
int s[200011];
int ll[200011],rr[200011];
int vis[200011];
priority_queue<node>q;
int main()
{
    while(scanf("%d",&n)==1)
    {
        cin>>b+1;
        int num=0;
        for(int i=1;i<=n;i++)
        {ll[i]=i-1,rr[i]=i+1;if(b[i]=='B')num++;}
        if(n-num<num)num=n-num;
        for(int i=1;i<=n;i++)scanf("%d",&s[i]);
        while(!q.empty())q.pop();
        for(int i=1;i<n;i++)
        if(b[i]!=b[i+1])a.l=i,a.r=i+1,a.v=abs(s[i]-s[i+1]),q.push(a);
        memset(vis,0,sizeof(vis));
        printf("%d\n",num);
        while(num--)
        {
            while(!q.empty())
            {
                a=q.top();q.pop();
                if(!vis[a.l]&&!vis[a.r])
                {
                    printf("%d %d\n",a.l,a.r);
                    vis[a.l]=1;vis[a.r]=1;break;
                }
            }
            int x=ll[a.l],t=rr[a.r];
            rr[x]=t;ll[t]=x;a.l=x;a.r=t;a.v=abs(s[x]-s[t]);
            if(x>0&&t<=n&&b[t]!=b[x])q.push(a);
        }
    }
}
		  		  			 			 	 		   			