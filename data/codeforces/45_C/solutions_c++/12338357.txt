#include<cstdio>
#include<queue>
#include<cstring>
#include<cstdlib>
using namespace std;
int n;
char ss[201000];
int dd[201000],pre[201000],next[201000],v[201000],ans1[201000],ans2[201000];
int snum=0;
struct node
{
    int l,r,d;
    bool operator < (const node &a) const{
    if(d!=a.d)
    return d>a.d;
    else if(l!=a.l)
    return l>a.l;
    else
    return r>a.r;
    }
}z,z2;
priority_queue <node> q;
int main()
{
    int i;
    while(scanf("%d",&n)!=EOF)
    {
    memset(v,0,sizeof(v));
    scanf("%s",ss+1);
    for(i=1;i<=n;i++)
    {
        scanf("%d",&dd[i]);
        pre[i]=i-1;
        next[i]=i+1;
    }
    for(i=1;i<=n-1;i++)
    {
        if(ss[i]!=ss[i+1])
        {
            z2.l=i;
            z2.r=i+1;
            z2.d=abs(dd[i]-dd[i+1]);
            q.push(z2);
        }
    }
    while(!q.empty())
    {
        int l,r;
        z=q.top();
        q.pop();
        if(v[z.l]==1||v[z.r]==1) continue;
        ans1[snum]=z.l;
        ans2[snum]=z.r;
        snum++;
        l=pre[z.l];
        r=next[z.r];
        v[z.l]=1;
        v[z.r]=1;
        next[l]=r;
        pre[r]=l;
        if(l<1||r>n) continue;
        if(ss[l]!=ss[r])
        {
            z2.l=l;
            z2.r=r;
            z2.d=abs(dd[l]-dd[r]);
            q.push(z2);
        }
    }
    printf("%d\n",snum);
    for(i=0;i<snum;i++)
        printf("%d %d\n",ans1[i],ans2[i]);
        snum=0;
    }
    return 0;
}

	 	   	  	 	 				   		   	 		