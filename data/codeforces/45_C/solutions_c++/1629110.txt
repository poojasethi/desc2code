#include<cstdio>
#include<cstring>
#include<queue>
#include<cmath>
#include<vector>
#include<iostream>
using namespace std;
#define mp(x,y) make_pair(x,y)
typedef pair<int,int> per;
const int N = 200005;
struct P
{
	int l,r,v;
}o;
bool operator < (const P &x,const P &y)
{
	return x.v==y.v?x.l>y.l:x.v>y.v;
}
priority_queue<P>q;
bool u[N];
char s[N];
int a[N],L[N],R[N];
vector<per>r;
int main()
{
	int n,i;
	scanf("%d",&n);
	scanf("%s",s);
	for(i=0;i<n;i++)scanf("%d",a+i);
	for(i=0;i<n;i++){L[i]=i-1;R[i]=i+1;}
	for(i=0;i<n-1;i++)
	{
		if(s[i]!=s[i+1])
		{
			o.l=i;
			o.r=i+1;
			o.v=abs(a[i]-a[i+1]);
			q.push(o);
		}
	}
	memset(u,true,sizeof(u));
	while(!q.empty())
	{
		P fr=q.top();
		q.pop();
		while((!u[fr.l]||!u[fr.r])&&!q.empty())
		{
			fr=q.top();
			q.pop();
		}
		if(!u[fr.l]||!u[fr.r])break;
		u[fr.l]=u[fr.r]=false;
		r.push_back(mp(fr.l,fr.r));
		R[L[fr.l]]=R[fr.r];
		L[R[fr.r]]=L[fr.l];
		if(L[fr.l]>=0&&L[fr.l]<n&&R[fr.r]>=0&&R[fr.r]<n&&s[L[fr.l]]!=s[R[fr.r]])
		{
			o.l=L[fr.l];
			o.r=R[fr.r];
			o.v=abs(a[L[fr.l]]-a[R[fr.r]]);
			q.push(o);
		}
	}
	printf("%d\n",r.size());
	for(i=0;i<r.size();i++)printf("%d %d\n",r[i].first+1,r[i].second+1);
	return 0;
}