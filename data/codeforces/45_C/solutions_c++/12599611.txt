#include <bits/stdc++.h>

using namespace std;

#define maxn 200000
#define ID1 second.first
#define ID2 second.second

int n, m, L, R;
int c[maxn], l[maxn], r[maxn];
bool used[maxn];
char sex[maxn];
set<pair<int, pair<int, int> > > q;
vector<pair<int, int> > vp;
pair<int, pair<int, int> > v;

int main() 
{
    scanf("%d\n", &n);
    for(int i = 0; i<n; i++) {
        scanf("%c", &sex[i]);
        l[i] = i-1;
        r[i] = i+1;
        used[i] = false;
    }
    for(int i = 0; i<n; i++) {
        scanf("%d", &c[i]);
    }
    for(int i = 0; i<n-1; i++) {
        if(sex[i]!=sex[i+1]) q.insert(make_pair(abs(c[i]-c[i+1]), make_pair(i, i+1)));
    }
    while(!q.empty()) {
        v = *q.begin();
        q.erase(q.begin());
        if(!used[v.ID1] && !used[v.ID2] && r[v.ID1] == v.ID2) {
            vp.push_back(make_pair(v.ID1, v.ID2));
            used[v.ID1] = true;
            used[v.ID2] = true;
            L = l[v.ID1];
            R = r[v.ID2];
            if(l[v.ID1]>=0) r[l[v.ID1]] = r[v.ID2];
            if(r[v.ID2]<n) l[r[v.ID2]] = l[v.ID1];
            if(L>=0 && R<n && sex[L]!=sex[R]) q.insert(make_pair(abs(c[L]-c[R]), make_pair(L, R)));
        }
    }
    printf("%d\n", vp.size());
    for(int i = 0; i<vp.size(); i++) {
        printf("%d %d\n", vp[i].first+1, vp[i].second+1);
    }
    return 0;
}
	  			      		   		 				 	    	