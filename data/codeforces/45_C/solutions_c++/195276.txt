#include <iostream>
#include <map>
#include <vector>
#include <set>
#include <queue>
#include <cstdlib>
#define tr(cont, it) for(typeof((cont).begin()) it=(cont).begin(); it != (cont).end(); ++it)

using namespace std;

typedef pair<int, int> ii;
typedef pair<int, ii> iii;

vector<char> bg;
vector<int> a;


int main()
{
    int n;
    cin >> n;
    bg.resize(n);
    a.resize(n);
vector<int> next(n, -1);
vector<int> prev(n, -1);
int nG=0, nB=0;
    for(int i=0; i<n; ++i) {
        cin >> bg[i];
        bg[i] == 'B' ? ++nB : ++nG;
    }

    int k = min(nG, nB);
    for(int i=0; i<n; ++i)
        cin >> a[i];

    set<ii> s;

    for(int i=0; i<n-1; ++i) {
        next[i] = i+1;
        prev[i+1] = i;
        if(bg[i] != bg[i+1])
            s.insert(ii(abs(a[i]-a[i+1]), i));
    }

    cout << k << endl;
    for(int i=0; i<k; ++i) {
        ii p = *s.begin();
        int A = p.second;
        int B = next[p.second];
        cout << A+1 << ' ' << B+1 << endl;

        s.erase(s.begin());
        int L = prev[A];
        int R = next[B];

        if(L != -1) {
            s.erase(ii(abs(a[L]-a[A]), L));
            next[L] = R;
        }
        if(R != -1) {
            s.erase(ii(abs(a[R]-a[B]), B));
            prev[R] = L;
        }

        if(L != -1 && R != -1 && bg[L] != bg[R])
            s.insert(ii(abs(a[R]-a[L]), L));
    }

    return 0;
}
