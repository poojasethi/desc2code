#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <unistd.h>
#include  <sys/time.h>
#include <iomanip>
using namespace std;
#define li		 long long int
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())


#define MAX 200005
int main(){
	string str;
	li n,bef[MAX],aft[MAX],skill[MAX];
#define P pair<li,pair<li,li> >
	priority_queue< P , vector< P > , greater< P > > q;
	cin>>n>>str;
	rep(i,n) bef[i]=i-1;
	rep(i,n) aft[i]=i+1;
	rep(i,n) cin>>skill[i];
	rep(i,n-1)if(str[i]!=str[i+1]){
		q.push(make_pair(abs(skill[i]-skill[i+1]),make_pair(i,i+1)));
	}
	vector<pair<li,li> > ans;
	while(sz(q)){
		P p=q.top();
		li a=p.second.first;
		li b=p.second.second;
		q.pop();
		if(aft[a]==-1 || aft[b]==-1) continue;
		ans.pb(make_pair(a,b));
		if(bef[a]!=-1 && aft[b]!=n){
			if(str[bef[a]]!=str[aft[b]]){
				q.push(make_pair(abs(skill[bef[a]]-skill[aft[b]]),make_pair(bef[a],aft[b])));
			}
		}
		if(bef[a]!=-1){
			aft[bef[a]]=aft[b];
		}
		if(aft[b]!=n){
			bef[aft[b]]=bef[a];
		}
		aft[a]=aft[b]=-1;
	}
	cout<<sz(ans)<<endl;
	rep(i,sz(ans)) cout<<ans[i].first+1<<" "<<ans[i].second+1<<endl;
}
