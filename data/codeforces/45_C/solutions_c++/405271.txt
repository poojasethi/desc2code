/*
    优先队列
*/
#include <cstdio>
#include <string.h>
#include <set>
#include <algorithm>
#include <string>
using namespace std;

const int maxn = 200000+5;
int n,G,B;
int a[maxn],L[maxn],R[maxn],k[maxn];
char st[maxn];
set < pair <int,pair<int,int> > > s;
bool mark[maxn];

int abs(int x)
{
    return (x>0)?x:-x;
}

int main()
{
    scanf("%d",&n);
    scanf("%s",st);
    G = B = 0;
    for (int i = 1; i <= n; ++i) {
        if (st[i-1]=='B') {
            a[i] = 1;++B;
        } else {
            a[i] = 0;++G;
        }
        L[i]=i-1;R[i]=i+1;
        scanf("%d",&k[i]);
    }
    printf("%d\n",min(B,G));
    for (int i = 1; i != n; ++i) 
        if (a[i] != a[i+1]) 
            s.insert(make_pair(abs(k[i+1]-k[i]),make_pair(i,i+1)));

    memset(mark,0,sizeof(mark));
    while (!s.empty()) {
        int left = (s.begin()->second.first), right = (s.begin()->second.second);
        s.erase(s.begin());
        if (mark[left] || mark[right]) continue;
        mark[left] = mark[right] = true;
        printf("%d %d\n",left,right);
        int x2 = L[left], y2 = R[right];
        if (x2>0) R[x2] = y2;
        if (y2<=n) L[y2] = x2;
        if (x2>0 && y2<=n && (!mark[x2]) && (!mark[y2]) && a[x2]!=a[y2])
            s.insert(make_pair(abs(k[x2]-k[y2]),make_pair(x2,y2)));
    }

    return 0;
}