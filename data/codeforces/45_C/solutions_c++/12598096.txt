#include<stdio.h>
#include<queue>
using namespace std;
struct pairs
{
    int l;
    int r;
    int dif;
    bool operator <(const pairs &a) const{return dif>a.dif||(dif==a.dif&&l>a.l);}
};
priority_queue<pairs> q;
int num[200005];
int pre[200005],next[200005],flag[200005];
char str[200005];
pairs ans[200005];
int main()
{
    int n;
    scanf("%d%s",&n,str);
    for(int i=1;i<=n;i++)
    {
        scanf("%d",&num[i]);
        pre[i]=i-1;
        next[i]=i+1;
    }
    pairs p;
    for(int i=1;i<n;i++)
    {
        if(str[i-1]!=str[i])
        {
            p.l=i;
            p.r=i+1;
            p.dif=num[i+1]-num[i];
            if(p.dif<0)p.dif=-p.dif;
            q.push(p);
        }
    }
    int tot=0;
    while(!q.empty())
    {
        p=q.top();
        q.pop();
        if(flag[p.l]||flag[p.r])continue;
        ans[tot++]=p;
        flag[p.l]=1;
        flag[p.r]=1;
        int a=pre[p.l],b=next[p.r];
        next[a]=b;
        pre[b]=a;
        if(a>0&&b<=n&&str[a-1]!=str[b-1])
        {
            p.l=a;
            p.r=b;
            p.dif=num[b]-num[a];
            if(p.dif<0)p.dif=-p.dif;
            q.push(p);
        }
    }
    printf("%d\n",tot);
    for(int i=0;i<tot;i++)
    {
        printf("%d %d\n",ans[i].l,ans[i].r);
    }
    return 0;
}

	 	 	 	    		 	 	  	 		 			   	