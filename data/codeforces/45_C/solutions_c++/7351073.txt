#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>
using namespace std;
struct dance
{
    int l,r,v;
    dance(int a, int b, int c){l=a,r=b,v=c;}
    bool operator < (const dance&a) const
    {
        return a.v<v || a.v==v && a.l<l;
    }
};
priority_queue<dance>q;
struct ANS
{
    int l,r;
}ans[100200];
int num=0;
char s[200100],vis[200010];
int pre[200100],next[200100],w[200100];
int main()
{
    int i,j,k,m,n;
    memset(vis,0,sizeof(vis));
    scanf("%d%s",&n,s+1);
    for(i=1;i<=n;i++)
        scanf("%d",w+i), pre[i]=i-1,next[i]=i+1;
    for(i=1;i<n;i++)
        if(s[i]!=s[i+1])
        q.push(dance(i,i+1,abs(w[i]-w[i+1])));
    while(!q.empty())
    {
        dance u=q.top(); q.pop();
        if(vis[u.l]||vis[u.r]) continue;
        vis[u.l]=vis[u.r]=1;
        ans[++num].l=u.l;
        ans[num].r=u.r;
        int L= pre[u.l],R=next[u.r];
        next[L]=R,pre[R]=L;
        if(L>=1 && R<=n && s[L]!=s[R])
            q.push(dance(L,R,abs(w[L]-w[R])));
    }
    printf("%d\n",num);
    for(i=1;i<=num;i++)
    printf("%d %d\n",ans[i].l,ans[i].r);

}

  				   	  	 					 	 				