#include<cstring>
#include<vector>
#include<iostream>
#include<queue>

using namespace std;

#define f first
#define s second
#define mp make_pair
#define pb push_back

vector<pair<int, int> > graph[505];
bool vis[505];
int l, r;

void dfs(int x){
  vis[x] = 1;
  for(int i = 0; i < graph[x].size(); ++i)
    if(graph[x][i].s < l || graph[x][i].s > r)
      if(!vis[graph[x][i].f])
        dfs(graph[x][i].f);
}

int main(){
  int n, m;

  cin >> n >> m;

  for(int i = 1; i <= m; ++i){
    int x, y;
    cin >> x >> y;
    graph[x].pb(mp(y, i));
    graph[y].pb(mp(x, i));
  }

  int k;
  cin >> k;

  for(int i = 1; i <= k; ++i){
    cin >> l >> r;
    memset(vis, false, sizeof(vis));
    int ans = 0;
    for(int j = 1; j <= n; ++j)
      if(!vis[j]){
        dfs(j);
        ++ans;
      }
    cout << ans << "\n";
  }

  return 0;
}
