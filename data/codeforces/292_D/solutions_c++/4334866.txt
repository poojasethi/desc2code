#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<string>
#include<vector>
using namespace std;
vector<pair<int,int> >g[1000];
bool v[1000];
int l,r,k,p;
void dfs(int x)
{
	v[x]=1;
	for(int i=0;i<g[x].size();i++)
	{
		if((g[x][i].second<l||g[x][i].second>r)&&!v[g[x][i].first])
		{
			dfs(g[x][i].first);
		}
	}
}
int main()
{
	int n,m;
	scanf("%d %d",&n,&m);
	for(int i=1;i<=m;i++)
	{
        int x,y;
		scanf("%d %d",&x,&y);
		g[x].push_back(make_pair(y,i));
		g[y].push_back(make_pair(x,i));
	}
	scanf("%d",&k);
	for(;p<k;p++)
	{
		scanf("%d %d",&l,&r);
		int ans=0;
		fill(v,v+n+1,0);
		for(int i=1;i<=n;i++)
		{
			if(!v[i])
			{
				dfs(i);
				ans++;
			}
		}
		printf("%d\n",ans);
	}
	return 0;
}
