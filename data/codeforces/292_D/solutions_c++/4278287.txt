#include <iostream>
#include <cstdio> 
#include <vector>
#include <algorithm>
using namespace std;
const int Maxn=505;
int n,m;
vector< pair< int,int > > neigh[Maxn];
int k,l,r;
bool taken[Maxn];
void Traverse(int v) 
{
	taken[v]=true;
	for(int i=0;i<neigh[v].size();i++)
	{
		pair< int,int > u=neigh[v][i];
		if((u.second<l || u.second>r) && !taken[u.first]) 
		    Traverse(u.first);
	}
}
int main()
{
	scanf("%d%d",&n,&m);
	int a,b,res;
	for(int i=1;i<=m;i++)
	{
		scanf("%d%d",&a,&b);
		neigh[a].push_back(pair< int,int > (b,i));
		neigh[b].push_back(pair< int,int > (a,i));
	}
	scanf("%d",&k);
	for(int i=1;i<=k;i++)
	{
		scanf("%d%d",&l,&r);
		fill(taken+1,taken+n+1,false);
		res=0;
		for(int j=1;j<=n;j++)
		    if(!taken[j])
		    {
		    	res++;
		    	Traverse(j);
		    }
		printf("%d\n",res);
	}
	return 0;
}
