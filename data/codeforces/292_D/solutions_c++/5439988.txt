#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<algorithm>
#include<utility>
#include<vector>
#include<queue>
#include<map>
#include<set>
using namespace std;

struct node
{
	int num;
	int e;
	node(int num,int e):num(num),e(e){}
};

vector<node> g[555];
int n,m;
bool visit[555];
int l,r;
int ans;

void dfs(int i)
{
	visit[i]=true;
	for(int j=0;j<g[i].size();j++)
	{
		if((g[i][j].num<l || g[i][j].num>r) && !visit[g[i][j].e]) dfs(g[i][j].e);
	}
}

int main()
{
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;i++)
	{
		int a,b;
		scanf("%d%d",&a,&b);
		g[a].push_back(node(i,b));
		g[b].push_back(node(i,a));
	}
	
	scanf("%d",&m);
	for(int i=1;i<=m;i++)
	{
		scanf("%d%d",&l,&r);
		ans=0;
		memset(visit,0,sizeof(visit));
		for(int j=1;j<=n;j++)
		if(visit[j]==false) ans++,dfs(j);
		printf("%d\n",ans);
	}
	return 0;
}
