#include <cstdio>
#include <vector>
#include <algorithm>
#include <string.h>
#define mp make_pair
using namespace std;
const int NMax=1000;
int N,M,K,F[NMax],l,r;
vector<pair<int,int> >G[NMax];
void DFS(int a) {
	F[a]=1;
	for(int i=0;i<G[a].size();i++) if((G[a][i].second<l||G[a][i].second>r)&&!F[G[a][i].first])
		DFS(G[a][i].first);
}
int main()
{
	scanf("%d%d",&N,&M);
	for(int i=1;i<=M;i++) {
		int x,y;
		scanf("%d%d",&x,&y);
		G[x].push_back(mp(y,i));
		G[y].push_back(mp(x,i));
	}
	scanf("%d",&K);
	for(int i=1;i<=K;i++) {
		scanf("%d%d",&l,&r);
		memset(F,0,sizeof(F));
		int ret=0;
		for(int j=1;j<=N;j++) if(!F[j]){
			DFS(j);
			ret++;
		}
		printf("%d\n",ret);
	}
	return 0;
}
