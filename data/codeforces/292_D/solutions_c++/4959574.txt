#include <iostream>
using namespace std;
struct lian{
	int x[510];
	int init(){
		int i;
		for(i=0;i<510;i++)
		x[i]=i;
	}
	int find(int a){
		if(x[a]==a)return a;
		 return x[a]=find(x[a]);
	}
	void tong(int a,int b){
		a=find(a);b=find(b);
		if(a!=b){
			x[a]=b;
		}		
	}
}L[11000],R[11000];
int main(int argc, char *argv[])
{
	int n,m;
	while(cin>>n>>m){
		L[0].init();R[m+1].init();
		int i;
		int l[11000],r[11000];
		for(i=1;i<=m;i++)cin>>l[i]>>r[i];
		for(i=1;i<=m;i++)L[i]=L[i-1],L[i].tong(l[i],r[i]);
		for(i=m;i>=1;i--)R[i]=R[i+1],R[i].tong(l[i],r[i]);
		int k;
		cin>>k;
		int p;
		for(p=0;p<k;p++){
			int a,b;
			cin>>a>>b;
			lian c = L[a-1];
			for ( i = 1 ; i <= n ; i ++ ) c.tong(i,R[b+1].x[i]);  
			int ans=0;
			for(i=1;i<=n;i++){
				if(i==c.find(i))
				ans++;
			}
			cout<<ans<<endl;
		}
	}
	return 0;
}