#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 50010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct tree {
	int a,c,L,R,l,r;
} tr[N*100];
struct ww {
	int x,l,r,_;
} a[N*2];
int i,j,k,n,m,t,an,s,root,K;
inline bool cc1(const ww &a,const ww &b) {
	return a.x<b.x;
}
inline void update(int x) {
	int y=tr[x].l,z=tr[x].r;
	if (tr[x].c) tr[x].a=tr[x].R^(tr[x].L-1);
	else tr[x].a=tr[y].a^tr[z].a;
}
void gai(int &q,int x,int y,int l,int r,int k) {
	if (!q) q=++s,tr[q].L=x,tr[q].R=y;
	if (l<=x&&y<=r) {
		tr[q].c+=k;
		update(q);
		return;
	}
	int mid=(x+y)/2;
	if (l<=mid) gai(tr[q].l,x,mid,l,r,k);
	if (mid<r) gai(tr[q].r,mid+1,y,l,r,k);
	update(q);
}
inline void work(int l,int r) {
	int i,j,b[30]={};
	For(i,0,29) b[i]=((r>>i)-(l-1>>i))&1;
	For(i,0,29) {
		int A=b[i],B=tr[root].a>>i&1;
		if (A&&B) {
			an^=1<<min(K,i);
			if (i) an^=1<<min(K,i-1);
		}
	}
}
int main() {
	scanf("%d%d%d",&n,&m,&K);
	for (k=K,K=0;k>1;k>>=1) K++;
	For(i,1,m) {
		int x1,x2,y1,y2;
		scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
		a[++t]=(ww){x1,y1,y2,1};
		a[++t]=(ww){x2+1,y1,y2,-1};
	}
	sort(a+1,a+t+1,cc1);
	For(i,1,t) {
		if (a[i].x>a[i-1].x) work(a[i-1].x,a[i].x-1);
		gai(root,1,n,a[i].l,a[i].r,a[i]._);
	}
	printf("%s\n",an?"Hamed":"Malek");
	//printf("%d\n",an);
	return 0;
}
