#include <iostream>
#include <cstdio>
#include <string>
#include <algorithm>
#include <cstring>
#define N 1000005
#define INF (1e7+9)
using namespace std;
int n,m;
int s[N];
int can[N];
int k[N];
int has[N];
int f[N];
int sa[N];
int main()
{
    cin>>n>>m;
    for(int i=0,ta;i<m;i++){
        cin>>ta;
        s[ta]=1;
    }
    for(int i=1;i<=n;i++)
        s[i]=s[i-1]+s[i];
    for(int i=1;i<=n;i++)
    {
        if(s[i]!=s[i-1])can[i]=1;
        else{
            if(s[i]==0)can[i]=INF;
            else can[i]=can[i-s[i]]+1;
        }
    }
    int cur=0;
    for(int i=1;i<=n;i++)
    {
        cin>>sa[i];
        if(sa[i]==-1)cur-=s[cur];
        else has[i]=++cur;
        f[i]=f[i-1]+(sa[i]==-1);
    }
    for(int i=1;i<=n;i++)
    {
        if(sa[i]==-1)continue;
        if(f[n]-f[i]<can[has[i]])
            cout<<sa[i];
    }
    if(cur==0)cout<<"Poor stack!"<<endl;
    else cout<<endl;
    return 0;
}
