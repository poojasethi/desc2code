#include <cstdio>
#include <algorithm>
using namespace std;

int n, m, ty, a[1234567], ar[1234567], ut, currl, tr[1<<21]; char dd[1234567];
void up(int at, int l, int r, int trg) {
	if (l==r) {
		tr[at]++; return;
	}
	int mid = (l+r)/2;
	if (trg <= mid) up(2*at, l, mid, trg);
	else up(2*at+1, mid+1, r, trg);
	tr[at] = tr[2*at]+tr[2*at+1];
}
void rem(int at, int l, int r, int am) {
	if (l==r) {
		tr[at]--; dd[l] = 1; return;
	}
	int mid = (l+r)/2;
	if (tr[2*at] >= am) rem(2*at, l, mid, am);
	else rem(2*at+1, mid+1, r, am-tr[2*at]);
	tr[at] = tr[2*at]+tr[2*at+1];
}
int main() {
	scanf("%d %d", &n, &m);
	for (int i = 0; i < m; i++) scanf("%d", a+i);
	for (int i = 0; i < n; i++) {
		scanf("%d", &ty);
		if (ty==-1) {
			for (int *j = upper_bound(a, a+m, currl)-1; j >= a; j--) {
				rem(1, 0, (1<<20)-1, *j); currl--;
			}
		}
		else {
			up(1, 0, (1<<20)-1, ut);
			ar[ut++] = ty; currl++;
		}
	}
	for (int i = 0; i < ut; i++) if (!dd[i]) printf("%d", ar[i]);
	if (!currl) printf("Poor stack!");
	putchar('\n');

	return 0;
}