#include <stdio.h>

const int maxn = 1000100;
const int inf = 1000000000;
int larr, dp[maxn], cntthrow[maxn], op[maxn];
int n, cnt, cnt1;
int main(){
	scanf("%d%d", &n, &larr);
	int last = 1;
	for(int i = 0; i < n; i++) dp[i] = inf;
	for(int i = 0; i < larr; i++) {
		int temp = 0;
		scanf("%d", &temp);
		for(int j = last; j < temp; j++) cntthrow[j] = i;
		dp[temp] = 1;
		last = temp;
	}
	for(int i = last; i <= n; i++) cntthrow[i] = larr;
	for(int i = 1; i <= n; i++) if(dp[i] != 1)
		dp[i] = dp[i - cntthrow[i]] + 1;
	for(int i = 0; i < n; i++) {
		scanf("%d", op + i);
		if(op[i] == -1) cnt1++;
	}
	int rcnt1 = 0, rr1 = 0;
	for(int i = 0; i < n; i++) {
		if(op[i] == -1) {
			cnt -= cntthrow[cnt];
			rcnt1++;
		} else {
			cnt++;
			if(dp[cnt] > cnt1 - rcnt1) printf("%d", op[i]), rr1++;
		}
	}
	if(rr1 == 0) puts("Poor stack!");
	else printf("\n");
	return 0;
}



