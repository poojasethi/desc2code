#include <iostream>
#include <cstdio>
using namespace std;

const int MAX = 1e6+50;

int n,m,akt,size;
int z[ MAX ];

int M = 1;
int tab[ 8*MAX ];
int gra[ MAX ];

void Dodaj(int a,int b) // ustawia do wierzcholka a drzewa liczbe b
{
	tab[ a ] = b;
	a /= 2;
	
	while( a != 0 )
	{
		tab[ a ] = tab[ 2*a ]+tab[ 2*a+1 ];
		a /= 2;
	}
}

int Znajdz(int k,int nr,int s) // zwraca numer wierzcholka w drzewie ktory zawiera k-ta wartosc
{
	if( nr >= M )
		return nr;
	if( s+tab[ 2*nr ] >= k )
		Znajdz(k,nr*2,s);
	else Znajdz(k,nr*2+1,s+tab[ 2*nr ]);
}

void Wywal() // wywala klocki o pozycjach a1,a2,...,ak, ak <= a 
{
	int wsk = 0;
	while( z[ wsk+1 ] <= size ) 
	{
		wsk++;
		Dodaj(Znajdz(z[ wsk ]-wsk+1,1,0),0);
	}
	size -= wsk;
}

int main()
{
	int a = 0;
	scanf("%d%d", &n, &m);
	
	while( M < n )
		M *= 2;
	
	for (int i = 1; i <= m; i++)
		scanf("%d", &z[ i ]);
	z[ m+1 ] = 1e6+50;
	
	for (int i = 1; i <= n; i++) {
		scanf("%d", &a);
		if( a == -1 )
			Wywal();
		else {
			akt++;
			Dodaj(M+akt-1,1);
			gra[ akt ] = a;
			size++;
		}
	}
	
	int l = 1, wyn = 0;
	
	for (int i = M; i <= 2*M-1; i++,l++)
		if( tab[ i ] ) {
			printf("%d", gra[ l ]);
			wyn++;
		}
		
	if( !wyn )
		printf("Poor stack!");
	printf("\n");
	
	return 0;
}