#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int n, m, a[1000005], prev[1000005] = {}, slam = 0, cl[1000005], dp[1000005] = {}, curs = 0, freq[1000005] = {}, v[1000005], push = 0;

int check(int pos){
    if(dp[pos]) return dp[pos];
    if(prev[pos]==0) return 999999999;
    if(prev[pos]<0) return 1;
    dp[pos] = check(pos-prev[pos])+1;
    return dp[pos];
}

int main(){

    ios::sync_with_stdio(false);
    cin >> n >> m;
    for(int i = 0; i<m; i++) cin >> a[i], a[i]--;
    a[m] = n;
    for(int i = 0; i<m; i++){
        for(int j = a[i]; j<a[i+1]; j++) prev[j] = i+1;
        prev[a[i]] = -1;
    }
    for(int i = 0; i<n; i++){
        int q;
        cin >> q;
        if(q<0){
            slam++;
            curs-=freq[slam];
        } else {
            cl[push] = slam+check(curs);
            if(check(curs)<99999999) freq[slam+check(curs)]++;
            curs++;
            v[push] = q;
            push++;
        }
    }
    if(!curs) cout << "Poor stack!";
    else for(int i = 0; i<push; i++) if(cl[i]>slam) cout << v[i];

}
