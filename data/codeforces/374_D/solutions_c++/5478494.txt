#include <iostream>
#include <sstream>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <bitset>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <climits>
typedef long long LL;
using namespace std;

const int MAX=1100000;
int a[MAX],cnt[MAX],have[MAX],Q[MAX],ti[MAX];

int main(){
    int N,M,i,x;
    cin >> N >> M;
    for (i=0;i<M;i++){
        cin >> x; cnt[x]=1;
    }
    for (i=1;i<=N;i++) cnt[i]+=cnt[i-1];
    for (i=1;i<=N;i++)
        if (cnt[i]-cnt[i-1]) ti[i]=1;
        else if (cnt[i]) ti[i]=ti[i-cnt[i]]+1;
    int len=0;
    for (i=1;i<=N;i++){
        cin >> Q[i]; have[i]=have[i-1]+(Q[i]<0);
        if (Q[i]<0) len-=cnt[len];
        else ++len,a[i]=len;
    }
    bool flag=0;
    for (i=1;i<=N;i++){
        len=a[i];
        if (~Q[i] && (!ti[len] || ti[len]>have[N]-have[i])){
            cout << Q[i] ; flag=1;
        }
    }
    puts(flag?"":"Poor stack!");
}
