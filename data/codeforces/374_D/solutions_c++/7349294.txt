#include <iostream>
#include <vector>
using namespace std;
vector<int> bit(1000001),a,ans,memo;
class BIT{
	public:
		int sum(int i);
		void add(int i,int x);
};
int sum(int i){
	int s=0;
	while(i>0){
		s+=bit[i];
		i=(i&(i-1));
	}
	return s;
}
void add(int i,int x){
	while(i<=1000000){
		bit[i]+=x;
		i+=(i&-i);
	}
}
int main(){
	int n,m,size=0;
	cin >> n >> m;
	for(int i=0;i<m;i++){
		int ai;
		cin >> ai;
		a.push_back(ai);
	}
	for(int i=1;i<=n;i++){
		int e;
		cin >> e;
		if(e!=-1){
			ans.push_back(e);
			add(ans.size(),1);
		}
		if(e==-1){
			memo.clear();
			for(int j=0;j<m;j++){
				int lb=0,ub=1000000;
				if(sum(ub)<a[j]) break;
				while(lb<ub-1){
					int mid=(lb+ub)/2;
					if(sum(mid)>=a[j]) ub=mid;
					else lb=mid;
				}
				memo.push_back(ub);
			}
			for(int j=0;j<memo.size();j++) add(memo[j],-1);
		}
	}
	if(sum(ans.size()+1)==0) cout << "Poor stack!";
	for(int i=0;i<ans.size();i++){
		if(sum(i+1)-sum(i)==1) cout << ans[i];
	}
	return 0;
}