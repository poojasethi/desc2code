#include <iostream>
#include <conio.h>
#include <algorithm>
#include <cmath>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <iomanip>
#include <cstdio>
#include <cstring>

#define pb push_back
#define mp make_pair
#define f first
#define s second 
#define ll long long 
#define ld long double 
#define PII pair <int , int> 
#define PIS pair <int , string>
#define PDD pair <double , double>
#define PLL pair <long long , long long>

using namespace std ;

const ll maxn=1000*100*4+1 , mod=1000000007 ;

ll n , par[maxn] , d[maxn] , dig[maxn] , ans[maxn] , Ans; 
bool mark[maxn] ;
pair <PII , PII> p[maxn];
vector <int> v[maxn] , vens ;
int find_par (int x){
	if (par[x]==x)	return x;
	return par[x]=find_par (par[x]);
}
void dfs (int x){
	mark[x]=1 ; dig[x]=d[x] ;
	for (int i=0 ; i<v[x].size () ; i++) {
		int next = v[x][i];
		if (!mark[next]){
			dfs (next);
			dig[x]+=dig[next];
		}
	}
	v[x].clear ();
}
void uni (int x , int y){
	d[find_par(x)]+=d[find_par(y)] ; d[find_par(y)]=0 ;
	par[find_par(y)]=find_par(x);
}
int main(){
	cin >> n ;
	for (int i=0 ; i<n ; i++)	{par[i]=i ; d[i]=1 ;}
	for (int i=0 ; i<n-1 ; i++){
		cin >> p[i].s.f >> p[i].s.s >> p[i].f.f ;
		p[i].s.f-- ; p[i].s.s-- ; p[i].f.s=i ;
	}
	sort (p , p+n-1);
	int l=0 ;
	while (l<n-1){
		int r=l ;
		while (r<n-1 && p[r].f.f==p[r+1].f.f)	r++ ;
		vector <PII> E;
		for (int i=l ; i<=r ; i++){
			int u=find_par(p[i].s.f); int f=find_par(p[i].s.s);
			v[u].pb (f); v[f].pb (u);
			E.pb (mp(u , f));
			mark[u]=0 ; mark[f]=0 ;
		}
		for (int i=0 ; i<E.size() ; i++){
			int u=E[i].f ;
			if (!mark[u])	dfs (u);
		}
		for (int i=0 ; i<E.size() ; i++)
			uni (E[i].f , E[i].s);
		for (int i=l ; i<=r ; i++){
			int u=E[i-l].f ; int f=E[i-l].s;
			int root = find_par(u);
			int component_size = min(dig[u], dig[f]);
			ans[i]=2*component_size*(d[root]-component_size);
			//uni (u , f);
			//cout << ans[i] << " " << p[i].f.f << endl ;
		}
		l=r+1 ;
	}
	for (int i=0 ; i<n-1 ; i++){
		if (Ans>ans[i])	continue ;
		else if (Ans==ans[i])	vens.pb(p[i].f.s);
		else{
			Ans=ans[i];
			vens.clear ();
			vens.pb (p[i].f.s);
		}
	}
	sort (vens.begin() , vens.end());
	cout << Ans << " " << vens.size() << endl ;
	for (int i=0 ; i<vens.size() ; i++)	
		cout << vens[i]+1 << " " ;
	cout << endl ;
	return 0;
}
