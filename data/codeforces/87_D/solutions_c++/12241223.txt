#include <set>
#include <map>
#include <cmath>
#include <ctime>
#include <cctype>
#include <cstdio>
#include <vector>
#include <cassert>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#define fi first
#define se second
#define mk make_pair
#define pb push_back
#define For(i,a,b)  for(int i=(int)a;i<=(int)b;i++)
#define Forn(i,a,b) for(int i=(int)a;i>=(int)b;i--)
#define nc() getchar()
#define pend(x) ((x)=='\n'||(x)=='\r'||(x)=='\t'||(x)==' ')
using namespace std;
typedef long long ll;
typedef long double db;

inline int IN(){
	char ch=nc(); int f=1,x=0;
	while(pend(ch)) ch=nc();
	if(ch=='-') f=-1,ch=nc();
	while(!pend(ch)) x=x*10+ch-'0',ch=nc();
	return x*=f;
}

int n;
struct edge{
	int u,v,w,pre,Id;
	inline bool operator <(const edge &a)const{
		return w<a.w;
	}
}E[100005],e[200005];
int dex,adj[100005],fa[100005],sz[100005],tot;
ll f[100005];

int get(int x){
	if(fa[x]==x) return x;
	return fa[x]=get(fa[x]);
}

int dfs(int x,int fat){
	int Sz=sz[x];
	for(int i=adj[x];i;i=e[i].pre){
		int v=e[i].v,t;
		if(v==fat)continue;
		Sz+=(t=dfs(v,x));
		f[e[i].Id]=2ll*t*(tot-t);
	}
	return Sz;
}

int V[100005],ver,G[200005];
void DFS(int x,int f){
	tot+=sz[x];
	V[x]=ver;
	for(int i=adj[x];i;i=e[i].pre){
		int v=e[i].v;
		if(v==f)continue;
		DFS(v,x);
	}
}

int main(){
	n=IN();
	For(i,1,n-1){
		int x=IN(),y=IN(),w=IN();
		E[i]=(edge){x,y,w,0,i};
	}
	For(i,1,n) fa[i]=i,sz[i]=1;
	sort(E+1,E+n);
	for(int i=1;i<n;i++){
		int j=i;
		while(E[j].w==E[i].w&&j<n)++j;--j;tot=*G=0;
		ver++;
		For(k,i,j){
			int u=get(E[k].u),v=get(E[k].v);
			e[++dex]=(edge){u,v,E[k].w,adj[u],k};adj[u]=dex;
			e[++dex]=(edge){v,u,E[k].w,adj[v],k};adj[v]=dex;
			G[++*G]=u;G[++*G]=v;
		}
		For(t,1,*G){
			if(V[G[t]]==ver)continue;
			tot=0;
			DFS(G[t],0);
			dfs(G[t],0);
		}
		For(x,1,dex) adj[e[x].u]=0;dex=0;
		For(k,i,j){
			int u=get(E[k].u),v=get(E[k].v);
			fa[u]=v;
			sz[v]+=sz[u];
		}
		i=j;
	}
	vector<int>re;
	ll ans=0;
	For(i,1,n-1){
		if(f[i]>ans){
			ans=f[i];
			re.clear();
			re.pb(E[i].Id);
		}else
		if(f[i]==ans){
			re.pb(E[i].Id);
		}
	}
	sort(re.begin(),re.end());
	printf("%I64d %d\n",ans,re.size());
	for(int i=0;i<(int)re.size();i++) printf("%d ",re[i]);
	return 0;
}

 