#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 200010
#define long long
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;

struct ww {
	int x,y,z,A,id;
} c[N];

int i,j,k,n,m,t,x,y,z,re;
int a[N],next[N],head[N],dep[N],f[N],s[N],b[N],g[N];
long long an;

inline void add(int x,int y,int z) {
	a[++t]=y;
	next[t]=head[x];
	head[x]=t;
	a[++t]=x;
	next[t]=head[y];
	head[y]=t;
}

void dfs(int x,int y) {
	int v;
	for (v=head[x];v;v=next[v]) if (a[v]!=y) {
		dep[a[v]]=dep[x]+1;
		dfs(a[v],x);
	}
}

inline bool cc1(const ww &a,const ww &b) {
	return a.z<b.z||a.z==b.z&&a.A>b.A;
}

int get(int x) {
	return f[x]==x?x:f[x]=get(f[x]);
}

int main() {
	scanf("%d",&n);
	For(i,1,n-1) {
		scanf("%d%d%d",&x,&y,&z);
		add(x,y,z);
		c[i]=(ww){x,y,z};
		c[i].id=i;
	}
	dfs(1,0);
	For(i,1,n-1) {
		c[i].A=min(dep[c[i].x],dep[c[i].y]);
	}

	sort(c+1,c+n,cc1);
	For(i,1,n) {
		f[i]=i;
		s[i]=1;
	}

	an=0;
	for (i=1;i<n;i=j) {
		for (j=i;j<n&&c[j].z==c[i].z;j++) {
			int A=c[j].x,B=c[j].y;
			if (dep[A]>dep[B]) swap(A,B);
			b[j]=s[B];
			f[B]=get(A);
			s[get(A)]+=s[B];
		}
		For(k,i,j-1) {
			int A=c[k].x;
			int sum=s[get(A)];
			long long ans=2ll*b[k]*(sum-b[k]);
			if (ans>an) {
				an=ans;
				g[re=1]=c[k].id; 
			}
			else if (ans==an) 
				g[++re]=c[k].id;
		}
	}
	printf("%I64d %d\n",an,re);
	sort(g+1,g+re+1);
	For(i,1,re) printf("%d ",g[i]);
	printf("\n");
	return 0;
}