#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <cstring>
#include <algorithm>
#define oo 200005
using namespace std;
typedef long long LL;

struct tp{int u,v,x,t;}a[oo];
int n,cnt,u,v,l,r,num;
LL best;
LL ans[oo];
int Q[oo],size[oo],c[oo],Edge[oo],Next[oo],Head[oo],fa[oo],visit[oo],xx[oo],list[oo],f[oo];

bool cmp(const tp a,const tp b)
{
	return a.x<b.x;
}

void bfs(int st)
{
	Q[l=r=1]=st;
	visit[st]=1;
	for (;l<=r;++l){
		u=Q[l];
		size[u]=c[u];
		for (int k=Head[u];k;k=Next[k]){
			v=Edge[k];
			if (!visit[v]) Q[++r]=v,visit[v]=xx[k],fa[v]=u;
		}
	}

	for (int i=r;i>=1;--i){
		u=Q[i];
		size[fa[u]]+=size[u];
	}
	for (int i=2;i<=r;++i){
		u=Q[i];
		ans[visit[u]]+=(LL)size[u]*(size[st]-size[u])*2;
	}
}

int getfa(int x)
{
	if (x==f[x]) return x;
	f[x]=getfa(f[x]);
	return f[x];
}

int main()
{
//	freopen("input.txt","r",stdin);
	
	scanf("%d",&n);
	for (int i=1;i<n;++i){
		scanf("%d%d%d",&a[i].u,&a[i].v,&a[i].x);
		a[i].t=i;
	}
	
	sort(a+1,a+n,cmp);

	for (int i=1;i<=n;++i){
		f[i]=i;
		c[i]=1;
	}
	for (int i=1,j;i<n;i=j+1){
		j=i;
		l=0;
		while (j+1<n && a[j+1].x==a[i].x) ++j;
		for (int k=i;k<=j;++k){
			list[++l]=getfa(a[k].u);
			list[++l]=getfa(a[k].v);
		}
		num=0;
		for (int k=1;k<=l;++k){
			Head[list[k]]=0;
			visit[list[k]]=0;
			size[list[k]]=0;
			fa[list[k]]=0;
		}
			
		for (int k=i;k<=j;++k){
			u=getfa(a[k].u);
			v=getfa(a[k].v);
			Edge[++num]=v,Next[num]=Head[u],Head[u]=num,xx[num]=a[k].t;
			Edge[++num]=u,Next[num]=Head[v],Head[v]=num,xx[num]=a[k].t;
		}
		for (int k=1;k<=l;++k)
		if (!visit[list[k]]) bfs(list[k]);

		for (int k=i;k<=j;++k){
			u=getfa(a[k].u);
			v=getfa(a[k].v);
			f[u]=v,c[v]+=c[u];
		}
	}

	cnt=0,best=0;
	for (int i=1;i<n;++i)
	if (ans[i]>best) best=ans[i],cnt=1;
	else if (ans[i]==best) ++cnt;

	printf("%I64d %d\n",best,cnt);
	for (int i=1;i<n;++i)
	if (ans[i]==best){
		printf("%d",i);
		--cnt;
		if (cnt) printf(" ");
		else printf("\n");
	}
	return 0;
}