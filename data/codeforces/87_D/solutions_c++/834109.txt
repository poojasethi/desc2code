#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#define Mset(x,y) memset(x,y,sizeof(x))
#define MAX 200010
using namespace std;
typedef long long LL;

struct edge
{
    int x,y,w,t;
    LL cnt;
}g[MAX];

int head[MAX],pre[MAX],dest[MAX],n,tot=0;
int que[MAX],ED,fa[MAX],fb[MAX];
int f[MAX],sz[MAX],sm[MAX],tf[MAX];
LL MUL=0LL;
bool vis[MAX];

inline int Min(int a,int b)
{return a<b?a:b;}

int find(int x)
{
    if (x==f[x]) return x;
    f[x]=find(f[x]);
    return f[x];
}

void dfs(int x,int y)
{
    vis[x]=1,tf[x]=y; 
    for (int k=head[x];k;k=pre[k])
        if (!vis[dest[k]])
        {
            dfs(dest[k],y);
            sm[x]+=sm[dest[k]];
        }
    sm[x]+=sz[x];
}

void add(int x,int y,bool f)
{
    dest[++tot]=y,pre[tot]=head[x],head[x]=tot;
    if (f) add(y,x,0);
}

inline bool cmp(const edge &a,const edge &b)
{return a.w<b.w;}

int main()
{
    int x,y,a,b;
    tot=ED=0; Mset(head,0);
    scanf("%d",&n);
    for (int i=1;i<=n;++i) f[i]=i,sz[i]=1;
    for (int i=1;i<=n-1;++i)
    {
        scanf("%d%d%d",&g[i].x,&g[i].y,&g[i].w);
        g[i].t=i;
    }
    sort(g+1,g+n,cmp);
    for (int i=1;i<=n-1;++i)
    {
        tot=0,x=i;
        for (;i+1<=n-1 && g[i+1].w==g[i].w;) ++i; y=i;
        for (int j=x;j<=y;j++)
        {
            fa[j]=a=find(g[j].x);
            fb[j]=b=find(g[j].y);
            vis[a]=vis[b]=0;
            head[a]=head[b]=0;
            sm[a]=sm[b]=0;
            tf[a]=tf[b]=0;
        }
        for (int j=x;j<=y;j++) add(fa[j],fb[j],1);
        for (int j=x;j<=y;j++)
            if (!vis[fa[j]])
                dfs(fa[j],fa[j]);
        for (int j=x;j<=y;j++)
        {
            LL w=LL(Min(sm[fa[j]],sm[fb[j]]));
            g[j].cnt=w*((LL)(sm[tf[fa[j]]])-w);
            if (g[j].cnt>MUL) MUL=g[j].cnt;
            a=find(g[j].x); b=find(g[j].y);
            sz[a]+=sz[b],f[b]=a;
        }
    }
    for (int i=1;i<=n-1;i++)
        if (g[i].cnt==MUL) que[++ED]=g[i].t;
    sort(que+1,que+ED+1);
    printf("%I64d %d\n",MUL*2LL,ED);
    for (int i=1;i<=ED;i++)
        printf("%d%c",que[i],i==ED?'\n':' ');
    return 0;
}
