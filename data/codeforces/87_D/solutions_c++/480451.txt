#include<stdio.h>
#include<string>
#include<stdlib.h>
#include<iostream>
#include<string.h>
#include<vector>
#include<algorithm>
using namespace std;
#define FOR(i,s,e) for(int i=(s);i<(int)(e);i++)
#define FOE(i,s,e) for(int i=(s);i<=(int)(e);i++)
#define CLR(s) memset(s,0,sizeof(s))
#define PB push_back
#define LL long long 
#define MX 400000

int p[MX];
LL sz[MX];
int find(int x){ return (p[x]==x)?x:(p[x]=find(p[x])); }

int st[MX],nt[MX],to[MX],d[MX], E;
LL ans[MX];
void ae(int x,int y,int dd){
  d[E]=dd; nt[E]=st[x]; to[E]=y; st[x]=E++;
  d[E]=dd; nt[E]=st[y]; to[E]=x; st[y]=E++;
}

int n,m;
int wa[MX];
vector<int> ve[MX], g[MX];
bool vis[MX];

LL tsz[MX], osz[MX], op[MX];
LL dfs(int x){
  vis[x] = true;
  tsz[x] = osz[x];
  FOR(i,0,g[x].size()){
    int u = op[to[g[x][i]]];
    if (vis[u]) continue;
    LL tmp = dfs(u);
    ans[g[x][i]] = (tmp * (sz[find(x)]-tmp));
    tsz[x] += tmp;
  }
  return tsz[x];
}

int main(){
  E=0; memset(st,-1,sizeof(st));

  m = 0;
  scanf("%d",&n);
  FOR(i,1,n){
    int x,y,dd; scanf("%d%d%d",&x,&y,&dd); x--; y--;
    ae(x,y,dd);
    wa[m++] = dd;
  }
  sort(wa,wa+m);
  m = unique(wa,wa+m)-wa;

  FOR(i,0,E){
    ve[lower_bound(wa,wa+m,d[i])-wa].PB(i);
  }

  FOR(i,0,n) p[i]=i, sz[i]=1;

  CLR(ans);
  CLR(vis);

  FOR(we,0,m){
    vector<int> vid;
    FOR(i,0,ve[we].size()){
      int e = ve[we][i];
      vid.PB(find(to[e]));
      osz[find(to[e])] = sz[find(to[e])];
      op[to[e]] = find(to[e]);
    }
    FOR(i,0,vid.size()) g[vid[i]].clear();
    FOR(i,0,ve[we].size()){
      int e = ve[we][i];
      g[find(to[e^1])].PB(e);
    }
    FOR(i,0,ve[we].size()){
      int e = ve[we][i];
      int x = to[e], y = to[e^1];
      if (find(x)==find(y)) continue;
      sz[find(y)] += sz[find(x)];
      p[find(x)] = find(y);
    }
    FOR(i,0,vid.size()) vis[vid[i]]=0;
    FOR(i,0,vid.size()) if (!vis[vid[i]]){ dfs(vid[i]); }
  }
  LL mx=0;
  vector<int> vo;
  FOR(i,0,n-1){
    LL cnt = (ans[i*2] + ans[2*i+1]) * 2;
//    printf(" >> cnt = %lld\n",cnt);
    if (cnt > mx){ vo.clear(); vo.PB(i); mx=cnt; } 
    else if (cnt==mx){
      vo.PB(i);
    }
  }
  cout << mx;
  sort(vo.begin(),vo.end());
  printf(" %d\n",vo.size());
  printf("%d",vo[0]+1); FOR(i,1,vo.size()) printf(" %d",vo[i]+1); puts("");
  return 0;
}
