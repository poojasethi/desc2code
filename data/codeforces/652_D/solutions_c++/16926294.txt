#include <bits/stdc++.h>
using namespace std;
#define M 400200

int n;
struct pnt{
	int i, x, y;
	pnt(int i = 0, int x = 0, int y = 0) : i(i), x(x), y(y){};
}p[M];
bool operator<(pnt a, pnt b) {
	return a.y < b.y;
}
int ans[M];

int m;
int x[M];

int t[M];
int add(int k) {
	while (k < M) {
		t[k]++;
		k += k & -k;
	}
}
int sum(int k, int s = 0) {
	while (k) {
		s += t[k];
		k -= k & -k;
	}
	return s;
}

int main() {
	//freopen("D.in", "r", stdin);
	scanf("%d", &n);
	for (int i = 1; i <= n; i++) {
		p[i].i = i;
		scanf("%d %d", &p[i].x, &p[i].y);
		x[m++] = p[i].x;
	}
	sort(x, x + m);
	m = unique(x, x + m) - x;

	sort(p + 1, p + n + 1);
	for (int i = 1; i <= n; i++) {
 		int k = lower_bound(x, x + m, p[i].x) - x + 1;
		ans[p[i].i] = i - 1 - sum(k - 1);
		//printf("p[%d] = %d; k = %d\n", i, p[i].i, k);
		add(k);
	}
	for (int i = 1; i <= n; i++) {
		printf("%d\n", ans[i]);
	}
    return 0;
}
