#include <stdio.h>
#include <vector>
#include <algorithm>
#include <map>

using namespace std;
#define N 400001

int bit[N];

void update(int el) {
	while (el < N) {
		bit[el]++;
		el += el&-el;
	}
}

int query(int el) {
	int ans = 0;
	while (el) {
		ans += bit[el];
		el -= el&-el;
	}
	return ans;
}

int ans[200000];
vector<int> vm;
pair<int, int> v[200000], vv[200000];
map<int, int> m;

int main (void) {
	int n;
	scanf ("%d", &n);
	for (int i = 0; i < n; i++) {
		int a, b;
		scanf ("%d%d", &a, &b);
		v[i] = make_pair(a, b);
		vm.push_back(a);
		vm.push_back(b);
		vv[i] = make_pair(b, i);
	}
	sort(vm.begin(), vm.end());
	for (int i = 0; i < vm.size(); i++) {
		m[vm[i]] = i+1;
	}
	for (int i = 0; i < n; i++) {
		vv[i].first = m[vv[i].first];
		v[i].first = m[v[i].first];
		v[i].second = m[v[i].second];
	}
	sort(vv, vv + n);
	for (int i = 0; i < n; i++) {
		ans[vv[i].second] = query(vv[i].first) - query(v[vv[i].second].first-1);
		update(v[vv[i].second].first);
	}
	for (int i = 0; i < n; i++)	printf ("%d\n", ans[i]);
}
