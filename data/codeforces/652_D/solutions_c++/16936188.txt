#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;

struct link
{
    int l,r;
    int id;
}a[200005];

int n,c[200005],ans[200005];

int lowbit(int x)
{
    return x&(-x);
}

bool cmpl(link a,link b)
{
    return a.l<b.l;
}

bool cmpr(link a,link b)
{
    return a.r<b.r;
}

void modify(int t)
{
    while(t<=n)
    {
        c[t]++;
        t+=lowbit(t);
    }
}

int sum(int i)
{
    int ans=0;
    while(i)
    {
        ans+=c[i];
        i-=lowbit(i);
    }
    return ans;
}

int main()
{
    memset(c,0,sizeof(c));
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
    {
        scanf("%d%d",&a[i].l,&a[i].r);
        a[i].id=i;
    }
    sort(a+1,a+n+1,cmpr);
    for(int i=1;i<=n;i++)
        a[i].r=i;
    sort(a+1,a+n+1,cmpl);
    for(int i=n;i>=1;i--)
    {
        ans[a[i].id]=sum(a[i].r);
        modify(a[i].r);
    }
    for(int i=1;i<=n;i++)
        printf("%d\n",ans[i]);
    return 0;
}
