#include<bits/stdc++.h>
using namespace std;
const int maxn = 3*1000010;
int sum[maxn];
struct node
{
    int x,y,id;
};
node a[maxn];
int ans[maxn];
int n;
int low_bit(int x)
{
    return x &(-x);
}
bool cmp(node x1,node y1)
{
    return x1.y<y1.y;
}
bool cmp1(node x1,node y1)
{
    if(x1.x!=y1.x)
        return x1.x>y1.x;
    return  x1.y<y1.y;
}
void  update(int xx)
{
    while(xx<=n)
    {
        sum[xx]++;
        xx+=low_bit(xx);
    }

}
int query(int x)
{
    int ans = 0;
    while(x>0)
    {
        ans+=sum[x];
        x-=low_bit(x);
    }
    return ans ;
}
int main()
{
    scanf("%d",&n);
    for(int i = 1; i<=n; i++)
    {
        scanf("%d%d",&a[i].x,&a[i].y);
        a[i].id = i;
    }
    sort(a+1,a+1+n,cmp);
    for(int i =1; i<=n; i++)
        a[i].y  =  i;
    sort(a+1,a+1+n,cmp1);
    for(int i = 1; i<=n; i++)
    {
        ans[a[i].id] = query(a[i].y);
        update(a[i].y);
    }
   for(int i = 1;i<=n;i++)
   {
        printf("%d\n",ans[i]);
   }//putchar('\n');
}
