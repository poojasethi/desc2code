#include <vector>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;
typedef long long ull;
const int maxn=2e5+10;
vector<pair<int,int> > vec;
int en[maxn],bc[maxn],ans[maxn],num[maxn];
int lowbit(int x)
{
    return x&(-x);
}
void update(int pos)
{
    ++pos;
    while(pos<maxn)
    {
        ++num[pos];
        pos+=lowbit(pos);
    }
}
int query(int pos)
{
    int ans=0;
    ++pos;
    while(pos)
    {
        ans+=num[pos];
        pos-=lowbit(pos);
    }
    return ans;
}
int main()
{
    int n;
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
        int a,b;
        scanf("%d%d",&a,&b);
        vec.push_back(make_pair(a,i));
        bc[i]=en[i]=b;
    }
    sort(vec.begin(),vec.end());
    sort(bc,bc+n);
    for(int i=n-1;i>=0;i--)
    {
        int p=vec[i].second,v=en[p];
        int pos=lower_bound(bc,bc+n,v)-bc;
        ans[p]=query(pos);
        update(pos);
    }
    for(int i=0;i<n;i++)
        printf("%d\n",ans[i]);
    return 0;
}