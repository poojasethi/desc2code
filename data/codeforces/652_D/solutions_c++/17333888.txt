#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int N=2e5+5;
struct point
{
    int x,y,id;
}p[N];
bool cmp1(const point &a,const point &b){return a.y<b.y;}
bool cmp(const point &a,const point &b)
{
    if(a.x==b.x)return a.y<b.y;
    return a.x>b.x;
}
int c[N],ans[N];
int lowbit(int x){return x&(-x);}
int getsum(int x)
{
    int sum =0;
    for(int i=x;i>0;i-=lowbit(i))sum+=c[i];
    return sum;
}
void add(int x)
{
    for(int i=x;i<N;i+=lowbit(i))c[i]++;
}
int main()
{
    int n,x,y;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%d%d",&p[i].x,&p[i].y);
        p[i].id=i;
    }
    sort(p,p+n,cmp1);
    for(int i=0;i<n;i++)p[i].y=i+1;
    sort(p,p+n,cmp);
    for(int i=0;i<n;i++){
        ans[p[i].id]=getsum(p[i].y);
        add(p[i].y);
    }
    for(int i=0;i<n;i++)
        printf("%d\n",ans[i]);
        //printf("%d\n",ans[n-1]);
    return 0;
}