#include<iostream>
#include<algorithm>
#include<cstdio>
#include<map>
#include<cstring>
using namespace std;
typedef long long ll;
const int inf=0x3f3f3f3f;
const int maxn=211111;
int cnt[maxn*2];
map<int,int>mg;
map<int,int>::iterator ite;
struct node{
	int l,r,id;
};
node a[maxn];
bool comp(node A,node B)
{
	return A.l>B.l;
}
int lowbit(int x)
{
	return x&-x;
}
void add(int x,int d){
	while(x<maxn*2){
		cnt[x]+=d;
		x+=lowbit(x);
	}
}
int sum(int x)
{
	int ans=0;
	while(x>0){
		ans+=cnt[x];
		x-=lowbit(x);
	}
	return ans;
}
int l[maxn],r[maxn],e[maxn];
int main()
{
    int n;scanf("%d",&n);
	for(int i=1;i<=n;i++){
		scanf("%d%d",&l[i],&r[i]);
		mg[l[i]]=0;
		mg[r[i]]=0;
	}
	int num=0;
	for(ite=mg.begin();ite!=mg.end();ite++){
		ite->second=++num;
	}
	for(int i=1;i<=n;i++){
		a[i].l=mg[l[i]];
		a[i].r=mg[r[i]];
		a[i].id=i;
	}
	sort(a+1,a+n+1,comp);
	for(int i=1;i<=n;i++)
	{
		e[a[i].id]=sum(a[i].r-1);
		add(a[i].r,1);
	}
	for(int i=1;i<=n;i++){
		printf("%d\n",e[i]);
	}
    return 0;
}