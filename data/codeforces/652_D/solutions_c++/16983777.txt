#include <cstdio>
#include <cstring>
#include <algorithm>
#include <map>
using namespace std;

const int maxn = 200000 + 10;

struct Segment
{
	int l, r, id;
	bool operator < (const Segment& t) const {
		return l < t.l || (l == t.l && r < t.r);
	}
};

int n;
Segment a[maxn];

int C[maxn];
int lowbit(int x) { return x & (-x); }

void add(int x, int v) {
	while(x <= n) {
		C[x] += v;
		x += lowbit(x);
	}
}

int query(int x) {
	int ans = 0;
	while(x) {
		ans += C[x];
		x -= lowbit(x);
	}
	return ans;
}

int rs[maxn], ans[maxn];

int main()
{
	scanf("%d", &n);
	for(int i = 1; i <= n; i++) {
		scanf("%d%d", &a[i].l, &a[i].r);
		rs[i - 1] = a[i].r;
		a[i].id = i;
	}

	sort(rs, rs + n);
	sort(a + 1, a + 1 + n);

	for(int i = n; i >= 1; i--) {
		int pos = lower_bound(rs, rs + n, a[i].r) - rs + 1;
		ans[a[i].id] = query(pos);
		add(pos, 1);
	}

	for(int i = 1; i <= n; i++)
		printf("%d\n", ans[i]);

	return 0;
}