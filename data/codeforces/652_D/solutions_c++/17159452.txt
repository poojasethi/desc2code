#include <bits/stdc++.h>
using namespace std;
const int MAXN = 2e5+10;

struct P{
	int l, r, id;
	P(int l, int r, int id):l(l), r(r),id(id){}
	P(){}
	bool operator <(const P &rhs)const {
		return l < rhs.l;
	}
}p[MAXN];

int n, tot, c[MAXN * 2], answer[MAXN];
int d[MAXN];

void add(int x) {
	for (int i = x; i <= tot; i += i & -i)
		c[i]++;
}

int sum(int x){
    int ret = 0;
    while(x){
        ret += c[x];
        x -= x&-x;
    }
    return ret;
}

int main() {
	scanf("%d", &n);
    for (int i = 1; i <= n; i++){
        int x, y;
		scanf("%d%d", &x, &y);
		d[tot++] = x, d[tot++] = y;
        p[i] = P(x, y, i);
	}

	sort(d, d+tot);
	tot = unique(d, d+tot)-d;
	sort(p + 1, p + n + 1);
    for(int i = 1; i <= n; i++){
        p[i].l = lower_bound(d, d+tot, p[i].l) - d + 1;
		p[i].r = lower_bound(d, d+tot, p[i].r) - d + 1;
    }

	for (int i = n; i >= 1; i--) {
		answer[p[i].id] = sum(p[i].r) - sum(p[i].l - 1);
		add(p[i].r);
	}
	for (int i = 1; i <= n; i++)
		printf("%d\n", answer[i]);
	return 0;
}
