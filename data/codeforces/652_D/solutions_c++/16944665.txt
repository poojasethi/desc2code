#include <bits/stdc++.h>

using namespace std;
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

typedef tree < int, null_type, greater<int>, rb_tree_tag,
			   tree_order_statistics_node_update>	ordered_set;

int main() {
	int n; scanf("%d", &n);
	pair< pair<int, int>, int> arr[n];
	int ans[n];
	ordered_set myset;
	for(int i = 0; i < n; i++) {
		scanf("%d %d", &arr[i].first.second, &arr[i].first.first);
		arr[i].second = i;
	}
	sort(arr, arr + n);
	for(int i = 0; i < n; i++) {
		if(myset.empty()) ans[arr[i].second] = 0;
		else
			ans[arr[i].second] = myset.order_of_key(arr[i].first.second);
		myset.insert(arr[i].first.second);
	}
	for(int i = 0; i < n; i++)
		printf("%d\n", ans[i]);
	return 0;
}
