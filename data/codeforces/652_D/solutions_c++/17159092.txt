#include <bits/stdc++.h>
using namespace std;
const int MAXN = 2e5+10;

struct Segment{
	int l, r, id;
	bool operator <(const Segment &rhs)const {
		return l < rhs.l;
	}
}s[MAXN];

int n, tot, bit[MAXN * 2], answer[MAXN];
int d[MAXN];

void add(int x) {
	for (int i = x; i <= tot; i += i & -i) {
		bit[i]++;
	}
}

int sum(int x) {
	int ret = 0;
	for (int i = x; i; i -= i & -i) {
		ret += bit[i];
	}
	return ret;
}

int main() {
	// freopen("input.txt", "r", stdin);
	scanf("%d", &n);
	for (int i = 1; i <= n; i++) {
		scanf("%d%d", &s[i].l, &s[i].r);
		d[tot++] = (s[i].l);
		d[tot++] = (s[i].r);
		s[i].id = i;
	}
	sort(d, d+tot);
	tot = unique(d, d+tot)-d;
	sort(s + 1, s + n + 1);
    for(int i = 1; i <= n; i++){
        s[i].l = lower_bound(d, d+tot, s[i].l) - d + 1;
		s[i].r = lower_bound(d, d+tot, s[i].r) - d + 1;
    }

	for (int i = n; i >= 1; i--) {
		answer[s[i].id] = sum(s[i].r) - sum(s[i].l - 1);
		add(s[i].r);
	}
	for (int i = 1; i <= n; i++)
		printf("%d\n", answer[i]);
	return 0;
}
