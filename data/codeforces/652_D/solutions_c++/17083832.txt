#include <iostream>
#include<cstdio>
#include<vector>
#include<set>
#include<algorithm>
#include<map>
using namespace std;
const int Max=1000000007;
int n;
struct node
{
    int l,r,idx;
    node(){}
    node(int l,int r,int idx):l(l),r(r),idx(idx){}
    bool operator<(const node& rhs) const
    {
        return l<rhs.l;
    }
};
vector<node> G;

int res[200010];

map<int,int> mp;
void upd(long long x)
{
    for(;x<Max+Max;x+=(x&-x)){
        mp[x]++;
    }
}
int query(long long x)
{
    int res=0;
    for(;x>0;x-=(x&-x)){
        res+=mp[x];
    }
    return res;
}

int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        int l,r;
        scanf("%d%d",&l,&r);
        G.push_back(node(l,r,i));
    }
    sort(G.begin(),G.end());
    for(int i=n-1;i>=-0;i--){
        upd(G[i].r+Max);
        res[G[i].idx]=query(G[i].r+Max-1);
    }
    for(int i=0;i<n;i++){
        printf("%d\n",res[i]);
    }
    return 0;
}
