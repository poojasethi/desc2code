
#include "iostream"
#include "algorithm"
#include "string.h"
#include "stdio.h"
using namespace std;
const int N=200005;
int n,sum[N],ans[N];
struct node
{
    int l,r,id;
};
node qu[N];
bool cmp1(node x,node y)
{
    if(x.r==y.r)return x.l<y.l;
    return x.r<y.r;
}
bool cmp2(node x,node y)
{
    if(x.l==y.l)return x.r<y.r;
    return x.l>y.l;
}
int lowbit(int x)
{
    return x&(-x);
}
void update(int x)
{
    while(x<=n)
    {
        sum[x]++;
        x+=lowbit(x);
    }
}
int query(int x)
{
    int s=0;
    while(x>0)
    {
        s+=sum[x];
        x-=lowbit(x);
    }
    return s;
}
int main()
{
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
    {
        scanf("%d%d",&qu[i].l,&qu[i].r);
        qu[i].id=i;
    }
    sort(qu+1,qu+n+1,cmp1);
    for(int i=1;i<=n;i++)
    {
        qu[i].r=i;
    }
    sort(qu+1,qu+n+1,cmp2);
    for(int i=1;i<=n;i++)
    {
        ans[qu[i].id]=query(qu[i].r);
        update(qu[i].r);
    }
    for(int i=1;i<=n;i++)
    {
        printf("%d\n",ans[i]);
    }
    return 0;
}
   				  	  				   		  	 	  			