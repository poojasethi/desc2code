#include<stdio.h>
#include<iostream>
#include<algorithm>
using namespace std;
const int N=2*110000;
int n;
struct node
{
	int x,y,id;
};
int C[N];
int lowbit(int x)
{
	return x&(-x);
}
int updata(int x)
{
	while(x<=n)
	{
		C[x]++;
		x+=lowbit(x);
	}
}
int get_sum(int x)
{
	int sum=0;
	while(x>0)
	{
		sum+=C[x];
		x-=lowbit(x);
	}
	return sum;
}
bool cmp1(node A,node B)
{
   if(A.y==B.y)
   return A.x<B.x;
   return A.y<B.y;
}
bool cmp2(node A,node B)
{
	if(A.x==B.x)
	return A.y<B.y;
	return A.x>B.x;
}
node f[N];
int ans[N];
int main()
{
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
	scanf("%d %d",&f[i].x,&f[i].y);
	f[i].id=i;
   }
   sort(f+1,f+n+1,cmp1);
   for(int i=1;i<=n;i++)
   f[i].y=i; 
	 sort(f+1,f+1+n,cmp2);
	 for(int i=1;i<=n;i++)
	 {	
	 	ans[f[i].id]=get_sum(f[i].y);
	    updata(f[i].y);
	 //   for(int i=1;i<n;i++)
	  //  printf("%d ",C[i]);
	  //  printf("%d\n",C[n]);
	 }
	 for(int i=1;i<=n;i++)
	 printf("%d\n",ans[i]);
   return 0;
}