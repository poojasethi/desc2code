#include <cstdio>
#include <iostream>
#include <algorithm>
using namespace std;
int n,m,i,j,k,xb,yb,xe,ye,tot0,tot1,ans,stu,l,N,M,len,all0,all1,q,p;
struct cut{
	int a,b,c;
	friend int operator <(cut x,cut y){
				 return x.a<y.a||x.a==y.a&&x.b<y.b||x.a==y.a&&x.b==y.b&&x.c>y.c;
	}
} A[200011],B[200011],xl[200011],yl[200011];
int main(){
		scanf("%d%d%d",&n,&m,&k);
		while (k--){
					scanf("%d%d%d%d",&xb,&yb,&xe,&ye);
					if (xb==xe){
						 A[++tot0].a=xb;
						 A[tot0].b=min(yb,ye)+1;
						 A[tot0].c=1;
						 A[++tot0].a=xb;
						 A[tot0].b=max(yb,ye);
						 A[tot0].c=-1;
					}
					else{
				 			 B[++tot1].a=yb;
				 			 B[tot1].b=min(xb,xe)+1;
				 			 B[tot1].c=1;
				 			 B[++tot1].a=yb;
				 			 B[tot1].b=max(xb,xe);
				 			 B[tot1].c=-1;
					}
		}
		N=n-1,M=m-1;
		sort(A+1,A+tot0+1);
		sort(B+1,B+tot1+1);
		q=1;
		for (i=1;i<=tot0;i=j){
			N--;
			for (j=i;j<=tot0&&A[i].a==A[j].a;j++);
			stu=0;
			len=m;
			for (k=i;k<j;k++)
					if (A[k].c==1){
						if (stu==0)l=A[k].b;
						stu++;
					}
					else{
						stu--;
						if (stu==0)len-=A[k].b-l+1;
					}
			ans^=len;
			xl[++all0].a=A[i].a;
			xl[all0].b=len;
			xl[all0].c=j-1;
			if (q==A[i].a)q++;
		}
		p=1;
		for (i=1;i<=tot1;i=j){
			M--;
			for (j=i;j<=tot1&&B[i].a==B[j].a;j++);
			stu=0;
			len=n;
			for (k=i;k<j;k++)
					if (B[k].c==1){
						if (stu==0)l=B[k].b;
						stu++;
					}
					else{
						stu--;
						if (stu==0)len-=B[k].b-l+1;
					}
			ans^=len;
			yl[++all1].a=B[i].a;
			yl[all1].b=len;
			yl[all1].c=j-1;
			if (p==B[i].a)p++;
		}
		if (N&1)ans^=m;
		if (M&1)ans^=n;
		if (ans){
			cout<<"FIRST"<<endl;
			if (N>0&&(m^ans)<m){
		 		 cout<<q<<" 0 "<<q<<" "<<m-(m^ans);
				return 0;
			}
			if (M>0&&(n^ans)<n){
				cout<<"0 "<<p<<" "<<n-(n^ans)<<" "<<p;
				return 0;
			}
			for (i=1;i<=all0;i++)
					if ((xl[i].b^ans)<xl[i].b){
						k=xl[i].b-(xl[i].b^ans);
						for (l=stu=0,j=xl[i-1].c+1;j<=xl[i].c;j++)
								if (A[j].c==1){
									if (stu==0)
										 if (A[j].b-l-1>=k){
										 		cout<<xl[i].a<<" 0 "<<xl[i].a<<" "<<l+k;
										 		break;
										 }
										 else k-=A[j].b-l-1;
								  stu++;
								}
								else{
									stu--;
									if (stu==0)l=A[j].b;
								}
						if (j>xl[i].c)cout<<xl[i].a<<" 0 "<<xl[i].a<<" "<<l+k;
						return 0;
					}
			for (i=1;i<=all1;i++)
					if ((yl[i].b^ans)<yl[i].b){
						k=yl[i].b-(yl[i].b^ans);
						for (l=stu=0,j=yl[i-1].c+1;j<=yl[i].c;j++)
								if (B[j].c==1){
									 if (stu==0)
										 if (B[j].b-l-1>=k){
										 		cout<<"0 "<<yl[i].a<<" "<<l+k<<" "<<yl[i].a;
										 		break;
										 }
										 else k-=B[j].b-l-1;
							 		 stu++;
								}
								else{
									stu--;
									if (stu==0)l=B[j].b;
								}
						if (j>yl[i].c)cout<<"0 "<<yl[i].a<<" "<<l+k<<" "<<yl[i].a;
						return 0;
					}
		}
		else	cout<<"SECOND";
		return 0;
}