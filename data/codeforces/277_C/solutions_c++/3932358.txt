#include<stdio.h>
#include<vector>
#include<algorithm>
using namespace std;
#define M 100001
struct pnt{
	int ps,st,en;
	pnt(int ps,int st,int en):ps(ps),st(st),en(en){}
	bool operator != (pnt a){
		if(ps!=a.ps||st!=a.st||en!=a.en)return 1;
		return 0;
	}
};
typedef vector<pnt> vp;
bool cmp(pnt a,pnt b){
	if(a.ps!=b.ps)return a.ps<b.ps;
	if(a.st!=b.st)return a.st<b.st;
	return a.en<b.en;
}
vp merge(vp v){
	sort(v.begin(),v.end(),cmp);
	int i,j,x,st,en;
	vp u;
	int sz=v.size();
	for(i=0;i<sz;){
		x=v[i].ps, st=v[i].st, en=v[i].en;
		j=i+1;
		while(j<sz&&v[j].ps==x&&v[j].st<=en){
			en=max(en,v[j].en);
			j++;
		}
		u.push_back(pnt(x,st,en));
		i=j;
	}
	return u;
}
vp arrange(vp u){
	int i,j,x,len;
	vp v;
	int sz=u.size();
	for(i=0;i<sz;){
		x=u[i].ps, len=u[i].en-u[i].st;
		j=i+1;
		while(j<sz&&u[j].ps==x){
			len+=u[j].en-u[j].st;
			j++;
		}
		v.push_back(pnt(x,0,len));
		i=j;
	}
	return v;
}
int find(int x,int len,vp v){
	int i,j,k;
	for(i=0;i<v.size();i++)if(v[i].ps>=x)break;
	for(j=i;j<v.size();j++)if(v[j].ps>x)break;
	int y=0;
	for(k=i;k<j;k++){
		len-=v[k].st-y;
		y=v[k].st;
		if(len<=0)break;
		y=v[k].en;
	}
	return y+len;
}
int main(){
//	freopen("3.in","r",stdin);
	int n,m,k;
	scanf("%d%d%d",&n,&m,&k);
	int i,j,sx,sy,ex,ey;
	vp x,y;
	for(i=0;i<k;i++){
		scanf("%d%d%d%d",&sx,&sy,&ex,&ey);
		if(sx>ex)swap(sx,ex);
		if(sy>ey)swap(sy,ey);
		if(sx==ex)x.push_back(pnt(sx,sy,ey));
		else if(sy==ey)y.push_back(pnt(sy,sx,ex));
	}
	int ans=0,cnt;
	x=merge(x);
	vp xx=arrange(x);
	for(i=0;i<xx.size();i++)ans^=(m-xx[i].en);
	cnt=n-1-xx.size();
	if(cnt&1)ans^=m;
	y=merge(y);
	vp yy=arrange(y);
	for(i=0;i<yy.size();i++)ans^=(n-yy[i].en);
	cnt=m-1-yy.size();
	if(cnt&1)ans^=n;
	if(!ans){
		puts("SECOND");
		return 0;
	}
	puts("FIRST");
	for(i=0;i<xx.size();i++)if(xx[i].ps!=i+1)break;
	if(i+1<n)xx.push_back(pnt(i+1,0,0));
	for(i=0;i<xx.size();i++){
		j=(m-xx[i].en),k=j^ans;
		if(j>=k){
			ex=xx[i].ps;
			ey=find(ex,j-k,x);
			printf("%d %d %d %d\n",ex,0,ex,ey);
			return 0;
		}
	}
	for(i=0;i<yy.size();i++)if(yy[i].ps!=i+1)break;
	if(i+1<m)yy.push_back(pnt(i+1,0,0));
	for(i=0;i<yy.size();i++){
		j=(n-yy[i].en),k=j^ans;
		if(j>=k){
			ey=yy[i].ps;
			ex=find(ey,j-k,y);
			printf("%d %d %d %d\n",0,ey,ex,ey);
			return 0;
		}
	}
}
