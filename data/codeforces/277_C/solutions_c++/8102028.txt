#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 500010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int x,y,z;
} ox[N],oy[N];
int i,j,k,n,m,K,x1,x2,y1,y2,sx,sy,an,s;
inline bool cc1(const ww &a,const ww &b) {
	return a.x<b.x||a.x==b.x&&a.y<b.y;
}
inline void work(ww a[N],int s,int n,int m,int F) {
	int i,j,k,last=0;
	a[++s].x=n;
	for (i=1;i<=s;i=j) {
		if ((a[i].x-last-1)&1) an^=m;
		if (i==s) break;
		for (j=i;j<=s&&a[j].x==a[i].x;j++);
		int Last=0,sum=0;
		For(k,i,j-1) {
			if (a[k].y<=Last) Last=max(Last,a[k].z);
			else {
				sum+=a[k].y-Last;
				Last=a[k].z;
			}
		}
		if (Last<m) sum+=m-Last;
		an^=sum;
		last=a[i].x;
	}
}
inline void Print(int x,int y,int z,int F) {
	if (!F) printf("%d %d %d %d\n",x,y,x,z);
	else printf("%d %d %d %d\n",y,x,z,x);
	exit(0);
}
inline void print(ww a[N],int s,int n,int m,int F) {
	int i,j,k,last=0;
	a[++s].x=n;
	for (i=1;i<=s;i=j) {
		if (last<a[i].x-1&&m>=(an^m)) Print(last+1,0,m-(an^m),F);
		if (i==s) break;
		for (j=i;j<=s&&a[j].x==a[i].x;j++);
		int Last=0,sum=0;
		For(k,i,j-1) {
			if (a[k].y<=Last) Last=max(Last,a[k].z);
			else {
				sum+=a[k].y-Last;
				Last=a[k].z;
			}
		}
		if (Last<m) sum+=m-Last;
		if (sum>=(an^sum)) {
			sum-=an^sum;
			Last=0;
			For(k,i,j-1) {
				if (a[k].y<=Last) Last=max(Last,a[k].z);
				else {
					int len=a[k].y-Last;
					if (len>=sum) Print(a[i].x,0,Last+sum,F);
					else sum-=len;
					Last=a[k].z;
				}
			}
			Print(a[i].x,0,Last+sum,F);
		}
		last=a[i].x;
	}
}
int main() {
	scanf("%d%d%d",&n,&m,&K);
	For(i,1,K) {
		scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
		if (y1>y2) swap(y1,y2);
		if (x1>x2) swap(x1,x2);
		if (x1==x2) ox[++sx]=(ww){x1,y1,y2};
		else oy[++sy]=(ww){y1,x1,x2};
	}
	sort(ox+1,ox+sx+1,cc1);
	sort(oy+1,oy+sy+1,cc1);
	work(ox,sx,n,m,0);
	work(oy,sy,m,n,1);
	if (!an) printf("SECOND\n");
	else {
		printf("FIRST\n");
		print(ox,sx,n,m,0);
		print(oy,sy,m,n,1);
	}
	return 0;
}
