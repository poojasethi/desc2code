#include <cstdio>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <utility>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <cmath>
#include <map>
#include <set>

using namespace std;

#define foreach(it, a) for (__typeof(a.begin()) it = a.begin(); it != a.end(); it++)
#define rep(i, n) for (int i = 0; i < n; i++)
#define pb push_back
#define mp make_pair

const int INF = ~0U >> 1;
const double eps = 1e-6;

const int D=1000000001;

map<int,vector<pair<int,int> > >A;
map<int,int>L;
int n,m,k;

int calc(vector<pair<int,int> > arr){
    int res=0;
    int l=0,r=0;
    for (int i=0;i<arr.size();i++){
        int x=arr[i].first,y=arr[i].second;
        if (x>r){
            res+=r-l;
            l=x,r=y;
        }else{
            if (y>r) r=y;
        }
    }
    res+=r-l;
    return res;
}

int main() {
    //freopen("in.txt", "r", stdin);

    scanf("%d%d%d",&n,&m,&k);
    for (int i=0;i<k;i++){
        int x1,y1,x2,y2;
        scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
        if (x1==x2){
            if (y1>y2) swap(y1,y2);
            A[x1].pb(mp(y1,y2));
        }else{
            if (x1>x2) swap(x1,x2);
            A[D+y1].pb(mp(x1,x2));
        }
    }
    for (int i=1;i<n;i++) if (!A.count(i)){A[i].clear();break;}
    for (int i=1;i<m;i++) if (!A.count(D+i)){A[D+i].clear();break;}

    int xcnt=n-1,ycnt=m-1,sg=0;
    foreach(it,A){
        sort(it->second.begin(),it->second.end());
        if (it->first>=D) ycnt--; else xcnt--;
        L[it->first]=((it->first>=D)?(n):(m))-calc(it->second);
        sg^=L[it->first];
    }
    if (xcnt&1) sg^=m;
    if (ycnt&1) sg^=n;
    if (sg==0){
        printf("SECOND\n");
    }else{
        printf("FIRST\n");
        foreach(it,A){
            if (L[it->first]>(L[it->first]^sg)){
                int cut=L[it->first]-(L[it->first]^sg);

                vector<pair<int,int> > arr;
                int l=0,r=0;
                for (int i=0;i<it->second.size();i++){
                    int x=it->second[i].first,y=it->second[i].second;
                    if (x>r){
                        arr.pb(mp(l,r));
                        l=x,r=y;
                    }else{
                        if (y>r) r=y;
                    }
                }
                arr.pb(mp(l,r));

                int now=0;
                int last=0;
                int pos=-1;
                foreach(v,arr){
                    if (now+v->first-last>=cut){
                        pos=last+cut-now;
                        break;
                    }
                    now+=v->first-last;
                    last=v->second;
                }
                if (pos==-1) pos=last+cut-now;
                if (it->first>=D) printf("0 %d %d %d\n",it->first-D,pos,it->first-D);
                else printf("%d 0 %d %d\n",it->first,it->first,pos);
                break;
            }
        }
    }

    return 0;
}
