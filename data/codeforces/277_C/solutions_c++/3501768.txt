#include <iostream>
#include <stdio.h>
#include <string.h>
#include <algorithm>
#include<sstream>
#include <vector>
#include <cmath>
#include <set>
#include <map>
#include<queue>
using namespace std;
#define ll long long
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define rep(i,n) for(int i=0;i<n;i++)
#define all(a)  a.begin(),a.end()
#define ESP (1e-9)
#define N 450
#define inf 1000000007
#define sz(a) int(a.size())
#define pii pair<int,int>
#define vi vector<int>
using namespace std;
vector<pii>evs;
int sumlen(int mx=inf)
{
 int res=0,px,bit=0,cl,cr;
 for(int i=0;i<sz(evs);i++)
 {
  if(bit)
  {
   cl=px,cr=min(mx,evs[i].fi-1);
   if(cl<=cr)
   res+=cr-cl+1;
  }
  px=evs[i].fi;
  bit+=evs[i].se;
 }
 return res;
}
int cal(int h,int w,map<int,vector<pii> >&hors)
{
 int res=0;
 if((h-sz(hors))&1)res^=w;
 for(map<int,vector<pii> >::iterator it=hors.begin();it!=hors.end();it++)
 {
  evs=it->se;
  sort(all(evs));
  int len=sumlen();
  res^=(w-len);
 }
 return res;
}
int resy,resx1,resx2;
int find(int h,int w,map<int,vector<pii> >&hors,int mask)
{
 if(h-1-hors.size()>0)
 {
  int cur=1;
  while(hors.find(cur)!=hors.end())cur++;
  hors[cur]=vector<pii>();
 }
 for(map<int,vector<pii> >::iterator it=hors.begin();it!=hors.end();it++)
 {
  evs=it->se;sort(all(evs));
  int len=w-sumlen(),c=mask^len;
  if(c<len)
  {
   int t=len-c;
   int l=0,r=w,m;
   while(l+1<r)
   {
    m=(l+r)>>1;
    if(m+1-sumlen(m)<=t)l=m;
    else r=m;
   }
   resy=it->fi;resx1=0,resx2=l+1;return 1;
  }
 }
 return 0;
}
int main()
{
    //freopen("in.txt","r",stdin);
    int T,i,j,k,n,m;
    while(~scanf("%d%d%d",&n,&m,&k))
    {
     map<int,vector<pii> >hors,vers;
     for(i=0;i<k;i++)
     {
      int x,y,x1,y1;
      scanf("%d%d%d%d",&x,&y,&x1,&y1);
      if(x>x1)swap(x,x1);
      if(y>y1)swap(y,y1);
      if(x==x1)
      {
       vers[x].pb(mp(y,1));
       vers[x].pb(mp(y1,-1));
      }
      else
      {
       hors[y].pb(mp(x,1));
       hors[y].pb(mp(x1,-1));
      }
     }
     int game=0;
     game^=cal(m-1,n,hors);
     game^=cal(n-1,m,vers);
     if(game==0){puts("SECOND");continue;}
     else
     {
      printf("FIRST\n");
      resy=resx1=resx2=-1;
      if(find(m,n,hors,game))
      printf("%d %d %d %d\n",resx1,resy,resx2,resy);
      else if(find(n,m,vers,game))
      printf("%d %d %d %d\n",resy,resx1,resy,resx2);
     }
    }
    return 0;
}
