#include <cstdio>
#include <map>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <iostream>
#include <set>
#define fr(i,a,b) for(int i=a;i<b;i++)
#define rep(i,b) fr(i,0,b)

using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
#define mp make_pair
#define F first
#define S second

pii ls[2][200100];
int cnt[2];

void func(pair<int,pii>* sg, int q, int tam, int qtd, int &rsp, int s){
	sort(sg,sg+q);
	rsp=0;
	int mmax=0;
	int i=0, lst=0;
	while(i<q){
		int x = sg[i].F, ps=1, fim=0, len=0;
		while(i<q && sg[i].F==x){
			int a = sg[i].S.F+1, b=sg[i].S.S;
			if(ps<a) len+=a-ps;
			ps = max(ps,b+1);
			i++;
		}
		if(ps<=tam) len+=tam-ps+1;
		qtd--;
		rsp ^= len;
		mmax=max(mmax,len);
		ls[s][cnt[s]++] = mp(len,x);
		if(lst+1!=x) ls[s][cnt[s]++] = mp(tam,lst+1), mmax=tam;
		lst = x;
	}
	if(qtd && mmax!=tam) ls[s][cnt[s]++] = mp(tam,lst+1);
	if(qtd&1) rsp^=tam;
}
	
int find(pair<int,pii>* sg, int n, int tam, int qtd, int esp, int cor){
	int i=0;
	while(i<n){
		int x = sg[i].F, pos=1, fim=0, len=0, lst=0;
		while(i<n && sg[i].F==x){
			if(x==cor){
				int a = sg[i].S.F+1, b=sg[i].S.S;
				if(pos<a){
					len+=a-pos;
					if(len>=esp) return a-(len-esp)-1;
				}
				pos = max(pos,b+1);
			}
			i++;
		}
		if(x==cor && pos<=tam){
			len +=tam-pos+1;
			if(len>=esp) return (tam+1)-(len-esp)-1;
		}
	}
	return esp;
}

#define N 100100
pair<int,pii> vs[N], hs[N];

int main(){
	int n, m, k;
	scanf("%d %d %d",&n,&m,&k);
	
	int chs=0,cvs=0;
	rep(i,k){
		int x1, y1, x2, y2;
		scanf("%d %d %d %d",&x1,&y1,&x2,&y2);
		if(x1==x2) vs[cvs++] = mp(x1,mp(min(y1,y2),max(y1,y2)));
		else hs[chs++] = mp(y1,mp(min(x1,x2),max(x1,x2)));
	}
	//printf(" >>>>>> %d %d\n",cvs,chs);
	int rh, rv;
	func(vs,cvs,m,n-1,rv,0);
	func(hs,chs,n,m-1,rh,1);
	int w = rh^rv;
	//printf(" %d %d\n",rv,rh);
	if(w){
		printf("FIRST\n");
		bool achou=false;
		rep(i,2){
			rep(j,cnt[i]){
				if((ls[i][j].F^w) < ls[i][j].F){
					int len = (ls[i][j].F) - (ls[i][j].F^w);
					//printf(" >>> %d\n",len);
					//printf(" >> (%d) %d %d\n",w,ls[i][j].F^w, ls[i][j].S);
					if(i==0) printf("%d %d %d %d\n",ls[i][j].S,0,ls[i][j].S,find(vs,cvs,m,n-1,len,ls[i][j].S));
					else printf("%d %d %d %d\n",0,ls[i][j].S,find(hs,chs,n,m-1,len,ls[i][j].S),ls[i][j].S);
					achou=true;
					break;
				}
			}
			if(achou) break;
		}
	}else printf("SECOND\n");
	
	return 0;
}