import sys

def totalCut( cuts ) :
    cuts = sorted( cuts )
    if not cuts :
        return 0
    res = 0
    rightmost = cuts[ 0 ][ 1 ] 
    for cut in cuts :
        if cut[ 0 ] > rightmost :
            res += cut[ 0 ] - rightmost
        rightmost = max( rightmost , cut[ 1 ] )
    return rightmost - cuts[ 0 ][ 0 ] - res



def main() :
    n, m, k = [ int( x ) for x in sys.stdin.readline().strip().split() ]
    cuts = {}
    for i in xrange( k ) :
        x1, y1, x2, y2 = [ int( x ) for x in sys.stdin.readline().strip().split() ]
        if x1 == x2 :
            y = x1 + m
            x1, x2 = y1, y2
            w = m
        else :
            y = y1 
            x1, x2 = x1, x2
            w = n
        if y not in cuts :
            cuts[ y ] = []
        if x1 > x2 :
            x1, x2 = x2, x1
        cuts[ y ].append( ( x1, x2 ) )

    emptyRows = m - 1 
    emptyCols = n - 1 
    nimSum = 0
    rests = {}
    for y in cuts :
        if y >= m :
            w = m
            emptyCols -= 1
        else :
            w = n
            emptyRows -= 1
        rest = w - totalCut( cuts[ y ] )
        nimSum = nimSum ^ rest
        rests[ y ] = rest
    if emptyCols % 2 > 0 :
        nimSum = nimSum ^ m
    if emptyRows % 2 > 0 :
        nimSum = nimSum ^ n

    for y in xrange( 1 , m ) :
        if y not in cuts :
            rests[ y ] = n
            cuts[ y ] = []
            break

    for y in xrange( m + 1 , m + n ) :
        if y not in cuts :
            rests[ y ] = m
            cuts[ y ] = []
            break
    if nimSum == 0 :
        print 'SECOND'
        return
    else :
        print 'FIRST'
        mask = 1
        while mask <= nimSum :
            mask <<= 1
        mask >>= 1
        for y in rests :
            if ( rests[ y ] & mask ) > 0 :
                target = rests[ y ] ^ nimSum
                target = rests[ y ] - target
                cuts = sorted( cuts[ y ] )
                frees = []
                rightmost = 0
                for cut in cuts :
                    if cut[ 0 ] > rightmost :
                        frees.append( ( rightmost, cut[ 0 ] ) )
                    rightmost = max( rightmost, cut[ 1 ] )
                if y < m :
                    w = n
                else :
                    w = m
                frees.append( ( rightmost, w ) )
                totalFree = 0
                for free in frees :
                    if totalFree + free[ 1 ] - free[ 0 ] >= target :
                        x2 = free[ 0 ] + target - totalFree
                        x1, y1, x2, y2 = 0, y, x2, y
                        if y >= m :
                            x1, y1, x2, y2 = y1 - m , x1, y2 - m , x2
                        print x1, y1, x2, y2
                        return
                    totalFree += free[ 1 ] - free[ 0 ]
                print 'fial with frees'
        print 'fial with mask'

                    
                
if __name__ == '__main__' :
    main()


















                    


    
    
