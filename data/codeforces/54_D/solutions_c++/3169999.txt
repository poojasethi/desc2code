#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
using namespace std;

const int MAXN = 105;

int n, m, k;
int next[MAXN];
bool end[MAXN];
string p, t, s;

bool DFS(int i, int j) {
	if (i == n) return true;
	else {
		if (s[i] != '*') {
			while (j != -1 && p[j + 1] != s[i]) j = next[j];
			if (p[j + 1] == s[i]) j++;
			if (j == m - 1) {
				if (!end[i]) return false;
				else j = next[j];
			}
			return DFS(i + 1, j);
		}
		else {
			for (char c = 'a'; c < 'a' + k; c++) {
				int q = j;
				s[i] = c;
				while (q != -1 && p[q + 1] != s[i]) q = next[q];
				if (p[q + 1] == s[i]) q++;
				if (q == m - 1) continue;
				if (DFS(i + 1, q)) return true;
			}
			return false;
		}
	}
}

int main() {
	cin >> n >> k >> p >> t;
	m = p.size();
	s.assign(n, '*');
	for (int i = 0; i < n - m + 1; i++) if (t[i] == '1') {
		for (int j = i; j < i + m; j++) {
			if (s[j] != '*' && s[j] != p[j - i]) {
				cout << "No solution" << endl;
				return 0;
			}
			s[j] = p[j - i];
		}
		end[i + m - 1] = true;
	}
#ifdef debug
	cout << s << endl;
#endif

	next[0] = -1;
	for (int i = 1, j = -1; i < m; i++) {
		while (j != -1 && p[j + 1] != p[i]) j = next[j];
		if (p[j + 1] == p[i]) j++;
		next[i] = j;
	}

	if (!DFS(0, -1)) cout << "No solution" << endl;
	else cout << s << endl;

	return 0;
}

    			  	 			 		 				 	 	