//VERDICT:

#include<iostream>
#include<algorithm>
#include<cstring>
//#include<cstdlib>
#include<vector>
//#include<cstdio>
//#include<iomanip>
//#include<map>
//#include<set>
#include<queue>
//#include<deque>
//#include<utility>
#include<cmath>
#define pb push_back
#define mkp make_pair
#define foR(i,j,n) for(int i=j;i<n;i++)
#define error(x) cerr<<#x<<"x="<<x<<endl;
#define stf(x) st.find(x)!=st.end()
#define X first
#define Y second
typedef long long ll;
using namespace std;
const int maxn=1000000,inf=1000000000,mod=1000003;
int main(){
	int n,k;
	cin>>n>>k;
	string s,p;
	cin>>s>>p;
	string ans;
	foR(i,0,n)
		ans+='.';
	for(int i=p.size()-1;i>=0;i--)
		if(p[i]=='1')
			foR(j,0,s.size())
				if(ans[i+j]!='.'&&ans[i+j]!=s[j]){
					cout<<"No solution"<<endl;
					return 0;
				}
				else
					ans[i+j]=s[j];
	foR(i,0,p.size())
		if(p[i]=='0'){
			bool f=true;
			foR(j,0,s.size())
				if(s[j]!=ans[i+j]){
					f=false;
					break;
				}
			if(f){
				cout<<"No solution"<<endl;
				return 0;
			}
		}
	bool f=false;
	foR(i,0,s.size()-1)
		if(s[i]!=s[i+1])
			f=true;
	if(f){
		foR(i,0,ans.size())
			if(ans[i]=='.')
				cout<<s[0];
			else
				cout<<ans[i];
		return 0;
	}
	foR(i,0,k)
		if(s[0]!=char('a'+i)){
			foR(j,0,n)
				if(ans[j]=='.')
					cout<<char('a'+i);
				else
					cout<<ans[j];
			return 0;
		}
	return 0;
}
