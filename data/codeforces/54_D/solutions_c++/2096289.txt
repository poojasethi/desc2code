#include <cstdio>
#include <cstring>

using namespace std;

const int maxn = 110;
int n, k, lenp;
char res[maxn], q[maxn], p[maxn];
bool vis[maxn][maxn];

bool dfs(int ln, int lp)
{
	if ((ln >= lenp) &&
	    ((q[ln - lenp] == '0' && lp == lenp) || (q[ln - lenp] == '1' && lp < lenp)))
	return false;
	if (vis[ln][lp]) return false;
	if (ln == n) return true;
	for (char ch = 'a'; ch < 'a' + k; ch++)
	{
		char tmp[maxn];
		for (int i = 0; i < lp; i++)
		        tmp[i] = p[i];
		int head = 0, tail = lp;
		tmp[tail++] = ch;
		while (head < tail)
		{
			if (tail - head <= lenp)
			{
				bool flag = true;
				for (int i = head; i < tail; i++)
				        if (tmp[i] != p[i - head])
						flag = false;
				if (flag)
				        break;
			}
			head++;
		}
		if (dfs(ln + 1, tail - head))
		{
			res[ln] = ch;
			return true;
		}
	}
	vis[ln][lp] = true;
	return false;
}

int main()
{
	scanf("%d%d%s%s", &n, &k, p, q);
	lenp = strlen(p);
	memset(vis, 0, sizeof(vis));
	res[n] = '\r';
	if (dfs(0, 0))
		printf("%s", res);
	else
	        printf("No solution\n");
	        
	return 0;
}
