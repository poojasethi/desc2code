#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <sstream>
#include <iomanip>
#include <math.h>

using namespace std;


int main() {
  int n, k;
  string name, code;
  cin >> n >> k >> name >> code;
  
  string res(code.size(), '*');

  for (int i = 0; i < code.size(); ++i) {
    if (code[i] == '1') {
      for (int j = 0; j < name.size(); ++j) {
        if (i + j < res.size()) {
          res[i + j] = name[j];
        } else {
          res.push_back(name[j]);
        }
      }
    }
  }

  for (int i = res.size(); i < n; ++i) {
    res.push_back('*');
  }

  for (int i = 0; i < res.size(); ++i) {
    if (i < code.size() && code[i] == '1') {
      if (res.substr(i, name.size()) != name) {
        cout << "No solution" << endl;
        return 0;
      }
    }
    else  { // code == '0' || res[i] == '*'
      if (res.substr(i, name.size()) == name) {
        cout << "No solution" << endl;
        return 0;
      }
      if (res[i] == '*') {
        // longest substr which is prefix of name
        int len = name.size() - 1;
        if (i < len) {
          len = i;
        }
        while (len > 1) {
          if (name.substr(0, len - 1) == res.substr(i - len + 1, len - 1)) {
            break;
          }
          --len;
        }
        res[i] = (((name[len > 0 ? len - 1 : 0] - 'a') + 1) % k) + 'a';
      }
    }
  }

  cout << res << endl;
}
