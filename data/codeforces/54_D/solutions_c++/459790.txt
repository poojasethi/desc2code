#include <algorithm>
#include <bitset>
#include <cassert>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <iterator>
#include <limits>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;


/* Prewritten code begins */
#define REP(i,n)    for(int i=0; i<(n); ++i)
#define SIZE(x)     (int)(x).size()
/* Prewritten code ends */

int n, k, lp;
string mem[111][111];
string pat, where;
string f(int pos, int pre) {
	string &res = mem[pos][pre], te;
	if(res != "X") return res;
	if(pre == lp && where[pos-lp] == '0') return res = "Z";
	if(pos >= lp && where[pos-lp] == '1' && pre != lp) return res = "Z";
	if(pos == n) return res = "";
	REP(i,k) {
		REP(j,pre+1) {
			string t = pat.substr(j,pre-j)+string(1,'a'+i);
			if(pat.substr(0, SIZE(t)) == t) {
				 te = f(pos+1,SIZE(t));
				if(te != "Z") return res = string(1,'a'+i)+te;
				goto C;
			}
		}
		te = f(pos+1,0);
		if(te != "Z") return res = string(1,'a'+i)+te;
C:;	}
  	return res = "Z";
}
int main() {
	cin >> n >> k;
	cin >> pat; lp = SIZE(pat);
	cin >> where;
	REP(i,111) REP(j,111) mem[i][j] = "X";
	string t = f(0,0);
	if(t == "Z") t = "No solution";
	cout << t << endl;
	return 0;
}
