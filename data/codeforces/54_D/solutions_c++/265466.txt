#include <string>
#include <vector>
#include <set>
#include <map>
#include <iostream>
#include <sstream>
# include<fstream>
#include<cmath>
using namespace std;
# define FOR(i,a,n) for(int i=a;i<n;++i)
# define REP(i,n) FOR(i,0,n)
string ar,place;
int n,k,prefix[101],si;
int dp[101][101];
string s,p;
int go(int pos,int pre)
{
	if(pre==si&&s[pos-si]!='1') return 0;
	if(pos==n) return 1;
	int &r=dp[pos][pre];
	if(r!=-1) return r;
	r=0;
	FOR(i,'a','a'+k)
	if(ar[pos]=='.'||ar[pos]==i)
	{
		while(pre&&p[pre]!=i)
		{
			pre=prefix[pre];
		}
		r|=go(pos+1,pre+(i==p[pre]));
		if(r) 
		{
			place[pos]=i;
			return r;
		}
	}
	return r;
}
		
int main()
{
	cin>>n>>k>>p>>s;
	int m=s.size();
	si=p.size();
	bool ok=true;
	ar.resize(n,'.');
	REP(i,m)
	{
		if(s[i]=='1')
		REP(j,si)
		{
			if(ar[j+i]=='.')
			ar[j+i]=p[j];
			else if(ar[j+i]!=p[j]) 
			{
				ok=false;
				break;
			}
		}
	}
	if(!ok) cout<<"No solution"<<endl;
	else
	{
		prefix[0]=0;
		prefix[1]=0;
		FOR(i,2,si+1)
		{
			int len=i-1;
			while(len&&p[i-1]!=p[prefix[len]])
			{
				len=prefix[len];
			}
			if(p[prefix[len]]==p[i-1]) prefix[i]=prefix[len]+1;
			else prefix[i]=0;
		}
		REP(i,100) REP(j,101) dp[i][j]=-1;
		place.resize(n,'.');
		int ans=go(0,0);
		if(ans) cout<<place<<endl;
		else cout<<"No solution"<<endl;
    }
}
	
	
	
