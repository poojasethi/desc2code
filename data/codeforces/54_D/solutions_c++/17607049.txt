#include<cstdio>
#include<iostream>
#include<algorithm>
#include<string.h>
#include<vector>
#include<map>
#include<string>
using namespace std;
typedef long long ll;
int N, K, top;
int mz[1110];
string name, P;
char ans[1000];
bool f[27];
int main()
{
	cin >> N >> K;
	cin >> name;
	cin >> P;
	memset(ans,'\0',sizeof(ans));
	memset(f,false,sizeof(f));
	for(int i = 0; i < P.length(); i++){
		if(P[i] == '1'){
			mz[top++] = i;
			if(!ans[i]){
				for(int j = i; j < i + name.length(); j++)
					ans[j] = name[j - i];
			}
			else{
				for(int j = i; j < i + name.length(); j++){
					if(ans[j] != name[j - i] && ans[j]){
						cout<<"No solution"<< endl;
						return 0;
					}
					else if(!ans[j])
						ans[j] = name[j - i];
				}
			}
		}
	}
	char s = ' ';
	for (int i=0;i<name.length();i++) f[name[i]-'a'] = true;
	for (int i=0;i<K;i++)
	{
		if (!f[i]) 
		{
		    s = 'a' + i;
		    break;
		}
	}
	if (s == ' ') s = name[0];
	bool pd = true;
	for (int i=0;i<N;i++)
	    if (ans[i] == '\0') ans[i] = s;
	    
    for (int i = 0;i < P.length();i++)
	    if (P[i] == '0')
		{
		   	pd = false;
		   	int pos = i;
		   	    
	        for (int j = 0;j < name.length();j++)
			{
				if (name[j] != ans[pos]) 
				{
					pd = true;
					break;
				}
				pos++;
			}    
			if (!pd) break;
	    }
	if (!pd) printf("No solution\n");
	else printf("%s\n",ans);


	return 0;
}
		  		 	  	     			 	 			 		