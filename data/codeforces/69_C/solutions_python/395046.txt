nums = raw_input().split()
n = int(nums[0])
base = int(nums[1])
comp = int(nums[2])
q = int(nums[3])
          
ans = [[0]*(base + comp)]         
idxs = {}
names = []
isBase = [0]*200
needs = [[]]

for i in range(comp + base):
    needs.append([])
for i in range(n):
    ans.append([0]*(base + comp))

def getIdx(artName):
    if artName in idxs.keys():
        return idxs[artName]
    else:
        nidx = len(idxs)
        idxs[artName] = nidx
        names.append(artName)
        return nidx

for i in range(base):
    isBase[getIdx(raw_input())] = 1
for i in range(comp):
    line = raw_input().split()
    cur = getIdx(line[0][:-1])
    isBase[cur] = 0;
    ln = (len(line) - 1) / 2
    for j in range(ln):
        if j + 1 < ln:
            needs[cur].append((getIdx(line[2*j + 1]), int(line[2*j + 2][:-1])))
        else:
            needs[cur].append((getIdx(line[2*j + 1]), int(line[2*j + 2])))

for i in range(n):
    for j in range(base + comp):
        ans[i][j] = 0;

for i in range(q):
    line = raw_input().split()
    cur = int(line[0]) - 1
    idx = getIdx(line[1])
    ans[cur][idx] = ans[cur][idx] + 1
    for j in range(base, base + comp):
        good = 1
        for k in needs[j]:
            if ans[cur][k[0]] < k[1]:
                good = 0
                break
        if good == 1:
            #print 'Building', names[j]
            ans[cur][j] = ans[cur][j] + 1
            for k in needs[j]:
                ans[cur][k[0]] = ans[cur][k[0]] - k[1]

for i in range(n):
    nz = 0
    toPrint = []
    for j in range(base + comp):
        if ans[i][j] > 0:
            nz = nz + 1
            toPrint.append((names[j], ans[i][j]))

    print nz

    for j, k in sorted(toPrint):
        print j, k
