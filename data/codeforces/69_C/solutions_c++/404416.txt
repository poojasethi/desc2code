#include <cstdio>
#include <sstream>
#include <iostream>
#include <vector>
#include <memory.h>
#include <string.h>
#include <set>
#include <map>
#include <algorithm>
#include <cmath>
#include <string>
using namespace std;

#define pb push_back
#define mp make_pair
#define sz(a) int((a).size())
#define forn(i, n) for (int i=0; i<(n); ++i)
#define foreach(it, a) for (__typeof((a).begin()) it=(a).begin(); it!=(a).end(); ++it)

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;

const int maxn = 256;

map<string,int> ma[maxn];
string all[maxn];
vector<string> need[maxn];
vector<int> cnt[maxn];
string name[maxn];
int n, m, k, q;
char s[1<<20];

int main()
{
  scanf("%d %d %d %d", &n, &m, &k, &q); gets(s);
  forn (i, m)
  {
    gets(s);
    all[i] = s;
  }
  forn (i, k)
  {
    gets(s);
    int len = strlen(s);
    forn (j, len) if (s[j]==':' || s[j]==',') s[j] = ' ';
    istringstream sin(s);
    sin >> name[i];
    string q; int w;
    for (; sin >> q >> w;)
      need[i].pb(q), cnt[i].pb(w);   
  }
  while (q--)
  {
    gets(s);
    istringstream sin(s);
    int id; string w; sin >> id >> w; --id;
    ma[id][w]++;
    forn (i, k)
    {
      int ok = 1;
      forn (j, sz(need[i]))
        if (ma[id][need[i][j]] < cnt[i][j])
        {
          ok = 0;
          break;
        }
      if (ok)
      {
        forn (j, sz(need[i]))
          ma[id][need[i][j]] -= cnt[i][j];
        ma[id][name[i]] ++;  
        break;
      }  
    }
  }
  forn (i, n)
  {
    vector<pair<string,int> > ans;
    foreach (it, ma[i]) if (it->second > 0)
      ans.pb(*it);
    printf("%d\n", sz(ans));
    foreach (it, ans) printf("%s %d\n", it->first.c_str(), it->second);
  }
  return 0;
}
