#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li              long long
#define rep(i,to)       for(li i=0;i<((li)to);i++)
#define pb              push_back
#define sz(v)           ((li)v.size())

int main(){
	int n,m,k,q;
	scanf("%d%d%d%d",&n,&m,&k,&q);
	string base[105],com[105];
	map<string,int> con0,con1;
	vector<pair<int,int> > mate[105];
	int have [105][205];
	rep(i,105)rep(j,105) have[i][j]=0;
	rep(i,m){
		char c[1005];
		scanf("%s",c);
		string str=c;
		base[i]=str;
		con0[str]=i;
	}
	rep(i,k){
		char c[1005],tmp='A';
		int num;
		scanf("%s",c);
		string name,str;
		c[strlen(c)-1]='\0';
		name=c;
		com[i]=name;
		con1[name]=i;
		
		while(tmp!='\n'){
			scanf("%s %d%c",c,&num,&tmp);
			str=c;
			mate[i].pb(make_pair(con0[str],num));
		}
	}
	rep(i,q){
		int num;
		char c[1005];
		string str;
		scanf("%d%s",&num,c);
		str=c;
		have[num][con0[str]]++;
		rep(j,k){
			int flag=1;
			rep(k,sz(mate[j]))if(have[num][mate[j][k].first]<mate[j][k].second) flag=0;
			if(flag){
				have[num][100+j]++;
				rep(k,sz(mate[j])) have[num][mate[j][k].first]-=mate[j][k].second;
			}
		}
	}
	for(int i=1;i<=n;i++){
		int cnt=0;
		rep(j,205)if(have[i][j]>0) cnt++;
		map<string,int> mp;
		rep(j,m)if(have[i][j]>0) mp[base[j]]=have[i][j];
		rep(j,k)if(have[i][j+100]>0) mp[com[j]]=have[i][j+100];
		cout<<cnt<<endl;
		for(map<string,int>::iterator it=mp.begin();it!=mp.end();it++){
			cout<<(it->first)<<" "<<(it->second)<<endl;
		}
	}
}
