#include <iostream>
#include <cstdlib>
#include <map>

using namespace std;

int main(int argc, char* argv[])
{
	int k, n, m, q;
	cin >> k >> n >> m >> q;

	map<string,int> names;

	for (int i = 0; i < n; i++)
	{
		string a;
		cin >> a;
		names[a] = i;
	}

	int recipe[50][50];
	for (int i = 0; i < 50; i++)
		for (int j = 0; j < 50; j++)
			recipe[i][j] = 0;

	cin.ignore();

	for (int i = 0; i < m; i++)
	{
		string a;
		getline(cin, a, '\n');

		int colon = a.find(':');
		string name = a.substr(0, colon);
		names[name] = n + i;

		string items = a.substr(colon + 2);

		int start = 0;
		int comma = 0;
		do
		{
			comma = items.find(',', start);

			if (comma == string::npos)
				comma = items.length();

			string item = items.substr(start, comma - start);
			int space = item.find(' ');

			string itemName = item.substr(0, space);
			int itemValue = atoi(item.substr(space + 1).c_str());

			recipe[i][names[itemName]] = itemValue;

			start = comma + 2;

		} while (comma < items.length());
	}

	int friends[100][100];
	for (int i = 0; i < 100; i++)
		for (int j = 0; j < 100; j++)
			friends[i][j] = 0;

	for (int i = 0; i < q; i++)
	{
		int f;
		string a;
		cin >> f >> a;
		f--;

		friends[f][names[a]]++;

		for (int j = 0; j < m; j++)
		{
			bool g = true;
			for (int l = 0; l < n; l++)
			{
				if (friends[f][l] < recipe[j][l])
				{
					g = false;
					break;
				}
			}

			if (g)
			{
				for (int l = 0; l < n; l++)
				{
					friends[f][l] -= recipe[j][l];
				}
				friends[f][j + n]++;
				break;
			}
		}
	}

	for (int i = 0; i < k; i++)
	{
		int c = 0;
		for (int j = 0; j < n + m; j++)
			if (friends[i][j] != 0)
				c++;

		cout << c << endl;
		for (map<string,int>::iterator j = names.begin(); j != names.end(); j++)
		{
			if (friends[i][j->second] != 0)
				cout << j->first << " " << friends[i][j->second] << endl;
		}	
	}

	
	return 0;
}
