#include <cstdio>
#include <map>
#include <iostream>
#include <algorithm>
#include <string>
#include <vector>

using namespace std;

typedef pair<int,int> pii;
typedef pair<string,int> psi;

#define K 101
#define N 55

map<string,int> idbase,idcompl;
string sbase[N],scompl[N];
vector<pii> a[N];
int b[K][N];
int c[K][N];

int n,fr,m,q,i,j,k,cur;
string curs,curn;

int num(string s)
{
	int res = 0;
	for(int i=0;i<s.length();i++)
		res = 10*res + s[i]-'0';
	return res;
}

int main()
{
	scanf("%d%d%d%d",&fr,&n,&m,&q);
	for(i=0;i<n;i++)
	{
		cin >> curs;
		idbase[curs] = i;
		sbase[i] = curs;
	}
	for(i=0;i<m;i++)
	{
		cin >> curs;
		curs.erase(curs.size()-1,1);
		idcompl[curs] = i;
		scompl[i] = curs;
		bool flag = true;
		do{
			cin >> curs >> curn;
			if(curn[curn.length()-1]==',')
			{
				curn.erase(curn.size()-1,1);
			}else
			{
				flag = false;
			}
			a[i].push_back(pii(idbase[curs],num(curn)));
		}while(flag);
	}
	for(i=0;i<q;i++)
	{
		cin >> cur >> curs;
		--cur;
		b[cur][idbase[curs]]++;
		for(j=0;j<m;j++)
		{
			bool flag = true;
			for(k=0;k<a[j].size();k++)
				if(b[cur][a[j][k].first]<a[j][k].second)
				{
					flag = false;
					break;
				}
			if(flag)
			{
				c[cur][j]++;
				for(k=0;k<a[j].size();k++)
					b[cur][a[j][k].first]-=a[j][k].second;
				break;
			}
		}
	}
	vector<psi> res;
	for(i=0;i<fr;i++)
	{
		res.clear();
		for(j=0;j<n;j++)
			if(b[i][j]>0)
				res.push_back(psi(sbase[j],b[i][j]));
		for(j=0;j<m;j++)
			if(c[i][j]>0)
				res.push_back(psi(scompl[j],c[i][j]));
		sort(res.begin(),res.end());
		printf("%d\n",res.size());
		for(j=0;j<res.size();j++)
			cout << res[j].first << " " << res[j].second << endl;
	}
	return 0;
}