#include<map>
#include<cstdio>
//                         Last Change:  2011-09-20 16:32:06
#include<string>
#include<cstring>
#include<vector>
#include<iostream>
#include<algorithm>
using namespace std;
int n,m,k,q;
string basic[51],com[51];
map<string,int> h;
int comp[51][51],ans[101][101];
vector< pair<string,int> > out;
int main(){
	scanf("%d%d%d%d",&k,&n,&m,&q);
	for(int i=1;i<=n;++i){
		cin>>basic[i];
		h[basic[i]]=i;
	}
	for(int i=1;i<=m;++i){
		cin>>com[i];
		com[i].erase(com[i].end()-1);
		for(;;){
			string x;int y;
			cin>>x>>y;
			comp[i][h[x]]=y;
			if(getchar()!=',')break;
		}
	}
	for(int i=1;i<=q;++i){
		int x;string y;
		cin>>x>>y;
		++ans[x][h[y]];
		for(int j=1;j<=m;++j){
			int OK=(~0U>>1);
			for(int k=1;k<=n;++k)
				if(comp[j][k])
					OK=min(OK,ans[x][k]/comp[j][k]);
			if(OK){
				for(int k=1;k<=n;++k)
					ans[x][k]-=comp[j][k]*OK;
				ans[x][j+50]+=OK;
				break;
			}
		}
	}
	for(int i=1;i<=k;++i){
		out.clear();
		int cnt=0;
		for(int j=1;j<=100;++j)cnt+=ans[i][j]!=0;
		printf("%d\n",cnt);
		for(int j=1;j<=100;++j)
			if(ans[i][j])
				if(j<=n)
					out.push_back(make_pair(basic[j],ans[i][j]));
				else
					out.push_back(make_pair(com[j-50],ans[i][j]));
		stable_sort(out.begin(),out.end());
		for(int j=0;j<out.size();++j)
			cout<<out[j].first<<" "<<out[j].second<<endl;
	}
	return 0;
}
