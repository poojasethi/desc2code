#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
#include <string>
#include <map>
using namespace std;

int data[105][105];
string mname[105];
string name[105];
map<string, int> id;
char s[100000], w[1000];
void parse(int x) {
	int of=0, no;
	sscanf(s, "%s%n", w, &no);
	string v(w); v=v.substr(0,(int)v.size()-1);
	mname[x]=v;
	of += no;
	int r=0;
	while(sscanf(s+of, "%s%d%n", w, &r, &no)>0) {
		//fprintf(stderr, "r=%d, no=%d\n", r, no);
		data[x][id[string(w)]] += r;
		of += no;
		if(sscanf(s+of, "%*c%n", &no)==EOF)break;
		of+=no;
	}
}
int p[105][105]={};
int om[105][105];
vector<pair<string, int> > fin[105];
int main(void) {
	int k, n, m, q;
	scanf("%d%d%d%d", &k, &n, &m, &q);
	for(int i=0;i<n;i++)  {
		scanf("%s", s);
		name[i]=s;
		id[s]=i;
	}
	gets(s);
	for(int i=0;i<m;i++) {
		gets(s);
		parse(i);
	}
	while(q--) {
		int d;
		scanf("%d%s", &d, s);
		p[d][id[s]]++;
		for(int i=0;i<m;i++) {
			int flag=0;
			for(int j=0;j<n;j++)
				if(p[d][j] < data[i][j]) {
					flag=1; break;
				}
			if(!flag) {
				for(int j=0;j<n;j++) p[d][j] -= data[i][j];
				om[d][i]++;
			}
		}
	}
	for(int i=1;i<=k;i++) {
		for(int j=0;j<n;j++) if(p[i][j])
		   fin[i].push_back(make_pair(name[j], p[i][j]));
		for(int j=0;j<m;j++) if(om[i][j])
			fin[i].push_back(make_pair(mname[j], om[i][j]));
		sort(fin[i].begin(), fin[i].end());
	}
	for(int i=1;i<=k;i++) {
		printf("%d\n", (int)fin[i].size());
		for(int j=0;j<(int)fin[i].size();j++)
			printf("%s %d\n", fin[i][j].first.c_str(), fin[i][j].second);
	}
	return 0;
}
