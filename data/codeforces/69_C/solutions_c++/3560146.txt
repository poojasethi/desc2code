#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

int n,m,k;
struct player
{
    int bas[55],up[55];
}s[105];

struct things
{
    char name[105];
    int num;
}th[105];

int need[55][55];
char base[55][105],ups[55][105];

int find(char str[])
{
    for(int i=0;i<n;i++)
    if(strcmp(str,base[i])==0)
    return i;
}

void disapper(int p)
{
    int i,j,k;
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        if(s[p].bas[j]<need[i][j])
        break;
        if(j>=n)
        {
            s[p].up[i]++;
            for(k=0;k<n;k++)
            s[p].bas[k] -= need[i][k];
            return ;
        }
    }
}

int cmp(const things &a,const things &b)
{
    return strcmp(a.name,b.name)<0;
}

int main()
{
    int i,p,pe,num,j;
    char name[105],ch;
    while(~scanf("%d%d%d%d",&k,&n,&m,&p))
    {
        memset(s,0,sizeof(s));
        for(i=0;i<n;i++)
        scanf("%s",base[i]);
        for(i=0;i<m;i++)
        {
            scanf("%s",ups[i]);
            int l = strlen(ups[i]);
            ups[i][l-1] = 0;
            while(scanf("%s %d%c",&name,&num,&ch))
            {
                need[i][find(name)] = num;
                if(ch == '\n')
                break;
            }
        }
        for(i=0;i<p;i++)
        {
            scanf("%d %s",&pe,name);
            s[pe].bas[find(name)]++;
            disapper(pe);
        }
        for(i=1;i<=k;i++)
        {
            num = 0;
            for(j=0;j<n;j++)
            if(s[i].bas[j]!=0)
            strcpy(th[num].name,base[j]),th[num++].num = s[i].bas[j];
            for(j=0;j<m;j++)
            if(s[i].up[j]!=0)
            strcpy(th[num].name,ups[j]),th[num++].num = s[i].up[j];
            sort(th,th+num,cmp);
            cout << num << endl;
            for(j=0;j<num;j++)
            cout << th[j].name << " " << th[j].num << endl;
        }
    }
    return 0;
}

	  	 			    		 	   					 	