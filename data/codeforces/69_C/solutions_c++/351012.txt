#include<string>
#include<vector>
#include<algorithm>
#include<map>
#include<cstring>
#include<cstdio>
using namespace std;
typedef pair<string,int> si;

map<string,int> bag[111];
vector<pair<vector<si>, string> > combi;
char s[11111];
int
main()
{
    int k,n,m,q;
    scanf("%d %d %d %d",&k,&n,&m,&q);

    for(int i = 0; i < n; i ++)
        scanf("%s\n",s);
    for(int i = 0; i < m; i ++){
        scanf("%[^\n]\n",s);
        vector<si> t;
        char *p;
        p = strtok(s, " :,");
        string target = string(p);
        for(int j = 0; p = strtok(NULL, " :,"); j ++){
            string name = string(p);
            p = strtok(NULL, " :,");
            int t1 = atoi(p);
            t.push_back(si(name,t1));
        }
        combi.push_back(make_pair(t,target));
    }
    for(int i = 0; i < q; i ++){
        int tt;
        scanf("%d %s",&tt,s);
        bag[tt][string(s)] ++;
        for(int j = 0; j < combi.size(); j ++){
            bool good = true;
            vector<si> &ind = combi[j].first;;
            for(int k = 0; k < ind.size();  k ++)
                if(bag[tt][ind[k].first] < ind[k].second){
                    good = false; break;
                }
            if(good){
                for(int k = 0; k < ind.size();  k ++){
                    bag[tt][ind[k].first] -= ind[k].second;
                    if(bag[tt][ind[k].first] == 0)
                        bag[tt].erase(ind[k].first);
                }
                bag[tt][combi[j].second] ++;
            }
        }
    }
    for(int i = 1; i <= k; i ++){
        int cnt = 0;
        for(map<string,int>::iterator it = bag[i].begin();
                it != bag[i].end(); it ++)
            if(it->second) cnt ++;
        printf("%d\n",cnt);
        for(map<string,int>::iterator it = bag[i].begin();
                it != bag[i].end(); it ++)
            if(it->second)
            printf("%s %d\n",it->first.c_str(),it->second);
    }
    return 0;
}
