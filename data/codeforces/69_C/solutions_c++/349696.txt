#include <algorithm>
#include <bitset>
#include <cassert>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <iterator>
#include <limits>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;


/* Prewritten code begins */
#define REP(i,n)    for(int i=0; i<(n); ++i)
#define ISS         istringstream
#define FORE(i,c)   for(VAR(i,(c).begin()); i!=(c).end(); ++i)
#define VAR(i,v)    __typeof(v) i=(v)
#define X           first
#define FOR(i,a,b)  for(int i=(a); i<=(b); ++i)
#define Y           second
/* Prewritten code ends */

const int maxL = 111111, maxK = 102 ;
char s[maxL];
#define FG fgets(s,maxL,stdin)
map<string,int> m[maxK];
map<string,int> art[55];
string artN[55];
int main() {
	string nam;
	int k, n, M, q, no;
	FG;
	sscanf(s,"%d %d %d %d",&k,&n,&M,&q);
	REP(i,n) FG;
	REP(i,M) {
		FG;
		for(int j=0;s[j];j++) if(!isalnum(s[j])) s[j] = ' ';
		ISS iss(s);
		iss >> artN[i];
		while(iss >> nam >> no) art[i][nam] += no;
	}
	REP(i,q) {
		FG; ISS iss(s);
		iss >> no >> nam;
		m[no][nam]++;
		REP(j,M) {
			FORE(ii,art[j]) if(m[no][ii->X]<art[j][ii->X]) goto C;
			FORE(ii,art[j]) m[no][ii->X] -= art[j][ii->X];
			m[no][artN[j]]++;
			break;
C:;		}
	}
	FOR(i,1,k) {
		int c = 0;
		FORE(ii,m[i]) if(ii->Y > 0) c++;
		printf("%d\n",c);
		FORE(ii,m[i]) if(ii->Y > 0) printf("%s %d\n",ii->X.c_str(), ii->Y);
	}
	return 0;
}
