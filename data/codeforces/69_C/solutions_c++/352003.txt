#include<map>
#include<string>
#include<vector>
#include<sstream>
#include<iostream>

#define	mp			make_pair
#define	pb			push_back
#define	rep(i,n)	for(int i=0;i<(n);i++)

using namespace std;

int main(){
	int k,n,m,q;	cin>>k>>n>>m>>q;

	string basic[100];
	rep(i,n)	cin>>basic[i];

	string composite[100];
	vector< pair<string,int> > material[100];
	cin.ignore();
	rep(i,m){
		string s;	getline(cin,s);
		rep(j,s.length()) if(s[j]==':' || s[j]==',') s[j]=' ';
		stringstream ss(s);
		ss>>composite[i];
		while(!ss.eof()){
			string name;
			int num;	ss>>name>>num;
			material[i].pb(mp(name,num));
		}
	}

	map<string,int> ally[100];
	rep(i,q){
		int id;
		string art;	cin>>id>>art;
		id--;
		ally[id][art]++;
		rep(j,m){	// mix some basic artifacts
			bool ok=true;
			rep(k,material[j].size()){
				string basname=material[j][k].first;
				int basnum=material[j][k].second;
				if(ally[id][basname]<basnum){ ok=false; break; }
			}

			if(!ok)	continue;

			rep(k,material[j].size()){
				string basname=material[j][k].first;
				int basnum=material[j][k].second;
				ally[id][basname]-=basnum;
			}
			ally[id][composite[j]]++;
			break;
		}
	}

	rep(i,k){
		int cnt=0;
		map<string,int>::iterator it;
		for(it=ally[i].begin();it!=ally[i].end();++it) if(it->second>0) cnt++;
		cout<<cnt<<endl;
		for(it=ally[i].begin();it!=ally[i].end();++it) if(it->second>0) cout<<it->first<<' '<<it->second<<endl;
	}

	return 0;
}
