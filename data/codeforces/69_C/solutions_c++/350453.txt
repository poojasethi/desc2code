#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <complex>
#include <cstring>
#include <cstdlib>
#include <string>
#include <cmath>
#include <queue>
#include <map>
using namespace std;

#define REP(i,n) for(int i=0;i<(int)n;++i)
#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)
#define ALL(c) (c).begin(), (c).end()
const int INF = 1<<30;

int main() {
  int k,n,m,q;
  cin>>k>>n>>m>>q;
  map<string, int> mp;
  vector<int> v[m];
  REP(i,m)
    v[i].resize(n);
  string hoge[n];
  string hoge2[m];
  REP(i,n) {
    string s;
    cin >> s;
    mp[s] = i;
    hoge[i] = s;
  }
  cin.ignore();
  REP(i,m) {
    string line;
    getline(cin,line);
    stringstream ss(line);
    string s;
    ss >> s;
//    cout << s << endl;
    string s1, sn;
    while(ss >> s1 >> sn) {
      if (sn[sn.size()-1] == ',')
        sn = sn.substr(0,sn.size()-1);
      int a = atoi(sn.c_str());
      // cout << s1 << " " << a << endl;
      v[i][mp[s1]] = a;
    }
    hoge2[i] = s.substr(0,s.size()-1);
  }
  map<string, int> mp2[k];
  REP(i,q) {
    int a;
    string s;
    cin >> a >> s;
    a--;
    mp2[a][s]++;
    REP(j,m) {
      bool f = 1;
      REP(l,n)
        if (v[j][l] > mp2[a][hoge[l]])
          f = 0;
      if (f) {
        REP(l,n)
          mp2[a][hoge[l]] -= v[j][l];
        mp2[a][hoge2[j]]++;
        break;
      }
    }
  }
  REP(i,k) {
    vector<pair<string, int> > v;
    FOR(it,mp2[i]){
      if (it->second) {
        v.push_back(*it);
      }
    }
    cout << v.size() << endl;
    FOR(it,v)
      cout << it->first << " " << it->second << endl;
  }
}
