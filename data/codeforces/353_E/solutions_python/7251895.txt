from __future__ import division

def solve(s):
    n = len(s)
    c = s[0]
    lc = 0
    chains = []
    for i in xrange(n):
        if s[i] == c:
            lc += 1
        else:
            chains.append(lc)
            lc = 1
            c = s[i]
    if s[0] == s[-1]: 
        chains[0] += lc
    else:
        chains.append(lc)
    if len(chains) == 1:
        return 1
    #print chains
    twos = []
    threes = 0
    tc = 0
    for c in chains:
        if c == 1:
            tc += 1
        else:
            threes += 1
            if tc != 0:
                twos.append(tc)
            tc = 0
    if chains[0] >= 2 or not twos:
        twos.append(tc)
    else:
        twos[0] += tc
    return threes + sum(t // 2 for t in twos)
        
s = raw_input()
print solve(s)
