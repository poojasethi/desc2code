#include <cstdio>
#include <vector>
#include <list>
#include <algorithm>
#include <string>
#include <map>
#include <iostream>
#include <cstring>
#include <cmath>
#define REP(i,n) for(int i=0; i<(n); i++)
#define X first
#define Y second

using namespace std;

typedef pair<int, int> PII;
typedef long long int ll;

int N;
double T[10005][3];
double D[10005];
double v1,v2;
double P[3];
double pos[3];


double dist(double* A, double* B){
  double res = 0;
  REP(i,3) res += (A[i] - B[i])*(A[i] - B[i]);
  res = sqrt(res);
  return res;
}

double can(double time){  
  double t2 = time;
  int i = 0;
  while(i<N-1 && (time>D[i])){
    time -= D[i];
    i++;
  }
  REP(k,3)
    pos[k] = T[i][k] + (time)*(T[i+1][k] - T[i][k])/D[i];
  if(dist(pos, P)/v1 <= t2) return true;
  else return false;
}

int main(){
  scanf("%d",&N);
  REP(i,N+1){
    scanf("%lf%lf%lf",&T[i][0],&T[i][1],&T[i][2]);
  }
  scanf("%lf%lf",&v1,&v2);
  scanf("%lf%lf%lf",&P[0], &P[1], &P[2]);
  double b = 0.0000001;
  REP(i,N){
    D[i] = dist(T[i], T[i+1])/v2;
    b+=D[i];
  }
  
  if(!can(b)){
    printf("NO\n");
    return 0;
  }
  double a = 0;
  double s;
  while(a<b-0.0000000001){
    s = (a+b)/2;
    if(can(s))b = s;
    else a = s;  
  }
  printf("YES\n%0.8lf\n%0.8lf %0.8lf %0.8lf\n",s,pos[0],pos[1],pos[2]);
}