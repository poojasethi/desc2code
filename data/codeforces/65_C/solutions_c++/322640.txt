#include <iostream>
#include <stdio.h>
#include <math.h>

using namespace std;

const double eps=0.000000000001;

int x[100000],y[100000],z[100000];

double sqr(double x)
{
    return x*x;
}

double dist(double x1,double y1,double z1,double x2,double y2,double z2)
{
    return sqrt(sqr(x1-x2)+sqr(y1-y2)+sqr(z1-z2));
}

int main()
{
   // freopen("in.txt","r",stdin);
    int n,i,vp,vs,px,pz,py,k;
    double l,r,c,sdist;
    scanf("%d",&n);
    n++;
    for (i=1;i<=n;i++)
    {
        scanf("%d %d %d",&x[i],&y[i],&z[i]);
    }
    scanf("%d %d",&vp,&vs);
    scanf("%d %d %d",&px,&py,&pz);
    sdist=0;
    k=0;
    for (i=2;i<=n;i++)
    {
        sdist+=dist(x[i],y[i],z[i],x[i-1],y[i-1],z[i-1]);
        if (dist(x[i],y[i],z[i],px,py,pz)*vs<=sdist*vp)
        {
            k=i-1;
            sdist-=dist(x[i],y[i],z[i],x[i-1],y[i-1],z[i-1]);
            break;
        }
    }
    if (k==0)
    {
        printf("NO");
    }else
    {
      l=0;
      r=1;
      while (fabs(l-r)>=eps)
      {
          c=(l+r)/2;
          double q=dist(x[k]+(x[k+1]-x[k])*c,y[k]+(y[k+1]-y[k])*c,z[k]+(z[k+1]-z[k])*c,px,py,pz)*vs;
          if (q<=(sdist+dist(x[k]+(x[k+1]-x[k])*c,y[k]+(y[k+1]-y[k])*c,z[k]+(z[k+1]-z[k])*c,x[k],y[k],z[k]))*vp)
            r=c;else
            l=c;
      }

    printf("YES\n");
    c=l;
    printf("%f\n",dist(x[k]+(x[k+1]-x[k])*c,y[k]+(y[k+1]-y[k])*c,z[k]+(z[k+1]-z[k])*c,px,py,pz)/vp);
    printf("%f %f %f\n",x[k]+(x[k+1]-x[k])*c,y[k]+(y[k+1]-y[k])*c,z[k]+(z[k+1]-z[k])*c);
    }
}
