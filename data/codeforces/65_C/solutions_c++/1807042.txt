#include <cstdio>
#include <cmath>

using namespace std;

struct point
{
  double x,y,z;
};

const double zero=0.0000000001;
point p[10005],o,e,ans;
double s[10005];
int n,vs,vp;

double dis(point a,point b)
{
  double xd=a.x-b.x,yd=a.y-b.y,zd=a.z-b.z;
  return sqrt(xd*xd+yd*yd+zd*zd);
}

bool check(double t)
{
  int i=0;
  while(t*vs>s[i+1])
    ++i;
  e.x=p[i].x+(p[i+1].x-p[i].x)*((t*vs-s[i])/(s[i+1]-s[i]));
  e.y=p[i].y+(p[i+1].y-p[i].y)*((t*vs-s[i])/(s[i+1]-s[i]));
  e.z=p[i].z+(p[i+1].z-p[i].z)*((t*vs-s[i])/(s[i+1]-s[i]));
  return t*vp-dis(o,e)>=zero;
}

int main(void)
{
  scanf("%d",&n);
  for(int i=0;i<=n;++i)
    scanf("%lf %lf %lf",&p[i].x,&p[i].y,&p[i].z);
  scanf("%d %d",&vp,&vs);
  scanf("%lf %lf %lf",&o.x,&o.y,&o.z);
  s[0]=0;
  for(int i=1;i<=n;++i)
    s[i]=s[i-1]+dis(p[i-1],p[i]);
  if(dis(o,p[n])-vp*(s[n]/vs)>zero)
  {
    printf("NO\n");
    return 0;
  }
  printf("YES\n");
  ans=p[n];
  double l=0,r=s[n]/vs;
  while(r-l>zero)
  {
    double mid=(l+r)/2;
    if(check(mid))
    {
      ans=e;
      r=mid;
    }
    else
      l=mid;
  }
  printf("%.8lf\n",r);
  printf("%.8lf %.8lf %.8lf\n",ans.x,ans.y,ans.z);
  return 0;
}