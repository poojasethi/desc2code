#include<iostream>
#include<cstdio>
#include<cmath>
#define sqr(o) ((o)*(o))

using namespace std;

const long double Eps = 1e-12;
const int maxn = 10010;

struct point {
	long double x , y , z;
};
int n;
point data[maxn] , O;
long double Vs , Vp;

long double dis( point A , point B ) {
	return sqrt( sqr( A.x - B.x ) + sqr( A.y - B.y ) + sqr( A.z - B.z ) );
}

void input() {
	scanf( "%d" , &n );
	for ( int i = 0 ; i <= n ; i++ )
		cin >> data[i].x >> data[i].y >> data[i].z;
	cin >> Vp >> Vs;
	cin >> O.x >> O.y >> O.z;
}

point caln( int i , long double mid ) {
	point P = data[i];
	P.x += ( data[i + 1].x - data[i].x ) * mid;
	P.y += ( data[i + 1].y - data[i].y ) * mid;
	P.z += ( data[i + 1].z - data[i].z ) * mid;
	return P;
}

void solve() {
	long double T = 0;
	for ( int i = 0 ; i < n ; i++ ) {
		long double s = 0 , t = 1;
		while ( t - s > Eps ) {
			long double mid = ( s + t ) / 2;
			point P = caln( i , mid );
			if ( dis( O , P ) / Vp < T + dis( data[i] , P ) / Vs + Eps ) t = mid;
				else s = mid;
		}
		
		point P = caln( i , t );
		if ( dis( O , P ) / Vp < T + dis( data[i] , P ) / Vs + Eps ) {
			printf( "YES\n" );
			printf( "%.8lf\n" , ( double ) ( dis( O , P ) / Vp ) );
			printf( "%.8lf %.8lf %.8lf\n" , ( double ) P.x , ( double ) P.y , ( double ) P.z );
			return;
		}
		
		T += dis( data[i] , data[i + 1] ) / Vs;
	}
	
	printf( "NO\n" );
}

int main() {
	input();
	solve();
	
	return 0;
}
