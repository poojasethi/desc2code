#include <cstdio>
#include <iostream>
#include <cstring>
#include <cctype>
#include <cmath>
#include <stack>
#include <string>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
using namespace std;
#define INF 0x3f3f3f3f
#define REP(i,n) for(int i=0; i<(int)n; i++)
typedef long long int64;

struct pt {
	long double x,y,z;
	pt(long double x=0, long double y=0, long double z=0):x(x),y(y),z(z) {}
};
long double sqr(long double x) { return x*x; }

long double d(pt a, pt b) {
	return sqrt(sqr(a.x-b.x)+sqr(a.y-b.y)+sqr(a.z-b.z));
}

pt p[10100], ph;

int cmp(long double a, long double b) {
	if (fabs(a-b)<1e-11) return 0;
	if (a<b) return -1;
	return 1;
}

pt gp(int i, int j, long double me) {
	return pt(p[i].x*(1-me)+p[j].x*me,p[i].y*(1-me)+p[j].y*me,
		p[i].z*(1-me)+p[j].z*me);
}

int main() {
	int n;

	while (scanf("%d",&n)==1) {
		long double vp,vs;
		REP(i,n+1)
			cin >> p[i].x >> p[i].y >> p[i].z;

		cin >> vp >> vs;
		cin >> ph.x >> ph.y >> ph.z;

		long double act=0;
		bool ok;
		REP(i,n) {
			long double es=0,di=1;
			long double st=d(p[i],p[i+1])/vs;
			ok=0;

			REP(k,60) {
				long double me=(es+di)/2;
				pt pm = gp(i,i+1,me);

				if (cmp(d(pm,ph)/vp, act+st*me)<=0) ok=1, di=me;
				else es=me;
			}

			if (ok) {
				printf("YES\n");
				printf("%.10lf\n",(double)(act+st*(es+di)/2));
				pt pm = gp(i,i+1,(es+di)/2);
				printf("%.10lf %.10lf %.10lf\n",(double)pm.x,(double)pm.y,(double)pm.z);
				break;
			}
			act+=st;
		}
		if (!ok) printf("NO\n");
	}
	return 0;
}

