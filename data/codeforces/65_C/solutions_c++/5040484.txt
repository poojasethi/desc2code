#include<cstdio>
#include<algorithm>
#include<cmath>
using namespace std;
double EPS = 1e-12;
double sgn(double x){
    if(x < EPS && x > -EPS) return 0;
    else return x < 0 ? -1 : 1;
}
typedef struct point{
    double x,y,z;
    point(){ x = y = z = 0;}
    point(double _x,double _y,double _z){ x = _x, y = _y, z = _z; }
    void read(){ scanf("%lf%lf%lf",&x,&y,&z); }
    void print(){ printf("%.10lf %.10lf %.10lf\n",x,y,z); }
}Point;
Point p[10001],h;
double vs,vp,t;
int n;
double dist(point p1,point p2){
    return sqrt((p1.x-p2.x)*(p1.x-p2.x)+(p1.y-p2.y)*(p1.y-p2.y)+(p1.z-p2.z)*(p1.z-p2.z));
}
int main(){
    scanf("%d",&n); t = 0.0;
    for(int i=0;i<=n;i++)
        p[i].read();
    scanf("%lf%lf",&vp,&vs);
    h.read();
    for(int i=0;i<n;i++){
        double x = dist(p[i],p[i+1])/vs, l = t, r = t + x;
        if(sgn(r*vp-dist(p[i+1],h)) >= 0){
            int ct = 0;
            double m;
            while(ct < 100){
                m = (l+r)/2;
                if(sgn(dist(point(p[i].x+(p[i+1].x-p[i].x)*(m-t)/x,p[i].y+(p[i+1].y-p[i].y)*(m-t)/x,p[i].z+(p[i+1].z-p[i].z)*(m-t)/x),h)-m*vp) > 0) 
                    l = m;
                else 
                    r = m;
                ct++;
            }
            printf("YES\n");
            printf("%.10lf\n",l);
            point(p[i].x+(p[i+1].x-p[i].x)*(l-t)/x,p[i].y+(p[i+1].y-p[i].y)*(l-t)/x,p[i].z+(p[i+1].z-p[i].z)*(l-t)/x).print();
            goto ou;
        }
        else
            t = r;
    }
    printf("NO\n");
    ou:;
    return 0;
}