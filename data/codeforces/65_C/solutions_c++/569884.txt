#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <numeric>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		int
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())

double low,high,d[3],mid,dis,t;
int main(){
	li n;
	cin>>n;
	vector<vector<double> > point(n+1,vector<double>(3,0));
	rep(i,n+1)rep(j,3) cin>>point[i][j];
	double va,vb,p[3];
	cin>>va>>vb>>p[0]>>p[1]>>p[2];
	double sum=0;
	rep(i,n){
#define distance(a,A) sqrt(((a[0])-(A[0]))*((a[0])-(A[0]))+((a[1])-(A[1]))*((a[1])-(A[1]))+((a[2])-(A[2]))*((a[2])-(A[2])))
		dis=distance(point[i+1],p);
		t=dis/va;
		dis=distance(point[i],point[i+1]);
		sum+=dis/vb;
		if(sum+0.00000001<=t) continue;
		sum-=dis/vb;
		low=0,high=1.0;
		rep(j,100){
			mid=(low+high)/2.0;
			rep(k,3) d[k]=mid*point[i][k]+(1-mid)*point[i+1][k];
			dis=distance(d,p);
			t=dis/va;
			dis=distance(point[i],d);
			if(t<sum+dis/vb) low=mid;
			else high=mid;
		}
		cout<<"YES"<<endl;
		printf("%.20lf\n%.20lf %.20lf %.20lf\n",t,d[0],d[1],d[2]);
		return 0;
	}
	cout<<"NO"<<endl;
}
