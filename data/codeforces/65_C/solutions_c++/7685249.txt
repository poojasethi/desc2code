#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#define N 10010
#define db double
#define eps (1e-10)
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	db x,y,z;
	inline void read() {
		scanf("%lf%lf%lf",&x,&y,&z);
	}
	inline void print() {
		printf("%.12lf %.12lf %.12lf\n",x,y,z);
	}
	inline ww operator - (const ww &A) {
		return (ww){x-A.x,y-A.y,z-A.z};
	}
	inline ww operator + (const ww &A) {
		return (ww){x+A.x,y+A.y,z+A.z};
	}
	inline void operator /= (const db &A) {
		x/=A,y/=A,z/=A;
	}
	inline void operator *= (const db &A) {
		x*=A,y*=A,z*=A;
	}
	inline db com() {
		return x*x+y*y+z*z;
	}
	inline db suan(const ww &A) {
		ww B={x-A.x,y-A.y,z-A.z};
		return sqrt(B.com());
	}
} a[N],O,W;
int i,j,k,n,m;
db vp,vs,ti;
inline bool ju(int x,db L,db R) {
	ww A=W;
	A*=R;
	A=A+a[x];
	db t=O.suan(A)/vp;
	return t-eps<L+R;
}
inline void work(int x,db L,db R) {
	W=a[x+1]-a[x];
	W/=R;
	db l=L,r=L+R,mid;
	for (;l+1e-10<r;) {
		mid=(l+r)/2;
		if (ju(x,L,mid-L)) r=mid;
		else l=mid;
	}
	printf("YES\n%.12lf\n",r);
	W*=r-L;
	W=W+a[x];
	W.print();
	exit(0);
}
int main() {
	scanf("%d",&n);
	For(i,1,n+1) a[i].read();
	scanf("%lf%lf",&vp,&vs);
	O.read();
	For(i,1,n) {
		db t=a[i].suan(a[i+1])/vs;
		db r=O.suan(a[i+1])/vp;
		if (r-eps<ti+t) work(i,ti,t);
		ti+=t;
	}
	printf("NO\n");
	return 0;
}
