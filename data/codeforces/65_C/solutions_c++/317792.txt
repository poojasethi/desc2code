#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <math.h>
#include <string>
#include <string.h>
#include <stdio.h>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#pragma comment (linker,"/STACK:256000000")
using namespace std;
struct pnt{
	double x,y,z;
};
const int mxx = 10010;
pnt a[mxx];
double dst(pnt a, pnt b){
	return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y) + (a.z-b.z)*(a.z-b.z));
}
double d[mxx];
int main()
{
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	int i,j,n;
	cin >> n;
	for (i=0;i<=n;++i) {
		cin >> a[i].x >> a[i].y >> a[i].z;
	}
	double vp, vs;
	cin >> vp >> vs;
	pnt p, c;
	cin >> p.x >> p.y >> p.z;
	d[0] = 0;
	double tmp, add, dp, ds, ts, tp, l, r, q;
	const double eps = 1e-10;
	for (i=1;i<=n;++i) {
		d[i] = d[i-1]+dst(a[i],a[i-1]);
		tmp = dst(p, a[i]);
		ts = d[i] / vs;
		tp = tmp / vp;
		if (tp - ts <= eps) {
			l = 0;
			r = 1;
			while (r - l > eps) {
				q = (l + r) / 2.0;
				c.x = a[i-1].x + q * (a[i].x - a[i-1].x);
				c.y = a[i-1].y + q * (a[i].y - a[i-1].y);
				c.z = a[i-1].z + q * (a[i].z - a[i-1].z);
				ds = d[i-1] + dst(c, a[i-1]);
				ts = ds / vs;

				dp = dst(p, c);
				tp = dp / vp;
				if (ts  - tp < -eps) {
					l = q + eps;
				}
				else if (ts - tp > eps) {
					r = q - eps;
				}
				else {
					break;
				}
			}
			printf("YES\n");
			printf("%.10lf\n",tp);
			printf("%.10lf %.10lf %.10lf",c.x,c.y,c.z);
			return 0;
		}
	}
	printf("NO");

	return 0;
}