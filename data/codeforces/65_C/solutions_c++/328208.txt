//In the name of Allah
//
//
#include <iostream>
#include <cmath>
#include <iomanip>
using namespace std;
#define sqr(a) ((a)*(a))
struct point
{
	point() {}
	point(double _x,double _y,double _z){ x=_x; y=_y; z=_z;}
	double x,y,z;
};
const double eps=1e-11;
const int MN=1000*10+1000;
point list[MN];
point s;
int n;
double bs,hs;
double dis(const point & a,const point & b)
{
	return sqrt(sqr(a.x-b.x)+sqr(a.y-b.y)+sqr(a.z-b.z));
}
void print(point a)
{
	cout<<fixed<<setprecision(8)<<dis(a,s)/hs<<endl;
	cout<<fixed<<setprecision(8)<<a.x<<" "<<a.y<<" "<<a.z<<endl;
}
bool operator == (const point & a,const point & b)
{
	if (abs(a.x-b.x)<=eps && abs(a.y-b.y)<=eps && abs(a.z-b.z)<=eps)
		return 1;
	return 0;
}
point mid(point a,point b)
{
	return point((a.x+b.x)/2,(a.y+b.y)/2,(a.z+b.z)/2);
}
double temp=0;
point seg;
point bsc(point bss,point bse)
{
	while (1)
	{
		if (bss==bse)
			return mid(bss,bse);
		point m=mid(bss,bse);
		double t=temp+dis(seg,m)/bs;
		double t2=dis(s,m)/hs;
		if (t2<=t+eps)
			bse=m;
		else
			bss=m;
	}
}
double upnow=0;
int main()
{
	ios::sync_with_stdio(false);
	cin>>n;
	n++;
	for (int i=0;i<n;i++)
		cin>>list[i].x>>list[i].y>>list[i].z;
	cin>>hs>>bs;
	cin>>s.x>>s.y>>s.z;
	if (s==list[0])
	{
		cout<<"YES"<<endl;
		print(s);
		return 0;
	}
	for (int i=1;i<n;i++)
	{
		temp=upnow;
		upnow+=dis(list[i-1],list[i])/bs;
		double t2=dis(s,list[i])/hs;
		if (t2<=upnow+eps)
		{
			seg=list[i-1];
			cout<<"YES"<<endl;
			print(bsc(list[i-1],list[i]));
			return 0;
		}
	}
	cout<<"NO"<<endl;
	return 0;
}
