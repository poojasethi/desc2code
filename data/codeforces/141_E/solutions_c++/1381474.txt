#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
int n,m,cnt,f[1010],kind[100010],u[100010],v[100010],p[1010],ans,need;
char ch[10]; 
int find(int x){
    if(f[x]!=x)f[x]=find(f[x]);
    return f[x];
}
bool link(int x,int y){
    x=find(x);y=find(y);
    if(x==y)return 0;
    ++cnt;f[x]=y;
    return 1;
}
int main(){
    scanf("%d%d",&n,&m);
    if((n&1)==0){
        printf("-1\n");
        return 0;
    }
    for(int i=1;i<=n;++i)f[i]=i;
    for(int i=1;i<=m;++i){
        scanf("%d%d%s",&u[i],&v[i],ch);
        if(ch[0]=='S'){
            kind[i]=1;
            link(u[i],v[i]);
        }
    }
    if(cnt<(n>>1)){
        printf("-1\n");
        return 0;
    }
    for(int i=1;i<=m;++i)
        if(link(u[i],v[i]))
            p[++ans]=i;
    if(cnt<n-1){
        printf("-1\n");
        return 0;
    }
    for(int i=1;i<=n;++i)f[i]=i;
    need=n>>1;
    for(int i=1;i<=ans;++i){
        link(u[p[i]],v[p[i]]);
        --need;
    }
    for(int i=1;i<=m;++i)
        if(!kind[i]&&link(u[i],v[i])){
            p[++ans]=i;
            --need;
            if(!need)break;
        }
    if(need){
        printf("-1\n");
        return 0;
    }
    for(int i=1;i<=m;++i)
        if(kind[i]&&link(u[i],v[i]))
            p[++ans]=i;
    printf("%d\n",n-1);
    for(int i=1;i<n;++i)
        printf("%d ",p[i]);
    return 0;
}
