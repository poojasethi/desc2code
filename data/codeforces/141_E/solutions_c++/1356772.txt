#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

class DJS{
	public:
		int g[1005];
		void init(int n) { for(int i=1;i<=n;i++) g[i]=i; }
		int FIND(int x) { return g[x]==x?x:g[x]=FIND(g[x]); }
		void UNION(int x, int y) { g[FIND(x)] = FIND(y); }
} S, M, ALL;

int x[100005], y[100005];
char c[100005][2];
int main(void) {
	int n, m;
	scanf("%d%d", &n, &m);
	S.init(n);
	M.init(n);
	ALL.init(n);
	for(int i=0;i<m;i++) {
		scanf("%d%d%s", &x[i], &y[i], c[i]);
		if(c[i][0]=='S') S.UNION(x[i], y[i]);
		if(c[i][0]=='M') M.UNION(x[i], y[i]);
	}
	if(n%2==0) { puts("-1"); return 0; }
	vector<int> SS, MM;
	for(int i=0;i<m;i++) {
		if(c[i][0]=='S' && M.FIND(x[i]) != M.FIND(y[i])) {
			SS.push_back(i); ALL.UNION(x[i],y[i]); M.UNION(x[i], y[i]); }
		if(c[i][0]=='M' && S.FIND(x[i]) != S.FIND(y[i])) {
			MM.push_back(i); ALL.UNION(x[i],y[i]); S.UNION(x[i], y[i]); }
	}
	for(int i=0;i<m;i++) {
		if(ALL.FIND(x[i]) != ALL.FIND(y[i])) {
			if(c[i][0]=='S' && (int)SS.size() < (n-1)/2) { SS.push_back(i); ALL.UNION(x[i], y[i]); }
			if(c[i][0]=='M' && (int)MM.size() < (n-1)/2) { MM.push_back(i); ALL.UNION(x[i], y[i]); }
		}
	}
	if(SS.size() != MM.size()) puts("-1");
	else {
		for(int i=1;i<=n;i++) if(ALL.FIND(i) != ALL.FIND(1)) { puts("-1"); return 0; }
		printf("%d\n", SS.size() + MM.size());
		for(int i=0;i<(int)SS.size();i++)
			printf("%d ", SS[i]+1);
		for(int i=0;i<(int)MM.size();i++)
			printf("%d ", MM[i]+1);
		puts("");
	}
	return 0;
}

