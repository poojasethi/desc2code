#include <bits/stdc++.h>
using namespace std;
const int maxe = 100000 + 10;
const int maxv = 1000 + 10;
int parent[maxv];
int Set(int n)
{
	if (parent[n] == n)
		return n;
	return parent[n] = Set(parent[n]);
}
int main()
{
	
	int n , m;
	scanf("%i%i", &n, &m);
	vector < pair<pair <int, int> , bool> > v;
	for (int i = 0; i < m; i++)
	{
		int a, b;
		char s[2];
		scanf("%i%i%s", &a, &b, s);
		if (s[0] == 'S')
			v.push_back(make_pair(make_pair(a - 1, b - 1), true));
		else
			v.push_back(make_pair(make_pair(a - 1, b - 1), false));
	}
	for (int i = 0; i < n; i++)
		parent[i] = i;
	for (int i = 0; i < m; i++)
		if (!v[i].second)
			if (Set(v[i].first.first) != Set(v[i].first.second))
				parent[Set(v[i].first.first)] = Set(v[i].first.second);
	bool used[maxe] = {false};
	int cnt = 0;
	for (int i = 0; i < m; i++)
		if (v[i].second)
			if (Set(v[i].first.first) != Set(v[i].first.second))
			{
				parent[Set(v[i].first.first)] = Set(v[i].first.second);
				used[i] = true;
				cnt++;
			}
	if (cnt * 2 > n - 1 || (n % 2 == 0))
	{
		printf("-1\n");
		return 0;
	}
	for (int i = 0; i < n; i++)
		parent[i] = i;
	for (int i = 0; i < m; i++)
		if (used[i])
		{
			parent[Set(v[i].first.first)] = Set(v[i].first.second);
		}
	for (int i = 0; i < m && cnt * 2 < n - 1; i++)
		if (v[i].second)
			if (Set(v[i].first.first) != Set(v[i].first.second))
			{
				parent[Set(v[i].first.first)] = Set(v[i].first.second);
				used[i] = true;
				cnt++;
			}
	if (2 * cnt < n - 1)
	{
		printf("-1\n");
		return 0;
	}
	for (int i = 0; i < m; i++)
		if (!v[i].second)
		{
			if (Set(v[i].first.first) != Set(v[i].first.second))
			{
				parent[Set(v[i].first.first)] = Set(v[i].first.second);
				used[i] = true;
				cnt++;
			}
		}
	printf("%i\n", cnt);
	for (int i = 0, j = 0; i < m; i++)
		if (used[i])
		{
			j++;
			printf("%i", i + 1);
			if (j < m)
				printf(" ");
			else
				printf("\n");
		}
}
