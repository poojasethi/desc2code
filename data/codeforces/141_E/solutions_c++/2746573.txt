#include <cstdio>

int n,m;
typedef struct {
	int s;
	int t;
	int ps;
}roads;
roads road[100001];
int uf[1001];
int getpa(int a) {
	if(uf[a]==a) return a;
	uf[a]=getpa(uf[a]);
	return uf[a];
}
void comb(int a,int b) {
	uf[getpa(a)]=getpa(b);
}
int need[100001];
int main() {
	scanf("%d%d",&n,&m);
	for(int i=0;i<m;i++) {
		char reads[10];
		scanf("%d%d",&road[i].s,&road[i].t);
		scanf("%s",reads);
		if(reads[0]=='S') {
			road[i].ps=0;
		} else {
			road[i].ps=1;
		}
	}
	if((n-1)%2==1) {
		printf("-1\n");
		return 0;
	}
	for(int i=1;i<=n;i++) uf[i]=i;
	for(int i=0;i<m;i++) comb(road[i].s,road[i].t);
	for(int i=1;i<=n-1;i++) if(getpa(i)!=getpa(i+1)) {
		printf("-1\n");
		return 0;
	}
	for(int i=1;i<=n;i++) uf[i]=i;
	for(int i=0;i<m;i++) if(road[i].ps) comb(road[i].s,road[i].t);
	int needc=0;
	for(int i=0;i<m;i++) {
		if(road[i].ps==0) {
			if(getpa(road[i].s)!=getpa(road[i].t)) {
				need[i]=1;
				comb(road[i].s,road[i].t);
				needc++;
			}
		}
	}
	if(needc>(n-1)/2) {
		printf("-1\n");
		return 0;
	}
	for(int i=1;i<=n;i++) uf[i]=i;
	for(int i=0;i<m;i++) if(need[i]) comb(road[i].s,road[i].t);
	for(int i=0;i<m;i++) if(road[i].ps==0) {
		if(needc<(n-1)/2&&getpa(road[i].s)!=getpa(road[i].t)) {
			need[i]=1;
			comb(road[i].s,road[i].t);
			needc++;
		}
	}
	if(needc<(n-1)/2) {
		printf("-1\n");
		return 0;
	}
	for(int i=0;i<m;i++) if(road[i].ps) {
		if(getpa(road[i].s)!=getpa(road[i].t)) {
			need[i]=1;
			comb(road[i].s,road[i].t);
		}
	}
	printf("%d\n",n-1);
	int notfst=0;
	for(int i=0;i<m;i++) if(need[i]) {
		if(notfst) printf(" ");
		notfst=1;
		printf("%d",i+1);
	}
	printf("\n");
	return 0;
}
