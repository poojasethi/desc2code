# this problem seems that the subproblems are not independent
# it is hard to find the relationship between the problem and its subproblems
# first we can abstrct this matrix into two arrays, blcak array and white array
# the problems turns into finding the change point
n, m, x, y = map(int, raw_input().split())
black = [0] * (m+1)
white = [0] * (m+1)

for i in xrange(n):
	line = raw_input()
	for j,v in enumerate(line):
		if v == '#':
			black[j+1] += 1
		else:
			white[j+1] += 1

for i  in xrange(1,m+1):
	black[i] += black[i-1]
	white[i] += white[i-1]
dp =[[n*m] *(m+1), [n*m] *(m+1)]
dp[0][0] = 0
dp[1][0] = 0

#dp[0][i] stands for the last element i is white with length (x,y)
# for i in xrange(1,x+1):
# 	dp[0][i] = black[i-1]
# 	dp[1][i] = white[i-1]

for i in xrange(1,m+1):
	p = x
	# dp[0][i] = dp[1][i-p] + black[i] - black[i-p]
	# dp[1][i] = dp[0][i-p] + white[i] - white[i-p]
	

	while p <= y and i - p >= 0:
	    dp[0][i] = min(dp[0][i],dp[1][i-p] + black[i] - black[i-p])
	    dp[1][i] = min(dp[1][i],dp[0][i-p] + white[i] - white[i-p])
	    p += 1

print min(dp[1][m],dp[0][m])


