#include<stdio.h>
#include<string.h>
char Q[2000][2001];
int A[2000][2000];
int B[2000][2000];
int main(){
	int n, m;
	while (scanf("%d%d", &n, &m) == 2){
		memset(A, 0, sizeof(A));
		memset(B, 0, sizeof(B));
		for (int i = 0; i < n; i++)
			scanf("%s", Q[i]);
		int L = 2e9, R = 0, T = 0, D = 2e9;
		int sum = 0;
		for (int i = 0; i < n; i++){
			for (int j = 0; j < m; j++){
				if (j - 1 >= 0)
					A[i][j] = A[i][j - 1];
				if (i - 1 >= 0)
					B[i][j] = B[i - 1][j];
				if (Q[i][j] == 'w'){
					if (L > j)	L = j;
					if (j > R)	R = j;
					if (i > T)	T = i;
					if (D > i)	D = i;
					sum++;
					A[i][j]++;
					B[i][j]++;
				}
			}
		}
		bool found = false;
		int S = R - L > T - D ? R - L : T - D;
		if (S == 0)
			found = true;
		for (int i = 0; i < n &&!found; i++){
			for (int j = 0; j < m&&!found; j++){
				if (i + S < n&&j + S < m){
					int tmp = A[i][j + S] + A[i + S][j + S] + B[i + S][j] + B[i + S][j + S];
					if (j - 1 >= 0)	tmp -= A[i][j - 1] + A[i + S][j - 1];
					if (i - 1 >= 0)	tmp -= B[i - 1][j] + B[i - 1][j + S];
					if (Q[i][j] == 'w')	tmp--;
					if (Q[i][j + S] == 'w')	tmp--;
					if (Q[i + S][j] == 'w')	tmp--;
					if (Q[i + S][j + S] == 'w')	tmp--;
					if (tmp == sum){
						found = true;
						for (int k = i; k <= i + S; k++){
							if (Q[k][j] == '.')
								Q[k][j] = '+';
							if (Q[k][j + S] == '.')
								Q[k][j + S] = '+';
						}
						for (int k = j; k <= j + S; k++){
							if (Q[i][k] == '.')
								Q[i][k] = '+';
							if (Q[i + S][k] == '.')
								Q[i + S][k] = '+';
						}
					}
				}
			}
		}
		if (!found)
			puts("-1");
		else{
			for (int i = 0; i < n; i++)
				printf("%s\n", Q[i]);
		}
		
	}
	return 0;
}