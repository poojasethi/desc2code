#include <iostream>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <utility>
#include <algorithm>
#include <cmath>

using namespace std;

int n,m,l=2001,r=-1,u=2001,d=-1,s;
char b[2000][2000];
vector<pair<int,int> > v;

bool check(int i, int j) {
	if (i+s > n || j+s > m) return false;
	for (int k = 0; k < v.size(); k++) {
		bool on = false;
		if (v[k].first == i || v[k].first == i+s-1)
			on = (v[k].second >= j) && (v[k].second < j+s);
		if (v[k].second == j || v[k].second == j+s-1)
			on = (v[k].first >= i) && (v[k].first < i+s);
		if (!on) return false;
	}
	return true;
}

void fill(int row, int col) {
	for (int i = 0; i < s; i++) {
		if (b[row][col+i] == '.') b[row][col+i] = '+';
		if (b[row+s-1][col+i] == '.') b[row+s-1][col+i] = '+';
		if (b[row+i][col] == '.') b[row+i][col] = '+';
		if (b[row+i][col+s-1] == '.') b[row+i][col+s-1] = '+';
	}
}

void print() {
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) cout << b[i][j];
		cout << "\n";
	}
}

int main() {
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		cin >> b[i];
		for (int j = 0; j < m; j++) {
			if (b[i][j]=='w') {
				l = min(l,j);
				r = max(r,j);
				u = min(u,i);
				d = max(d,i);
				v.push_back(make_pair(i,j));
			}
		}
	}
	s = max(r-l+1,d-u+1);
	if (s > n || s > m) {
		cout << -1;
		return 0;
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			if (b[i][j]=='w' && !(i==u || i==d || j==l || j==r)) {
				cout << -1;
				return 0;
			}
		}
	}
	for (int i = u; i >= 0; i--) {
		for (int j = l; j >= 0; j--) {
			if (check(i,j)) {
				fill(i,j);
				print();
				return 0;
			}
		}
	}
	cout << -1;
	return 0;
}