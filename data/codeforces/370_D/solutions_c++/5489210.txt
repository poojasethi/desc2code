#include <cstdio>
#include <algorithm>
#include <vector>

using namespace std;

#define all(a) (a).begin(),(a).end()
#define pb push_back
#define sz(a) ((int)(a).size())
#define mp make_pair

typedef pair<int,int> pint;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;


#define MAX_N 2005

int n,m,dp[MAX_N][MAX_N];
char screen[MAX_N][MAX_N];

int query(int a, int b, int s)
{
	if (s<=0) return 0;
	return (dp[a+s-1][b+s-1]-dp[a-1][b+s-1]-dp[a+s-1][b-1]+dp[a-1][b-1]);
}

int main()
{
	scanf("%d %d",&n,&m);
	char buf[2005];
	int maxx=0,minx=m,maxy=0,miny=n;
	int nw=0;
	for (int i=1; i<=n; i++)
	{
		scanf("%s",buf);
		for (int j=1; j<=m; j++)
		{
			dp[i][j]=(buf[j-1]=='w')+dp[i-1][j]+dp[i][j-1]-dp[i-1][j-1];
			screen[i][j]=buf[j-1];
			if (buf[j-1]=='w')
				maxx=max(maxx,j),
				minx=min(minx,j),
				maxy=max(maxy,i),
				miny=min(miny,i),
				nw++;
		}
	}
	int size=1+max(maxx-minx,maxy-miny);
	for (int i=1; i+size-1<=n; i++)
		for (int j=1; j+size-1<=m; j++)
			if (nw==query(i,j,size)&&!query(i+1,j+1,size-2))
			{
				for (int k=0; k<size; k++)
				{
					if (screen[i+k][j]!='w')
						screen[i+k][j]='+';
					if (screen[i+k][j+size-1]!='w')
						screen[i+k][j+size-1]='+';
					if (screen[i][j+k]!='w')
						screen[i][j+k]='+';
					if (screen[i+size-1][j+k]!='w')
						screen[i+size-1][j+k]='+';
				}
				for (i=1; i<=n; i++,printf("\n"))
					for (j=1; j<=m; j++)
						putchar(screen[i][j]);
				return 0;
			}
	printf("-1\n");
	return 0;
}
