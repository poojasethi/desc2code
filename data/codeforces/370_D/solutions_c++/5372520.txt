#include <iostream>
#include <cstdio>

using namespace std;

const int maxn = 2111;

int n, m, x2, y2, x, y, len, cnt, d[maxn][maxn];
char ch, a[maxn][maxn];

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	#ifndef ONLINE_JUDGE
		freopen("a.in", "r", stdin);
		freopen("a.out", "w", stdout);
	#endif

	cin >> n >> m;
	x2 = x = maxn;
	for (int i = 1; i <= n; ++i)
		for (int j = 1; j <= m; ++j) {
			cin >> ch;
			while (ch != '.' && ch != 'w')
				cin >> ch;
			a[i][j] = ch;
			d[i][j] = d[i - 1][j] + d[i][j - 1] - d[i - 1][j - 1] + (ch == 'w');
			cnt += ch == 'w';
			if (ch == 'w') {
				x2 = min(x2, i);
				y2 = max(y2, i);
				x = min(x, j);
				y = max(y, j);
			}
		}
	if (cnt == 1) {
		for (int i = 1; i <= n; ++i) {
			for (int j = 1; j <= m; ++j)
				cout << a[i][j];
			cout << '\n';
		}	
		return 0;
	}
	len = max(y2 - x2, y - x) + 1;
	for (int i = len; i <= n; ++i)
		for (int j = len; j <= m; ++j)
			if (d[i][j] - d[i - len][j] - d[i][j - len] + d[i - len][j - len] == cnt && d[i - 1][j - 1] - d[i - len + 1][j - 1] - d[i - 1][j - len + 1] + d[i - len + 1][j - len + 1] == 0) {
				for (int k = i; k > i - len; --k)
					if (a[k][j] != 'w')
						a[k][j] = '+';
				for (int k = i; k > i - len; --k)
					if (a[k][j - len + 1] != 'w')
						a[k][j - len + 1] = '+';
				for (int k = j; k > j - len; --k)
					if (a[i][k] != 'w')
						a[i][k] = '+';
				for (int k = j; k > j - len; --k)
					if (a[i - len + 1][k] != 'w')
						a[i - len + 1][k] = '+';
				for (int i = 1; i <= n; ++i) {
					for (int j = 1; j <= m; ++j)
						cout << a[i][j];
					cout << '\n';
				}	
				return 0;
			}
	cout << -1;
	return 0;
}
