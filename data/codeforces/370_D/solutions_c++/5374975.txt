#include<cstdio>
#include<iostream>
#include<cmath>
#include<cstring>
using namespace std;

#define MAXN 2010

char map[MAXN][MAXN];

int n, m;

bool judge(int l, int r, int t, int b)
{
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < m; ++j)
			if (map[i][j] == 'w')
			{
				if (i < t || i > b || j < l || j > r) return false;
				if (i > t && i < b && j > l && j < r) return false;
				}
	for (int i = 0; i < n; ++i)
	{
		for (int j = 0; j < m; ++j)
			if (((i == b || i == t)&&(j >= l && j <= r)) || ((j == l || j == r)&&(i >= t && i <= b)))
			{
				if (map[i][j] == '.') printf("+"); else printf("%c", map[i][j]);
			} else printf("%c", map[i][j]);
		printf("\n");
	}
	return true;		
	}

int main()
{
	scanf("%d%d", &n, &m);
	for (int i = 0; i < n; ++i)
		scanf("%s", map[i]);
	int left = m, right = -1, bottom = -1, top = n;
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < m; ++j)
			if (map[i][j] == 'w')
				{
					left = min(left, j);
					right = max(right, j);
					bottom = max(bottom, i);
					top = min(top, i);
					}
	int height = bottom - top, width = right - left;
	int d = max(height, width);
	int l, r, t, b;
	if (d == height)
	{
		for (int i = right - d; i <= left; ++i)
		{
			l = i; r = l + d; b = bottom;  t = top;
			if (l < 0 || r >= m || t < 0 || b >= n) continue;
			if (judge(l, r, t, b)) return 0; 
			}
		}
	else {
		for (int i = bottom - d; i <= top; ++i)
		{
			l = left; r = right; b = i + d;  t = i;
			if (l < 0 || r >= m || t < 0 || b >= n) continue;
			if (judge(l, r, t, b)) return 0; 
			}		
		}
	printf("-1\n");
	return 0;
	}
