#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
using namespace std;
int n,m,i,j,k,D,d,l,r,ansD,ansd,ansl,ansr,tot,x[4000005],y[4000005];
char s[2005][2005]; bool ans;
inline void P(int D,int d,int l,int r)
{	if (D<=0) return; if (d>n) return; if (l<=0) return; if (r>m) return; int i,j,k;
	for (k=1;k<=tot;k++) { i=x[k];j=y[k]; if (i!=D&&i!=d&&j!=l&&j!=r) return; if (i<D||i>d||j<l||j>r) return; }
	ansD=D; ansd=d; ansl=l; ansr=r; ans=1;
}

int main()
{	scanf("%d%d",&n,&m); for (i=1;i<=n;++i)scanf("%s",s[i]+1); D=n; d=1; l=m; r=1;
	for (i=1;i<=n;++i) for (j=1;j<=m;++j)
	if (s[i][j]=='w') { x[++tot]=i; y[tot]=j; if (i<D) D=i; if (i>d) d=i; if (j<l) l=j; if (j>r) r=j; } 
	if (r-l>d-D) k=r-l; else k=d-D; ans=false;
	P(D,D+k,l,l+k); P(d-k,d,l,l+k); P(D,D+k,r-k,r); P(d-k,d,r-k,r);
	P(1,1+k,l,l+k); P(n-k,n,l,l+k); P(1,1+k,r-k,r); P(n-k,n,r-k,r);
	P(D,D+k,1,1+k); P(d-k,d,m-k,m); P(D,D+k,1,1+k); P(d-k,d,m-k,m);
	P(1,1+k,1,1+k); P(n-k,n,1,1+k); P(1,1+k,m-k,m); P(n-k,n,m-k,m);
	if (ans)
	{	for(i=ansD;i<=ansd;++i)
			{ if (s[i][ansl]=='.') s[i][ansl]='+'; if (s[i][ansr]=='.') s[i][ansr]='+'; }
		for(i=ansl;i<=ansr;++i)
			{ if (s[ansD][i]=='.') s[ansD][i]='+'; if (s[ansd][i]=='.') s[ansd][i]='+'; }
		for (i=1;i<=n;++i) printf("%s\n",s[i]+1);
		} else printf("-1\n");
	//syDem("paDse");
}
