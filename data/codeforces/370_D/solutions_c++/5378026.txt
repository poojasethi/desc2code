#include <cstdio>
int n,m,uk;
char mat[2002][2002];
int sum[2002][2002];
/* SAT - summed area table
	I(x,y) = sum(i(x',y'))  [x'<=x && y'<=y]
	easier computing I(x,y) = i(x,y) + I(x-1,y) + I(x,y-1) - I(x-1,y-1)
*/
int min=5000;
int p,r;

int minimum(int a,int b) { return (a<b)?a:b; }

int main(void) {
	scanf("%d %d",&n,&m);
	for(int i=0;i<n;++i) scanf("%s",mat[i]);
	
	for(int i=0;i<n;++i)
	for(int j=0;j<m;++j) {
		if(mat[i][j]=='w') uk++; //counting w's
		//preprocessing SAT
		sum[i][j]=((mat[i][j]=='w')?1:0)+
			((i>0)?sum[i-1][j]:0)+
			((j>0)?sum[i][j-1]:0)-
			((i>0 && j>0)?sum[i-1][j-1]:0);
	}
	
	for(int i=0;i<n;++i)
	for(int j=0;j<m;++j) {
		int t,q,bot=0,top=minimum(n,m),mid;
		while(bot<=top) {
			mid=(bot+top)/2;
			
			if(i+mid>=n || j+mid>=m) { top=mid-1; continue; }
			
			//t = query for sum of submatrix
			t=sum[i+mid][j+mid] +
				((i>0 && j>0)?sum[i-1][j-1]:0) - 
				((i>0)?sum[i-1][j+mid]:0) - 
				((j>0)?sum[i+mid][j-1]:0);
			//q = query for sum of submatrix inside the frame
			q=0; if(mid>1) q=sum[i+mid-1][j+mid-1] + sum[i][j] - sum[i][j+mid-1] - sum[i+mid-1][j];
			
			if(t<uk) bot=mid+1;
			else {
				if(q==0 && mid<min) { min=mid; p=i; r=j; }
				top=mid-1;
			}
		}
	}
	
	if(min==5000) printf("-1");
	else {
		for(int i=0;i<n;++i) {
		for(int j=0;j<m;++j) 
			if( ((i==p && j>=r && j<=r+min)||(i==p+min && j>=r && j<=r+min)||
				(j==r && i>=p && i<=p+min)||(j==r+min && i>=p && i<=p+min)) && 
				mat[i][j]!='w') printf("+");
			else printf("%c",mat[i][j]);
		printf("\n");
		}
	}
	return 0;
}