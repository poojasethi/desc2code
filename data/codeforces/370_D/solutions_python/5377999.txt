import sys 
 
s = sys.stdin.readline().split() 
n = int(s[0]) 
m = int(s[1]) 


ws = set([])
inp = []

minx = 2001
miny = 2001
maxx = -1
maxy = -1

for i in xrange(n):
    s = sys.stdin.readline().strip()
    inp.append(s)
    for x in xrange(m):
        if s[x] == 'w':
            ws.add((x,i))
            if i < miny:
                miny = i
            if i > maxy:
                maxy = i
            if x < minx:
                minx = x
            if x > maxx:
                maxx = x

#print ws
#print "minx, miny, maxx, maxy:", minx, miny, maxx, maxy

rasstx = abs(minx-maxx) + 1
rassty = abs(miny-maxy) + 1


if len(ws) == 1:
    for i in xrange(n):
        print inp[i]
elif rasstx > min(n,m) or rassty > min(n,m):
    print -1
else:

    lst = list(ws)
    
    nn = max(rassty,rasstx)
    #print
    #print "Looking at n = ", nn
    #print rasstx, rassty
    newset = set([])
    if rasstx == rassty:
        for i in xrange(minx, maxx+1):
            newset.add((i, miny))
            newset.add((i, maxy))
        for i in xrange(miny, maxy+1):
            newset.add((minx,i))
            newset.add((maxx,i))
        if ws.issubset(newset):
            newset.difference_update(ws)
            for el in newset:
                inp[el[1]] = inp[el[1]][:el[0]] + '+' + inp[el[1]][el[0]+1:]
            for i in xrange(n):
                print inp[i]
        
        else:
            print -1
        
    elif rasstx < rassty:
        good = False
        for jj in xrange(rassty-rasstx+1):
            #print "Left corner:", minx - jj
            #print "Right corner:", minx-jj+nn-1
            if minx - jj < 0:
                #print "Too low"
                continue
            if minx - jj + nn -1 >= m:
                #print "Too high"
                continue
            newset = set([])
            for i in xrange(minx-jj, minx-jj+nn):
                newset.add((i, miny))
                newset.add((i, maxy))
            for i in xrange(miny, maxy+1):
                newset.add((minx-jj,i))
                newset.add((minx-jj+nn-1,i))
            if ws.issubset(newset):
                good = True
                newset.difference_update(ws)
                for el in newset:
                    inp[el[1]] = inp[el[1]][:el[0]] + '+' + inp[el[1]][el[0]+1:]
                break
            
        if good:
            for i in xrange(n):
                print inp[i]
        else:
            print -1
    else:
        good = False
        for jj in xrange(rasstx-rassty+1):
            #print "Left corner:", miny - jj
            if miny - jj < 0:
                continue
            if miny - jj + nn -1 >= n:
                continue
            newset = set([])
            for i in xrange(minx, maxx+1):
                newset.add((i, miny-jj))
                newset.add((i, miny-jj+nn-1))
            for i in xrange(miny-jj, miny-jj+nn):
                newset.add((minx,i))
                newset.add((maxx,i))
            if ws.issubset(newset):
                good = True
                newset.difference_update(ws)
                for el in newset:
                    #print el
                    #print inp
                    inp[el[1]] = inp[el[1]][:el[0]] + '+' + inp[el[1]][el[0]+1:]
                break
                    
        if good:
            for i in xrange(n):
                print inp[i]
        else:
            print -1
    
    

    