/*
 * cf177_2e.cpp
 *
 *  Created on: Apr 1, 2013
 *      Author: kamath
 */


//
/*
 a) realize that if there're q letters 'Q' in the original program,
    then there must be q^2 letters 'Q' in the output
 b) next, if there are h_0 letters 'H' before the first 'Q' in the program,
    there must be 2h_0 letters 'H' and a 'Q' after that, in the output
 c) if there are h letters 'H' in the program, then there must be h(q+1) letters 'H' in the output
    So it's possible to extract the first quine printed easily (it has length h+q
    and starts with the h_0+1st letter, in the output), and then simulate its output and compare it to the input.
 */

#include <iostream>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <sstream>

using namespace std;

int genopstr(string &src, string &dst)
{
	int iter1;
	//string rsrc=string(src.rbegin(), src.rend());
	for(iter1=0; iter1<src.size(); ++iter1){
		if (src[iter1]=='H') dst=dst.append(1,'H');
		else dst.append(src);
	}
}

int testopstr(string &s){
	int r=0,cnt,cnth=0,cntq=0,nh,nq,iter1,h0=0,ns;
	char ch;
	for(iter1=0; iter1<s.size() && s[iter1]=='H'; ++iter1){
	  ++cnth ; ++h0 ;
	}
    for(; iter1<s.size(); ++iter1){
		if(s[iter1]=='H')  ++cnth ;
		else if(s[iter1]=='Q') ++cntq ;
	}
	if (cntq==0) return true;
	cnt=cnth+cntq;
	nq=(int)(sqrt((double)cntq));
	if (nq*nq!=cntq) return false;
	nh=cnth/(nq+1);
	//cout << nq << nh << cnth << "hello\n";
	if (nh>0 && nh*(nq+1)!=cnth) return false;
	if (h0%2!=0) return false ;
	h0/=2;
	ns=nh+nq;
	string s2(s.begin()+h0, s.begin()+h0+ns) , s3;
	genopstr(s2,s3);
	//cout << "W" << s3 << "\n" ;
	if (s==s3) return true;
	else return false;
}

int main()
{
	string s;
	cin >> s ;
	std::transform(s.begin(), s.end(), s.begin(), ::toupper);
	bool r;
	//string s1("HHHHQHQHHQHHHHHQHHHQHQHQHHQHHQHHHHHQHQHQHQHQHQQQH"), s2;
	//genopstr(s1,s2);
	//cout << s2 << "\n" ;
	r=testopstr(s);
	if (r) cout << "Yes\n" ;
	else cout << "No\n";
	return 0;
}




