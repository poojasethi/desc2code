/*-----------TEMPLATE---------------*/
//#pragma comment(linker, "/STACK:16777216")

#include <algorithm>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdarg>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <functional>
#include <iterator>
#include <map>
#include <numeric>
#include <set>
#include <string>
#include <vector>
#include <iostream>

using namespace std;

#define all(x) (x).begin(),(x).end()
#define eprintf(...) {fprintf(stderr, __VA_ARGS__); fflush(stderr);}
#define forab(i, a, b) for (int i = (int)(a); i < ((int)(b)); ++i)
#define forit(it, v) for (typeof((v).begin()) it = (v).begin(); it != (v).end(); ++it)
#define forn(i, n) for (int i = 0; i < ((int)(n)); ++i)
#define forabok(i, a, b, ok) for (int i = (int)(a); i < ((int)(b)) && (ok); ++i)
#define foritok(it, v, ok) for (typeof((v).begin()) it = (v).begin(); it != (v).end() && (ok); ++it)
#define fornok(i, n, ok) for (int i = 0; i < ((int)(n)) && (ok); ++i)
#define ibits(x) __builtin_popcount(x)
#define lbits(x) __builtin_popcountll(x)
#define mp make_pair
#define pb push_back
#define sz(a) ((int)((a).size()))
#define X first
#define Y second

#ifdef WIN32
  #define LLD "%I64d"
#else
  #define LLD "%lld"
#endif

#define INF ((int)1e9)
#define EPS (1e-9)

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<vi> vvi;
/*-----------TEMPLATE---------------*/

int main() 
{
  srand(time(NULL));
  #define TASK "text"
  #ifdef HOME
  assert(freopen(TASK ".in", "rt", stdin));
  assert(freopen(TASK ".out", "wt", stdout));
  #endif

  string s;
  while (cin >> s) {
    int n = sz(s);
    if (!count(&s[0], &s[0] + n, 'Q')) {
      printf("Yes\n");
      continue;
    }
    int i0 = 0;
    while (i0 < n && s[i0] != 'Q')
      i0++;
    if (i0 & 1) {
      printf("No\n");
      continue;
    }
    i0 = i0 / 2;
    int cnt = 0, r = 0;
    bool found = 0;
    for (int i = i0; i < n; i++) {
      cnt += s[i] == 'Q';
      r += s[i] == 'H';
      int now = cnt * (i - i0 + 1) + r;
      if (now == n) {
        string cur = "";
        for (int j = i0; j <= i; j++)
          if (s[j] == 'H')
            cur += 'H';
          else
            cur += string(s, i0, i - i0 + 1);
        //eprintf("%s\n", cur.c_str());
        if (cur == s) {
          printf("Yes\n");
          found = 1;
          break;
        }
      } 
      if (now >= n)
        break;
    }
    if (!found)
      printf("No\n");
  }

  return 0;
}                           
