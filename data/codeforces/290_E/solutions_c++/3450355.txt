#include <vector>
#include <algorithm>
#include <iostream>
#include <stdio.h>
#include <cmath>
#include <string>
#include <set>
#include <map>

#define rep(i,n) for((i)=0;(i)<(n);(i)++)
#define rp(i,s,n) for((i)=(s);(i)<(n);(i)++)    
#define ll long long
#define MP make_pair 
#define PB push_back
#define X first
#define Y second
#define ALL(a) (a).begin(),(a).end()
#define EPS 1e-8


using namespace std;            

template <class T>
void out(vector<T> & a,string s="%3d "){
    int i,n=a.size();
    rep(i,n) printf(s.c_str(),a[i]);
    printf("\n");
}


string run(string code){
    int i,n=code.length();
    string ans="";
    rep(i,n){
        if (code[i]=='H') ans.PB('H');
        else ans = ans + code;
    }
    return ans;
}

int i,j,N,M,n,m,k,p;

void solve(){

    string s;
    cin>>s;
    n=s.length();
    int kh=0;
    int kq=0;
    rep(i,n){
        if (s[i]=='H') {kh++;continue;}
        if (s[i]=='Q') {kq++;continue;} 
        cout<<"No\n";
        return;
        
    }
     int mQ=(int)sqrt(kq+EPS);
     if (mQ*mQ!=kq) {
     cout<<"No\n";
     return;}
     
     int mH=(int)kh/(mQ+1);
     if (mH*(mQ+1)!=kh){
     cout<<"No\n";
     return;}
     
     
     //front
     int q=-1;
     rep(i,n){
     if (s[i]=='Q') {q=i;break;}
     }
     
     if (q==-1){
     if (kh&1) cout<<"No\n";
     else cout<<"Yes\n";
     return;
     }
     
     if (q&1){
     cout<<"No\n";
     return;}
     
     int qf=q/2;
     
     //back
     q=-1;
     rep(i,n){
     if (s[n-1-i]=='Q') {q=i;break;}
     }
     
     if (q&1){
     cout<<"No\n";
     return;}

    int qb=q/2;
    
    int k=0;
    string ans;
    rp(i,qf*2,n){
        if (s[i]=='Q') k++;
        ans.PB(s[i]);
        if (k==mQ) break;
    }
    rep(i,qf){
        ans= "H"+ans;
    }
     
    rep(i,qb){
        ans= ans+"H";
    }
    //cout<<ans<<endl; 
    if (run(ans)==s) 
     cout<<"Yes\n";
    else
    cout<<"No\n";
 
}

int main() {

#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);//freopen("output.txt","w",stdout);
    //FILE * f, *g; f = fopen ("input.txt","r");//g = fopen ("output.txt","w");
#endif

solve();
//  cout<<run("HQQHH");
    
    
return 0;
}