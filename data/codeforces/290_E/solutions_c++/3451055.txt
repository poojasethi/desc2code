#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <utility>
#include <vector>
#include <sys/time.h>
using namespace std;
#define mp make_pair
#define pb push_back
#define fi(n) fo(i, n)
#define fj(n) fo(j, n)
#define fk(n) fo(k, n)
#define fd(i,n) for(int i=(int)(n)-1;i>=0;--i)
#define fo(i,n) fr(i,0,n)
#define fr(i,a,b) for(int i=(int)a; i<(int)b; i++)
#define sz(x) ((int)(x).size())
#define all(x) (x).begin(), (x).end()
#define sqr(x) ((x)*(x))
#define srt(x) sort(all(x))
#define foreach(it, a) for(typeof((a).begin()) it=(a).begin(); it != (a).end(); it++)
#define x first
#define y second
#define me (*this)
#define PQ(t) priority_queue<t, vector<t>, greater<t> >
#define CLR(a, v) memset(a, v, sizeof(a))
#define UNIQUE(a) srt(a), a.resize(unique(all(a))-a.begin())
#define RAND (((double)rand()/RAND_MAX) + ((double)rand()/RAND_MAX/RAND_MAX))
#define assert(...) if(!(__VA_ARGS__)){ fprintf(stderr, "assert failed\n"); exit(1); }

typedef long long ll;
typedef pair<int, int> ii;
typedef vector< ii > vii;
typedef vector< vii > vvii;
typedef vector< int > vi;
typedef vector< vi > vvi;
typedef vector< double > vd;
typedef vector< vd > vvd;
typedef vector< ll > vll;
typedef vector< string > vs;
typedef vector< bool > vb;
const int INF = 1000*1000*1000+7;
const double EPS = 1e-9;
const double PI = 2*acos(0.0);
template<class T> bool chmin(T &t, T f){ return (t>f) ? (t=f, true) : false; }
template<class T> bool chmax(T &t, T f){ return (t<f) ? (t=f, true) : false; }

inline int getint() {
  int a;
  return scanf("%d", &a) ? a : (fprintf(stderr, "trying to read\n"),-1);
}

inline double getdouble() {
  double a;
  return scanf("%lf", &a) ? a : (fprintf(stderr, "trying to read\n"),-1);
}

int sqrt(int x){
  int lo=0, hi=1<<16;
  while(hi-lo > 1){
    int mid = (lo+hi)/2;
    if(mid*mid <= x)
      lo = mid;
    else
      hi = mid;
  }
  return lo;
}

void myCode() {

  string s;
  cin >> s;

  int nH=0, nQ=0;
  fi(sz(s))
    if(s[i]=='H')
      ++nH;
    else
      ++nQ;

  int rtQ = sqrt(nQ);
  if(rtQ*rtQ != nQ){
    printf("No\n");
    return;
  }

  if(nQ == 0){
    printf("Yes\n");
    return;
  }

  int startH = 0;
  fi(sz(s))
    if(s[i] == 'Q'){
      startH = i;
      break;
    }

  if(startH&1){
    printf("No\n");
    return;
  }

  int len = (sz(s) - nH/(rtQ+1)) / rtQ;
  if(rtQ*len+nH/(rtQ+1) != sz(s)){
    printf("No\n");
    return;
  }

  char buffer[1<<20];
  int p = 0;
  string t = s.substr(startH/2, len);
  fi(sz(t))
    if(t[i]=='H')
      p += sprintf(buffer+p, "H");
    else
      p += sprintf(buffer+p, "%s", t.c_str());
  t = buffer;

  printf(s==t ? "Yes\n" : "No\n");

}

int main() {
  struct timeval tv;
  gettimeofday(&tv, NULL);
  srand(tv.tv_usec);
  myCode();
  return 0;
}

