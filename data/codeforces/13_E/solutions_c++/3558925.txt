#include <cstdio>
#include <cstring>
#include <cstdlib>

const int maxn	=	100005;
const int blockSize	=	1<<9;
const int blockCnt	=	maxn / blockSize +1;

#define blockId(x) ((x)>>9)

int n,m,a[maxn],next[maxn],jump[maxn];

inline void rebuild(int i)
{
	int l=i*blockSize;
	int r=l+blockSize;
	if (r>n) r=n;
	
	for (int j=r-1;j>=l;--j){
		if (j+a[j]<r){
			next[j]=next[j+a[j]];
			jump[j]=jump[j+a[j]]+1;
		}else{
			next[j]=j;
			jump[j]=0;
		}
	}
}

inline int find(int &i)
{
	int res=0;
	while (i+a[i]<n){
		res+=jump[i+a[i]]+1;
		i=next[i+a[i]];
	}
	return res;
}

int main()
{
	scanf("%d%d",&n,&m);
	for (int i=0;i<n;++i){
		scanf("%d",&a[i]);
	}
	int block = ((n-1) >> 9) +1;
	for (int i=0;i<block;++i){
		rebuild(i);
	}
	
	for (int i=0;i<m;++i){
		int op,x,y;
		scanf("%d",&op);
		if (!op){
			scanf("%d%d",&x,&y);
			--x;
			a[x]=y;
			rebuild(blockId(x));
		}else{
			scanf("%d",&x);
			--x;
			y=find(x);
			printf("%d %d\n",x+1,y+1);
		}
	}
	return 0;
}

  						  					      		 	