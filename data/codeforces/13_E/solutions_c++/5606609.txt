#include <iostream>
using namespace std;

const int MAXN = 100 * 1000 + 1, LEN = 300;

int a[MAXN], par[MAXN], dis[MAXN], beg[MAXN], end[MAXN], n, m;

void update(int i)
{
	int s = (i / LEN) * LEN, e = min(s + LEN, n);
	if (i + a[i] >= e) 
	{
		dis[i] = (i + a[i] < n);
		par[i] = (i + a[i] < n ? a[i] + i : i);
	}
	else dis[i] = dis[i + a[i]] + 1, par[i] = par[i + a[i]];
}

int main ()
{
	ios::sync_with_stdio(false);

	cin >> n >> m;
	for (int i = 0; i < n; i ++) cin >> a[i];
	for (int i = n - 1; i >= 0; i --) update(i);
	while (m --)
	{
		int c, x, y;
		cin >> c >> x; x --;
		if (!c) 
		{
			cin >> y;
			a[x] = y;
			int s = (x / LEN) * LEN, e = min(s + LEN, n);
			for (int i = e - 1; i >= s; i --) update(i);
		}
		else
		{
			int d = 1;
			while (par[x] != x) d += dis[x], x = par[x];
			cout << x + 1 << ' ' << d << endl;
		}
	}
	return 0;
}
