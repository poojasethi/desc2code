#include <iostream>
#include <cstdio>
using namespace std;

const int MAXN = 100 * 1000 + 1, LEN = 300;

int a[MAXN], par[MAXN], dis[MAXN], beg[MAXN], end[MAXN], n, m;

inline int read() 
{
	int result = 0;
	char ch;
	while (true) 
	{
		ch = getchar();
		if (ch < '0' || ch > '9') break;
		result = result * 10 + (ch - '0');
	}
	return result;
}

inline void update(int i)
{
	int s = (i / LEN) * LEN, e = min(s + LEN, n);
	if (i + a[i] >= e) 
	{
		dis[i] = (i + a[i] < n);
		par[i] = (i + a[i] < n ? a[i] + i : i);
	}
	else dis[i] = dis[i + a[i]] + 1, par[i] = par[i + a[i]];
}

int main ()
{
	n = read(); m = read();
	for (int i = 0; i < n; i ++) a[i] = read();
	for (int i = n - 1; i >= 0; i --) update(i);
	while (m --)
	{
		int c, x, y;
		c = read(); x = read() - 1;
		if (!c) 
		{
			y = read();
			a[x] = y;
			int s = (x / LEN) * LEN, e = min(s + LEN, n);
			for (int i = e - 1; i >= s; i --) update(i);
		}
		else
		{
			int d = 1;
			while (par[x] != x) d += dis[x], x = par[x];
			printf("%d %d\n", x + 1, d);
		}
	}
	return 0;
}
