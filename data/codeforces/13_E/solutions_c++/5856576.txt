#include <algorithm>
#include <iostream>
#include <string>
#include <vector>
#include <cmath>
#include <deque>
#include <stack>
#include <set>
#include <map>
using namespace std;
//////////////////////////////////////////////
const int maxn=200009;
int A[maxn],dp[maxn],t[maxn],comp[maxn],last[maxn],n,m,k;
/////////////////////////////////////////////
void print(int a){
	int T=0;
	while(1){
		T+=t[a];
		if(dp[a]>=n)
		{
			cout<<last[a]+1<<" "<<T<<endl;	
			return;
		}
		a=dp[a];
	}	
}
void add(int a,int b){
	A[a]=b;
	int f=comp[a]*k,l=min((comp[a]+1)*k,n);
	for(int i=l-1;i>=f;i--){
		if(A[i]+i < l){
			dp[i]=dp[(A[i]+i)];
			last[i]=last[A[i]+i];
			t[i]=t[A[i]+i]+1;
		}
		else{
			dp[i]=A[i]+i;
			last[i]=i;
			t[i]=1;
		}
	}
}
int main(){
	cin>>n>>m;

	k=sqrt(n);	
	int a=0,tmp=0;
	for(int i=0;i<n;i++){
		if(tmp==k){
			a++;
			tmp=0;
		}
		comp[i]=a;
		tmp++;
	}
	for(int i=0;i<n;i++){
		int a;
		cin>>a;
		add(i,a);
	}
	for(int i=0;i<m;i++){
		int a,b,c;
		cin>>a>>b;
		if(a==0){
			cin>>c;
			add(b-1,c);
		}
		else{
			print(b-1);
		}
	}	
	return 0;
}
