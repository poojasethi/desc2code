#include <bits/stdc++.h>

using namespace std;

const int maxn = 1000 + 10;

int n, k, dp[maxn];
vector <int> pos[maxn];

int main()
{
	ios::sync_with_stdio(false);
	cin >> n >> k;
	for(int i = 0; i < k; i++)
		for(int j = 0; j < n; j++){
			int tmp;
			cin >> tmp;
			tmp--;
			pos[tmp].push_back(j);
		}

	sort(pos, pos+n);
	fill(dp, dp+n, 1);

	for(int i = 0; i < n; i++){
		for(int j = i-1; j >= 0; j--){
			bool flag = true;
			for(int q = 0; q < k; q++)
				if(pos[i][q] < pos[j][q])
					flag = false;
			if(flag)
				dp[i] = max(dp[i], dp[j]+1);
		}
	}

	cout << *max_element(dp, dp+n) << endl;
	return 0;
}
