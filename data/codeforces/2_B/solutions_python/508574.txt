def kol(n,k):
    if n==0: return 1000000
    res = 0
    while(n%k == 0):
        n,res=n/k,res+1
    return res

[n,] = map(int, raw_input().split())
r = [map(int,raw_input().split()) for _ in xrange(n)]

five = [[1000000 for i in xrange(n)] for j in xrange(n)]
two = [[1000000 for i in xrange(n)] for j in xrange(n)]
yes = -1
for i in xrange(n):
    for j in xrange(n):
        if r[i][j]==0: yes = i
        else:
            if i and j:
                five[i][j] = min(five[i-1][j],five[i][j-1])+kol(r[i][j],5)
                two[i][j] = min(two[i-1][j],two[i][j-1])+kol(r[i][j],2)
            elif i:
                five[i][j] = five[i-1][j] + kol(r[i][j],5)
                two[i][j] = two[i-1][j] + kol(r[i][j],2)
            elif j:
                five[i][j] = five[i][j-1] + kol(r[i][j],5)
                two[i][j] = two[i][j-1] + kol(r[i][j],2)
            else:
                five[i][j] = kol(r[i][j],5)
                two[i][j] = kol(r[i][j],2)
s=''
if min(five[n-1][n-1],two[n-1][n-1])>1 and not yes == -1:
    for i in xrange(0,yes): s=s+'D'
    for i in xrange(n-1): s=s+'R'
    for i in xrange(yes,n-1):s=s+'D'
    print 1
    print s
else:
    if five[n-1][n-1]<two[n-1][n-1]:
        i, j = n-1,n-1
        while not i==0 and not j==0:
            if five[i][j-1]>five[i-1][j]: i,s=i-1,'D'+s
            else: j,s=j-1,'R'+s
        while not i==0:  i,s=i-1,'D'+s
        while not j==0:  j,s=j-1,'R'+s
        print five[n-1][n-1]
        print s
    else:
        i, j = n-1,n-1
        while not i==0 and not j==0:
            if two[i][j-1]>two[i-1][j]: i,s=i-1,'D'+s
            else: j,s=j-1,'R'+s
        while not i==0:  i,s=i-1,'D'+s
        while not j==0:  j,s=j-1,'R'+s
        print two[n-1][n-1]
        print s

