n = input()

range0_n = xrange(n)
range1_n = xrange(1, n)

a = [map(int, raw_input().split()) for __ in range0_n]

def decomp(x, d):
    ret = 0
    while x > 0 and x % d == 0:
        ret += 1
        x /= d
    return ret

def dp(a, d):
    f = [[decomp(x, d) for x in row] for row in a]
    for i in range1_n:
        f[i][0] += f[i-1][0]
        f[0][i] += f[0][i-1]

    for i in range1_n:
        for j in range1_n:
            f[i][j] += min(f[i-1][j], f[i][j-1])


    path = []
    i, j = n-1, n-1
    while i != 0 or j != 0:
        if i == 0:
            path.append('R')
            j -= 1
        elif j == 0:
            path.append('D')
            i -= 1
        elif f[i][j-1] < f[i-1][j]:
            path.append('R')
            j -= 1
        else:
            path.append('D')
            i -= 1

    return (f[n-1][n-1], ''.join(path[::-1]))

ans, path = min(dp(a, 2), dp(a, 5))

if ans > 1:
    for i in range0_n:
        for j in range0_n:
            if a[i][j] == 0:
                ans = 1
                path = 'D'*i + 'R'*(n-1) + 'D'*(n-1-i)
                break
        if ans == 1:
            break

print '{ans}\n{path}'.format(ans=ans, path=path)
