#include<bits/stdc++.h>
using namespace std;
int dp[1010][1010][2],k;
void path(int i, int j)
{
	if(i==1 && j==1)
		return;
	if(i>1 && j>1)
	{
		if(dp[i-1][j][k]<dp[i][j-1][k])
		{
			path(i-1,j);
			putchar('D');
		}
		else
		{
			path(i,j-1);
			putchar('R');
		}
	}
	else if(i>1)
	{
		path(i-1,j);
		putchar('D');
	}
	else if(j>1)
	{
		path(i,j-1);
		putchar('R');
	}
}
int main()
{
	int n,i,j,num,x=0;
	cin>>n;
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			scanf("%d",&num);
			if(!num)
				x=i;
			while(num>0 && num%2==0)
			{
				dp[i][j][0]++;
				num/=2;
			}
			while(num>0 && num%5==0)
			{
				dp[i][j][1]++;
				num/=5;
			}
			for(k=0;k<2;k++)
			{
				if(i>1 && j>1)
					dp[i][j][k]+=min(dp[i-1][j][k],dp[i][j-1][k]);
				else if(i>1)
					dp[i][j][k]+=dp[i-1][j][k];
				else if(j>1)
					dp[i][j][k]+=dp[i][j-1][k];
			}
		}
	}
	k=(dp[n][n][0] > dp[n][n][1]);
	if(x && dp[n][n][k]>1)
	{
		cout<<"1\n";
		for(i=1;i<x;i++)
			putchar('D');
		for(j=1;j<n;j++)
			putchar('R');
		for(i=x;i<n;i++)
			putchar('D');
	}
	else
	{
		cout<<dp[n][n][k]<<endl;
		path(n,n);
	}
	cout<<endl;
	return 0;
}
