#include <stdio.h>
#include <string.h>
#include <iostream>

using namespace std;

char v[1000001];
long long mod = 1000000007;
long long pd[4][4][1000000];
int n;

int val (char c) {
	if (c == '*')	return 3;
	return c-'0';
}

long long solve (int prev, int curr, int i) {
	if (i == n)	return (curr != 3 ? 1 : 0);
	long long &ans = pd[prev][curr][i];
	if (ans == -1) {
		if (v[i] != '?' && curr != val(v[i]))	return ans = 0;
		if(curr == 0)	ans = (solve(0, 1, i+1) + solve(0, 0, i+1))%mod;
		else if (curr == 1) {
			if (prev == 3)	ans = (solve(1, 0, i+1) + solve(1, 1, i+1))%mod;
			else	ans = solve(1, 3, i+1);
		} else if (curr == 2)	ans = solve (2, 3, i+1);
		else ans = ((solve(3, 1, i+1) + solve(3, 2, i+1))%mod + solve(3, 3, i+1))%mod;
		if (i == n-1)	ans = min (ans, 1LL);
		ans %= mod;
	}
	return ans;
}


int main (void) {
	scanf ("%s", v);
	n = strlen(v);
	memset(pd, -1, sizeof pd);
	cout << (solve(0, 0, 0) + solve(0, 1, 0) + solve(1, 3, 0))%mod << endl;

	return 0;
}
