

stdin_flag=1
if not stdin_flag:
  read_line_index=0
  testcasefilename="test.txt"
  Stestcase=open(testcasefilename).read()
  read_line_datas=Stestcase.split("\n")


#####################################
######################################

def read_line():
  global read_line_index
  if stdin_flag:
    return raw_input()
  else:
    s=read_line_datas[read_line_index]
    read_line_index+=1
    return s

def answer():
  if stdin_flag:
    return solve()
  else:
    while read_line_proceed():
      solve()
      

def read_line_proceed():
  global read_line_index
  print"##################"
  while 1:
    if read_line_index>= len (read_line_datas ):
      return False
    if read_line_datas[read_line_index]=="%%%":
      read_line_index+=1
      return True
    read_line_index+=1


def readint():
  return int (read_line() )


def readints():
  return map(int, read_line().split(" "))

def reads():
  return read_line()

###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################

def compute(n,m,a,k):
  s=0
  for r in xrange(1,301):
    for y in xrange(r,n-r):
      for x in xrange(r,m-r):
        if a[y][x] and a[y+r][x] and a[y-r][x] and a[y][x+r] and a[y][x-r]:
          s+=1
          if s==k:
            put(y,x,r)
            return

  print -1

def put(y0,x0,r):
  y=y0+1
  x=x0+1
  print y,x
  print y-r,x
  print y+r,x
  print y,x-r
  print y,x+r

def m2n(s):
  return [int(i=="*") for i in s]

def solve():
  n,m,k=readints()
  a=[m2n(reads()) for _ in xrange(n) ]
  compute(n,m,a,k)

def test():
  n=300
  compute(n,n,[[0 for i in xrange(n)]for j in xrange(n)],10**8)
  pass

#test()
answer()
