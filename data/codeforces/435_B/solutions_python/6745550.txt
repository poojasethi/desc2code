#!/usr/bin/python

import sys
from math import *

def Nf(): return tuple(map(float, sys.stdin.readline().split()))
def Ni(): return tuple(map(int, sys.stdin.readline().split()))
def Ns(): return tuple(sys.stdin.readline().split())

a, k = Ni()
a = list(map(int, str(a)))

p = 0
while p + 1 < len(a) and k > 0:
    while p + 1 < len(a) and a[p] >= max(a[p+1:p+k+1]):
        p += 1

    if p + 1 == len(a):
        break

    best = max(a[p+1:p+k+1])
    i = p + 1
    while a[i] != best:
        i += 1

    #print "swapping", best, "at", i
    a = a[:p] + [best] + a[p:i] + a[i+1:]
    k -= i - p
    p += 1
    #print "after swap: ", a
    
print "".join(map(str, a))
