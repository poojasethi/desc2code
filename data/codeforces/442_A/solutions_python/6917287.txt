n = int(raw_input())
s = raw_input().strip().split()

def nbits(n):
    res = 0
    while n > 0:
        n &= n-1
        res += 1
    return res

nb = map(nbits, xrange(32))

def solve(a):
    res = 10
    for i in xrange(32):
        for j in xrange(32):
            if nb[i] + nb[j] >= res:
                continue
            nc = 0
            rc, cc = [0]*5, [0]*5
            for k in xrange(5):
                for l in xrange(5):
                    isCol = not a[k][l] or ( (i & (1<<k)) > 0 )
                    isNum = not a[k][l] or ( (j & (1<<l)) > 0 )
                #    print k, l, isCol, isNum
                    if not isCol:
                        rc[l] += 1
                    if not isNum:
                        cc[k] += 1
                    if not isCol and not isNum:
                        nc += 1
            if nc <= 1 and max(cc) <= 1 and max(rc) <= 1:
            #    print i, j, nb[i] + nb[j]
                res = nb[i] + nb[j]
    return res

cols = {'R':0, 'G':1, 'B':2, 'Y':3, 'W':4}
a = [[False]*5 for i in xrange(5)]

for p in s:
    i, j = cols[p[0]], int(p[1])-1
    a[i][j] = True

print solve(a)