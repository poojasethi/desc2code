def solve(n, cards):
    #max 8
    if n >= 2**8:
        return 8
    if len(cards)==1:
        return 0
    import math
    minRes = int(math.log(n))
    while 2**minRes < n:
        minRes += 1
    avColors = list(set(map(lambda x: x[0], cards)))
    avNums = list(set(map(lambda x: x[1], cards)))
    avs = avColors + avNums
    maxRes = len(avs)- 2
    #print "minRes = " + str(minRes) + " maxRes = " + str(maxRes)
    res = minRes
    while True:
        if res == maxRes:
            return res
        #check
        import itertools
        #print cards
        for comb in itertools.combinations(avColors+avNums, res):
            mask = [0]*n

            for el in comb:
                #search for each card
                for ind in xrange(n):
                    mask[ind] += (1 if el in cards[ind] else 0)
                    mask[ind] *= 2
            if len(set(mask)) == n:
                return res
        res += 1
        
n = int(raw_input())
cards = raw_input().split()
cards = list(set(cards))
n = len(cards)
#cards = map(lambda x: [x[0], x[1]], cards)

colors = ['R', 'G', 'B', 'Y', 'W']
nums = range(1, 6)

print str(solve(n, cards))

