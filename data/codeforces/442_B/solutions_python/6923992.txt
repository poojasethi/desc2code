import sys

n = int(raw_input().strip())
probs = [float(x) for x in raw_input().strip().split()]
probs.sort()
probs.reverse()
best = probs[0]
probs = [int(round(1000000*x, 2)) for x in probs]

if 1000000 in probs:
    print 1
    sys.exit(0)

while 0 in probs:
    probs.remove(0)
    n -= 1

def probwith(i):
    probsum = 0
    allrest = 1
    for j in range(i):
        allrest *= (1000000 - probs[j])
    for j in range(i):
        probsum += ((probs[j] * allrest) / (1000000 - probs[j]))
    q = '0'*500 + str(probsum)
    qi = len(q) - 6*i
    res = '0.' + q[qi:]
    if len(res) > 15:
        res = res[0:14]
    return res

for i in range(2, n+1):
    res = probwith(i)
    if float(res) < best:
        break
    else:
        best = float(res)

print best

    

