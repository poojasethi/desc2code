import sys
from heapq import *    
from collections import defaultdict as dd
n,q = map(int,raw_input().split())
rl = sys.stdin.readline
z,l,r,t = {},{},{},dd(int)
h = []
qq = 2*q+2
a = [True]*qq
b,e = [0]*qq,[0]*qq
ac = 0
def add(bb,ee):
    global b,e,h,ac
    if bb>=ee:
	l[ee]=r[bb-1]=0
	return
    b[ac]=bb
    e[ac]=ee
    r[bb-1]=l[ee]=ac
    heappush(h,(bb-ee,-ee,bb,ac))
    ac+=1
add (1,n+1)
for _ in xrange(q):
    p = rl()
    if p[0]=='0':
	_,i,j = map(int,p.split())
	u=0;i-=1;
	while j:u+=t[j];j-=j&-j
	while i:u-=t[i];i-=i&-i
	print u
    else:
	i = int(p)
	if i in z:
	    m = z[i]
	    a[l[m]]=a[r[m]]=False
	    bb=b[l[m]] if l[m] else m
	    ee=e[r[m]] if r[m] else m+1
	    add(bb,ee)
	    del z[i]
	    d=-1
	else:
	    while 1:
		_,ee,bb,j = heappop(h)
		if a[j]: break
	    m = (-ee+bb)/2
	    add(bb,m)
	    add(m+1,-ee)
	    z[i] = m
	    d=1
	while m<=n: t[m]+=d; m+=m&-m