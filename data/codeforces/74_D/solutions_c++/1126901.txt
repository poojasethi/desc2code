#include <iostream>
#include <map>
#include <set>
#include <algorithm>
using namespace std;
#define MP make_pair

map< int , int > T,pos;
set< pair< int , int > > seg;
set< int > P;
int n,q;

void add(int x,int y){ for(;x<=n;x+=x&(-x)) T[x]+=y; }

int get(int x){
	int ret=0;
	for(;x;x-=x&(-x)) if(T.count(x)) ret+=T[x];
	return ret;
}

pair< int , int > F(int x,int y){return MP(-(y-x+1),-x);}

int main(){
	int x,y,k,p;
	set< int >::iterator i,j;
	cin>>n>>q;
	seg.insert(MP(-n,-1));
	P.insert(0);P.insert(n+1);
	while(q--){
		//for(i=P.begin();i!=P.end();i++) cout<<*i<<' ';cout<<endl;
		cin>>k;
		if (!k){
			cin>>x>>y;
			cout<<get(y)-get(x-1)<<endl;
		}else{
			if (pos.count(k)){
				p=pos[k];
				i=j=P.find(p);
				--i;++j;
				//cout<<p<<' '<<(*i)<<' '<<(*j)<<endl;
				if ((*i)+1<=p-1) seg.erase(F((*i)+1,p-1));
				if ((*j)-1>=p+1) seg.erase(F(p+1,(*j)-1));
				if ((*i)+1<=(*j)-1) seg.insert(F((*i)+1,(*j)-1));
				add(p,-1);
				P.erase(p);
				pos.erase(k);
			}else{
				x=-seg.begin()->second;
				y=x-seg.begin()->first-1;
				seg.erase(*seg.begin());
				p=(x+y+1)/2;
				//cout<<x<<' '<<y<<' '<<p<<endl;
				add(p,1);
				pos[k]=p;
				P.insert(p);
				if (x<=p-1) seg.insert(F(x,p-1));
				if (y>=p+1) seg.insert(F(p+1,y));
			}
		}
	}
}

/*
325 7
75
855
74
74
986
855
0 2 186
*/