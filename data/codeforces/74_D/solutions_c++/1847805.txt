#include <cstdio>
#include <set>
#include <map>

using namespace std;

struct seg
{
  int l,r;
  bool operator<(const seg& x) const
  {
    if(r-l!=x.r-x.l)
      return r-l>x.r-x.l;
    return l>x.l;
  }
};

set<seg> s;
set<int> u;
map<int,int> f,p;
int n,m;

void ins(int x,int y)
{
  while(x<=n)
  {
    if(!f.count(x))
      f[x]=0;
    f[x]+=y;
    x+=x&(-x);
  }
}

int sum(int x)
{
  int y=0;
  while(x>0)
  {
    if(f.count(x))
      y+=f[x];
    x-=x&(-x);
  }
  return y;
}

int main(void)
{
  scanf("%d %d",&n,&m);
  seg temp;
  temp.l=1;
  temp.r=n;
  s.insert(temp);
  u.insert(0);
  u.insert(n+1);
  for(int i=1;i<=m;++i)
  {
    int t;
    scanf("%d",&t);
    if(t>0)
    {
      if(p.count(t))
      {
        int mid=p[t];
        p.erase(t);
        int j=*(--u.find(mid)),k=*(++u.find(mid));
        u.erase(mid);
        if(j+1<=mid-1)
        {
          temp.l=j+1;
          temp.r=mid-1;
          s.erase(temp);
        }
        if(mid+1<=k-1)
        {
          temp.l=mid+1;
          temp.r=k-1;
          s.erase(temp);
        }
        temp.l=j+1;
        temp.r=k-1;
        s.insert(temp);
        ins(mid,-1);
      }
      else
      {
        seg h=*s.begin();
        s.erase(s.begin());
        int mid=(h.l+h.r+1)/2;
        p[t]=mid;
        u.insert(mid);
        ins(mid,1);
        if(h.l<mid)
        {
          seg e;
          e.l=h.l;
          e.r=mid-1;
          s.insert(e);
        }
        if(mid<h.r)
        {
          seg e;
          e.l=mid+1;
          e.r=h.r;
          s.insert(e);
        }
      }
    }
    else
    {
      int j,k;
      scanf("%d %d",&j,&k);
      printf("%d\n",sum(k)-sum(j-1));
    }
  }
  return 0;
}