#include <cstdio>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
using namespace std;

int a[100000],x[100000],y[100000];
int s[200050];

void modify(int x, int v){
    for(x+=10;x<200050;x+=x&-x) s[x]+=v;
}

int getsum(int x){
    int ret=0;
    for(x+=10;x;x-=x&-x) ret+=s[x];
    return ret;
}

int locate(int x, const vector<int>& u){
    return lower_bound(u.begin(),u.end(),x)-u.begin();
}

int main(){
    int n,m;
    scanf("%d%d",&n,&m);
    vector<int> u;
    for(int i=0;i<m;i++){
        scanf("%d",a+i);
        if(!a[i]){
            scanf("%d%d",x+i,y+i);
            u.push_back(y[i]);
            u.push_back(x[i]-1);
        }
    }
    sort(u.begin(),u.end());
    priority_queue<pair<int,int> > seg;
    seg.push(make_pair(n,1));
    map<int,int> ok;
    set<int> dot; 
    dot.insert(0); 
    dot.insert(n + 1);
    for(int i=0;i<m;i++){
        if(a[i]){
            if(!ok[a[i]]){
                int X,Y;
                while(1){
                    X=seg.top().second;
                    Y=seg.top().first+X-1;
                    seg.pop();
                    set<int>::iterator prev=dot.find(X-1);
                    set<int>::iterator next=dot.find(Y+1);
                    if(prev!=dot.end() && next!=dot.end() && ++prev==next) break;
                }
                int M=ok[a[i]]=(X+Y+1)/2;
                dot.insert(M);
                modify(locate(M,u),1);
                if(M!=X) seg.push(make_pair(M-X,X));
                if(Y!=M) seg.push(make_pair(Y-M,M+1));
            }else{
                set<int>::iterator now=dot.find(ok[a[i]]),prev=now,next=now;
                modify(locate(ok[a[i]],u),-1);
                ok[a[i]]=0;
                prev--;
                next++;
                dot.erase(now);
                seg.push(make_pair(*next-*prev-1,*prev+1));
            }
        }else{
            printf("%d\n",getsum(locate(y[i],u))-getsum(locate(x[i]-1,u)));
        }
    }
}
