#include<bits/stdc++.h>
#define MAXN 100009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"--------------"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define left can
#define right bonomo
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);]
int type[MAXN],left[MAXN];
int right[MAXN];
map<int,int>pm,cp;
struct hook{
	int dis,lf,rg;
	bool operator < (hook x) const{
		if(dis!=x.dis)
			return (dis>x.dis);
		return(rg>x.rg);
	}
};
hook yasa(int x,int y,int z){
	hook r;
	r.dis=x;r.lf=y;r.rg=z;		
	return r;
}
set<hook>s;
set<int>st;
int go(int x,int y){
	if((y-x+1)&1)	
		return (x+y)/2;
	return (x+y+1)/2;
}int sg[MAXN<<3];
int tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r)
		return 0;
	if(l<=x and y<=r)
		return sg[nd];
	int mid=(x+y)>>1;
	int i1=tap(l,r,nd<<1,x,mid);
	int i2=tap(l,r,nd<<1|1,mid+1,y);
	return i1+i2;		
}
void upd(int p,int nd,int x,int y){
	if(x==y){
		sg[nd]^=1;
		return;
	}
	int mid=(x+y)>>1;
	if(p<=mid)
		upd(p,nd<<1,x,mid);
	else
		upd(p,nd<<1|1,mid+1,y);
	sg[nd]=sg[nd<<1]+sg[nd<<1|1];		
}
int main(){
	int n,q;
	scanf("%d%d",&n,&q);
	st.insert(0);
	st.insert(n+1);
	s.insert(yasa(n,1,n));
	for(int i=1;i<=q;i++){
		scanf("%d",&type[i]);
		if(!type[i]){
			scanf("%d%d",left+i,right+i);
			cp[left[i]]=cp[right[i]]=1;
			continue;
		}int x=type[i];
		if(!pm[x]){
			hook f=*s.begin();
			s.erase(f);
			int mid=go(f.lf,f.rg);
			if(f.lf<mid)
				s.insert(yasa(mid-f.lf,f.lf,mid-1));
			if(mid<f.rg)
				s.insert(yasa(f.rg-mid,mid+1,f.rg));
			st.insert(mid);	
			type[i]=mid;	
			cp[mid]=1;			
			pm[x]=type[i];	
		}
		else{
			int pos=pm[x];
			st.erase(pos);
			int sc=*st.upper_bound(pos);
			int fr=*(--st.upper_bound(pos));
			sc--;fr++;
			if(fr<pos)
				s.erase(yasa(pos-fr,fr,pos-1));
			if(pos<sc)
				s.erase(yasa(sc-pos,pos+1,sc));
			s.insert(yasa(sc-fr+1,fr,sc));	
			type[i]=pos;
			pm[x]=0;
		}
	}int c=0;
	tr(it,cp)
		it->ss=++c;
	for(int i=1;i<=q;i++){
		if(!type[i]){
			printf("%d\n",tap(cp[left[i]],cp[right[i]],1,1,c));
			continue;	
		}
		upd(cp[type[i]],1,1,c);
	}
	return 0;
}
