//SkyHawk, CMC MSU

#include <iostream>
#include <list>
#include <string>
#include <vector>
#include <iterator>
#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <math.h>

using namespace std;

#define FOR(i,n) for(int i = 0;i < n;++i)
#define EPS 0.00000001
#define INF 1000000000ll

int ar[11];
int ar1[11];
bool nepar[11];

int main(int argc, char** argv)
{
	char c = getchar();
	while(c!=EOF && c!='\n')
	{
		ar[c-'0']++;
		ar1[c-'0']++;
		c = getchar();
	}
	string res1,res2;
	FOR(i,ar[0]-ar[9])
		res1+='0';
	res2 = res1;
	ar[0] = ar1[0] = min(ar[9],ar[0]);
	FOR(i,10)
		if(ar[i]>ar[9-i])
			nepar[i] = true;
	//nepar[9] = (ar[9]>0);
	bool b = false;
	for(int i = 1;i<=9;++i)
		if(nepar[i]&&nepar[10-i])
		{
			b = true;
			--ar[i];
			--ar1[10-i];	
			res1+=(i+'0');
			res2+=(10-i+'0');
			break;
		}
	if(!b)
		for(int i = 1;i<=9;++i)
			if(nepar[i] && ar[10-i]>0)
			{
				b = true;
				--ar[i];
				--ar1[10-i];
				res1+=(i+'0');
				res2+=(10-i+'0');
				break;
			}
	if(!b)
		for(int i = 0;i<=9;++i)
			if(ar[i]>0 && ar[10-i]>0)
			{
				b = true;
				--ar[i];
				--ar1[10-i];
				res1+=(i+'0');
				res2+=(10-i+'0');
				break;
			}
	if(b)
	{
		for(int i = 0;i<=9;++i)
			while(ar[i]>0 && ar1[9-i]>0)
			{
				res1+=(i+'0');
				res2+=(9-i+'0');
				--ar[i];
				--ar1[9-i];
			}
	}
	for(int i = 0;i<=9;++i)
	{
		while(ar[i]>0)
		{
			res1+=(i+'0');
			--ar[i];
		}
		while(ar1[i]>0)
		{
			res2+=(i+'0');
			--ar1[i];
		}
	}
	int t = res1.size();
	FOR(i,t)
		cout << res1[t-i-1];
	cout << endl;
	t = res2.size();
	FOR(i,t)
		cout << res2[t-i-1];
	return 0;
}
