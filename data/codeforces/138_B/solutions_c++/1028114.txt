#include <iostream>
#include <vector>
#include <iomanip>
#include <map>
#include <algorithm>
#include <utility>
#include <cmath>
#include <queue>
#include <set>

#define FOREACH(i,u) for(__typeof(u.begin()) i = u.begin();i != u.end();i++)
#define REP(i,n) for(int i = 0;i<(n);i++)
#define PB push_back
#define st first
#define nd second

using namespace std;

typedef long long LL;
long double eps = 1e-10;

int main() {
	string s;
	cin >> s;
	vector <int> t(10);
	for(int i = 0;i<10;i++) t[i] = 0;
	for(int i = 0;i<s.size();i++) {
		t[s[i]-'0']++;
	}
	int il = 0;
	string out[2];
	for(int i = 1;i<=9;i++) {
		string res[2];
		vector <int> v[2] = {t, t};
		int w = 0;
		if (min(t[i], t[10-i]) > 0) {
			v[0][i]--;
			v[1][10-i]--;
			res[0].push_back(i+'0');
			res[1].push_back(10-i+'0');
			w++;
			for(int j = 0;j<=9;j++) {
				while(v[0][j] > 0 and v[1][9-j] > 0) {
					w++;
					v[0][j]--;
					v[1][9-j]--;
					res[0].push_back(j+'0');
					res[1].push_back(9-j+'0');
				}
			}
		}
		string temp = "";
		while(v[0][0] > 0 and v[1][0] > 0) {
			v[0][0]--;
			v[1][0]--;
			temp.push_back('0');
			w++;
		}
		res[0] = temp + res[0];
		res[1] = temp + res[1];
		for(int j = 0;j<=9;j++) {
			while(v[0][j] > 0) {
				v[0][j]--;
				res[0].push_back(j+'0');
			}
		}
		for(int j = 0;j<=9;j++) {
			while(v[1][j] > 0) {
				v[1][j]--;
				res[1].push_back(j+'0');
			}
		}
		if (w >= il) {
			il = w;
			out[0] = res[0];
			out[1] = res[1];
		}
	}
	reverse(out[0].begin(), out[0].end());
	reverse(out[1].begin(), out[1].end());
	cout << out[0] << endl << out[1] << endl;
	return 0;
}
