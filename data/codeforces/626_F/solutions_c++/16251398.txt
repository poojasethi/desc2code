#include <iostream>
#include <algorithm>
using namespace std;
int n,k,data[205],dp[205][205][1005];
long long rec(int groups,int cur,int inb){
	if(inb>k)return 0;
	if(cur>n){
		if(groups<1)return 1;
		return 0;
	}
	if(dp[groups][cur][inb])return dp[groups][cur][inb];
	long long ans =(rec(groups+1,cur+1,inb+groups*(data[cur]-data[cur-1]))+(groups+1)*rec(groups,cur+1,inb+groups*(data[cur]-data[cur-1])))%1000000007;
	if(groups>0)ans=(ans+groups*rec(groups-1,cur+1,inb+groups*(data[cur]-data[cur-1])))%1000000007;
	return dp[groups][cur][inb]=(ans%1000000007);
}
int main(){
	cin>>n>>k;
	for(int i=1;i<=n;i++)cin>>data[i];
	sort(data+1,data+n+1);
	
	for(int i=0;i<=k;i++){
		dp[0][n+1][i]=1;
	}
	for(int j=n;j>0;j--){
		for(int i=0;i<n;i++){
			for(int l=0;l<=k;l++){
				if(l+i*(data[j]-data[j-1])>k)continue;
				long long ans =(long long)(dp[i+1][j+1][l+i*(data[j]-data[j-1])])+(i+1)*(long long)(dp[i][j+1][l+i*(data[j]-data[j-1])]);
				if(i>0)ans+=i*(long long)(dp[i-1][j+1][l+i*(data[j]-data[j-1])]);		
				dp[i][j][l]=ans%1000000007;
			}
		}
	}
	cout<<dp[0][1][0]<<"\n";
}