#include <cstdio>
#include <algorithm>
using namespace std;
const int mod = 1000000007;
int dp[2][110][2010];
int a[210];
inline void add(int &v, int x) {
	v += x;
	if (v >= mod) v -= mod;
}
int main() {
	int n, K;
	scanf("%d%d", &n, &K);
	for (int i = 0; i < n; i++) {
		scanf("%d", &a[i]);
	}
	int x, y, z;
	sort(a, a + n);
	dp[0][0][0] = 1;
	a[n] = a[n-1];
	for (int i = 0; i < n; i++) {
		x = a[i+1] - a[i], y = i & 1, z = y ^ 1;
		for (int j = 0; j <= min(i, min(n - i, n / 2)) + 1; j++) {
			for (int k = 0; k < 2010; k++) {
				dp[z][j][k] = 0;
			}
		}
		for (int j = 0; j <= min(i, min(n - i, n / 2)); j++) {
			for (int k = 0; k < 2010; k++) {
				if (!dp[y][j][k]) continue;
				int u = (long long)dp[y][j][k] * j % mod;
				if (j && k + (j - 1) * x <= K) {
					add(dp[z][j-1][k+(j-1)*x], u);
				}
				if (k + j * x <= K) {
					add(dp[z][j][k+j*x], u);
					add(dp[z][j][k+j*x], dp[y][j][k]);
				}
				if (k + (j + 1) * x <= K) {
					add(dp[z][j+1][k+(j+1)*x], dp[y][j][k]);
				}
			}
		}
	}
	int ans = 0;
	for (int j = 0; j <= K; j++) {
		add(ans, dp[z][0][j]);
	}
	printf("%d\n", ans);
	return 0;
}
