#include <iostream>
using namespace std;

int A[8][8], B[8][8];
struct { int x, y; } P[4];
char x[3];

int dx[] = {0, 1, 0, -1, -1, 1, 1, -1};
int dy[] = {1, 0, -1, 0, 1, 1, -1, -1};

void tura (int i)
{
	int x, y;
	for (int d = 0; d < 4; ++d)
	{
		x = P[i].x + dx[d];
		y = P[i].y + dy[d];
		
		while (x >= 0 && x < 8 && y >= 0 && y < 8 && !B[x][y])
		{
			A[x][y] = 1;
			x += dx[d];
			y += dy[d];
		}
		
		if (x >= 0 && x < 8 && y >= 0 && y < 8 && B[x][y]) A[x][y] = 1;
	}
}

void regea ()
{
	int x = P[2].x, xv;
	int y = P[2].y, yv;
	for (int d = 0; d < 8; ++d)
	{
		xv = x + dx[d];
		yv = y + dy[d];
		if (xv >= 0 && xv < 8 && yv >= 0 && yv < 8)
			A[xv][yv] = 1;
	}	
}

void regen ()
{
	int mat = 1;
	int x = P[3].x, xv;
	int y = P[3].y, yv;
	
	if ( A[x][y] == 0 ) mat = 0;
	for (int d = 0; d < 8; ++d)
	{
		xv = x + dx[d];
		yv = y + dy[d];
		if (xv >= 0 && xv < 8 && yv >= 0 && yv < 8 && A[xv][yv] == 0)
			mat = 0;
	}
	
	if (mat) cout << "CHECKMATE";
	else cout << "OTHER";
}

int main ()
{
	for (int i = 0; i < 4; ++i)
	{
		cin >> x;
		P[i].x = x[0] - 'a';
		P[i].y = x[1] - '1';
		if (i >= 0 && i <= 2) B[P[i].x][P[i].y] = 1;
	}
	
	tura (0);
	tura (1);
	regea ();
	regen ();
	
	return 0;
}

