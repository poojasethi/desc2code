

stdin_flag=1
if not stdin_flag:
  read_line_index=0
  testcasefilename="test.txt"
  Stestcase=open(testcasefilename).read()
  read_line_datas=Stestcase.split("\n")


def debugs(s):
  if not stdin_flag:
    print ";;;",s

def puts(s):
  import sys
  sys.stdout.write(str(s))

#####################################
######################################

def read_line():
  global read_line_index
  if stdin_flag:
    return raw_input()
  else:
    s=read_line_datas[read_line_index]
    read_line_index+=1
    return s

def answer():
  if stdin_flag:
    return solve()
  else:
    while read_line_proceed():
      solve()
      

def read_line_proceed():
  global read_line_index
  print"##################"
  while 1:
    if read_line_index>= len (read_line_datas ):
      return False
    if read_line_datas[read_line_index]=="%%%":
      read_line_index+=1
      return True
    read_line_index+=1


def readint():
  return int (read_line() )


def readints():
  return map(int, read_line().split(" "))

def reads():
  return read_line()




###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################

def compute(m,n,d):
  pass

def pos(s):
  return ord(s[0])-ord("a") , int(s[1])-1

def between(a,b,c):
  return a<b<c or c<b<a

def death((x,y),r1,r2,ww):
  debugs("#death %s %s"%(x,y))
  if not (0<=x<8 and 0<=y<8):
    debugs("OUTZONE")
    return True
  wx,wy=ww
  for rx,ry in [r1,r2]:
    if (rx==x or ry==y) and not (rx==x and ry==y):
      if ( rx==x==wx and between(ry,wy,y) ) or ( ry==y==wy and between(rx,wx,x) ) :
        continue
      debugs("ROOK")
      return True
  if abs(wx-x)<=1 and abs(wy-y)<=1 and not(wx==x and wy==y):
    debugs("KING")
    return True

  return False

def solve():
  r1,r2,ww,bb=[pos(s) for s in reads().split()]
  debugs((r1,r2,ww,bb))
  x,y=bb
  if all(death((x+dx,y+dy), r1,r2,ww) for dx in [-1,0,1] for dy in [-1,0,1]):
    puts( "CHECKMATE")
  else:
    puts( "OTHER" )
  pass

def test():
  pass

test()
answer()
