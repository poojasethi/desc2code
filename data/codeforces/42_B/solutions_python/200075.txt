L1, L2, K1, K2 = map(lambda x: (ord(x[0]) - ord("a"), int(x[1]) - 1) , raw_input().split());

board = [[0 for j in xrange(8)] for i in xrange(8)]

board[L1[0]][L1[1]] = 1
board[L2[0]][L2[1]] = 1
board[K1[0]][K1[1]] = 1

figures = (L1, L2, K1)

for i in xrange(L1[0]-1, -1, -1):
    board[i][L1[1]] = 2
    if ((i, L1[1]) in figures):
        break
    
for i in xrange(L1[0]+1, 8, 1):
    board[i][L1[1]] = 2
    if ((i, L1[1]) in figures):
        break

for i in xrange(L1[1]-1, -1, -1):
    board[L1[0]][i] = 2
    if ((L1[0], i) in figures):
        break
    
for i in xrange(L1[1]+1, 8, 1):
    board[L1[0]][i] = 2
    if ((L1[0], i) in figures):
        break

for i in xrange(L2[0]-1, -1, -1):
    board[i][L2[1]] = 2
    if ((i, L2[1]) in figures):
        break
    
for i in xrange(L2[0]+1, 8, 1):
    board[i][L2[1]] = 2
    if ((i, L2[1]) in figures):
        break

for i in xrange(L2[1]-1, -1, -1):
    board[L2[0]][i] = 2
    if ((L2[0], i) in figures):
        break
    
for i in xrange(L2[1]+1, 8, 1):
    board[L2[0]][i] = 2
    if ((L2[0], i) in figures):
        break
    
for i in xrange(-1, 2):
    for j in xrange(-1, 2):
        pos1 = K1[0] + i
        pos2 = K1[1] + j
        if (pos1==8 or pos1==-1 or pos2==8 or pos2==-1 or i==0 and j==0):
            continue
        board[pos1][pos2] = 2
 
if (board[K2[0]][K2[1]] != 0):
    for i in xrange(-1, 2):
        for j in xrange(-1, 2):
            pos1 = K2[0] + i
            pos2 = K2[1] + j
            if (pos1==8 or pos1==-1 or pos2==8 or pos2==-1):
                continue
            if (board[pos1][pos2] != 2):
                print "OTHER"
                exit()
    print "CHECKMATE"
else:
    print "OTHER"
