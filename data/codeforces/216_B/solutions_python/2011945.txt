import sys

n, m = map(lambda x: int(x), sys.stdin.readline().split())
e = [[] for i in xrange(n)]
for i in xrange(m):
    a, b = map(lambda x: int(x) - 1, sys.stdin.readline().split())
    e[a].append(b)
    e[b].append(a)
visited = [False for i in xrange(n)]
count = 0

def dfs(v, prev, origin, length):
    visited[v] = True
    for edge in e[v]:
        if edge != prev and edge == origin:
            if length % 2 == 1:
                globals()["count"] += 1
        if not visited[edge]:
            dfs(edge, v, origin, length + 1)

for i in xrange(n):
    if visited[i]:
        continue
    dfs(i, -1, i, 1)
print count + (n - count) % 2
