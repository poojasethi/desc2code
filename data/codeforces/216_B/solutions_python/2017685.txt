def start():
    n, m = [int(x) for x in raw_input().split()]
    archEnemies = {}
    enemies = set()
    for kas in xrange(m):
        a, b = [int(x) for x in raw_input().split()]
        enemies.add(a)
        enemies.add(b)
        if archEnemies.__contains__(a):
            archEnemies[a].append(b)
        else:
            archEnemies[a] = [b]
        if archEnemies.__contains__(b):
            archEnemies[b].append(a)
        else:
            archEnemies[b] = [a]
    numOddCycles = 0
    visited = set()
    pathLength = 0
    if m != 0:
        node = enemies.pop()
        visited.add(node)
        nextNode = None
    #print visited
    while len(enemies) >= 0 and m != 0:
        if len(archEnemies[node]) == 0:
            if len(enemies) > 0:
                node = enemies.pop()
                pathLength = 0
                visited = set()
                visited.add(node)
            else: break
            #print "if: ", pathLength, node, visited, enemies, archEnemies
        else: 
            if len(archEnemies[node]) > 0:
                nextNode = archEnemies[node][0]
                archEnemies[node].remove(nextNode)
                archEnemies[nextNode].remove(node)
                pathLength += 1
                #print "fig: ", nextNode
            if nextNode in enemies:
                node = nextNode
                enemies.discard(node)
                visited.add(node)
                #print "ene: ", pathLength, node, visited, enemies, archEnemies
            elif nextNode in visited:
                if pathLength > 1 and pathLength%2 != 0:
                    numOddCycles += 1
                    #print "odd: ", pathLength, nextNode, visited, enemies, archEnemies
                pathLength = 0
                visited = set()
                if len(enemies) > 0:
                    node = enemies.pop()
                    visited.add(node)
                    #print pathLength, node, visited, archEnemies
                else: break
    remove = numOddCycles
    if (n-remove)%2 != 0: remove += 1
    print remove

start()
