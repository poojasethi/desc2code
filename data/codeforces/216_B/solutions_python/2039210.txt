'''fml, misread the problem...
didn't see "It is guaranteed that each student has no more than two archenemies." 
and then "the teams must have an equal number of people." :('''

NAME = "P2"
try:
    inFile = open(NAME+".txt")
except:
    pass

def read():
    try:
        return inFile.readline().strip()
    except:
        return raw_input().strip()
    
def comp(a,b):
    if len(adj[a]) < len(adj[b]): 
        return -1
    elif len(adj[a]) == len(adj[b]): 
        return 0
    else:
        return 1
    
def search(cur):
    cycle = 0
    visited[cur] = True
    
    while True:
        cycle += 1
        #print cur+1
        
        for x in adj[cur]:
            if x != came_from[cur]:
                if visited[x]:
                    visited[x] = True
                    return cycle%2
                came_from[x] = cur
                cur = x
                visited[x] = True
                break
        else:
            return 0

n,m = map(int,read().split())
adj = [[] for z in range(n)]
ans = 0
for _ in range(m):
    a,b = map(int,read().split())
    a -= 1
    b -= 1
    adj[a].append(b)
    adj[b].append(a)
    
visited = [False]*n
came_from = [None]*n
nodes = range(n)
nodes.sort(comp)
for i in nodes:
    if not visited[i]:
        ans += search(i)
if (n-ans)%2 == 1:
    ans += 1
print ans