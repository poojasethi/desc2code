def dfs(u, g, used, root = 0, counter = 0):
    used[u] = 1
    for i in g[u]:
        if used[i] == 1 and i != root:
            used[i] = 2
            return counter + 1
        elif used[i] == 0:
            k = dfs(i, g, used, u, counter + 1)
            used[i] = 2
            if k % 2:
                return k
    used[u] = 2
    return 0

n, m = map(int, raw_input().split())
rships = [[] for i in xrange(n)]

for i in xrange(m):
    a, b = map(int, raw_input().split())
    a -= 1; b -= 1
    rships[a].append(b)
    rships[b].append(a)

ans = 0
used = [0] * n
for i in xrange(n):
    if used[i] == 0 and dfs(i, rships, used) % 2:
        ans += 1
print(ans + 1 if ((n - ans) % 2) else ans)
