n, m = map(int, raw_input().split())
a = [[] for i in range(n)]
for i in range(m):
    q, w = map(int, raw_input().split())
    a[q - 1].append(w - 1)
    a[w - 1].append(q - 1)
teamplus = []
htSit = 0
was = [False for i in range(n)]
def dfs(cur, nteam=0):
    global htSit
    was[cur] = True
    nfalse = 0
    for i in a[cur]:
        if not was[i]:
            dfs(i, 1 - nteam)
        else:
            nfalse += 1
    if nfalse < 2 or nteam == 1:
        teamplus[-1][nteam] += 1
    else:
        htSit += 1
for i in range(n):
    if not was[i]:
        teamplus.append([0, 0])
        dfs(i, 0)
        if teamplus[-1][(len(teamplus) - 1) % 2] > teamplus[-1][(len(teamplus)) % 2]:
            teamplus[-1][(len(teamplus) - 1) % 2], teamplus[-1][(len(teamplus)) % 2] = teamplus[-1][(len(teamplus)) % 2], teamplus[-1][(len(teamplus) - 1) % 2]
        elif teamplus[-1][(len(teamplus) - 1) % 2] == teamplus[-1][(len(teamplus)) % 2]:
            del teamplus[-1]
rem = 0
for num, val in enumerate(was):
    if not val:
        rem += 1
if rem % 2 == 1:
    teamplus.append([rem // 2, (rem + 1) // 2])
    if teamplus[-1][(len(teamplus) - 1) % 2] > teamplus[-1][(len(teamplus)) % 2]:
        teamplus[-1][(len(teamplus) - 1) % 2], teamplus[-1][(len(teamplus)) % 2] = teamplus[-1][(len(teamplus)) % 2], teamplus[-1][(len(teamplus) - 1) % 2]
print htSit + (len(teamplus) % 2)