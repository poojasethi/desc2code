myins = map(int, raw_input().split())

myene = {}

for i in range(1, myins[0] + 1):
    myene[i] = []

for i in range(myins[1]):
    temp = map(int, raw_input().split())
    myene[temp[0]].append(temp[1])
    myene[temp[1]].append(temp[0])


cycles = []
path = []

def findall(at, end, passed):
    for i in myene[at]:
        if i == end:
            temp = passed + [i,]
            temp.sort()
            if temp not in cycles:
                if len(temp) % 2 == 1:
                    cycles.append(temp)
        elif i not in passed:
            findall(i, end, passed + [i,])


for i in myene:
    for j in myene[i]:
        findall(j, i, [j])

myenes = [0,] * myins[0]
for i in cycles:
    for j in i:
        myenes[j - 1] += 1



def drop(a):
    for i in cycles:
        if a in i:
            for j in i:
                myenes[j - 1] -= 1
            cycles.pop(cycles.index(i))



abc = max(myenes)
count = 0
while abc != 0:
    count += 1
    place = myenes.index(abc)
    drop(place + 1)
    abc = max(myenes)

if (myins[0] - count) % 2 == 0:
    temp = count
else:
    temp = count + 1

print temp
