n,m= map(int,raw_input().split())

G = {}
for _ in xrange(m):
    u,v = map(int,raw_input().split())
    if u not in G: G[u] = {}
    if v not in G: G[v] = {}
    G[u][v] = 1
    G[v][u] = 1

def dfs(v,explored,color):
    for u in G[v]:
        if u not in explored:
            explored[u] = -1*color
            if dfs(u,explored,-1*color):
                return True
        else:
            if explored[u] == color:
                return True
    return False
def solve():
    ans = 0
    explored = {}
    for u in G:
        if u not in explored:
            explored[u] = 1
            if (dfs(u,explored,1)):
                ans += 1
    return ans

ans = solve()
if (n-ans) % 2 == 1: ans+=1

print ans
