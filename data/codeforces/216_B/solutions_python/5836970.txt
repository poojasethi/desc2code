#!/usr/bin/python 

def inputInts() : 
    return map(int, raw_input().split())

n, m = inputInts()
graph = [[] for i in range(n+1)]
visit = [False for i in range(n+1)]
pre = [0 for i in range(n+1)]
kickOff = 0

def dfs(i) : 
    rtn = False
    for adj in graph[i] : 
        if visit[adj] == True and adj != pre[i] :
            # print "%d -> %d" % (i, adj)
            rtn = True

        elif visit[adj] == False : 
            pre[adj] = i
            visit[adj] = True
            rtn = rtn or dfs(adj)
    return rtn

for i in range(m) : 
    a, b = inputInts()
    graph[a].append(b)
    graph[b].append(a)

preCnt = 0 
visitCnt = 0
for i in range(1, n+1) : 
    if visit[i] == False : 
        visit[i] = True
        rtn = dfs(i)
        # print rtn
        visitCnt = sum([1 for i in range(1, n+1) if visit[i] == True]) - preCnt
        # print 'visited"' + str(visitCnt)
        preCnt += visitCnt
        if rtn and visitCnt % 2 != 0 : 
            kickOff += 1

# print kickOff
print kickOff + (1 if (n-kickOff)%2 != 0 else 0)
