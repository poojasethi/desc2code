def dfs(start, now, d, f, cnt):
    f[now] = 1 
    for des in d[now]:
	if f[des] == -1:
	    return dfs(start, des, d, f, cnt + 1)
    for des in d[now]:
	if des == start:
	    return cnt % 2 == 0
    return False
    
n, m = map(int, raw_input().split())
d = [[] for i in range(n)]
for i in range(m):
    a, b = map(int, raw_input().split())
    d[a - 1].append(b - 1)
    d[b - 1].append(a - 1)
f = [-1 for i in range(n)]
cnt = 0
for i in range(n):
    if f[i] == -1:
	f[i] = i
	for des in d[i]:
	    if f[des] == -1 and dfs(i, des, d, f, 1):
		cnt += 1
print cnt + (n - cnt) % 2
