from fractions import gcd
import sys

def reduce(num, a, b):
    if num % 3 == 0:
        if a % 3 == 0:
            a = a/3*2
        elif b % 3 == 0:
            b = b/3*2
        return num / 3 * 2, a, b
    if num % 2 == 0:
        if a % 2 == 0:
            a /= 2
        elif b % 2 == 0:
            b /= 2
        return num / 2, a, b
    else:
        return -1, -1, -1

a1, b1 = map(int, raw_input().split())
a2, b2 = map(int, raw_input().split())

l = a1 * b1
r = a2 * b2
g = gcd(l, r)
l = l / g
r = r / g
moves = 0
while l != 1 or r != 1:
    moves += 1
    if l > r:
        l, a1, b1 = reduce(l, a1, b1)
        if l == -1:
            print -1
            sys.exit(0)
    else:
        r, a2, b2 = reduce(r, a2, b2)
        if r == -1:
            print -1
            sys.exit(0)
    g = gcd(l, r)
    l = l / g
    r = r / g

print moves
print a1, b1
print a2, b2


