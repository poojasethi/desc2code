#include <iostream>
#include <vector>
#include <set>
#include <utility>
using namespace std;
vector<int> seq,fault,val,t;
int s,n;
set<pair<int,int> > ret;
void swap(int a,int b)
{
    int temp;
    temp=t[a];
    t[a]=t[b];
    t[b]=temp;
}
bool valid(int x) {
	if (x%2==0) {
		return (x==n-1||t[x]<t[x+1])&&(x==0||t[x]<t[x-1]);
	} else {
		return (x==n-1||t[x]>t[x+1])&&(x==0||t[x]>t[x-1]);
	}
}
void upd(int x) {
	if (x<0||x>=n) return;
	s-=val[x];
	val[x]=valid(x);
	s+=val[x];
}
int main()
{
    ios_base::sync_with_stdio(false);
    int p1,p2,result=0,cur,u,v;
    cin>>n;
    t.resize(n);
    val.resize(n);
    for(p1=0;p1<n;p1++)
        cin>>t[p1];
    for(p1=0;p1<=n-1;p1++)
    {
        val[p1]=valid(p1);
		if (!val[p1]) fault.push_back(p1);
		s+=val[p1];
    }
    //cout<<fault.size()<<endl;
    if(fault.size()>=10)
    {
        cout<<0;
        return 0;
    }
    for(p1=0;p1<fault.size();p1++)
    {
        u=fault[p1];
        //cout<<u<<endl;
        for(p2=0;p2<t.size();p2++)
        {
            v=p2;
            swap(u,v);
		    upd(u-1); upd(u); upd(u+1); upd(v-1); upd(v); upd(v+1);
		    if (s==n)
		    {
			    ret.insert(make_pair(min(u,v),max(u,v)));
		    }
		    swap(u,v);
		    upd(u-1); upd(u); upd(u+1); upd(v-1); upd(v); upd(v+1);
        }
    }
    cout<<ret.size();
    return 0;
}