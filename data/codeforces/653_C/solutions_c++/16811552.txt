#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <map>
using namespace std;

int n, arr[500042];
vector < int > ind;
map < pair < int , int >, int > m;

bool check( int i ) {
    if ( i%2 ) {
        if ( arr[i-1] >= arr[i] ) { return 0; }
        if ( i+1 < n && arr[i+1] >= arr[i] ) { return 0; }
    }else {
        if ( i > 0 && arr[i-1] <= arr[i] ) { return 0; }
        if ( i+1 < n && arr[i+1] <= arr[i] ) { return 0; }
    }
    return 1;
}
bool blq ( ) {

    for ( int k = 0 ; k < ind.size() ; k ++ ) {
        if ( !check( ind[k] ) ) { return 0; }
    }
    return 1;
}
int main () {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cin >> n;
    for ( int i = 0 ; i < n ; i ++ ) {
        cin >> arr[i];
    }
    for ( int i = 0 ; i < n ; i ++ ) {
        if ( !check(i) ) {
            ind.push_back(i);
        }
    }
    if ( ind.size() > 6 ) {
        cout << "0\n";
        return 0;
    }
    for ( int i = 0 ; i < ind.size() ; i ++ ) {

        for ( int j = 0 ; j < n ; j ++ ) {

            swap( arr[ ind[i] ], arr[j] );
            if ( blq () && check(j) ) { m[make_pair( min( ind[i],j) , max( ind[i], j ) ) ] = 1; }
            swap( arr[ ind[i] ], arr[j] );
        }
    }
    cout << m.size() << "\n";

    return 0;
}
