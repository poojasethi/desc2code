#include <iostream>
#include <algorithm>
#include <cstdio>
#include <string>
#include <cstring>
#include <cmath>
#define Rep(i, x, y) for (int i = x; i <= y; i ++)
#define Dwn(i, x, y) for (int i = x; i >= y; i --)
#define RepE(i, x) for (int i = pos[x]; i; i = g[i].nex)
using namespace std;
typedef long long LL;
typedef double DB;
const int N = 160000;
int n, a[N], b[N], sum, v[N], bz, ans;
bool C(int z) {
	if (!z || z == n) return 1;
	if ((z % 2 == 1 && a[z] >= a[z + 1]) || (z % 2 == 0 && a[z] <= a[z + 1])) return 0;
	return 1;
}
int main()
{
	cin >> n;
	Rep(i, 1, n) scanf ("%d", &a[i]);
	Rep(i, 1, n - 1) {
		// if (i % 2 == 1 && a[i] >= a[i + 1]) v[i] = v[i + 1] = 1, sum ++, b[++ bz] = i;
		// if (i % 2 == 0 && a[i] <= a[i + 1]) v[i] = v[i + 1] = 1, sum ++, b[++ bz] = i;
		if (!C(i)) v[i] = v[i + 1] = 1, sum ++, b[++ bz] = i;
	}
	if (sum > 4) { puts("0"); return 0; }
	Rep(i, 1, n) if (v[i]) {
		Rep(j, 1, n) if (i < j || !v[j]) {
			swap(a[i], a[j]);
			bool fl = C(i) & C(i - 1) & C(j) & C(j - 1);
			Rep(k, 1, bz) {
				int z = b[k];
				// if ((z % 2 == 1 && a[z] >= a[z + 1]) || (z % 2 == 0 && a[z] <= a[z + 1])) fl = 0;
				fl &= C(z);
			}
			ans += fl;
			swap(a[i], a[j]);
		}
	}
	printf("%d\n", ans);

	return 0;
}
