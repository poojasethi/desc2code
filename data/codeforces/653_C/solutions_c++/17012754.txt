#include <bits/stdc++.h>
using namespace std;

const int INF = 1e9;
int n, t[150002], cnt = 0;
vector<int> bad;
bool ok[150001];

bool check(int i) {
    if (i%2 == 1)
        return (t[i]<t[i+1] && t[i]<t[i-1]);
    else
        return (t[i]>t[i+1] && t[i]>t[i-1]);
}

int main() {
    scanf("%d", &n);
    for (int i = 1; i <= n; i++)
        scanf("%d", &t[i]);
    t[0] = INF;
    if (n%2 == 0) t[n+1] = 0; else t[n+1] = INF;

    memset(ok, false, sizeof(ok));
    for (int i = 1; i <= n; i++)
        if (check(i))
            ok[i] = true;
        else
            bad.push_back(i);

    if (bad.size() > 6) {
        printf("0\n");
        return 0;
    }

    for (int i = 0; i < bad.size(); i++)
        for (int j = 1; j <= n; j++)
            if (ok[j] || (!ok[j] && j < bad[i])) {
                swap(t[bad[i]], t[j]);
                bool nice = true;
                if (!check(bad[i]) || !check(j)) nice = false;
                for (int k = 0; k < bad.size(); k++)
                    if (!check(bad[k])) {
                        nice = false;
                        break;
                    }
                if (nice) cnt++;
                swap(t[bad[i]], t[j]);
            }
    printf("%d\n", cnt);
    return 0;
}