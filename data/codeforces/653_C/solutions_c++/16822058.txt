#include <iostream>
#include <vector>
#include <cstdio>
#include <map>
using namespace std;

int n;
int a[150002];

void swap(int &a, int &b) {
	int t= a;
	a=b;
	b=t;
}

bool nice(int i) {
	bool ans = 1;
	if(i%2) {
		if(i!=n) ans &= a[i]<a[i+1];
		if(i!=1) ans &=a[i-1]>a[i];
	}
	else {
		if(i!=n) ans&= a[i]>a[i+1];
		if(i!=1) ans&=a[i-1]<a[i];
	}
	return ans;
}

int main() {
	cin >> n;
	for(int i=1; i<=n; ++i) {
		scanf("%d",&a[i]);
	}
	vector<int> bad;
	for(int i=1; i<=n; ++i) {
		if(!nice(i)) {
			bad.push_back(i);
		}
	}
	if(bad.size()>6) {
		cout << 0;
		return 0;
	}
	map<pair<int, int>, int> m;
	int ans = 0;

	for(int i=1; i<=n; ++i) {
		for(unsigned int j=0; j<bad.size(); ++j) {
			if(i!=bad[j]) {
				swap(a[i],a[bad[j]]);
				
				if((((i>1) && !nice(i-1))) || (((i<n)&&!nice(i+1))) || (((bad[j]>1) && !nice(bad[j]-1))) || ((bad[j])<n && !nice(bad[j]+1))) {
					swap(a[i],a[bad[j]]);
					continue;
				}
				for(unsigned int k=0; k<bad.size(); ++k) {
					if(!nice(bad[k])) break;
					if(k==bad.size()-1) {
						pair<int, int> p = make_pair(max(i,bad[j]),min(i,bad[j]));
						m[p]++;
						if(m[p]==1)
							ans++;
					}
				}
				swap(a[i],a[bad[j]]);
			}
		}
	}
	cout << ans;
	return 0;
}
