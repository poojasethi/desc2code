#include <bits/stdc++.h>
using namespace std;

const int mx = 222222;
int a[mx];
int n;
vector<int> nsat;
bool check() {
	for (int i = 0; i < nsat.size(); ++i) {
		if (nsat[i] % 2) {
			if (a[nsat[i]] >= a[nsat[i] + 1] || a[nsat[i]] >= a[nsat[i] - 1]) return 0;
		} else {
			if (a[nsat[i]] <= a[nsat[i] + 1] || a[nsat[i]] <= a[nsat[i] - 1]) return 0;
		}
	}
	return 1;
}
int main(int argc, char const *argv[]) {
    scanf("%d", &n);
    set<pair<int, int> > all;
    for (int i = 1; i <= n; ++i) scanf("%d", &a[i]);
    a[0] = mx;
	a[n + 1] = n % 2 ? mx : 0;
	for (int i = 1; i <= n; ++i) {
		if (i % 2) {
			if (a[i] >= a[i + 1] || a[i] >= a[i - 1]) nsat.push_back(i);
		} else {
			if (a[i] <= a[i + 1] || a[i] <= a[i - 1]) nsat.push_back(i);
		}
	}
	if (nsat.size() > 10 || nsat.size() == 0) {
		printf("0\n");
		return 0;
	}
	for (int i = 0; i < nsat.size(); ++i) {
		for (int j = 1; j <= n; ++j) {
			if (j == nsat[i]) continue;
			swap(a[j], a[nsat[i]]);
			bool inc = check();
			if (j % 2) {
				if (a[j] >= a[j + 1] || a[j] >= a[j - 1]) inc = 0;
			} else {
				if (a[j] <= a[j + 1] || a[j] <= a[j - 1]) inc = 0;
			}
			if (inc) all.insert(make_pair(min(j, nsat[i]), max(j, nsat[i])));
			swap(a[j], a[nsat[i]]);
		}
	}
	printf("%d\n", (int)all.size());
	return 0;
}