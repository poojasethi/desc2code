#include<bits/stdc++.h>
#define M 200000
using namespace std;
int s[M + 5] , t[M + 5] , px , py , n , ans;
bool ck(int id){
	if(id%2)	return (t[id] < t[id + 1]);
	return (t[id] > t[id + 1]);
}
bool valid(int x,int y){
	if(x > y)	swap(x , y);
	bool ret = true;
	swap(t[x] , t[y]);
	if(x > 1 && s[x - 2] > 0)	ret =  false;
	if(s[n] - s[y] > 0)	ret =  false;
	if(y - 2 >= x + 1 && s[y - 2] - s[x] > 0)	ret = false;
	if(x > 1 && !ck(x - 1))	ret =  false;
	if(x < n && !ck(x))	ret = false;
	if(y > 1 && !ck(y - 1))	ret = false;
	if(y < n && !ck(y))	ret = false;
	swap(t[x] , t[y]);
	return ret;
}
main(){
//	freopen("test.inp","r",stdin);
	scanf("%d",&n);
	for(int i = 1 ; i <= n ; i++)	scanf("%d",&t[i]);
	for(int i = 1 ; i < n ; i++){
		if(i%2)	s[i] = s[i - 1] + (1 - ck(i));
		else s[i] = s[i - 1] + (1 - ck(i));
	}
	s[n] = s[n - 1];
	for(int i = 1 ; i < n ; i++)
		if(s[i] > 0){
			px = i; py = i + 1;
			break;
		}
	for(int i = 1 ; i <= n ; i++){
		if(i != px) ans += valid( i , px );
		if(i != py)	ans += valid( i , py );
	}
	ans -= valid(px , py);
	printf("%d",ans);
}
