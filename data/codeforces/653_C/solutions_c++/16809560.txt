#include <iostream>
#include <cstdio>
#include <algorithm>
#include <set>
#include <vector>
#include <map>

const int mod = int(1e9) + 7;

using namespace std;

int t[200500];
int n;
bool check(int pos)
{
    if(pos>0)
    {
        if((pos&1)==0 && t[pos]>=t[pos-1]) return false;
        if((pos&1)==1 && t[pos]<=t[pos-1]) return false;
    }
    if(pos!=n-1)
    {
        if((pos&1)==0 && t[pos]>=t[pos+1]) return false;
        if((pos&1)==1 && t[pos]<=t[pos+1]) return false;
    }
    return true;
}

vector<int> bad;

int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++)
        scanf("%d",t+i);
    for(int i=0;i<n;i++)
        if(!check(i))
            bad.push_back(i);
    if(bad.size()>6) {cout <<0 <<endl; return 0;}
    int res = 0;
    set<pair<int,int> > checked;
    for(int i=0;i<bad.size();i++)
    for(int j=0;j<n;j++)
    {
        if(checked.find(make_pair(bad[i],j))!=checked.end())continue;
        if(checked.find(make_pair(j,bad[i]))!=checked.end())continue;
        checked.insert(make_pair(bad[i],j));
        checked.insert(make_pair(j,bad[i]));
        swap(t[bad[i]],t[j]);

        bool ok = check(j);
        for(int k=0;k<bad.size();k++)
            if(!check(bad[k])){ok = false; break;}
        if(ok) res++;
        swap(t[bad[i]],t[j]);

    }
    cout <<res <<endl;
}
/*
a b c d e f
ab ca cc ee ff
abb cab  cca eea ccc eec
*/
