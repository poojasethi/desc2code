#include <stdio.h>
#include <algorithm>
#include <memory.h>
#include <vector>
using namespace std;

#define N 200100

vector <int> bad;
int a[N], n;
bool vis[N];

bool ok(int x, int i, int j) {
	int A = a[x], B = a[x+1];
	if (x == i) A = a[j];
	if (x == j) A = a[i];
	if (x + 1 == i) B = a[j];
	if (x + 1 == j) B = a[i];
	if (x & 1) {
		if (A < B) return 1;
		return 0;
	}
	else {
		if (A > B) return 1;
		return 0;
	}
}

int calc(int x) {
	int rlt = 0;
	for (int i = 1; i <= n; i ++) {
		bool yes = 1;
		if (vis[i] && i >= x) continue;
		for (int j = 0; j < bad.size(); j ++) {
			if (bad[j] < n && !ok(bad[j], x, i)) {yes = 0; break;}
		}
		if (i < n && !ok(i, x, i)) yes = 0;
		if (i > 1 && !ok(i - 1, x, i)) yes = 0;
		if (x < n && !ok(x, x, i)) yes = 0;
		if (x > 1 && !ok(x - 1, x, i)) yes = 0;
		if (yes) rlt ++;
	}
///	printf("x = %d, rlt = %d\n", x, rlt);
	return rlt;
}

int main() {
///	freopen("c.in", "r", stdin);
	memset(vis, 0, sizeof vis);
	scanf("%d", &n);
	for (int i = 1; i <= n; i ++) scanf("%d", &a[i]);
	bad.clear();

	for (int i = 1; i <= n; i ++) {
		if ((i < n && !ok(i, 1, 1)) || (i > 1 && !ok(i - 1, 1, 1))) bad.push_back(i), vis[i] = 1;
	}

	if (bad.size() > 6) {puts("0"); return 0;}

	int ans = 0;
	for (int i = 0; i < bad.size(); i ++) {
		ans += calc(bad[i]);
	}
	printf("%d\n", ans);
	return 0;
}