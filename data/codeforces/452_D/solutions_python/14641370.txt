# while True:
#     try:
#         # n = int(raw_input())

#     except (EOFError):
#         break
# b = map(int, s2.split())
import heapq
s1 = raw_input()
knt = map(int, s1.split(' '))
k = knt[0];
n = []
for i in xrange(1, 4):
    n.append(knt[i])
t = []
for i in xrange(4, 7):
    t.append(knt[i])
time = [[] for i in xrange(3)]
while n[0] > 0:
    time[0].append(0)
    n[0] -= 1
while n[1] > 0:
    time[1].append(t[0])
    n[1] -= 1
while n[2] > 0:
    time[2].append(t[0] + t[1])
    n[2] -= 1
while k > 0:
    temp1 = min(time[0])
    time[0].remove(temp1)
    temp2 = min(time[1])
    time[1].remove(temp2)
    temp3 = min(time[2])
    time[2].remove(temp3)
    re = max(temp1, temp2 - t[0], temp3 - t[0] - t[1])
    time[0].append(re + t[0])
    time[1].append(re + t[0] + t[1])
    time[2].append(re + t[0] + t[1] + t[2])
    k -= 1
print re + sum(t)

 					 	 	  		  	   	 	    				