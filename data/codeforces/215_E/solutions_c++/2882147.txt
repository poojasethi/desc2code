#include <cstdio>
#include <cstring>

typedef long long LL;

const int maxn = 105;

int a[maxn], f[maxn];

LL solve(int n, int k, LL num) {
    LL x = 0;
    for (int i = 0; i < k; ++ i) x = (x << 1) + a[n - i - 1];
    LL y = x;
    for (int i = 1; i < n / k; ++ i) y = (y << k) + x;
    LL ret = x - (1 << (k - 1)) + 1;
    return ret - (y > num);
}

LL cal(LL x) {
    if (x == 0) return 0;
    int n;
    LL ret = 0, y = x;
    for (n = 0; x; x >>= 1, ++ n) a[n] = x & 1;
    for (int d = 2; d <= n; ++ d) {
        memset(f, 0, sizeof(f));
        for (int k = 1; k < d; ++ k) {
            if (d % k) continue;
            if (d < n) f[k] = 1 << (k - 1);
            else f[k] = solve(n, k, y);
            for (int i = 1; i < k; ++ i) {
                if (k % i == 0) f[k] -= f[i];
            }
            ret += f[k];
        }
    }
    return ret;
}

int main() {
    LL x, y;
    while (scanf("%I64d%I64d", &x, &y) != EOF) {
        printf("%I64d\n", cal(y) - cal(x - 1));
    }
    return 0;
}

 		  		 	 						  	   	 		