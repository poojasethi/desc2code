#include<stdio.h>
__int64 J[71],dp[71],l,r;
__int64 cal(int len)
{
	__int64 ans=0;
	for(int i=1;i<len;i++)
	{
		if(len%i)continue;
		dp[i]=J[i-1];
		for(int j=1;j<i;j++)
		{
			if(i%j==0)dp[i]-=dp[j];
		}
		ans+=dp[i];
	}
	return ans;
}
__int64 ca(__int64 n)
{
	int shu[71],len=0;
	__int64 temp=n;
	while(temp)
	{
		shu[++len]=temp&1;
		temp>>=1;
	}
	__int64 ans=0;
	for(int i=1;i<len;i++)
	ans+=cal(i);
	for(int i=1;i<len;i++)
	{
		if(len%i)continue;
		__int64 num=1;
		dp[i]=0;
		for(int j=len-1;j>len-i;j--)
		{
			if(shu[j])dp[i]+=J[i-(len-j)-1];
			num=num*2+shu[j];
		}
		temp=num;
		for(int j=1;j<len/i;j++)
		num=(num<<i)+temp;
		dp[i]+=(num<=n);
		for(int j=1;j<i;j++)
		{
			if(i%j==0)dp[i]-=dp[j];
		}
		ans+=dp[i];
	}
	return ans;
}
int main()
{
	int i;
	for(i=1,J[0]=1;i<=71;i++)
	J[i]=J[i-1]*2;
	while(~scanf("%I64d %I64d",&r,&l))
	printf("%I64d\n",ca(l)-ca(r-1));
}
   	 					 		 		 	 		 	 	 	 	 	