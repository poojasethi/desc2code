#include <cstdio>
#include <cstring>
#include <algorithm>
#define N 70

int d[N];
long long l,r,dp[N],u[N];

long long cal(int p,int len,long long x) {
  long long a = 0,b = 0;
  for (int i = 0; i < p; ++i) a += (long long)d[len-i]<<(p-i-1);
  for (int i = 0; i < len/p; ++i) {
    b <<= p;
    b += a;
  }
  return a-((long long)1<<(p-1))+1-((b>x)?1:0);
}

long long f(long long n) {
  int len = 0;
  long long x = n;
  while (n) {
    d[++len] = n%2;
    n >>= 1;
  }
  if (len < 2) return 0;
  long long res = 0;
  for (int i = 2; i < len; ++i) res += dp[i];
  memset(u,0,sizeof(u));
  for (int i = 1; i < len; ++i) {
    if (len%i) continue;
    u[i] = cal(i,len,x);
    for (int j = 1; j < i; ++j)
      if (i%j==0) u[i] -= u[j];
    res += u[i];
  }
  return res;
}

int main() {
  for (int i = 2; i < N; ++i)
    for (int j = 1; j < i; ++j) {
      if (i%j) continue;
      dp[i] += (1<<(j-1))-dp[j];
    }
  scanf("%I64d%I64d",&l,&r);
  printf("%I64d\n",f(r)-f(l-1));
  return 0;
}
