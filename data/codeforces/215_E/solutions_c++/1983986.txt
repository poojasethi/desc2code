#include <bitset>
#include <iostream>
#include <fstream>
#include <algorithm>
#include <cmath>
#include <utility>
#include <deque>
#include <vector>
#include <list>
#include <queue>
#include <string>
#include <complex>
#include <cstring>
#include <map>
using namespace std;
int mobius[61];
int main(){
	long long l, r;
	scanf("%I64d %I64d", &l, &r);
	
	mobius[1] = 1;
	for(int i=2;i<=61;i++){
		int x = 0;
		for(int j=1;j<=i;j++){
			if(i % j == 0){
				x += mobius[j];
			}
		}
		mobius[i] = -x;
		//cout << mobius[i] << endl;
	}
	long long answer = 0;
	for(int i=1;i<=31;i++){
		long long x = 1 + ((1ll) << i);
		long long bound = ((1ll) << i) - 1;
		long long bound2 = ((1ll) << (i-1)) - 1;
		for(int j=2;j*i <= 62;j++){
			long long upper = r / x;
			long long lower = (l - 1) / x;
			//cout << oct << bound << " " << x << endl;
			answer += -mobius[j] * (max(min(upper, bound) - bound2, 0ll) - max(min(lower, bound) - bound2, 0ll));
			//cout << answer << endl;
			x <<= i;
			x += 1;
		}
	}
	printf("%I64d\n", answer);
}
