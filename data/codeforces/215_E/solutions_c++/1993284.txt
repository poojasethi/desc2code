
#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>

using namespace std;

typedef long long LL;
LL l, r;

LL cal1(int len) {
	LL ans = 1LL << (len - 1);
	for (int k = 1; k < len; ++k) {
		if (len % k == 0) ans -= cal1(k);
	}
	return ans;
}

LL cal2(int len, LL limit, int cnt) {
	LL bit = limit >> (cnt - len), ans, temp;
	ans = bit - (1LL << (len - 1));
	temp = bit;
	for (int k = 1; k < cnt / len; ++k) {
		temp <<= len;
		temp |= bit;
	}
	if (temp <= limit) ++ans;	
	for (int k = 1; k < len; ++k) {
		if (len % k == 0) ans -= cal2(k, limit, cnt);
	}
	return ans;
}

LL work(LL n) {
	if (n == 0) return 0;
	LL temp = n, len = 0, ans = 0;
	while (temp) {
		temp >>= 1, ++len;
	}
	for (int i = 1; i < len; ++i) {
		ans += cal1(i);
	}
	ans += cal2(len, n, len);
	return n - ans;
}

int main() {
	cin >> l >> r;
	cout << work(r) - work(l - 1) << endl;
	return 0;
}
