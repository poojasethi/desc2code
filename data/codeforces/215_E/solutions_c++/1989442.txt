#include <iostream>
using namespace std;
typedef long long LL;

LL solve(LL n, int unit_len, int rep_cnt)
{
	LL mask = n >> (unit_len*(rep_cnt-1));
	LL low  = 1LL << unit_len-1;
	if(mask < low)
		return 0;
	mask = min(mask, (low<<1)-1);
	LL cnt = mask - low;
	LL z = 0;
	for(int i=0; i<rep_cnt; ++i)
		z |= mask<<(i*unit_len);
	return cnt + (z<=n);
}

LL solve(LL n)
{
	LL total = 0;
	for(int s=1; s<64; ++s)
	for(int r=2; s*r<64; ++r) {
		LL v = solve(n, s, r);

		int so = 0;
		int bad = 0;
		int rr = r;
		for(int p=2; p<rr; ++p)
			if(rr%p == 0) {
				so++;
				rr /= p;
				if(rr%p==0) ++bad;
				while(rr%p==0) rr/=p;
			}

		if(!bad) {
			if(so%2==0)
				total += v;
			else
				total -= v;
		}
	}
	return total;
}

int main()
{
	for(LL a,b; cin>>a>>b; )
		cout << solve(b)-solve(a-1) << endl;
}