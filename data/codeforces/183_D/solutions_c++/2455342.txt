#include<iostream>
#include<algorithm>
#include<queue>
#include<cstdio>
#include<cstdlib>
#include<cstring>

#define mp(x,y) make_pair((x),(y))
#define G(n,i,j) f[g[i][j]][n]

using namespace std;
typedef long double ldb;

const int maxn=4000,maxm=400;
int N,M,n;
ldb a[maxn][maxm];
int b[maxm],g[maxm][maxn];
ldb f[maxn+maxm][maxn];
priority_queue<pair<ldb,int> >Q;

  void sol(int m,int k){
    g[m][k]=++n;
    for(int i=1;i<=N;++i)
      G(i,m,k)=G(i-1,m,k-1)*a[i][m]+G(i-1,m,k)*(1-a[i][m]);
  }

int main(){
  int i,j;
  double w;
  ldb ans=0;
  scanf("%d%d",&N,&M);
  for(i=1;i<=N;++i)
    for(j=0;j<M;++j)
      scanf("%lf",&w),a[i][j]=w/1000;
  for(i=0;i<=N;++i)
    f[0][i]=1;
  for(i=0;i<M;++i)
    sol(i,b[i]=1),Q.push(mp(G(N,i,1),i));
  for(j=0;j<N;++j){
    ans+=Q.top().first,i=Q.top().second,Q.pop();
    if(b[i]<=N)
      sol(i,++b[i]),Q.push(mp(G(N,i,b[i]),i));
  }
  printf("%.12lf",(double)ans);
  return 0;
}
