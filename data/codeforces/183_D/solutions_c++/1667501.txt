#include<cstdio>
#include<cstring>
#include<algorithm>

int n, m, t1, t2;
double c[305][3005], q[305][3005], f[305][3005], p[305], ans, tmp;

int main() {
    scanf("%d %d", &n, &m);
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= m; j++) {
            scanf("%d", &t1);
            c[j][i] = (double)t1 / 1000;
        }
    }
    for (int i = 1; i <= m; i++) {
        f[i][0] = 1;
        for (int j = 1; j <= n; j++) {
            f[i][j] = f[i][j - 1] * (1 - c[i][j]);
        }
        p[i] = 1 - f[i][n];
    }
    ans = 0;
    for (int i = 1; i <= n; i++) {
      t2 = std::max_element(p + 1, p + 1 + m) - p;
        ans = ans + p[t2];
        for (int j = 1; j <= n; j++) {
          q[t2][j] = q[t2][j - 1] * (1 - c[t2][j]) + f[t2][j - 1] * c[t2][j];
        }
        memcpy(f[t2], q[t2], sizeof(f[t2]));
        p[t2] = p[t2] - q[t2][n];
    }
    printf("%.12lf\n", ans);
    return 0;
}
