from math import sqrt
def dist_ab(a,b):
    x =(a[0]-b[0])**2
    y =(a[1]-b[1])**2
    return x+y
def S(p):return len(set(p))-1==len(set([pow(pow(a-c,2)+pow(b-d,2),.5)for a,b in p for c,d in p]))
def is_square(a,b,c,d):
    return S([a,b,c,d])
def fun(z):
    x,y,a,b=z[0],z[1],z[2],z[3]
    x1 = 2*a - x
    y1 = 2*b - y
    quad = {}
    if(x>=a and y>=b):
        quad[0]=(x,y)
        quad[2]=(x1,y1)
    elif(x<=a and y>=b):
        quad[1]=(x,y)
        quad[3]=(x1,y1)
    elif(x<=a and y<=b):
        quad[2]=(x,y)
        quad[0]=(x1,y1)
    else:
        quad[3]=(x,y)
        quad[1]=(x1,y1)
    x2 = x
    y2 = y1
    x3 = x1
    y3 = y
    if(x2>=a and y2>=b):
        quad[0]=(x2,y2)
        quad[2]=(x3,y3)
    elif(x2<=a and y2>=b):
        quad[1]=(x2,y2)
        quad[3]=(x3,y3)
    elif(x2<=a and y2<=b):
        quad[2]=(x2,y2)
        quad[0]=(x3,y3)
    else:
        quad[3]=(x2,y2)
        quad[1]=(x3,y3)
    ls = [quad[0],quad[1],quad[2],quad[3]]
    if(x>=a and y>=b):
        return ls
    elif(x<=a and y>=b):
        return ls[1:]+ls[:1]
    elif(x<=a and y<=b):
        return ls[2:]+ls[:2]
    else:
        return ls[3:]+ls[:3]
def prog():
    n = input()
    while(n!=0):
        n-=1
        a = [int(i) for i in raw_input().split()]
        b = [int(i) for i in raw_input().split()]
        c = [int(i) for i in raw_input().split()]
        d = [int(i) for i in raw_input().split()]
        ans = 10**9
        a_pos = [(a[0],a[1]),(a[2]-a[1]+a[3],a[3]-a[2]+a[0]),(2*a[2]-a[0],2*a[3]-a[1]),(a[2]+a[1]-a[3],a[2]+a[3]-a[0])]
        b_pos = [(b[0],b[1]),(b[2]-b[1]+b[3],b[3]-b[2]+b[0]),(2*b[2]-b[0],2*b[3]-b[1]),(b[2]+b[1]-b[3],b[2]+b[3]-b[0])]
        c_pos = [(c[0],c[1]),(c[2]-c[1]+c[3],c[3]-c[2]+c[0]),(2*c[2]-c[0],2*c[3]-c[1]),(c[2]+c[1]-c[3],c[2]+c[3]-c[0])]
        d_pos = [(d[0],d[1]),(d[2]-d[1]+d[3],d[3]-d[2]+d[0]),(2*d[2]-d[0],2*d[3]-d[1]),(d[2]+d[1]-d[3],d[2]+d[3]-d[0])]
        for i1 in xrange(0,4):
            for i2 in xrange(0,4):
                for i3 in xrange(0,4):
                    for i4 in xrange(0,4):
                        if(is_square(a_pos[i1],b_pos[i2],c_pos[i3],d_pos[i4])):
                            ans = min(ans,i1+i2+i3+i4)
        if(ans==10**9):
            print -1
        else:
            print ans
prog()
