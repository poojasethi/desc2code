import math

INF = 10**20
EPS = 10**(-5)

def rotateccw90(x, y, a, b):
  x, y = x-a, y-b
  x, y = -y, x
  x, y = x+a, y+b
  return x, y

def dist(p1, p2):
  x1, y1 = p1
  x2, y2 = p2
  dx, dy = x1-x2, y1-y2
  return math.sqrt(dx*dx+dy*dy)

def issquare(x1, y1, x2, y2, x3, y3, x4, y4):
  d = []
  p = ((x1, y1), (x2, y2), (x3, y3), (x4, y4))
  for i in range(3):
    for j in range(i+1, 4):
      d.append(dist(p[i], p[j]))
  d.sort()
  for i in range(1, 4):
    if abs(d[i]-d[i-1]) > EPS: return False
  if abs(d[4]-d[5]) > EPS: return False
  if d[0] < EPS: return False
  return True

def solve(moles):
  cands = []
  for x, y, a, b in moles:
    cand = [(0, x, y)]
    for c in range(1, 4):
      x1, y1 = cand[-1][1:]
      x1, y1 = rotateccw90(x1, y1, a, b)
      cand.append((c, x1, y1))
    cands.append(cand)
  n = len(cands)
  minc = INF
  for i in range(4):
    c1, x1, y1 = cands[0][i]
    for j in range(4):
      c2, x2, y2 = cands[1][j]
      for k in range(4):
        c3, x3, y3 = cands[2][k]
        for l in range(4):
          c4, x4, y4 = cands[3][l]
          if issquare(x1, y1, x2, y2, x3, y3, x4, y4):
            c = c1+c2+c3+c4
            if c < minc:
              minc = c
  if minc == INF: return -1
  return minc

n = int(raw_input())
for i in range(n):
  moles = []
  for j in range(4):
    moles.append(map(int, raw_input().split()))
  print solve(moles)