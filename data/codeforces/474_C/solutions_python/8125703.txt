


def vec(x,y,a,b):
    return (x-a,y-b)

def ro(x,y,i,j,n):

    if n == 0 :
        return (x+i,y+j),m;
    if n == 1:
        return (x-j,y+i),m;
    if n == 2:
        return (x-i,y-j),m;
    if n == 3:
        return (x+j,y-i),m;
    
    return 0

def dist(i,j):
    x,y = i
    a,b = j
    return ((x-a)*(x-a) + (y-b)*(y-b))**0.5

for _ in xrange(input()):

    ans = 100000000
    N = 0
    H = []
    for x,y,a,b in [ map(int,raw_input().split()) for i in xrange(4) ]:
        i,j = vec(x,y,a,b)
        H.append([ ro(a,b,i,j,m) for m in xrange(4)])

    for i in H[0]:
        for j in H[1]:
            for k in H[2]:
                for l in H[3]:
                    I,J,K,L = sorted([i,j,k,l])
                    a,m1 = I
                    b,m2 = J
                    c,m3 = K
                    d,m4 = L

                    Mx = sum(map(lambda x: x[0],[a,b,c,d]))/4.0
                    My = sum(map(lambda x: x[1],[a,b,c,d]))/4.0
                    M = (Mx,My)

                    #print I,J,K,L
                    if( dist(a,M) == dist(b,M) == dist(c,M) == dist(d,M) and len(set([a,b,c,d]))==4 and dist(a,b) ==  dist(c,d) == dist(a,c) == dist(b,d) ):

                        #print I,J,K,L,sum([m1,m2,m3,m4])
                        ans = min(sum([m1,m2,m3,m4]),ans)

    if ans == 100000000:
        print -1
    else:
        print ans






