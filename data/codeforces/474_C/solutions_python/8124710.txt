import bisect

n = int(raw_input())

for i in xrange(n):
	xy=[]
	for j in range(4):
		xy.append( map(int, raw_input().split() ) )
	mina = 99
	for bmask in xrange(2**8):
		rotatsum = (bmask&3) + ((bmask>>2)&3) + ((bmask>>4)&3) + ((bmask>>6)&3)
		def rotat(a):
			a[0]-=a[2]
			a[1]-=a[3]
			a[0],a[1] = -a[1],a[0]
			a[0]+=a[2]
			a[1]+=a[3]

		## check if it's a square
		distar=[]
		def sqrhypot(a,b):
			return a*a+b*b
		for ii in xrange(3):
			for jj in xrange(ii+1,4):
				distar.append( sqrhypot(xy[ii][0]-xy[jj][0], xy[ii][1]-xy[jj][1]) )

		distar = sorted(distar) # 4 short, 2 long
		if(distar[0]==distar[3] and distar[4]==distar[5] and distar[3]*2==distar[4]
			and distar[0]!=0 and mina> rotatsum): mina = rotatsum
		rotat(xy[0])
		if(bmask&0x3==3): rotat(xy[1])
		if(bmask&0xF==0xF): rotat(xy[2])
		if(bmask&0x3F==0x3F): rotat(xy[3])

	if mina==99: mina=-1
	print mina