#include <bits/stdc++.h>
#define rep(i, n)   for(int i = 0; i < n; i ++)
#define int64 long long

int x[4], y[4], a[4], b[4];
int ans, n = 4;
inline int64 squ(int x) {return 1LL * x * x;}
void rotate(int i) {
    int dx = x[i] - a[i];
    int dy = y[i] - b[i];
    x[i] = a[i] - dy;
    y[i] = b[i] + dx;
}
void dfs(int i, int sum) {
    if(i == n) {
        rep(j, n) {
            int64 dist[3], tot = 0;
            rep(k, n) {
                if(j == k)  continue;
                dist[tot ++] = squ(x[j] - x[k]) + squ(y[j] - y[k]);
            }
            std::sort(dist, dist + 3);
            if(dist[0] != 0 && dist[2] == 2 * dist[0] && dist[1] == dist[0]);
            else
                return;
        }
        ans = std::min(ans, sum);
    } else {
        dfs(i + 1, sum);
        rep(_, 3) {
            rotate(i);
            dfs(i + 1, sum + 1 + _);
        }
        rotate(i);
    }
}

int main() {
    int N;
    scanf("%d", &N);
    rep(cas, N) {
        rep(i, n)
            scanf("%d%d%d%d", x + i, y + i, a + i, b + i);
        ans = 10000;
        dfs(0, 0);
        if(ans == 10000)
            ans = -1;
        printf("%d\n", ans);
    }
    return 0;
}
