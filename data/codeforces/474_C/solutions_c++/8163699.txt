#include <iostream>
#include <cstdio>
#include <cstring>
#include <math.h>
#include <cstdlib>
#include <algorithm>
#include <vector>
using namespace std;

long long x[4],y[4],a[4],b[4],cx[4],cy[4];
int getmoves(int k){
    if(k==4){
        vector<long long>v;
        for(int i=0;i<4;i++)
            for(int j=i+1;j<4;j++){
                long long z=(cx[i]-cx[j])*(cx[i]-cx[j])+(cy[i]-cy[j])*(cy[i]-cy[j]);
                v.push_back(z);
            }
        sort(v.begin(),v.end());
        if(v[0]==v[1] && v[1]==v[2] && v[1]==v[3] && v[0]>0 && v[4]==v[5])
            return 0;
        return 1<<30;
    }
    int ans=1<<30;
    cx[k]=x[k];
    cy[k]=y[k];
    ans=min(ans,getmoves(k+1));
    for(int i=1;i<=3;i++){
        int x1=cx[k],y1=cy[k];
        cx[k]=a[k]+b[k]-y1;
        cy[k]=-a[k]+b[k]+x1;
        ans=min(ans,i+getmoves(k+1));
    }
    return ans;
}
int main()
{
    int n;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        for(int j=0;j<4;j++){
            cin>>x[j]>>y[j]>>a[j]>>b[j];
        }
        int ans=getmoves(0);
        if(ans==1<<30)  printf("-1\n");
        else printf("%d\n",ans);
    }
    return 0;
}
