#include <bits/stdc++.h>

using namespace std;

typedef complex <int> pt;

int n;
pt p[4][4];

bool is_square (pt a, pt b, pt c, pt d) {
  pt o = a + b + c + d;
  pt A = 4 * a - o;
  pt B = 4 * b - o;
  pt C = 4 * c - o;
  pt D = 4 * d - o;
  pt AA = A * pt (0, 1);
  pt AAA = AA * pt (0, 1);
  pt AAAA = AAA * pt (0, 1);
  if ((AA == B || AA == C || AA == D) &&
      (AAA == B || AAA == C || AAA == D) &&
      (AAAA == B || AAAA == C || AAAA == D)) {
    return a != b && a != c && a != d;
  }
  return false;
}

void go() {
  for (int i = 0; i < 4;i++){
    int x, y, a, b;
    scanf ("%d %d %d %d", &x, &y, &a, &b);
    p[i][0] = pt (x, y);
    for (int j = 1; j < 4; j++) {
      p[i][j] = (p[i][j-1] - pt(a,b))* pt(0, 1) + pt(a,b);
    }
  }
  int best = 17;
  for (int a = 0; a < 4; a++)
    for (int b = 0; b < 4; b++)
      for (int c = 0; c < 4; c++)
        for (int d = 0; d < 4; d++)
          if (is_square (p[0][a], p[1][b], p[2][c], p[3][d])) {
            best = min (best, a + b + c + d);
          }
  printf ("%d\n", (best == 17) ? -1 : best);
}

int main() {
  scanf ("%d", &n);
  for (int i = 0; i < n; i++) {
    go();
  }
}
