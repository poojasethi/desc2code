#include <cstdio>
#include <algorithm>
using namespace std;
const int n = 4;
class Q{
public:
	int a, b, x, y;
	void rot(){
		int ax = a + b - y, ay = x - a + b;
		x = ax, y = ay;
	}
}a[10], b[10];
int T, ans;
long long dis(Q a, Q b){
	return 1ll * (b.x - a.x) * (b.x - a.x) + 1ll * (b.y - a.y) * (b.y - a.y);
}
bool is(){
	for (int i = 1; i <= n; ++i) b[i] = a[i];
	long long max = 0, maxi;
	for (int i = 2; i <= n; ++i) if (dis(b[1], b[i]) > max){
		max = dis(b[1], b[i]);
		maxi = i;
	}
	if (max == 0) return false;
	swap(b[2], b[maxi]);
	if (dis(b[1], b[2]) != dis(b[3], b[4])) return false;
	if (dis(b[1], b[3]) != dis(b[1], b[4]) || dis(b[1], b[3]) != dis(b[2], b[3]) || dis(b[1], b[3]) != dis(b[2], b[4])) return false;
	return true;
}
void tr(int x, int y){
	if (x == 5){
		if (is())
			if (y < ans) ans = y;
		return;
	}
	tr(x + 1, y);
	a[x].rot();
	tr(x + 1, y + 1);
	a[x].rot();
	tr(x + 1, y + 2);
	a[x].rot();
	tr(x + 1, y + 3);
	a[x].rot();
}
int main(){
	for (scanf("%d", &T); T--; ){
		for (int i = 1; i <= n; ++i) scanf("%d%d%d%d", &a[i].x, &a[i].y, &a[i].a, &a[i].b);
		ans = 10000;
		tr(1, 0);
		if (ans < 1000) printf("%d\n", ans);
		else printf("-1\n");
	}
	return 0;
}
