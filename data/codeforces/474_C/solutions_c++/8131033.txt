#include<bits/stdc++.h>
#define ll long long
#define dist(i,j) (ll)(x[j]-x[i])*(x[j]-x[i]) + (ll)(y[j]-y[i])*(y[j]-y[i])
using namespace std;

int n,ans;
int x[4],y[4],a[4],b[4];
ll d[20];

inline bool check(){
    int t=0;
    for(int i=0;i<4;i++)
        for(int j=i+1;j<4;j++)
            d[t++]=dist(i,j);
    sort(d,d+t);
    if(!d[0])return false;
    for(int i=1;i<4;i++)
        if(d[0]!=d[i])
            return false;
    if(d[4]!=d[5])
        return false;
    return true;
}

inline void dfs(int cur,int moves){
    //cout<<"cur:"<<cur<<"\tmoves:"<<moves<<endl;
    if(cur==4){
        if(check()){
          //  cout<<"\tendtered\n";
            ans=min(ans,moves);
        }
        return;
    }
    for(int i=0;i<4;i++){
        dfs(cur+1,moves+i);
        int nx=x[cur]-a[cur];
        int ny=y[cur]-b[cur];
        x[cur]=-ny+a[cur];y[cur]=nx+b[cur];
    }
}

int main(){
    scanf("%d",&n);
    while(n--){
        for (int i=0;i<4;i++)
            scanf("%d %d %d %d",&x[i],&y[i],&a[i],&b[i]);

        ans=20;
        dfs(0,0);
        if (ans==20) ans=-1;
        printf("%d\n",ans);
    }
    return 0;
}
