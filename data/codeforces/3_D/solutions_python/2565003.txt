from heapq import *

pattern = list(raw_input())
n = pattern.count("?")

a = []
b = []
for i in range(n):
    o, c = map(int, raw_input().split())
    a.append(o)
    b.append(c)

q = 0
balance = 0
cost = 0
delta_costs = []
for i in range(len(pattern)):
    if pattern[i] == "(":
        balance += 1
    elif pattern[i] == ")":
        balance -= 1
    elif pattern[i] == "?":
        pattern[i] = ")"
        cost += b[q]
        heappush(delta_costs, (a[q]-b[q], i))
        q += 1
        balance -= 1
    
    if balance < 0:
        if len(delta_costs) == 0:
            balance = -1
            break
        d, j = heappop(delta_costs)
        cost += d
        pattern[j] = "("
        balance += 2

if balance != 0:
    print -1
else:
    print cost
    print "".join(pattern)
