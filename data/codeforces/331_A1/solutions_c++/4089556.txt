#include <algorithm>
#include <iostream>
#include <cstdio>
#include <queue>
#include <map>
#include <vector>
#define _int64 long long
#define INF 300005
#define inf 0x0f0f0f0f0f0f0f0fLL

using namespace std;
map <int, int> M;
_int64 S[INF], N[INF], ans=-inf;
vector <int> Ans;
int main()
{
	int i, j, n;
	
	for (i=scanf("%d", &n); i<=n; i++)
	{
		scanf("%I64d", &N[i]);
		M[N[i]]=i;
		S[i]=max(S[i-1], S[i-1]+N[i]);
	}
    
	int l, r;
	for (i=1; i<=n; i++)
		if (M[N[i]]!=i)
		{
			int t=M[N[i]];
			if (ans<S[t-1]-S[i]+2*N[i]) {
				ans=S[t-1]-S[i]+2*N[i];
				l=i, r=t;
			}
		}
	
	for (i=1; i<l; i++) Ans.push_back(i);
	for (i=l+1; i<r; i++) if (N[i]<0) Ans.push_back(i);
	for (i=r+1; i<=n; i++) Ans.push_back(i);
	
	printf("%I64d %d\n", ans, Ans.size());
	for (i=0; i<Ans.size(); i++)
		printf("%d%c", Ans[i], i==Ans.size()-1?'\n':' ');
    return 0;
}
