def gcd(a,b):
    if a%b == 0: return b
    else: return gcd(b,a%b)

def lcm(a,b):
    return a*b/gcd(a,b)


n = int(raw_input())
seq1 = raw_input().strip()
seq2 = raw_input().strip()
'''data = open("P1.txt")
n = int(data.readline())
seq1 = data.readline().strip()
seq2 = data.readline().strip()'''
cycle = lcm(len(seq1),len(seq2))

p1win = 0
p2win = 0
for i in range(cycle):
    p1 = seq1[i%len(seq1)]
    p2 = seq2[i%len(seq2)]
    
    if p1 == p2: continue
    if p1 == "R":
        if p2 == "S":
            p1win += 1
        else:
            p2win += 1
    elif p1 == "S":
        if p2 == "P":
            p1win += 1
        else:
            p2win += 1
    elif p1 == "P":
        if p2 == "R":
            p1win += 1
        else:
            p2win += 1    
#print p1win,p2win

p1total = n/cycle*p1win
p2total = n/cycle*p2win
#print p1total,p2total
n%= cycle
p1win = p2win = 0

for i in range(n):
    p1 = seq1[i%len(seq1)]
    p2 = seq2[i%len(seq2)]
    
    if p1 == p2: continue
    if p1 == "R":
        if p2 == "S":
            p1win += 1
        else:
            p2win += 1
    elif p1 == "S":
        if p2 == "P":
            p1win += 1
        else:
            p2win += 1
    elif p1 == "P":
        if p2 == "R":
            p1win += 1
        else:
            p2win += 1
            
p1total += p1win
p2total += p2win
print p2total,p1total