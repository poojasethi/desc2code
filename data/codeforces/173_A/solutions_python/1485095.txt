from fractions import gcd

n = int(raw_input())
a = raw_input()
b = raw_input()
m, k = len(a), len(b)

d = {('R', 'S'): (0, 1), ('S', 'P'): (0, 1), ('P', 'R'): (0, 1),
     ('S', 'R'): (1, 0), ('P', 'S'): (1, 0), ('R', 'P'): (1, 0),} 

lcm = m * k // gcd(m, k)
mod = n % lcm

h1, h2 = 0, 0
m1, m2 = 0, 0
for i in xrange(lcm):
    if i == mod:
        m1, m2 = h1, h2
        if n < lcm:
            break
    c1, c2 = a[i % m], b[i % k]
    if c1 != c2:
        d1, d2 = d[c1, c2]
        h1 += d1
        h2 += d2

div = n // lcm
print h1 * div + m1, h2 * div + m2