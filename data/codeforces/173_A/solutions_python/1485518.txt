def gcd(a, b):
    return a if b == 0 else gcd(b, a % b)

def arb(f, s):
    if (f, s) == ('R', 'S') or (f, s) == ('S', 'P') or (f, s) == ('P', 'R'):
        return 2
    elif (f, s) == ('R', 'R') or (f, s) == ('S', 'S') or (f, s) == ('P', 'P'):
        return 0
    else:
        return 1

n, nikif, polik = int(raw_input()), raw_input(), raw_input()
nikif_len, polik_len = len(nikif), len(polik)
nod = gcd(nikif_len, polik_len)
nok = nikif_len * polik_len / nod
i=0
out = [0, 0]
chastnoe, ostatok = divmod(n, nok)
while i < ostatok:
    cur_res = arb(nikif[i % nikif_len], polik[i % polik_len])
    if cur_res != 0:
        out[cur_res - 1] += 1
    i += 1
if chastnoe == 0:
    print out[0], out[1]
else:
    out[0], out[1] = out[0] * (chastnoe + 1), out[1] * (chastnoe + 1)
    while i < nok:
        cur_res = arb(nikif[i % nikif_len], polik[i % polik_len])
        if cur_res != 0:
            out[cur_res - 1] += chastnoe
        i += 1
    print out[0], out[1]
