def gen(str):
    def lol():
        while True:
            for ch in str:
                yield ch
    return lol
    
def nod(a, b):
  while a*b!=0:
    if a >= b:
      a = a%b
    else:
      b = b%a
  return a+b
  
def nok(a,b):
  return (a*b)//(nod(a,b))

n=int(raw_input())
A=raw_input()
B=raw_input()
ASH=0
BSH=0
i=0

lA=len(A)
lB=len(B)
NOK=nok(lA,lB)
#print NOK
pA=NOK//lA
pB=NOK//lB
sA=A*pA
sB=B*pB

NextA=gen(sA)()
NextB=gen(sB)()
A=NextA.next()
B=NextB.next()

if(n<=NOK): 
    while i<n:
        if A!=B:
            if A=="R" and B=="P":
                ASH+=1
            elif A=="R" and B=="S": 
                BSH+=1
            elif A=="S" and B=="R":
                ASH+=1
            elif A=="S" and B=="P": 
                BSH+=1
            elif A=="P" and B=="R": 
                BSH+=1
            else:
                ASH+=1
        i+=1
        A=NextA.next()
        B=NextB.next()
else:
    povt=n//NOK
    ost=n%NOK
    while i<NOK:
        if A!=B:
            if A=="R" and B=="P":
                ASH+=1
            elif A=="R" and B=="S": 
                BSH+=1
            elif A=="S" and B=="R":
                ASH+=1
            elif A=="S" and B=="P": 
                BSH+=1
            elif A=="P" and B=="R": 
                BSH+=1
            else:
                ASH+=1
        i+=1
        A=NextA.next()
        B=NextB.next()
    ASH*=povt
    BSH*=povt
    #print ASH, BSH
    
    NextA=gen(sA)()
    NextB=gen(sB)()
    A=NextA.next()
    B=NextB.next()
    i=0
    
    while i<ost:
        if A!=B:
            if A=="R" and B=="P":
                ASH+=1
            elif A=="R" and B=="S": 
                BSH+=1
            elif A=="S" and B=="R":
                ASH+=1
            elif A=="S" and B=="P": 
                BSH+=1
            elif A=="P" and B=="R": 
                BSH+=1
            else:
                ASH+=1
        i+=1
        A=NextA.next()
        B=NextB.next()
    
    
    
print ASH,BSH
