n=input()
def r():
    s=raw_input()
    return s.replace('P','Q')
P=r()
N=r()
from fractions import gcd as g

G=g(len(P),len(N))

d=len(P)*len(N)/G
t=n/d
T=n%d



l=lambda P,N: reduce(lambda (a,b), (A,B): (a,b) if A==B else (a+1,b) if ord(A)-ord(B) in 
[-2,1] else (a,b+1),  zip(P,N), (0,0))

r,R=l(P*(len(N)/G), N*(len(P)/G))
r,R=r*t,R*t

P=P*-~(T/len(P))
N=N*-~(T/len(N))

m,M=l(P[:T],N[:T])

print "%s %s" % (r+m,R+M)
