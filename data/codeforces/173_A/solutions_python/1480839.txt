def gcd(a,b):
    while a % b:
        a,b = b,a%b
    return b

def lcm(a,b):
    return a * b / gcd(a,b)

n = int(raw_input())
A = raw_input()
m = len(A)
B = raw_input()
k = len(B)
l = lcm(m, k)

def getNumbers(l):
    na = 0
    nb = 0
    for i in xrange(l):
        a = A[i % m]
        b = B[i % k]
        if a == 'R':
            if b == 'S':
                nb += 1
            elif b == 'P':
                na += 1
        elif a == 'S':
            if b == 'P':
                nb += 1
            elif b == 'R':
                na += 1
        else:
            if b == 'R':
                nb += 1
            elif b == 'S':
                na += 1
    return na, nb

na, nb = getNumbers(l)
na0, nb0 = getNumbers(n % l)
print na * (n / l) + na0, nb * (n / l) + nb0, 
