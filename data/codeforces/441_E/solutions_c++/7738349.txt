#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

const int N=202;

double dp[N][1<<8][2][255];

bool vis[N][1<<8][2][255];

int x,n,mask=(1<<8)-1;

double p,q;

double dfs(int i,int j,int k,int t)
{
    if(vis[i][j][k][t]) return dp[i][j][k][t];
    vis[i][j][k][t]=1;
    if(i==n)
    {
        if(j==0)
        {
            dp[i][j][k][t]=8+(k==0?t:0);
        }
        else
        {
            for(int a=0;(j&1<<a)==0;++a) ++dp[i][j][k][t];
        }
        return dp[i][j][k][t];
    }
    if(j==mask)
    {
        int nk,nt;
        if(k==0)
        {
            nk=1;nt=1;
        }
        else
        {
            nk=0;nt=t;
        }
        dp[i][j][k][t]+=q*dfs(i+1,0,nk,nt);
    }
    else
    {
        dp[i][j][k][t]+=q*dfs(i+1,j+1,k,t);
    }
    int nk=(j&1<<7)!=0,nt;
    if(nk==k)
    {
        nt=t+1;
    }
    else nt=1;
    return dp[i][j][k][t]+=p*dfs(i+1,(j<<1)&mask,nk,nt);
}

int main()
{
    cin>>x>>n>>p;
    p/=100;q=1-p;
    int i=0,j=x&mask,k=(x&(1<<8))!=0,t=0;
    
        for(int a=8;((x&1<<a)!=0)==k;++a) ++t;
    
//    cout<<i<<" "<<j<<" "<<k<<" "<<t<<endl;
    printf("%.8f\n",dfs(i,j,k,t));
    return 0;
}
