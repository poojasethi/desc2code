//In the Name of God
#include<vector>
#include<set>
#include<cstdio>
#define int long long
using namespace std;
const int M=1e9+13,inf=10001000010000010;
int n,m,v[100001],u[100001],w[100001],S,T,V,U,W,diss[100001],dist[100001],as[100001],at[100001];
vector<int> gs[100001],gt[100001],Ws[100001],wt[100001],ds[100001],dt[100001];
set<pair<int,int> > s;
bool mark[100001];
void dijs(){
  diss[S]=0;
  s.insert(make_pair(diss[S],S));
  while(s.size()){
      V=s.begin()->second;
      s.erase(s.begin());
      for(int i=0;i<gs[V].size();i++){
	  U=gs[V][i];
	  W=Ws[V][i];
	  if(diss[U]==diss[V]+W)
	    ds[U].push_back(V);
	  if(diss[U]>diss[V]+W){
	      ds[U].clear();
	      ds[U].push_back(V);
	      s.erase(make_pair(diss[U],U));
	      diss[U]=diss[V]+W;
	      s.insert(make_pair(diss[U],U));
	    }
	}
    }
}
void dijt(){
  dist[T]=0;
  s.insert(make_pair(dist[T],T));
  while(s.size()){
      V=s.begin()->second;
      s.erase(s.begin());
      for(int i=0;i<gt[V].size();i++){
	  U=gt[V][i];
	  W=wt[V][i];
	  if(dist[U]==dist[V]+W)
	    dt[U].push_back(V);
	  if(dist[U]>dist[V]+W){
	      dt[U].clear();
	      dt[U].push_back(V);
	      s.erase(make_pair(dist[U],U));
	      dist[U]=dist[V]+W;
	      s.insert(make_pair(dist[U],U));
	    }
	}
    }
}
inline int dfss(int x){
  if(mark[x])
    return as[x];
  mark[x]=true;
  for(int i=0;i<ds[x].size();as[x]+=dfss(ds[x][i]),i++);
  return as[x]=as[x]%M;
}
inline int dfst(int x){
  if(mark[x])
    return at[x];
  mark[x]=true;
  for(int i=0;i<dt[x].size();at[x]+=dfst(dt[x][i]),i++);
  return at[x]=at[x]%M;
}
main(){
  scanf("%d%d%d%d",&n,&m,&S,&T);
  for(int i=1;i<=n;diss[i]=dist[i]=inf,i++);
  for(int i=0;i<m;i++){
      scanf("%d%d%d",v+i,u+i,w+i);
      gs[v[i]].push_back(u[i]);
      gt[u[i]].push_back(v[i]);
      Ws[v[i]].push_back(w[i]);
      wt[u[i]].push_back(w[i]);
    }
  dijs();
  dijt();
  as[S]=1;
  dfss(T);
  for(int i=1;i<=n;mark[i]=false,i++);
  at[T]=1;
  dfst(S);
  for(int i=0;i<m;i++){
      if((at[S]==(at[u[i]]*as[v[i]])%M) && diss[v[i]]+dist[u[i]]+w[i]==diss[T])
	printf("YES\n");
      else if(diss[v[i]]+dist[u[i]]+1<diss[T])
	printf("CAN %d\n",diss[v[i]]+dist[u[i]]+w[i]-diss[T]+1);
      else
	printf("NO\n");
    }
  return 0;
}
