#include <bits/stdc++.h>
using namespace std;

#define fru(j,n) for(int j=0; j<(n); ++j)
#define tr(it,v) for(typeof((v).begin()) it=(v).begin(); it!=(v).end(); ++it)
#define x first
#define y second
#define pb push_back
#define ALL(G) (G).begin(),(G).end()

typedef long long ll;
typedef double D;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;

const int mod = 479001599;
const int MAXN = 1000006;//10^6

vector<vector<pii> > V,VT;
pll A[MAXN],AT[MAXN];
pii R[MAXN];
int C[MAXN];
int n;
void dfs(int s,vector<vector<pii> > &G,pll *ans){
    fru(i,n)ans[i]=pll(1LL*mod*mod,0);
    ans[s]=pll(0,1);
    priority_queue<pll> Q;
    Q.push(pll(-ans[s].x,s));
    while(!Q.empty()){
        pll u=Q.top();Q.pop();
        if(-u.x>ans[u.y].x)continue;
        tr(it,G[u.y]){
            ll cost=-u.x+it->y;
            int v=it->x;
            if(cost<ans[v].x){
                ans[v]=pll(cost,ans[u.y].y);
                Q.push(pll(-ans[v].x,v));
            }
            else if(cost==ans[v].x)ans[v].y=(ans[v].y+ans[u.y].y)%mod;
        }
    }
}
void solve() {
    int m,s,t;
    scanf("%d%d%d%d",&n,&m,&s,&t);
    V.resize(n);VT.resize(n);
    s--;t--;
    fru(i,m){
        scanf("%d%d%d",&R[i].x,&R[i].y,&C[i]);R[i].x--;R[i].y--;
        V[R[i].x].pb(pii(R[i].y,C[i]));
        VT[R[i].y].pb(pii(R[i].x,C[i]));
    }
    dfs(s,V,A);
    dfs(t,VT,AT);
    ll dist=A[t].x;
    fru(i,m){
        if(dist==A[R[i].x].x+C[i]+AT[R[i].y].x && A[t].y==A[R[i].x].y*AT[R[i].y].y%mod){
            puts("YES");
        }
        else {
            ll w=dist-A[R[i].x].x-AT[R[i].y].x;
            if(w>1)printf("CAN %d\n",(int)(C[i]-(w-1)));
        else puts("NO");
        }
    }
}

int main(){
    //freopen("input.in", "r", stdin);
    //freopen("output.out", "w", stdout);
    int t=1;//scanf("%d",&t);
    fru(i,t) solve();
    return 0;
}