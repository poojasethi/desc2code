#include<bits/stdc++.h>
using namespace std;
const int maxn=100*1000+10;
const long long mod=98765431LL;
int n,m,s,t,sum,v[maxn],u[maxn];
long long d[2][maxn],dp[2][maxn],w[maxn];
vector<pair<int,long long> > adj[2][maxn];
set<pair<long long,int> > st;
void dijkstra(int v2,bool a)
{
    for(int i=1; i<=n; i++)
        d[a][i]=-1;
    d[a][v2]=0;
    dp[a][v2]=1;
    st.insert( {0,v2});
    while(st.size())
    {
        v2=st.begin()->second;
        st.erase(st.begin());
        for(int i=0; i<adj[a][v2].size(); i++)
        {
            int u2=adj[a][v2][i].first,w2=w[adj[a][v2][i].second];
            if(d[a][u2]==-1 || d[a][u2]>d[a][v2]+w2)
            {
                st.erase( {d[a][u2],u2});
                d[a][u2]=d[a][v2]+w2;
                st.insert( {d[a][u2],u2});
                dp[a][u2]=dp[a][v2];
            }
            else if(d[a][u2]==d[a][v2]+w2)
                dp[a][u2]=(dp[a][u2]+dp[a][v2])%mod;
        }
    }
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    cin>>n>>m>>s>>t;
    for(int i=1; i<=m; i++)
    {
        cin>>v[i]>>u[i]>>w[i];
        adj[0][v[i]].push_back( {u[i],i});
        adj[1][u[i]].push_back( {v[i],i});
    }
    dijkstra(s,0);
    dijkstra(t,1);
    for(int i=1; i<=m; i++)
    {
        if(d[0][v[i]]==-1 || d[1][u[i]]==-1)
        {
            cout<<"NO\n";
            continue;
        }
        long long mn=d[0][t],l1=d[0][v[i]]+d[1][u[i]]+w[i];
        if(mn==l1 && (dp[0][v[i]]*dp[1][u[i]])%mod==dp[0][t])
            cout<<"YES\n";
        else if(w[i]-l1+mn-1>0)
            cout<<"CAN "<<l1-mn+1<<'\n';
        else
            cout<<"NO\n";
    }
    return 0;
}

				  	 		 	 			  	  		 		  	 	