#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int maxn = 3010;
int v[maxn<<1],next[maxn<<1],w[maxn<<1];
int first[maxn],e,s,t;

void init(){
    e = 0;
    memset(first,-1,sizeof(first));
}

void add_edge(int a,int b,int c){
    v[e] = b;next[e] = first[a];w[e] = c;first[a] = e++;
}

void dfs(int u,int f,int tmp){
    t = max(t,tmp);
    for(int i = first[u];i != -1;i = next[i]){
        if(v[i] == f)   continue;
        s += w[i];
        dfs(v[i],u,max(0,tmp+2*w[i]-1));
    }
}

int main(){
    init();
    int n,a,b;
    scanf("%d",&n);
    for(int i = 0;i < n-1;i++){
        scanf("%d%d",&a,&b);
        add_edge(a,b,0);
        add_edge(b,a,1);
    }
    int ans = n;
    for(int i = 1;i <= n;i++){
        s = t = 0;
        dfs(i,-1,0);
        ans = min(ans,s-t);
    }
    printf("%d\n",ans);
}

    	 	 							   	 		 	 	