// In the name of ALLAH

#include<iostream>
#include<vector>
#include<algorithm>
#include<cstring>
using namespace std;

const int MAX = 3000+7, INF = 1000*2200;
vector<int> list[MAX], listT[MAX];
int best[MAX], chn[MAX];
int n, dir[MAX][MAX], cntAll = 0;
bool mark[MAX];

void dfs(int v) {
	mark[v] = 1;
	for (int i=0; i<list[v].size(); i++) {
		int u = list[v][i];
		if (!mark[u]) {
			cntAll += dir[u][v];
			chn[u] = chn[v] + dir[u][v];
			best[u] = min(chn[u], best[v] + dir[v][u]);	
			dfs(u);
		}
	}
}

int main() {
	cin >> n;
	for (int i=0; i<n-1; i++) {
		int x,y;
		cin >> x >> y;
		x--, y--;
		list[x].push_back(y);
		list[y].push_back(x);
		dir[x][y] = 1;
	}

	int ans = INF;
	for (int i=0; i<n; i++) {
		cntAll = 0;
		memset(mark, 0, sizeof mark);
		memset(best, 0, sizeof best);
		memset(chn, 0, sizeof chn);
		dfs(i);
		for (int j=0; j<n; j++)
			ans = min(ans, cntAll+best[j]-chn[j]);
	}
	cout << ans << endl;
	return 0;
}
