#include <bits/stdc++.h>
using namespace std;

const int N=100010;
int n, a, b, pr, all, dp[N];
vector< pair<int,int> >adj[N];

int Go(int node, int par)
{
    int ret=0;
    for(int i=0;i<adj[node].size();i++)
    {
        int to=adj[node][i].first, type=adj[node][i].second;
        if(to==par)
            continue;
        if(type)
            dp[to]=max(0,dp[node]+1);
        else
            dp[to]=max(0,dp[node]-1);
        ret+=(Go(to,node)+type);
    }
    return ret;
}

void Solve()
{
    pr=n-1;
    for(int i=1;i<=n;i++)
    {
        memset(dp, 0, sizeof dp);
        all=Go(i,-1);
        for(int j=0;j<=n;j++)
            pr=min(pr,all-dp[j]);
    }
}

int main()
{
   //freopen("r.txt","r",stdin);
   scanf("%d",&n);
   for(int i=1;i<n;i++)
   {
       scanf("%d %d",&a,&b);
       adj[a].push_back(make_pair(b,0));
       adj[b].push_back(make_pair(a,1));
   }
   Solve();
   printf("%d",pr);

    return 0;
}
