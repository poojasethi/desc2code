#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
const int N = 3005;
const int E = N*2;
int head[N],nxt[E], pnt[E],flag[E],e,n;
int sum;
int dp[N][2],dep[N];
void add(int u,int v,int c){
	nxt[e] = head[u]; head[u] = e; pnt[e] = v; flag[e] = c; e++;
}
void dfs(int u,int f,int v) {
	if(u == f) {
		dp[u][1] = 0;
		dp[u][0] = 0;
		dep[u] = 0;
	} else {
		dp[u][1] = dp[f][1] + (!v);
		dp[u][0] = min(dp[f][1],dp[f][0]) + v;
		dep[u] = dep[f] + (!v);
	}
	for(int i = head[u]; i!=-1; i=nxt[i]) {
		int nv = pnt[i];
		if(nv == f) continue;
		sum += !flag[i];
		dfs(nv,u,flag[i]);
	}
}
int main(){
	cin >> n; e= 0;
	memset(head,-1,sizeof(head));
	for(int i = 0; i < n-1; i++){
		int u,v;cin>>u>>v;
		add(u,v,1);
		add(v,u,0);
	}
	int ans = 50000;
	for(int i =1 ; i <= n; i++){
		sum = 0;
		dfs(i,i,0);
		for(int j = 1; j <= n; j++){
			int mn = min(dp[j][0],dp[j][1]);
			ans = min(ans,sum - dep[j] + mn);
		}
	}
	cout<< ans << endl;
}
