#include <iostream>
#include <cstring>
#include <vector>
using namespace std;

typedef pair<int,int> pii;

const int INF = 1000000000;
const int MAXN = 3005;
int n, res = INF, rt, s[MAXN], t[MAXN];
vector<pii> adj[MAXN];

void dfs(int cur, int prev){
  s[cur] = 0;
  t[cur] = 0;
  for(int i = 0; i < adj[cur].size(); i++){
    if(adj[cur][i].first == prev) continue;
    dfs(adj[cur][i].first, cur);
    s[cur] += s[adj[cur][i].first] + adj[cur][i].second;
    t[cur] = min(t[cur], t[adj[cur][i].first] - 2 * adj[cur][i].second + 1);
  }
  rt = min(rt, t[cur]);
}

int main(){
  cin >> n;
  for(int i = 1; i < n; i++){
    int a, b;
    cin >> a >> b;
    a--, b--;
    adj[a].push_back(pii(b, 0));
    adj[b].push_back(pii(a, 1));
  }
  for(int i = 0; i < n; i++){
    rt = INF;
    dfs(i, -1);
    res = min(res, rt + s[i]);
  }
  cout << res << '\n';
}
