#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

int n, m;
int chk[3000];
char dir[3000][3000];
vector<int> adj[3000];

int dfs(int u, int r) {
	int w = 0;
	int r2;
	chk[u] = 1;
	for (int i = 0; i < (int)adj[u].size(); ++i) {
		int v = adj[u][i];
		if (chk[v]) continue;
		if (dir[v][u]) {
			r2 = r + 1;	
			w++;
		} else {
			r2 = r - 1;
		}
		r2 = max(r2, 0);
		w += dfs(v, r2);
	}
	m = max(m, r);
	return w;
}

int main() {
	scanf("%d", &n);
	for (int i = 0; i < n - 1; ++i) {
		int a, b;
		scanf("%d %d", &a, &b);
		a--; b--;
		adj[a].push_back(b);
		adj[b].push_back(a);
		dir[a][b] = 1;
	}
	int res = n - 1;
	for (int i = 0; i < n; ++i) {
		fill(chk, chk + n, 0);
		m = 0;
		int j = dfs(i, 0);
		j -= m;
		res = min(res, j);
	}
	printf("%d\n", res);
	return 0;
}
