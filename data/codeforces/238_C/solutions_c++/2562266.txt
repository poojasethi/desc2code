#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;
const int N = 3100;
int n,m,a[N][N],f[N],cnt,u,v,ans;
vector<int> E[N];
bool vis[N];
void dfs(int k,int t) {
    vis[k] = 1;
    if (t>m) m = t;
    if (t<0) t = 0;
    for (int i=0;i<E[k].size();i++) {
        if (!vis[E[k][i]]) {
            if (a[k][E[k][i]]==1)
                dfs(E[k][i],t-1);
            else dfs(E[k][i],t+1),cnt++;
        }
    }
}
int main() {
    scanf("%d",&n);
    memset(a,0,sizeof a);
    for (int i=0;i<n-1;i++) {
        scanf("%d%d",&u,&v);
        a[u][v] = 1;
        E[u].push_back(v);
        E[v].push_back(u);
    }
    memset(f,0,sizeof f);
    ans = N;
    for (int i=1;i<=n;i++) {
        memset(vis,0,sizeof vis);
        cnt = m = 0;
        dfs(i,0);
        ans = min(ans,cnt-m);
    }
    cout<<ans<<endl;
    return 0;
}
