#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;

const int N = 3003;
vector<int> adj[N];
vector<int> dir[N];

int c, best;
void dfs(int u, int p, int x, int y)
{
    if(best > x-y)
        best = x-y;
    for(int i = 0; i < (int)adj[u].size(); ++i)
        if(adj[u][i] != p) {
            if(dir[u][i] == 1)
                dfs(adj[u][i], u, min(x+1, y), y);
            else {
                dfs(adj[u][i], u, x, y+1);
                ++c;
            }
        }
}

int main()
{
    int n;
    scanf("%d", &n);
    for(int i = 0; i < n-1; ++i) {
        int u, v;
        scanf("%d%d", &u, &v);
        adj[u].push_back(v);
        dir[u].push_back(1);
        adj[v].push_back(u);
        dir[v].push_back(-1);
    }
    
    int res = n;
    for(int u = 1; u <= n; ++u) {
        c = 0;
        best = n;
        dfs(u, 0, 0, 0);
        best += c;
        if(res > best)
            res = best;
    }
    
    printf("%d\n", res);
    return 0;
}
