#include <stdio.h>
#include <algorithm>
#include <map>
using namespace std;
#define rep(i, n) for(int i=0; i<(int)(n); i++)

#define N (500000)
struct lady { int b, l, r; };
bool operator<(const lady& l, const lady& r) {
    return (l.b!=r.b) ? l.b>r.b : l.l<r.l;
}
int n;
lady ladies[N];
int ft[N], ll[N];
int max(int i) {
    int m=0; while(i>=0) { m=max(m, ft[i]); i=(i&(i+1))-1; }
    return m;
}
void insert(int i, int a) { while(i<n && ft[i]<a) { ft[i]=a; i|=i+1; } }

int main() {
    scanf("%d", &n);
    rep(i, n) scanf("%d", &ladies[i].b);
    rep(i, n) scanf("%d", &ladies[i].l);
    rep(i, n) scanf("%d", &ladies[i].r);
    rep(i, n) ll[i] = ladies[i].l;
    sort(ll, ll+n);
    sort(ladies, ladies+n);
    int c=0;
    rep(i, n) {
        int nth = n-1-(lower_bound(ll, ll+n, ladies[i].l)-ll);
        if(max(nth-1)>ladies[i].r) c++;
        insert(nth, ladies[i].r);
    }
    printf("%d\n", c);
    return 0;
}

