#include <cstdio>
#include <map>
#include <algorithm>

using namespace std;

const int MAX_N = 500007;
const int inf = (int)2e9 + 7;

struct node {
	int a, b, c;
	bool operator < (const node &rhs) const {
		return a == rhs.a ? b == rhs.b ? c < rhs.c : b < rhs.b : a > rhs.a;
	}

};

int n;
map<int,int> ord;
node info[MAX_N];

int main() {
	scanf("%d", &n);
	for (int i = 0; i < n; ++i) 
		scanf("%d", &info[i].a);
	for (int i = 0; i < n; ++i) 
		scanf("%d", &info[i].b);
	for (int i = 0; i < n; ++i) 
		scanf("%d", &info[i].c);
	sort(info, info + n);
	ord[-inf] = inf, ord[inf] = -inf;
	int ans = 0;
	for (int i = 0; i < n; ++i) {
		map<int,int>::iterator it = ord.upper_bound(info[i].b);
 		if ((*it).second > info[i].c) ++ans;
		else if (!ord.count(info[i].b) || ord[info[i].b] < info[i].c) {
			ord[info[i].b] = info[i].c;
			map<int,int>::iterator it = ord.lower_bound(info[i].b);
			for (--it; it->second < info[i].c;)
				ord.erase(it--); 
		} 
	}
	printf("%d\n", ans);
	return 0;
}
  		 				  	   	 	 	    	