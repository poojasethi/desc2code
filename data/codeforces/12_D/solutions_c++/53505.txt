#include <iostream>
#include <cstring>
#include <algorithm>
#include <cstdio>

using namespace std;

int x[5000100],y[500100],z[500100],t[500100],ind[500100],b[500100];
int n;

bool cmp(int i, int j)
{
	if(z[i]!=z[j])
		return z[i] < z[j];
	else
		return x[i] > x[j];
}
		
void qqq(int *x)
{
	for(int i=0; i<n; i++)
	{
		scanf("%d",&x[i]);
		t[i]=-x[i];
	}
	sort(t,t+n);
	for(int i=0; i<n; i++)
	{
		x[i]=lower_bound(t,t+n,-x[i])-t;
	}
}

void f_add(int x, int nn )
{
	 for(x++; x<=n; x+=x&-x)
	 {
	 	b[x]=min(b[x],nn);
	 }
}

int f_min(int x)
{
    int res=2000000000;
	for(x++; x>0; x-=x&-x)
    {
    	res=min(b[x],res);
    }
    return res;
}
         

int main()
{
	cin >>n;

	qqq(x);
	qqq(y);
	qqq(z);

	for(int i=0; i<n; i++)
		ind[i]=i;
	sort(ind,ind+n,cmp);

	int res=0;
	
	for(int i=0; i<=n; i++)
		b[i]=2000000000;

    for(int i=0; i<n; i++)
	{
		if(f_min(x[ind[i]]-1)<y[ind[i]])
			res++;	
		f_add(x[ind[i]],y[ind[i]]);
	}
	cout <<res;

	return 0;
}
