#include<stdio.h>
#include<algorithm>
#include<memory.h>
#define N 555555

struct Tp{int x,y,z,i;} a[N];
int n,M[N],r,t,ans=0;

inline bool ByY(Tp A,Tp B){return A.y>B.y;}
inline bool ByX(Tp A,Tp B){return A.x>B.x || A.x==B.x && A.y<B.y || A.x==B.x && A.y==B.y && A.z<B.z;}

int main(void){
//  freopen(".in","r",stdin);
//  freopen(".out","w",stdout);
    scanf("%d",&n);
    for(int i=0;i<n;i++) scanf("%d",&a[i].x);
    for(int i=0;i<n;i++) scanf("%d",&a[i].y);
    for(int i=0;i<n;i++) scanf("%d",&a[i].z);
    std::sort(a,a+n,ByY);
    a[0].i=1;
    for(int i=1;i<n;i++) a[i].i=a[i-1].i+(a[i].y!=a[i-1].y);
    memset(M,128,sizeof(M));
    std::sort(a,a+n,ByX);
    for(int i=0;i<n;i++){
        t=M[0];
        r=a[i].i-1;
        while(r){
            if(M[r]>t) t=M[r];
            r&=r-1;
        }
        ans+=(t>a[i].z);
        r=a[i].i;
        while(r<N){
            if(M[r]<a[i].z) M[r]=a[i].z;
            r=(r|(r-1))+1;
        }
    }
    printf("%d\n",ans);
    return 0;
}