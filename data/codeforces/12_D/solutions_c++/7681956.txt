#include<cstdio>
#include<algorithm>
#define L(x) (x&-x)
#define N 500005
using namespace std;
struct arr{int x,y,z,Y;}a[N];
int n,i,ans,j,start,tot;
struct Bit_Tree
{
  int f[N];
  inline void add(int x,int v){for (;x;x-=L(x)) f[x]=max(f[x],v);}
  inline int ask(int x){int s=0;for (;x<=tot;x+=L(x)) s=max(s,f[x]);return s;}
}P;
inline int cmp1(const arr &a,const arr &b){return a.Y<b.Y;}
inline int cmp2(const arr &a,const arr &b){return a.x>b.x;}
int main()
{
  scanf("%d",&n);
  for (i=1;i<=n;i++) scanf("%d",&a[i].x),a[i].x++;
  for (i=1;i<=n;i++) scanf("%d",&a[i].Y),a[i].Y++;
  for (i=1;i<=n;i++) scanf("%d",&a[i].z),a[i].z++;
  sort(a+1,a+n+1,cmp1);tot=1;
  for (i=1;i<=n;i++)
    a[i].y=(a[i].Y==a[i-1].Y)?tot:++tot;
  sort(a+1,a+n+1,cmp2);start=1;
  for (i=1;i<=n;i++)
    if (a[i].x!=a[i+1].x)
    {
      for (j=start;j<=i;j++)
        ans+=P.ask(a[j].y+1)>a[j].z;
      for (j=start;j<=i;j++)
        P.add(a[j].y,a[j].z);
      start=i+1;
    }
  printf("%d",ans);
  return 0;
}
