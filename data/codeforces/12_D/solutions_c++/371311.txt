#include <cstdio>
#include <algorithm>
#include <cstring>
#define N 500005
#define INF 2000000000
using namespace std;

struct dis{
	int v,p;
	bool operator < (dis const &T) const{return v<T.v;}
}	dis[N];

struct pt{
	int x,y,z;
	bool operator < (pt const &T) const{return z==T.z?x>T.x:z<T.z;}
}	p[N];

int n,mn,cnt,ret,BIT[N];

int main(){

	scanf("%d",&n);
	for (int i=0; i<n; i++){
		scanf("%d",&p[i].x);
		p[i].x = INF - p[i].x;
		dis[i].p = i;
		dis[i].v = p[i].x;
	}
	for (int i=0; i<n; i++) scanf("%d", &p[i].y), p[i].y = INF-p[i].y;
	for (int i=0; i<n; i++) scanf("%d", &p[i].z), p[i].z = INF-p[i].z;
	sort(dis,dis+n);

	cnt = 0;
	for (int i=0; i<n; i++){
		if (i==0||dis[i].v!=dis[i-1].v) cnt++;
		p[dis[i].p].x = cnt;
	}

	sort(p,p+n);
	for (int i=1; i<=cnt; i++) BIT[i]=INF;


	for (int i=0; i<n; i++){
		mn = INF;
		for (int j=p[i].x-1; j>0; j-=j&-j) mn = min(mn, BIT[j]);
		if (mn<p[i].y) ret++;
		for (int j=p[i].x; j<=cnt; j+=j&-j) BIT[j] = min(BIT[j], p[i].y);	
	}

	printf("%d\n",ret);
	return 0;
}

