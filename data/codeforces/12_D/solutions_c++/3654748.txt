#include <map>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
using namespace std;

const int MAXN = 510000;
const int INF = 2147483647;

struct Lady{
    int x;
    int y;
    int z;
    bool operator<(const Lady & l)const{
	if(x > l.x) return true;
	if(x < l.x) return false;

	if(y < l.y) return true;
	if(y > l.y) return false;

	return z < l.z;
    }
}lady[MAXN];

int main(){
    int n;
    scanf("%d", &n);
    for(int i = 0; i < n; i++)
	scanf("%d", &lady[i].x);
    for(int i = 0; i < n; i++)
	scanf("%d", &lady[i].y);
    for(int i = 0; i < n; i++)
	scanf("%d", &lady[i].z);

    sort(lady, lady+n);
    int ans = 0;
    map<int,int> tree;
    tree[-INF] = INF;
    tree[INF] = -INF;

    for(int i = 0; i < n; i++){
	int y = lady[i].y;
	int z = lady[i].z;
	map<int,int>::iterator it = tree.upper_bound(y);
	if(z < it->second){
	    ans++;
	}else if(!tree.count(y) || tree[y] < z){
	    tree[y] = z;
	    for(it = --tree.lower_bound(y); it->second < z;){
		tree.erase(it--);
	    }
	}
    }
    printf("%d\n", ans);
    return 0;
}
