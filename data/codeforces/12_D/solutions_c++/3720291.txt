#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 500003
struct node {
    int a, b, c;
    bool operator < (const node & x) const {
        return a > x.a || (a==x.a && b<x.b) || (a==x.a && b==x.b && c<x.c);
    }
} a[N];
int b[N], n, m, h[N];
int lowbit(int x) { return x & (-x); }
void update(int idx, int val) {
    for (int i=idx; i>0; i-=lowbit(i))
        h[i] = max(val, h[i]);
}
int ask(int idx) {
    int ret = -1;
    for (int i=idx; i<=m; i+=lowbit(i))
        ret = max(ret, h[i]);
    return ret;
}
int main() {

    scanf("%d", &n);
    for (int i=0; i<n; i++) scanf("%d", &a[i].a);
    for (int i=0; i<n; i++) { scanf("%d", &a[i].b); b[i] = a[i].b; }
    for (int i=0; i<n; i++) scanf("%d", &a[i].c);
    sort(a, a+n);
    sort(b, b+n);

    m = unique(b, b+n) - b;
    int ans = 0;
    memset(h, -1, sizeof(h));
    for (int i=0; i<n; i++) {
        int rank = lower_bound(b, b+m, a[i].b) - b + 1;
        if (ask(rank+1) > a[i].c) ans++;
        update(rank, a[i].c);
    }
    printf("%d\n", ans);
    return 0;
}

  		 				 	  	 				 	  		