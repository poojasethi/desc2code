#include <cstdio>
#include <algorithm>
#include <map>
using namespace std;
const int N = 500005;
struct node {
	int b, l, r;
	bool operator < (const node &x) const {
		return b != x.b ? b < x.b:l != x.l ? l > x.l:r < x.r;
	}
};
struct node q[N];
map<int, int> m;
map<int, int>::iterator iter;
int main() {
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; ++i) scanf("%d", &q[i].b);
	for (int i = 0; i < n; ++i) scanf("%d", &q[i].l);
	for (int i = 0; i < n; ++i) scanf("%d", &q[i].r);
	sort(q, q + n);
	
	int ans = 0;
	m[-1000000000] = 1000000000;
	m[1000000000] = -1000000000;
	for (int i = n - 1; i >= 0; --i) {
		iter = m.upper_bound(q[i].l);
		if (iter->second > q[i].r) ++ans;
		//printf("    Dead %d = %d\n", iter->first, iter->second);
		else if (m[q[i].l] < q[i].r) {
			//printf("    Adding %d %d\n", q[i].first, q[i].second);
			m[q[i].l] = q[i].r;
			for (iter = --m.lower_bound(q[i].l); iter->second < q[i].r; )
				m.erase(iter--);
		}
	}
	printf("%d\n", ans);
	return 0;
}
		      	        		     	 	