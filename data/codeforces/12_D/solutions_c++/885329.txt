#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;

int BIT[500001] , N;
void add(int x,int a){
	while(x <= N){ BIT[x] = max(BIT[x],a); x += x & -x; }
}
int get(int x){
	int ans = 0;
	while(x){ ans = max(BIT[x],ans); x -= x & -x;}
	return ans;
}
struct NODE{
	int a,b,c;
	NODE(int a,int b,int c) : a(a) , b(b) , c(c) {}
	NODE(){}
};
bool cmp(const NODE &a,const NODE &b){
	if(a.a != b.a)  return a.a > b.a;
	if(a.b != b.b) return a.b < b.b;
	return a.c > b.c ;
};
NODE v[500000];

int main(){
	cin >> N;
	vector<int> b;
	for(int i = 0 ; i < N ; i++) scanf("%d",&v[i].a);
	for(int i = 0 ; i < N ; i++) scanf("%d",&v[i].b), b.push_back(v[i].b);
	for(int i = 0 ; i < N ; i++) scanf("%d",&v[i].c);
	sort(v,v+N,cmp);
	sort(b.begin(),b.end());
	b.erase(unique(b.begin(),b.end()),b.end());
	int ans = 0;
	for(int i = 0 ; i < N ; i++){
		v[i].b = N - (lower_bound(b.begin(),b.end(),v[i].b) - b.begin());
		ans += get(v[i].b-1) > v[i].c;
		add(v[i].b,v[i].c);
	}
	cout << ans << endl;
}