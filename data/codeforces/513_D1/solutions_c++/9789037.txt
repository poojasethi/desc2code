#include<bits/stdc++.h>
using namespace std;
#define MAX 100001
int present=1,sol[MAX][2]={0},maxl[MAX]={0},minr[MAX]={0},maxr[MAX]={0},le[MAX]={0},ri[MAX]={0};

bool solve(int i, int N)
{
	if(le[i])
	{
		sol[i][0]=++present;
		if(!solve(present,maxl[i])) return false;
	}
	if(ri[i]&&present>=minr[i]) return false;
	if(ri[i]) N=max(N,maxr[i]);
	if(N>present)
	{
		sol[i][1]=++present;
		if(!solve(present,N)) return false;
	}
	return true;
}

void print(int i)
{
	if(sol[i][0]) print(sol[i][0]);
	cout<<i<<" ";
	if(sol[i][1]) print(sol[i][1]);
}

int main(int argc, char const *argv[])
{
	int n,c;
	cin>>n>>c;
	int i,x,y;
	string dir;
	for(i=0;i<MAX;i++) minr[i]=2e9;
	for(i=0;i<c;i++)
	{
		cin>>x>>y>>dir;
		if(x>=y) {cout<<"IMPOSSIBLE"; return 0;}
		if(dir[0]=='L')
		{
			le[x]=1;
			maxl[x]=max(maxl[x],y);
		}
		else
		{
			ri[x]=1;
			minr[x]=min(minr[x],y);
			maxr[x]=max(maxr[x],y);
		}
	}
	if(solve(1,n)) print(1);
	else cout<<"IMPOSSIBLE";
	return 0;
}