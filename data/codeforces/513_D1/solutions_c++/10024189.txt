#include <bits/stdc++.h>
using namespace std;

#define fru(j,n) for(int j=0; j<(n); ++j)
#define tr(it,v) for(typeof((v).begin()) it=(v).begin(); it!=(v).end(); ++it)
#define x first
#define y second
#define pb push_back
#define ALL(G) (G).begin(),(G).end()

typedef long long ll;
typedef double D;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<int> vi;

const int inft = 1000000009;
const int MAXN = 1000006;//10^6

vector<int> T[MAXN];
vector<pii> C[MAXN];

void no()
{
	printf("IMPOSSIBLE\n");
	exit(0);
}

int NR;
vi ANS;
int n,k;
int DFS(int must)
{
//	printf("mam %d %d\n",NR,must);
	int r_max=-1,r_min=MAXN,l_min=MAXN,l_max=-1;
	int back=NR;
	NR++;
//	if(NR>5+n)exit(1);
	if(C[back].empty() && must==back){ANS.pb(back);return back;}
	tr(it,C[back])
	{
//		printf("%d %d\n",it->x,it->y);
		if(it->y==0)
		{
			l_min=min(l_min,it->x);
			l_max=max(l_max,it->x);
		}
		else 
		{
			r_min=min(r_min,it->x);
			r_max=max(r_max,it->x);
		}
	}
//	printf("l %d %d\n",l_min,l_max);
//	printf("r %d %d\n",r_min,r_max);
	if(r_min!=MAXN && l_max!=-1 &&r_min<=l_max)no();
	if(r_min<=back || l_min <=back)no();
	int w=-1;
	if(l_max!=-1)w=DFS(l_max);
	ANS.pb(back);
//	printf("dorzucam %d w=%d\n",back,w);
	if(w>=r_min)no();
	if(w<max(must,r_max))return DFS(max(r_max,must));
	return w;
}
void solve() {
	scanf("%d%d",&n,&k);
//	printf("%d %d\n",n,k);
	fru(i,k)
	{
		int a,b;
		char c[20];
		scanf(" %d %d %s",&a,&b,c);
		if(a>=b)no();
//		printf("%d %d %s\n",a,b,c);
		C[a].pb(pii(b,c[0]=='R'?1:0));
	}
	NR=1;
	int w=DFS(n);
	if(w>n)no();
	fru(i,n)printf("%d ",ANS[i]);
}

int main(){
	//freopen("input.in", "r", stdin);
	//freopen("output.out", "w", stdout);
	int t=1;//scanf("%d",&t);
	fru(i,t) solve();
	return 0;
}
