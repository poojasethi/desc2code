#include<bits/stdc++.h>
#define MA(a,b) ((a)>(b)?(a):(b))
#define MI(a,b) ((a)<(b)?(a):(b))
#define AB(a) (-(a)<(a)?(a):-(a))
#define X first
#define Y second
#define mp make_pair
#define pb push_back
#define pob pop_back
#define ep 0.000001
#define pi 3.1415926535897932384626433832795
#define na(x) ((x)<P?(x):(x)-P)
#define MI(a,b) ((a)<(b)?(a):(b))
using namespace std;
const int N=409;
const long long P=1000000007;
int n,kk;
int lx[N],ly[N],rx[N],ry[N];
char CC[1000];
int d[N][N];
int to[N][N];
bool go(int x,int y){
    if (x>y) {return 1;}
    if (ly[x]>=rx[x]) return 0;
    if (lx[x]<x) return 0;
    if (ry[x]>y) return 0;
    if (d[x][y]) return d[x][y]-1;
    d[x][y]=1;
    for (int i=MA(x,ly[x]);i<MI(y+1,rx[x]);i++)
    if (go(x+1,i) && go(i+1,y)) {
        d[x][y]=2;
        to[x][y]=i;
        return 1;
    }
    return 0;
}
void pr(int x,int y){
    if (x>y) return;
    if (x==y) { printf("%d ",x); return;}
    pr(x+1,to[x][y]);
    printf("%d ",x);
    pr(to[x][y]+1,y);
}
int main(){
   // freopen("text","r",stdin);
    cin>>n>>kk;
    for (int i=1;i<=n;i++) lx[i]=rx[i]=n+10;
    for (int L,R,i=1;i<=kk;i++){
        scanf("%d%d",&L,&R);
        scanf("%s",CC);
        if (L==R) {
        cout<<"IMPOSSIBLE"<<endl;

      return 0;
        }
        if (CC[0]=='L'){
            lx[L]=MI(lx[L],R);
            ly[L]=MA(ly[L],R);
        } else {
            rx[L]=MI(rx[L],R);
            ry[L]=MA(ry[L],R);
        }
    }
    if (go(1,n)) {
        pr(1,n);
    } else cout<<"IMPOSSIBLE"<<endl;

      return 0;
}
