#include <iostream>
#include <cstring>
#include <algorithm>
#include <string>
#include <map>
using namespace std;

int n, m, nn;
string s, ss;
int p[26];
map<int, int> f;
pair<int, int> sp[26];
int ssc[10011];

int main()
{
	ios::sync_with_stdio(false);
	cin >> s;
	n = s.length();
	cin >> m;
	for (int i = 1; i <= m; ++i)
	{
		ssc[i] = 0;
		cin >> ss;
		nn = ss.length();
		for (int j = 0; j < nn; ++j)
			ssc[i] |= 1 << (ss[j] - 'a');
		f[ssc[i]] = 0;
	}
	memset(p, -1, sizeof(p));
	for (int i = 0; i < n; ++i)
	{
		p[s[i]-'a'] = i;
		for (int j = 0; j < 26; ++j)
			sp[j] = make_pair(p[j], j);
		sort(sp, sp + 26);
		int _ = 0;
		map<int, int>::iterator it;
		for (int j = 25; j >= 0; --j)
			if (sp[j].first == -1 || (i + 1 < n && sp[j].second == s[i+1] - 'a'))
				break;
			else if ((it = f.find(_ |= 1 << sp[j].second)) != f.end())
				++it->second;
	}
	for (int i = 1; i <= m; ++i)
		cout << f[ssc[i]] << endl;
	return 0;
}
