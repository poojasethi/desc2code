#include <cstring>
#include <cstdio>
#include <cmath>

#include <iostream>
#include <algorithm>

using namespace std;
typedef long long LL;
typedef double db;

const int MaxD = 22;
const int Max = 222222;
const int MaxS = 1 << MaxD;

struct box{
    int d;
    box *l,*r;
};

char St[Max];
box B[MaxD],hd;
int v[MaxS],mp[MaxD][MaxD];

void update(int c,int i){
    box *p = &B[c];
    if (p->d > -1){
        p->l->r = p->r;
        p->r->l = p->l;
    }
    p->d = i;
    p->l = hd.l,p->r = &hd;
    p->l->r = p->r->l = p;
}

int main(){
    int n,k,t;
    while (scanf("%d%d%d",&n,&k,&t) != EOF && n){
        scanf("%s",St);
        for (int i = 0;i < k;i++)
            scanf("%d",&v[1 << i]);
        for (int i = 0;i < k;i++)
            for (int j = 0;j < k;j++)
                scanf("%d",&mp[i][j]);
        for (int i = 0;i < k;i++)
            B[i].d = -1,B[i].l = B[i].r = NULL;
        hd.l = hd.r = &hd;
        for (int i = 0;i < n;i++){
            int c = St[i] - 'A';
            int s = 0;
            for (box *p = hd.l;p != &hd;p = p->l){
                int pc = p - B;
                v[s] += mp[pc][c];
                v[s | (1 << c)] -= mp[pc][c];
                v[s | (1 << pc)] -= mp[pc][c];
                v[s | (1 << c) | (1 << pc)] += mp[pc][c];
                if (pc == c) break;
                s |= 1 << pc;
            }
            update(c,i);
        }
        int g = 1 << k;
        for (int i = 1;i < g;i <<= 1)
            for (int j = 0;j < g;j++)
                if (j & i)
                    v[j] += v[j ^ i];
        int cs = 0;
        for (int i = 0;i < k;i++)
            if (B[i].d > -1)
                cs |= 1 << i;
        --g;
        int res = 0;
        for (int j = cs;j;j = (j - 1) & cs)
            if (v[(g ^ j) & cs] <= t)
                ++res;
        printf("%d\n",res);
    }
    return 0;
}
