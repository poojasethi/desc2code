#include <list>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <cfloat>
#include <numeric>
 
using namespace std;
 
const int oo = 0x3f3f3f3f;
const double eps = 1e-9;
 
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int, int> pii;
 
#define sz(c) int((c).size())
#define all(c) (c).begin(), (c).end()
#define FOR(i,a,b) for (int i = (a); i < (b); i++)
#define FORD(i,a,b) for (int i = int(b)-1; i >= (a); i--)
#define FORIT(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
 
int N, K;
int T, risk[22], A[22][22], tab[1 << 22][2];
int mask[22];
char S[250000];
int mark;

int main() {
	scanf("%d%d%d", &N, &K, &T);
	scanf("%s", S);
	FOR(i, 0, K) scanf("%d", &risk[i]);
	FOR(i, 0, K) FOR(j, 0, K) scanf("%d", &A[i][j]);
	memset(mask, -1, sizeof(mask));
	FOR(i, 0, N) {
		mark |= (1 << (S[i] - 'A'));
		FOR(j, 0, K) {
			if (mask[j] == -1) continue;
			int a = j, b = S[i] - 'A';
			if ((mask[j] & (1 << a)) || (mask[j] & (1 << b))) continue;
			tab[mask[j]][0] += A[a][b];
			tab[mask[j] | (1 << a)][0] -= A[a][b];
			tab[mask[j] | (1 << b)][0] -= A[a][b];
			tab[mask[j] | (1 << a) | (1 << b)][0] += A[a][b];
		}
		//cout << "Pos " << i << endl;
		//FOR(j, 0, K) cout << char(j+'A') << ' ' << mask[j] << endl;
		FOR(j, 0, K) {
			int a = j, b = S[i] - 'A';
			if (a == b) {
				mask[a] = 0;
			} else if (mask[j] != -1) {
				mask[a] |= (1 << b);
			}
		}
	}
	//cout << tab[0][0] << endl;
	FOR(i, 0, K) {
		FOR(j, 0, 1 << K) {
			tab[j | (1 << i)][(i+1)&1] += tab[j][i&1];
			if (!(j & (1 << i))) tab[j][(i+1)&1] += tab[j][i&1];
		}
		FOR(j, 0, 1 << K) tab[j][i&1] = 0;
	}
	int res = 0;
	FOR(i, 0, 1 << K) {
		if ((~mark) & i) continue;
		int v = tab[i][K&1];
		bool alldel = true;
		FOR(j, 0, K) {
			if ((mark & (1 << j)) && ((i & (1 << j)))) v += risk[j];
			if ((mark & (1 << j)) && !((i & (1 << j)))) alldel = false;
		}
		//cout << i << ' ' << v << endl;
		if (v <= T && !alldel) {
			res++;
			//cout << i << ' ' << v << endl;
		}
	}
	cout << res << endl;
	return 0;
}


