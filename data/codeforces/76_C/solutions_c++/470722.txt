#define fr(i, a, x) for(int(i) = a; i <= x; ++i)
#define rfr(i, a, x) for(int(i) = a; i >= x; --i)
#define all(a) a.begin(), a.end()
#define Min(a, b) (a < b) ? a : b
#define Max(a, b) (a > b) ? a : b
#define pb push_back
//#define MY_DEBUG 1

#include <cstdio>
#include <string>
#include <map>
#include <ctime>
#include <stack>
#include <deque>
#include <cstdlib>
#include <set>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
using namespace std;

#ifdef MY_DEBUG
#include <fstream>
ifstream cin("input.txt");
ofstream cout("output.txt");
#else 
#include <iostream>
#endif

const double pi = acos(-1.0);
const double eps = 1e-4;
const int inf = 1e9;
const long long linf = 1e18;

typedef vector<short> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;
typedef vector<vvvi> vvvvi;

void finclude()
{
#ifdef MY_DEBUG
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif
}

int main()
{
	finclude();
	long long n, k, T, sum, ma;
	string s;
	cin >> n >> k >> T;
	cin >> s;
	vector< vector<int> > a(k);
	vector<long long> v(1 << k, 0);
	vector< vector<long long> > cost(k, vector<long long>(k, 0));
	vector<long long> t(k);
	for(int i = 0; i < k; ++i)
		cin >> t[i];
	for(int i = 0; i < k; ++i)
		for(int j = 0; j < k; ++j)
			cin >> cost[i][j];
	for(int i = 0; i < n; ++i)
		a[s[i] - 'A'].push_back(i);
	for(int i = 0, ll, rr, mm, mask, pos; i < n; ++i)
	{
		vector< pair<int, int> > p;
		for(int j = 0; j < k; ++j)
		{
			ll = 0, rr = a[j].size() - 1;
			while(ll < rr)
			{
				mm = (ll + rr) >> 1;
				if (a[j][mm] <= i)
					ll = mm + 1;
				else
					rr = mm;
			}
			if (!a[j].empty() && a[j][ll] > i)
				p.push_back( pair<int, int>(a[j][ll], j));
		}
		sort(p.begin(), p.end());
		mask = 0, pos = s[i] - 'A';
		for(int j = 0; j < p.size(); ++j)
			{
				v[mask] += cost[pos][p[j].second];
				v[mask | (1 << pos)] -= cost[pos][p[j].second];
				v[mask | (1 << p[j].second)] -= cost[pos][p[j].second];
				v[mask | (1 << pos) | (1 << p[j].second)] += cost[pos][p[j].second];
				if (mask & 1 << pos)
					break;
				mask += 1 << p[j].second;
			}
	}
	long long ans = 0, c;
	for(int i = 0; i < k; ++i)
		for(int mask = 0; mask < 1 << k; ++mask)
			if ((mask & (1 << i)) > 0)
				v[mask] += v[mask - (1 << i)];
	ma = 0;
	for(long long i = 0; i < k; ++i)
		if (!a[i].empty())
			ma += (1 << i);
	for(int m = ma & (ma - 1); m > 0; m = ma & (m - 1))
	{
		sum = 0;
		for(int i = 0; i < k; ++i)
			if ( ( (1 << i) & m ) > 0 )
				sum += t[i];
		if (v[m] + sum <= T)
			++ans;
	}
	if (v[0] <= T)
		++ans;
	cout << ans << '\n';
}
