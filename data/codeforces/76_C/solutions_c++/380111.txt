#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long ll;

int N,K;
char buf[200010];
int t[30],a[30][30];
ll score[(1<<22)]; // removed

int sz,last[30];

void func(void){
    int i,j,k;
    
    sz = 0;
    for(i=N-1;i>=0;i--){
        int x = buf[i] - 'A';
        
        int mid = 0;
        REP(j,sz){
            int y = last[j];
            score[mid] += a[x][y];
            score[mid|(1<<x)] -= a[x][y];
            score[mid|(1<<y)] -= a[x][y];
            score[mid|(1<<x)|(1<<y)] += a[x][y];
            if(y == x) break;
            mid |= (1<<y);
        }
        
        REP(j,sz) if(last[j] == x) break;
        if(j == sz) sz++;
        for(k=j-1;k>=0;k--) last[k+1] = last[k];
        last[0] = x;
    }
}

int main(void){
    int T,i,j;
    
    scanf("%d%d%d",&N,&K,&T);
    scanf("%s",buf);
    REP(i,K) scanf("%d",&t[i]);
    REP(i,K) REP(j,K) scanf("%d",&a[i][j]);
    
    func();
    
    REP(i,K){
        int two = (1<<i);
        REP(j,(1<<K)) if(j < (j^two)) score[j^two] += score[j];
    }
    
    int exist = 0;
    REP(i,N) exist |= (1 << (buf[i] - 'A'));
    
    REP(i,K) if(exist&(1<<i)) REP(j,(1<<K)) if(j&(1<<i)) score[j] += t[i];
    
//  REP(i,8) cout << i << ' ' << score[i] << endl;
    
    int ans = 0;
    REP(i,(1<<K)){
        int mask = (1<<K) - 1 - i;
        if(mask != 0 && (exist & mask) == mask) if(score[i] <= T) ans++;
    }
    cout << ans << endl;
    
    return 0;
}
