#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())

#define MAX 22
li dp[1<<MAX];
li a[MAX];
li b[MAX][MAX];
li bef[MAX];
int main(){
	li n,k,t;
	string base;
	cin>>n>>k>>t>>base;
	rep(i,k) cin>>a[i];
	rep(i,k)rep(j,k) cin>>b[i][j];
	rep(i,MAX) bef[i]=-1;
	rep(i,sz(base)){
		li pos=base[i]-'A',mask=0;
		vector<pair<li,li> > vec;
		rep(j,k)if(bef[j]!=-1 && bef[pos]<=bef[j]) vec.pb(make_pair(-bef[j],j));
		sort(vec.begin(),vec.end());
		bef[pos]=i;
		rep(j,sz(vec)){
			dp[mask]+=b[vec[j].second][pos];
			dp[mask|(1<<pos)]-=b[vec[j].second][pos];
			dp[mask|(1<<vec[j].second)]-=b[vec[j].second][pos];
			dp[mask|(1<<vec[j].second)|(1<<pos)]+=b[vec[j].second][pos];
			mask|=1<<vec[j].second;
		}
	}
	rep(j,k)rep(i,1<<k)if((i>>j)&1) dp[i]+=dp[i^(1<<j)];
	rep(i,1<<k)rep(j,k)if((i>>j)&1) dp[i]+=a[j];
	li mask=0;
	rep(i,sz(base)) mask|=(1<<(base[i]-'A'));
	li res=0;
//	rep(i,1<<k) cout<<dp[i]<<endl;
	rep(i,1<<k)if(mask==(mask|i) && mask!=i && dp[i]<=t) res++;
	cout<<res<<endl;
}
