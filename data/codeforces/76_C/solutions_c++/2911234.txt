#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
#include<iostream>
#include<vector>
#include<map>
#include<set>
using namespace std;
typedef long long lld;
#define mp make_pair
#define X first
#define Y second
#define pb push_back
#define inf 0xfffffff
lld dp[1<<22];
int cost[110];
int g[110][110];
int at[110];
char str[200010];
struct Node
{
    int s,id;
}p[110];
bool cmp(Node a,Node b)
{
    return a.s > b.s;
}
int main()
{
    int n,m;
    lld limit;
    cin >> n >> m >> limit;
    scanf("%s",str);
    for(int i=0;i<m;i++)
        scanf("%d",&cost[i]);
    for(int i=0;i<m;i++)
        for(int j=0;j<m;j++)
            scanf("%d",&g[i][j]);
    for(int i=0;i<m;i++)
        p[i].s=-1,p[i].id=i;
    memset(dp,0,sizeof(dp));
    for(int i=0;i<n;i++)
    {
        int y=str[i]-'A';
        sort(p,p+m,cmp);
        int mask=0;
        for(int j=0;j<m;j++)
        {
            if(p[j].s == -1)
                break;
            int x=p[j].id;
            dp[mask]+=g[x][y];
            dp[mask|(1<<x)]-=g[x][y];
            dp[mask|(1<<y)]-=g[x][y];
            dp[mask|(1<<x)|(1<<y)]+=g[x][y];
            mask|=1<<x;
            if(p[j].id == y)
                break;
        }
        for(int j=0;j<m;j++)
            if(p[j].id == y)
                p[j].s=i;
    }
    for(int i=0;i<m;i++)
        dp[(1<<i)]+=cost[i];
    for(int i=0;i<m;i++)
        for(int mask=0;mask<(1<<m);mask++)
            if(mask&(1<<i))
                dp[mask]+=dp[mask^(1<<i)];
    int ans=0;
    int ok=0;
    for(int i=0;i<n;i++)
    {
        int id=str[i]-'A';
        ok|=1<<(id);
    }
    for(int mask=0;mask<(1<<m);mask++)
    {
//      printf("%I64d\n",dp[mask]);
        if((mask|ok) != ok)
            continue;
        if(mask == ok)
            continue;
//      printf("%d\n",mask);
        if(dp[mask] <= limit)
            ans++;
    }
    printf("%d\n",ans);
    return 0;
}
