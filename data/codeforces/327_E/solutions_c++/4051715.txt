#include <cstdio>

#define N 24
#define M 1000000007
int dp[1<<N], n, vet[N], bad[N], k;

void solve()
{
	dp[(1<<n)-1] = 1;
	for (int i = (1<<n)-1; i > 0; --i)
	{
		int sum = 0, j = i;
		while (j)
		{
			int p = __builtin_ctz(j);
			j -= j&-j;
			sum += vet[p];
		}
		if (bad[0] == sum || bad[1] == sum) continue;
		j = i;
		while (j)
		{
			int p = __builtin_ctz(j);
			j -= j&-j;
			dp[i^1<<p] = (dp[i^1<<p]+dp[i])%M;
		}
	}	
}

int main()
{
	scanf("%d", &n); bad[0] = bad[1] = -1;
	for (int i = 0; i < n; ++i)
		scanf("%d", vet+i);
	scanf("%d", &k);
	for (int i = 0; i < n; ++i)
		scanf("%d", bad+i);
	solve();
	printf("%d\n", dp[0]);
}

