from sys import stdin
from collections import defaultdict
from string import lower
def main():
    n = int(stdin.readline())
    a = map(lower, stdin.readline().split())
    m = int(stdin.readline())
    d = defaultdict(int)
    G = defaultdict(list)
    rG = defaultdict(list)
    for i in xrange(m):
        s, t = map(lower, stdin.readline().split())
        if s not in d:
            d[s] = len(d)
        if t not in d:
            d[t] = len(d)
        G[d[s]].append(d[t])
        rG[d[t]].append(d[s])
    k = len(d)
    yet = [0] * k
    st = []
    o = []
    for i in xrange(k):
        if not yet[i]:
            st.append(i)
            while st:
                t = st.pop()
                if yet[t] == 1:
                    o.append(t)
                    yet[t] = 2
                elif not yet[t]:
                    yet[t] = 1
                    st.append(t)
                    for j in G[t]:
                        if not yet[j]:
                            st.append(j)

    yet = [True] * k
    rg = [0] * k
    lg = 0
    g = []
    for x in reversed(o):
        if yet[x]:
            st.append(x)
            yet[x] = False
            ng = []
            while st:
                t = st.pop()
                ng.append(t)
                rg[t] = lg
                for j in rG[t]:
                    if yet[j]:
                        yet[j] = False
                        st.append(j)
            lg = lg + 1
            g.append(ng)
    rc = [(1000000, 1000000)] * lg
    for s, t in d.items():
        rc[rg[t]] = min((s.count('r'), len(s)), rc[rg[t]])
    for i in xrange(lg - 1, -1, -1):
        for j in g[i]:
            if G[j]:
                rc[rg[j]] = min(rc[rg[j]], min(rc[rg[v]] for v in G[j]))
    ans = [0, 0]
    for s in a:
        if s in d:
            i, j = rc[rg[d[s]]]
            ans[0] += i
            ans[1] += j
        else:
            ans[0] += s.count('r')
            ans[1] += len(s)
    print ans[0], ans[1]
main()