import sys
sys.setrecursionlimit(100000)
n,d,cnt,rep=input(),{},0,[]
R=lambda:[w.lower() for w in raw_input().split()]
index,better=[0]*n,[[0,0]]*50000
for i,w in enumerate(R()):
	if not d.has_key(w): d[w]=index[i]=cnt;better[cnt]=(w.count('r'),len(w));cnt+=1
	else: index[i]=d[w]
for _ in range(input()):
	rep.append(R())
	for w in rep[-1]: 
		if not d.has_key(w): d[w]=cnt;better[cnt]=(w.count('r'),len(w));cnt+=1
syns,vst=[[] for _ in range(cnt)],[0]*cnt
for (w1,w2) in rep: syns[d[w1]].append(d[w2])
def dfs(v):
	vst[v]=1
	for to in syns[v]:
		if not vst[to]: dfs(to)
		better[v]=min(better[v],better[to])
ansr=ansl=0
for i in range(cnt):
	if not vst[i]:dfs(i)
for i in range(cnt): vst[i]=0
for i in range(n):
	if not vst[index[i]]: dfs(index[i])
	ansr+=better[index[i]][0]
	ansl+=better[index[i]][1]		
print ansr, ansl	