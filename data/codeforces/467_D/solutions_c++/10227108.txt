#include <stdio.h>
#include <iostream>
#include <map>
#include <vector>
#include <queue>
using namespace std;
int s=0;
bool f[100005];
vector <int> a,vc[100005];
map <string,int> mp;
pair <int,int> pr[100005];
priority_queue < pair<pair<int,int>,int> > que;
int get(string &str){
	for (int i=0;i<str.length();i++)
		if ('A'<=str[i] && str[i]<='Z')
			str[i]=str[i]+'a'-'A';
	if (mp[str]) return mp[str];
	s++;
	mp[str]=s;
	int t=0;
	for (int i=0;i<str.length();i++)
		if (str[i]=='r')
			t++;
	pr[s]=make_pair(-t,-str.size());
	que.push(make_pair(pr[s],s));
	return s;
}
int main( ){
	int n,m,A,B;
	string str,x,y;
	scanf("%d",&n);
	for (int i=0;i<n;i++){
		cin>>str;
		a.push_back(get(str));
	}
	scanf("%d",&m);
	for (int i=0;i<m;i++){
		cin>>x>>y;
	  	A=get(x),B=get(y);
		vc[B].push_back(A);
	}
	while (!que.empty()){
		int u=que.top().second;
		que.pop();
		if (f[u]) continue ;
		f[u]=true;
		for (int i=0;i<vc[u].size();i++){
			int v=vc[u][i];
			if (pr[v]<pr[u]){
				pr[v]=pr[u];
				que.push(make_pair(pr[v],v));
			}
		}
	}
	long long v1=0,v2=0;
	for (int i=0;i<a.size();i++){
		v1-=pr[a[i]].first;
		v2-=pr[a[i]].second;
	}
	cout<<v1<<' '<<v2<<endl;
	return 0;
}