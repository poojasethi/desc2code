#include<cstdio>
#include<string>
#include<map>
#include<queue>
#define N 500005
using namespace std;
long long R,len;
struct Pair
{
  int len,R;
  friend inline int operator < (const Pair &a,const Pair &b){return a.R<b.R||a.R==b.R&&a.len<b.len;}
}ans[N],t;
struct adj{int go,next;}A[N];
int first[N],last[N],end[N];
char a[N],data[N];
int tot,cnt,i,x,y,j,n,m;
map<string,int>F;queue<int>q;
inline void add(int u,int v){A[++cnt]=(adj){v,end[u]};end[u]=cnt;}
inline Pair C()
{
  Pair res;res.len=0;res.R=0;
  for (int i=0;a[i]!='\0';i++) 
  {
    if (a[i]>='a'&&a[i]<='z') 
      a[i]=a[i]-32;
    res.len++;res.R+=a[i]=='R';
  }
  return res;
}
inline void update()
{
  for (int i=1;i<=tot;i++) q.push(i);
  while (!q.empty())
  {
    int k=q.front();q.pop();
    for (int i=end[k];i;i=A[i].next)
    {
      int go=A[i].go;
      if (ans[k]<ans[go])
        ans[go]=ans[k],q.push(go);
    }
  }
   for (int i=1;i<=n;i++)
  {
    for (int j=first[i];j<=last[i];j++) a[j-first[i]]=data[j];
    a[last[i]-first[i]+1]='\0';x=F[a];
    R+=ans[x].R;len+=ans[x].len;
  }
}
int main()
{
  scanf("%d",&n);
  for (i=1;i<=n;i++)
  {
    first[i]=last[i-1]+1;
    scanf("%s",a);t=C();
    if (!F[a]) F[a]=++tot,ans[tot]=t;
    for (j=0;j<t.len;j++)
      data[j+first[i]]=a[j];
    last[i]=first[i]+t.len-1;
  }
  scanf("%d",&m);
  for (i=1;i<=m;i++)
  {
    scanf("%s",a);t=C();if (!(x=F[a])) F[a]=x=++tot,ans[tot]=t;
    scanf("%s",a);t=C();if (!(y=F[a])) F[a]=y=++tot,ans[tot]=t;
    add(y,x);
  }
  update();
  printf("%I64d %I64d",R,len);
  return 0;
}
    
