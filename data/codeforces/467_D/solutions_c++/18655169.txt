#include<iostream>
#include<sstream>
#include<fstream>
#include<set>
#include<map>
#include<queue>
#include<functional>
#include<string>
#include<cstring>
#include<vector>
#include<cmath>
#include<cstdio>
#include<ctime>
#include<algorithm>
#define mp make_pair
#define pb push_back
#define rep(i,j,k) for(int (i)=(j);(i)<=k;(i)++)
#define MAXN 100010
using namespace std;
pair<pair<int,int>,int>cost[3*MAXN];
pair<int,int>c[3*MAXN];
map<string,int> id;
bool vis[3*MAXN];
vector<int>e[3*MAXN];
int m,n,a[MAXN],sct=1;
int get_id(string &s){
	for(int i=0;i<s.size();i++)if(s[i]>='A'&&s[i]<='Z')s[i]=s[i]-'A'+'a';
	if(id[s])return id[s];
	for(int i=0;i<s.size();i++)if(s[i]=='r'||s[i]=='R')cost[sct].first.first++;
	cost[sct].first.second=s.size();
	cost[sct].second=sct;
	return id[s]=sct++;
}
void dfs(int u){
	vis[u]=true;
	for(int i=0;i<e[u].size();i++){
		if(!vis[e[u][i]]){
			c[e[u][i]]=c[u];
			dfs(e[u][i]);
		}
	}
}
int main(){
	cin>>m;
	for(int i=0;i<m;i++){
		string aaa;
		cin>>aaa;
		a[i]=get_id(aaa);
	}
	cin>>n;
	for(int i=0;i<n;i++){
		string bbb,ccc;
		cin>>bbb>>ccc;
		int x,y;
		x=get_id(bbb);y=get_id(ccc);
		e[y].push_back(x);		
	}
	sort(cost,cost+sct);
	for(int i=0;i<sct;i++){
		if(!vis[cost[i].second]){
			c[cost[i].second]=cost[i].first;
			dfs(cost[i].second);
		}
	}
	long long ans1=0,ans2=0;
	for(int i=0;i<m;i++){
		ans1+=c[a[i]].first;ans2+=c[a[i]].second;
	}
	cout<<ans1<<' '<<ans2;
	return 0;
}
