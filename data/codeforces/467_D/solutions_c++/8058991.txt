#include <map>
#include <set>
#include <list>
#include <ctime>
#include <cmath>
#include <queue>
#include <stack>
#include <bitset>
#include <vector>
#include <cstdio>
#include <string>
#include <cstring>
#include <sstream>
#include <iomanip>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;
vector<int> c[100005];
map<string,int> q;
pair<pair<int,int>,int> d[100005];
pair<int,int> r[100005];
string w[100005];
int g[100005],p=1;
bool v[100005];
int work (string &x) {
	int i;
	for (i=0;i<x.length();i++) {
		if (x[i]>='A' && x[i]<='Z') x[i]-='A'-'a';
	}
	if (q[x]) return q[x];
	for (i=0;i<x.length();i++) {
		if(x[i]=='r' || x[i]=='R') d[p].first.first++;
	}
	d[p].first.second=x.length();
	d[p].second=p;
	q[x]=p;p++;
	return q[x];
}
void dfs (int x) {
	int i;
	v[x]=true;
	for (int i=0;i<c[x].size();i++) {
		if(!v[c[x][i]]) {
			r[c[x][i]]=r[x];
			dfs(c[x][i]);
		}
	}
}
int main ( ) {
	int m,n,i,x,y;
	long long ans1=0,ans2=0;
	string a,b;
	scanf("%d",&m);
	for (i=0;i<m;i++) {
		cin>>w[i];
		g[i]=work(w[i]);
	}
	scanf("%d",&n);
	for (i=0;i<n;i++) {
		cin>>a>>b;
		x=work(a);y=work(b);
		c[y].push_back(x);
	}
	sort(d,d+p);
	for (i=0;i<p;i++) {
		if (!v[d[i].second]) {
			r[d[i].second]=d[i].first;
			dfs(d[i].second);
		}
	}
	for (i=0;i<m;i++) {
		ans1+=r[g[i]].first;ans2+=r[g[i]].second;
	}
	printf("%I64d %I64d\n",ans1,ans2);
	return 0;
}
/*
Sample test(s)

input

3
AbRb r Zz
4
xR abRb
aA xr
zz Z
xr y

output

2 6

input

2
RuruRu fedya
1
ruruRU fedor

output

1 10
*/
