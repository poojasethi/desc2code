/*
3
AbRb r Zz
4
xR abRb
aA xr
zz Z
xr y

2 6
*/
#include<iostream>
#include<algorithm>
#include<vector>
#include<utility>
#include<string>
#include<map>
#include<queue>
using namespace std;
#define maxn 500005
int wordn;
map<string,int> ind;
pair<int,int> r[maxn];
int minr[maxn];
priority_queue<pair<pair<int,int>,int> >q;
int getind(string s)
{
	string t;
	for(int i=0;i<s.length();i++)
	{
		if(s[i]>='A' && s[i]<='Z')
		{
			t+=s[i]+'a'-'A';
		}
		else t+=s[i];
	}
	if(ind[t])return ind[t];
	ind[t]=++wordn;
	int rn=0;
	for(int i=0;i<s.length();i++)
	{
		if(t[i]=='r')
		{
			rn++;
		}
	}
	r[ind[t]]=make_pair(-rn,-t.length());
	q.push(make_pair(make_pair(-rn,-t.length()),ind[t]));
	return ind[t];
}
vector<int> adj[maxn];
vector<int> essay;
int in[maxn];
bool v[maxn];
int m,n;
int main()
{
	cin>>m;
	for(int i=0;i<m;i++)
	{
		string s;
		cin>>s;
		essay.push_back(getind(s));
	}
	cin>>n;
	for(int i=0;i<n;i++)
	{
		string a,b;
		cin>>a>>b;
		int A=getind(a);
		int B=getind(b);
		adj[B].push_back(A);
	}
	while(!q.empty())
	{
		int cur=q.top().second;
		q.pop();
		if(v[cur])
		{
			continue;
		}
		v[cur]=1;
		for(int j=0;j<adj[cur].size();j++)
		{
			int to=adj[cur][j];
			if(r[cur]>r[to])
			{
				r[to]=r[cur];
				q.push(make_pair(r[to],to));
			}
		}
	}
	long long ansr=0,anslen=0;
	for(int i=0;i<essay.size();i++)
	{
		ansr-=r[essay[i]].first;
		anslen-=r[essay[i]].second;
	}
	cout<<ansr<<" "<<anslen<<endl;
	return 0;
}