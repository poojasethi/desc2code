#include <map>
#include <set>
#include <list>
#include <ctime>
#include <cmath>
#include <queue>
#include <stack>
#include <bitset>
#include <vector>
#include <cstdio>
#include <string>
#include <cstring>
#include <sstream>
#include <iomanip>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#define mp make_pair
#define pb push_back
using namespace std;
priority_queue<pair<pair<int,int>,int> > q;
vector<int> g[500005],a;
pair<int,int> f[500005];
map<string,int> w;
int b[500005],p;
bool v[500005];
int work (string c) {
	int l=c.length(),i,s=0;
	string s1;
	for (i=0;i<l;i++) {
		if ('A'<=c[i] && c[i]<='Z') s1+=(c[i]-'A'+'a'); else s1+=c[i];
	}
	if (w[s1]) return w[s1];
	p++;w[s1]=p;
	for (i=0;i<l;i++) {
		if (s1[i]=='r') s++;
	}
	f[p]=mp(-s,-l);
	q.push(mp(f[p],p));
	return p;
}
int main ( ) {
	int m,n,i,t,t1,t2,h;
	long long ans1=0,ans2=0;
	scanf("%d",&m);
	for (i=1;i<=m;i++) {
		string c;
		cin>>c;
		a.pb(work(c));
	}
	scanf("%d",&n);
	for (i=1;i<=n;i++) {
		string x,y;
		cin>>x>>y;
		t1=work(x),t2=work(y);
		g[t2].pb(t1);
	}
	while (!q.empty()) {
		t=q.top().second;q.pop();
		if (v[t]) continue;
		v[t]=1;
		for (i=0;i<g[t].size();i++) {
			h=g[t][i];
			if (f[t]>f[h]) {
				f[h]=f[t];
				q.push(mp(f[h],h));
			}
		}
	}
	for (i=0;i<a.size();i++) ans1-=f[a[i]].first,ans2-=f[a[i]].second;
	printf("%I64d %I64d\n",ans1,ans2);
	return 0;
}
/*
Sample test(c)

input

3
AbRb r Zz
4
xR abRb
aA xr
zz Z
xr y

output

2 6

input

2
RuruRu fedya
1
ruruRU fedor

output

1 10
*/
