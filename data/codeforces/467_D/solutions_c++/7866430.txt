#include<iostream>
#include<algorithm>
#include<vector>
#include<map>
#include<utility>
#include<string>
using namespace std;
#define maxm 100005
int m,n;
vector<int> e[maxm];
map<string,int> mp;
pair<int,int> cost[maxm];
pair<pair<int,int>,int> w[maxm];
string str[maxm];
int id[maxm];
int idc=1;
bool vis[maxm];
int getid(string &st)
{
	for(int i=0;i<st.length();i++)
	{
		if(st[i]>='A' && st[i]<='Z')
		{
			st[i]-='A'-'a';
		}
	}
	if(mp[st])return mp[st];
	for(int i=0;i<st.length();i++)if(st[i]=='r' || st[i]=='R')w[idc].first.first++;
	w[idc].first.second=st.length();
	w[idc].second=idc;
	return mp[st]=idc++;
	
}
void dfs(int num)
{
	vis[num]=true;
	for(int i=0;i<e[num].size();i++)
	{
		if(!vis[e[num][i]])
		{
			cost[e[num][i]]=cost[num];
			dfs(e[num][i]);
		}
	}
	return;
}
int main()
{
	cin>>m;
	for(int i=0;i<m;i++)cin>>str[i],id[i]=getid(str[i]);
	cin>>n;
	string a,b;
	for(int i=0;i<n;i++)
	{
		cin>>a>>b;
		int a1=getid(a),b1=getid(b);
		e[b1].push_back(a1);
	}
	sort(w,w+idc);
	for(int i=0;i<idc;i++)
	{
		//cout<<w[i].first.first<<" "<<w[i].first.second<<" "<<w[i].second<<endl;
		if(!vis[w[i].second])
		{
			cost[w[i].second]=w[i].first;
			dfs(w[i].second);
		}
	}
	long long ans1=0,ans2=0;
	for(int i=0;i<m;i++)
	{
		ans1+=cost[id[i]].first;
		ans2+=cost[id[i]].second;
	}
	cout<<ans1<<" "<<ans2<<endl;
	return 0;
}