//In the Name of God ;

#include<bits/stdc++.h>

using namespace std;

#define int long long

const int Maxn=1e5+7;
const int base=31;
const int Mod=999998727899999;

map<int,int>m;
int a[Maxn];
bool mark[Maxn];
vector<int>V[Maxn];
int T=1;
int dp[Maxn],t[Maxn];

bool c (char c)
{
  return (c=='r');
}

int hash(string s)
{
  s[0]=tolower(s[0]);
  int h=s[0]-'a'+1;
  int ans=c(s[0]);
  for(int i=1;i<s.size();i++)
    {
      s[i]=tolower(s[i]);
      h=(h*base+s[i]-'a'+1)%Mod,ans+=c(s[i]);
    }
  if(!m[h])
    m[h]=T++;
  int p=m[h];
  t[p]=ans;
  dp[p]=s.size();
  return p;
}

void dfs(int u)
{
  mark[u]=true;
  for(int i=0;i<V[u].size();i++)
    {
      int v=V[u][i];
      if(!mark[v])
	dfs(v);
      if(t[v]<t[u] || (t[v]==t[u] && dp[v]<dp[u]))
	dp[u]=dp[v],t[u]=t[v];
    }
}

main()
{
  ios_base::sync_with_stdio(0);
  int n,m,ans1=0,ans2=0;
  cin>>n;
  string S,s;
  for(int i=0;i<n;i++)
    cin>>s,a[i]=hash(s);
  cin>>m;
  for(int i=0;i<m;i++)
    {
      cin>>s>>S;
      int u=hash(s);
      int v=hash(S);
      V[u].push_back(v);
    }
  for(int i=1;i<T;i++)
    dfs(i);
  memset(mark,0,sizeof mark);
  for(int i=T-1;i>=1;i--)
    dfs(i);
  for(int i=0;i<n;i++)
    ans2+=dp[a[i]],ans1+=t[a[i]];
  cout<<ans1<<" "<<ans2<<endl;
  return 0;
}
