def add_node(l, d, n1, n2):
    k = (n1, n2)
    d[k] = []
    l.append(k)
    for key in d.keys():
        if (n1 < key[1] and n1 > key[0]) or (n2 < key[1] and n2 > key[0]):
            d[k].append(key)
        if (key[0] < n2 and key[0] > n1) or (key[1] < n2 and key[1] > n1):
            d[key].append(k)

def query_node(l, d, n1, n2):
    return dfs(l[n1], l[n2], d, [])

def dfs(source, dest, dic, path):
    if dest in dic[source]:
        return True
    for node in dic[source]:
        if not node in path:
            path.append(node)
            ans = dfs(node, dest, dic, path)
            if ans == True:
                return ans
    return False


n = input()

d = {}
keys = [0]

for i in range(n):
    line = [int(num) for num in raw_input().split()]
    q = line[0]
    if q == 1:
        add_node(keys, d, line[1], line[2])
    else:
        if query_node(keys, d, line[1], line[2]):
            print "YES"
        else:
            print "NO"
