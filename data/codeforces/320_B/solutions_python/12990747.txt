n = int(raw_input())

p = []
graph = {}

def can_move(a,b,c,d):
    return (a > c and a < d) or (b > c and b < d)

def can_reach(x,y):
    explored = set()
    q = [x]
    while len(q) > 0:
        u = q.pop(0)
        if u == y: return True
        if u not in graph: continue
        else:
            for v in graph[u]:
                if v not in explored:
                    explored.add(v)
                    q.append(v)
    return False
        
for i in xrange(n):
    t,c,d = map(int,raw_input().split())
    if t == 1:
        for i in xrange (len(p)):
            a,b = p[i]
            if can_move(c,d,a,b):
                if len(p)+1 not in graph:
                    graph[len(p)+1] = {}
                graph[len(p)+1][i+1] = 1
            if can_move(a,b,c,d):
                if i+1 not in graph:
                    graph[i+1] = {}
                graph[i+1][len(p)+1] = 1
        p.append((c,d))
    elif t==2:
        if can_reach(c,d):
            print "YES"
        else:
            print "NO"

                
