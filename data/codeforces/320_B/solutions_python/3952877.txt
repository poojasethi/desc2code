def ri():
    return map(int, raw_input().split())

ss = [None]
edges = [set() for _ in xrange(101)]

def overlap((x,y), (left,right)):
    return any([left < x and x < right,
                left < y and y < right])

def dfs(me, look):
    q, seen = list(edges[me]), set()
    while q:
        curr = q.pop(0)
        seen.add(curr)
        if curr == look: return True
        for n in edges[curr]:
            if n not in q and n not in seen:
                q.append(n)
    return False

def main():
    n=input()

    for i in xrange(n):
        s, x, y = ri()
        if s == 1:
            ss.append((x, y))
            ind = len(ss)-1
            for i in range(1, ind):
                if overlap(ss[i],(x,y)):
                    edges[i].add(ind)
                if overlap((x,y), ss[i]):
                    edges[ind].add(i)
        else:
            print "YES" if dfs(x,y) else "NO"

main()
