data = []


def is_connect(int1, int2):
    if (int1[0]<int2[1] and int1[0]>int2[0]) or (int1[1]<int2[1] and int1[1]>int2[0]):
        return True
    else:
        return False

def is_link(start, end):
    def dfs(now, end):
        if now == end:
            return True
        mark.append(now)
        for i, v in enumerate(data):
            if is_connect(data[now], v) and i not in mark:
                if dfs(i, end):
                    return True
        return False        
    if is_connect(data[start], data[end]):
        return True
    mark = []
    return dfs(start, end)


n = int(raw_input())
table = []
for j in range(0, n):
    x, y, z  = tuple(int(i) for i in raw_input().strip().split(" "))
    if x == 1:
        '''
        table.append([])
        for i, v in enumerate(data):
            if is_connect((y,z), v):
                table[len(table)-1].append(v)
            if is_connect(v, (y,z)):
                table[i].append((y,z))
        '''
        data.append((y,z))
    elif x == 2:
        y -= 1
        z -= 1
        if is_link(y,z):
            print 'YES'
        else:
            print 'NO'
