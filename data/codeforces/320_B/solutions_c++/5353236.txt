#include <iostream>
#include <cstring>
using namespace std;
const int MAX = 100;
int l[MAX], r[MAX], n, size;
bool mark[MAX];
void dfs(int v)
{
	mark[v] = true;
	for (int u = 0; u < size; u++)
		if (((l[u] < l[v] && l[v] < r[u]) || (l[u] < r[v] && r[v] < r[u])) && !mark[u])
			dfs(u);
}
int main()
{
	ios::sync_with_stdio(false);
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		int t;
		cin >> t;
		if (t == 1)
		{
			cin >> l[size] >> r[size];
			size++;
		}
		else
		{
			int u, v;
			cin >> u >> v;
			u--, v--;
			memset(mark, false, sizeof(mark));
			dfs(u);
			if (!mark[v])
				cout << "NO" << endl;
			else
				cout << "YES" << endl;
		}
	}
	return 0;
}
