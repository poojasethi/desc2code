# -*- coding: UTF-8 -*-

# from itertools import *
from collections import defaultdict

T = input()
graph = defaultdict(list)
# St = raw_input()
# data1 = map(int, raw_input().split())
data2 = [ map(int, raw_input().split()) for i in xrange(T) ]
all_c = 0
for i in data2:
    graph[i[0]].append([i[1], 0])
    graph[i[1]].append([i[0], i[2]])
    all_c += i[2]
cost = 0
fr = 1
j = 1
was = [1]
while j != T:
    if not graph[fr][0][0] in was:
        cost += graph[fr][0][1]
        fr = graph[fr][0][0]
        was.append(fr)
    else:
        cost += graph[fr][1][1]
        fr = graph[fr][1][0]
        was.append(fr)
    j += 1
if graph[fr][0][0] == 1:
    cost += graph[fr][0][1]
else:
    cost += graph[fr][1][1]
    
print min(cost, all_c-cost)
