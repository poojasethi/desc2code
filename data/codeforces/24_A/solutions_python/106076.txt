import sys
from tokenize import *
inp = sys.stdin
def read(func = lambda x:x,types = (NUMBER,STRING),count = 1):
    token =  (func(s[1]) for s in generate_tokens(sys.stdin.readline) if s[0] in types)
    while True:
        count = yield(next(token) for i in xrange(count)) or 1
num = read(int,(NUMBER,))
n, = num.next()
r = [[] for i in xrange(n+1)]
for i in xrange(n):
    a,b,c = num.send(3)
    r[a].append((b,0))
    r[b].append((a,c))
res = []
for p in (r[1]):
    cur,prev,sum,begin = 1,p[0],0,p[0]
    while True:
        i = 0 if prev==r[cur][1][0] else 1
        cur,sum,prev = r[cur][i][0],sum+r[cur][i][1],cur
        if cur == 1: break
    res.append(sum)
print min(res)

