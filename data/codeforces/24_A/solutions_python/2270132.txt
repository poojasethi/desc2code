#!/usr/bin/python
import sys

# direction: 0 - to, 1 - from
class Edge:
	def __init__(self, nextNode, direc, cost):
		self.nextNode = nextNode
		self.direc    = direc
		self.cost     = cost

def pickNext(i, prev, nodes):
	for e in nodes[i]:
		if e.nextNode != prev:
			return e
	assert(False)

n = int(sys.stdin.readline())

nodes = {}
for i in range(1,n+1):
	nodes[i] = []

for i in range(n):
	(a, b, c) = map(lambda(x): int(x), sys.stdin.readline().split())
	nodes[a].append(Edge(b, 0, c))
	nodes[b].append(Edge(a, 1, c))

i = 1
prev = 0
saving = 0
cost   = 0
while True:
	e = pickNext(i, prev, nodes)
	if e.direc == 0:
		saving += e.cost
	else:
		cost += e.cost
	prev = i
	i = e.nextNode
	if i == 1:
		break

print min(saving, cost)
