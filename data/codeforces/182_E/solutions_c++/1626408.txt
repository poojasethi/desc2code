#include <iostream>
#include <vector>
#include <string.h>
using namespace std;

const int mod = 1000000007;

int n;
int L;

int a[210];
int b[210];
int dp[3005][210];

int main() {

	cin >> n;
	cin >> L;
	memset(dp, 0, sizeof(dp));
	for (int i = 1; i <= n; i++) {
		cin >> a[i] >> b[i];
		dp[a[i]][i] = 1;
		if (a[i] != b[i]) {
			a[n + i] = b[i];
			b[n + i] = a[i];
			dp[a[n + i]][n + i] = 1;
		}
	}

	for (int i = 1; i <= L; i++) {
		for (int j = 1; j <= 2 * n; j++) {
			if (dp[i][j] == 0) continue;
			for (int k = 1; k <= 2 * n; k++) {
				if (k == j || k + n == j || k - n == j) continue;
				if (a[k] != b[j]) continue;
				if (i + a[k] > L) continue;
				dp[i + a[k]][k] += dp[i][j];
				dp[i + a[k]][k] %= mod;
			}
		}
	}

	int cnt = 0;
	for (int i = 1; i <= 2 * n; i++) {
		cnt += dp[L][i];
		cnt %= mod;
	}

	cout << cnt << endl;

	return 0;
}
