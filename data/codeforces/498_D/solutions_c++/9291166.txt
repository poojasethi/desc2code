#include <bits/stdc++.h>

#define mp make_pair
#define st first
#define nd second
#define pb push_back

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair< ll,ll > pll;

const int inf = 1000000000, N = 100000;

struct node {
	int a[60];

	int& operator[] (int i) {
		return a[i];
	}

	node() {
		for (int i = 0; i < 60; i++)
			a[i] = 0;
	}
};

node ST[4*N+5];
int n,q;

node merge(node le, node ri) {
	node res;

	for (int i = 0; i < 60; i++) {
		res[i] = le[i] + ri[(i + le[i]) % 60];
	}

	return res;
}

node query(int i,int b,int s,int x,int y) {
	if (x > s || y < b)
		return node();
	if (x <= b && y >= s)
		return ST[i];

	int o = (b + s) / 2;

	return merge(query(2*i,b,o,x,y), query(2*i+1,o+1,s,x,y));
}

node update(int i,int b,int s,int x,int t) {
	if (x < b || x > s)
		return ST[i];
	if (b == s) {
		for (int j = 0; j < 60; j++) {
			ST[i][j] = (j % t == 0) + 1;
		}

		return ST[i];
	}

	int o = (b + s) / 2;

	return ST[i] = merge(update(2*i,b,o,x,t), update(2*i+1,o+1,s,x,t));
}

int main()
{
	int x,y;
	char ch;

	scanf("%d", &n);

	for (int i = 1; i <= n; i++) {
		scanf("%d",&x);
		update(1,1,n,i,x);
	}

	scanf("%d", &q);

	while (q--) {
		scanf(" %c %d %d", &ch, &x, &y);


		if (ch == 'A') {
			printf("%d\n",query(1,1,n,x,y-1)[0]);	
		} 
		else {
			update(1,1,n,x,y);	
		}
	}

	return 0;
}
