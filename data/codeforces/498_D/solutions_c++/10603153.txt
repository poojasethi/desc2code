#include <iostream>
using namespace std;
const int MAX = 100005;
int seg[60][4 * MAX], n;
void set(int p, int val, int v = 1, int s = 0, int e = n)
{
	if (e - s < 2)
	{
		for (int i = 0; i < 60; i++)
			if (i % val == 0)
				seg[i][v] = 2;
			else
				seg[i][v] = 1;
		return;
	}
	int mid = (s + e) / 2;
	if (p < mid)
		set(p, val, 2 * v, s, mid);
	else
		set(p, val, 2 * v + 1, mid, e);
	for (int i = 0; i < 60; i++)
		seg[i][v] = seg[i][2 * v] + seg[(i + seg[i][2 * v]) % 60][2 * v + 1];
}
int get(int l, int r, int time, int v = 1, int s = 0, int e = n)
{
	if (l <= s && e <= r)
		return seg[time][v];
	if (e <= l || r <= s)
		return 0;
	int mid = (s + e) / 2;
	int le = get(l, r, time, 2 * v, s, mid);
	return le + get(l, r, (time + le) % 60, 2 * v + 1, mid, e);
}
int main()
{
	ios::sync_with_stdio(false);
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		int val;
		cin >> val;
		set(i, val);
	}
	int q;
	cin >> q;
	while (q--)
	{
		char c;
		cin >> c;
		if (c == 'A')
		{
			int l, r;
			cin >> l >> r;
			cout << get(l - 1, r - 1, 0) << '\n';
		}
		else
		{
			int x, y;
			cin >> x >> y;
			set(x - 1, y);
		}
	}
	return 0;
}
