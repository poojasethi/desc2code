#include <cstdio>
#define N 270000
#define K 60
#define L (d << 1)
#define R (L | 1)
#define M (l + r >> 1)
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)

int n, a[N], t[K][N], q, x, y, ans;
char opt;

void init(int d, int l, int r){
	if(l == r){
		fi(i, 0, K) t[i][d] = (i % a[l] == 0) + 1;
		return;
	}
	
	init(L, l, M);
	init(R, M + 1, r);
	fi(i, 0, K) t[i][d] = t[i][L] + t[(i + t[i][L]) % K][R];
}

void update(int d, int l, int r, int p, int c){
	if(l == r){
		fi(i, 0, K) t[i][d] = (i % c == 0) + 1;
		return;
	}
	
	if(p > M) update(R, M + 1, r, p, c);
	else update(L, l, M, p, c);
	fi(i, 0, K) t[i][d] = t[i][L] + t[(i + t[i][L]) % K][R];
}

void query(int d, int l, int r, int x, int y){
	if(x <= l && y >= r){
		ans += t[ans % K][d];
		return;
	}
	
	if(y >= l && x <= M) query(L, l, M, x, y);
	if(y > M && x <= r) query(R, M + 1, r, x, y);
}

int main(){
	scanf("%d", &n);
	FI(i, 1, n) scanf("%d", &a[i]);
	init(1, 1, n);
	
	scanf("%d", &q);
	while(q--){
		scanf("\n%c %d %d", &opt, &x, &y);
		if(opt == 'C') update(1, 1, n, x, y);
		else{
			ans = 0;
			query(1, 1, n, x, y - 1);
			printf("%d\n", ans);
		}
	}
}
