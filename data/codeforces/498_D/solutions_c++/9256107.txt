#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 100010
#define mo 60
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int a[60];
} tr[N*4],O,tmp;
int i,j,k,n,m,flag;
int a[N];
inline void update(ww &a,ww b,ww c) {
	int i;
	For(i,0,mo-1) a.a[i]=b.a[i]+c.a[(i+b.a[i])%mo];
}
void build(int q,int x,int y) {
	if (x==y) {
		int i;
		For(i,0,mo-1) tr[q].a[i]=i%a[x]==0?2:1;
		return;
	}
	int mid=(x+y)/2;
	build(q*2,x,mid);
	build(q*2+1,mid+1,y);
	update(tr[q],tr[q*2],tr[q*2+1]);
}
void gai(int q,int x,int y,int k,int t) {
	if (x==y) {
		int i;
		For(i,0,mo-1) tr[q].a[i]=i%t==0?2:1;
		return;
	}
	int mid=(x+y)/2;
	if (k<=mid) gai(q*2,x,mid,k,t);
	else gai(q*2+1,mid+1,y,k,t);
	update(tr[q],tr[q*2],tr[q*2+1]);
}
void cal(int q,int x,int y,int l,int r) {
	if (l<=x&&y<=r) {
		if (!flag) flag=1,O=tr[q];
		else tmp=O,update(O,tmp,tr[q]);
		return;
	}
	int mid=(x+y)/2;
	if (l<=mid) cal(q*2,x,mid,l,r);
	if (mid<r) cal(q*2+1,mid+1,y,l,r);
}
int main() {
	scanf("%d",&n);
	For(i,1,n) scanf("%d",&a[i]);
	build(1,1,n);
	scanf("%d",&m);
	For(i,1,m) {
		char p[10];
		int x,y;
		scanf("%s%d%d",p,&x,&y);
		if (p[0]=='C') gai(1,1,n,x,y);
		else {
			flag=0;
			cal(1,1,n,x,y-1);
			printf("%d\n",O.a[0]);
		}
	}
	return 0;
}
