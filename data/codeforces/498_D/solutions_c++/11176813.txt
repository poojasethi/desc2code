#include<cstdio>

using namespace std;

int n,m;
int t[100010];
struct Seg
{
	int l,r;
	int v[60];
	inline friend Seg operator+(const Seg&a,const Seg&b)
	{
		Seg c;
		c.l=a.l;c.r=b.r;
		for(int i=0;i<60;i++)
			c.v[i]=a.v[i]+b.v[(i+a.v[i])%60];
		return c;
	}
}seg[400010];
inline void build(int p,int l,int r)
{
	if(l==r)
	{
		seg[p].l=l;seg[p].r=r;
		for(int i=0;i<60;i++)
			seg[p].v[i]=1+(i%t[l]==0?1:0);
		return;
	}
	int mid=(l+r)>>1;
	build(p<<1,l,mid);
	build(p<<1|1,mid+1,r);
	seg[p]=seg[p<<1]+seg[p<<1|1];
}
inline void modify(int p,int pos)
{
	if(seg[p].l==seg[p].r)
	{
		for(int i=0;i<60;i++)
			seg[p].v[i]=1+(i%t[pos]==0?1:0);
		return;
	}
	int mid=(seg[p].l+seg[p].r)>>1;
	if(pos<=mid)
		modify(p<<1,pos);
	else
		modify(p<<1|1,pos);
	seg[p]=seg[p<<1]+seg[p<<1|1];
}
inline Seg query(int p,int l,int r)
{
	if(l<=seg[p].l&&seg[p].r<=r)return seg[p];
	int mid=(seg[p].l+seg[p].r)>>1;
	if(r<=mid)
		return query(p<<1,l,r);
	else
		if(l>mid)
			return query(p<<1|1,l,r);
		else
			return query(p<<1,l,mid)+query(p<<1|1,mid+1,r);
}

int main()
{
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%d",t+i);
	build(1,1,n);
	for(scanf("%d",&m);m;m--)
	{
		char str[5];
		scanf("%s",str);
		int x,y;
		scanf("%d%d",&x,&y);
		if(str[0]=='C')
		{
			t[x]=y;
			modify(1,x);
		}
		else
			printf("%d\n",query(1,x,y-1).v[0]);
	}
	return 0;
}
	 	   		   							 	 	  	    		