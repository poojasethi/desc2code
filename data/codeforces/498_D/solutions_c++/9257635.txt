#include<cstdio>
#include<cstring>
using namespace std;
#define pl (u<<1)
#define pr ((u<<1)+1)
const int maxN = 1e5+7, M = 60;
struct Node {
  int d[M];
} tree[maxN<<2];
int n, q, x, y, t;
char str[M];
void maintain(int u) {
  for (int i = 0; i < M; i++)
    tree[u].d[i] = tree[pl].d[i]+tree[pr].d[(tree[pl].d[i]+i)%M];
}
void insert(int u, int l, int r) {
  if (l < r) {
    int m = (l+r)>>1;
    if (l<=x && x<=m) insert(pl, l, m);
    if (m+1<=x && x<=r) insert(pr, m+1, r);
    maintain(u);
  } else {
    for (int i = 0; i < M; i++) tree[u].d[i] = 1;
    for (int i = 0; i < M; i += y) tree[u].d[i] = 2;
  }
}
void val(int u, int l, int r) {
  if (x<=l && r<=y) {
    t += tree[u].d[t%M];
  } else {
    int m = (l+r)>>1;
    if (l<=y && x<=m) val(pl, l, m);
    if (m+1<=y && x<=r) val(pr, m+1, r);
  }
}
int main()
{
  scanf("%d", &n);
  for (int i = 1; i <= n; i++) {
    scanf("%d", &y);
    x = i, insert(1, 1, n);
  }
  scanf("%d", &q);
  for (int i = 0; i < q; i++) {
    scanf("%s", str);
    if (str[0] == 'A') {
      scanf("%d%d", &x, &y);
      y--, t = 1, val(1, 1, n);
      printf("%d\n", t);
    } else {
      scanf("%d%d", &x, &y);
      insert(1, 1, n);
    }
  }
}
