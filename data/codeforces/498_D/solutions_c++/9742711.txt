#include <cstdio>
char qt[5];
int a[100010];
const int N = 1 << 18;
int b[N+N][60];
inline void go(int x, int &t) {
	if (t % a[x] == 0) t++;
	t++;
}
void upd(int i, int y) {
	a[i] = y;
	for (int j = 0; j < 60; j++) {
		b[i+N][j] = j % a[i] ? 1 : 2;
	}
	i += N;
	while (i > 1) {
		i >>= 1;
		for (int j = 0; j < 60; j++) {
			int t = b[i+i][j] + j;
			b[i][j] = t + b[i+i+1][t%60] - j;
		}
	}	
}
int query(int l, int r, int L = 0, int R = N, int p = 1, int t = 0) {
	if (r <= L || R <= l) return t;
	if (l <= L && R <= r) {
		return t + b[p][t%60];
	}
	int mid = (L + R) / 2;
	t = query(l, r, L, mid, p + p, t);
	t = query(l, r, mid, R, p + p + 1, t);
	return t;
}
int main() {
	int n, q, x, y;
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%d", &a[i]);
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < 60; j++) {
			b[i+N][j] = j % a[i] ? 1 : 2;
		}
	}
	for (int i = N - 1; i > 0; i--) {
		for (int j = 0; j < 60; j++) {
			int t = b[i+i][j] + j;
			b[i][j] = t + b[i+i+1][t%60] - j;
		}
	}
	scanf("%d", &q);
	while (q--) {
		scanf("%s%d%d", qt, &x, &y);
		--x;
		if (qt[0] == 'C') {
			upd(x, y);
		} else {
			--y;
			printf("%d\n", query(x, y));
		}
	}
	return 0;
}
