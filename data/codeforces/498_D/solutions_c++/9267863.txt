#include<cstdio>
#include<algorithm>
#include<cstring>
#define ls l,mid,x<<1
#define rs mid+1,r,x<<1|1
using namespace std;
const int Maxn=100010;
int tree[Maxn<<2][62];
int n;
void build(int l,int r,int x)
{
   if(l==r)
   {
      int t;scanf("%d",&t);
      for(int i=0;i<60;i++)
         tree[x][i]=((i%t==0)?2:1);
      return;
   }
   int mid=(l+r)>>1;
   build(ls);
   build(rs);
   for(int i=0;i<60;i++)
      tree[x][i]=tree[x<<1|1][(i+tree[x<<1][i])%60]+tree[x<<1][i];
}
int query(int L,int R,int st,int l,int r,int x)
{
   if(L<=l&&R>=r)return tree[x][st];
   int mid=(l+r)>>1;
   int ret=0;
   if(L<=mid)ret+=query(L,R,(st+ret)%60,ls);
   if(R>mid)ret+=query(L,R,(st+ret)%60,rs);
   return ret;
}
void add(int tar,int w,int l,int r,int x)
{
   if(l==r)
   {
      for(int i=0;i<60;i++)
         tree[x][i]=((i%w==0)?2:1);
      return;
   }
   int mid=(l+r)>>1;
   if(tar<=mid)add(tar,w,ls);
   else add(tar,w,rs);
   for(int i=0;i<60;i++)
      tree[x][i]=tree[x<<1|1][(i+tree[x<<1][i])%60]+tree[x<<1][i];
}
int main()
{
   scanf("%d",&n);
   build(1,n,1);
   int q;scanf("%d",&q);
   while(q--)
   {
       char c;int x,y;
       scanf(" %c%d%d",&c,&x,&y);
       if(c=='A')
          printf("%d\n",query(x,y-1,0,1,n,1));
       else
          add(x,y,1,n,1);
   }
}
