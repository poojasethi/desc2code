#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef double ld;

string a;
vector<string> L;
map<string,int> num,in;
map<string, set<string> > biger;

int head,end;
string q[100000];

int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
    int i;
    cin>>a;
    int pos=a.find(":-");
    for(i=0;i<pos;++i)
    {
        if(a[i]!='_')
            continue;
        string c;
        for(;a[i]=='_';++i)
            c+=a[i];
        --i;
        num[c]=0;
        L.pb(c);
    }
    for(size_t i=pos;i<a.size();++i)
    {
        if(a[i]!='_')
            continue;
        string c,d;
        for(;a[i]=='_';++i)
            c+=a[i];
        int flag=(a[i]=='<');
        ++i;
        for(;a[i]=='_';++i)
            d+=a[i];
        num[d]=num[c]=0;
        if(flag)
        {
            if(biger[d].find(c)==biger[d].end())
                ++in[c];
            biger[d].insert(c);
        }
        else
        {
            if(biger[c].find(d)==biger[c].end())
                ++in[d];
            biger[c].insert(d);
        }
        --i;
    }
    head=end=0;
    for(map<string,int>::iterator it=num.begin();it!=num.end();++it)
        if(in[it->x]==0)
            q[end++]=it->x;
    while(head<end)
    {
        string u=q[head++];
        for(set<string>::iterator it=biger[u].begin();it!=biger[u].end();++it)
        {
            --in[*it];
            if(in[*it]==0)
                q[end++]=*it;
        }
    }
    if(end!=(int)num.size())
    {
        printf("false\n");
        return 0;
    }
    for(i=end-1;i>=0;--i)
    {
        string u=q[i];
        num[u]=0;
        for(set<string>::iterator it=biger[u].begin();it!=biger[u].end();++it)
            num[u]=max(num[u],num[*it]+1);
        if(num[u]>9)
        {
            printf("false\n");
            return 0;
        }
    }
    REP2(i,0,(int)L.size())
        cout<<num[L[i]];
    cout<<endl;
    return 0;
}
