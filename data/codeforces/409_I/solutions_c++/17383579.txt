#include<stdio.h>
#include<stdbool.h>

int num_var;
int vars[1000];
int values[1024];

int num_order;
int order[1000];

int max_var;

int num_cond;
int cond1[1000];
int cond2[1000];

void parse1(char *data){
	char *ptr = data;

	num_var = 0;
	max_var = 0;
	num_order = 0;

	int i;
	for(i = 0; i < 1024; i++){
		values[i] = -1;
	}

	int state = 0;
	int var = 0;
	while(*ptr != ')'){
		switch(state){
		case 0:
			if (*ptr == '_'){
				state = 1;
				var = 1;
			} else {
				//Invalid
				state = 0;
				var = 0;
			}
			break;
		case 1:
			if (*ptr == '_'){
				var++;
			} else {
				vars[num_var++] = var;
				if(var > max_var) max_var = var;
				if(values[var] == -1) order[num_order++] = var;
				values[var] = 0;
				state = 0;
			}
			break;
		}
		ptr++;
	}
	if(var > 0){
		vars[num_var++] = var;
		if(values[var] == -1) order[num_order++] = var;
		values[var] = 0;
	}
}

void parse2(char *data){
	char *ptr = data;
	int state = 0;
	int var1 = 0;
	int var2 = 0;
	int op = 0; // 0: >, 1: <

	num_cond = 0;

	while(*ptr != '.'){
		switch(state){
		case 0:
			if (*ptr == '_'){
				state = 1;
				var1 = 1;
			} else {
				//Invalid
				state = 0;
			}
			break;
		case 1:
			if (*ptr == '_'){
				var1++;
			} else if(*ptr == '>') {
				op = 0;
				state = 2;
				var2 = 0;
			} else if(*ptr == '<') {
				op = 1;
				state = 2;
				var2 = 0;
			} else {
				//Invalid
				state = 0;
			}
			break;
		case 2:
			if (*ptr == '_'){
				var2++;
			} else if(*ptr == ',') {
				if(op == 0){
					cond1[num_cond] = var1;
					cond2[num_cond] = var2;
				} else {
					cond1[num_cond] = var2;
					cond2[num_cond] = var1;
				}
				num_cond++;
				state = 0;
			} else {
				//Invalid
				state = 0;
			}
			break;
		}
		ptr++;
	}
	if(state == 2){
		if(op == 0){
			cond1[num_cond] = var1;
			cond2[num_cond] = var2;
		} else {
			cond1[num_cond] = var2;
			cond2[num_cond] = var1;
		}
		num_cond++;
	}
}

void parse(char *data){
	char *ptr = data;
	ptr += 2;//skip ?(
	parse1(ptr);
	ptr += 3;//skip ):-
	parse2(ptr);
}

void init_values(){
	int i;
	for(i = 0; i <= max_var; i++){
		values[i] = 0;
	}
}

bool solve(){
	int i;
	int change = 1;

	while(change == 1){
		change = 0;
		for(i = 0; i < num_cond; i++){
			if(cond1[i] == cond2[i]){
				return false;
			}

			if(values[cond1[i]] <= values[cond2[i]]){
				change = 1;
				values[cond1[i]] = values[cond2[i]] + 1;
				if(values[cond1[i]] > 9)
					return false;
			}
		}
	}

	return true;
}

int main(){
	char buf[1100];
	int i;

	scanf("%s", buf);
	parse(buf);

	init_values();

	if(!solve()){
		printf("false\n");
		return 0;
	}

	for(i = 0; i < num_var; i++){
		printf("%d", values[vars[i]]);
	}
	printf("\n");
}

	 	 	 					 	 	   	 	     			