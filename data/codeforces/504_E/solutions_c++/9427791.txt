#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <vector>
#include <ctime>
#define fi first
#define se second
#define PA pair<int,int>
#define VI vector<int>
#define VP vector<PA >
#define mk(x,y) make_pair(x,y)
#define N 300010
#define int65 long long
#define P 31
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
const int65 mo=1000000007;
int i,j,k,n,m,flag;
int fa[N][20],dep[N];
char p[N];
VI a[N];
int65 ha[N],ph[N],HA[N];
inline void read(int &x) {
	char p=getchar();
	for (;p<'0'||p>'9';p=getchar());
	for (x=0;p>='0'&&p<='9';x=x*10+p-48,p=getchar());
}
void dfs(int x) {
	int i,j;
	{
		ha[x]=(ha[fa[x][0]]*P+p[x]-'a'+1)%mo;
		HA[x]=(HA[fa[x][0]]+ph[dep[x]]*(p[x]-'a'+1))%mo;
	}
	for (i=0;i<a[x].size();i++) {
		int A=a[x][i];
		if (A==fa[x][0]) continue;
		fa[A][0]=x; dep[A]=dep[x]+1;
		For(j,1,19) fa[A][j]=fa[fa[A][j-1]][j-1];
		dfs(A);
	}
}
inline int lca(int x,int y) {
	int i;
	if (dep[x]>dep[y]) swap(x,y);
	for (i=19;i>=0;i--)
	if (dep[x]+(1<<i)<=dep[y]) y=fa[y][i];
	if (x==y) return x;
	for (i=19;i>=0;i--)
	if (fa[x][i]!=fa[y][i]) x=fa[x][i],y=fa[y][i];
	return fa[x][0];
}
inline int get(int x,int y) {
	int i;
	for (i=19;i>=0;i--) {
		int A=1<<i;
		if (A<=y) y-=A,x=fa[x][i];
	}
	return x;
}
inline int65 cal(int x,int y) {
	int65 an=(HA[x]-HA[y])%mo*ph[n-dep[y]]%mo;
	return (an+mo)%mo;
}
inline int65 Cal(int x,int y) {
	int65 an=(ha[x]-ha[y]*ph[dep[x]-dep[y]]%mo)%mo*ph[n+1]%mo;
	return (an+mo)%mo;
}
inline int suan(int x,int y,int lc) {
	int s1=dep[x]-dep[lc]+1,s2=dep[y]-dep[lc]+1;
	return s1+s2-1;
}
inline int gao1(int &x,int &y,int k) {
	int i,s=0;
	for (i=19;i>=0;i--) if ((1<<i)<=k) {
		if (cal(x,fa[x][i])==cal(y,fa[y][i]))
			x=fa[x][i],y=fa[y][i],s+=1<<i,k-=1<<i;
	}
	return s;
}
inline int gao2(int &x,int ci,int &y,int k) {
	int i,s=0,ro=get(x,ci);
	for (i=19;i>=0;i--) {
		int A=1<<i;
		if (s+A<=k) {
			int xx=get(x,ci-A-s);
			if (Cal(xx,ro)==cal(y,fa[y][i]))
				y=fa[y][i],s+=A,ro=xx;
		}
	}
	return s;
}
inline int65 gao3(int &x,int ci,int &y,int Ci,int k) {
	int i,s=0,ro=get(x,ci),roo=get(y,Ci);
	for (i=19;i>=0;i--) {
		int A=1<<i;
		if (A+s<=k) {
			int xx=get(x,ci-A-s),yy=get(y,Ci-A-s);
			if (Cal(xx,ro)==Cal(yy,roo))
				s+=A,ro=xx,roo=yy;
		}
	}
	return s;
}
inline int work(int x,int y,int xx,int yy) {
	int a1=lca(x,y),a2=lca(xx,yy);
	int s1=dep[x]-dep[a1]+1,s2=dep[xx]-dep[a2]+1;
	int ss1=suan(x,y,a1),ss2=suan(xx,yy,a2);
	int len=min(ss1,ss2);
	if (s1>s2) {
		swap(x,xx);
		swap(y,yy);
		swap(a1,a2);
		swap(s1,s2);
		swap(ss1,ss2);
	}
	s2=min(s2,len);
	if (flag) printf("1 ");
	int A=gao1(x,xx,s1);
	if (A<s1) return A;
	if (flag) printf("2 ");
	int B=gao2(y,ss1-s1,xx,s2-s1);
	if (B<s2-s1) return A+B;
	if (flag) printf("3 ");
	int C=gao3(y,ss1-s2,yy,ss2-s2,len-s2);
	return A+B+C;
}
int main() {
	//freopen("504.in","r",stdin);
	scanf("%d",&n);
	//flag=n==300000;
	scanf("%s",p+1);
	ph[0]=1; For(i,1,n+1) ph[i]=ph[i-1]*P%mo;
	For(i,1,n-1) {
		int x,y;
		read(x),read(y);
		a[x].push_back(y);
		a[y].push_back(x);
	}
	dep[1]=1;
	dfs(1);
	scanf("%d",&m);
	For(i,1,m) {
		int x,y,A,B;
		read(x),read(y),read(A),read(B);
		if (flag) printf("%I64u %I64u ",Cal(x,fa[x][0]),Cal(y,fa[y][0]));
		printf("%d\n",work(x,y,A,B));
	}
	return 0;
}
