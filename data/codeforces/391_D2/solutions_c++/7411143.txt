#include<cstring>
#include<cstdio>
#include<algorithm>
#define N 50005
#define rep(i,a,b) for (int i=a;i<=b;++i)
using namespace std;
int X[N][3],Y[N][3],R,tmp[N],n,m,to[N];
template<class T> inline void read(T&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};
template<class T> inline void read(T&x,T&y){read(x);read(y);}
template<class T> inline void read(T&x,T&y,T&z){read(x);read(y);read(z);}
bool cmp(int i,int j) {return Y[i][0]<Y[j][0];}
void Min(int &x,int y){if(x>y)x=y;}
void Max(int &x,int y){if(x<y)x=y;}
int main() {
	read(n,m);rep(i,1,n)read(Y[i][0],Y[i][1],Y[i][2]),Y[i][2]+=Y[i][1],to[i]=i;
	rep(i,1,m)read(X[i][0],X[i][2],X[i][1]),X[i][1]+=X[i][0];
	sort(to+1,to+n+1,cmp);rep(i,1,n)tmp[i]=Y[to[i]][0];
	rep(i,1,m) {
		int l=lower_bound(tmp+1,tmp+n+1,X[i][0]+R)-tmp,r=upper_bound(tmp+1,tmp+n+1,X[i][1]-R)-tmp-1;
		rep(t,l,r) {
			int j=to[t];int cc=Y[j][2]-X[i][2];
			Min(cc,X[i][2]-Y[j][1]);
			Min(cc,Y[j][0]-X[i][0]);
			Min(cc,X[i][1]-Y[j][0]);
			Max(R,cc);
		}
	}
	printf("%d\n",R);
	return 0;
}