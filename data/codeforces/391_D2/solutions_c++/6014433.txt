#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <set>
#define N 100010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int x,y,z;
} a[N],b[N],c[N],d[N];
int i,j,k,n,m,an,l,r,mid,n1,n2;
set<int> S;
typedef set<int>::iterator w1;
inline bool cc1(const ww &a,const ww &b) {
	return a.x<b.x||a.x==b.x&&a.z>b.z;
}
inline bool judge(int x) {
	int i,j;
	n1=n2=0;
	For(i,1,n) if (a[i].z/2>=mid) {
		c[++n1]=a[i];
		c[n1].y=a[i].y+mid;
		c[n1].z=a[i].y+a[i].z-mid;
	}
	For(i,1,m) if (b[i].z/2>=mid) {
		d[++n2].x=b[i].x+mid;
		d[n2].y=b[i].y; d[n2].z=1;
		d[++n2].x=b[i].x+b[i].z-mid+1;
		d[n2].y=b[i].y; d[n2].z=-1;
	}
	sort(c+1,c+n1+1,cc1);
	sort(d+1,d+n2+1,cc1);
	j=1; S.clear();
	For(i,1,n1) {
		for (;j<=n2&&d[j].x<=c[i].x;j++)
			if (d[j].z>0) S.insert(d[j].y);
			else S.erase(d[j].y);
		w1 A=S.lower_bound(c[i].y);
		if (A==S.end()) continue;
		if ((*A)<=c[i].z) return 1;
	}
	return 0;
}
int main() {
	scanf("%d%d",&n,&m);
	For(i,1,n) scanf("%d%d%d",&a[i].x,&a[i].y,&a[i].z);
	For(i,1,m) scanf("%d%d%d",&b[i].x,&b[i].y,&b[i].z);
	for (l=1,r=100000000;l<=r;) {
		mid=(l+r)/2;
		if (judge(mid)) l=mid+1;
		else r=mid-1;
	}
	printf("%d\n",l-1);
	return 0;
}