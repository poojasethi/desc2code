#include<iostream>
#include<cstdio>
#include<cstring>
#include<map>
#include<vector>
#include<algorithm>

using namespace std;

int getnum()
{
    char c = getchar();
    int num,sign=1;
    for(;c<'0'||c>'9';c=getchar())if(c=='-')sign=-1;
    for(num=0;c>='0'&&c<='9';)
    {
        c-='0';
        num = num*10+c;
        c=getchar();
    }
    return num*sign;
}

int H[50005][3],V[50005][3];
int ind[50005],sorted[50005];

int iSj(int i,int j)
{
    return V[i][0]<V[j][0];
}

int main() 
{
    int n = getnum();
    int m = getnum(),c=0;

    for(int i=1;i<=n;i++)
    {
        V[i][0]=getnum();
        V[i][1]=getnum();
        V[i][2]=getnum();V[i][2]+=V[i][1];
    }

    for(int i=1;i<=m;i++)
    {
        H[i][0]=getnum();
        H[i][2]=getnum();
        H[i][1]=getnum();H[i][1]+=H[i][0];
    }

    for(int i=1;i<=n;i++)ind[i]=i;

    sort(ind+1,ind+n+1,iSj);

    for(int i=1;i<=n;i++)sorted[i]=V[ind[i]][0];

    int l,r;

    for(int i=1;i<=m;i++)
    {
        int y,t;

        l = lower_bound(sorted+1,sorted+n+1,H[i][0]+c)-sorted;

        r = upper_bound(sorted+1,sorted+n+1,H[i][1]-c)-sorted;

        for(int j=l;j<r;j++)
        {
            int J = ind[j];

            y = min(V[J][2]-H[i][2],H[i][2]-V[J][1]);
            y = min(y,V[J][0]-H[i][0]);
            y = min(y,H[i][1]-V[J][0]);

            c = max(c,y);
        }
    }
    printf("%d",c);
}
