#include <stdio.h>
#include <string>
#include <string.h>
#include <cmath>
#include <set>
#include <queue>
#include <stack>
#include <vector>
#include <algorithm>
#define MAXN 50005
using namespace std;

struct seg {
	int x, y, l;
};

struct event {
	int t, x, y;
};

int n, m;
seg h[MAXN], v[MAXN];

bool cmp(event a, event b) {
	if(a.x == b.x) return a.t < b.t;
	else return a.x < b.x;
}

bool valid(int k) {
	vector<event> e;

	for(int i = 0; i < m; i++)
		if(h[i].l >= 2 * k) {
			e.push_back((event) {0, h[i].x + k, h[i].y});
			e.push_back((event) {2, h[i].x + h[i].l - k, h[i].y});
		}

	for(int i = 0; i < n; i++)
		if(v[i].l >= 2 * k) e.push_back((event) {1, v[i].x, i});

	sort(e.begin(), e.end(), cmp);
	multiset<int> s;

	for(int i = 0; i < e.size(); i++) {
		if(e[i].t == 0) {
			s.insert(e[i].y);
		} else if(e[i].t == 1) {
			int up = v[e[i].y].y + k;
			int lo = v[e[i].y].y + v[e[i].y].l - k;

			if(s.lower_bound(up) != s.upper_bound(lo)) return true;
		} else {
			s.erase(s.find(e[i].y));
		}
	}

	return false;
}

int main() {
	scanf("%d %d", &n, &m);

	for(int i = 0; i < n; i++)
		scanf("%d %d %d", &v[i].x, &v[i].y, &v[i].l);

	for(int i = 0; i < m; i++)
		scanf("%d %d %d", &h[i].x, &h[i].y, &h[i].l);

	int ans = 0;
	for(int l = 0, r = 100000000; l <= r;) {
		int mid = (l + r) >> 1;

		if(valid(mid)) {
			l = mid + 1;
			ans = mid;
		} else r = mid - 1;
	}

	printf("%d\n", ans);

	return 0;
} 