#include<cstdio>
#include<cstring>
#include<cmath>
#include<cstdlib>
#include<algorithm>
#include<string>
#include<map>
#include<iostream>
#include<queue>
#include<vector>
#include<string>
#include<set>
#define pb push_back
#define mp make_pair
#define X first
#define Y second
#define sqr(x) ((x)*(x))
#define lowbit(x) ((x)&-(x))
#define fill(A,B) memset(A,B,sizeof(A))
#define Copy(A,B) memcpy(A,B,sizeof(A))
#define rep(i,A,B) for(int i=A;i<=B;i++)
#define dep(i,B,A) for(int i=B;i>=A;i--)
#define RE(B,A) for(A::iterator it=B.begin();it!=B.end();++it)
#define re(i,A) for(int i=0;i<(int)A;i++)
#define re1(i,A) for(int i=1;i<(int)A;i++)
#define de(i,A) for(int i=A-1;i+1;i--)
#define INF (1<<29)
#define mn 300111
#define Mod 31011
#define eps 1e-10
#define si(x) ((int)x.size())
#define MAX(A,B) A=max(A,B)
#define MIN(A,B) A=min(A,B)
#define ls (cur<<1)
#define rs (cur<<1|1)
#define lim 26
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef map<int,int> ty;
ty H;
struct line{int l,r,v;}xl[mn],yl[mn];
int n,m,id[mn],Y1[mn],Y2[mn];
inline void R(int &xx)
{
    xx=0;char ch=getchar();bool F=0;
    while((ch<'0'||ch>'9')&&ch!='-')ch=getchar();
    if(ch=='-')F=1,ch=getchar();
    while(ch>='0'&&ch<='9')xx=xx+xx+(xx<<3)+ch-48,ch=getchar();
    if(F)xx=-xx;
}
inline bool cmp1(int x,int y){return xl[x].v<xl[y].v;}
inline bool cmp2(int x,int y){return yl[x].l<yl[y].l;}
inline bool cmp3(int x,int y){return yl[x].r<yl[y].r;}
inline bool check(int x){
    H.clear();int j=0,k=0;
    re(i,m){
        for(;j<n&&yl[Y1[j]].l+x<=xl[id[i]].v;j++)
            if(yl[Y1[j]].l+x<=yl[Y1[j]].r-x)H[yl[Y1[j]].v]++;
        for(;k<n&&yl[Y2[k]].r-x<xl[id[i]].v;k++)
            if(yl[Y2[k]].l+x<=yl[Y2[k]].r-x){
                H[yl[Y2[k]].v]--;
                if(!H[yl[Y2[k]].v])H.erase(yl[Y2[k]].v);
            }
        if(xl[id[i]].l+x*2>xl[id[i]].r)continue;
        ty::iterator it=H.lower_bound(xl[id[i]].l+x);
        if(it!=H.end()&&it->X<=xl[id[i]].r-x)return 1;
    }return 0;
}
int main(){
   R(n);R(m);
    re(i,n){
        R(yl[i].v),R(yl[i].l),R(yl[i].r);
        yl[i].r+=yl[i].l;
    }
    re(i,m){
        R(xl[i].l),R(xl[i].v),R(xl[i].r);
        xl[i].r+=xl[i].l; 
    }
    re(i,m)id[i]=i;sort(id,id+m,cmp1);
    re(i,n)Y1[i]=Y2[i]=i;
    sort(Y1,Y1+n,cmp2),sort(Y2,Y2+n,cmp3);
    int l=0,r=200000000;
    while(l<r-1){
        int mid=l+r>>1;
        if(check(mid))l=mid;else r=mid;
    }printf("%d\n",l);
    return 0;
}