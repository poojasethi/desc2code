import sys

def makeLibrary(string) :
    library = dict()
    
    for i in string :
        if i in library :
            library[i]+=1
        else :
            library[i]=1
    return library

def howMany(libraryX, libraryA) :
    howmany = 9999999

    for key in libraryX :
        if key in libraryA :
            howmany = min(libraryA[key] / libraryX[key], howmany)
        else :
            howmany = 0
            break
    return howmany
    
def substractLibrary(libraryX, howmanyX, libraryA) :
    for key in libraryX :
        libraryA[key] -= libraryX[key]*howmanyX
    return libraryA

a = sys.stdin.readline().strip()
b = sys.stdin.readline().strip()
c = sys.stdin.readline().strip()

libraryA = makeLibrary(a)
libraryB = makeLibrary(b)
libraryC = makeLibrary(c)

howmanyB = howMany(libraryB, libraryA)
finalword = ""

if howmanyB != 0 :

    bestCombo = 0
    amountOfBs = 0
    
    for i in range(0,howmanyB+1) :
        libraryAcopy = dict(libraryA)
        libraryAcopy = substractLibrary(libraryB, i, libraryAcopy)
        howmanyC = howMany(libraryC, libraryAcopy)
        if i+howmanyC > bestCombo :
            bestCombo = i+howmanyC
            amountOfBs = i

    libraryA = substractLibrary(libraryB, amountOfBs, libraryA)
    finalword += b*amountOfBs

    
amountOfCs = howMany(libraryC, libraryA)

if amountOfCs != 0 :
    libraryA = substractLibrary(libraryC, amountOfCs, libraryA)
    finalword += c*amountOfCs  
    
for key in libraryA :
    finalword += key*libraryA[key]
    
print(finalword)

    
    
