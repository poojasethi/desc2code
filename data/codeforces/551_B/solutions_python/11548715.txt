def main():
    S = {}
    N = 0
    for c in raw_input().strip():
        if c not in S:
            S[c] = 1
        else:
            S[c] = S[c] + 1
        N += 1

    braw = raw_input().strip()
    B = {}
    NB = 0
    for c in braw:
        if c not in B:
            B[c] = 1
        else:
            B[c] = B[c] + 1
        NB += 1

    craw = raw_input().strip()
    C = {}
    NC = 0
    for c in craw:
        if c not in C:
            C[c] = 1
        else:
            C[c] = C[c] + 1
        NC += 1


    i = 0
    ans, ansB, ansC = 0, 0, 0
    while NB * i <= N:
        chk = False
        for c, v in B.items():
            if S.get(c, 0) < i * v:
                chk = True
                break
        if chk:
            break

        SS = {}
        for c, v in S.items():
            SS[c] = v

        if i:
            for c, v in B.items():
                SS[c] -= i * v

        mn = 999999
        for c, v in C.items():
            mn = min(mn, SS.get(c, 0) / v)
            #print '-', c, v, mn

        if i + mn > ans:
            ans = i + mn
            ansB = i
            ansC = mn

        #print i, mn, SS

        i += 1

    ansS = braw * ansB + craw * ansC
    if ansB:
        for c, v in B.items():
            S[c] -= v * ansB
    if ansC:
        for c, v in C.items():
            S[c] -= v * ansC
    for c, v in sorted(S.items()):
        ansS += c * v
    return ansS


print main()
