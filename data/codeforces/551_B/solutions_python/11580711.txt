rd = lambda: map(int, raw_input().split())
import sys, string

INF = 10 ** 8

a, b, c = [raw_input() for _ in xrange(3)]
ca, cb, cc = [[_.count(x) for x in string.lowercase] for _ in [a, b, c]]
ans = (0, 0)

for i in xrange(100000):
	if min(x - y * i for (x, y) in zip(ca, cb)) < 0: break
	j = min(INF if z == 0 else (x - y * i) / z for (x, y, z) in zip(ca, cb, cc))
	ans = max(ans, (i, j), key = lambda x: x[0] + x[1])

print b * ans[0] + c * ans[1] + ''.join(ch * num for ch, num in zip(string.lowercase, [x - y * ans[0] - z * ans[1] for (x, y, z) in zip(ca, cb, cc)]))
