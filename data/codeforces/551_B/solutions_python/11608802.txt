from collections import defaultdict as dct


def solve():
    a = raw_input().strip()
    b = raw_input().strip()
    c = raw_input().strip()

    Ma = dct(int)
    for i in a:
        Ma[i] += 1
    Mb = dct(int)
    for i in b:
        Mb[i] += 1
    Mc = dct(int)
    for i in c:
        Mc[i] += 1

    nb = 0
    ma = 0
    ans = ''
    while True:
        flag = True
        for k, w in Mb.iteritems():
            if not w:
                continue
            if k not in Ma or w * nb > Ma[k]:
                flag = False
                break
        if nb and not flag:
            break

        nc = 10 ** 9
        for k, w in Mc.iteritems():
            if w:
                used = max(0, Ma[k] - Mb[k] * nb) / w
                nc = min(nc, used)
        n = nb + nc
        if n > ma:
            ma = n
            ans = b * nb + c * nc
            for k, w in Ma.iteritems():
                ans += k * max(0, w - nb * Mb[k] - nc * Mc[k])

        nb += 1

    ans = ans or a
    print ans


solve()
