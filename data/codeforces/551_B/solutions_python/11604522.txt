import sys
import string
import collections

#sys.stdin = file("data.in","r")

def minus(A, B, n):
	dict = { i:(A[i]-n*B[i]) for i in (A+B) }
	if min(dict.values()) < 0: return False
	else: return dict

def calc(A, C):
	lis = []
	for i in C:
		if i in A:
			lis.append(A[i]/C[i])
		else:
			lis.append(0/C[i])
	return min(lis)

a = raw_input()
b = raw_input()
c = raw_input()

va = collections.Counter(a);
vb = collections.Counter(b);
vc = collections.Counter(c);

ans = (0,0)
for i in xrange(len(a)/min(len(b),len(c))+1):
	new_A = minus(va, vb, i)
	
	if new_A:
		j = calc(new_A, vc)
		if (i+j) > (ans[0]+ans[1]):
			ans = (i, j)

#print sum([i for i in ans])

str = b * ans[0] + c * ans[1]
use = collections.Counter(str)
for i in va:
	str += i * (va[i]-use[i])
print str
