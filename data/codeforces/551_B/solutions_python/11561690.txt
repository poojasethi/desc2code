from collections import Counter 
a = raw_input()
b = raw_input()
c = raw_input()
A = Counter(a)
B = Counter(b)
C = Counter(c)


def minus(A,B,n):
    dict = {x:(A[x]-n*B[x]) for x in (B+A)}
    if min(dict.values()) < 0: return False
    else: return dict

def modu(A,C):
    lis = []
    for x in C:
        if x in A:
            lis.append(A[x]/C[x])
        else:
            lis.append(0/C[x])
    return min(lis)
ma = 0
po = [0,0]
for i in range(len(a)/min(len(c),len(b))):
    new_A = minus(A,B,i)
    
    if new_A:
        m = modu(new_A,C)
        #print new_A,c,m,i
        if (m+i)>ma:
            ma = (m+i)
            po = [i,m]

pr = po[0]*b+po[1]*c
PR = Counter(pr)
for x in A:
    pr = pr+x*(A[x]-PR[x])
print pr

    
