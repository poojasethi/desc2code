#include <cmath>
#include <map>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <set>
#include <bitset>
#include <memory.h>
#include <functional>
#include <queue>
#include <fstream>
#include <ctime>
#include <deque>
#include <utility>
#include <stack>
#include <sstream>
#include <list>
#include <cctype> 
#include <numeric> 
#include <iomanip>
#include <assert.h>
using namespace std;
#define sqr(_) ((_)*(_))

typedef pair<int, int> Pii;
#define x first
#define y second
#define mp make_pair
#define pb push_back

typedef long long LL;

const int MAXN = 100000 + 10, MOD = (int)1e9 + 7;

int n, k, a[MAXN], b[MAXN], c[MAXN], Tohka, Mashiro = 1, v[MAXN];
vector<int> f[MAXN], Invf[MAXN];
bool vis[MAXN], del[MAXN];

int Pow(int a, int b)
{
    int d = 1;
    for (; b; d = (b & 1) ? (LL)d * a % MOD : d, a = (LL)a * a % MOD, b /= 2);
    return d;
}
int top, l[MAXN], s[MAXN];
void Calc(int num)
{
    int tmp = Mashiro;
    for (int i = 1; i <= top; ++i)
    {
        ++c[min(l[i], 3)];
        tmp = (LL)tmp * Invf[l[i]][b[l[i]]] % MOD * f[l[i]][b[l[i]] + 1] % MOD;
        ++b[l[i]];
    }
    if (c[3])
        num = (LL)num * tmp % MOD;
    for (int i = 1; i <= top; ++i)
        --c[min(l[i], 3)], --b[l[i]];
    Tohka = (Tohka + num) % MOD;
}
void DFS(int x, int num)
{
    if (x > k)
    {
        Calc(num);
        return ;
    }
    l[++top] = v[x];
    s[top] = 1;
    DFS(x + 1, num);
    --top;
    for (int i = 1; i <= top; ++i)
    {
        l[i] += v[x], ++s[i];
        DFS(x + 1, (LL)num * (s[i] - 1) % MOD);
        l[i] -= v[x], --s[i];
    }
}
int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout);
#endif
    
    scanf("%d%d", &n, &k);
    for (int i = 1; i <= n; ++i)
    {
        f[i].resize(n / i + 2);
        Invf[i].resize(n / i + 2);
        f[i][0] = Invf[i][0] = 1;
        for (int j = 1; j * i <= n; ++j)
        {
            f[i][j] = (LL)f[i][j - 1] * i % MOD;
            if (j >= 2)
                f[i][j] = ((LL)f[i][j] + (LL)f[i][j - 2] * (j - 1) % MOD * i) % MOD;
            Invf[i][j] = Pow(f[i][j], MOD - 2);
        }
    }
    for (int i = 1; i <= n; ++i)
    {
        scanf("%d", &a[i]);
        vis[a[i]] = true;
    }
    for (int i = 1; i <= n; ++i)
        if (!vis[i])
        {
            int cnt = 0;
            for (int x = i; x; x = a[x])
                del[x] = true, ++cnt;
            v[++v[0]] = cnt;
        }
    for (int i = 1; i <= n; ++i)
        if (!del[i])
        {
            int cnt = 1;
            for (int x = i; a[x] != i; x = a[x])
                del[x] = del[a[x]] = true,
                ++cnt;
            ++b[cnt], ++c[min(3, cnt)];
        }
    for (int i = 1; i <= n; ++i)
        Mashiro = ((LL)Mashiro * f[i][b[i]]) % MOD;
    DFS(1, 1);
    cout << Tohka << endl;
    
    fclose(stdin);
    fclose(stdout);
    return 0;
}