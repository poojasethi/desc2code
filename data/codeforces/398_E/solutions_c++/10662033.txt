#include<stdio.h>
#include<vector>
#include<algorithm>
#define pb push_back
#define mp make_pair
#define ft first
#define sd second
using namespace std;
typedef pair<int,int> pii;
const int maxn=100050,maxk=15,mod=1e9+7;
vector<pii> f[maxn];
int n,K,a[maxn],ans=0;
int in[maxn];
bool vis[maxn];
int ch[maxk][maxn],len[maxk],cs=0;
int cnt[maxn];
int l0[maxk],cnt0[maxk];
inline int Pow(int x,int k)
{
	int s=1;
	for(;k;k>>=1,x=1LL*x*x%mod)
		if(k&1)
			s=1LL*s*x%mod;
	return s;
}
void init()
{
	int i,j,t;
	for(i=1;i<maxn;i++)
	{
		f[i].pb(mp(1,1)),f[i].pb(mp(i,Pow(i,mod-2)));
		for(j=2;i*j<maxn;j++)
		{
			t=(1LL*f[i][j-2].ft*(j-1)+f[i][j-1].ft)%mod*i%mod;
			f[i].pb(mp(t,Pow(t,mod-2)));
		}
	}
}
void dfs(int x,int s,int cur,int c)
{
	if(x==K)
	{
		ans=(ans+1LL*c*(cnt[1]+cnt[2]*2==n?1:cur))%mod;
		//for(int i=1;i<=n;i++) printf("%d ",cnt[i]); printf("\n"); 
		//printf("%d\n",cur);
		return ;
	}
	int i,t;
	l0[s]=len[x];
	cnt0[s]=0;
	dfs(x+1,s+1,cur,c);
	for(i=0;i<s;i++)
	{
		t=1LL*cur*f[len[x]][cnt[len[x]]].sd%mod*f[len[x]][cnt[len[x]]-1].ft%mod;
		cnt[len[x]]--;
		t=1LL*t*f[l0[i]][cnt[l0[i]]].sd%mod*f[l0[i]][cnt[l0[i]]-1].ft%mod;
		cnt[l0[i]]--;
		l0[i]+=len[x];
		t=1LL*t*f[l0[i]][cnt[l0[i]]].sd%mod*f[l0[i]][cnt[l0[i]]+1].ft%mod;
		cnt[l0[i]]++;
		cnt0[i]++;

		dfs(x+1,s,t,c*cnt0[i]);
		cnt0[i]--;
		cnt[l0[i]]--;
		l0[i]-=len[x];
		cnt[l0[i]]++;
		cnt[len[x]]++;
	}
}
int main()
{
	int i,j,k,cur=1;
	init();
	scanf("%d%d",&n,&K);
	for(i=1;i<=n;i++)
		scanf("%d",&a[i]),in[a[i]]++;
	for(i=1;i<=n;i++)
		if(!in[i])
		{
			for(j=i;j;j=a[j])
				vis[j]=1,ch[cs][len[cs]++]=j;
			cnt[len[cs]]++;
			cs++;
		}
	//printf("%d\n",cs);
	for(i=1;i<=n;i++)
		if(!vis[i]&&in[i])
		{
			for(j=a[i],k=1;j!=i;j=a[j])
				vis[j]=1,k++;
			cnt[k]++;
		}
	//for(i=1;i<=n;i++) printf("%d ",cnt[i]); printf("\n");
	for(i=1;i<=n;i++)
		cur=1LL*cur*f[i][cnt[i]].ft%mod;
	dfs(0,0,cur,1);
	printf("%d\n",ans);
	return 0;
}
