#include<bits/stdc++.h>
using namespace std;
#define ll long long
const int maxn=100010;
const int mod=1e9+7;
int n,k,a[maxn];
vector<int>dp[maxn],dpN[maxn];
int hash[maxn],del[maxn];
int out=1;
int cnt[4]={0,0,0,0},cc[maxn];
vector<int>Line;
int p[maxn],num[maxn],top;
int answer=0;
ll power(ll a,ll b){
	ll s=1;
	while(b){
		if(b&1)s=s*a%mod;
		b>>=1;a=a*a%mod;
	}return s;
}
void calc(int ans){
	int nout=out;
	for(int i=1;i<=top;++i){
		int l=p[i];
		++cnt[min(l,3)];
		nout=1ll*nout*dpN[l][cc[l]]%mod;
		++cc[l];
		nout=1ll*nout*dp[l][cc[l]]%mod;
	}
	if(cnt[3])ans=1ll*ans*nout%mod;
	for(int i=1;i<=top;++i){
		int l=p[i];
		--cnt[min(l,3)];
		--cc[l];
	}
	answer=(answer+ans)%mod;
}
void dfs(int u,int ans){
	if(u==k){
		calc(ans);return;
	}
	p[++top]=Line[u];
	num[top]=1;
	dfs(u+1,ans);
	--top;
	for(int i=1;i<=top;++i){
		p[i]+=Line[u];
		++num[i];
		dfs(u+1,1ll*ans*(num[i]-1)%mod);
		--num[i];
		p[i]-=Line[u];
	}
}
int main(){
	cin>>n>>k;
	for(int i=1;i<=n;++i){
		scanf("%d",&a[i]);
		hash[a[i]]=1;
	}
	for(int i=1;i<=n;++i){
		dp[i].push_back(1);
		dpN[i].push_back(1);
		for(int j=1;i*j<=n;++j){
			ll now=1ll*dp[i][j-1]*i%mod;
			if(j>=2)now=(now+1ll*dp[i][j-2]*i%mod*(j-1))%mod;
			dp[i].push_back(now);
			dpN[i].push_back(power(now,mod-2));
		}
	}
	for(int i=1;i<=n;++i)
		if(!hash[i]){
			int u=i,l=0;
			for(;u;u=a[u]){
				del[u]=1;
				++l;
			}
			Line.push_back(l);
		}
	for(int i=1;i<=n;++i)
		if(!del[i]){
			int u=i,l=1;
			for(;1;u=a[u]){
				del[u]=1;
				if(a[u]==i)break;
				++l;
			}
			++cc[l];
			++cnt[min(l,3)];
		}
	for(int i=1;i<=n;++i)
		if(cc[i])
			out=1ll*out*dp[i][cc[i]]%mod;
	dfs(0,1);
	cout<<answer<<endl;
	return 0;
}
