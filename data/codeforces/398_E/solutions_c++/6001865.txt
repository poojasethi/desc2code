#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef double ld;

const int MAX=100000+10;
const int Mod=1e9+7;

int n,k,a[MAX];
vector<int> dp[MAX],dpN[MAX];
int hash[MAX],del[MAX];

int out=1;
int cnt[4]={0,0,0,0},cc[MAX];
vector<int> Line;

int p[MAX],num[MAX],top;
int answer=0;

LL power(LL a,LL b)
{
    LL k=1;
    for(;b;b/=2,a=a*a % Mod)
        if(b%2)
            k=k*a% Mod;
    return k;
}

void calc(int ans)
{
    int i;
    int nout=out;
    REP(i,1,top)
    {
        int l=p[i];
        ++cnt[min(l,3)];
        nout=(LL)nout*dpN[l][cc[l]] % Mod;
        ++cc[l];
        nout=(LL)nout*dp[l][cc[l]] % Mod;
    }

    if(cnt[3])
        ans=(LL)ans*nout % Mod;

    REP(i,1,top)
    {
        int l=p[i];
        --cnt[min(l,3)];
        --cc[l];
    }
    answer=(answer+ans) % Mod;
}

void dfs(int u,int ans)
{
    if(u==k)
    {
        calc(ans);
        return;
    }
    p[++top]=Line[u];
    num[top]=1;
    dfs(u+1,ans);
    --top;
    for(int i=1;i<=top;++i)
    {
        p[i]+=Line[u];
        ++num[i];
        dfs(u+1,(LL)ans * (num[i]-1) % Mod);
        --num[i];
        p[i]-=Line[u];
    }
}

int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
    int i;
    cin>>n>>k;
    REP(i,1,n)
    {
        scanf("%d",&a[i]);
        hash[a[i]]=1;
    }
    for(i=1;i<=n;++i)
    {
        dp[i].pb(1);
        dpN[i].pb(1);
        for(int j=1;i*j<=n;++j)
        {
            LL now=(LL)dp[i][j-1] *i % Mod;
            if(j>=2)
                now=(now+(LL)dp[i][j-2] * i % Mod *(j-1)) % Mod;
            dp[i].pb( now );
            dpN[i].pb(power(now,Mod-2));
        }
    }
    for(i=1;i<=n;++i)
        if(!hash[i])
        {
            int u=i,l=0;
            for(;u;u=a[u])
            {
                del[u]=1;
                ++l;
            }
            Line.pb(l);
        }
    for(i=1;i<=n;++i)
        if(!del[i])
        {
            int u=i,l=1;
            for(;1;u=a[u])
            {
                del[u]=1;
                if(a[u]==i)
                    break;
                ++l;
            }
            ++cc[l];
            ++cnt[min(l,3)];
        }
    REP(i,1,n)
        if(cc[i])
            out=(LL) out*dp[i][cc[i]] % Mod;
    dfs(0,1);
    cout<<answer<<endl;
    return 0;
}
