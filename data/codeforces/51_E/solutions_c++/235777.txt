#include <cstdio>

const int MAXN = 707;

typedef long long Mat[MAXN][MAXN];

void mul(int n, const Mat a, const Mat b0, Mat c) {
	static Mat b;
	for (int i = 1; i <= n; ++i) {
		for (int j = 1; j <= n; ++j) {
			b[i][j] = b0[j][i];
		}
	}
	for (int i = 1; i <= n; ++i) {
		for (int j = i; j <= n; ++j) {
			for (int k = 1; k <= n; ++k) {
				c[i][j] += a[i][k] * b[j][k];
			}
			c[j][i] = c[i][j];
		}
	}
}

int c[MAXN];
long long e[6][MAXN][MAXN];

int main() {
	int n, m, a, b;
	long long ans;

	scanf("%d%d", &n, &m);
	for (int i = 1; i <= m; ++i) {
		scanf("%d%d", &a, &b);
		e[1][a][b] = e[1][b][a] = 1;
		++c[a];
		++c[b];
	}

	ans = 0;
	mul(n, e[1], e[1], e[2]);
	mul(n, e[2], e[2], e[4]);
	mul(n, e[1], e[4], e[5]);
	for (int i = 1; i <= n; ++i) {
		ans += e[5][i][i];
	}
	ans /= 10;
	
	for (int i = 1; i <= n; ++i) {
		for (int j = i + 1; j <= n; ++j) {
			if (e[1][i][j] == 0) {
				continue;
			}
			a = c[i] + c[j];
			for (int k = j + 1; k <= n; ++k) {
				if (e[1][i][k] == 0 || e[1][j][k] == 0) {
					continue;
				}
				ans -= a + c[k] - 3;
			}
		}
	}
//	printf("%lld\n", ans);
	printf("%I64d\n", ans);

	return 0;
}

