#include <cstdio>
#include <bitset>

using namespace std;

#define maxn 710

typedef long long ll;

bitset <maxn> map[maxn];
bool d[maxn][maxn];
int f[maxn][maxn];
int in[maxn];

int main()
{
	int n, m;
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= m; i ++)
	{
		int x, y;
		scanf("%d%d", &x, &y);
		map[x][y] = 1;
		map[y][x] = 1;
		d[x][y] = 1;
		d[y][x] = 1;
		in[x] ++;
		in[y] ++;
	}
	for (int i = 1; i <= n; i ++)
		for (int j = 1; j <= n; j ++)
			if (i != j)
				f[i][j] = (map[i] & map[j]).count();
	ll ans = 0;
	for (int i = 1; i <= n; i ++)
		for (int j = 1; j <= n; j ++)
			for (int k = 1; k <= n; k ++)
				if (i != j && i != k && j != k && map[j][k])
				{
					ans += (ll)(f[i][j] - d[i][k]) * (f[i][k] - d[i][j]);
					if (d[i][j] && d[i][k])
						ans -= in[i] - 2;
				}
	printf("%I64d\n", ans / 10);
	return 0;
}

 	 			  	 	 		 		  		  	 						