#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;
const int maxn = 703;
typedef __int64 lld;

int d[maxn];
int a[maxn][maxn];
bool map[maxn][maxn];

int main() {
	int n, m, i, j, k;
	int u, v;
	scanf("%d%d",&n,&m);
	for (i=0; i < m; i++) {
		scanf("%d%d",&u,&v);
		map[u][v] = map[v][u] = true;
	}
	for (i=1; i <= n; i++) {
		for (j=1; j < i; j++) {
			for (k=1; k <= n; k++) if (k!=i&&k!=j) {
				if (map[i][k]&&map[j][k]) {
					a[i][j]++;
					if (map[i][j])
						d[k]++;
				}
			}
			a[j][i] = a[i][j];
		}
	}
	lld ans = 0;
	for (k=1; k <= n; k++) {
		for (i=1; i <= n; i++) if (i!=k) {
			for (j=1; j < i; j++) if (j!=k && map[i][j]) {
				lld s1 = a[k][i] - map[k][j];
				lld s2 = a[k][j] - map[k][i];
				ans += s1*s2;
			}
			if (map[k][i]) {
				ans -= d[i] - a[i][k];
			}
		}
	}
	printf("%I64d\n",ans/5);
    return 0;
}
