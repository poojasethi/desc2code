#include<vector>
#include<algorithm>
#include<iostream>
#include<map>
#include<cmath>
#include<set>
#include<string.h>
#include<string>

using namespace std;

typedef long long ll;
typedef pair<int, int> II ;

#define N 702
#define X first
#define Y second

int n, m;
bool G[N][N];
ll f[N][N];
II edges[N*N];
int gr[N];

int main() {

	memset(G, false, sizeof(G));
	memset(f, 0, sizeof(f));
	memset(gr, 0, sizeof(gr));
		
	cin >> n >> m;
	int x,y;
	for(int i=0 ; i<m ; i++) {
		cin >> x >> y;
		x--; y--;
		G[x][y] = G[y][x] = 1;
		edges[i] = II(x,y);
		gr[x]++;gr[y]++;
	}

	for(int i=0 ; i<n ; i++) for(int j=0 ; j<n ; j++) if(i!=j)
		for(int k=0 ; k<n ; k++)
			if(G[i][k] && G[k][j]) f[i][j]++;

/*	for(int i=0 ; i<n ; i++) {
		for(int j=0 ; j<n ; j++) cout << f[i][j] << " ";
		cout << endl;
	}
*/

	ll total = 0;
	for(int i=0 ; i<m ; i++) {
		int x = edges[i].X;
		int y = edges[i].Y;

		for(int z=0 ; z<n ; z++) if(z != x && z != y) {
			total += f[x][z]*f[y][z];

			if(G[x][z]) total -= f[x][z];
			if(G[y][z]) total -= f[y][z];
			if(G[x][z] && G[y][z]) total ++;
			if(G[x][z] && G[y][z]) total -= (gr[z]-2);
		}
	}

	cout << total/5 << endl;
	return 0;
}

