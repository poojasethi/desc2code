import bisect

if __name__ == '__main__':
    n, t1, t2, k = map(int, raw_input().strip().split())
    drop = (1 - (float(k)/100))
    leaderboard = []

    for name, speeds in ((i+1, map(int, raw_input().strip().split())) for i in xrange(n)):
        height = max( ((t1*speeds[0] * drop) + (t2 * speeds[1])), ((t1*speeds[1]*drop) + (t2*speeds[0])) )
        bisect.insort_left(leaderboard, (height, (-1) * name))

    for l in xrange(n):
        print "%s %.2f" % ((-1) * leaderboard[n-1-l][1], leaderboard[n-1-l][0])
        
