import os
from decimal import *

def solve():
    r = reader()
    n, t1, t2, k = readdecs(r)
    data = []
    order = [min, max]
    if t1 - t1 * (k / 100) > t2:        # t1 (1 - k/100)
        order = [max, min]
    for i in range(n):
        dwarf = readints(r)
        data.append(order[0](dwarf) * t1 * (1 - k/Decimal('100.0')) + order[1](dwarf) * t2)
    temp = enumerate(data, 1)
    result = sorted(temp, key=lambda x: x[1], reverse=True)
    for i in range(n):
        print result[i][0], "%.2f" % round(result[i][1], 2)


# Standard stuff
def reader(f = None):
    if f == None:
        while True: yield raw_input()
    else:
        f = os.path.join(os.path.dirname(__file__), f)
        with open(f, "r") as infile:
            while True: yield infile.readline()
def readints(r):
    return list(map(int, next(r).split(" ")))
def readfloats(r):
    return list(map(float, next(r).split(" ")))
def readdecs(r):
    return list(map(Decimal, next(r).split(" ")))

# invoke solve
solve()