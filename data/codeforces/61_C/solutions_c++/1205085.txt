#include<iostream>
#include<vector>
#include<algorithm>
#include<cstdio>
#include<map>
#include<set>
#include<cstring>
#include<string>
#include<queue>
#include<cctype>
#include<functional>
#include<fstream>
#include<sstream>
#include<complex>
#include<cmath>
#include<cstdlib>

using namespace std;

#define EPS 1.0e-10
#define REP(i,n) for(int i=0;i<n;i++)
#define FOR(it,c) for(__typeof((c).begin()) it = (c).begin();it != (c).end();++it)
#define ll long long
#define mp make_pair
#define pb push_back
#define F first
#define S second
const int SIZE=10000;
const ll INF=(ll)1<<(ll)62;
string a[]={"I","IV","V","IX","X","XL","L","XC","C","CD","D","CM","M"};
int b[]={1,4,5,9,10,40,50,90,100,400,500,900,1000};
string Roman(int num){
	string r="";
	for(int j=12;j>=0;j--){
		while(b[j]<=num){
			num-=b[j];
			r+=a[j];
		}
	}
	return r;
}
void solve(ll num,int b){
	vector<int>ans;
	while(1){
		ans.pb(num%b);
		num/=b;
		if(num==0) break;
	}
	reverse(ans.begin(),ans.end());
	REP(i,ans.size()){
		if(ans[i]>=10) printf("%c",ans[i]-10+'A');
		else cout<<ans[i];
	}
	cout<<endl;
}
ll change(string c,ll a){
	ll sum=0,base=1;
	for(int i=c.size()-1;i>=0;i--){
		if(c[i]>='A'&&c[i]<='Z') sum+=(c[i]-'A'+10)*base;
		else sum+=(c[i]-'0')*base;
		base*=a;
	}
	return sum;
}
int main(){
	string c;
	string b;
	ll a;
	while(cin>>a>>b>>c){
		ll num=change(c,a);
		if(b=="R") cout<<Roman(num)<<endl;
		else solve(num,atoi(b.c_str()));
	}
	return 0;
}
