#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)(v).size())


char rc[4][2]={{'I','V'},{'X','L'},{'C','D'},{'M','M'}};

int main(){
	li a,sum=0,base=1;
	string b,c;
	cin>>a>>b>>c;
	for(int i=sz(c)-1;i>=0;i--){
		sum+=base*(('0'<=c[i] && c[i]<='9')?(c[i]-'0'):(c[i]-'A'+10));
		base*=a;
	}
	if(sum==0){
		cout<<"0"<<endl;
		return 0;
	}
	if(b[0]=='R'){
		vector<char> vec;
		rep(i,4)if(sum){
			li tmp=sum%10;
			if(tmp<=3) rep(j,tmp) vec.pb(rc[i][0]);
			else if(tmp==4) vec.pb(rc[i][1]),vec.pb(rc[i][0]);
			else if(tmp<9){ rep(j,tmp-5) vec.pb(rc[i][0]); vec.pb(rc[i][1]); }
			else vec.pb(rc[i+1][0]),vec.pb(rc[i][0]);
			sum/=10;
		}
		reverse(vec.begin(),vec.end());
		rep(i,sz(vec)) cout<<vec[i];
		cout<<endl;
	}else{
		stringstream ss;
		ss<<b;
		ss>>base;
		vector<char> ans;
		while(sum){
			ans.pb((10<=(sum%base))?('A'+sum%base-10):('0'+sum%base));
			sum/=base;
		}
		reverse(ans.begin(),ans.end());
		rep(i,sz(ans)) cout<<ans[i];
		cout<<endl;
	}
}
