#include<cstdio>
#include<cctype>
#include<cstring>
#include<algorithm>

using std::reverse;

static inline int digit (char c)
{
	if(isdigit (c))
		return c-'0';
	else
		return 10+c-'A';
}

static void printdigit (int d,char one,char five,char ten)
{
	switch(d){
	case 1:
	case 2:
	case 3:
		for(int i=0;i<d;i++)
			putchar (one);
		break;
	case 4:
		putchar (one);
		putchar (five);
		break;
	case 5:
	case 6:
	case 7:
	case 8:
		putchar (five);
		for(int i=5;i<d;i++)
			putchar (one);
		break;
	case 9:
		putchar (one);
		putchar (ten);
		break;
	}
}

static char todigit (int n)
{
	if(n<10)
		return '0'+n;
	else
		return 'A'+n-10;
}

static char s[1005];
static long long n;

int main()
{
	int a,b;
	scanf ("%d ",&a);
	char c=getchar();
	if(c=='R')
		b=0;
	else{
		ungetc (c,stdin);
		scanf ("%d",&b);
	}

	gets (s);
	gets (s);

	for(unsigned i=0;i<strlen (s);i++)
		n=n*a+digit (s[i]);

	if(b){
		int ns=0;
		if(n==0){
			printf ("0");
			return 0;
		}
		while(n){
			s[ns++]=todigit (n%b);
			n/=b;
		}
		s[ns]=0;
		reverse (s,s+ns);
		puts (s);
	} else {
		int c1=n/1000;
		int c2=n/100%10;
		int c3=n/10%10;
		int c4=n%10;
		printdigit (c1,'M',0,0);
		printdigit (c2,'C','D','M');
		printdigit (c3,'X','L','C');
		printdigit (c4,'I','V','X');
	}

	return 0;
}
