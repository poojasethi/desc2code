#include <iostream>

using namespace std;

long long parse(string &s, int base) {
  long long v = 0;
  for (int i = 0; i < s.size(); i++) {
    v *= base;
    v += (s[i] > '9') ? (s[i] - 'A' + 10) : (s[i] - '0');
  }
  return v;
}

string toBase(long long v, int base) {
  if (v == 0) return "0";
  string res;
  while (v > 0) {
    int c = (v % base);
    res = (char)(c > 9 ? (c - 10 + 'A') : (c + '0')) + res;
    v /= base;
  }
  return res;
}

string toRoman(long long v) {
  static string P[] = {"I","IV","V","IX","X","XL","L","XC","C","CD","D","CM","M"};
  static long long Pr[] = {1,4,5,9,10,40,50,90,100,400,500,900,1000};
  string res;
  while (v > 0) { 
    for (int i = 12; i >= 0; i--)
      if (v >= Pr[i]) {
        v -= Pr[i];
        res += P[i];
        break;
      }
  }
  return res;
}

int main() {
  int a;
  string b, c;
  cin >> a >> b >> c;
  
  long long C = parse(c, a);
  if (b == "R") {
    cout << toRoman(C);
  } else {
    cout << toBase(C, parse(b, 10));
  }
  return 0;
}
