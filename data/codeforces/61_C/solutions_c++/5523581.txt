#include <iostream>

using namespace std;

typedef long long ll;

ll dec(string s, int fb)
{
	ll base = 1, ret = 0;
	for (int i = 0; i < s.size(); i++)
	{
		if (s[s.size() - 1 - i] >= 'A')
			ret += base * (s[s.size() - 1 - i] - 'A' + 10);
		else
			ret += base * (s[s.size() - 1 - i] - '0');
		base *= fb;
	}
	return ret;
}

string chn(ll a, int base)
{
	if (a == 0)
		return "";
	string ret = chn(a / base, base);
	if (a % base > 9)
		ret += 'A' + (a % base) - 10;
	else
		ret += '0' + a % base;
	return ret;
}

string roman(int a)
{
	string ret = "";
	string zer[] =
	{"", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX",
	"", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC",
	"", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM",
	"", "M", "MM", "MMM"};
	int cnt = 0;
	while (a != 0)
	{
		int cur = a % 10;
		ret = zer[cnt * 10 + cur] + ret;
		a /= 10;
		cnt++;
	}
	return ret;
}

int main()
{
	int a;
	string s, b;
	cin >> a >> b >> s;
	ll av = dec(s, a);
	if (b[0] == 'R')
		cout << roman(av) << endl;
	else
	{
		if (av == 0)
		{
			cout << 0 << endl;
			return 0;
		}
		b = '0' + b;
		int base = (b[b.size() - 1] - '0') + (b[b.size() - 2] - '0') * 10;
		cout << chn(av, base) << endl;
	}
	return 0;
}
