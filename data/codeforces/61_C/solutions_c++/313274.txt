#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <string.h>
#include <math.h>
#include <vector>
#define REP(i,n) for(int i=0,_n=(n); i<_n; i++)
#define REPD(i,n) for(int i=n-1; i>=0; i--)
#define FOR(i,a,b) for(int i=a,_b=(b); i<=_b; i++)
#define FORD(i,a,b) for(int i=a,_b=(b); i>=_b; i--)
#define CLEARA(x) memset(&x,0,sizeof(x))
#define DBG(vari) cout<<#vari<<" = "<<vari<<endl;


using namespace std;

typedef long long LL;

const int value[] = {1000,900,500,400,100,90,50,40,10,9,5,4,1};
const char roman[][3] = {"M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I"};

int a,d,B; char b[100000],c[100000];
string s;
LL C;

int main()
{
    //freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
    scanf("%d ",&a);
    scanf("%s\n",b);
    scanf("%s\n",c);
    REP(i,strlen(c))
    {
        if (isdigit(c[i]))
            d = c[i] - '0';
        else
            d = c[i] - 'A' + 10;
        C = C*a + d;
    }
    if (b[0] == 'R')
    {
        a = 0;
        while (C)
        {
            while (value[a] > C) a++;
            while (C >= value[a])
                C -= value[a], printf("%s",roman[a]);
        }
        printf("\n");
    }
    else
    {
        REP(i,strlen(b))
        {
            B = B*10 + (b[i] - '0');
        }
        if (C == 0)
            printf("0");
        while (C)
        {
            if (C % B < 10)
                s += C % B + '0';
            else
                s += C % B - 10 + 'A';
            C /= B;
        }
        reverse(s.begin(), s.end());
        cout << s << endl;
    }
    return 0;
}

