#include <iostream>
#include <string>
#include <cmath>
#include <cstdio>
using namespace std;
int toNum(char c)
{
	if(c>='0' && c<='9')return c-'0';
	if(c>='A' && c<='Z')return c-'A'+10;
	return c-'a'+10;
}
char code(int n)
{
	if(n<10)return '0'+n;
	return 'A'+n-10;
}

int main()
{
	int a;cin>>a;
	string b;cin>>b;
	int bnum=-1;
	if(b!="R")
		sscanf(b.c_str(),"%d",&bnum);
	string num;cin>>num;
	unsigned long long inum=0,apn=1;
	for(int i=num.length()-1;i>=0;i--)
	{
		inum+=apn*toNum(num[i]);
		apn*=a;
	}
	if(bnum==-1)
	{
		string res;
		while(inum>0)
		{
			if(inum>=1000){res+="M";inum-=1000;}
			else if(inum>=500){res+="D";inum-=500;}
			else if(inum>=100){res+="C";inum-=100;}
			else if(inum>=50){res+="L";inum-=50;}
			else if(inum>=10){res+="X";inum-=10;}
			else if(inum>=5){res+="V";inum-=5;}
			else {res+="I";inum--;}
		}
		int pos;
		while((pos=res.find("DCCCC"))!=string::npos)res.replace(pos,5,"CM");
		while((pos=res.find("CCCC"))!=string::npos)res.replace(pos,4,"CD");
		while((pos=res.find("LXXXX"))!=string::npos)res.replace(pos,5,"XC");
		while((pos=res.find("XXXX"))!=string::npos)res.replace(pos,4,"XL");
		while((pos=res.find("VIIII"))!=string::npos)res.replace(pos,5,"IX");
		while((pos=res.find("IIII"))!=string::npos)res.replace(pos,4,"IV");
		cout<<res<<"\n";
	}
	else
	{
		string res;
		while(inum>0)
		{
			res=code(inum%bnum)+res;
			inum/=bnum;
		}
		if(res.length()==0)res="0";
		cout<<res<<"\n";
	}
	return 0;
}
