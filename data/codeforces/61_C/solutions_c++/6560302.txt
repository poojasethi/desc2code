#include <iostream>
#include <algorithm>
using namespace std;

string thousand[4] = {"", "M", "MM", "MMM"};
string hundred[10] = {"", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"};
string tens[10] = {"", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"};
string ones[10] = {"", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"};

string toRoman(int a){
	string ans;
	ans += thousand[a/1000]; a%=1000;
	ans += hundred[a/100]; a%=100;
	ans += tens[a/10]; a%=10;
	ans += ones[a];
	return ans;
}

long long toBase10(string a, int base){
	long long num = 0;
	long long ind = 1;
	int val;
	for(int i = a.size()-1; i >= 0 && a[i] != '.'; i--){
		if(isalpha(a[i])){
			val = 10 + a[i] - 'A';
		}
		else{
			val = a[i]-'0';
		}
		num += ind*((long long)(val));
		ind *= base;
	}
	return num;
}

string toBaseB(long long num, long long base){
	string ans;
	int val;
	while(num > 0){
		val = (int)(num%base);
		if(val >= 10){
			ans += ('A'+val-10);
		}
		else{
			ans += ('0'+val);
		}
		num /= base;
	}
	if(ans.size() == 0){
		ans += '0';
	}
	return string ( ans.rbegin(), ans.rend() );
}

int main() {
	int a;
	string b;
	string c;
	cin >> a >> b >> c;
	for(int i = 0; i < c.size(); i++){
		if(c[i] == '0'){
			c[i] = '.';
		}
		else{
			break;
		}
	}
	long long num = toBase10(c, a);
	if(b == "R"){
		cout << toRoman( (int)(num) ) << endl;
	}
	else{
		long long base = toBase10(b, 10);
		cout << toBaseB(num, base) << endl;
	}
	
	return 0;
}