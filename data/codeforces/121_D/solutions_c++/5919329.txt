#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define int64 long long
#define N 600000
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int64 i,j,k,n,m,t,l,r,mid;
int64 g[N],inf,b[N],c[N],L[N],R[N],mi;
inline bool judge() {
	int i,j;
	For(i,1,r-mid+1) {
		j=i+mid-1;
		if (g[j]-g[i]>mi) continue;
		if (L[i]+R[j]<=m) return 1;
	}
	return 0;
}
int main() {
	g[l=r=0]=0; inf=mi=(int64)1e18+10;
	for (;l<=r;l++) {
		int64 A=g[l]*10+4;
		if (A<inf) g[++r]=A;
		A+=3;
		if (A<inf) g[++r]=A;
	}
	scanf("%I64d%I64d",&n,&m);
	For(i,1,n) scanf("%I64d%I64d",&b[i],&c[i]),mi=min(c[i]-b[i],mi);
	sort(b+1,b+n+1);
	sort(c+1,c+n+1);
	sort(g+1,g+r+1);
	j=n; g[r+1]=g[r];
	for (i=r;i;i--) {
		int64 A=g[i+1]-g[i];
		if (A&&(inf-L[i+1])/A<(n-j)) L[i]=inf;
		else L[i]=L[i+1]+A*(n-j);
		for (;j&&b[j]>=g[i];j--) L[i]=min(L[i]+b[j]-g[i],inf);
	}
	j=1; g[0]=g[1];
	For(i,1,r) {
		int64 A=g[i]-g[i-1];
		if (A&&(inf-R[i-1])/A<(j-1)) R[i]=inf;
		else R[i]=R[i-1]+A*(j-1);
		for (;j<=n&&c[j]<=g[i];j++) R[i]=min(R[i]+g[i]-c[j],inf);
	}
	int ll=1,rr=r;
	for (;ll<=rr;) {
		mid=(ll+rr)/2;
		if (judge()) ll=mid+1;
		else rr=mid-1;
	}
	printf("%d\n",ll-1);
	//for(;;);
	return 0;
}
