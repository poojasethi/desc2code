#include <map>
#include <cmath>
#include <cstdio>
#include <vector>
#include <string>
#include <cstdlib>
#include <cstring>
#include <sstream>
#include <fstream>
#include <iostream>
#include <algorithm>
#define PB push_back
#define MP make_pair
#define BG begin()
#define ED end()
#define SZ(x) ((int)((x).size()))
#define FF first
#define SS second
#define foreach(i,x) for (__typeof((x).begin()) i=(x).begin();i!=(x).end();i++)
#define FOR(i,l,r) for (int i=(l);i<=(r);i++)
#define ROF(i,r,l) for (int i=(r);i>=(l);i--)
using namespace std;
#define N 200000
int lz,rz,n,t;
long long r[N],l[N],a[2000000];
long double sr[N],sl[N],costl,costr;

void upr(long long x) {
  while (rz<n && r[rz+1]<x) rz++;
  costr=(long double)x*rz-sr[rz];
}

void upl(long long x) {
  while (lz<=n && l[lz]<x) lz++;
  costl=sl[lz]-(long double)x*(n-lz+1);
}

int main() {
  t=0;
  FOR(i,1,19)
    FOR(j,0,(1<<i)-1) {
      long long s=0;
      ROF(k,i-1,0) if ((j>>k)&1) s=s*10+7; else s=s*10+4;
      a[++t]=s;
    };
  long long w;
  scanf("%d%I64d",&n,&w);
  long long minlen=(long long)1e19;
  FOR(i,1,n) {
    scanf("%I64d%I64d",&l[i],&r[i]);
    minlen=min(minlen,r[i]-l[i]+1);
  };
  sort(l+1,l+1+n);
  sort(r+1,r+1+n);
  FOR(i,1,n) sr[i]=sr[i-1]+r[i];
  ROF(i,n,1) sl[i]=sl[i+1]+l[i];
  int ll=1,rr=1;
  lz=0,rz=0;
  upl(a[ll]);
  upr(a[rr]);
  int ans=0;
  while (rr<=t) {
    while (a[rr]-a[ll]+1>minlen) ll++;
    while (ll<=rr && costl+costr>w) upl(a[++ll]);
    if (costl+costr-.5<=w) ans=max(ans,rr-ll+1);
    upr(a[++rr]);
  };
  printf("%d",ans);
  return 0;
}
