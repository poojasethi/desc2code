#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>
#include <sstream>
#include <vector>
#include <math.h>
#include <stack>
#include <set>
#include <stdlib.h>
#include <time.h>

const int N=600010;
const int inf=0x3f3f3f3f;
const double eps=1e-6;
const double e=2.718281828459046;

using namespace std;

#define sz(x) (int((x).size()))
#define pb push_back
#define mp make_pair

typedef long long ll;
const ll M=1100000000000000000ll;

struct data
{
	ll l,r;
	data() {}
	data(ll l,ll r):l(l),r(r) {}
}da[N];

bool cmpl(const data &a,const data &b)
{
	return a.l>b.l;
}

bool cmpr(const data &a,const data &b)
{
	return a.r<b.r;
}

ll l[N],r[N];

vector<ll> vt;

void add(ll &x,ll y)
{
	x+=y;
	if(x>M) x=M;
}

ll mul(ll x,ll y)
{
	if(!x || !y) return 0;
	if(M/x<y) return M;
	return x*y;
}

int main()
{
	int n;ll m;
	scanf("%d%I64d",&n,&m);
	for(int i=0;i<n;i++)
	{
		ll l,r;
		scanf("%I64d%I64d",&l,&r);
		da[i]=data(l,r);
	}
	for(int k=0;k<19;k++)
	{
		for(int i=0;i<1<<k;i++)
		{
			ll a=0;
			for(int j=0;j<k;j++)
				if(i&(1<<j)) a=a*10+7;
				else a=a*10+4;
			if(a) vt.pb(a);
		}
	}
	memset(l,0,sizeof(l));
	memset(r,0,sizeof(r));
	sort(vt.begin(),vt.end());
	sort(da,da+n,cmpl);
	for(int i=sz(vt)-1,j=0;i>=0;i--)
	{
		ll t=0;
		if(i<sz(vt)-1) t=mul(vt[i+1]-vt[i],j);
		add(l[i],l[i+1]+t);
		while(j<n)
		{
			if(da[j].l>=vt[i]) add(l[i],da[j].l-vt[i]),j++;
			else break;
		}
	}
	sort(da,da+n,cmpr);
	for(int i=0,j=0;i<sz(vt);i++)
	{
		ll t=0;
		if(i) t=mul(vt[i]-vt[i-1],j);
		if(i) add(r[i],r[i-1]+t);
		while(j<n)
		{
			if(da[j].r<=vt[i]) add(r[i],vt[i]-da[j].r),j++;
			else break;
		}
	}
	ll len=M;
	for(int i=0;i<n;i++)
		len=min(len,da[i].r-da[i].l+1);
	int ret=0;
	for(int i=0;i<sz(vt);i++)
	{
		ll t=l[i]+r[i];
		if(t>m) continue;
		int ll=0,rr=i,ans=-1;
		while(ll<=rr)
		{
			int mid=(ll+rr)/2;
			if(vt[i]-vt[mid]+1>len) ll=mid+1;
			else rr=mid-1,ans=mid;
		}
		ll=ans,rr=i;
		while(ll<=rr)
		{
			int mid=(ll+rr)/2;
			if(r[i]+l[mid]<=m) rr=mid-1,ans=mid;
			else ll=mid+1;
		}
		ret=max(ret,i-ans+1);
	}
	cout<<ret<<endl;
    return 0;
}