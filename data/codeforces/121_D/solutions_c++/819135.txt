#include <cstdio>
#include <algorithm>

using namespace std;

#define MN 200000

typedef long long lld;


lld A[2000000],sz;

lld l[MN],r[MN];
long double sl[MN],sr[MN],costl,costr;
lld K,minlen,Ans,ll,rr,lp,rp;
int N;



void Dfs( int k, lld s)
{
	if (s) A[++sz]=s;
	if (k==19) {
		return ;
	}
	Dfs(k+1,s*10+4);
	Dfs(k+1,s*10+7);
}

void Init(){
	Dfs(1,0);
	sort(A+1,A+sz+1);
}

long double calcl()
{
	while (lp<=N&&l[lp]<=A[ll]) lp++;
	return sl[lp]-(long double)(N-lp+1)*A[ll];
}

long double calcr()
{
	while(rp<N&&r[rp+1]<A[rr]) rp++;
	return (long double)rp*A[rr]-sr[rp];
}

int main()
{
	Init();
	scanf("%d%I64d",&N,&K);
	minlen=(long long)1e19;
	for (int i=1;i<=N;i++)
	{
		scanf("%I64d%I64d",l+i,r+i);
		minlen=min(minlen,r[i]-l[i]);
	}
	sort(l+1,l+N+1);
	sort(r+1,r+N+1);
	for (int i=N;i;i--) sl[i]=sl[i+1]+l[i];
	for (int i=1;i<=N;i++) sr[i]=sr[i-1]+r[i];
	
	ll=rr=1;
	lp=rp=0;
	costl=calcl();
	costr=calcr();
	
	while (rr<=sz)
	{
		while (A[rr]-A[ll]>minlen) ll++;
		costl=calcl();
		while (costl+costr-0.5>K&&ll<rr) ll++,costl=calcl();
		if (costl+costr-0.5<=K) Ans=max(Ans,rr-ll+1);
		rr++;
		costr=calcr();
	}
	printf("%d\n",Ans);
}
