#include<iostream>
#include<vector>
#include<sstream>
#include<algorithm>
#include<numeric>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<complex>
#include<set>
#include<map>
#include<queue>
#include<cassert>

using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)
#define rp(i,c) rep(i,(c).size())
#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
#define dbg(x) cerr<<#x<<" = "<<(x)<<endl

typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int,int> pi;
typedef long long ll;

const int inf=1<<28;
const double INF=1e12,EPS=1e-9;

int n,m;
ll k,l[100000],r[100000];
ll lucky[1000000];
ll cl[1000000],cr[1000000];
ll M(ll a,ll b){
	if(1.0*a*b>k+1)return k+1;
	return a*b;
}
void run()
{
	m=1;
	for(int i=0;lucky[i]*10+7<(ll)1e18;i++){
		lucky[m++]=lucky[i]*10+4;
		lucky[m++]=lucky[i]*10+7;
	}
	cin>>n>>k;
	ll width=(ll)2e18;
	rep(i,n){
		cin>>l[i]>>r[i];
		width=min(width,r[i]-l[i]);
	}
	sort(l,l+n);
	sort(r,r+n);
	
	int j=n-1;
	for(int i=m-2;i>=0;i--){
		cl[i]=cl[i+1]+M(n-j-1,lucky[i+1]-lucky[i]);
		while(j>=0&&lucky[i]<=l[j]){
			cl[i]+=l[j--]-lucky[i];
			cl[i]=min(cl[i],k+1);
		}
	}
	j=0;
	for(int i=1;i<m;i++){
		cr[i]=cr[i-1]+M(j,lucky[i]-lucky[i-1]);
		while(j<n&&lucky[i]>=r[j]){
			cr[i]+=lucky[i]-r[j++];
			cr[i]=min(cr[i],k+1);
		}
	}
	
	j=0;
	int ans=0;
	for(int i=1;i<m;i++){
		j=max(i,j);
		while(j<m&&lucky[j]-lucky[i]<=width&&cl[i]+cr[j]<=k)j++;
		ans=max(ans,j-i);
	}
	cout<<ans<<endl;
}

int main()
{
#ifndef ONLINE_JUDGE
	int cs=3;rep(i,cs)
#endif
	run();
}
