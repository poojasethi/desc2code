#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <deque>
#include <bitset>
#include <set>
#include <map>
#include <utility>
#include <string>
#include <cstring>
#include <queue>
#include <algorithm>
#include <cmath>
using namespace std;
#define fi first
#define se second
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define EPS 1E-9
#define x1 x111
#define y1 y111
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
#define INF 2000000000000000000LL
inline ll mult(ll a,ll b){
  if(a==0)return 0;
  else if(b>INF/a)return INF;
       else return a*b;
}
ll n,k ,md=INF;
vector<pll> in;
map<ll,ll> L,R;
vector<ll> ok;
// calc L & R
vector<pll> U;
int main(){
  scanf("%I64d %I64d",&n,&k);
  in.resize(n);
  for(int i=0;i<n;++i)scanf("%I64d %I64d",&in[i].fi,&in[i].se) , md=min(md,in[i].se-in[i].fi);
  for(int len=1;len<=18;++len)
   for(int msk=0;msk<(1<<len);++msk){
    ll T=0;
    for(int i=len-1;i>=0;--i)T=10*T+((msk&(1<<i))?7:4);
    ok.pb(T);
                                    }
  ll open,sum,S;
  // calc L
  open=sum=0;
  for(int i=0;i<ok.size();++i)U.pb(pll(ok[i],0));
  for(int i=0;i<n;++i)U.pb(pll(in[i].fi,1));
  sort(U.begin(), U.end());
  S=sz(U);
  for(int i=S-1;i>=0;--i){
   if(i+1!=S)sum=min(INF,sum+mult(open,U[i+1].fi-U[i].fi));
   if(U[i].se==0)L[U[i].fi]=sum;
   else ++open;
                         }
  // calc R
  open=sum=0; U.clear();
  for(int i=0;i<ok.size();++i)U.pb(pll(ok[i],0));
  for(int i=0;i<n;++i)U.pb(pll(in[i].se,1));
  sort(U.begin(), U.end());
  S=sz(U);
  for(int i=0;i<S;++i){
   if(i)sum=min(INF,sum+mult(open,U[i].fi-U[i-1].fi));
   if(U[i].se==0)R[U[i].fi]=sum;
   else ++open;
                      }
  int bst=0;
  int pl,pr=0;
  for(int pl=0;pl<ok.size();++pl){
   if(pr<pl)pr=pl;
   ll add1=L[ok[pl]];
   if(add1+R[ok[pr]]>k)continue;
   while(pr+1<ok.size() && ok[pr+1]-ok[pl]<=md && add1+R[ok[pr+1]]<=k)++pr;
   bst=max(bst,pr-pl+1);
                                 }
  printf("%d\n",bst);
  //system("pause");
  return 0;
}
