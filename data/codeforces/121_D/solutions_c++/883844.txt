#include <iostream>
#include <algorithm>
using namespace std;
typedef long long LL;
typedef long double LD;
const LL INF=LL(1e18)+1;

LD sl[110000],sr[110000];
LL l[110000],r[110000],a[1100000];
int tt,n,x,y,X,Y;
LL k,len,ans;

LL cost(){
        while (X<=n&&l[X]<=a[x]) X++;
        while (Y<n&&r[Y+1]<a[y]) Y++;
        LD ret=sl[X]-LD(n-X+1)*a[x]+LD(Y)*a[y]-sr[Y];
        if (ret>INF) ret=INF;
        return LL(ret);
}

void dfs(LL x){
        if (x) a[++tt]=x;
        //cout<<x<<endl;
        if (x*10>INF) return;
        dfs(x*10+4);dfs(x*10+7);
}

int main(){
        tt=0;
        dfs(0);
        sort(a+1,a+tt+1);
        cin>>n>>k;
        len=LL(1e18);
        int i;
        for(i=1;i<=n;i++){
                cin>>l[i]>>r[i];
                if (r[i]-l[i]<len) len=r[i]-l[i];
        }
        sort(l+1,l+n+1);
        sort(r+1,r+n+1);
        x=y=1;
        for(i=n;i;i--)sl[i]=sl[i+1]+l[i];
        for(i=1;i<=n;i++) sr[i]=sr[i-1]+r[i];
        X=Y=0;
        cost();
        while (y<=tt){
                while (a[y]-a[x]>len) x++;
                while (x<=y&&cost()>k) x++;
                if (cost()<=k&&y-x+1>ans) ans=y-x+1;//cout<<cost()<<' '<<x<<' '<<y<<endl;}
                y++;
        }
        cout<<ans<<endl;
}
