#include <cstdio>
#include <algorithm>
using namespace std;

const long long Linf = 2000000000000000000LL;
const long long linf = 1000000000000000000LL;

int n,r,w,out;
long long m,x[100005],y[100005],mi,a[530000],X[530000],Y[530000];

int main() {
    scanf("%d%I64d",&n,&m);
    mi=Linf;
    for (int i=0; i<n; i++) {
        scanf("%I64d%I64d",&x[i],&y[i]);
        mi=min(mi,y[i]-x[i]);
    }
    a[0]=0;
    r=0;
    w=0;
    while (a[w]<=linf) {
        a[++w]=a[r]*10+4;
        a[++w]=a[r]*10+7;
        r++;
    }
    sort(x,x+n);
    sort(y,y+n);
    X[w]=0;
    for (int i=w-1,j=n-1; i>=0; i--) {
        X[i] = X[i+1]+(n-1-j)*(double)(a[i+1]-a[i])<(double)Linf ? X[i+1]+(n-1-j)*(a[i+1]-a[i]) : Linf ;
        while ((j>=0)&&(x[j]>=a[i])) {
            X[i] = X[i]+(double)x[j]-a[i]<(double)Linf ? X[i]+x[j]-a[i] : Linf ;
            j--;
        }
    }
    Y[0]=0;
    for (int i=1,j=0; i<=w; i++) {
        Y[i] = Y[i-1]+j*(double)(a[i]-a[i-1])<(double)Linf ? Y[i-1]+j*(a[i]-a[i-1]) : Linf ;
        while ((j<n)&&(y[j]<=a[i])) {
            Y[i] = Y[i]+(double)a[i]-y[j]<(double)Linf ? Y[i]+a[i]-y[j] : Linf ;
            j++;
        }
    }
    out=0;
    for (int i=1,j=0; i<=w; i++) {
        while ((j<w)&&(a[j+1]-a[i]<=mi)&&(X[i]+Y[j+1]<=m)) j++;
//if (i<=10) printf("%I64d %I64d  %I64d  %I64d\n",a[i],a[j],X[i],Y[j]);
        out=max(out,j-i+1);
    }
    printf("%d\n",out);
    return 0;
}