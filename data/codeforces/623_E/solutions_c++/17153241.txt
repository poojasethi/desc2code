#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int MAXN = 70000,Mo = int(1e9) + 7;

typedef long long LL;

LL N,K;

struct FFT
{
	int Mo,L,W[MAXN];

	int Pow(int a,int b)
	{
		if (!b) return 1;
		LL mid = Pow(a,b >> 1);
		mid = mid * mid % Mo;
		if (b & 1) mid = mid * a % Mo;
		return mid;
	}

	void Pre_Treat(int K)
	{
		for(L = 1;L <= K * 2;L <<= 1);
		W[0] = 1,W[1] = Pow(3,(Mo - 1) / L);
		for(int i = 2;i <= L;i ++) W[i] = W[i - 1] * 1ll * W[1] % Mo;
	}

	void DFT(int *a,int sig)
	{
		static int Tmp[MAXN];
		for(int i = 0;i < L;i ++)
		{
			int c = 0;
			for(int j = 1,tmp = i;j < L;j <<= 1,tmp >>= 1) c = ((c << 1) | (tmp & 1));
			Tmp[c] = a[i];
		}
		for(int m = 2;m <= L;m <<= 1)
			for(int half = m / 2,i = 0;i < half;i ++)
			{
				int w = (sig > 0) ? W[i * (L / m)] : W[L - i * (L / m)];
				for(int j = i;j < L;j += m)
				{
					int u = Tmp[j],v = w * 1ll * Tmp[j + half] % Mo;
					Tmp[j] = (u + v) % Mo;
					Tmp[j + half] = (u - v) % Mo;
				}
			}
		for(int i = 0;i < L;i ++) a[i] = (Tmp[i] + Mo) % Mo;
	}

	void Mul(int *a,int *b,int *c)
	{
		static int Ta[MAXN],Tb[MAXN];
		for(int i = 0;i < L;i ++) Ta[i] = a[i],Tb[i] = b[i];
		DFT(Ta,1),DFT(Tb,1);
		for(int i = 0;i < L;i ++) c[i] = Ta[i] * 1ll * Tb[i] % Mo;
		DFT(c,-1);
		int RevL = Pow(L,Mo - 2);
		for(int i = 0;i < L;i ++) c[i] = c[i] * 1ll * RevL % Mo;
		for(int i = K + 1;i < L;i ++) c[i] = 0;
	}
}Mod[3];

int Ans[MAXN],Rev[MAXN],Fac[MAXN];

int Pow(int a,LL b,int Mo = int(1e9) + 7)
{
	if (!b) return 1;
	LL mid = Pow(a,b >> 1,Mo);
	mid = mid * mid % Mo;
	if (b & 1) mid = mid * a % Mo;
	return mid;
}

void Mul(int *a,int *b,int *c)
{
	static int A[3][MAXN];
	for(int i = 0;i < 3;i ++) Mod[i].Mul(a,b,A[i]);
	for(int i = 0;i <= K;i ++)
	{
		LL a1 = A[0][i],a2 = A[1][i],a3 = A[2][i],p1 = Mod[0].Mo,p2 = Mod[1].Mo,p3 = Mod[2].Mo;
		LL x = a1 + (((a2 - a1) % p2 + p2) % p2 * 1ll * Pow(p1 % p2,p2 - 2,p2)) % p2 * p1;
		int inv = Pow(p1 * 1ll * p2 % p3,p3 - 2,p3);
		c[i] = (x % Mo + ((a3 - x % p3) % p3 + p3) % p3 * 1ll * inv % p3 * p1 % Mo * p2 % Mo) % Mo;
	}
}

int GetC(int a,int b)
{
	return Fac[a] * 1ll * Rev[b] % Mo * Rev[a - b] % Mo;
}

void Calc(LL N)
{
	if (!N)
	{
		for(int i = 1;i <= K;i ++) Ans[i] = Rev[i];
		return;
	}
	Calc((N - 1) >> 1);
	int mul = Pow(2,(N + 1) / 2);
	static int Tmp[MAXN];
	for(int i = 0,c = 1;i <= K;i ++,c = 1ll * c * mul % Mo) Tmp[i] = 1ll * Ans[i] * c % Mo;
	Mul(Ans,Tmp,Ans);
	if (!(N & 1))
	{
		int mul = Pow(2,N);
		for(int i = 1,c = mul;i <= K;i ++,c = 1ll * c * mul % Mo) Tmp[i] = c * 1ll * Rev[i] % Mo;
		Mul(Ans,Tmp,Ans);
	}
}

int main()
{
	//freopen("data.in","r",stdin),freopen("data.out","w",stdout);
	Mod[0].Mo = 167772161,Mod[1].Mo = 998244353,Mod[2].Mo = 1004535809;
	scanf("%I64d%I64d", &N, &K);
	if (N > K) {printf("0\n");return 0;}
	N --;
	for(int i = 0;i < 3;i ++) Mod[i].Pre_Treat(K);
	Fac[0] = 1;
	for(int i = 1;i <= K;i ++) Fac[i] = Fac[i - 1] * 1ll * i % Mo;
	Rev[K] = Pow(Fac[K],Mo - 2);
	for(int i = K;i;i --) Rev[i - 1] = Rev[i] * 1ll * i % Mo;
	Calc(N);
	int ans = 0;
	for(int i = 1;i <= K;i ++) ans = (ans + Ans[i] * 1ll * Fac[i] % Mo * GetC(K,i)) % Mo;
	printf("%d\n", ans);
	return 0;
}

