#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#define N 65536
#define mo 1000000007
#define M 31610
#define LL long long
#define oo (1<<30)
using namespace std;
double Pi=acos(-1.0);
int n,k,f[N],g[N],F[N],G[N],ans,e,ep,fc[N],xf[N]; LL hcy;
struct cp{
	double x,y;
	cp(double _x=0,double _y=0){ x=_x,y=_y;}
}w[N],a[N],b[N],c[N],d[N],A[N],B[N],C[N],emp,tmp[N];
cp operator +(cp p,cp q){ return cp(p.x+q.x,p.y+q.y);}
cp operator -(cp p,cp q){ return cp(p.x-q.x,p.y-q.y);}
cp operator *(cp p,cp q){ return cp(p.x*q.x-p.y*q.y,p.x*q.y+p.y*q.x);}
LL fpm(LL x,LL y)
{
	LL s=1;
	while(y){
		if(y&1) s=(s*x)%mo;
		y>>=1 , x=(x*x)%mo;
	  }
	return s;
}
int rev(int x)
{
	int i,y=0;
	for(i=0;i<ep;i++)
		y+=((x>>i)&1)*(1<<(ep-i-1));
	return y;
}
void FFT(cp *x,int op)
{
	int i,j,k; cp p,q;
	for(i=0;i<e;i++) tmp[i]=x[i];
	for(i=0;i<e;i++) x[i]=tmp[rev(i)];
	for(i=1;i<=e;i<<=1){
		for(j=0;j<i/2;j++)
			w[j]=cp(cos(2*Pi*op*j/i),sin(2*Pi*op*j/i));
		for(j=0;j<e;j+=i)
			for(k=0;k<i/2;k++){
				p=x[j+k],q=x[j+k+i/2]*w[k];
				x[j+k]=p+q, x[j+k+i/2]=p-q;
			  }
	  }
}
void power(int *u,int *v,int p)
{
	int i;
	for(i=0;i<e;i++)
		a[i]=b[i]=c[i]=d[i]=A[i]=B[i]=C[i]=emp;
	for(i=0;i<=k;i++){
		F[i]=1LL*u[i]*fc[k-i]%mo*fpm(p,i)%mo;
		G[i]=1LL*v[i]*fc[k-i]%mo;
	  }
	for(i=0;i<e;i++) a[i].x=F[i]/M,b[i].x=F[i]%M,c[i].x=G[i]/M,d[i].x=G[i]%M;
	FFT(a,1),FFT(b,1),FFT(c,1),FFT(d,1);
	for(i=0;i<e;i++){
		A[i]=a[i]*c[i];
		B[i]=a[i]*d[i]+b[i]*c[i];
		C[i]=b[i]*d[i];
	  }
	FFT(A,-1),FFT(B,-1),FFT(C,-1);
	for(i=0;i<=k;i++){
		u[i]=(LL)(A[i].x/e+0.5)*M%mo*M%mo;
		u[i]=(u[i]+(LL)(B[i].x/e+0.5)%mo*M)%mo;
		u[i]=(u[i]+(LL)(C[i].x/e+0.5))%mo;
		}
	for(i=0;i<=k;i++)
		u[i]=1LL*u[i]*xf[k-i]%mo*xf[k]%mo;
}
int main()
{
	int i,T=2;
	cin>>hcy>>k;
	if(hcy>k){
		printf("0");
		return 0;
	  }
	fc[0]=xf[0]=1;
	for(i=1;i<=k;i++){
		fc[i]=(1LL*fc[i-1]*i)%mo;
		xf[i]=fpm(fc[i],mo-2);
	  }
 	for(e=1,ep=0;e<=2*k;e<<=1,ep++);
	n=hcy,f[0]=1,hcy=1;
	for(i=1;i<=k;i++)
		hcy=hcy*fpm(i,mo-2)%mo*(k-i+1)%mo,g[i]=hcy;
	while(n){
		if(n&1) power(f,g,T);
		n>>=1 , power(g,g,T);
		T=(1LL*T*T)%mo;
	  }
	for(i=n;i<=k;i++) ans=(ans+f[i])%mo;
	cout<<ans;
	return 0;
}
