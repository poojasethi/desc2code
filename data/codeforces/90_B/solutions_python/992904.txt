cnv = lambda c: ord(c)-ord('a')

n, m = map(int, raw_input().split())
node = [raw_input() for i in xrange(n)]
left = [[None for i in xrange(m)] for j in xrange(n)]
right = [[None for i in xrange(m)] for j in xrange(n)]
up = [[None for i in xrange(m)] for j in xrange(n)]
down = [[None for i in xrange(m)] for j in xrange(n)]

#init
for x in xrange(m):
    down[0][x] = [0 for i in xrange(26)]
    for t in [cnv(node[v][x]) for v in xrange(1,n)]:
        down[0][x][t] += 1
for y in xrange(n):
    right[y][0] = [0 for i in xrange(26)]
    for t in [cnv(node[y][v]) for v in xrange(1,m)]:
        right[y][0][t] += 1

#solve
ans = ""
for y in xrange(n):
    for x in xrange(m):
        if left[y][x] == None:
            left[y][x] = [0 for i in xrange(26)]
            if x-1 >= 0:
                left[y][x] = left[y][x-1][:]
                left[y][x][cnv(node[y][x-1])] += 1
        if right[y][x] == None:
            right[y][x] = [0 for i in xrange(26)]
            if x-1 >= 0:
                right[y][x] = right[y][x-1][:]
                right[y][x][cnv(node[y][x])] -= 1
        if up[y][x] == None:
            up[y][x] = [0 for i in xrange(26)]
            if y-1 >= 0:
                up[y][x] = up[y-1][x][:]
                up[y][x][cnv(node[y-1][x])] += 1
        if down[y][x] == None:
            down[y][x] = [0 for i in xrange(26)]
            if y-1 >= 0:
                down[y][x] = down[y-1][x][:]
                down[y][x][cnv(node[y][x])] -= 1
        c = cnv(node[y][x])
        if left[y][x][c] + right[y][x][c] + up[y][x][c] + down[y][x][c] == 0:
            ans += node[y][x]
print ans