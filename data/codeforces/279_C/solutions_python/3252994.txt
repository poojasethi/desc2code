import sys
class Stair():
    def __init__( self, n ):
        self.a = [ 0 ] * n
        self.i = [ 0 ] * n

    def __getitem__( self, i ):
        return self.a[ i ]

    def __setitem__( self, i, k ):
        self.a[ i ] += k

    def step( self, l, r ):
        return self.i[ r ] - self.i[ l ] - self.a[ r ]

    def integrate( self ):
        s = 0
        for k,x in enumerate( self.a ):
            s += x
            self.i[ k ] = s


sys.stdin.readline()
ns = map( int, sys.stdin.readline().split() )
n = len( ns )

c, cd, cu = Stair( n ), Stair( n ), Stair( n )
nd, nu = 1,1

dd, uu = None, None
for i,x in enumerate( ns ):
    if i > 0 and ns[ i - 1 ] > ns[ i ]:
        dd = i

    if i < n-1 and ns[ i ] < ns[ i + 1 ]:
        uu = i

    if dd and uu and dd <= uu:
        c[ dd ] = 1
        c[ uu ] = 1
        cd[ dd ] = nd
        cu[ uu ] = nu
        nu += 1
        nd += 1
        dd, uu = None, None
        

c.integrate()
cd.integrate()
cu.integrate()

for l in sys.stdin:
    l,r = map( lambda x: int(x)-1 , l.split() )
    cnt = c.step( l, r )
    if cnt > 2:
        print 'No'
    elif cnt == 2 and cd.step( l, r ) == cu.step( l, r ):
        print 'No'
    else:
        print 'Yes'

    sys.stdout.flush()
