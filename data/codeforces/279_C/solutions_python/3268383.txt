#from __future__ import division;
from bisect import *;
import sys;
import math;
import io;

def readint() :
	return map(int, raw_input().split());

def readstr() :
	return raw_input().split();

def readfloat() :
	return map(float, raw_input().split());

def bin_search(arr, item) :
	left, right, mid = 0, len(arr)-1, 0;
	while left <= right :
		mid = (left + right)/2;

		if arr[mid] <= item :
			left = mid+1;
		else :
			right = mid-1;
	return left;

if __name__ == '__main__':
	
	n, q = readint();

	arr = [0]+readint()+[0];

	dpl = [0 for _ in xrange(len(arr))];
	dpr = [0 for _ in xrange(len(arr))];
	dpl[1] = 1;
	dpr[n] = n;
	for ii in xrange(2, n+1) :
		dpl[ii] = dpl[ii-1] if arr[ii-1] >= arr[ii] else ii;

	for ii in xrange(n-1, 0, -1) :
		dpr[ii] = dpr[ii+1] if arr[ii+1] >= arr[ii] else ii;
	#print dpr, "\n", dpl;
	for ii in xrange(q) :
		a, b = readint();
		print "Yes" if dpl[b] <= dpr[a] else "No"; 
		
	pass