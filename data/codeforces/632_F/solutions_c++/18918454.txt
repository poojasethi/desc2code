#include <cmath>
#include <bitset>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;
int n, a[2505][2505];
bitset<2560> chk[2505];
struct node
{
	int x, y, val;
}px[6250005];
void getfalse()
{
	puts("NOT MAGIC");
	exit(0);
}
bool cmp(node u, node v){return u.val < v.val;}
int main()
{
	scanf("%d", &n);
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= n; j++)
		{
			scanf("%d", &a[i][j]);
			px[(i - 1) * n + j].x = i;
			px[(i - 1) * n + j].y = j;
			px[(i - 1) * n + j].val = a[i][j];
		}
	for (int i = 1; i <= n; i++)
		if (a[i][i])
			getfalse();
	for (int i = 1; i <= n; i++)
		for (int j = 1; j < i; j++)
			if (a[i][j] != a[j][i])
				getfalse();
	sort(px + 1, px + n * n + 1, cmp);
	px[0].val = -1;
	px[n * n + 1].val = -2;
	for (int i = n * n; i >= 1; i--)
	{
		if (px[i].val != px[i + 1].val)
			for (int j = i; px[j].val == px[i].val; j--)
				chk[px[j].x].set(px[j].y);
		if ((chk[px[i].x] | chk[px[i].y]).count() != n) getfalse();
	}
	puts("MAGIC");
	return 0;
}
                                                                                                                                                                                                                                                                                    