#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <vector>
#include <queue>
#include <bitset>
using namespace std;
const int N=2505;
struct map{
	int x,y,w;
}a[N][N],b[N*N];
int n,tot,h[N],x,y,w,A[N][N];
bitset <N> c[N],d[N];

inline int read()
{
    int x=0,f=1;char ch=getchar();
    while(ch>'9'||ch<'0'){if(ch=='-')f=-1;ch=getchar();}
    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
    return x*f;
}

int comp(const map&a,const map&b)
{
	return a.w>b.w;
}

void print()
{
	cout<<"NOT MAGIC";
	exit(0);
}

bool check()
{
	for (int i=1;i<=n;i++) 
	{
		if (A[i][i]) return 0;
		for (int j=1;j<=n;j++) if (A[i][j]!=A[j][i]) return 0;
	}
	return 1;
}

int main()
{
	cin>>n;
	for (int i=1;i<=n;i++)
	{
		for (int j=1;j<=n;j++)
		{
			a[i][j].w=read();
			a[i][j].y=j;
			b[++tot].x=i; b[tot].y=j; b[tot].w=A[i][j]=a[i][j].w;
			c[i][j]=1; h[i]=1;
		}
		sort(a[i]+1,a[i]+n+1,comp);
	}
	sort(b+1,b+tot+1,comp);
	if (!check()) print();
	for (int i=1;i<=tot;i++)
	{
		x=b[i].x; y=b[i].y; w=b[i].w;
		for (;a[x][h[x]].w==w&&h[x]<=n;h[x]++) d[x][a[x][h[x]].y]=1,c[x][a[x][h[x]].y]=0;
		for (;a[y][h[y]].w>=w&&h[y]<=n;h[y]++) d[y][a[y][h[y]].y]=1,c[y][a[y][h[y]].y]=0;
		if (x>y) continue;
		if ((d[x]|c[y])!=d[x]) 
			print();
	}
	cout<<"MAGIC";
}