#include <bits/stdc++.h>

using namespace std;

#define N 2505

bitset <N> row[N], col[N];
pair <int, int> p[N * N];

main() {
    int n;
    scanf("%d", &n);
    for (int i = 0; i < n * n; i ++) {
		scanf("%d", &p[i].first);
		p[i].second = i;
    }
    for (int i = 0; i < n; i ++) {
    	int id = i * n + i;
		if (p[id].first) return puts("NOT MAGIC");
    }
    for (int i = 0; i < n; i ++) {
    	for (int j = i + 1; j < n; j ++) {
    		int x = i * n + j;
    		int y = j * n + i;
			if (p[x].first != p[y].first) return puts("NOT MAGIC");
    	}
    }
    sort(p, p + n * n);
    for (int i = 0, j; i < n * n; ) {
    	for (j = i + 1; j < n * n; j ++) {
    		if (p[i].first < p[j].first) break;
			int x = p[j].second / n;
			int y = p[j].second % n;
			if ((row[x] & col[y]).any()) return puts("NOT MAGIC");
    	}
    	for (int k = i; k < j; k ++) {
    		int x = p[k].second / n;
			int y = p[k].second % n;
			row[x][y] = col[y][x] = 1;
    	}
    	i = j;
    }
    puts("MAGIC");
}
