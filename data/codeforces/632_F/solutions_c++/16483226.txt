#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<string>
#include<bitset>
#include<algorithm>
using namespace std;
typedef long long ll;
typedef long double ldb;
#define inf 99999999
#define pi acos(-1.0)
#define maxn 2505
int a[maxn][maxn];
struct node{
    int len,l,r;
}e[maxn*maxn/2];

bool cmp(node a,node b){
    return a.len<b.len;
}
bitset<maxn>bt[maxn];

int main()
{
    int n,m,i,j,flag;
    while(scanf("%d",&n)!=EOF)
    {
        flag=1;
        int tot=0;
        for(i=1;i<=n;i++){
            for(j=1;j<=n;j++){
                scanf("%d",&a[i][j]);
                if(i<j){
                    tot++;
                    e[tot].len=a[i][j];
                    e[tot].l=i;e[tot].r=j;
                }
            }
        }
        for(i=1;i<=n;i++){
            if(a[i][i]!=0){
                flag=0;break;
            }
        }
        if(flag==0){
            printf("NOT MAGIC\n");continue;
        }
        for(i=1;i<=n;i++){
            for(j=i+1;j<=n;j++){
                if(a[i][j]!=a[j][i]){
                    flag=0;break;
                }
            }
            if(!flag)break;
        }
        if(flag==0){
            printf("NOT MAGIC\n");continue;
        }

        sort(e+1,e+1+tot,cmp);
        int t=1;
        for(i=1;i<=tot;i++){
             while(t<=tot && e[t].len<e[i].len ){
                bt[e[t].l ][e[t].r ]=1;
                bt[e[t].r ][e[t].l ]=1;
                t++;
             }

             if((bt[e[i].l ]&bt[e[i].r ] ).any() ){
                flag=0;break;
             }

        }
        if(flag==0)printf("NOT MAGIC\n");
        else printf("MAGIC\n");
    }
    return 0;
}
