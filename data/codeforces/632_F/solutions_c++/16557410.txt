#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstdlib>

using namespace std;

int n;

void morir()
{
  printf("NOT MAGIC\n");
  exit(0);
}

void comprueba(int t1[1000],int t2[1000])
{
  int tope=n/32+2;
  for (int i=0;i<tope;i++)
    if (t1[i]&t2[i])
      morir();
}

int t[5000][1000];
int input[5000][5000];

struct elem {
  int i,j,x;
  elem() {
  }
  elem(int ini,int inj,int inx) {
    i=ini;j=inj;x=inx;
  }
};

bool operator<(elem e1,elem e2)
{
  return e1.x<e2.x;
}

vector<elem> v;

int main()
{
  scanf("%d",&n);
  {
    elem e;
    for (int i=0;i<n;i++) {
      for (int j=0;j<n;j++) {
	scanf("%d",&(input[i][j]));
	if (i==j and input[i][j]!=0) morir();
	e.x=input[i][j];
	e.i=i;
	e.j=j;
	v.push_back(e);
      }
    }
  }
  for (int i=0;i<n;i++)
    for (int j=0;j<n;j++)
      if (input[i][j]!=input[j][i])
	morir();
  sort(v.begin(),v.end());
  int iv=0;
  while (iv<int(v.size())) {
    int nextiv=iv;
    for (;nextiv<int(v.size()) and v[nextiv].x==v[iv].x;nextiv++) {
      int i=v[nextiv].i;
      int j=v[nextiv].j;
      comprueba(t[i],t[j]);
    }
    for (;iv<nextiv;iv++) {
      int i=v[iv].i;
      int j=v[iv].j;
      t[i][j/32]|=1<<(j%32);
    }
  }
  printf("MAGIC\n");
}
