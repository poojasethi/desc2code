#include <iostream>
#include <algorithm>
#include <bitset>
#include <stdio.h>
using namespace std;

int arr[2522][2522];
int n;
bitset<2500> xx[2500];

struct nd{
	int val;
	int i;
	int j;
};

bool operator<(nd a,nd b){
	return a.val>b.val;
}

nd q[4004004];
int tt=0;
void bad(){
	cout<<"NOT MAGIC"<<endl;
	exit(0);
}
void good(){
	cout<<"MAGIC"<<endl;
}
void add(int i,int j){
	xx[i].set(j,true);
	xx[j].set(i,true);
}
bool check(int i,int j){
	if( (xx[i] | xx[j]).count()==n)return true;
	return false;
}
int main(){
	scanf("%d",&n);
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			scanf("%d",&arr[i][j]);
		}
	}
	for(int i=0;i<n;i++){
		for(int j=i+1;j<n;j++){
			if(arr[i][j]!=arr[j][i]){
				bad();
			}
			q[tt].val=arr[i][j];
			q[tt].i=i;
			q[tt].j=j;
			tt++;
		}
		if(arr[i][i]!=0){
			bad();
		}
	}
	sort(q,q+tt);
	int nxt=0;
	while(nxt<tt){
		int st=nxt;
		add(q[nxt].i,q[nxt].j);
		nxt++;
		while(nxt<tt && q[nxt].val==q[nxt-1].val){
			add(q[nxt].i,q[nxt].j);
			nxt++;
		}
		for(int i=st;i<nxt;i++){
			if(!check(q[i].i,q[i].j)){
				bad();
			}
		}
	}
	good();
}