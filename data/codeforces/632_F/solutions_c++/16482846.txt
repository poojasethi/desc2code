#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#include<bitset>
#define N 2505
#define LL long long
#define oo (1<<30)
using namespace std;
int n,m,G[N][N],a[N*N]; bitset<N> A[N],S,T;
int W(int p){ return G[(p-1)/n+1][(p-1)%n+1];}
bool cmp(int p,int q){ return W(p)>W(q);}
int getint()
{
	char c=getchar(); int w=0;
	while(c<'0' || c>'9') c=getchar();
	while(c>='0'&&c<='9') w=w*10+c-'0',c=getchar();
	return w;
}
int main()
{
	int i,j,k,u,v;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
		for(j=1;j<=n;j++)
			G[i][j]=getint();
	for(i=1;i<=n;i++)
		if(G[i][i]!=0){
			printf("NOT MAGIC");
			return 0;
		  }
	for(i=1;i<=n;i++)
		for(j=i+1;j<=n;j++)
			if(G[i][j]!=G[j][i]){
				printf("NOT MAGIC");
				return 0;
			  }
	for(i=1;i<=n;i++)
		for(j=i+1;j<=n;j++)
			a[++m]=(i-1)*n+j;
	sort(a+1,a+m+1,cmp);
	for(i=1;i<=m;i=j){
		for(j=i;j<=m&&W(a[j])==W(a[i]);j++);
		for(k=i;k<j;k++){
			u=(a[k]-1)/n+1;
			v=(a[k]-1)%n+1;
			S=A[u]^A[v];
			S[u]=S[v]=0;
			if(S!=T){
				printf("NOT MAGIC");
				return 0;
			  }
		  }
		for(k=i;k<j;k++){
			u=(a[k]-1)/n+1;
			v=(a[k]-1)%n+1;
			A[u][v]=A[v][u]=1;
		  }
		}
	printf("MAGIC");
	return 0;
}
