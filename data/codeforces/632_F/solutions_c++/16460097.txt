#include <iostream>
#include <bitset>
#include <queue>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <vector>
#define x first
#define y second

using namespace std;

const int N = 2510;
int a[N][N];

vector<pair<int, int> > v;
bitset<N> b[N];

int main() {
    int n;
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &a[i][j]);
            v.push_back(make_pair(a[i][j], i * n + j));
        }
        if (a[i][i] != 0){ 
            printf("NOT MAGIC\n");
            return 0;
        }
    }
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (a[i][j] != a[j][i]) {
                printf("NOT MAGIC\n");
                return 0;
            }
        }
    }
    sort(v.begin(), v.end());
    int l = 0;
    for (int k = 0; k < v.size(); k++) {
        int i = v[k].y / n, j = v[k].y % n;
        if ((b[i] & b[j]).any()) {
            printf("NOT MAGIC\n");
            return 0;
        }
        if (k != v.size() - 1 && v[k].x != v[k + 1].x) {
            for (; l <= k; l++){
                b[v[l].y / n][v[l].y % n] = 1;
                b[v[l].y / n][v[l].y % n] = 1;
            }
        }
    }
    printf("MAGIC\n");
}
