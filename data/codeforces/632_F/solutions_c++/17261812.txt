#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int MAXN = 2505,MAXM = MAXN * MAXN;

struct Node
{
	int u,v,c;
}E[MAXM];

int Fa[MAXN],A[MAXN][MAXN],N,cnt;

bool cmp(const Node &a,const Node &b) {return a.c < b.c;}

int Get(int a) {return Fa[a] == a ? a : Fa[a] = Get(Fa[a]);}

int main()
{
	scanf("%d", &N);
	for(int i = 1;i <= N;i ++)
		for(int j = 1;j <= N;j ++)
		{
			scanf("%d", &A[i][j]);
			if (i != j) E[++ cnt].u = i,E[cnt].v = j,E[cnt].c = A[i][j];
		}
	for(int i = 1;i <= N;i ++)
	{
		if (A[i][i]) {printf("NOT MAGIC\n");return 0;}
		for(int j = 1;j <= N;j ++)
			if (A[i][j] != A[j][i]) {printf("NOT MAGIC\n");return 0;}
	}
	for(int i = 1;i <= N;i ++) Fa[i] = i;
	sort(E + 1,E + cnt + 1,cmp);
	for(int i = 1;i <= cnt;)
	{
		int k = i;
		for(;k <= cnt && E[i].c == E[k].c;k ++)
			if (Get(E[k].u) == Get(E[k].v)) {printf("NOT MAGIC\n");return 0;}
		for(k = i;k <= cnt && E[i].c == E[k].c;k ++)
			Fa[Get(E[k].u)] = Get(E[k].v);
		i = k;
	}
	printf("MAGIC\n");
	return 0;
}
