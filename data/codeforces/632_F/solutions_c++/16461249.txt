#include<bits/stdc++.h>
#define MAXN 2509
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
bitset<MAXN>s[MAXN];
int arr[MAXN][MAXN];
vector<PII>adj[((MAXN*MAXN)-MAXN)/2];
int main(){
	int a;
	scanf("%d",&a);
	vector<pair<int,PII> >v;
	for(int i=1;i<=a;i++)
		for(int j=1;j<=a;j++){
			scanf("%d",&arr[i][j]);
			if(i==j){
				if(arr[i][j]!=0){
					printf("NOT MAGIC\n");
					return 0;
				}
			}
			else
				v.pb(mp(arr[i][j],mp(i,j)));
		}
	for(int i=1;i<=a;i++)
		for(int j=1;j<=a;j++){
			if(i!=j and arr[i][j]!=arr[j][i]){
				printf("NOT MAGIC\n");
				return 0;
			}
		}
	sort(all(v));
	int c=1;
	adj[c].pb(mp(v[0].ss.ff,v[0].ss.ss));	
	for(int i=1;i<v.size();i++){
		if(v[i].ff!=v[i-1].ff)	
			c++;
		adj[c].pb(mp(v[i].ss.ff,v[i].ss.ss));	
	}
	for(int j=0;j<adj[1].size();j++){
		PII k=adj[1][j];
		s[k.ff][k.ss]=1;	
	}
	for(int i=2;i<=c;i++){
		for(int j=0;j<adj[i].size();j++){
			PII k=adj[i][j];
			if((s[k.ff]&s[k.ss])!=s[0]){
				printf("NOT MAGIC\n");
				return 0;
			}
		}
		for(int j=0;j<adj[i].size();j++){
			PII k=adj[i][j];
			s[k.ff][k.ss]=1;
		}
	}
	printf("MAGIC\n");
	return 0;
}
