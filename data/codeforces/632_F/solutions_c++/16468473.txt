#include <bits/stdc++.h>
using namespace std;
#define pii pair<int, int>
#define pb push_back
#define X second.first
#define Y second.second
#define val first
#define mkp make_pair
const int maxn = 2505;
int a[maxn][maxn];

int readInt(){
    char ch;
    while((ch = getchar()) < '0' || ch > '9');
    int num = ch - '0';
    while((ch = getchar()) >= '0' && ch <= '9') num = num * 10 + ch - '0';
    return num;
}

vector < pair<int, pii > > mrx;
vector <int> sta;
bitset <maxn> st[maxn];

bool judge1(int n){
    for(int i = 1; i <= n; i++)
    for(int j = 1; j <= n; j++){
        if(i == j && a[i][j]) return false;
        if(a[i][j] != a[j][i]) return false;
    }
    return true;
}

bool judge2(int n){
    int x, y, id;
    for(int i = 0; i < mrx.size(); i++){
        if(i && mrx[i].val != mrx[i - 1].val){
            for(int j = 0; j < sta.size(); j++){
                id = sta[j];
                st[mrx[id].X][mrx[id].Y] = 0;
            }
            sta.clear();
        }
        x = mrx[i].X, y = mrx[i].Y;
        if((st[x] | st[y]).count() != n)
            return false;
        sta.pb(i);
    }
    return true;
}

int main(){
    int n = readInt();
    for(int i = 1; i <= n; i++)
    for(int j = 1; j <= n; j++){
        a[i][j] = readInt();
        mrx.pb(mkp(a[i][j], mkp(i, j)));
        st[i][j] = 1;
    }
    if(!judge1(n)){ puts("NOT MAGIC"); return 0; }
    sort(mrx.begin(), mrx.end());
    puts(judge2(n) ? "MAGIC" : "NOT MAGIC");
    return 0;
}
