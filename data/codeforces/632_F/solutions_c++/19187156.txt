#include <bits/stdc++.h>

#define ll long long

#define mp std::make_pair
#define pii std::pair<int,int>
#define fi first
#define se second

#define SZ(x) ((int)(x).size())
#define pb push_back

template<class T>inline void chkmax(T &x, const T &y) {if(x < y) x = y;}
template<class T>inline void chkmin(T &x, const T &y) {if(x > y) x = y;}

template<class T>
inline void read(T &x) {
	char c;int f = 1;x = 0;
	while(((c = getchar()) < '0' || c > '9') && c != '-');
	if(c == '-') f = -1;else x = c - '0';
	while((c = getchar()) >= '0' && c <= '9') x = x * 10 + c - '0';
	x *= f;
}

const int N = 2500;
const int INF = 2e9;

int n;
int g[N + 9][N + 9];

pii min[N + 9];
bool vis[N + 9];

int sz = 1, head[N + 9], to[N * 2 + 9], ne[N * 2 + 9], w[N * 2 + 9];

void addedge(int u, int v, int _w) {
	to[sz] = v, w[sz] = _w, ne[sz] = head[u], head[u] = sz++;
	to[sz] = u, w[sz] = _w, ne[sz] = head[v], head[v] = sz++;
}

void dfs(int now, int fa, int max, int *g) {
	if(max < g[now]) {
		puts("NOT MAGIC");
		exit(0);
	}
	for(int i = head[now]; i; i = ne[i])
		if(to[i] != fa)
			dfs(to[i], now, std::max(max, w[i]), g);
}

int main() {
	read(n);
	for(int i = 1; i <= n; ++i)
		for(int j = 1; j <= n; ++j)
			read(g[i][j]);
	for(int i = 1; i <= n; ++i) min[i] = mp(INF, 0);
	for(int i = 1; i <= n; ++i) {
		int p = 0;
		for(int j = 1; j <= n; ++j)
			if(!vis[j] && (!p || min[p].fi > min[j].fi))
				p = j;
		if(min[p].se) addedge(p, min[p].se, min[p].fi);
		vis[p] = true;
		for(int j = 1; j <= n; ++j)
			if(!vis[j] && min[j].fi > g[j][p])
				min[j] = mp(g[j][p], p);
	}
	for(int i = 1; i <= n; ++i)
		dfs(i, 0, 0, g[i]);
	puts("MAGIC");
	return 0;
}

                                                      