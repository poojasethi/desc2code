// In the name of Allah

#include <vector>
#include <map>
#include <cstring>
#include <cmath>
#include <iostream>
#include <algorithm>
#include <sstream>
#include <complex>
#include <queue>
#include <stack>
#include <map>
#include <bitset>
#include <iomanip>
#include <set>
#include <stack>
#include <stdio.h>

using namespace std;

#define dbg(x) cerr << #x << " = " << (x) << endl;
#define FOR(i,a,b) for (int i = (a); i < (b); i ++)
#define rep(i,n) for (int i = 0; i < (n); i ++)
#define repd(i,n) for (int i = (n); i >= 0; i --)
#define PI 3.14159265358979323846
#define pb push_back
#define mp make_pair
#define X first
#define Y second

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;

const int max_n = 2500;
int a [max_n][max_n];
vector <pair <int, pii> > E;
int par [max_n];
int B [max_n][max_n];
vector <int> va, vb;

int anc (int v)
{
	return par[v] == v ? v : par[v] = anc (par[v]);
}

int main ()
{
    int n;
   	scanf ("%d", &n);
   	rep (i, n)
   		rep (j, n)
   			scanf ("%d", &a[i][j]);
  	rep (i, n)
  		par [i] = i;
   	rep (i, n)
   		rep (j, i)
   			E.pb (mp(a[i][j], mp(i, j)));
   	sort (E.begin(), E.end());
   	rep (k, E.size())
   	{
   		int a = E[k].Y.X, b = E[k].Y.Y;
   		if ( anc(a) != anc(b) )
   		{
   			va.clear();
   			rep (i, n)
   				if ( anc(i) == anc(a) )
   					va.pb (i);
   			vb.clear();
   			rep (i, n)
   				if ( anc(i) == anc(b) )
   					vb.pb (i);
   			rep (i, va.size())
   				rep (j, vb.size())
   					B[va[i]][vb[j]] = B[vb[j]][va[i]] = E[k].X;

   			par [anc(a)] = anc(b);
   		}
   	}

   	bool magic = true;
   	rep (i, n)
   		rep (j, n)
   			if ( a[i][j] != a[j][i] || (i == j && a[i][j]) )
   				magic = false;
   	rep (i, n)
   		rep (j, n)
   			if ( a[i][j] != B[i][j] )
   					magic = false;
   	cout << (magic ? "" : "NOT ") << "MAGIC" << endl;
    
	return 0;
}