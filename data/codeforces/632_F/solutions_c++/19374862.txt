#include <cstdio>
#include <algorithm>
#include <sstream>
#include <string>
#include <set>
#include <map>
#include <vector>
#include <functional>
#include <bitset>
#include <iostream>
#include <cstring>
#include <assert.h>
#include <queue>
#include <stack>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef pair<int,ll> pil;
typedef pair<ll,int> pli;
typedef pair<ll,ll> pll;
typedef pair<int,pii> pip;
typedef pair<pii,int> ppi;
#define rep(i,n) for(int i=0;i<n;i++)
#define repn(i,a,n) for(int i=a;i<n;i++)
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define ALL(x) (x).begin(),(x).end()
#define SORT(x) sort(ALL(x))
#define REVERSE(x) reverse((x).begin(),(x).end())
#define LB(x,a) lower_bound(ALL(x),a)-x.begin()
#define UB(x,a) upper_bound(ALL(x),a)-x.begin()
#define MM(x,a) memset(x,a,sizeof(x))
#define MAX(x,a) x=max(x,a)
#define MIN(x,a) x=min(x,a)
#define MOD 1000000007

int N;
int A[2500][2500];

ull bt[2500][40];

int main()
{
	scanf("%d",&N);
	rep(i,N)rep(j,N)scanf("%d",&A[i][j]);
	bool ok=true;
	rep(i,N)rep(j,i)ok&=(A[i][j]==A[j][i]);
	rep(i,N)ok&=(A[i][i]==0);
	
	vector<pip> v;
	rep(i,N)rep(j,N)v.pb(mp(A[i][j],mp(i,j)));
	SORT(v);
	int ptr=0;
	while(ptr<N*N)
	{
		int cptr=ptr;
		int tval=v[ptr].fi;
		while(ptr<N*N&&v[ptr].fi==tval)ptr++;
		repn(i,cptr,ptr)
		{
			int x=v[i].se.fi,y=v[i].se.se;
			if(x<y)
			{
				rep(j,40)if((bt[x][j]&bt[y][j])!=0)return !printf("NOT MAGIC\n");
			}
		}
		repn(i,cptr,ptr)
		{
			int x=v[i].se.fi,y=v[i].se.se;
			bt[x][y/64]|=1ULL<<(y%64);
		}
	}
	
	if(!ok)printf("NOT ");
	puts("MAGIC");
}