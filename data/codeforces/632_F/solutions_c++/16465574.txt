#include <algorithm>
#include <iostream>
#include <cstdio>
using namespace std;
int a[2510][2510],dist[2510],u[2510],to[5010],val[5010],ne[5010],fi[2510],
	d[10000],fr[2510],i,j,k,n,ans=1,tot=0;
void add(int x,int y,int z)
{
	to[++tot]=y;val[tot]=z;ne[tot]=fi[x];fi[x]=tot;
}
void bfs(int x)
{
	int j,s,t;
	for (j=1;j<=n;++j) u[j]=1,dist[j]=1e9;
	dist[x]=u[x]=0;d[1]=x;
	for (s=t=1;s<=t;s++)
		for (j=fi[d[s]];j;j=ne[j])
		if (u[to[j]])
		{
			dist[to[j]]=max(dist[d[s]],val[j]);
			u[to[j]]=0;d[++t]=to[j];
		}
	for (j=1;j<=n && ans;++j)
		if (dist[j]!=a[x][j]) ans=0;
}
void prim()
{
	for (i=0;i<=n;++i) u[i]=1,dist[i]=1e9;
	dist[1]=0;
	for (i=1;i<n;++i)
	{
		k=0;
		for (j=1;j<=n;++j)
			if (u[j] && dist[j]<dist[k]) k=j;
		u[k]=0;
		for (j=1;j<=n;++j)
			if (u[j] && a[k][j]<dist[j]) dist[j]=a[k][j],fr[j]=k;
	}
	for (i=2;i<=n;++i) add(fr[i],i,dist[i]),add(i,fr[i],dist[i]);
	for (i=1;i<n && ans;++i) bfs(i);
}
int main()
{
		scanf("%d\n",&n);
		for (i=1;i<=n;++i,scanf("\n"))
			for (j=1;j<=n;++j) scanf("%d",&a[i][j]);
		ans=1;
		for (i=1;i<n && ans;++i)
			for (j=i+1;j<=n && ans;++j) ans&=a[i][j]==a[j][i];
		for (i=1;i<=n && ans;++i) ans&=a[i][i]==0;
		if (ans) prim();
		if (ans) printf("MAGIC\n");else printf("NOT MAGIC\n");
}