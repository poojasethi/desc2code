def is_punct (char):
        puncts = ['.', ',', '!', '?']
        return char in puncts

def parse (stream):
        if len (stream) == 0:
                return ""

        out_str = ""
        last_seen = 'x'
        for c in stream:
                if last_seen.isalpha () and c.isalpha ():
                        out_str += c

                if last_seen.isalpha () and is_punct (c):
                        out_str += c

                if last_seen.isalpha () and c.isspace ():
                        pass

                if last_seen.isspace () and c.isalpha ():
                        out_str += ' ' + c
                
                if last_seen.isspace () and is_punct (c):
                        out_str += c

                if last_seen.isspace () and c.isspace ():
                        pass;

                if is_punct (last_seen) and c.isalpha ():
                        out_str += ' ' + c

                # cannot happen (input spec says so)
                if is_punct (last_seen) and is_punct (c):
                        pass

                last_seen = c

        return out_str

def parse_rec (stream, last_seen):
        if len (stream) == 0:
                return ""
        if last_seen.isalpha () and stream[0].isalpha ():
                return stream[0] + parse_rec (stream[1:], stream[0])

        if last_seen.isalpha () and is_punct (stream[0]):
                return stream[0] + parse_rec (stream[1:], stream[0])

        if last_seen.isalpha () and stream[0].isspace ():
                return parse_rec (stream[1:], stream[0])

        if last_seen.isspace () and stream[0].isalpha ():
                return ' ' + stream[0] + parse_rec (stream[1:], stream[0])
        
        if last_seen.isspace () and is_punct (stream[0]):
                return stream[0] + parse_rec (stream[1:], stream[0])

        if last_seen.isspace () and stream[0].isspace ():
                return parse_rec (stream[1:], stream[0])

        if is_punct (last_seen) and stream[0].isalpha ():
                return ' ' + stream[0] + parse_rec (stream[1:], stream[0])

        # cannot happen (input spec says so)
        if is_punct (last_seen) and is_punct (stream[0]):
                return parse_rec (stream[1:], stream[0])

        if is_punct (last_seen) and stream[0].isspace ():
                return parse_rec (stream[1:], stream[0])
        
        # again control cant reach here
        return ""
                   

if __name__ == "__main__":
        inp = raw_input ()
        cleaned_inp = inp.lstrip().rstrip()
        print parse (cleaned_inp)
