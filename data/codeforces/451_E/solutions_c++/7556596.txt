#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<cmath>
#define N 25
#define mo 1000000007
#define LL long long
#define oo (1<<30)
#define TAT "%I64d"
using namespace std;
int n; LL s,f[N],ans=0;
LL exgcd(LL a,LL b,LL z)
{
	if(!a) return z/b;
	else return (exgcd(b%a,a,-z)*b+z)/a;
}
LL C(LL n,LL m)
{
	LL i,res=1;
	if(n<m) return 0;
  for(i=n;i>=n-m+1;i--)
		res=(res*(i%mo))%mo;
	for(i=m;i>=1;i--)
		res=(res*(exgcd(i,mo,1)+mo))%mo;
	return res;
}
void dfs(int t,LL sum,int cnt)
{
	if(t>n){
		if(sum<0) return;
		ans=(ans+(cnt ? -1 : 1)*C(sum+n-1,n-1)+mo)%mo;
		return ;
	  }
	dfs(t+1,sum-f[t]-1,cnt^1);
	dfs(t+1,sum,cnt);
}
int main()
{
	int i;
	scanf("%d"TAT,&n,&s);
	for(i=1;i<=n;i++)
		scanf(TAT,&f[i]);
	dfs(1,s,0);
	printf(TAT,ans);
	return 0;
}
