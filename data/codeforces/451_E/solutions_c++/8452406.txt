#include<cstdio>
#include<cstdlib>
#define MOD 1000000007
#define LL long long

int n,fac_inv[25];
LL s,ans=0,f[25];

inline int power(int x,int y)
{
	int ret=1;
	for(;y;y>>=1,x=(LL)x*x%MOD)
	if(y&1)ret=(LL)ret*x%MOD;
	return ret;
}
inline void get(LL x,int z)
{
	if(x>s)return;
	LL rest=s-x,tot=1;
	for(LL i=n+rest-1;i>rest;i--)tot=tot*(i%MOD)%MOD;
	tot=tot*fac_inv[n-1]%MOD;
	if(n&1)z=-z;
	ans=(ans+tot*z)%MOD;
}
void solve(int x,LL y,int z)
{
	if(x==(n+1))
	{
		get(y,z);return;
	}
	solve(x+1,y+f[x]+1,z);
	solve(x+1,y,-z);
}
int main()
{
	scanf("%d%I64d",&n,&s);
	for(int i=1;i<=n;i++)scanf("%I64d",&f[i]);
	
	LL tot=1;
	for(int i=1;i<=n;i++)tot=tot*i%MOD;
	fac_inv[n]=power(tot,MOD-2);
	for(int i=n-1;i+1;i--)fac_inv[i]=((LL)fac_inv[i+1]*(i+1))%MOD;
	
	solve(1,0,1);
	printf("%d\n",(ans+MOD)%MOD);
	return 0;
}
