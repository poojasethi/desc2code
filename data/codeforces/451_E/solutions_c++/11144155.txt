#include <bits/stdc++.h>
#define LL long long 
#define MOD 1000000007

int n;
LL s,f[20];

LL qpow(LL a,LL b){
	LL ans=1;
	while (b){
		if (b & 1)	ans=(ans*a)%MOD;
		a=(a*a)%MOD;
		b>>=1;
	}
	return ans;
}

LL getc(LL a,LL b){
	if (a < b)	return 0;
	if (b>a-b)	b=a-b;
	LL s1=1,s2=1;
	for (LL i=0;i<b;i++){
		s1=s1*(a-i)%MOD;
		s2=s2*(i+1)%MOD;
	}
	return s1*qpow(s2,MOD-2)%MOD;
}

LL lucas(LL n,LL k){
	if (k==0)	return 1;
	return getc(n%MOD,k%MOD)*lucas(n/MOD,k/MOD)%MOD;
}

LL solve(){
	LL ans=0;
	for (int i=0;i<(1<<n);i++){
		LL sign=1,sum=s;
		for (int j=0;j<n;j++)
			if (i&(1<<j)){
				sum-=f[j]+1;
				sign*=-1;
			}
		if (sum < 0)	continue;
		ans+=sign*lucas(sum+n-1,n-1);
		ans%=MOD;
	}
	return (ans+MOD)%MOD;
}

int main()
{
	scanf("%d%I64u",&n,&s);
	for (int i=0;i<n;i++)
		scanf("%I64u",&f[i]);
	printf("%I64u\n",solve());
	return 0;
}
   		 	 		     				 	 	 					 	