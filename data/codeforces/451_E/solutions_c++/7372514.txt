
#include <iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
#define MOD 1000000007
#define LL long long
using namespace std;
LL qmod(LL a,LL b)
{
	LL res=1;
	if(a>=MOD)a%=MOD;
	while(b)
	{
		if(b&1)res=res*a%MOD;
		a=a*a%MOD;
		b>>=1;
	}
	return res;
}
LL inv(LL a)
{
	return qmod(a,MOD-2);
}
LL invmod[50];
LL C(LL n,LL m)
{
	if(n<m)return 0;
	LL ans=1;
	for(int i=1;i<=m;++i)
		ans=(n-i+1)%MOD*ans%MOD*invmod[i]%MOD;
	return ans;
}
LL f[30],n,s;
LL ans;
void gao(int now,LL sum,int flag)
{
	if(sum>s)return ;
	if(now==n)
	{
		ans+=flag*C(s-sum+n-1,n-1);
		ans%=MOD;
	//	printf("%I64d\n",ans);
		return ;
	}
	gao(now+1,sum,flag);
	gao(now+1,sum+f[now]+1,-flag);
}
int main() {
	for(int i=1;i<=20;++i)
		invmod[i]=qmod(i,MOD-2);
	cin>>n>>s;
	for(int i=0;i<n;++i)
		cin>>f[i];
	ans=0;
	gao(0,0,1);
	cout<<(ans%MOD+MOD)%MOD<<endl;
	return 0;
}
