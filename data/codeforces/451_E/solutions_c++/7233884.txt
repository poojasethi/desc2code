#include <iostream>

using namespace std;

typedef long long ll;

const ll MOD = 1e9 + 7;
const int MAXN = 21;
ll f[MAXN], inverse[MAXN];

ll bpow(ll x, ll k) {
	x %= MOD;
	ll res = 1;
	while (k > 0) {
		if (k & 1) res = res * x % MOD;
		x = x * x % MOD;
		k >>= 1;
	}
	return res;
}

ll select(ll k, ll n) {
	if (k > n)
		return 0ll;
	ll res = 1ll;
	for (ll i = 1; i <= k; i++)
		res = res * ((n - i + 1) % MOD) % MOD * inverse[i] % MOD;
	return res;
}

int main() {
	for (int i = 0; i < MAXN; i++)
		inverse[i] = bpow(i, MOD - 2);
	ll n, s;
	cin >> n >> s;
	for (int i = 0; i < n; i++)
		cin >> f[i], f[i]++;
	ll ans = 0;
	for (int i = 0; i < (1 << n); i++) {
		int cnt = 0;
		ll tmpS = s;
		for (int j = 0; j < n; j++)
			if ((i >> j) & 1)
				cnt++, tmpS -= f[j];
		ans += (ll)(cnt % 2 ? -1 : 1) * select(n - 1, tmpS + n - 1);
		ans %= MOD;
		ans += MOD;
		ans %= MOD;
	}
	cout << ans << endl;
	return 0;
}
