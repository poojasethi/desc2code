#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
typedef long long ll;
const ll mod=1e9+7;
ll f[100];
ll fast_mod(ll a,ll k)
{
    ll ret=1;
    while(k)
    {
        if(k&1) ret=ret*a%mod;
        k>>=1;
        a=a*a%mod;
    }
    return ret;
}
ll inv[100];
ll C(ll n,ll m)
{
    ll ret=1;
    for(int i=1; i<=m; i++)
        ret=ret*((n+1-i)%mod*inv[i]%mod)%mod;
    return ret;
}
ll ans;
ll n,s;
void dfs(int k,ll sum,int flag)
{
    if(sum>s) return;
    if(k==n+1)
    {
        ans=(ans+flag*C(s-sum+n-1,n-1))%mod;
        return;
    }
    dfs(k+1,sum,flag);
    dfs(k+1,sum+f[k]+1,-flag);
}
int main()
{
    for(int i=1;i<=20;i++)
        inv[i]=fast_mod(i,mod-2);
    cin>>n>>s;
    for(int i=1; i<=n; i++)
        cin>>f[i];
    ans=0;
    dfs(1,0,1);
    cout<<(ans%mod+mod)%mod<<endl;
    return 0;
}
