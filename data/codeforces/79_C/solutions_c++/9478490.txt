#include <iostream>
#include <algorithm>
using namespace std;

const int MAXN = 100005;
const int MAXB = 15;

string bad[MAXB];
int dp[MAXN];

int main()
{
	string s;
	cin >> s;
	int n;
	cin >> n;
	for (int i = 0; i < n; ++i)
		cin >> bad[i];
	for (int i = 1; i <= (int)s.length(); ++i)
	{
		int Min = 0;
		for (int j = 0; j < n; ++j)
		{
			int sz = bad[j].length();
			if (i >= sz)
				if (bad[j] == s.substr(i - sz, sz))
					Min = max(Min, i - sz + 1);
		}
		dp[i] = min(dp[i - 1] + 1, i - Min);
	}
	int best = 1;
	for (int i = 2; i <= (int)s.length(); ++i)
		if (dp[best] < dp[i])
			best = i;
	cout << dp[best] << ' ' << best - dp[best] << '\n';
	return 0;
}
