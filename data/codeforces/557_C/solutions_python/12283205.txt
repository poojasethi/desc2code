import random
import timeit
n = int(raw_input())
l = [int(s) for s  in raw_input().split()]
d = [int(s) for s  in raw_input().split()]
##n = 100000
##l = [i for i in range(n)]
##d = [10 + i for i in range(n)]
##l = random.sample(l,n)
##d = random.sample(d, n)
legs = zip(l,d)
legslen = sorted(legs, key = lambda legs:legs[0])
legsen = sorted(legs, key = lambda legs:legs[1])
##print legslen
##print legsen
en_vals = []
len_chan = []
e = -1
en_vals.append(0)
maxlegn = 0
fullenergy = 0
for ilegslen in xrange(n-1, 0-1, -1):
    fullenergy += legslen[ilegslen][1]
    if e != legslen[ilegslen][0]:
        en_vals.append(legslen[ilegslen][1])
        if len(len_chan) > 0 and ilegslen+1 - len_chan[-1] > maxlegn:
            maxlegn = ilegslen+1 - len_chan[-1]            
        len_chan.append(ilegslen+1)
        e = legslen[ilegslen][0]
    else:
        en_vals[-1] += legslen[ilegslen][1]
len_chan.append(0)
en_vals.append(0)
##print legslen
##print len_chan
##print 'fullenergy = ',fullenergy
en = (n+1)*max(d)+1
en2 = 0
i_en_vals = 0
ss = 0
leftenergy = fullenergy
for it in range(0, len(len_chan)-1):
    acs1 = len_chan[it]
    acs2 = len_chan[it+1]
    t = legslen[acs2][0]
    s = acs1-acs2
    n -= s
    fullenergy -= en_vals[it+1]
##    print 't =', t
##    print 's =', s
##    print 'full en =', fullenergy
##    print 'n =', n
    jj = 0
    j = len(legsen)-1
    leftenergy = fullenergy
    while jj < s -1 and j >= 0:
        if legsen[j][0] < t:
            jj += 1
            leftenergy -= legsen[j][1]
        j -= 1
##    print leftenergy, '+', en2
    if en > leftenergy + en2:
        en = leftenergy + en2
    if en2 > en:
        break
    en2 += en_vals[it+1]
print en
