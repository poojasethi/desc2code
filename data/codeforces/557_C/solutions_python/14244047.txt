import heapq
n = input()
l = map(int, raw_input().split())
d = map(int, raw_input().split())
ld = []
s = 0
for i in xrange(n):
	ld += [(l[i], d[i])]
	s += d[i]
ld.sort()
i = 0
mn = 0
hp =[]
while(i<n):
	c = ld[i][0]
	ii = i+1
	p = ld[i][1]
	l = []
	while(ii<n and ld[ii][0] == c):
		p += ld[ii][1]
		if hp != []:
			l += [-heapq.heappop(hp)]
			p += l[-1]
		ii += 1
	for j in xrange(i, ii):
		heapq.heappush(hp, -ld[j][1])
	for j in l:
		heapq.heappush(hp, -j)
	mn = max(mn, p)
	i = ii
print s-mn