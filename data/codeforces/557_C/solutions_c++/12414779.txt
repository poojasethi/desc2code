#define N (1<<17)
#define INFP (1<<30)
#include <bits/stdc++.h>

using namespace std;

vector<int> f[N];
int n,w,a[N],l[N],d[N],cnt[N];

int main()
{
	cin>>n;
	for(int i=1;i<=n;i++)
		scanf("%d",l+i);
	for(int i=1;i<=n;i++)
		scanf("%d",d+i);
	for(int i=1;i<=n;i++)
		f[l[i]].push_back(d[i]),cnt[d[i]]++;

	int sum=0,ct=n,res=INFP;
	for(int i=N-1;i>=1;i--)
	{
		if(!f[i].size()) continue;

		int cost=0;
		int re=max(0,ct-(int)(f[i].size()*2-1));
		for(int j=0;j<f[i].size();j++)
			cnt[f[i][j]]--;
		
		for(int j=1;j<=200;j++)
			if(re>cnt[j]) cost+=cnt[j]*j,re-=cnt[j];
			else
			{
				cost+=re*j;
				break;
			}

		res=min(res,sum+cost);
		for(int j=0;j<f[i].size();j++)
			sum+=f[i][j];
		ct-=f[i].size();
	}

	cout<<res<<endl;
}