#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<bitset>
using namespace std;
const int SIZEK=100010,SIZEN=160;
typedef bitset<150*150> BS;
//typedef bitset<25> BS;
int N,M,K;
int hash(int i,int j){return i*M+j;}
void print(BS &s){
	for(int i=0;i<N;i++){
		for(int j=0;j<M;j++){
			cout<<s[hash(i,j)];
		}
		cout<<endl;
	}
	cout<<endl;
}
char board[SIZEN][SIZEN]={0};
char cmd[SIZEK]={0};
BS now,goal,mask;
BS block[4];
//0123:��������
//����Ϊ��
int delta[4]={0};
int dx[4]={-1,1,0,0},dy[4]={0,0,-1,1};
int dirnum(char c){
	if(c=='U') return 0;
	else if(c=='D') return 1;
	else if(c=='L') return 2;
	else if(c=='R') return 3;
}
void bitmove(BS &s,int k){
	//cout<<s<<" "<<k<<endl;
	if(k>=0) s<<=k;
	else s>>=-k;
	//cout<<s<<endl;
}
BS tmp;
void move(char c){
	int d=dirnum(c);
	tmp=now&block[d];
	//print(tmp);
	now^=tmp;
	//print(now);
	//cout<<delta[d]<<endl;
	bitmove(now,delta[d]);
	//print(now);
	now|=tmp;
	now&=mask;
}
void work(void){
	if(now==goal){
		printf("0\n");
		return;
	}
	//cout<<goal<<endl;
	//print(now);
	//print(block[3]);
	for(int i=1;i<=K;i++){
		move(cmd[i-1]);
		//print(now);
		if(now==goal){
			printf("%d\n",i);
			return;
		}
	}
	printf("-1\n");
}
void prepare(void){
	for(int i=0;i<N;i++){
		for(int j=0;j<M;j++){
			if(board[i][j]=='.'||board[i][j]=='E') now[hash(i,j)]=mask[hash(i,j)]=1;
			if(board[i][j]=='E') goal[hash(i,j)]=1;
			if(board[i][j]=='#'){
				for(int d=0;d<4;d++){
					int i1=i+dx[d],j1=j+dy[d];
					if(0<=i1&&i1<N&&0<=j1&&j1<M){
						if(board[i1][j1]!='#') block[d^1][hash(i1,j1)]=1;
					}
				}
			}
		}
	}
}
void read(void){
	scanf("%d %d %d\n",&N,&M,&K);
	delta[0]=-M,delta[1]=M,delta[2]=-1,delta[3]=1;
	for(int i=0;i<N;i++) scanf("%s",board[i]);
	scanf("%s",cmd);
}
int main(){
	//freopen("robotinbasement.in","r",stdin);
	read();
	prepare();
	//cout<<now<<endl;now>>=5;cout<<now<<endl;print(now);
	//print(now);move('R');print(now);
	work();
	return 0;
}

