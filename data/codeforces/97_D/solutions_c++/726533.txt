#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li       	long long int
#define rep(i,to)	for(li i=0;i<((li)(to));i++)
#define pb       	push_back
#define sz(v)    	((li)v.size())
#define bit(n)   	(1ll<<(li)(n))


#define MAX 155
bitset<MAX> mp[MAX];
bitset<MAX> nmp[MAX];
bitset<MAX> pos[MAX];
bitset<MAX> goal[MAX];
li n,m,k,res;
string base[MAX],inst;

void check(){
	rep(i,n)if(goal[i]!=pos[i]) return;
	cout<<res<<endl;
	exit(0);
}

int main(){
	cin>>n>>m>>k;
	rep(i,n) cin>>base[i];
	cin>>inst;
	rep(i,n)rep(j,m)if(base[i][j]=='E') goal[i][j]=1;
	rep(i,n)rep(j,m)if(base[i][j]=='.' || base[i][j]=='E') pos[i][j]=1;
	rep(i,n)rep(j,m)if(base[i][j]=='#') mp[i][j]=1;
	rep(i,n) nmp[i]=mp[i];
	rep(i,n) nmp[i].flip();
	
	do{
		check();
		if(res==sz(inst)) break;
		bitset<MAX> tmp[MAX];
		rep(i,n)if(i){
			if(inst[res]=='U') tmp[i]=(mp[i-1]&pos[i])|(nmp[i]&pos[i+1]);
			if(inst[res]=='D') tmp[i]=(mp[i+1]&pos[i])|(nmp[i]&pos[i-1]);
			if(inst[res]=='R') tmp[i]=(nmp[i]&(pos[i]<<1))|((mp[i]>>1)&pos[i]);
			if(inst[res]=='L') tmp[i]=(nmp[i]&(pos[i]>>1))|((mp[i]<<1)&pos[i]);
		}
		rep(i,n) pos[i]=tmp[i];
	}while(++res);
	cout<<"-1"<<endl;
}
