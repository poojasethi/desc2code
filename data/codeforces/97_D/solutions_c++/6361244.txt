#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<vector>
#include<map>
#include<queue>
#include<string>
#include<bitset>
#include<iomanip>
#include<iostream>
#include<cmath>
using namespace std;

#define rep(i,x,y) for(i=(x);i<=(y);i++)
#define _rep(i,x,y) for(i=(x);i>=(y);i--)
#define REP(i,x,y) for(int i=(x);i<=(y);i++)
#define _REP(i,x,y) for(int i=(x);i>=(y);i--)
#define CL(S,x) memset(S,x,sizeof(S))
#define CP(S1,S2) memcpy(S1,S2,sizeof(S2))
#define ALL(x,S) for(x=S.begin();x!=S.end();x++)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define fi first
#define se second
#define upmin(x,y) x=min(x,y)
#define upmax(x,y) x=max(x,y)
#define pb push_back
#define COUT(S,x) cout<<fixed<<setprecision(x)<<S<<endl

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;

template<class T> inline void read(T&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};
template<class T> inline void read(T&x,T&y){read(x);read(y);}
template<class T> inline void read(T&x,T&y,T&z){read(x);read(y);read(z);}
inline char getc(){char c;for(c=getchar();c<=32;c=getchar());return c;}

const int D=150*150+1;
const int f1[]={-1,1,0,0};
const int f2[]={0,0,-1,1};
int n,m,L,i,j,k,l,p,t;
char a[155][155],str[100010];

bitset<D> now,all,last,ed,B1,B2,c[4];
#define num(x,y) (((x)-1)*m+(y))
int nn0(char c)
{
	if(c=='U')return 0;
	else if(c=='D')return 1;
	else if(c=='L')return 2;
	else return 3;
}
void pr(bitset<D> now){int i,j;rep(i,1,n){rep(j,1,m)printf("%d",int(now[num(i,j)]));printf("\n");}}
int main()
{
    //freopen("1.in","r",stdin);freopen("1.out","w",stdout);
	read(n,m,L);
	rep(i,1,n)scanf("%s",a[i]+1);
	scanf("%s",str+1);
	
	rep(i,1,n)B1[num(i,1)]=1;
	rep(i,1,n)B2[num(i,m)]=1;
	rep(i,1,n)rep(j,1,m)if(a[i][j]!='#')all[num(i,j)]=1;
	rep(i,1,n)rep(j,1,m)if(a[i][j]=='E')ed[num(i,j)]=1;
	rep(i,1,n)rep(j,1,m)if(a[i][j]!='#')rep(t,0,3)if(a[i+f1[t]][j+f2[t]]=='#')c[t][num(i,j)]=1;
	
	
	if(all==ed){printf("0\n");return 0;}
	now=all;
	
	rep(l,1,L)
	{
		int ch=nn0(str[l]);
		last=now&c[ch];
		
		if(ch==0)now>>=m;
		else if(ch==1)now<<=m;
		else if(ch==2){now^=now&B1;now>>=1;}
		else if(ch==3){now^=now&B2;now<<=1;}
		now&=all;now|=last;
		
		//pr(now);
		if(now==ed){printf("%d\n",l);return 0;}
		
	}
	printf("-1\n");
    scanf("\n");
    return 0;
}
