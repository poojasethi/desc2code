#pragma comment (linker,"/stack:102400000,102400000")
#include<stdio.h>
#include<string.h>
#include<stdlib.h> 
#include<time.h> 
#include<math.h>
#include<algorithm>
#include<vector>
#include<stack>
#include<bitset>
#include<queue>
#include<functional>
#include<iostream>
#include<string>
using namespace std;
const double PI=acos(-1.0);
#define N 100001
#define inf 0x7fffffff
#define fib 112233
#define mod 100007
#define ll __int64
#define able puts("0000000000000000000000")
template<class T_T> T_T f_max(T_T a,T_T b) { return a>b?a:b; }
template<class T_T> T_T f_min(T_T a,T_T b) { return a<b?a:b; }
template<class T_T> T_T f_abs(T_T a) { return a>0?a:-a; }
template<class T_T> T_T gcd(T_T a,T_T b){ return b?gcd(b,a%b):a; }
template<class T_T> void swap(T_T *a,T_T *b){T_T c;c=a;a=b;b=c;}
int n,m;

bitset<40000> bs,al,ar,au,ad,tp;
char mp[200][200];
char op[N];
int main()
{
    int q,w,e,r;
    int i,j,k;
    int t,pos,end;
    while(~scanf("%d%d%d",&n,&m,&k)){
        for(i=0;i<n;i++){
            scanf("%s",mp[i]);
        }
        al.set();
        ar.set();
        au.set();
        ad.set();
        bs.reset();
        for(i=0;i<n;i++){
            for(j=0;j<m;j++){
                pos=i*m+j;
                if(mp[i][j]=='.' || mp[i][j]=='E'){
                    bs.set(pos);
                    if(j!=0 && mp[i][j-1]!='#') al.reset(pos);
                    if(j!=m-1 && mp[i][j+1]!='#') ar.reset(pos);
                    if(i!=0 && mp[i-1][j]!='#') au.reset(pos);
                    if(i!=n-1 && mp[i+1][j]!='#') ad.reset(pos);
                }
                if(mp[i][j]=='E'){
                    end=pos;
                }
            }
        }
        scanf("%s",op);
        int ans=0;
        for(i=0;i<k;i++){
            if(bs.count()==1 && bs.test(end) ) break;
            if(op[i]=='L'){ tp=al;bs=( bs & al ) | ( (bs & tp.flip())>>1 );}
            if(op[i]=='R'){ tp=ar;bs=( bs & ar ) | ( (bs & tp.flip())<<1 );}
            if(op[i]=='U'){ tp=au;bs=( bs & au ) | ( (bs & tp.flip())>>m );}
            if(op[i]=='D'){ tp=ad;bs=( bs & ad ) | ( (bs & tp.flip())<<m );}
        }
        if(bs.count()==1 && bs.test(end) ) ans=i;
        else ans=-1;
        printf("%d\n",ans);
    }
    return 0;
}