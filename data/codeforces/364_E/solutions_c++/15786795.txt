#include<bits/stdc++.h>
#define For(i,x,y) for(int i = x;i <= y;i++)
typedef long long LL;
const int maxn = 3000;
int N, M, K;
int up[10], down[10];
int s[maxn][maxn];
LL ans;
char c[maxn];
int sum(int x1, int x2, int y1, int y2) { return s[x2][y2] - s[x1][y2] - s[x2][y1] + s[x1][y1]; }
void fz(int x1, int x2, int y1, int y2) {
	if(x1 == x2 || y1 == y2) return;
	if(x2 == x1 + 1 && y2 == y1 + 1) { ans += sum(x1, x2, y1, y2) == K; return; }
	if(sum( x1, x2,  y1, y2)<K)return;
	if(x2-x1>=y2-y1) {
		int mid = (x1 + x2) >> 1;
		fz(x1, mid, y1, y2);
		fz(mid, x2, y1, y2);
		For(i,y1,y2-1)
	    {
			up[0] = mid; down[0] = mid;
			For(p,1,K+1) up[p]=x1, down[p]=x2;
			For(j,i+1,y2) 
			{
				For(p,1,K+1)while(sum(up[p], mid, i, j) >= p) up[p]++;
				For(p,1,K+1)while(sum(mid, down[p], i, j) >= p) down[p]--;
				For(p,0,K)ans += (up[p] - up[p + 1]) * (down[K- p + 1] - down[K - p]);
			}
		}
	} else {
		int mid = (y1 + y2) >> 1;
		fz(x1, x2, y1, mid);
		fz(x1, x2, mid, y2);
		For(i,x1,x2-1)
		{
			up[0] = mid; down[0] = mid;
			For(p,1,K+1) up[p] = y1, down[p] = y2;
			For(j,i+1,x2)
			{
				For(p,1,K+1)while(sum(i, j, up[p], mid) >= p) up[p]++;
				For(p,1,K+1)while(sum(i, j, mid, down[p]) >= p) down[p]--;
				For(p,0,K)ans += (up[p] - up[p + 1]) * (down[K - p + 1] - down[K - p]);
			}
		}
	}
}

int main()
{
	scanf("%d%d%d", &N, &M, &K);
	For(i,1,N)
	{
		scanf("%s", c);
		For(j,1,M)
		  s[i][j] = s[i - 1][j] + s[i][j - 1] - s[i - 1][j - 1] + c[j - 1] - '0';
	}
	fz(0, N, 0, M);
	printf("%I64d",ans);
	putchar('\n');
	return 0;
}
                        