#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,n) for (int i=a;i<n;i++)
#define per(i,a,n) for (int i=n-1;i>=a;i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define SZ(x) ((int)(x).size())
typedef vector<int> VI;
typedef long long ll;
typedef pair<int,int> PII;
const int N=2510;
int cl[N][10],cr[N][10],a[N][N];
int tmp[10],tl[10],tr[10];
int n,m,k;
ll ans;
char s[N];
void solve(int x1,int x2,int y1,int y2) {
	if (x2-x1<=y2-y1) {
		int md=(y1+y2)>>1;
		rep(x,x1,x2+1) {
			int p=md; cl[x][0]=md;
			rep(i,1,k+2) {
				while (p>=y1&&!a[x][p]) --p;
				cl[x][i]=max(p--,y1-1);
			}
			p=md+1; cr[x][0]=md;
			rep(i,1,k+2) {
				while (p<=y2&&!a[x][p]) ++p;
				cr[x][i]=min(p++,y2+1);
			}
		}
		rep(xl,x1,x2+1) {
			tl[0]=md; tr[0]=md; rep(i,1,k+2) tl[i]=y1-1,tr[i]=y2+1;
			rep(xr,xl,x2+1) {
				rep(i,1,k+2) tmp[i]=tl[i];
				int p1=1,p2=1;
				rep(i,1,k+2) if (tmp[p1]>cl[xr][p2]) tl[i]=tmp[p1++];
					else tl[i]=cl[xr][p2++];
				rep(i,1,k+2) tmp[i]=tr[i];
				p1=1,p2=1;
				rep(i,1,k+2) if (tmp[p1]<cr[xr][p2]) tr[i]=tmp[p1++];
					else tr[i]=cr[xr][p2++];
				rep(j,0,k+1) ans+=(tl[j]-tl[j+1])*(tr[k-j+1]-tr[k-j]);
			}
		}
		if (y1<md) solve(x1,x2,y1,md-1);
		if (md<y2) solve(x1,x2,md+1,y2);
	} else {
		int md=(x1+x2)>>1;
		rep(y,y1,y2+1) {
			int p=md; cl[y][0]=md;
			rep(i,1,k+2) {
				while (p>=x1&&!a[p][y]) --p;
				cl[y][i]=max(p--,x1-1);
			}
			p=md+1; cr[y][0]=md;
			rep(i,1,k+2) {
				while (p<=x2&&!a[p][y]) ++p;
				cr[y][i]=min(p++,x2+1);
			}
		}
		rep(yl,y1,y2+1) {
			tl[0]=md; tr[0]=md; rep(i,1,k+2) tl[i]=x1-1,tr[i]=x2+1;
			rep(yr,yl,y2+1) {
				rep(i,1,k+2) tmp[i]=tl[i];
				int p1=1,p2=1;
				rep(i,1,k+2) if (tmp[p1]>cl[yr][p2]) tl[i]=tmp[p1++];
					else tl[i]=cl[yr][p2++];
				rep(i,1,k+2) tmp[i]=tr[i];
				p1=1,p2=1;
				rep(i,1,k+2) if (tmp[p1]<cr[yr][p2]) tr[i]=tmp[p1++];
					else tr[i]=cr[yr][p2++];
				rep(j,0,k+1) ans+=(tl[j]-tl[j+1])*(tr[k-j+1]-tr[k-j]);
			}
		}
		if (x1<md) solve(x1,md-1,y1,y2);
		if (md<x2) solve(md+1,x2,y1,y2);
	}
}
int main() {
	scanf("%d%d%d",&n,&m,&k);
	rep(i,1,n+1) {
		scanf("%s",s+1);
		rep(j,1,m+1) a[i][j]=s[j]-'0';
	}
	solve(1,n,1,m);
	printf("%I64d\n",ans);
}
