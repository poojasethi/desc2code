#include <bits/stdc++.h>
using namespace std;

const int N = 2510;
int sum[N][N];
int K;
long long ans;
int lt[N],rt[N];
int get_sum(int x1,int y1,int x2,int y2)
{
    return sum[x2][y2] - sum[x1 - 1][y2] - sum[x2][y1 - 1] + sum[x1 - 1][y1 - 1];
}

void solve(int x1,int y1,int x2,int y2)
{
    if(x1 == x2 && y1 == y2) {
        if(get_sum(x1,y1,x2,y2) == K) ans ++;
        return;
    }
    if(x2 - x1 > y2 - y1) {
        int mid = (x2 + x1) >> 1;
        for(int i = y1; i <= y2; i ++) {
            for(int j = 0; j <= K; j ++) {
                lt[j] = x1,rt[j] = x2;
            }
            for(int j = i; j <= y2; j ++) {
                for(int k = 0; k <= K; k ++) {
                    while(lt[k] <= mid && get_sum(lt[k],i,mid,j) > k) lt[k] ++;
                    while(rt[k] > mid && get_sum(mid + 1,i,rt[k],j) > k) rt[k] --;
                }
                for(int k = 0; k <= K; k ++) {
                    int x,y;
                    if(k == 0) x = mid - lt[k] + 1;
                    else x = lt[k - 1] - lt[k];
                    if(k == K) y = rt[K - k] - mid;
                    else y = rt[K - k] - rt[K - k - 1];
                    ans += x * y;
                }
            }
        }
        solve(x1,y1,mid,y2);
        solve(mid + 1,y1,x2,y2);
    }
    else {
        int mid = (y2 + y1) >> 1;
        for(int i = x1; i <= x2; i ++) {
            for(int j = 0; j <= K; j ++) {
                lt[j] = y1,rt[j] = y2;
            }
            for(int j = i; j <= x2; j ++) {
                for(int k = 0; k <= K; k ++) {
                    while(lt[k] <= mid && get_sum(i,lt[k],j,mid) > k) lt[k] ++;
                    while(rt[k] > mid && get_sum(i,mid + 1,j,rt[k]) > k) rt[k] --;
                }
                for(int k = 0; k <= K; k ++) {
                    int x,y;
                    if(k == 0) x = mid - lt[k] + 1;
                    else x = lt[k - 1] - lt[k];
                    if(k == K) y = rt[K - k] - mid;
                    else y = rt[K - k] - rt[K - k - 1];
                    ans += x * y;
                }
            }
        }
        solve(x1,y1,x2,mid);
        solve(x1,mid + 1,x2,y2);
    }
}

int main()
{
    int n,m;
    char s[N];
    scanf("%d%d%d",&n,&m,&K);
    for(int i = 1; i <= n; i ++) {
        scanf("%s",s + 1);
        for(int j = 1; j <= m; j ++) {
            sum[i][j] = sum[i - 1][j] + sum[i][j - 1] + (s[j] == '1') - sum[i - 1][j - 1];
        }
    }
    solve(1,1,n,m);
    cout << ans << endl;
    return 0;
}

	  			   	  		 	     			