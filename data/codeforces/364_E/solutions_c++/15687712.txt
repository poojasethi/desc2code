#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<cmath>
using namespace std;
const int maxn=10010;
int n,m,k,s[maxn][maxn],up[maxn],down[maxn];
long long ans;
int sum(int x,int xx,int y,int yy)
{
	return s[xx][yy]-s[xx][y]-s[x][yy]+s[x][y];
}
void solve(int x,int xx,int y,int yy,bool dir)
{
	if(x==xx||y==yy) return ;
	if((x+1==xx)&&(y+1==yy)) {ans+=sum(x,xx,y,yy)==k;return ;}
	if(dir)
	{
		int mid=(x+xx)>>1;
		solve(x,mid,y,yy,!dir);solve(mid,xx,y,yy,!dir);
		for(int i=y;i<yy;i++)
		{
			up[0]=down[0]=mid;
			for(int j=1;j<=k+1;j++) {up[j]=x;down[j]=xx;}
			for(int j=i+1;j<=yy;j++)
			{
				for(int p=1;p<=k+1;p++) while(sum(up[p],mid,i,j)>=p) up[p]++;
				for(int	p=1;p<=k+1;p++) while(sum(mid,down[p],i,j)>=p) down[p]--;
				for(int p=0;p<=k;p++)	ans+=(up[p]-up[p+1])*(down[k-p+1]-down[k-p]);
			}
		}
	}
	else 
	{
		int mid=(y+yy)>>1;
		solve(x,xx,y,mid,!dir);solve(x,xx,mid,yy,!dir);
		for(int i=x;i<xx;i++)
		{
			up[0]=down[0]=mid;
			for(int j=1;j<=k+1;j++) {up[j]=y;down[j]=yy;}
			for(int j=i+1;j<=xx;j++)
			{
				for(int p=1;p<=k+1;p++) while(sum(i,j,up[p],mid)>=p) up[p]++;
				for(int p=1;p<=k+1;p++) while(sum(i,j,mid,down[p])>=p) down[p]--;
				for(int p=0;p<=k;p++) 	ans+=(up[p]-up[p+1])*(down[k-p+1]-down[k-p]);
			}
		}
	}
}
int main()
{
	while(scanf("%d%d%d",&n,&m,&k)==3&&n)
	{
		memset(s[0],0,sizeof(s[0]));
		for(int i=1;i<=n;i++)
		{
			char c[maxn];scanf("%s",c);
			for(int j=1;j<=m;j++)
				s[i][j]=s[i-1][j]+s[i][j-1]-s[i-1][j-1]+c[j-1]-'0';
		}
		ans=0;solve(0,n,0,m,false);printf("%I64d\n",ans);
	}
 	return 0;
}

           