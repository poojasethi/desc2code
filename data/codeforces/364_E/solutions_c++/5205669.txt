#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef double ld;

const int MAX=2500+10;
const int NUM=7;

int n,m,K;
vector<string> g;

void rot(vector<string> & g)
{
	int i,j;
	vector<string> tmp;
	REP2(i,0,(int)g[0].size())
	{
		string a;
		REP2(j,0,(int)g.size())
			a+=g[j][i];
		tmp.pb(a);
	}
	g=tmp;
}

int sum[MAX][MAX];
int pl[MAX][NUM],pr[MAX][NUM];

int get(int a,int b,int c,int d)
{
	--a;--c;
	return sum[b][d]-sum[b][c]-sum[a][d]+sum[a][c];
}

LL Answer=0;

void work(vector<string> g)
{
	if(g.size()==0 || g[0].size()==0)
		return;
	if(g.size()>g[0].size())
		rot(g);
	int i,j;
	int mid=(g.size()+1)/2;
	int n=g.size();
	int m=g[0].size();
	REP2(i,0,n)
		REP2(j,0,m)
			sum[i+1][j+1]=sum[i][j+1]+sum[i+1][j]-sum[i][j]+(g[i][j]=='1');
	REP(i,1,n)
		REP(j,0,K)
		{
			pl[i][j]=1;
			pr[i][j]=m;
		}
	for(i=n;i>=1;--i)
		for(j=i;j<=n;++j)
		{
			int k=0;
			REP(k,0,K)
			{
				while(pl[j][k]<=mid && get(i,j,pl[j][k],mid)>k)
					++pl[j][k];
				while(pr[j][k]>mid && get(i,j,mid+1,pr[j][k])>k)
					--pr[j][k];
			}
			REP(k,0,K)
			{
				LL ll=(k?(pl[j][k-1]-pl[j][k]):(mid+1-pl[j][k]));
				LL rr=pr[j][K-k]-((K-k)?pr[j][K-k-1]:mid-1);
				Answer+=ll*rr;
			}
		}
	vector<string> ll,rr;
	REP2(i,0,n)
	{
		string c,d;
		REP2(j,0,m)
			if(j+1<mid)
				c+=g[i][j];
			else if(j+1>mid)
				d+=g[i][j];
		ll.pb(c);
		rr.pb(d);
	}
	work(ll);
	work(rr);
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
	int i;
	cin>>n>>m>>K;
	REP(i,1,n)
	{
		string k;
		cin>>k;
		g.pb(k);
	}
	work(g);
	cout<<Answer<<endl;
	return 0;
}
