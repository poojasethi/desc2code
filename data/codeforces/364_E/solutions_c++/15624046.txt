#include<ctime>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<string>
#include<cassert>
#include<cmath>
#include<vector>
#include<queue>
#include<stack>
#include<map>
#include<climits>
#define X first
#define Y second
#define DB double
#define MP make_pair
#define LL long long
#define pb push_back
#define sqr(_) ((_)*(_))
#define INF 0x3f3f3f3f
#define pii pair<int,int>
#define pdd pair<DB,DB>
#define ull unsigned LL
#define DEBUG(...) fprintf(stderr,__VA_ARGS__)
using namespace std;
const int MAXN=2600,MAXK=7;
int n,m,K,sum[MAXN][MAXN],val[MAXN][MAXN];
char s[MAXN];
LL ans=0;
int getsum(int x1,int y1,int x2,int y2)
{
	return sum[x2][y2]-sum[x1-1][y2]-sum[x2][y1-1]+sum[x1-1][y1-1];
}
void FindL(int r1,int r2,int c1,int c2)
{
	int mid=(c1+c2)>>1;
	for(int i=r1;i<=r2;i++)
	{
		int cnt[2][MAXN]={};
		for(int j=r2;j>=i;j--)
		{
			for(int k=0;k<=K;k++)
			{
				while(mid-cnt[0][k]>=c1&&getsum(i,mid-cnt[0][k],j,mid)<=k)
					cnt[0][k]++;
				while(mid+cnt[1][k]+1<=c2&&getsum(i,mid+1,j,mid+cnt[1][k]+1)<=k)
					cnt[1][k]++;
			}
			for(int k=0;k<=K;k++)
			{
				LL sa=k==0?cnt[0][k]:cnt[0][k]-cnt[0][k-1],
				   sb=k==K?cnt[1][K-k]:cnt[1][K-k]-cnt[1][K-k-1];
				ans=ans+sa*sb;
			}
		}
	}	
}
void FindH(int r1,int r2,int c1,int c2)
{
	int mid=(r2+r1)>>1;
	for(int i=c1;i<=c2;i++)
	{
	   	int cnt[2][MAXK]={};
	   	for(int j=c2;j>=i;j--)
	   	{
	    	for(int k=0;k<=K;k++)
	    	{
	   			while(mid-cnt[0][k]>=r1&&getsum(mid-cnt[0][k],i,mid,j)<=k)
	   				cnt[0][k]++;
	   			while(mid+cnt[1][k]+1<=r2&&getsum(mid+1,i,mid+cnt[1][k]+1,j)<=k)
	   				cnt[1][k]++;
	   		}
	    	for(int k=0;k<=K;k++)
	    	{
	    		LL sa=k==0?cnt[0][k]:cnt[0][k]-cnt[0][k-1],
	    		   sb=k==K?cnt[1][0]:cnt[1][K-k]-cnt[1][K-k-1];
	    		ans=ans+sa*sb;
	    	}
	   	}
	}
}
void solve(int r1,int r2,int c1,int c2)
{
	if(r1==r2&&c1==c2)
	{
		if(val[r1][c1]==K)
			ans++;
		return;
	}
	if(r2-r1>=c2-c1)
	{
		int mid=(r2+r1)>>1;
		FindH(r1,r2,c1,c2);
	    solve(r1,mid,c1,c2);
	    solve(mid+1,r2,c1,c2);
	}
	else
	{
		int mid=(c1+c2)>>1;
		FindL(r1,r2,c1,c2);
		solve(r1,r2,c1,mid);
		solve(r1,r2,mid+1,c2);
	}
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("rect.in","r",stdin);
	freopen("rect.out","w",stdout);
#endif
	cin>>n>>m>>K;
	for(int i=1;i<=n;i++)
	{
		scanf("%s",s+1);
		for(int j=1;j<=m;j++)
		{
			if(s[j]=='1')
				val[i][j]=1;
			sum[i][j]=sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1]+val[i][j];
		}
	}
	solve(1,n,1,m);
	cout<<ans<<endl;
}
                                                          