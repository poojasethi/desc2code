#include <algorithm>
#include <cstdio>
using namespace std;

#define MX 2505
int n, m, k;
int a[2][MX][MX], s[2][MX][MX];
int l[10], r[10], lc[10], rc[10];

long long calc(int x1, int y1, int x2, int y2, int id) {
	if (y2 - y1 < x2 - x1) {
		swap(x1, y1);
		swap(x2, y2);
		id = 1 - id;
	}
	if (y2 - y1 == 1) return a[id][x1][y1] == k;
	int i, j, c, md = (y1 + y2) / 2;
	long long rlt = calc(x1, y1, x2, md, id) + calc(x1, md, x2, y2, id);
	
	for (i = x1; i < x2; i++) {
		l[0] = md, r[0] = md - 1;
		for (c = 1; c <= k + 1; c++) {
			l[c] = y1, r[c] = y2 - 1;
			lc[c] = rc[c] = 0;
		}
		for (j = i; j < x2; j++) {
			for (c = 1; c <= k + 1; c++) {
				lc[c] += s[id][j][md] - s[id][j][l[c]];
				for (; l[c] < md && lc[c] >= c; l[c]++) lc[c] -= s[1 - id][l[c]][j + 1] - s[1 - id][l[c]][i];
				rc[c] += s[id][j][r[c] + 1] - s[id][j][md];
				for (; r[c] >= md && rc[c] >= c; r[c]--) rc[c] -= s[1 - id][r[c]][j + 1] - s[1 - id][r[c]][i];
			}
			for (c = 0; c <= k; c++) rlt += (l[c] - l[c + 1]) * (r[k - c + 1] - r[k - c]);
		}
	}
	return rlt;
}

main() {
//	freopen("in.txt", "r", stdin);
//	freopen("out.txt", "w", stdout);

	int i, j;
	char t[MX];
	
	scanf("%d%d%d", &n, &m, &k);
	for (i = 0; i < n; i++) {
		scanf("%s", t);
		for (j = 0; j < m; j++) a[0][i][j] = a[1][j][i] = t[j] - '0';
	}
	for (i = 0; i < n; i++)
		for (j = 0; j < m; j++) s[0][i][j + 1] = s[0][i][j] + a[0][i][j];
	for (i = 0; i < m; i++)
		for (j = 0; j < n; j++) s[1][i][j + 1] = s[1][i][j] + a[1][i][j];
	
	printf("%I64d\n", calc(0, 0, n, m, 0));
}
