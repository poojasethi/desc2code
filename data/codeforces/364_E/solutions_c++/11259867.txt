#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iostream>
#include<algorithm>
#define maxn 3010

using namespace std;

int n,m,K;
int up[maxn],down[maxn];
int s[maxn][maxn];
long long ans;
char c[maxn];

int sum(int x1,int x2,int y1,int y2)
{
	return s[x2][y2]-s[x1][y2]-s[x2][y1]+s[x1][y1];
}

void divide(int x1,int x2,int y1,int y2,bool cur)
{
	if (x1==x2 || y1==y2) return;
	if (x2==x1+1 && y2==y1+1) {ans+= sum(x1,x2,y1,y2)==K;return;}
	if (cur)
	{
		int mid=(x1+x2)/2;
		divide(x1,mid,y1,y2,cur^1);
		divide(mid,x2,y1,y2,cur^1);
		for (int i=y1;i<y2;i++)
		{
			up[0]=mid;down[0]=mid;
			for (int k=1;k<=K+1;k++) up[k]=x1,down[k]=x2;
			for (int j=i+1;j<=y2;j++)
			{
				for (int k=1;k<=K+1;k++) while (sum(up[k],mid,i,j)>=k) up[k]++;
				for (int k=1;k<=K+1;k++) while (sum(mid,down[k],i,j)>=k) down[k]--;
				for (int k=0;k<=K;k++) ans+=(up[k]-up[k+1])*(down[K-k+1]-down[K-k]);
			}
		}
	}
	else
	{
		int mid=(y1+y2)/2;
		divide(x1,x2,y1,mid,cur^1);
		divide(x1,x2,mid,y2,cur^1);
		for (int i=x1;i<x2;i++)
		{
			up[0]=mid;down[0]=mid;
			for (int k=1;k<=K+1;k++) up[k]=y1,down[k]=y2;
			for (int j=i+1;j<=x2;j++)
			{
				for (int k=1;k<=K+1;k++) while (sum(i,j,up[k],mid)>=k) up[k]++;
				for (int k=1;k<=K+1;k++) while (sum(i,j,mid,down[k])>=k) down[k]--;
				for (int k=0;k<=K;k++) ans+=(up[k]-up[k+1])*(down[K-k+1]-down[K-k]);
			}
		}
	}
}

int main()
{
	scanf("%d%d%d",&n,&m,&K);
	for (int i=1;i<=n;i++)
	{
		scanf("%s",c);
		for (int j=1;j<=m;j++)
		  s[i][j]=s[i-1][j]+s[i][j-1]-s[i-1][j-1]+c[j-1]-'0';
	}
	divide(0,n,0,m,0);
	printf("%I64d\n",ans);
	return 0;
}
