#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;
typedef long long LL;
const int maxn=2510;
int m,n,K;
int s[maxn][maxn];
int P[7],Q[7];
LL ans=0;
int S(int a,int b,int c,int d) {return s[c][d]-s[a-1][d]-s[c][b-1]+s[a-1][b-1];}

void work(int a,int b,int c,int d){
	if(a==c&&b==d) {ans+=S(a,b,c,d)==K;return;}
	int mid;
	if(c-a>d-b){
		mid=(a+c)>>1;
		for(int R=b;R<=d;R++){
			for(int i=0;i<=K;i++) P[i]=mid-a+1,Q[i]=c-mid;
			for(int L=R;L>=b;L--){
				for(int k=0;k<=K;k++) for(;P[k]&&S(mid-P[k]+1,L,mid,R)>k;P[k]--);
				for(int k=0;k<=K;k++) for(;Q[k]&&S(mid+1,L,mid+Q[k],R)>k;Q[k]--);
				for(int k=0;k<=K;k++) ans+=LL(P[k]-(k==0?0:P[k-1]))*(Q[K-k]-(k==K?0:Q[K-k-1]));
			}
		}
		work(a,b,mid,d);work(mid+1,b,c,d);
	}
	else{
		mid=(b+d)>>1;
		for(int D=a;D<=c;D++){
			for(int i=0;i<=K;i++) P[i]=mid-b+1,Q[i]=d-mid;
			for(int U=D;U>=a;U--){
				for(int k=0;k<=K;k++) for(;P[k]&&S(U,mid-P[k]+1,D,mid)>k;P[k]--);
				for(int k=0;k<=K;k++) for(;Q[k]&&S(U,mid+1,D,mid+Q[k])>k;Q[k]--);
				for(int k=0;k<=K;k++) ans+=LL(P[k]-(k==0?0:P[k-1]))*(Q[K-k]-(k==K?0:Q[K-k-1]));
			}
		}
		work(a,b,c,mid);work(a,mid+1,c,d);
		
	}
}

int main(){
	char t;
	scanf("%d%d%d",&m,&n,&K);
	for(int i=1;i<=m;i++){
		for(int j=1;j<=n;j++){
			while((t=getchar())&&t!='0'&&t!='1');
			//putchar(t);
			s[i][j]=t-'0'+s[i-1][j]+s[i][j-1]-s[i-1][j-1];
		}
		//puts("");
	}
	work(1,1,m,n);
	printf("%I64d\n",ans);
	return 0;
}
