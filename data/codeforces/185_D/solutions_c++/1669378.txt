#include <cstdio>
#include <iostream>
using namespace std;

typedef long long int64;

int64 k, l, r, p, h, ans;

int64 power(int64 a, int64 b, int64 c) {
    int64 res = 1;
    while (b) {
        if (b & 1) res = res * a % c;
        a = a * a % c;
        b >>= 1;
    }
    return res;
}

int64 inv(int64 x, int64 p) {
    return power(x, p - 2, p);
}

int main() {
    ios::sync_with_stdio(false);
    int T;
    cin >> T;
    while (T--) {
        cin >> k >> l >> r >> p;
        h = power(2, l, p - 1);
        if (h == 0) h = p - 1;
        h = power(k, h, p);
        if (h == 0) ans = 1; else
        if (h == 1) ans = power(2, r - l + 1, p); else
        ans = (power(k, power(2, r + 1, p - 1), p) - 1 + p) * inv(h - 1, p) % p;
        if (k & 1) ans = ans * inv(power(2, r - l, p), p) % p;
        cout << ans << endl;
    }
    
    return 0;
}
