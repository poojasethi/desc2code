#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long i64;

i64 n,mo,ans;

i64 mul(i64 a,i64 b,i64 mo)
{
    i64 c = 1;
    while (b){if (b & 1) c = c*a%mo;b >>= 1;a = a*a%mo;}
    return c;
}

i64 rev(i64 x)
{
    return mul(x,mo-2,mo);
}

i64 G(i64 x,i64 y)
{
    if (x % mo) return (mul(x,mul(2,y,mo-1),mo)-1+mo)%mo;
    return mo-1;
}

i64 PI(i64 l,i64 r)
{
    i64 Gl = G(n,l);
    if (Gl) return G(Gl+1,r-l+1)*rev(Gl)%mo*((n&1)? rev(mul(2,r-l,mo)):1)%mo;
    else return (n & 1)? 2:mul(2,r-l+1,mo);
}

int main()
{
    i64 T,l,r;
    
    scanf("%I64d",&T);
    while (T--)
    {
        scanf("%I64d %I64d %I64d %I64d",&n,&l,&r,&mo);
        printf("%I64d\n",PI(l,r)%mo);
    }
    
    return 0;
}
