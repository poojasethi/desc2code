#include <cassert>
#include <cstdio>

#include <iostream>

using namespace std;

long long pow( long long a, long long n, long long mod ) {
  long long r = 1;
  a = a % mod;
  for (; n != 0; n >>= 1) {
    if (n & 1)
      r = (r * a) % mod;
    a = (a * a) % mod;
  }
  return r;
}

int main() {
  int n;
  cin >> n;
  for (int i = 0; i < n; i++) {
    long long k, l, r, p;
    cin >> k >> l >> r >> p;
    long long t = pow(k, pow(2, l, p - 1) + p - 1, p);
    long long t_r = pow(t, pow(2, r - l + 1, p - 1) + p - 1, p);
    long long ans = pow(2, r - l + 1, p);
    if (t != 1) {
      long long a = (t_r + p - 1) % p;
      long long b = (t + p - 1) % p;
      ans = (a * pow(b, p - 2, p)) % p;
    }
    if (k % 2) {
      ans = (ans * pow(2, (r - l) % (p - 1) * (p - 2), p)) % p;
    }
    cout << ans << endl;
  }
  return 0;
}
