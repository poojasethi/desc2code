#include <cstdio>
#include <iostream>

using namespace std;

typedef long long int64;

int64 pow(int64 a, int64 m, int64 p) {
  int64 ret = 1L;
  for (; m; m >>= 1) {
    if (m & 1) ret = ret * a % p;
    a = a * a % p;
  }
  return ret;
}

int64 run(int64 k, int64 m, int64 p) { // k^(2^m) mod p
  int64 q = pow(2L, m, p - 1);
  return k % p == 0 ? 0 : pow(k, q, p);
}

int main() {
  int cas;
  cin >> cas;
  while (cas--) {
    int64 k, L, R, p;
    cin >> k >> L >> R >> p;
    if (p == 2) {
      cout << 1 - k % 2 << endl;
      continue;
    }
    int64 B = run(k, L, p);
    int64 ret;
    if (B == 1) {
      ret = pow(2L, R - L + 1, p);
    } else {
      int64 A = run(k, R + 1, p);
      ret = (A + p - 1) * pow(B + p - 1, p - 2, p) % p;
    }
    if (k % 2) {
      int64 C = pow(2L, R - L, p);
      ret = ret * pow(C, p - 2, p) % p;
    }
    cout << ret << endl;
  }
  return 0;
}
