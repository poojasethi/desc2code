#include <cstdio>
#include <algorithm>
using namespace std;
typedef long long ll;
const int mod = 1000000007;
const int N = 2005;

ll dp[N][N], sum[N];
char a[N];
int main() {
	int n, K;
	scanf("%d%d", &n, &K);
	scanf("%s", a);
	sum[0] = dp[0][0] = 1;
	for(int i = 1; i <= n; i ++) {
		for(int j = 0; j <= K; j ++) {
			dp[i][j] = sum[j] * (a[i-1] - 'a');
			int x = max(i - j/(n-i+1), 0);
			for(int k = x; k < i; k ++) {
				dp[i][j] += dp[k][j - (i - k) * (n - i + 1)] * ('z' - a[i - 1]);
			}
			dp[i][j] %= mod;
			sum[j] = (sum[j] + dp[i][j]) % mod;
		}
	}
	ll ret = (K == 0) ? 1 : 0;
	for(int i = 1; i <= n; i ++) {
		ret = (ret + dp[i][K]) % mod;
	}
	printf("%I64d\n", ret);
	return 0;
}
	  	  					   				 	   	