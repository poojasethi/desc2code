#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
using namespace std;

const int MAX=100000+10;

int n,m;
int x[MAX],y[MAX],c[MAX];

int begin[MAX],next[MAX],t[MAX],tot;
int in[MAX];

void add(int u,int v)
{
	t[++tot]=v;
	next[tot]=begin[u];
	begin[u]=tot;
}

int dfn[MAX],low[MAX],instack[MAX],st[MAX],lab;
int num[MAX],tt;

void Tarjan(int u)
{
	dfn[u]=low[u]=++lab;
	st[++st[0]]=u;instack[u]=1;
	int i,v;
	for(i=begin[u];i;i=next[i])
	{
		v=t[i];
		if(!dfn[v])
		{
			Tarjan(v);
			low[u]=min(low[u],low[v]);
		}
		else if(instack[v])
			low[u]=min(low[u],dfn[v]);
	}
	if(dfn[u]==low[u])
	{
		++tt;
		do
		{
			v=st[st[0]--];
			instack[v]=0;
			num[v]=tt;
		}while(v!=u);
	}
}

int begin2[MAX],next2[MAX],tot2,t2[MAX],CC[MAX];

void add2(int u,int v,int cb)
{
	++tot2;
	t2[tot2]=v;
	next2[tot2]=begin2[u];
	begin2[u]=tot2;
	CC[tot2]=cb;
}

int hash[MAX],ans[MAX];

void dfs(int u)
{
	hash[u]=1;
	int i,v;
	for(i=begin2[u];i;i=next2[i])
	{
		v=t2[i];
		if(!hash[v])
		{
			dfs(v);
			if(CC[i])ans[++ans[0]]=CC[i];
		}
	}
}

int main()
{
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
	int i;
	scanf("%d %d",&n,&m);
	for(i=1;i<=m;++i)
	{
		scanf("%d %d %d",&x[i],&y[i],&c[i]);
		if(!c[i])
			add(x[i],y[i]);
	}
	for(i=1;i<=n;++i)
		if(!dfn[i])
			Tarjan(i);
	for(i=1;i<=m;++i)
		if(num[x[i]]!=num[y[i]] && c[i]==0)
		{
			++in[num[y[i]]];
			add2(num[x[i]],num[y[i]],0);
		}
	for(i=1;i<=m;++i)
		if(num[x[i]]!=num[y[i]] && in[num[y[i]]]==0 && c[i]==1)
			add2(num[x[i]],num[y[i]],i);
	dfs(num[1]);
	for(i=1;i<=lab;++i)
		if(!hash[i])
		{
			printf("-1\n");
			return 0;
		}
	printf("%d\n",ans[0]);
	for(i=1;i<=ans[0];++i)
		printf("%d\n",ans[i]);
	return 0;
}
