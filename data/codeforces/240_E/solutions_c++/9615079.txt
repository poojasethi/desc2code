#include <cstdio>
const int N=(int)1e5+5,M=N,logN=12,inf=1e9;

int n,m,c[M];

struct edge{
	int u,v,w;
} E[M];
struct rec{
	rec *x,*y; int z;
} seq[M*logN],*newrec=seq;
struct node{
	int in,pre;
	bool vis,ins;
	int belong;
} V[N];
int main(){
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;i++){
		scanf("%d%d%d",&E[i].u,&E[i].v,&E[i].w);
		c[i]=E[i].w;
	}
	int tm=m;
	int root=1;
	while(true){
		int nn=0,mm=0;
		for(int i=1;i<=n;i++) V[i].in=inf,V[i].pre=0,V[i].belong=0,V[i].vis=false;
		V[root].in=0;
		V[root].vis=true;
		for(int i=1;i<=m;i++) if(E[i].u!=E[i].v&&V[E[i].v].in>E[i].w){
			V[E[i].v].in=E[i].w;
			V[E[i].v].pre=i;
		}
		for(int i=1;i<=n;i++) if(i!=root)
			if(V[i].in==inf)
				return puts("-1"),0;
			else
				newrec[V[i].pre].z++;
		for(int i=1;i<=n;i++){
			int j;
			for(j=i;!V[j].vis;j=E[V[j].pre].u)
				V[j].vis=V[j].ins=true;
			if(j!=root&&V[j].ins){
				V[j].belong=++nn;
				for(int k=E[V[j].pre].u;k!=j;k=E[V[k].pre].u)
					V[k].belong=nn;
			}
			for(j=i;V[j].ins;j=E[V[j].pre].u)
				V[j].ins=false;
		}
		if(nn==0){
			newrec+=m;
			break;
		}
		for(int i=1;i<=n;i++) if(!V[i].belong) V[i].belong=++nn;
		for(int i=1;i<=m;i++) if(V[E[i].u].belong!=V[E[i].v].belong){
			++mm;
			newrec[m+mm].x=newrec+i;
			newrec[m+mm].y=newrec+V[E[i].v].pre;
			E[mm].w=E[i].w-V[E[i].v].in;
			E[mm].u=V[E[i].u].belong;
			E[mm].v=V[E[i].v].belong;
		}
		newrec+=m;
		n=nn;
		m=mm;
		root=V[root].belong;
	}
	int ans=0;
	for(int i=newrec-seq;i>tm;i--) seq[i].x->z+=seq[i].z,seq[i].y->z-=seq[i].z;
	for(int i=1;i<=tm;i++) if(c[i]&&seq[i].z) ans++;
	printf("%d\n",ans);
	for(int i=1;i<=tm;i++) if(c[i]&&seq[i].z) printf("%d ",i);
	puts("");
}
