#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<cstdio>
#include<vector>
using namespace std;
#define N 110000
#define INF 1000000000
int mincost[N],pre[N],rec[N],id[N],vis[N],use[N*20],ans=0,w[N],n,m;
int A[N*20],B[N*20];
struct rec{
       int u,v,w,id;
       }e[N];
bool directed_mst(int root){
     int cnt=n,E=m;
     while(1){
       for(int i=1;i<=cnt;i++)mincost[i]=INF,pre[i]=rec[i]=0;
       for(int i=1;i<=m;i++)
         if(e[i].v!=root && e[i].u!=e[i].v && e[i].w<mincost[e[i].v]){
           mincost[e[i].v]=e[i].w;
           rec[e[i].v]=e[i].id;
           pre[e[i].v]=e[i].u;
         }
       for(int i=1;i<=cnt;i++)
         if(i!=root && !pre[i])return 0;    
       for(int i=1;i<=cnt;i++)vis[i]=id[i]=0;
       int num=0;
       for(int i=1;i<=cnt;i++){
         if(i!=root){
           ans+=mincost[i];
           use[rec[i]]++;
         }       
         int u=i;
         while(!vis[u] && u!=root)vis[u]=i,u=pre[u];
         if(u==root || vis[u]!=i)continue;
         id[u]=++num;
         int s=u;
         u=pre[u];
         while(u!=s)id[u]=num,u=pre[u];
       }
       if(num==0)break;
       for(int i=1;i<=cnt;i++)
         if(!id[i])id[i]=++num;
        for(int i=1;i<=m;i++){
          if(id[e[i].u]!=id[e[i].v]){
            e[i].w-=mincost[e[i].v];
            ++E;
            A[E]=e[i].id;B[E]=rec[e[i].v];
            e[i].id=E;
          }
          e[i].u=id[e[i].u];
          e[i].v=id[e[i].v];
        }
        cnt=num;
        root=id[root]; 
     }
     for(int i=E;i>m;i--)
       if(use[i]){
         use[A[i]]++;
         use[B[i]]--;
       }   
      return 1;  
}
int main(){
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    scanf("%d%d",&n,&m);
    for(int i=1;i<=m;i++){
      scanf("%d%d%d",&e[i].u,&e[i].v,&e[i].w);
      e[i].id=i;
      w[i]=e[i].w;
    }
    if(directed_mst(1)){
      printf("%d\n",ans);
      for(int i=1;i<=m;i++)
        if(use[i] && w[i])printf("%d ",i);
    }
    else printf("-1\n");
    return 0;
}
