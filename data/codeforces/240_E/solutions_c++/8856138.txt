#include<cstdio>
#include<algorithm>

#define rep(i,l,r) for (int i=l; i<=r; ++i)
#define dep(i,r,l) for (int i=r; i>=l; --i)

using namespace std;

const int N=100010;
const int INF=1e9;

int n,m,w0[N],ans;
int pw[N],pd[N],pe[N],vis[N],id[N];

struct eset{
	int u,v,w,id;
}e[N*20];
int eid,eA[N*20],eD[N*20],use[N*20];

bool Directed_MST(int root){
	int cnt=n;
	eid=m;
	while (1){
		rep(i,1,cnt) pw[i]=INF,pe[i]=pd[i]=0;
		rep(i,1,m){
			int u=e[i].u,v=e[i].v,w=e[i].w;
			if (v!=root && u!=v && w<pw[v]){
				pw[v]=w;
				pe[v]=e[i].id,pd[v]=u;
			}
		}
		rep(i,1,cnt)
			if (i!=root && !pd[i]) return 0;
		rep(i,1,cnt) vis[i]=id[i]=0;
		int idn=0;
		rep(i,1,cnt){
			if (i!=root){
				++use[pe[i]];
				ans+=pw[i];
			}
			int u=i;
			while (!vis[u] && u!=root){
				vis[u]=i,u=pd[u];
			}
			if (u==root || vis[u]!=i) continue;
			int s=u;
			id[s]=++idn;
			while (u=pd[u],u!=s) id[u]=idn;
		}
		if (!idn) break;
		rep(i,1,cnt) if (!id[i]) id[i]=++idn;

		rep(i,1,m){
			int &u=e[i].u,&v=e[i].v,&w=e[i].w,dw=pw[v],pev=pe[v];
			u=id[u],v=id[v];
			if (u!=v){
				w-=dw;
				int ni=++eid;
				eA[ni]=e[i].id,eD[ni]=pev;
				e[i].id=ni;
			}
		}
		root=id[root];
		cnt=idn;
	}
	dep(i,eid,m+1) if (use[i]){
		++use[eA[i]];
		--use[eD[i]];
	}
}
int main(){
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);

	scanf("%d%d",&n,&m);
	rep(i,1,m){
		int u,v,w;
		scanf("%d%d%d",&u,&v,&w);
		e[i]=(eset){u,v,w,i};
		w0[i]=w;
	}
	if (Directed_MST(1)){
		printf("%d\n",ans);
		rep(i,1,m)
			if (w0[i] && use[i]){
				printf("%d ",i);
			}
	} else{
		printf("-1\n");
	}
}
