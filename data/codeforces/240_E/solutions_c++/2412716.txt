#include<cstdio>
#include<cstring>
#define N 100005
int st[N],ed[N],next[N],flag[N],son[N],n,m,x,y;
int dfn[N],low[N],stack[N],num[N],c[N],f[N],o[N],top,D,now,ans;
bool instack[N];
inline int min(int a,int b){return a<b?a:b;}
void tarjan(int i)
{
    dfn[i]=low[i]=++D; instack[i]=1,stack[++top]=i;
    for (int p=son[i];p;p=next[p]){
        int j=ed[p];
        if (!dfn[j]) tarjan(j),low[i]=min(low[i],low[j]);
        else if (instack[j]) low[i]=min(low[i],dfn[j]);
        }
    if (low[i]==dfn[i]){
        now++; int k;
        do k=stack[top--],instack[k]=0,num[k]=now; while (k!=i);
        }
}
void bfs(int x)
{
    int h=0,t=1; f[1]=x; c[x]=-1;
    while (h<t){
        int i=f[++h];
        for (int p=son[i];p;p=next[p]){
            int j=ed[p];
            if (!c[j]) c[j]=flag[p]?p:-1,f[++t]=j;
            else if (c[j]>0 && !flag[p]) c[j]=-1;
            }
        }
}
int main()
{
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    scanf("%d%d",&n,&m);
    for (int i=1;i<=m;i++){
        scanf("%d%d%d",&st[i],&ed[i],&flag[i]);
        if (!flag[i]) next[i]=son[st[i]],son[st[i]]=i;
        }
    for (int i=1;i<=n;i++) if (!dfn[i]) tarjan(i);
//  for (int i=1;i<=n;i++) printf("%d ",num[i]); printf("\n");
    memset(son,0,sizeof(son));
    for (int i=1;i<=m;i++){
        int x=num[st[i]],y=num[ed[i]]; ed[i]=y;
        if (x!=y) next[i]=son[x],son[x]=i;
        }
    bfs(num[1]);
//  for (int i=1;i<=now;i++) printf("%d ",c[i]); printf("\n");
    for (int i=1;i<=now;i++) if (c[i]>0) o[++ans]=c[i];
    for (int i=1;i<=now;i++) if (!c[i]) ans=-1;
    printf("%d\n",ans);
    for (int i=1;i<=ans;i++) printf("%d%s",o[i],i<ans?" ":"\n");
    return 0;
}