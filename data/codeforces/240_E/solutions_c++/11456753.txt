#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<vector>
#include<queue>
using namespace std;
const int SIZEN=100010;
class Edge{
public:
	int to;
	int id;
	int sta;
};
vector<Edge> c[SIZEN];
int N,M;
int vis[SIZEN];
queue<int> Q;
void work(void){
	Q.push(1);vis[1]=-1;
	while(!Q.empty()){
		int x=Q.front();Q.pop();
		for(int i=0;i<c[x].size();i++){
			Edge &e=c[x][i];
			if(!vis[e.to]||(vis[e.to]>0&&!e.sta)){
				vis[e.to]=e.sta?e.id:-1;
				Q.push(e.to);
			}
		}
	}
	vector<int> ans;
	bool able=true;
	for(int i=1;i<=N;i++){
		if(vis[i]==0) able=false;
		if(vis[i]!=-1) ans.push_back(vis[i]);
	}
	if(!able) printf("-1\n");
	else{
		printf("%d\n",ans.size());
		for(int i=0;i<ans.size();i++) printf("%d\n",ans[i]);
	}
}
void read(void){
	scanf("%d%d",&N,&M);
	int u,v,f;
	for(int i=1;i<=M;i++){
		scanf("%d%d%d",&u,&v,&f);
		c[u].push_back((Edge){v,i,f});
	}
}
int main(){
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	read();
	work();
	return 0;
}
