#include <iostream>
#include <fstream>
#include <cstring>
#include <string>
#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <bitset>
#include <ctime>
#include <map>
#include <queue>
#include <set>
using namespace std;

const int maxn=100000+15;
struct Node
{
	int y,id,sr;
	Node() {y=id=sr=0;}
	Node(int y,int id,int sr):y(y),id(id),sr(sr) {}
};
vector <Node> a[maxn];
int n,m,x,y,z;
int vis[maxn];
int hh,tt,line[maxn*2];
int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d%d",&n,&m);
	for (int i=1;i<=m;i++)
	{
		scanf("%d%d%d",&x,&y,&z);
		a[x].push_back(Node(y,i,z));
	}
	line[hh=tt=1]=1;vis[1]=-1;
	for (;hh<=tt;hh++)
	{
		int now=line[hh];
		int sum=a[now].size();
		for (int i=0;i<sum;i++)
		 if (vis[a[now][i].y]==0 || (vis[a[now][i].y]>0 && a[now][i].sr==0))
		  {
		  	if (a[now][i].sr==0) 
		  	{
		  		vis[a[now][i].y]=-1;
		  		line[++tt]=a[now][i].y;
		  	}
		  	else
		  	{
		  		vis[a[now][i].y]=a[now][i].id;
		  		line[++tt]=a[now][i].y;
		  	}
		  }
	}
	int sum=0;
	for (int i=1;i<=n;i++)
	 if (vis[i]==0)
	 {
	 	printf("-1\n");
	 	return 0;
	 }
	 else if (vis[i]>0) line[++sum]=vis[i];
	printf("%d\n",sum);
	for (int i=1;i<=sum;i++) printf("%d\n",line[i]);
	return 0;
}
