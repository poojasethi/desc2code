#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cstdlib>
#include<queue>
#include<cmath>
#include<set>
#include<map>
using namespace std;
#define LL long long
int n,m;
const int maxn=202020;
struct Edge
{
    int to,next,f;
};
int st[maxn],tot=0;
Edge e[maxn];
void add(int u,int v,int f)
{
    e[++tot].to=v;
    e[tot].next=st[u];
    e[tot].f=f;
    st[u]=tot;
}
void init()
{
    memset(st,-1,sizeof(st));
    cin>>n>>m;
    for(int i=1;i<=m;i++)
    {
        int a,b,c;
        cin>>a>>b>>c;
        add(a,b,c);
    }
}
bool vis[maxn];
queue<int>Q;
int ans=0;
int out[maxn];
int used[maxn];
void work()
{
    Q.push(1);
    vis[1]=true;
    while(!Q.empty())
    {
        int now=Q.front();
        for(int i=st[now];i!=-1;i=e[i].next)
            if(!vis[e[i].to])
            {
                Q.push(e[i].to);
                vis[e[i].to]=true;
                if(e[i].f)
                    used[e[i].to]=i;
            }
            else if(used[e[i].to]&&e[i].f==0)
            {
                Q.push(e[i].to);
                used[e[i].to]=0; 
            }
        Q.pop();
    }
    for(int i=1;i<=n;i++)
        if(!vis[i])
        {
            cout<<-1<<endl;
            return;
        }
    for(int i=1;i<=n;i++)
        if(used[i])
            out[++ans]=used[i];
    cout<<ans<<endl;
    for(int i=1;i<=ans;i++)
        cout<<out[i]<<" ";
}
int main()
{
    #ifndef TSINSEN
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
    std::ios::sync_with_stdio(false);
    init();
    work();
    return 0;
}

