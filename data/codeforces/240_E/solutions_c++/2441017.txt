#include<cstdio>
#include<cstring>
#include<iostream>
#define N 100030
using namespace std;

int uu[N],vv[N],next[N],flag[N],head[N];
int n,m,x,y;
int dfn[N],low[N],instack[N],num[N],edge[N],f[N],o[N],top,D,now,ans;
bool inst[N];

void tarjan(int i)
{
    dfn[i]=low[i]=++D;
    inst[i]=1,instack[++top]=i;
    for (int p=head[i]; p; p=next[p])
    {
        int j=vv[p];
        if (!dfn[j]) tarjan(j),low[i]=min(low[i],low[j]);
        else if (inst[j]) low[i]=min(low[i],dfn[j]);
    }
    if (low[i]==dfn[i])
    {
        now++;
        int k;
        do k=instack[top--],inst[k]=0,num[k]=now;
        while (k!=i);
    }
}
void bfs(int x)
{
    int h=0,t=1;
    f[1]=x;
    edge[x]=-1;
    while (h<t)
    {
        int i=f[++h];
        for (int p=head[i]; p; p=next[p])
        {
            int j=vv[p];
            if (!edge[j]) edge[j]=flag[p]?p:-1,f[++t]=j;
            else if (edge[j]>0 && !flag[p]) edge[j]=-1;
        }
    }
}
void init()
{
    memset(head,0,sizeof(head));
    memset(dfn,0,sizeof(dfn));
    memset(low,0,sizeof(low));
    memset(next,0,sizeof(num));
   memset(edge,0,sizeof(edge));
}
int main()
{
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    while(scanf("%d%d",&n,&m)!=EOF)
    {
        init();
        for (int i=1; i<=m; i++)
        {
            scanf("%d%d%d",&uu[i],&vv[i],&flag[i]);
            if (!flag[i]) next[i]=head[uu[i]],head[uu[i]]=i;
        }

        for (int i=1; i<=n; i++)
            if (!dfn[i])
                tarjan(i);

        memset(head,0,sizeof(head));
        for (int i=1; i<=m; i++)
        {
            int x=num[uu[i]],y=num[vv[i]];
            vv[i]=y;
            if (x!=y) next[i]=head[x],head[x]=i;
        }

        bfs(num[1]);
        for (int i=1; i<=now; i++)
            if (edge[i]>0)
                o[++ans]=edge[i];
        for (int i=1; i<=now; i++)
            if (!edge[i])
                ans=-1;
        printf("%d\n",ans);
        for (int i=1; i<=ans; i++)
            printf("%d%s",o[i],i<ans?" ":"\n");
    }
    return 0;
}
