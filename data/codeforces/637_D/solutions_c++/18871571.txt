#include <iostream>
#include <string>
#include <set>
#include <algorithm>
#include <vector>

using namespace std;

int mas[300000];

vector< pair<string,int> > ans;

int main()
{
    int n,m,s,d,k,position=0;
    cin >> n >> m >> s >> d;
    for (int i=1; i<=n; i++) {
        cin >> mas[i];
    }
    sort(mas+1,mas+n+1);
    for (int i=1; i<=n; ) {
        int prev=i;
        if (mas[i]-position-1>=s) {
            i++;
            while (i<=n && mas[i]-mas[i-1]-2<s) {
                i++;
            }
            int jumpDist=mas[i-1]-mas[prev]+2;
            if (jumpDist>d) {
                cout << "IMPOSSIBLE";
                return 0;
            }
            ans.push_back(make_pair("RUN",mas[prev]-position-1));
            ans.push_back(make_pair("JUMP",jumpDist));
            position=mas[i-1]+1;
        } else {
            cout << "IMPOSSIBLE";
            return 0;
        }
    }
    for (int i=0; i<ans.size(); i++) {
        cout << ans[i].first << ' ' << ans[i].second << endl;
    }
    if (position!=m) {
        cout << "RUN " << m-position;
    }
    return 0;
}






