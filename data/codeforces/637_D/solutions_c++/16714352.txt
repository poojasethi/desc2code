#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main ()
{
	int n;
	int m;
	int s;
	int d;
	
	cin >> n >> m >> s >> d;
	
	vector <int> a(n);
	for (int i=0; i<n; i++)
		cin >> a[i];
		
	sort (a.begin(), a.end());
	
	if (a[0] <  s + 1)
	{
		cout << "IMPOSSIBLE" << endl;
		return 0;
	}
	
	vector <pair <int, int> > b;
	
	for (int i=0; i< n ; i++)
	{
		int l = i, r = i;
		while (i < n - 1  &&  a[i+1] - a[i] < s + 2)
			r = ++i;
		if (a[r] - a[l] > d - 2)
		{
			cout << "IMPOSSIBLE" << endl;
			return 0;
		}
		pair <int, int> x(a[l], a[r]);
		b.push_back(x);
	}
	
	int pos = 0;
	for (int i = 0; i < b.size(); i++)
	{
		cout << "RUN " << b[i].first - 1 - pos << endl;
		cout << "JUMP " << b[i].second - b[i].first + 2 << endl;
		pos = b[i].second + 1;
	}
	
	if (pos != m)
		cout << "RUN " << m - pos << endl;
	
	return 0;
}

