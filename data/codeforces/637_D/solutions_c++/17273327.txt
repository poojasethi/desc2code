#include <bits/stdc++.h>

#define pb push_back
#define mp make_pair

using namespace std;

const int N = 200020;
int v[N];

int main (void) {
	int n, m, s, d;
	scanf("%d %d %d %d", &n, &m, &s, &d);
	for (int i = 0; i < n; i++) scanf("%d", v + i);
	sort (v, v + n);
	
	vector <pair<int, int> > ans;
	bool flag = false;
	int k = 1, beg = 0;
	if (v[0] - 1 < s) {
		printf("IMPOSSIBLE\n");
		return 0;
	}
	ans.pb(mp(0, v[0] - 1));
	while (k < n) {
		int dist = v[k-1] + 1 - (v[beg] - 1);
		int total_run = v[k] - v[k-1] - 1 - 1;
		if (total_run >= s) {
			if (dist > d) {
				printf("IMPOSSIBLE\n");
				return 0;
			}
			ans.pb(mp(1, dist));
			ans.pb(mp(0, total_run));
			beg = k;
		}
		k++;
	}
	if (v[n-1] + 1 - (v[beg] - 1) > d) {
		printf("IMPOSSIBLE\n");
		return 0;
	}
	ans.pb(mp(1, v[n-1] + 1 - (v[beg] - 1)));
	if (v[n-1] + 1 < m) ans.pb(mp(0, m - v[k-1] - 1));
	for (int i = 0; i < ans.size(); i++) {
		if (ans[i].first == 1) printf("JUMP ");
		else printf("RUN ");
		printf("%d\n", ans[i].second);
	}
	return 0;
}