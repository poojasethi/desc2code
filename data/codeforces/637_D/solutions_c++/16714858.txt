#include <cstdio>
#include <algorithm>
#include <vector>

const int N = (int)2e5 + 11;

int n, m, s, d;
int a[N];
std::vector<int> seg;

int main() {
    scanf("%d%d%d%d", &n, &m, &s, &d);

    for (int i = 0; i < n; i++)
        scanf("%d", &a[i]);

    a[n++] = -1, a[n++] = m + 1;

    std::sort(a, a + n);

    for (int i = 1; i < n; i++) {
        int len = a[i] - a[i - 1] - 2;
        if (len >= s || i == n - 1)
            seg.push_back(i);
    }

    if (seg.front() != 1 || seg.back() != n - 1) {
        puts("IMPOSSIBLE");
        return 0;
    }

    for (int i = 1; i < seg.size(); i++) {
        int j = seg[i], k = seg[i - 1];
        if (a[j - 1] - a[k] + 2 > d) {
            puts("IMPOSSIBLE");
            return 0;
        }
    }

    for (int i = 0; i < int(seg.size()) - 1; i++) {
        int j = seg[i], k = seg[i + 1];
        printf("RUN %d\n", a[j] - a[j - 1] - 2);
        printf("JUMP %d\n", a[k - 1] - a[j] + 2);
    }

    if (a[seg.back()] - a[seg.back() - 1] - 2 > 0)
        printf("RUN %d\n", a[seg.back()] - a[seg.back() - 1] - 2);

    return 0;
}