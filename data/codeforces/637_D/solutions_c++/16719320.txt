#include <iostream>
#include <algorithm>
#include <cstdio>
using namespace std;
int n,m,v,s,d;
const int maxn=3e5;
struct segment {
    int ll,rr;
};
int a[maxn];
segment seg[maxn];
int main() {
    ios_base::sync_with_stdio(0);
    cin >> n >> m >> s >> d;
    for (int i=1;i<=n;i++) cin >> a[i];
    sort(a+1,a+n+1);
    a[0]=0;
    a[n+1]=m;
    seg[1].ll=0;
    seg[1].rr=a[1]-1;
    for (int i=1;i<n;i++)
        if (a[i]+1<a[i+1]) seg[i+1]=(segment){a[i]+1,a[i+1]-1};
    seg[n+2]=(segment){a[n]+1,m};
    for (int i=1;i<=n+1;i++)
    if (seg[i].rr-seg[i].ll>=s) {
        v++;
        seg[v].rr=seg[i].rr;
        seg[v].ll=seg[i].ll;
    }
    v++;
    seg[v]=seg[n+2];
    if (seg[1].ll!=0) {
        cout << "IMPOSSIBLE\n";
        return 0;
    }
    n=v;
    for (int i=2;i<=n;i++) {
        if (seg[i].ll-seg[i-1].rr>d) {
            cout << "IMPOSSIBLE\n";
            return 0;
        }
    }
    cout << "RUN " << seg[1].rr-seg[1].ll << "\n";
    for (int i=2;i<=n;i++) {
        cout << "JUMP " << seg[i].ll-seg[i-1].rr << "\n";
        if (seg[i].rr-seg[i].ll!=0) cout << "RUN " << seg[i].rr-seg[i].ll << "\n";
    }
    return 0;
}