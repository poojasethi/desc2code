#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <map>
#include <queue>
using namespace std;
int n,m,p;
int ans;
int a[200005],b[200005];
int vis[200005];
map<int,int>fp,tp;
void solve(int x)
{
	tp.clear();
	queue<int>q;
	for(int i=x;i<n;i+=p)
	{
		q.push(i);
		tp[a[i]]++;
		if(q.size()==m)
		{
			if(tp==fp)
			{
				vis[q.front()]=1;
				ans++;
			}
			int v=a[q.front()];
			q.pop();
			if(--tp[v]==0)
				tp.erase(v);
		}
	}
	
}
int main()
{
	while(scanf("%d%d%d",&n,&m,&p)!=EOF)
	{
		memset(vis,0,sizeof(vis));
		fp.clear();ans=0;
		for(int i=0;i<n;i++)
		{
			scanf("%d",&a[i]);
		}
		for(int i=0;i<m;i++)
		{
			int u;
			scanf("%d",&u);
			fp[u]++;
		}
		for(int i=0;i<p;i++)
		{
			solve(i);
		}
		printf("%d\n",ans);
		int t=0;
		for(int i=0;i<n;i++)
		{
			if(vis[i])
			{
				if(t==0) t=1;
				else printf(" ");
				printf("%d",i+1);
			}	
		}
		printf("\n");
	}
	return 0;
}
  	 	 	 		  	    			 	 	     		