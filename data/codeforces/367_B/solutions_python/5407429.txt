class Counter:

    def __init__(self, l):
        self.counter = {}
        self.nonzero = 0
        self.empty = True
        get = self.counter.get
        for e in l:
            self.counter[e] = get(e, 0) + 1
        self.nonzero = len(self.counter.keys())

    def __getitem__(self, index):
        return self.counter[index]

    def __setitem__(self, index, value):
        self.counter[index] = value
        self.nonzero += value

    def __str__(self):
        return str(self.counter)

    def add(self, key, value):
        old = self.counter.get(key, 0)
        self.counter[key] = old + value
        if old == 0:
            self.nonzero += 1
        elif old + value == 0:
            self.nonzero -= 1


n, m, p = map(int, raw_input().split())
a = map(int, raw_input().split())
b = map(int, raw_input().split())
ans = []
big_step = (m-1)*p

for i in range(p):
    if i + big_step > n:
        break
    cb = Counter(b)
    for j in range(i, len(a), p):
        cb.add(a[j], -1)
        if j - big_step >= 0:
            if not cb.nonzero:
                ans.append(j-big_step+1)
            cb.add(a[j-big_step], 1)

print len(ans)
print " ".join(str(i) for i in sorted(ans))