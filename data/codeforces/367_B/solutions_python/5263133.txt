

import sys



s = sys.stdin.readline().split()

n = int(s[0])
m = int(s[1])
p = int(s[2])

a = sys.stdin.readline().split()
a = [int(x) for x in a]

b = sys.stdin.readline().split()
b = [int(x) for x in b]

sh = (m-1)*p + 1

if sh > n:
    print '0'
else:
    qs = []
    bcounts = {}
    for x in b:
        if x in bcounts:
            bcounts[x] += 1
        else:
            bcounts[x] = 1
    
    for qstart in xrange(p):
        if qstart + sh > n:
            break
        l = 0
        ax = [0]* (n/p)
        if  n%p > qstart:
            ax.append(0)
        while (l*p+qstart < n and l < len(ax)):
            ax[l] = a[l*p+qstart]
            l += 1

        axxcounts = {}
        for x in ax[0:m]:
            if x in axxcounts:
                axxcounts[x] += 1
            else:
                axxcounts[x] = 1

        lastbad = -1

        for j in xrange(len(ax)-m+1):

            comp = True
            if lastbad == -1:
                for kk, vv in bcounts.iteritems():
                    if kk not in axxcounts:
                        comp = False
                        lastbad = kk
                        break
                    if axxcounts[kk] != vv:
                        comp = False
                        lastbad = kk
                        break
            else:
                if lastbad not in axxcounts:
                    comp = False
                elif axxcounts[lastbad] != bcounts[lastbad]:
                    comp = False
                else:
                    for kk, vv in bcounts.iteritems():
                        if kk not in axxcounts:
                            comp = False
                            lastbad = kk
                            break
                        if axxcounts[kk] != vv:
                            comp = False
                            lastbad = kk
                            break

            if comp:
                lastbad = -1
                qs.append(qstart+j*p+1)
            if j+m >= len(ax):
                break
            oldel = ax[j]
            axxcounts[oldel] -= 1
            newel = ax[j+m]
            if newel in axxcounts:
                axxcounts[newel] += 1
            else:
                axxcounts[newel] = 1
            
            
    if qs:
        qs.sort()
        print len(qs)
        for ii in xrange(len(qs)):
            print qs[ii],
        print 
    else:
        print '0'
            
        
        
        
        