from collections import defaultdict

n, m, p = map(int, raw_input().split())
A = map(int, raw_input().split())
B = map(int, raw_input().split())

nb_B = defaultdict(int)
for c in B:
  nb_B[c] += 1
left_base = len(nb_B)

res = []
for mod in range(p):
  q = mod
  if mod + (m-1)*p >= n:
    continue
  nb = defaultdict(int)
  left = left_base
  for i in range(m):
    c = A[q+i*p]
    if nb_B[c] == nb[c]:
      left += 1
    elif nb_B[c] == nb[c]+1:
      left -= 1
    nb[c] += 1
  if left == 0:
    res.append(q)
  q += p
  while q + (m-1)*p < n:
    c = A[q-p]
    d = A[q + (m-1)*p]
    if nb_B[c] == nb[c]:
      left += 1
    elif nb_B[c] == nb[c]-1:
      left -= 1
    nb[c] -= 1
    if nb_B[d] == nb[d]:
      left += 1
    elif nb_B[d] == nb[d]+1:
      left -= 1
    nb[d] += 1
    if left == 0:
      res.append(q)
    q += p
res.sort()
print len(res)
print ' '.join(map(lambda x: str(x+1), res))
