#include <cstdio>
#include <cstring>
#include <cassert>
int a[52][52][52][52], tmp[52][52][52];

int main() {
	//freopen("t.in", "r", stdin);

	a[1][1][1][1] = 1;
	a[2][1][1][1] = 4;
	a[2][2][1][1] = 3;
	a[2][1][2][1] = 1;
	a[2][2][2][1] = 2;
	a[2][1][1][2] = 5;
	a[2][2][1][2] = 6;
	a[2][1][2][2] = 8;
	a[2][2][2][2] = 7;

	for ( int n = 2; n < 50; n ++ ) {
		for ( int x = 1; x <= n; x ++ )
			for ( int y = 1; y <= n; y ++ )
				for ( int z = 1; z <= n; z ++ )
					a[n+1][x][y][z+1] = a[n][x][y][z] + n*n;
		if ( n & 1 ) {
			int cnt = 0;
			for ( int y = 1; y <= n-2; y ++ ) {
				if ( y & 1 )
					for ( int x = 1; x <= n; x ++ )
						a[n+1][x][y][1] = ++cnt;
				else
					for ( int x = n; x >= 1; x -- )
						a[n+1][x][y][1] = ++cnt;
			}
			for ( int x = n; x >= 1; x -- )
				if ( x & 1 ) {
					a[n+1][x][n-1][1] = ++cnt;
					a[n+1][x][n][1] = ++cnt;
				} else {
					a[n+1][x][n][1] = ++cnt;
					a[n+1][x][n-1][1] = ++cnt;
				}
		} else {
			int cnt = 0;
			for ( int y = 1; y <= n; y ++ ) {
				if ( y & 1 )
					for ( int x = 1; x <= n; x ++ )
						a[n+1][x][y][1] = ++cnt;
				else
					for ( int x = n; x >= 1; x -- )
						a[n+1][x][y][1] = ++cnt;
			}
		}
		int cnt = n*n*(n+1);
		for ( int x = 1; x <= n+1; x ++ ) {
			if ( x & 1 )
				for ( int z = n + 1; z >= 1; z -- )
					a[n+1][x][n+1][z] = ++cnt;
			else
				for ( int z = 1; z <= n+1; z ++ )
					a[n+1][x][n+1][z] = ++cnt;
		}
		for ( int y = n; y >= 1; y -- ) {
			if ( (n+1+(n-y+1)) & 1 )
				for ( int z = n+1; z >= 1; z -- )
					a[n+1][n+1][y][z] = ++cnt;
			else
				for ( int z = 1; z <= n+1; z ++ )
					a[n+1][n+1][y][z] = ++cnt;
		}
	/*	if ( n == 3 ) {
			for ( int z = 1; z <= n+1; z ++, puts("") )
				for ( int x = 1; x <= n+1; x ++, puts("") )
					for ( int y = 1; y <= n+1; y ++ )
						printf("%d ", a[n+1][x][y][z]);
			return 0;
		}
*/
		for ( int x = 1; x <= n + 1; x ++ )
			for ( int y = 1; y <= n+1; y ++ )
				for ( int z = 1; z <= n + 1; z ++ )
					tmp[n-z+2][y][x] = a[n+1][x][y][z];
		memcpy(a[n+1], tmp, sizeof(tmp));
		for ( int rep = 0; rep < 2; rep ++ ) {
			for ( int x = 1; x <= n + 1; x ++ )
				for ( int y = 1; y <= n+1; y ++ )
					for ( int z = 1; z <= n + 1; z ++ )
						tmp[y][n-x+2][z] = a[n+1][x][y][z];
			memcpy(a[n+1], tmp, sizeof(tmp));
		}
		assert(a[n+1][1][n+1][n+1] == (n+1)*(n+1)*(n+1));
		assert(a[n+1][1][n+1][1] == 1);
	}

	int m;
	scanf("%d", &m);
	for ( int i = 1; i <= m; i ++, puts("") )
		for ( int j = 1; j <= m; j ++, puts("") )
			for ( int k = 1; k <= m; k ++ )
				printf("%d ", a[m][i][j][k]);
}
