#include <iostream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <set>
#include <algorithm>
#include <iomanip>
#include <ctime>
#include <map>

#define fname "" 
#define mk make_pair
#define pb push_back

#define f first
#define sz 600000
#define s second


using namespace std;

int n, L;
int v[sz], x[sz], p[sz], d[sz], t[sz];
vector < pair <int, pair <int, int> > > a[sz];
int f1, f2;
int N;
pair <int, int>from[sz];
vector <int> res;
set < pair<int, int> > q;


int main() {

	#ifndef ONLINE_JUDGE
	freopen("in", "r",stdin);
	freopen("out","w",stdout);
    #endif
	cin >> n >> L;
	
	v[N++] = 0;
	v[N++] = L;
	for (int i = 1; i <= n; i++)
	{
	 	cin >> x[i] >> d[i] >> t[i] >> p[i];
	 	if (x[i] < p[i]) continue;
	 	v[N++] = x[i] - p[i];
	 	v[N++] = x[i] + d[i];
	}

	sort(v, v + N);

	N = unique(v, v + N) - v;

	for (int i = 1; i <= n; i++)
	{
	 	if (x[i] < p[i])  continue;
	 	f1 = lower_bound(v, v + N, x[i] - p[i]) - v;
	 	f2 = lower_bound(v, v + N, x[i] + d[i]) - v;
		a[f1].pb(mk(f2, mk(i, p[i] + t[i])));
	//	a[f2].pb(mk(f1, mk(i, p[i] + t[i])));
	}

	for (int i = 0; i < N - 1; i++)
	{
	 	a[i].pb(mk(i + 1, mk(-1, v[i + 1] - v[i])));
	 	a[i + 1].pb(mk(i, mk(-1, v[i + 1] - v[i])));
	}

	d[0] = 0;
	for (int i = 1; i < N; i++)	
		d[i] = (1 << 30);
	
	for (int i = 0; i < N; i++)
	q.insert(mk(d[i], i));


	while (!q.empty())
	{
	 	int vx = q.begin()->second;
	 	q.erase(q.begin());
	 	for (int i = 0; i < a[vx].size(); i++)
	 	{
	 	 	int to = a[vx][i].f;
	 	 	int wes = a[vx][i].s.s;
	 	 	int id = a[vx][i].s.f;
	 		if (d[to] > d[vx] + wes) 	
	 		{
	 			q.erase(mk(d[to], to));
	 		 	d[to] = d[vx] + wes;
	 		 	q.insert(mk(d[to], to));
	 			from[to] = mk(vx, id);
	 		}
	 	}
	}
	
	cout << d[N - 1] << endl;

	int xx, vx = N - 1;


	while (vx > 0)
	{
	 	  int xx = from[vx].s;
	 	  if (xx != -1)
	 	  	res.pb(xx);
	 	  vx = from[vx].f;
	}


	cout << res.size() << endl;
	for (int i = res.size() - 1; i >= 0; i--)
		cout <<res[i] << " ";
	return 0;
}