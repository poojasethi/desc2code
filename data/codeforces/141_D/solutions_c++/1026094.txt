#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned
using namespace std;
set <pair<int,int> > s;
vector<int> a,d;
int x[100100],d1[100100],t[100100],p[100100];
vector<vector<pair<int,pnt > > > g;
int par[300100][2];
vector<int> res;
int main()
{
	int n,l;
	scanf("%d%d",&n,&l);
	a.push_back(0);
	a.push_back(l);
	FOR(i,0,n)
	{
		scanf("%d%d%d%d",&x[i],&d1[i],&t[i],&p[i]);
		if (x[i]-p[i]>=0)
			a.push_back(x[i]-p[i]);
		a.push_back(x[i]+d1[i]);
	}
	sort(a.begin(),a.end());
	a.resize(unique(a.begin(),a.end())-a.begin());
	d.resize(a.size());
	g.resize(a.size());
	FOR(i,0,n)
		if (x[i]-p[i]>=0)
		{
			int v1=lower_bound(a.begin(),a.end(),x[i]-p[i])-a.begin();
			int v2=lower_bound(a.begin(),a.end(),x[i]+d1[i])-a.begin();
			g[v1].push_back(mp(v2,mp(p[i]+t[i],i+1)));
		}
	FOR(i,0,(int)a.size()-1)
	{
		g[i].push_back(mp(i+1,mp(a[i+1]-a[i],0)));
		g[i+1].push_back(mp(i,mp(a[i+1]-a[i],0)));
	}
	FOR(i,1,d.size())
		d[i]=1100000000;
	d[0]=0;
	s.insert(mp(0,0));
	while (s.size())
	{
		int v=s.begin()->second;
		if (v==(int)d.size()-1)
			break;
		s.erase(s.begin());
		FOR(i,0,g[v].size())
		{
			int to=g[v][i].first;
			int dist=g[v][i].second.first;
			int type=g[v][i].second.second;
			if (d[v]+dist<d[to])
			{
				par[to][0]=v;
				par[to][1]=type;
				s.erase(mp(d[to],to));
				d[to]=d[v]+dist;
				s.insert(mp(d[to],to));
			}
		}
	}
	printf("%d\n",d[d.size()-1]);
	int v=(d.size()-1);
	while (v>0)
	{
		if (par[v][1]>0)
			res.push_back(par[v][1]);
		v=par[v][0];
	}
	printf("%d\n",res.size());
	for (int i=(int)res.size()-1; i>=0; --i)
		printf("%d%c",res[i],(i)?' ':'\n');
	return 0;
}