#include <cstdio>
#include <iostream>
#include <string>
#include <utility>
#include <vector>
#include <algorithm>
#include <map>
using namespace std;

typedef long long ll;
const int MAXN = 150100;

ll n,m,l,r;
ll P;


vector<int>p;
ll sum;
ll _dfs(ll d,ll x,ll y){
    if(d==p.size()){
        ll n = abs(y/x);
        sum += n*(n+1)/2 * x;
        //sum%=P;
        return y/x;
    }
    return (_dfs(d+1,x,y)+_dfs(d+1,-x*p[d],y));
} 

int gcdnumber(ll a, ll y){
    p.clear();
    for(ll i=2;i*i<=a;i++){
        if(a%i==0){
            p.push_back(i);
            while(a%i==0)
                a/=i;
        }
    }
    sum=0;
    if(a!=1) p.push_back(a);
    return _dfs(0,1,y);

}

ll calc(ll radiu, int add){
    ll y = radiu;
    ll ret  = 0;
    for(ll i=1;i<=radiu;i++){
        while(y&&i*i+y*y>radiu*radiu-add) y--;
        if(y>=m) y = m;
        if(i<=n&&y>0){
            ll tmp = gcdnumber(i,y);
            ret+=(n-i+1)*(tmp*(m+1)-sum);
            ret%=P; 
        } 
    }
    return ret;
}
int main(){
    cin>>n>>m;
    cin>>l>>r>>P;
    ll ans = 0;
    if(l==1) ans = n*(m+1)+m*(n+1);
    ans%=P;
    ans+=(calc(r,0)-calc(l,1))*2;
    while(ans<0) ans+=P;
    ans%=P;
        cout<<ans<<endl;
}