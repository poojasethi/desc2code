#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <utility>
#include <bitset>
#include <vector>
#include <string>
#include <stack>
#include <queue>
#include <ctime>
#include <cmath>
#include <list>
#include <map>
#include <set>
using namespace std;
typedef long long ll;
typedef double D;
typedef pair<int,int> pr;
const int N=100010;
ll n,m,l,r,lsq,rsq,mod,ans,x,y,tmp,p,flag;
int num[N],fac[N][8];
ll calc(ll x,ll t) {
    x=min(x,m); ll tmp=x/t;
    return (tmp*(m+1)-(1+tmp)*tmp/2*t)%mod;
}
int main(){
    ll i,j,k,tx,ty;
    scanf("%I64d%I64d",&n,&m);
    scanf("%I64d%I64d%I64d",&l,&r,&mod);
    for (i=2;i<=n;i++) if (!num[i]) 
        for (j=i;j<=n;j+=i) fac[j][++num[j]]=i;
    lsq=l*l; rsq=r*r;
    if (l<=1) ans=(ll)(n+1)*m%mod+(ll)n*(m+1)%mod;
    for (i=1;i<=n;i++) {
        if (i>=r) break;
        x=(ll)sqrt(max(lsq-i*i-1,0LL));
        y=(ll)sqrt(rsq-i*i);
        if (x==y) continue;
        tx=ty=0;
        for (j=0;j<(1<<num[i]);j++) {
            p=flag=1;
            for (k=0;k<num[i];k++) if (j&(1<<k)) {
                p*=fac[i][k+1];
                flag=-flag;
            }
            tx=(tx+calc(x,p)*flag+mod)%mod;
            ty=(ty+calc(y,p)*flag+mod)%mod;
        }
        tmp=((ty-tx+mod)<<1)%mod;
        (ans+=tmp*(n-i+1))%=mod;
    }
    cout<<ans<<endl;
    return 0;
}