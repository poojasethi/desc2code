#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef double ld;

const int MAX=100000+10;

int n,m;
int l,r,p;
vector<int> t[MAX];

int calc(int s,int r)//小于等于min(r,m), 是s的倍数, \sum m-i+1
{
    r=min(r,m);
    LL num=r/s;
    LL ans=num;
    ans = ans * (m+1);
    ans -= (1+num) * num/2 * s;
    return ans % p;
}

int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
    int i,j;
    scanf("%d%d",&n,&m);
    cin>>l>>r>>p;
    for(i=2;i<=n;++i)
    {
        if(t[i].size())
            continue;
        for(j=i;j<=n;j+=i)
            t[j].pb(i);
    }
    //只考虑距离大于1的
    LL ans=0;
    if(l<=1)
        ans+=LL(n+1)*m % p+ (LL)n*(m+1) %p;
    REP(i,1,n)
    {
        if(i>=r)
            break;
        int t1=floor( sqrt(max( (LL)l*l-(LL)i*i-1, 0LL ) ) ) ;
        int t2=floor( sqrt((LL)r*r-(LL)i*i) ) ;
        if(t2==t1)
            continue;
        int s,j,num=t[i].size();
        LL sum=0;
        REP2(s,0,1<<num)
        {
            int v=1,flag=1;
            REP2(j,0,num)
                if(s&(1<<j))
                {
                    v*=t[i][j];
                    flag=-flag;
                }
            sum=( sum + (calc(v,t2)-calc(v,t1) ) * flag + p) % p;
        }
        sum*=2;
        ans=( ans+sum*(n-i+1) ) % p;
    }
    cout<<ans<<endl;
    return 0;
}
