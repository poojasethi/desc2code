from sys import exit

def cmp(x, y):
    if x[1] == y[1]:
        return x[0] - y[0]
    else:
        return x[1] - y[1]

volume = input()
v = volume
costs = [0] + [int(i) for i in raw_input().split()]
dc = {}

if v == 0:
    print -1
    exit(0)

ok = False
for i in xrange(1, len(costs)):
    if costs[i] <= v:
        dc[i] = costs[i]
        ok = True

if not ok:
    print -1
    exit(0)

result = []

items = sorted(dc.items(), reverse=True)
value = min(items, key=lambda x: x[1])
alg = v / value[1]
result = alg * [str(value[0])]
volume = v - value[1] * alg
items.remove(value)
index = 0

for i in items:
    while index < len(result) and i[0] > int(result[index]) and i[1] <= volume + costs[int(result[index])]:
        volume += costs[int(result[index])] - i[1]
        # print volume
        result[index] = str(i[0])
        index += 1

print ''.join(result)