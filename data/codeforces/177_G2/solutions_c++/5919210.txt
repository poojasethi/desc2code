#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<iostream>
#include<cstdio>
#define N 220000
#define int64 long long
using namespace std;
const int m1[4][4]={1,1,0,1, 1,0,0,0, 0,0,1,0, 0,0,0,1},
		  m2[4][4]={1,1,1,0, 1,0,0,0, 0,0,1,0, 0,0,0,1},
		  mo=1000000007;
int next[N],i,j,m;
int64 n;
string s;
void cheng(int a[4][4],const int b[4][4],const int c[4][4]){
	int d[4][4]={},i,j,k;
	for(i=0;i<4;++i)
		for(j=0;j<4;++j)
			for(k=0;k<4;++k)d[i][k]=(1ll*b[i][j]*c[j][k]+d[i][k])%mo;
	for(i=0;i<4;++i)
		for(j=0;j<4;++j)a[i][j]=d[i][j];
}
int calc(string a,string b,int x){
	int i,j,p=0,ans=0;
	next[0]=-1;
	for(i=0;i<b.length();++i){
		for(p=next[i];p!=-1 && b[p]!=b[i];p=next[p]);
		next[i+1]=++p;
	}
	p=0;
	for(i=0;i<a.length();++i){
		for(;p!=-1 && a[i]!=b[p];p=next[p]);
		if(++p==b.length()){
			if(x==-1 || i>=x && i-b.length()+1<x)ans++;
			p=next[p];
		}
	}
	return ans;
}
int work(int64 n,string s){
	reverse(s.begin(),s.end());
	if(n==1)return calc("a",s,-1);
	if(n==2)return calc("b",s,-1);
	int x=1;
	string a="a",b="b";
	while(a.length()<s.length() && n-x-1>=2)a+=b,swap(a,b),x++;
	int v[4][4]={1,0,0,0},d[4][4];
	if((n-x)&1)cheng(d,m1,m2);
	else cheng(d,m2,m1);
	int64 tim=(n-x-2)/2;
	while(tim){
		if(tim&1)cheng(v,v,d);
		tim/=2;
		cheng(d,d,d);
	}
	if((n-x)&1)cheng(v,v,m1);
	return (1ll*v[0][0]*calc(a+b,s,-1)+1ll*v[0][1]*calc(b,s,-1)+
			1ll*v[0][2]*calc(b+b,s,b.length())+1ll*v[0][3]*calc(b+a,s,b.length()))%mo;
}
int main(){
	scanf("%I64d%d",&n,&m);
	for(;m--;)cin>>s,printf("%d\n",work(n,s));
}
