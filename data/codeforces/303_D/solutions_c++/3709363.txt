#include <cstdio>
#include <string>
#include <algorithm>

using namespace std;

int modpow (int w, int p, int m) {
  if (p == 0) return 1;
  int x = modpow (w, p / 2, m);
  x = (long long) x * x % m;
  if (p & 1) x = (long long) x * w % m;
  return x;
}

int dl[100], dc;

int main () {
  int n, x;
  scanf ("%d%d", &n, &x);
  if (n == 1) {
    printf ("%d\n", x - 1);
    return 0;
  }
  ++n;
  for (int i = 2; i * i <= n; i++)
    if (n % i == 0) {
      puts ("-1");
      return 0;
    }
  --n;

  for (int i = 2; i * i <= n; i++) {
    if (n % i == 0) {
      dl[dc++] = n / i;
    }
  }

  int l = max (2, x - 100000);
  for (int b = x - 1; b >= l; b--) {
    if (modpow (b, n, n + 1) == 1) {
      bool ok = true;
      for (int i = 0; i < dc; i++)
	if (modpow (b % (n + 1), dl[i], n + 1) == 1) {
	  ok = false;
	  break;
	}
      if (ok) {
	printf ("%d\n", b);
	return 0;
      }
    }
  }
  puts ("-1");
  return 0;
}
