#include<stdio.h>
#include<string.h>
#include<algorithm>
#define N 110000
using namespace std;
typedef long long ll;
int p[N],cnt,mod;
int pow(int x,int y)
{
	int ret=1;
	while(y)
	{
		if(y&1)
			ret=(ll)ret*x%mod;
		x=(ll)x*x%mod;
		y>>=1;
	}
	return ret;
}
bool isprime(int x)
{
	for(int i=2;i<x;i++)
	{
		if(x%i==0)
			return 0;
	}
	return 1;
}
bool judge(int x)
{
	for(int i=1;i<=cnt;i++)
	{
		if(pow(x,(mod-1)/p[i])==1)
			return 0;
	}
	return 1;
}
int main()
{
	int n,x,i;
	scanf("%d%d",&n,&x);
	if(n==1)
	{
		if(x-1>=2)
			printf("%d\n",x-1);
		else
			puts("-1");
		return 0;
	}
	if(!isprime(n+1))
	{
		puts("-1");
		return 0;
	}
	mod=n+1;
	for(i=2;i<=n;i++)
	{
		if(n%i==0)
		{
			p[++cnt]=i;
			while(n%i==0)
				n/=i;
		}
	}
	for(i=x-1;i>1;i--)
	{
		if(judge(i))
		{
			printf("%d\n",i);
			return 0;
		}
	}
	puts("-1");
	return 0;
}
