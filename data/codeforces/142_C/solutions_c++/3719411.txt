#include <algorithm>
#include <cstring>
#include <cstdio>
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
const int a1[4][5]={{0,1,2,2,2},{0,1,1,1,2},{0,0,0,1,2},{0,1,1,1,2}},a2[4][5]=
    {{1,1,0,1,2},{2,0,1,2,2},{0,1,2,1,1},{0,0,1,2,0}};
int i,j,k,n,m,ff[10][10],an,re[10][10];
void dfs(int x,int y,int z,int s) {
    if (z+(m*(n-x))/5<=an) return;
    if (x+2>n) {
        if (an<z) {
            an=z; memcpy(re,ff,sizeof(re));
        } return;
    }
    if (y+2>m) {
        dfs(x+1,1,z,s); return;
    }
    int i,j,xx,yy;
    For(i,0,3) {
        int F=0;
        For(j,0,4) {
            xx=x+a1[i][j],yy=y+a2[i][j];
            if (ff[xx][yy]) {
                F=1; break;
            }
        }
        if (F) continue;
        For(j,0,4) {
            xx=x+a1[i][j],yy=y+a2[i][j];
            ff[xx][yy]=z+1;
        }
        dfs(x,y+1,z+1,s-5);
        For(j,0,4) {
            xx=x+a1[i][j],yy=y+a2[i][j];
            ff[xx][yy]=0;
        }
    }
    dfs(x,y+1,z,s-1);
}
int main() {
    scanf("%d%d",&n,&m);
    dfs(1,1,0,n*m); printf("%d\n",an);
    For(i,1,n) {
        For(j,1,m) printf("%c",!re[i][j]?'.':char(re[i][j]+64));
        printf("\n");
    } return 0;
}
