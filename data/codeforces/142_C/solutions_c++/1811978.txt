#include<iostream>
#include<sstream>
#include<fstream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<iomanip>
#include<map>

using namespace std;

typedef long long ll;
#define FOR(i,a,b) for(register int (i)=int(a); (i)<int(b); ++(i))
#define error(x) cerr<<#x<<" = "<<(x)<<endl
#define LINE cerr<<"----------------------------------------------------------------------------------------------"
int n,m;

int mat[10][10],ans[10][10];
int best=0;

bool puzz[4][3][3] = {
	{ {1,1,1}
	, {0,1,0}
	, {0,1,0}
	}
	,
	{ {1,0,0}
	, {1,1,1}
	, {1,0,0}
	}
	,
	{ {0,0,1}
	, {1,1,1}
	, {0,0,1}
	}
	,
	{ {0,1,0}
	, {0,1,0}
	, {1,1,1}
	}
};

int cur=0;
int cnt=2;
int tot=0;

bool valid(int k,int x,int y) {
	if(x+2>=n || y+2>=m)	return false;
	FOR(i,0,3) FOR(j,0,3) if(mat[x+i][y+j]!=0 && puzz[k][i][j]==1)	return false;
	return true;
}

void put_it(int k,int x,int y) {
	FOR(i,0,3) FOR(j,0,3) mat[x+i][y+j]=(puzz[k][i][j]==1?cnt:mat[x+i][y+j]);
}
void pick_it(int k,int x,int y) {
	FOR(i,0,3) FOR(j,0,3) mat[x+i][y+j]=(puzz[k][i][j]==1?0:mat[x+i][y+j]);
}


void f(int x,int y) {
	if(y==m) { x++; y=0; }
	if(x==n) {
		if(cur>best) {
			FOR(i,0,n) FOR(j,0,m) ans[i][j]=mat[i][j];
			best=cur;
		}
		tot=max(tot,cur);
		return ;
	}
	int rest=0;
	FOR(i,x,n) FOR(j,0,m) if(mat[i][j]==0)	rest++;
	FOR(i,0,y+1) if(mat[x][i]==0)	rest--;
	if(rest/5 + cur <= tot)	return;
	f(x,y+1);
	FOR(i,0,4) {
		if(valid(i,x,y)) {
			cnt++;
			put_it(i,x,y);
			cur++;
			f(x,y+1);
			pick_it(i,x,y);
			cur--;
		}
	}
	return ;
}

map<int,char> id;

int t=0;

int main() {
	cin>>n>>m;
	f(0,0);
	cout<<tot<<endl;
	FOR(i,0,n) {
		FOR(j,0,m) {
			if(ans[i][j] && id.find(ans[i][j])==id.end())
				id[ans[i][j]]=t++;
			if(ans[i][j]) cout<<char(id[ans[i][j]]+'A');
			else cout<<".";
		}
		cout<<endl;
	}
}
