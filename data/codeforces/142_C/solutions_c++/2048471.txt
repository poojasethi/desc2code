#include <cstdio>
#include <cstring>

using namespace std;

const int dy[4][5] = {{0,0,0,1,2}, {0,1,1,1,2}, {0,1,2,2,2}, {0,1,1,1,2}};
const int dx[4][5] = {{0,1,2,1,1}, {2,0,1,2,2}, {1,1,0,1,2}, {0,0,1,2,0}};

int H, W;
char map[16][16];
char best[16][16];
int score, res, cur;

bool can_put(int y, int x, int p){
	for(int k = 0; k < 5; ++ k){
		int ny = y + dy[p][k], nx = x + dx[p][k];
		if(!(0 <= ny && ny < H && 0 <= nx && nx < W && map[ny][nx] == '.')){
			return false;
		}
	}
	return true;
}

void draw(int y, int x, int p, char c){
	for(int k = 0; k < 5; ++ k){
		map[y + dy[p][k]][x + dx[p][k]] = c;
	}
}

void rec(int y, int x){
	if(x == W){
		if(y < H){
			rec(y + 1, 0);
		}
		return;
	}
	if(cur + res / 5 <= score){
		return;
	}
	if(y <= H - 3 && x <= W - 3){
		int tmp = res;
		for(int p = 0; p < 4; ++ p){
			if(can_put(y, x, p)){
				draw(y, x, p, 'A' + cur);
				++ cur;
				if(score < cur){
					score = cur;
					memcpy(best, map, sizeof(map));
				}
				res -= 5 + (map[y][x] == '.' ? 1 : 0);
				rec(y, x + 1);
				res = tmp;
				-- cur;
				draw(y, x, p, '.');
			}
		}
	}

	if(map[y][x] == '.'){
		-- res;
	}
	rec(y, x + 1);
	if(map[y][x] == '.'){
		++ res;
	}
}

int main(){
	while (~scanf("%d%d", &H, &W)) {
        for(int i = 0; i < H; ++ i){
            for(int j = 0; j < W; ++ j){
                map[i][j] = best[i][j] = '.';
            }
        }
        score = 0;
        cur = 0;
        res = H * W;
        rec(0, 0);
        printf("%d\n", score);
        for(int i = 0; i < H; ++ i) {
            for (int j = 0; j < W; ++ j) {
                printf("%c", best[i][j]);
            }
            printf("\n");
        }
	}
	return 0;
}
