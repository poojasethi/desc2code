#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;

#define maxn 15
char dir[3][15]=
	{"AAA.A.A....A",
	 ".A..A.AAAAAA",
	 ".A.AAAA....A"};
/*int dir[4][4][2] = {{{0, 1}, {0, 2}, {1, 1}, {2, 1}}, {{1, 0}, {2, 0}, {2, -1}, {1, 0}}, 
	{{-1, 0}, {1, 0}, {0, -1}, {0, -2}}, {{-1, 0}, {1, 0}, {0, 1}, {0, 2}}};*/
int n, m, mx, least;
char res[maxn][maxn], cur[maxn][maxn];

bool valid(int r, int c) {
	return r >= 0 && r < n && c >= 0 && c < m;
}

int rest; // >=真正的rest，换行的时候会出现偏差
void search(int r, int c, int cnt) {
	if (r >= n - 2) {
		if (mx < cnt) {
			mx = cnt;
			for (int i = 0; i < n; i++) for (int j = 0; j < m; j++)
				res[i][j] = cur[i][j];
		}
		return;
	}
	//jianZhi
	if (rest / 5 + cnt <= mx) //< jiu TLE, 
		return;

	if (c >= m - 2) {
		search(r + 1, 0, cnt);
	//	rest += cur[r][c] > 0;	//forgot writing this sent
		return;
	}
	rest -= cur[r][c] == '.';
	int f, i, j, d;
	for (d = 0; d < 12; d+=3) {
		f = 1;
		for (i = 0; i < 3; i++) for (j = 0; j < 3; j++) 
			if (dir[i][d + j] == 'A' && cur[r + i][c + j] != '.') {
				f = 0;
				break;
			}
		if (f) {
			for (i = 0; i < 3; i++) for (j = 0; j < 3; j++)
				if (dir[i][d + j] == 'A')
					cur[r + i][c + j] = cnt + 'A';
			rest -= 5;
			search(r, c + 1, cnt + 1);
			rest += 5;
			for (i = 2; i >= 0; i--) for (j = 2; j >= 0; j--)
				if (dir[i][d + j] == 'A')
					cur[r + i][c + j] = '.';
		}
	}
	//这句要放最后，mx才能更快变大
	search(r, c + 1, cnt);
	rest += cur[r][c] == '.';
}

int main() {
	scanf("%d %d", &n, &m);
	mx = 0;
//	least = (n / 3) * (m / 3); //优化
	rest = n * m;
	for (int i = 0; i < n; i++) for (int j = 0; j < m; j++)
		res[i][j] = cur[i][j] = '.';
	search(0, 0, 0);
	printf("%d\n", mx);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++)
			printf("%c", res[i][j]);
		printf("\n");
	}
}
