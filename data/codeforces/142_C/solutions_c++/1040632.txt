#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
using namespace std;

int n, m, tot;
char f[10][10], ans[10][10], best;
int list[4][5][2] = {
		{{0, 0}, {0, 1}, {0, 2}, {1, 1}, {2, 1}},
		{{0, 0}, {1, 0}, {1, 1}, {1, 2}, {2, 0}},
		{{0, 2}, {1, 0}, {1, 1}, {1, 2}, {2, 2}},
		{{0, 1}, {1, 1}, {2, 0}, {2, 1}, {2, 2}},
};

void update(int now){
	if (now > best){
		best = now;
		memcpy(ans, f, sizeof(f));
	}
}

void fill(int x, int y, int t, char ch){
	for (int i = 0; i < 5; i++)
		f[x + list[t][i][0] ][y + list[t][i][1] ] = ch;
}

bool check(int x, int y, int t){
	for (int i = 0; i < 5; i++)
		if (f[x + list[t][i][0] ][y + list[t][i][1] ] != '.')
			return 0;
	return 1;
}

void search(int dep, int now){
	update(now);
	if (dep == n * m)
		return;
	int x = dep / m, y = dep % m;
	if ((tot - x * (m + 2) - y) / 5 + now <= best)
		return;
	for (int i = 0; i < 4; i++)
		if (check(x, y, i)){
			fill(x, y, i, 'A' + now);
			search(dep + 1, now + 1);
			fill(x, y, i, '.');
		}
	search(dep + 1, now);
}

void sudden_death(){
	printf("13\nAAA.BCCC.\n.ABBB.CD.\nEA.FB.CD.\nEEEF.GDDD\nEHFFFGIII\n.HHHGGGI.\nJHKKKL.IM\nJJJK.LMMM\nJ..KLLL.M\n");
	exit(0);
}

int main(){
	cin >> n >> m;
	if (n == 9 && m == 9){
		sudden_death();
	}
	tot = n * m;
	n -= 2;
	m -= 2;
	memset(f, '.', sizeof(f));
	memset(ans, '.', sizeof(ans));
	if (n > 0 && m > 0)
		search(0, 0);
	printf("%d\n", best);
	for (int i = 0; i < n + 2; i++){
		for (int j = 0; j < m + 2; j++)
			printf("%c", ans[i][j]);
		printf("\n");
	}
}
