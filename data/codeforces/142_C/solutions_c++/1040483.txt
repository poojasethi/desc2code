#include <stdio.h>
#include <string.h>

using namespace std;

#define MAX_N 11
#define MAX_E 1100000

#define mp make_pair

int n, m, sol;

int A[MAX_N][MAX_N], mat[MAX_N][MAX_N];

int o[] = {0, 0, 0, 1, 2, 0, 1, 1, 1, 2, 0, 1, 2, 2, 2, 0, 1, 1, 1, 2};
int v[] = {0, 1, 2, 1, 1, 2, 0, 1, 2, 2, 1, 1, 0, 1, 2, 0, 0, 1, 2, 0};

void back(int p, int q, int nr) {
    if (p > n) {
        if (nr > sol) {
            sol = nr;
            for (int i = 0; i < n; i++)
                for (int j = 0; j < m; j++)
                    mat[i][j] = A[i][j];
        }

        return;
    }

    if (sol > nr + (n - p) / 3 * 5)
        return;

    if (p + 2 < n && q + 2 < m)
        for (int piece = 0; piece < 4; piece++) {
            int pstart = piece * 5;
            int pstop = (piece + 1) * 5 - 1;
    
            int ok = 1;

            for (int i = pstart; i <= pstop; i++)
                if (A[p + o[i]][q + v[i]] != 0) {
                    ok = 0;
                    break;
                }

            if (ok) {
                for (int i = pstart; i <= pstop; i++) 
                    A[p + o[i]][q + v[i]] = nr + 1;
                   
                back(p, q + 1, nr + 1);

                for (int i = pstart; i <= pstop; i++)
                    A[p + o[i]][q + v[i]] = 0;
            }
        }

    if (q + 1 < m)
        back(p, q + 1, nr);
    else
        back(p + 1, 0, nr);
}

int main() {

    scanf("%d %d", &n, &m);

    back(0, 0, 0);

    printf("%d\n", sol);
  
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++)
            if (mat[i][j] == 0)
                printf(".");
            else
                printf("%c", 'A' + mat[i][j] - 1);

        printf("\n");
    }

    return 0;
}
