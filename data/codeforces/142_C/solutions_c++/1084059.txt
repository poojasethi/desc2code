#include <iostream>
#include <cstring>
using namespace std;

char T[4][4][4] = 
{
	{
		"###",
		".#.",
		".#.",
	},
	{
		"..#",
		"###",
		"..#",
	},
	{
		".#.",
		".#.",
		"###",
	},
	{
		"#..",
		"###",
		"#..",
	}
};

char a[11][11];
char ans[11][11];
int da = 0;
int n;
int m;

inline bool isok(int x, int y, int k)
{
	if (x + 2 > n || y + 2 > m) return false;

	for (int i=0; i<3; i++)
		for (int j=0; j<3; j++)
			if (T[k][i][j] == '#' && a[x+i][y+j] != '.') return false;
	return true;
}
inline void doit(int x, int y, int k, char color)
{
	for (int i=0; i<3; i++)
		for (int j=0; j<3; j++)
			if (T[k][i][j] == '#') a[x+i][y+j] = color;
}
inline void undo(int x, int y, int k, char color)
{
	for (int i=0; i<3; i++)
		for (int j=0; j<3; j++)
			if (T[k][i][j] == '#') a[x+i][y+j] = '.';
}
void dfs(char color, int x, int y, int put)
{
	if (y == m - 1) { dfs(color, x+1, 1, put); return ; }

	if (x == n - 1)
	{
		if (put > da)
		{
			da = put;
			memcpy(ans, a, sizeof(a));
		}
	}
	else
	{
		int t = 0;
		for (int i=x; i<=n; i++)
			for (int j=1; j<=m; j++)
				if (a[i][j] == '.') t++;
		if (put + t / 5 <= da) return;

		for (int i=0; i<4; i++)
		{
			if (isok(x, y, i))
			{
				doit(x, y, i, color);
				dfs(color+1, x, y+1, put + 1);
				undo(x, y, i, color);
			}
		}
		dfs(color, x, y+1, put);
	}
}
int main(void)
{
	cin >> n >> m;
	/*
	if (n == 9 && m == 9)
	{
		cout << 13 << "\n" << "AAA.BCCC.\n.ABBB.CD.\nEA.FB.CD.\nEEEF.GDDD\nEHFFFGGGI\n.HHHJGIII\nKH.LJJJMI\nKKKLJMMM.\nK.LLL..M.\n";
		return 0;
	}
	*/
	memset(a, '.', sizeof(a));
	memcpy(ans, a, sizeof(ans));

	if (n >= 3 && m >= 3) dfs('A', 1, 1, 0);

	cout << da << "\n";
	for (int i=1; i<=n; i++)
	{
		for (int j=1; j<=m; j++)
			cout << ans[i][j];
		cout << "\n";
	}

	return 0;
}
