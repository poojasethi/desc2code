#include <iostream>
#include <algorithm>
using namespace std;
typedef long long ll;

ll f[400000];
int k;

ll gcd(ll a, ll b)
{
	if (b) return gcd(b, a%b);
	return a;
}

ll lcm(ll a, ll b)
{
	return a*b / gcd(a, b);
}

ll dp(int a, int b)
{
	if (a < b) return dp(b, a);
	for (int i = a; i >= b; --i) f[i] = a;
	f[a] = 0;

	for (int i = a; i >= b; --i)
	{
		f[i - 1] = min(f[i - 1], f[i] + 1);
		for (int j = 2; j <= k; ++j) 
			f[i - i%j] = min(f[i - i%j], f[i] + 1);
	}

	return f[b];
}

int main()
{
	ll a, b;
	cin >> a >> b >> k;
	int m = 1;
	for (int i = 2; i <= k; ++i) 
		m = lcm(m, i);

	long long q = a / m - b / m;
	if (q) cout << dp(a%m, 0) + dp(m, 0)*(q - 1) + dp(m, b%m);
	else cout << dp(a%m, b%m);
}