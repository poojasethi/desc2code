#include<bits/stdc++.h>
using namespace std;


#define lld long long
#define MAX 2005
int a[MAX],b[MAX];

vector<pair<int,int> > ans;

struct node
{
	int i,j;
	lld sum;
	node(int x,int y,lld s)
	{
		i = x;
		j = y;
		sum  = s;
	}
};

bool compare(node a,node b)
{
	return a.sum<b.sum;
}

vector<node> store1,store2;

int main()
{
	cin.sync_with_stdio(false);
	cout.sync_with_stdio(false);
	
	int n,m;
	cin>>n;
	
	for(int i = 0;i<n;i++)
		cin>>a[i];
	cin>>m;
	for(int i = 0;i<m;i++)
		cin>>b[i];
	
	lld sum1 = 0;
	lld sum2 = 0;
	
	for(int i = 0;i<n;i++)
		sum1 = sum1 + a[i];
	
	for(int i = 0;i<m;i++)
		sum2 = sum2 + b[i];
	
	lld result = abs(sum1-sum2);
	
	for(int i = 0;i<n;i++)
	{
		for(int j = 0;j<m;j++)
		{
			lld newDiff = sum1-sum2 + 2*b[j]-2*a[i];	
			if(result>abs(newDiff))
			{
				ans.clear();
				ans.push_back(make_pair(i+1,j+1));
				result = abs(newDiff);
			}
		}
	}
	lld diff = sum1 - sum2;
	
	for(int i = 0;i<n;i++)
	{
		for(int j = i+1;j<n;j++)
		{
			store1.push_back(node(i+1,j+1,a[i]+a[j]));
		}
	}
	
	
	for(int i = 0;i<m;i++)
	{
		for(int j = i+1;j<m;j++)
		{
			store2.push_back(node(i+1,j+1,b[i]+b[j]));
		}
	}
	
		
	sort(store1.begin(),store1.end(),compare);
	sort(store2.begin(),store2.end(),compare);
	
	int  i =0;
	int j = 0;

	while(i<store1.size() && j<store2.size())
	{
		lld newDiff = sum1 - sum2 + 2*store2[j].sum - 2*store1[i].sum;
		
		if(abs(newDiff)<result)
		{
			result = abs(newDiff);
			ans.clear();
			ans.push_back(make_pair(store1[i].i,store2[j].i));
			ans.push_back(make_pair(store1[i].j,store2[j].j));
		}
		if(newDiff<0)
			j++;
		else
			i++;
	}
	
	cout<<result<<endl;
	cout<<ans.size()<<endl;
	for(int i = 0;i<ans.size();i++)
		cout<<ans[i].first<<" "<<ans[i].second<<endl;
	
	return 0;
}