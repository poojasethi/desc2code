#include<cstdio>
#include<cstring>
#include<map>
#include<iostream>
#include<algorithm>
using namespace std;
typedef long long ll;
map<ll,pair<int,int> >f;
int a[2][2005];
ll sum[2];
pair<int,int>ans[2];
int main()
{
    int n,m;
    scanf("%d",&n);
    for(int i=0;i<n;i++)
        scanf("%d",&a[0][i]),sum[0]+=a[0][i];
    scanf("%d",&m);
    for(int i=0;i<m;i++)
        scanf("%d",&a[1][i]),sum[1]+=a[1][i];
    if(sum[0]==sum[1]){puts("0\n0");return 0;}
    ll bound=abs(sum[0]-sum[1]);
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
        {
            ll tt=abs(sum[0]-2*(ll)a[0][i]+2*(ll)a[1][j]-sum[1]);
            if(tt<bound)ans[0].first=i+1,ans[0].second=j+1,bound=tt;
        }
    for(int i=0;i<n;i++)
        for(int j=i+1;j<n;j++)
            f[2*(ll)a[0][i]+2*(ll)a[0][j]]=make_pair(i+1,j+1);
    for(int i=0;i<m;i++)
        for(int j=i+1;j<m;j++)
        {
            ll tt=sum[0]-sum[1]+2*((ll)a[1][i]+(ll)(a[1][j]));
            map<ll,pair<int,int> >::iterator iter=f.lower_bound(tt);
            if((iter!=f.end()&&(abs(tt-iter->first)<bound))||(iter!=f.begin()&&(tt-(--iter)->first)<bound))
            {
                    ans[0]=make_pair(iter->second.first,i+1);
                    ans[1]=make_pair(iter->second.second,j+1);
                    bound=abs(iter->first-tt);
            }
        }
    printf("%I64d\n",bound);
    if(bound==sum[0]-sum[1]){puts("0");return 0;}
    if(!ans[1].first)cout<<"1\n"<<ans[0].first<<" "<<ans[0].second<<endl;
    else cout<<"2\n"<<ans[0].first<<" "<<ans[0].second<<endl<<ans[1].first<<" "<<ans[1].second<<endl;
    return 0;
}
