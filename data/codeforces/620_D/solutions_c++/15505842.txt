#include <bits/stdc++.h>
using namespace std;
#define ll long long
const int mod = 1e9 + 7;
const int nmax = 100005;
const ll inf = 1e12;
const double eps = 1e-6;
ll a[2005];
ll b[2005];
map<ll,pair<int, int> > mp;
vector<pair<int, int> > as;
ll sum1, sum2, dop1, dop2;
int main(){
    ios_base::sync_with_stdio(0);
    int n;
    cin >> n;
    for(int i = 0; i < n; ++i){
        cin >> a[i];
        sum1 += a[i];
    }
    int m;
    cin >> m;
    for(int i = 0; i < m; ++i) {
        cin >> b[i];
        sum2 += b[i];
    }
    ll ans = inf;
    dop1 = sum1, dop2 = sum2;
    for(int i = 0; i < n; ++i){
        for(int j = 0; j < m; ++j){
            ll cur1 = sum1 - a[i] + b[j];
            ll cur2 = sum2 + a[i] - b[j];
            if (abs(cur1 - cur2) < abs(dop1 - dop2)){
                as.clear();
                as.push_back({i, j});
                dop1 = cur1;
                dop2 = cur2;
            }
        }
    }
    ans = fabs(dop1 - dop2);
    for(int i = 0; i < n; ++i){
        for(int j = i + 1; j < n; ++j){
            mp[2ll * (a[i] + a[j])] = {i, j};
        }
    }
    for(int i = 0; i < m; ++i){
        for(int j = i + 1; j < m; ++j){
            ll cur = sum1 - sum2 + 2ll * (b[i] + b[j]);
            map<ll, pair<int, int> >::iterator it = mp.lower_bound(cur);
            if (it != mp.begin()) it--;
            for(int t = 0; t < 2; ++t){
                if (it == mp.end()) break;
                ll c = abs(it->first - cur);
                if (c < ans){
                    as.clear();
                    pair<int, int> p = it->second;
                    as.push_back({p.first, i});
                    as.push_back({p.second, j});
                    ans = c;
                }
                it++;
            }
        }
    }
    cout << ans << '\n';
    cout << (int)as.size() << '\n';
    for(int i = 0; i < as.size(); ++i) cout << as[i].first + 1 << ' ' << as[i].second + 1 << '\n';
    return 0;
}
