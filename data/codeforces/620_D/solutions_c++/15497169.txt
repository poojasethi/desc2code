#include <cstdio>
#include <algorithm>
#include <vector>
#include <map>

using namespace std;

#define all(a) (a).begin(),(a).end()
#define pb push_back
#define sz(a) ((int)(a).size())
#define mp make_pair
#define fi first
#define se second

typedef pair<int,int> pint;
typedef long long ll;
typedef vector<int> vi;


#define MAX_N 2005

int n,m,a[MAX_N],b[MAX_N];

void print(ll val, vector<pint> &ans)
{
	printf("%lld\n",val);
	printf("%d\n",sz(ans));
	for (int i=0; i<sz(ans); i++)
		printf("%d %d\n",ans[i].fi,ans[i].se);
}

int main()
{
	scanf("%d",&n);
	ll sa=0;
	for (int i=1; i<=n; i++)
	{
		scanf("%d",a+i);
		sa+=a[i];
	}
	scanf("%d",&m);
	ll sb=0;
	for (int i=1; i<=m; i++)
	{
		scanf("%d",b+i);
		sb+=b[i];
	}
	if (sa-sb==0)
	{
		printf("0\n0\n");
		return 0;
	}
	ll val=1LL<<60;
	vector<pint> ans;
	for (int i=1; i<=n; i++)
		for (int j=1; j<=m; j++)
			if (abs(sa-sb+2LL*(b[j]-a[i]))<val)
			{
				ans.clear();
				val=abs(sa-sb+2LL*(b[j]-a[i]));
				ans.pb(mp(i,j));
			}
	if (val==0||n<2||m<2)
	{
		print(val,ans);
		return 0;
	}
	map<ll,pint> got;
	for (int i=1; i<=n; i++)
		for (int j=i+1; j<=n; j++)
			got[2LL*(a[i]+a[j])]=mp(i,j);
	for (int i=1; i<=m; i++)
		for (int j=i+1; j<=m; j++)
		{
			ll want=sa-sb+2LL*(b[i]+b[j]);
			map<ll,pint>::iterator it=got.lower_bound(want);
			if (it!=got.begin())
				it--;
			for (int x=0; x<2; x++,it++)
			{
				if (it==got.end())
					break;
				ll here=abs(want-it->fi);
				if (here<val)
				{
					val=here;
					ans.clear();
					ans.pb(mp(it->se.fi,i));
					ans.pb(mp(it->se.se,j));
				}
			}
		}
	print(val,ans);
	return 0;
}
