// In the name of Allah

#include <bits/stdc++.h>
using namespace std;

#define dbg(x) cerr << #x << " = " << (x) << endl;
#define FOR(i,a,b) for (int i = (a); i < (b); i ++)
#define rep(i,n) for (int i = 0; i < (n); i ++)
#define repd(i,n) for (int i = (n); i >= 0; i --)
#define PI 3.14159265358979323846
#define pb push_back
#define mp make_pair
#define X first
#define Y second

typedef long long ll;
typedef long double ld;
typedef pair<int, int> pii;

const int max_n = 2000;
ll a [max_n], b [max_n];
vector < pair <ll, pii> > v;
vector < pii > ans;

int main()
{
    int n, m;
    cin >> n;
    rep (i, n)
        cin >> a[i];
    cin >> m;
    rep (i, m)
        cin >> b[i];
    
    ll sum = 0;
    rep (i, n)
        sum += a[i];
    rep (i, m)
        sum -= b[i];
    ll min = abs (sum);
    
    rep (i, n)
        rep (j, m)
        {
            ll tmp = abs (sum-2*a[i]+2*b[j]);
            if ( tmp < min )
            {
                min = tmp;
                ans.clear();
                ans.pb (mp(i, j));
            }
        }
    
    rep (i, m)
        FOR (j, i+1, m)
            v.pb (mp(2*(b[i]+b[j]), mp(i, j)));
    sort (v.begin(), v.end());
    rep (i, n)
        FOR (j, i+1, n)
        {
            int id = lower_bound (v.begin(), v.end(), mp(-sum + 2*(a[i]+a[j]), mp(0,0))) - v.begin();
            for (int k = max (id-1, 0); k <= id && k < v.size(); k ++)
            {
                ll tmp = abs (sum - 2*(a[i]+a[j]) + v[k].X);
                if ( tmp < min )
                {
                    min = tmp;
                    ans.clear();
                    ans.pb (mp(i, v[k].Y.X));
                    ans.pb (mp(j, v[k].Y.Y));
                }
            }
        }
       
    cout << min << endl;
    cout << ans.size() << endl;
    rep (i, ans.size())
        cout << ans[i].X+1 << " " << ans[i].Y+1 << endl;
    
    return 0;
}