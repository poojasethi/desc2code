#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;

int main() {

    int n, m;
    ll v;
    scanf("%d", &n);
    ll a[n], suma = 0;

    for (int i = 0; i < n; ++i)
        scanf("%I64d", &a[i]), suma += a[i];

    scanf("%d", &m);
    ll b[m], sumb = 0;
    for (int i = 0; i < m; ++i)
        scanf("%I64d", &b[i]), sumb += b[i];

    v = abs(suma - sumb);

    vector < pair <int, int> > vp;
    for(int i = 0 ; i < n ; i++) {

        for(int j = 0 ; j < m ; j++) {
            if(abs(suma-sumb-2*a[i]+2*b[j]) < v) {
                v = abs(suma-sumb-2*a[i]+2*b[j]);
                vp.clear();
                vp.push_back(make_pair(i, j));
            }
        }
    }

    map <ll, pair<int, int> > mp;

    for(int i = 0 ; i < m ; ++i) {

        for(int j = i+1 ; j < m ; ++j)
            mp[2*(b[i] + b[j])] = make_pair(i, j);

    }

    for(int i = 0 ; i < n ; ++i)
        for(int j = i+1 ; j < n ; ++j) {

            ll d = suma - sumb - 2*(a[i]+a[j]);
            map <ll, pair<int, int> >:: iterator it = mp.lower_bound(-d);
            if(it != mp.end() && d+it->first < v) {

                v = d+it->first;
                vp.clear();
                vp.push_back(make_pair(i, it->second.first));
                vp.push_back(make_pair(j, it->second.second));

            }
            if(it != mp.begin()) {
                --it;
                if(-d-it->first < v) {

                    v = -d-it->first;
                    vp.clear();
                    vp.push_back(make_pair(i, it->second.first));
                    vp.push_back(make_pair(j, it->second.second));

                }
            }
        }

    cout << v << "\n" << vp.size() << "\n";
    for(int i = 0 ; i < vp.size() ; i++)
        cout << vp[i].first+1 << " " << vp[i].second+1 << "\n";



    return 0;
}