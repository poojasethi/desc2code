#include <stdio.h>
#include <algorithm>
using namespace std;

typedef __int64 ll;

ll Abs(ll a){
    return a < 0 ? -a : a;
}

int n, m;
const int maxn = 2002;
int a[maxn], b[maxn];
ll res;
pair<int, int> rec[2];
pair<ll, pair<int, int> > A[maxn * maxn], B[maxn * maxn];
ll s1, s2, d;
int na, nb;
void t_main(){
    scanf("%d", &n);
    for(int i = 0; i < n; i ++){
        scanf("%d", a + i);
        s1 += a[i];
    }
    scanf("%d", &m);
    for(int i = 0; i < m; i ++){
        scanf("%d", b + i);
        s2 += b[i];
    }
    res = Abs(s1 - s2);
    for(int i = 0; i < n; i ++){
        for(int j = 0; j < m; j ++){
            d = Abs(s1 - s2 - 2 * a[i] + 2 * b[j]);
            if(d < res){
                res = d;
                rec[0] = {i + 1, j + 1};
            }
        }
    }

    for(int i = 0; i < n; i ++)
        for(int j = i + 1; j < n; j ++)
           A[na ++]  = {a[i] + a[j], {i + 1, j + 1}};
    for(int i = 0; i < m; i ++)
        for(int j = i + 1; j < m; j ++)
           B[nb ++]  = {b[i] + b[j], {i + 1, j + 1}};
    sort(A, A + na);
    sort(B, B + nb);
    int u = 0, v = 0;
    while(true){
        if(u == na || v == nb) break;
        if(Abs((s1 - A[u].first + B[v].first) - (s2 + A[u].first - B[v].first)) < res){
            res = Abs((s1 - A[u].first + B[v].first) - (s2 + A[u].first - B[v].first));
            rec[0] = {A[u].second.first, B[v].second.first};
            rec[1] = {A[u].second.second, B[v].second.second};
        }
        if(s1 - A[u].first + B[v].first < s2 + A[u].first - B[v].first)
            v ++;
        else
            u ++;
    }
    printf("%I64d\n", res);
    int m = 0;
    while(m < 2 && rec[m].first > 0) m ++;
    printf("%d\n", m);
    for(int i = 0; i < m; i ++) printf("%d %d\n", rec[i].first, rec[i].second);
}
void run(){
    t_main();
}
int main(){
    run();
    return 0;
}
