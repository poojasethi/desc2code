#include<iostream>
#include<stdio.h>
#include<queue>
#include<algorithm>
#include<math.h>
#include<string>
#include<string.h>
#include<vector>
#include<map>
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define drep(i,a,b) for(int i=(a);i>=(b);--i)
using namespace std;
typedef long long LL;

const int MN=201000;
const int MOD=1e9+7;

int n,m;
int A[MN],B[MN],l,r,ll,rr,rrr,lll;
LL a,b;
map<LL,pair<int,int> > sb;

int main(){
#ifndef ONLINE_JUDGE
	freopen("in.cpp","r",stdin);
#endif // ONLINE
	ios::sync_with_stdio(0);
	scanf("%d",&n);
	rep(i,0,n){
		scanf("%d",&A[i]);
		a+=A[i];
	}
	scanf("%d",&m);
	rep(i,0,m) {
		scanf("%d",&B[i]);
		b+=B[i];
	}
	if(a==b){
		printf("0\n0\n");
		return 0;
	}
	l=r=ll=rr=-1;
	LL one=abs(a-b);
	bool f=0;
	rep(i,0,n){
		rep(j,0,m){
			LL t=abs(a-b-2LL*A[i]+2LL*B[j]);
			if(one>t){
				one=t; l=i+1,r=j+1; f=1;
			}
		}
	}
	if(!f){
		printf("%I64d\n0\n",one);
		return 0;
	}
	rep(i,0,m) rep(j,i+1,m){
		sb[ 2LL*(B[i]+B[j]) ] = make_pair(i,j );
	}
	LL two=abs(a-b);
	rep(i,0,n) rep(j,i+1,n) {
		LL t=-a+2LL*(A[i]+A[j])+b;
		map<LL,pair<int,int> >::iterator it=sb.lower_bound(t);
		if(it!=sb.end()){
			if(abs(t-it->first)<two){
				two=abs( t-it->first);
				lll=i+1,rrr=it->second.first+1;
				ll=j+1,rr=it->second.second+1;
			}
		}
		if(it!=sb.begin()){
			it--;
			if(abs(t-it->first)<two){
				two=abs( t-it->first);
				lll=i+1,rrr=it->second.first+1;
				ll=j+1,rr=it->second.second+1;
			}
		}
	}
	if(one<=two){
		printf("%I64d\n1\n",one);
		printf("%d %d\n",l,r);
	} else {
		printf("%I64d\n2\n",two);
		printf("%d %d\n",lll,rrr);
		printf("%d %d\n",ll,rr);
	}

	return 0;
}
