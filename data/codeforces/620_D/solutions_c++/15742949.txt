#include<cstdio>
#include<iostream>
#include<algorithm>
#include<map>
#define maxn 2002
#define maxx 1000*2000+2
using namespace std;

 typedef struct{
	long long sum;
	int p1,p2;
}hehe;

bool cmp(hehe a,hehe b)
{
	return a.sum<b.sum;
}

long long num1[maxn],num2[maxn],p[maxx];
hehe add[maxx];

int main()
{
//	freopen("C:\\Users\\ZDH\\Desktop\\a.txt","r",stdin);
	int a,b,x1,x2,y1,y2,flag=0;
	long long sum0=0,ans=0;
	scanf("%d",&a);
	for(int i=0;i<a;i++)
	{
		scanf("%I64d",&num1[i]);
		sum0+=num1[i];
	}
	scanf("%d",&b);
	for(int i=0;i<b;i++)
	{
		scanf("%I64d",&num2[i]);
		sum0-=num2[i];
	}
	ans=abs( sum0 );
	
	for(int i=0;i<a;i++)
		for(int j=0;j<b;j++)
			if( ans > abs( sum0-2*num1[i]+2*num2[j] ) )
			{
				x1=i;	y1=j;
				ans=abs( sum0-2*num1[i]+2*num2[j] );
				flag=1;
			}
			
	if( a>2 && b>2 )
	{
		int m=0;
		for(int i=0;i<a-1;i++)
			for(int j=i+1;j<a;j++)
			{
				add[m].sum=num1[i]+num1[j];
				add[m].p1=i;
				add[m].p2=j;
				m++;
			}
		sort(add,add+m,cmp);
		for(int i=0;i<m;i++)	p[i]=2*add[i].sum;
		for(int i=0;i<b-1;i++)
			for(int j=i+1;j<b;j++)
			{
				long long imax=sum0+2*(num2[i]+num2[j]);
				int k=lower_bound(p,p+m,imax)-p;
				if(k==m) k--;
				if( abs(imax-p[k]) < ans )
				{
					x1=add[k].p1;
					x2=add[k].p2;
					y1=i;	y2=j;
					ans=abs(imax-p[k]);
					flag=2;
				}
				if(k>0)
				{
					if( abs(imax-p[--k]) < ans )
					{
						x1=add[k].p1;
						x2=add[k].p2;
						y1=i;	y2=j;
						ans=abs(imax-p[k]);
						flag=2;
					}
				}
			}
	}
	printf("%I64d\n%d\n",ans,flag);
	if(flag==1) printf("%d %d\n",x1+1,y1+1);
	if(flag==2) printf("%d %d\n%d %d\n",x1+1,y1+1,x2+1,y2+1);
}
