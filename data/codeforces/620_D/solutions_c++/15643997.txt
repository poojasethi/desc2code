#include<iostream>
#include<algorithm>
#include<cstdlib>
#include<cstdio>
#include<map>
#include<set>
#include<cmath>
#define LiangJiaJun main
#define N 2004
using namespace std;
typedef long long LL;
struct data{
	LL s;int x,y;
	int operator < (const data &b)const{return s<b.s;}
};
multiset<data>S;
multiset<data>::iterator it;
int a[N],b[N],n,m,cnt,i,j,X[N],Y[N];
LL A,B,now,ans,tmp;
LL Abs(LL x){return x<0?-x:x;}
void Print(){
	printf("%I64d\n",ans);
	printf("%d\n",cnt);
	for (int i=1;i<=cnt;i++)
		printf("%d %d\n",X[i],Y[i]);
}
int LiangJiaJun(){
	scanf("%d",&n);
	for (i=1;i<=n;i++)
		scanf("%d",&a[i]),A+=a[i];
	scanf("%d",&m);
	for (i=1;i<=m;i++)
		scanf("%d",&b[i]),B+=b[i];
	ans=Abs(A-B);cnt=0;
	for (i=1;i<=n;i++)
		for (j=1;j<=m;j++){
			tmp=abs(A-2LL*a[i]-B+2LL*b[j]);
			if (tmp<ans)
				ans=tmp,cnt=1,X[1]=i,Y[1]=j;
	  }
	if (n==1||m==1) return Print(),0;
	for (i=1;i<n;i++)
		for (j=i+1;j<=n;j++)
			S.insert((data){2LL*(a[i]+a[j]),i,j});
	for (i=1;i<m;i++)
		for (j=i+1;j<=m;j++){
			now=2LL*(b[i]+b[j]);
			now=A-B+now;
			it=S.lower_bound((data){now,0,0});
			if (it!=S.end()){
				tmp=abs(now-(*it).s);
				if (tmp<ans)
					ans=tmp,cnt=2,X[1]=(*it).x,Y[1]=i,X[2]=(*it).y,Y[2]=j;
			}if (it!=S.begin()){
				--it;
				tmp=abs(now-(*it).s);
					if (tmp<ans)
				ans=tmp,cnt=2,X[1]=(*it).x,Y[1]=i,X[2]=(*it).y,Y[2]=j;
			}
	  }
	Print();
	return 0;
}
