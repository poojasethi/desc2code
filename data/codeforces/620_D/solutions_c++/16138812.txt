#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
typedef long long ll;
struct data{
	int x,y;
	ll v;
}c[4100001],d[4100001];
ll sa,sb,ansv,a[2101],b[2101];
int i,j,k,n,m,ans[3],t1,t2;
ll av(ll x){
	return (x>=0)?x:-x;
}
void update(int x,int y){
	if (y<1||y>t2||av(sa-sb+2LL*(d[y].v-c[x].v))>=ansv) return;
	ansv=av(sa-sb+2LL*(d[y].v-c[x].v));ans[0]=2;ans[1]=x;ans[2]=y;
}
bool cmp(data x,data y){
	return x.v<y.v;
}
int main(){
	scanf("%d",&n);
	for (sa=sb=0,i=1;i<=n;i++) scanf("%d",&k),sa+=k,a[i]=k;
	scanf("%d",&m);
	for (i=1;i<=m;i++) scanf("%d",&k),sb+=k,b[i]=k;
	ans[0]=0;ansv=av(sa-sb);
	for (i=1;i<=n;i++)
	 for (j=1;j<=m;j++)
	  if (av(sa-sb+2LL*(b[j]-a[i]))<ansv) ansv=av(sa-sb+2LL*(b[j]-a[i])),ans[0]=1,ans[1]=i,ans[2]=j;
	for (t1=0,i=1;i<=n;i++)
	 for (j=i+1;j<=n;j++) c[++t1].x=i,c[t1].y=j,c[t1].v=a[i]+a[j];
	for (t2=0,i=1;i<=m;i++)
	 for (j=i+1;j<=m;j++) d[++t2].x=i,d[t2].y=j,d[t2].v=b[i]+b[j];
	sort(c+1,c+1+t1,cmp);sort(d+1,d+1+t2,cmp);
	for (i=j=1;i<=t1;i++){
		for (;j<t2&&sa-sb+2LL*(d[j+1].v-c[i].v)<=0;j++);
		update(i,j-1);update(i,j);update(i,j+1);
	}
	printf("%I64d\n%d\n",ansv,ans[0]);
	if (ans[0]==1) printf("%d %d\n",ans[1],ans[2]);
	if (ans[0]==2) printf("%d %d\n%d %d\n",c[ans[1]].x,d[ans[2]].x,c[ans[1]].y,d[ans[2]].y);
	return 0;
}