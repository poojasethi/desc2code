#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

typedef long long int ll;

struct elem {
  int i1,i2;
  ll s;
  elem() {
  }
  elem(int ini1,int ini2,ll ins) {
    i1=ini1;i2=ini2;s=ins;
  }
};

bool operator<(elem e1,elem e2)
{
  return e1.s<e2.s;
}

ll absolut(ll x)
{
  if (x<0) return -x;
  return x;
}

int na,nb;
ll a[10000],b[10000];
ll sa=0,sb=0;

ll sol;
int tsol=0,sola1,sola2,solb1,solb2;
vector<elem> va,vb;

void mejorar(int ia1,int ia2,int ib1,int ib2)
{
  ll nextsol=absolut(sa-sb+2*(b[ib1]+b[ib2]-a[ia1]-a[ia2]));
  if (nextsol<sol) {
    sol=nextsol;
    tsol=2;
    sola1=ia1;
    sola2=ia2;
    solb1=ib1;
    solb2=ib2;
  }
}

int main()
{
  cin>>na;
  for (int i=1;i<=na;i++) {
    cin>>a[i];
    sa+=a[i];
  }
  for (int i=1;i<=na;i++)
    for (int j=i+1;j<=na;j++)
      va.push_back(elem(i,j,2*(a[i]+a[j])));
  sort(va.begin(),va.end());
  cin>>nb;
  for (int i=1;i<=nb;i++) {
    cin>>b[i];
    sb+=b[i];
  }
  for (int i=1;i<=nb;i++)
    for (int j=i+1;j<=nb;j++)
      vb.push_back(elem(i,j,2*(b[i]+b[j])));
  sort(vb.begin(),vb.end());
  sol=absolut(sa-sb);
  for (int i=1;i<=na;i++) {
    for (int j=1;j<=nb;j++) {
      ll nextsol=absolut(sa-sb+2*b[j]-2*a[i]);
      if (nextsol<sol) {
	sol=nextsol;
	tsol=1;
	sola1=i;
	solb1=j;
      }
    }
  }
  int ib=0;
  for (int ia=0;ia<int(va.size());ia++) {
    ll esperado=-(sa-sb-va[ia].s);
    while (ib<int(vb.size()) and vb[ib].s<esperado) ib++;
    if (ib<int(vb.size())) mejorar(va[ia].i1,va[ia].i2,vb[ib].i1,vb[ib].i2);
    if (0<=ib-1) mejorar(va[ia].i1,va[ia].i2,vb[ib-1].i1,vb[ib-1].i2);
  }
  cout<<sol<<endl;
  cout<<tsol<<endl;
  if (tsol>=1) cout<<sola1<<" "<<solb1<<endl;
  if (tsol>=2) cout<<sola2<<" "<<solb2<<endl;
}
