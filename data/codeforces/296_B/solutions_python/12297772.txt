from collections import *
from itertools   import *
mod = 10**9+7
mul = lambda x,y: (x*y)%mod

def count_leq(ss,tt):
  leq = {'??': 55}
  for i in xrange(10):
    leq['?%d'%i] = i+1
    leq['%d?'%i] = 10-i
  for i in xrange(10):
    for j in xrange(10):
      leq['%d%d'%(i,j)] = 1 if i<=j else 0

  return reduce(mul, (leq[c1+c2] for c1,c2 in izip(ss,tt)), 1)

def count_eq(ss,tt):
  eq = defaultdict(int)
  for i in xrange(10):
    eq['%d%d'%(i,i)] = 1
    eq['?%d'%i] = 1
    eq['%d?'%i] = 1
  eq['??'] = 10
  return reduce(mul, (eq[c1+c2] for c1,c2 in izip(ss,tt)), 1)

n = int(raw_input())
s = raw_input()
t = raw_input()
total = pow(10, s.count('?')+t.count('?'),mod)
total -= count_leq(s,t)
total -= count_leq(t,s)
total += count_eq (t,s)
print total%mod