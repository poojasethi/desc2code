#!/usr/bin/python

import os
import sys
import itertools


def solve(f, skip=False):
    n = f.read_int()
    s = [None]+[None if item=='?' else int(item) for item in list(f.read_str())]
    w = [None]+[None if item=='?' else int(item) for item in list(f.read_str())]

    mod = 1000000007
    dp = [[0]*4 for i in xrange(n+1)]
    dp[0][0] = 1

    for i in xrange(1,n+1):
        if s[i] is not None and w[i] is not None:
            if s[i] > w[i]:
                dp[i][0] = 0
                dp[i][1] = (dp[i-1][0] + dp[i-1][1]) % mod
                dp[i][2] = 0
                dp[i][3] = (dp[i-1][2] + dp[i-1][3]) % mod
            elif s[i] < w[i]:
                dp[i][0] = 0
                dp[i][1] = 0
                dp[i][2] = (dp[i-1][0] + dp[i-1][2]) % mod
                dp[i][3] = (dp[i-1][1] + dp[i-1][3]) % mod
            else:
                dp[i][0] = dp[i-1][0]
                dp[i][1] = dp[i-1][1]
                dp[i][2] = dp[i-1][2]
                dp[i][3] = dp[i-1][3]
        elif s[i] is not None:
            dp[i][0] = dp[i-1][0]
            dp[i][1] = (s[i]*dp[i-1][0] + (s[i]+1)*dp[i-1][1]) % mod
            dp[i][2] = ((9-s[i])*dp[i-1][0] + (10-s[i])*dp[i-1][2]) % mod
            dp[i][3] = ((9-s[i])*dp[i-1][1] + s[i]*dp[i-1][2] + 10*dp[i-1][3]) % mod
        elif w[i] is not None:
            dp[i][0] = dp[i-1][0]
            dp[i][1] = ((9-w[i])*dp[i-1][0] + (10-w[i])*dp[i-1][1]) % mod
            dp[i][2] = (w[i]*dp[i-1][0] + (w[i]+1)*dp[i-1][2]) % mod
            dp[i][3] = (w[i]*dp[i-1][1] + (9-w[i])*dp[i-1][2] + 10*dp[i-1][3]) % mod
        else:
            dp[i][0] = 10*dp[i-1][0]
            dp[i][1] = (45*dp[i-1][0] + 55*dp[i-1][1]) % mod
            dp[i][2] = (45*dp[i-1][0] + 55*dp[i-1][2]) % mod
            dp[i][3] = (45*dp[i-1][1] + 45*dp[i-1][2] + 100*dp[i-1][3]) % mod


    return dp[n][3]


class Reader(object):
    def __init__(self):
        self.f = sys.stdin

    def read_int(self):
        return int(self.f.readline().strip())
    def read_float(self):
        return float(self.f.readline().strip())
    def read_long(self):
        return long(self.f.readline().strip())
    def read_str(self):
        return self.f.readline().strip()

    def read_int_list(self):
        return [int(item) for item in self.f.readline().split()]
    def read_float_list(self):
        return [float(item) for item in self.f.readline().split()]
    def read_long_list(self):
        return [long(item) for item in self.f.readline().split()]
    def read_str_list(self):
        return self.f.readline().split()

if __name__ == '__main__':
    f = Reader()
    print solve(f)
