/*
 * Author:  Eyelids
 * Created Time:  2014/11/1 16:15:58
 * File Name: D.cpp
 */
#include<iostream>
#include<sstream>
#include<fstream>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<stack>
#include<map>
#include<set>
#include<bitset>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cctype>
#include<cmath>
#include<ctime>
using namespace std;
const double eps(1e-8);
typedef long long lint;
#define clr(x) memset( x , 0 , sizeof(x) )
#define sz(v) ((int)(v).size())
#define rep(i, n) for (int i = 0; i < (n); ++i)
#define repf(i, a, b) for (int i = (a); i <= (b); ++i)
#define repd(i, a, b) for (int i = (a); i >= (b); --i)
#define clrs( x , y ) memset( x , y , sizeof(x) )
#define LD long double 

int n, m, k;
LD g[100010];
LD calc( int n, int m ) {
    LD ret = 0;
    ret = g[n] - g[m] - g[n - m];
    return ret;
}

int main() {
    g[0] = 0;
    for ( int i = 1; i <= 100000; i ++ ) g[i] = g[i - 1] + log( i * 1.0 );
    
    scanf( "%d%d%d", &n, &m, &k );
    LD ret = 0;
    for ( int i = 0; i <= n; i ++ )
        for ( int j = 0; j <= n; j ++ ) if ( i * n + j * n - i * j <= k ) {
            int sum = i * n + j * n - i * j;
            LD tmp = calc( n, i ) + calc( n, j ) + calc( m - sum, k - sum ) - calc( m, k );
            ret = min( (LD)1e99, ret + exp( tmp ) );
        }
     
    printf( "%.10f\n", (double)ret );
    
    return 0;
}









