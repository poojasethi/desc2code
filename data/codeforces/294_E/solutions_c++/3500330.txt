#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
const int N=5005;
int x[N],y[N],z[N],num[N];
vector<int> g[N];
int n;
long long sum,ans,mi;
int dfs(int u,int f){

	int fa=x[f]+y[f]-u;
	int tmp=1;
	for(int i=0;i<g[u].size();i++){
		int v=x[g[u][i]]+y[g[u][i]]-u;
		if(v==fa) continue;
		tmp+=dfs(v,g[u][i]);
	}
	if(f){
		if(u<fa) num[f]=tmp;else num[f]=n-tmp;
		sum+=1LL*tmp*(n-tmp)*z[f];
	}
	return tmp;
}
int id;
void DFS(int number,int u,int f,long long c){
	int fa=x[f]+y[f]-u;
	long long k;
     if(f)
     {

     	if(u<fa) k=num[f];else k=n-num[f];
     		k=c+1LL*(number-k)*(n-number+k)*z[f]-1LL*(n-k)*k*z[f];
     }
     else k=c;
     mi=min(mi,k);

	for(int i=0;i<g[u].size();i++){
		int v=x[g[u][i]]+y[g[u][i]]-u;
		if(fa==v||g[u][i]==id) continue;
		DFS(number,v,g[u][i],k);

	}

}
int main(){
	cin>>n;
	for(int i=1;i<n;i++){
		cin>>x[i]>>y[i]>>z[i];
		g[x[i]].push_back(i);
		g[y[i]].push_back(i);
		if(x[i]>y[i]) swap(x[i],y[i]);
	}
	dfs(1,0);
	ans=sum;

	for(int i=1;i<n;i++){
         id=i;
         mi=sum;
         long long tmp=sum;

		DFS(num[i],x[i],0,0);

		tmp+=mi;

		mi=sum;
		DFS(n-num[i],y[i],0,0);
		tmp+=mi;

		ans=min(ans,tmp);
	}
	cout<<ans<<endl;
}
