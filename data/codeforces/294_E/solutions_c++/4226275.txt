#include<cstdio>
#include<cstring>
#define LL __int64
#define Min(a,b) a<b?a:b
#define INF 1e17

const int N=5000+5;
struct Node {
	int v,w,next;
}node[2*N];
int head[N];
int n,e;
int u[N],v[N],w[N];
LL sum,minn,ans;
LL son[N],dis[N];

void add(int u,int v,int w) {
	node[e].v=v;
	node[e].w=w;
	node[e].next=head[u];
	head[u]=e++;
}

void DFS(int u,int fa) {
	son[u]=1;
	dis[u]=0;
	for(int k=head[u];k!=-1;k=node[k].next) {
		int v=node[k].v,w=node[k].w;;
		if(v==fa)	continue;
		DFS(v,u);
		son[u]+=son[v];
		dis[u]+=dis[v]+w*son[v];
	}
}

void DFS2(int u,int fa,int rt) {
	minn=Min(minn,dis[u]);
	for(int k=head[u];k!=-1;k=node[k].next) {
		int v=node[k].v,w=node[k].w;
		if(v==fa)	continue;
		sum+=w*son[v]*(son[rt]-son[v]);
		LL temp=dis[u]-dis[v]-w*son[v];
		dis[v]+=temp+w*(son[rt]-son[v]);
		DFS2(v,u,rt);
	}
}

int main() {
	int i;
	while(~scanf("%d",&n)) {
		e=0;
		memset(head,-1,sizeof head);
		memset(son,0,sizeof son);
		memset(dis,0,sizeof dis);
		for(i=0;i<n-1;i++) {
			scanf("%d%d%d",&u[i],&v[i],&w[i]);
			add(u[i],v[i],w[i]);
			add(v[i],u[i],w[i]);
		}
		ans=INF;
		int x,y,z;
		for(i=0;i<n-1;i++) {
			x=u[i],y=v[i],z=w[i];
			sum=0;
			minn=INF;
			DFS(x,y);
			DFS2(x,y,x);
			sum+=minn*(n-son[x]);

			minn=INF;
			DFS(y,x);
			DFS2(y,x,y);
			sum+=minn*(n-son[y]);
			sum+=z*son[x]*son[y];
			ans=Min(ans,sum);
		}
		printf("%I64d\n",ans);
	}
	return 0;
}