#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
using namespace std;

#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define SZ(c) ((int)(c).size())

typedef long long LL;

const int N = 5005;
vector<pair<int, int> > a[N];
LL s[N], c[N], sv[N], ss[N], ssum[N];
int u[N], ucs, fx, fy;

void go(int x, int from=-1) {
	u[x] = ucs;
	c[x] = 1;
	s[x] = 0;
	FOR(it, a[x]) {
		if(it->first != from) {
			go(it->first, x);
			c[x] += c[it->first];
			s[x] += (it->second)*c[it->first] + s[it->first];
		}
	}
	//printf("%d: %I64d, %I64d\n", x, c[x], s[x]);
}

LL ans=(1LL<<60);
void go2(int x, int from=-1, LL S=0, LL C=0) {
	u[x] = ucs;
	s[x] += S;
	sv[x] = s[x];
	ss[x] = s[x];
	FOR(it, a[x]) {
		if(it->first != from) {
			go2(it->first, x, s[x]-s[it->first]-(it->second)*(c[it->first]) +(it->second)*(C+c[x]-c[it->first]), C+c[x]-c[it->first]);
			sv[x] = min(sv[x], sv[it->first]);
			ss[x] += ss[it->first];
		}
	}
	//printf("%d: S=%I64d, s=%I64d, C=%I64d, sv=%I64d\n", x, S, s[x], C, sv[x]);
}

int e[N][3];
int main(void) {
	int n;
	scanf("%d", &n);
	for(int i=1;i<n;i++) {
		int x, y, w;
		scanf("%d%d%d", &x, &y, &w);
		if(x>y) swap(x, y);
		a[x].push_back(make_pair(y, w));
		a[y].push_back(make_pair(x, w));
		e[i][0] = x;
		e[i][1] = y;
		e[i][2] = w;
	}
	for(int i=1;i<n;i++) {
		fx = e[i][0];
		fy = e[i][1];

		go(fx, fy); go(fy, fx);
		go2(fx, fy); go2(fy, fx);
		LL R=c[fx] * sv[fy] + e[i][2] * c[fx] * c[fy] + c[fy] * sv[fx] + ss[fx]/2 + ss[fy]/2;
		//printf("%d %d => %I64d (%d,%d)\n", fx, fy, R, h[0], h[1]);
		ans = min(ans, R);
	}
	printf("%I64d\n", ans);
	return 0;
}
