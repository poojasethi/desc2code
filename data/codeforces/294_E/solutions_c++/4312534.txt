#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
#include <iostream>
using namespace std;
typedef pair<int, int> pii;
typedef long long ll;
#define N 5003
const ll inf = 1ll<<60;

int n, s[N], size;
vector<pii> g[N];
ll d[N], ans, f[N], sum, res, s1, s2, r1, r2, c1, c2;
void dfs1(int now, int fa) {
    int u; ll w;
    s[now] = 1; f[now] = 0;
    for (int i=0; i<g[now].size(); i++)
        if ((u = g[now][i].first) != fa) {
            dfs1(u, now);
            s[now] += s[u];
            w = g[now][i].second;
            f[now] += f[u] + s[u]*w;
        }
}
void dfs2(int now, int fa) {
    int u; ll w;
    sum += f[now], res = min(res, f[now]);

    for (int i=0; i<g[now].size(); i++)
        if ((u = g[now][i].first) != fa) {
            w = g[now][i].second;
            f[u] = f[now] + w*(size-2*s[u]);
            dfs2(u, now);
        }
}
void work(int now, int fa) {
    int u; ll w;
    for (int i=0; i<g[now].size(); i++)
        if ((u = g[now][i].first) != fa) {
            dfs1(u, now); size = c1 = s[u]; sum = 0; res = inf;
            dfs2(u, now); s1 = sum/2; r1 = res;

            dfs1(now, u); size = c2 = s[now]; sum = 0; res = inf;
            dfs2(now, u); s2 = sum/2; r2 = res;

            w = g[now][i].second;
            ans = min(ans, s1+s2+c1*c2*w+c1*r2+c2*r1);

            work(u, now);
        }
}
int main() {
    scanf("%d", &n);
    for (int i=0; i<=n; i++) g[i].clear();

    for (int i=1, a, b, c; i<n; i++) {
        scanf("%d%d%d", &a, &b, &c);
        g[a].push_back(make_pair(b, c));
        g[b].push_back(make_pair(a, c));
    }

    ans = inf;
    work(1, 0);

    cout << ans << endl;
    return 0;
}
