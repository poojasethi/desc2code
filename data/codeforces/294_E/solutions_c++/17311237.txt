#include<bits/stdc++.h>
using namespace std;
#define LL long long
const int MAXN = 5010;
const LL MOD = 1e9 + 7;
int u[MAXN],v[MAXN],w[MAXN];
vector<pair<int,int> >G[MAXN];
LL tome[MAXN],all[MAXN],sz[MAXN];
int N;

void dfs(int u,int fa) {
	tome[u] = 0; all[u] = 0; sz[u] = 1;
	for (int i = 0 ; i < (int)G[u].size() ; i++) {
		int v = G[u][i].first;
		if (v == fa) continue;
		dfs(v,u);
		sz[u] += sz[v];
	}
	for (int i = 0 ; i < (int)G[u].size() ; i++) {
		int v = G[u][i].first;
		if (v == fa) continue;
		all[u] += all[v] + (sz[u] - sz[v]) * sz[v] * (LL)G[u][i].second + (sz[u] - sz[v])  * tome[v];
		tome[u] += tome[v] + sz[v] * (LL)G[u][i].second;
	}
}

LL getans(int u,int fa,LL fromp,int szi) {
	LL res = tome[u] + fromp;
	for (int i = 0 ; i < (int)G[u].size() ; i++) {
		int v = G[u][i].first,val = G[u][i].second;
		if (v == fa) continue;
		res = min(res,getans(v,u,tome[u] + fromp - sz[v] * (LL)val - tome[v] + (szi - sz[v]) * (LL)val,szi) );
	}
	return res;
}

int main() {
	scanf("%d",&N);
	for (int i = 0 ; i < N - 1 ; i++) {
		scanf("%d%d%d",&u[i],&v[i],&w[i]);
		G[u[i]].push_back(make_pair(v[i],w[i]));
		G[v[i]].push_back(make_pair(u[i],w[i]));
	}
	LL res = 1e18;
	for (int i = 0 ; i < N - 1 ; i++) {
		dfs(u[i],v[i]);
		dfs(v[i],u[i]);
		LL lft = getans(u[i],v[i],0LL,sz[u[i]]);
		LL rht = getans(v[i],u[i],0LL,sz[v[i]]);
		res = min(res,all[u[i]] + all[v[i]] + lft * sz[v[i]] + rht * sz[u[i]] + (LL)w[i] * sz[u[i]] * sz[v[i]]);
	}
	cout << res << endl;
	return 0;
}
			  	      	 			 					 	  		 	