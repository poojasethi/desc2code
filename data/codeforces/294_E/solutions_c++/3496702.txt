#include <iostream>
#include <vector>
using namespace std;
#define lli long long

struct edg
{
    lli u,v,w,nex;
};

struct node
{
    lli value;
    lli sum;
};

edg  e[11111];
node a[11111];
lli n,top,nex[11111];
lli tmp1,tmp2,cnt;

void push(lli u,lli v,lli w)
{
    e[++top].u=u;e[top].v=v;e[top].w=w;e[top].nex=nex[u];nex[u]=top;
}

lli dfs1(lli u,lli pre)
{
    lli i,v,cnt=0,t;
    for(i=nex[u];i;i=e[i].nex)
    if((v=e[i].v)!=pre)
    {
        t=dfs1(v,u);
        cnt=cnt+t;
        tmp1=tmp1+t*e[i].w;
    }
    a[u].sum=cnt+1;
    return cnt+1;
}

void dfs2(lli u,lli pre,lli sum,lli value,lli w)
{
    a[u].value=value+(sum-a[u].sum)*w-(a[u].sum)*w;
    if(a[u].value<tmp1)
        tmp1=a[u].value;
    tmp2=tmp2+a[u].value;
    lli i,v;
    for(i=nex[u];i;i=e[i].nex)
    if((v=e[i].v)!=pre)
        dfs2(v,u,sum,a[u].value,e[i].w);
}


lli sol(lli u,lli pre,lli w)
{
    tmp1=0;
    a[u].sum=dfs1(u,pre);
    a[u].value=tmp1;
    //cout<<a[u].sum<<' '<<tmp1<<endl;

    tmp1=1000000000;
    tmp1=tmp1*tmp1;
    tmp2=0;
    dfs2(u,pre,a[u].sum,a[u].value,0);

    tmp2=tmp2/2;

    tmp1=tmp1*(n-a[u].sum);
    tmp2=tmp2+tmp1;
    return tmp2;
}

int main()
{
    lli i;
    lli x,y,z,ans=1000000000;
    ans=ans*ans;
    cin>>n;
    for(i=1;i<=n-1;i++)
    {
        cin>>x>>y>>z;
        push(x,y,z);
        push(y,x,z);
    }

    for(i=1;i<=top;i+=2)
    {
        x=sol(e[i].u,e[i].v,e[i].w);
        y=sol(e[i].v,e[i].u,0);
        if(x+y+a[e[i].u ].sum*a[e[i].v ].sum*e[i].w <ans)
            ans=x+y+a[e[i].u ].sum*a[e[i].v ].sum*e[i].w;
    }

    cout<<ans<<endl;
    return 0;
}