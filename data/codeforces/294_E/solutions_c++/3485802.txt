#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<iostream>
using namespace std;
typedef __int64 i64;
i64 bas=1,n,spj,son[5100],sum[5100];
vector<i64>g[5100];
i64 res,u[5100],v[5100],w[5100];
void init(i64 x,i64 fa)
{
    son[x]=1;
    for(i64 i=0;i<g[x].size();i+=2)if(g[x][i]!=fa)
    {
        init(g[x][i],x);
        res+=son[g[x][i]]*(n-son[g[x][i]])*g[x][i+1];
        son[x]+=son[g[x][i]];
    }
}
void dfs(i64 x,i64 fa)
{
    son[x]=1;   sum[x]=0;
    for(i64 i=0;i<g[x].size();i+=2)
    {
        i64 y=g[x][i];
        if(y==fa||y==spj)   continue;
        dfs(y,x);
        son[x]+=son[y];
        sum[x]+=(sum[y]+son[y]*g[x][i+1]);
    }
}
i64 ask(i64 x,i64 fa,i64 m)
{
    i64 ans=sum[x];
    for(i64 i=0;i<g[x].size();i+=2)
    {
        i64 y=g[x][i];
        if(y==fa||y==spj)   continue;
        sum[y]=sum[x]-son[y]*g[x][i+1]+(m-son[y])*g[x][i+1];
        ans=min(ans,ask(y,x,m));
    }
    return ans;
}
int main()
{
    cin>>n;
    for(i64 i=1;i<n;++i)
    {
        cin>>u[i]>>v[i]>>w[i];
        g[u[i]].push_back(v[i]);
        g[u[i]].push_back(w[i]);
        g[v[i]].push_back(u[i]);
        g[v[i]].push_back(w[i]);
    }
    res=0;
    init(1,0);
    i64 ans=res;
    for(i64 i=1;i<n;++i)
    {
        i64 tmp=0;
        spj=v[i];   dfs(u[i],0);
        tmp+=ask(u[i],0,son[u[i]])*(n-son[u[i]]);
        spj=u[i];   dfs(v[i],0);
        tmp+=ask(v[i],0,son[v[i]])*(n-son[v[i]]);
        tmp+=res-sum[u[i]]*(n-son[u[i]])-sum[v[i]]*(n-son[v[i]]);
        ans=min(ans,tmp);
    }
    cout<<ans<<endl;
    return 0;
}
