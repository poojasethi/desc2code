#include <iostream>
#include <stdio.h>
#include <string.h>
#include <algorithm>
#include<sstream>
#include <vector>
#include <cmath>
#include <set>
#include <map>
using namespace std;
#define ll long long
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define rep(i,n) for(int i=0;i<n;i++)
#define all(a)  a.begin(),a.end()
#define ESP (1e-9)
#define N 5005
#define M 1000000007
#define sz(a) int(a.size())
#define pii pair<int,int>
#define vi vector<int>
int r[N],s[2];ll q[N],w[N];
int x[N],y[N];
vector<pair<int,ll> >g[N];
void add(int a,int b,ll w)
{
 g[a].pb(mp(b,w));g[b].pb(mp(a,w));
}
void dfs(int u,int fa)
{
 r[u]=1;q[u]=0;int i,j;
 for(i=0;i<sz(g[u]);i++)
 {
  j=g[u][i].fi;ll w=g[u][i].se;
  if(j==fa)continue;
  dfs(j,u);
  q[u]+=q[j]+w*r[j];
  r[u]+=r[j];
 }
}
ll sum[2],ss[2];int cur[2];
void dfs1(int u,int fa,int k)
{
 int i,j;ss[k]+=q[u];
 if(sum[k]==0||sum[k]>q[u])
  {sum[k]=q[u],cur[k]=u;}
 for(i=0;i<sz(g[u]);i++)
 {
  j=g[u][i].fi;ll w=g[u][i].se;
  if(j==fa)continue;
  ll h=(q[u]-q[j]-w*r[j])+w*(s[k]-r[j]);
  q[j]+=h;
  dfs1(j,u,k);
 }
}
int main()
{
   // freopen("in.txt","r",stdin);
    int T,i,j,k,c,a,b,n,m;
    while(~scanf("%d",&n))
    {
     for(i=0;i<n-1;i++)
     {
      scanf("%d%d%I64d",&x[i],&y[i],&w[i]);
     }
     ll ans=0;
     for(i=0;i<n-1;i++)
     {
      for(k=1;k<=n;k++)g[k].clear();
      for(j=0;j<n-1;j++)
      if(j!=i)
      {
       add(x[j],y[j],w[j]);
      }
      sum[0]=sum[1]=ss[0]=ss[1]=0;
      dfs(x[i],0);s[0]=r[x[i]];dfs1(x[i],0,0);
      dfs(y[i],0);s[1]=r[y[i]];dfs1(y[i],0,1);
      ll t=(ss[0]+ss[1])/2+w[i]*s[0]*s[1]+q[cur[0]]*s[1]+q[cur[1]]*s[0];
      if(ans==0||ans>t)ans=t;
     }
     printf("%I64d\n",ans);
    }
    return 0;
}
