#include <stdio.h>
#include <string.h>
#include <vector>
#include <algorithm>
using namespace std;
typedef long long LL;
typedef pair <int, int> pii;
#define maxn 5005
#define INF 0x3f3f3f3f3f3f3f3fll

int f[maxn], h[maxn], w[maxn];
vector<pii> g[maxn];
int son[maxn];
LL d[maxn], s[maxn];

void dfs(int v, int rt){
	son[v] = 0, d[v] = 0, s[v] = 0;
	for(int i = 0; i != g[v].size(); i ++){
		int u = g[v][i].first;
		if(u==rt) continue;
		dfs(u, v);
		s[v] += s[u] + d[u]*son[v] + d[v]*son[u] + (LL)son[u] * son[v] * g[v][i].second;
		d[v] += d[u] + (LL)son[u] * g[v][i].second;
		son[v] += son[u];
	}
	son[v] ++;
	s[v] += d[v];
}
void dfsw(int v, int rt, LL &minn){
	minn = min(d[v], minn);
	for(int i = 0; i != g[v].size(); i ++){
		int u = g[v][i].first;
		if(u==rt) continue;
		d[u] = d[u] + (d[v] - d[u] - (LL)son[u]*g[v][i].second) + (LL)(son[v] - son[u])*g[v][i].second;
		son[u] = son[v];
		dfsw(u, v, minn);
	}
}
int main(){
    //freopen("test.in", "r", stdin);
	for(int n; scanf("%d", &n)!=EOF; ){
		for(int i = 1; i <= n; i ++){
			g[i].clear();
		}
		for(int i = 1, x, y, z; i < n; i ++){
			scanf("%d%d%d", &x, &y, &z);
			f[i] = x, h[i] = y, w[i] = z;
			g[x].push_back(make_pair(y, z));
			g[y].push_back(make_pair(x, z));
		}
		LL ans = INF, minn = INF, sum = 0;
		for(int i = 1; i < n; i ++){
			minn = INF;
			dfs(f[i], h[i]);
			dfsw(f[i], h[i], minn);
			sum = 0;
			sum = (n - son[f[i]]) * minn + s[f[i]];
			minn = INF;
			dfs(h[i], f[i]);
			dfsw(h[i], f[i], minn);
			sum = sum + (n - son[h[i]]) * minn + s[h[i]] + (LL)son[f[i]]*son[h[i]]*w[i];
			ans = min(ans, sum);
		}
		printf("%I64d\n", ans);
	}
	return 0;
}
