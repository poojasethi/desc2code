#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#define maxn 5009
#define maxm 10009
#define INF 1LL<<61
using namespace std;
struct Edge
{
	int v,w;
};
struct node
{
	int u,v,w;
}edge[maxm];
int n,pos1,pos2;
vector<Edge>G[maxn];
__int64 dp3[maxn],dp4[maxn],mx[maxn],mxx[maxn],num[maxn],sum[maxn];
__int64 dis,ans;
void dfs3(int u,int fa)
{
	num[u]=1;dp3[u]=0;sum[u]=0;
	for(int i=0;i<(int)G[u].size();i++)
	{
		int v=G[u][i].v,w=G[u][i].w;
		if(v!=fa)
		{
			dfs3(v,u);
			num[u]+=num[v];
			dp3[u]+=dp3[v]+(__int64)w*num[v];
		}
	}
}
void dfs4(int u,int fa,__int64 &d,int n)
{
	d=min(d,dp3[u]+dp4[u]);
	for(int i=0;i<(int)G[u].size();i++)
	{
		int v=G[u][i].v,w=G[u][i].w;
		if(v!=fa)
		{
			dp4[v]=dp4[u]+(__int64)w*(n-num[u])+(dp3[u]-dp3[v]-(__int64)w*num[v])+(__int64)w*(num[u]-num[v]);
			dfs4(v,u,d,n);
		}
	}
}
int main()
{
	scanf("%d",&n);
	for(int i=1;i<n;i++)
	{
		int u,v,w;
		scanf("%d%d%d",&u,&v,&w);
		Edge tmp;
		tmp.v=v;tmp.w=w;
		G[u].push_back(tmp);
		tmp.v=u;tmp.w=w;
		G[v].push_back(tmp);
		edge[i].u=u;edge[i].v=v;edge[i].w=w;
	}
	__int64 c;
	dfs3(1,-1);
	dp4[1]=0;
	dfs4(1,-1,c,n);
	ans=0;
	for(int j=1;j<=n;j++)
	{
		ans+=dp3[j]+dp4[j];
	}
	ans/=2;
	for(int i=1;i<n;i++)
	{
		int u=edge[i].u,v=edge[i].v;
		__int64 d1=INF,d2=INF,cur=0;
		pos1=u;pos2=v;
		dfs3(pos1,pos2);
		dp4[pos1]=0;
		dfs4(pos1,pos2,d1,num[pos1]);
		dfs3(pos2,pos1);
		dp4[pos2]=0;
		dfs4(pos2,pos1,d2,num[pos2]);
		__int64 num1=num[pos1],num2=num[pos2];
		for(int j=1;j<=n;j++)
		{
			cur+=dp3[j]+dp4[j];
		}
		ans=min(ans,cur/2+num1*num2*edge[i].w+d1*num2+num1*d2);
	}
	printf("%I64d\n",ans);
	//system("pause");
	return 0;
}