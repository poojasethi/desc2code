#include <iostream>
using namespace std;
int p[600];
long long dp[600][600];

long long dfs(int s, int e)
{
    if (dp[s][e] >= 0)
        return dp[s][e];

    if (s == e)
        return 1;

    dp[s][e] = 0;
    for (int i = s+1; i <=e; i++)
        if (i==e||p[i+1]>p[s+1])
            dp[s][e] = (dp[s][e] + dfs(s+1, i) * dfs(i, e)) % 1000000007;

    return dp[s][e];
}

int main()
{
    int n;
    cin >> n;
    for (int i =0;i<n;i++)
        cin >> p[i];
    for (int i = 0; i < n;i++)
        for (int j=0;j<n;j++)
            dp[i][j] = -1;
    cout << dfs(0, n-1)<<endl;
    return 0;
}
