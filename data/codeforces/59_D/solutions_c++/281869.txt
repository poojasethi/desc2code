#include <iostream>
#include <fstream>
#include <cstdio>
#include <string>
#include <algorithm>
#include <stdlib.h>
#include <string.h>
using namespace std;

int n, k;
int a[3*100010];
int poz[3*100010];
int c[100010][3];
bool use[3*100010];
bool outt[3*100010];

inline void srt(int i){
	if(poz[c[i][0]]>poz[c[i][1]]) swap(c[i][0],c[i][1]);
	if(poz[c[i][1]]>poz[c[i][2]]) swap(c[i][1],c[i][2]);
	if(poz[c[i][0]]>poz[c[i][1]]) swap(c[i][0],c[i][1]);
}

int main(){
	cin>>n;
	memset(use,false,sizeof(use));
	memset(outt,false,sizeof(outt));
	for(int i=0; i<3*n; i++){ cin>>a[i]; poz[a[i]] = i;}
	for(int i=0; i<n; i++){
		cin>>c[i][0]>>c[i][1]>>c[i][2];
		srt(i);
	}
	cin>>k;
	int idx = -1;
	for(int i=0; i<n; i++)
		if(c[i][0]==k){idx = i; break;}
	if(idx==-1){
		for(int i=1; i<=3*n; i++){
			if(i!=k) cout<<i<<' ';
		}
		return 0;
	}
	for(int i=0; i<idx; i++){
		use[c[i][0]] = true;
		use[c[i][1]] = true;
		use[c[i][2]] = true;
	}
	int maxOwn = max(c[idx][1],c[idx][2]);
	for(int i=1; i<=maxOwn; i++){
		if(i==k) continue;
		if(use[i] || c[idx][1]==i || c[idx][2]==i){ cout<<i<<' '; outt[i] = true;}
	}
	outt[k] = true;
	for(int i=1; i<=3*n; i++)
		if(!outt[i]) cout<<i<<' ';
	return 0;
}
