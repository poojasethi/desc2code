#include<cstdio>
#include<cmath>
#include<cstring>
#include<string>
#include<algorithm>
#include<iostream>
#include<vector>

using namespace std;

int a[500000], b[500000], tm[200000][3], n, k, us[500000];

bool mycomp(const int &x, const int& y)
{
   return (b[x] < b[y]);
}

void based()
{
//   printf("based\n");
   for (int i = 1; i <= 3 * n; i++)
      if (i == k) continue;
      else printf("%d ", i);
   printf("\n");
   exit(0);
}

void captain(int x)
{
//   printf("captain\n");
   for (int i = 1; i <= max(tm[x][1], tm[x][2]); i++)
      if (i == k || us[i] == 0) continue;
      else printf("%d ", i);
   for (int i = max(tm[x][1], tm[x][2]) + 1; i <= 3 * n; i++)
      us[i] = 0;
   for (int i = 1; i <= 3 * n; i++)
      if (i == k || us[i] == 1) continue;
      else printf("%d ", i);
   printf("\n");
   exit(0);
}

int main()
{
//   freopen("input.txt", "r", stdin);
//   freopen("output.txt", "w", stdout);
   scanf("%d", &n);
   for (int i = 1; i <= 3 * n; i++)
   {
      scanf("%d", &a[i]);
      b[a[i]] = i;
   }
   for (int i = 1; i <= n; i++)
   {
      scanf("%d%d%d", &tm[i][0], &tm[i][1], &tm[i][2]);
      sort(tm[i], tm[i] + 3, mycomp);
   }
   scanf("%d", &k);
   for (int i = 1; i <= n; i++)
   {
      for (int j = 0; j < 3; j++) us[tm[i][j]] = 1;
      if (tm[i][0] == k) captain(i);
      if (tm[i][1] == k || tm[i][2] == k) based();
   }
   return 0;
}
