#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <vector>
using namespace std;
#define p(x) cout<<#x<<":"<<x<<"\n"
#define ST vector <int>
#define lim 300001
#define pb push_back

int n,i,j,k,p,q;
int A[lim],T[lim][4];
ST V,V2,V3;

ST merge(ST L,ST R)
{
  int n=L.size(),m=R.size(),i=0,j=0,k;
  ST V;
  
  L.pb(1000000000);
  R.pb(1000000000);
  for(k=0;k<n+m;k++)
    if(L[i]<R[j])
      V.pb(L[i++]);
    else
      V.pb(R[j++]);
  return V;
}
int main()
{
  scanf("%d",&n);
  for(i=0;i<3*n;i++)
    scanf("%d",&A[i]);
  for(i=0;i<n;i++)
    for(j=0;j<3;j++)
      scanf("%d",&T[i][j]);
  scanf("%d",&k);
  for(i=0;i<n && T[i][0]!=k && T[i][1]!=k && T[i][2]!=k;i++);
  for(j=0;A[j]!=T[i][0] && A[j]!=T[i][1] && A[j]!=T[i][2];j++);
  if(A[j]!=k)
  {
    for(i=1;i<=3*n;i++)
      if(i!=k)
        printf("%d ",i);
    return 0;
  }
  for(p=0;p<i;p++)
    for(q=0;q<3;q++)
      V.pb(T[p][q]);
  for(p=0;p<3;p++)
    if(T[i][p]!=k)
      V2.pb(T[i][p]);
  for(p=i+1;p<n;p++)
    for(q=0;q<3;q++)
      V3.pb(T[p][q]);
  sort(V.begin(),V.end());
  sort(V2.begin(),V2.end());
  sort(V3.begin(),V3.end());
  for(i=0;i<V3.size();i++)
    V2.pb(V3[i]);
  V=merge(V,V2);
  for(i=0;i<V.size();i++)
    printf("%d ",V[i]);
  return 0;
}
