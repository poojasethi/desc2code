#include <algorithm>
#include <iostream>
using namespace std;
const int MAX = 300100;
int rank[MAX];
bool mark[MAX], cap[MAX];
struct team
{
	int m[3];
} t[MAX];
bool comp(int a, int b)
{
	return (rank[a] < rank[b]);
}
bool comp2(team a, team b)
{
	return (rank[a.m[0]] < rank[b.m[0]]);
}
int main()
{
	ios::sync_with_stdio(false);
	int n;
	cin >> n;
	for (int i = 0; i < 3 * n; i++)
	{
		int val;
		cin >> val;
		rank[val] = i;
	}
	for (int i = 0; i < n; i++)
	{
		cin >> t[i].m[0] >> t[i].m[1] >> t[i].m[2];
		sort(t[i].m, t[i].m + 3, comp);
		cap[t[i].m[0]] = true;
	}
	sort(t, t + n, comp2);
	int k;
	cin >> k;
	if (!cap[k])
	{
		for (int i = 1; i <= 3 * n; i++)
			if (i != k)
				cout << i << " ";
		return 0;
	}
	int mx = -1;
	for (int i = 0; !mark[k]; i++)
	{
		if (t[i].m[0] == k)
			mx = max(t[i].m[1], t[i].m[2]);
		mark[t[i].m[0]] = true;
		mark[t[i].m[1]] = true;
		mark[t[i].m[2]] = true;
	}
	for (int i = 1; i <= mx; i++)
		if (i != k && mark[i])
			cout << i << " ";
	for (int i = 1; i <= mx; i++)
		if (i != k && !mark[i])
			cout << i << " ";
	for (int i = mx + 1; i <= 3 * n; i++)
		if (i != k)
			cout << i << " ";
	return 0;
}
	       		  	 		  			  	 	