#include <iostream>
#include <vector>
#include <set>
using namespace std;

int main()
{
	int n;
	cin>>n;
	vector<int> places(3*n);
	vector<int> student_place(3*n);
	for(int i=0;i<3*n;i++){cin>>places[i];student_place[places[i]-1]=i;}
	vector<int> cmds(3*n);
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<3;j++)
		{
			int t;cin>>t;
			cmds[t-1]=i;
		}
	}
	set<int> student_nums;
	for(int i=1;i<=3*n;i++)student_nums.insert(i);
	int k;
	cin>>k;
	set<int> used_students;
	for(int i=0;i<3*n;i++)if(cmds[i]<cmds[k-1])used_students.insert(i+1);
	set<int>::iterator us_it=used_students.begin();
	vector<int> res;
	bool leader=true;
	for(int i=0;i<3*n;i++)if(cmds[i]==cmds[k-1])if(student_place[i]<student_place[k-1])leader=false;
	if(!leader)for(int i=1;i<=3*n;i++){if(i!=k)res.push_back(i);}
	else
	{	
		set<int> teammates;
		for(int i=0;i<3*n;i++)if(i!=k-1)if(cmds[i]==cmds[k-1])teammates.insert(i+1);
		set<int>::iterator tm_it=teammates.begin();
		while(tm_it!=teammates.end())
		{
			if(us_it!=used_students.end() && *us_it < *tm_it){res.push_back(*us_it);student_nums.erase(*us_it);us_it++;}
			else {res.push_back(*tm_it);student_nums.erase(*tm_it);tm_it++;}
		}
		student_nums.erase(k);
		for(set<int>::iterator i=student_nums.begin();i!=student_nums.end();i++)res.push_back(*i);
	}
	for(int i=0;i<res.size();i++)if(i==0)cout<<res[i];
		else cout<<" "<<res[i];
	cout<<"\n";
	return 0;
}
