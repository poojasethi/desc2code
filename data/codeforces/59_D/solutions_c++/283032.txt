#include <cstdio>
#include <algorithm>
using namespace std;
const int MN=3*1000*100+1000;
int list[MN];
int teams[MN];
bool mark[MN];
bool mark2[MN];
int res[MN];
int n,k;
int p;
int main()
{
	scanf("%d",&n);
	for (int i=0;i<3*n;i++)
	{
		scanf("%d",&list[i]); list[i]--;
	}
	for (int i=0;i<3*n;i++)
	{
		scanf("%d",&teams[i]); teams[i]--;
	}
	scanf("%d",&k); k--;
	for (int i=0;i<3*n;i+=3)
	{
		if (k==teams[i] || k==teams[i+1] || k==teams[i+2])
		{
			if (k!=list[p])
			{
				for (int j=0;j<3*n;j++) if (j!=k)
					printf("%d ",j+1);
				printf("\n");
				return 0;
			}
			int mn=-1;
			for (int j=i;j<i+3;j++) if (teams[j]!=k)
				mn=max(mn,teams[j]);
			for (int j=0;j<3*n;j++) if (j!=k && (mark[j]==1 || j==teams[i] || j==teams[i+1] || j==teams[i+2]))
			{
				printf("%d ",j+1);
				mark2[j]=1;
				if (j==mn)
					break;
			}
			for (int j=0;j<3*n;j++) if (j!=k && mark2[j]==0)
				printf("%d ",j+1);
			printf("\n");
			return 0;

		}
		else
		{
			mark[teams[i]]=mark[teams[i+1]]=mark[teams[i+2]]=1;
			while (p<3*n &&mark[list[p]]==1)
				p++;
		}
	}
	return 0;
}
