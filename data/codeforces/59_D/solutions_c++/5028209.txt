#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

const int MAXN = 1000 * 1000 + 10;
int rank[MAXN], a[MAXN][3], team[MAXN];
vector<int> ans1, ans2;

bool comp(int x, int y)
{
	return rank[x] < rank[y];
}

void print(vector<int> & pr)
{
	for (int i = 0; i < pr.size(); i++)
		cout << pr[i] << " ";
}

int main()
{
	int n;
	cin >> n;
	for (int i = 1; i <= n * 3; i++)
	{
		int x;
		cin >> x;
		rank[x] = i;
	}
	for (int i = 1; i <= n; i++)
	{
		cin >> a[i][0] >> a[i][1] >> a[i][2];
		team[a[i][0]] = team[a[i][1]] = team[a[i][2]] = i;
		sort(a[i], a[i] + 3, comp);
	}
	int k;
	cin >> k;
	if (a[team[k]][0] == k)
	{
		ans1.push_back(a[team[k]][1]);
		ans1.push_back(a[team[k]][2]);
		int mx = max(a[team[k]][1], a[team[k]][2]);
		for (int i = 1; i < team[k]; i++)
			for (int j = 0; j < 3; j++)
			{
				if (a[i][j] < mx)
					ans1.push_back(a[i][j]);
				else
					ans2.push_back(a[i][j]);
			}
		for (int i = team[k] + 1; i <= n; i++)
			for (int j = 0; j < 3; j++)
				ans2.push_back(a[i][j]);
		sort(ans1.begin(), ans1.end());
		sort(ans2.begin(), ans2.end());
		print(ans1);
//		cout << endl;
		print(ans2);
	}
	else
	{
		for (int i = 1; i <= 3 * n; i++)
			if (i != k)
				cout << i << " ";
	}
	cout << endl;
	return 0;
}
