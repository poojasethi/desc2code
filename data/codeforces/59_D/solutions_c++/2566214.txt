#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <string>
using namespace std;

int n, m;
int a[400000], ta[400000], b[400000];
int g[110000][3];
int f[400000];
bool u[400000], p[400000];

void solve(int x)
{
	f[0] = 0;
	int tmin = ta[m];
	for (int i = 0; i < 3; i++) tmin = min(tmin, ta[g[x][i]]);
	if (tmin != ta[m]) {
		for (int i = 1; i <= 3 * n; i++) {
			if (i == m) continue;
			f[++f[0]] = i;
		}	
		return;
	}
	memset(p, 0, sizeof(p));
	int tim = 2;
	for (int i = 1; i <= 3 * n; i++) {
		if (i == m) continue;
		if (u[i]) {
			f[++f[0]] = i;
			p[i] = true;
			if (i == g[x][0]) --tim;
			if (i == g[x][1]) --tim;
			if (i == g[x][2]) --tim;
			if (tim == 0) break;
		}
	}
	for (int i = 1; i <= 3 * n; i++) {
		if (i == m) continue;
		if (!p[i]) {
			f[++f[0]] = i;
		}
	}
}

int main(){
	while (~scanf("%d", &n)) {
		memset(u, 0, sizeof(u));
		for (int i = 1; i <= 3 * n; i++) {
			scanf("%d", &a[i]);
			ta[a[i]] = i;
		}
		for (int i = 0; i < n; i++) {
			for (int j = 0; j < 3; j++) scanf("%d", &g[i][j]);
		}
		scanf("%d", &m);
		for (int i = 0; i < n; i++) {
			u[g[i][0]] = true; u[g[i][1]] = true; u[g[i][2]] = true;
			if (!u[m]) continue;
			solve(i);
			break;		
		}
		printf("%d", f[1]);
		for (int i = 2; i <= f[0]; i++) printf(" %d", f[i]);
		printf("\n");
	}
	return 0;
}

  			 								    		 	 	 	