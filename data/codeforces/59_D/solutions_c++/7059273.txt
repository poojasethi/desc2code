#include <bits/stdc++.h>
using namespace std;

const int MAXN = 100005;
int n, p[3 * MAXN], team[MAXN][3], k;
priority_queue<int, vector<int>, greater<int> > pq;
set<int> s;

int main(){
  cin >> n;
  for(int i = 0; i < 3 * n; i++){
    int x;
    cin >> x;
    p[x] = i + 1;
  }
  for(int i = 0; i < n; i++) cin >> team[i][0] >> team[i][1] >> team[i][2];
  cin >> k;
  for(int i = 0; i < n; i++){
    int t = -1, m = 3 * MAXN;
    for(int j = 0; j < 3; j++){
      if(team[i][j] == k) t = j;
      m = min(m, p[team[i][j]]);
    }
    if(t < 0) continue;
    if(m != p[team[i][t]]){
      for(int j = 1; j <= 3 * n; j++){
        if(j != k) cout << j << " ";
      }
      cout << '\n';
    } else {
      for(int j = 0; j <= i; j++){
        for(int l = 0; l < 3; l++){
          if(team[j][l] != k){
            pq.push(team[j][l]);
            if(j == i){
              s.insert(team[j][l]);
            }
          }
        }
      }
      bool f = 0;
      while(pq.size()){
        cout << pq.top() << " ";
        s.erase(pq.top());
        pq.pop();
        if(s.size() == 0 && f == 0){
          f = 1;
          for(int j = i + 1; j < n; j++){
            for(int l = 0; l < 3; l++){
              pq.push(team[j][l]);
            }
          }
        }
      }
    }
    return 0;
  }
}
