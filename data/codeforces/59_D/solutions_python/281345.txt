

stdin_flag=1
if not stdin_flag:
  read_line_index=0
  testcasefilename="test.txt"
  Stestcase=open(testcasefilename).read()
  read_line_datas=Stestcase.split("\n")


def debugs(s):
  if not stdin_flag:
    print ";;;",s

#####################################
######################################

def read_line():
  global read_line_index
  if stdin_flag:
    return raw_input()
  else:
    s=read_line_datas[read_line_index]
    read_line_index+=1
    return s

def answer():
  if stdin_flag:
    return solve()
  else:
    while read_line_proceed():
      solve()
      

def read_line_proceed():
  global read_line_index
  print"##################"
  while 1:
    if read_line_index>= len (read_line_datas ):
      return False
    if read_line_datas[read_line_index]=="%%%":
      read_line_index+=1
      return True
    read_line_index+=1


def readint():
  return int (read_line() )


def readints():
  return map(int, read_line().split(" "))

def reads():
  return read_line()




###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################

def compute(m,n,d):
  pass

def solve():
  n=readint()
  x=readints()
  m=[readints() for i in xrange(n)]
  k=readint()
  d=[0 for i in xrange(3*n+1)]
  for team in m:
    for p in team:
      d[p]=1
    if k in team:
      for p in team:
        d[p]=2
      break
  for p in x:
    if d[p]==2:
      if p!=k:
        print" ".join(map(str,(p for p in xrange(1,3*n+1) if p!=k)))
        return
      break
  debugs(d)
  e=[0 for i in xrange(3*n+1)]
  s1=sorted(p for p in xrange(1,3*n+1) if d[p]>0 and p!=k)
  co=0
  for i,p in enumerate(s1):
    if d[p]==2:
      co+=1
      if co==2:
        s2=sorted(s1[i+1:] + [p for p in xrange(1,3*n+1) if d[p]==0])
        break
  print" ".join(map(str,s1[:i+1]+s2))

def test():
  pass

test()
answer()
