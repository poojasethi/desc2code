#include <bits/stdc++.h>
using namespace std;

int n, index[3] = { 0, 1, 2 };
string pattern[3], s;
set <string> permut;

string norm(string s){
	string res = "";
	for (int i = 0; i < s.length(); ++i){
		if (s[i] >= 'A' && s[i] <= 'Z')
			s[i] = 'a' + s[i] - 'A';
		if (s[i] != '_' && s[i] != '-' && s[i] != ';')
			res.push_back(s[i]);
	}
	return res;
}

int main(){
	ios_base::sync_with_stdio(0);
	for (int i = 0; i < 3; ++i){
		cin >> pattern[i];
		pattern[i] = norm(pattern[i]);
	}

	do{
		permut.insert(pattern[index[0]] + pattern[index[1]] + pattern[index[2]]);
	} while (next_permutation(index, index + 3));

	cin >> n;
	while (n--){
		cin >> s;
		cout << (permut.find(norm(s)) != permut.end() ? "ACC\n" : "WA\n");
	}

	return 0;
}