#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;
const int oo=2e9;
const int mx=1e5+10;
const int mxt=mx+mx;
int a[mx],b[mx],c[mx],d[mx];
int f[mx],par[mx];
int xs[mxt];
pair<int,int>st[mxt<<2];
set<pair<int,int> >s[mxt];

void init(int u,int l,int r){
   if(l==r){
      st[u]=pair<int,int>(oo,-1);
      if(!s[l].empty())
         st[u]=*s[l].begin();
   }
   else{
      int mid=(l+r)>>1;
      init(u+u+1,l,mid);
      init(u+u+2,mid+1,r);
      st[u]=min(st[u+u+1],st[u+u+2]);
   }
}
void upd(int u,int l,int r,int idx,pair<int,int>v){
   if(idx<l || idx>r)return;
   if(l==r)st[u]=v;
   else{
      int mid=(l+r)>>1;
      upd(u+u+1,l,mid,idx,v);
      upd(u+u+2,mid+1,r,idx,v);
      st[u]=min(st[u+u+1],st[u+u+2]);
   }
}
pair<int,int>qry(int u,int l,int r,int f,int t){
   if(t<l || r<f)return pair<int,int>(oo,-1);
   if(f<=l && r<=t)return st[u];
   int mid=(l+r)>>1;
   pair<int,int>x=qry(u+u+1,l,mid,f,t);
   pair<int,int>y=qry(u+u+2,mid+1,r,f,t);
   return min(x,y);
}
int main(){
   int n;
   scanf("%d",&n);
   for(int i=0;i<n;i++){
      scanf("%d %d %d %d",a+i,b+i,c+i,d+i);
      xs[i+i]=a[i];
      xs[i+i+1]=c[i];
   }
   sort(xs,xs+n+n);
   int cnt=unique(xs,xs+n+n)-xs;
   for(int i=0;i<n;i++){
      int xi=lower_bound(xs,xs+cnt,a[i])-xs;
      s[xi].insert(pair<int,int>(b[i],i));
      a[i]=xi;
      xi=lower_bound(xs,xs+cnt,c[i])-xs;
      c[i]=xi;
   }
   init(0,0,cnt-1);
   memset(f,-1,sizeof f);
   queue<int>q;
   q.push(n);
   d[n]=f[n]=0;
   while(!q.empty()){
      int u=q.front();
      q.pop();
      while(true){
         pair<int,int>p=qry(0,0,cnt-1, 0,c[u]);
         int ix=p.second;
         if(p.first>d[u])break;

         if(f[ix]==-1){
            q.push(ix);
            f[ix]=f[u]+1;
            par[ix]=u;
         }
         int x=a[ix];
         pair<int,int>v(oo,-1);
         s[x].erase(s[x].begin());
         if(!s[x].empty())v=*s[x].begin();
         upd(0,0,cnt-1, x,v);         
      }
   }
   if(f[n-1]==-1){
      puts("-1");
      return 0;
   }
   printf("%d\n",f[n-1]);
   vector<int>ans;
   int u=n-1;
   while(u<n){
      ans.push_back(u);
      u=par[u];
   }
   reverse(ans.begin(),ans.end());
   for(int i=0;i<int(ans.size());i++){
      if(i!=0)printf(" ");
      printf("%d",++ans[i]);
   }
   printf("\n");
   return 0;
}
