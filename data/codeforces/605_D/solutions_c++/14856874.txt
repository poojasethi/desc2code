#include<bits/stdc++.h>
#define MAXN 400009
#define INF 1000000007
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define lg(x) ceil(log2(x))
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int a[MAXN],b[MAXN],c[MAXN],d[MAXN],t,yol[MAXN],n;
map<int,int>pm;
set<PII> s[MAXN*4];
vector<PII>adj[MAXN];
queue<int>q;
void build(int nd,int x,int y){
	if(x==y){
		tr(i,adj[x])
			s[nd].insert(*i);	
		return;
	}
	int mid=(x+y)>>1;
	build(nd*2,x,mid);
	build(nd*2+1,mid+1,y);
	tr(i,s[nd*2])
		s[nd].insert(*i);
	tr(i,s[nd*2+1])	
		s[nd].insert(*i);
}
void poz(int nd,int x,int y,int p,int i1,int i2){
	if(x>p or y<p)
		return;
	s[nd].erase(mp(i1,i2));	
	if(x==y)
		return;	
	int mid=(x+y)>>1;	
	poz(nd*2,x,mid,p,i1,i2);
	poz(nd*2+1,mid+1,y,p,i1,i2);	
}
void upd(int nd,int x,int y,int l,int r,int v,int prev){
	if(l>y or x>r)
		return;
	if(l<=x and y<=r){
		while(s[nd].size()){
			PII now=*s[nd].begin();
			if(now.ff>v)
				break;
			q.push(now.ss);
			yol[now.ss]=prev;
			poz(1,1,t,a[now.ss],now.ff,now.ss);
		}
		return;
	}
	int mid=(x+y)>>1;
	upd(nd*2,x,mid,l,r,v,prev);
	upd(nd*2+1,mid+1,y,l,r,v,prev);
}
void show(){
	stack<int>ans;
	while(n)
		ans.push(n),n=yol[n];
	cout<<ans.size()<<endl;
	while(!ans.empty()){
		cout<<ans.top()<<" ";
		ans.pop();
	}
}
int main(){
	int dogry=0;
	cin>>n;
	for(int i=1;i<=n;i++){
		cin>>a[i]>>b[i]>>c[i]>>d[i];
		if(a[i]==b[i] and a[i]==0)
			dogry=1;
		pm[a[i]]=pm[b[i]]=pm[c[i]]=pm[d[i]]=1;
	}
	if(!dogry){
		cout<<"-1"<<endl;
		return 0;
	}
	tr(i,pm)
		pm[i->ff]=++t;
	for(int i=1;i<=n;i++){
		a[i]=pm[a[i]];c[i]=pm[c[i]];
		b[i]=pm[b[i]];d[i]=pm[d[i]];
		if(a[i]==1 and b[i]==1)
			q.push(i);
		else
			adj[a[i]].pb(mp(b[i],i));	
	}
	build(1,1,t);
	while(!q.empty()){
		int i=q.front();
		q.pop();
		if(i==n){
			show();
			return 0;
		}
		upd(1,1,t,1,c[i],d[i],i);
	}
	cout<<"-1"<<endl;
	return 0;
}
