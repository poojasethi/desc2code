#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
using namespace std;
const int N=100010;
int n,i,h,t,tmp,now;
int b[N*4],c[N],q[N],f[N],g[N];
struct node{int x,y,z,w,no;}a[N];
int cmp(const node&a,const node&b){return a.z<b.z;}
void modify(int l,int r,int x,int k)
{
    if (l==r) {b[x]=k; return;}
    int mid=(l+r)>>1;
    if (i<=mid) modify(l,mid,x<<1,k);
    else modify(mid+1,r,x<<1|1,k);
    b[x]=max(b[x<<1],b[x<<1|1]);
}
void query(int l,int r,int x,int k)
{
    if (b[x]<k || i) return;
    if (l==r) {i=l; return;}
    int mid=(l+r)>>1;
    if (mid>=tmp) query(l,mid,x<<1,k);
    query(mid+1,r,x<<1|1,k);
}
int main()
{
    scanf("%d",&n);
    for (i=1;i<=n;i++) scanf("%d%d%d%d",&a[i].x,&a[i].y,&a[i].z,&a[i].w),a[i].no=i;
    sort(a+1,a+n+1,cmp);
    memset(b,0,sizeof(b));
    for (h=1,t=0,i=1;i<=n;i++)
    {
        if (a[i].no==n) q[++t]=i,f[i]=1,a[i].w=-1;
        modify(1,n,1,a[i].w); c[i]=a[i].z;
    }
    while (h<=t)
    {
        now=q[h++];
        if (a[now].x==0 && a[now].y==0)
        {
            printf("%d\n%d",f[now],a[now].no);
            for (now=g[now];now;now=g[now]) printf(" %d",a[now].no);
            return printf("\n"),0;
        }
        tmp=lower_bound(c+1,c+n+1,a[now].x)-c;
        while (tmp<=n)
        {
            i=0; query(1,n,1,a[now].y);
            if (i==0) break;
            modify(1,n,1,-1);
            f[i]=f[now]+1; q[++t]=i; g[i]=now; tmp=i+1;
        }
    }
    return printf("-1"),0;
}
