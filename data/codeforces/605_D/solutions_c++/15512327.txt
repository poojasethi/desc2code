#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<vector>
#include<string>
#include<set>
#define lc (p<<1)
#define rc ((p<<1)+1)
#define mid ((l+r)>>1)
#define LL long long
#define fi first
#define se second
#define MP make_pair
#define PII pair<int,int>
using namespace std;
PII tr[800010];
int n,c[200010],st[200010],inf=2e9,dis[100010],pr[100010],a[100010];
PII p[100010],q[100010];
queue<int> h;
vector<PII> V[200010];
inline void read(int&x)
{
	char ch=getchar();int mk=1;for(;(ch<'0'||ch>'9')&&ch!='-';ch=getchar());
	if (ch=='-') mk=-1,ch=getchar();
	for(x=0;ch>='0'&&ch<='9';ch=getchar()) x=x*10+ch-48;x*=mk;
}
PII Begin(int x)
{
	if (st[x]<V[x].size()) return V[x][st[x]++];
	return MP(inf,0);
}
void update(int p){tr[p]=min(tr[lc],tr[rc]);}
void Build(int p,int l,int r)
{
	if (l==r-1)
	{
		tr[p]=Begin(l);return;
	}
	Build(lc,l,mid);Build(rc,mid,r);
	update(p);
}
PII Getmin(int p,int l,int r,int a,int b)
{
	if (l==a&&r==b) return tr[p];
	if (b<=mid) return Getmin(lc,l,mid,a,b);
	if (a>=mid) return Getmin(rc,mid,r,a,b);
	return min(Getmin(lc,l,mid,a,mid),Getmin(rc,mid,r,mid,b));
}
void Delete(int p,int l,int r,int x)
{
	if (l==r-1)
	{
		tr[p]=Begin(l);return;
	}
	if (x+1<=mid) Delete(lc,l,mid,x);
	else Delete(rc,mid,r,x);
	update(p);
}
int main()
{
	scanf("%d",&n);
	for(int i=1;i<=n;i++) scanf("%d%d%d%d",&p[i].fi,&p[i].se,&q[i].fi,&q[i].se);
	for(int i=1;i<=n;i++) dis[i]=inf;
	h.push(0);
	int cnt=1;c[1]=0;
	for(int i=1;i<=n;i++) c[++cnt]=p[i].fi,c[++cnt]=q[i].fi;
	sort(c+1,c+cnt+1);
	cnt=unique(c+1,c+cnt+1)-(c+1);
	for(int i=0;i<=n;i++)
	{
		p[i].fi=lower_bound(c+1,c+cnt+1,p[i].fi)-(c+1)+1;
		q[i].fi=lower_bound(c+1,c+cnt+1,q[i].fi)-(c+1)+1;
	}
	for(int i=1;i<=n;i++) V[p[i].fi].push_back(MP(p[i].se,i));
	for(int i=1;i<=cnt;i++) sort(V[i].begin(),V[i].end());
	Build(1,1,cnt+1);
	while (h.size())
	{
		int u=h.front();
		h.pop();
		for(;;)
		{
			PII t=Getmin(1,1,cnt+1,1,q[u].fi+1);
			if (t.fi>q[u].se) break;
			Delete(1,1,cnt+1,p[t.se].fi);
			dis[t.se]=dis[u]+1;pr[t.se]=u;
			h.push(t.se);
		}
	}
	printf("%d\n",(dis[n]==inf)?-1:dis[n]);
	if (dis[n]!=inf)
	{
		int cnt=0;
		for(int u=n;u;u=pr[u]) a[++cnt]=u;
		for(int i=cnt;i;i--) printf("%d%c",a[i],(i!=1)?' ':'\n');
	}
	return 0;
}
