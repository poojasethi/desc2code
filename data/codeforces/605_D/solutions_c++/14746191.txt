#include<bits/stdc++.h>
using namespace std;
#define f first
#define s second
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define all(v) v.begin(),v.end()
const int block=335;
set< pii >s[400];
set< pii >::iterator it,it1;
vector< pair< pii , int> >v;
int a[100011],b[100011],c[100011],d[100011],mn[400];
int par[100011];
int main()
{
    int n,i,j;
    scanf("%d",&n);
    for(i=0; i<n; i++)
    {
        scanf("%d %d %d %d",&a[i],&b[i],&c[i],&d[i]);
        v.pb(mp(mp(a[i],b[i]),i));
    }
    sort(all(v));
    if(v[0].f.f!=0||v[0].f.s!=0)
    {
        printf("-1\n");
        return 0;
    }
    else
    {
        if(n==1)
        {
            printf("1\n1\n");
            return 0;
        }
    }
    queue< pair< pii , pii > >q;
    q.push(mp(mp(0,0),mp(0,-1)));
    int sz=n/block;
    if(n%block!=0)
        sz++;
    for(i=0; i<n; i++)
        par[i]=-1;
    for(i=0; i<sz; i++)
        mn[i]=1000000001;
    for(i=0; i<n; i++)
    {
        int c=i/block;
        s[c].insert(mp(v[i].f.s,v[i].s));
        mn[c]=min(mn[c],v[i].f.f);
    }
    while(!q.empty())
    {
        pair< pii ,pii >p=q.front();
        q.pop();
        //cout<<p.f.f<<" "<<p.f.s<<" "<<p.s.f<<" "<<p.s.s<<endl;
//        if(p.s.s!=-1)
//            cout<<par[p.s.s]<<endl;
        for(int i=0; i<sz; i++)
        {
            if(mn[i]>p.f.f)
                break;
            vector< pii >rem;
            for(it=s[i].begin(); it!=s[i].end(); it++)
            {
                if(it->f>p.f.s)
                    break;
                if(a[it->s]>p.f.f)
                    continue;
                if(p.s.s==-1)
                    par[it->s]=-1000;
                else
                    par[it->s]=p.s.s;
                int j=it->s;
                q.push(mp(mp(c[j],d[j]),mp(p.s.f+1,it->s)));
                rem.pb(mp(it->f,it->s));
            }
            for(int j=0; j<rem.size(); j++)
                s[i].erase(rem[j]);
        }
    }
    if(par[n-1]==-1)
        printf("-1\n");
    else
    {
        vector<int>ans;
        int i=n-1;
        while(i!=-1000)
        {
            ans.pb(i);
            i=par[i];
        }
        printf("%d\n",ans.size());
        reverse(all(ans));
        for(i=0; i<ans.size(); i++)
            printf("%d ",ans[i]+1);
        printf("\n");
    }
    return 0;
}
