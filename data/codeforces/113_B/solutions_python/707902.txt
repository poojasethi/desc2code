def kmpQ(s):
    a=[-1]*len(s)
    for i in range(len(s)):
        j=i-1
        while j>=0:
            j=a[j]
            if s[j+1]==s[i]:
                a[i]=j+1
                break
    return a

#find all t in s
def matchPos(t,s,q):
    j=-1
    a=[]
    for i in range(len(s)):
        while j>=0 and t[j+1]!=s[i]:
            j=q[j]
        if t[j+1]==s[i]:
            j+=1
            if j==len(t)-1:
                a.append(i)
                j=q[j]
    return a




#map a set of size n into 2..n+2
def getIDList(s):
    ans=set()
    for i in s:
        if not (i in ans):
            ans.add(i)
    ans=list(ans)
    ans.sort()
    di=dict([(ans[i],i+2) for i in range(len(ans))])
    ans=[]
    for i in range(len(s)):
        ans.append(di[s[i]])
    return ans,len(di)+1



def radio_sort(p,s):
    n=len(p)
    di=[[s[p[i]],i] for i in range(n)]
    di.sort()
    sa=[0]*n
    rank=[0]*n
    sum=0
    last=0
    for i in range(n):
        sa[i]=p[di[i][1]]
        if i>0 and s[sa[i]]!=s[sa[i-1]]:
            sum+=last
            last=1
        else:
            last+=1
        rank[i]=sum
    return sa,rank
    
    
def suffix_sort(s,m):
    n=len(s)
    sa=range(n)
    sa,nextrank=radio_sort(sa,s)
    rank=[0]*n
    for i in range(n):
        rank[sa[i]]=nextrank[i]
    l=1
    while l<n:
        for i in range(n):
            if(i<n-l):
                nextrank[i]=rank[i+l]
            else :
                nextrank[i]=rank[n-1]
        i=0

        while i < len(s):
            j=i
            while j < len(s) and rank[sa[i]]==rank[sa[j]]:
                j+=1
            psa,pr=radio_sort(sa[i:j],nextrank)
            for r in range(j-i):
                rank[psa[r]]=pr[r]+i
            sa[i:j]=psa
            i=j
        
        l+=l

    return sa,rank

def lcp(sa,rank,s):
    n=len(sa)
    lcp=[0]*n
    for i in range(0,n-1):
        if(i==0):
            now=0
        else:
            now=lcp[rank[i-1]]-1
        if now<0:
            now=0
        j=sa[rank[i]-1]
        while s[i+now]==s[j+now]:
            now+=1
        lcp[rank[i]]=now
    return lcp
        
        
        
        
        

all=raw_input()
# all=['a']*2000



s=raw_input()
t=raw_input()
# s='a'
# t='a'
q=kmpQ(s)
x=matchPos(s,all,q)
x=[i-len(s)+1 for i in x]
q=kmpQ(t)
y=matchPos(t,all,q)

sumy=[0]*(len(all)*2+3)

for i in y:
    sumy[i]+=1

for i in range(len(sumy)-1,0,-1):
    sumy[i-1]+=sumy[i]

# start=0
# for i in x:
#     now=[0]*len(all)
#     while start<len(y) and y[start]<i:
#         start+=1
#     for jj in range(start,len(y)):
#         j=y[jj]
#         if j-(i-len(s))>=len(t) :
#             now[j]=1
# #    add(i,now)
# print len(filter(None,mask))

    

all,m= getIDList(all)
all.append(1)
sa,rank=suffix_sort(all,m)
lcp=  lcp(sa,rank,all)

ans=0

for i in x:
    now=lcp[rank[i]]+i
    while now-(i-1)<len(t) or now-(i-1)<len(s):
        now+=1
    if(now<len(sumy)):
        ans+=sumy[now]
print ans
    
