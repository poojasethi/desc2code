

#include <cstdio>
#include <cstring>
#include <iostream>
#include <string>
#include <set>
#include <vector>
#include <algorithm>

using namespace std;

string str,hajime,owari;
const unsigned long long fn = 9999999967;
int hps,hp[1 << 11];
bool mk[1 << 11];
vector<unsigned long long> gao;
int main()
{
    cin >> str >> hajime >> owari;
    memset(mk,false,sizeof mk);
    for (int p = 0 ; ( p = str.find(hajime,p)) != string::npos; )
        hp[hps++] = p++;
    int lst = -1;
    for (int p = 0; ( p = str.find(owari,p)) != string::npos; )
        mk[lst = p++] = true;
    for (int i = 0; i < hps; ++i){
        unsigned long long t = 0;
        int sp = 0;
        for (int j = hp[i]; j <= lst; ++j){
            t = t*fn + str[j];
            if (mk[j] && hp[i] + hajime.size() <= j + owari.size())
                gao.push_back(t);
        }
    }
    sort(gao.begin(),gao.end());
    printf("%u\n",unique(gao.begin(),gao.end()) - gao.begin());
}