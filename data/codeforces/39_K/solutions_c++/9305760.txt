#define _CRT_SECURE_NO_DEPRECATE
#include <algorithm>
#include <string>
#include <set>
#include <map>
#include <vector>
#include <queue>
#include <iostream>
#include <iterator>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <sstream>
#include <fstream>
#include <ctime>
#include <cstring>
#pragma comment(linker, "/STACK:16777216")
using namespace std;
#define pb push_back
#define ppb pop_back
#define pi 3.1415926535897932384626433832795028841971
#define mp make_pair
#define x first
#define y second
#define sqr(a) (a)*(a)
#define D(a,b) sqrt(((a).x-(b).x)*((a).x-(b).x)+((a).y-(b).y)*((a).y-(b).y))
#define pii pair<int,int>
#define pdd pair<double,double>
#define INF 1000000000
#define FOR(i,a,b) for (int _n(b), i(a); i <= _n; i++)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;i--)
#define all(c) (c).begin(), (c).end()
#define SORT(c) sort(all(c))
#define rep(i,n) FOR(i,1,(n))
#define rept(i,n) FOR(i,0,(n)-1)
#define L(s) (int)((s).size())
#define C(a) memset((a),0,sizeof(a))
#define VI vector <int>
#define ll long long
struct rect
{
        int i1,j1,i2,j2;
};
int a,b,c,d,i,j,n,m,k;
ll ans;
char mas[1111][1111];
rect ob[111];
int beg[222];
inline bool cmp(const rect &a,const rect &b)
{
        if (a.j1!=b.j1) return a.j1<b.j1; else
        if (a.j2!=b.j2) return a.j2<b.j2; else
        if (a.i1!=b.i1) return a.i1<b.i1; else
        return a.i2<b.i2;
}
vector<pair<pii,int> > cur(0),cur2(0);
vector<pii> good;
VI cs(0);
inline int sum(VI &a)
{
        int ans=0;
        rep(i,L(a)-1) ans+=a[i];
        return ans;
}
inline ll calc(int l,int r)
{
        cur.clear();
        rept(i,k)
        {
                if (ob[i].i2<l || ob[i].i1>=r) continue;
                if (ob[i].i1>=l && ob[i].i2<r)
                {
                        cur.pb(mp(mp(ob[i].j1,ob[i].j2),1));
                } 
                else
                {
                        cur.pb(mp(mp(ob[i].j1,ob[i].j2),100));
                }
        }
        if (!L(cur)) return 0;
        SORT(cur);
        cur2.clear();
        int a=0;
        while (a<L(cur))
        {
                int b=cur[a].x.y,c=a,d=0;
                while (c<L(cur))
                {
                        if (cur[c].x.x<=b)
                        {
                                b=max(b,cur[c].x.y);
                                d+=cur[c].y;
                                c++;
                        } 
                        else 
                            break;
                }
                cur2.pb(mp(mp(cur[a].x.x,b),d));
                a=c;
        }
        cur=cur2;
        //SORT(cur);
        ll ans=0;
        good.clear();
        cs.clear();
        good.pb(mp(0,cur[0].x.x));
        cs.pb(0);
        rept(i,L(cur))
        {
                if (cur[i].y>=100)
                {
                        good.clear();
                        cs.clear();
                        int fr=0;
                        if (i<L(cur)-1)
                        {
                                fr=cur[i+1].x.x-cur[i].x.y;
                        } 
                        else
                        {
                                fr=m-cur[i].x.y;
                        }
                        pii rr=mp(0,0);
                        rr.x=cur[i].x.y+1;
                        
                        if (i<L(cur)-1)
                            rr.y=cur[i+1].x.x; 
                        else
                        rr.y=m;
                        
                        good.pb(rr);
                        cs.pb(cur[i].y);
                        
                        if (sum(cs)>3)
                        {
                                good.erase(good.begin());
                                cs.erase(cs.begin());
                        }
                } 
                else
                {
                        int fr=0;
                        if (i<L(cur)-1)
                        {
                                fr=cur[i+1].x.x-cur[i].x.y;
                        } 
                        else
                        {
                                fr=m-cur[i].x.y;
                        }
                        pii rr=mp(0,0);
                        rr.x=cur[i].x.y+1;
                        
                        if (i<L(cur)-1)
                            rr.y=cur[i+1].x.x; 
                        else
                            rr.y=m;
                        
                        good.pb(rr);
                        cs.pb(cur[i].y);
                        while (sum(cs)>3)
                        {
                                good.erase(good.begin());
                                cs.erase(cs.begin());
                        }
                        
                        rept(j,L(good)-1)
                            ans+=(ll)fr*(good[j].y-good[j].x+1);
                        
                }
        }
        return ans;
}
int main()
{
//      freopen("input.txt","r",stdin);
//      freopen("output.txt","w",stdout);
        gets(mas[0]);
        sscanf(mas[0],"%d%d%d",&n,&m,&k);
        rept(i,n) gets(mas[i]);
        k=0;
        rept(i,n)
        {
                rept(j,m)
                {
                        if (mas[i][j]=='*' && mas[i+1][j]!='*' && mas[i][j+1]!='*')
                        {
                                int ci=i,cj=j;
                                while (ci>0 && mas[ci-1][cj]=='*') --ci;
                                while (cj>0 && mas[ci][cj-1]=='*') --cj;
                                rect r;
                                r.i1=ci; r.i2=i;
                                r.j1=cj; r.j2=j;
                                ob[k++]=r;
                        }
                }
        }
        sort(ob,ob+k,cmp);
        c=0;
        rept(i,k)
        {
                beg[c++]=ob[i].i1;
                beg[c++]=ob[i].i2;
        }
        beg[c++]=0;
        sort(beg,beg+c);
        c=unique(beg,beg+c)-beg;
        ans=0;
        rept(ir,c)
        {
                int r=beg[ir]+1;
                ll tmp=0;
                
                rept(il,c)
                {
                        int l=beg[il];
                        
                        if (l>=r) 
                        break;
                        
                        ll cur=calc(l,r);
                        
                        if (il) 
                            tmp+=cur*(l-beg[il-1]);
                        else
                            tmp+=cur*(l+1);
                }
                
                if (ir!=c-1) 
                    ans+=tmp*(beg[ir+1]-r+1); 
                else
                    ans+=tmp*(n-r+1);
        }
        cout<<ans<<endl;
}