#!/usr/bin/python

def solve(n, k, ps):
    if n==k:
        if sum(p % 2 for p in ps) % 2 == 1:
            return 'Stannis'
        else:
            return 'Daenerys'
    if (n-k)%2 == 0:
        if (k+1)%2 == 1:
            return 'Daenerys'
        else:
            nodds = sum(p % 2 for p in ps)
            if nodds  >= k+1+(n-k)/2-1:
                return 'Stannis'
            else:
                return 'Daenerys'
    else:
        # S does (n-k+1)/2 moves
        nodds = sum(p % 2 for p in ps)
        nevens = n - nodds
        smoves = (n-k+1)/2
        if nevens >= smoves+(k+1)-1:
            return 'Daenerys'
        elif nodds >= smoves+(k+1)-1 and (k+1) % 2 == 1:
            return 'Daenerys'
        else:
            return 'Stannis'

if __name__ == '__main__':
    n, k = map(int, raw_input().split())
    ps = map(int, raw_input().split())
    print solve(n, k, ps)
