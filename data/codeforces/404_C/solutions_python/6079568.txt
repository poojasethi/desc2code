from collections import defaultdict


n, k = map(int, raw_input().split())
d = map(int, raw_input().split())
d = sorted(map(lambda x: (x[1], x[0] + 1), enumerate(d)))

tree_edge = [0] * (n + 1)
rank = defaultdict(list)

if d[0][0] == 0:
    rank[d[0][0] + 1].append(d[0][1])
ret = []
f = True
for i in range(1, n):
    if rank[d[i][0]]:
        parent = rank[d[i][0]][0]
        tree_edge[parent] += 1
        if tree_edge[parent] >= k:
            rank[d[i][0]].pop(0)
        tree_edge[d[i][1]] += 1
        if tree_edge[d[i][1]] < k:
            rank[d[i][0] + 1].append(d[i][1])
        ret.append((parent, d[i][1]))
    else:
        f = False
if f:
    print len(ret)
    for x, y in ret:
        print x, y
else:
    print -1