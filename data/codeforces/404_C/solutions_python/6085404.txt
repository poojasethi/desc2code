#!/usr/bin/env python

import sys
import logging
import traceback

logging.basicConfig(level = logging.INFO)

n, k = map(int, raw_input().split())

layer = [[] for _ in range(n)]
start = [0 for _ in range(n)]

dist = sorted(zip(range(1, n+1), map(int, raw_input().split())), 
        key=lambda x: x[1])
adj_cnt = [0 for _ in range(n+1)]


def find_min_adjs_node(nodes, l) :
    ret = -1
    if start[l] >= len(nodes):
        return ret

    node = nodes[start[l]]
    if adj_cnt[node] < k:
        ret = node
        if adj_cnt[node] == k - 1:
            start[l] += 1

        return ret

    return ret

if dist[0][1] != 0 or (len(dist) > 1 and dist[1][1] == 0) : 
    print -1
else : 
    res = []
    flag = True
    layer[0].append(dist[0][0])
    for i in xrange(1, n): 
        index = dist[i][0]
        d = dist[i][1]
        cur_layer = d - 1
        if len(layer[cur_layer]) == 0:
            flag = False
            break
        pos = find_min_adjs_node(layer[cur_layer], cur_layer)
        if pos == -1:
            flag = False
            break

        if adj_cnt[pos] < k:
            res += ['%d %d' %(pos, index)]
            adj_cnt[pos] += 1
            adj_cnt[index] += 1
            layer[cur_layer+1].append(index)
        else : 
            flag = False
            break
        
    if flag : 
        print len(res)
        print '\n'.join(res)
    else :
        print -1

