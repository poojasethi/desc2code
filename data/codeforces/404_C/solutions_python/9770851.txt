n, k = map(int, raw_input().split())
D = map(int, raw_input().split())

by_dist = [[] for i in range(n)]
for (i, d) in enumerate(D):
  by_dist[d].append(i)
L = map(len, by_dist)

nb = 0
edges = []

if L[0] != 1:
  nb = -1
else:
  cur = 0
  rem = k
  for d in range(1, n):
    for i in range(L[d]):
      if cur >= L[d-1] or rem == 0:
        nb = -1
        edges = []
        break
      edges.append((by_dist[d-1][cur], by_dist[d][i]))
      nb += 1
      rem -= 1
      if rem <= 0:
        rem = k-1
        cur += 1
    if nb == -1:
      break
    cur = 0
    rem = k-1

print nb
for (c, i) in edges:
  print (c+1), (i+1)
