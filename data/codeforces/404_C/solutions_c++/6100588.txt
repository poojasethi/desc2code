#include <cstdio>
#include <vector>
#include <stack>
using namespace std;
#define MAXN 100100
#define FAIL {printf("-1\n"); return 0;}


int N, K, t, added;
int bucket[MAXN];
stack<int> nodest[MAXN];
vector<int> res;


void rec(int curd){

	for(int i=(curd!=0); i<K && bucket[curd+1]; ++i){

		res.push_back( nodest[curd].top() ); res.push_back( nodest[curd+1].top() );
		++added; --bucket[curd+1];
		rec(curd+1);
	
	}

	nodest[curd].pop();

}



int main(){

	scanf("%d %d",&N,&K);
	for(int i=0; i<N; ++i){
		scanf("%d",&t);
		++bucket[t];
		nodest[t].push(i+1);
	}

	if(bucket[0]!=1) FAIL;

	rec(0);

	if(added!=N-1) FAIL;

	printf("%d\n",res.size()/2);
	for(vector<int>::iterator it=res.begin(); it!=res.end(); it+=2){
		printf("%d %d\n",*it,*(it+1));
	}
	return 0;

}
