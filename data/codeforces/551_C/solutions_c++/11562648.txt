#include <bits/stdc++.h>
using namespace std;

const int nmax = 1e5+5;

int n, m, a[nmax], b[nmax];
long long sum;

bool can(long long t) {
	for(int i = 0; i<n; i++)
		b[i] = a[i];
	int p = n-1;
	for(int i = 0; i<m; i++) {
		while(p >= 0) if(b[p] == 0)
			p--; else break;
		long long rt = t-p-1;
		if(rt <= 0)
			return (p<0);
		while(p>=0) if(b[p] <= rt)
			rt -= b[p--]; else { b[p] -= rt; break; }
	}
	return p < 0;
}


int main() {
	scanf("%d%d", &n, &m);
	sum = 0;
	for(int i = 0; i<n; i++)
		scanf("%d", a+i), sum += a[i];
	long long le = 2, ri = n + (sum+m-1)/m + n;
	while(le < ri) {
		long long mid = (le+ri)/2;
		if(can(mid))
			ri = mid;
		else
			le = mid+1;
	}
	printf("%I64d\n", le);
	return 0;
}