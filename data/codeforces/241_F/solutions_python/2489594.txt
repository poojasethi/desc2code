#t = input()
t = 1
def xstep(p, q):
    if p<q:
        return p+1
    elif p>q:
        return p-1
    else:
        return p
def step(p, q):
    return (xstep(p[0], q[0]), xstep(p[1], q[1]))
for _ in range(t):
    n, m, k = tuple(int(x) for x in raw_input().split())
    tbl = [list(raw_input()) for i in range(n)]
    ind = {}
    for r in range(len(tbl)):
        for c in range(len(tbl[r])):
            if ord(tbl[r][c])>=ord('a') and ord(tbl[r][c])<=ord('z'):
                ind[tbl[r][c]]=(r,c)
                tbl[r][c]='1'
    l = {}
    for r in range(len(tbl)):
        for c in range(len(tbl[r])):
            if ord(tbl[r][c])>=ord('1') and ord(tbl[r][c])<=ord('9'):
                l[r, c] = int(tbl[r][c])
    inp = raw_input().split()
    path = []
    path.append((int(inp[0])-1, int(inp[1])-1))
    for c in inp[2]:
        path.append(ind[c])
    path.append((int(inp[3])-1, int(inp[4])-1))
    (x, y) = path[0]
    good = False
    for dest in path:
        while (x, y) != dest:
            if k>=l[x, y]:
                k-=l[x, y]
                (x, y) = step((x, y), dest)
            else:
                print x+1, y+1
                good = True
                break
        if good:
            break
    if not good:
        print path[-1][0]+1, path[-1][1]+1
