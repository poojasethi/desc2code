//Fruit of Light
//FoL CC
//Apple Strawberry

#include<cstdio>
#include<algorithm>
#include<vector>
#include<iostream>
#include<set>
#include<map>
#include<queue>
#include<cmath>
#include<cstring>

using namespace std;

#define For(i, n) for(int i = 0; i<(n); ++i)
#define ForEach(it, i) for(typeof i.begin() it = i.begin(); it!=i.end(); ++it)
#define INF 1023456789

typedef long long ll;
typedef pair<int, int> pii;
typedef vector<int> vi;

int R,S,k;
char plan[107][107];
char road[1047];

//int dist[107][107];
//int prevy[107][107];
//int prevx[107][107];
//queue<int> F;

int lx[300], ly[300];

/*int distance(int y1, int x1, int y2, int x2, bool recal = 1){
    int d = 0;
    //For(i,107) For(j,107) dist[i][j] = INF;
    //dist[y1][x1] = 0;
    //prevy[y1][x1] = y1;
    //prevx[y1][x1] = x1;
    //while(!F.empty()
}*/

int sx,sy,fx,fy;

int main(){
    scanf("%d%d%d",&R,&S,&k);
    For(i,R) scanf("%s", plan[i+1]+1);
    scanf("%d%d %s %d%d",&sy,&sx,road,&fy,&fx);
    
    For(i,107) For(j,107) {
        ly[plan[i][j]] = i;
        lx[plan[i][j]] = j;
    }

    int x = sx, y = sy;
    int roL = strlen(road);
    For(i,roL+1){
        int ny, nx;
        if (i<roL){
            nx = lx[road[i]];
            ny = ly[road[i]];
        }else{
            ny = fy;
            nx = fx;
        }
        
        while(x+y != nx+ny) {
            if (plan[y][x]>='a') k--;
            else k-=plan[y][x]-'0';
           
            if (k<0) break;
            //printf("!%d %d %d\n", y, x, k);

            if (x>nx) x--;
            if (y>ny) y--;
            if (nx>x) x++;
            if (ny>y) y++;
        }
    }
    printf("%d %d\n", y, x );
}
