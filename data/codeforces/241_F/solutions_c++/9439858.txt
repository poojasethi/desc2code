#include<cstdio>
#include<cstdlib>
char map[110][110],ord[100000];
int n,m,k;
int x[30],y[30];
int sx,sy,tx,ty;
int cx[10]={0,0,1,-1};
int cy[10]={1,-1,0,0};
int gv(int x,int y)
{
	if('0'<=map[x][y]&&map[x][y]<='9')
		return map[x][y]-'0';
	return 1;
}
void solve(int fx,int fy,int gx,int gy)
{
	while(fx!=gx||fy!=gy)
	{
		k-=gv(fx,fy);
		if(k<0)
		{
			printf("%d %d\n",fx,fy);
			exit(0);
		}
		if(fx<gx)
			++fx;
		if(fx>gx)
			--fx;
		if(fy<gy)
			++fy;
		if(fy>gy)
			--fy;
	}
}
int main()
{
	int i,j;
	scanf("%d%d%d",&n,&m,&k);
	for(i=1;i<=n;++i)
	{
		scanf("%s",map[i]+1);
		for(j=1;j<=m;++j)
			if('a'<=map[i][j]&&map[i][j]<='z')
			{
				x[map[i][j]-'a']=i;
				y[map[i][j]-'a']=j;
			}
	}
	scanf("%d%d%s",&sx,&sy,ord+1);
	if(ord[1]<'a'||ord[1]>'z')
	{
		tx=ord[1]-'0';
		if('0'<=ord[2]&&ord[2]<='9')
			tx=tx*10+ord[2]-'0';
		if('0'<=ord[3]&&ord[3]<='9')
			tx=tx*10+ord[3]-'0';
		scanf("%d",&ty);
		solve(sx,sy,tx,ty);
		printf("%d %d\n",tx,ty);
		return 0;
	}
	scanf("%d%d",&tx,&ty);
	solve(sx,sy,x[ord[1]-'a'],y[ord[1]-'a']);
	for(i=1;ord[i+1]<='z'&&ord[i+1]>='a';++i)
		solve(x[ord[i]-'a'],y[ord[i]-'a'],x[ord[i+1]-'a'],y[ord[i+1]-'a']);
	solve(x[ord[i]-'a'],y[ord[i]-'a'],tx,ty);
	printf("%d %d\n",tx,ty);
	return 0;
}