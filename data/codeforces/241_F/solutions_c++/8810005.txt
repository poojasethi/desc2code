#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <cctype>
#include <algorithm>
#include <iostream>
#define ft first
#define sd second
#define mp make_pair
using namespace std;

typedef pair<int,int> pii;

const int S=100+5;
const int D[4][2]={{-1,0},{0,1},{1,0},{0,-1}};

int n,m,k,cnt,now,d,nx,ny,sx,sy,ex,ey,g[S][S];
pii pos[S*S];
char op[S*S];

inline int dir(int x1,int y1,int x2,int y2){return (x1==x2)?(y1<y2?1:3):(x1<x2?2:0);}

int main(int argc,char **argv)
{
	#ifndef ONLINE_JUDGE
		if (argc==1) freopen("241F.in","r",stdin),freopen("241F.out","w",stdout);
		else freopen(argv[1],"r",stdin),freopen(argv[2],"w",stdout);
	#endif
	char ch;
	scanf("%d%d%d",&n,&m,&k);
	for (int i=1;i<=n;++i)
		for (int j=1;j<=m;++j)
		{
			scanf(" %c",&ch);
			if (ch=='#') g[i][j]=-1;else
			if (isdigit(ch)) g[i][j]=ch-'0';else
			pos[ch-'a']=mp(i,j),g[i][j]=1;
		}
	scanf("%d%d%s%d%d",&nx,&ny,op+1,&ex,&ey);
	cnt=strlen(op+1);
	if (nx==pos[op[1]].ft && ny==pos[op[1]].sd)
		d=dir(nx,ny,pos[op[now=2]-'a'].ft,pos[op[2]-'a'].sd);
	else d=dir(nx,ny,pos[op[now=1]-'a'].ft,pos[op[1]-'a'].sd);
	for (int rem=g[nx][ny];k--;)
		if (!--rem)
		{
			rem=g[nx+=D[d][0]][ny+=D[d][1]];
			if (nx==ex && ny==ey && now==cnt) break;
			if (nx==pos[op[now]-'a'].ft && ny==pos[op[now]-'a'].sd)
				if (now<cnt) ++now,d=dir(nx,ny,pos[op[now]-'a'].ft,pos[op[now]-'a'].sd);
				else d=dir(nx,ny,ex,ey);
		}
	printf("%d %d\n",nx,ny);
	return 0;
}
