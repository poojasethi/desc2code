#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<climits>
const int N = 200;
int n, k, d[N], father[N], ans[N], w[N][N], 
dis[N][N], f[N][N], center[N][N];
void measure(int x, int father, int c)
{
    if (x != c)
    dis[x][c] = dis[c][x] = dis[father][c] + 1;
    for (int i = 1; i <= w[x][0]; i++)
    if (w[x][i] != father)
    measure(w[x][i], x, c);
}

void getfather(int x)
{
    for (int i = 1; i <= w[x][0]; i++)
    if (w[x][i] != father[x])
    {
        father[w[x][i]] = x;
        getfather(w[x][i]);
    }
}

int work(int x, int c)
{
    if (f[x][c] != -1)
    return(f[x][c]);
    int min = INT_MAX, tc;
    for (int i = 1; i <= n; i++)
    {
        int temp = k + d[dis[i][x]];
        if (i == c) temp = d[dis[i][x]];
        for (int j = 1; j <= w[x][0]; j++)
        if (w[x][j] != father[x])
        temp += work(w[x][j], i);
        if (temp < min)
        {
            min = temp;
            tc = i;
        }
    }
    f[x][c] = min;
    center[x][c] = tc;
    return(f[x][c]);
}

void getans(int x, int c)
{
    ans[x] = center[x][c];
    for (int i = 1; i <= w[x][0]; i++)
    if (w[x][i] != father[x])
    getans(w[x][i], ans[x]);
}

int main()
{
    int i, x, y;
    memset(w, 0, sizeof(w));
    scanf("%d %d", &n, &k);
    for (i = 1; i < n; i++)
    scanf("%d", &d[i]);
    d[0] = 0;
    for (i = 1; i < n; i++)
    {
        scanf("%d %d", &x, &y);
        w[x][0]++;
        w[x][w[x][0]] = y;
        w[y][0]++;
        w[y][w[y][0]] = x;
    }
    for (i = 1; i <= n; i++)
    {
        dis[i][i] = 0;
        measure(i, 0, i);
    }
    father[1] = 0;
    getfather(1);
    memset(f, -1, sizeof(f));
    printf("%d\n", work(1, 0));
    getans(1, 0);
    for (i = 1; i <= n; i++)
    printf("%d ", ans[i]);
    return(0);
}
