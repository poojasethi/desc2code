#include <cstdio>
#include <cstdlib>
#include <algorithm>
using namespace std;
int n, cnt, x, y, m;
int s[200], d[200][200], c[200], ans[200], f[200][200];
void work(int x, int p)
{
	for (int i = 1; i <= n; i++) f[x][i] = s[d[x][i]] + m;
	for (int i = 1; i <= n; i++)
	if (d[x][i] == 1 && i != p)
	{
		work(i, x);
		cnt = f[i][c[i]];
		for (int j = 1; j <= n; j++) f[x][j] += min(f[i][j] - m, cnt);
	}
	c[x] = 1;
	for (int i = 2; i <= n; i++) if (f[x][c[x]] > f[x][i]) c[x] = i;
}
void find(int x, int p, int now)
{
	ans[x] = now;
	for (int i = 1; i <= n; i++)
	 if (d[x][i] == 1 && i != p)
	  if (f[i][now] - m < f[i][c[i]]) find(i, x, now);
	   else find(i, x, c[i]);
}
int main()
{
	scanf("%d%d", &n, &m);
	for (int i = 1; i < n; i++) scanf("%d", &s[i]);
	for (int i = 1; i <= n; i++)
	{
		for (int j = 1; j <= n; j++) d[i][j] = 200;
		d[i][i] = 0;
	}
	for (int i = 1; i < n; i++)
	{
		scanf("%d%d", &x, &y);
		d[x][y] = d[y][x] = 1;
	}
	for (int k = 1; k <= n; k++)
	 for (int i = 1; i <= n; i++)
	  if (i != k)
	   for (int j = 1; j <= n; j++)
	    if (i != j && j != k && d[i][k] + d[k][j] < d[i][j]) d[i][j] = d[i][k] + d[k][j];
	work(1, 0);
	find(1, 0, c[1]);
	printf("%d\n", f[1][c[1]]);
	for (int i = 1; i < n; i++) printf("%d ", ans[i]);
	printf("%d\n", ans[n]);
	return 0;
}
