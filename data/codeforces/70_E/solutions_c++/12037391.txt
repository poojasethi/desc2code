#include<cstdio>
#define MAXN 99999999
#define Min(a,b)(a<b?a:b)
int n,K;
int map[200][200],L[200],d[200];
int f[200][200],p[200];
int w[200][200],ans[200];
void dfs(int MF,int r,int fa,int deep)//任意两点之间的花费
{
	w[MF][r]=d[deep];
	for(int i=1;i<=L[r];i++)
		if(map[r][i]!=fa)dfs(MF,map[r][i],r,deep+1);
}
void dp(int r,int fa)//f[i][j]:以i为根节点的树以j作为中心城市的最小代价
{
	int i,j;
	for(i=1;i<=n;i++)f[r][i]=w[r][i]+K;
	for(i=1;i<=L[r];i++)
		if(map[r][i]!=fa)
		{
			int s=map[r][i];
			dp(s,r);
			
			for(j=1;j<=n;j++)
				f[r][j]+=Min(f[s][j]-K,f[s][p[s]]);
		}
	p[r]=1;
	for(i=1;i<=n;i++)
		if(f[r][i]<f[r][p[r]])p[r]=i;
}
void find(int r,int fa,int m)//略...
{
	ans[r]=m;
	int i;
	for(i=1;i<=L[r];i++)
		if(map[r][i]!=fa)
		{
			int s=map[r][i];
			if(f[s][m]-K<f[s][p[s]])find(s,r,m);
			else find(s,r,p[s]);
		}
}
int main()
{
	scanf("%d%d",&n,&K);
	int i;
	for(i=1;i<n;i++)
		scanf("%d",&d[i]);
	for(i=1;i<n;i++)
	{
		int a,b;
		scanf("%d%d",&a,&b);
		map[a][++L[a]]=b;
		map[b][++L[b]]=a;
	}
	for(i=1;i<=n;i++)dfs(i,i,-1,0);
	dp(1,-1);
	printf("%d\n",f[1][p[1]]);
	find(1,-1,p[1]);
	for(i=1;i<n;i++)printf("%d ",ans[i]);
	printf("%d\n",ans[n]);
}
	 	  			 	   		 	 	 							  		