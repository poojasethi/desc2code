#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int tt=188;
int n,c,d[tt],f[tt][tt],dis[tt][tt],ps[tt],ans[tt],fa[tt];
void dfs(int x){
    int i,j;
    for (i=1;i<=n;i++) f[x][i]=d[dis[x][i]]+c;
    for (i=1;i<=n;i++) if (dis[x][i]==1 && i!=fa[x]){
        fa[i]=x;
        dfs(i);
        for (j=1;j<=n;j++) f[x][j]+=min(f[i][j]-c,f[i][ps[i]]);
    }
    ps[x]=x;
    for (i=1;i<=n;i++) if (f[x][i]<f[x][ps[x]]) ps[x]=i;
}
void getans(int x,int lst){
    ans[x]=lst;
    for (int i=1;i<=n;i++) if (dis[x][i]==1 && i!=fa[x])
        getans(i,f[i][lst]-c<f[i][ps[i]]?lst:ps[i]);
}
int main(){
    int i,j,k;
    scanf("%d%d",&n,&c);
    for (i=1;i<n;i++) scanf("%d",d+i);
    memset(dis,1,sizeof dis);
    for (i=1;i<=n;i++) dis[i][i]=0;
    for (i=1;i<n;i++){
        scanf("%d%d",&j,&k);
        dis[j][k]=dis[k][j]=1;
    }
    for (k=1;k<=n;k++) for (i=1;i<=n;i++) for (j=1;j<=n;j++)
        dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);
    fa[1]=0;
    dfs(1);
    printf("%d\n",f[1][ps[1]]);
    getans(1,ps[1]);
    for (i=1;i<=n;i++) printf(i!=n?"%d ":"%d\n",ans[i]);
    return 0;
}
