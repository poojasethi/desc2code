#include <cstdio>
#include <cstring>
#include <algorithm>
#define INFI 999999999
bool vst[1000]; 
int n,center[1000],cost,head[1000],next[1000],to[1000],f[1000][1000],d[1000],dist[1000][1000];
void work(int u)
{
	int i,v;
	vst[u] = true;
	for(v=1;v<=n;v++)
		f[u][v] = d[dist[u][v]];
	for(i=head[u];i;i=next[i])
	{
		v = to[i];if(vst[v]) continue;
		work(v);
		for(int g=1;g<=n;g++)
		{
			int min = f[v][g];
			for(int q=1;q<=n;q++)
				min = std::min(min, f[v][q]+cost);
			f[u][g] += min;	
		}
	}	
}
void find(int u)
{
	int c,i,v,g;
	vst[u] = true;
	for(i=head[u];i;i=next[i])
	{
		int v = to[i]; if(vst[v]) continue;
		int min = f[v][center[u]]; 
		center[v] = center[u];
		for(int g=1;g<=n;g++)
			if(f[v][g]+cost<min){
				min = f[v][g] + cost;
				center[v] = g;
			}
		find(v);
	}	
}
int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    scanf("%d%d",&n,&cost);
    int i,u,v;
    for(i=1;i<n;i++)
    	scanf("%d",&d[i]);
    for(int u=1;u<=n;u++)
		for(int v=1;v<=n;v++)
			dist[u][v] = (u==v)?0:INFI;
	for(i=1;i<n;i++)
	{
		scanf("%d%d",&u,&v);
		dist[u][v] = dist[v][u] = 1;
		next[i] = head[u]; to[i] = v; head[u] = i;
		next[i+n] = head[v]; to[i+n] = u; head[v] = i+n;
	}   
	for(int i=1;i<=n;i++)
		for(u=1;u<=n;u++)
			for(v=1;v<=n;v++)
				dist[u][v] = std::min(dist[u][v],dist[u][i]+dist[i][v]);
	work(1); 
	memset(vst,false,sizeof(vst));
	for(center[1]=1,u=1;u<=n;u++) 
		if(f[1][u] < f[1][center[1]]) center[1] = u;
	find(1);
	printf("%d\n",f[1][center[1]]+cost);
	for(u=1;u<=n;u++)
		printf("%d ",center[u]);
}
