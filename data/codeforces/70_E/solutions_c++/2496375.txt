#include <cstdio>
#include <cstring>

const int maxn = 182;
int n, k, x, y, d[maxn], f[maxn][maxn], dist[maxn][maxn], rc[maxn], ans[maxn];

inline int min(int x, int y){return x < y ? x : y;}

void dp(int x, int fa){
	for (int i = 1; i <= n; i++) f[x][i] = d[dist[x][i]] + k;
	for (int i = 1; i <= n; i++){
		if (dist[x][i] != 1 || i == fa) continue;
		dp(i, x);
		for (int j = 1; j <= n; j++) f[x][j] += min(f[i][j] - k, f[i][rc[i]]);
	}
	rc[x] = x;
	for (int i = 1; i <= n; i++) if (f[x][i] < f[x][rc[x]]) rc[x] = i;
}

void assign(int x, int fa, int crc){
	ans[x] = crc;
	for (int i = 1; i <= n; i++)
		if (dist[x][i] == 1 && i != fa)
			f[i][crc] - k < f[i][rc[i]] ? assign(i, x, crc) : assign(i, x, rc[i]);
}

int main(){
	scanf("%d%d", &n, &k);
	for (int i = 1; i < n; i++) scanf("%d", d + i);
	memset(dist, 60, sizeof(dist));
	for (int i = 1; i <= n; i++) dist[i][i] = 0;
	for (int i = 1; i < n; i++) scanf("%d%d", &x, &y), dist[x][y] = dist[y][x] = 1;
	for (int k = 1; k <= n; k++) for (int i = 1; i <= n; i++) for (int j = 1; j <= n; j++)
		dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j]);
	dp(1, 0);
	printf("%d\n", f[1][rc[1]]);
	assign(1, 0, rc[1]);
	for (int i = 1; i <= n; i++) printf("%d ", ans[i]);
}
