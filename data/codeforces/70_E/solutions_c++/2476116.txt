#include<cstdio>
#include<algorithm>
#define fo(i,a,b) for(i=a;i<=b;++i)
using namespace std;
const int mn=210,inf=1<<29;
int d[mn],c[mn],ans[mn],f[mn][mn],g[mn][mn];
int n,co;
void dp(int r,int fa)
{
    int i,j;
    fo(i,1,n)f[r][i]=d[g[r][i]]+co;
    fo(i,1,n)
    {
        if(g[r][i]!=1||i==fa)continue;
        dp(i,r);
        fo(j,1,n)f[r][j]+=min(f[i][j]-co,f[i][c[i]]);
    }
    c[r]=r;
    fo(i,1,n)if(f[r][i]<f[r][c[r]])c[r]=i;
}
void repair(int r,int fa,int k)
{
    int i;
    ans[r]=k;
    fo(i,1,n)
    {
        if(g[r][i]!=1||i==fa)continue;
        if(f[i][k]-co<f[i][c[i]])repair(i,r,k);
        else repair(i,r,c[i]);
    }
}
int main()
{
    int i,j,k;
    scanf("%d%d",&n,&co);
    fo(i,1,n-1)scanf("%d",d+i);
    fill(g[1],g[n+1],inf);
    fo(i,1,n-1)
    {
        scanf("%d%d",&j,&k);
        g[j][k]=g[k][j]=1;
    }
    fo(i,1,n)g[i][i]=0;
    fo(k,1,n)
        fo(i,1,n)
            fo(j,1,n)
                g[i][j]=min(g[i][j],g[i][k]+g[k][j]);
    dp(1,0);
    printf("%d\n",f[1][c[1]]);
    repair(1,0,c[1]);
    printf("%d",ans[1]);
    fo(i,2,n)printf(" %d",ans[i]);
    printf("\n");
    return 0;
}