/*
* Problem: CODEFORCES 70E Information Reform
* Author: Leo Yu
* Time: 20-12-12 15:23
* State: SOLVED
* Memo: dp trees
*/
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <iostream>
#include <algorithm>
using namespace std;
typedef long long LL;
inline int   read()
{
	int x = 0; char ch = getchar(); bool positive = 1;
	for (; ch < '0' || ch > '9'; ch = getchar())	if (ch == '-')  positive = 0;
	for (; ch >= '0' && ch <= '9'; ch = getchar())	x = x * 10 + ch - '0';
	return positive ? x : -x;
}

int N, K;
int D[185], C[185];
int d[185][185], f[185][185];

void dfs(int x, int fa)
{
	for(int i = 1; i <= N; ++i) f[x][i] = D[d[x][i]] + K;
	for(int i = 1; i <= N; ++i)
		if(d[x][i] == 1 && i != fa)
		{
			dfs(i, x);
			for(int j = 1; j <= N; ++j)
			{
				if(f[i][C[i]] < f[i][j] - K) f[x][j] += f[i][C[i]];
				else f[x][j] += f[i][j] - K;
			}
		}
	C[x] = 1;
	for(int i = 2; i <= N; ++i)
		if(f[x][i] < f[x][C[x]])
			C[x] = i;
}

void get(int x, int fa, int c)
{
	for(int i = 1; i <= N; ++i)
		if(d[x][i] == 1 && i != fa)
			if(f[i][C[i]] > f[i][c] - K)
				C[i] = c;
	for(int i = 1; i <= N; ++i)
		if(d[x][i] == 1 && i != fa)
			get(i, x, C[i]);
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("a.in", "r", stdin);
	freopen("a.out", "w", stdout);
#endif
	
	N = read(), K = read();
	for(int i = 1; i < N; ++i) D[i] = read();
	memset(d, 6, sizeof(d));
	for(int i = 1; i < N; ++i)
	{
		int X = read(), Y = read();
		d[X][Y] = d[Y][X] = 1;
	}
	for(int i = 1; i <= N; ++i) d[i][i] = 0;
	for(int k = 1; k <= N; ++k)
		for(int i = 1; i <= N; ++i)
			for(int j = 1; j <= N; ++j)
				if(d[i][j] > d[i][k] + d[k][j])
					d[i][j] = d[i][k] + d[k][j];
	dfs(1, 0);
	printf("%d\n", f[1][C[1]]);
	get(1, 0, C[1]);
	for(int i = 1; i < N; ++i) printf("%d ", C[i]);
	printf("%d\n", C[N]);
	
	return 0;
}
