//Codeforces 70E Information Reform
#include<fstream>
#include<iostream>
#include<cstdlib>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

const int MAXN=185;
int n,m;
int c[MAXN];
int d[MAXN][MAXN];
int dp[MAXN][MAXN],best[MAXN];
bool u[MAXN];
int ans[MAXN];

void getdp(int p)
{
    u[p]=true;
    for(int i=1;i<=n;i++) dp[p][i]=m+c[d[p][i]];
    for(int i=1;i<=n;i++)
    if(!u[i]&&d[p][i]==1)
    {
        getdp(i);
        for(int j=1;j<=n;j++)
        dp[p][j]+=min(dp[i][j]-m,dp[i][best[i]]);
    }
    best[p]=1;
    for(int i=1;i<=n;i++)
    if(dp[p][i]<dp[p][best[p]]) best[p]=i;
}

void getans(int p,int b)
{
    u[p]=true;
    ans[p]=b;
    for(int i=1;i<=n;i++)
    if(!u[i]&&d[p][i]==1)
    {
        if(dp[i][b]-m<dp[i][best[i]]) getans(i,b);
        else getans(i,best[i]);
    }
}

int main()
{
    scanf("%d%d",&n,&m);
    for(int i=1;i<n;i++) scanf("%d",&c[i]);
    memset(d,20,sizeof(d));
    for(int i=1;i<n;i++)
    {
        int p,q;
        scanf("%d%d",&p,&q);
        d[p][q]=d[q][p]=1;
    }
    for(int i=1;i<=n;i++) d[i][i]=0;
    for(int k=1;k<=n;k++)
    for(int i=1;i<=n;i++)
    for(int j=1;j<=n;j++)
    if(d[i][k]+d[k][j]<d[i][j])
    d[i][j]=d[i][k]+d[k][j];
    getdp(1);
    printf("%d\n",dp[1][best[1]]);
    memset(u,0,sizeof(u));
    getans(1,best[1]);
    for(int i=1;i<=n;i++) printf("%d ",ans[i]);
    printf("\n");
    
    return 0;
}
/*
Sample Input:
8 10
2 5 9 11 15 19 20
1 4
1 3
1 7
4 6
2 8
2 3
3 5
Sample Output:
38
3 3 3 4 3 4 3 3
*/
