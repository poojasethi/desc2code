#include <iostream>
#include <cstring>
#include <cstdio>
#include <climits>
#include <vector>

using namespace std;

const int maxn = 200;

int n, k, u, v;
int c[maxn], b[maxn], f[maxn][maxn], d[maxn][maxn];

void dfs(int u, int pre) {
    for (int i = 0; i < n; i++) f[u][i] = c[d[u][i]] + k;
    for (int i = 0; i < n; i++)
        if (i != pre && d[u][i] == 1) {
            dfs(i, u);
            for (int j = 0; j < n; j++) {
                f[u][j] += min(f[i][b[i]], f[i][j] - k);
            }
        }
    for (int i = 0; i < n; i++)
        if (b[u] == -1 || f[u][i] < f[u][b[u]]) b[u] = i;
}

void ppr(int u, int ct, int pre) {
    b[u] = ct;
    for (int i = 0; i < n; i++)
        if (i != pre && d[u][i] == 1) {
            ppr(i, f[i][b[i]] < f[i][ct] - k ? b[i] : ct, u);
        }
}

int main() {
    cin>>n>>k;
    c[0] = 0;
    for (int i = 1; i < n; i++) scanf("%d", c + i);
    memset(d, 0x3f, sizeof(d));
    memset(b, 0xff, sizeof(b));
    for (int i = 0; i < n; i++) d[i][i] = 0;
    for (int i = 0; i < n - 1; i++) {
        scanf("%d%d", &u, &v);
        --u; --v;
        d[u][v] = d[v][u] = 1;
    }
    for (int k = 0; k < n; k++) for (int i = 0; i < n; i++) for (int j = 0; j < n; j++)
        d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
    dfs(0, 0);
    cout<<f[0][b[0]]<<endl;
    ppr(0, b[0], 0);
    for (int i = 0; i < n; i++) cout<<b[i] + 1<<" ";
    puts("");
    return 0;
}
