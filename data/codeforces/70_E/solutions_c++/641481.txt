#include <stdio.h>
#include <algorithm>
using namespace std;
const int maxn=200;
const int INF=1000000000;
int w[maxn][maxn],d[maxn],center[maxn],dp[maxn][maxn];
int n,k;
void dfs(int u,int pa)
{
    for(int i=1;i<=n;i++)
    if(w[u][i]==1&&i!=pa)
        dfs(i,u);
    center[u]=-1;
    for(int i=1;i<=n;i++)
    {
        dp[u][i]=d[w[u][i]];
        for(int j=1;j<=n;j++)
        if(w[u][j]==1&&j!=pa)
        {
            dp[u][i]+=min(dp[j][i],dp[j][center[j]]+k);
        }
        if(center[u]==-1||dp[u][i]<dp[u][center[u]])center[u]=i;
    }
}
int out[maxn];
void gao(int u,int pa,int p)
{
    out[u]=p;
    for(int i=1;i<=n;i++)
    if(w[u][i]==1&&i!=pa)
    {
        if(dp[i][p]<dp[i][center[i]]+k)gao(i,u,p);
        else gao(i,u,center[i]);
    }
}
int main()
{
    while(scanf("%d%d",&n,&k)!=EOF)
    {
        for(int i=1;i<n;i++)scanf("%d",&d[i]);
        d[0]=0;
        for(int i=1;i<=n;i++)
            for(int j=1;j<=n;j++)
                w[i][j]=INF;
        
        for(int i=1;i<n;i++)
        {
            static int a,b;
            scanf("%d%d",&a,&b);
            w[a][b]=w[b][a]=1;
        }
        for(int i=1;i<=n;i++)w[i][i]=0;
        for(int p=1;p<=n;p++)
            for(int i=1;i<=n;i++)
                for(int j=1;j<=n;j++)
                    w[i][j]=min(w[i][j],w[i][p]+w[p][j]);
        dfs(1,-1);
        printf("%d\n",dp[1][center[1]]+k);
        gao(1,-1,center[1]);
        for(int i=1;i<n;i++)
        printf("%d ",out[i]);
        printf("%d\n",out[n]);
    }
}
