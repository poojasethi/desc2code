#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <ctime>
#include <cmath>
#define maxn 200
#define ll long long
#define rep(i,n) for(int i=1;i<=n;++i)
using namespace std;
int n,m;
int d[maxn],f[maxn][maxn];
int c[maxn];
int dis[maxn][maxn];
ll fa[maxn];
int ans[maxn];
void floyed()
{
    rep(k,n)rep(i,n)rep(j,n)dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);
}
void dfs_1(int x)
{
//  printf("%d\n",x);
    rep(i,n)f[x][i]=d[dis[x][i]]+m;
    rep(i,n)
    {
        if(dis[x][i]==1&&(fa[x]!=i))
        {
            fa[i]=x;
            dfs_1(i);
            rep(j,n)f[x][j]+=min(f[i][j]-m,f[i][c[i]]);
        }
    }
    c[x]=1;
    rep(i,n)if(f[x][c[x]]>f[x][i])c[x]=i;
}
void dfs_2(int x,int y)
{
    ans[x]=y;
    rep(i,n)
    {
        if(dis[i][x]==1&&(fa[i]==x))
        {
            if(f[i][y]-m>=f[i][c[i]])dfs_2(i,c[i]);else dfs_2(i,y);
        }
    }
}
int main()
{ 
    scanf("%d%d",&n,&m);
    rep(i,n-1)scanf("%d",&d[i]);
    memset(dis,53,sizeof(dis));
    rep(i,n-1)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        dis[x][y]=1;
        dis[y][x]=1;
    }
    rep(i,n)dis[i][i]=0;
    floyed();
//  printf("True\n"); 
//  memset(f,63,sizeof(f));
    dfs_1(1);
//  printf("True\n");
    cout<<f[1][c[1]]<<endl;
    dfs_2(1,c[1]);
    rep(i,n)printf("%d ",ans[i]);
    return 0;
}
