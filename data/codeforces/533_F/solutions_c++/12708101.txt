#include<cstdio>
#include<algorithm>
#include<cstring>
#define N 200005
using namespace std;
char a[N],b[N];int A[26][N],d[26][N],hash[N][26];
int B[N],next[N],cut[N],ans[N],T[26],pre[26],n,m,i,j;
void init(int *b,int m)
{
	int j=0;next[1]=0;
	for (int i=2;i<=m;i++) {
		for (;j&&b[j+1]!=b[i];j=next[j]);
		next[i]=(j+=b[j+1]==b[i]);
  }
}
void kmp(int x,int y)
{
	if ((*B)>(*A[x])) return;
	if ((*B)==1) {
		for (int i=1;i<=*A[x];i++)
			hash[A[x][i]-B[1]+1][y]=x;
		return;
  }int *a=d[x],*b=cut,n=(*A[x])-1,j=0;
  for (int i=1;i<=n;i++) {
  	for (;j&&b[j+1]!=a[i];j=next[j]);
  	j+=(b[j+1]==a[i]);
  	if (j+1==*B) j=next[j],hash[A[x][i+1]-B[*B]+1][y]=x;
  }
}
int check(int x){
	for (int i=0;i<26;i++) pre[i]=-1;
	for (int i=0;i<26;i++)
		if (T[i]) {
			if (hash[x][i]==-1) return 0;
			if (pre[i]!=-1&&hash[x][i]!=pre[i]) return 0;
			if (pre[hash[x][i]]!=-1&&pre[hash[x][i]]!=i) return 0;
			pre[hash[x][i]]=i;pre[i]=hash[x][i];
	}return 1;  
}
int main()
{
	scanf("%d%d",&n,&m);
	scanf("%s%s",a+1,b+1);
	for (i=1;i<=n;i++)
		a[i]-='a',A[a[i]][++*A[a[i]]]=i;
	for (i=1;i<=m;i++) b[i]-='a';
	for (i=0;i<26;i++) 
		for (j=1;j<*A[i];j++)
			d[i][j]=A[i][j+1]-A[i][j];
	memset(hash,-1,sizeof(hash));
	for (i=0;i<26;i++) {
		if (i=='l'-'a')
			*B=0;
		for (*B=0,j=1;j<=m;j++)
			if (b[j]==i) B[++*B]=j;
		if (!B[0]) continue;T[i]=1;
		for (j=1;j<*B;j++) 
			cut[j]=B[j+1]-B[j];
		init(cut,(*B)-1);
		for (j=0;j<26;j++)
			if (*A[j]) kmp(j,i);
	}for (i=1;i<=n-m+1;i++) 
		if (check(i)) ans[++*ans]=i;
	printf("%d\n",*ans);
	for (i=1;i<=*ans;i++)
		printf("%d ",ans[i]);
}