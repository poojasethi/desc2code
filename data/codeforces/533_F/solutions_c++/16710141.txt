#include <cstdio>
#include <bitset>
inline unsigned int getuint(){
	char w=getchar();
	while (w<'0'||'9'<w) w=getchar();
	unsigned int ans=0;
	for (;'0'<=w&&w<='9';w=getchar()) ans=ans*10+w-'0';
	return ans;
}
char str0[200005], str[200005];
int a0[200005], a[200005];
std::bitset<200005> ok[26][26];
void KMP(int n, int m, std::bitset<200005> &ok){
	static int next[200005];
	for (int i=1, j=next[i-1]=-1;i<=m;next[i++]=++j) for (;~j&&a[j+1]!=a[i];j=next[j]);
	for (int i=1, j=0;i<=n;ok[i++]=++j==m) for (;~j&&a[j+1]!=a0[i];j=next[j]);
}
int main(){
	//freopen("ex.in", "r", stdin);
	int n=getuint(), m=getuint();
	scanf("%s%s", str0+1, str+1);
	for (int x=0;x<26;x++) for (int y=0;y<26;y++){
		for (int i=1;i<=n;i++) a0[i]=(str0[i]-'a'==x)+1;
		for (int i=1;i<=m;i++) a[i]=(str[i]-'a'==y)+1;
		KMP(n, m, ok[x][y]);
	}
	static int cnt[26], ans[200005];
	for (int i=1;i<=m;i++) cnt[str[i]-'a']++;
	for (int i=m;i<=n;i++){
		int flag=1;
		for (int y=0;y<26;y++) if (cnt[y]){
			int tag=0;
			for (int x=0;x<26;x++) if (ok[x][y].test(i)&&ok[y][x].test(i)) {tag=1;break;}
			if (!tag) {flag=0;break;}
		}
		if (flag) ans[++*ans]=i;
	}
	printf("%d\n", *ans);
	for (int i=1;i<=*ans;i++) printf("%d%c", ans[i]-m+1, " \n"[i==*ans]);
	return 0;
}
