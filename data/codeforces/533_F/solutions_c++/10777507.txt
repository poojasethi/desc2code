#include <cstdio>
#include <algorithm>
#define N 200005
#define M 26
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int n, m, f[N], pos[N], last[M], map[M], ans[N], p;
char s[N], t[N];

bool match(int l, int r){
	int x = pos[l], y;
	if(last[t[r]] < r - l) y = -1;
	else y = r - last[t[r]];
	
	return x == y;
}

bool check(int l, int r){
	int x = pos[l], y;
	if(last[s[r]] < r - l) y = -1;
	else y = r - last[s[r]];
	
	if(x != y) return 0;
	
	fi(i, 0, M) map[i] = -1;
	fi(i, 0, M){
		if(last[i] < r - l) continue;
		int j = l + last[i] - r, k = last[i];
		if(map[s[k]] != -1 && map[s[k]] != t[j] || map[t[j]] != -1 && map[t[j]] != s[k]) return 0;
		map[s[k]] = t[j];
		map[t[j]] = s[k];
	}
	
	if(map[s[r]] != -1 && map[s[r]] != t[l] || map[t[l]] != -1 && map[t[l]] != s[r]) return 0;
	return 1;
}

int main(){
	scanf("%d %d %s %s", &n, &m, s, t);
	fi(i, 0, n) s[i] -= 'a';
	fi(i, 0, m) t[i] -= 'a';
	
	fi(i, 0, M) last[i] = -1;
	pos[0] = -1;
	last[t[0]] = 0;
	
	for(int i = 1, j = f[0] = -1; i < m; i++){
		while(j > -1 && !match(j + 1, i)) j = f[j];
		f[i] = j += match(j + 1, i);
		
		if(last[t[i]] < 0) pos[i] = -1;
		else pos[i] = i - last[t[i]];
		last[t[i]] = i;
	}
	
	fi(i, 0, M) last[i] = -1;
	for(int i = 0, j = -1; i < n; i++){
		while(j > -1 && !check(j + 1, i)) j = f[j];
		j += check(j + 1, i);
		if(j == m - 1){
			ans[p++] = i - m + 2;
			j = f[j];
		}
		last[s[i]] = i;
	}
	
	printf("%d\n", p);
	fi(i, 0, p) printf("%d%c", ans[i], i == p - 1 ? '\n' : ' ');
	scanf("\n");
}
