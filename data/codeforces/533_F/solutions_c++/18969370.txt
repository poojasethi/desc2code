#include<iostream>
#include<cstdio>
#include<string>
#include<cstring>
#include<map>
#include<queue>
#include<set>
#include<stack>
#include<algorithm>
#include<cmath>
#include<vector>
using namespace std;
typedef long long ll;
typedef long long LL;
typedef unsigned long long ull;
#define MP make_pair
#define PII pair<int,int>
#define PFI pair<double,int>
#define PLI pair<long long,int>
#define F first
#define S second
#define lson l,mid,rt<<1
#define rson mid+1,r,rt<<1|1
#define BAS 1000000007
const int INF = 0x7f7f7f7f;
const int MOD = 10007;
const int M = 100000 + 50;
const int N = 200000 + 50;
const double eps = 1e-8;
const int p = 137;
ull hsh1[26],hsh2[26],base;
char s[N],t[N];
int n,m;
bool ok(){
	int cnt = 0;
	for(int i = 0 ; i < 26 ; i ++){
		for(int j = 0 ; j < 26 ; j ++){
			if(hsh1[i] == hsh2[j] && hsh1[j] == hsh2[i]){
				cnt ++ ; break;
			}
		}
	}
	return cnt == 26;
}
int main(){
	while(scanf("%d%d",&n,&m) != EOF){
		base = 1;
		scanf("%s%s",s,t);
		for(int i = 0 ; i < n ; i ++) s[i] -= 'a';
		for(int i = 0 ; i < m ; i ++) t[i] -= 'a';
		for(int i = 0 ; i < m ; i ++) base = base * p;
		for(int i = 0 ; i < m ; i ++){
			for(int j = 0 ; j < 26 ; j ++){
				if(s[i] == j) hsh1[j] = (hsh1[j] * p + 1);
				else hsh1[j] = hsh1[j] * p;
				if(t[i] == j) hsh2[j] = (hsh2[j] * p + 1);
				else hsh2[j] = hsh2[j] * p;
			}
		}

		vector<int> ans;
		if(ok()) ans.push_back(1);
		for(int i = m ; i < n ; i ++){
			for(int j = 0 ; j < 26 ; j ++){
				if(s[i-m] == j) hsh1[j] = hsh1[j] * p - base;
				else hsh1[j] = hsh1[j] * p;

				if(s[i] == j) hsh1[j] = hsh1[j] + 1;
			}
			if(ok()) ans.push_back(i-m+2);
		}
		cout << ans.size() << endl;
		for(int i = 0 ; i < ans.size() ; i ++){
			if(i) putchar(' ');
			printf("%d",ans[i]);
		}
		if(ans.size()) puts("");
	}
	return 0 ;
}

   	  	   				 		  			 	 			 		