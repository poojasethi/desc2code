#include <cstdio>
#include <cstring>
#include <vector>
using namespace std;
const int MX = 2*1e5+1;
char S[MX], P[MX], SS[MX], PP[MX];
int n, m, F[MX], ok[MX][26];
vector<int> ans;

void build() {
	F[0] = 0, F[1] = 0;
	for (int i = 2; i <= m; i++) {
		int j = F[i-1];
		while (1) {
			if (PP[j] == PP[i-1]) {
				F[i] = j+1;
				break;
			}
			else if (j > 0) {
				j = F[j];
			}
			else {
				F[i] = 0;
				break;
			}
		}
	}
}

void kmp(int a, int b) {
	int i = 0, j = 0;
	while (1) {
		if (j == n) break;
		if (SS[j] == PP[i]) {
			i++, j++;
			if (i == m) {
				ok[j-m+1][a] = 1;
				ok[j-m+1][b] = 1;
				//printf("match at %d with %d, %d\n", j-m+1, a, b);
				i = F[i];
			}
		}
		else if (i > 0) {
			i = F[i];
		}
		else {
			j++;
		}
	}
}

int main() {
	scanf("%d%d%s%s", &n, &m, &S, &P);
	memset(ok, 0, sizeof ok);
	for (int i = 0; i < 26; i++) for (int j = i;  j < 26; j++) {
		for (int k = 0; k < n; k++) {
			if (S[k] == (char)i + 'a' || S[k] == (char)j + 'a') {
				SS[k] = S[k];
			}
			else {
				SS[k] = ' ';
			}
		}
		for (int k = 0; k < m; k++) {
			if (P[k] == (char)i + 'a') {
				PP[k] = (char)j + 'a';
			}
			else if (P[k] == (char)j + 'a') {
				PP[k] = (char)i + 'a';
			}
			else {
				PP[k] = ' ';
			}
		}
		build();
		kmp(i, j);
	}
	for (int i = 1; i <= n; i++) {
		bool e = 1;
		for (int j = 0; j < 26; j++) {
			if (!ok[i][j]) {
				e = 0;
				break;
			}
		}
		if (e) {
			ans.push_back(i);
		}
	}
	printf("%d\n", ans.size());
	for (int i = 0; i < ans.size(); i++) {
		printf("%d ", ans[i]);
	}
	return 0;
}