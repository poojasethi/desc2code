#include <cstdio>
#include <iostream>
#include <algorithm>
#include <deque>
#include <vector>

using namespace std;

typedef long long ll;

const ll base= 47;

ll n, m;
char a[200005], b[200005];
ll power[200005];
ll code[2][200005];
deque<ll> d[35];
bool sign[35];
vector<ll> res;

bool check(ll i, ll j){
    if(code[0][i]==code[1][j] && code[0][j]==code[1][i]) return true;
    return false;
}

int main(){
    ios_base::sync_with_stdio(false);
    cin >> n >> m;
    cin >> (a+1); cin >> (b+1);
    power[0]= 1; for(ll i=1;i<=200001;i++) power[i]= power[i-1]*base;

    for(ll i=1;i<=m;i++){
        code[0][b[i]-'a']= (code[0][b[i]-'a']+ power[i]);
        sign[b[i]-'a']= true;
    }
    for(ll i=1;i<=m-1;i++){
        d[a[i]-'a'].push_back(i); code[1][a[i]-'a']+= power[i];
    }
    for(ll i=m;i<=n;i++){
        code[1][a[i]-'a']+= power[i]; d[a[i]-'a'].push_back(i);
        for(ll j=0;j<26;j++){
            if(d[j].empty()==false && d[j].front()<=i-m){
                code[1][j]-= power[d[j].front()]; d[j].pop_front();
            }
        }
        if(i>m) for(ll j=0;j<26;j++) code[0][j]*= base;
        bool ok= true;
        for(ll j=0;j<26;j++){
            if(!sign[j]) continue;
            bool have= false;
            for(ll k=0;k<26;k++){
                if(d[k].empty()) continue;
                if(check(j,k)){
                    have= true; break;
                }
            }
            if(!have){
                ok= false; break;
            }
        }
        if(ok) res.push_back(i-m+1);
    }
    cout << (ll)res.size() << "\n";
    if(!res.empty()){for(ll i=0;i<(ll)res.size();i++) cout << res[i] << " "; cout << "\n";}
    return 0;
}