from Queue import * # Queue, LifoQueue, PriorityQueue
from bisect import * #bisect, insort
from datetime import * 
from collections import * #deque, Counter,OrderedDict,defaultdict
import calendar
import heapq
import math
import copy
import itertools

def solver():
    n,k = map(int,raw_input().split())
    task = map(int,raw_input().split())
    costs = [0]*k
    i = 0
    while i < n:
        for j in range(k):
            costs[j] += task[i+j]
        
        i += k
    
    ans = 1
    ans_cost = costs[0]
    #print costs
    for i in range(1,k):
        if ans_cost > costs[i]:
            ans = i+1
            ans_cost = costs[i]
    
    print ans



if __name__ == "__main__":
    solver()
    
