
import sys
import traceback
  
def solve():
    n,p = map( int, sys.stdin.readline().strip('\n\r ').split())
    p -= 1
    vs = map( int, sys.stdin.readline().strip('\n\r ').split())
    lenvs = len(vs)
    vs.sort()
    if n==1: return ( vs[p / lenvs ], vs[p % lenvs] )
    prow = p / lenvs
    vrow = vs[prow]
    if prow==0 and vrow<vs[prow+1]: return ( vs[p / lenvs ], vs[p % lenvs] )
    if (prow+1)==n and vrow>vs[prow-1]: return ( vs[p / lenvs ], vs[p % lenvs] )
    if n>2 and prow<(n-1) and prow>0 and vrow>vs[prow-1] and vrow<vs[prow+1]: return ( vs[p / lenvs ], vs[p % lenvs] )

    prow0 = prow
    while prow0>0:
      if vs[prow0-1]<vrow: break
      prow0 -= 1

    prow1 = prow+1
    while prow1<n:
      if vs[prow1]>vrow: break
      prow1 += 1

    dprow10 = prow1 - prow0
    ###sys.stdout.write( str((prow0,prow1,dprow10,)) )
    p -= (prow0 * lenvs)

    pcol = 0
    while p >= dprow10:
      pcol += 1
      p -= dprow10
    return( vrow, vs[pcol] )

if __name__=="__main__":
  print( "%d %d" % solve() )
