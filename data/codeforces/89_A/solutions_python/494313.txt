#!/usr/bin/env python2
# -*- coding: utf-8 -*-
import sys
input = sys.stdin
output = sys.stdout

def solve(A,m,k):
    n = len(A)
    
    if n==1:
        return min(A[0], m*k)
    
    if n % 2 == 0:
        return 0
    
    moves = n/2 + 1
    if moves > m:
        return 0
    
    M = min(A[0:n:2])
    return min(M, (m/moves)*k)

S = input.readline().split(' ')
n = int(S[0])
m = int(S[1])
k = int(S[2])
assert 1<=n and n<=10**4
assert 1<=m and m<=10**9
assert 1<=k and k<=10**9

A = [int(s) for s in input.readline().split(' ')]
assert len(A) == n
MAX_A = 10**5
assert all(map(lambda a: 0<=a and a<=MAX_A, A))

answer = solve(A,m,k)

output.write('%s\n' % (answer))
