#include <iostream>
#include <cstdio>
#include <string>
#include <algorithm>
#include <set>
#include <map>
#include <vector>
using namespace std;
vector <vector <pair<int,int> > > g;
int z,x,y,n,i,j,p[5005],a[5005],pred[5005],cnt[5005][5005],ans[5005],r;
bool cmp(int x,int y)
{
return a[x]<a[y];
}
void dfs(int v,int pr,int cost)
{
	pred[v]=pr;
	if (pr!=-1)
	for (int i=0;i<5005;i++)
		cnt[v][i]=cost;
	for (int i=0;i<g[v].size();i++)
	if (g[v][i].first!=pr)
		dfs(g[v][i].first,v,g[v][i].second);
}
int main()
{
cin>>n;
g.resize(n);
for (i=0;i<n;i++)
{
	cin>>a[i];
	p[i]=i;	
}
sort(p+1,p+n,cmp);
for (i=0;i<n-1;i++)
{
cin>>x>>y>>z;
g[x-1].push_back(make_pair(y-1,z));
g[y-1].push_back(make_pair(x-1,z));
}
dfs(0,-1,0);
for (i=0;i<n;i++)
{
	int r=p[i];
	int days=0;
	while (r!=0)
			{
			for (j=days;j<5005;j++)
			if (cnt[r][j]>0)
			{
				cnt[r][j]--;
				r=pred[r];
				days=j+1;
				break;
			}
			}
	ans[p[i]]=days;
}
for (i=0;i<n;i++)
cout<<ans[i]<<" ";



return 0;
}
