
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<string>
#include<string.h>
#include<cstring>
#include<stack>
#include<queue>
#include<cassert>

using namespace std;

#define LL long long int 
#define PII pair<int,int> 
int num[5001][5001],wt[5001],del[5001],par[5001],vis[5001],ans[5001],curuse[5001],loc[5001];
vector<int> a[5001];
vector<PII> v;
int dfs(int v,int p){
	vis[v]=1;
	par[v]=p;
	for(int i=0;i<a[v].size();i++)
		if(vis[a[v][i]]==0)
			dfs(a[v][i],v);
}
int up(int v){
	int trk=num[loc[v]][par[loc[v]]];
	curuse[trk]++;
	if(curuse[trk]<=wt[trk])
		loc[v]=par[loc[v]];
}
int main(){
	int n,i,x,y,z;
	scanf("%d",&n);
	for(i=1;i<=n;i++){
		scanf("%d",&x);
		v.push_back(make_pair(x,i));
	}
	sort(v.begin(),v.end());
	for(i=1;i<n;i++){
		scanf("%d %d %d",&x,&y,&z);
		a[x].push_back(y);
		a[y].push_back(x);
		num[x][y]=num[y][x]=i;
		wt[i]=z;
	}
	dfs(1,-1);
	ans[0]=0;
	int t;
	for(i=0;i<=5000;i++)
		loc[i]=i;
	while(1){
		t=0;
		for(i=0;i<v.size();i++){
			if(loc[v[i].second]!=1){
				ans[v[i].second]++;
				up(v[i].second);
				t=1;
			}
		}
		memset(curuse,0,sizeof(curuse));
		if(t==0)
			break;
	}
	for(i=1;i<=n;i++){
		printf("%d ",ans[i]);
	}
	return 0;
}
