#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <cctype>
#include <iostream>
#include <vector>

using namespace std;

#define maxn (5010)
#define ll long long
#define ull unsigned long long
#define PB push_back
#define MP make_pair

int sum[maxn][maxn];
vector< pair<int,int> > g[maxn];
int tot[maxn],f[maxn],r[maxn],v[maxn],ans[maxn];
bool vis[maxn];
int n;

bool cmp(int a,int b) {
    return v[a]<v[b];
}

void dfs(int x) {
    vis[x]=true;
    for (int i=0;i<g[x].size();i++) {
        int k=g[x][i].first; if (!vis[k]) {
            dfs(k); f[k]=x; tot[k]=g[x][i].second;
        }
    }
}

int main(){
    scanf("%d",&n);
    for (int i=1;i<=n;i++) scanf("%d",&v[i]);
    for (int i=1;i<=n;i++) r[i]=i;
    sort(r+1,r+1+n,cmp);
    for (int i=1;i<n;i++) {
        int a,b,c; scanf("%d%d%d",&a,&b,&c);
        g[a].PB(MP(b,c)); g[b].PB(MP(a,c));
    }
    dfs(1);
    
    for (int i=1;i<=n;i++) {
        int k=r[i]; 
/*      
        printf("%d : F:%d V:%d\n",k,f[k],v[k]);
*/  
        for (int x=k;x!=1;ans[k]++,x=f[x]) {
            while (tot[x]<=sum[x][ans[k]]) ans[k]++;
            sum[x][ans[k]]++;
        }
    }
    
    for (int i=1;i<n;i++) printf("%d ",ans[i]);
    printf("%d\n",ans[n]);

    return 0;
}
