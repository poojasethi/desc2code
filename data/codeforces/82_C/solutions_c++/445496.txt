#include <iostream>
#include <stdio.h>
#include <queue>
#include <vector>

using namespace std;

vector< pair<int,int> > next[5000];

priority_queue< pair<int,int> >  q[5000];

int sol[5000];


#define FOR(i,b) for (int i = 0; i < (b); i++)
#define MP(A,B) make_pair(A,B)

typedef vector< pair<int,int> >::iterator VI;

void Visit(int pos, int parent)
{
	for(VI it = next[pos].begin();it!=next[pos].end();it++)
	{

		if((it->first)!=parent)
		{
			
			int counter = it->second;
			
			while(counter>0 && !q[it->first].empty())
			{
				q[pos].push(q[it->first].top());
				q[it->first].pop();
				counter--;
			}
			
			Visit(it->first,pos);
		}
	}
}

int main()
{
	int N;
	scanf("%d",&N);
	
	FOR(n,N)
	{
		int val;
		scanf("%d",&val);
		
		q[n].push(pair<int,int>(-val,n));
	}
	
	FOR(n,N-1)
	{
		int a, b ,c;
		scanf("%d %d %d",&a,&b,&c);
		
		a--;
		b--;
		next[a].push_back(MP(b,c));
		next[b].push_back(MP(a,c));
	}
		
		
	
	for(int n=0;n<N+1;n++)
	{
		while(!q[0].empty())
		{
			sol[q[0].top().second]=n;
			q[0].pop();
		}
		
		Visit(0,-1);
	}
	
	printf("%d",sol[0]);
	
	FOR(n,N-1)
		printf(" %d",sol[n+1]);
		
	printf("\n");
	
}