/*
ID: gupan881
PROG: C
LANG: C++
*/
#include <iostream>
#include <cstring>
#include <string>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <algorithm>
#include <bitset>
#include <vector>
#include <stack>
#include <list>
#include <utility>
#include <queue>
#include <set>
#include <map>
using namespace std;
#define INF 1000000007
priority_queue< pair<int, int> > q[50001];
vector<pair<int, int> > e[50001];
int p[50001];
int ans[50001];
int ok[50001];
int solve(int now, int f, int c)
{
	int ret = 0;
	int l = e[now].size();
	int i, j;
	for(i = 0; i < c && !q[now].empty(); i++) {
		q[f].push(q[now].top());
		q[now].pop();
		ret++;
	}
	for(i = 0; i < l; i++) {
		if(e[now][i].first == f || ok[e[now][i].first]) continue;
		int r = solve(e[now][i].first, now, e[now][i].second);
		if(r == 0)
			ok[e[now][i].first] = 1;
	}
	return ret;
}
int main() 
{
//	freopen("C.in", "r", stdin);
	//freopen("C.out", "w", stdout);
	int n;
	cin >>n;
	int i, j;
	for(i = 1; i <= n; i++) {
		cin >> p[i];
		q[i].push(make_pair(INF-p[i], i));
	}
	for(i = 1; i < n; i++) {
		int u,v,c;
		cin >> u >> v >> c;
		e[u].push_back(make_pair(v,c));
		e[v].push_back(make_pair(u,c));
	}
	int ct = 0;
	while(solve(1, 0, n)) {
		while(!q[0].empty()) {
			ans[q[0].top().second] = ct;
			q[0].pop();
		}
		ct++;
	}
	for(i = 1; i <= n; i++)
		cout << ans[i] << " ";
	cout << endl;
	return 0;
}
