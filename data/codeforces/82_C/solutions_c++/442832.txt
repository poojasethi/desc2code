#include<cstdio>
#include<vector>
#include<utility>
#include<queue>
using namespace std;
priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > > qv[5001];
vector <int> g[5001];
vector <int> cap[5001];
int ans[5001],t;
int n;
int dfs(int u,int fu,int cap1){
  int i;
  if (fu>=0){
    for (i=0;i<cap1;i++){
      if (qv[u].empty()) break;
      ans[qv[u].top().second]=t;
      qv[fu].push(qv[u].top());
      qv[u].pop();
    }
  }
  for (i=0;i<g[u].size();i++){
    int v=g[u][i];
    if (v==fu) continue;
    dfs(v,u,cap[u][i]);
  }
  return qv[0].size()==n;
}
int main(){
  int i,a,b,c;
  scanf("%d",&n);
  for (i=0;i<n;i++) {
    scanf("%d",&a);
    qv[i].push(make_pair(a,i));
  }
  for (i=0;i<n-1;i++){
    scanf("%d%d%d",&a,&b,&c);
    a--;b--;
    g[a].push_back(b);
    cap[a].push_back(c);
    g[b].push_back(a);
    cap[b].push_back(c);
  }
  while (1){
    t++;
    if (dfs(0,-1,-1)) break;
  }
  for (i=0;i<n-1;i++) printf("%d ",ans[i]);
  printf("%d\n",ans[i]);
  return 0;
}
