#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>

using namespace std;

struct node
{
  int no,pri;
  bool operator<(const node& x) const
  {
    return pri<x.pri;
  }
};

vector<int> e[5001],g[5001];
node a[5001];
int f[5001],c[5001],s[5001][5001],ans[5001];

void dfs(int x)
{
  for(int z=0;z<(int)e[x].size();++z)
  {
    int y=e[x][z];
    if(y==f[x])
      continue;
    f[y]=x;
    c[y]=g[x][z];
    dfs(y);
  }
}

int main(void)
{
  int n;
  scanf("%d",&n);
  for(int i=1;i<=n;++i)
  {
    a[i].no=i;
    scanf("%d",&a[i].pri);
  }
  for(int i=1;i<n;++i)
  {
    int j,k,l;
    scanf("%d %d %d",&j,&k,&l);
    e[j].push_back(k);
    g[j].push_back(l);
    e[k].push_back(j);
    g[k].push_back(l);
  }
  dfs(1);
  sort(a+1,a+n+1);
  for(int i=1;i<=n;++i)
  {
    int k=a[i].no,t=0;
    while(f[k]>0)
    {
      while(s[k][t]>=c[k])
        ++t;
      ++s[k][t++];
      k=f[k];
    }
    ans[a[i].no]=t;
  }
  for(int i=1;i<n;++i)
    printf("%d ",ans[i]);
  printf("%d\n",ans[n]);
  return 0;
}