#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;

const int maxn=5000+10;
vector< pair<int,int> > e[maxn];
int father[maxn],fc[maxn],tmp[maxn],pos[maxn];
int res[maxn];
int a[maxn],rank[maxn];
int n;

bool cmp(const int x,const int y) {return a[x]<a[y];}

void dfs(int u,int f)
{
	for (int v=0;v<e[u].size();v++)
	if (e[u][v].first!=f)
	{
		father[e[u][v].first]=u;
		fc[e[u][v].first]=e[u][v].second;
		dfs(e[u][v].first,u);
	}
}

int main()
{
	scanf("%d",&n);
	for (int i=1;i<=n;i++) scanf("%d",&a[i]),rank[i]=i,pos[i]=i;
	for (int i=1,a,b,c;i<n;i++)
	{
		scanf("%d%d%d",&a,&b,&c);
		e[a].push_back(make_pair(b,c));
		e[b].push_back(make_pair(a,c));
	}

	sort(rank+1,rank+1+n,cmp);
	dfs(1,0);
	for (int k=n-1,t=0;k;t++)
	{
		for (int i=2;i<=n;i++) tmp[i]=fc[i];
		for (int i=1;i<=n;i++)
		if (pos[rank[i]]!=1 && tmp[pos[rank[i]]])
		{
			tmp[pos[rank[i]]]--;
			pos[rank[i]]=father[pos[rank[i]]];
			if (pos[rank[i]]==1) k--,res[rank[i]]=t+1;
		}
	}
	for (int i=1;i<=n;i++) printf("%d%c",res[i],i==n?'\n':' ');
}
