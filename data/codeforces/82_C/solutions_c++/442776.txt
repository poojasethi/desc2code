#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;

int N,x,y,z;
pair<int,int> A[5001];
vector<vector<int> > con(5001);
int cap[5001][5001];
int cnt[5001],pos[5001];
int par[5001];
int cost[5001];

void dfs (int i,int p)
{
     par[i]=p;
     for (int j=0;j<con[i].size();++j)
     {
         int x=con[i][j];
         if (x==p) continue;
         dfs(x,i);
     }
}
int cost2[5001];
int main ()
{
    scanf("%d",&N);
    for (int i=1;i<=N;++i) scanf("%d",&A[i].first),A[i].second=i;
    sort(A+1,A+N+1);
    for (int i=1;i<N;++i)
    {
        scanf("%d %d %d",&x,&y,&z);
        con[x].push_back(y);
        con[y].push_back(x);
        cap[x][y]=cap[y][x]=z;
    }
    dfs(1,0);
    for (int i=1;i<=N;++i) pos[i]=A[i].second;
    while (1)
    {
          bool ch=0;
          for (int i=1;i<=N;++i) cnt[i]=0;
          for (int i=1;i<=N;++i) if (pos[i]!=1)
          {
              if (cnt[pos[i]]!=cap[pos[i]][par[pos[i]]])
              ++cnt[pos[i]],pos[i]=par[pos[i]],ch=1;
              ++cost[i];
          }
          if (!ch) break;
    }
    for (int i=1;i<=N;++i) cost2[A[i].second]=cost[i];
    for (int i=1;i<=N;++i) printf("%d ",cost2[i]);
    return 0;
}
