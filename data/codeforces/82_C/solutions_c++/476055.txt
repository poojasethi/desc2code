#include <iostream>
#include <algorithm>
#include <cstdio>
#include <vector>
#include <deque>
using namespace std;
int n,pr[5010],ans[5010];
struct compare{ 
  bool operator()(const int& f,const int& s)const{ 
  return((pr[f]!=pr[s])?pr[f]<pr[s]:f<s); 
                                                 } 
}; 
vector<int> fo[5010],w[5010];
deque<int> IN[5010];
int day=0;
void dfs(int vr,int par,int cap){
  if(par==-1){
   while(!IN[vr].empty()){ans[IN[vr][0]]=day;IN[vr].pop_front();}
             }
  else{
   cap=min((int)IN[vr].size(),cap);
   while(cap-- >0){
    IN[par].push_back(IN[vr][0]);
    IN[vr].pop_front();
                  }  
      }
  for(int i=0;i<fo[vr].size();++i)
   if(par!=fo[vr][i])dfs(fo[vr][i],vr,w[vr][i]);
}
int main(){
  int i,j,x,y,z;
  scanf("%d",&n);
  for(i=0;i<n;++i)scanf("%d",&pr[i]);
  for(i=1;i<n;++i){
   scanf("%d%d%d",&x,&y,&z);--x;--y;
   fo[x].push_back(y);w[x].push_back(z);
   fo[y].push_back(x);w[y].push_back(z);
                  }
  for(i=0;i<n;++i)IN[i].push_back(i);
  for(day=0;day<=n;++day){
   dfs(0,-1,-1);
   for(i=0;i<n;++i)sort(IN[i].begin(),IN[i].end(),compare());
                         }
  for(i=0;i<n;++i)printf("%d%c",ans[i],(i+1==n)?'\n':' ');
  //system("pause");
  return 0;
}
