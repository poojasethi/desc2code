#include <cstdio>
#include <algorithm>
#include <cstring>
#define N 5005
#define FOR(i,s,e) for (int i=(s); i<(int)(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(int)(e); i++)
using namespace std;

int n, t, x, y, w;
int pri[N], a[N], l[N], qd[N+N], qn[N+N], qc[N+N], par[N], cap[N], ret[N];
short int cnt[N][N];

void dfs(int x,int y){
	for (int i=l[x]; i; i=qn[i]){
		if (qd[i]==y) continue;
		dfs(qd[i], x);
		par[qd[i]] = x;
		cap[qd[i]] = qc[i];
	}
}

void bd(int x,int y,int w){
	qd[++t]=y, qn[t]=l[x], l[x]=t;
	qc[t]=w;
}

bool cmp(int x,int y){return pri[x]<pri[y];}

int main(){

	scanf("%d", &n);
	FOE(i,1,n) scanf("%d", &pri[i]), a[i] = i;
	
	FOR(i,1,n){
		scanf("%d%d%d",&x,&y,&w);
		bd(x,y,w);
		bd(y,x,w);
	}
	
	dfs(1,0);
	sort(a+1, a+n+1, cmp);
	
	FOE(i,1,n){
		x = a[i];
		t = 0;
		while (x!=1){
			while (cnt[x][t]==cap[x]) t++;
			cnt[x][t]++;
			x = par[x];
			t++;
		}
		ret[a[i]] = t;
	}
	
	FOE(i,1,n) printf("%d%c", ret[i], i<n?' ':'\n');

	return 0;
}
