#include <cstdio>
#include <algorithm>
using namespace std;

short a[5010];
short g[5010][5010], c[5010][5010], deg[5010];

short dv[5010][5010], nd[5010];

short ans[5010];


void dfs(short p, short par)
{
	short m, q, i, j;
	for (i = 0; i < deg[p]; ++i)
	{
		q = g[p][i];
		if (q != par)
		{
			m = nd[q];
			if (m > c[p][i])
				m = c[p][i];
			for (j = 0; j < m; ++j)
				dv[p][nd[p]++] = dv[q][nd[q] - j - 1];
			nd[q] -= m;
			if (nd[q] < 0)
				nd[q] = 0;
			dfs(q, p);
		}
	}
}

inline bool cmp(short p, short q)
{
	return a[p] > a[q];
}
int main()
{
	short n, i;
	scanf("%hd", &n);
	for (i = 0; i < n; ++i)
		scanf("%hd", a + i);
	for (i = 0; i < n - 1; ++i)
	{
		short p, q, w;
		scanf("%hd%hd%hd", &p, &q, &w);
		--p;
		--q;
		g[p][deg[p]] = q;
		g[q][deg[q]] = p;
		c[p][deg[p]] = c[q][deg[q]] = w;
		++deg[p];
		++deg[q];
	}
	for (i = 0; i < n; ++i)
	{
		dv[i][0] = i;
		nd[i] = 1;
	}
	
	short nday = 0;
	while (nd[0] > 0)
	{
		for (i = 0; i < nd[0]; ++i)
			ans[dv[0][i]] = nday;
		
		nd[0] = 0;
		dfs(0, -1);
		
		for (i = 0; i < n; ++i)
			sort(dv[i], dv[i] + nd[i], cmp);
		
		++nday;
	}
	for (i = 0; i < n; ++i)
		printf("%d%c", ans[i], i == n-1?'\n':' ');
	return 0;
}
