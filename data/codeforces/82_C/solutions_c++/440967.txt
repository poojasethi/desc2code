#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <vector>
#include <queue>
#include <map>
using namespace std;
#define p(x) cout<<#x<<":"<<x<<"\n"
#define pb push_back
#define mp make_pair
#define lim 5001

int n,i,x,y,z,t,j,s;
int A[lim],D[lim],P[lim],C[lim];
priority_queue <int> PQ[lim];
vector <pair <int,int> > V[lim];
queue <int> Q;
vector <int> T;
map <int,int> M;

int main()
{
  scanf("%d",&n);
  for(i=0;i<n;i++)
  {
    scanf("%d",&A[i]);
    PQ[i].push(-A[i]);
  }
  for(i=0;i+1<n;i++)
  {
    scanf("%d%d%d",&x,&y,&z);
    x--;
    y--;
    V[x].pb(mp(y,z));
    V[y].pb(mp(x,z));
  }
  memset(D,-1,sizeof D);  
  Q.push(0);
  D[0]=0;
  while(!Q.empty())
  {
    x=Q.front();
    T.pb(x);
    Q.pop();
    for(i=0;i<V[x].size();i++)
    {
      y=V[x][i].first;
      if(D[y]==-1)
      {
        D[y]=D[x]+1;
        Q.push(y);
        P[y]=x;
        C[y]=V[x][i].second;
      }
    }
  }
  while(PQ[0].size()<n)
  {
    t++;
    for(i=1;i<n;i++)
    {
      x=T[i];
      for(j=0;j<C[x] && !PQ[x].empty();j++)
      {
        if(!P[x])
          M[PQ[x].top()]=t;
        PQ[P[x]].push(PQ[x].top());
        PQ[x].pop();
      }
    }
  }
  for(i=0;i<n;i++)
    printf("%d ",M[-A[i]]);
  return 0;
}
