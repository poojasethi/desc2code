#include<iostream>
#include<algorithm>
#include<cstdio>
#include<vector>
#define Max 5005
#define F first
#define S second
#define MP make_pair

using namespace std;

vector< pair<int, int> > e[Max];

int ans[Max];
bool vis[Max];
int idx[Max];
int fa[Max], lim[Max], ct[Max];
pair<int, int> arr[Max];

void dfs(int now)
{
	int i, b, c;

	vis[now] = 1;
	
	for(i=0;i<e[now].size();i++)
	{
		b = e[now][i].F;
		c = e[now][i].S;
		if(!vis[b])
		{
			dfs(b);

			fa[b] = now;
			lim[b] = c;
		}
	}

}

int main()
{
	int i, n, a, b, c, t, j, tt;

	scanf("%d", &n);

	for(i=0;i<n;i++)
	{
		scanf("%d", &t);

		arr[i] = MP(t, i);
		idx[i] = i;
	}
	sort(arr, arr+n);

	for(i=1;i<n;i++)
	{
		scanf("%d %d %d", &a, &b, &c);
		--a, --b;

		e[a].push_back( MP(b, c) );
		e[b].push_back( MP(a, c) );
	}

	dfs(0);
	for(i=0;i<=n;i++)
	{
		for(j=0;j<n;j++)
			if(!idx[j])
			{
				idx[j] = -1;
				ans[j] = i;
			}

		for(j=0;j<n;j++)
			ct[j] = lim[j];

		for(j=0;j<n;j++)
		{
			t = arr[j].S;

			if(idx[t]<=0)
				continue;

			tt = idx[t];

			if(ct[tt] > 0)
			{
				ct[tt]--;
				idx[t] = fa[tt];
			}
		}
	}

	printf("0");
	for(i=1;i<n;i++)
		printf(" %d", ans[i]);
	printf("\n");

}
