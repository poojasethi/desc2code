#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li       	long long int
#define rep(i,to)	for(li i=0;i<((li)(to));++i)
#define pb       	push_back
#define sz(v)    	((li)(v).size())
#define bit(n)   	(1ll<<(li)(n))


#define MAX 5050
li rem[MAX][MAX];
li parent[MAX];
li ans[MAX];
pair<li,li> point[MAX];
vector<pair<li,li> > E[MAX];

li cal(li pos,li res=0){
	if(pos==-1) return res;
	while(rem[pos][res]==0) res++;
	rem[pos][res]--;
	return cal(parent[pos],res+1);
}

void make(li pos,li p=-1){
	parent[pos]=p;
	rep(i,sz(E[pos]))if(E[pos][i].first!=p){
		make(E[pos][i].first,pos);
		rep(j,MAX) rem[E[pos][i].first][j]=E[pos][i].second;
	}
}

int main(){
	li a,b,c,n;
	cin>>n;
	rep(i,n) cin>>point[i].first;
	rep(i,n) point[i].second=i;
	rep(i,n-1){
		cin>>a>>b>>c; a--; b--;
		E[a].pb(make_pair(b,c));
		E[b].pb(make_pair(a,c));
	}
	make(0);
	rep(i,MAX) rem[0][i]=MAX;
	sort(point,point+n);
	rep(i,n) ans[point[i].second]=cal(point[i].second);
	rep(i,n) cout<<ans[i]-1<<" "; cout<<endl;
}
