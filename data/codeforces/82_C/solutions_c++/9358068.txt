#include <bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
int tim[5000][5001]={0};
int parent[5001];
bool df[5001]={0};
int cap[5001];

class node
{
	public :
		vi near,cost;
};
node b[5001];
int a[5001];
int reach[5001];
void dfs(int j)
{
	df[j]=1;
	vi v=b[j].near;
	for(int i=0;i<v.size();i++)
	{
		if(df[v[i]])
			continue;
		dfs(v[i]);
		parent[v[i]]=j;
		cap[v[i]]=b[j].cost[i];
	}
}

map<int,int> m;
vi v;
int main()
{
	int n;
	cin>>n;
	for(int i=1;i<=n;i++)
	{
		cin>>a[i];
		m[a[i]]=i;
	}
	int x,y,c;
	for(int i=1;i<n;i++)
	{
		cin>>x>>y>>c;
		b[x].near.push_back(y);
		b[x].cost.push_back(c);
		b[y].near.push_back(x);
		b[y].cost.push_back(c);
	}
	dfs(1);
	sort(a+1,a+n+1);
	for(int i=1;i<=n;i++)
	{
		int w=m[a[i]];
		x=w;
		int t=0;
		while(1)
		{
		//	cout<<t<<" "<<w<<" "<<x<<" "<<tim[t][w]<<endl;
			tim[t][w]++;
			if(w==1)
				break;
			if(tim[t][w] <= cap[w])
			{
				w=parent[w];
				t++;
			}
			else t++;
		}
		reach[x]=t;
	}
	for(int i=1;i<=n;i++)
		cout<<reach[i]<<" ";
	cout<<endl;
}
