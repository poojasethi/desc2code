#include <cstdio>
#include <queue>
#include <vector>
#define MAXN 5005
#define V first
#define C second
using namespace std;
vector<pair<int, int> > g[MAXN];
int w[MAXN], vis[MAXN], ans[MAXN];
priority_queue<pair<int, int> > q[MAXN];
void dfs(int u, int t) {
	if(!vis[u]) {
		vis[u] = true;
		vector<pair<int, int> >::iterator it;
		for(it = g[u].begin(); it != g[u].end(); ++it) {
			if(vis[it->V])
				continue;
			int sz = min(it->C, (int)q[it->V].size());
			while(sz--) {
				if(u == 0)
					ans[q[it->V].top().second] = t;
				q[u].push(q[it->V].top());
				q[it->V].pop();
			}
			dfs(it->V, t);
		}
	}
}
int main() {
	int n;
	while(scanf("%d", &n) != EOF) {
		for(int i = 0; i < n; ++i) {
			scanf("%d", &w[i]);
			q[i].push(make_pair(-w[i], i));
		}
		for(int i = 0; i < n - 1; ++i) {
			int u, v, c;
			scanf("%d%d%d", &u, &v, &c);
			--u, --v;
			g[u].push_back(make_pair(v, c));
			g[v].push_back(make_pair(u, c));
		}
		int t = 1;
		ans[0] = 0;
		while(q[0].size() != n) {
			fill(vis, vis + n, 0);
			dfs(0, t);
			++t;
		}
		for(int i = 0; i < n; ++i)
			printf("%d%c", ans[i], (i == n - 1 ? '\n' : ' '));
	}
	return 0;
}
