#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<queue>
#include<stack>
#include<map>
#include<vector>
using namespace std;
typedef long long LL;
int n;
char s[100010][10];
int lens[100010];
void re(int id)
{
	for(int i=0;i<lens[id];i++)
	{
		if(s[id][i]=='?')
		{
			if(i!=0)
			s[id][i]='0';
			else
			s[id][i]='1';
		}
	}
}
bool dfs(char *a,char *b,int id,int len)
{
	if(id>=len)
	return false;
	if(b[id]!='?')
	{
		if(a[id]==b[id])
		return dfs(a,b,id+1,len);
		else
		return a[id]<b[id];
	}
	else
	{
		b[id]=a[id];
		if(dfs(a,b,id+1,len))
		return true;
		if(b[id]!='9')
		{
			b[id]++;
			return true;
		}
		b[id]='?';
		return false;
	}
}
bool solve()
{
	for(int i=1;i<=n;i++)
	{
		if(lens[i]<lens[i-1])
		return false;
		if(lens[i]==lens[i-1] && !dfs(s[i-1],s[i],0,lens[i]))
		return false;
		re(i);
	}
	return true;
}
int main()
{
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
		scanf("%s",s[i]);
		lens[i]=strlen(s[i]);	
	}
	if(solve())
	{
		cout<<"YES"<<endl;
		for(int i=1;i<=n;i++)
		printf("%s\n",s[i]);
	}
	else
	cout<<"NO"<<endl;
	return 0;
}

 	 	         		 	   	 	 				 		