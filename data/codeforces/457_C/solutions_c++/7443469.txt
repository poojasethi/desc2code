#include<iostream>
#include<algorithm>
#include<vector>
#include<set>
#include<string>
#define fi first
#define se second
#define pb push_back
using namespace std;
const int Maxn = int(1e5)+100;
pair<int ,int> ver[Maxn]; // first:money   second:person
pair<int ,int> per[Maxn];
vector<int> vote[Maxn];
int sizeC[Maxn] , n;
bool mark[Maxn];

long long find(int k){
	long long ret = 0;
	int cnt  = vote[0].size();
	vector<int> v;//store the non_choosen elements
	for(int i = 1;i<Maxn;++i){
		if(	vote[i].size()>= k){
			for(int j = 0 ; j<vote[i].size()-k+1 ; ++j)
				ret+= vote[i][j] , cnt++;
			for(int j = vote[i].size()-k+1 ; j<vote[i].size();++j)
				v.pb(vote[i][j]);
		}
		
		else	
			for(int j = 0 ; j<vote[i].size();++j)
				v.pb(vote[i][j]);
		}
		
		sort(v.begin() , v.end());
		for(int i = 0 ; i < v.size() && cnt<k ; ++i){
			ret+=v[i] , cnt++;
		}
		
		if(cnt < k)
			return (long long)(1e15);
		else
			return ret;
}

int main()
{
	cin >> n;
	for(int i = 0;i<n;++i){
		int a ,b;
		cin >> a >> b;
		vote[a].pb(b);
	}
	for(int i = 0 ; i<Maxn ; ++i)
		sort(vote[i].begin() , vote[i].end());
	int lo = 0  , hi = n+1;
	while(hi - lo > 1){
		int mid = (lo+hi)/2;
		if(find(mid+1) - find(mid)>=0)
			hi = mid;
		else
			lo = mid;
	}

	cout << find(hi) << endl;
	return 0;
	
}
