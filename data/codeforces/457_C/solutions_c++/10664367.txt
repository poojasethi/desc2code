#include <cstdio>
#include <cstring>
#include <string>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <iostream>
using namespace std;
#define foru(i,l,r) for(int i=l;i<r;i++)
#define ford(i,l,r) for(int i=l;i>r;i--)
#define ll long long
#define re return
#define pb push_back

const int maxN=1e5+100;
struct bd{int a,c;} a[maxN];
vector<int> p,q;
int n;

struct cmp{
    bool operator() (int x,int y) {
        re x<y;
    }
};
priority_queue<int,vector<int>,cmp> h1[maxN],h2;

int main() {
//    freopen("input.inp","r",stdin);
    cin>>n;
    foru(i,0,n) scanf("%i%i",&a[i].a,&a[i].c);
    ll res=0;
    int cnt=n;
    foru(i,0,n) h1[a[i].a].push(a[i].c), res+=a[i].c;
    ll ans=res;
    foru(i,1,1e5+1) if (!h1[i].empty()) p.pb(i);
    foru(i,1,n+1) {
        q.clear();
        foru(j,0,p.size()) {
            res-=h1[p[j]].top();
            h2.push(-h1[p[j]].top());
            h1[p[j]].pop();
            --cnt;
            if (!h1[p[j]].empty()) q.pb(p[j]);
        }
        while ((!h2.empty()) && cnt<=i) {
            ++cnt;
            res-=h2.top();
            h2.pop();
        }
        if (cnt>i) ans=min(ans,res);
        p=q;
    }
    cout<<ans;
    fclose(stdin);
    re 0;
}
