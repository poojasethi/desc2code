
n=0;
v=list()
p=0

dp={}
vis={}

def fun(pos,lef,sm):
	if sm>p:
		return 0
	
	if pos==n:
		if lef==0 and sm<=p:
			return 1
		else :
			return 0	
	
	if vis.__contains__((pos,lef,sm)):
		return dp[(pos,lef,sm)]
	vis[(pos,lef,sm)]=1
	
	ret=fun(pos+1,lef,sm)
	
	if lef>0:
		ret+=fun(pos+1,lef-1,sm+v[pos])
	
	dp[(pos,lef,sm)]=ret
	
	return ret;

fac=range(51)
fac[0]=1
for i in range(1,51):
	fac[i]=fac[i-1]*i
	
	

n=input()
v=map(int,raw_input().split())
p=input()


ans=0.0

for i in xrange(1,n+1):
	ans+=fac[i]*fac[n-i]*fun(0,i,0)
ans/=fac[n]
print ans
	

























