from operator import mul
from ctypes import c_int
from decimal import Decimal
facs = [1] * 52
for i in xrange(1, 52): facs[i] = facs[i-1] * i

n = int(raw_input())
L = map(int, raw_input().split())
t = int(raw_input())
def cal_f(i0):
    f = [[0] * (t+1) for i in xrange(n+1)]
    f[0][0] = 1
    for i in xrange(n):
        if i == i0: continue
        for j in xrange(n, 0, -1):
            for k in xrange(L[i], t+1):
                f[j][k] += f[j-1][k-L[i]] * j
    return f

f = cal_f(-1)
s1 = 0
if sum(L) <= t:
    s1 += f[n][sum(L)] * n
for i in xrange(n):
    f = cal_f(i)
    # print 'f:', list(map(list, f))
    for p in xrange(max(0, t-L[i]+1), t+1):
        s1 += sum(j * f[j][p] * facs[n-1-j] for j in xrange(1, n))
s2 = facs[n]
print Decimal(s1)/s2

