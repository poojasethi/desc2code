import math

n = int(raw_input())
a = map(int, raw_input().split())
p = int(raw_input())

ans = 0.0

tble = [1.0 for i in range(0, n+1)]
for i in range(0, n+1):
    for j in range(i, 0, -1): tble[i] *= j
    
#   for j in range(n, i, -1):
#       tble[i] /= math.sqrt(j)
#   for j in range(i, 0, -1):
#       tble[i] *= math.sqrt(j)
#print tble

if sum(a) <= p:
    print n
else:
    commp = [[ 0.0 for t in range(0,p+1)] for u in range(0,n)]
    commp[0][0] = 1
    for i in range(0,n):
        mp = [[ commp[u][t] for t in range(0,p+1)] for u in range(0,n)]
        for j in range(i+1,n):
#               nmp = [[ mp[u][t] for t in range(0,p+1)] for u in range(0,n)]
            for u in range(n-2,-1, -1):
                for t in range(0,p-a[j]+1):
#                       if t+a[j]<=p:
                    mp[u+1][t+a[j]]+=mp[u][t]
#               print i, j, nmp
#               for u in range(0,n):
#                   for t in range(0,p+1):
#                       mp[u][t] = nmp[u][t]
#       print i, mp
#       print "p=",p
        for j in range(max(0, p+1-a[i]), p+1):
            for u in range(0,n):
#               print j,u,mp[u][j],ans
                ans += u * mp[u][j] * tble[u] * tble[n-u-1]
#               print ans
        for u in range(n-2,-1, -1):
            for t in range(0,p-a[i]+1):
                commp[u+1][t+a[i]]+=commp[u][t]
        
    for j in range(n, 0, -1): ans /= j
    print ans