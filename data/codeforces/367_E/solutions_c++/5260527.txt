#include <cstdio>
#include <algorithm>
using namespace std;

const int N = 340, P = int(1e9) + 7;

int f[2][N][N]; // pos (& 1), count of intervals, count of undetermined intervals
int n, m, x;

inline void inc (int &x, int y)
{
	(x += y) %= P;
}

int main ()
{
	scanf("%d%d%d", &n, &m, &x);
	if (n > m)
	{
		printf("0\n");
		return 0;
	}
	f[0][0][0] = 1;
	for (int i = 0; i < m; ++i)
	{
		int c = i & 1, nc = !c;
		for (int j = 0; j <= n; ++j)
			for (int k = 0; k <= n; ++k)
				f[nc][j][k] = 0;
		for (int j = 0; j <= n; ++j)
			for (int k = 0; k <= j; ++k)
			{
				inc(f[nc][j + 1][k + 1], f[c][j][k]);
				inc(f[nc][j + 1][k], f[c][j][k]);
				if (i + 1 != x)
				{
					inc(f[nc][j][k], f[c][j][k]);
					if (k) inc(f[nc][j][k - 1], f[c][j][k]);
				}
			}
	}
	int res = f[m & 1][n][0];
	for (int i = 1; i <= n; ++i)
		res = (long long)res * i % P;
	printf("%d\n", res);
}

