#include<bits/stdc++.h>
using namespace std;
const int Mod=1e9+7;

int n,m,x,dp[2][333][333],cur,nxt;

int main()
{
	cin>>n>>m>>x;
	if(n>m)
	{
		puts("0");
		return 0;
	}
	dp[0][0][0]=1,cur=1,nxt=0;

	for(int i=1;i<=m;i++)
	{
		cur^=1,nxt^=1;
		for(int ii=0;ii<=n;ii++)
		  for(int jj=0;jj<=n;jj++)
			dp[nxt][ii][jj]=0;
		for(int l=0;l<=n;l++)
		  for(int r=0;r<=l;r++)
		  {
			 if(l+1<=n)
			 {
			    dp[nxt][l+1][r]+=dp[cur][l][r];
				if(dp[nxt][l+1][r]>=Mod)
				  dp[nxt][l+1][r]-=Mod;
				
				dp[nxt][l+1][r+1]+=dp[cur][l][r];
				if(dp[nxt][l+1][r+1]>=Mod)
				  dp[nxt][l+1][r+1]-=Mod;
			 }
			 if(i!=x)
			 {
				dp[nxt][l][r]+=dp[cur][l][r];
				if(dp[nxt][l][r]>=Mod)
				  dp[nxt][l][r]-=Mod;
				if(r+1<=l)
				{
				   dp[nxt][l][r+1]+=dp[cur][l][r];
				   if(dp[nxt][l][r+1]>=Mod)
					 dp[nxt][l][r+1]-=Mod;
				}
			 }
		  }
	}

	long long ans=dp[nxt][n][n];
	for(int i=1;i<=n;i++)
	  ans=ans*i%Mod;
	cout<<ans<<endl;
	return 0;
}
