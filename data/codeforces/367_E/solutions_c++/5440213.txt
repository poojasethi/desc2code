#include <iostream>

using namespace std;

#define MOD 1000000007
int dp[3][400][400];

int main()
{
	int n, m, x;
	cin >> n >> m >> x;
	if (n > m)
	{
		cout << 0 << endl;
		return 0;
	}
	dp[0][0][0] = 1;
	for (int i = 1; i <= m + 1; i++)
		for (int k = 0; k <= n; k++)
			for (int j = 0; j <= k; j++)
			{
				dp[i % 2][k][j] = 0;
				if (j > 0)
				{
					dp[i % 2][k][j] = (dp[i % 2][k][j] + dp[(i + 1) % 2][k - 1][j - 1]) % MOD; // Open One
					dp[i % 2][k][j] = (dp[i % 2][k][j] + dp[(i + 1) % 2][k - 1][j]) % MOD; //Open and Close One
				}
				if (i != x)
				{
					dp[i % 2][k][j] = (dp[i % 2][k][j] + dp[(i + 1) % 2][k][j + 1]) % MOD;//Close One
					dp[i % 2][k][j] = (dp[i % 2][k][j] + dp[(i + 1) % 2][k][j]) % MOD; // Do Nothing
				}
			}
	long long tmp = dp[(m + 1) % 2][n][0];
	for (int i = 1; i <= n; i++)
		tmp = (tmp * i) % MOD;
	cout << tmp << endl;
}
