// code based on tutorial
#include <cstdio>
#include <algorithm>
#include <cstring>
#define MOD 1000000007

using namespace std;

int n, m, x;
long long dp[400][400], cp[400][400]; // [use][cur][x]

long long fact (long long a) {
  if (a <= 1) return 1;
  return (a * fact (a - 1)) % MOD;
}

long long ans() {
  if (n > m) return 0;
  dp[0][0] = 1;
  for (int s = 1; s <= m; s++) {
    for (int i = 0; i <= n; i++)
      for (int j = 0; j <= i; j++) {
	cp[i][j] = dp[i][j];
	dp[i][j] = 0;
      }
    for (int i = 0; i <= n; i++) {
      for (int j = 0; j <= i; j++) {
	if (s != x) {
	  dp[i][j] += cp[i][j];
	  dp[i][j] %= MOD;
	}
	if (i < n) {
	  dp[i + 1][j + 1] += cp[i][j];
	  dp[i + 1][j + 1] %= MOD;
	  dp[i + 1][j] += cp[i][j];
	  dp[i + 1][j] %= MOD;
	}
	if (j > 0 && s != x) {
	  dp[i][j - 1] += cp[i][j];
	  dp[i][j - 1] %= MOD;
	}
      }
    }
  }
  return dp[n][0];
}

int main() {
  scanf ("%d %d %d", &n, &m, &x);
  memset (dp, 0, sizeof(dp));
  printf ("%d\n", (int) (fact (n) * ans() % MOD));
  return 0;
}
