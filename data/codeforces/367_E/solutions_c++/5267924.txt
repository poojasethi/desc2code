#include <iostream>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <algorithm>
#include <cstdio>
#include <set>
#include <queue>
#include <cassert>
#include <climits>
#define MOD 1000000007
using namespace std;
int F[2][350][350];
void add(int &a, int v) {
	a += v;
	if (a >= MOD) a -= MOD;
}
int main() {
	int N, M, X;
	scanf("%d%d%d", &N, &M, &X);
	if (N > M) {
		printf("0\n");
		return 0;
	}
	bool f = 0;
	F[f][0][0] = 1;
	for (int i = 1; i <= M; ++i) {
		f = !f;
		for (int j = 0; j <= N; ++j)
			for (int k = 0; k <= j; ++k) {
				int val = 0;
				if (j) {
					if (k) add(val, F[!f][j - 1][k - 1]); // open current i
					add(val, F[!f][j - 1][k]); // open and close
				}
				if (i != X) {
					if (j) add(val, F[!f][j][k + 1]); // close at i
					add(val, F[!f][j][k]); // do nothing
				}
				F[f][j][k] = val;
			}
	}
	int ans = F[f][N][0];
	for (int i = 2; i <= N; ++i) ans = ((long long)ans * i) % MOD;
	printf("%d\n", ans);
}
