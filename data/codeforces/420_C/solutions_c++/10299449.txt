#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <map>
#define MAXM 300005
using namespace std;
int agree[MAXM];
map <pair<int,int>,int> leo;
int n,p;
int x,y;
int main()
{
    int i,j;
    long long ans=0;
    scanf("%d %d",&n,&p);
    memset(agree,0,sizeof(agree));
    for(i=0;i<n;i++)
    {
        scanf("%d %d",&x,&y);
        if(x>y)
            swap(x,y);
        leo[make_pair(x,y)]++;
        agree[x]++;
        agree[y]++;
    }
    map<pair<int,int>,int>::iterator it;
    for(it=leo.begin();it!=leo.end();it++)
    {
        int u=it->first.first,v=it->first.second;
        if(agree[u]+agree[v]>=p && agree[u]+agree[v]-it->second<p)
            ans--;
    }
    sort(agree+1,agree+n+1);
    int limit=n;
    for(i=1;i<=n;i++)
    {
        limit = max(i,limit);
        while(i<limit && agree[limit]+agree[i]>=p) limit--;
        ans = ans+n-limit;
    }
    printf("%I64d\n",ans);
    return 0;
}

   	    	 	 	    		  			   	 	