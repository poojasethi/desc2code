#include<stdio.h>
#include<algorithm>
using namespace std;
const int maxn=300050;
int n,p;
long long ans=0;
int de[maxn]={0},tr[maxn]={0};
int es=0,he[maxn],to[maxn*2],ne[maxn*2];
inline int lowbit(int x) { return x&(-x); }
void add(int x,int k)
{
	while(x<maxn)
		tr[x]+=k,x+=lowbit(x);
}
int que(int x)
{
	int s=0;
	while(x)
		s+=tr[x],x-=lowbit(x);
	return s;
}
void ins(int u,int v)
{
	to[++es]=v;
	ne[es]=he[u];
	he[u]=es;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("data.in","r",stdin);
	freopen("data.out","w",stdout);
#endif
	int i,j,k,x,y;
	scanf("%d%d",&n,&p);
	for(i=0;i<n;i++)
		scanf("%d%d",&x,&y),de[x]++,de[y]++,ins(x,y),ins(y,x);
	for(i=1;i<=n;i++)
		add(n-de[i]+1,1);
	for(i=1;i<=n;i++)
	{
		for(j=he[i];j;j=ne[j])
		{
			k=to[j];
			add(n-de[k]+1,-1);
			de[k]--;
			add(n-de[k]+1,1);
		}
		add(n-de[i]+1,-1);
		ans+=que(n-max(0,p-de[i])+1);
		add(n-de[i]+1,1);
		for(j=he[i];j;j=ne[j])
		{
			k=to[j];
			add(n-de[k]+1,-1);
			de[k]++;
			add(n-de[k]+1,1);
		}
	}
	printf("%I64d\n",ans/2);
	return 0;
}
