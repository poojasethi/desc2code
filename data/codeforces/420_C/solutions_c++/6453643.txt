#include <cstdio>
#include <algorithm>
#define mp make_pair
#define pb push_back
#define fir first
#define sec second
#include <map>
#define mit map<int, int>::iterator
using namespace std;
typedef long long ll;

inline void R(int &x) {
	char ch = getchar(); x = 0;
	for (; ch<'0'; ch=getchar());
	for (; ch>='0'; ch=getchar()) x = x*10 + ch-'0';
}
const int N = 300005;
int n, p, deg[N], d[N];
map<int, int> M[N];
int main() {
	R(n); R(p);
	int x, y;
	for (int i=1; i<=n; ++i) {
		R(x); R(y);
		++deg[x]; ++deg[y];
		++M[x][y], ++M[y][x];
	}
	for (int i=1; i<=n; ++i) d[i] = deg[i];
	sort(d+1, d+n+1);
	ll ans = 0;
	for (int i=1; i<=n; ++i) {
		int cnt = n - (lower_bound(d+1, d+n+1, p-d[i]) - d) + 1;
		if (deg[i] + deg[i] >= p)
			--cnt;
		for (mit it=M[i].begin(); it!=M[i].end(); ++it) {
			if (deg[it->fir] + deg[i] >= p) --cnt;
			if (deg[it->fir] + deg[i] - it->sec >= p) ++cnt;
		}
		ans += cnt;
	}
	printf("%I64d\n", ans / 2);
	return 0;
}