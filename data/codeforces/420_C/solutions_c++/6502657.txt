#include <cstdio>
#include <vector>
#include <algorithm>
#include <map>
using namespace std;
typedef map<pair<int, int>, int>::iterator it;

const int MAXN = 300005;
int N, P;
int cnt[MAXN];

int main()
{
	scanf("%d %d", &N, &P);

	map<pair<int, int>, int> sus;
	for (int i = 0; i < N; i++)
	{
		int a, b;
		scanf("%d %d", &a, &b);
		if (a > b)
			swap(a, b);
		a--;
		b--;
		cnt[a]++;
		cnt[b]++;
		sus[make_pair(a, b)]++;
	}

	vector<int> temp;
	for (int i = 0; i < N; i++)
		temp.push_back(cnt[i]);
	sort(temp.begin(), temp.end());

	long long total = 0;
	for (int i = 0; i < N; i++)
		total += distance(lower_bound(temp.begin() + i + 1, temp.end(), P - temp[i]), temp.end());

	for (it m = sus.begin(); m != sus.end(); m++)
	{
		int a = m->first.first, b = m->first.second, occ = m->second;
		if (cnt[a] + cnt[b] >= P && cnt[a] + cnt[b] - occ < P)
			total--;
	}

	printf("%I64d\n", total);

	return 0;
}