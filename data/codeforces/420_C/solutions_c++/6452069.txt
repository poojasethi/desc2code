#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;
const int maxn = 300000 + 5;
pair<int, int> p[maxn], now;
int d[maxn], v[maxn];
long long ans;
int main()
{
    int n, x, y, lim, last;
    scanf("%d %d", &n, &lim);
    for(int i = 1; i <= n; i ++)
    {
        scanf("%d %d", &x, &y);
        if(x > y) swap(x, y);
        d[x] ++, d[y] ++;
        v[x] ++, v[y] ++;
        p[i] = make_pair(x, y);
    }
    sort(p + 1, p + 1 + n);
    sort(v + 1, v + 1 + n);
    for(int i = 1, k; i <= n; i ++)
    {
        k = lower_bound(v + 1, v + 1 + n, lim - v[i]) - v;
        ans += n - k + (k > i);
    }
    ans /= 2, now = p[1], last = 1;
    for(int i = 2; i <= n + 1; i ++)
        if(p[i] != now)
        {
            int cur = d[now.first] + d[now.second];
            if(cur >= lim && cur < lim + i - last) ans --;
            now = p[i], last = i;
        }
    printf("%I64d\n", ans);
    return 0;
}