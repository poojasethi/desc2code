#include <iostream>
#include <cstdio>
#include <map>
#include <algorithm>

using namespace std;

map < pair < int, int >, int > edges;
map < pair < int, int >, int >::iterator it;

int cont[333333];
int ne[333333];

int main() {
	
	int n, p;
	int u, v;
	
	scanf( "%d %d", &n, &p );
	
	for ( int i = 0; i < n; i ++ ) {
		scanf( "%d %d", &u, &v );
		u --; v --;
		cont[u] ++;
		cont[v] ++;
		edges[make_pair( min(u, v), max(u, v) )] ++;
	}
	
	for ( int i = 0; i < n; i ++ ) ne[i] = cont[i];
	
	sort ( cont, cont + n );
	
	int j = 0;
	long long ans = 0;
	
	for ( int i = n - 1; i >= 0; i -- ) {
		while ( j < i && cont[j] + cont[i] < p ) j ++;
		if ( j >= i ) break;
		ans += (long long)(i - j);
	}
	
	for ( it = edges.begin(); it != edges.end(); it ++ ) {
		u = (*it).first.first;
		v = (*it).first.second;
		if ( ne[u] + ne[v] >= p && ne[u] + ne[v] - (*it).second < p ) ans -= 1ll;
	}
	
	printf( "%I64d\n", ans );

	return 0;
}
