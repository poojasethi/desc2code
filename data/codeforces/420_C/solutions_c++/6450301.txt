#include <cstdio>
#include <iostream>
#include <algorithm>
#include <map>
using namespace std;
const int maxn = 300005;
typedef long long ll;
int x[maxn],y[maxn],b[maxn],n,p;
map<long long,long long> a,c;
long long ans;
void init()
{
	scanf("%d%d",&n,&p);
	for(int i = 1; i <= n; ++i){
		scanf("%d%d",&x[i],&y[i]);
		if(x[i] > y[i]) swap(x[i],y[i]);
		++a[(ll)(x[i] - 1) * 300000 + y[i] - 1];
		++c[(ll)(x[i] - 1) * 300000 + y[i] - 1];
		++b[x[i]]; ++b[y[i]];
	}
	for(int i = 1; i <= n; ++i){
		--a[(ll)(x[i] - 1) * 300000 + y[i] - 1];
		if(a[(ll)(x[i] - 1) * 300000 + y[i] - 1] == 0){
			if(b[x[i]] + b[y[i]] >= p && b[x[i]] + b[y[i]] - c[(ll)(x[i] - 1) * 300000 + y[i] - 1] < p) --ans;
		}
	}
	sort(b + 1,b + n + 1);
}
void solve()
{
	for(int i = n; i >= 2; --i){
		if(b[i] >= p){
			ans += i - 1;
			continue;
		}
		if(b[i] + b[i - 1] < p) break;
		int tmp = lower_bound(b + 1,b + n + 1,p - b[i]) - (b + 1);
		ans += (i - 1) - tmp;
	}
	cout << ans << endl;
}
int main()
{
	init();
	solve();
	return 0;
}

