#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;

int n, p, x, y, du[310000];
long long ans;

vector <int> ve[310000];

int main() {
	scanf("%d%d", &n, &p);
	for (int i = 1; i <= n; i++) {
		scanf("%d%d", &x, &y);
		ve[x].push_back(y);
		ve[y].push_back(x);
		du[x]++; du[y]++;
	}
	for (int i = 1; i <= n; i++) {
		sort(ve[i].begin(), ve[i].end());
		int q, h;
		for (q = 0; q < (int)ve[i].size(); q = h + 1) {
			for (h = q; h < (int)ve[i].size() - 1 && ve[i][q] == ve[i][h + 1]; h++);
			if (du[i] + du[ve[i][q]] - (h - q + 1) >= p)	ans++;
			if (du[i] + du[ve[i][q]] >= p)	ans--;
		}
	}
	sort(du + 1, du + n + 1);
	int q = 1;
	for (int i = n; i; i--) {
		while (q <= n && du[q] + du[i] < p)	q++;
		ans += n - q + 1;
		if (q <= i)	ans--;
	}
	printf("%I64d\n", ans / 2);
}
