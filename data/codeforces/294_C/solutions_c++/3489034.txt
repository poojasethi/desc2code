#include <algorithm>
#include <iostream>

int C[1000][1000] = {1};

int main(void)
{
  int n, m;
  const int p = 1000000007;
  std :: cin >> n >> m;
  int pow2[1000] = {1};
  for (int i = 1; i < 1000; ++i)
  {
    pow2[i] = (pow2[i - 1] << 1) % p;
    C[i][0] = 1;
    for (int j = 1; j <= i; ++j)
      C[i][j] = (C[i - 1][j] + C[i - 1][j - 1]) % p;
  }
  int a[m];
  for (int i = 0; i < m; ++i)
    std :: cin >> a[i];
  std :: sort (a, a + m);
  long long ans = C[n - m][a[0] - 1];
  int k = m;
  m += a[0] - 1;
  for (int i = 1; i < k; ++i)
  {
    if (a[i - 1] + 1 == a[i])
      continue;
    ans *= C[n - m][a[i] - a[i - 1] - 1];
    ans %= p;
    ans *= pow2[a[i] - a[i - 1] - 2];
    ans %= p;
    m += a[i] - a[i - 1] - 1;
  }
  std :: cout << ans;
	return 0;
}
