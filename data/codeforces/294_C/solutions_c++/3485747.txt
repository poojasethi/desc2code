#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

typedef long long int lint;

const lint modulo=1000000007;

const int tope=1001;

lint combi[tope][tope];
lint expo[tope];

int main()
{
  {
    for (int n=0;n<tope;n++)
      for (int k=0;k<=n;k++)
	if (k==0 or k==n) combi[n][k]=1;
	else combi[n][k]=(combi[n-1][k]+combi[n-1][k-1])%modulo;
    expo[0]=1;
    for (int i=1;i<tope;i++)
      expo[i]=(2*expo[i-1])%modulo;
  }
  int n,m;
  cin>>n>>m;
  vector<int> v(m);
  for (int i=0;i<m;i++)
    cin>>v[i];
  lint maneras=1;
  sort(v.begin(),v.end());
  int ant=v[0]-1;
  for (int i=1;i<m;i++) {
    int k=v[i]-v[i-1]-1;
    if (k>0) {
      lint act=expo[k-1];
      maneras=act*maneras%modulo*combi[ant+k][k]%modulo;
      ant+=k;
    }
  }
  maneras=maneras*combi[ant+n-v[m-1]][n-v[m-1]]%modulo;
  cout<<maneras<<endl;
}

