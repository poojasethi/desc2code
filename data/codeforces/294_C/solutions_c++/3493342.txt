#include <iostream>
#include <algorithm>

using namespace std;

const int max_n = 1111;
const int MOD = 1e9 + 7;

int n, m, curr, niz[max_n], p[max_n], ncr[max_n][max_n];

int main()
{
  *p = 1;
  for (int i = 1; i < max_n; i++) p[i] = (p[i - 1] * 2) % MOD;
  for (int i = 0; i < max_n; i++)
  {
    ncr[i][0] = 1;
    for (int j = 1; j <= i; j++) ncr[i][j] = (ncr[i - 1][j] + ncr[i - 1][j - 1]) % MOD;
  }
  cin >> n >> m;
  for (int i = 0; i < m; i++) cin >> niz[i];
  sort(niz, niz + m);
  curr = niz[0] - 1 + n - niz[m - 1];
  long long ret = ncr[curr][niz[0] - 1];
  for (int i = 1; i < m; i++)
  {
    int temp = niz[i] - niz[i - 1] - 1;
    ret = ret * ncr[temp + curr][curr] % MOD;
    if (temp) ret = ret * p[temp - 1] % MOD;
    curr += temp;
  }
  cout << ret;
  return 0;
}
