MOD = 1000000007

def get_power(n, b):
	ret = [1] * (n + 1)
	for i in range(1, n + 1):
		ret[i] = (ret[i - 1] * b) % MOD
	return ret

def mod_pow(x, y):
	ret = 1
	while y != 0:
		if y % 2 == 1:
			ret = (ret * x) % MOD
		x = (x * x) % MOD
		y /= 2
	return ret

def get_factorial(n):
	fact = [1] * (n + 1)
	fact_inv = [1] * (n + 1)
	for i in range(1, n + 1):
		fact[i] = (fact[i - 1] * i) % MOD
		fact_inv[i] = mod_pow(fact[i], MOD - 2)
	return (fact, fact_inv)

n, m = [int(x) for x in raw_input().split()]
lights = sorted([int(x) for x in raw_input().split()])
p2 = get_power(n, 2)
fact, fact_inv = get_factorial(n)
res = 1
blocks = []
for i in range(m):
	if i == 0 and lights[i] > 1:
		blocks.append(lights[i] - 1)
	if i == m - 1 and lights[i] < n:
		blocks.append(n - lights[i])
	if i > 0 and lights[i] > lights[i - 1] + 1:
		blocks.append(lights[i] - lights[i - 1] - 1)
		res = (res * p2[lights[i] - lights[i - 1] - 2]) % MOD
res = (res * fact[sum(blocks)]) % MOD
for block in blocks:
	res = (res * fact_inv[block]) % MOD
print(res)
