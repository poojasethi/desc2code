#!/usr/bin/env python
import sys

MOD = 1000000007

def ways(a, b, table=dict()):
    if a == 0 or b == 0:
        return 1

    if (a, b) in table:
        return table[a, b]

    table[a, b] = (ways(a - 1, b) + ways(a, b-1)) % MOD
    return table[a, b]

if __name__ == '__main__':
    n, m = map(int ,sys.stdin.readline().strip().split())
    on_lights = map(int, sys.stdin.readline().strip().split())
    on_lights.append(0)
    on_lights.append(n + 1)
    on_lights.sort()

    ans = 1
    for i in xrange(2, len(on_lights) - 1):
        if on_lights[i] - on_lights[i-1] >= 2:
            ans *= 2 ** (on_lights[i] - on_lights[i-1] - 2)


    d = []
    for i in xrange(1, len(on_lights)):
        if on_lights[i] - on_lights[i-1] - 1 > 0:
            d.append(on_lights[i] - on_lights[i-1] - 1)

    previous = d[0] if len(d) > 0 else 0
    for i in xrange(1, len(d)):
        ans *= ways(min(previous, d[i]), max(previous, d[i]))
        previous += d[i]

    print ans % MOD
