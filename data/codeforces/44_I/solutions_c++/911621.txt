#include <cstdio>
#include <cstring>
#include <vector>
#include <string>
#include <set>
#include <algorithm>
using namespace std;

int n;
int pos[11];
set<int> v[10];
char s[1000];
vector<string> ans;

void go(int m, int lev=0) {
	if (m == 0) {
		string str = "";
		for(int i=0;i<lev;i++) {
			str += "{";
			for(set<int>::iterator it=v[i].begin(); it!=v[i].end(); ) {
				sprintf(s, "%d", *it);
				str += string(s);
				if (++it == v[i].end()) str += "}";
				else str += ",";
			}
			if (i<lev-1) str += ",";
		}
		ans.push_back(str);
		return;
	}
	int t[10], r=0;
	for(int i=1;i<=n;i++)
		if(pos[i]>=lev)
			t[r++] = i;
	go(m - v[lev].size(), lev+1);
	for(int i=2;i<(1<<m);i+=2) {
		int id = __lg(i&-i);
		if (pos[t[id]] == lev) {
			v[lev].erase(t[id]);
			v[lev+1].insert(t[id]);
			pos[t[id]] = lev+1;
		} else {
			int p = pos[t[id]];
			v[p].erase(t[id]);
			v[lev].insert(t[id]);
			pos[t[id]] = lev;
			if (v[p].size()==0) {
				for(int j=p;j<n-1;j++) {
					v[j] = v[j+1];
					for(set<int>::iterator it=v[j].begin(); it!=v[j].end();it++)
						pos[*it]=j;
				}
			}
		}
		go(m - v[lev].size(), lev+1);
	}
}

int main(void) {
	scanf("%d", &n);
	for(int i=1;i<=n;i++) {
		v[0].insert(i);
		pos[i] = 0;
	}
	go(n);
	printf("%d\n", (int)ans.size());
	for(int i=0;i<(int)ans.size();i++)
		printf("%s\n", ans[i].c_str());
	return 0;
}

