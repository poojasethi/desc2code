#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <stack>
#include <string>
#include <map>
#include <algorithm>
#include <utility>
#include <vector>
using namespace std;

vector<vector<vector<int> > > vv[11];

int S2[11][11];
int B[11];
int main() {
	int n;
	scanf("%d", &n);
	vector<int> tmp;
	tmp.push_back(1);
	vector<vector<int> > tt;
	tt.push_back(tmp);
	S2[1][1] = 1;
	B[1] = 1;
	int i, j, k, l;
	int odd = 1;
	for (i = 2; i <= n; i++) {
		for (j = 1; j <= i; j++) {
			S2[i][j] = j * S2[i - 1][j] + S2[i - 1][j - 1];
			B[i] += S2[i][j];
		}
    }
	tmp.clear();
	tmp.push_back(1);
	tt.clear();
	tt.push_back(tmp);
	vv[1].push_back(tt);
	for (i = 2; i <= n; i++) {
		for (j = 0; j < vv[i - 1].size(); j++) {
			if ((j & 1) == 0) {
				for (k = 0; k < vv[i - 1][j].size(); k++) {
					tt = vv[i - 1][j];
					tt[k].push_back(i);
					vv[i].push_back(tt);
				}
				tt = vv[i - 1][j];
				tmp.clear();
				tmp.push_back(i);
				tt.push_back(tmp);
				vv[i].push_back(tt);
			} else {
				tt = vv[i - 1][j];
				tmp.clear();
				tmp.push_back(i);
				tt.push_back(tmp);
				vv[i].push_back(tt);
				for (k = vv[i - 1][j].size() - 1; k >= 0; k--) {
					tt = vv[i - 1][j];
					tt[k].push_back(i);
					vv[i].push_back(tt);
				}
			}
		}
	}
	cout << B[n] << endl;
	for (i = 0; i < vv[n].size(); i++) {
		int t = 0;
		for (j = 0; j < vv[n][i].size(); j++) {
			if (t++) putchar(',');
			putchar('{');
			for (k = 0; k < vv[n][i][j].size(); k++) {
				if (k) putchar(',');
				printf("%d", vv[n][i][j][k]);
			}
			putchar('}');
		}
		puts("");
	}
}

   			  			 		  				  	