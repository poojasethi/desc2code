#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<string>
#include<cmath>
#include<sstream>
#include<vector>
using namespace std;
int q;
struct Node
{
	int num;
	vector<int> x[11];
	void output()
	{
		q++;
		//return;
		for(int i=0;i<num;i++)
		{
			if(i) printf(",");
			printf("{");
			for(vector<int>::iterator it=x[i].begin();it!=x[i].end();it++)
			{
				if(it!=x[i].begin()) printf(",");
				printf("%d",*it);
			}
			printf("}");
		}
		printf("\n");
	}
};
vector<Node> v[10];
int ans[11]={0,1,2,5,15,52,203,877,4140,21147,115975};
int main()
{
	//freopen("in.txt","w",stdout);
	q=0;
	int n;
	cin>>n;
	if(n==1)
	{
		printf("1\n{1}\n");
		return 0;
	}

	Node tmp;
	tmp.num=1;
	tmp.x[0].push_back(1);
	v[1].push_back(tmp);

	printf("%d\n",ans[n]);

	for(int i=2;i<=n;i++)
	{
		int m=v[i-1].size();
		int d=1;
		for(int j=0;j<m;j++)
		{
			if(d==1)
			{
				int cnt=0;
				for(int k=0;;k++)
				{
					cnt++;
					if(k==v[i-1][j].num) break;
					Node tmp=v[i-1][j];
					tmp.x[k].push_back(i);
					if(i==n) tmp.output();
					else v[i].push_back(tmp);
					if(cnt==v[i-1][j].num)
					{
						Node tmp1=v[i-1][j];
						tmp1.x[tmp1.num++].push_back(i);
						if(i==n) tmp1.output();
						else v[i].push_back(tmp1);
					}

				}
				d=-1;
			}
			else
			{
				int cnt=0;
				for(int k=v[i-1][j].num-1;;k--)
				{
					cnt++;
					if(cnt==1)
					{
						Node tmp1=v[i-1][j];
						tmp1.x[tmp1.num++].push_back(i);
						if(i==n) tmp1.output();
						else v[i].push_back(tmp1);
					}
					if(k==-1) break;
					Node tmp=v[i-1][j];
					tmp.x[k].push_back(i);
					if(i==n) tmp.output();
					else v[i].push_back(tmp);

				}
				d=1;
			}
		}
	}
	//printf("%d\n",q);
	return 0;
}

   		   		 			 	      	  	