/**
 *  Soluzione di gruppi in O(output).
 *
 *  Autore: Giorgio Audrito
 *
 *  Descrizione: giustezza, complessita' e procedimento.
 */

#include <iostream>
#include <algorithm>

using namespace std;


char gr[16]; // gruppi di appartenenza
int N;
int SOL[11] = {0, 1, 2, 5, 15, 52, 203, 877, 4140, 21147, 115975};

// rimescola gli studenti da i in poi, sapendo che prima di i esistono g gruppi
void rimescola(int i, int g) {
    if (i >= N) {
        for (int k=0; k<g; k++) {
            bool first = true;
            if (k > 0) cout << ",";
            cout << "{";
            for (int j=0; j<N; j++) if (gr[j] == k) {
                if (not first) cout << ",";
                cout << j+1;
                first = false;
            }
            cout << "}";
        }
        cout << endl;
        //for (int i=0; i<N; i++) cout << (int)gr[i] << " ";
        //cout << endl;
        return;
    }
    if (gr[i] == 0) {
        rimescola(i+1, g);
        gr[i]=g;
        rimescola(i+1, g+1);
        for (gr[i]--; gr[i]>0; gr[i]--)
            rimescola(i+1, g);
        gr[i]++;
    }
    else {
        for (; gr[i]<g; gr[i]++)
            rimescola(i+1, g);
        rimescola(i+1, g+1);
        gr[i]=0;
        rimescola(i+1, g);
    }
}

void organizza(int N) {
    ::N = N;
    cout << SOL[N] << endl;
    rimescola(1, 1);
}

int main() {
    cin >> N;
    organizza(N);
}
