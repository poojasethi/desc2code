#include <bits/stdc++.h>
#define N 200005
#define oo 1000000007
#define ll long long

using namespace std;

ll d[N], ans[N], n, K[N];
vector <int> a[N];
vector <int> L[N];

void DFS1(int u, int pre)
{
    d[u] = 1;
    L[u].push_back(1);
    for(int i=0; i<a[u].size(); i++)
    {
        int v = a[u][i];    L[u].push_back(L[u][i]);
        if(v == pre) continue;
        DFS1(v, u);
        d[u] = d[u] * (d[v] + 1) % oo;
        L[u][i+1] = d[u];
    }
}

void DFS2(int u, int pre)
{
    ll T = 1;
    for(int i=(int)a[u].size()-1; i >= 0; i--)
    {
        int v = a[u][i];
        if(v == pre) continue;
        if(i != a[u].size()-1) T = T * (d[a[u][i+1]] + 1) % oo;
        K[v] = (T * L[u][i] % oo * K[u] % oo + 1) % oo;
        ans[v] =  K[v] * d[v] % oo;
        DFS2(v, u);
    }
}

int main()
{
    cin >> n;
    int u;
    for(int i=1; i<=n-1; i++)
    {
        cin >> u;
        a[u].push_back(i+1);
        a[i+1].push_back(u);
    }
    DFS1(1, 0);
    ans[1] = d[1];  K[1] = 1;
    DFS2(1, 0);
    for(int i=1; i<=n; i++) cout << ans[i] << " ";
}
