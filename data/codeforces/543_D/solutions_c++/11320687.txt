#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
using namespace std;
const int N = 2e5+10;
const long long MOD = 1e9+7;

long long pre[N],suf[N];
long long lft[N],rgh[N];
vector<int> edge[N];


void dfssuf(int u)
{
    long long sum = 1;
    for(int i=0;i<edge[u].size();i++)
    {
        int v = edge[u][i];
        dfssuf(v);
        sum = sum*(suf[v]+1)%MOD;
    }
    suf[u]=sum;
}


void dfspre(int u)
{

    if(u == 1) pre[u]=1;

    long long sum = 1;
    int sz = edge[u].size();
    lft[0]=rgh[sz-1]=1;

    for(int i=0;i<sz-1;i++) lft[i+1]=lft[i]*(suf[edge[u][i]]+1)%MOD;
    for(int i=sz-1;i>0;i--) rgh[i-1]=rgh[i]*(suf[edge[u][i]]+1)%MOD;
    for(int i=0;i<sz;i++) pre[edge[u][i]]= (lft[i]*rgh[i]%MOD*pre[u]+1)%MOD;

    for(int i=0;i<sz;i++) dfspre(edge[u][i]);
}


int main()
{
    int n,u,v;

    scanf("%d",&n);
    for(int v=2;v<=n;v++)
    {
        scanf("%d",&u);
        edge[u].push_back(v);
    }

    dfssuf(1);
    dfspre(1);

    for(int i=1;i<=n;i++) printf("%lld ", (pre[i]*suf[i])%MOD);
}
