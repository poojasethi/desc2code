#define N (1<<18)
#define M 1000000007
#define ll long long
#include <bits/stdc++.h>
using namespace std;

int n,x;
ll dp[2][N];
vector<int> g[N];
vector<ll> h[N],r[N];

void dfs(int x,int fa)
{
	dp[0][x]=1;
	for(int i=1;i<g[x].size();i++)
	{
		int v=g[x][i];
		if(v!=fa) dfs(v,x);
	}

	*(h[x].begin())=1;
	*(r[x].rbegin())=1;
	for(int i=1;i<g[x].size();i++)
	{
		int v=g[x][i];
		if(v==fa) h[x][i]=h[x][i-1];
		else h[x][i]=h[x][i-1]*(dp[0][v]+1)%M;
	}

	for(int i=g[x].size()-1;i>=1;i--)
	{
		int v=g[x][i];
		if(v==fa) r[x][i]=r[x][i+1];
		else r[x][i]=r[x][i+1]*(dp[0][v]+1)%M;
	}

	dp[0][x]=r[x][1];
}

void dfs2(int x,int fa)
{
	for(int i=1;i<g[x].size();i++)
	{
		int v=g[x][i];
		if(v!=fa)
			dp[1][v]=(dp[1][x]*h[x][i-1]%M*r[x][i+1]%M+1)%M,dfs2(v,x);
	}
}

int main()
{
	cin>>n;
	for(int i=1;i<=n;i++)
		g[i].push_back(0);
	for(int i=2;i<=n;i++)
		scanf("%d",&x),g[i].push_back(x),g[x].push_back(i);
	for(int i=1;i<=n;i++)
		h[i]=vector<ll>(g[i].size()+1),r[i]=vector<ll>(g[i].size()+1);

	dp[1][1]=1;
	dfs(1,1),dfs2(1,1);

	for(int i=1;i<=n;i++)
		printf("%I64d ",dp[0][i]*dp[1][i]%M);
	cout<<endl;
	return 0;
}
