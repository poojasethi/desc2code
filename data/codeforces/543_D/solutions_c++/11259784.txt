#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
const int maxn=200010;
const LL MOD=1000000007;
int N,p;
LL dp[maxn];
LL ans[maxn];
vector<int> G[maxn];

void dfs1(int u,int fa)
{
    dp[u]=1;
    int len=G[u].size();
    for(int i=0;i<len;i++)
    {
        int v=G[u][i];
        dfs1(v,u);
        dp[u]=(dp[u]*(dp[v]+1))%MOD;
    }
}
LL L[maxn],R[maxn];
void dfs2(int u,int fa)
{
    int len=G[u].size();
    L[0]=1,R[len-1]=1;
    for(int i=1;i<len;i++)	L[i]=L[i-1]*(dp[G[u][i-1]]+1)%MOD;
    for(int i=len-2;i>=0;i--)R[i]=R[i+1]*(dp[G[u][i+1]]+1)%MOD;
    for(int i=0;i<len;i++)
    {
        int v=G[u][i];
        ans[v]=(L[i]*R[i]%MOD*ans[u]%MOD+1)%MOD;
    }
    for(int i=0;i<len;i++)
        if(G[u][i]!=fa)
        dfs2(G[u][i],u);
}
int main()
{
    scanf("%d",&N);
    for(int i=2;i<=N;i++)
    {
        scanf("%d",&p);
        G[p].push_back(i);
    }
    dfs1(1,0);
    ans[1]=1;
    dfs2(1,0);
    for(int i=1;i<=N;i++)
        cout<<ans[i]*dp[i]%MOD<<" ";
    cout<<endl;
    return 0;
}
