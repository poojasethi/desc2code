#include<iostream>
#include<algorithm>
#include<cstring>
#include<cstdio>
#include<vector>
using namespace std;
const int maxn=200000+10;
const int md=1000000007;
long long f[maxn],h[maxn],pre[maxn],suf[maxn];
int n;
vector<int> g[maxn];
void dfs1(int p)
{
  f[p]=1;
  for(int i=0;i<g[p].size();i++)
  {
    int v=g[p][i];dfs1(v);
	f[p]=(f[p]*(f[v]+1))%md;
  }
}
void dfs2(int p)
{
  if(!g[p].size()) return;
  pre[0]=1;
  for(int i=1;i<=g[p].size()-1;i++)
  {
    int v=g[p][i-1];
	pre[i]=(pre[i-1]*(f[v]+1))%md;
  }
  suf[g[p].size()-1]=1;
  for(int i=g[p].size()-2;i>=0;i--)
  {
    int v=g[p][i+1];
	suf[i]=(suf[i+1]*(f[v]+1))%md;
  }
  for(int i=0;i<g[p].size();i++)
  {
    int v=g[p][i];
	h[v]=(h[p]*suf[i]%md*pre[i]%md)%md;
    h[v]=(h[v]+1)%md;
  }
  for(int i=0;i<g[p].size();i++) dfs2(g[p][i]);
}
int main()
{
  
  scanf("%d",&n);
  for(int i=2;i<=n;i++)
  {
    int x;scanf("%d",&x);
	g[x].push_back(i);
  }
  dfs1(1);h[1]=1;dfs2(1);
  for(int i=1;i<=n;i++)
  {
    long long ans=h[i]*f[i]%md;
    printf("%I64d ",ans);  
  }
  return 0;
}  
  
