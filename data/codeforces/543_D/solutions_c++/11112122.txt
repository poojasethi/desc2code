#include<stdio.h>
#include<vector>
#include<assert.h>
using namespace std;
int mod=1000000007;
long long dp[200000],ans[200000];
vector<int>v[200000];
int gcd(int a,int b,int&x,int&y){
	if(b==0){
		x=1;
		y=0;
		return a;
	}
	else{
		int tmp=gcd(b,a%b,x,y);
		int t=x;
		x=y;
		y=t-(a/b)*y;
		return tmp;
	}
}
int ni(int k){
	int x,y;
	gcd(k,mod,x,y);
	while(x<0)x+=mod;
	assert(1ll*k*x%mod==1);
	return x;
}
void dfs(int k,int f){
	dp[k]=1;
	for(int i=0;i<v[k].size();i++){
		if(v[k][i]==f)continue;
		dfs(v[k][i],k);
		dp[k]=dp[k]*(dp[v[k][i]]+1)%mod;
	}
}
void get(int k,int f,int fc){
	vector<int>later;
	ans[k]=dp[k]*(fc+1)%mod;
	int ffc=(fc+1)%mod;
	for(int i=0;i<v[k].size();i++){
		if(v[k][i]==f)continue;
		if(dp[v[k][i]]+1!=mod){
			get(v[k][i],k,ans[k]*ni(dp[v[k][i]]+1)%mod);
			ffc=ffc*(dp[v[k][i]]+1)%mod;
		}
		else later.push_back(i);
	}
	for(int i=0;i<later.size();i++){
		get(v[k][later[i]],k,later.size()==1?ffc:0);
	}
}
int main(){
	int n;
	scanf("%d",&n);
	for(int i=1;i<n;i++){
		int p;
		scanf("%d",&p);
		p--;
		v[p].push_back(i);
		v[i].push_back(p);
	}
	dfs(0,-1);
	get(0,-1,0);
	for(int i=0;i<n;i++)
		printf("%I64d%c",ans[i],i==n-1?'\n':' ');
}
