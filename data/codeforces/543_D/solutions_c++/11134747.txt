#include<bits/stdc++.h>
#define MP make_pair
#define R second
#define L first
using namespace std;
typedef long long lint;
const lint mod=1000000007;
const int maxn=2000000+1000;
vector<lint> Left[maxn], Right[maxn];
lint dp[maxn], res[maxn];
vector<int> v[maxn];

void dfs(int x){
	dp[x]=1;
	for(int i=0;i<v[x].size();i++){
		dfs(v[x][i]);
		dp[x]=(dp[x]*(dp[v[x][i]]+1))%mod;
	}
	Left[x].push_back(1);
	for(int i=0;i<(int)v[x].size()-1;i++)
		Left[x].push_back(Left[x].back()*(dp[v[x][i]]+1)%mod);

	Right[x].push_back(1);
	for(int i=v[x].size()-1;i>0;i--)
		Right[x].push_back(Right[x].back()*(dp[v[x][i]]+1)%mod);
	reverse(Right[x].begin(), Right[x].end());
	return;
}

void dfs2(int x, lint up=1){
	res[x]=dp[x]*up%mod;
	for(int i=0;i<v[x].size();i++)
		dfs2(v[x][i], Left[x][i]*Right[x][i]%mod*up%mod+1);
	return ;
}

int main(){
	int n;
	cin >> n;
	for(int i=1;i<n;i++){
		int p;
		cin >> p;
		p--;
		v[p].push_back(i);
	}
	dfs(0);
	dfs2(0);
	for(int i=0;i<n;i++)
		cout << res[i] << " ";
	cout << endl;
	return 0;
}
