#include<bits/stdc++.h>
using namespace std;

const int MOD=1e9+7;
int n,f[200005],g[200005],pa[200005];

vector<int> c[200005];

int nhan(int a,int b)
{
    a=a%MOD;
    if (a<=1 || b<=1) return (a*b)%MOD;
    return (nhan(a*2,b/2)+a*(b%2))%MOD;
}

void DFS(int u)
{
    f[u]=1;
    for(int i=0,v;i<c[u].size();i++)
    {
        v=c[u][i];
        if (pa[u]!=v)
        {
            pa[v]=u;
            DFS(v);
            f[u]=nhan(f[u],(f[v]+1));
        }
    }
}

void DFSG(int u)
{
    int i,v,H;
    vector<int> h;
    g[u]++;
    h.resize(c[u].size()+1);
    h[c[u].size()]=1;
    H=1;
    for(i=c[u].size()-1;i>=0;i--)
    {
        v=c[u][i];
        if (pa[u]!=v) h[i]=nhan(h[i+1],f[v]+1);
        else h[i]=h[i+1];
    }
    for(i=0;i<c[u].size();i++)
    {
        v=c[u][i];
        if (pa[u]!=v)
        {
            g[v]=nhan(H,nhan(g[u],h[i+1]));
            DFSG(v);
            H=nhan(H,f[v]+1);
        }
    }
}

main()
{
    scanf("%d",&n);
    int i,u,v;
    for(u=2;u<=n;u++) scanf("%d",&v),c[u].push_back(v),c[v].push_back(u);
    pa[1]=0;
    DFS(1);
    g[1]=0;
    DFSG(1);
    for(i=1;i<=n;i++) printf("%d ",nhan(f[i],g[i]));
}
