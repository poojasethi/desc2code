#include<bits/stdc++.h>

#define pb push_back
#define LL long long
#define P7 1000000007
#define N 200020

using namespace std;

LL mypow(LL A,LL B)
 {
  if (!B) return 1;
  LL D=mypow(A,B/2);
  D=(D*D)%P7;
  if (B%2) D*=A;
  return D%P7;
 }

LL tr[N],res[N];
vector < int > g[N];
vector < LL > rt[N];

void dfs(int u)
 {
  tr[u]=1;
  if (g[u].size() == 0) return;
  for (int i=0;i<g[u].size();i++)
   {
    dfs(g[u][i]);
    rt[u].pb(tr[g[u][i]]);
    tr[u]=(1LL*tr[u]*(rt[u][i]+1))%P7;
   }
 }

void solve(int u,LL par)
 {
  res[u]=(1LL*(par+1)*tr[u])%P7;
  vector < LL > lf,rf;
  lf.pb(1);
  for (int i=0;i<g[u].size();i++)
   lf.pb((lf[i]*(rt[u][i]+1))%P7);
  lf.pb(1);
  rf.pb(1);
  for (int i=g[u].size()-1;i>=0;i--)
   rf.pb((rf[rf.size()-1]*(rt[u][i]+1))%P7);
  reverse(rf.begin(),rf.end());

  for (int i=0;i<g[u].size();i++)
   solve(g[u][i],(((1LL*(par+1)*lf[i])%P7)*rf[i+1])%P7);
 }

int n,i,a;

main()
 {
  scanf("%d",&n);
  for (i=2;i<=n;i++)
   scanf("%d",&a),g[a].pb(i);
  g[0].pb(1);
  dfs(1);
  solve(1,0);
  for (i=1;i<=n;i++)
   printf("%d ",(int)(res[i]));
 }
