#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;

const long long mod=1000000007;
int n;
vector<int> a[200005];
long long f[200005],g[200005],pre[200005],last[200005];
inline void dfs_down(int now) {
	f[now]=1;
	for (int i=0;i<a[now].size();i++) {
		int v=a[now][i];
		dfs_down(v);
		f[now]=f[now]*(f[v]+1)%mod;
	}
}
inline void dfs_up(int now) {
	if (a[now].size()!=0) {
		pre[0]=1; last[a[now].size()]=1;
		for (int i=0;i<a[now].size();i++) pre[i+1]=pre[i]*(f[a[now][i]]+1)%mod;
		for (int i=a[now].size()-1;i;i--) last[i]=last[i+1]*(f[a[now][i]]+1)%mod;
		for (int i=0;i<a[now].size();i++) {
			int t=a[now][i];
			g[t]=((g[now]*pre[i])%mod*last[i+1])%mod;
			g[t]=(g[t]+1)%mod;
		}
		for (int i=0;i<a[now].size();i++) dfs_up(a[now][i]);
	}
}
int main() {
	scanf("%d",&n);
	for (int i=2;i<=n;i++) {
		int u;
		scanf("%d",&u);
		a[u].push_back(i);
	}
	g[1]=1;
	dfs_down(1); dfs_up(1);
	for (int i=1;i<=n;i++) {
		printf("%I64d",(f[i]*g[i])%mod);
		if (i==n) printf("\n"); else printf(" ");
	}
	return 0;
}
