#include <bits/stdc++.h>
#define LL long long
#define ULL unsigned long long
using namespace std;
const int N = 500010;
const int mod = 1000000007;

vector<int>g[N];
LL dp[N],up[N];
void dfs(int u,int f)
{
    dp[u]=1;
    for(int i=0,sz=g[u].size();i<sz;i++)
    {
        int v=g[u][i];
        if(v==f)continue;
        dfs(v,u);
        dp[u]=dp[u]*(dp[v]+1)%mod;

    }
}
LL l[N],r[N];
void dfs2(int u)
{
    int sz=g[u].size();
    if(!sz)return;
    l[0]=1;r[sz-1]=up[u];
    for(int i=0;i<sz-1;i++)
    {
        int v=g[u][i];
        l[i+1]=l[i]*(dp[v]+1)%mod;
    }
    for(int i=sz-1;i>0;i--)
    {
        int v=g[u][i];
        r[i-1]=r[i]*(dp[v]+1)%mod;
    }
    for(int i=0;i<sz;i++)
    {
        int v=g[u][i];
        up[v]=(l[i]*r[i]+1)%mod;
    }
    for(int i=0;i<sz;i++)dfs2(g[u][i]);
}
int main()
{
    int n;
    while(scanf("%d",&n)>0)
    {
        for(int i=1;i<=n;i++)g[i].clear();
        for(int i=2;i<=n;i++)
        {
            int x;
            scanf("%d",&x);
            g[x].push_back(i);
        }
        dfs(1,-1);
        up[1]=1;
        dfs2(1);
        for(int i=1;i<=n;i++)printf("%lld%c",dp[i]*up[i]%mod,i==n?'\n':' ');
    }
}



 					 			  		 	  	 	 		 	 				