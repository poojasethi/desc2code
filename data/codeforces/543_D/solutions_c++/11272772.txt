#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long LL;

const int N = 2e5 + 6;
const int Mod = 1e9 + 7;

int n, lab[N], lis[N];
LL f[N], g[N], h[N], u[N], v[N];
int to[N], next[N], end[N], tms;


void bfs()
{
	int x, p, i;
	for(x=n; x; x--)
	{
		lis[0]=0, f[x]=1;
		for(p=end[x]; p; p=next[p]) lis[++lis[0]] = to[p], f[x] = f[x] * (f[to[p]] + 1) % Mod;
		for(i = 2, u[lis[1]] = 1; i <= lis[0]; i ++) u[lis[i]] = u[lis[i-1]] * (f[lis[i-1]] + 1) % Mod;
		for(i = lis[0]-1, v[lis[lis[0]]] = 1; i > 0; i --) v[lis[i]] = v[lis[i+1]] * (f[lis[i+1]] + 1) % Mod;
	}
	for(g[1]=0, x=1; x<=n; x++) for(h[x] = f[x] * (g[x]+1) % Mod, p=end[x]; p; p=next[p])
	g[to[p]] = (g[x]+1) * u[to[p]] % Mod * v[to[p]] % Mod;
}

int main()
{
	scanf("%d", &n);
	for(int i=2, x; i<=n; i++) scanf("%d", &x), to[++tms]=i, next[tms]=end[x], end[x]=tms;
	bfs();
	for(int i=1; i<n; i++) printf("%d ", int(h[i]));
	printf("%d\n", int(h[n]));
	
	return 0;
}

	  		 		 	 					 		 	   		 				