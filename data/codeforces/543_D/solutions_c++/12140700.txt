#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
const int maxn = 200010;
vector<int>g[maxn];
LL dp[maxn],dp2[maxn];
const LL mod = 1000000007;
void dfs(int u,int fa){
    dp[u] = 1;
    for(int i = g[u].size()-1; i >= 0; --i){
        if(g[u][i] == fa) continue;
        dfs(g[u][i],u);
        dp[u] = dp[u]*(dp[g[u][i]]+1)%mod;
    }
}
LL L[maxn],R[maxn];
void dfs2(int u,int fa){
    int m = g[u].size();
    L[0] = 1;
    R[m - 1] = dp2[u];
    for(int i = 1; i < m; ++i)
        L[i] = L[i-1]*(dp[g[u][i-1]]+1)%mod;
    for(int i = m-2; i >= 0; --i)
        R[i] = R[i+1]*(dp[g[u][i+1]]+1)%mod;
    for(int i = 0; i < m; ++i){
        if(g[u][i] == fa) continue;
        dp2[g[u][i]] = (L[i]*R[i] + 1)%mod;
    }
    for(int i = 0; i < m; ++i){
        if(g[u][i] == fa) continue;
        dfs2(g[u][i],u);
    }
}
int main(){
    int n,o;
    scanf("%d",&n);
    for(int i = 2; i <= n; ++i){
        scanf("%d",&o);
        g[o].push_back(i);
        //g[i].push_back(o);
    }
    dp2[1] = 1;
    dfs(1,0);
    dfs2(1,0);
    for(int i = 1; i <= n; ++i)
        cout<<dp2[i]*dp[i]%mod<<(i == n?"\n":" ");
    return 0;
}

						 	 	 		 	 	 	 	    					