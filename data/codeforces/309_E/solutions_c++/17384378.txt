#include<cstdio>
#include<iostream>
#include<string>
#include<cstring>
#include<algorithm>
using namespace std;

struct unit
{int l,r,num;
};
struct unit a[2010];

int n,ans;
int lim[2010],used[2010],b[2010],c[2010],w[2010];

bool operator <(unit A,unit B)
{return A.r<B.r;
}

int intersect(int x,int y)
{return min(a[x].r,a[y].r)>=max(a[x].l,a[y].l);
}

int check(int mid)
{int i,j,k,p;
 
 memset(used,0,sizeof(used));
 for(i=1;i<=n;i++) lim[i]=n;
 for(i=1;i<=n;i++)
 {	memset(w,0,sizeof(w));
 	for(j=1;j<=n;j++)
	 	if(!used[j]) w[lim[j]]++;
	for(j=i;j<=n;j++)
	{	w[j]+=w[j-1];
		if(w[j]>=j-i+1)
		{	k=j;
			break;
		}
	}
	//cout<<mid<<" "<<i<<" "<<k<<" "<<w[k]<<endl;
	if(w[k]>k-i+1) return 0;
	for(j=1;j<=n;j++)
		if(!used[j] && lim[j]<=k)
		{	b[i]=a[j].num;
			used[j]=1;
			for(p=1;p<=n;p++)
				if(intersect(p,j)) lim[p]=min(lim[p],i+mid);
			break;	
		}
 }
 return 1;
}

int main()
{int i,j,l,r,mid;
 
 scanf("%d",&n);
 for(i=1;i<=n;i++)
 {	scanf("%d%d",&a[i].l,&a[i].r);
 	a[i].num=i;
 }
 sort(a+1,a+n+1);
 l=0;
 r=n;
 ans=n+1;
 while(l<=r)
 {	mid=(l+r)/2;
 	if(check(mid))
	{	ans=min(ans,mid);
		for(i=1;i<=n;i++) c[i]=b[i];
		r=mid-1;
	}
	else
		l=mid+1;
 }
 for(i=1;i<=n;i++) 
 {	printf("%d",c[i]);
 	printf("%c",i!=n?' ':'\n');
 }
 return 0;
}