#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<algorithm>
#define N 2100
using namespace std;
struct ppp{
	int l,r,id;
}a[N];
int n,i,j,l,r,mid,v[N],last[N],pos[N],sum[N];
bool map[N][N];
bool cmp(const ppp &a,const ppp&b){
	return a.r<b.r;
}
bool check(int mid){
	int i,j,k;
	for(i=1;i<=n;++i){
		last[i]=n+1;
		pos[i]=0;
	}
	j=1;
	for(i=1;i<=n;++i){
		v[i]=a[j].id;  pos[j]=i;   last[j]=i;
		for(k=1;k<=n;++k)if(map[j][k])last[k]=min(last[k],i+mid);
		memset(sum,0,sizeof(sum));
		for(k=1;k<=n;++k)sum[last[k]]++;
		for(k=1;k<=n;++k)if((sum[k]+=sum[k-1])>k)return 0;
		for(k=i+1;k<=n;++k)if(sum[k]==k)break;
		for(j=1;j<=n;++j)if(!pos[j] && last[j]<=k)break;
	}
	return 1;
}
int main(){
	scanf("%d",&n);
	for(i=1;i<=n;++i)scanf("%d%d",&a[i].l,&a[i].r),a[i].id=i;
	sort(a+1,a+n+1,cmp);
	for(i=1;i<=n;++i)
		for(j=i+1;j<=n;++j)if(a[j].l<=a[i].r)map[i][j]=map[j][i]=1;
	l=0; r=n;
	while(l<=r){
		mid=(l+r)/2;
		if(check(mid))r=mid-1;
		else l=mid+1;
	}
	check(r+1);
	for(i=1;i<=n;++i)printf("%d ",v[i]);
}
