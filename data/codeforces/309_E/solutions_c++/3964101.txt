#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#define MAXN 2005
using namespace std ;

struct sta {
    int l, r, nm ;
    bool operator < (sta b) const {
        return r < b.r ;
    }
} kn[MAXN] ;

int N, M ;
bool vis[MAXN] ;
int sum[MAXN], lim[MAXN] ;
int at[MAXN], num[MAXN], ans ;
int p[MAXN][MAXN] ;

bool check(int D)
{
    int i, j, t ;
    memset(vis, 1, sizeof(vis)) ;
    memset(at, 0, sizeof(at)) ;
    for(i = 1; i <= N; i ++) lim[i] = N ;
    for(i = 1; i <= N; i ++)
    {
        for(j = 1; j <= N; j ++)
            if(vis[j]) break ;
        at[j] = lim[j] = i ;
        for(t = 1; t <= N; t ++)
            if(p[j][t]) lim[t] = min(lim[t], i+D) ;
        memset(sum, 0, sizeof(sum)) ;
        for(t = 1; t <= N; t ++)
            sum[lim[t]] ++ ;
        for(t = 1; t <= N; t ++)
            if((sum[t]+=sum[t-1]) > t) return 0 ;
        for(t = i+1; t <= N; t ++)
            if(sum[t] == t) break ;
        for(j = 1; j <= N; j ++)
            vis[j] = (!at[j] && lim[j] <= t) ;
    }
    return 1 ;
}

int main()
{
    int i, j ;
    int l1, r1, mid ;
    scanf("%d", &N) ;
    for(i = 1; i <= N; i ++)
        scanf("%d %d", &kn[i].l, &kn[i].r), kn[i].nm = i ;
    sort(kn+1, kn+1+N) ;
    for(i = 1; i <= N; i ++)
        for(j = i+1; j <= N; j ++)
            p[i][j] = p[j][i] = (kn[i].r >= kn[j].l) ;
    l1 = 0, r1 = N ;
    while(l1 <= r1)
    {
        mid = (l1+r1)/2 ;
        if(check(mid)) r1 = mid-1 ;
        else l1 = mid+1 ;
    }
    //printf("%d\n", l1) ;
    check(l1) ;
    for(i = 1; i <= N; i ++)
        num[at[i]] = kn[i].nm ;
    for(i = 1; i <= N; i ++)
        printf("%d%c", num[i], i==N?'\n':' ') ;
    //system("pause") ;
    return 0 ;
}
