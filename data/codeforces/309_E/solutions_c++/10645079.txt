#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
using namespace std;
const int SIZEN=2010;
class Seg{
public:
	int l,r,id;
};
bool operator < (const Seg &a,const Seg &b){
	return a.r<b.r;
}
int N;
Seg A[SIZEN];
int ans[SIZEN];
bool check(int d){
	static int deadline[SIZEN];
	static bool book[SIZEN];
	for(int i=0;i<N;i++) deadline[i]=N-1,book[i]=false;
	for(int i=0;i<N;i++){
		static int cnt[SIZEN];
		memset(cnt,0,sizeof(cnt));
		for(int k=0;k<N;k++){
			if(!book[k]) cnt[deadline[k]]++;
		}
		if(cnt[i]>1) return false;
		int r=N-1;
		for(int k=i,s=0;k<N;k++){
			s+=cnt[k];
			if(s==k-i+1){
				r=k;
				break;
			}
		}
		ans[i]=-1;
		for(int k=0;k<N;k++){
			if(!book[k]&&deadline[k]<=r){
				ans[i]=k;
				break;
			}
		}
		book[ans[i]]=true;
		for(int k=0;k<N;k++){
			if(!book[k]&&A[k].l<=A[ans[i]].r&&i+d<deadline[k]){
				if(d==0) return false;
				deadline[k]=i+d;
			}
		}
	}
	return true;
}
void work(void){
	int l=0,r=N;
	while(l<r){
		int mid=(l+r)/2;
		if(!check(mid)) l=mid+1;
		else r=mid;
	}
	check(l);
	for(int i=0;i<N;i++) printf("%d ",A[ans[i]].id+1);
	printf("\n");
}
void read(void){
	scanf("%d",&N);
	for(int i=0;i<N;i++){
		scanf("%d%d",&A[i].l,&A[i].r);
		A[i].id=i;
	}
	sort(A,A+N);
}
int main(){
	read();
	work();
	return 0;
}
