#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#define N 4005
#define LL long long
#define oo (1<<30)
using namespace std;
int mx[N],S[N];
int n,l[N],r[N],a[N];
bool inter(int i,int j)
{
  if(l[i]>=l[j]&&l[i]<=r[j]) return 1;
  if(r[i]>=l[j]&&r[i]<=r[j]) return 1;
    if(l[j]>=l[i]&&l[j]<=r[i]) return 1;
    if(r[j]>=l[i]&&r[j]<=r[i]) return 1;
  return 0;
}
bool check(int d)
{
  int i,j,p,q; r[0]=oo;
  for(i=1;i<=n;i++) mx[i]=n;
  for(i=1;i<=n;i++){
    for(j=1;j<=n;j++) S[j]=0;
    for(j=1;j<=n;j++)
      if(mx[j]>0) S[mx[j]]++;
        for(j=1;j<=n;j++)
      S[j]=S[j]+S[j-1];
    for(j=i;j<=n;j++)
      if(S[j]>j-i+1) return 0;
    for(j=i;j<=n;j++)
            if(S[j]==j-i+1) break;
    q=j,p=0;
    for(j=1;j<=n;j++)
      if(mx[j]>0&&mx[j]<=q&&r[j]<r[p])
                p=j;
    mx[p]=-1,a[i]=p;
    for(j=1;j<=n;j++)
      if(mx[j]>0&&inter(p,j))
        mx[j]=min(mx[j],i+d);
    }
  return 1;
}
int main()
{
  int i,ll,rr,mid;
  scanf("%d",&n);
  for(i=1;i<=n;i++)
    scanf("%d %d",&l[i],&r[i]);
  ll=0,rr=n-1;
  while(rr-ll>1){
    mid=(ll+rr)>>1;
    if(check(mid)) rr=mid;
    else ll=mid;
    }
  check(rr);
  for(i=1;i<=n;i++)
    printf("%d ",a[i]);
  return 0;
}
