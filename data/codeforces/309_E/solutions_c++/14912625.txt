#include<stdio.h>
#include<string.h>
#include<algorithm>
#define N 2100
using namespace std;
struct node
{
	int l,r;
	friend bool operator <(const node &a,const node &b)
	{
		return a.r>b.r;
	}
}a[N];
int n,p[N],lim[N],hash[N];
bool vis[N];
bool judge(int x,int y)
{
	return (a[x].l<=a[y].l&&a[y].l<=a[x].r)||(a[x].l<=a[y].r&&a[y].r<=a[x].r)||(a[y].l<=a[x].l&&a[x].l<=a[y].r);
}
bool calc(int mid)
{
	int i,j,k,t;
	memset(vis,0,sizeof(vis[0])*(n+1));
	memset(lim,0x3f,sizeof(lim[0])*(n+1));
	for(i=1;i<=n;i++)
	{
		memset(hash,0,sizeof(hash[0])*(n+1));
		for(j=1;j<=n;j++)
		{
			if(!vis[j]&&lim[j]<=n)
			{
				hash[lim[j]]++;
			}
		}
		for(j=1;j<=n;j++)
			hash[j]+=hash[j-1];
		for(j=i,t=0;j<=n;j++)
		{
			if(t==0&&hash[j]==j-i+1)
				t=j;
			else if(hash[j]>j-i+1)
				return 0;
		}
		if(t==0)	t=0x3f3f3f3f;
		for(j=1,k=0;j<=n;j++)
		{
			if(!vis[j]&&lim[j]<=t&&(k==0||a[j].r<a[k].r))
				k=j;
		}
		p[i]=k;
		vis[k]=1;
		for(j=1;j<=n;j++)
		{
			if(!vis[j]&&judge(j,k)&&lim[j]>i+mid)
				lim[j]=i+mid;
		}
	}
	return 1;
}
int main()
{
	int i,l,r,mid;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	{
		scanf("%d%d",&a[i].l,&a[i].r);
	}
	l=0,r=n;
	while(l<=r)
	{
		mid=l+r>>1;
		if(calc(mid))
			r=mid-1;
		else
			l=mid+1;
	}
	calc(l);
	for(i=1;i<=n;i++)
	{
		printf("%d ",p[i]);
	}
	return 0;
}
