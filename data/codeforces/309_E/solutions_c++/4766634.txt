#include <cstdio>
#include <algorithm>
#include <map>
#include <cstdlib>
#include <cmath>
#include <string.h>
#include <vector>
#define x first
#define y second
#define pb push_back
#define mp make_pair
using namespace std;
typedef long long LL;
typedef double ld;
const int NMax= 2010;
bool cmp(pair<int,int>a,pair<int,int>b){return a.y<b.y;}
int N;
pair<int,int>A[NMax];
bool can[NMax];//
int limit[NMax],ret[NMax];
int cross(pair<int,int> a,pair<int,int> b)  {
    if(a==b) return 0;
    if(a.x<=b.y&&a.x>=b.x) return 1;
    if(a.y<=b.y&&a.y>=b.x) return 1;
    if(b.x<=a.y&&b.x>=a.x) return 1;
    if(b.y<=a.y&&b.y>=a.x) return 1;
    return 0;
}
int sum[NMax],C[NMax][NMax];
int calc(int a) {
    memset(can,1,sizeof(can));
    memset(ret,-1,sizeof(ret));
    for(int i=1;i<=N;i++) {
        can[i]=1;
        limit[i]=N;
    }
    for(int i=1;i<=N;i++) {
        memset(sum,0,sizeof(sum));
        int choose=-1;
        for(int j=1;j<=N;j++)
            if(can[j]&&ret[j]==-1&&(choose==-1||A[j].y<A[choose].y)){
                choose=j;
            }
        ret[choose]=i;
        for(int j=1;j<=N;j++) if(ret[j]==-1&&C[choose][j]) {
            limit[j]=min(limit[j],i+a);
        }
        for(int j=1;j<=N;j++)if(ret[j]==-1)
            sum[limit[j]]++;
        for(int j=1;j<=N+1;j++)sum[j]+=sum[j-1];
        for(int j=i+1;j<=N;j++)
            if(j-i<sum[j])
                return 0;
        int go=N+1;
        for(int j=i+1;j<=N;j++) {
            if(j-i==sum[j]) {
                go=j;
                break;
            }
        }
        for(int j=1;j<=N;j++)can[j]=(ret[j]==-1&&limit[j]<=go); 
    }
    return 1;
}
int Ans[NMax];
int main()
{
    scanf("%d",&N);
    for(int i=1;i<=N;i++)scanf("%d%d",&A[i].x,&A[i].y);
    //sort(A+1,A+N+1,cmp);
    for(int i=1;i<=N;i++)for(int j=1;j<=N;j++)if(cross(A[i],A[j]))C[i][j]=C[j][i]=1;
    int l=1,r=N-1;
    while(l<r) {
        if(l+1==r) break;
        int mid=(l+r)>>1;
        if(calc(mid)) r=mid;
        else l=mid;
    }
    calc(r);
    for(int i=1;i<=N;i++)  for(int j=1;j<=N;j++)if(ret[j]==i){
        printf("%d ",j);
        break;
    }
    puts("");
    return 0;
}