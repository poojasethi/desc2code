#include <stdio.h>
#include <string.h>

#define if if (
#define then )
#define do )
#define for for (
#define while while (
#define begin {
#define end }

char ch;
inline void read(int &x)
begin
	x=0;ch=getchar();
	while ch<=32 do ch=getchar();
	while ch>32 do x=x*10+ch-48,ch=getchar();
end;

template <class T>
inline T min(T a,T b){return a<b?a:b;}

#define MAXN 2005

int n;
int L[MAXN],R[MAXN];
bool a[MAXN][MAXN];
int ans[MAXN];

inline bool solve(int x)
begin
	static int R[MAXN];
	static int cnt[MAXN];
	static bool u[MAXN];
	int i,j;
	for i=1;i<=n;i++ do begin
		R[i]=n;
	end;
	memset(cnt,0,sizeof(cnt));
	memset(u,0,sizeof(u));
	cnt[n]=n;
	for i=1;i<=n;i++ do begin
		int t=i-1;
		for j=i;j<=n;j++ do begin
			t+=cnt[j];
			if t>=j then break;
		end;
		if t>j then return false;
		int mi=0x3f3f3f3f,id=0;
		for j=1;j<=n;j++ do begin
			if u[j] || R[j]>t then continue;
			if ::R[j]<mi then mi=::R[j],id=j;
		end;
		--cnt[R[id]];
		++cnt[R[id]=i];
		u[id]=1;
		ans[i]=id;
		for j=1;j<=n;j++ do begin
			if a[id][j] then begin
				--cnt[R[j]];
				R[j]=min(R[j],i+x);
				++cnt[R[j]];
			end;
		end;
	end;
	return true;
end;

int main()
begin
	read(n);
	int i,j;
	for i=1;i<=n;i++ do begin
		read(L[i]);read(R[i]);
		for j=1;j<i;j++ do begin
			if R[j]<L[i] || R[i]<L[j] then continue;
			a[i][j]=a[j][i]=1;
		end;
	end;
	int l=0,r=n-1;
	while l<r do begin
		int mid=(l+r)>>1;
		if !solve(mid) then l=mid+1; else r=mid;
	end;
	solve(l);
	for i=1;i<=n;i++ do begin
		printf("%d ",ans[i]);
	end;
end