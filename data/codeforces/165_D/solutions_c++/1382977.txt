#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int n,m,c;
vector<pair<int,int> > next[100001];
int e2c[100001][2];
int n2c[100001][2];
int d[100001];

int nc;
vector<vector<int> > bits;

void build(pair<int,int> e, int p) {
	e2c[e.second][0]=nc;
	e2c[e.second][1]=bits[nc].size();
	n2c[e.first][0]=nc;
	n2c[e.first][1]=bits[nc].size();
	bits[nc].push_back(0);
	int id=e.first;
	d[id]=1+d[p];
	for (int i=0;i<next[id].size();i++) {
		int id2=next[id][i].first;
		if (id2==c || id2==p) continue;
		build(next[id][i],id);
	}
}

void add(vector<int> &bit, int id, int v) {
	for (int x=id;x<bit.size();x+=x&-x) bit[x]+=v;
}

int get(vector<int> &bit, int id) {
	int r=0;
	for (int x=id;x>0;x-=x&-x) r+=bit[x];
	return r;
}

int main() {
	scanf("%d",&n);
	int t,a,b;
	for (int i=1;i<=n-1;i++) {
		scanf("%d %d",&a,&b);
		next[a].push_back(make_pair(b,i));
		next[b].push_back(make_pair(a,i));
	}
	nc=0;
	for (int i=1;i<=n;i++) {
		if (next[i].size()>nc) {
			nc=next[i].size();
			c=i;
		}
	}
	d[c]=0;
	nc=0;
	for (int i=0;i<next[c].size();i++) {
		vector<int> empty;
		empty.push_back(0);
		bits.push_back(empty);
		build(next[c][i],c);
		nc++;
	}
	scanf("%d",&m);
	for (int i=0;i<m;i++) {
		scanf("%d",&t);
		if (t==1) {
			scanf("%d",&a);
			add(bits[e2c[a][0]],e2c[a][1],-1);
		} else if (t==2) {
			scanf("%d",&a);
			add(bits[e2c[a][0]],e2c[a][1],1);
		} else {
			scanf("%d %d",&a,&b);
			int c1=n2c[a][0], c2=n2c[b][0];
			int w1=get(bits[c1],n2c[a][1]);
			int w2=get(bits[c2],n2c[b][1]);
			if (c1==c2) {
				if (abs(w1-w2)==0) printf("%d\n",abs(d[a]-d[b]));
				else printf("-1\n");
			} else {
				if (w1==0 && w2==0) printf("%d\n",d[a]+d[b]);
				else printf("-1\n");
			}
		}
	}
    return 0;
}
