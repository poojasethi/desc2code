#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;

int n, ed[100005][2], x, y, g[100005], r, h[100005], e[200005][2], ew, d[100005], id[100005], iw, f[100005], c[100005], m, z;

void adde(int x, int y) {
	e[ew][0] =y;
	e[ew][1] = h[x];
	h[x] = ew++;
}

void add(int x, int a) {
	for (int i=x; i<=iw; i+=i&(-i)) c[i] += a;
}
int sum(int x) {
	int ret = 0;
	for (int i=x; i>0; i-=i&(-i)) ret += c[i];
	return ret;
}

int main() {
	scanf("%d", &n);
	memset(g, 0, sizeof(g));
	r = 1;
	memset(h, -1, sizeof(h));
	ew = 0;
	for (int i=1; i<n; ++i) {
		scanf("%d%d", &ed[i][0], &ed[i][1]);
		adde(ed[i][0], ed[i][1]);
		adde(ed[i][1], ed[i][0]);
		g[ed[i][0]]++;
		g[ed[i][1]]++;
		if (g[ed[i][0]] > 2) r = ed[i][0];
		if (g[ed[i][1]] > 2) r = ed[i][1];
	}
	memset(d, -1, sizeof(d));
	d[r] = 0;
	iw = 0;
	for (int i=h[r]; i!=-1; i=e[i][1]) {
		x = e[i][0];
		d[x] = 1;
		iw++;
		id[x] = iw;
		f[x] = iw;
		while (g[x] > 1) {
			for (int j=h[x]; j!=-1; j=e[j][1]) {
				y = e[j][0];
				if (d[y] == -1) {
					d[y] = d[x] + 1;
					iw++;
					id[y] = iw;
					f[y] = f[x];
					x = y;
					break;
				}
			}
		}
	}
	memset(c, 0, sizeof(c));
	scanf("%d", &m);
	while (m--) {
		scanf("%d", &z);
		if (z == 1) {
			scanf("%d", &x);
			if (d[ed[x][0]] > d[ed[x][1]]) x = ed[x][0];
			else x = ed[x][1];
			add(id[x], -1);
		}
		else if (z == 2) {
			scanf("%d", &x);
			if (d[ed[x][0]] > d[ed[x][1]]) x = ed[x][0];
			else x = ed[x][1];
			add(id[x], 1);
		}
		else {
			scanf("%d%d", &x, &y);
			if (d[x] > d[y]) swap(x, y);
			if (x == y) printf("0\n");
			else if (x == r) {
				if (sum(id[y])-sum(f[y]-1) == 0) printf("%d\n", id[y]-f[y]+1);
				else printf("-1\n");
			}
			else if (f[x] == f[y]) {
				if (sum(id[y])-sum(id[x]) == 0) printf("%d\n", id[y]-id[x]);
				else printf("-1\n");
			}
			else {
				if (sum(id[x])-sum(f[x]-1) == 0 && sum(id[y])-sum(f[y]-1) == 0) printf("%d\n", id[x]-f[x]+1+id[y]-f[y]+1);
				else printf("-1\n");
			}
		}
	}
	
	return 0;
}
