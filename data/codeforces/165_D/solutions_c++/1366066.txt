#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <iostream>
#include <algorithm>
//#include <sys/time.h>
using namespace std;
#define li        long long int
#define rep(i,to) for(li i=0;i<((li)(to));++i)
#define pb        push_back
#define sz(v)     ((li)(v).size())
#define bit(n)    (1ll<<(li)(n))
#define all(vec)  (vec).begin(),(vec).end()
#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define MP        make_pair
#define F         first
#define S         second


#define MAX 100500
vector<pair<li,li> > E[MAX+5];
li line[MAX+5];
li cnt=MAX;
li con[MAX+5];
li depth[MAX+5];
li INDEX[MAX+5];

void make(li pos,li parent=-1,li boss=0,li d=0){
	con[pos]=cnt--;
	line[con[pos]]=boss;
	depth[con[pos]]=d++;
	rep(i,sz(E[pos]))if(E[pos][i].F!=parent){
		if(parent==-1) boss++;
		INDEX[E[pos][i].S]=cnt;
		make(E[pos][i].F,pos,boss,d);
	}
}

int main(){
	li n,m;
	cin>>n;
	rep(i,n-1){
		li a,b;
		cin>>a>>b; a--; b--;
		E[a].pb(MP(b,i));
		E[b].pb(MP(a,i));
	}
	rep(i,n){
		if(sz(E[i])<=2 && i+1!=n) continue;
		make(i);
		break;
	}
	cin>>m;
	set<li> S;
	S.insert(MAX+1);
	rep(i,m){
		li type,a,b;
		cin>>type;
		if(type==3){
			cin>>a>>b; 
			a=con[a-1];
			b=con[b-1];
			if(b<a) swap(a,b);
			if(line[a]==line[b]){
				if(*S.lower_bound(a)<b) cout<<-1<<endl;
				else cout<<depth[a]-depth[b]<<endl;
			}else{
				bool ok=true;
				if(*S.lower_bound(a)<a+depth[a]) ok=false;
				if(*S.lower_bound(b)<b+depth[b]) ok=false;
				if(ok) cout<<depth[a]+depth[b]<<endl;
				else cout<<-1<<endl;
			}
		}else{
			cin>>a;
			a=INDEX[a-1];
			if(type==1) S.erase(a);
			else S.insert(a);
		}
	}
}
