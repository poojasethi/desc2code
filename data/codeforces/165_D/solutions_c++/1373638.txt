#include <cstdio>
#include <iostream>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <cstring>
#define ci const int&
#define lowbit(x) ((x)&(-(x)))
#define rep(i,n) for(int i=0;i<n;++i)
#define Maxn 1002012//�����뷶Χ
#define Maxm //�����뷶Χ

using namespace std;

int H[Maxn],Nxt[Maxn],B[Maxn],Arr[Maxn],Pos[Maxn]
,Epos[Maxn],Deg[Maxn],C[Maxn],Vpos[Maxn],D[Maxn];
bool Used[Maxn];
int S,n,num,Num,Color,m;
int T[4*Maxn];

inline void Edge(ci x,ci y){
	B[++num]=y;
	if(!H[x])H[x]=num;
	else Nxt[num]=Nxt[H[x]],Nxt[H[x]]=num;
}
inline void Add(ci x,ci y){Edge(x,y);Edge(y,x);}

inline void travel(ci x,ci depth){
	D[x]=depth;Vpos[x]=++Num;Used[x]=1;C[x]=Color;
	for(int i=H[x];i;i=Nxt[i])if(!Used[B[i]]){
		Epos[(i+1)>>1]=++Num;
		travel(B[i],depth+1);
	}
}

inline void Travel(ci x){
	Used[x]=1;
	for(int i=H[x];i;i=Nxt[i]){
		Pos[++Color]=++Num;
		Epos[(i+1)>>1]=++Num;
		travel(B[i],1);
	}
}

inline void upd(int x,ci p){
for(;x<=Num;x+=lowbit(x))T[x]+=p;
}
inline int sum(int x){
	int ans=0;
	for(;x;x-=lowbit(x))ans+=T[x];
	return ans;
}

int main(){
	//freopen("D.in","r",stdin);freopen("D.out","w",stdout);
	scanf("%d",&n);
	int x,y;rep(i,n-1)scanf("%d%d",&x,&y),--x,--y,Add(x,y),++Deg[x],++Deg[y];
	
	S=0;
	rep(i,n)if(Deg[i]>2)S=i;
	Travel(S);
	
	scanf("%d",&m);
	rep(i,m){
		scanf("%d",&x);
		if(x==1){
			scanf("%d",&x);
			upd(Epos[x],-1);
		}else if(x==2){
			scanf("%d",&x);
			upd(Epos[x],1);		
		}
		else{
			scanf("%d%d",&x,&y);--x;--y; 
			if(y==S)swap(x,y);
			if(x==S){
				if(sum(Vpos[y])-sum(Pos[C[y]])>0)printf("-1\n");
				else printf("%d\n",D[y]);
			}
			else if(C[x]==C[y]){
				if(Vpos[x]<Vpos[y])swap(x,y);
				if(sum(Vpos[x])-sum(Vpos[y])>0)printf("-1\n");
				else printf("%d\n",abs(D[x]-D[y]));
			}
			else {
				if(sum(Vpos[x])-sum(Pos[C[x]]-1)+sum(Vpos[y])-sum(Pos[C[y]]-1)>0)printf("-1\n");
				else printf("%d\n",D[x]+D[y]);
			}
		}
	}
	//fclose(stdin);fclose(stdout);
	return 0;
}