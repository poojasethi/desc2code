#include <cstdio>
#include <cstring>
#include <algorithm>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define CLR(a, x) memset(a, x, sizeof(a))
#define LLD long long
#define N 100005
using namespace std;

int n, m, rt, cur, nq, ed, op, x, y, w, z, pv, nxt, ret;
int l[N], len[N], qd[N+N], qn[N+N], A[N+N];
int a[N], b[N], *B[N], ex[N], ey[N], d[N];

void bd(int x, int y){
	qd[++ed] = y, qn[ed] = l[x], l[x] = ed;
}

int main(){
	scanf("%d", &n);
	rt = 1;
	FOR(i,1,n){
		scanf("%d%d", &ex[i], &ey[i]);
		bd(ex[i], ey[i]);
		bd(ey[i], ex[i]);
		d[ex[i]]++, d[ey[i]]++;
	}
	
	FOE(i,1,n)
	if (d[i] > 2) rt = i;
	
	m = cur = 0;
	for (int i=l[rt]; i; i=qn[i]){
		pv = rt;
		len[m] = 0;
		x = qd[i];
		B[m] = &A[cur];

		while (1){
			a[x] = m;
			b[x] = ++len[m];
			nxt = -1;
			for (int j=l[x]; j; j=qn[j])
			if (qd[j] != pv) nxt = qd[j];
			if (nxt == -1) break;
			pv = x;
			x = nxt;
		}
		cur += len[m++] + 1;
	}
	
	
	scanf("%d", &nq);
	while (nq--){
		scanf("%d", &op);
		if (op == 1 || op == 2){
			scanf("%d", &z);
			w = a[ex[z]] | a[ey[z]];
			x = b[ex[z]];
			y = b[ey[z]];
			if (x > y) swap(x, y);
			for (int i=y; i<=len[w]; i+=i&-i) B[w][i] += (op == 1 ? -1 : 1);
		}
		else{
			scanf("%d%d", &x, &y);
			if (x == rt || y == rt || a[x] == a[y]){
				w = a[x] | a[y];
				x = b[x];
				y = b[y];
				if (x > y) swap(x, y);
				
				ret = 0;
				for (int i=y; i; i-=i&-i) ret += B[w][i];
				for (int i=x; i; i-=i&-i) ret -= B[w][i];
				if (!ret) printf("%d\n", y - x);
				else puts("-1");
			}
			else{
				ret = 0;
				w = a[x];
				x = b[x];
				for (int i=x; i; i-=i&-i) ret += B[w][i];
				w = a[y];
				y = b[y];
				for (int i=y; i; i-=i&-i) ret += B[w][i];
				if (!ret) printf("%d\n", x + y);
				else puts("-1");
			}
		}
	}
	return 0;
}
