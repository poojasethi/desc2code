#include <cstdio>
#include <algorithm>
#define N 200005
using namespace std;
int a,b,c,d,e,g,h,i,j,k,l,m,n,sum,tot;
int f[N],dis[N],T[N],fa[N],top[N],size[N],son[N];
int wa[N],ne[N],la[N];
void make(int a,int b){
	wa[++tot]=b;ne[tot]=la[a];la[a]=tot;
	wa[++tot]=a;ne[tot]=la[b];la[b]=tot;
}
void ch(int a,int b,int c){
	if(dis[a]<dis[b])a=b;
	for(i=T[a];i<=n;i+=i&(-i))f[i]+=c*2-1;
}
int calc(int a,int b){
	int s=0;
	for(i=a;i;i-=i&(-i))s-=f[i];
	for(i=b;i;i-=i&(-i))s+=f[i];
	return s;
}
void dfs(int x){
	size[x]=1;
	for(int i=la[x];i;i=ne[i])
	if(wa[i]!=fa[x]){
		fa[wa[i]]=x;
		dis[wa[i]]=dis[x]+1;
		dfs(wa[i]);
		size[x]+=size[wa[i]];
		if(size[wa[i]]>son[x])son[x]=wa[i];
	}
	
}
void dfs2(int x,int Top){
	top[x]=Top;
	T[x]=++sum;
	if(son[x])dfs2(son[x],Top);
	for(int i=la[x];i;i=ne[i])
	if(wa[i]!=fa[x]&&wa[i]!=son[x]){
		dfs2(wa[i],wa[i]);
	}
}
int main(){
	scanf("%d",&n);
	for(i=1;i<n;i++){
		scanf("%d%d",&a,&b);
		make(a,b);
	}
	dfs(1);
	dfs2(1,1);
	scanf("%d",&m);
	for(;m;m--){
		scanf("%d",&a);
		if(a==1){
			scanf("%d",&b);
			ch(wa[b*2-1],wa[b*2],0);
		}
		else if(a==2){
			scanf("%d",&b);
			ch(wa[b*2-1],wa[b*2],1);
		}
		else{
			scanf("%d%d",&c,&d);h=0;a=c;b=d;
			for(;top[a]!=top[b];){
				if(dis[top[a]]<dis[top[b]])swap(a,b);
				h=h+calc(T[top[a]]-1,T[a]);
				a=fa[top[a]];
			}
			if(dis[a]>dis[b])swap(a,b);
			h=h+calc(T[a],T[b]);
			if(h)printf("-1\n");
			else printf("%d\n",dis[c]+dis[d]-dis[a]*2);
		}
	}
	return 0;
}