#include <iostream>
#include <cstdio>
#include <vector>
using namespace std;

int n;
vector<int> v[100005];
int root;
int u[100005], vv[100005];
vector<int> f[100005];
pair<int, int> w[100005];
int m;
int id, rib, v1, v2;

void inc(vector<int> &f, int ind, int delta) {
	for (; ind < f.size(); ind = ind | (ind + 1)) {
		f[ind] += delta;
	}
}

int sum(vector<int> &f, int ind) {
	int res = 0;

	for (; ind >= 0; ind = (ind & (ind + 1)) - 1) {
		res += f[ind];
	}

	return res;
}

int main() {

#ifdef RESH_PROJECT
    freopen("input.txt", "rt", stdin);
    freopen("output.txt", "wt", stdout);
#endif

	cin >> n;
	for (int i = 1; i <= n - 1; i++) {
		int a, b;

		scanf("%d%d", &a, &b);
		v[a].push_back(b);
		v[b].push_back(a);
		u[i] = a;
		vv[i] = b;
	}
	root = 1;
	for (int i = 1; i <= n; i++) {
		if (v[i].size() > v[root].size()) root = i;
	}
	f[0].push_back(0);
	w[root] = make_pair(0, 0);
	for (int i = 0; i < v[root].size(); i++) {
		int p, c;

		f[i + 1].push_back(0);
		p = root;
		c = v[root][i];
		while (1) {
			int old;

			w[c] = make_pair(i + 1, f[i + 1].size());
			f[i + 1].push_back(0);
			if (v[c].size() == 1) break;
			old = c;
			c = (v[c][0] == p)? v[c][1] : v[c][0];
			p = old;
		}
	}
	cin >> m;
	for (int i = 0; i < m; i++) {
		scanf("%d", &id);
		if (id == 3) {
			scanf("%d%d", &v1, &v2);
			if (w[v2].second < w[v1].second) swap(v1, v2);
			if (w[v1].first == w[v2].first) {
				if (sum(f[w[v2].first], w[v2].second) - sum(f[w[v1].first], w[v1].second) > 0) {
					printf("-1\n");
				} else {
					printf("%d\n", w[v2].second - w[v1].second);
				}
			} else {
				if (sum(f[w[v1].first], w[v1].second) + sum(f[w[v2].first], w[v2].second) > 0) {
					printf("-1\n");
				} else {
					printf("%d\n", w[v1].second + w[v2].second);
				}
			}
		} else {
			scanf("%d", &rib);
			v1 = u[rib];
			v2 = vv[rib];
			if (w[v2].second < w[v1].second) swap(v1, v2);
			inc(f[w[v2].first], w[v2].second, (id == 1)? -1 : 1);
		}
	}

    return 0;
}
