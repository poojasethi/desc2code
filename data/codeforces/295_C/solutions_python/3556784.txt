#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import sys

MAXN = 110
MOD = 10 ** 9 + 7
INF = MOD

def MakeCom():
	global com
	com = [[1]]
	for i in xrange(1, MAXN + 1):
		line = [1]
		for j in xrange(1, i):
			line.append((com[-1][j - 1] + com[-1][j]) % MOD)
		line.append(1)
		com.append(line)

def ReadIn():
	data = [int(x) for x in sys.stdin.read().split()]
	offset = 0
	while offset < len(data):
		n, cap = data[offset : offset + 2]
		offset += 2
		friends = [0] * 2
		for x in data[offset : offset + n]:
			friends[x / 50 - 1] += 1
		offset += n
		cap /= 50
		yield cap, tuple(friends)

def Solve(cap, friends):
	f = {friends : 1}
	for rides in xrange(sum(friends) * 5):
		if rides & 1 and friends in f:
			print rides
			print f[friends]
			return
		pf, f = f, {}
		for remain in pf:
			for x in xrange(remain[0] + 1):
				if x > cap: break
				for y in xrange(remain[1] + 1):
					if x + y < 1: continue
					if x + 2 * y > cap: break
					nextRem = tuple(total - left + move
							for total, left, move in zip(friends, remain, (x, y)))
					f[nextRem] = (f.get(nextRem, 0) + com[remain[0]][x] * com[remain[1]][y] * pf[remain]) % MOD
	
	print -1
	print 0


if __name__ == '__main__':
	MakeCom()
	for cap, friends in ReadIn():
		Solve(cap, friends)
