#include <cstdio>
int dp[250][60][60];
int comb[60][60];
const int mod = 1000000007;
void add(int &a, int b, int c, int d) {
	a = ((long long)b * c * d % mod + a) % mod;
}
int main() {
	int n, k, a[55], W = 0, L = 0;
	scanf("%d%d", &n, &k);
	for (int i = 0; i < n; i++) {
		scanf("%d", &a[i]);
		if (a[i] == 100) ++W;
		if (a[i] == 50) ++L;
	}
	if (n <= 2) {
		int c = 0;
		for (int i = 0; i < n; i++) c += a[i];
		if (c > k) {
			printf("-1\n0\n");
		} else {
			printf("1\n1\n");
		}
		return 0;
	}
	for (int i = 0; i < 60; i++) {
		comb[i][0] = comb[i][i] = 1;
		for (int j = 1; j < i; j++) {
			comb[i][j] = comb[i-1][j-1] + comb[i-1][j];
			comb[i][j] %= mod;
		}
	}
	dp[0][W][L] = 1;
	for (int i = 0; i < 200; i++) {
		int t = i & 1;
		if (t && dp[i][0][0]) {
			printf("%d\n", i);
			printf("%d\n", dp[i][0][0]);
			return 0;
		}
		for (int w = 0; w <= W; w++) {
			for (int l = 0; l <= L; l++) {
				if (t) {
					for (int x = 0; x <= W - w; x++) {
						for (int y = 0; y <= L - l; y++) {
							if (!x && !y) continue;
							if (100 * x + 50 * y > k) break;
							add(dp[i+1][w+x][l+y], dp[i][w][l], comb[W-w][x], comb[L-l][y]);
						}
					}
				} else {
					for (int x = 0; x <= w; x++) {
						for (int y = 0; y <= l; y++) {
							if (!x && !y) continue;
							if (100 * x + 50 * y > k) break;
							add(dp[i+1][w-x][l-y], dp[i][w][l], comb[w][x], comb[l][y]);
						}
					}
				}
			}
		}
	}
	printf("-1\n0\n");
	return 0;
}
