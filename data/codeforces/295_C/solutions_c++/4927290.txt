#include <algorithm>
#include <stdio.h>
#define  maxn      52
#define  mod       1000000007
using    namespace std;
typedef  long long LL;

LL n,m,a,b;
LL comb[maxn][maxn];
LL dp[4*maxn][maxn][maxn];
bool mark[4*maxn][maxn][maxn];

int main()
{
  scanf("%I64d%I64d",&n,&m);
  for(LL i=0,x ; i<n ; i++)
  {
    scanf("%I64d",&x);
    if(x==50) a++;
    else      b++;
  }
  for(LL i=0 ; i<=n ; i++)
    comb[i][0]=1;
  for(LL i=1 ; i<=n ; i++)
    for(LL j=1 ; j<=i ; j++)
      comb[i][j]=(comb[i-1][j]+comb[i-1][j-1])%mod;
  dp[0][a][b]=1;
  mark[0][a][b]=true;
  bool ans=false;
  for(LL t=0 ; t<=4*n && !ans ; t++)
    for(LL i=0 ; i<=a && !ans ; i++)
      for(LL j=0 ; j<=b && !ans ; j++)
      {
        if(!mark[t][i][j]) continue;
        if(t%2==1 && i==a && j==b && dp[t][a][b])
        {
          printf("%I64d\n%I64d\n",t,dp[t][a][b]);
          ans=true;
          break;
        }
        for(LL i2=0 ; i2<=i ; i2++)
          for(LL j2=0 ; j2<=j ; j2++)
            if((i2+j2) && i2*50+j2*100<=m)
            {
              LL mult=(comb[i][i2]*comb[j][j2])%mod;
              dp[t+1][a-i+i2][b-j+j2]=(dp[t+1][a-i+i2][b-j+j2]+(mult*dp[t][i][j])%mod)%mod;
              mark[t+1][a-i+i2][b-j+j2]=true;
            }
      }
  if(!ans)  printf("-1\n0\n");
  return 0;
}
