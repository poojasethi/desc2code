#include <iostream>
#include<cstring>
#include<cstdio>
#include <algorithm>
#include<queue>
#define LL long long
#define MIN(x,y) (x<y?x:y)
using namespace std;
const int mod=1000000007;
struct inf
{
	int w,x,y;
}p;
int n,m,k,dp[2][55][55];
bool bo[2][55][55];
LL num[2][55][55],c[1010][1010];
void search()
{
	queue<inf >Q;
	int i,j,w,x,y,ww,xx,yy;
	dp[0][n][m]=1;
    num[0][n][m]=1;
	Q.push((inf){0,n,m});
	while(!Q.empty())
	{
		p=Q.front();
		Q.pop();
		w=p.w; x=p.x; y=p.y;
		for(i=0;i<=x;i++)
			for(j=0;j<=y;j++)
			{
				if(i==0&&j==0) continue;
				if(i*50+j*100>k) break;
				ww=1-w,xx=n-x+i,yy=m-y+j;
				if(!dp[ww][xx][yy])
				{
					dp[ww][xx][yy]=dp[w][x][y]+1;
					Q.push((inf){ww,xx,yy});
				}
				if(dp[ww][xx][yy]==dp[w][x][y]+1)
					num[ww][xx][yy]=(num[ww][xx][yy]+(num[w][x][y]*c[x][i]%mod)*c[y][j]%mod)%mod;
			}
	}
}
int main()
{
    int i,j,t,x;
    for(i=0;i<=1000;i++) c[i][0]=1;
    for(i=1;i<=1000;i++)
    	for(j=1;j<=i;j++)
    		c[i][j]=(c[i-1][j]+c[i-1][j-1])%mod;
    scanf("%d%d",&t,&k);
    for(n=m=i=0;i<t;i++)
    {
    	scanf("%d",&x);
    	if(x==50) n++;
    	else m++;
    }
    search();
    if(!dp[1][n][m])
    {
    	puts("-1");
    	puts("0");
    }else
    {
    	printf("%d\n",dp[1][n][m]-1);
    	printf("%I64d\n",num[1][n][m]);
    }
}
