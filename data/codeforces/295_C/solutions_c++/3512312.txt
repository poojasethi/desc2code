#include <cmath>
#include <cstdio>
#include <string>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <ctime>
#include <cassert>
#include <queue>
#include <vector>
#include <list>
#include <stack>
#include <map>
#include <set>
#include <iomanip>
#include <sstream>
#include <numeric>
using namespace std;
int f[55][55][2];
int N,M,n,m,i,j,x,y,z,nx,ny,nz,step;
long long mod=1000000007;
long long d[55][55][2],C[55][55],temp;
struct rec{int x,y,z;};
queue<rec> q;
int main()
{
	cin>>N>>M;
	for(i=1;i<=N;i++)
	{
		cin>>j;
		if(j==50) n++; else m++;
	}
	for(i=0;i<=N;++i) C[i][0]=1;
	for(i=1;i<=N;++i)
		for(j=1;j<=i;++j)
			C[i][j]=(C[i-1][j-1]+C[i-1][j])%mod;
	f[0][0][1]=d[0][0][1]=1;
	q.push((rec){0,0,1});
	while(q.size())
	{
		x=q.front().x;
		y=q.front().y;
		z=q.front().z;
		q.pop();
		step=f[x][y][z];
		temp=d[x][y][z];
		if(z==1) x=n-x,y=m-y;
		for(i=0;i<=x;i++)
			for(j=(i==0);j<=y;j++)
				if(i*50+j*100<=M){
					if(z==1){
						nx=n-x+i;
						ny=m-y+j;
					}
					else{
						nx=x-i;
						ny=y-j;
					}
					nz=1-z;
					if(!f[nx][ny][nz]){
						f[nx][ny][nz]=step+1;
						q.push((rec){nx,ny,nz});
					}
					if(f[nx][ny][nz]==step+1)
						d[nx][ny][nz]=(d[nx][ny][nz]+temp*C[x][i]%mod*C[y][j]%mod)%mod;
				}
	}
	if(!f[n][m][0])
		cout<<"-1\n0\n";
	else
		cout<<f[n][m][0]-1<<"\n"<<d[n][m][0]<<endl;
	return 0;
}