#include "stdlib.h"
#include "stdio.h"
#define min(A,B) ((A)>(B)?(B):(A))

#include <queue>
#include <algorithm>
#include <iostream>
using namespace std;
const int INF = 1000000000;
const int mod = 1000000007;
const int MAX = 55;

struct Data{
	int a,b,s;
//	Data(int a,int b,int s):a(a),b(b),s(s){};
};
long long C[MAX][MAX];
int ways[MAX][MAX][2]={0};
int main()
{
	int f,n,k,x=0,y=0;
	scanf("%d %d",&n,&k);
	for(int i=0;i<n;i++){
		scanf("%d",&f);
		f==50?x++:y++;
	}
	for(int i=0;i<=n;++i)C[i][0]=1;  
    for(int i=1;i<=n;++i)
		for(int j=1;j<=i;++j)
			C[i][j]=(C[i-1][j-1]+C[i-1][j])%mod; 

	queue<Data> Q;
	Q.push((Data){0,0,1});ways[0][0][1]=1;
	while(!Q.empty()){
		Data d = Q.front();Q.pop();
		int a = d.a, b=d.b, ra = x-a, rb=y-b,s=d.s, c = ways[a][b][s&1];
		if(a==x&&b==y){
			x = s-1; y = c; f = -1;
			break;
		}
		if(s&1){
			for(int i=0;i<=ra;i++)
				for(int j=0;j<=rb;j++){
					if(50*i+100*j>k||i+j==0)continue;
					if(!ways[a+i][b+j][0])Q.push((Data){a+i,b+j,s+1});
					ways[a+i][b+j][0] = (ways[a+i][b+j][0] + c*C[ra][i]*C[rb][j])%mod;
				}
		}else{
			for(int i=0;i<=a;i++)
				for(int j=0;j<=b;j++){
					if(50*i+100*j>k||i+j==0)continue;
					if(!ways[a-i][b-j][1])Q.push((Data){a-i,b-j,s+1});
					ways[a-i][b-j][1] = (ways[a-i][b-j][1] + c*C[a][i]*C[b][j])%mod;	
				}
		}
	}
	if(f==-1)printf("%d\n%I64d\n",x,y);
	else printf("-1\n0\n");
	//cin>>f;
}
