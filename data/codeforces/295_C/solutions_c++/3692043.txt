#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define Mod 1000000007

int f[200][51][51], c[51][51];
int a[51], c1, c2;
typedef long long LL;

inline void zy(int &a, LL b) {
	a = (a + b) % Mod;
}

int main() {
	for (int i = 0; i <= 50; ++i) {
		c[i][0] = 1;
		for (int j = 1; j <= i; ++j)
			c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % Mod;
	}
	int n, k; scanf("%d%d", &n, &k);
	for (int i = 0; i < n; ++i) {
		scanf("%d", a + i);
		a[i] == 50 ? ++c1 : ++c2;
	}
	f[0][c1][c2] = 1; int min_round = -1;
	for (int i = 0; i < n * 4; ++i) {
		if (f[i][0][0]) {
			min_round = i;
			break;
		}
		for (int j = 0; j <= c1; ++j)
			for (int q = 0; q <= c2; ++q)
				if (f[i][j][q]) {
					if (i & 1) {
						for (int u = 0; u <= c1 - j; ++u)
							for (int v = 0; v <= c2 - q; ++v)
								if (u + v > 0 && u * 50 + v * 100 <= k)
									zy(f[i + 1][j + u][q + v], f[i][j][q] * (LL)c[c1 - j][u] % Mod * (LL)c[c2 - q][v]);
					} else {
						for (int u = 0; u <= j; ++u)
							for (int v = 0; v <= q; ++v)
								if (u + v > 0 && u * 50 + v * 100 <= k)
									zy(f[i + 1][j - u][q - v], f[i][j][q] * (LL)c[j][u] % Mod * (LL)c[q][v]);
					}
				}
	}
	if (min_round == -1)
		puts("-1\n0");
	else
		printf("%d\n%d\n", min_round, f[min_round][0][0]);
	return 0;
}
