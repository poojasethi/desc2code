#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 60
#define M N*N*1000
#define mo 1000000007
#define int64 long long
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int x,y,z;
} g[M];
int i,j,k,n,m,s1,s2,l,r;
int f[N][N][2],h[N][N][2],ff[N][N][2];
int64 C[N][N];
inline ww mk(int x,int y,int z) {
	ww A={x,y,z}; return A;
}
inline void Do(int x,int y,int z) {
	if (!ff[x][y][z]) ff[x][y][z]=1,g[++r]=mk(x,y,z);
}
inline void V(int x,int y,int z,int A,int64 B) {
	if (f[x][y][z]>A) {
		f[x][y][z]=A; h[x][y][z]=B; Do(x,y,z);
	} else if (f[x][y][z]==A) {
		h[x][y][z]=(h[x][y][z]+B)%mo; Do(x,y,z);
	}
}
int main() {
	scanf("%d%d",&n,&m);
	For(i,1,n) {
		scanf("%d",&k);
		if (k==50) s1++; else s2++;
	}
	For(i,0,n) {
		C[i][0]=1;
		For(j,1,i) C[i][j]=(C[i-1][j-1]+C[i-1][j])%mo;
	}
	memset(f,120,sizeof(f));
	f[s1][s2][0]=0,h[s1][s2][0]=1;
	g[l=r=1]=mk(s1,s2,0);
	for (;l<=r;l++) {
		int A=g[l].x,B=g[l].y,E=g[l].z; int64 D=h[A][B][E];
		ff[A][B][E]=0;
		For(i,0,A)For(j,0,B) {
			if (!(i+j)) continue;
			if (i*50+j*100>m) break;
			int64 an=C[A][i]*C[B][j]%mo*D%mo;
			V(s1-A+i,s2-B+j,E^1,f[A][B][E]+1,an);
		}
	}
	if (f[s1][s2][1]>1e9) f[s1][s2][1]=-1;
	printf("%d\n%d\n",f[s1][s2][1],h[s1][s2][1]);
	return 0;
}
