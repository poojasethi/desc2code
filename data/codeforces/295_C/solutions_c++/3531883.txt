#include<stdio.h>
#include<memory.h>
#define mod 1000000007
#define max(a,b) (a<b?a:b)
    
__int64 dp[2][51][51],c[51][51];
int w[51];
int main()
{   
    int i,j,num,n,m,k,a,b,t,x,y,time,S,T;
    for(i=0;i<=50;i++)
    {
        c[i][0]=c[i][i]=1;
        for(j=0;j<i;j++)
            c[i][j]=(c[i-1][j-1]+c[i-1][j])%mod;
    }
    while(scanf("%d %d",&num,&k)!=EOF)
    {
        
        k/=50;
        for(n=m=i=0;i<num;i++)
        {
            scanf("%d",&w[i]);
            if(w[i]==50) n++;
            else m++;
        }
        memset(dp,0,sizeof(dp));
        if( (m>=1&&n<=1&&k<=2)||(m>=1&&k<=1)||k<=0||(k==1&&n>1) )
        {
            printf("-1\n0\n");
            continue;
        }
        dp[0][n][m]=1;
        S=0,T=1;
        for(time=1;;time++,S^=1,T^=1)
        {
            memset(dp[T],0,sizeof(dp[T]));
            for(i=0;i<=n;i++)
            {
                for(j=0;j<=m;j++)
                {
                    if(!dp[S][i][j]) continue;
                    for(x=0;x<=k&&x<=i;x++)
                    {
                        for(y=0;y<=j&&x+y*2<=k;y++)
                        {
                            if(!x&&!y) continue;
                            dp[T][n-i+x][m-j+y]=( dp[T][n-i+x][m-j+y]+dp[S][i][j]*((c[i][x]*c[j][y])%mod) )%mod;
                        }
                    }
                }
            }
            if(time%2&&dp[T][n][m]) break;
        }
        printf("%d\n%I64d\n",time,dp[T][n][m]);
    }
    return 0;
}   