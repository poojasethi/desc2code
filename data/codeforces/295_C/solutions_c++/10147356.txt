#include <bits/stdc++.h>
using namespace std;

const int mod = 1e9 + 7;
int dp[210][55][55];
int c[55][55];

void add (int &a, int b) {
    a += b;
    if (a >= mod) a -= mod;
}

int main () {
//    freopen ("in.txt", "r", stdin);
    c[0][0] = 1;
    for (int i = 1; i <= 52; i++) {
        c[i][0] = 1;
        for (int j = 1; j <= i; j++) {
            c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % mod;
        }
    }
    int n, m, a, cnt1 = 0, cnt2 = 0;
    cin >> n >> m;
    for (int i = 1; i <= n; i++) {
        cin >> a;
        if (a == 50) cnt1++; else cnt2++;
    }
    dp[0][cnt1][cnt2] = 1;
    for (int i = 0; i <= 4 * n + 1; i++) {
        int t = (i & 1) ? 1 : -1;
        for (int j = 0; j <= cnt1; j++) {
            for (int k = 0; k <= cnt2; k++) if (dp[i][j][k]) {
                int tj = (i & 1) ? cnt1 - j : j;
                int tk = (i & 1) ? cnt2 - k : k;
                for (int jj = 0; jj <= tj; jj++) {
                    for (int kk = 0; kk <= tk; kk++) if ((jj || kk) && jj * 50 + kk * 100 <= m) {
                        add (dp[i + 1][j + t * jj][k + t * kk], 1LL * dp[i][j][k] * c[tj][jj] % mod * c[tk][kk] % mod);
                    }
                }
            }
        }
        if (dp[i + 1][0][0]) { cout << i + 1 << endl << dp[i + 1][0][0] << endl; return 0; }
    }
    cout << -1 << endl << 0 << endl;
}

	    	  		  			  	   			   		