#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cstring>
#include<string>
#include<cmath>
#include<queue>
#include<map>
using namespace std;
#define M 107
#define N 57
#define inf 1<<30
#define mod 1000000007

int c[M][M];
long long dp[2*M][55][55];
int main()
{
    c[0][0] = 1;
    for( int i = 1; i <= 50; ++i ){
        c[i][0] = 1;
        for( int j = 1; j <= i; ++j )
            c[i][j] = (c[i-1][j] + c[i-1][j-1]) % mod;
    }
    int n, k, fif = 0, hund = 0, a, x;
    cin>>n>>k;
    for( int i = 0; i < n; ++i ){
        scanf( "%d", &a );
        if( a == 50 ) fif++;
        else hund++;
    }
    bool found = 0;
    int u, v;
    dp[0][fif][hund] = 1;
    for( x = 1; x <= 200; ++x ){
        for( int f = 0; f <= fif; ++f )
            for( int h = 0; h <= hund; ++h ) if( dp[x-1][f][h] ){
                for( int i = 0; i <= f && i*50 <= k; ++i ){
                    for( int j = 0; j <= h && j*100+i*50 <= k; ++j ){
                        if( !i && !j ) continue;
                        u = fif - ( f - i ); v = hund - ( h - j );
                        dp[x][u][v] += dp[x-1][f][h]*c[f][i]%mod*c[h][j]%mod;
                        dp[x][u][v] %= mod;
                        if( x&1 && u == fif && v == hund ) found = true;
                    }
                }
            }
        if( found ) break;
    }
    if( !found ) puts( "-1" );
    else printf( "%d\n", x );
    printf( "%I64d\n", dp[x][fif][hund] );
}
