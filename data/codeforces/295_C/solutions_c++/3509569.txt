
#include<cstdio>
#include<cstring>
#include<algorithm>
#define rep(i,n) for(int i=0;i<n;i++)
#define For(i,n) for(int i=1;i<=n;i++)
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define N 60
#define mo 1000000007
typedef long long ll;
using namespace std;
int n,w,x,y,a,b,na,nb,opt,lim,l,r,qa[N*N*2],qb[N*N*2],qc[N*N*2];
ll tmp,c[N][N],f[N][N][2],g[N][N][2];
int main()
{
	c[0][0]=1;
	For(i,50) 
	{
		c[i][0]=1;
		For(j,i)
			c[i][j]=(c[i-1][j-1]+c[i-1][j])%mo;
	}
	scanf("%d%d",&n,&lim);
	For(i,n) { scanf("%d",&w);if (w==50) x++;else y++; }
	lim/=50;
	FOR(i,0,x) FOR(j,0,y) f[i][j][0]=mo,f[i][j][1]=mo;
	
	f[x][y][0]=0;g[x][y][0]=1;
	qa[1]=x;qb[1]=y;qc[1]=0;
	for(l=r=1;l<=r;)
	{
		a=qa[l];b=qb[l];opt=qc[l];
		//printf("%d %d %d %d\n",a,b,opt, f[a][b][opt]);
		if (opt==1) a=x-a,b=y-b;
		
		FOR(i,0,a) FOR(j,0,b)
			if (i+j>0 && i+j+j<=lim)
			{
				na=a-i;nb=b-j;
				if (opt==1) na=x-na,nb=y-nb;
				if (f[na][nb][opt^1]==mo)
				{
					f[na][nb][opt^1]=f[qa[l]][qb[l]][opt]+1;
					r++;
					qa[r]=na;qb[r]=nb;qc[r]=opt^1;
				}
				
				if (f[qa[l]][qb[l]][opt]+1==f[na][nb][opt^1])
				{
					tmp=g[qa[l]][qb[l]][opt]*c[a][i]%mo *c[b][j] %mo;
					(g[na][nb][opt^1]+=tmp)%=mo;
				}
			}
		l++;
	}
	if (f[0][0][1]==mo) f[0][0][1]=-1;
	printf("%I64d\n%I64d",f[0][0][1],g[0][0][1]);
	return 0;
}
