#include<cmath>
#include<ctime>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<complex>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<vector>
#include<bitset>
#include<iostream>
#include<algorithm>
#define X first
#define Y second
typedef long long ll;
typedef unsigned long long ull;
typedef std::pair<int,int> pii;
template<typename T>inline T abs(T a){ return a<0?-a:a; }
template<typename T>inline T min(T a,T b){ return a<b?a:b; }
template<typename T>inline T max(T a,T b){ return a>b?a:b; }
template<typename T>inline void Swap(T&a,T&b){ T t=a;a=b,b=t; }
template<typename T>inline void umin(T&mn,T u){ if(u<mn)mn=u; }
template<typename T>inline void umax(T&mx,T u){ if(u>mx)mx=u; }
template<typename T>inline void read(T&r)
{
	char c;r=0;bool flag=false;
	do c=getchar();while(c!='-'&&(c<'0'||c>'9'));
	if(c=='-')flag=true,c=getchar();
	do r=r*10+c-'0',
	   c=getchar();while(c>='0'&&c<='9');
	if(flag)r*=-1;
}
template<typename T1,typename T2>
inline void read(T1&r,T2&s){ read(r),read(s); }
template<typename T1,typename T2,typename T3>
inline void read(T1&r,T2&s,T3&t){ read(r),read(s),read(t); }
template<typename T1,typename T2,typename T3,typename T4>
inline void read(T1&r,T2&s,T3&t,T4&u){ read(r),read(s),read(t),read(u); }
char __s[50];int __top;
template<typename T>inline void writesp(T w)
{
	__top=0;
	if(w<0)putchar('-'),w*=-1;
	__s[__top++]=' ';do
	__s[__top++]=w%10+'0',w/=10;while(w);
	while(__top--)putchar(__s[__top]);
}
template<typename T>inline void writeln(T w)
{
	__top=0;
	if(w<0)putchar('-'),w*=-1;
	__s[__top++]='\n';do
	__s[__top++]=w%10+'0',w/=10;while(w);
	while(__top--)putchar(__s[__top]);
}
template<typename T>inline void write(T a,T b)
{
	__top=0;bool f=false;
	if(a<0)putchar('-'),a*=-1;
	if(b<0)b*=-1,f=true;
	__s[__top++]='\n';do
	__s[__top++]=b%10+'0',b/=10;while(b);if(f)
	__s[__top++]='-';
	__s[__top++]=' ';do
	__s[__top++]=a%10+'0',a/=10;while(a);
	while(__top--)putchar(__s[__top]);
}
/**************************模板****************************
srt:2016 6 30 14:35
end:2016 6 30 14:53
nme:Travelling Through the Snow Queen's Kingdom
src:cf round 359
agr:
smr:
**********************************************************/

pii e[200001];
struct query
{
	int l,r,s,t,id;
	operator<(const query&o)
	const{ return l<o.l; }
}Q[200001];
bool ans[200001];
int dp[1001][1001];
int main()
{
	int n,m,q,i;read(n,m,q);
	for(i=1;i<=m;i++)read(e[i].X,e[i].Y);
	for(i=1;i<=q;i++)read(Q[i].l,Q[i].r,Q[i].s,Q[i].t),Q[i].id=i;
	std::sort(Q+1,Q+q+1);
	int now=m+1,cur=q,u,v;
	for(u=1;u<=n;u++)
	for(v=1;v<=n;v++)
		dp[u][v]=now;
	while(--now)
	{
		u=e[now].X;
		v=e[now].Y;
		dp[u][v]=dp[v][u]=now;
		for(i=1;i<=n;i++)
			if(dp[v][i]<dp[u][i])
				dp[u][i]=dp[v][i];
			else dp[v][i]=dp[u][i];
		while(cur&&Q[cur].l==now)
			ans[Q[cur].id]=dp[Q[cur].s][Q[cur].t]<=Q[cur].r,cur--;
	}
	for(i=1;i<=q;i++)
		puts(ans[i]?"Yes":"No");
	return 0;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                             