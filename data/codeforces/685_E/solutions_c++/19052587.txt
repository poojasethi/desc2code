#include <bits/stdc++.h>
#define FOR(i, l, r) for (int i = int(l); i < int(r); i++)
#define FORE(i, l, r) for (int i = int(l); i <= int(r); i++)
#define STRUCT5(NAME, v1, v2, v3, v4, v5, name) typedef struct NAME \
        {   \
            int v1, v2, v3, v4, v5; \
            NAME(int v1 = 0, int v2 = 0, int v3 = 0, int v4 = 0, int v5 = 0) : v1(v1), v2(v2), v3(v3), v4(v4), v5(v5) {} \
            friend bool operator < (const NAME& athis, const NAME& other) \
            {   \
                if (athis.v1 != other.v1) return athis.v1 < other.v1;   \
                return athis.v2 < other.v2;   \
            }\
        }name;
#define FST first
#define SCD second
#define modp 1000000007
#define EPS 1e-7
#define MAXN 200013
using namespace std;
typedef long long LL;
typedef unsigned int UI;
STRUCT5(REQ, l, r, s, t, id, Req)

int dis[1031][1031];
int N, M, Q;
int eu[MAXN], ev[MAXN];
bool ans[MAXN];
Req r[MAXN];
int main()
{
    scanf("%d%d%d", &N, &M, &Q);
    FORE(i, 1, M) {
        scanf("%d%d", eu + i, ev + i);

    }
    FOR(i, 0, Q) {
        scanf("%d%d%d%d", &r[i].l, &r[i].r, &r[i].s, &r[i].t);
        r[i].id = i;
    }
    FORE(i, 1, N) {
        FORE(j, 1, N) {
            dis[i][j] = dis[j][i] = M + 1;
        }
    }
    sort(r, r + Q);
    int k = Q - 1;
    for (int i = M; i > 0 && k >= 0; i--) {
        int u = eu[i], v = ev[i];
        dis[u][v] = dis[v][u] = i;
        FORE(j, 1, N) {
            dis[u][j] = dis[v][j] = min(dis[u][j], dis[v][j]);
        }
        while (k >= 0 && r[k].l >= i) {
            ans[r[k].id] = r[k].s == r[k].t || dis[r[k].s][r[k].t] <= r[k].r;
            k--;
        }
    }
    FOR(i, 0, Q) {
        printf(ans[i] ? "Yes\n" : "No\n");
    }
    return 0;
}
