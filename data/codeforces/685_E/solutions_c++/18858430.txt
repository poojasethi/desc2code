#include <iostream>
#include <vector>
#include <cmath>
#include <cstdio>
#include <algorithm>

using namespace std;

const int limite=200005;

int n,m,q;
pair<int,int> va[limite];
int qu[limite];
int qv[limite];
int tini[limite];
int tfin[limite];
vector<int> listaq[limite];
int ilistaq[limite];
int sol[limite];
int ultimo[1001][1001];

bool compara(int i1,int i2)
{
  return tfin[i1]<tfin[i2];
}

void tratar(int v,int ia)
{
  vector<int> &lisq=listaq[v];
  for (int &ind=ilistaq[v];ind<int(lisq.size()) and tfin[lisq[ind]]<=ia;ind++) {
    int iq=lisq[ind];
    sol[iq]=ultimo[v][qu[iq]]>=tini[iq];
  }
}

int main()
{
  //ios::sync_with_stdio(false);
  cin>>n>>m>>q;
  for (int i=1;i<=m;i++) {
    scanf("%d %d",&(va[i].first),&(va[i].second));
    //cin>>va[i].first>>va[i].second;
  }
  for (int i=0;i<q;i++) {
    scanf("%d %d %d %d",&(tini[i]),&(tfin[i]),&(qu[i]),&(qv[i]));
    //cin>>tini[i]>>tfin[i]>>qu[i]>>qv[i];
    listaq[qv[i]].push_back(i);
  }
  for (int v=1;v<=n;v++)
    sort(listaq[v].begin(),listaq[v].end(),compara);
  for (int ia=1;ia<=m;ia++) {
    int u=va[ia].first;
    int v=va[ia].second;
    tratar(u,ia-1);
    tratar(v,ia-1);
    ultimo[u][u]=ia;
    ultimo[v][v]=ia;
    for (int i=1,*pu=ultimo[u]+1,*pv=ultimo[v]+1;i<=n;i++,pu++,pv++)
      if (*pu>*pv) *pv=*pu;
      else *pu=*pv;
  }
  for (int u=1;u<=n;u++)
    tratar(u,m);
  for (int i=0;i<q;i++) {
    if (sol[i]) cout<<"Yes"<<endl;
    else cout<<"No"<<endl;
  }
}
