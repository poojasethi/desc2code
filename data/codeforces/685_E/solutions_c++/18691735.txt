#include <bits/stdc++.h>
using namespace std;
#define M 200010

struct query {
  int l, r, s, t, id;
  query (int l = 0, int r = 0, int s = 0, int t = 0, int id = 0) : l(l), r(r), s(s), t(t), id(id) {}
  bool operator < (const query &a) const {
    return l > a.l;
  }
  void input() {
    scanf("%d %d %d %d", &l, &r, &s, &t);
  }
} qry[M];

int n, m, Q, T[1010][1010];
int x[M], y[M], chk[M];

int main() {
  //freopen("in.txt", "r", stdin);
  scanf("%d %d %d", &n, &m, &Q);
  for (int i = 1; i <= m; i++) {
    scanf("%d %d", x + i, y + i);
  }
  for (int i = 0; i < Q; i++) qry[i].input(), qry[i].id = i;
  sort(qry, qry + Q);
  int q = 0;
  for (int i = 1; i <= n; i++) for (int j = 1; j <= n; j++) {
    T[i][j] = m + 1;
  }
  for (int i = m; i; i--) {
    int u = x[i], v = y[i];
    T[u][v] = T[v][u] = i;
    for (int j = 1; j <= n; j++) {
      if (T[u][j] > T[v][j]) T[u][j] = T[v][j];
      else T[v][j] = T[u][j];
    }
    while (q < Q && qry[q].l == i) {
      if (T[qry[q].s][qry[q].t] <= qry[q].r) chk[qry[q].id] = 1;
      q++;
    }
  }
  for (int i = 0; i < Q; i++) {
    if (chk[i]) puts("Yes"); else puts("No");
  }
}
