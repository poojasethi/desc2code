#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;

const int inf=1000000000;
struct edge {
	int u,v;
} e[200005];
struct query {
	int l,r,s,t,id;
} ask[200005];
inline bool operator <(query a,query b) {
	return a.l<b.l;
}
int n,m,q,d[1005][1005];
bool ans[200005];
int main() {
	scanf("%d%d%d",&n,&m,&q);
	for (int i=1;i<=m;i++) scanf("%d%d",&e[i].u,&e[i].v);
	for (int i=1;i<=q;i++) {
		scanf("%d%d%d%d",&ask[i].l,&ask[i].r,&ask[i].s,&ask[i].t);
		ask[i].id=i;
	}
	sort(ask+1,ask+q+1);
	for (int i=1;i<=n;i++)
		for (int j=1;j<=n;j++) if (i!=j) d[i][j]=inf;
	for (int i=m,now=q;i;i--) {
		d[e[i].u][e[i].v]=d[e[i].v][e[i].u]=i;
		for (int k=1;k<=n;k++) if (e[i].u!=k&&e[i].v!=k) d[e[i].u][k]=d[e[i].v][k]=min(d[e[i].u][k],d[e[i].v][k]);
		while (now&&ask[now].l==i) {
			ans[ask[now].id]=d[ask[now].s][ask[now].t]<=ask[now].r;
			now--;
		}
	}
	for (int i=1;i<=q;i++) puts(ans[i]?"Yes":"No");
	return 0;
}
