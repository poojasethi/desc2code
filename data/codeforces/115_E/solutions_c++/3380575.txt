#include <cstdio>
#include <algorithm>
#include <queue>
#include <utility>
#include <vector>
using namespace std;

typedef long long LL;
typedef pair<int, int> pii;

const int N = 200003;
int c[N];
vector<pii> v[N];

int main()
{
    int n, m;
    scanf("%d%d", &n, &m);
    for(int i = 1; i <= n; ++i)
        scanf("%d", c+i);
    LL res = 0;
    while(m--) {
        int a, b, c;
        scanf("%d%d%d", &a, &b, &c);
        v[a].push_back(pii(b, c));
        res += c;
    }
    
    priority_queue<pii, vector<pii>, greater<pii> > Q;
    for(int i = 1; i <= n; ++i) {
        while(!v[i].empty()) {
            Q.push(v[i].back());
            v[i].pop_back();
        }
        
        while(!Q.empty() && Q.top().first < i)
            Q.pop();
        
        while(c[i] && !Q.empty()) {
            pii p = Q.top();
            Q.pop();
            int x = min(c[i], p.second);
            res -= x;
            c[i] -= x;
            p.second -= x;
            if(p.second)
                Q.push(p);
        }
    }
    printf("%lld\n", res);
    return 0;
}
