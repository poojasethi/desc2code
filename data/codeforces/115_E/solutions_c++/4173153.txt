//In the name of God
#include <iostream>
#include <vector>
using namespace std;

typedef long long int ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int N = 2e5 + 10;
const ll oo = 1e18;

pll t[4 * N];
int n, m;
ll c[N];
vector<pii> st[N];

void update(int n, int b, int e, int u, int v, ll x) {
	if (e < u || v < b)
		return;
	if (u <= b && e <= v) {
		t[n].second += x;
		return;
	}
	int l = n << 1, r = l | 1, m = b + e >> 1;
	update(l, b, m, u, v, x);
	update(r, m + 1, e, u, v, x);
	t[n].first = max(t[l].first + t[l].second, t[r].first + t[r].second);
}
ll query(int n, int b, int e, int u, int v) {
	if (u <= b && e <= v)
		return t[n].first + t[n].second;
	if (e < u || v < b)
		return -oo;
	int l = n << 1, r = l | 1, m = b + e >> 1;
	return t[n].second + max(query(l, b, m, u, v), query(r, m + 1, e, u, v));
}
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1; i <= n; i++)
		cin >> c[i];
	for (int i = 0; i < m; i++) {
		int l, r, val;
		cin >> l >> r >> val;
		st[r].push_back(pii(l, val));
	}
	for (int i = 1; i <= n; i++) {
		update(1, 0, n, i, i, query(1, 0, n, 0, i - 1));
		update(1, 0, n, 0, i - 1, -c[i]);
		for (int j = 0; j < st[i].size(); j++)
			update(1, 0, n, 0, st[i][j].first - 1, st[i][j].second);
	}
	cout << t[1].first + t[1].second << '\n';
	return 0;
}
