#include <iostream>
#include <cstdio>
#include <string.h>
#include <string>
#include <vector>
#include <queue>
using namespace std;

struct node{
    int k,data;
    node(){}
    node(int p,int q):k(p),data(q){}
    bool operator<(const node& a)const{
        return (k>a.k || (k==a.k && data>a.data));
    }
};
vector<node> e[320000];
priority_queue<node> Q;
int w[320000];
int n,m,p1,p2,p3;
long long int sum;

int main(){
    while (scanf("%d%d",&n,&m)==2){
        sum=0;
        for (int i=1;i<=n;++i) scanf("%d",&w[i]);
        for (int i=1;i<=m;++i){
            scanf("%d%d%d",&p1,&p2,&p3);
            e[p1].push_back(node(p2,p3));
            sum+=p3;
        }
        while (!Q.empty()) Q.pop();
        for (int i=1;i<=n;++i){
            while (!Q.empty() && Q.top().k<i) Q.pop();
            node l=Q.top();
            for (int j=0;j<e[i].size();++j) Q.push(e[i][j]);
            while (!Q.empty()){
                node t=Q.top();
                Q.pop();
                long long int cost=min(w[i],t.data);
                t.data-=cost;
                w[i]-=cost;
                sum-=cost;
                if (t.data!=0){ 
                    Q.push(t);
                    break;
                }
            }
        }
        cout << sum << endl;
    }
    return 0;
}
            
                
    

  	 	  			 		 	 	  			 			