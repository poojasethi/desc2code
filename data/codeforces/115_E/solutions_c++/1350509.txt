#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

int a[200005];
vector<pair<int, int> > r[200005];
long long seg[900005];
long long val[900005];
void add(int x, int L, int R, int ll, int rr, long long v) {
	if(ll<=L && rr>=R) { seg[x]+=v; val[x]+=v; return; }
	int M=(L+R)/2;
	if(ll<=M) add(x*2, L, M, ll, rr, v);
	if(rr>M) add(x*2+1,M+1,R,ll, rr, v);
	val[x] = seg[x]+max(val[x*2], val[x*2+1]);
}
long long get(int x, int L, int R, int ll, int rr) {
	if(ll<=L && rr>=R) { return val[x]; }
	int M=(L+R)/2; long long ret=-(1LL<<60);
	if(ll<=M) ret=max(ret, get(x*2, L, M, ll, rr));
	if(rr>M) ret=max(ret, get(x*2+1, M+1,R,ll,rr));
	return ret+seg[x];
}
int main(void) {
	int n, m;
	scanf("%d%d", &n, &m);
	for(int i=1;i<=n;i++) scanf("%d", &a[i]);
	for(int i=1;i<=m;i++) {
		int L, R, v;
		scanf("%d%d%d", &L, &R, &v);
		r[R].push_back(make_pair(L, v));
	}
	for(int i=1;i<=n;i++) {
		add(1,0,n,i,i,get(1,0,n,0,i-1));
		add(1,0,n,0,i-1,-a[i]);
		for(int j=0;j<(int)r[i].size();j++)
			add(1,0,n,0,r[i][j].first-1,r[i][j].second);
		//for(int j=0;j<=n;j++) printf("%I64d ", get(1,0,n,j,j));
		//puts("");
	}
	printf("%I64d\n", get(1,0,n,0,n));
	return 0;
}

