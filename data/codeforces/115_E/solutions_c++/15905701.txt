//In the Name of God 

#include<bits/stdc++.h>

using namespace std;

const int maxn=1<<19;

#define int long long

int n,m;
int a[maxn];
vector<int>ver[maxn],cost[maxn];
int maxi[maxn],flag[maxn];
int dp[maxn];

void push(int node)
{
  int x=flag[node];
  maxi[2*node]+=x;
  maxi[2*node+1]+=x;
  flag[2*node]+=x;
  flag[2*node+1]+=x;
  flag[node]=0;
}

void pull(int node)
{
  maxi[node]=max(maxi[2*node],maxi[2*node+1]);
}
void add(int l,int r,int s,int e,int val,int node=1)
{
  if(r<=s or e<=l) 
    return ;
  if(s<=l and r<=e)
    {
      flag[node]+=val;
      maxi[node]+=val;
      return ;
    }
  push(node);
  int mid=(l+r)/2;
  add(l,mid,s,e,val,2*node);
  add(mid,r,s,e,val,2*node+1);
  pull(node);
}

main()
{
  ios::sync_with_stdio(0);
  cin>>n>>m;
  for(int i=1;i<=n;i++)
    cin>>a[i];
  for(int l,r,c,i=0;i<m;i++)
    {
      cin>>l>>r>>c;
      ver[r].push_back(l);
      cost[r].push_back(c);
    }
  int ans=0;
  for(int r=1;r<=n;r++)
    {
      add(0,n+1,0,r,-a[r]);
      for(int i=0;i<ver[r].size();i++)
        add(0,n+1,0,ver[r][i],cost[r][i]);
      dp[r]=max(ans,maxi[1]);
      ans=max(ans,maxi[1]);
      add(0,n+1,r,r+1,dp[r]);
    }
  cout<<ans<<endl;
}
