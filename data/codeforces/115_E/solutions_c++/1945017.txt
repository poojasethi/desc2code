#include <cstdio>
#include <algorithm>
#include <queue>

using namespace std;

struct node
{
  int l,r,v;
  bool operator<(const node& x) const
  {
    return r>x.r;
  }
};

priority_queue<node> q;
node a[200001];
int c[200001];

bool cmp(node x,node y)
{
  if(x.l!=y.l)
    return x.l<y.l;
  return x.r<y.r;
}

int main(void)
{
  int n,m;
  scanf("%d %d",&n,&m);
  for(int i=1;i<=n;++i)
    scanf("%d",&c[i]);
  long long ans=0;
  for(int i=1;i<=m;++i)
  {
    scanf("%d %d %d",&a[i].l,&a[i].r,&a[i].v);
    ans+=a[i].v;
  }
  sort(a+1,a+m+1,cmp);
  int t=1;
  for(int i=1;i<=n;++i)
  {
    while((!q.empty())&&(q.top().r<i))
      q.pop();
    while((t<=m)&&(a[t].l==i))
    {
      q.push(a[t]);
      ++t;
    }
    while((!q.empty())&&(c[i]>0))
    {
      node h=q.top();
      q.pop();
      int k=min(h.v,c[i]);
      h.v-=k;
      c[i]-=k;
      ans-=k;
      if(h.v>0)
        q.push(h);
    }
  }
  printf("%I64d\n",ans);
  return 0;
}