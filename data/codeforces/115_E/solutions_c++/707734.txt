#include<cstdio>
#include<algorithm>
using namespace std;
typedef __int64 LL;
const int N(200010);
struct TNode {
       int l,r,w;
};
int h[N],a[N];
TNode s[N];
int si,n,m,i,j;
LL ans;
bool cmp(TNode a,TNode b) {return a.l<b.l;}
bool cmp2(int a,int b) {return s[a].r<s[b].r;}
void up(int x)
{
     for (;x!=1;x/=2)
         if (cmp2(h[x],h[x/2])) swap(h[x],h[x/2]);
		 else break;
}
void down(int x)
{
     for (x*=2;x<=si;x*=2) {
	     if (x!=si&&cmp2(h[x+1],h[x])) ++x;
         if (cmp2(h[x],h[x/2])) swap(h[x],h[x/2]);
		 else break;
	 }
}
void del()
{
     swap(h[1],h[si--]);
	 down(1);
}
int main()
{
    scanf("%d%d",&n,&m);
    for (i=1;i<=n;++i) scanf("%d",&a[i]);
    ans=0;
    for (i=0;i!=m;++i) {
        scanf("%d%d%d",&s[i].l,&s[i].r,&s[i].w);
        ans+=s[i].w;
    }
    sort(s,s+m,cmp);
    for (i=1,j=0;i<=n;++i) {
	    for (;si&&s[h[1]].r<i;del());
        for (;j!=m&&s[j].l<=i;++j) {
            h[++si]=j; up(si);
        }
		for (;si;)
		    if (a[i]>s[h[1]].w) {
			   a[i]-=s[h[1]].w; ans-=s[h[1]].w;
			   del();
			}
			else {
			     s[h[1]].w-=a[i]; ans-=a[i]; a[i]=0; break;
			}
    }
	printf("%I64d\n",ans);
    return 0;
}
