#include<bits/stdc++.h>
using namespace std;
#define p1 (p<<1)
#define p2 (p<<1|1)
struct node
{
    int a,b;
    long long c;
}p[200005];
int n,m,i,j;
long long f[200005],a[200005],t[1000001],add[1000001];
bool cmp(const node&x,const node&y)
{
    return x.b<y.b;
}
void update(int l,int r,int x,int y,long long z,int p)
{
    if(x<=l&&r<=y)
    {
        add[p]+=z;
        return;
    }
    add[p1]+=add[p];  
    add[p2]+=add[p];
    add[p]=0;
    int mid=(l+r)>>1;
    if(x<=mid) update(l,mid,x,y,z,p1);
    if(y>=mid+1) update(mid+1,r,x,y,z,p2);
    t[p]=max(t[p1]+add[p1],t[p2]+add[p2]);
}
int main()
{
    cin>>n>>m;
    for(i=1;i<=n;i++)
        scanf("%I64d",&a[i]);
    for(i=1;i<=m;i++)
        scanf("%d%d%I64d",&p[i].a,&p[i].b,&p[i].c);
    sort(p+1,p+m+1,cmp);
    j=1;
    for(i=1;i<=n;i++)
    {
        update(0,n,0,i-1,-a[i],1);
        while(p[j].b==i&&j<=m)
        {
            update(0,n,0,p[j].a-1,p[j].c,1);
            j++;

        }
        f[i]=max(f[i-1],t[1]);
        update(0,n,i,i,f[i],1);
    }
    cout<<f[n];
    return 0;
}