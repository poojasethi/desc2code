#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li       	long long int
#define rep(i,to)	for(li i=0;i<((li)(to));++i)
#define pb       	push_back
#define sz(v)    	((li)(v).size())
#define bit(n)   	(1ll<<(li)(n))
#define all(vec)	(vec).begin(),(vec).end()
#define each(i,c)	\
for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
typedef pair<li,li> PI;
#define MP make_pair
#define F first
#define S second


typedef pair<PI,li> P;
#define MAX 200005
li a[MAX];
P b[MAX];
priority_queue<PI,vector<PI>,greater<PI> > q;

int main(){
	li n,m,res=0;
	cin>>n>>m;
	rep(i,n) cin>>a[i+1];
	rep(i,m) cin>>b[i].F.F>>b[i].F.S>>b[i].S;
	sort(b,b+m);
	rep(i,m) res+=b[i].S;
	
	li pos=0;
	rep(i,n+1){
		for(;pos<m && b[pos].F.F<=i;pos++) q.push(MP(b[pos].F.S,b[pos].S));
		while(sz(q) && q.top().F<i) q.pop();
		while(a[i] && sz(q)){
			PI p = q.top();
			q.pop();
			li mini=min(p.S,a[i]);
			a[i]-=mini;
			p.S-=mini;
			res-=mini;
			if(p.S) q.push(p);
		}
	}
	cout<<res<<endl;
}
