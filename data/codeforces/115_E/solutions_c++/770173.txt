#include <cstdio>
#include <vector>

using namespace std;

typedef long long i64;
i64 d[200001],v[200001],a[2][524288];
struct str{int p,c;};
vector<str> q[200001];

inline i64 max(i64 x,i64 y){if (x>y) return x;else return y;}

void upd(int nod,int le,int ri,int l,int r,i64 x)
{
    if (ri<l||le>r)
        return;
    if(l<=le&&ri<=r)
    {
        a[0][nod]+=x;
        a[1][nod]+=x;
        return;
    }
    upd(nod*2,le,(le+ri)/2,l,r,x);
    upd(nod*2+1,(le+ri)/2+1,ri,l,r,x);
    a[0][nod]=max(a[0][nod*2],a[0][nod*2+1])+a[1][nod];
}


int main()
{
    int n,m,i,x,y,z;
    vector <str>::iterator j;
    str auxstr;
    scanf("%d%d",&n,&m);
    for(i=1;i<=n;++i)
    {
        scanf("%I64d",&v[i]);
        v[i]+=v[i-1];
    }
    for(;m;--m)
    {
        scanf("%d%d%d",&x,&y,&z);
        auxstr.p=x-1;
        auxstr.c=z;
        q[y].push_back(auxstr);
    }
    for(i=1;i<=n;++i)
    {
        for(j=q[i].begin();j!=q[i].end();++j)
            upd(1,0,n,0,j->p,j->c);
        d[i]=max(d[i-1],a[0][1]-v[i]);
        upd(1,0,n,i,i,d[i]+v[i]);
    }
    printf("%I64d\n",d[n]);
    return 0;
}
