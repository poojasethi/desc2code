#include <iostream>
#include <cstdio>
#include <cstring>
#include <stack>
#include <queue>
#include <algorithm>
using namespace std;

#define oo 0x3f3f3f3f
#define LL long long

struct node {
	int r, p;
	bool operator < (const node &b) const {
		return b.r < r;
	}
}k;

priority_queue<node> q;

vector<node> v[200005];

int a[200005];

int main()
{
	int n, m, l;
	LL ans = 0;
	scanf( "%d%d", &n, &m );
	for( int i = 1; i <= n; ++i )
		scanf( "%d", a + i );
	for( int i = 1; i <= m; ++i ) {
		scanf( "%d%d%d", &l, &k.r, &k.p );
		v[l].push_back(k);
		ans += k.p;
	}
	for( int i = 1; i <= n; ++i ) {
		for( int j = 0; j < v[i].size(); ++j )
			q.push(v[i][j]);
		while( !q.empty() && q.top().r < i )
			q.pop();
		while( !q.empty() && a[i] ) {
			k = q.top(); q.pop();
			int tmp = min( k.p, a[i] );
			k.p -= tmp; a[i] -= tmp; ans -= tmp;
			if( k.p ) q.push(k);
		}
	}
	cout << ans << endl;
	return 0;
}