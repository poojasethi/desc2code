#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cassert>
#include <cstring>
#include <vector>
#include <string>
#include <algorithm>

#ifdef ONLINE_JUDGE
#define D(...) {}
#else
#define D(...) fprintf (stderr, __VA_ARGS__)
#endif

using namespace std;
#define MAXN 100010
int a[MAXN], h[MAXN],l[MAXN],r[MAXN],b[MAXN],z[MAXN];
double p[MAXN];
vector< pair<int,int> > B;
int m;
struct seg {
  int l, r;
  double p;
};

void process_seg (struct seg &x) {
  int i;
  x.p = 1.0 - x.p;
  //for (i = 0; b[i] < x.l; i++) {}
  i = lower_bound (&b[0], &b[m], x.l) - b;
  if (b[i] == 0x7fffffff) return;
  while (b[i] <= x.r) {
    p[i] *= x.p;
    i++;
  }
}

int main(void) {
  int i, j, k,n;
  scanf("%d%d",&n,&m);
  for(i=0;i<n;i++)scanf("%d%d%d%d",a+i,h+i,l+i,r+i);
  for(i=0;i<m;i++) {
    scanf("%d%d",b+i,z+i);
    B.push_back(make_pair(b[i],z[i]));
  }
  sort(B.begin(),B.end());  
  for(i=0;i<m;i++) {
    b[i] = B[i].first;
    z[i] = B[i].second;
    p[i] = 1.0;
  }
  b[m] = 0x7fffffff; 
  for(i=0;i<n;i++) {
    seg x;
    x.l = a[i] - h[i];
    x.r = a[i] - 1;
    x.p = l[i] * 0.01;
    process_seg (x);
    x.l = a[i] + 1;
    x.r = a[i] + h[i];
    x.p = r[i] * 0.01;
    process_seg (x);
  }
  double res = 0.0;
  for (i = 0; i < m; i++) {
    res += p[i] * z[i];
  }
  printf ("%.15lf\n", res);
  return 0;
}