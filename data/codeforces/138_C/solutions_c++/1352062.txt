#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
#include <string>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <queue>
#include <map>
using namespace std;

struct event
{
	int pos;
	int p;
	int type;
	int z;
};

bool comp(event a, event b)
{
	if(a.pos == b.pos)
	{
		return a.type < b.type;
	}
	return a.pos < b.pos;
}

vector<event> v;

int main()
{
	int n, m;
	scanf("%d%d", &n, &m);
	int i;
	event tmp;
	for(i = 0; i < n; i++)
	{
		int a, h, l, r;
		scanf("%d%d%d%d", &a, &h, &l, &r);
		
		tmp.pos = a - h;
		tmp.type = 1;
		tmp.p = 100 - l;
		v.push_back(tmp);
		tmp.pos = a - 1;
		tmp.type = 3;
		v.push_back(tmp);
		
		tmp.pos = a + 1;
		tmp.type = 1;
		tmp.p = 100 - r;
		v.push_back(tmp);
		tmp.pos = a + h;
		tmp.type = 3;
		v.push_back(tmp);
	}
	for(i = 0; i < m; i++)
	{
		int pos, z;
		scanf("%d%d", &pos, &z);
		tmp.pos = pos;
		tmp.type = 2;
		tmp.z = z;
		v.push_back(tmp);
	}
	sort(v.begin(), v.end(), comp);
	double ans = 0.0;
	int p_sum[105] = {0};
	for(i = 0; i < v.size(); i++)
	{
		tmp = v[i];
		if(tmp.type == 1)
		{
			p_sum[tmp.p]++;
		}
		else if(tmp.type == 3)
		{
			p_sum[tmp.p]--;
		}
		else if(tmp.type == 2)
		{
			long double p = 1.0;
			int j;
			for(j = 0; j <= 100; j++)
			{
				if(p_sum[j] > 0)
				{
					p *= pow(j / 100.0, p_sum[j]);
				}
			}
			ans += p * tmp.z;
		}
	}
	printf("%.8lf\n", ans);
	return 0;
}
