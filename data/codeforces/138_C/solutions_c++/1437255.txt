#include <iostream>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#define pii pair<int,int>
using namespace std;

vector <pii> tree;
vector <pii> gnome;
int n,m,x,h,l,r,magic[10005],prob[105];

int main()
{
    int i,j,k,p;
    double now,ans=0.0;

    //freopen("gnome.txt","r",stdin);

    scanf("%d %d",&n,&m);

    for(i=0;i<n;i++)
    {
        scanf("%d %d %d %d",&x,&h,&l,&r);

        tree.push_back(make_pair(x-h,l));
        tree.push_back(make_pair(x,-l));
        tree.push_back(make_pair(x+1,r));
        tree.push_back(make_pair(x+h+1,-r));

    }

    tree.push_back(make_pair(2000000005,0));

    for(i=0;i<m;i++)
    {
        scanf("%d %d",&k,&p);

        gnome.push_back(make_pair(k,p));
    }

    sort(tree.begin(),tree.end());
    sort(gnome.begin(),gnome.end());

    for(i=0,j=0;i<m;i++)
    {
        while(tree[j].first <= gnome[i].first)
        {
            k=tree[j++].second;

            if(k>=0) prob[k]++;
            else prob[-1*k]--;
        }

        now=gnome[i].second;

        for(k=1;k<=100;k++) now*= pow( .01*(100-k) ,prob[k]);

        ans+=now;
    }

    printf("%.10lf\n",ans);

    return 0;
}
