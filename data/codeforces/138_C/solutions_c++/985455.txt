#include <iostream>
#include <algorithm>
#include <math.h>
#include <iomanip>
using namespace std;

struct Node
{
    int x, mark, prob;
} node[500000];

bool operator < (const Node &a, const Node &b)
{
    if (a.x == b.x) return a.mark > b.mark;
    return a.x < b.x;
}

int n, m, N, a, h, l, r, b, z;
int cnt[101];

int main()
{
    cin >> n >> m;
    for(int i = 0; i < n; i++)
    {
        cin >> a >> h >> l >> r;
        node[N].x = a - h; node[N].mark = 1; node[N++].prob = l;
        node[N].x = a - 1; node[N].mark = -1; node[N++].prob = l;
        node[N].x = a + h; node[N].mark = -1; node[N++].prob = r;
        node[N].x = a + 1; node[N].mark = 1; node[N++].prob = r;
    }
    for(int i = 0; i < m; i++)
    {
        cin >> b >> z;
        node[N].x = b; node[N].mark = 0; node[N++].prob = z;
    }
    sort(node, node + N);
    //for(int i = 0; i < N; i++) cout << node[i].x << " " << node[i].mark << endl;
    double ans = 0;
    for(int i = 0; i < N; i++)
    {
        if (node[i].mark == 0)
        {
            double cur = 1;
            for(int j = 0; j <= 100; j++)
                cur *= pow(j / 100.0, cnt[j]);
            ans += cur * node[i].prob;
        }
        else cnt[100 - node[i].prob] += node[i].mark;
    }
    cout << ans << setprecision(4) << endl;
    
    return 0;
}
