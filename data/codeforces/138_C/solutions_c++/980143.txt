#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <ctime>
#include <cmath>
#define maxn 100010

using namespace std;

struct node {
	int loc;
	int pos;
	bool start;
};

struct mush {
	int pow;
	int loc;
};

bool cmp(const node &a,const node &b) {
	if (a.loc<b.loc) return true;
	if (a.loc>b.loc) return false;
	return a.start;
}

bool cmp1(const mush &a,const mush &b) {
	return a.loc<b.loc;
}

int n,m;
node a[4*maxn];
mush b[maxn];

int main() {
	//freopen("c.in","r",stdin);

	cin >> n >> m;
	for (int i=0;i<n;++i) {
		int p,h,l,r;
		scanf("%d%d%d%d",&p,&h,&l,&r);
		a[4*i].loc=p-h;
		a[4*i].start=true;
		a[4*i+1].loc=p-1;
		a[4*i+1].start=false;
		a[4*i].pos=a[4*i+1].pos=l;
		a[4*i+2].loc=p+1;
		a[4*i+2].start=true;
		a[4*i+3].loc=p+h;
		a[4*i+3].start=false;
		a[4*i+2].pos=a[4*i+3].pos=r;
	}

	for (int i=0;i<m;++i)
		scanf("%d%d",&b[i].loc,&b[i].pow);

	stable_sort(a,a+4*n,cmp);
	stable_sort(b,b+m,cmp1);

	int j=0,cnt=0;
	long double posi=log(1),ans=0;
	for (int i=0;i<m;++i) {
		while (j<4*n && a[j].loc<=b[i].loc) {
			if (!a[j].start && a[j].loc==b[i].loc) break;
			if (a[j].start) {
				if (a[j].pos!=100) posi+=log((long double)(100-a[j].pos)/100.0);
				else cnt++;
			} else {
				if (a[j].pos!=100) posi-=log((long double)(100-a[j].pos)/100.0);
				else cnt--;
			}
			j++;
		}
		if (cnt==0) ans+=exp(posi)*(long double)b[i].pow;
	}
	printf("%.10lf\n",(double)ans);

	return 0;
}
