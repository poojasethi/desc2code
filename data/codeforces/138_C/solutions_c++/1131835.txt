#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<vector>
#include<cmath>
using namespace std;

struct event
{
	int x, type;  // 0 open 1 spec 2 close
	long double p;
	event() {}
	event(int _x, int _t, long double _p) : x(_x), type(_t), p(_p) {}
};

bool comp(const event &a, const event &b)
{
	return (a.x < b.x || (a.x == b.x && a.type < b.type));
}

vector<event> a;
int main()
{
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);

	int n, m;

	cin >> n >> m;
	int t1, t2, t3, t4;
	long double ld, rd;
	a.reserve(4*n+m+10);
	for(int i = 0; i < n; ++i)
	{
		cin >> t1 >> t2 >> t3 >> t4;
		a.push_back(event(t1 - t2, 0, (100.-(long double)t3)/100.));
		a.push_back(event(t1 - 1, 2, (100.-(long double)t3)/100.));
		a.push_back(event(t1 + 1, 0, (100.-(long double)t4)/100.));
		a.push_back(event(t1 + t2, 2, (100.-(long double)t4)/100.));
	}

	for(int i = 0; i < m; ++i)
	{
		cin >> t1 >> t2;
		a.push_back(event(t1, 1, t2));
	}
	sort(a.begin(), a.end(), comp);
	long double ans = 0., tcur = 0.;
	for(int i = 0; i < a.size(); ++i)
	{
		if(a[i].type == 0)
			tcur += log(a[i].p + 0.0000000001);
		else if(a[i].type == 2)
			tcur -= log(a[i].p + 0.0000000001);
		else
			ans += a[i].p*exp(tcur);
		if(tcur < -10e+10) tcur = -10e+10;
	}
	cout.precision(10);
	cout.setf(ios::fixed);
	cout << ans;

	return 0;
}