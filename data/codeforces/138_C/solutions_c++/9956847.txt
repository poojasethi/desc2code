#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<math.h>
using namespace std;
int n,m;
struct point
{
    int mo;
    int x,y;
    int jin;
    int val;
    int pp;
    bool friend operator < (point A,point B)
    {
        if(A.x==B.x)
            return A.y<B.y;
        return A.x<B.x;
    }
}p[1000000];
int top;
int h[101];
int main()
{
    scanf("%d%d",&n,&m);
    top=0;
    for(int i=0;i<n;i++)
    {
        int a,h,l,r;
        scanf("%d%d%d%d",&a,&h,&l,&r);
        p[top].mo=0;
        p[top].x=a-h;
        p[top].y=-1;
        p[top].jin=1;
        p[top++].pp=l;
        p[top].mo=0;
        p[top].x=a;
        p[top].y=-1;
        p[top].jin=0;
        p[top++].pp=l;
        p[top].mo=0;
        p[top].x=a;
        p[top].y=1;
        p[top].jin=1;
        p[top++].pp=r;
        p[top].mo=0;
        p[top].x=a+h;
        p[top].y=1;
        p[top].jin=0;
        p[top++].pp=r;
    }
    for(int i=0;i<m;i++)
    {
        int a,v;
        scanf("%d%d",&a,&v);
        p[top].mo=1;
        p[top].x=a;
        p[top].y=0;
        p[top++].val=v;
    }
    sort(p,p+top);
    double ans=0;
    for(int i=0;i<top;i++)
    {
        if(p[i].mo)
        {
            double P=1.0;
            for(int j=0;j<=100;j++)
                if(h[j])
                    P*=pow((double)(100-j)/(100.0),h[j]);
            ans+=p[i].val*P;
        }
        else
        {
            if(p[i].jin)
                h[p[i].pp]++;
            else
                h[p[i].pp]--;
        }
    }
    printf("%f\n",ans);
}

 	  	 		 			 	 	  	 	  	