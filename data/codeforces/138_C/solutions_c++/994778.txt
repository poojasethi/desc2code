#include <iostream>
#include <cmath>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <cstring>
#include <functional>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
using namespace std;
typedef pair<int,int> pii;
int n, m;
vector<pii> tr;
vector<pii> mush;
bool cmp(pii a, pii b)
{
	return a.fi < b.fi;
}
int main()
{
	tr.clear(); mush.clear();
	int x, h, l, r;
	scanf("%d%d", &n, &m);
	for (int i=0; i<n; i++)
	{
		scanf("%d%d%d%d", &x, &h, &l, &r);
		tr.pb(mp(x-h, l)); tr.pb(mp(x, -l));
		tr.pb(mp(x+1, r)); tr.pb(mp(x+h+1, -r));
	}

	for (int i=0; i<m; i++)
	{
		scanf("%d%d", &x, &h);
		mush.pb(mp(x, h));
	}
	sort(tr.begin(), tr.end());
	sort(mush.begin(), mush.end(), cmp);
	
	double ans = 0.0, p = 0.0;
	int j = 0, cnt = 0;
	for (int i=0; i<(int)mush.size(); i++)
	{
		int idx = mush[i].fi;
		int z = mush[i].se;
		while (j<tr.size() && idx >= tr[j].fi)
		{
			int tmp = tr[j].se;
			if (tmp > 0)
			{
				if (tmp == 100) cnt++;
				else p += log(1.0 - double(tmp)/100.0);			
			}
			if (tmp < 0)
			{
				tmp *= -1;
				if (tmp == 100) cnt--;
				else p -= log(1.0 - double(tmp)/100.0);			
			}
			j++;
		}
		if (cnt == 0) ans += double(z) * exp(p);
	}
	printf("%.8f\n", ans);
	return 0;
}
