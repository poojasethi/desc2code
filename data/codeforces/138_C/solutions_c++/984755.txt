
#include <algorithm>
#include <cmath>
#include <iostream>
#include <utility>
#include <vector>

#define MAXN 100000
#define MAXM 10000

using namespace std;

vector <pair <pair <int, int>, int> > events;

inline void add_event(int x, int type, int data) {
    events.push_back(make_pair(make_pair(x, type), data));
}

double lprob[100];

int main() {
    int n, m;
    cin >> n >> m;
    for (int i = 0; i < n; i++) {
        int a, h, l, r;
        cin >> a >> h >> l >> r;
        add_event(a - h, 0, l);
        add_event(a - 1, 2, l);
        add_event(a + 1, 0, r);
        add_event(a + h, 2, r);
    }
    for (int i = 0; i < m; i++) {
        int b, z;
        cin >> b >> z;
        add_event(b, 1, z);
    }

    sort(events.begin(), events.end());

    for (int i = 0; i < 100; i++)
        lprob[i] = log(1 - 0.01 * i);

    double total = 0;
    double logprob = 0;
    int zeros = 0;
    for (int i = 0; i < events.size(); i++) {
        int type = events[i].first.second;
        int data = events[i].second;
        if (type == 0) {
            if (data == 100)
                zeros++;
            else
                logprob += lprob[data];
        }
        else if (type == 2) {
            if (data == 100)
                zeros--;
            else
                logprob -= lprob[data];
        }
        else {
            if (zeros == 0)
                total += data * exp(logprob);
        }
    }
    cout << total << endl;
}
