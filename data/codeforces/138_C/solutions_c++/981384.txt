#include <map>
#include <cmath>
#include <cstdio>
#include <vector>
#include <string>
#include <cstdlib>
#include <cstring>
#include <sstream>
#include <fstream>
#include <iostream>
#include <algorithm>
#define PB push_back
#define MP make_pair
#define BG begin()
#define ED end()
#define SZ(x) ((int)((x).size()))
#define FF first
#define SS second
#define foreach(i,x) for (__typeof((x).begin()) i=(x).begin();i!=(x).end();i++)
#define FOR(i,l,r) for (int i=(l);i<=(r);i++)
#define ROF(i,r,l) for (int i=(r);i>=(l);i--)
using namespace std;

struct aa {
  long double w,c;
  int k;
} a[500000];

int t;

void cover(long double l,long double r,int j) {
  if (j==100) return;
  if (j==0) {
    a[++t]=(aa){l,0,0};
    a[++t]=(aa){r,-1,0};
  } else {
    a[++t]=(aa){l,j*0.01,0};
    a[++t]=(aa){r,1/(j*0.01),0};
  };
}

bool cmp(aa a,aa b) {return a.w<b.w-1e-3;}

int main() {
  int n,m;
  scanf("%d%d",&n,&m);
  FOR(i,1,n) {
    int a,h,l,r;
    scanf("%d%d%d%d",&a,&h,&l,&r);
    cover(a-h-.1,a-.1,100-l);
    cover(a+.1,a+h+.1,100-r);
  };
  FOR(i,1,m) {
    int b,z;
    scanf("%d%d",&b,&z);
    a[++t]=(aa){b,z,1};
  };
  sort(a+1,a+1+t,cmp);
  long double nj=1,ans=0;
  int cv=0,cc=0;
  FOR(i,1,t) if (a[i].k) {
    long double nnj=cv?0:nj;
    ans+=a[i].c*nnj*pow((long double)10,cc);
  } else {
    if (abs(a[i].c)<1e-10) cv++; else
    if (abs(a[i].c+1)<1e-10) cv--; else nj*=a[i].c;
    while (nj<0.1) nj*=10,cc--;
    while (nj>1) nj*=.1,cc++;
  };
  printf("%.8lf",(double)ans);
  return 0;
}
