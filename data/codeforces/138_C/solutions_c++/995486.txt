#include<cstdio>
#include<cstring>
#include<queue>
#include<algorithm>
#include<vector>
#include<cmath>
using namespace std;
typedef pair<int,int> pii;
vector<pair<pii,int > > ls;
vector<pii>	ts;
priority_queue<pii,vector<pii>,greater<pii> > pq;
#define F	first
#define S	second
#define PB	push_back
#define MP	make_pair
double xx=0;int cc=0;
void mLN(int x){if(x==0)cc++;else xx+=log(x/100.0);}
void dLN(int x){if(x==0)cc--;else xx-=log(x/100.0);}
double EXP(){return cc?0:exp(xx);}
int main(){
	int n,m,a,l,h,r;
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;++i){
		scanf("%d%d%d%d",&a,&h,&l,&r);
		ls.PB(MP(MP(a-h,a-1),100-l));
		ls.PB(MP(MP(a+1,a+h),100-r));
	}
	sort(ls.begin(),ls.end());
	ts.resize(m);
	for(int i=0;i<m;++i)scanf("%d%d",&ts[i].F,&ts[i].S);
	sort(ts.begin(),ts.end());
	double b=0;n<<=1;
	for(int i=0,j=0;i<m;++i){
		for(;j<n&&ls[j].F.F<=ts[i].F;++j){
			pq.push(MP(ls[j].F.S,ls[j].S));
			mLN(ls[j].S);
		}
		for(;pq.size()&&pq.top().F<ts[i].F;pq.pop())dLN(pq.top().S);
		b+=EXP()*ts[i].S;
	}
	printf("%.9lf",fabs(b));
	return 0;
}
