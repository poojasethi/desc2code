#include <cstdio>
#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
using namespace std;
int main() {
    int n, m;
    cin >> n >> m;
    
    vector<pair<int,int> > hoge;
    for (int i = 0; i < n; ++ i) {
        int ai, hi, li, ri;
        cin >> ai >> hi >> li >> ri;
        if (li) hoge.push_back(make_pair(ai-hi,  -li));
        if (li) hoge.push_back(make_pair(ai,     +li));
        if (ri) hoge.push_back(make_pair(ai+1,   -ri));
        if (ri) hoge.push_back(make_pair(ai+hi+1,+ri));
    }
    
    vector<pair<int,int> > piyo;
    for (int i = 0; i < m; ++ i) {
        int bi, zi;
        cin >> bi >> zi;
        piyo.push_back(make_pair(bi, zi));
    }
    
    sort(hoge.begin(), hoge.end());
    sort(piyo.begin(), piyo.end());
    
    double prob = 0;
    int pos = 0;
    double r = 0;
    int zero = 0;
    for (int i = 0; i < m; ++ i) {
        while (pos < (int)hoge.size() && hoge[pos].first <= piyo[i].first) {
            if (hoge[pos].second == 100) {
                -- zero;
            } else if (hoge[pos].second == -100) {
                ++ zero;
            } else if (hoge[pos].second > 0) {
                prob -= log((100-hoge[pos].second)/100.0);
            } else {
                prob += log((100+hoge[pos].second)/100.0);
            }
            ++ pos;
        }
        if (zero == 0) r += exp(prob) * piyo[i].second;
    }
    cout << r << endl;
}
