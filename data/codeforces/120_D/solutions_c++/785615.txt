#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
using namespace std;

ifstream fin("input.txt");
ofstream fout("output.txt");

int ways(const vector<int> &r, const vector<int> &v) {
    int p[3] = {}, ct = 0;

    for (int i = 1; i < (int)v.size(); ++i)
    for (int j = i+1; j < (int)v.size()-1; ++j) {
        p[0] = v[i];
        p[1] = v[j] - v[i];
        p[2] = v[v.size()-1] - v[j];
        sort(p, p+3);

        int as = 0;
        for (int a = 0; a < 3; ++a) {
            as += abs(p[a]-r[a]);
        }
        ct += (as == 0);
    }
    return ct;
}

int main() {
    int n, m;
    fin >> n >> m;
    vector<int> sumh(n+1), sumv(m+1);
    for (int i = 0; i < n; ++i)
    for (int j = 0; j < m; ++j) {
        int t;
        fin >> t;
        sumh[i+1] += t;
        sumv[j+1] += t;
    }

    vector<int> res(3);
    fin >> res[0] >> res[1] >> res[2];
    sort(res.begin(), res.end());

    for (int i = 1; i <= n; ++i)
        sumh[i] += sumh[i-1];

    for (int i = 1; i <= m; ++i)
        sumv[i] += sumv[i-1];

    fout << ways(res, sumh) + ways(res, sumv) << endl;
    return 0;
}
