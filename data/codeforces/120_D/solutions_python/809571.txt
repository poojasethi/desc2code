from itertools import permutations

inp = open('input.txt')
out = open('output.txt', 'w')

(n, m) = map(int, inp.readline().split())

F = []

for i in range(n):
	F.append(map(int, inp.readline().split()))

shares = sorted(map(int, inp.readline().split()))

FT = zip(*F)

F_SUM = map(sum, FT)
FT_SUM = map(sum, F)

def ways(M_SUM, size):
	ans = 0
	for i in range(1, size-1):
		for j in range(i + 1, size):
			res = sorted([sum(M_SUM[0:i]), sum(M_SUM[i:j]), sum(M_SUM[j:size])])
			if res == shares:
				ans += 1
	return ans

total = ways(F_SUM, m) + ways(FT_SUM, n)

#print total

out.write(str(total))
