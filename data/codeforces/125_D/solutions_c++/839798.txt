#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int Inf = 1000000000;
int a[30005], s[30005], n;
int c1[30005],c2[30005];
bool check()
{
	int last = -1, d = Inf;
	for(int i = 0; i < n; i++)
		if(!s[i])
		{
//			printf("%d %d\n",last,d);
			if(last!=-1 && d!=Inf && a[i]-a[last]!=d)
				return 0;
			if(last!=-1)
				d = a[i]-a[last];
			last = i;
		}
	if(last==-1)return 0;
	return 1;
}
void Pt()
{
	int m = 0,mm = 0;
	for(int i = 0; i < n; i++)	if(s[i])	++m;
	for(int i = 0; i < n; i++)
		if(s[i])
		{
			++mm;
			printf("%d%c",a[i],mm==m?'\n':' ');
		}
	for(int i = 0; i < n; i++)
		if(!s[i])
		{
			++mm;
			printf("%d%c",a[i],mm==n?'\n':' ');
		}
}
bool sol(int x,int y)
{
	memset(s,0,sizeof(s));
	s[x] = s[y] = 1;
	int d = a[y]-a[x];
	int last = y;
	for(int i = y+1; i < n; i++)
		if(a[i]-a[last]==d)
		{
			last = i;
			s[i] = 1;
		}
	if(check())
	{
		Pt();
		return 1;
	}
	s[last] = 0;
	if(check())
	{
		Pt();
		return 1;
	}
	return 0;
}

int main()
{
	scanf("%d",&n);
	for(int i = 0; i < n; i++)
		scanf("%d",&a[i]);
	if(n==2)
	{
		printf("%d\n%d\n",a[0],a[1]);
		return 0;
	}

	if(sol(0,1))return 0;
	if(sol(0,2))return 0;
	if(sol(1,2))return 0;
	puts("No solution");
	return 0;
}

		 				 				 					 		 	