#include <iostream>
#include <vector>
#include <set>
#include <map>

using namespace std;

int a[30010];
int n;
vector<int> v1;
set<int> v2;
map<int, int> cnt;
bool check(int start, int diff, int last)
{
	for (int i = start; i <= n; i++)
		if (a[i] - a[last] == diff)
		{
			last = i;
			v1.push_back(i);
		}
		else
			v2.insert(i);
	if (v2.empty())
	{
		v2.insert(v1.back());
		v1.pop_back();
		return true;
	}
	cnt.clear();
	for (set<int>::iterator it = v2.begin(); it != v2.end(); it++)
	{
		if (it != v2.begin())
		{
			set<int>::iterator it2 = it;
			it2--;
			cnt[a[*it] - a[*it2]]++;
		}
	}
	if (cnt.size() == 1)
		return true;
	for (int i = v1.size() - 1; i >= 0; i--)
	{
		set<int>::iterator it = (v2.insert(v1[i])).first;
		int t = -1, p = -1;
		if (it != v2.begin())
		{
			set<int>::iterator it2 = it;
			it2--;
			t = *it2;
			cnt[a[v1[i]] - a[t]]++;
		}
		if (it != v2.end())
		{
			set<int>::iterator it2 = it;
			it2++;
			p = *it2;
			cnt[a[p] - a[v1[i]]]++;
		}
		if (t != -1 && p != -1)
		{
			cnt[a[p] - a[t]]--;
			if (cnt[a[p] - a[t]] == 0)
				cnt.erase(a[p] - a[t]);
		}
		v1.pop_back();
		if (cnt.size() == 1)
			return true;
	}
	return false;
}
void printAnswer()
{
	for (int i = 0; i < v1.size(); i++)
		cout << a[v1[i]] << " ";
	cout << endl;
	for (set<int>::iterator it = v2.begin(); it != v2.end(); it++)
		cout << a[*it] << " ";
	cout << endl;
}
int main()
{
	cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> a[i];
	v1.push_back(1);
	v1.push_back(2);
	if (check(3, a[2] - a[1], 2))
	{
		printAnswer();
		return 0;
	}
	v1.clear();
	v2.clear();
	v1.push_back(1);
	v2.insert(2);
	v1.push_back(3);
	if (check(4, a[3] - a[1], 3))
	{
		printAnswer();
		return 0;
	}
	v1.clear();
	v2.clear();
	v2.insert(1);
	v1.push_back(2);
	v1.push_back(3);
	if (check(4, a[3] - a[2], 3))
	{
		printAnswer();
		return 0;
	}
	cout << "No solution" << endl;
}

      	   		  	   	   		