#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>

using namespace std;

const int MaxN = 30005;
const int oo = 0x3f3f3f3f;
int a[MaxN], n;
bool vst[MaxN];

bool doit() {
	int lhs = -oo, rhs = -oo, d;
	int cnt = 0;
	for (int i = 0; i < n; i++) {
		if (!vst[i]) {
			cnt++;
			if (lhs == -oo) {
				lhs = a[i];
			} else if (rhs == -oo) {
				rhs = a[i];
				d = rhs - lhs;
			} else {
				rhs += d;
				if (a[i] != rhs)
					return false;
			}
		}
	}
	if (!cnt)
		return false;
	return true;
}

bool doit(int lhs, int rhs) {
	int d = a[rhs] - a[lhs];
	int last = rhs;
	int now = a[rhs];
	for (int i = 0; i < n; i++)
		vst[i] = false;
	vst[lhs] = true;
	vst[rhs] = true;
	now += d;
	for (int i = rhs + 1; i < n; i++) {
		if (a[i] == now) {
			now += d;
			vst[i] = true;
			last = i;
		}
	}
	if (doit()) {
		for (int i = 0; i < n; i++)
			if (vst[i])
				printf("%d ", a[i]);
		puts("");
		for (int i = 0; i < n; i++)
			if (!vst[i])
				printf("%d ", a[i]);
		puts("");
		return true;
	}
	vst[last] = false;
	if (doit()) {
		for (int i = 0; i < n; i++)
			if (vst[i])
				printf("%d ", a[i]);
		puts("");
		for (int i = 0; i < n; i++)
			if (!vst[i])
				printf("%d ", a[i]);
		puts("");
		return true;
	}
	return false;
}

int main() {

	while (scanf("%d", &n) == 1) {
		for (int i = 0; i < n; i++)
			scanf("%d", &a[i]);
		if (!doit(0, 1) && !doit(0, 2) && !doit(1, 2))
			puts("No solution");
	}

	return 0;
}

 			  	  	 			 	 				  	