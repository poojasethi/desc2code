#include <cstdio>
#include <iostream>
#include <algorithm>
using namespace std;

const int maxn=30000+10;

int n, top1, top2, d1, d2;
int a[maxn], s1[maxn], s2[maxn];

inline bool add2(const int &i) {
	if (top2<2 || a[i]-a[s2[top2]]==d2) {
		s2[++top2]=i;
		if (top2==2) d2=a[s2[2]]-a[s2[1]];
		return true;
	}
	return false;
}

bool all2(int i) {
	int tmp=top2;
	while (i<=n) {
		if (!add2(i)) {
			top2=tmp;
			return false;
		}
		++i;
	}
	return true;
}

bool check(int h1, int h2) {
	top1=top2=0;
	s1[++top1]=h1, s1[++top1]=h2;
	d1=a[h2]-a[h1];
	if (h2==3) s2[++top2]=6-h1-h2;
	for (int i=h2==3?4:3; i<=n; ++i)
		if (a[i]-a[s1[top1]]==d1) {
			if (all2(i)) return true;
			s1[++top1]=i;
		} else 
		if (!add2(i))
			return false;
	return true;
}

int main() {
	scanf("%d", &n);
	for (int i=1; i<=n; ++i)
		scanf("%d", &a[i]);
	
	if (n==2) {
		printf("%d\n%d\n", a[1], a[2]);
		exit(0);
	}
	if (check(1, 2) || check(1, 3) || check(2, 3)) {
		for (int i=1; i<=top1; ++i)
			printf("%d ", a[s1[i]]);
		printf("\n");
		for (int i=1; i<=top2; ++i)
			printf("%d ", a[s2[i]]);
		printf("\n");
	} else
		printf("No solution\n");
	
	return 0;
}
