#include <iostream>
#include <cstring>
#include <vector>
using namespace std;
const int MAX = 30005;
vector<int> ans1, ans2;
int a[MAX], n;
bool mark[MAX];
bool isgood(vector<int> v)
{
	if (v.size() <= 2)
		return true;
	int d = a[v[1]] - a[v[0]];
	for (int i = 2; i < v.size(); i++)
		if (a[v[i]] != a[v[i - 1]] + d)
			return false;
	return true;
}
bool check(int p1, int p2)
{
	memset(mark, false, sizeof(mark));
	mark[p1] = mark[p2] = true;
	ans1.clear();
	ans2.clear();
	ans1.push_back(p1);
	ans1.push_back(p2);
	int d = a[ans1[1]] - a[ans1[0]];
	for (int i = p2 + 1; i < n; i++)
		if (a[i] == a[ans1.back()] + d)
		{
			ans1.push_back(i);
			mark[i] = true;
		}
	for (int i = 0; i < 100 && ans1.size(); i++)
	{
		for (int i = 0; i < n; i++)
			if (!mark[i])
				ans2.push_back(i);
		if (isgood(ans2))
			return true;
		mark[ans1.back()] = false;
		ans1.pop_back();
		ans2.clear();
	}
	return false;
}
void print()
{
	if (ans1.size() == n)
	{
		ans2.push_back(ans1.back());
		ans1.pop_back();
	}
	if (ans2.size() == n)
	{
		ans1.push_back(ans2.back());
		ans2.pop_back();
	}
	for (int i = 0; i < ans1.size(); i++)
		cout << a[ans1[i]] << " ";
	cout << endl;
	for (int i = 0; i < ans2.size(); i++)
		cout << a[ans2[i]] << " ";
}
int main()
{
	ios::sync_with_stdio(false);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	if (check(0, 1))
	{
		print();
		return 0;
	}
	if (check(0, 2))
	{
		print();
		return 0;
	}
	if (check(1, 2))
	{
		print();
		return 0;
	}
	cout << "No solution";
	return 0;
}