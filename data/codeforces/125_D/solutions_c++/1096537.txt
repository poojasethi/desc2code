#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>

using namespace std;
const int N=30005;
int a[N],v[N];
int n,flag=0;

void write()
{
    flag=1;
    int t=0,i;
    for (i=1; i<=n; i++)
     if (v[i]==1)
     {
         if (t==0) t=1; else printf(" ");
         printf("%d",a[i]);
     }
     printf("\n");
    t=0;
     for (i=1; i<=n; i++)
     if (v[i]==0)
     {
         if (t==0) t=1; else printf(" ");
         printf("%d",a[i]);
     }
     printf("\n");
}

bool check()
{
    int s=0,i,p,c;
    for (i=1; i<=n; i++)
    if (v[i]==0)
    {
        s++;
        if (s==1) p=a[i];
        else if (s==2) {c=a[i]-p; p=a[i];}
        else
        {
            if (a[i]!=p+c) return false;
            p=a[i];
        }
    }
    if (s==0) return false;
    return true;
}

void solve(int p,int q)
{
    if (flag) return;
    int c=q-p,i;
    memset(v,0,sizeof(v));
    for (i=1; i<=n; i++)
     if (a[i]==p)
     {
         v[i]=1;
         p+=c;
     }
    //write();
    if (check()) {write(); return;}
    i=n;
    while (v[i]==0) i--;
    v[i]=0;
    //write();
    if (check()) {write(); return;}
}

int main()
{
    int i;
    scanf("%d",&n);
    for (i=1; i<=n; i++) scanf("%d",&a[i]);
    if (n==2)
    {
        printf("%d\n",a[1]);
        printf("%d\n",a[2]);
        return 0;
    }
    solve(a[1],a[2]);
    solve(a[1],a[3]);
    solve(a[2],a[3]);
    if (!flag) printf("No solution\n");
}
