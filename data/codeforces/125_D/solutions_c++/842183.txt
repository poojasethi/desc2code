#include <cstdio>
#include <vector>
#include <climits>

#define INF (INT_MAX / 3)

using namespace std;

const int MAX_N = 30005;

int n;
int v[MAX_N];
vector < int > ans1, ans2;

bool cool(const vector < int > &seq) {
	int last = INF;
	int diff = INF;
	bool lose = false;
	int curr = 0;

	ans1.clear();
	ans2.clear();

	for (int i = 0; i < n; i++) {
		if (curr < (int) seq.size()) {
			if (seq[curr] == i) {
				ans1.push_back(v[i]);

				curr++;
				continue;
			}
			else if (seq[curr] < i)
				curr++;
		}

		ans2.push_back(v[i]);

		if (diff != INF && v[i] - last != diff) {
			lose = true;
			break;
		}

		if (last != INF)
			diff = v[i] - last;
		last = v[i];
	}

	return !lose && !ans1.empty() && !ans2.empty();
}

bool ok(int first, int diff) {
	vector < int > seq;
	seq.push_back(first);

	for (int i = first + 1; i < n; i++) if (v[i] - v[seq.back()] == diff)
		seq.push_back(i);
	
	if (cool(seq))
		return true;
	
	seq.pop_back();
	if (cool(seq))
		return true;
	
	return false;
}

int main() {
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%d", &v[i]);
	
	bool is_ok = false;
	for (int i = 1; i < 3 && !is_ok; i++)
		is_ok |= ok(0, v[i] - v[0]);
	
	if (!is_ok)
		is_ok |= ok(1, v[2] - v[1]);
	
	if (is_ok) {
		for (int i = 0; i < (int) ans1.size(); i++) {
			if (i > 0)
				printf(" ");
			printf("%d", ans1[i]);
		}
		printf("\n");
		
		for (int i = 0; i < (int) ans2.size(); i++) {
			if (i > 0)
				printf(" ");
			printf("%d", ans2[i]);
		}
		printf("\n");
	}
	else
		printf("No solution\n");

	return 0;
}
