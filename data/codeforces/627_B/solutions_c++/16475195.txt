#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define INF 0x3f3f3f3f
#define MAX 200005

int n, k, a, b, q;

int treea[MAX], treeb[MAX], size;
int query(int *tree, int idx)
{
	int sum = 0;
	while(idx > 0)
	{
		sum += tree[idx];
		idx -= (idx & -idx);
	}
	return sum;
}
int query(int *tree, int l, int r){ return query(tree, r) - query(tree, l-1); }
void update(int *tree, int idx, int val)
{
	while(idx <= size)
	{
		tree[idx] += val;
		idx += (idx & -idx);
	}
}

int main()
{
	scanf("%d %d %d %d %d", &n, &k, &a, &b, &q);
	size = n;
	
	while(q--)
	{
		int op, x, y;
		scanf("%d", &op);
		if(op == 1)
		{
			scanf("%d %d", &x, &y);
				
			int da = min(a, y + query(treea, x, x)) - query(treea, x, x);
			int db = min(b, y + query(treeb, x, x)) - query(treeb, x, x);

			update(treea, x, da);
			update(treeb, x, db);
		}
		else
		{
			scanf("%d", &x);
			int sol = 0;
			if(x-1 >= 1) sol += query(treeb, 1, x-1);
			if(x+k <= n) sol += query(treea, x+k, n);
			printf("%d\n", sol);
		}
	}

	return 0;
}
