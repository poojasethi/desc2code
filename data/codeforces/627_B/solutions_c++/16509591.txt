#include <stdio.h>

int n = 0;
int k = 0;
int a = 0;
int b = 0;
int q = 0;

const int N = 200000;

int ta[N + 10];
int tb[N + 10];

void add(int * t,int p,int v)
{
	for(;p <= N;p += (p & -p))
		t[p] += v;
} 

int ask(int * t,int p)
{
	int res = 0;
	for(;p >= 1;p -= (p & -p))
		res += t[p];
	return res;
}

int ask(int * t,int l,int r)
{
	return ask(t,r) - ask(t,l-1);
}

int numa[N + 10];
int numb[N + 10];

int rd(int a,int b)
{
	return a < b ? a : b;
}

int main()
{
//	freopen("ex.in","r",stdin);
//	freopen("ex.out","w",stdout);
	
	scanf("%d%d%d%d%d",&n,&k,&a,&b,&q);
	
	int x = 0;
	int y = 0;
	int z = 0;
	int val = 0;
	for(int i = 1;i <= q;i++)
	{
		scanf("%d",&x);
		if(x == 1)
		{
			scanf("%d%d",&y,&z);
			
			val = rd(numa[y] + z,a) - numa[y];
			add(ta,y,val);
			numa[y] += val;
			
			val = rd(numb[y] + z,b) - numb[y];
			add(tb,y,val);
			numb[y] += val;
		}
		else
		{
			scanf("%d",&y);
			int p1 = y;
			int p2 = y + k - 1;
			
			int res = ask(tb,1,p1-1) + ask(ta,p2 + 1,n);
			
			printf("%d\n",res);
		}
	}
	
	return 0;
}
