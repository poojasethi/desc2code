#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<iostream>
using namespace std;
typedef long long LL;
typedef LL Mat[5][5];
LL t;
int n;
char s[110000];
int go[3100000][4],root,tn;
Mat X,A,temp;
int g[5][5];

void tdfs(int p,int b,int d)
{
	for(int j=0;j<4;j++)
		if(!go[p][j])g[b][j]=min(g[b][j],d);
		else tdfs(go[p][j],b,d+1);
}

void mult(Mat &a,Mat &b,Mat &c)
{
	for(int i=0;i<4;i++)
		for(int j=0;j<4;j++)
		{
			temp[i][j]=(1LL<<61)-1;
			for(int k=0;k<4;k++)
				temp[i][j]=min(temp[i][j],a[i][k]+b[k][j]);
		}
		for(int i=0;i<4;i++)
			for(int j=0;j<4;j++)
				c[i][j]=temp[i][j];
}

bool check(LL c)
{
	for(int i=0;i<4;i++)
		for(int j=0;j<4;j++)
			X[i][j]=g[i][j],A[i][j]=0;
	for(LL b=c;b;b>>=1,mult(X,X,X))
		if(b&1)mult(A,X,A);
	LL res=(1LL<<61)-1;
	for(int i=0;i<4;i++)
		for(int j=0;j<4;j++)
			res=min(res,A[i][j]);
	return res>=t;
}

int main()
{
	cin>>t;
	scanf("%s",s);
	n=strlen(s);
	root=++tn;
	for(int i=0;i<n;i++)
	{
		int p=root;
		for(int c,j=i;j<i+30&&j<n;j++)
		{
			c=s[j]-'A';
			p=go[p][c]?go[p][c]:go[p][c]=++tn;
		}
	}
	for(int i=0;i<4;i++)
		for(int j=0;j<4;j++)
			g[i][j]=(1<<30)-1;
	for(int i=0;i<4;i++)
		tdfs(go[root][i],i,1);
	LL low=-1,high=(1LL<<61)-1,mid;
	while(low+1<high)
	{
		mid=low+high>>1;
		if(check(mid))high=mid;
		else low=mid;
	}
	cout<<high<<endl;
	return 0;
}
