#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<vector>
#include<string>
#define LL long long
using namespace std;
LL t1[4][4],inf=2e18;
struct ma1
{
	LL a[4][4];
	void Mul(LL b[4][4])
	{
		for(int i=0;i<4;i++)
			for(int j=0;j<4;j++) t1[i][j]=inf;
		for(int i=0;i<4;i++)
			for(int j=0;j<4;j++)
				for(int k=0;k<4;k++) t1[i][k]=min(t1[i][k],a[i][j]+b[j][k]);
		memcpy(a,t1,sizeof(a));
	}
}B[70],tmp;
struct node
{
	int vis[4];
}a[100010*13];
int l,tot;
LL n;
char T[100010];
void read(int &x)
{
	char ch=getchar();int mark=1;for(;ch!='-'&&(ch<'0'||ch>'9');ch=getchar());if (ch=='-') mark=-1,ch=getchar();
	for(x=0;ch>='0'&&ch<='9';ch=getchar()) x=x*10+ch-48;x*=mark;
}
bool check(LL time)
{
	tmp=B[0];
	time--;
	int t=0;
	while (time)
	{
		if (time&1) tmp.Mul(B[t].a);
		t++;time>>=1;
	}
	for(int i=0;i<4;i++)
		for(int j=0;j<4;j++)
			if (tmp.a[i][j]<n) return 0;
	return 1;
}
void dfs(int u,int st,int l)
{
	for(int i=0;i<4;i++) 
		if (a[u].vis[i]) dfs(a[u].vis[i],st,l+1);
		else B[0].a[st][i]=min(B[0].a[st][i],(LL)l);
}
int main()
{
	//freopen("a.in","r",stdin);
	scanf("%I64d",&n);
	scanf("%s",T);
	l=strlen(T);
	for(int i=0;i<4;i++)
		for(int j=0;j<4;j++) B[0].a[i][j]=inf;
	for(int i=0;i<l;i++) 
	{
		int p=0;
		for(int j=i;j<l&&j<i+13;j++)
		{
			int t=T[j]-65;
			if (!a[p].vis[t]) a[p].vis[t]=++tot;
			p=a[p].vis[t];
		}
	}
	for(int i=0;i<4;i++) dfs(a[0].vis[i],i,1);
	for(int i=1;i<60;i++) B[i]=B[i-1],B[i].Mul(B[i-1].a);
	LL L=1,R=n;
	while (L+1<R)
	{
		LL mid=(L+R)>>1;
		if (check(mid)) R=mid;else L=mid;
	}
	if (check(L)) printf("%I64d\n",L);
	else printf("%I64d\n",R);
	return 0;
}
