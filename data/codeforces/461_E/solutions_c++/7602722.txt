#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<algorithm>
#include<ctime>
#include<iostream>
#include<cmath>
#include<vector>
#define int64 long long
#define mk make_pair
#define pb push_back
#define sqr(x) (x)*(x)
#define rep(i,x,y) for(int i=x;i<=y;++i)
#define VI vector<int>
#define N 110000
using namespace std;
const int64 inf=2e18;
int64 ans,n,a[77][4][4],g[4][4],tmp[4][4];
int next[N*31][4],l,tot;
char c[N];
void dfs(int x,int s,int64 dep){
    for(int i=0;i<4;++i){
        if(!next[x][i])a[0][s][i]=min(a[0][s][i],dep);
        else dfs(next[x][i],s,dep+1);
    }
}
void renew(int64 a[4][4],int64 b[4][4],int64 c[4][4]){
    for(int i=0;i<4;++i)
        for(int j=0;j<4;++j)a[i][j]=inf;
    for(int i=0;i<4;++i)
        for(int j=0;j<4;++j)
            for(int k=0;k<4;++k)a[i][k]=min(a[i][k],b[i][j]+c[j][k]);
}
int main(){
    scanf("%I64d",&n);
    scanf("%s",c+1);
    l=strlen(c+1);
    tot=1;
    for(int i=1;i<=l;++i){
        int p=1;
        for(int j=i;j<=l && j<=i+30;++j){
            int v=c[j]-'A';
            if(!next[p][v])next[p][v]=++tot;
            p=next[p][v];
        }
    }
    for(int i=0;i<4;++i)
        for(int j=0;j<4;++j)a[0][i][j]=inf;
    for(int i=0;i<4;++i)
        dfs(next[1][i],i,1);
    for(int i=1;i<=70;++i)renew(a[i],a[i-1],a[i-1]);
    memset(g,0,sizeof(g));
    ans=0;
    for(int i=70;i>=0;--i){
        memcpy(tmp,g,sizeof(g));
        renew(g,tmp,a[i]);
        int64 minn=inf;
        for(int j=0;j<4;++j)
            for(int k=0;k<4;++k)minn=min(minn,g[j][k]);
        if(minn>=n){
            memcpy(g,tmp,sizeof(g));
        }else ans+=1ll<<i;
    }
    printf("%I64d\n",ans+1);
}