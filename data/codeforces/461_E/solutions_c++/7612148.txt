#include <iostream>
#include <cstring>
#include <cstdio>
#define maxn 3000010

using namespace std;
typedef long long ll;

const ll inf=1ll<<61;
const ll mod=1000000007;

struct Node
{
    Node *ch[4];   
}pool[maxn],*cur=pool,*rt,*p,*q;

ll f[5][5],g[5][5],res[5][5],tmp[5][5],t;
char s[maxn];
int n;

ll pow(ll a,ll b)
{
    ll res=1;a%=mod;
    while(b)
    {
          if(b&1)res=res*a%mod;
          b>>=1,a=a*a%mod; 
    }
    return res;
}

void dfs(long long depth,Node *p,int b)
{
    for(int i=0;i<4;i++)
        if(!p->ch[i])g[b][i]=min(g[b][i],depth);
        else dfs(depth+1,p->ch[i],b);
}

ll check(ll c)
{
    memcpy(f,g,sizeof(f));
    memset(res,0,sizeof(res));
    
    for(;c;c>>=1)
    {
        if(c&1)
        {
            for(int i=0;i<4;i++)for(int j=0;j<4;j++)
            {
                tmp[i][j]=inf;
                for(int k=0;k<4;k++)
                    tmp[i][j]=min(tmp[i][j],res[i][k]+f[k][j]);
            }
            memcpy(res,tmp,sizeof(res));
        }
        
        for(int i=0;i<4;i++)for(int j=0;j<4;j++)
        {
            tmp[i][j]=inf;
            for(int k=0;k<4;k++)
                tmp[i][j]=min(tmp[i][j],f[i][k]+f[k][j]);
		}
		memcpy(f,tmp,sizeof(f));
    }
    
    ll ret=inf;
    for(int i=0;i<4;i++)for(int j=0;j<4;j++)
       ret=min(ret,res[i][j]);
    return ret;
}

void build()
{
    for(int i=0;i<n;i++)
    {
        p=rt;
        for(int j=i;j<i+30&&j<n;j++)
        {
            int k=s[j]-'A';
            if(!p->ch[k])p->ch[k]=cur++;
            p=p->ch[k];
        }
    }
}

int main()
{
    scanf("%I64d%s",&t,s),n=strlen(s);
    rt=cur++;
    
    build();
    
    memset(g,0x3f,sizeof(g));
    for(int i=0;i<4;i++)dfs(1,rt->ch[i],i);
    
    ll l=-1,r=inf,m;
    while(l+1<r)
    {
        m=(l+r)>>1;
        if(check(m)>=t)r=m;
        else l=m;
    }
    
    printf("%I64d\n",r);
    
    return 0;
}
