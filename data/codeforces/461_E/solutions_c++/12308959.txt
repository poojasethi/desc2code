#include <cstdio>
#include <cassert>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <cctype>
#include <utility>
#include <queue>
#include <cmath>
using namespace std;
 
typedef long long LL;
typedef double DB;
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VPII;
 
#define pb push_back
 
#define X first
#define Y second
 
#define bit(x) (1<<(x))
 
const int N = 270000;
 
bool chk[10][N];
 
LL a[65][5][5];
LL b[5][5], c[5][5];
 
char s[100005];
 
int main() {
 
    int m, f, i, j, k, l, st, en;
    LL n, ans = 0;
 
    scanf("%lld%s", &n, s);
 
    m = strlen(s);
    for (i = 0; i < m; i++) {
        for (k = 0, j = i; j < m && j < i + 9; j++) {
            k = k * 4 + (s[j] - 'A');
            chk[j - i + 1][k] = 1;
        }
    }
 
    for (i = 0; i < 4; i++) for (j = 0; j < 4; j++) a[0][i][j] = 9;
    for (i = 2; i <= 9; i++) {
        for (j = 0; j < bit(2 * i); j++) if (!chk[i][j]) {
            en = (j & 3), st = j >> (2 * i - 2);
            a[0][st][en] = min(a[0][st][en], i - 1LL);
        }
    }
 
    for (i = 1; i <= 59; i++) {
        for (j = 0; j < 4; j++) {
            for (k = 0; k < 4; k++) {
                a[i][j][k] = LONG_LONG_MAX;
                for (l = 0; l < 4; l++) a[i][j][k] = min(a[i][j][k], a[i - 1][j][l] + a[i - 1][l][k]);
            }
        }
    }
 
    for (i = 0; i < 4; i++) for (j = 0; j < 4; j++) if (i != j) b[i][j] = n;
 
    for (i = 59; i >= 0; i--) {
        for (f = j = 0; j < 4; j++) {
            for (k = 0; k < 4; k++) {
                for (c[j][k] = n, l = 0; l < 4; l++) c[j][k] = min(c[j][k], b[j][l] + a[i][l][k]);
                if (c[j][k] < n) f = 1;
            }
        }
        if (f) memcpy(b, c, sizeof b), ans |= (1LL<<i);
    }
 
    ans++;
    printf("%lld\n", ans);
 
    return 0;
} 
				   	 	 	   			 	 	     	  	