#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <queue>
#include <set>

using namespace std;

typedef unsigned long long ll;

const int N = 1000010;

char s[N];
ll dis[5][5];

void Multi(ll a[5][5], ll b[5][5]){
	ll c[5][5] = {};
	memset(c, 0xff, sizeof(c));
	for(int i = 1; i <= 4; i++)
		for(int j = 1; j <= 4; j++)
			for(int k = 1; k <= 4; k++)
				c[i][j] = min(c[i][j], a[i][k] + b[k][j]);
	for(int i = 1; i <= 4; i++)
		for(int j = 1; j <= 4; j++)
			a[i][j] = c[i][j];
}

ll Pow(ll a[5][5], ll k){
	ll ret[5][5] = {};
	for(int i = 1; i <= 4; i++)
		ret[i][i] = 1;
	while(k){
		if(k & 1) Multi(ret, a);
		Multi(a, a);
		k >>= 1;
	}
	ll ans = 0xffffffffffffffffll;
	for(int i = 1; i <= 4; i++)
		for(int j = 1; j <= 4; j++)
			ans = min(ans, ret[i][j]);
	return ans;
}

int main(){
	set<ll> st;
	ll k;
	cin >> k;
	scanf("%s", s);
	int n = strlen(s);
	for(int i = 0; i < n; i++){
		ll ret = 0;
		for(int j = 0; j < 11 && i + j < n; j++){
			ret = ret * 7 + s[i + j] - 'A' + 1;
			st.insert(ret);
		}
	}
	memset(dis, 0xff, sizeof(dis));
	queue<ll> que[5];
	for(int i = 1; i <= 4; i++)
		que[i].push(i);
	for(int l = 1; l <= 10; l++){
		queue<ll> tmp[5];
		for(int i = 1; i <= 4; i++){
			while(que[i].size()){
				ll u = que[i].front();
				que[i].pop();
				for(int j = 1; j <= 4; j++){
					ll v = u * 7 + j;
					if(!st.count(v)){
						dis[i][j] = min(dis[i][j], ll(l));
					}
					tmp[i].push(v);
				}
			}
		}
		for(int i = 1; i <= 4; i++)
			swap(tmp[i], que[i]);
	}
	//for(int i = 1; i <= 4; i++, cout << endl)
		//for(int j = 1; j <= 4; j++)
			//cout << dis[i][j] << " ";
	ll l = 1, r = 1e18, ans = (k > 0);
	while(l <= r){
		ll mid = (l + r) >> 1;
		ll a[5][5] = {};
		for(int i = 1; i <= 4; i++)
			for(int j = 1; j <= 4; j++)
				a[i][j] = dis[i][j];
		//cout << l << " " << r << " " << mid << endl;
		ll x = Pow(a, mid);
		//cout << x << endl;
		if(x < k) ans = mid + 1, l = mid + 1;
		else if(x == k) ans = mid, l = mid + 1;
		else r = mid - 1;
	}
	cout << ans << endl;
	return 0;
}
