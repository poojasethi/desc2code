#include <bits/stdc++.h>
using namespace std;
const int Block = 317;
struct Query{
	int l,r,num;
	bool operator<(const Query other)const{
		return r<other.r;
	}
	Query(int l=0,int r=0,int num=0):l(l),r(r),num(num){}
};
int cnt[1<<20];
long long result = 0;
int fav;
void add(int v){
	result += cnt[v^fav];
	cnt[v]++;
}
void del(int v){
	cnt[v]--;
	result -= cnt[v^fav];
}
int main(){
	int n,m,i,j,a;cin>>n>>m>>fav;
	vector<int> pref(n+1);
	pref[0]=0;
	for(int i=1;i<=n;++i)
		cin>>a,pref[i]= pref[i-1]^a;

	vector<vector<Query> >block(n/Block+2,vector<Query>());
	int l,r;
	for(i=0;i<m;++i)
		cin>>l>>r,--l,++r,block[l/Block].push_back(Query(l,r,i));
	for(i=0;i<block.size();++i)
		sort(block[i].begin(),block[i].end());

	Query q;
	vector<long long> ret(m);
	for(i=0;i<block.size();++i){
		l = r = i*Block;
		for(j=0;j<block[i].size();++j){
			q = block[i][j];
			while(r<q.r)
				add(pref[r]),++r;
			while(l<q.l)
				del(pref[l]),++l;
			while(l>q.l)
				--l,add(pref[l]);
			ret[q.num]= result;
		}
		for(j=l;j<r;++j)
			del(pref[j]);
	}
	for(i=0;i<m;++i)
		cout<<ret[i]<<endl;
}
