#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<cstdlib>
#include<cmath>
using namespace std;
struct QUERY
{
	int l,r,id;
}q[200005];
int num[100005],pos[100005],sum[100005];
long long cnt[3000005],ans[100005],tmp=0;
int n,m,size,k;
int cmp(const QUERY &a,const QUERY &b)
{
	if(pos[a.l]==pos[b.l])return a.r<b.r;
	return pos[a.l]<pos[b.l];
}
void del(int j)
{
	cnt[sum[j]]--;
	tmp-=cnt[sum[j]^k];
}
void add(int j)
{
	tmp+=cnt[sum[j]^k];
	cnt[sum[j]]++;
}
int main()
{
	scanf("%d%d%d",&n,&m,&k);
	for(int i=1;i<=n;++i)
	{
		scanf("%d",&num[i]);
		pos[i]=i/400;
		sum[i]=sum[i-1]^num[i];
	}
	for(int i=1;i<=m;++i)
	{
		scanf("%d%d",&q[i].l,&q[i].r);q[i].id=i;
		q[i].l--;
	}
	sort(q+1,q+m+1,cmp);
	int pl=0,pr=0;cnt[0]=1;
	for(int i=1;i<=m;++i)
	{
		int id=q[i].id;
		while(pr<q[i].r)add(++pr);
		while(pr>q[i].r)del(pr--);
		while(pl<q[i].l)del(pl++);
		while(pl>q[i].l)add(--pl);
		ans[q[i].id]=tmp;
	}
	for(int i=1;i<=m;++i)printf("%I64d\n",ans[i]);
	return 0;
}
