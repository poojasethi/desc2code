#include<bits/stdc++.h>
using namespace std;
int sum[100010];
int n,m,k;
int a[100010];
struct query{
	int l,r,id;
	long long ans;
}q[100010];
long long cnt[2000010];
int pos[100010];
long long ans;
int cmp1(query a,query b){
	if(pos[a.l]==pos[b.l])return a.r<b.r;
	return pos[a.l]<pos[b.l];
}
int cmp2(query a,query b){
	return a.id<b.id;
}
void del(int j){
	cnt[sum[j]]--;ans-=cnt[sum[j]^k];
}
void add(int j){
	ans+=cnt[sum[j]^k];cnt[sum[j]]++;
}
int main(){
	scanf("%d%d%d",&n,&m,&k);
	for(int i=1;i<=n;++i)scanf("%d",&a[i]);
	for(int i=1;i<=m;++i)scanf("%d%d",&q[i].l,&q[i].r),q[i].id=i,q[i].l--;
	for(int i=1;i<=n;++i)sum[i]=sum[i-1]^a[i];
	int p=sqrt(n);
	for(int i=1;i<=n;++i)pos[i]=i/p;
	sort(q+1,q+m+1,cmp1);
	for(int i=1,l=1,r=0;i<=m;++i){
		while(l<q[i].l)del(l++);
		while(l>q[i].l)add(--l);
		while(r<q[i].r)add(++r);
		while(r>q[i].r)del(r--);
		q[i].ans=ans;
	}
	sort(q+1,q+m+1,cmp2);
	for(int i=1;i<=m;++i)
		printf("%I64d\n",q[i].ans);
	return 0;
}
