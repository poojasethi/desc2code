#include <iostream>
#include <cstring>
#include <algorithm>
#include <math.h>

typedef long long ll;
using namespace std;



int n,m;
ll k;
ll pref[100010];
ll a[100010];
ll cnt[1<<20];
ll res[1000010];
ll ans;
int block_size;

struct query{
    int id,l,r;
    bool operator <(const query &x) const{
        if (l/block_size!=x.l/block_size) return l<x.l;
        return r<x.r;
    }
};
query q[100010];

void ADD(int x){
    ans+=cnt[pref[x]^k];
    cnt[pref[x]]++;
}

void DEL(int x){
    cnt[pref[x]]--;
    ans-=cnt[pref[x]^k];
}


int main() {
    cin>> n>>m>>k;
    for (int i=1;i<=n;i++){
        cin>>a[i];
        pref[i]=pref[i-1]^a[i];
    }
    block_size=sqrt(m);
    for (int i=0;i<m;i++){
        cin>>q[i].l>>q[i].r;
        q[i].id=i;
        q[i].l--;
    }
    sort(q,q+m);

    int L=0,R=0;
    ans=0;
    cnt[0]=1;
    for (int i=0;i<m;i++){
        while (L<q[i].l) DEL(L),++L;
        while (L>q[i].l) --L,ADD(L);
        while (R<q[i].r) ++R,ADD(R);
        while (R>q[i].r) DEL(R),--R;
        res[q[i].id]=ans;
    }

    for (int i=0;i<m;i++){
        cout<<res[i]<<endl;
    }



}