#include<algorithm>
#include<cmath>
#include<cstdio>
#include<iostream>
using namespace std;

struct node
{
int l,r,i;
};
int blocks;
struct node query[2*100000+10];

long long int ans[100007];
int cnt[2000007],a[100007];
int xorr[100007];
long long int temp;
int k;
void add(int i)
{
temp+=cnt[i^k];
cnt[i]++;
}

void rem(int i)
{
cnt[i]--;
temp-=cnt[i^k];
}

bool cmp(struct node a,struct node b)
{
if(a.l/blocks!=b.l/blocks)
return a.l/blocks<b.l/blocks;
return a.r<b.r;
}

int main()
{
int n,q;
scanf("%d%d%d",&n,&q,&k);
blocks=(int)sqrt(n);
for(int i=0;i<n;i++)
{
scanf("%d",&a[i]);
xorr[i+1]=xorr[i]^a[i];
}
for(int i=0;i<q;i++)
{
scanf("%d%d",&query[i].l,&query[i].r);
query[i].l;
query[i].r;
query[i].i=i;
}
sort(query,query+q,cmp);
int l=1,r=0;
for(int i=0;i<q;i++)
{
while(query[i].l-1>l)
rem(xorr[l++]);
while(query[i].l-1<l)
add(xorr[--l]);
while(query[i].r>r)
add(xorr[++r]);
while(query[i].r<r)
rem(xorr[r--]);
ans[query[i].i]=temp;
}
for(int i=0;i<q;i++)
cout<<ans[i]<<endl;
return 0;
}
