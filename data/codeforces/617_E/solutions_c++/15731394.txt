#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
int n,m,k,a[100005];
int sz;
ll cnt[1<<20];
struct query {
    int l,r,id;
    query() {}
    query(int l,int r,int id) : l(l),r(r),id(id) {}
    bool operator < (const query & rhs) const {
        if(l/sz!=rhs.l/sz) return l/sz<rhs.l/sz;
        else return r<rhs.r;
    }
};
vector<query> v;
ll ans[100005];
int main() {
    scanf("%d%d%d",&n,&m,&k);
    for(int i=1;i<=n;i++) scanf("%d",a+i),a[i]^=a[i-1];
    int l,r;
    for(int i=0;i<m;i++) scanf("%d%d",&l,&r),v.push_back(query(l-1,r,i+1));
    sz=sqrt(n+.0)+1;
    sort(v.begin(),v.end());
    int pl=0,pr=0;
    ll res=0;
    cnt[0]++;
    for(int i=0;i<m;i++) {
        int l=v[i].l,r=v[i].r;
        while(pr<r) res+=cnt[k^a[pr+1]],cnt[a[pr+1]]++,pr++;
        while(pl>l) {
            res+=cnt[k^a[pl-1]],cnt[a[pl-1]]++,pl--;
        }
        while(pr>r) cnt[a[pr]]--,res-=cnt[k^a[pr]],pr--;
        while(pl<l) {
            cnt[a[pl]]--,res-=cnt[k^a[pl]],pl++;
        }
        ans[v[i].id]=res;
    }
    for(int i=1;i<=m;i++) printf("%I64d\n",ans[i]);
    return 0;
}
