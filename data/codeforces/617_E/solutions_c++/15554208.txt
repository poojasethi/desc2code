#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm> 
#include<cmath>
using namespace std;
#define N 100010
struct ask{
	int l,r,o;
} q[N];
int pos[N],sum[N];
long long num[1<<20];
long long ANS[N];
int n,m,k;
bool cmp(const ask &a,const ask &b){
	if(pos[a.l]!=pos[b.l]) return pos[a.l]<pos[b.l];
	return (a.r<b.r);
}
int main(){
	int i,l,r,x;
	cin>>n>>m>>k;
	int cnt=(int)sqrt(n);
	for(i=1;i<=n;i++){
		scanf("%d",&x);
		sum[i]=sum[i-1]^x;
		pos[i]=i/cnt;
	}
	for(i=1;i<=m;i++){
		scanf("%d%d",&q[i].l,&q[i].r);
		q[i].o=i;
		q[i].l--;
	}
	sort(q+1,q+m+1,cmp);
	long long ans=0;
	for(i=1,l=0,r=-1;i<=m;i++){
		if(r<q[i].r){
			for(r++;r<=q[i].r;r++) {
				ans+=num[k^sum[r]];
				num[sum[r]]++;
			}
			r--;
		}
		else{
			for(;r>q[i].r;r--){
				num[sum[r]]--;
				ans-=num[k^sum[r]];
			}
		}
		if(l<q[i].l){
			for(;l<q[i].l;l++){
				num[sum[l]]--;
				ans-=num[k^sum[l]];
			}
		}
		else{
			for(l--;l>=q[i].l;l--){
				ans+=num[k^sum[l]];
				num[sum[l]]++;
			}
			l++;
		}
		ANS[q[i].o]=ans;
	}
	for(i=1;i<=m;i++){
		printf("%I64d\n",ANS[i]);
	}
}