#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstring>
using namespace std;
const int N=100005,S=1000005;
typedef long long ll;
int cnt[S*2],B,n,m,k,x;
struct Query{
	int l,r,k,id;
	void init(int i){
		scanf("%d%d",&l,&r);
		id=i;
		l--;
		k=(l+B-1)/B;
	}
	friend bool operator <(Query a,Query b){
		if (a.k==b.k) return a.r<b.r;
		return a.k<b.k;
	} 
}q[N];
int s[N];
ll ans[N],res;
void inc(int i){
	res+=cnt[s[i]^k];
	cnt[s[i]]++;
}	
void dec(int i){
	cnt[s[i]]--;
	res-=cnt[s[i]^k];
}
int main(){
	scanf("%d%d%d",&n,&m,&k);
	for (int i=1;i<=n;i++) scanf("%d",&x),s[i]=s[i-1]^x;
	B=sqrt(n);
	for (int i=1;i<=m;i++) q[i].init(i); 
	sort(q+1,q+m+1); 
	for (int i=1;i<=m;i++){
		if (i>1 && q[i].k==q[i-1].k){
			for (int j=max(q[i-1].r,q[i].k*B)+1;j<=q[i].r;j++) 
			inc(j);
		}
		else {
			memset(cnt,0,sizeof(cnt));
			res=0;
			for (int j=q[i].k*B+1;j<=q[i].r;j++) 
			inc(j);
		}
		for (int j=min(q[i].k*B,q[i].r);j>=q[i].l;j--) 
		inc(j);
		ans[q[i].id]=res;
		for (int j=q[i].l;j<=min(q[i].k*B,q[i].r);j++) 
		dec(j); 
	} 
	for (int i=1;i<=m;i++) printf("%I64d\n",ans[i]);
	return 0;
}