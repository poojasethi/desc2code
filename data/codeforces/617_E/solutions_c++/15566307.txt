#include<stdio.h>
#include<string.h>
#include<iostream>
#include<algorithm>
#include<cmath>
using namespace std;
typedef __int64 ll;
const int N = 100005;
struct node{
	int l,r,id;
}q[10*N];
int a[N],n,m,k;
ll ans,num[N*100],res[N];
int pos[N],pre[N];

bool cmp(node x,node y){
	if(pos[x.l]!=pos[y.l]) return pos[x.l]<pos[y.l];
	return x.r<y.r;
}

void add(int x){
	ans+=num[pre[x]^k];
	num[pre[x]]++;
} 

void del(int x){
	num[pre[x]]--;
	ans-=num[pre[x]^k];
}

int main(void){
	int i,j;
	while(~scanf("%d%d%d",&n,&m,&k)){
		memset(num,0,sizeof(num));
		int seq=floor(sqrt(1.0*(n+1)));
		pre[0]=0; pos[0]=0;
		for(i=1;i<=n;i++){
			scanf("%d",&a[i]);
			pos[i]=(i+1)/seq;
			pre[i]=pre[i-1]^a[i];
		}
		for(i=1;i<=m;i++){
			scanf("%d%d",&q[i].l,&q[i].r);
			q[i].l--;
			q[i].id=i;
		}
		sort(q+1,q+m+1,cmp);
		ans=0; int pl=0,pr=0;
		for(i=1;i<=m;i++){
			int id=q[i].id;
			int l=q[i].l,r=q[i].r;
			while(pr<=r) add(pr++);
			while(pr-1>r) del(--pr);
			while(pl>l) add(--pl);
			while(pl<l) del(pl++);
			res[id]=ans;
		}
		for(i=1;i<=m;i++)
			printf("%I64d\n",res[i]);
	}
	return 0;
}

