#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

struct que{
	int l;
	int r;
	int ind;
};

int P=300;
bool operator<(que a, que b){
	if(a.l/P == b.l/P){
		return a.r<b.r;
	}
	return a.l/P < b.l/P;
}

int n,m,k,arr[100100], cntR[2202002];
que q[100100];
ll sl[200200],sol=0;

void delR(int x){
	cntR[x]--;
	sol-= cntR[x^k];
	
}
void insR(int x){
	sol+= cntR[x^k];
	cntR[x]++;
}


int main(){
	scanf("%d %d %d",&n,&m,&k);
	for(int i=1;i<=n;i++){
		scanf("%d",&arr[i]);
		arr[i]^=arr[i-1];
	}
	for(int i=1;i<=m;i++){
		scanf("%d %d",&q[i].l ,&q[i].r);
		q[i].l--;
		q[i].ind=i;
	}
	sort(q+1,q+1+m);
	int l=q[1].l,r=q[1].l-1;
	
	for(int i=1;i<=m;i++){
		if(r<q[i].r){
			for(int j=r+1;j<=q[i].r;j++){
				insR(arr[j]);
			}
			r=q[i].r;
		}
		if(q[i].l<l){
			for(int j=q[i].l;j<l;j++){
				insR(arr[j]);
			}
			l=q[i].l;
		}

		if(l<q[i].l){
			for(int j=l;j<q[i].l;j++){
				delR(arr[j]);
			}
			l=q[i].l;
		}
		if(q[i].r<r){
			for(int j=q[i].r+1;j<=r;j++){
				delR(arr[j]);
			}
			r=q[i].r;
		}
		sl[q[i].ind]=sol;
	}
	for(int i=1;i<=m;i++){
		printf("%I64d\n",sl[i]);
	}
}