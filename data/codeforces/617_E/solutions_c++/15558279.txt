#include <bits/stdc++.h>
using namespace std;

int n, m, k;
int a[100005], sz;
long long ans[100005], cnt[1111115];

struct query {
	int l, r, id;
}q[100005];

bool cmp(query a, query b) {
	if(a.l / sz == b.l / sz) return a.r < b.r;
	return a.l / sz < b.l / sz;
}

void solve() {
	long long res = 0;
	int l = 1, r = 0;
	cnt[a[l - 1]] = 1;
	for(int i = 0; i < m; ++ i) {
		while(r < q[i].r) {
			r ++;
			res += cnt[a[r] ^ k];
			cnt[a[r]] ++;
		}
		while(r > q[i].r) {
			cnt[a[r]] --;
			res -= cnt[a[r] ^ k];
			r --;
		}
		while(l > q[i].l) {
			l --;
			res += cnt[a[l - 1] ^ k];
			cnt[a[l - 1]] ++;
		}
		while(l < q[i].l) {
			cnt[a[l - 1]] --;
			res -= cnt[a[l - 1] ^ k];
			l ++;
		}
		ans[q[i].id] = res;
	}
}

int main () {
	scanf("%d%d%d", &n, &m, &k);
	sz = (int)sqrt(1.0 * n);
	for(int i = 1; i <= n; ++ i) scanf("%d", a + i);
	for(int i = 2; i <= n; ++ i) a[i] ^= a[i - 1];
	for(int i = 0; i < m; ++ i) {
		scanf("%d%d", &q[i].l, &q[i].r);
		q[i].id = i;
	}
	sort(q, q + m, cmp);
	solve();
	for(int i = 0; i < m; ++ i) printf("%lld\n", ans[i]);
	return 0;
}
