#include<bits/stdc++.h>
using namespace std;
const int maxn = 1<<20;
#define LL long long
int a[maxn],flag[maxn];
struct Node
{
	int l,r,id;
}q[maxn];
int pos[maxn];
LL ans[maxn];
bool cmp(Node a,Node b)
{
	if(pos[a.l]==pos[b.l])
		return a.r<b.r;
	return pos[a.l]<pos[b.l];
}
int n,m,k;
int L=1,R=0;
LL Ans = 0;
void add(int x)
{
    Ans+=flag[a[x]^k];
	flag[a[x]]++;
}
void del(int x)
{
	flag[a[x]]--;
	Ans-=flag[a[x]^k];
}
int main()
{
    scanf("%d%d%d",&n,&m,&k);
	int sz = sqrt(n);
    for(int i = 1;i<=n;i++)
	{
		scanf("%d",&a[i]);
		a[i]^=a[i-1];
		pos[i]=i/sz;
	}
	for(int i = 1;i<=m;i++)
	{
		scanf("%d%d",&q[i].l,&q[i].r);
		q[i].id = i;
	}
	sort(q+1,q+1+m,cmp);
	flag[0]=1;
    for(int i = 1;i<=m;i++)
	{
		while(L<q[i].l)
		{
			del(L-1);
			L++;
		}
        while(L>q[i].l)
		{
			L--;
			add(L-1);
		}
		while(R>q[i].r)
		{
			del(R);
			R--;
		}
		while(R<q[i].r)
		{
			R++;
			add(R);
		}
		ans[q[i].id] = Ans;
	}
	for(int i = 1;i<=m;i++)
		printf("%lld\n",ans[i]);

}

	  	 	  	 		  	   	 	  				 	 	