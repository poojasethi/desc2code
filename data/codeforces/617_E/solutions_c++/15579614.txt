#include <bits/stdc++.h>

using namespace std;
typedef long long ll;

// sqrt-decomposion (Mo's algorithm)

const int N = 200100;
ll a[N] , ans[N] , cnt[N<<4] ;
ll n , Q , k , sum , l , r , sq ;
struct query{ int L , R , idx ; };
query q[N];

bool operator<(query a , query b){
if( a.L/sq != b.L/sq  )return a.L/sq < b.L/sq ;
return a.R < b.R ;
}

void add(int x){
sum+=cnt[ x^k ];
cnt[ x ]++;
}
void del(int x){
cnt[ x ]--;
sum-=cnt[ x^k ];
}

int main()
{
cin>>n>>Q>>k;
sq=sqrt( (double)n );
for(int i=1;i<=n;i++){ cin>>a[i]; a[i]^=a[i-1]; }

for(int i=0;i<Q;i++){
        cin>>q[i].L>>q[i].R;
        q[i].L--; q[i].idx=i;
}
sort(q,q+Q);
l=1;
r=0;
int MyLeft , MyRight;
for(int i=0;i<Q;i++){
    MyLeft=q[i].L;
    MyRight=q[i].R;
while( l>MyLeft )
    add(a[--l]);

while( l<MyLeft )
    del(a[l++]);

while( r>MyRight )
    del(a[r--]);

while( r<MyRight )
    add(a[++r]);


    ans[ q[i].idx ]=sum;
}
for(int i=0;i<Q;i++)cout<<ans[i]<<endl;

    return 0;
}
