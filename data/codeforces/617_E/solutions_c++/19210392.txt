#include<iostream>
#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;
typedef __int64 ll;
const __int64 maxn=100005;
ll a[1000005],n,m,k,cnt[1<<22],ant,ans[1000005];
struct node{
	ll l,r,lab;
}e[1000005];
bool cmp(node a,node b){
	if((a.l)/400==(b.l)/400){
		return a.r<b.r;
	}
	else return a.l<b.l;
}
void inc(ll s){
	ant+=cnt[s^k];
	cnt[s]++;
}
void desc(ll s){
	--cnt[s];
	ant-=cnt[s^k];
}
int main(){
	scanf("%I64d%I64d%I64d",&n,&m,&k);
	ll i;
	for(i=1;i<=n;i++){
		scanf("%I64d",&a[i]);
		a[i]^=a[i-1];
	}
	for(i=1;i<=m;i++){
		scanf("%I64d%I64d",&e[i].l,&e[i].r);
		e[i].lab=i;
		e[i].l--;
	}
	sort(e+1,e+1+m,cmp);
	ll l=0,r=0;
	cnt[0]=1,ant=0;
	for(i=1;i<=m;i++){
		while(r<e[i].r){
			inc(a[++r]);
		}
		while(r>e[i].r){
			desc(a[r--]);
		}
		while(l<e[i].l){
			desc(a[l++]);
		}
		while(l>e[i].l){
			inc(a[--l]);
		}
		ans[e[i].lab]=ant;
	}
	for(i=1;i<=m;i++){
		printf("%I64d\n",ans[i]);
	}
	return 0;
}