#include <vector>
#include <map>
#include <set>
#include <cmath>
#include <string>
#include <cstring>
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <sstream>
#include <queue>

using namespace std;

struct task{
	int id, t;
	bool operator<(const task &sec) const {
		return t != sec.t ? t < sec.t : id < sec.id;
	}
} arr[105];

int main(){
	int n, w, mn = 1<<30, mx = 0;
	cin >> n >> w;
	for (int i=0; i<n; i++){
		cin >> arr[i].t;
		arr[i].id = i+1;
		mx += arr[i].t;
		mn = min(mn, arr[i].t);
	}
	if (n == 1 && arr[0].t != w){
		puts("No");
		return 0;
	}
	if (w > mx || w < min(mn, 2)){
		puts("No");
		return 0;
	}
	sort(arr, arr+n);
	puts("Yes");
	int sum = 0, pos = 0;
	while (sum + arr[pos].t < w){
		sum += arr[pos++].t;
	}
	if (arr[0].t > w){
		w--;
		printf("%d ", arr[1].id);
		while (arr[0].t > w){
			printf("%d %d ", arr[0].id, arr[0].id);
			arr[0].t--;
		}
		printf("%d ", arr[1].id);
		arr[1].t--;
	}

	printf("%d ", arr[0].id);
	for (int i=pos+1; i<n; i++){
		for (int j=0; j<arr[i].t; j++){
			printf("%d %d ", arr[i].id, arr[i].id);
		}
	}

	while (sum + arr[pos].t > w){
		printf("%d %d ", arr[pos].id, arr[pos].id);
		arr[pos].t--;
	}
	printf("%d ", arr[0].id);
	arr[0].t--;
	for (int i=0; i<=pos; i++){
		for (int j=0; j<arr[i].t; j++){
			printf("%d %d ", arr[i].id, arr[i].id);
		}
	}
	return 0;
}
