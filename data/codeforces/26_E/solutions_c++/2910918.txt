#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>

using namespace std;

enum {MAXN = 110 * 2};

int sum[MAXN],times[MAXN],tmp[MAXN];
int n,m;

struct cmp
{
  bool operator () (int a,int b)
  {
    return sum[a] < sum[b];
  }
};
  
int main(){

  scanf("%d%d",&n,&m);
  for (int i=1;i<=n;i++) scanf("%d",&sum[i]);

  memcpy(tmp,sum,sizeof(tmp));
  for (int i=1;i<=n;i++) times[i]=i;
  sort(times+1,times+1+n,cmp());
  for (int i=1;i<=n;i++) sum[i]=tmp[times[i]];

  int tot=0;
  for (int i=1;i<=n;i++) tot+=sum[i];

  if (m<=0||tot<m||n==1&&sum[1]>m||m==1&&sum[1]>1)
    {
      puts("No"); 
    }
  else
    {
      puts("Yes");

      if (sum[1]>m)
	{
	  printf("%d ",times[n]);
	  for (int i=1;i<sum[1];i++) printf("%d %d ",times[1],times[1]);
	  printf("%d ",times[n]);
	  sum[n]--; m--; sum[1]=1;
	}

      printf("%d",times[1]); tot=--m; sum[1]--;
      for (int i=1;i<=n;i++)
	{
	  if (sum[i]<=tot)
	    {
	      tot-=sum[i]; continue;
	    }

	  int now=sum[i]-tot; sum[i]=tot; tot=0;
	  for (int j=1;j<=now;j++) printf(" %d %d",times[i],times[i]);
	}
      printf(" %d",times[1]);
      for (int i=1;i<=n;i++)
	for (int j=1;j<=sum[i];j++) printf(" %d %d",times[i],times[i]);

      puts("");
    }
  return 0;
}
