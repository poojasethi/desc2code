read_ints = lambda : map(int, raw_input().split())

def foo1(jiro, ciel, n, m):
    result = 0
    for d in jiro[1]:
        ok = False
        for i in xrange(len(ciel)):
            if ciel[i] > d:
                ok = True
                del ciel[i]
                break
        if not ok:
            return 0

    for a in jiro[0]:
        ok = False
        for i in xrange(len(ciel)):
            if ciel[i] >= a:
                result += ciel[i] - a
                ok = True
                del ciel[i]
                break
        if not ok:
            return 0

    result += sum(ciel)
    return result

def foo2(jiro, ciel, n, m):
    result = 0
    att = jiro[0]

    for i in xrange(len(att)):
        p = i
        t = 0
        for c in ciel[::-1]:
            if c > att[p]:
                t += c - att[p]
                p -= 1
            if p < 0:
                break
        result = max(t, result)
    return result

def main():
    n, m = read_ints()

    jiro = [[], []]
    for i in range(n):
        buf = raw_input().split()
        if buf[0][0] == 'A':
            jiro[0].append(int(buf[1]))
        else:
            jiro[1].append(int(buf[1]))

    ciel = []
    for i in range(m):
        ciel.append(input())

    jiro[0].sort()
    jiro[1].sort()
    ciel.sort()

    r1 = foo1(jiro[:], ciel[:], n, m)
    r2 = foo2(jiro[:], ciel[:], n, m)
    return max(r1, r2)

if __name__ == '__main__':
    print main()
