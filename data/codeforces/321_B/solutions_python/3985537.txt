n, m = map(int, raw_input().split())
at = []
de = []
for i in xrange(n):
    a, b = raw_input().split()
    b = int(b)
    if a == 'ATK':
        at.append(b)
    else:
        de.append(b)
t = [int(raw_input()) for i in xrange(m)]
at.sort()
de.sort()
t.sort()
A, D = len(at), len(de)
dp = [[[-1] * (D+1) for i in xrange(A+1)] for j in xrange(2)]
dp[0][0][0] = dp[1][0][0] = 0
for x in t:
    ndp = [[[-1] * (D+1) for i in xrange(A+1)] for j in xrange(2)]
    for k in xrange(2):
        for i in xrange(A+1):
            for j in xrange(D+1):
                if dp[k][i][j] == -1: break
                ndp[k][i][j] = max(ndp[k][i][j], dp[k][i][j] + (x if k else 0))
                if i == A and j == D:
                    ndp[k][i][j] = max(ndp[k][i][j], dp[k][i][j] + x)
                    continue
                if j < D and x > de[j]:
                    ndp[k][i][j+1] = max(ndp[k][i][j+1], dp[k][i][j])
                if i < A and x >= at[i]:
                    ndp[k][i+1][j] = max(ndp[k][i+1][j], dp[k][i][j] + x - at[i])
    dp = ndp
print max(max([max([dp[0][i][j] for j in xrange(D+1)]) for i in xrange(A+1)]), dp[1][A][D])
