#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int v[100], at[100], def[100];
int szat = 0, szdef = 0, n;

int main() {
  int m;
  cin >> m >> n;
  for (int i = 0; i < m; ++i) {
    string s;
    int a;
    cin >> s >> a;
    if (s == "ATK") at[szat++] = a;
    else def[szdef++] = a;
  }
  
  for (int i = 0; i < n; ++i) cin >> v[i];
  
  int maxim = 0;
  sort(v, v + n, greater<int>());
  sort(at, at + szat);
  
  int minsz = min(n, szat);
  for (int i = 0; i < minsz and at[i] <= v[i]; ++i) maxim += v[i] - at[i];
  
  int aux = 0;
  sort(v, v + n);
  sort(def, def + szdef);
  
  int p1 = 0, p2 = 0;
  while (p1 < szdef and p2 < n) {
    if (def[p1] < v[p2]) {
      ++p1;
      v[p2++] = -1;
    }
    else ++p2;
  }
  sort(v, v + n, greater<int>());
  sort(at, at + szat, greater<int>());
  
  int p3 = 0;
  p2 = 0;
  while (p3 < szat and p2 < n) {
    if (at[p3] <= v[p2]) {
      aux += v[p2] - at[p3];
      ++p3;
      v[p2++] = -1;
    }
    else ++p2;
  }
    
  if (p3 == szat and p1 == szdef) {
    for (int i = 0; i < n; ++i) if (v[i] > 0) aux += v[i];
  }
  maxim = max(maxim, aux);
  
  cout << maxim << endl;
  
}