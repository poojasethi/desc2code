#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;

int n, m, x;
char s[5];
vector<int>atk, def;
int v[111], t[111];

int case2() {
	int ret = 0;
	for(int i=0;i<m;i++)
		if(i < atk.size() && v[m-i-1] > atk[i])
			ret += v[m-i-1] - atk[i];
		else return ret;
	return ret;
}

int case1() { 
	for(int i=0;i<m;i++) t[i]= v[i];

	int ret = 0;
	for(int i=0, p=0;i<def.size();i++) {
		while(p<m && t[p] <= def[i]) p++;
		if(p==m) return 0;
		t[p] = -1;
	}
	
	for(int i=0, p=0;i<atk.size();i++) {
		while(p<m && t[p] < atk[i]) p++;
		if(p==m) return 0;
		ret += t[p] - atk[i];
		t[p] = -1;
	}
	
	for(int i=0;i<m;i++)
		if(t[i]>=0) ret += t[i];
	return ret;
}

int main() {
	scanf("%d%d", &n, &m);
	for(int i=0;i<n;i++) {
		scanf("%s%d", s, &x);
		if(s[0] == 'A') atk.push_back(x);
		else def.push_back(x);
	}
	for(int i=0;i<m;i++)
		scanf("%d", &v[i]);
	sort(atk.begin(), atk.end());
	sort(def.begin(), def.end());
	sort(v,v+m);
	
	printf("%d\n", max(case1(), case2()));
	
	return 0;
}