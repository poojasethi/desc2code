#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pb push_back
vector<int>edge[200005];
ll dp[200005][2];
int x[200005];
int n;
void dfs(int v){
	ll od=-10000000000000ll,ev=0;
	for(int i=0;i<edge[v].size();i++){
		ll new_od,new_ev;
		dfs(edge[v][i]);
		new_od = max(od+dp[edge[v][i]][0],ev+dp[edge[v][i]][1]);
		new_ev = max(ev+dp[edge[v][i]][0],od+dp[edge[v][i]][1]);
		od = new_od;
		ev = new_ev;
	}
	dp[v][0] = ev;
	dp[v][1] = max(od,ev+x[v]);
//cout << v << " " << dp[v][0] << " " << dp[v][1] << endl;
}
int main(){
	cin >> n;
	for(int i=1;i<=n;i++){
		int v;
		cin >> v >> x[i];
		if(v>=1){
			edge[v].pb(i);
		}
	}
	dfs(1);
	cout << max(dp[1][0],dp[1][1]) << endl;
}