#include<stdio.h>
#include<vector>
#include<limits.h>
#include<algorithm>
using namespace std;
vector<int>v[200000];
int w[200000];
long long dp[200000][2];
void dfs(int k){
	dp[k][0]=0;
	dp[k][1]=-1;
	for(int i=0;i<v[k].size();i++){
		dfs(v[k][i]);
		if(!i){
			dp[k][0]=dp[v[k][i]][0];
			dp[k][1]=dp[v[k][i]][1];
			continue;
		}
		long long _=max(dp[k][0]+dp[v[k][i]][0],dp[k][1]+dp[v[k][i]][1]);
		long long __=max(dp[k][1]+dp[v[k][i]][0],dp[k][0]+dp[v[k][i]][1]);
		dp[k][0]=_;
		dp[k][1]=__;
	}
	dp[k][1]=max(dp[k][1],dp[k][0]+w[k]);
}
int main(){
	int n;
	while(scanf("%d",&n)==1){
		for(int i=0;i<n;i++){
			int f;
			scanf("%d%d",&f,w+i);
			if(f!=-1)v[f-1].push_back(i);
		}
		dfs(0);
		printf("%I64d\n",dp[0][1]);
		for(int i=0;i<n;i++)
			v[i].clear();
	}
}
