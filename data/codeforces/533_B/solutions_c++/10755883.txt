#include <iostream>

using namespace std;

const int MAXN = 200010;
const long long INF = 1000ll * 1000 * 1000 * 1000;

int p[MAXN], a[MAXN];
long long dp[MAXN][2];
long long d[2];

void print(int i)
{
	cerr << i + 1 << " --> " << p[i] + 1 << " : " <<  dp[i][0] << " " << dp[i][1] << endl;
}

int main()
{
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		cin >> p[i] >> a[i];
		p[i]--;
		dp[i][1] = -INF;
	}
	for (int i = n - 1; i > 0; i--)
	{
		dp[i][1] = max(dp[i][1], dp[i][0] + a[i]);
		d[0] = dp[p[i]][0];
		d[1] = dp[p[i]][1];
		for (int j = 0; j < 2; j++)
			for (int q = 0; q < 2; q++)
				dp[p[i]][q] = max(dp[p[i]][q], d[q ^ j] + dp[i][j]);
	}	
	dp[0][1] = max(dp[0][1], dp[0][0] + a[0]);
	cout << max(dp[0][0], dp[0][1]) << endl;
			
}
