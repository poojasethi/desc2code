#include<cstdio>
#include<algorithm>
using namespace std;
#define INF 9999999999999999ll
typedef long long LL;
const int NN=201111;
int o[NN],aa[NN*2][2],fa[NN],w[NN];
int n,m,tot;
LL f[NN],g[NN];
inline void addedge(int p,int q)
{
	tot++;
	aa[tot][1]=q;
	aa[tot][0]=o[p];
	o[p]=tot;
}
void dp(int v)
{
	LL ff=-INF,gg=0;
	for (int p=o[v];p;p=aa[p][0])
	{
		int y=aa[p][1];
		if (y==fa[v]) continue;
		dp(y);
		LL t1=max(ff+g[y],gg+f[y]);
		LL t2=max(ff+f[y],gg+g[y]);
		ff=t1,gg=t2;
	}
	LL t1=max(ff,gg+w[v]);
	LL t2=gg;
	f[v]=t1,g[v]=t2;
}
int main()
{
	//freopen("1.in","r",stdin);freopen("1.out","w",stdout);
	scanf("%d",&n);
	for (int i=1;i<=n;i++)
	{
		scanf("%d%d",&fa[i],&w[i]);
		if (i==1) fa[i]=0;
		else addedge(i,fa[i]),addedge(fa[i],i);
	}
	dp(1);
	printf("%I64d\n",max(f[1],g[1]));
	return 0;
}