#include <bits/stdc++.h>
using namespace std; 
typedef long long ll;
int n; 
vector<int> G[200005];
int a[200005];
ll even[200005], odd[200005];

void dfs(int u) {
    odd[u] = -(1LL << 50);
    int sz = G[u].size();
    for(int i=0; i<sz; i++) {
        int v = G[u][i]; 
        dfs(v);
        ll ev = even[u], od = odd[u];
        odd[u] = max(ev + odd[v], od + even[v]); 
        even[u] = max(ev + even[v], od + odd[v]);
    }
    odd[u] = max(odd[u], even[u] + a[u]);
}

int main() {
    scanf("%d", &n); 
    int par;
    for(int i=1; i<=n; i++) {
        scanf("%d%d", &par, &a[i]);
        if (par == -1) continue;
        G[par].push_back(i);
    }

    dfs(1);
    printf("%I64d\n", odd[1]);
    return 0; 
}