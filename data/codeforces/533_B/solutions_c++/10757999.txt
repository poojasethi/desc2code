#include<iostream>
#include<vector>
#include<cstring>
#include<cstdio>
#include<cmath>
#define ll long long
using namespace std;
ll dp2[201000],dp1[200100],p[201000];
vector<int>G[201000];
void dfs(int u){
    if(G[u].size()==0) {dp1[u]=p[u];dp2[u]=0;return ;}
    ll ans=0,mmin=10101010101010,cnt=0;
    for(int i=0;i<G[u].size();i++){
        dfs(G[u][i]);
        if(dp1[G[u][i]]>dp2[G[u][i]]) cnt++;
        ans+=max(dp1[G[u][i]],dp2[G[u][i]]);
        mmin=min(mmin,max(dp1[G[u][i]],dp2[G[u][i]])-min(dp1[G[u][i]],dp2[G[u][i]]));
    }
    if(cnt%2==0) {dp1[u]=ans+p[u];dp2[u]=ans;}
    else {dp1[u]=max(ans-mmin+p[u],ans);dp2[u]=ans-mmin;}
}
int main(){
    int n;
    scanf("%d",&n);
    for(int i=1;i<=n;i++){
        int x,y;
        scanf("%d%d",&x,&y);
        if(i!=1) G[x].push_back(i);
        p[i]=y;
    }
    dfs(1);
    printf("%I64d\n",max(dp1[1],dp2[1]));
}
