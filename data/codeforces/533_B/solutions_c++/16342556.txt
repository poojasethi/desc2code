#include<bits/stdc++.h>
using namespace std;
int const lim =1e5*2+3;
int efi[lim+3];long long dp[lim+3][2]={0};
vector<int>adj[lim+3];
void dfs(int u)
{
    long long mx1= -1*LONG_LONG_MAX/2,mx = 0;
    for(int i =0;i<adj[u].size();i++)
        {
            int che = adj[u][i];
            dfs(che);long long tem1 = mx1,tem = mx;
            mx1 = max(mx1,tem+dp[che][1]);
            mx1 = max(mx1,tem1+dp[che][0]);
            mx = max(mx,tem1+dp[che][1]);
            mx = max(mx,tem+dp[che][0]);
        }
    dp[u][0] = mx;
    dp[u][1] = max(mx+efi[u],mx1);
}
int main()
{
    int n;cin >> n;int root = 0;
    for(int i = 1;i<=n;i++)
    {
        int p,u;
        scanf("%d%d",&p,&efi[i]);
        if(p==-1)root = i;
        else adj[p].push_back(i);
    }
    dfs(root);
    cout << max(dp[root][1],dp[root][0])<<endl;
}
