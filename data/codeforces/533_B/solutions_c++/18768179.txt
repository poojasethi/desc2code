#include <algorithm>
#include <cstdio>
int to[200010],ne[200010],fi[200010],i,n,x,tot=0;
long long a[200010],f[200010][2];
void add(int x,int y)
{
	to[++tot]=y;ne[tot]=fi[x];fi[x]=tot;
}
void dfs(int x)
{
	f[x][0]=0;f[x][1]=-2e9;
	long long j,k;
	for (int i=fi[x];i;i=ne[i])
	{
		dfs(to[i]);
		j=std::max(f[x][0]+f[to[i]][0],f[x][1]+f[to[i]][1]);
		k=std::max(f[x][0]+f[to[i]][1],f[x][1]+f[to[i]][0]);
		f[x][0]=std::max(f[x][0],j);
		f[x][1]=std::max(f[x][1],k);
	}
	f[x][1]=std::max(f[x][1],f[x][0]+a[x]);
}
int main()
{
//	freopen("ex.in","r",stdin);
	scanf("%d\n",&n);
	for (i=1;i<=n;++i)
	{
		scanf("%d%I64d\n",&x,&a[i]);
		if (x!=-1) add(x,i);
	}
	dfs(1);
	printf("%I64d\n",f[1][1]);
}
