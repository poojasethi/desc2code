#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int INF = 25;
int dp[(1<<23)+5],a[25];
int n;
int dfs(int state, int x)
{
    if(dp[state])   return dp[state];
    int c = __builtin_popcount(state), v = 0, mn = INF;
    for(int i=0;i<x;i++)
    {
        for(int j=0;j<=i;j++)
        {
            if(a[x]==a[i]+a[j])
            {
                v = dfs((state&~(1<<x))|(1<<(x-1))|(1<<i)|(1<<j), x-1);
                mn = min(mn, max(c, v));
            }
        }
    }
    return dp[state] = mn;
}

int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++)
        scanf("%d",a+i);
    dp[1] = 1;
    int ans = dfs(1<<(n-1),n-1);
    if(ans==INF)
        printf("-1\n");
    else
        printf("%d\n",ans);
}



	 		   			   		  		   			