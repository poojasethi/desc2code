
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
#define INF 25
int n,a[25],dp[1<<23];
int fun(int m,int x){//扫描到第x位至少需要多少个中继
    if(dp[m]) return dp[m];
    int c = __builtin_popcount(m),v = 0,mn = INF;//c下一状态需要我保证的中继的个数
    for(int i = 0; i < x; i ++){
        for(int j = 0; j <= i; j ++){
            if(a[i] + a[j] == a[x]){
                v = fun((m&~(1<<x))|(1<<(x-1))|(1<<i)|(1<<j),x-1);
                mn = min(mn,max(v,c));//其实所有的数字都是由c得到的，v只作为中介，将不同的c作比较
            }
        }
    }
    return dp[m] = mn;
}
int main()
{
        scanf("%d",&n);
        for(int i = 0; i < n; i ++)
            scanf("%d",&a[i]);
        dp[1] = 1;
        int ans = fun(1<<(n-1),n-1);
        if(ans == 25) ans = -1;
        printf("%d\n",ans);
return 0;
}
