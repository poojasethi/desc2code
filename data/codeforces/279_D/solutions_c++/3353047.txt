#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 25
#define INF 999999999
int dp[1<<N],b[N];
int dfs ( int stat, int now ) {
	if ( dp[stat] ) return dp[stat];
	if ( stat==1 ) return 1;
	int cnt=__builtin_popcount(stat),tmp=INF;
	for ( int i=0; i<now; i++ ) {
		for ( int j=0; j<=i; j++ ) {
			if ( b[i]+b[j]==b[now] ) {
				int x=dfs(stat&~(1<<now)|(1<<(now-1))|(1<<i)|(1<<j),now-1);
				tmp=min(tmp,max(cnt,x));
			}	
		}	
	}
	return dp[stat]=tmp;
}
int main ()
{
	int n; scanf("%d",&n);
	for ( int i=0; i<n; i++ ) scanf("%d",&b[i]);
	int ans=dfs(1<<(n-1),n-1);
	if ( ans>=INF ) puts("-1");
	else printf("%d\n",ans);
    return 0;
}
//---------------------------------------
