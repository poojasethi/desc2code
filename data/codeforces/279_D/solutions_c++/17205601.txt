#include<bits/stdc++.h>
using namespace std;
const int MAXN = 25;
int N,dp[1 << 23];
int a[MAXN];

int calcu(int sta,int cur) {
	if (dp[sta]) return dp[sta];
	int cnt = __builtin_popcount(sta),MIN = MAXN;
	for (int i = 0 ; i < cur ; i++) {
		for (int j = 0 ; j <= cur ; j++) {
			if (a[i] + a[j] == a[cur]) {
				int nxtsta = (sta & (~(1 << cur))) | (1 << (cur - 1)) | (1 << i) | (1 << j);
				int val = calcu(nxtsta,cur - 1);
				MIN = min(MIN,max(val,cnt));
			}
		}
	}
	return dp[sta] = MIN;
}

int main() {
	while (scanf("%d",&N) != EOF) {
		for (int i = 0 ; i < N ; i++) scanf("%d",&a[i]);
		dp[1] = 1;
		int ret = calcu(1 << (N - 1),N - 1);
		if (ret == MAXN) puts("-1");
		else printf("%d\n",ret);
	}
	return 0;
}
   	   		 						    	  			  	 	