#include <cstdio>
#include <algorithm>
#define N 23
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
using namespace std;

int n, a[N], r;
bool d[1 << N];

void odp(int i, int t){
	fi(j, 0, t) if(i & 1 << j) fi(k, j, t) if(i & 1 << k) if(a[j] + a[k] == a[t]){
		d[i | 1 << t] = 1;
		fi(a, 0, t) if(i & 1 << a) d[i ^ 1 << a | 1 << t] = 1;
		return;
	}
}

int main(){
	scanf("%d", &n);
	fi(i, 0, n) scanf("%d", &a[i]);
	
	fi(i, 2, 1 << n) d[i] = 0;
	d[1] = 1;
	r = 1 << 29;
	
	fi(i, 1, 1 << n - 1){
		if(!d[i]) continue;
		odp(i, 32 - __builtin_clz(i));
	}
	
	fi(i, 1 << n - 1, 1 << n) if(d[i]) r = min(r, __builtin_popcount(i));
	
	if(r == 1 << 29) puts("-1");
	else printf("%d\n", r);
	scanf("\n");
}
