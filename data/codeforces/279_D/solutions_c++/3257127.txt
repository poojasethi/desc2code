//By momo
#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;

int a[24], che[(1<<24)], n, ans = 999999;
void dfs(int c, int x = n)
{
	if(che[c]) return; che[c] = 1;
	int cnt = __builtin_popcount(c);
	if(cnt > ans) return;

	for(; x > 0; x--) if(c & (1 << (x-1))) break;

	if(x == n){ ans = min(ans, cnt); return; }
	bool fl = 0;
	for(int i = 0; i < x; i++) if(c&(1<<i)){
		for(int j = 0; j <= i; j++) if(c&(1<<j))
			if(a[i]+a[j] == a[x]){ fl = 1; break; }
		if(fl) break;
	}
	if(fl){
		for(int i = 0; i < x; i++) if(c&(1<<i))
			dfs(c ^ (1<<i) | (1<<x));
		dfs(c | (1<<x));
	}
}

int main (){
	cin >> n;
	for(int i = 0; i < n; i++) cin >> a[i];
	dfs(1);
	if(ans == 999999) cout << -1 << endl;
	else cout << ans << endl;
}
