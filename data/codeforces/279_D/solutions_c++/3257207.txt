//By momo
#include <iostream>
#include <algorithm>
#define INF 99
using namespace std;

int a[24], che[(1<<24)], n;
int dfs(int c)
{
	if(che[c]) return che[c];
	if(c == 1) return 1;
	int x = n-1, cnt = __builtin_popcount(c), mn = INF;
	for(; x > 0; x--) if(c & (1 << x)) break;
	for(int i = 0; i < x; i++)
		for(int j = 0; j <= i; j++)
			if(a[i]+a[j] == a[x]){
				int v = dfs(c & ~(1<<x)|(1<<(x-1))|(1<<i)|(1<<j));
				mn = min(mn, max(v, cnt));
			}
	return che[c] = mn;
}

int main (){
	cin >> n;
	for(int i = 0; i < n; i++) cin >> a[i];
	int ans = dfs(1 << (n-1));
	if(ans == INF) cout << -1;
	else cout << ans;
}
