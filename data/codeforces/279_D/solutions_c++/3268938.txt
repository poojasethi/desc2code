#include<cstdio>
#include<algorithm>
#define MAXN 24
#define INF 100000

using namespace std;

int n, in[MAXN], dp[1 << MAXN];

int dfs(int status, int idx)
{
	if(dp[status])
		return dp[status];
	if(status == 1)
		return 1;
	int cnt = 0, res = INF;
	for(int i = 0; i <= MAXN; i++)
		if((1 << i) & status)
			cnt++;
	for(int i = 0; i < idx; i++)
		for(int j = 0; j <= i; j++)
			if(in[i] + in[j] == in[idx])
			{
				int v = dfs(status & ~ (1 << idx) | (1 << (idx - 1) ) | (1 << i) | (1 << j), idx - 1);
				res = min(res, max(cnt, v));
			}
	return dp[status] = res;
}

int main()
{
	scanf("%d", &n);
	for(int i = 0; i < n; i++)
		scanf("%d", in + i);
	int ac = dfs(1 << (n - 1), n - 1);
	if(ac >= INF)
		puts("-1");
	else
		printf("%d\n", ac);
}
