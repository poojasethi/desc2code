#include <bits/stdc++.h>
using namespace std;
#define REP(a,b,c) for(int a=b;a<c;a++)
int ans = 100, n, A[25], vis[1 << 25];
void dfs(int idx, int mask){
    if(idx == n)
        ans = min(ans, __builtin_popcount(mask));
    if(__builtin_popcount(mask) >= ans || vis[mask]) return;
    vis[mask] = 1;
    REP(i, 0, idx) if(mask & (1 << i)) REP(j, i, idx) if(mask & (1 << j)) if(A[i] + A[j] == A[idx]){
        dfs(idx+1, mask | (1 << idx));
        REP(k, 0, idx) if(mask & (1 << k)) dfs(idx+1, (mask^(1 << k)) | ( 1 << idx));
        return;
    }
}
int main(){
    scanf("%d", &n);
    REP(i, 0, n) scanf("%d", &A[i]);
    dfs(1, 1);
    if(ans == 100) ans = -1;
    printf("%d\n", ans);
    return 0;
}
