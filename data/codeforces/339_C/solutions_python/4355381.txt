nums = raw_input()
n = int(raw_input())
stack = []
def check(x):
    if nums[x-1] == '1':
        return True
    return False


def dfs(now):
    global stack,n
    stack =  [(now, now)]
    counter = [0 for i in range(n)]
    while len(stack):
        if len(stack) == n:
            return True
        popflag = True
        #print stack
        now, diff = stack[-1]
        for j in xrange(diff+1+counter[len(stack)-1], 11):
            counter[len(stack)-1] += 1
            if check(j) and j!=now:
                stack.append((j, j-diff))
                popflag = False
                break
        if popflag:
            counter[len(stack)-1] = 0
            stack.pop()

    return False
        
'''
def dfs(now, dep, diff):
    stack[dep] = now
    #print stack, diff
    if dep == n-1:
        return True
    for j in xrange(diff+1, 11):
        if check(j) and j!=now:
            if dfs(j, dep+1, j-diff):
                return True
    return False
'''            
flag = False
for j in xrange(1, 11):
    if check(j):
        if dfs(j):
            flag = True
            break
if flag:
    print 'YES'
    ans = []
    #print stack
    for i in stack:
        ans.append(str(i[0]))
    print ' '.join(ans)
else:
    print 'NO'
