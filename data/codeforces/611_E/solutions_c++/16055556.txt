#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;

const int maxn = 2e5+100;
int n;
int a[10], t[maxn];

bool ok(int n, int m){
	int cnt = 0;
	int b[3];
	b[0] = b[1] = b[2] = m;
	for (int i = n-1; i >= 0; i--){
		if (t[i] <= a[0] && b[0]){
			b[0] --;
		}
		else if (t[i] <= a[1] && b[1]) {
			b[1] --;
		}
		else if (t[i] <= a[2] && b[2]) {
			b[2] --;
		}
		else if (t[i] <= a[0] + a[1] && b[0] && b[1]){
			b[0] --, b[1] --;
			cnt ++;
		}
		else if (t[i] <= a[0] + a[2] && b[0] && b[2]){
			b[0] --, b[2] --;
			cnt ++;
		}
		else if (t[i] <= a[1] + a[2] && b[1] && b[2]){
			b[1] --, b[2] --;
			cnt ++;
		}
		else if (t[i] <= a[0] + a[1] + a[2] && b[0] && b[1] && b[2]){
			b[0] --, b[1] --, b[2] --;
			cnt ++;
		}
		else return false;
	}
	if (cnt > m) return false;
	return true;
}

int main()
{
	while(scanf("%d", &n) != EOF){
		scanf("%d %d %d", &a[0], &a[1], &a[2]);
		sort(a, a + 3);
		int sum = a[0] + a[1] + a[2];
		bool find = false;
		for (int i = 0; i < n; i++){
			scanf("%d", &t[i]);
			if (t[i] > sum) find = true;
		}
		if (find){
			printf("-1\n");
			continue;
		}
		sort(t, t+n);
		int l = 1, r = n, m, ans = n;
		while(l <= r){
			m = l + r >> 1;
			if (ok(n, m)){
				r = m - 1;
				ans = m;
			}
			else{
				l = m + 1;
			}
		}
		printf("%d\n", ans);
	}
	return 0;
}