#include <bits/stdc++.h>
using namespace std;

int n;
int a[3];
multiset<int> x;
multiset<int>::iterator it;

int calc(int fir, int sec) {
    int ret =0;
    while (!x.empty()) {
        it = x.end();
        it--;
        if (*it <= fir) break;
        x.erase(it);

        it = x.upper_bound(sec);
        if(it != x.begin()) {
            it--;
            x.erase(it);
        }
        ret++;
    }
    return ret;
}
int main() {
    scanf("%d", &n);
    for(int i=0; i<3; i++) scanf("%d", &a[i]);
    sort(a, a+3);

    int tmp;
    for(int i=0; i<n; i++) scanf("%d", &tmp), x.insert(tmp);

    if (a[1]+a[2]+a[0] < (*x.rbegin())) { puts("-1"); return 0; }

    int ans = 0;
    ans += calc(a[1]+a[2], 0);
    ans += calc(a[0]+a[2], a[0]);
    ans += calc(max(a[2], a[0]+a[1]), a[1]);
    if (a[0]+a[1] > a[2]) ans += calc(a[2], a[2]);

    while (!x.empty()) {
        it = x.end(); it--;
        x.erase(it);
        it = x.upper_bound(a[1]);
        if (it != x.begin()) {
            it--;
            x.erase(it);
            it = x.upper_bound(a[0]);
            if (it != x.begin()) it--, x.erase(it);
        } else {
            it = x.upper_bound(a[0]+a[1]);
            if (it != x.begin()) it--, x.erase(it);
        }

        ans++;
    }

    printf("%d\n", ans);
    return 0;
}
