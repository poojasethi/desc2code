#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
int a, b, c, n, t;
int z[7];
int s[7];
int main(int argc, char const *argv[]) {
    bool flag = false;
    scanf("%d", &n);
    scanf("%d%d%d", &a, &b, &c);
    s[0] = a; s[1] = b; s[2] = c;
    sort(s, s + 3);
    a = s[0]; b = s[1]; c = s[2];
    s[3] = a + b; s[4] = a + c; s[5] = b +c;
    s[6] = a + b + c;
    sort(s, s + 7);
    memset(z, 0, sizeof(z));
    for (int i = 0; i < n; i++) {
        scanf("%d", &t);
        for (int j = 0; j < 7; j++) {
            if (t <= s[j]) {
                z[j]++;
                break;
            }
        }
        if (t > s[6]){
            flag = true;
        }
    }
    if(flag){
        puts("-1");
        return 0;
    }
    int ans = z[6], d1, d2;
    ans += z[5];
    z[0] -= min(z[5], z[0]);
    ans += z[4];
    d1 = z[4] - z[1];
    z[1] -= z[4];
    if (z[1] < 0) {
        z[1] = 0;
        d1 = min(z[0], d1);
        z[0] -= d1;
    }
    if (a + b > c) {
        ans += z[3];
        d1 = z[3] - z[2];
        d2 = d1-z[1];
        z[2] -= min(z[2], z[3]);
        if (d1 > 0) {
            z[1] -= min(d1, z[1]);
        }
        if (d2 > 0) {
            z[0] -= min(d2, z[0]);
        }
        z[3] = 0;
    }
    int x = z[0] + z[1];
    int y = z[2] + z[3];
    int a = max(z[1], (x+1)/2);
    if (y > a)
        ans += a + max((y - a + 1)/2, z[3]-a);
    else
        ans += max((x+y+2)/3, (z[1]+y+1)/2);
    printf("%d\n", ans);
    return 0;
}
  		    	    		   							 	