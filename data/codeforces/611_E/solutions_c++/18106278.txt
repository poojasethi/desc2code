#include <bits/stdc++.h>
using namespace std;

int n,x,a,b,c,cnt;

multiset<int> st;
multiset<int>::iterator it;

void update(int x)
{
	it=st.lower_bound(x+1);
	if(it!=st.begin())
		st.erase(--it);
}

int main()
{
	cin>>n>>a>>b>>c;
	if(a>b) swap(a,b);
	if(b>c) swap(b,c);
	if(a>b) swap(a,b);
	for(int i=1;i<=n;i++)
		scanf("%d",&x),st.insert(x);

	for(;!st.empty();)
	{
		int x=*(st.rbegin());
		if(a>=x || b>=x)
			update(a),update(b),update(c);
		else if(a+b>c)
		{
			if(c>=x)
			{
				int y=*(st.begin());
				if(a>=y || b>=y)
					update(a),update(b),update(c);
				else
					update(c),update(a+b);
			}
			else if(a+b>=x)
				update(a+b),update(c);
			else if(a+c>=x)
				update(a+c),update(b);
			else if(b+c>=x)
				update(b+c),update(a);
			else if(a+b+c>=x)
				update(a+b+c);
			else
			{
				puts("-1");
				return 0;
			}
		}
		else
		{
			if(c>=x)
			{
				int y=(*st.begin());
				if(a>=y || b>=y)
					update(a),update(b),update(c);
				else
					update(c),update(a+b);
			}
			else if(a+c>=x)
				update(a+c),update(b);
			else if(b+c>=x)
				update(b+c),update(a);
			else if(a+b+c>=x)
				update(a+b+c);
			else
			{
				puts("-1");
				return 0;
			}
		}
		cnt++;
	}
	cout<<cnt<<endl;
	return 0;
}
