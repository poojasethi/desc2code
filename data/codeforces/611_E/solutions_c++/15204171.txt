#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
using namespace std;
struct mscmp{
	bool operator() (int x,int y){
		return x>y;
	}
};
multiset<int,mscmp> s;
multiset<int,mscmp>::iterator it;
int ans,i,j,k,n,m,a,b,c,q[1100001];
bool sdel(int x){
	if (s.empty()) return 0;
	it=s.lower_bound(x);
	if (it!=s.end()) q[++q[0]]=*it,s.erase(it);else return 0;
	return 1;
}
int main(){
	scanf("%d%d%d%d",&n,&a,&b,&c);ans=q[0]=0;s.clear();
	if (a>b) swap(a,b);
	if (b>c) swap(b,c);
	if (a>b) swap(a,b);
	for (i=1;i<=n;i++){
		scanf("%d",&k);
		if (k>a+b+c){
			puts("-1");return 0;
		}
		if (k>b+c){
			ans++;continue;
		}
		s.insert(k);
	}
	while (!s.empty()){
		it=s.begin();
		if (*it<=a){
			ans+=1+(s.size()-1)/3;break;
		}
		ans++;
		if (*it<=b){
			s.erase(it);
			sdel(c);sdel(a);
			continue;
		}
		if (a+b<=c){
			if (*it<=c){
				s.erase(it);
				if (sdel(a)){
					if (!sdel(b)){
						s.insert(q[q[0]]);sdel(a+b);
					}
				}else{
					sdel(a+b);
				}
				continue;
			}
		}else{
			if (*it<=c){
				s.erase(it);
				if (sdel(a)){
					if (!sdel(b)){
						s.insert(q[q[0]]);sdel(a+b);
					}
				}else{
					sdel(a+b);
				}
				continue;
			}
			if (*it<=a+b){
				s.erase(it);
				sdel(c);
				continue;
			}
		}
		if (*it<=a+c){
			s.erase(it);
			sdel(b);
			continue;
		}
		s.erase(it);
		sdel(a);
	}
	printf("%d\n",ans);
	return 0;
}