#include<bits/stdc++.h>

using namespace std;

#define pii pair<int,int>
#define ll long long
#define N (int)(1e5+10)
#define mod 1000000007
#define mp make_pair
#define pb push_back
#define nd second
#define st first
#define inf mod
#define endl '\n'
#define sag (sol|1)
#define sol (root<<1)
#define ort ((bas+son)>>1)
#define bit(x,y) ((x>>y)&1)

int i,j,k,n,m,x,y,z,a1,a2,a3;
int ans,a,b,c;
multiset<int> st;
multiset<int>::iterator it;

int main(){
	cin >> n;

	cin >> a >> b >> c;

	if(a < b) swap(a,b);
	if(a < c) swap(a,c);
	if(b < c) swap(b,c);

	a = -a;
	b = -b;
	c = -c;

	int ab = a+b;
	int bc = b+c;
	int ac = a+c;
	int abc = a+b+c;

	for(i=1 ; i<=n ; i++){
		scanf("%d",&x);
		st.insert(-x);
	}

	while(st.size() and *st.begin() < ab){
		if(*st.begin() < abc){
			cout << -1 << endl;
			return 0;
		}
		ans++;
		st.erase(st.begin());
	}	
	while(st.size() and *st.begin() < ac){
		ans++;
		st.erase(st.begin());
		it = st.lower_bound(c);
		if(it != st.end())
			st.erase(it);
	}

	while(st.size() and *st.begin() < min(bc,a)){
		ans++;
		st.erase(st.begin());
		it = st.lower_bound(b);
		if(it != st.end())
			st.erase(it);
	}

	int t = 0,mn=inf;

	for(it = st.begin() ; it != st.end() ; it++){
		if(bc <= *it and *it < b)
			a1++;
		if(b <= *it and *it < c)
			a2++;
		if(c <= *it)
			a3++;
	}

	if(!st.size())
		mn = 0;

	while(1){
		t++;
		it = st.lower_bound(a);
		if(it != st.end()){
			if(bc <= *it and *it < b)
				a1--;
			if(b <= *it and *it < c)
				a2--;
			if(c <= *it)
				a3--;
			st.erase(it);
		}
		else{
			t = st.size();
			break;
		}
		if(*st.begin() < bc)
			continue;
		if(a1+a2+(max(a3-a2,0)+1)/2 <= t)
			break;
	}
	cout << ans + t << endl;
}
