#include <bits/stdc++.h>
#define filein(t) freopen(t, "r", stdin)
#define fileout(t) freopen(t, "w", stdout)
#define N 200005
#define BIT(i, j) ((j >> i) & 1)
#define mp make_pair
#define f first
#define s second
#define oo 1000000007
#define ll long long
#define ln 1000000001
#define pii pair < Pa, Pa >
#define Pa pair < int, int >


using namespace std;

int n, T[N], a, b, c, d, ans;
multiset <int> S;

int Top()
{
    if(S.size())    return -(*S.begin());
    return -1;
}

bool Use(int x)
{
    set < int > :: iterator u = S.lower_bound(-x);
    if(u != S.end())
    {
        S.erase(u);
        return true;
    }
    return false;
}

int main()
{
    ios_base::sync_with_stdio(0);
  //  filein("inp.txt");  fileout("out.txt");
    cin >> n >> a >> b >> c;
    for(int i=1; i<=n; i++)
    {
        cin >> d;
        S.insert(-d);
    }
    if(a > b) swap(a, b);
    if(a > c) swap(a, c);
    if(b > c) swap(b, c);
    if(Top() > a + b + c)
    {
        cout << -1;
        return 0;
    }
    while(Top() > b + c)
        Use(a+b+c), ans++;
    while(Top() > a + c)
        Use(b+c), Use(a), ans++;
    while(Top() > a + b && Top() > c)   Use(a+c), Use(b), ans++;
    if(a+b > c)
        while(Top() > c)
            Use(a+b), Use(c), ans++;
    while(Use(b))
        Use(c), Use(a), ans++;
    while(S.size())
        Use(a+b), Use(c), ans++;
    cout << ans;
}
