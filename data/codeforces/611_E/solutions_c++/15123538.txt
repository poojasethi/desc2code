#include <cstdio>
#include <cstring>
#include <vector>
#include <queue>
#include <string>
#include <algorithm>
#include <iostream>
#include <map>
#include <set>
#include <functional>
#include <iostream>

using namespace std;

int n;
int a[3];
int t[500000];
int all=0;
int g,s;
int cnt[3];

bool C(int p){
	memset(cnt,0,sizeof(cnt));
	int ns=s,ng=g;
	while(ng>=ns && t[ng]>a[0]+a[1] && p>0){
		cnt[1]++;
		if(t[ng]<=a[2])cnt[0]++;
		p--;
		ng--;
	}
	cnt[0]+=p;
	cnt[1]+=p;
	cnt[2]+=p;
	if(ng<ns)return true;
	while(ng>=ns){
		if(t[ng]>a[0]+a[1])return false;
		if(t[ng]>a[1]){
			if(cnt[2]>0 && t[ng]<=a[2])cnt[2]--;
			else{
				if(cnt[0]<=0 || cnt[1]<=0)return false;
				cnt[0]--;
				cnt[1]--;
			}
		}else if(t[ng]>a[0]){
			if(cnt[2]>0)cnt[2]--;
			else{
				if(cnt[1]<=0)return false;
				cnt[1]--;
			}
		}else{
			if(cnt[2]>0)cnt[2]--;
			else if(cnt[0]>0)cnt[0]--;
			else if(cnt[1]>0)cnt[1]--;
			else return false;
		}
		ng--;
	}
	return true;
}

int main(void){
	scanf("%d",&n);
	scanf("%d %d %d",&a[0],&a[1],&a[2]);
	for(int i=0;i<n;i++){
		scanf("%d",&t[i]);
	}
	sort(a,a+3);
	sort(t,t+n);
	if(t[n-1]>a[0]+a[1]+a[2]){
		printf("-1\n");
		return 0;
	}
	g=n-1,s=0;
	int res=0;
	while(g>=0 && t[g]>a[1]+a[2]){
		g--;
		res++;
	}
	while(g>=s && t[g]>a[0]+a[2]){
		g--;
		if(t[s]<=a[0])s++;
		res++;
	}
	if(g>=s){
		int l=0,r=g-s+2;
		for(int i=0;i<100;i++){
			int mid=(l+r)/2;
			if(C(mid))r=mid;
			else l=mid;
		}
		printf("%d\n",res+r);
	}else printf("%d\n",res);
	return 0;
}