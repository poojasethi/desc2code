#include <bits/stdc++.h>
//Damned if I don't do everything it takes, damned if I don't take what I want.

using namespace std;

typedef long long ll;
typedef pair<ll, ll> pii;

const ll MAXN = 2e5 + 100;

ll a[MAXN], x, y, z;
multiset<ll> s;

ll del(ll x){
	multiset<ll> :: iterator iter = s.upper_bound(x);
	if (iter == s.begin()) return -1;
	else {
		ll outp = *(--iter);
		s.erase(iter);
		return outp;
	}
}

bool avail(ll x, ll y){
	ll t2 = del(y);
	ll t1 = del(x);

	bool outp = true;
	if (t1 == -1 || t2 == -1) outp = false;

	if (t1 != -1) s.insert(t1);
	if (t2 != -1) s.insert(t2);
	return outp;
}

int main(){

	ll n; scanf("%I64d", &n);
	scanf("%I64d%I64d%I64d", &x, &y, &z);


	for (ll i = 0; i < n; i++) {
		scanf("%I64d", &a[i]);
		s.insert(a[i]);
		if (a[i] > x + y + z){
			cout << -1;
			return 0;
		}
	}

	if (x > y) swap(x, y);
	if (y > z) swap(y, z);
	if (x > y) swap(x, y);

	ll ans = 0;
	while(s.size()){
		ll last = *s.rbegin();

		//cerr << " ** " << last << endl;	
		del(last);

		if (x >= last){
			if (avail(y, z))
				del(y), del(z);
			else
				del(y + z);
		}else if (y >= last){
			if (avail(x, z))
				del(x), del(z);
			else
				del(x + z);
		}else if (z >= last){
			if (avail(x, y))
				del(x), del(y);
			else
				del(x + y);
		}else if (x + y >= last)
			del(z);
		else if (x + z >= last)
			del(y);
		else if (y + z >= last)
			del(x);

		ans++;
	}

	cout << ans << endl;
}

