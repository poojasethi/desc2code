//2016-05-25 22:44:23.714000
#include <algorithm>
#include <stdio.h>
#include <memory.h>
#include <string.h>
#include <vector>
#include <queue>
#include <set>
#include <map>
#include <string>

using namespace std;

typedef pair<int, int> pii;
typedef long long INT;
typedef multiset<int>::iterator Iter;

multiset<int> num;

int main() {
	int N, A, B, C, a;
	
	scanf("%d", &N);
	scanf("%d%d%d", &A, &B, &C);
	
	for (int i=0; i<N; i++) {
		scanf("%d", &a);
		num.insert(a);
	}
	
	if (A>B) swap(A, B);
	if (A>C) swap(A, C);
	if (B>C) swap(B, C);
	
	int ans=0;
	
	while (!num.empty()) {
		Iter it=num.end();
		it--;
		int x=*it;
		num.erase(it);
		
		if (x>A+B+C) {
			puts("-1");
			return 0;
		}
		
		ans++;
		
		if (num.empty()) break;
		
		if (x<=C) {
			it=num.upper_bound(A);
			if (it!=num.begin()) {
				it--;
				num.erase(it);
				if (num.empty()) break;
				
				it=num.upper_bound(B);
				if (it!=num.begin()) {
					it--;
					num.erase(it);
				}
			} else {
				it=num.upper_bound(A+B);
				if (it!=num.begin()) {
					it--;
					num.erase(it);
				}
			}
		} else if (x>B+C) continue; // all three
		else if (x<=A+B) { // A, B
			it=num.upper_bound(C);
			if (it!=num.begin()) {
				it--;
				num.erase(it);
			}
		} else if (x<=A+C) { //A, C
			it=num.upper_bound(B);
			if (it!=num.begin()) {
				it--;
				num.erase(it);
			}
		} else { // B, C
			it=num.upper_bound(A);
			if (it!=num.begin()) {
				it--;
				num.erase(it);
			}
		}
	}
	
	printf("%d\n", ans);
	
	return 0;
}