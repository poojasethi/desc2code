#include<stdio.h>
#include<algorithm>
#include<set>
using namespace std;
multiset<int>S;
multiset<int>::iterator it;
int n,A,B,C,ans,i,x,size;
void Delete(int x){
    it=S.upper_bound(x);
  if (size&&it!=S.begin())
    S.erase(--it),size--;
}
void debug(){
    for (multiset<int>::iterator h=S.begin();h!=S.end();h++)    
        printf("%d ",*h);puts("");
}
int can(int a,int b){
    if (size<=1) return 0;
    it=S.upper_bound(a);
    if (it==S.begin()) return 0;
    --it;int t=*it;S.erase(it);
    it=S.upper_bound(b);
    if (it==S.begin()) return S.insert(t),0;
    S.insert(t);return 1;
}
int main(){
    scanf("%d",&n);
    scanf("%d%d%d",&A,&B,&C);
    if (A<B) swap(A,B);
    if (A<C) swap(A,C);
    if (B<C) swap(B,C);
    for (i=1;i<=n;i++){
        scanf("%d",&x);
        if (x>A+B+C) return puts("-1"),0;
        S.insert(x);size++;
  }while (size){
    //debug();
    x=*(--S.end());ans++;
    //S.erase(S.find(x));
    if (A+B<x){
            Delete(A+B+C);continue;
      }else if (A+B>=x&&A+C<x){
        Delete(A+B);Delete(C);continue;
    }if (A+C>=x&&B+C<x&&A<x){
        Delete(A+C);Delete(B);continue;
    }if (B>=x){
        Delete(C);Delete(A);
            Delete(B);continue;
    }if (B+C>=A&&A<x){
        Delete(B+C),Delete(A);
      continue;
    }//if (B+C>=A&&A>=x||A>=B+C&&B+C>=x){
    Delete(A);//debug();
    if (can(B,C)) Delete(B),Delete(C);
                         else Delete(B+C);
  }printf("%d\n",ans);
}