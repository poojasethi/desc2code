#include<cstdio>
#include<cstring>
#include<queue>
#include<vector>
#include<algorithm>
#define rep(i,s,t) for (int i=s;i<=t;++i) 
#define drep(i,t,s) for (int i=t;i>=s;--i)
using namespace std;
int L,n,a[200005][25],s[200005],dp[25][1<<20];
char ch[30];
#define inf 0x3f3f3f3f
int cost(int x,int y){
    int t1=s[x],t2=s[y];
    drep(i,L,0){
      if (t1==t2) return i;
      t2>>=1;
      t1-=a[x][L-i+1]*(1<<(i-1));
    }
}
int main(){
  scanf("%d",&n);
  rep(i,1,n){
    scanf("%s",ch+1);
    L=strlen(ch+1);
    rep(j,1,L){
        a[i][j]=ch[j]-'0';
        s[i]=(s[i]<<1)+a[i][j];
    }
  }
  memset(dp,60,sizeof dp);
  dp[0][0]=0;
  int base=L;
  rep(i,1,n-1){
    int tmp=L-cost(i,i+1),now=0,mx=inf;
    base+=tmp;
    rep(j,0,L){
      now=(now<<1)+a[i+1][j];
      mx=min(mx,dp[j][now]+L-j);
    }  
    now=0;
    rep(j,0,L){
      dp[j][now]=min(dp[j][now],mx-tmp);
      now+=a[i][L-j]*(1<<j);
    }
  }
  int ans=0;
  rep(i,0,L)
    rep(j,0,(1<<i)-1)
	   ans=min(ans,dp[i][j]);
  printf("%d\n",ans+base); 
  return 0;
}
