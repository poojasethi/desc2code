#include<cstdio>
#include<cstring>
using namespace std;

void Get(int &T)
{
	char C;bool F=0;
	for(;C=getchar(),C<'0'||C>'9';)if(C=='-')F=1;
	for(T=C-'0';C=getchar(),C>='0'&&C<='9';T=T*10+C-'0');
	F&&(T=-T);
}

int N;
int A[200005];
int L;
char S[200005];

void Init()
{
	Get(N);
	for(int i=1;i<=N;i++)
	{
		scanf("%s",S+1);
		L=strlen(S+1);
		for(int j=1;j<=L;j++)
			A[i]=(A[i]<<1)+(S[j]-'0');
	}
}

int Offset;

int F[25][1050005];

int Ans;

void Work()
{
	memset(F,0xc0c0c0c0,sizeof F);
	F[0][0]=0;
	
	for(int i=2;i<=N;i++)
	{
		int Max=0;
		
		for(int k=1;k<=L;k++)
		{
			if((A[i]>>(L-k))==(A[i-1]&((1<<(k))-1)))
				Max=k;
		}
		
		Offset+=Max;
		
		int FLAi=F[L][A[i-1]];
		
		for(int k=0;k<=L;k++)
			if(FLAi<(F[k][A[i]>>(L-k)]-Max+k))
				FLAi=(F[k][A[i]>>(L-k)]-Max+k);
		F[L][A[i-1]]=FLAi;
		
		for(int k=0;k<L;k++)
		{
			if(F[k][(A[i-1]&((1<<(k))-1))]<FLAi)
				F[k][(A[i-1]&((1<<(k))-1))]=FLAi;
		}
	}
	
	Ans=L*N-Offset-F[0][0];
}

void Output()
{
	printf("%d\n",Ans);
}

int main()
{
	Init();
	Work();
	Output();
	return 0;
}