#include<stdio.h>
#include<time.h>
#include<string.h>
#include<iostream>
using namespace std;
int m,n,f1[200005],f2[200005],S[200005],T[21][1048600],Max;
char str[200005][25];
int get(int A,int B)
{int T1=str[A][1]-'0',T2=str[B][m]-'0',x=1,s=0;
 while(x<=m)
 {if(T1==T2) s=x;
  x++;
  T1=(T1<<1)+str[A][x]-'0';
  T2=T2+((str[B][m-x+1]-'0')<<(x-1));
 }
 return s;
}
void work_f2(int i)
{int Ti=0,x=0;
 f2[i]=S[1]-S[i];
 while(x<=m)
 {f2[i]=max(f2[i],T[x][Ti]-S[i]+x);
  x++;
  Ti=(Ti<<1)+str[i+1][x]-'0';
 }
 Ti=0;x=0;
 while(x<=m)
 {T[x][Ti]=max(T[x][Ti],f2[i]+S[i+1]);
  x++;
  Ti=Ti+((str[i][m-x+1]-'0')<<(x-1));
 }
 Max=max(Max,f2[i]+S[i+1]);
}
int main()
{//freopen("compress.in","r",stdin);
 //freopen("compress.out","w",stdout);
 scanf("%d\n",&n);
 memset(T,128,sizeof(T));
 for(int i=1;i<=n;i++) gets(str[i]+1);
 m=strlen(str[1]+1);
 for(int i=n-1;i>=1;i--) S[i]=S[i+1]+get(i+1,i);
 for(int i=2;i<=n;i++)
 {work_f2(i-1);
  f1[i]=max(Max-S[i],f1[i-1]+S[i-1]-S[i]);
 }
 cout<<n*m-f1[n]<<endl;
 return 0;
}

