#include <cstdio>
#include <algorithm>
#include <string.h>
using namespace std;
typedef long long LL;
typedef double ld;
const int NMax=1010;
LL INF=1000000007LL;
LL dp[NMax][NMax],C[NMax*2][NMax];

void INIT() {
	C[0][0]=1;
	for(int i=1;i<=2000;i++) {
		C[i][0]=1;
		for(int j=1;j<=i;j++) C[i][j]=(C[i-1][j]+C[i-1][j-1])%INF;
	}
	dp[0][0]=1;
	for(int i=1;i<=1000;i++)
		for(int j=1;j<=i;j++)
			dp[i][j]=(dp[i-j][j]+dp[i-j][j-1])%INF;
	//for(int i=1;i<=5;i++)
	//	for(int j=1;j<=3;j++)
		//	printf("%d,%d : %d\n",i,j,dp[i][j]);
		
}
int main()
{
	INIT();
	int T;
	scanf("%d",&T);
	while(T--) {
		int N,K;
		scanf("%d%d",&N,&K);
		LL ret=0;
		for(int i=((K-1)*K)/2;i<=N-K;i++)
			ret=(ret+(((LL)dp[i+K][K]*(LL)C[N-i][K])%INF))%INF;
		for(int i=1;i<=K;i++) ret=(((LL)ret*(LL)i)%INF)%INF;
		printf("%I64d\n",ret);
	}
	getchar();getchar();
	return 0;
}
