#include <iostream>

using namespace std;

const int MOD = 1e9 + 7;
const int MAX = 1e3 + 10;

long long dp[MAX][MAX];
int sum[MAX][MAX];
long long f[MAX];

int main()
{
	dp[0][0] = 1;
	for (int i = 0; i < MAX; i++)
		sum[0][i] = 1;
	for (int i = 1; i < MAX; i++)
		for (int j = i; j < MAX; j++)
		{
			dp[i][j] = (sum[i - 1][j - i] + dp[i][j - i]) % MOD;
			sum[i][j] = (sum[i][j - 1] + dp[i][j]) % MOD;
		}
	f[0] = 1;
	for (int i = 1; i < MAX; i++)
		f[i] = (f[i - 1] * i) % MOD;
	for (int i = 1; i < MAX; i++)
		for (int j = 0; j < MAX; j++)
		{
			dp[i][j] = (dp[i][j] + sum[i - 1][j]) % MOD;
			dp[i][j] = (dp[i][j] * f[i]) % MOD;
			if (j > 0)
				dp[i][j] = (dp[i][j] + dp[i][j - 1]) % MOD;
		}
	int t, n, k;
	cin >> t;
	for (int i = 0; i < t; i++)
	{
		cin >> n >> k;
		cout << dp[k][n - k] << endl;
    }
	return 0;
}