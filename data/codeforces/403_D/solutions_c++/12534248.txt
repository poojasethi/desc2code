#include <iostream>
#include <algorithm>

using namespace std;

const int maxn = 1000 + 10, MOD = 1000*1000*1000 + 7;

int n, k, t;
long long dp[maxn][maxn], fact[maxn] ,cij[maxn][maxn], ans;

int main()
{
    ios::sync_with_stdio(false);

    fact[0] = 1;
    for(int i = 1; i < maxn; i++)
        fact[i] = (fact[i-1]*i)%MOD;

    for(int i = 0; i < maxn; i++){
        cij[i][0] = cij[i][i] = 1;
        for(int j = 1; j < i; j++)
            cij[i][j] = (cij[i - 1][j] + cij[i-1][j-1])%MOD;
    }

    dp[0][0] = 1;
    for(int i = 1; i < maxn; i++)
        for(int j = 1; j <= i; j++)
            dp[i][j] = (dp[i-j][j] + dp[i-j][j-1])%MOD;

    cin >> t;
    for(int i = 0; i < t; i++){
        ans = 0;
        cin >> n >> k;
        for(int q = ((k+1)*k) >> 1; q <= n; q++)
        {
            ans=(ans+dp[q][k]*cij[n-q+k][k])%MOD;
        }
        ans *= fact[k];
        ans %= MOD;
        cout << ans << endl;
    }

}
