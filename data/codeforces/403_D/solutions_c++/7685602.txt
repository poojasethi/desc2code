#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
const int MAX = 1e3+10;
const int MOD = 1e9+7;
LL dp[MAX][MAX],C[MAX][MAX],F[MAX];

void gao() {
    F[0]=1;
    for(int i=1;i<MAX;i++) F[i]=F[i-1]*i%MOD;
    memset(C,0,sizeof(C));
    for(int i=0;i<MAX;i++) {
        C[i][0]=1;
        for(int j=1;j<=i;j++) {
            C[i][j]=(C[i-1][j]+C[i-1][j-1])%MOD;
        }
    }
    dp[0][0]=1;
    for(int i=1;i<MAX;i++) {
        for(int j=i;j<MAX;j++) {
            dp[i][j]=(dp[i-1][j-i]+dp[i][j-i])%MOD;
        }
    }
    return;
}

int main() {
    int cas,n,k;
    LL res;
    scanf("%d",&cas);
    gao();
    while(cas--) {
        scanf("%d %d",&n,&k);
        res=0;
        for(int i=k*(k-1)/2;i<=n;i++) {
            res=(res+dp[k][i]*C[n-i+k][k]%MOD)%MOD;
        }
        printf("%I64d\n",res*F[k]%MOD);
    }
}
