#include <bits/stdc++.h>


using namespace std;

const int Mod = 1e9 + 7;
const int N = 1001;
const int K = 46;
int p[K][N], f[N], q[K][N], dp[K][N];

void pre() {
	p[0][0] = 1;
	for (int i = 0; i < N; i++)
		for (int j = K - 1; j > 0; j--)
			for (int k = i; k < N; k++)
				p[j][k] = (p[j][k] + p[j - 1][k - i]) % Mod;
	fill(q[0], q[0] + N, 1);
	for (int i = 1; i < K; i++)
		for (int j = 0; j < N; j++)
			for (int k = 1; k <= j; k++)
				q[i][j] = (q[i][j] + q[i - 1][j - k]) % Mod;
	f[0] = 1;
	for (int i = 1; i < N; i++)
		f[i] = 1LL * f[i - 1] * i % Mod;
	for (int i = 1; i < K; i++)
		for (int j = i; j < N; j++)
			for (int k = 0; k < j; k++)
				dp[i][j] = (dp[i][j] + 1LL * p[i][k] * f[i] % Mod * q[i][j - k] % Mod) % Mod;
}

main() {
	pre();
	int t;
	scanf("%d", &t);
	while (t--) {
		int n, k;
		scanf("%d %d", &n, &k);
		if (k >= K)
			printf("0\n");
		else printf("%d\n", dp[k][n]);
	}
}
