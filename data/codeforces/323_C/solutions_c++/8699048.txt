#include <cstdio>
#include <algorithm>
const int N = 1000000 + 9;
int cnt[N * 30],rt[N],lc[N * 30],rc[N * 30],tot,n,Map[N],m;
inline int f(int z,int x)
{
	return ((z-1+x)%n)+1;
}
int query(int idx,int l,int r,int L,int R)
{
	if (!idx) return 0;
	if (L <= l && r <= R) return cnt[idx];
	const int mid = (l + r) / 2;
	int res = 0;
	if (L <= mid) res += query(lc[idx],l,mid,L,R);
	if (mid < R) res += query(rc[idx],mid + 1,r,L,R);
	return res;
}
void insert(int last,int &idx,int l,int r,int p)
{
	if (!idx) {
		idx = ++tot;
		cnt[idx] = cnt[last];
	}
	if (l == r) return (void)(++cnt[idx]);
	const int mid = (l + r) / 2;
	if (p <= mid) {rc[idx] = rc[last];insert(lc[last],lc[idx],l,mid,p);}
	else {lc[idx] = lc[last];insert(rc[last],rc[idx],mid + 1,r,p);}
	cnt[idx] = cnt[lc[idx]] + cnt[rc[idx]];
}
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("323C.in","r",stdin);
	freopen("323C.out","w",stdout);
	#endif
	scanf("%d",&n);
	for (int i = 1,x; i <= n; ++i) {
		scanf("%d",&x);
		Map[x] = i;
	}
	for (int i = 1,y; i <= n; ++i) {
		scanf("%d",&y);
		y = Map[y];
		insert(rt[i - 1],rt[i],1,n,y);
	}
	scanf("%d",&m);
	for (int i = 1,x = 0,a,b,c,d; i <= m; ++i) {
		scanf("%d%d%d%d",&a,&b,&c,&d);
		a = f(a,x); b = f(b,x); c = f(c,x); d = f(d,x);
		if (a > b) std::swap(a,b);
		if (c > d) std::swap(c,d);
		//printf("%d %d %d %d\n",a,b,c,d);
		x = query(rt[d],1,n,a,b) - query(rt[c - 1],1,n,a,b);
		printf("%d\n",x);
		++x;
	}
}
