#include<stdio.h>
#include<string.h>
#include<iostream>
#include<algorithm>
using namespace std;
const int maxn= 1000010;
struct node
{
	int ls,rs,sum;
}s[maxn*30];
int n,p[maxn],q[maxn],x,m,pos[maxn],v[maxn],root[maxn],ind=1;
void insert(int rt,int &newrt,int l,int r,int tar)
{
	newrt=++ind;s[newrt]=s[rt];s[newrt].sum++;
	if(l==r)return;
	if(tar>(l+r>>1))insert(s[rt].rs,s[newrt].rs,(l+r>>1)+1,r,tar);
	else insert(s[rt].ls,s[newrt].ls,l,l+r>>1,tar);
}
int ask(int lrt,int rrt,int l,int r,int left,int right)
{
	if(!rrt||l>right||r<left)return 0;
	if(l>=left&&r<=right)return s[rrt].sum-s[lrt].sum;
	return ask(s[lrt].ls,s[rrt].ls,l,l+r>>1,left,right)+ask(s[lrt].rs,s[rrt].rs,(l+r>>1)+1,r,left,right);
}
int f(int z){return (z-1+x)%n+1;}
int main()
{
	scanf("%d",&n);
	for(int i=1;i<=n;i++)scanf("%d",&p[i]);
	for(int i=1;i<=n;i++)scanf("%d",&q[i]);
	scanf("%d",&m);
	for(int i=1;i<=n;i++)pos[q[i]]=i;
	for(int i=1;i<=n;i++)v[i]=pos[p[i]];
	root[0]=1;
	for(int i=1;i<=n;i++)insert(root[i-1],root[i],1,n,v[i]);
	while(m--)
	{
		int a,b,c,d;
		scanf("%d%d%d%d",&a,&b,&c,&d);
		printf("%d\n",x=ask(root[min(f(a),f(b))-1],root[max(f(a),f(b))],1,n,min(f(c),f(d)),max(f(c),f(d))));
		++x;
	}
}
