#include<bits/stdc++.h>

using namespace std;

#define pii pair<int,int>
#define ll long long
#define N (int)(1e6+10)
#define mod 1000000007
#define mp make_pair
#define pb push_back
#define nd second
#define st first
#define inf mod
#define endl '\n'
#define sag (sol|1)
#define sol (root<<1)
#define ort ((bas+son)>>1)
#define bit(x,y) ((x>>y)&1)

vector<int> St[4*N];
int i,j,k,n,m,x,y,z;
int l1,l2,r1,r2;
int a[N],b[N],last;

int que(int root,int bas,int son,int x,int y,int a,int b){
	
	if(bas > y or son < x)
		return 0;

	if(x <= bas and son <= y){
		int t1 = lower_bound(St[root].begin(),St[root].end(),a) - St[root].begin();
		int t2 = upper_bound(St[root].begin(),St[root].end(),b) - St[root].begin() - 1;

		return t2-t1+1;
	}

	return que(sol,bas,ort,x,y,a,b) + que(sag,ort+1,son,x,y,a,b);
}

void init(int root,int bas,int son){
	if(bas == son){
		St[root].pb(b[a[bas]]);
		return;
	}

	init(sol,bas,ort);
	init(sag,ort+1,son);

	St[root].resize(St[sol].size()+St[sag].size());

	merge(St[sol].begin(),St[sol].end(),St[sag].begin(),St[sag].end(),St[root].begin());
}

int main(){
	cin >> n;

	for(i=1 ; i<=n ; i++)
		scanf("%d",a+i);
	
	for(i=1 ; i<=n ; i++){
		scanf("%d",&x);
		b[x] = i;
	}

	init(1,1,n);

	cin >> m;

	for(i=1 ; i<=m ; i++){
		scanf("%d %d %d %d",&l1,&r1,&l2,&r2);


		l1 = (l1 + last - 1) % n + 1;
		r1 = (r1 + last - 1) % n + 1;
		l2 = (l2 + last - 1) % n + 1;
		r2 = (r2 + last - 1) % n + 1;

		if(l1 > r1)
			swap(l1,r1);
		if(l2 > r2)
			swap(l2,r2);

		last = que(1,1,n,l1,r1,l2,r2);

		printf("%d\n",last);

		last++;
	}
}
