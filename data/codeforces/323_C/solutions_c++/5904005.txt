#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 1000010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int a,l,r;
} tr[N*24];
int i,j,k,n,m,t,an;
int a[N],b[N],root[N];
void build(int p,int &q,int x,int y,int k) {
	q=++t; tr[q].a=tr[p].a+1;
	if (x==y) return;
	int mid=(x+y)/2;
	if (k<=mid) tr[q].r=tr[p].r,build(tr[p].l,tr[q].l,x,mid,k);
	else tr[q].l=tr[p].l,build(tr[p].r,tr[q].r,mid+1,y,k);
}
inline void prepare() {
	int i;
	root[0]=++t;
	For(i,1,n) build(root[i-1],root[i],1,n,a[i]);
}
inline int f(int a) {
	return ((a-1+an)%n)+1;
}
void calc(int p,int q,int x,int y,int l,int r) {
	if (l<=x&&y<=r) {
		an+=tr[q].a-tr[p].a; return;
	}
	int mid=(x+y)/2;
	if (l<=mid) calc(tr[p].l,tr[q].l,x,mid,l,r);
	if (mid<r) calc(tr[p].r,tr[q].r,mid+1,y,l,r);
}
inline void work() {
	int i,l1,r1,l2,r2,a,b,c,d; an=0;
	scanf("%d",&m);
	For(i,1,m) {
		scanf("%d%d%d%d",&a,&b,&c,&d);
		a=f(a),b=f(b),c=f(c),d=f(d);
		l1=min(a,b),r1=max(a,b),l2=min(c,d),r2=max(c,d);
		an=0;
		calc(root[l1-1],root[r1],1,n,l2,r2);
		printf("%d\n",an);
		an++;
	}
}
int main() {
	scanf("%d",&n);
	For(i,1,n) scanf("%d",&k),b[k]=i;
	For(i,1,n) scanf("%d",&k),a[b[k]]=i;
	prepare();
	work();
	//for(;;);
	return 0;
}
