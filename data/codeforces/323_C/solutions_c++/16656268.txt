#include<bits/stdc++.h>

using namespace std;

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define sol (root+root)
#define sag (root+root+1)
#define orta ((bas+son)/2)
#define ll long long
#define pii pair<int,int>
#define type(x) __typeof((x).begin())
#define foreach(it, x) for(type(x) it = (x).begin(); it != (x).end(); it++)

const int N=1e6+5;
const int mod=1e9+7;
const int inf=1e9+7;

int n,i,x,m,a,b,c,d,l,r,l2,r2,lastans;
int H[N],A[N];

vector<int> st[4*N];

int f(int x){
	return (x-1+lastans)%n+1;
}

int query(int root,int bas,int son,int x,int y,int x2,int y2){
	if(bas>y or son<x)
		return 0;
	if(x<=bas and son<=y)
		return upper_bound(st[root].begin(),st[root].end(),y2)-lower_bound(st[root].begin(),st[root].end(),x2);
	return query(sol,bas,orta,x,y,x2,y2)+query(sag,orta+1,son,x,y,x2,y2);
}

void init(int root,int bas,int son){
	if(bas==son){
		st[root].pb(A[bas]);
		return;
	}
	init(sol,bas,orta);
	init(sag,orta+1,son);
	st[root].resize(st[sol].size()+st[sag].size());
	merge(st[sol].begin(),st[sol].end(),st[sag].begin(),st[sag].end(),st[root].begin());
}

main(){

	scanf("%d",&n);

	for(i=1 ; i<=n ; i++)
		scanf("%d",A+i);

	for(i=1 ; i<=n ; i++){
		scanf("%d",&x);
		H[x]=i;
	}

	for(i=1 ; i<=n ; i++)
		A[i]=H[A[i]];

	init(1,1,n);

	scanf("%d",&m);

	for(i=1 ; i<=m ; i++){
		scanf("%d %d %d %d",&a,&b,&c,&d);
		l=min(f(a),f(b));
		r=max(f(a),f(b));
		l2=min(f(c),f(d));
		r2=max(f(c),f(d));
		lastans=query(1,1,n,l,r,l2,r2)+1;
		printf("%d\n",lastans-1);
	}

}
