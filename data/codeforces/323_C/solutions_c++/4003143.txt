#include<cstdio>
#include<algorithm>

using namespace std;

const int MAXN=1000000+9, SIZE=MAXN*25;

int root[MAXN], end;
int lc[SIZE], rc[SIZE], s[SIZE];

int build(int l, int r)
{
	int u=++end;
	if(l<r)
	{
		int m=(l+r)/2;
		lc[u]=build(l, m);
		rc[u]=build(m+1, r);
	}
	return u;
}

int N;
void ins(int now, int pos)
{
	int v=root[now-1];
	int u=root[now]=++end;
	s[u]=now;
	for(int l=1,r=N;l<r;)
	{
		int m=(l+r)/2;
		if(pos>m)
		{
			lc[u]=lc[v];
			rc[u]=++end;
			s[rc[u]]=s[rc[v]]+1;
			u=rc[u], v=rc[v];
			l=m+1;
		}
		else
		{
			rc[u]=rc[v];
			lc[u]=++end;
			s[lc[u]]=s[lc[v]]+1;
			u=lc[u], v=lc[v];
			r=m;
		}
	}
}

int query(int u, int l, int r, int ql, int qr)
{
	if(qr<l || r<ql)
		return 0;
	if(ql<=l && r<=qr)
		return s[u];
	int m=(l+r)/2;
	return query(lc[u], l, m, ql, qr) + query(rc[u], m+1, r, ql, qr);
}

int pos[MAXN];
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif
	int i,t;
	scanf("%d",&N);
	for(i=1;i<=N;++i)
	{
		scanf("%d",&t);
		pos[t]=i;
	}
	root[0]=build(1,N);
	for(i=1;i<=N;++i)
	{
		scanf("%d",&t);
		ins(i, pos[t]);
	}

	int M, x=-1;
	for(scanf("%d",&M);M--;)
	{
		int a,b,c,d;
		scanf("%d%d%d%d",&a,&b,&c,&d);
		a=(a+x)%N+1, b=(b+x)%N+1;
		if(a>b)
			swap(a,b);
		c=(c+x)%N+1, d=(d+x)%N+1;
		if(c>d)
			swap(c,d);
		x=query(root[d],1,N,a,b)-query(root[c-1],1,N,a,b);
		printf("%d\n",x);
	}
	return 0;
}
