#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
using namespace std;
#define Nil NULL
const int SIZEN=1000010,SIZELG=23;
class Node{
public:
	int l,r;
	int sum;
	Node *lc,*rc;
	Node* modify(int,int);
	int query(int,int);
};
int tot=0;
Node Pool[SIZEN*SIZELG];
Node *tail=Pool;
Node* build(int a,int b){
	Node *p=tail++;tot++;
	p->l=a,p->r=b;
	p->sum=0;
	if(a==b) p->lc=p->rc=Nil;
	else{
		int mid=(a+b)/2;
		p->lc=build(a,mid);
		p->rc=build(mid+1,b);
	}
	return p;
}
Node* Node::modify(int x,int t){
	if(l>x||r<x) return this;
	Node *p=tail++;tot++;
	*p=*this;
	p->sum+=t;
	if(p->lc!=Nil) p->lc=p->lc->modify(x,t);
	if(p->rc!=Nil) p->rc=p->rc->modify(x,t);
	return p;
}
int Node::query(int a,int b){
	if(l>b||r<a) return 0;
	if(l>=a&&r<=b) return sum;
	return lc->query(a,b)+rc->query(a,b);
}
int N,M;
int P[SIZEN],Q[SIZEN];
int posQ[SIZEN];
Node *root[SIZEN];
int lastans=0;
int f(int z){
	return (z-1+lastans)%N+1;
}
void work(void){
	root[0]=build(1,N);
	for(int i=1;i<=N;i++)
		root[i]=root[i-1]->modify(posQ[P[i]],1);
	scanf("%d",&M);
	int a,b,c,d;
	for(int i=1;i<=M;i++){
		scanf("%d%d%d%d",&a,&b,&c,&d);
		a=f(a),b=f(b),c=f(c),d=f(d);
		if(a>b) swap(a,b);
		if(c>d) swap(c,d);
		lastans=root[b]->query(c,d)-root[a-1]->query(c,d);
		printf("%d\n",lastans);
		lastans++;
	}
}
void read(void){
	scanf("%d",&N);
	for(int i=1;i<=N;i++) scanf("%d",&P[i]);
	for(int i=1;i<=N;i++) scanf("%d",&Q[i]);
	for(int i=1;i<=N;i++) posQ[Q[i]]=i;
}
int main(){
	//freopen("t1.in","r",stdin);
	//freopen("t1.out","w",stdout);
	read();
	work();
	return 0;
}
