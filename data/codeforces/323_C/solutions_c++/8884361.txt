#include <cstdio>
#include <iostream>
#include <queue>
#define f(z) (z-1+X)%n+1
#define N 1000100
using namespace std;
struct stu{int x,y,l,r;};
queue <stu> q;
int n,m,X,tot,p[N],root[N],sum[N*30],ls[N*30],rs[N*30];
int main(){
	scanf("%d",&n);
	for(int i=1,t;i<=n;++i){
		scanf("%d",&t);
		p[t]=i;
	}
	for(int i=1,t;i<=n;++i){
		scanf("%d",&t);
		for(int x=root[i]=++tot,y=root[i-1],l=1,r=n;;){
			sum[x]=sum[y]+1;
	        ls[x]=ls[y];
	        rs[x]=rs[y];
	        if(l==r)break;
	        int mid=(l+r)>>1;
	        if(p[t]<=mid)x=ls[x]=++tot,y=ls[y],r=mid;
	        else x=rs[x]=++tot,y=rs[y],l=mid+1;
		}
	}
	scanf("%d",&m);
	for(int i=1,a,b,c,d;i<=m;++i){
		scanf("%d%d%d%d",&a,&b,&c,&d);
		int ans=0,l1=min(f(a),f(b)),r1=max(f(a),f(b));
		stu t;
		t.x=root[max(f(c),f(d))];t.y=root[min(f(c),f(d))-1];t.l=1;t.r=n;
		q.push(t);
		while(!q.empty()){
			stu now=q.front();
			q.pop();
			if(l1<=now.l && now.r<=r1){
				ans+=sum[now.x]-sum[now.y];
				continue;
			}
			int mid=(now.l+now.r)>>1;
			if(l1<=mid){
			    t.x=ls[now.x];t.y=ls[now.y];t.l=now.l;t.r=mid;
			    q.push(t);
			}
			if(r1>mid){
				t.x=rs[now.x];t.y=rs[now.y];t.l=mid+1;t.r=now.r;
			    q.push(t);
			}
		}
		printf("%d\n",ans);
		X=ans+1;
	}
}
