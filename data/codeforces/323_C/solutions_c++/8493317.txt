#include<cstdio>
#include<algorithm>
using namespace std;
const int MAXT=40000005;
const int MAXN=1000005;
int top;
int s[MAXT],L[MAXT],R[MAXT];
int Query(int k,int l,int r,int x,int y)
{
	if(x==l&&y==r)
		return s[k];
	int m=l+r>>1;
	if(y<=m)
		return Query(L[k],l,m,x,y);
	if(x>m)
		return Query(R[k],m+1,r,x,y);
	return Query(L[k],l,m,x,m)+Query(R[k],m+1,r,m+1,y);
}
int Insert(int k,int l,int r,int d)
{
	int t=++top;
	s[t]=s[k]+1,L[t]=L[k],R[t]=R[k];
	if(l==r)return t;
	int m=l+r>>1;
	if(d<=m)
		return L[t]=Insert(L[k],l,m,d),t;
	return R[t]=Insert(R[k],m+1,r,d),t;
}
void Get(int &x)
{
	int c=getchar();x=0;
	while(c<48||c>57)c=getchar();
	while(c>47&&c<58)x=x*10+c-48,c=getchar();
}
int d[MAXN],root[MAXN];
int main()
{
	int n,m;
	Get(n);
	for(int i=1,x;i<=n;i++)
		Get(x),
		d[x]=i;
	for(int i=1,x;i<=n;i++)
		Get(x),
		root[i]=Insert(root[i-1],1,n,d[x]);
	Get(m);
	for(int a,b,x,y,lasans=0;m--;)
	{
		Get(a),Get(b),Get(x),Get(y);
		a=((a-1+lasans)%n)+1;
		b=((b-1+lasans)%n)+1;
		x=((x-1+lasans)%n)+1;
		y=((y-1+lasans)%n)+1;
		if(a>b)swap(a,b);
		if(x>y)swap(x,y);
		lasans=Query(root[y],1,n,a,b)-Query(root[x-1],1,n,a,b);
		printf("%d\n",lasans++);
	}
}