#include <bits/stdc++.h>
using namespace std;

#define rep(i, a, b) for(int i = (a);i <= (b);i ++)

#define N 1000010

int a[N], b[N], g[N];

struct node{
	int lc, rc, sz;
}t[N * 25];
int rt[N], TOT, n, m;

#define ls t[x].lc
#define rs t[x].rc
void modify(int &x, int p, int v, int l, int r){
	t[x = ++ TOT] = t[p];
	t[x].sz ++;
	if(l == r) return;
	int mid = (l + r) >> 1;
	if(v <= mid) modify(ls, t[p].lc, v, l, mid);
	else modify(rs, t[p].rc, v, mid + 1, r);
}

int ask(int ql, int qr, int l, int r, int x){
	if(ql > qr || !x) return 0;
	if(ql <= l && r <= qr) return t[x].sz;
	int mid = (l + r) >> 1, ret = 0;
	if(ql <= mid) ret += ask(ql, qr, l, mid, ls);
	if(mid < qr)  ret += ask(ql, qr, mid + 1, r, rs);
	return ret;
}

int main(){
	scanf("%d", &n);
	int l, r, x, y, la = 0;
	rep(i, 1, n) scanf("%d", &x), a[x] = i;
	rep(i, 1, n) scanf("%d", &x), b[x] = i;
	rep(i, 1, n) g[a[i]] = b[i];
	rep(i, 1, n) modify(rt[i], rt[i - 1], g[i], 1, n);
	scanf("%d", &m);
	rep(i, 1, m){
		scanf("%d%d%d%d", &l, &r, &x, &y);
		l = (l - 1 + la) % n + 1;
		r = (r - 1 + la) % n + 1;
		x = (x - 1 + la) % n + 1;
		y = (y - 1 + la) % n + 1;
		if(l > r) swap(l, r);
		if(x > y) swap(x, y);
		la = ask(1, y, 1, n, rt[r]) + ask(1, x - 1, 1, n, rt[l - 1]) - ask(1, y, 1, n, rt[l - 1]) - ask(1, x - 1, 1, n, rt[r]);
		printf("%d\n", la);
		la ++;
	}
	return 0;
}

		
	
	