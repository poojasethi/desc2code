#include<iostream>
#include<algorithm>
#include<cstring>
#include<cstdio>
using namespace std;
const int maxn=1000000+10;
int ls[maxn*30],rs[maxn*30],sum[maxn*30],a,b,c,d,lastans;
int pos[maxn],A[maxn],B[maxn],n,m,root[maxn],sz;
void update(int l,int r,int x,int &y,int p)
{
  y=++sz;
  sum[y]=sum[x]+1;
  ls[y]=ls[x];rs[y]=rs[x];
  if(l==r) return;
  int mid=(l+r)>>1;
  if(p<=mid) update(l,mid,ls[x],ls[y],p);
  else update(mid+1,r,rs[x],rs[y],p);
}
int fun(int x)
{
  return (x-1+lastans)%n+1;
}
int query(int l,int r,int k)
{
  if(k<1) return 0;
  l=root[l];r=root[r];int ql=1,qr=n,res=0;
  while(ql<=qr)
  {
    int mid=(ql+qr)>>1;
    if(ql==qr)
    {
      if(ql<=k) res+=sum[r]-sum[l];
      break;
    }
    if(mid<=k)
    {
      res+=sum[ls[r]]-sum[ls[l]];
      r=rs[r];l=rs[l];
      ql=mid+1;
    }
    else 
    {
      r=ls[r];
      l=ls[l];
      qr=mid;
    }
  }
  return res;
}
int main()
{
  //freopen("323C.in","r",stdin);
  //freopen("323C.out","w",stdout);
  scanf("%d",&n);
  for(int i=1;i<=n;i++)
  {
    scanf("%d",&A[i]);
    pos[A[i]]=i;
  }
  for(int i=1;i<=n;i++)
  {
    int x;scanf("%d",&x);
    B[i]=pos[x];
  }
  for(int i=1;i<=n;i++)
    update(1,n,root[i-1],root[i],B[i]);
  scanf("%d",&m);
  for(int i=1;i<=m;i++)
  {
    scanf("%d%d%d%d",&a,&b,&c,&d);
    int l1,r1,l2,r2;
    l1=min(fun(a),fun(b));r1=max(fun(a),fun(b));
    l2=min(fun(c),fun(d));r2=max(fun(c),fun(d));
    lastans=query(l2-1,r2,r1)-query(l2-1,r2,l1-1);
    printf("%d\n",lastans);
    lastans++;
  }
  return 0;
}
    