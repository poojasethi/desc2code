#include <cstdio>
#include <cstdlib>
#define sz 21000200
#define hjc 1000020

class CcT{
public:
  int l[sz], r[sz], a[sz];
  int n;
  int ins(int o, int p, int s){
    int m = ++n; a[m] = a[o] + 1;
    if (s == 1) return m;
    if (p < (s >> 1)) l[m] = ins(l[o], p, s >> 1), r[m] = r[o];
    else l[m] = l[o], r[m] = ins(r[o], p - (s >> 1), s >> 1);
    return m;
  }

  int find(int o, int p, int s){
    if (s == 1) return a[o];
    else if (p < (s >> 1)) return find(l[o], p, s >> 1);
    else return find(r[o], p - (s >> 1), s >> 1) + a[l[o]];
  }

} X;

void gi(int &x){char ch = getchar(); x = 0; while (ch < '0' || ch > '9') ch = getchar(); while (ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();}
void pi(int x){if (x > 9) pi(x / 10); putchar(x % 10 + 48);}

int p[hjc], q[hjc], P[hjc], s[hjc], root[hjc];
int n, m, x, l1, r1, l2, r2, a, b, c, d, i, j, k;
#define f(a) (((a - 1 + x) % n) + 1)
#define F(a, b) X.find(root[a], b, 1048576)
int main(){
  gi(n);
  for (i = 1; i <= n; i++) gi(p[i]);
  for (i = 1; i <= n; i++) gi(q[i]);
  for (i = 1; i <= n; i++) P[q[i]] = i;
  for (i = 1; i <= n; i++) s[i] = P[p[i]];
  for (i = 1; i <= n; i++) root[i] = X.ins(root[i - 1], s[i], 1048576);

  gi(m); x = 0;
  while (m--){
    gi(a); gi(b); gi(c); gi(d);
    l1 = f(a); r1 = f(b); l2 = f(c); r2 = f(d);
    if (l1 > r1) l1 ^= r1, r1 ^= l1, l1 ^= r1;
    if (l2 > r2) l2 ^= r2, r2 ^= l2, l2 ^= r2;
    l1--; l2--;
    x = F(l1, l2) + F(r1, r2) - F(l1, r2) - F(r1, l2);
    pi(x); putchar('\n'); x++;
  }
  return 0;
}
