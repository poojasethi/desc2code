#include <bits/stdc++.h>
using namespace std;

const int MAXN = (int) 2e6 + 3;

struct Instruction {
  int s, t, i;
};

int n;
Instruction a[MAXN];
int ans[MAXN];

bool cmp(const Instruction &x, const Instruction &y) {
  if (x.s != y.s) return x.s < y.s;
  return x.t > y.t;
}

int main() {
  scanf("%*d%d", &n);
  for (int i = 0; i < n; i++) {
    scanf("%d%d", &a[i].s, &a[i].t);
    a[i].t += a[i].s - 1;
    a[i].i = i;
  }
  sort(a, a + n, cmp);

#ifdef wck
  for (int i = 0; i < n; i++)
    printf("%d %d\n", a[i].s, a[i].t);
#endif

  int j = 0, i = 1;
  while (true) {
    int k = -1;
    while (i < n && a[i].s <= a[j].t + 1) {
      if (k == -1 || a[i].t > a[k].t)
        k = i;
      i++;
    }

#ifdef wck
    ans[j] = true;
#else
    ans[a[j].i] = true;
#endif

    if (k == -1 || a[k].t <= a[j].t) {
      if (i == n) break;
      j = i;
      i++;
    }
    else {
      j = k;
    }
  }

  vector<int> buff;
  for (int i = 0; i < n; i++)
    if (! ans[i]) buff.push_back(i + 1);
  printf("%u\n", buff.size());
  for (int i = 0, _i = buff.size(); i < _i; i++)
    printf("%d%c", buff[i], i + 1 == _i ? '\n' : ' ');
  return 0;
}
