//In the name of God
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

typedef pair<int, int> pii;
const int M = 2e5 + 2;
#define beg first
#define end second

struct memst {
	int st, ed, name;
} a[M];

bool operator<(memst a, memst b) { return a.st < b.st; }

int m, n, cnt;
bool mark[M];

int main() {
	ios::sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 0; i < m; i++)
		a[i].name = i;
	for (int i = 0; i < m; i++) {
		cin >> a[i].st >> a[i].ed;
		a[i].ed += a[i].st - 1;
	}
	sort(a, a + m);
	int st = a[0].st, cand = 0;
	for (int i = 1; i < m; i++)
		if (a[i].st <= st) {
			if (a[i].ed > a[cand].ed)
				cand = i;
			cerr << i << ": if\n";
		}
		else {
			cerr << i << ": else\n";
			if (!mark[cand]) {
				mark[cand] = true;
				cnt++;
			}
			st = max(a[i].st, a[cand].ed + 1);
			i--;
		}
	if (!mark[cand]) {
		mark[cand] = true;
		cnt++;
	}
	cout << m - cnt << '\n';
	for (int i = 0; i < m; i++)
		if (!mark[i])
			cout << a[i].name + 1 << ' ';
	cout << '\n';
	return 0;
}
