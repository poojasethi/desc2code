#include<cstdio>
#include<vector>
#include<algorithm>
#define fo(i,a,b) for(int i=a;i<=b;++i)
using namespace std;
const int mn=2010000;
int n,m,la,j;
struct node{int x,y;}a[mn];
int h[mn],tt,sa[mn],s[mn];
bool del[mn];
vector<int>ans;
bool cmp(int i,int j){return a[i].x<a[j].x;}
bool cmpy(int i,int j){return a[i].y<a[j].y;}
int main()
{
    scanf("%d%d",&n,&m);
    fo(i,1,m)
    {
        int ai,li;
        scanf("%d%d",&ai,&li);
        a[i].x=ai,a[i].y=ai+li-1;
        ++s[a[i].x],--s[a[i].y+1];
    }
    fo(i,1,n)s[i]+=s[i-1];
    fo(i,1,m)sa[i]=i;
    sort(sa+1,sa+1+m,cmp);
    la=0,j=1;
    fo(i,1,n)
    {
        if(!s[i]||la>=i)continue;
        for(;j<=n&&a[sa[j]].x<=i;++j)
        {
            h[++tt]=sa[j];
            push_heap(h+1,h+1+tt,cmpy);
        }
        del[h[1]]=1,la=a[h[1]].y;
        pop_heap(h+1,h+1+tt,cmpy);
        --tt;
    }
    fo(i,1,m)if(!del[i])ans.push_back(i);
    printf("%d\n",ans.size());
    fo(i,1,ans.size())
    {
        printf("%d",ans[i-1]);
        if(i==ans.size())putchar('\n');
        else putchar(' ');
    }
    return 0;
}