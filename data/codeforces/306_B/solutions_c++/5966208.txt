#include <stdio.h>
#include <iostream>
#include <algorithm>
using namespace std;

#define long long long
#define f1(i,n) for (int i=1; i<=n; i++)
#define f0(i,n) for (int i=0; i<n; i++)

#define N 200005
int m, n, ll[N], rr[N], Index[N];
bool Useful[N];

bool cmp(int x, int y)
    { return ll[x]<ll[y]; }
bool maximize(int &a, int b)
    { if (a<b) a=b; else return false; return true; }

main(){
    scanf("%d%d", &m, &n);
    f1(i,n) scanf("%d%d", &ll[i], &rr[i]);
    f1(i,n) Index[i]=i, rr[i]+=ll[i]-1;
    sort(Index+1, Index+n+1, cmp);

    int pos=1, Accepted=1, Answer=n;
    while (pos<=n){
        int Current=Accepted-1, d=0;
        while (pos<=n && ll[Index[pos]]<=Accepted){
            if (maximize(Current, rr[Index[pos]])) 
            d=Index[pos];
            pos++;
        }
        if (d!=0){ Useful[d]=true, Answer--; }
        Accepted=max(Current+1, Accepted+1);
    }
    cout << Answer << endl;
    f1(i,n) if (!Useful[i]) printf("%d ", i); printf("\n");
}
