#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#define dakai(s) freopen(s".in","r",stdin),freopen(s".out","w",stdout);
#define N 2010
#define IN inline
#define RE register

using namespace std;
typedef long long llg;

bool w[N][N];
int zl[N][N],zr[N][N],n,m,T,tr,zhi[N];
int sumv[N<<2],ll[N<<2],rr[N<<2],a[N],b[N],L,R,ff[N];
int qua[N],qub[N];

IN void update(int u){
	int lc=u<<1,lv=u<<1|1,mid=ll[u]+rr[u]>>1;
	int la,lb,ra,rb; la=lb=ra=rb=0;
	sumv[u]=max(sumv[lc],sumv[lv]);
	for(int i=1;i<=n;i++) a[i]=zl[i][mid],b[i]=zr[i][mid];
	for(int i=n,now=n;i;i--){
		while(la!=ra && a[qua[ra-1]]>=a[i]) ra--;
		while(lb!=rb && b[qub[rb-1]]>=b[i]) rb--;
		qua[ra++]=qub[rb++]=i;
		while(now>i && a[qua[la]]+b[qub[lb]]<now-i+1){
			if(qua[la]==now) la++;
			if(qub[lb]==now) lb++;
			now--;
		}
		sumv[u]=max(sumv[u],min(a[qua[la]]+b[qub[lb]],now-i+1));
	}
}

void build(int u,int l,int r){
	int lc=u<<1,lv=u<<1|1,mid=l+r>>1;
	ll[u]=l;rr[u]=r;
	if(l!=r){
		build(lc,l,mid);
		build(lv,mid+1,r);
		for(int i=1,lx=mid-l+1,ly=r-mid;i<=n;i++){
			zl[i][mid]=min(zl[i][mid],lx);
			zr[i][mid]=min(zr[i][mid],ly);
		}
		update(u);
	}
	else sumv[u]=(bool)zhi[l],ff[l]=u;
}

int main(){
	//freopen("a.in","r",stdin);
	//freopen("a.out","w",stdout);
	scanf("%d%d%d",&n,&m,&T);
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			char c=getchar();
			while(c!='X' && c!='.') c=getchar();
			w[i][j]=c=='X';
			zl[i][j]=w[i][j]?0:zl[i][j-1]+1;
		}
		for(int j=m;j;j--) zr[i][j-1]=w[i][j]?0:zr[i][j]+1;
	}
	for(int i=1;i<=m;i++)
		for(int j=1;j<=n;j++)
			zhi[i]+=!w[j][i];
	build(1,1,m);int u;
	while(T--){
		scanf("%d%d",&L,&R);
		w[L][R]=1; u=ff[R];
		sumv[u]=(bool)--zhi[R]; u>>=1;
		while(u){
			int mid=ll[u]+rr[u]>>1;
			if(R<=mid) zl[L][mid]=min(mid-R,zl[L][mid]);
			else zr[L][mid]=min(R-mid-1,zr[L][mid]);
			update(u); u>>=1;
		}
		printf("%d\n",sumv[1]);
	}
}
