#include<bits/stdc++.h>

using namespace std;

int n,i,j,k,x,y,m,l;
int up[2005][2005],down[2005][2005];
int uprmq[2005][14],downrmq[2005][14];
int X[2005],Y[2005],q[2005];

char A[2005][2005];

int downquery(int i,int x,int y){
	int t=log2(y-x+1);
	return min(downrmq[x][t],downrmq[y-(1<<t)+1][t]);
}

int upquery(int i,int x,int y){
	int t=log2(y-x+1);
	return min(uprmq[x][t],uprmq[y-(1<<t)+1][t]);
}

int f(int x){
	
	int i,j,l;

	for(i=1 ; i<=m ; i++){
		uprmq[i][0]=up[x][i]-(A[x][i]=='.');
		downrmq[i][0]=down[x][i]-(A[x][i]=='.');
	}
	int logn=10;
	for(l=1 ; l<=logn ; l++)
		for(j=1 ; j<=m ; j++){
			uprmq[j][l]=min(uprmq[j][l-1],uprmq[min(m,j+(1<<(l-1)))][l-1]);
			downrmq[j][l]=min(downrmq[j][l-1],downrmq[min(m,j+(1<<(l-1)))][l-1]);
		}
	
	int tp=1,mx=0;

	for(j=1 ; j<=m ; j++){
		tp = max(tp, j);
		if(A[x][tp] == 'X') continue;
		while(tp <= m && downquery(x,j,tp)+upquery(x,j,tp)+1>=tp-j+1) tp++;
		mx=max(mx,tp-j);

	}

	return mx;
}

void update(int x,int y){

	int i,j;

	for(i=n ; i>=1 ; i--)
		down[i][y] = (A[i][y]=='.') * (down[i+1][y]+1);
	
	for(i=1 ; i<=n ; i++)
		up[i][y] = (A[i][y]=='.') * (up[i-1][y]+1);

}

int main(){

	cin>>n>>m>>k;

	for(i=1 ; i<=n ; i++)
		for(j=1 ; j<=m ; j++)
			scanf(" %c",&A[i][j]);

	for(i=1 ; i<=k ; i++){
		scanf("%d %d",&x,&y);
		X[i]=x;
		Y[i]=y;
		A[x][y]='X';
	}
	
	for(j=1 ; j<=m ; j++)
		for(i=n ; i>=1 ; i--)
			down[i][j] = (A[i][j]=='.') * (down[i+1][j]+1);

	for(j=1 ; j<=m ; j++)
		for(i=1 ; i<=n ; i++)
			up[i][j] = (A[i][j]=='.') * (up[i-1][j]+1);

	int logn=log2(m);

	int ans=0;

	for(i=1 ; i<=n ; i++)
		ans=max(ans,f(i));

	for(i=k ; i>=1 ; i--){
		q[i]=ans;
		if(i==1) break;
		A[X[i]][Y[i]]='.';
		update(X[i],Y[i]);
		ans=max(ans,f(X[i]));
	}

	for(i=1 ; i<=k ; i++)
		cout<<q[i]<<endl;

	return 0;
}
