#include <bits/stdc++.h>

using namespace std;

const int NSIZE = 2000 + 10;

int up[NSIZE][NSIZE] , p[NSIZE][NSIZE] , down[NSIZE][NSIZE];
string str;
int ans[NSIZE] , x[NSIZE] , y[NSIZE];
int i , j , crt , K , N , M;

bool check(int x,int crt)
{
    if (crt > min(N , M)) return false;

    deque < int > inDeque[2];
    int i;

    for (i = 1 ; i <= M ; ++i)
    {
        while (!inDeque[0].empty() && up[x][inDeque[0].back()] >= up[x][i])
        inDeque[0].pop_back();

        inDeque[0].push_back(i);

        if (inDeque[0].front() + crt <= i)
        inDeque[0].pop_front();


        while (!inDeque[1].empty () && down[x][inDeque[1].back ()] >= down[x][i])
        inDeque[1].pop_back ();

        inDeque[1].push_back(i);

        if (inDeque[1].front() + crt <= i)
        inDeque[1].pop_front();

        if (i >= crt && up[x][inDeque[0].front ()] + down[x][inDeque[1].front ()] - 1 >= crt)
        return true;
    }

    return false;
}

int main()
{

cin >> N >> M >> K;

for (i = 1 ; i <= N ; ++i)
{
    cin >> str;
    for (j = 0 ; j < str.size() ; ++j)
    p[i][j+1] = (str[j] == 'X');
}

for (i = 1 ; i <= K ; ++i)
{
    cin >> x[i] >> y[i];
    p[x[i]][y[i]] = 1;
}

for (i=1;i<=N;++i)
for (j=1;j<=M;++j)
{
    up[i][j] = p[i][j] ? 0 : up[i-1][j] + 1;
    down[N - i + 1][j] = p[N - i + 1][j] ? 0 : down[N - i + 2][j] + 1;
}

crt = 0;

for (i = 1 ; i <= N ; ++i)
while (check(i , crt + 1)) crt += 1;

for (i = K ; i ; --i)
{
    ans[i] = crt;

    p[x[i]][y[i]] = 0;

    for (j = 1 ; j <= N ; ++j)
    {
        up[j][y[i]] = p[j][y[i]] ? 0 : up[j-1][y[i]] + 1;
        down[N - j + 1][y[i]] = p[N - j + 1][y[i]] ? 0 : down[N - j + 2][y[i]] + 1;
    }

    while (check(x[i] , crt + 1))
    crt += 1;
}

for (i = 1 ; i <= K ; ++i)
cout << ans[i] << '\n';

return 0;
}
