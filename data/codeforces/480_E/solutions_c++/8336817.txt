#include<cstdio>
#include<algorithm>
#include<cstring>
#include<string>
#include<iostream>

using namespace std;

const int maxn = 2010;

int f1[maxn][maxn], f2[maxn][maxn], dp[maxn][maxn];
char s[maxn][maxn];
int x[maxn], y[maxn], l[maxn], r[maxn], ANS[maxn];
int N, M, K;

int findpa (int *pa, int x) { return pa[x] == x ? pa[x] : pa[x] = findpa (pa, pa[x]); }

int main ()
{
  //freopen ("CF480E.in", "r", stdin);
  //freopen ("CF480E.out", "w", stdout);
  cin >> N >> M >> K;
  for (int i=1; i<=N; i++) scanf ("%s", s[i]+1);
  for (int i=1; i<=K; i++) scanf ("%d%d", &x[i], &y[i]), s[x[i]][y[i]] = 'X';
  for (int i=1; i<=N; i++)
    {
      f1[i][0] = 0; f2[i][M+1] = M+1;
      f2[i][0] = 0; f2[i][M+1] = M+1;
      for (int j=1; j<=M; j++)
        {
          f1[i][j] = (s[i][j] == 'X' ? j : j-1);
          f2[i][j] = (s[i][j] == 'X' ? j : j+1);
        }
    }
  int ans = 0;
  for (int i=1; i<=N; i++)
    for (int j=1; j<=M; j++)
      if (s[i][j] == '.')
        dp[i][j] = min (dp[i-1][j-1], min (dp[i-1][j], dp[i][j-1]))+1,
          ans = max (ans, dp[i][j]);
  ANS[K] = ans;
  for (int k=K; k>1; k--)
    {
      f1[x[k]][y[k]] = y[k]-1;
      f2[x[k]][y[k]] = y[k]+1;
      for (int i=1; i<=N; i++)
        {
          l[i] = findpa (f1[i], y[k]);
          r[i] = findpa (f2[i], y[k]);
        }
      for (int i=x[k]-1; i>=1; i--)
        {
          l[i] = max (l[i], l[i+1]);
          r[i] = min (r[i], r[i+1]);
        }
      for (int i=x[k]+1; i<=N; i++)
        {
          l[i] = max (l[i], l[i-1]);
          r[i] = min (r[i], r[i-1]);
        }
      for (int i=x[k]; i<=N; i++)
        {
          if (i <= ans) continue;
          for (;;)
            {
              if (r[i]-l[i]-1 <= ans) break;
              int L, R;
              L = max (l[i], l[i-ans]);
              R = min (r[i], r[i-ans]);
              if (R-L-1 > ans) { ans++; continue; }
              break;
            }
        }
      ANS[k-1] = ans;
    }
  for (int i=1; i<=K; i++) printf ("%d\n", ANS[i]);
}
