#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 2010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int x,y;
} b[N],c[N];
int i,j,k,n,m,an,X,Y,K;
int x[N],y[N],a[N][N],L[N],R[N],ans[N],f1[N][N],f2[N][N];
char p[N][N];
int get1(int _,int x) {
	return f1[_][x]==x?x:f1[_][x]=get1(_,f1[_][x]);
}
int get2(int _,int x) {
	return f2[_][x]==x?x:f2[_][x]=get2(_,f2[_][x]);
}
inline void pre() {
	int i;
	For(i,1,n) R[i]=get1(i,Y),L[i]=get2(i,Y);
	int l=L[X]+1,r=R[X]-1;
	b[l-1]=(ww){X,X};
	For(i,l,Y) {
		b[i]=b[i-1];
		int A=b[i].x;
		for (;A>1&&L[A-1]<i;A--);
		b[i].x=A;
		A=b[i].y;
		for (;A<n&&L[A+1]<i;A++);
		b[i].y=A;
	}
	c[r+1]=(ww){X,X};
	for (i=r;i>=Y;i--) {
		c[i]=c[i+1];
		int A=c[i].x;
		for (;A>1&&R[A-1]>i;A--);
		c[i].x=A;
		A=c[i].y;
		for (;A<n&&R[A+1]>i;A++);
		c[i].y=A;
	}
}
inline bool ju(int re) {
	int l=L[X]+1,r=R[X]-1,i;
	For(i,Y,r) {
		int A=i-re+1;
		if (A<l||A>Y) continue;
		int l1=max(c[i].x,b[A].x),l2=min(c[i].y,b[A].y);
		if (l2-l1+1<re) continue;
		return 1;
	}
	return 0;
}
int main() {
	scanf("%d%d%d",&n,&m,&K);
	For(i,1,n) scanf("%s",p[i]+1);
	For(i,1,K) scanf("%d%d",&x[i],&y[i]),p[x[i]][y[i]]='X';
	For(i,1,n)For(j,0,m+1) f1[i][j]=f2[i][j]=j;
	For(i,1,n)For(j,1,m) if (p[i][j]=='.') {
		a[i][j]=min(a[i-1][j-1],min(a[i-1][j],a[i][j-1]))+1;
		an=max(an,a[i][j]);
		f1[i][j]=j+1;
		f2[i][j]=j-1;
	}
	for (i=K;i;i--) {
		ans[i]=an;
		X=x[i],Y=y[i];
		f1[X][Y]=Y+1;
		f2[X][Y]=Y-1;
		pre();
		for (;an<min(n,m)&&ju(an+1);an++);
	}
	For(i,1,K) printf("%d\n",ans[i]);
	return 0;
}
