def solve(a, b, n, k):
    nbatch = [bi/ai for ai, bi in zip(a, b)]
    limit = [i for i in range(n) if nbatch[i] == min(nbatch)]

    minbatch = min(nbatch)
    soln = minbatch

    b = [bi - ai*minbatch for ai, bi in zip(a,b)]
    
    flag = True
    for l in limit:
	need = a[l] - b[l] % a[l]
	if k >= need:
	    k -= need
	    b[l] += need
	else:
	    flag = False
#    print '----------'
#    print a
#    print b
#    print soln
    return a, b, k, soln, flag

    

n, k = map(int, raw_input().split(' '))
a = map(int, raw_input().split(' '))
b = map(int, raw_input().split(' '))

soln = 0
a, b, k, s, keepgoing = solve(a, b, n, k)
soln += s
while keepgoing:
    a, b, k, s, keepgoing = solve(a, b, n, k)
    soln += s

#print 'soln'
print soln