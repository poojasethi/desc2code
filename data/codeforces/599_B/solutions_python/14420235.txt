import collections
import sys

def main(mn, f, b):
    m = mn[0]
    n = mn[1]

    if set(b) - set(f):
        return ['Impossible']

    f_counter = collections.Counter(f)

    fi_to_idx = {}
    for i, fi in enumerate(f):
        if f_counter[fi] == 1:
            fi_to_idx[fi] = i

    ans = []
    for bi in b:
        if bi not in fi_to_idx:
            return ['Ambiguity']
        ans.append(fi_to_idx[bi])

    return ['Possible', ' '.join([str(ai + 1) for ai in ans])]

def test_me():
    assert main(
        [3, 3],
        [3, 2, 1],
        [1, 2, 3],
    ) == ['Possible', '3 2 1']
    assert main(
        [3, 3],
        [1, 1, 1],
        [1, 1, 1],
    ) == ['Ambiguity']
    assert main(
        [3, 3],
        [1, 2, 1],
        [3, 3, 3],
    ) == ['Impossible']
    assert main(
        [3, 4],
        [1, 2, 3, 5],
        [3, 2, 5],
    ) == ['Possible', '3 2 4']

if __name__ == '__main__':
    a = map(int, sys.stdin.readline().split())
    b = map(int, sys.stdin.readline().split())
    c = map(int, sys.stdin.readline().split())
    print '\n'.join(main(a, b, c))
