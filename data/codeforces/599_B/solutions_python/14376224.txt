n, m = [int(x) for x in raw_input().split()]
f = [int(x) for x in raw_input().split()]
b = [int(x) for x in raw_input().split()]
o = [-1 for i in range(len(f))]
fs = set(f)
bs = set(b)

from collections import defaultdict
dd = defaultdict(lambda: [])
ambigous = False
for i, v in enumerate(f):
	dd[v].append(i)
for i, v in enumerate(b):
	if len(dd[v]) > 1:
		ambigous = True
		break

if not bs.issubset(fs):
	print "Impossible"
elif ambigous:
	print "Ambiguity"
else:
	d = {}
	for i,v in enumerate(f):
		d[v] = i
	print "Possible"
	for v in b:
		print d[v]+1,
