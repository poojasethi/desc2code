#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>
using namespace std;

const int MaxN = 100000+10;
int a[MaxN];
int n;

vector<pair<int,int> > q[MaxN];
int cnt[MaxN];
struct TT{
	int c[MaxN];
	void init(){
		memset(c,0,sizeof(c));
	}
	int lowbit(int x){
		return x & -x;
	}
	void add(int x,int val){
		for (; x < MaxN; x += lowbit(x))
			c[x] += val;
	}
	void add(int a,int b,int val){
		if(a > b)
			return ;
		add(a,val);
		add(b+1,-val);
	}
	int sum(int x){
		int ret = 0;
		for (; x; x -= lowbit(x))
			ret += c[x];
		return ret;
	}
}T1,T2;


int ll[MaxN],lt[MaxN],d[MaxN],P[MaxN];

int main(){
	// freopen("D.in","r",stdin);
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%d",&a[i]);
	T1.init();
	T2.init();
	memset(ll,0,sizeof(ll));
	for(int i=1;i<=n;i++)
		lt[i] = ll[a[i]],ll[a[i]] = i;
	for(int i=1;i<=n;i++){
		d[i] = i-lt[i];
		if(lt[i]==0) 
			P[i] = 0;
		else 
			if(d[lt[i]] == i-lt[i])
				P[i] = P[lt[i]];
			else
			P[i] = lt[i] - d[lt[i]];
	}

	int Q; scanf("%d",&Q);
	for(int i=0;i<Q;i++){
		int qx,qy;
		scanf("%d%d",&qx,&qy);
		q[qy].push_back(make_pair(qx,i));
	}

	for(int i=1;i<=n;i++){
		T1.add(lt[i]+1,i,1);
		for(int j=0;j<q[i].size();j++)	{
			pair<int,int> it = q[i][j];
			cnt[it.second] = T1.sum(it.first);
		}
	}

	for(int i=1;i<=n;i++){
		if(lt[i]!=0)
			T2.add(P[lt[i]]+1,lt[i],-1);
		T2.add(P[i]+1,i,1);
		for(int j=0;j<q[i].size();j++) {
			pair<int,int> it = q[i][j];
			int t = T2.sum(it.first);
			cnt[it.second] += t>0?0:1;
		}
	}

	for(int i=0;i<Q;i++) printf("%d\n",cnt[i]);
	return 0;
}