#include<cstdio>
#include<algorithm>
using namespace std;
const int N = 105000;
const int T = 131072;
const int M = 270000;
int n,m;
int array[N];
int last[N];
int wei[N],start[N];
int tot[M];
int whole[M];
struct que
{
	int l,r;
	int point;
}xu[N];
int out[N];
int cmp(struct que x,struct que y)
{
	return (x.r<y.r);
}
void insert(int x[],int y)
{
	y+=T;
	while(y)
	{
		x[y]++;
		y>>=1;
	}
}
void del(int x[],int y)
{
	y+=T;
	while(y)
	{
		x[y]--;
		y>>=1;
	}
}
int findhz(int x[],int y)
{
	int res=0;
	y+=T-1;
	while(y)
	{
		if(!(y&1))
		    res+=x[y^1];
		y>>=1;
	}
	return res;
}
void add(int x)
{
	insert(tot,x);
	if(last[x])
	    del(tot,last[x]);
	if(last[x])
	{
		if(!last[last[x]])
		{
			insert(whole,x);
			del(whole,last[x]);
		}
		else
		{
			if(last[x]-last[last[x]]==x-last[x])
			{
				start[x]=start[last[x]];
				insert(whole,x);
				del(whole,last[x]);
			}
			else
			{
				del(whole,last[x]);
				insert(whole,start[last[x]]);
				insert(whole,x);
				start[x]=last[last[x]];
				del(whole,start[x]);
			}
		}
	}
	else
	    insert(whole,x);
}
int main()
{
	int i,j;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	    scanf("%d",&array[i]);
	for(i=1;i<=n;i++)
	{
		last[i]=wei[array[i]];
		wei[array[i]]=i;
	}
	scanf("%d",&m);
	for(i=1;i<=m;i++)
	{
		scanf("%d%d",&xu[i].l,&xu[i].r);
		xu[i].point=i;
	}
	sort(xu+1,xu+m+1,cmp);
	int now=0;
	for(i=1;i<=m;i++)
	{
		while(now<xu[i].r)
		{
			now++;
			add(now);
		}
		out[xu[i].point]=findhz(tot,xu[i].l);
		if(!findhz(whole,xu[i].l))
		    out[xu[i].point]++;
	}
	for(i=1;i<=m;i++)
	    printf("%d\n",out[i]);
	return 0;
}
