#include <cstdio>
#include <cmath>
#include <algorithm>
using namespace std;
const int N=100004;
struct query {int num,l,ln,r;} q[N];
int n,p,tot,m,a[N],next[N],pre[N],fa[N],ans[N];
int type,cnt,c[N],first[N],last[N];
bool b[N];
bool operator <(query a,query b) {return (a.ln<b.ln)||((a.ln==b.ln)&&(a.r<b.r));}
void push(int x,int t)
{
	if (!first[a[x]])
	{
		first[a[x]]=last[a[x]]=x;
		c[a[x]]=1; type++;
		b[a[x]]=true; cnt++;
		return;
	}
	if (!t) first[a[x]]=x; else last[a[x]]=x;
	c[a[x]]++; cnt-=b[a[x]]; b[a[x]]=false;
	if (fa[last[a[x]]]<=first[a[x]]) b[a[x]]=true,cnt++;
}
void del(int x)
{
	if (c[a[x]]==1)
	{
		c[a[x]]--; type--;
		b[a[x]]=false; cnt--;
		first[a[x]]=last[a[x]]=0;
		return;
	}
	first[a[x]]=next[x]; c[a[x]]--;
	cnt-=b[a[x]]; b[a[x]]=false;
	if (fa[last[a[x]]]<=first[a[x]]) b[a[x]]=true,cnt++;
}
int main()
{
	int i,j; scanf("%d",&n);
	p=floor(sqrt(n)); tot=(n-1)/p+1;
	for (i=1;i<=100000;i++) last[i]=0;
	for (i=1;i<=n;i++)
	{
		scanf("%d",&a[i]);
		int tmp=last[a[i]];
		pre[i]=tmp; next[tmp]=i; next[i]=0;
		if (!tmp) fa[i]=0;
		else
		{
			if ((!pre[tmp])||(i-tmp!=tmp-pre[tmp])) fa[i]=tmp;
			else fa[i]=fa[tmp];
		}
		last[a[i]]=i;
	}
	scanf("%d",&m);
	for (i=1;i<=m;i++)
	{
		scanf("%d%d",&q[i].l,&q[i].r);
		q[i].num=i; q[i].ln=(q[i].l-1)/p+1;
	}
	sort(q+1,q+m+1);
	int k=1;
	for (i=1;i<=tot;i++)
	{
		if (q[k].ln!=i) continue;
		for (j=1;j<=100000;j++) c[j]=first[j]=last[j]=0,b[j]=false;
		int x=p*(i-1)+1,y=x-1;
		type=cnt=0;
		while ((k<=m)&&(q[k].ln==i))
		{
			while (y<q[k].r) push(++y,1);
			while (x<q[k].l) del(x++);
			while (x>q[k].l) push(--x,0);
			ans[q[k].num]=type+(cnt==0);
			k++;
		}
		if (k>m) break;
	}
	for (i=1;i<=m;i++) printf("%d\n",ans[i]);
	return 0;
}