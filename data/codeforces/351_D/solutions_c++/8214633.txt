#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 100010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int x,y,id;
} q[N];
int i,j,k,n,m;
int a[N],pre[N],f[N],tr[2][N],an[N],b[N];
inline bool cc1(const ww &a,const ww &b) {
	return a.y<b.y;
}
inline void inc(int x,int y,int z) {
	if (!z) x=n-x+1;
	for (;x<=n;x+=x&-x) tr[z][x]+=y;
}
inline int cal(int x,int y) {
	if (!y) x=n-x+1;
	int an=0;
	for (;x;x-=x&-x) an+=tr[y][x];
	return an;
}
int main() {
	scanf("%d",&n);
	For(i,1,n) {
		scanf("%d",&a[i]);
		pre[i]=f[a[i]];
		f[a[i]]=i;
	}
	scanf("%d",&m);
	For(i,1,m) scanf("%d%d",&q[i].x,&q[i].y),q[i].id=i;
	sort(q+1,q+m+1,cc1);
	j=1;
	For(i,1,m) {
		for (;j<=n&&j<=q[i].y;j++) {
			if (pre[j]) inc(pre[j],-1,0);
			inc(j,1,0);
			
			inc(pre[j]+1,1,1);
			inc(j+1,-1,1);
			if (pre[j]) {
				k=pre[j];
				if (!pre[k]||k-pre[k]==j-k);
				else {
					int len=k-pre[k];
					k=pre[k];
					for (;k;) {
						int A=pre[k];
						inc(A+1,-1,1);
						inc(k+1,1,1);
						if (!A||k-A!=len) break;
						k=A;
					}
				}
			}
		}
		an[q[i].id]=cal(q[i].x,0)+(!cal(q[i].x,1));
	}
	For(i,1,m) printf("%d\n",an[i]);
	return 0;
}
