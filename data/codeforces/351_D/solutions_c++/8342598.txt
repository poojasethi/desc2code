







#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<cstdlib>
using namespace std;
int n,a[100010],Q,pre[100010],fl[100010],pos[100010];
struct Query{int l,r,id;}q[100010];
int t[100010];
int numA[100010],numB[100010];

void add(int x,int y){for(x;x<=n+1;x+=x&-x)t[x]+=y;}
int ask(int x){int re=0;for(x;x;x-=x&-x)re+=t[x];return re;}
void ADD(int x,int y,int z){add(x,z),add(y+1,-z);}
int ASK(int x){return ask(x);}
bool cmp(Query A,Query B){return A.r<B.r;}

int main()
{
    int i,j,k;
    cin>>n;
    for(i=1;i<=n;i++)
    {   
        scanf("%d",&a[i]),pre[i]=pos[a[i]],pos[a[i]]=i;
        if(pre[i]==0||pre[pre[i]]==0)fl[i]=1;
        else if(i-pre[i]==pre[i]-pre[pre[i]])fl[i]=fl[pre[i]];
        else fl[i]=pre[pre[i]]+1;
    }   
    cin>>Q;for(i=1;i<=Q;i++)scanf("%d%d",&q[i].l,&q[i].r),q[i].id=i;
    sort(q+1,q+Q+1,cmp);
    for(i=1;i<=Q;i++)
    {   
        for(j=q[i-1].r+1;j<=q[i].r;j++)
            ADD(pre[j]+1,j,1);
        numA[q[i].id]=ASK(q[i].l);
    }   
    memset(t,0,sizeof(t));
    for(i=1;i<=Q;i++)
    {   
        for(j=q[i-1].r+1;j<=q[i].r;j++)
        {   
            ADD(pre[j]+1,j,1);
            if(pre[j]&&fl[j]!=fl[pre[j]])ADD(fl[pre[j]],fl[j]-1,-1);
        }   
        numB[q[i].id]=ASK(q[i].l);
    }   
    for(i=1;i<=Q;i++)
    {   
        if(numB[i])printf("%d\n",numA[i]);
        else printf("%d\n",numA[i]+1);
    }   
    return 0;
}
