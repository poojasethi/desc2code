#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int N=(int)1e5+5,M=N,Q=N;
int n,q,b[N],ans[Q],las[M],pre[N],A[N],B[N];
struct qry{
	int l,r,num;
	friend bool operator < (const qry &a,const qry &b){
		return a.r<b.r;
	}
} seq[Q],*ord[Q];

void inc(int *t,int x,int d){
	for(;x;x-=x&-x) t[x]+=d;
}
int query(int *t,int x){
	int s=0;
	for(;x<=n;x+=x&-x) s+=t[x];
	return s;
}

int main(){
	scanf("%d",&n);
	for(int i=1;i<=n;i++){
		scanf("%d",&b[i]);
		pre[i]=las[b[i]];
		las[b[i]]=i;
	}
	scanf("%d",&q);
	for(int i=0;i<q;i++) scanf("%d%d",&seq[i].l,&seq[i].r),seq[i].num=i;
	sort(seq,seq+q);
	memset(las,0,sizeof(las));
	for(int j=0,i=1;j<q;j++){
		for(;i<=seq[j].r;i++){
			inc(A,pre[i],-1);
			inc(A,i,1);
			if(pre[pre[i]]&&pre[i]-pre[pre[i]]!=i-pre[i]){
				inc(B,las[b[i]],-1);
				inc(B,las[b[i]]=pre[pre[i]],1);
			}
		}
		int x=query(A,seq[j].l),y=query(B,seq[j].l);
		ans[seq[j].num]=x+(x==y);
	}
	for(int i=0;i<q;i++) printf("%d\n",ans[i]);
}
