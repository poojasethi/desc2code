#include <cstdio>
#include <cstring>
#include <algorithm>
#define maxn 100005

struct query
{
	int l,r,p;
	bool operator <(const query&B) const {return r<B.r;}
} q[maxn];
int N,M,a[maxn],b[maxn],p[maxn],A[maxn],B[maxn],ans[maxn];

void init()
{
	scanf("%d",&N);
	for (int i=1; i<=N; i++) scanf("%d",&a[i]),p[i]=b[a[i]],b[a[i]]=i;
	scanf("%d",&M);
	for (int i=1; i<=M; i++) scanf("%d%d",&q[i].l,&q[i].r),q[i].p=i;
	std::sort(q+1,q+M+1);
}

void ins(int*a,int p,int d) {for (;p<=N; p+=p&-p) a[p]+=d;}
int sum(int*a,int p) {int d=0; for (;p; p-=p&-p) d+=a[p]; return d;}

void doit()
{
	memset(b,0,sizeof(b));
	for (int i=1,j=1,s1,s2; i<=N; i++)
	{
		ins(A,p[i]+1,1),ins(A,i+1,-1);
		if (p[p[i]]&&i-p[i]!=p[i]-p[p[i]]) ins(B,b[a[i]]+1,1),ins(B,(b[a[i]]=p[p[i]])+1,-1);
		for (;j<=M&&q[j].r<i; j++);
		for (;j<=M&&q[j].r==i; j++) s1=sum(A,q[j].l),s2=sum(B,q[j].l),ans[q[j].p]=s1+(s1==s2);
	}
	for (int i=1; i<=M; i++) printf("%d\n",ans[i]);
}

int main()
{
	init();
	doit();
	return 0;
}
