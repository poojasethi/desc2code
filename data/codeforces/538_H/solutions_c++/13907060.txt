#include <set>
#include <map>
#include <cmath>
#include <ctime>
#include <cctype>
#include <cstdio>
#include <vector>
#include <cassert>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#define fi first
#define se second
#define mk make_pair
#define pb push_back
#define For(i,a,n)  for(int i=(a);i<=(int)n;i++)
#define Forn(i,a,n) for(int i=(a);i>=(int)n;i--)
using namespace std;
typedef long long ll;
typedef long double db;
const int N=100005;

inline int IN(){
	char ch=getchar(); int f=1,x=0;
	while((ch<'0'||ch>'9')&&(ch!='-')) ch=getchar();
	if(ch=='-') f=-1,ch=getchar();
	while(ch>='0'&&ch<='9') x=(x<<1)+(x<<3)+ch-'0',ch=getchar();
	return x*f;
}

int res[N];
int tL,tR,n,m,L[N],R[N],Id[N],fa[N],fL[N],fR[N];
vector<int> e[N];

void fail(){
	puts("IMPOSSIBLE");
	exit(0);
}

void Put(int x,int y){
	if(res[x]==y) return;
	if(res[x]==(y^1)) fail();
	res[x]=y;
	For(i,0,e[x].size()-1){
		int v=e[x][i];
		Put(v,y^1);
	}
}

int main(){
	tL=IN(),tR=IN(),n=IN(),m=IN();
	int ll=-1e9,rr=1e9;
	For(i,1,n) L[i]=IN(),R[i]=IN(),Id[i]=i,rr=min(rr,R[i]),ll=max(ll,L[i]);
	if(ll+rr<tL) ll=tL-rr;
	if(ll+rr>tR) rr=tR-ll;
	if(ll<0 || rr<0) fail();
	For(i,1,m){
		int x=IN(),y=IN();
		e[x].pb(y);
		e[y].pb(x);
	}
	
	memset(res,-1,sizeof res);
	For(i,1,n){
		int CNT=0;
		if(!(L[i]<=ll && ll<=R[i])) Put(i,0),++CNT;
		if(!(L[i]<=rr && rr<=R[i])) Put(i,1),++CNT;
		if(CNT==2) fail();
	}
	
	For(i,1,n) if(res[i]==-1) Put(i,0);
	For(i,1,n){
		For(j,0,e[i].size()-1){
			int v=e[i][j];
			if(res[i]==res[v]) fail();
		}
	}
	puts("POSSIBLE");
	printf("%d %d\n",rr,ll);
	For(i,1,n) printf("%d",++res[i]);
	return 0;
}
