#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;
typedef __int64 LL;
	
const int N=501;
int n,m,mod;
char str[N][N];
LL dp[N][N],c[N][N];
int dfs(int x,int y,int z){
	if(x==n) return 1;
	if(dp[x][y]!=-1) return dp[x][y];
	LL ans=0;
	if(z>=2) ans=(ans+c[z][2]*dfs(x+1,y,z-2))%mod;
	if(y>=1&&z>=1) ans=(ans+(LL)y*z*dfs(x+1,y-1,z))%mod;
	if(y>=2) ans=(ans+c[y][2]*dfs(x+1,y-2,z+2))%mod;
	dp[x][y]=ans;
	return ans;
}	
int main(){
	int i,j,k,t,s,x,y,z;
	scanf("%d%d%d",&n,&m,&mod);
	memset(dp,-1,sizeof dp);
	for(c[0][0]=i=1;i<N;i++)
		for(c[i][0]=j=1;j<=i;j++) c[i][j]=(c[i-1][j-1]+c[i-1][j])%mod;
	for(i=x=y=0;i<m;i++) scanf("%s",str[i]);
	for(j=0;j<n;j++){
		for(i=t=0;i<m;i++) if(str[i][j]=='1') t++;
		if(t==2) x++;
		if(t==1) y++;
	}
	printf("%d\n",dfs(m,n-x-y,y));
	return 0;
}	