#include <bits/stdc++.h>
using namespace std;
typedef long long LL;

LL memo[1005][1005],MOD;

LL dp(LL ki, LL kj){
    if(ki==0 && kj==0) return 1;
    if(ki<0 || kj<0) return 0;
    if(memo[ki][kj]!=-1) return memo[ki][kj];
    LL k1,k2,k3;
    k1 = (dp(ki-2,kj)*((ki*(ki-1))/2))%MOD;
    k2 = (dp(ki,kj-1)*(ki*kj))%MOD;
    k3 = (dp(ki+2,kj-2)*((kj*(kj-1))/2))%MOD;
    return memo[ki][kj] = (k1+k2+k3)%MOD;
}

int main(){
    memset(memo,-1,sizeof(memo));
    LL n,m,arr[505]={},cn1=0,cn0=0;
    scanf("%I64d %I64d %I64d%*c",&m,&n,&MOD);
    for(long i=0; i<n; i++){
        for(long j=0; j<m; j++)
            arr[j] += (getchar()=='1');
        getchar();
    }
    for(long i=0; i<m; i++){
        cn0 += (arr[i]==0);
        cn1 += (arr[i]==1);
    }
    printf("%I64d\n",dp(cn1,cn0));
    return 0;
}

		  		  	 			    	 	 			 			 	