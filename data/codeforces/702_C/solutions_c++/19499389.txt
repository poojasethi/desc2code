#include <iostream>
#include <algorithm>
#include <cmath>

using namespace std;

int n, m, res, d, l, h, pos;
int C[100010], T[100010];

int main() {
	cin >> n >> m;
	for (int i = 0; i < n; ++i)	cin >> C[i];
	for (int i = 0; i < m; ++i)	cin >> T[i];
	res = -1;
	for (int i = 0; i < n; ++i) {
		pos = lower_bound(T, T + m, C[i]) - T;
		if (pos == m)					l = h = pos - 1;
		else if (T[pos] != C[i] && pos)	l = pos - 1, h = pos;
		else							l = h = pos;
		d = min(abs(C[i]-T[l]), abs(C[i]-T[h]));
		res = max(res, d);
	}
	cout << res << endl;
	return 0;
}
