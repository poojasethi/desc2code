#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <cstring>
#include <climits>
#include <string>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <set>
#include <map>
#include <list>
#include <queue>
#include <stack>

#include <ctime>

#define add(a, b) ((a) = ((a)+(b))%Mod)

using namespace std;

typedef long long LL;
const int MaxS = 209;
const int Mod = 10007;
const int MaxM = MaxS<<1;

int n;
char str[MaxS];
int s;

int dp[MaxS][MaxS][MaxS];

int sum[MaxS];

int g[MaxS*2][MaxS*2];
int _g[MaxS*2][MaxS*2];

int size, ans;

void Init()
{
	scanf("%s%d", str+1, &n);
	s = strlen(str+1);
}

void Dp()
{
	dp[0][s+1][0] = 1;
	for(int i = 0; i <= s; ++i)
		for(int j = s+1; j >= i+2; --j)
			for(int t = 0; t < s; ++t)
				if(str[i+1] == str[j-1])
					add(dp[i+1][j-1][t], dp[i][j][t]);
				else 
					add(dp[i+1][j][t+1], dp[i][j][t]),
					add(dp[i][j-1][t+1], dp[i][j][t]);
}

void Copy(int a[][MaxS*2], int b[][MaxS*2])
{
	for(int i = 1; i <= size; ++i)
		for(int j = 1; j <= size; ++j)
			a[i][j] = b[i][j];	
}

void Mult(int a[][MaxS*2], int b[][MaxS*2])
{
	int c[MaxS*2][MaxS*2] = {{0}};
	for(int i = 1; i <= size; ++i)
		for(int j = 1; j <= size; ++j)
		{
			LL sum = 0;
			for(int k = i; k <= j; ++k)
				sum += a[i][k]*b[k][j];
			c[i][j] = sum%Mod;
		}
	Copy(a, c);
}

void PowerMod(int a[][MaxS*2], int b)
{
	int c[MaxS*2][MaxS*2] = {{0}};
	for(int i = 1; i <= size; ++i) c[i][i] = 1;
	while(b)
	{
		if(b&1) Mult(c, a);
		Mult(a, a);
		b >>= 1;
	}
	Copy(a, c);
}

void Solve()
{
	Dp();
	for(int i = 1; i <= s; ++i)
		for(int j = i+1; j >= i; --j)
			for(int t = 0; t < s; ++t)
				add(sum[t], dp[i][j][t]);
	int red = s-1, green = (s+1)/2, blue = green;
	size = red+green+blue;
	for(int i = 1; i <= red; ++i) g[i][i] = 24;
	for(int i = red+1; i <= red+green; ++i) g[i][i] = 25;
	for(int i = red+green+1; i <= size; ++i) g[i][i] = 26;
	for(int i = 1; i < red+green; ++i) g[i][i+1] = 1;
	for(int i = red+1; i <= red+green; ++i) g[i][i+green] = 1;
	for(int i = 1; i <= size; ++i)
		for(int j = 1; j <= size; ++j)
			_g[i][j] = g[i][j];
	PowerMod(g, (n+s+1)/2-1);
	Mult(_g, g);
	for(int i = 0; i < s; ++i)
		add(ans, sum[i]*_g[s-i][s+(s-i+1)/2-1+green]);
	if((n+s)&1)
		for(int i = 0; i < s; ++i)
			if((s-i)%2 == 0)	
				add(ans, -sum[i]*g[s-i][s+(s-i+1)/2-1]%Mod+Mod);
	printf("%d\n", ans);
}

int main()
{
	//freopen("build.in", "r", stdin);
	//freopen("build.out", "w", stdout);
	
	Init();
	Solve();
	
	//fclose(stdin);
	//fclose(stdout);
	return 0;
}

