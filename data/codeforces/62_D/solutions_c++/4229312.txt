#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <cstring>
#include <cstdio>
#include <vector>
#include <string>
#include <queue>
#include <deque>
#include <cmath>
#include <set>
#define ll long long
using namespace std;
const int INF = 1000000007;
const int MAXM = 2001;
const int MAXN = 101;
int adj[MAXN][MAXN], d[MAXN];
int a[MAXM], ans[MAXM], n, m;
bool check;
void dfs(int l, int v, bool c)
{
	if (l > m)
	{
		if (!c)
			return;
		if (v != a[0])
			return;
		for (int i = 0; i <= m; i++)
			cout << ans[i] << " ";
		exit(0);
	}
	int y = 1;
	if (!c)
		y = a[l];
	for(int i = y; i <= n; i++)
	{
		if (!adj[v][i])
			continue;
		adj[v][i]--;
		adj[i][v]--;
		ans[l] = i;
		bool bc = c;
		if (i > a[l])
			c = true;
		dfs(l + 1, i, c);
		c = bc;
		adj[v][i]++;
		adj[i][v]++;
	}
}
int main()
{
	ios::sync_with_stdio(false);
	cin >> n >> m;
	for(int i = 0; i <= m; i++)
		cin >> a[i];
	for(int i = 1; i <= m; i++)
	{
		int u = a[i], v = a[i - 1];
		d[u]++;
		d[v]++;
		adj[u][v]++;
		adj[v][u]++;
	}
	ans[0] = a[0];
	dfs(1, a[0], 0);
	cout << "No solution";
	return 0;
}
	 		  	 		   			 		       	