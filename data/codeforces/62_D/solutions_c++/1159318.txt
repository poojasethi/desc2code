#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
int n,m;
int a[2005];
int stack[4005];
int vis[105][105];
int g[105][105];
bool dfs(int u,int t,int pos)
{
	int tt=t;
	if(u>a[pos]) tt=1;
	stack[pos]=u;
	if(pos==m)
	{
		if(t) return true;
		else return false;
	}
	int flag[105]={};
	for(int j=1;j<=g[u][0];j++)
	{
		int v=10000;
		for(int i=1;i<=g[u][0];i++)
		{
			if(vis[u][g[u][i]]||vis[g[u][i]][u]||flag[g[u][i]]) continue;
			if(tt) 
			v=min(v,g[u][i]);
			else
			{
				if(g[u][i]>=a[pos+1])
				v=min(v,g[u][i]);
			}
		}
		if(v==10000) continue;
		vis[u][v]=1;
		vis[v][u]=1;
		if(dfs(v,tt,pos+1))
		return true;
		vis[u][v]=0;
		vis[v][u]=0;
		flag[v]=1;
	}
	return false;
}
int main()
{
	while(~scanf("%d%d",&n,&m))
	{
		memset(vis,0,sizeof(vis));
		memset(g,0,sizeof(g));
		for(int i=0;i<=m;i++)
		scanf("%d",&a[i]);
		for(int i=0;i<m;i++)
		{
			g[a[i]][++g[a[i]][0]]=a[i+1];
			g[a[i+1]][++g[a[i+1]][0]]=a[i];
		}
		if(dfs(a[0],0,0))
		{
			for(int i=0;i<=m;i++)
			printf("%d ",stack[i]);
			printf("\n");
		}
		else
		printf("No solution\n");
	}
	return 0;
}
	 		  	 			  					 		 				