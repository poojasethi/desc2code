#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)(v).size())

#define MAX 105
#define M 2005
li n,m;
li p[M];
li ans[M];
bool used[M];
int E[MAX][MAX];
bool dfs(li pos,li cnt,bool flag){
	ans[cnt]=pos;
	if(cnt==m) return (flag && pos==p[0]);
	for(int i=((flag)?0:p[cnt+1]);i<n;i++)if(E[pos][i] && !used[E[pos][i]]){
		used[E[pos][i]]=1;
		if(dfs(i,cnt+1,flag | (i!=p[cnt+1]))) return 1;
		used[E[pos][i]]=0;
	}
	return 0;
}

int main(){
	rep(i,M) used[i]=false;
	rep(i,MAX)rep(j,MAX) E[i][j]=0;
	cin>>n>>m;
	rep(i,m+1){
		cin>>p[i]; p[i]--;
		if(i){
			E[p[i]][p[i-1]]=i;
			E[p[i-1]][p[i]]=i;
		}
	}
	if(dfs(p[0],0,0)){ rep(i,m+1) cout<<ans[i]+1<<" "; cout<<endl; }
	else cout<<"No solution"<<endl;
}
