#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>

using namespace std;

int map[105][105];
int ans[2005],s[2005];
int n,m;

bool dfs(int u,int num,bool flag)
{
    int i;
    ans[num] = u;
    if(num == m) return flag;
    for(i=flag?1:s[num+1];i<=n;i++)
    {
        if(map[u][i])
        {
            map[u][i]--;
            map[i][u]--;
            if(dfs(i,num+1,flag||i!=s[num+1]))
            return true;
            map[u][i]++;
            map[i][u]++;
        }
    }
    return false;
}

int main()
{
    int i;
    while(~scanf("%d%d",&n,&m))
    {
        memset(map,0,sizeof(map));
        scanf("%d",&s[0]);
        for(i=1;i<=m;i++)
        {
            scanf("%d",&s[i]);
            map[s[i]][s[i-1]]++;
            map[s[i-1]][s[i]]++;
        }
        if(dfs(s[0],0,false))
        {
            for(i=0;i<=m;i++)
            cout << ans[i] << " ";
            cout << endl;
        }
        else
        cout << "No solution" << endl;
    }
    return 0;
}
