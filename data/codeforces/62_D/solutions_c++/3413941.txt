#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define maxn 105
#define maxm 4005
int n,m,s,path[maxm],ans[maxm];
int map[maxn][maxn];
int sign;
void dfs(int now,int cnt,int pre)
{
  int i;
  ans[cnt]=now;
  if(cnt>m) return;
  if(cnt==m&&path[0]==ans[0]&&ans[0]==ans[m]&&pre)
  {
      sign=1;
      //puts("test:");
      //for(i=0;i<=m;i++)
      //printf("%d ",ans[i]);
      //printf("\n");
      return ;
  }
  for(i=1;i<=n;++i)
  if(map[now][i])
  {
      //if(i==3&&cnt==0) cout<<"OK"<<endl;
      if(pre==0&&i<path[cnt+1]) continue;
      if(i>path[cnt+1]) pre=1;
      map[now][i]--;
      map[i][now]--;
      dfs(i,cnt+1,pre);
      if(sign) return;
      map[now][i]++;
      map[i][now]++;
  }
}
int main()
{
    int i;
    while(~scanf("%d%d",&n,&m))
    {
        memset(map,0,sizeof(map));
        scanf("%d",&path[0]);
        sign=0;
        for(i=1;i<=m;i++)
        {
            scanf("%d",&path[i]);
            map[path[i-1]][path[i]]++;
            map[path[i]][path[i-1]]++;
        }
        dfs(path[0],0,0);
        if(sign>0)
        {
            for(i=0;i<=m;i++)
            printf("%d ",ans[i]);
            printf("\n");
        }
        else puts("No solution");
    }
    return 0;
}
