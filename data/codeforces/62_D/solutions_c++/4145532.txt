#include <cstdio>
#include <cstdlib>
#include <algorithm>
using namespace std;

const int MAXN = 105;

int map[MAXN][MAXN], dgr[MAXN];
int st, last, a[3000], b[3000], n, m, cnt = 0;

void dfs(int dep, int x, int flag) {
	if (dep > m + 1) {
		if (!flag)
			return;
		if (x != st)
			return;
		for(int i = 1; i <= m + 1; i++)
			printf("%d%c", b[i], i == m + 1 ? '\n' : ' ');
		exit(0);
	}
	
	//if (++cnt > 1000000) {
	//	printf("No solution\n");
	//	exit(0);
	//}
	//int cc = 0;
//	for(int i = 1; i <= n; i++)
	//	cc += dgr[i];
	//if (!(cc == 0 || cc == 2))
	//	return ;
		
	int mk = 0;
	if (!flag)
		mk = a[dep];
	else
		mk = 1;
	for(int i = mk; i <= n; i++) {
		if (map[x][i] == 0)
			continue;
		map[x][i]--;
		map[i][x]--;
		dgr[x] ^= 1;
		dgr[i] ^= 1;
		b[dep] = i;
		dfs(dep + 1, i, flag || (i > a[dep]));
		dgr[x] ^= 1;
		dgr[i] ^= 1;
		map[x][i]++;
		map[i][x]++;
	}
}

int main() {

	scanf("%d %d", &n, &m);
	for(int i = 1; i <= m + 1; i++) {
		scanf("%d", &a[i]);
	}
	st = a[1];
	cnt = 0;
	for(int i = 2; i <= m + 1; i++) {
		dgr[a[i]] ^= 1;
		dgr[a[i - 1]] ^= 1;
		map[a[i]][a[i - 1]]++;
		map[a[i - 1]][a[i]]++;
	}
	b[1] = st;
	dfs(2, a[1], 0);
	printf("No solution\n");
	return 0;
}

	   		 							 				   	  	