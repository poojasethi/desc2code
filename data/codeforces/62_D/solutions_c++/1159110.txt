#include <iostream>
#include <stdio.h>
#include <string.h>
#include <algorithm>
using namespace std;
struct queue
{
	int len;
	int s[2010];
	void push(int x)
	{
		s[len++]=x;
	}
	void clear(){len=0;}
};
int n,m;
int way[2010];
int path[110][110];
int ans[2010];
bool over;
int st;
queue mp[110];
bool same()
{
	for (int i=1;i<=m+1;i++) if (ans[i]!=way[i]) return false;
	return true;
}
void run(int d,int x,bool bg)
{
	if(over) return;
	if (d>m+1)
	{
		if (bg&&x==st) 
		{
			over=true;	
		}
		return;
	}
	for (int i=0;i<mp[x].len;i++)
	{
		if (over) return;
		if (mp[x].s[i]>=(bg?1:way[d]))
		{
		if (path[x][mp[x].s[i]])
		{
			path[x][mp[x].s[i]]=path[mp[x].s[i]][x]=0;
			ans[d]=mp[x].s[i];
			run(d+1,mp[x].s[i],bg||(ans[d]!=way[d]));
			path[x][mp[x].s[i]]=path[mp[x].s[i]][x]=1;
		}
		}
	}
}
int main(int argc, char *argv[])
{
//	freopen("1.in","r",stdin);
//	freopen("1.out","w",stdout);
	while(scanf("%d%d",&n,&m)!=EOF)
	{
		memset(path,0,sizeof(path));
		for (int i=1;i<=n;i++) mp[i].clear();
		for (int i=1;i<=m+1;i++)
		{
			scanf("%d",&way[i]);
			if (i!=1)
			{
				path[way[i-1]][way[i]]=path[way[i]][way[i-1]]=1;
				mp[way[i-1]].push(way[i]);mp[way[i]].push(way[i-1]);
			}
			else st=way[1];
		}
		for (int i=1;i<=n;i++) sort(mp[i].s,mp[i].s+mp[i].len);
		over=false;
		ans[1]=st;
		run(2,st,0);
		if (over)
		{	for(int i=1;i<=m+1;i++) printf("%d ",ans[i]);printf("\n");}
		else printf("No solution\n");
	}
	return 0;
}

		 		  	     		 		 		   	