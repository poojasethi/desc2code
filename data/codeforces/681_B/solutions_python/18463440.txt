#!/usr/bin/python

from math import *
import sys

def Ni(): return tuple(map(int, raw_input().split()))

# https://en.wikibooks.org/wiki/Algorithm_Implementation/Mathematics/Extended_Euclidean_algorithm#Iterative_algorithm
def xgcd(b, n):
    x0, x1, y0, y1 = 1, 0, 0, 1
    while n != 0:
        q, b, n = b / n, n, b % n
        x0, x1 = x1, x0 - q * x1
        y0, y1 = y1, y0 - q * y1
    return  b, x0, y0

n = Ni()[0]
A = 1234567
B = 123456
C = 1234
g, x, y = xgcd(B, C)
assert (g, x, y) == (2, -22, 2201)

a = 0
while A * a <= n:
    # is A * a + B * b + C * c == n     ?
    # solve B * b + C * c == n - A * a
    r = n - A * a
    if r % g != 0:
        a += 1
        continue
    
    k = r / g 
    b0, c0 = x * k, y * k
    assert A * a + B * b0 + C * c0 == n

    #print "sol", b0, c0
    # b0 + m * C/g >= 0
    # b0 < 0
    # C/g > 0
    # m * C/g >= -b0
    # m >= -b0 * g / C
    m = (-b0 * g + C - 1) / C
    bm, cm = b0 + m * C/g, c0 - m * B/g
    assert A * a + B * bm + C * cm == n
    if bm >= 0 and cm >= 0:
        print "YES"
        print >>sys.stderr, a, bm, cm
        sys.exit(0)

    # print m, bm, cm
    a += 1

print "NO"
