from sys import stdin
import fractions, time

def line():
    return stdin.readline().split()
def read_int():
    return int(line()[0])
def read_ints():
    return [int(x) for x in line()]
def memo(fn):
    table = {}
    def memoized(*args):
        if args not in table:
            table[args] = fn(*args)
        return table[args]
    return memoized

def step(x, y, n, m, dx, dy):
    if dx < 0:
        x_dist = x - 1
    else:
        x_dist = n - x
    if dy < 0:
        y_dist = y - 1
    else:
        y_dist = m - y

    if dx == 0:
        x_steps = 10**10
    else:
        x_steps = x_dist / abs(dx)
    if dy == 0:
        y_steps = 10**10
    else:
        y_steps = y_dist / abs(dy)
    return min(x_steps, y_steps)

n, m = read_ints()
x, y = read_ints()
k = read_int()
total = 0
for _ in range(k):
    dx, dy = read_ints()
    steps = step(x, y, n, m, dx, dy)
    x += steps * dx
    y += steps * dy
    total += steps
    #print "%s steps, now at %s, %s" % (steps, x, y)
print total
