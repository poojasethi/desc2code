#include <cstdio>
#include <cstring>
#include <algorithm>
#define MAXN 10000010

using namespace std;

typedef long long LL;
int father[MAXN];

inline LL Find(LL x){
	if(x == father[x]) return x;
	return father[x] = Find(father[x]);
}
inline void Union(LL x,LL y){
	int t = rand()%2;
	if(t&1) swap(x,y);
	father[Find(x)] = Find(y);
}
inline bool check(LL x,LL y){
	if(father[x] && father[y] && Find(x) != Find(y)){
		Union(x,y);
		return true;
	}
	return false;
}
int main()
{
	int n, x, ans;
	LL i, j, a, b, c;
	while(scanf("%d",&n) != EOF){
		memset(father,0,sizeof(father));
		ans = n;
		while(n--){
			scanf("%d",&x);
			father[x] = x;
		}
		for(i = 1;i < MAXN; ++i){
			for(j = i + 1;(a = 2*i*j) < MAXN && (b = j*j - i*i) < MAXN; ++j){
				if((i + j) % 2 == 0) continue;
				if(__gcd(a,b) != 1) continue;
				c = i*i + j*j;
				if(check(a,b)) ans--;
				if(c < MAXN){
					if(check(a,c)) ans--;
					if(check(b,c)) ans--;
				}
			}
		}
		printf("%d\n",ans);
	}
	
}
