#include <iostream>
#include <algorithm>
using namespace std;
#define REP(i,a,b) for(i=a;i<b;i++)

const int MAX=10000000;
int f[MAX];

int gcd(int x,int y){if (!y) return x;return gcd(y,x%y);}

int find(int x){if (!f[x]||f[x]==x)  return f[x];return f[x]=find(f[x]);}

bool merge(int x,int y){
        x=find(x);y=find(y);
        if (!x||!y||x==y) return 0;
        //cout<<x<<' '<<y<<endl;
        f[x]=y;
        return 1;
}

int main(){
        int n,i,j,a,b,c,ans;
        cin>>n;
        REP(i,0,n){cin>>a;f[a]=a;}
        ans=n;
        for(i=1;2*i*i<=MAX;i++)for(j=i+1;2*i*j<=MAX;j+=2){
                a=2*i*j;b=j*j-i*i;
                if (b>MAX) break;
                if (gcd(i,j)!=1) continue;
                if (merge(a,b)) ans--;
                //if (ans==6) ans--,cout<<i<<' '<<j<<endl;
                c=j*j+i*i;
                if (c>MAX) continue;
                if (merge(a,c)) ans--;
                if (merge(b,c)) ans--;
                //if (ans==6) ans--,cout<<i<<' '<<j<<endl;
        }
        cout<<ans<<endl;
}
