//Codeforces 56D - Savior
// Union-find
#include<cstdio>
const int MAXX = 10000001;
int n, j, ans, a[1000001], b[10000001], p[1000001], r[1000001];
long long i, d, e, f;

int gcd(int a, int b){
	return b==0? a : gcd(b,a%b);
}

void unite(int a, int b){
	if(a == b)
		return;
	if(r[a] < r[b])
		p[a] = b;
	else{
		if(r[a] == r[b]){
			r[a]++;
		}
		p[b]=a;
	}
}

int find(int x){
	if(x!=p[x])
		p[x] = find(p[x]);
	return p[x];
}

int main(){
	scanf("%d", &n);
	for(int i = 1; i <= n; i++){
		scanf("%d", &a[i]);
		b[a[i]] = i;
		p[i] = i;
		r[i] = 1;
	}

	for(int i = 1; i <= 6000; i++){
		for(int j = 1; j < i; j++){
			if(gcd(i,j) == 1 && (i&1) != (j&1)){
				d = 2*i*j;
				e = i*i+j*j;
				f = i*i-j*j;

				if(e>MAXX && d>MAXX)
					break;
				if(e <= MAXX && b[e] > 0){
					if(d <= MAXX && b[d] > 0)
						unite(find(b[d]), find(b[e]));
					if(f <= MAXX && b[f] > 0)
						unite(find(b[f]), find(b[e]));
				}
				if(d <= MAXX && f <= MAXX && b[d] > 0 && b[f] > 0)
					unite(find(b[d]), find(b[f]));
			}
		}
	}

	for(int i = 1; i <= n; i++)
		if(i == find(i))
			ans++;
	printf("%d\n", ans);
	return 0;
}

