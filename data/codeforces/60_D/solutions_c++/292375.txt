//Solution by Ali-Amir Aldan
#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
#include <vector>
#include <cmath>
#include <map>
#include <set>

using namespace std;

#define MAX 10000001

int pred[MAX];
int x, y, z, n, res, i, j;

int up (int u)
{
 	if (!u || pred[u] == u) return u;
 	pred[u] = up (pred[u]);
 	return pred[u];
}

int calc (int u, int v)
{
 	if (!pred[u] || !pred[v]) return 0;
 	if (up (u) == up (v)) return 0;
 	pred[up (u)] = up (v);
 	return 1;
}

int main ()
{
	scanf ("%d", &n);

	for (i = 0; i < n; i++)
		scanf ("%d", &x),
		pred[x] = x;

	res = n;
	for (i = 1; i*i <= MAX/2; i++)
		for (j = i+1; j*j <= 3*MAX/2; j += 2)
		{
		 	if (__gcd (i, j) != 1) continue;
		 	x = 2*i*j; y = j*j-i*i; z = i*i + j*j;
		 	if (x >= MAX || y >= MAX) continue;
		 	res -= calc (x, y);
		 	if (z < MAX)
		 		res -= calc (x, z),
		 		res -= calc (y, z);
		}

	printf ("%d\n", res);

	return 0;
}
