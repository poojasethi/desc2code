#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long LL;

const LL MAX = 10000001;

int N;
int a[MAX], f[MAX];
int ans;

LL gcd(LL a, LL b)
{
	if (b==0LL) return a;
	return gcd(b, a%b);
}

int find(int x)
{
	if (f[x]==x) return x;
	return f[x] = find(f[x]);
}

void merge(int x, int y)
{
	if (!f[x] || !f[y]) return;
	int rx = find(x), ry = find(y);
	if (rx != ry)
	{
		ans--;
		f[rx] = ry;
	}
}

int main()
{
	int i, j, k;
	cin>>N;
	ans = N;
	for (i = 0; i < N; ++i)
	{
		cin>>a[i];
		f[a[i]] = a[i];
	}
	for (LL i = 1; i < MAX; ++i)
		for (LL j = i+1; 2*i*j<MAX && j*j-i*i<MAX; j+=2)
		{
			if (gcd(i, j)!=1) continue;
			merge(j*j-i*i, 2*i*j);
			if (i*i+j*j<MAX)
			{
				merge(i*i+j*j, j*j-i*i);
				merge(i*i+j*j, 2*i*j);
			}
		}
	cout << ans << endl;
	return 0;
}

	 	 	 		 			   			 	    		