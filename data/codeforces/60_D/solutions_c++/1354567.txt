#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

const int LIM = 10000000;
int g[10000005];
inline int FIND(int x) { return g[g[x]]==g[x]?g[x]:g[x]=FIND(g[x]); }
inline void UNION(int x, int y) { g[FIND(x)]=FIND(y); }
char X[10000005];
int A[1000005];
int main(void) {
	int n;
	scanf("%d", &n);
	for(int i=0;i<n;i++) {
		scanf("%d", &A[i]);
		X[A[i]]=1;
	}
	int sq[5000]={};
	for(int i=1;i<=4000;i++) sq[i]=i*i;
	for(int i=1;i<=LIM;i++) g[i]=i;
	for(int r=3500;r>=1;r--)
		for(int s=1,b=2*r;s<r;s++,b+=2*r) {
			int a=sq[r]-sq[s],c=sq[r]+sq[s];
			if(a<=LIM && b<=LIM && X[a] && X[b] && __gcd(a,b)==1) UNION(a, b);
			if(a<=LIM && c<=LIM && X[a] && X[c] && __gcd(a,c)==1) UNION(a, c);
			if(b<=LIM && c<=LIM && X[b] && X[c] && __gcd(b,c)==1) UNION(b, c);
		}
	int ans=0;
	for(int i=0;i<n;i++) {
		int x=FIND(A[i]);
		if(X[x]) ++ans;
		X[x] = 0;
	}
	printf("%d\n", ans);
	return 0;
}

