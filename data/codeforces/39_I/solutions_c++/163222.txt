#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <map>
#include <set>
#include <vector>
#include <string>
#include <iostream>
#include <cmath>
#include <ctime>
#include <algorithm>
#include <queue>
#include <stack>
#include <deque>

using namespace std;

#define dbg(x) cerr << #x << " = " << x << endl
#define all(c) (c).begin(),(c).end()
#define pb push_back
#define sz(c) (int)(c).size()          
#define mp make_pair
#define forn(i,n) for(int i=0;i<n;i++)

typedef long long int64;
typedef long double ld;

const int N = (int)1e5+1;


int gcd(int a, int b){return b?gcd(b,a%b):a;}

vector <vector <int> >c;
int tim[N];
bool was[N];

int t;
void dfs(int v, int T)
{
  if (was[v]) 
    {t=gcd(t,abs(T-tim[v]));  return;}
  was[v]=true;
  tim[v]=T;
  forn(i,sz(c[v]))
  {
    dfs(c[v][i],T+1);
    
  }
}
int main()
{
   int n,m;
   scanf("%d%d",&n,&m);
   c.resize(n);
   for(int i=0;i<n;i++)
     c[i].resize(0);

   forn(i,m)
   {
     int x,y;
     scanf("%d%d",&x,&y);
     x--;y--;
     c[x].pb(y);
   }
   t=0;
   memset(was,false,sizeof was);
   memset(tim,0,sizeof tim);
   dfs(0,0);


   printf("%d\n",t);
   int all=0;
   forn(i,n)
     if (tim[i]%t==0 && was[i])
       all++;
   printf("%d\n",all);
   forn(i,n)
     if (tim[i]%t==0 && was[i])
       printf("%d ",i+1);
   return 0;
}
