#include<stdio.h>
#include<list>
#include<memory.h>
std::list<int> r[100000];
int d[100000];
void rec(int i,int n){
    if (d[i]==-1){
        d[i]=n;

        for (std::list<int>::iterator j=r[i].begin();j!=r[i].end();j++){
            rec(*j,n+1);
        }
    }
}
int abs(int r){
    if (r<0)
        return -r;
    return r;
}
int ans[100000];
int ddd(int a,int b){
    if (b>a)
        return ddd(b,a);
    if (b==0)
        return a;
    return ddd(b,a%b);
}
int q[100000][2];
int main(){
    memset(d,0xff,sizeof(d));
    int n,m;
    scanf("%d%d",&n,&m);
    for (int i=0;i<m;i++)
    {
        int a,b;
        scanf("%d%d",&a,&b);
        r[a-1].push_back(b-1);
        q[i][0]=a-1;
        q[i][1]=b-1;
    }
    rec(0,0);
    int t=0;
    for (int i=0;i<m;i++)
        if (d[q[i][0]]>=0&&d[q[i][1]]>=0)
    {
        t=ddd(t,abs(d[q[i][0]]+1-d[q[i][1]]));
    }
    printf("%d\n",t);
    int k=0;
    for (int i=0;i<n;i++)
        if (d[i]%t==0&&d[i]>=0)
            k++,
            ans[k-1]=i+1;
    printf("%d\n",k);
    for (int i=0;i<k;i++)
        printf("%d ",ans[i]);
}