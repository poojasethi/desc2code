#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

#define ll long long
#define inf 1e9
#define eps 1e-10
#define md
#define N 600010
using namespace std;
struct yts {int x,t,l,ne;} e[N];
int v[N],low[N],dfn[N],st[N],A[N],B[N],bcc[N];
bool vis[N][2];
int dfs_cnt,bcc_cnt,num=1,top=0,S,T;
void put(int x,int y,int l)
{
	num++; e[num].x=x; e[num].t=y; e[num].l=l;
	e[num].ne=v[x]; v[x]=num;
}
void dfs(int x,int fa)
{
	dfn[x]=low[x]=++dfs_cnt; st[++top]=x;
	for (int i=v[x];i;i=e[i].ne)
	{
		int y=e[i].t;
		if (i==(fa^1)) continue;
		if (!dfn[y])
		{
			dfs(y,i); low[x]=min(low[x],low[y]);
		}
		else low[x]=min(low[x],low[y]);
	}
	if (dfn[x]==low[x])
	{
		bcc_cnt++;
		int y;
		do
		{
			y=st[top--];
			bcc[y]=bcc_cnt;
		} while (y!=x);
	}
}

int main()
{
	int n,m;
	scanf("%d%d",&n,&m);
	for (int i=1;i<=m;i++)
	{
		int x,y,l;
		scanf("%d%d%d",&x,&y,&l);
		put(x,y,l); put(y,x,l);
	}
	scanf("%d%d",&S,&T);
	put(S,T,0); put(T,S,0);
	dfs(1,0);
	for (int i=1;i<=num;i++)
	  if (e[i].l&&(bcc[e[i].x]==bcc[e[i].t])&&(bcc[e[i].x]==bcc[S])&&(bcc[S]==bcc[T])) { printf("YES\n"); return 0;}
	printf("NO\n");
	return 0;
}


