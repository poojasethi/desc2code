#include <stdio.h>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <math.h>
#include <string>
#include <string.h>
#include <iostream>
using namespace std;
#define fi "input.txt"
#define fo "output.txt"
#define fileopen freopen(fi,"r",stdin);freopen(fo,"w",stdout)
#define FOR(i,l,r) for(int i=(int)(l);i<=(int)(r);i++)
#define FORD(i,l,r) for(int i=(int)(l);i>=(int)(r);i--)
#define xy pair<int,int>
#define int64 long long
#define X first
#define Y second
#define pb push_back
#define init(a,v) memset(a,v,sizeof(a))
#define Sz(s) (int)(s.size())
#define EL printf("\n")
#define digit(x) ('0'<=x&&x<='9')
#define forever while (true)
#define ld long double

const int OO = (int) 2e9;
const int MOD = (int) 1e9+7;
const double Pi = 3.141592653589793;
const int N = (int) 3e5+5;

int id[N],ll[N],path[N],pre[N],prei[N],w[N],sz=0,n,m,s,t;
vector<xy> g[N];
bool bri[N];

void YES() {cout<<"YES";exit(0);}

void dfs(int u,int p) {
    int v,idx;
    FOR(i,0,Sz(g[u])-1) {
        v=g[u][i].X;if (v==p) continue;
        idx=g[u][i].Y;
        if (id[v]==0) {
            id[v]=ll[v]=id[u]+1;
            pre[v]=u;prei[v]=idx;
            dfs(v,u);
        }
        ll[u]=min(ll[u],ll[v]);
        if (ll[v]>id[u]) bri[idx]=true;
    }
}

void dfs2(int u,int p) {
    int v,idx;
    FOR(i,0,Sz(g[u])-1) {
        v=g[u][i].X;idx=g[u][i].Y;
        if (bri[idx]) continue;
        if (w[idx]) YES();
        if (pre[v]==0) {
            pre[v]=u;
            dfs2(v,u);
        }
    }
}

int main() {
    cin>>n>>m;
    int u,v;
    FOR(i,1,m) {
        cin>>u>>v>>w[i];
        g[u].pb(xy(v,i));
        g[v].pb(xy(u,i));
    }
    cin>>s>>t;
    init(bri,false);
    id[s]=ll[s]=1;
    dfs(s,0);
    while (t!=0) {
        path[++sz]=t;
        t=pre[t];
    }
    reverse(path+1,path+sz+1);
    FOR(i,2,sz) if (w[prei[path[i]]]) YES();
    init(pre,0);
    FOR(i,1,sz) if (!pre[path[i]]) dfs2(path[i],0);
    cout<<"NO";
}
