#include <stdio.h>
#include <iostream>
#include <string.h>
#include <vector>
using namespace std;
const int N=300010,M=600010;
struct A{int v,w;};
vector<A> a[N];
int e[M],next[M],head[N],c[M],ed;
int bel[N],dfn[N],low[N],v[N],cnt=0;
int can[N],isb[M],sum,ans;
void adde(int x,int y,int z){e[++ed]=y;next[ed]=head[x];head[x]=ed;c[ed]=z;}
bool judge(int x,int y){
	v[x]=1;
	if(x==y) return true;
	for(int i=head[x];i;i=next[i])
	    if(!v[e[i]]&&judge(e[i],y)) return true;
	return false;
}
void dfs(int x,int f){
	dfn[x]=low[x]=++cnt;
	for(int i=head[x];i;i=next[i]){
		if(!dfn[e[i]]){
			dfs(e[i],i);
			if(low[e[i]]>dfn[x]) isb[i]=isb[i^1]=true;
			else low[x]=min(low[x],low[e[i]]);
		}
		else if(i!=(f^1))
		    low[x]=min(low[x],dfn[e[i]]);
	}
}
void build(int x){
	bel[x]=sum;v[x]=1;
	for(int i=head[x];i;i=next[i])
		if(!v[e[i]]&&!isb[i])
			build(e[i]);
}
void solve(int x,int y,int z){
	z|=can[x];v[x]=1;
	if(x==y){ans=z;return;}
	int i,u;
	for(i=0;i<a[x].size();i++){
		u=a[x][i].v;
		if(!v[u]) solve(u,y,z|a[x][i].w);
	}
}
int main(){
	int T,i,j,x,y,z,n,m,st,en;
	//scanf("%d",&T);
	//while(T--){
		scanf("%d %d",&n,&m);
		ed=1;
		fill(head,head+1+n,0);
		for(i=1;i<=m;i++){
			scanf("%d %d %d",&x,&y,&z);
			adde(x,y,z);
			adde(y,x,z);
		}
		scanf("%d %d",&st,&en);
		fill(v,v+n+1,0);
		if(!judge(st,en)){printf("NO\n");return 0;}
		fill(dfn,dfn+n+1,0);
		fill(low,low+n+1,0);
		fill(isb,isb+ed+1,0);
		cnt=0;
		for(i=1;i<=n;i++)
		    if(!dfn[i]) dfs(i,0);
		fill(v,v+n+1,0);sum=0;
		for(i=1;i<=n;i++)
		    if(!v[i]) sum++,build(i);
		fill(can,can+sum+1,0);
		for(i=1;i<=sum;i++) a[i].clear();
		for(i=1;i<=n;i++)
		    for(j=head[i];j;j=next[j]){
		        if(isb[j]) a[bel[i]].push_back((A){bel[e[j]],c[j]});
		        else can[bel[i]]|=c[j];
		    }
		fill(v,v+n+1,0);
		//ans=0;
		solve(bel[st],bel[en],0);
		if(ans==1) printf("YES\n");
		else printf("NO\n");
    //}
	return 0;
}