#include<cstdio>
#include<iostream>
#include<string>
#include<cstring>
using namespace std;

int n,m,tot,ans,S,T;
int fa[300010],c[300010];

struct graph
{struct edge
 {	int u,v,c,f,next;
 };
 struct edge e[1000010];
 int num;
 int head[300010];
 void add(int u,int v,int c)
 {	e[num].u=u;
 	e[num].v=v;
 	e[num].c=c;
 	e[num].next=head[u];
 	head[u]=num;
 	num++;
 	e[num].u=v;
 	e[num].v=u;
 	e[num].c=c;
 	e[num].next=head[v];
 	head[v]=num;
 	num++;
 }
};
struct graph g1,g2;

struct unit
{int dfn,low,f;
};
struct unit b[300010];

int find(int i)
{return fa[i]==i?i:fa[i]=find(fa[i]);
}

void tarjan(int i,int fa)
{int j,k;

 b[i].dfn=b[i].low=++tot;
 j=g1.head[i];
 while(j!=-1)
 {	if(g1.e[j].v!=fa)
 	{	if(b[g1.e[j].v].dfn==0)
	 	{	tarjan(g1.e[j].v,i);
			if(b[g1.e[j].v].low==b[g1.e[j].v].dfn) g1.e[j].f=g1.e[j^1].f=1;
		}
   		b[i].low=min(b[i].low,b[g1.e[j].v].low);
	}
	j=g1.e[j].next;
 }
}

void work(int i,int fa,int x)
{int j;
 
 if(i==find(T))
 {	ans=x;
 	return;
 }
 j=g2.head[i];
 while(j!=-1)
 {	if(g2.e[j].v!=fa) work(g2.e[j].v,i,(x|g2.e[j].c)|c[g2.e[j].v]);
 	j=g2.e[j].next;
 }
}

int main()
{int i,j,x,y,z,fx,fy;
 
 scanf("%d%d",&n,&m);
 memset(g1.head,-1,sizeof(g1.head));
 for(i=1;i<=m;i++)
 {	scanf("%d%d%d",&x,&y,&z);
 	g1.add(x,y,z);
 }
 scanf("%d%d",&S,&T);
 tarjan(1,0);
 for(i=1;i<=n;i++) fa[i]=i;
 for(j=0;j<g1.num;j+=2)
 	if(g1.e[j].f==0)
 	{	fx=find(g1.e[j].u);
 		fy=find(g1.e[j].v);
 		if(fx!=fy) fa[fx]=fy;
		c[fy]|=(c[fx]|g1.e[j].c);
	}
 memset(g2.head,-1,sizeof(g2.head));
 //for(i=1;i<=n;i++) cout<<i<<" "<<find(i)<<endl;
 for(j=0;j<g1.num;j+=2)
 	if(g1.e[j].f && find(g1.e[j].u)!=find(g1.e[j].v))	
 		g2.add(find(g1.e[j].u),find(g1.e[j].v),g1.e[j].c);
 ans=0;
 work(find(S),0,c[find(S)]);
 if(ans)
 	printf("YES\n");
 else
 	printf("NO\n");
 return 0;
}