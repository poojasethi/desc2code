#include <bits/stdc++.h>

using namespace std;

#define ll long long

const int maxn = 300010;




bool vis[maxn];
int dfn[maxn];
int low[maxn];

struct Edge{
	int v;
	int w;
	Edge(int v,int w):v(v),w(w){
	}
	Edge(){
	}
}edges[maxn<<1],newedges[maxn<<1];

vector<int> oriG[maxn];

vector<int> G[maxn];

int dfs_clock = 0;

stack<int> sta;
stack<int> sta2;

int a,b;

int belong[maxn];
int hasArt[maxn];


bool instack[maxn];

void tarjan(int u,int p){  
    dfn[u]=low[u]=++dfs_clock;  
    sta.push(u);  
    instack[u]=1;  
    int sz=oriG[u].size();  
    for(int i=0;i<sz;i++){  
        int v= edges[oriG[u][i]].v;  
        if(v==p)continue;
        if(!dfn[v]){  
            tarjan(v,u);  
            low[u]=min(low[u],low[v]);  
        }else if(instack[v]){  
            low[u]=min(low[u],dfn[v]);  
        }  
    }
      
    if(low[u]==dfn[u]){  
    	//cout<<"!"<<endl;
        while(1){  
            int t=sta.top(); sta.pop(); instack[t]=0;  
            //cout<<t<<endl;
			belong[t]=u;  
            if(t==u)break;
        }  
    }  
}  

int u[maxn];
int v[maxn];
int w[maxn];

bool ok = 0;

bool dfs(int u,int p){
	if(u==belong[b]){
		if(hasArt[u])ok=1;
		return 1;
	}
	int sz=G[u].size();  
	bool findB = 0;
	for(int i=0;i<sz;i++){
		int v = newedges[G[u][i]].v;
		if(v==p)continue;
		if(dfs(v,u)){
			findB = 1;
			
			if(newedges[G[u][i]].w){
				ok = 1;
			}
		}
	}
	if(findB && hasArt[u]){
		ok = 1;
	}
	return findB;
}



int main(){
	int n,m;
	cin>>n>>m;
	for(int i=0;i<m;i++){
		scanf("%d%d%d",&u[i],&v[i],&w[i]);
		edges[i<<1] = Edge(v[i],w[i]);
		oriG[u[i]].push_back(i<<1);
		edges[(i<<1)|1] = Edge(u[i],w[i]);
		oriG[v[i]].push_back((i<<1)|1);
	}

	cin>>a>>b;
	tarjan(a,-1);
	

	int k=0;
	for(int i=0;i<m;i++){
		int uu = belong[u[i]];
		int vv = belong[v[i]];
		if(uu==vv){
			if(w[i]){
				hasArt[uu] = 1;
			}
		}else{
			//cout<<"add "<<uu<<" "<<vv<<" "<<w[i]<<endl;
			newedges[k] = Edge(vv,w[i]);
			G[uu].push_back(k++);
			newedges[k] = Edge(uu,w[i]);
			G[vv].push_back(k++);
		}
	}
	
	dfs(belong[a],-1);
	
	if(ok){
		cout<<"YES"<<endl;
	}else{
		cout<<"NO"<<endl;
	}
	
	return 0;
}