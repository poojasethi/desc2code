// Task-ID: 0000
#include <bits/stdc++.h>
using namespace std;
typedef long long int Lint;
typedef pair < int , int > pii;
typedef pair < int , pii > piii;
#define ft first
#define sc second
#define mod 1000000007
#define yeral() (struct node *)calloc(1,sizeof(struct node))
#define foreach(_i,x)  for(__typeof(x.begin()) _i=x.begin() ; _i != x.end() ; _i++)
#define pb push_back
#define all(x) x.begin(),x.end()
#define mp make_pair
#define maxn 500005

int N,M,ata[maxn],bas,son,var[maxn],yaz,tme[maxn],at,grup[maxn];
vector < pii > yol[maxn],yol2[maxn];

int atabul ( int x ){
	if ( grup[x] == x ) return x;
	return grup[x] = atabul(grup[x]);
}

void dfs ( int cur , int pr ){
	tme[cur] = ata[cur] = ++at;
	
	for ( int i = 0 ; i < yol[cur].size() ; i++ ){
		if ( yol[cur][i].ft == pr )
			continue;
		if ( tme[yol[cur][i].ft] > 0 ){
			if ( tme[yol[cur][i].ft] < ata[cur] )
				ata[cur] = tme[yol[cur][i].ft],grup[cur] = grup[yol[cur][i].ft];
		}
		else{
			dfs ( yol[cur][i].ft , cur );
			if ( ata[cur]  > ata[yol[cur][i].ft] )
				ata[cur] = ata[yol[cur][i].ft] , grup[cur] = grup[yol[cur][i].ft];
		}
	}
}

bool used[maxn];

void dfs2 ( int cur , int pr , int con ){
	if ( cur == grup[son] ){
		if ( var[grup[son]] || con ){
			puts("YES");
			exit(0);
		}
		return ;
	}
	
	if ( var[cur] ){
		//~ printf("--> %d\n",cur);
		con = 1;
	}
	
	used[cur] = 1;
		
	for ( int i = 0 ; i < yol2[cur].size() ; i++ )
		if ( yol2[cur][i].ft != pr && !used[yol2[cur][i].ft] )
			dfs2 ( yol2[cur][i].ft , cur , max(con,yol2[cur][i].sc) );
	
}

int main()
{
	//~ ios_base::sync_with_stdio(0);
	
	int a,b,c;
	scanf("%d %d",&N,&M);
	
	for ( int i = 1 ; i <= M ; i++ ){
		scanf("%d %d %d",&a,&b,&c);
		yol[a].pb ( pii ( b , c ) );
		yol[b].pb ( pii ( a , c ) );		
	}
	
	for ( int i = 1 ; i <= N ; i++ )
		grup[i] = i;
	
	cin >> bas >> son;
	
	dfs ( 1 , 0 );
	
	for ( int i = 1 ; i <= N ; i++ )
		atabul ( i );
	
	for ( int i = 1 ; i <= N ; i++ )
		for ( int j = 0 ; j < yol[i].size() ; j++ ){
			if ( grup[i] != grup[ yol[i][j].ft ] ){
				yol2[grup[i]].pb ( pii ( grup[yol[i][j].ft] , yol[i][j].sc ) );
				//~ printf("--> %d - %d = %d\n",ata[i],ata[yol[i][j].ft],yol[i][j].sc);
			}
			else if ( yol[i][j].sc )
				var[ grup[i] ] = 1;
		}
	
	//~ if ( N == 93 && M == 101 ){
		//~ printf("--> %d %d\n",ata[bas],ata[son]);
	//~ }
	
	dfs2 ( grup[bas] , 0 , 0 );
	
	puts("NO");
	
	return 0;
}
