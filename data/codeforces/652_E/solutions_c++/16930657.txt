#pragma comment(linker, "/STACK:102400000,102400000")
#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<cmath>
#include<iostream>
#define N 610000
using namespace std;
struct node{int x,y,d,next;}a[N],e[N];
int n,m,dfn[N],low[N],id,first[N],fe[N],el,len,belong[N],cnt,g[N];
int st,ed,ans;
bool b[N],v[N];
void ins(int x,int y,int d)
{
	a[++len].x=x;a[len].y=y;a[len].d=d;a[len].next=first[x];first[x]=len;
}
void dfs(int x,int kk)
{
	dfn[x]=low[x]=++id;
	for(int k=first[x];k;k=a[k].next)
	{
		if(k==(kk^1)) continue;
		int y=a[k].y;
		if(dfn[y]) low[x]=min(low[x],dfn[y]);
		else
		{
			dfs(y,k);
			low[x]=min(low[x],low[y]);
			if(low[y]>dfn[x]) b[k]=b[k^1]=1;
		}
	}
}
void find(int x)
{
	belong[x]=cnt;
	for(int k=first[x];k;k=a[k].next)
	{
		int y=a[k].y;
		if(b[k] || belong[y]) continue;
		find(y);
	}
}
void tarjan()
{
	id=0;
	for(int i=1;i<=n;i++)
		if(dfn[i]==0) dfs(i,0);
	for(int i=1;i<=n;i++)
		if(belong[i]==0) {cnt++;find(i);}
}
void eins(int x,int y,int d)
{
	e[++el].y=y;e[el].d=d;e[el].next=fe[x];fe[x]=el;
}
void dfs1(int x,int fa,int o)
{
	if(v[x]) return;
	v[x]=1;
	o|=g[x];
	if(x==belong[ed])
	{
		ans=o;
		return;
	}
	for(int k=fe[x];k;k=e[k].next)
	{
		int y=e[k].y;
		if(fa==y) continue;
		dfs1(y,x,o|e[k].d);
	}
}
int main()
{
	scanf("%d%d",&n,&m);
	len=1;
	for(int i=1;i<=m;i++)
	{
		int x,y,d;
		scanf("%d%d%d",&x,&y,&d);
		ins(x,y,d);ins(y,x,d);
	}
	tarjan();
	for(int i=1;i<=len;i++)
	{
		int fx=belong[a[i].x],fy=belong[a[i].y];
		if(fx==fy) {if(a[i].d) g[fx]=1;}
		else eins(fx,fy,a[i].d),eins(fy,fx,a[i].d);
	}
	scanf("%d%d",&st,&ed);
	dfs1(belong[st],0,0);
	if(ans) printf("YES\n");
	else printf("NO\n");
	return 0;
}