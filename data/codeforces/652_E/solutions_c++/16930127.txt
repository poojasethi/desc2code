#include<cstdio>
#include<cstring>
#include<algorithm>
#include<map>
#define fo(i,a,b) for(int i=a;i<=b;i++)
#define fd(i,a,b) for(int i=a;i>=b;i--)
using namespace std;
int n,m;
const int N=610000;
int st[N],en[N*3],next[N*3],dfn[N],tim[N],top,qz[N*3],fa[N],d[N],co[N],co_num,tot,bz[N],ed;
bool t[N];
void insert(int x,int y,int z)
{
	next[++ed]=st[x];
	st[x]=ed;
	en[ed]=y;
	qz[ed]=z;
}
void dfs(int now)
{
	t[now]=1;
	d[++top]=now;
	tim[now]=++tot;
	dfn[now]=tot;
	for(int i=st[now];i;i=next[i])
	if (en[i]!=fa[now])
	{
		if (t[en[i]]==0)
		{
			fa[en[i]]=now;
			dfs(en[i]);
			dfn[now]=min(dfn[now],dfn[en[i]]);			
		} else dfn[now]=min(dfn[now],tim[en[i]]);
	}
	if (dfn[now]==tim[now])
	{
		co_num++;
		while (d[top]!=now)
		{
			co[d[top]]=co_num;
			top--;
		}
		co[now]=co_num;
		top--;
	}
}
int x,y;
int getans(int now)
{
	t[now]=1;
	if (now==y) return 2|bz[now];
	int re=0;
	for(int i=st[now];i;i=next[i])
	if (t[en[i]]==0) re=max(re,getans(en[i])|qz[i]);
	return re|bz[now];
}
int main()
{
	scanf("%d%d",&n,&m);
	fo(i,1,m)
	{
		int x,y,z;
		scanf("%d%d%d",&x,&y,&z);
		insert(x,y,z);
		insert(y,x,z);
	}
	dfs(1);
	fo(now,1,n)
	{
		for(int i=st[now];i;i=next[i])
		if (qz[i]==1)
		{
			if (co[now]==co[en[i]]) bz[n+co[now]]=1; else
			insert(n+co[now],n+co[en[i]],1);
		} else
		if (co[now]!=co[en[i]]) 
		insert(n+co[now],n+co[en[i]],0);
	}
	scanf("%d%d",&x,&y);
	x=n+co[x],y=n+co[y];
	if (getans(x)==3) printf("YES"); else printf("NO");
}
