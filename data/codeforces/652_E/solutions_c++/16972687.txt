#include<bits/stdc++.h>
#define MAXN 300009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int> PII;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int n,m,fup[MAXN],tin[MAXN],tim,vis[MAXN],st;
vector<PII>adj[MAXN];
set<int>brg[MAXN];
void dfs(int nd,int pr){
	fup[nd]=tin[nd]=++tim;
	tr(it,adj[nd]){
		if(it->ff==pr)
			continue;
		if(tin[it->ff]==-1){
			dfs(it->ff,nd);
			umin(fup[nd],fup[it->ff]);
			if(fup[it->ff]>tin[nd]){
				brg[it->ff].insert(nd);
				brg[nd].insert(it->ff);
			}
		}
		else
			umin(fup[nd],tin[it->ff]);
	}
}
int H[MAXN],flag=-1,belong[MAXN];
void bcc(int nd){
	belong[nd]=st;
	vis[nd]=1;
	tr(it,adj[nd]){
		if(brg[nd].count(it->ff))
			continue;	
		H[st]|=it->ss;
		if(vis[it->ff])
			continue;	
		bcc(it->ff);	
	}
}
void Dealer(int nd,bool Arti,int last){
	if(flag>=0)
		return;
	Arti|=H[belong[nd]];
	if(nd==last){
		flag+=1+(Arti==1);
		return;
	}
	vis[nd]=1;
	tr(it,adj[nd]){
		if(vis[it->ff])
			continue;
		Dealer(it->ff,Arti|it->ss,last);	
	}
}
int main(){
	memset(tin,-1,sizeof(tin));
	scanf("%d%d",&n,&m);
	while(m--){
		int u,v,z;
		scanf("%d%d%d",&u,&v,&z);
		adj[u].pb(mp(v,z));
		adj[v].pb(mp(u,z));
	}
	dfs(1,-1);
	for(int i=1;i<=n;i++){
		st+=(1^vis[i]);
		if(!vis[i])
			bcc(i);
	}
	memset(vis,0,sizeof(vis));
	int s,t;
	scanf("%d%d",&s,&t);
	Dealer(s,0,t);
	if(flag)
		printf("YES\n");
	else
		printf("NO\n");	
	return 0;
}
/*
3 3
1 2 0
2 3 0
3 1 1
2 2
*/