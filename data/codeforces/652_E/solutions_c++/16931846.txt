#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int N=300010;
vector<int> v[N],val[N];
int a,b,n,m,dep[N],low[N],f[N],g[N];
bool pd[N];

void dfs(int x,int fa)
{
	low[x]=dep[x];
	pd[x]=false;
	//cout<<x<<endl;
	for(int i=v[x].size()-1;i>=0;i--) if(v[x][i]!=fa)
	{
		if(dep[v[x][i]]==0)
		{
			dep[v[x][i]]=dep[x]+1;
			f[v[x][i]]=x;
			g[v[x][i]]=val[x][i];
			dfs(v[x][i],x);
			low[x]=min(low[x],low[v[x][i]]);
			if((val[x][i]==1 || pd[v[x][i]]) && low[v[x][i]]<=dep[x]) pd[x]=true;
		}
		else if(dep[v[x][i]]<dep[x])
		{
			low[x]=min(low[x],dep[v[x][i]]);
			if(val[x][i]==1) pd[x]=true;
		}

	}
}

int main()
{
	
	scanf("%d%d",&n,&m);
	for(int i=0;i<m;i++)
	{
		int x,y,z;
		scanf("%d%d%d",&x,&y,&z);
		v[x].push_back(y);
		v[y].push_back(x);
		val[x].push_back(z);
		val[y].push_back(z);
	}	
	scanf("%d%d",&a,&b);
	
	memset(pd,false,sizeof(pd));
	dep[a]=1;
	g[a]=0;
	dfs(a,0);
	bool P=false;
	while(b!=0)
	{
		if(pd[b] || g[b]==1) P=true;
		b=f[b];
	}
	//for(int i=1;i<=n;i++) cout<<dep[i]<<' ';
	if(P) cout<<"YES"<<endl;
	else cout<<"NO"<<endl;

	return 0;
}