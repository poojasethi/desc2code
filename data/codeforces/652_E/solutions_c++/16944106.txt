#include <cstdio>
#include <algorithm>
#define N 300005
#define M 600005
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int n, m, f[N], v[M], o[M], w[M], d[N], l[N], t, g, in[N], S, T, p;
bool b[M], u[N], h[N];

void bd(int a, int b, int c){
	v[++p] = b; o[p] = f[a]; f[a] = p; w[p] = c;
}

void dfs(int x, int y){
	d[x] = l[x] = ++t;
	fe(i, f[x], o) if(i != (y ^ 1)){
		if(!d[v[i]]){
			dfs(v[i], i);
			if(l[v[i]] > d[x]) b[i] = b[i ^ 1] = 1;
			l[x] = min(l[x], l[v[i]]);
		}else
			l[x] = min(l[x], d[v[i]]);
	}
}

void dfs2(int x, int y){
	in[x] = y;
	fe(i, f[x], o) if(!b[i]){
		if(w[i]) h[y] = 1;
		if(!in[v[i]]) dfs2(v[i], y);
	}
}

bool dfs3(int x, int y){
	u[x] = 1;
	if(h[in[x]]) y = 1;
	if(x == T) return y;
	
	fe(i, f[x], o) if(!u[v[i]] && dfs3(v[i], w[i] ? 1 : y)) return 1;
	
	return 0;
}

int main(){
	p = 1;
	
	scanf("%d %d", &n, &m);
	fi(i, 0, m){
		int a, b, c;
		scanf("%d %d %d", &a, &b, &c);
		bd(a, b, c);
		bd(b, a, c);
	}
	scanf("%d %d", &S, &T);
	
	dfs(1, 0);
	
	FI(i, 1, n) if(!in[i]) dfs2(i, ++g);
	
	puts(dfs3(S, 0) ? "YES" : "NO");
}
