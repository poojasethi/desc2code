#include <bits/stdc++.h>
#define MAX 111111

using namespace std;

vector<int> E[MAX];
int col[MAX];
set<int> S;

int dfs(int v, int p)
{
	int exp = 0;
	int daym = 0;
	for (int i = 0; i < E[v].size(); i++)
	{
		int u = E[v][i];
		if (u == p) continue;
		int lo = dfs(u, v);
		if (lo <= 0) return -1;
		daym = daym | (exp & lo);
		exp = exp | lo;
	}
	col[v] = 25;
	for (int k = 24; k >= 0; k--)
	{
		if (daym & (1 << k))
			break;
		else if ((exp & (1 << k)) == 0)
			col[v] = k;
	}
	
	exp |= (1 << col[v]);
	for (int i = col[v] - 1; i >= 0; i--)
		if ((exp & (1 << i)))
			exp ^= (1 << i);
	return exp;
}

int main()
{
	int N, x, y;
	cin >> N;
	for (int i = 1; i < N; i++)
	{
		cin >> x >> y;

		E[x].push_back(y);
		E[y].push_back(x);
	}
	
	if (dfs(1, 0) == -1)
	{
		cout << "Impossible!\n";
		return 0;
	}
	
	for (int i = 1; i <= N; i++)
		cout << char('A' + (25 - col[i]))  << ' ';
}
