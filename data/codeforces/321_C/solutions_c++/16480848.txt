# include <bits/stdc++.h>

using namespace std;

const int maxn = 1e5 + 100;

vector <int> adj[maxn];

int par[maxn], d[maxn], cen;

char ans[maxn];

bool mark[maxn];

int dfs(int v,int sz){
	if(cen != -1)
		return -1;
	d[v] = 1;
	for (int i = 0; i < adj[v].size(); i++){
		int u = adj[v][i];
		if(u - par[v] && !mark[u])
			par[u] = v, d[v] += dfs(u, sz);
	}
	if(d[v] > (sz - 1) / 2 && cen == -1)
		cen = v;
	return d[v];
}

int go(int v,int sz, char c){
	par[v] = cen = -1;
	dfs(v, sz);
	v = cen;
	ans[v] = c;
	mark[v] = true;
	for (int i = 0; i < adj[v].size(); i++){
		int u = adj[v][i];
		if(!mark[u])
			go(u, (u == par[v] ? sz - d[v] : d[u]), c + 1);
	}
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n;
	cin >> n;
	for (int i = 1; i < n; i++){
		int v, u;
		cin >> v >> u;
		v--, u--;
		adj[v].push_back(u);
		adj[u].push_back(v);
	}
	go(0, n, 'A');

	for (int i = 0; i < n; i++)
		cout << ans[i] << " ";
	cout << endl;
	return 0;
}

