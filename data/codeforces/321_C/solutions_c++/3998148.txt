#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;
const int maxn = 100005;
vector <int> edge[maxn];
int n, m;
struct node {
    int v, f[28];
}dp[maxn];
void dfs(int u, int fa) {
    int i, j;
    for(i = 0; i < edge[u].size(); i++) {
        int v = edge[u][i];
        if(v == fa) continue;
        dfs(v, u);
        for(j = 0; j < 26; j++) dp[u].f[j] += dp[v].f[j];
    }
    int k = 26;
    for(i = 25; i >= 0; i--) if(dp[u].f[i] >= 2) k = i;
    for(i = k-1; i >= 0 && dp[u].f[i]; i--);
    dp[u].v = i; dp[u].f[i] = 1;
    for(i++; i < 26; i++) dp[u].f[i] = 0;
}
int main() {

    int i;
    scanf("%d", &n);
    for(i = 1; i < n; i++) {
        int x, y;
        scanf("%d%d", &x, &y);
        x--, y--;
        edge[x].push_back(y);
        edge[y].push_back(x);
    }
    dfs(0, -1);
    for(i = 0; i < n; i++)
        printf("%c ", dp[i].v+'A');
    puts("");
    return 0;
}
