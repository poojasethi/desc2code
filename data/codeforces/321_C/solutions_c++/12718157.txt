#include<bits/stdc++.h>
using namespace std;
int n,dp[101000],p[101000];
vector <int> adj[101000];
void dfs(int I){
	for(int i=0;i<adj[I].size();i++){
		if(p[I]!=adj[I][i]){
			p[adj[I][i]]=I;
			dfs(adj[I][i]);
			dp[I]+=dp[adj[I][i]];
		}
	}
	dp[I]++;
}
char ans[101000];
int firstndvm(int N,int I){
	int next=-1;
	for(int i=0;i<adj[I].size();i++){
		if(ans[adj[I][i]]==0){
			if(dp[adj[I][i]]>N/2){
				next=adj[I][i];
				break;
			}
		}
	}
	if(next!=-1){
		dp[I]-=dp[next];
		dp[next]+=dp[I];
		return firstndvm(N,next);
	}
	return I;
}
void go(int N,int I,char A){
	I=firstndvm(N,I);
	ans[I]=A;
	for(int i=0;i<adj[I].size();i++){
		if(ans[adj[I][i]]==0)go(dp[adj[I][i]],adj[I][i],A+1);
	}
}
int main(){
	ios::sync_with_stdio(0);cin.tie(0);
	cin>>n;
	ans[0]=0;
	for(int i=1,a,b;i<n;i++){
		cin>>a>>b;
		adj[a].push_back(b);
		adj[b].push_back(a);
		ans[i]=0;
	}
	p[1]=1;
	dfs(1);
	go(n,1,'A');
	for(int i=1;i<=n;i++)cout<<ans[i]<<" ";
}
