#include <cstdio>
#include <set>
using namespace std;

const int MAXN = 100000+10;
typedef set<int>::iterator sit;

set<int> t[MAXN];
int n, id[MAXN], size[MAXN];

int Find_G(int x, int num, int fa)
{
	size[x] = 1;
	bool flag = true;
	for (sit it = t[x].begin(); it != t[x].end(); ++it)
		if (*it != fa)
		{
			int y = Find_G(*it, num, x);
			if (y) return y;
			size[x] += size[*it];
			if (size[*it] > num / 2)
				flag = false;
		}
	if (flag && num - size[x] <= num / 2)
	{
		if (fa)
			size[fa] = num - size[x];
		return x;
	}
	return 0;
}
void solve(int dep, int x, int num)
{
	int G = Find_G(x, num, 0);
	id[G] = dep;
	for (sit it = t[G].begin(); it != t[G].end(); ++it)
		t[*it].erase(G),
		solve(dep + 1, *it, size[*it]);
}
int main()
{
	scanf("%d", &n);
	for (int i = 1; i < n; ++i)
	{
		int x, y;
		scanf("%d%d", &x, &y);
		t[x].insert(y), t[y].insert(x);
	}
	solve(0, 1, n);
	for (int i = 1; i <= n; ++i)
		printf("%c ", id[i] + 'A');
}
