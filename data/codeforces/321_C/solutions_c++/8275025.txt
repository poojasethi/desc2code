#include <cstdio>
const int N=1e5+5;
int n,s;
struct node *best;
struct edge{
	node *ed;
	edge *next;
} E[N<<1],*newE=E;
struct node{
	edge *son;
	int size,maxsize;
	bool vis,done;
	char rank;
	void dfs2(){
		vis=1;
		size=1;
		maxsize=0;
		for(edge *e=son;e;e=e->next) if(!e->ed->vis&&!e->ed->done){
			e->ed->dfs2();
			size+=e->ed->size;
			if(e->ed->size>maxsize) maxsize=e->ed->size;
		}
	}
	void dfs3(){
		vis=0;
		if(s-size>maxsize) maxsize=s-size;
		if(maxsize<best->maxsize) best=this;
		for(edge *e=son;e;e=e->next) if(e->ed->vis)
			e->ed->dfs3();
	}
	void dfs(char dep){
		dfs2();
		s=size;
		best=this;
		dfs3();
		best->done=1;
		best->rank=dep;
		for(edge *e=best->son;e;e=e->next) if(!e->ed->done)
			e->ed->dfs(dep+1);
	}
} V[N];
int main(){
	scanf("%d",&n);
	for(int i=1;i<n;i++){
		int a,b; scanf("%d%d",&a,&b);
		*newE=(edge){V+b,V[a].son},V[a].son=newE++;
		*newE=(edge){V+a,V[b].son},V[b].son=newE++;
	}
	V[1].dfs('A');
	for(int i=1;i<=n;i++) printf("%c%c",V[i].rank," \n"[i==n]);
}
