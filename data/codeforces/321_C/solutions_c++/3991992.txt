#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;
#define N 111111
#define pb push_back
#define For(i,x) for (__typeof(x.begin()) i = x.begin(); i != x.end(); i++)
int i, n, x, y, cnt, ans[N], f[N], vis[N], sz[N], cut[N];
vector<int> g[N], t;
void dfs(int u, int c) {
	vis[u] = c;	sz[u] = 1; f[u] = 0;
	t.pb(u);
	For(i, g[u])
		if(!cut[*i] && vis[*i] != c){
			dfs(*i, c);
			sz[u] += sz[*i]; f[u] = max(f[u], sz[*i]);
		}
}
void go(int u, int c){
	cnt++; t.clear();
	dfs(u, cnt);
	int tp = ~0U >> 1, tmp, p;
	For(i, t){
		tmp = max(sz[u] - sz[*i], f[*i]);
		if (tmp < tp) tp = tmp, p = *i;
	}
	cut[p] = 1; ans[p] = c;
	For(i, g[p])
		if (!cut[*i]) go(*i, c + 1);
}
int main(){
	scanf("%d", &n);
	for (i = 1; i < n; i++){
		scanf("%d%d", &x, &y);
		g[x].pb(y); g[y].pb(x);
	}
	go(1, 'A');
	for (i = 1; i <= n; i++)
		if (ans[i] > 'Z') {
			puts("Impossible!");
			return 0;
		}
	for (i = 1; i <= n; i++)
		printf("%c ", ans[i]);
	puts("");
}
