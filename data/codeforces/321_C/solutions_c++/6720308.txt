# include <stdio.h>
# include <vector>

# define MAXN 100009
# define tr(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)

using namespace std;

int n;
vector<int> E[MAXN];
char A[MAXN];
int child[MAXN];

int find_centre(int node, int par, int sz){
	tr(to, E[node])
		if(A[*to] == '0'  &&  par != *to  &&  sz/2 < child[*to])
			return find_centre(*to, node, sz);
	
	return node;
}

void upd(int node, int par){
	child[node] = 1;
	
	tr(to, E[node])
		if(A[*to] == '0'  &&  *to != par){
			
			upd(*to, node);
			
			child[node] += child[*to];
		}
}

void dfs(int node, char rank){
	upd(node, -1);
	
	int centre =  find_centre(node, -1, child[node]);
	
	A[centre] = rank;
	
	tr(to, E[centre])
		if(A[*to] == '0')
			dfs(*to, rank+1);
}

int main(){
	scanf("%d",&n);
	
	for(int i=0; i<n-1; i++){
		int u, v;
		
		scanf("%d %d",&u,&v);
		
		E[u].push_back(v);
		E[v].push_back(u);
	}
	
	for(int i=1; i<=n; i++)
		A[i] = '0';
	
	dfs(1, 'A');
	
	for(int i=1; i<=n; i++)
		printf("%c ",A[i]);
}
