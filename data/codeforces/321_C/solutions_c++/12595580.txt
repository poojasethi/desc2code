#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;
const int maxn = 1e5 + 5;
int n;
vector <int> v[maxn];
int ans[maxn];
int cnt[maxn][30];
bool ok = true;
bool vis[maxn];
void dfs(int node, int par)
{
	vis[node] = true;
	for (int i = 0; i < v[node].size(); i++)
	{
		if (!vis[v[node][i]])
			dfs(v[node][i], node);
	}

	int rank = -1;
	for (int i = 0; i < 26; i++)
	{
		if (!cnt[node][i])	rank = i;
		if (cnt[node][i] >= 2)	break;
	}
	if (rank == -1)
		ok = false;
	else
	{
		ans[node] = rank;
		cnt[node][rank]++;
		for (int i = 0; i <= rank; i++)
			cnt[par][i] += cnt[node][i];
	}

}
int main()
{
	//freopen("test.in", "r", stdin);
	scanf("%d", &n);
	for (int i = 1; i < n; i++)
	{
		int a, b;
		scanf("%d %d", &a, &b);
		v[a].push_back(b);
		v[b].push_back(a);
	}
	dfs(1, 0);
	int t = 30;
	for (int i = 1; i <= n; i++)
		t = min(t, ans[i]);
	if (!ok)
	{
		printf("Impossible!\n");
	}
	else
	{
		for (int i = 1; i <= n; i++)
			printf("%c ", ans[i] - t + 'A');
	}
	return 0;
}

	   					        	  		 		 	  	