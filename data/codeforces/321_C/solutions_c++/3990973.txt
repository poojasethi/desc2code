#include<iostream>
#include<algorithm>
#include<vector>
#include<cstdio>
#include<cstring>

using namespace std;

#define pb push_back
#define forI_(i,V,_) for(typeof(V.end())i=_;i!=V.end();++i)
#define forI(i,V) forI_(i,V,V.begin())

const int maxn=100010;
vector<int> V[maxn];
int s[maxn],d[maxn],ans[maxn];
bool cut[maxn];

int dfs(int x,int fa,int n){
  int p=0,t,_p;
  s[x]=1,d[x]=0;
  forI(i,V[x])
    if(t=*i,!cut[t]&&t!=fa){
      _p=dfs(t,x,n);
      if(!p||d[_p]<d[p])
        p=_p;
      s[x]+=s[t];
      d[x]=max(d[x],s[t]);
    }
  d[x]=max(d[x],n-s[x]);
  if(!p||d[x]<d[p])
    p=x;
  return p;
}

void sol(int x,int n,int c){
  int C=dfs(x,0,n);
  dfs(C,0,n);
  ans[C]=c;
  cut[C]=1;
  int t;
  forI(i,V[C])
    if(t=*i,!cut[t])
      sol(t,s[t],c+1);
}

int main(){
  int n,i,x,y;
  scanf("%d",&n);
  for(i=1;i<n;++i){
    scanf("%d%d",&x,&y);
    V[x].pb(y),V[y].pb(x);
  }
  sol(1,n,0);
  for(i=1;i<=n;++i)
    printf("%c ",ans[i]+'A');
  return 0;
}
