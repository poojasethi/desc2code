#include <algorithm>
#include <iostream>
#include <vector>
#define MAXN 100005
#define pb push_back

using namespace std;

int n, c[MAXN][26], res[MAXN], mark[MAXN];
vector<int> a[MAXN];
bool ok = true;

int dfs(int u)
{
  mark[u] = 1;
  for (int i = 0; ok && i < a[u].size(); i++)
    if (!mark[a[u][i]])
    {
      dfs(a[u][i]);
      for (int j = 0; ok && j < 26; j++) c[u][j] += c[a[u][i]][j];
    }
    
  int p = -1;
  for (int i = 0; ok && i < 26; i++)
  {  
    if (p < 0 && c[u][i] == 0) p = i;
    if (c[u][i] > 1) p = -1;
  }
  
  if (p < 0) 
    ok = false;  
  else 
  {
    res[u] = p;
    c[u][p] = 1;
    for (int i = 0; i < p; i++) c[u][i] = 0;
  }
}

main()
{
  cin >> n;
  for (int i = 1; i < n; i++)
  {
    int u, v;
    cin >> u >> v;
    a[u].pb(v);
    a[v].pb(u);
  }
  
  dfs(1);
  if (ok)
  {
    int A = *max_element(res + 1, res + n + 1);
    for (int i = 1; i <= n; i++) cout << char(65 + A - res[i]) << " ";
  }
  else
    cout << "Impossible";
    
  //system("pause");
}
