#include <cstdio>
using namespace std;

int n, i, x, y, len, zx, till[110000], sum[110000], go[210000], next[210000];
char se[110000];
bool used[110000];

void add(int x, int y) {
	next[++len] = till[x];
	till[x] = len;
	go[len] = y;
}

void dfs1(int k) {
	used[k] = true;
	sum[k] = 1;
	for (int i = till[k]; i; i = next[i])
		if (!used[go[i]])	dfs1(go[i]), sum[k] += sum[go[i]];
	used[k] = false;
}

void dfs_zx(int k, int s) {
	bool can = (s - sum[k]) <= s / 2;
	used[k] = true;
	for (int i = till[k]; i; i = next[i])
		if (!used[go[i]])	dfs_zx(go[i], s), can &= (sum[go[i]] <= s / 2);
	if (can)	zx = k;
	used[k] = false;
}

void dfs(int k, int t) {
	dfs1(k);
	dfs_zx(k, sum[k]);
	k = zx;
	se[k] = t + 'A';
	used[k] = true;
	for (int i = till[k]; i; i = next[i])
		if (!se[go[i]])	dfs(go[i], t + 1);
}

int main() {
	scanf("%d", &n);
	for (i = 1; i < n; i++) {
		scanf("%d%d", &x, &y);
		add(x, y);
		add(y, x);
	}
	dfs(1, 0);
	for (i = 1; i <= n; i++)	printf("%c ", se[i]);
}
