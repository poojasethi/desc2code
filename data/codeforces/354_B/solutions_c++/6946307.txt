#include <bits/stdc++.h>
using namespace std;
#define inf 1000
int N;
int dp[40][1<<20];
int vis[40][1<<20];
string str[20];
int calc(int diagonal,int mask)
{
	if(diagonal==2*N-2)
		return 0;
	int &Res = dp[diagonal][mask];
	if(vis[diagonal][mask]==-1)
	{
		vis[diagonal][mask] = 1;
		Res = (diagonal&1)?-inf:inf;
		for(int ch = 0;ch<26;ch++)
		{
			int Mask = 0;
			for(int row = 0,col = diagonal;row<N;row++,col--)
			{
				if(col<N&&(mask&(1<<row)))
				{
					if(col+1<N&&str[row][col+1]==ch)
						Mask|=(1<<row);
					if(row+1<N&&str[row+1][col]==ch)
						Mask|=(1<<(row+1));
				}
			}
			if(Mask)
			{
				if(diagonal&1)
				{
					Res = max(Res,calc(diagonal+1,Mask) + (ch ==0) - (ch==1));
				}
				else
					Res = min(Res,calc(diagonal+1,Mask) + (ch==0) - (ch==1));
			}
		}
	}
	return Res;
}
int main()
{
	cin>>N;
	for(int i = 0;i<N;i++)
	{
		cin>>str[i];
		for(int j = 0;j<N;j++)
		{
			str[i][j]-='a';
		}
	}
	memset(vis,-1,sizeof(dp));
	int res = calc(0,1) + (str[0][0]==0) - (str[0][0] == 1);
	if(res>0)
		cout<<"FIRST"<<endl;
	else if(res<0)
		cout<<"SECOND"<<endl;
	else
		cout<<"DRAW"<<endl;
	return 0;
}