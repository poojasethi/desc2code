#include <iostream>
#include<memory.h>
#include <map>
#include <list>
#include <string>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <vector>
#include <algorithm>
#include <stack>
#include <queue>
#include <cmath>
#include <set>
using namespace std;

/*
*/

map<pair<pair<int, int>,pair<int, int> >, int> dp;
vector<string> mp;
int sol(int i, int msk, int a, int b)
{
	int n = mp.size();
	int t = i%2;
	if (i == 2*n-2) return a-b;
	pair<pair<int, int>,pair<int, int> > st = make_pair(make_pair(i,msk), make_pair(a,b));
	if (dp.count(st)) return dp[st];
	int A[26]={0};
	for (int k = 0; k < n; k++)
	{
		int ki = i-k;
		if (ki >= n || ki < 0) continue;
		if (!(msk&(1<<k))) continue;
		int x, y;
		x = ki+1;
		y = k;
		if (x < n)
		{
			A[mp[x][y]-'a'] |= (1<<y);
		}
		
		x = ki;
		y = k+1;
		if (y < n)
		{
			A[mp[x][y]-'a'] |= (1<<y);
		}
	}
	int mx = -1000000;
	int mn = 1000000;
	for (int j = 0; j < 26; j++)
	{
		if (A[j] > 0)
		{
			int r = sol(i+1, A[j], a+(j==0), b + (j==1));
			mx = max(mx, r);
			mn = min(mn, r);
		}
	}
	if (i%2==1)
	{
		return dp[st] = mx;
	}
	else
	{
		return dp[st] = mn;
	}
}

int main()
{
	int n;
	cin>>n;
	mp = vector<string> (n);
	for (int i = 0; i < n; i++) cin>>mp[i];
	int r = sol(0, 1, mp[0][0]=='a', mp[0][0] == 'b');
	if (r > 0) cout<<"FIRST"<<endl;
	else if (r == 0) cout<<"DRAW"<<endl;
	else cout<<"SECOND"<<endl;
}