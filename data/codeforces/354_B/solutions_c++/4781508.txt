#include<cstdio>
#include<iostream>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<deque>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<numeric>
#include<set>
#include<map>
#include<numeric>

using namespace std;

int n;
char B[44][44];
int st[33][44];
int all[44];
int  dp[40][1<<20];
bool ck[40][1<<20];
int add[2][2]={{1,-1},{-1,1}};

int go(int turn, int mk) {
	if(turn==2*n-1) return 0;

	int &ret=dp[turn][mk];
	if(ck[turn][mk]) return ret;
	ck[turn][mk]=1,ret=-(1<<20);

	int nmk;
	if(turn<n)
		nmk=(mk|(mk<<1))&all[turn];
	else
		nmk=(mk|(mk>>1))&all[turn];
	if(turn==0) nmk=1;
	for(int c=0;c<26;++c) if(st[c][turn] & nmk) {
		ret=max(ret,(c<2?add[turn&1][c]:0)-go(turn+1,st[c][turn]&nmk));
	} return ret;
}

int main() {
#ifdef LOCAL
	freopen("input.txt","r",stdin);
#endif
	scanf("%d",&n);
	for(int i=0;i<n;++i) scanf("%s",B[i]);
	for(int t=0;t<2*n-1;++t) {
		if(t>=n) {
			for(int x=0;x<2*n-1-t;++x) all[t]|=(1<<x);
		}
		else {
			for(int x=0;x<=t;++x) all[t]|=(1<<x);
		}
	}
	for(int c=0;c<26;++c) for(int t=0;t<2*n-1;++t) {
		if(t>=n) {
			for(int x=0;x<2*n-1-t;++x) {
				if(B[n-1-x][t-n+1+x]==c+'a')
					st[c][t] |= (1<<x);
			}
		}
		else {
			for(int x=0;x<=t;++x) {
				if(B[t-x][x]==c+'a')
					st[c][t] |= (1<<x);	
			}
		}
	}
	int ans=go(0,0);
	if(ans>0) printf("FIRST");
	else if(ans<0) printf("SECOND");
	else printf("DRAW");
}