#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#define N 22
#define INF (1<<29)
using namespace std;
int a,b,c,d,e,f,g,h,i,j,k;
char w[N][N];
int F[N<<1][(1<<21)+2];
int go[N<<1][30];

int Dp(int x,int y,int now,int type)
{
    int ii,jj,kk;
    int R;
    if(F[x][y]!=INF) return F[x][y];
    if(type==1) R=INF;else R=-INF;
    for(ii=0;ii<26;ii++)
    {
        kk=go[x+1][ii] & (y|(y<<1));
        if(kk!=0)
        {
            if(type==1) R=min(R, Dp(x+1,kk,ii,type^1) );
            else R=max(R, Dp(x+1,kk,ii,type^1) );
        }
    }
    if(x==a*2-1) R=0;
    if(now==0) R++;
    if(now==1) R--;
    F[x][y]=R;
    return F[x][y];
}

int main()
{
    cin>>a;
    for(i=1;i<=a;i++) scanf("%s",w[i]+1);
    for(i=1;i<=a<<1;i++)
    {
        for(c=1;c<=a;c++)
        {
            d=i+1-c;
            if(d>=1 && d<=a) go[i][w[d][c]-'a']|=1<<c;
        }
    }
    for(i=0;i<=a<<1;i++)
        for(j=0;j<1<<a+1;j++)
            F[i][j]=INF;
    Dp(1,2,w[1][1]-'a',1);
    if(F[1][2]==0) cout<< "DRAW" <<endl;
    if(F[1][2]>0) cout<< "FIRST" <<endl;
    if(F[1][2]<0) cout<< "SECOND" <<endl;
    return 0;
}
