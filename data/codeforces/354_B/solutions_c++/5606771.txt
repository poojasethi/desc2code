#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

#define MAXN 20

int n;
char M[MAXN][MAXN + 1];
bool done[2 * MAXN][(1 << MAXN)];
int memo[2 * MAXN][(1 << MAXN)];

int solve(int diag, int mask){
    if(diag == 2 * n - 2) return 0;
    
    int &ret = memo[diag][mask];
    
    if(!done[diag][mask]){
        done[diag][mask] = true;
        int p = (diag & 1);
        ret = (p == 0? 100 : -100);
        
        for(char to = 'a';to <= 'z';++to){
            int mask2 = 0;
            
            for(int r = 0,c = diag;r < n;++r,--c){
                if(c < n && (mask & (1 << r))){
                    if(r + 1 < n && M[r + 1][c] == to) mask2 |= (1 << r + 1);
                    if(c + 1 < n && M[r][c + 1] == to) mask2 |= (1 << r);
                }
            }
            
            if(mask2){
                int aux = solve(diag + 1,mask2);
                
                if(to == 'a') ++aux;
                else if(to == 'b') --aux;
                
                if(p == 0) ret = min(ret,aux);
                else ret = max(ret,aux);
            }
        }
    }
    
    return ret;
}

int main(){
    scanf("%d",&n);
    
    for(int i = 0;i < n;++i)
        scanf("%s",M[i]);
    
    memset(done,false,sizeof done);
    
    int ret = solve(0,1);
    
    if(M[0][0] == 'a') ++ret;
    else if(M[0][0] == 'b') --ret;
    
    if(ret == 0) puts("DRAW");
    else if(ret > 0) puts("FIRST");
    else puts("SECOND");
    
    return 0;
}
