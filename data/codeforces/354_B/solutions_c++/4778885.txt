#include <bits/stdc++.h>
using namespace std;

const int INF = 0x3f3f3f3f;
typedef long long ll;
typedef pair<int,int> pii;
#define A first
#define B second

const int MAXN = 21;
int N;
string T[MAXN];
int best[MAXN*2][1<<MAXN];

int add(char c)
{
    if (c == 'a')
        return 1;
    if (c == 'b')
        return -1;
    return 0;
}

int solve(int move, int can)
{
    if (move == 2*N-2) return 0;

    int &ret = best[move][can];
    if (ret != INF) return ret;

    if (move&1) ret = -INF;
    for (char nxt='a'; nxt<='z'; nxt++)
    {
        int ncan = 0;
        for (int i=0; i<N; i++)
        {
            int j = move+1-i;
            if (j < 0 || j >= N) continue;
            
            if (T[i][j] == nxt && ((can & (1 << i)) || (can & (1 << (i-1)))))
                ncan |= (1 << i);
        }
        if (ncan)
        {
            if (move&1)
                ret = max(ret, add(nxt) + solve(move+1, ncan));
            else
                ret = min(ret, add(nxt) + solve(move+1, ncan));
        }
    }
    //cout << "solve " << move << ", " << can << ": " << ret << endl;
    return ret;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    memset(best, INF, sizeof(best));
    cin >> N;
    for (int i=0; i<N; i++)
        cin >> T[i];
    int end = add(T[0][0]) + solve(0, 1);
    if (end > 0)
        cout << "FIRST\n";
    else if (end == 0)
        cout << "DRAW\n";
    else
        cout << "SECOND\n";
    return 0;
}
