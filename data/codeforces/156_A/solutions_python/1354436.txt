#!/usr/bin/env python

def check(s1, s2):
    count = abs(len(s1) - len(s2))
    for i in range(min(len(s2), len(s1))):
        if s1[i] != s2[i]:
            count += 1
    return count

def find_best(s1, s2):
    l2 = len(s2)
    s1 = "|" * l2 + s1 + "|" * l2
    l1 = len(s1)

    count = l2
    #for seek in range(min(l2, l1)):
    #    #print "Checking %s %s %d" % (s1[:seek+1], s2[l2 - seek - 1:], l2 - seek - 1)
    #    n_count = check(s1[:seek+1], s2[seek:]) + (l2 - seek - 1)
    #    if n_count < count:
    #        count = n_count
    #    #print "Checking %s %s %d" % (s1[l1 - seek - 1:], s2[:seek+1], l2 - seek - 1)
    #    n_count = check(s1[l1 - seek - 1:], s2[:seek+1]) + (l2 - seek - 1)
    #    if n_count < count:
    #        count = n_count

    for seek in range(l1 - l2 + 1):
        n_count = check(s1[seek:seek + l2], s2)
        if n_count < count:
            count = n_count

    return count

if __name__ == "__main__":
    s1 = raw_input().strip()
    s2 = raw_input().strip()

    print find_best(s1, s2)
