#include <string>
#include <set>
#include <map>
#include <queue>
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
#define pb push_back
const int maxn=100010;
vector <int> bar[2*maxn], ele[2*maxn], fom[maxn], dog[maxn], v;
int a[maxn], ulti[maxn], r;
void bounced(int i, int j){bar[r].pb(i);ele[r].pb(j);}
int main()
{
    //freopen("AC.in","r",stdin);
    //freopen("AC.out","w",stdout);      
    int i, j, k, n, nd, nf, t;
    for(scanf("%d", &n), i=0; i<n; scanf("%d", &a[i]), a[i]--, i++);
    for(nd=0, nf=0, r=0, i=0; i<n; i++)
        if(!ulti[i])
        {
            v.clear();
            for(k=0, j=i; !ulti[j]; ulti[j]=1, v.pb(j), j=a[j], k++);
            if(k==1) continue;
            for(t=0; k>5; k-=4)
            {
                bounced(v[t], a[v[t]]); t++;
                bounced(v[t], a[v[t]]); t++;
                bounced(v[t], a[v[t]]); t++;
                bounced(v[t], a[v[t]]); t++;
                bounced(v[t], v[t-4]); j=a[v[t]]; v[t]=v[t-4]; a[v[t]]=j;
                r++;
            }
            if(k==5 || k==4)
            {
                for(j=0; j<k; bounced(v[t], a[v[t]]), t++, j++);
                r++;
            }
            else if(k==2)
            {
                for(j=0; j<k; dog[nd].pb(v[t]), t++, j++);
                nd++;
            }
            else
            {
                for(j=0; j<k; fom[nf].pb(v[t]), t++, j++);
                nf++;
            }
        }
    for(; nf && nd; )
    {
        nf--; nd--;
        for(j=0; j<2; bounced(dog[nd][j], a[dog[nd][j]]), j++);
        for(j=0; j<3; bounced(fom[nf][j], a[fom[nf][j]]), j++);
        r++;
    }
    for(; nf>=3; )
    {
        nf--;
        for(j=0; j<3; bounced(fom[nf][j], a[fom[nf][j]]), j++);
        nf--;
        bounced(fom[nf][0], a[fom[nf][0]]);
        bounced(a[fom[nf][0]], fom[nf][0]);
        r++;
        bounced(fom[nf][2], a[fom[nf][2]]);
        bounced(a[fom[nf][2]], fom[nf][2]);
        nf--;
        for(j=0; j<3; bounced(fom[nf][j], a[fom[nf][j]]), j++);
        r++;
    }
    for(; nf; )
    {
        nf--;
        for(j=0; j<3; bounced(fom[nf][j], a[fom[nf][j]]), j++);
        r++;
    }
    for(; nd; )
    {
        nd--;
        for(j=0; j<2; bounced(dog[nd][j], a[dog[nd][j]]), j++);
        if(nd)
        {
            nd--;
            for(j=0; j<2; bounced(dog[nd][j], a[dog[nd][j]]), j++);
        }
        r++;
    }
    for(printf("%d\n", r), i=0; i<r; i++)
    {
        printf("%d\n", bar[i].size());
        for(j=0; j<bar[i].size(); printf("%d ", bar[i][j]+1), j++);
        printf("\n");
        for(j=0; j<ele[i].size(); printf("%d ", ele[i][j]+1), j++);
        printf("\n");
    }
    return 0;
}
