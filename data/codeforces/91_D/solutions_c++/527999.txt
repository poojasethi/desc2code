#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())

#define MAX 100005
#define UNION_N 100005
int parent[UNION_N];
void init(){
	rep(i,UNION_N) parent[i]=i;
}
int find(int a){
	if(parent[a]==a) return a;
	return parent[a]=find(parent[a]);
}
void uni(int a,int b){
	parent[find(a)]=find(b);
	return ;
}
map<int,int> mp;
vector<vector<int> > from;
vector<vector<int> > to;
vector< vector<int> > vec[5];
vector<vector<int> > v;
int a[MAX];
int main(){
	li n;
	cin>>n;
	init();
	rep(i,n) cin>>a[i];
	rep(i,n) a[i]--;
	rep(i,n) uni(i,a[i]);
	rep(i,n){
		if(mp.find(find(i))==mp.end()){
			mp[find(i)]=sz(v);
			vector<int> vtmp;
			v.pb(vtmp);
		}
		v[mp[find(i)]].pb(i);
	}
	rep(i,sz(v))if(sz(v[i])>1){
//cout<<sz(v[i])<<","<<find(v[i][0])<<endl;
		li cnt=0;
		li pos=v[i][0];
#define rem (sz(v[i])-cnt)
		while(rem>=4){
			int r=min(rem,5ll);
			vector<int> f(r),t(r);
			cnt+=4;
			rep(j,r){
				f[j]=t[(j+r-1)%r]=pos;
				pos=a[pos];
			}
			from.pb(f); to.pb(t);
			a[v[i][0]]=pos;
			pos=v[i][0];
		}
		
		if(rem==3 || rem==2){
			vector<int> vtmp;
			int pos=v[i][0];
			rep(j,rem){
				vtmp.pb(pos);
				pos=a[pos];
			}
			vec[rem].pb(vtmp);
		}
	}
	
	rep(i,min(sz(vec[2]),sz(vec[3]))){
		vector<int> f(5),t(5);
		rep(j,2) f[j]=t[(j+1)%2]=vec[2][i][j];
		rep(j,3) f[2+j]=t[(2+j)%3+2]=vec[3][i][j];
		from.pb(f); to.pb(t);
	}
	
	if(sz(vec[3])<sz(vec[2])){
		for(int pos=sz(vec[3]);pos<sz(vec[2]);pos+=2){
			int tmp=(pos+1<sz(vec[2]))?4:2;
			vector<int> t(tmp),f(tmp);
			rep(i,2) f[i]=t[(i+1)%2]=vec[2][pos][i];
			if(pos+1<sz(vec[2])) rep(i,2) f[i+2]=t[(i+1)%2+2]=vec[2][pos+1][i];
			to.pb(t); from.pb(f);
		}
	}else{
		for(int pos=sz(vec[2]);pos<sz(vec[3]);pos+=3){
			if(sz(vec[3])<=pos+2){
				vector<int> t(3),f(3);
				rep(i,3) f[i]=t[(i+2)%3]=vec[3][pos][i];
				to.pb(t); from.pb(f);
				vector<int> t1(3),f1(3);
				if(pos+2==sz(vec[3])){
					rep(i,3) f1[i]=t1[(i+2)%3]=vec[3][pos+1][i];
					to.pb(t1); from.pb(f1);
				}
			}else{
				vector<int> t0(5),f0(5);
				vector<int> t1(5),f1(5);
				rep(i,3) f0[i]=t0[(i+2)%3]=vec[3][pos][i];
				rep(i,3) f1[i]=t1[(i+2)%3]=vec[3][pos+1][i];
				f0[3]=t0[4]=vec[3][pos+2][0];
				f0[4]=t0[3]=vec[3][pos+2][1];
				f1[3]=t1[4]=vec[3][pos+2][0];
				f1[4]=t1[3]=vec[3][pos+2][2];
				to.pb(t0); to.pb(t1);
				from.pb(f0); from.pb(f1);
			}
		}
	}
	cout<<sz(from)<<endl;
	rep(i,sz(from)){
		cout<<sz(from[i])<<endl;
		vector<pair<int,int> > tmp;
		rep(j,sz(from[i])) tmp.pb(make_pair(from[i][j],to[i][j]));
		sort(tmp.begin(),tmp.end());
		rep(j,sz(from[i])) cout<<1+tmp[j].first<<" ";
		cout<<endl;
		rep(j,sz(from[i])) cout<<1+tmp[j].second<<" ";
		cout<<endl;
	}
}
