#include<cstdio>
const int tc=100005;
bool p[tc];
struct loop{
    int cnt,pos;
} q[tc];
int cnt[4],b[6],c[6],a[tc],r[tc];
void getans(int s,int t){
    int i;
    printf("%d\n",t);
    b[0]=s;
    b[1]=s=a[s];
    for (i=2;i<=t;i++) b[i]=s=a[s];
    
    for (i=1;i<=t;i++) printf(i==t?"%d\n":"%d ",r[b[i]]);
    for (i=2;i<=t;i++) printf("%d ",r[b[i]]); printf("%d\n",r[b[1]]);
    
    r[b[t]]=r[b[1]];
    a[b[0]]=b[t];
}
void getans(int s1,int t1,int s2,int t2){
    int i;
    printf("%d\n",t1+t2);
    b[0]=s1;
    b[1]=s1=a[s1];
    for (i=2;i<=t1;i++) b[i]=s1=a[s1];
    c[0]=s2;
    c[1]=s2=a[s2];
    for (i=2;i<=t2;i++) c[i]=s2=a[s2];
    
    for (i=1;i<=t1;i++) printf("%d ",r[b[i]]);
    for (i=1;i<=t2;i++) printf(i==t2?"%d\n":"%d ",r[c[i]]);
    for (i=2;i<=t1;i++) printf("%d ",r[b[i]]); printf("%d ",r[b[1]]);
    for (i=2;i<=t2;i++) printf("%d ",r[c[i]]); printf("%d\n",r[c[1]]);
    
    r[b[t1]]=r[b[1]];
    r[c[t2]]=r[c[1]];
    a[b[0]]=b[t1];
    a[c[0]]=c[t2];
}
int main(){
//  freopen("91d.in","r",stdin);
//  freopen("91d.out","w",stdout);
    int n,i,j,t=0,t1,t2,t3,ans=0;
    scanf("%d",&n);
    cnt[0]=cnt[1]=cnt[2]=cnt[3]=0;
    for (i=1;i<=n;i++) r[scanf("%d",a+i),a[i]]=i,p[i]=true;
    for (i=1;i<=n;i++) if (p[i] && i!=a[i]){
        for (j=-1;p[i];i=a[i],j++) p[i]=false;
        q[t].cnt=j,q[t].pos=i;
        t++;
    }
    for (i=0;i<t;i++) cnt[q[i].cnt%4]++,ans+=q[i].cnt/4;
    ans+=cnt[3];
    if (cnt[1]<cnt[2]){
        ans+=cnt[1];
        ans+=(cnt[2]-cnt[1])/3*2+(cnt[2]-cnt[1])%3;
    } else{
        ans+=cnt[2];
        ans+=(cnt[1]-cnt[2]+1)/2;
    }
    printf("%d\n",ans);
    
    for (i=0;i<t;i++){
        for (;q[i].cnt>=4;q[i].cnt-=4)
            getans(q[i].pos,5);
        if (q[i].cnt==3)
            getans(q[i].pos,4);
    }
    for (t1=t2=t;t1>=0 && t2>=0;){
        for (t1--;t1>=0 && q[t1].cnt!=1;t1--);
        for (t2--;t2>=0 && q[t2].cnt!=2;t2--);
        if (t1>=0 && t2>=0)
            getans(q[t1].pos,2,q[t2].pos,3);
    }
    if (t1>=0){
        for (;t1>=0;){
            for (;t1>=0 && q[t1].cnt!=1;t1--);
            for (t2=t1-1;t2>=0 && q[t2].cnt!=1;t2--);
            if (t2>=0)
                getans(q[t1].pos,2,q[t2].pos,2);
            else if (t1>=0)
                getans(q[t1].pos,2);
            t1=t2-1;
        }
    } else{
        for (;t2>=0;){
            for (;t2>=0 && q[t2].cnt!=2;t2--);
            for (t1=t2-1;t1>=0 && q[t1].cnt!=2;t1--);
            for (t3=t1-1;t3>=0 && q[t3].cnt!=2;t3--);
            if (t3>=0){
                getans(q[t1].pos,3,q[t2].pos,2);
                getans(q[t3].pos,3,q[t2].pos,2);
            } else if (t2>=0){
                getans(q[t2].pos,3);
                if (t1>=0)
                    getans(q[t1].pos,3);
            }
            t2=t3-1;
        }
    }
    return 0;
}
