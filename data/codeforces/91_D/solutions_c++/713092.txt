#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <bitset>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li       	long long int
#define rep(i,to)	for(li i=0;i<((li)(to));i++)
#define pb       	push_back
#define sz(v)    	((li)v.size())
#define bit(n)   	(1ll<<(li)(n))

#define MAX 100005
li used[MAX],parent[MAX];
vector<vector<li> > vec[MAX];
vector<vector<li> > from;
vector<vector<li> > to;

int main(){
	li n;
	cin>>n;
	rep(i,n) cin>>parent[i];
	rep(i,n) parent[i]--;
	rep(i,n) used[i]=false;
	rep(i,n)if(!used[i]){
		vector<li> v;
		li pos=i;
		while(!used[pos]){
			v.pb(pos);
			used[pos]=true;
			pos=parent[pos];
		}
		while(4<=sz(v)){
			vector<li> f,t;
			for(li j=sz(v)-min(sz(v),5ll);j<sz(v);j++) f.pb(v[j]);
			rep(j,sz(f)) t.pb(f[(j+1)%sz(f)]);
			from.pb(f);
			to.pb(t);
			rep(j,4) v.pop_back();
		}
		if(2<=sz(v)) vec[sz(v)].pb(v);
	}
	while(sz(vec[2])<sz(vec[3])){
		vector<li> f,t;
		rep(i,3) f.pb(vec[3].back()[i]);
		rep(i,3) t.pb(vec[3].back()[(i+1)%3]);
		if(1<sz(vec[3])) rep(i,2) f.pb(vec[3][sz(vec[3])-2][i]);
		if(1<sz(vec[3])) rep(i,2) t.pb(vec[3][sz(vec[3])-2][1-i]);
		from.pb(f);
		to.pb(t);
		vec[3].pop_back();
		if(sz(vec[3])){
			vector<li> vv;
			vv.pb(vec[3].back()[0]);
			vv.pb(vec[3].back()[2]);
			vec[3].pop_back();
			vec[2].pb(vv);
		}
	}
	while(sz(vec[2]) && sz(vec[3])){
		vector<li> f,t;
		rep(i,2) f.pb(vec[2].back()[i]);
		rep(i,3) f.pb(vec[3].back()[i]);
		rep(i,2) t.pb(vec[2].back()[(i+1)%2]);
		rep(i,3) t.pb(vec[3].back()[(i+1)%3]);
		from.pb(f);
		to.pb(t);
		vec[2].pop_back();
		vec[3].pop_back();
	}
	while(sz(vec[2])){
		vector<li> f,t;
		rep(i,2) f.pb(vec[2].back()[i]);
		rep(i,2) t.pb(vec[2].back()[1-i]);
		vec[2].pop_back();
		if(sz(vec[2])) rep(i,2) f.pb(vec[2].back()[i]);
		if(sz(vec[2])) rep(i,2) t.pb(vec[2].back()[1-i]);
		if(sz(vec[2])) vec[2].pop_back();
		from.pb(f);
		to.pb(t);
	}
	cout<<sz(from)<<endl;
	rep(i,sz(from)){
		cout<<sz(from[i])<<endl;
		rep(j,sz(from[i])) cout<<from[i][j]+1<<" "; cout<<endl;
		rep(j,sz(to[i])) cout<<to[i][j]+1<<" "; cout<<endl;
	}
}
