#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 100010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,t,an,re,s1,s2,s;
int q[N],f[N],g[N];

struct ww {
	int len,a[10],b[10];
	inline void insert(int c[10],int n) {
		len=n;
		int i;
		For(i,1,n) a[i]=c[i],b[i]=q[c[i]];
	}
	inline void ping(const ww &A,const ww &B) {
		int i;
		For(i,1,A.len) a[++len]=A.a[i],b[len]=A.b[i];
		For(i,1,B.len) a[++len]=B.a[i],b[len]=B.b[i];
	}
	inline void print() {
		printf("%d\n",len);
		int i;
		For(i,1,len) printf("%d ",a[i]); printf("\n");
		For(i,1,len) printf("%d ",b[i]); printf("\n");
	}
} ans[N],a1[N],a2[N];

inline void into(int x) {
	int i,z=0,h[10]={};
	h[++z]=g[1];
	For(i,x,s) h[++z]=g[i];
	if (z==2) a1[++s1].insert(h,z);
	else if (z==3) a2[++s2].insert(h,z);
	else ans[++re].insert(h,z);
}
inline void work(int x) {
	int i,z=0,h[10]={};
	h[++z]=g[1];
	For(i,0,3) h[++z]=g[i+x];
	int A=q[h[5]];
	q[h[5]]=h[1];
	ans[++re].insert(h,z);
	q[h[1]]=A;
}
inline void Do(ww A,ww B,ww C) {
	int i;
	ans[++re].ping(A,B);
	ans[re].b[5]=ans[re].b[6];
	ans[re].len=5;
	ans[++re].ping(C,B);
	ans[re].b[4]=ans[re].b[5];
	ans[re].a[5]=ans[re].a[6];
	ans[re].b[5]=ans[re].b[6];
	ans[re].len=5;
}
int main() {
	scanf("%d",&n);
	For(i,1,n) scanf("%d",&q[i]);
	For(i,1,n) if (!f[i]) {
		g[s=1]=i;
		for (k=q[i];k!=i;k=q[k]) g[++s]=k,f[k]=1;
		if (s==1) continue;
		for (j=2;;) {
			if (s-j<=3) {
				into(j);
				break;
			}
			work(j);
			j+=4;
		}
	}
	for (;s1&&s2;) {
		ans[++re].ping(a1[s1],a2[s2]);
		s1--,s2--;
	}
	for (i=s2;i>2;i-=3) Do(a2[i],a2[i-1],a2[i-2]);
	s2=i;
	For(i,1,s2) ans[++re]=a2[i];
	for (i=s1;i>0;i-=2) ans[++re].ping(a1[i],a1[i-1]);
	
	printf("%d\n",re);
	For(i,1,re) ans[i].print();
	return 0;
}
