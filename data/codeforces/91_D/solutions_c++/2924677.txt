#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
typedef long long LL;
inline int   read()
{
    int x = 0;  char ch = getchar(); bool positive = 1;
    for (; ch < '0' || ch > '9'; ch = getchar())  if (ch == '-')  positive = 0;
    for (; ch >= '0' && ch <= '9'; ch = getchar())    x = x * 10 + ch - '0';
    return positive ? x : -x;
}

int N, next[100005];
vector < vector< pair<int, int> > >	ans, rest0, rest1;
vector< pair<int, int> > A;

inline void	addAns(vector< pair<int, int> > A, vector< pair<int, int> > B)
{
	for (int i = 0; i < B.size(); ++ i)
		A.push_back(B[i]);
	ans.push_back(A);
}

int main()
{
	#ifndef ONLINE_JUDGE
	freopen("a.in", "r", stdin);
	freopen("a.out", "w", stdout);
	#endif
	
	N = read();
	for (int i = 1; i <= N; ++ i)	next[i] = read();
	for (int i = 1; i <= N; ++ i)
		while (next[i] != i)
		{
			A.clear();
			A.push_back(make_pair(i, 0));
			for (int j = next[i]; j != i && A.size() < 5; j = next[j])
				A.push_back(make_pair(j, 0));
			int L = A.size();
			for (int j = 0; j < L; ++ j)	A[j].second = A[(j + 1) % L].first;
			next[A[0].first] = next[A[L - 1].first];
			for (int j = 1; j < L; ++ j)	next[A[j].first] = A[j].first;
			if (L >= 4)	ans.push_back(A);
			else	if (L == 3)	rest0.push_back(A);
			else	if (L == 2)	rest1.push_back(A);
		}
	
	for (int i = 0, j = 0; i < rest0.size() || j < rest1.size(); )
	{
		if (i < rest0.size() && j < rest1.size())
			addAns(rest0[i], rest1[j]), ++ i, ++ j;
		else	if (j < rest1.size())
			if (j + 1 < rest1.size())
				addAns(rest1[j], rest1[j + 1]), j += 2;
			else
				ans.push_back(rest1[j]), ++ j;
		else
			if (i + 2 < rest0.size())
			{
				A = rest0[i]; A.pop_back();
				A[1].second = A[0].first;
				rest1.push_back(A);
				A[0].second = A[1].first = rest0[i][2].first;
				rest1.push_back(A);
				++ i;
			}
			else	ans.push_back(rest0[i]), ++ i;
	}
	
	int n = ans.size();
	printf("%d\n", n);
	for (int i = 0; i < n; ++ i)
	{
		int m = ans[i].size();
		printf("%d\n", m);
		for (int j = 0; j < m; ++ j)	printf("%d%c", ans[i][j].first, j < m - 1 ? ' ' : '\n');
		for (int j = 0; j < m; ++ j)	printf("%d%c", ans[i][j].second, j < m - 1 ? ' ' : '\n');
	}
	
	return 0;
}