#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li          long long int
#define rep(i,to)   for(li i=0;i<((li)(to));i++)
#define pb          push_back
#define sz(v)       ((li)v.size())
#define bit(n)      (1ll<<(li)(n))


#define MAX 100005
li a[MAX];
li used[MAX];
vector<vector<li> > vec[5];
vector<vector<li> > ans;
vector<vector<li> > rev;
int main(){
    li n;
    cin>>n;
    rep(i,n) cin>>a[i];
    rep(i,n) a[i]--;
    memset(used,0,sizeof(used));
    rep(i,n)if(!used[i]){
        vector<li> v;
        li pos=i;
        do{
            v.pb(pos);
            used[pos]=true;
            pos=a[pos];
        }while(pos!=i);
        while(4<=sz(v)){
            vector<li> V;
            while(sz(v) && sz(V)<5){
                V.pb(v.back());
                v.pop_back();
            }
            ans.pb(V);
            rep(i,sz(V)-1) swap(V[i],V[i+1]);
            rev.pb(V);
            v.pb(ans.back().back());
        }
        if(sz(v)==2 || sz(v)==3) vec[sz(v)].pb(v);
    }
    while(sz(vec[2])<sz(vec[3])){
        vector<li> v,rv;
        rep(i,3) v.pb(vec[3].back()[i]);
        rep(i,3) rv.pb(vec[3].back()[(i+1)%3]);
        vec[3].pop_back();
        if(sz(vec[3])){
            v.pb(vec[3].back()[2]); v.pb(vec[3].back()[1]);
            rv.pb(vec[3].back()[1]); rv.pb(vec[3].back()[2]);
            vec[3].back().pop_back(); vec[3].back().pop_back();
            vec[3].back().pb(v.back());
            vec[2].pb(vec[3].back());
            vec[3].pop_back();
        }
        ans.pb(rv);
        rev.pb(v);
    }
    while(sz(vec[3])){
        vector<li> v,rv;
        rep(i,3) v.pb(vec[3].back()[(i+1)%3]);
        rep(i,3) rv.pb(vec[3].back()[i]);
        rep(i,2) v.pb(vec[2].back()[i]);
        rep(i,2) rv.pb(vec[2].back()[(i+1)%2]);
        vec[3].pop_back();
        vec[2].pop_back();
        ans.pb(v);
        rev.pb(rv);
    }
    while(sz(vec[2])){
        vector<li> v,rv;
        rep(i,2) v.pb(vec[2].back()[i]);
        rep(i,2) rv.pb(vec[2].back()[1-i]);
        vec[2].pop_back();
        if(sz(vec[2])){
            rep(i,2) v.pb(vec[2].back()[i]);
            rep(i,2) rv.pb(vec[2].back()[1-i]);
            vec[2].pop_back();
        }
        ans.pb(v);
        rev.pb(rv);
    }
    cout<<sz(ans)<<endl;
    rep(i,sz(ans)){
        cout<<sz(ans[i])<<endl;
        rep(j,sz(ans[i])) cout<<rev[i][j]+1<<" "; cout<<endl;
        rep(j,sz(rev[i])) cout<<ans[i][j]+1<<" "; cout<<endl;
    }
}