#include <vector>
#include <cstdio>
#include <algorithm>
#include <queue>
#include <iostream>
#include <string>
#include <cstring>
#define sz(a) int((a).size())
#define pb push_back
#define rep(i,j,k) for (int i=(j); i<=(k); i++)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define online
using namespace std;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
typedef long long LL;

#ifdef online
const int maxn=110000;
#else
const int maxn=110;
#endif

vi pos;
vvi as[4],ans1,ans2;
int n,m;
bool vis[maxn];

int main(){
    #ifndef online
            freopen("D.in","r",stdin);
            freopen("D.out","w",stdout);
    #endif

    cin>>n;
    
    rep(i,0,n-1){
        int x;
        scanf("%d",&x);
        pos.pb(x-1);
    }
    
    memset(vis,0,sizeof(vis));
    rep(i,0,n-1)if (!vis[i]){
        vi a; int x=i;
        do{
            a.pb(x);        
            vis[x]=1;            
            x=pos[x];
        }while(x!=i);
        //tr(a,i) cout<<*i<<" ";
        while ((m=a.size())>3){
            vi tmp1,tmp2;
            int t=min(5,m);
            rep(j,m-t,m-1) tmp1.pb(a[j]);
            rep(j,m-t,m-1) tmp2.pb(a[ (j==m-1)?m-t:j+1 ]);            
            ans1.pb(tmp1);
            ans2.pb(tmp2);
            rep(j,1,t-1) a.pop_back();
        }
        if (a.size()>1) as[a.size()].pb(a);
    }
    
    while (as[2].size()<as[3].size()){
        vi tmp1,tmp2;  
        rep(j,0,2) tmp1.pb(as[3].back()[j]);
        rep(j,0,2) tmp2.pb(as[3].back()[(j+1)%3]);
        as[3].pop_back();
        if (as[3].size()){
            rep(j,1,2) tmp1.pb(as[3].back()[j]);    
            rep(j,1,2) tmp2.pb(as[3].back()[3-j]);
            vi t;
            t.pb(as[3].back()[0]); t.pb(as[3].back()[1]);
            as[2].pb(t);
            as[3].pop_back();
        }
        ans1.pb(tmp1);
        ans2.pb(tmp2);
    }
    
    while (as[3].size()){
        vi tmp1, tmp2;
        rep(j,0,1) tmp1.pb(as[2].back()[j]),tmp2.pb(as[2].back()[1-j]);
        rep(j,0,2) tmp1.pb(as[3].back()[j]),tmp2.pb(as[3].back()[(j+1)%3]);
        as[2].pop_back();
        as[3].pop_back();
        ans1.pb(tmp1);
        ans2.pb(tmp2);
    }
    
    while (as[2].size()){
        vi tmp1, tmp2;
        rep(j,0,1) tmp1.pb(as[2].back()[j]),tmp2.pb(as[2].back()[1-j]);
        as[2].pop_back();
        if (as[2].size()!=0){
            rep(j,0,1) tmp1.pb(as[2].back()[j]),tmp2.pb(as[2].back()[1-j]);
            as[2].pop_back();
        }
        ans1.pb(tmp1);
        ans2.pb(tmp2);    
    }
    
    cout<<ans1.size()<<endl;
    int t=(ans1.size())-1;
    rep(i,0,t){
        printf("%d\n",ans1[i].size());
        rep(j,0,ans1[i].size()-1)  printf("%d ",ans1[i][j]+1);
        cout<<endl;
        rep(j,0,ans1[i].size()-1) printf("%d ",ans2[i][j]+1);
        cout<<endl;      
    }

    return 0;
}
