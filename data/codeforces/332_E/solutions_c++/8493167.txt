#include <cstdio>
#include <algorithm>
#include <cstring>

using namespace std;

char p[2000020], s[440], ans[4040], cur[4040];
int kn, pn, sn, found;

void update(char *cur) {
	bool better = 0;
	for (int i = 0; i < kn; ++i)
		if (cur[i] != ans[i]) {
			better = (cur[i] < ans[i]);
			break;
		}
	if (!found) better = found = 1;
	if (better) memcpy(ans, cur, sizeof(ans));
}
bool go(int i, int j, int c, int step) {
	for (int t = 0; t < step; ++t)
		if (p[i + kn * t] != s[j + c * t]) return 0;
	return 1;
}
int main() {
	gets(p), gets(s), scanf("%d", &kn);
	pn = strlen(p);
	sn = strlen(s);

	for (int c = 1; c <= sn; ++c) {
		if (c * (pn / kn) > sn) continue;
		if (c * (pn / kn + 1) < sn) continue;
		int now = c - 1;
		cur[kn] = 0;
		for (int i = kn - 1; i >= 0; --i) {
			if (now >= 0 && go(i, now, c, max(sn / c + (sn % c > 0), pn / kn + (pn % kn > 0)))) {
				cur[i] = '1';
				--now;
			} else {
				cur[i] = '0';
			}
		}
		if (now < 0)
			update(cur);
	}
	if (!found) printf("0\n");
	else ans[kn] = 0, printf("%s\n", ans);
}
