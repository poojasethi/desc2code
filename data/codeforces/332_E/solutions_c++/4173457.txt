#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<string>
#include<iostream>
using namespace std;
#define mem(a,b) memset(a,b,sizeof(a))
#define pb push_back
typedef long long ll;

const int N = 1100000;

char p[N];
char s[210];
int sl;
int k;
int m;
int x;

int q[2100];
int gao(int n1) {
	if(n1*m>sl) return 0;
	int left=sl-n1*m;
	if(left>x) return 0;
	if(left>n1) return 0;
	int right=n1-left;
	mem(q,0);
	int cnt=0;
	for(int i=k-1;i>=0;i--) {
		if(cnt==right && i>=x) continue;
		if(cnt==n1) continue;
		int up=(i<x?m+1:m);
		int j=i;
		int l=n1-cnt-1;
		int ok=1;
		for(int I=0;ok && I<up;I++) {
			if(p[j]!=s[l]) ok=0;
			j+=k;
			l+=n1;
		}
		if(ok) q[i]=1,cnt++;
	}
	return cnt==n1;
}

int ans[2100];
void chkans() {
	for(int i=0;i<k;i++) {
		if(ans[i]>q[i]) {
			memcpy(ans,q,sizeof(ans));
			return;
		} else if(ans[i]<q[i]) {
			return;
		}
	}
}

int main()
{
	gets(p);
	gets(s);
	scanf("%d",&k);
	int pl=strlen(p);
	sl=strlen(s);
	m=pl/k;
	x=pl%k;
	for(int i=0;i<k;i++) ans[i]=1;
	int has=0;
	for(int num=1;num<=k;num++) {
		if(gao(num)) chkans(),has=1;
	}
	if(!has) {
		puts("0");
		return 0;
	}
	for(int i=0;i<k;i++) printf("%1d",ans[i]);
	puts("");

    return 0;
}
