#include <cstdio>
#include <cstring>
using namespace std;

const int N = 2e6 + 7;

int a[N], b[N], n, m, k;
int ans[N], now[N], fac[N];

void rd(int *f)
{
	char c; while(c=getchar(), c<32);
	f[f[0]=1]=c; while(c=getchar(), c>=32) f[++f[0]]=c;
}

int main()
{
	rd(a), n=a[0], rd(b), m=b[0], scanf("%d", &k);
	int most = (n-1) / k + 1;
	int mini = n / k;
	
	for(int i=0; i<=k; i++)
	{
		if(i*most < m || i*mini > m) continue;
		
		int cur = i;
		for(int j=1; j<=k; j++) now[j] = 0;
		
		fac[0] = 0; for(int j=i; j<=m; j+=i) fac[++fac[0]] = b[j];
		
		for(int j=k; j>=0; j--)
		{
			int ok(1), t(j);
			for(int p=1; p<=fac[0]; p++, t+=k) ok &= (fac[p]==a[t]);
			if(t<=n) continue;
			
			if(ok)
			{
				now[j]=1, cur--, fac[0]=0;
				if(!cur) break; for(int j=cur; j<=m; j+=i) fac[++fac[0]] = b[j];
			}
		}
		
		if(cur) continue;
		//printf("%d\n", i);
		if(!ans[0]) { for(int j=1; j<=k; j++) ans[j]=now[j]; ans[0]=1; }
		else
		{
			bool up;
			for(int j=1; j<=k; j++) if(ans[j]!=now[j]) {up=ans[j]; break;}
			if(up) for(int j=1; j<=k; j++) ans[j]=now[j];
		}
	}
	
	if(!ans[0]) puts("0");
	else
	{
		for(int i=1; i<=k; i++) printf("%d", ans[i]);
		puts("");
	}
	
	return 0;
}
