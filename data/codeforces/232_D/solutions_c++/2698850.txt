#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
#define N 210005
int a[N],c[N],wh[N],cnt[N],sa[N],rank[N],h[N][20];
int n,nn,m;
int q[N][2],id[N],f[N],nxt[N],indx[N],ANS[N];
struct BIT{
    int t[N];
    void insert(int x,int y){
        for(;x<=nn;x+=x&(-x))t[x]+=y;
    }
    int find(int x){
        int ans=0;
        for(;x>0;x-=x&(-x))ans+=t[x];
        return ans;
    }
}T;
//struct rec{int x,y,k;}a1[N],a2[N];
int A[N],B[N],v[N],s[N];
bool same(int *r,int a,int b,int l){return r[a]==r[b] && r[a+l]==r[b+l];}
bool cmp(const int i,const int j){return c[i]<c[j];}
void SA(int n,int c[N]){
    int i,j,p,k=0,*x=A,*y=B,*t,m=0;
    for (i=0;i<n;i++) sa[i]=i; sort(sa,sa+n,cmp);
    for (i=0;i<n;i++) {x[sa[i]]=m; if (c[sa[i]]!=c[sa[i+1]]) m++;}
    for (p=j=1;p<n;j*=2,m=p){
        for (p=0,i=n-j;i<n;i++) y[p++]=i;
        for (i=0;i<n;i++) if (sa[i]>=j) y[p++]=sa[i]-j;
        for (i=0;i<n;i++) v[i]=x[y[i]];
        for (i=0;i<m;i++) s[i]=0;
        for (i=0;i<n;i++) s[v[i]]++;
        for (i=1;i<m;i++) s[i]+=s[i-1];
        for (i=n-1;i>=0;i--) sa[--s[v[i]]]=y[i];
        for (t=x,x=y,y=t,i=p=1,x[sa[0]]=0;i<n;i++)
            x[sa[i]]=same(y,sa[i],sa[i-1],j)?p-1:p++;
        }
    for (i=0;i<n;i++) rank[sa[i]]=i;
    for(k=0,i=0;i<n;i++){
        while(c[i+k]==c[sa[rank[i]-1]+k])k++;
        h[rank[i]][0]=k;
        if(k)k--;
    }
    for (j=0;j<20;j++)
        for (i=0;i<=n-(1<<j+1);i++)
            h[i][j+1]=min(h[i][j],h[i+(1<<j)][j]);
}
/*void make_rmq(){int i,j;
    for (j=0;j<20;j++)
        for (i=1;i<=nn-(1<<j);i++)
            h[i][j+1]=min(h[i][j],h[i+(1<<j)][j]);
}*/
//bool cmp_w(int i,int j){return b[i]<b[j];}
void init(){int i;
    scanf("%d",&n);nn=n<<1;
    for(i=0;i<n;i++)scanf("%d",&a[i]);
    c[n-1]=-(1<<9)-1;c[nn-1]=-(1<<9)-2;
    for(i=0;i<n-1;i++)c[i]=a[i]-a[i+1],c[n+i]=-c[i];
    /*
    for(i=0;i<nn;i++)wh[i]=i;
    sort(wh,wh+nn,cmp_w);
    int tot=0;
    for(i=0;i<nn;i++){
        a[wh[i]]=tot;
        if(c[wh[i]]!=c[wh[i+1]])tot++;
    }*/
    SA(nn,c);
    //make_rmq();
}
int main(){
    init();
    scanf("%d",&m);int Q=0;
    int i,j,x,y;
    if(n==1){
        for(i=1;i<=m;i++)printf("0\n");return 0;
    }
    for(i=0;i<m;i++){
        scanf("%d%d",&x,&y);
        if(x==y){ANS[i]=n-1;continue;}
        int LEN=y-x,w=rank[n+x-1],L=w,R=w;
        for(j=19;j>=0;j--){
            if(L+1>=1<<j&&h[L+1-(1<<j)][j]>=LEN)L-=1<<j;
            if(h[R+1][j]>=LEN)R+=1<<j;
        }
        q[++Q][0]=x-LEN;
        q[Q][1]=y;id[Q]=i;
        f[Q]=-1;nxt[Q]=indx[L-1];
        indx[L-1]=Q;
        
        q[++Q][0]=x-LEN;
        q[Q][1]=y;id[Q]=i;
        f[Q]=1;nxt[Q]=indx[R];
        indx[R]=Q;
    }
    for(i=0;i<nn;i++){
        T.insert(sa[i]+1,1);
        for(j=indx[i];j;j=nxt[j])
            ANS[id[j]]+=f[j]*(T.find(q[j][0]-1)-T.find(q[j][1])+T.find(n));
        
    }
    for(i=0;i<m;i++)printf("%d\n",ANS[i]);
}