#include <cstdio>
#include <algorithm>
#include <set>
#include <vector>
using namespace std;
const int inf=1000000002,N=200100;
#define mp make_pair
#define pii pair<int,int>
#define rep(i,n) for(int i=0;i<(int)n;i++)
int a[N],r[N],sa[N],h[N],ans[N],L[N],R[N],_l[N],_r[N],C[N],n,t,cnt,Q;
pair<pii,int> c[N];vector<pii> q[N];vector<int> q1[N],q2[N];set<pii> p;
void deal(int i,int w,int *a) {
	for (typeof(p.end()) it=p.upper_bound(mp(h[i]+1,-1));it!=p.end();p.erase(it++)) a[it->second]=i+w;}
int A(int x){int s=0;for(;x;x-=x&-x)s+=C[x];return s;}
void M(int x){for(;x<=t;x+=x&-x)C[x]++;}
int b[N];
void debug() {
	b[0]=1000000;
	for (int i=0;i<n;i++) b[i+1]=b[i]+(__builtin_popcount(i)&1);
	for (int i=65535;i<n;i++) b[i]=b[65535];
	rep(i,n) if (b[i]!=a[i]) printf("%d\n",i);
}
int main() {
	scanf("%d",&n);
	rep(i,n) scanf("%d",&a[i]);
	rep(i,n-1) a[i]=a[i+1]-a[i],a[i+n]=-a[i];a[n-1]=-inf+1;t=n+n;a[t-1]=-inf+2;
	rep(i,t) r[i]=a[i]+=inf;
	for (int d=1;d<=t;d+=d) {
		rep(i,t) c[i]=mp(mp(r[i],r[i+d]),i);sort(c,c+t);cnt=r[c[0].second]=0;
		rep(i,t-1) r[c[i+1].second]=(cnt+=(c[i].first!=c[i+1].first));
		if (cnt==t) break;
	}
	rep(i,t) sa[r[i]]=i;
	for (int k=0,i=0,j;i<t;h[r[i++]]=k,k=max(k-1,0)) if (r[i]!=0)for (j=sa[r[i]-1];a[j+k]==a[i+k];k++);
	h[t]=-1;
	scanf("%d",&Q);rep(i,Q) scanf("%d%d",L+i,R+i),--L[i],--R[i],q[r[L[i]+n]].push_back(mp(R[i]-L[i],i));
	rep(i,t+1) {deal(i,-1,_r);rep(j,q[i].size())p.insert(q[i][j]);}
	for (int i=t-1;i>=0;i--) {rep(j,q[i].size())p.insert(q[i][j]);deal(i,0,_l);}
	rep(i,Q) q1[_l[i]].push_back(i),q2[_r[i]].push_back(i),L[i]=max(2*L[i]-R[i],0);
	rep(i,t) {
		rep(j,q1[i].size()) {int d=q1[i][j];ans[d]-=A(n)-A(R[d]+1)+A(L[d]);}
		M(sa[i]+1);
		rep(j,q2[i].size()) {int d=q2[i][j];ans[d]+=A(n)-A(R[d]+1)+A(L[d]);}
	}
	rep(i,Q) printf("%d\n",ans[i]);
}