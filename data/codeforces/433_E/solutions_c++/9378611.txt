// ParsaT
#include <iostream>
#include <algorithm>
#include <string>
#include <math.h>
#include <map>
#include <vector>
#define lll long long
#include <cstdio>
using namespace std;
#define po 100001
#include<bits/stdc++.h>
using namespace std;

#include <cstdio>
#include <iostream>
#include <cstring>
using namespace std;
#define MO 1000000007
#define MAXN 220
int son[MAXN][22],v[MAXN],fail[MAXN],last[MAXN],root,tc,now;
int ans,dp[MAXN][2][2][MAXN][510]; // i , .. , .. , p , vs
int n,m,k,L[2*MAXN],R[2*MAXN],lenl,lenr,ll,vv;
int qq[MAXN],h,t;

void BFS()
{
	int now;
	fail[root]=root;
	h=0;
	qq[t=1]=root;
	while(h^t)
	{
		now=qq[++h];
		//last[now]=(v[fail[now]]==0)? last[fail[now]]:fail[now];
		v[now]+=v[fail[now]];
		for(int c=0;c<m;++c)
			if(son[now][c])
			{
				qq[++t]=son[now][c];
				if(now==root)
					fail[son[now][c]]=root;
				else
					fail[son[now][c]]=son[fail[now]][c];
			}
			else
				son[now][c]=(now==root)? root : son[fail[now]][c];
	}

}
int main()
{
    ios_base::sync_with_stdio(false);
	scanf("%d %d %d",&n,&m,&k);
	scanf("%d",&lenl);
	for(int i=0;i<lenl;++i)
		scanf("%d",&L[lenl-i]);
	scanf("%d",&lenr);
	for(int i=0;i<lenr;++i)
		scanf("%d",&R[lenr-i]);

	root=tc=1;
	while(n--)
	{
		scanf("%d",&ll);
		now=root;
		while(ll--)
		{
			scanf("%d",&vv);
			now=(son[now][vv])? son[now][vv] : (son[now][vv]=++tc);
		}
		scanf("%d",&vv);
		v[now]+=vv;
	}
	BFS();

	dp[lenr][1][1][root][0]=1;
	for(int i=lenr;i;--i)
		for(int down=0;down<2;++down)
			for(int up=0;up<2;++up)
				for(int p=1;p<=tc;++p)
					for(int vs=0;vs<=k;++vs)
						if(dp[i][down][up][p][vs])
						{
							int st=(down)? L[i]:0;
							int en=(up) ? R[i] :m-1;
							for(int c=st;c<=en;++c)
							{
								int go=(down &&(c==st)&& i>lenl)? root : son[p][c];
								if(vs+v[go]<=k)
								{
									dp[i-1][down&&(c==st)][up&&(c==en)][go][vs+v[go]]+=dp[i][down][up][p][vs];
									dp[i-1][down&&(c==st)][up&&(c==en)][go][vs+v[go]]%=MO;
								}
							}
						}

		for(int down=0;down<2;++down)
			for(int up=0;up<2;++up)
				for(int p=1;p<=tc;++p)
					for(int vs=0;vs<=k;++vs)
					{
						ans+=dp[0][down][up][p][vs];
						ans%=MO;
					}
		cout<<ans<<endl;
		return 0;
}
