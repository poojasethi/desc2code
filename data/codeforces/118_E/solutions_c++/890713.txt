#include<cstdio>
#include<vector>
#include<algorithm>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

struct edge{ int v,id; };

vector<edge> adj[100000];

bool vis[100000];
int from[300000],to[300000];

void dfs(int u){
// printf("%d\n",u+1);
	vis[u]=true;
	rep(i,adj[u].size()){
		int v=adj[u][i].v,id=adj[u][i].id;
		if(from[id]==-1){
			from[id]=u;
			to[id]=v;
// printf("(%d, %d)\n",u+1,v+1);
			if(!vis[v]) dfs(v);
		}
	}
}

void rdfs(int u){
// printf("u=%d\n",u+1);
	vis[u]=true;
	rep(i,adj[u].size()){
		int v=adj[u][i].v,id=adj[u][i].id;
		if(from[id]==v){
			if(!vis[v]) rdfs(v);
		}
	}
}

int main(){
	int n,m; scanf("%d%d",&n,&m);
	rep(i,m){
		int u,v; scanf("%d%d",&u,&v); u--; v--;
		adj[u].push_back((edge){v,i});
		adj[v].push_back((edge){u,i});
	}

	rep(i,m) from[i]=-1;
	dfs(0);

// rep(u,n) printf("%d ",vis[u]); puts("");
// rep(i,m) printf("(%d, %d)\n",from[i],to[i]); puts("");

	rep(u,n) vis[u]=false;
	rdfs(0);
// rep(u,n) printf("%d ",vis[u]); puts("");

	if(count(vis,vis+n,true)<n) puts("0");
	else rep(i,m) printf("%d %d\n",from[i]+1,to[i]+1);

	return 0;
}
