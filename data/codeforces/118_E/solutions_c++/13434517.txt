#include<bits/stdc++.h>

using namespace std;

vector < int > V[100005],Y[100005];

int D[100005],Pre[100005],n,w,i,j,s;

void g(int x){

	int i;

	D[x] = ++s;

	for(i=0;i<Y[x].size();i++)
		if(!D[ Y[x][i] ])
			g(Y[x][i]);
}
void f(int x){

	int i;

	D[x] = ++s;

	for(i=0;i<V[x].size();i++){

		if(!D[ V[x][i] ]){
			Pre[ V[x][i] ] = x;
			f(V[x][i]);
		}

		if(Pre[ V[x][i] ] == x || (D[x] > D[ V[x][i] ] && V[x][i] != Pre[x]))
			Y[ V[x][i] ].push_back(x);
	}
}
int main(){

	cin >> n >> w;

	while(w--){
		cin >> i >> j;
		V[i].push_back(j);
		V[j].push_back(i);
	}

	f(1);
	memset(D , 0  , sizeof D);
	g(1);

	if(s != 2*n) cout << 0;

	else
		for(i=1;i<=n;i++)
			for(j=0;j<Y[i].size();j++)
				cout << i << " " << Y[i][j] << endl;

	return 0;
}
