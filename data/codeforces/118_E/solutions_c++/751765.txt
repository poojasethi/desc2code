#include<cstdio>
#include<vector>
#include<map>
#include<utility>
using namespace std;
#define maxn (100005)
#define min(x,y) (((x)<(y))?(x):(y))

int n,m,t,d[maxn],low[maxn];
vector<int> path[maxn],ans[maxn];
map<int,bool> v[maxn];
bool ok;

void dfs(int u,int p){
    d[u]=low[u]=++t;
    for (int i=0;i<path[u].size();++i){
        if (v[u].find(path[u][i])!=v[u].end()) continue;
        if (path[u][i]==p) continue;
        v[u][path[u][i]]=v[path[u][i]][u]=1;
        ans[u].push_back(path[u][i]);
        if (!d[path[u][i]]){
            dfs(path[u][i],u);
            low[u]=min(low[u],low[path[u][i]]);
        }
        else low[u]=min(low[u],d[path[u][i]]);
        if (d[u]<low[path[u][i]]) ok=1;
    }
}

int main(){
    scanf("%d%d",&n,&m);
    for (int i=0;i<m;++i){
        int x,y;
        scanf("%d%d",&x,&y);
        path[x].push_back(y); path[y].push_back(x);
    }
    
    t=ok=0;
    dfs(1,0);
    if (ok) puts("0");
    else{
        for (int i=1;i<=n;++i){
            int tn=ans[i].size();
            for (int j=0;j<tn;++j) printf("%d %d\n",i,ans[i][j]);
        }
    }
    return 0;
}
