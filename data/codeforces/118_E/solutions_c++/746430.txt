#include <iostream>
#include <cstdio>
#include <vector>

using namespace std;

const int N = (int) 1e5;

int n, m, t, cnt, in[N], f[N];
vector <int> g[N], ans[N];
bool was[N];

void dfs ( int v, int p ) {
	in[v] = t++;	
	f[v] = in[v];

	for ( int i = 0; i < g[v].size(); i++ ) {
		if ( g[v][i] == p || in[v] < in[ g[v][i] ] )
			continue;
		
		ans[v].push_back(g[v][i]);

		if ( in[ g[v][i] ] != -1 ) {
			f[v] = min(f[v], in[ g[v][i] ]);
			
			continue;
		}
				
		dfs(g[v][i], v);
		f[v] = min(f[ g[v][i] ], f[v]);
		
		if ( in[v] < f[ g[v][i] ] )
			cnt++;
    }	

	return;
}

int main () {
	//freopen("input.txt", "r", stdin);
	
	cin >> n >> m;

	for ( int i = 0; i < m; i++ ) {
		int a, b;
		cin >> a >> b;

		g[a - 1].push_back(b - 1);
		g[b - 1].push_back(a - 1);
	}

	for ( int i = 0; i < n; i++ )
		in[i] = -1;

	dfs(0, -1);

	if ( cnt )
		cout << 0;
	else {
		for ( int i = 0; i < n; i++ )
			for ( int j = 0; j < ans[i].size(); j++ )
				cout << i + 1 << ' ' << ans[i][j] + 1 << endl;
	}

	return 0;
}