#include<iostream>
#include<algorithm>
#include<vector>

using namespace std;

#define FOR(i,a,b) for(int i = a ; i < b ; ++i)
#define MAX 1000010

int n, m, c = 0, ans[MAX][2], dis[MAX], lvl[MAX], low[MAX], parent[MAX];
vector< vector<int> > adl;

void dfs(int s){
  int sz = adl[s].size();
  dis[s] = 1;
  low[s] = lvl[s];
  FOR(i,0,sz){
    if(dis[adl[s][i]]){
      if((adl[s][i] == parent[s])||(lvl[adl[s][i]] > lvl[s]))
	continue;
      low[s] = min(low[s], lvl[adl[s][i]]);
      ans[c][0] = s;
      ans[c][1] = adl[s][i];
      ++c;
      continue;
    }
    parent[adl[s][i]] = s;
    lvl[adl[s][i]] = lvl[s]+1;
    ans[c][0] = s;
    ans[c][1] = adl[s][i];
    ++c;
    dfs(adl[s][i]);
    low[s] = min(low[s], low[adl[s][i]]);
    }
    if(((s != 1)&&(low[s] == lvl[s]))||((s == 1)&&(low[s] < lvl[s]))){
      cout<<0<<endl;
      exit(0);
  }
}

int main(){
  
  int t1, t2;
  
  cin>>n>>m;
  adl.resize(n+1);
  FOR(i,0,m){
    cin>>t1>>t2;
    adl[t1].push_back(t2);
    adl[t2].push_back(t1);
  }
  lvl[1] = 0;
  dfs(1);
  FOR(i,0,m)
    cout<<ans[i][0]<<" "<<ans[i][1]<<endl;

  return 0;

}