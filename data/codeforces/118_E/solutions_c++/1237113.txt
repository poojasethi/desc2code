#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

vector<int> a[100005];
vector<pair<int, int> > ans;
int u[100005];
int low[100005];
int dep[100005];
bool go(int x, int lev=0, int from=-1) {
	low[x] = dep[x] = lev;
	u[x]=1;
	for(int i=0;i<(int)a[x].size();i++) {
		if(u[a[x][i]]==0) {
			if(!go(a[x][i], lev+1, x)) return false;
			ans.push_back(make_pair(x, a[x][i]));
			low[x] = min(low[x], low[a[x][i]]);
			if(low[a[x][i]] > lev) return false;
		} else if(a[x][i]!=from) {
			if(dep[a[x][i]] < dep[x])
				ans.push_back(make_pair(x, a[x][i]));
			if(low[x] > low[a[x][i]])
				low[x] = low[a[x][i]];
		}
	}
	return true;
}

int main(void) {
	int n, m;
	scanf("%d%d", &n, &m);
	for(int i=0;i<m;i++) {
		int x, y;
		scanf("%d%d", &x, &y);
		a[x].push_back(y);
		a[y].push_back(x);
	}
	if(!go(1)) puts("0");
	else for(int i=0;i<(int)ans.size();i++)
		printf("%d %d\n", ans[i].first, ans[i].second);
	return 0;
}
