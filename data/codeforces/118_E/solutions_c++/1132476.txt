#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#define rep(i,n) for(int i=0;i<n;i++)
#define pr(i) cout<<i<<endl
#define pi pair<int,int>
using namespace std;

int n,m,t1,t2,i,j,a,b,c;
vector<int> g[100010],rg[100010];
bool used[100010];
map<pi,int> p;
int k=0;

void dfs(int v){

  used[v]=true;
  rep(i,g[v].size()){
    if(p[pi(v,g[v][i])]==0&&p[pi(g[v][i],v)]==0){
      p[pi(v,g[v][i])]=1;
      rg[g[v][i]].push_back(v);
    }
    if(!used[g[v][i]])dfs(g[v][i]);
  }
  
}

void rdfs(int v){
  used[v]=true;
  rep(i,rg[v].size())if(!used[rg[v][i]])rdfs(rg[v][i]);
}


int main(){

  cin>>n>>m;

  rep(i,m){
    cin>>t1>>t2;t1--;t2--;
    g[t1].push_back(t2);
    g[t2].push_back(t1);
  }

  fill(used,used+n,false);dfs(0);
  fill(used,used+n,false);rep(i,n)if(!used[i]){rdfs(i);k++;}
  
  if(k!=1)pr(0);
  else rep(i,n)rep(j,rg[i].size())pr(i+1<<" "<<rg[i][j]+1);

  return 0;

}
