
// In the name of God
// Code by: mrMaster

#include <bits/stdc++.h>

using namespace std;

const int MN = 3e5 + 1000;

typedef pair<int,int>pii;
 
int n,m;
vector<int>edges[MN];
bool mk[MN];
int h[MN],mh[MN];
vector<pii>res;

void fail()
{
	cout << 0 << endl;
	exit(0);
}

void dfs(int s,int par)
{
	mk[s] = true; 
	if(par >= 0)
		res.push_back(pii(par , s));
	for(int i=0;i<edges[s].size();++i){
		if(!mk[edges[s][i]]){
			h[edges[s][i]] = h[s] + 1;
			mh[edges[s][i]] = h[edges[s][i]];
			dfs(edges[s][i] , s);
			mh[s] = min(mh[s] , mh[edges[s][i]]);
			if(mh[edges[s][i]] > h[s])
				fail();
		}else if(edges[s][i] != par && h[edges[s][i]] < h[s]){
			mh[s] = min(mh[s] , h[edges[s][i]]);
			res.push_back(pii(s , edges[s][i]));
		}
	}
}

void input()
{
	cin >> n >> m;
	int a,b;
	for(int i=0;i<m;++i){
		cin >> a >> b;
		--a, --b;
		edges[a].push_back(b);
		edges[b].push_back(a);
	}
}

int main()
{
	input();
	dfs(0,-1);
	for(int i=0;i<res.size();++i)
		cout << res[i].first+1 << ' ' << res[i].second+1 << endl;
	return 0;
}

