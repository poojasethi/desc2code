#include <iostream>
#include <cstring>
#include <vector>
using namespace std;

typedef pair<int, int> pii;

vector<pii> adj[100000];
int dir[300000];
int oth[300000];
bool vis[100000];
int last;

void dfs1(int a) {
	if (vis[a]) return;
	vis[a] = true;
	for (int i = 0; i < (int)adj[a].size(); i++) {
		int b = adj[a][i].first;
		int id = adj[a][i].second;
		if (dir[id] == -1) {
			dir[id] = a;
			oth[id] = b;
			dfs1(b);
		}
	}
	last = a;
}

int visc = 0;
void dfs2(int a) {
	if (vis[a]) return;
	vis[a] = true;
	visc++;
	for (int i = 0; i < (int)adj[a].size(); i++) {
		int b = adj[a][i].first;
		int id = adj[a][i].second;
		if (dir[id] != a) {
			dfs2(b);
		}
	}
}

int main() {
	memset(dir, -1, sizeof(dir));
	int n, m;
	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		int a, b;
		cin >> a >> b;
		a--; b--;
		adj[a].push_back(pii(b, i));
		adj[b].push_back(pii(a, i));
	}
	dfs1(0);
	memset(vis, 0, sizeof(vis));
	dfs2(last);
	if (visc != n) {
		cout << 0 << '\n';
		return 0;
	}
	for (int i = 0; i < m; i++) {
		cout << dir[i] + 1 << ' ' << oth[i] + 1 << '\n';
	}
}
