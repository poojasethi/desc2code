//In the name of Allah
#include <bits/stdC++.h>

using namespace std;
#define PB push_back
#define F first
#define S second
#define MP make_pair

const int N=(3e+5)+100;
vector<pair<int,int> > a[N],ans;
vector<int> b[N];
bool mark[N],mark2[N];
int t[N],cnt[N];

inline void dfs(int v,int x,int p){
    int i=cnt[v],u,id;
    while(t[v]<a[v].size()){
        i=cnt[v];
        u=a[v][i].F,id=a[v][i].S;
        if(mark[id]){cnt[v]++;continue;}
        mark[id]=true;
        t[v]++,t[u]++;
        dfs(u,id,v);
        cnt[v]++;
    }
    if(x!=-1)ans.PB(MP(p,v)),b[v].PB(p);
}
inline void dfs2(int v){
    mark2[v]=true;
    for(int i=0;i<b[v].size();i++)
        if(!mark2[b[v][i]])dfs2(b[v][i]);
}

int main(){
    int n,m;
    scanf("%d",&n);
    scanf("%d",&m);
    int u,v;
    for(int i=0;i<m;i++){
        scanf("%d",&u);
        scanf("%d",&v);
        u--;v--;
        a[u].PB(MP(v,i));
        a[v].PB(MP(u,i));
    }
    dfs(0,-1,-1);
    dfs2(0);
    for(int i=0;i<n;i++)
        if(!mark2[i])return printf("0"),0;

    for(int i=0;i<ans.size();i++)
        printf("%d %d\n",ans[i].F+1,ans[i].S+1);

    return 0;
}

	  		 	   	 								 		  	  		