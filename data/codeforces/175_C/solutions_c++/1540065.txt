#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>

using namespace std;

const int maxn = 111;
int N, M;
long long p[maxn];
struct graph
{
	int k, c;
} gra[maxn];

inline bool cmp(const graph &i, const graph &j)
{
	return i.c < j.c;
}

int main()
{
	scanf("%d", &N);
	for (int i = 0; i < N; ++i)
		scanf("%d%d", &gra[i].k, &gra[i].c);
	scanf("%d", &M);
	for (int i = 1; i <= M; ++i) scanf("%I64d", &p[i]);
	p[M + 1] = 214748364700000LL;
	sort(gra, gra + N, cmp);
	int t(1);
	long long ans(0), now(0);
	for (int i = 0; i < N; ++i) while (gra[i].k)
	{
		int q = min((long long)gra[i].k, p[t] - now);
		ans += t * (long long)q * gra[i].c;
		now += q, gra[i].k -= q;
		if (now >= p[t]) ++t;
	}
	cout << ans << endl;
}
