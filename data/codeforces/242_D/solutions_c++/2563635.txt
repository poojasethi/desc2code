#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>

using namespace std;

#define fs first
#define sc second

vector< vector<int> > g;
queue<int> q;
int state[100000];

int main() {
	int n, m;
	
	cin >> n >> m;
	
	g.resize(n);
	
	int a, b;
	for (int i=0; i<m; i++) {
		cin >> a >> b;
		g[--a].push_back(--b);
		g[b].push_back(a);		
	}
	
	for (int i=0; i<n; i++) {
		cin >> state[i];
		if (state[i] == 0)
			q.push(i);
	}
	
	int count = 0;
	int ans[100000]; 
	while (!q.empty()) {
		int x = q.front();
		
		for (int i=0; i<g[x].size(); i++) {
			state[g[x][i]]--;
			if (state[g[x][i]] == 0)
				q.push(g[x][i]);
		}
		
		ans[count++] = x;
		q.pop();
	}
	
	cout << count << endl;
	for (int i=0; i<count; i++)
		cout << ans[i]+1 << " ";	
	cout << endl;
	
	return 0;
}