#include <stdio.h>
#include <algorithm>

const int kMaxN = 100000;

int f[kMaxN], t[kMaxN], id[kMaxN];

inline bool cmp1(int a, int b) {
    if (t[a] != t[b]) return t[a] > t[b];
    return a < b;
}

inline bool cmp2(int a, int b) {
    if (t[a] != t[b]) return t[a] < t[b];
    return a < b;
}

int main() {
    int n, a, b;
    scanf("%d%d%d", &n, &a, &b);
    for (int i = 0; i < n; ++i) {
        scanf("%d", &t[i]);
        id[i] = i;
    }
    if (a < b) {
        std::sort(id, id + n, cmp1);
    } else if (a > b) {
        std::sort(id, id + n, cmp2);
    }
    for (int i = a; i < n; ++i) f[id[i]] = 1;
    for (int i = 0; i < n; ++i) {
        if (i != 0) printf(" ");
        printf("%d", f[i] + 1);
    }
    puts("");
    return 0;
}
