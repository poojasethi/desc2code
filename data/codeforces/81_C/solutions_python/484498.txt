#!/usr/bin/python

import sys
import math

flag = 2;

def f():
    id = 0
    while True:
        yield id
        id += 1

class node(object):
    def __init__(self, v, id):
        self.v = v
        self.id = id
    def __lt__(self, other):
        if self.v != other.v:
            return self.v > other.v
        else:
            return self.id < other.id if flag == 1 else self.id > other.id
            

    def __repr__(self):
        return "<"+str(self.v)+", "+str(self.id)+">"
    

if __name__=="__main__":
    data = sys.stdin.readlines()
    n  = int(data[0])
    a,b = [int(v) for v in data[1].split(' ')]
    fg = f()
    li = [node(int(v),fg.next()) for v in data[2].split(' ')]
    
    if a == b:
        for i in xrange(0,a):
            print 1,
        for i in xrange(0,b-1):
            print 2,
        print 2
        exit(0)

    if a > b:
        flag = 2
    else:
        flag = 1

    li.sort()
    
    ans = [0] * n
    rest = min(a,b)
    for i in xrange(0,n):
        ans[ li[i].id ] = flag
        rest -= 1
        if rest == 0:
            flag = 3 - flag

    for i in xrange(0,n-1):
        print ans[i],
    print ans[n-1]
