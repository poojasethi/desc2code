#def gcd(a,b):
#   while b > 0: a,b = b, a%b
#   return a
#def lcm(a, b):
#   return a*b/gcd(a,b)

T = input()
#S = raw_input()

a, b = map(int, raw_input().split())
marks = map(int, raw_input().split())
cp = marks[:]

if a == b:
    marks[:a] = [1]*a
    marks[a:] = [2]*b
if a > b:
    t_marks = sorted(marks)[::-1]
    marks = marks[::-1]
    cp[:] = [1]*(a+b)
    p_pos = 0
    p_num = t_marks[0]
    for i in xrange(b):
        cur = t_marks[i]
        if cur != p_num:
            p_pos = 0
        pos = marks.index(cur, p_pos)
        p_pos = pos
        p_num = cur
        marks[pos] = 6  
        cp[pos] = 2
    marks = cp[::-1]
    
if  b > a:
    t_marks = sorted(marks)[::-1]
    cp[:] = [2]*(a+b)
    p_pos = 0
    p_num = t_marks[0]
    for i in xrange(a):
        cur = t_marks[i]
        if cur != p_num:
            p_pos = 0
        pos = marks.index(cur, p_pos)
        p_pos = pos
        p_num = cur
        marks[pos] = 6
        cp[pos] = 1
    marks = cp[:]
        
for i in marks:
    print i, 
        

#data2 = [ map(int, raw_input().split()) for i in xrange(T)]
