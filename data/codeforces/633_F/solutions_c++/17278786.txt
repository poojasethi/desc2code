#include <cstdio>
#include <queue>
#include <cstring>
#include <algorithm>
using namespace std;
const int N=1e5+10;
typedef __int64 LL;
struct Edge {
    int v,next;
    Edge(int v=-1,int next=-1):v(v),next(next){}
}e[N*2];
int head[N],total;
void init(){
    total=0;memset(head,-1,sizeof(head));
}
void adde(int u,int v){
    e[total]=Edge(v,head[u]);head[u]=total++;
}

LL aa[N];
LL dp[N][4];
int id[N][12];

void up(int u,int v,int j){
    int i=j*3;
    if(id[u][i]==0||dp[id[u][i]][j]<dp[v][j]){
        swap(id[u][i+1],id[u][i+2]);swap(id[u][i],id[u][i+1]),id[u][i]=v;
    }
    else if(id[u][i+1]==0||dp[id[u][i+1]][j]<dp[v][j]){
        swap(id[u][i+2],id[u][i+1]),id[u][i+1]=v;
    }
    else if(id[u][i+2]==0||dp[id[u][i+2]][j]<dp[v][j])id[u][i+2]=v;
}

void dfs(int u,int f){
    dp[u][0]=dp[u][1]=dp[u][2]=dp[u][3]=aa[u];
    for(int i=head[u];i!=-1;i=e[i].next){
        int v=e[i].v;if(v==f)continue;dfs(v,u);
        dp[u][0]=max(dp[u][0],dp[v][0]+aa[u]);
        dp[u][1]=max(dp[u][1],dp[v][1]);
        dp[u][2]=max(dp[u][2],dp[v][2]+aa[u]);
        dp[u][3]=max(dp[u][3],dp[v][3]);
        for(int j=0;j<4;j++)up(u,v,j);
    }
    dp[u][1]=max(dp[u][1],dp[id[u][0]][0]+dp[id[u][1]][0]+aa[u]);
    if(id[u][0]!=id[u][3])dp[u][2]=max(dp[u][2],dp[id[u][0]][0]+dp[id[u][3]][1]+aa[u]);
    else {
        dp[u][2]=max(dp[u][2],dp[id[u][0]][0]+dp[id[u][4]][1]+aa[u]);
        dp[u][2]=max(dp[u][2],dp[id[u][1]][0]+dp[id[u][3]][1]+aa[u]);
    }

    dp[u][3]=max(dp[u][3],dp[id[u][3]][1]+dp[id[u][4]][1]);
    if(id[u][0]!=id[u][6])dp[u][3]=max(dp[u][3],dp[id[u][0]][0]+dp[id[u][6]][2]+aa[u]);
    else {
        dp[u][3]=max(dp[u][3],dp[id[u][0]][0]+dp[id[u][7]][2]+aa[u]);
        dp[u][3]=max(dp[u][3],dp[id[u][1]][0]+dp[id[u][6]][2]+aa[u]);
    }
    int sta[3],top=0;
    for(int i=3;i<=5;i++){
        top=0;
        for(int j=0;j<=2;j++){
            if(id[u][j]!=id[u][i])sta[top++]=id[u][j];
        }
        if(top>=2)dp[u][3]=max(dp[u][3],dp[id[u][i]][1]+dp[sta[0]][0]+dp[sta[1]][0]+aa[u]);
    }
}

int main(){
    #ifdef DouBi
    freopen("in.cpp","r",stdin);
    #endif // DouBi
    int n;while(scanf("%d",&n)!=EOF){
        init();for(int i=1;i<=n;i++)scanf("%I64d",&aa[i]);
        for(int i=1;i<n;i++){
            int a,b;scanf("%d%d",&a,&b);adde(a,b);adde(b,a);
        }
        memset(id,0,sizeof(id));
        dfs(1,0);
        //for(int i=1;i<=n;i++)printf("%d %d %d %d %d\n",i,dp[i][0],dp[i][1],dp[i][2],dp[i][3]);
        printf("%I64d\n",max(max(dp[1][0],dp[1][1]),max(dp[1][2],dp[1][3])));
    }
    return 0;
}
