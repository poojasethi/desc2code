#pragma comment(linker, "/STACK:102400000,102400000")
#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define ll long long 
#define inf 1000000007
#define mod 1000000007
#define pi acos(-1)
#define N 100010
#define DBG(x) cerr<<(#x)<<"="<<x<<endl;
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)

template <class T,class U> inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U> inline void Min(T &a,U b){if(a>b)a=b;}

inline void add(int &a,int b){a+=b;while(a>=mod)a-=mod;}

int pow(int a,int b){
    int ans=1;
    while(b){
        if(b&1)ans=1LL*ans*a%mod;
        a=1LL*a*a%mod;b>>=1;
    }
    return ans;
}

int a[N];
vi g[N];
ll dp[N][3],ans=0;
void dfs(int u,int fa){
    pair<ll,int> f[3][3];
    for(int j=0;j<3;j++)
    for(int i=0;i<3;i++)f[j][i]=mp(0,-1);
    for(int i=0;i<g[u].size();i++){
        int j=g[u][i];
        if(j==fa)continue;
        dfs(j,u);
        for(int k=0;k<3;k++){
            if(dp[j][k]>f[k][0].x){
                f[k][2]=f[k][1];
                f[k][1]=f[k][0];
                f[k][0]=mp(dp[j][k],j);
            }
            else if(dp[j][k]>f[k][1].x){
                f[k][2]=f[k][1];
                f[k][1]=mp(dp[j][k],j);
            }
            else if(dp[j][k]>f[k][2].x){
                f[k][2]=mp(dp[j][k],j);
            }
        }
    }
    dp[u][0]=f[0][0].x+a[u];
    dp[u][1]=f[0][0].x+f[0][1].x+a[u];
    Max(dp[u][1],f[1][0].x);
    dp[u][2]=f[2][0].x+a[u];
    for(int i=0;i<2;i++)
        for(int j=0;j<2;j++){
            if(f[0][i].y!=f[1][j].y){
                Max(dp[u][2],f[0][i].x+f[1][j].x+a[u]);
            }
            if(f[0][i].y!=f[2][j].y){
                Max(ans,f[0][i].x+f[2][j].x+a[u]);
            }
        }
    for(int i=0;i<g[u].size();i++){
        int j=g[u][i];
        if(j==fa)continue;
        ll val=dp[j][1]+a[u];
        if(j==f[0][0].y)Max(ans,val+f[0][1].x+f[0][2].x);
        else if(j==f[0][1].y)Max(ans,val+f[0][0].x+f[0][2].x);
        else Max(ans,val+f[0][0].x+f[0][1].x);
    }
    Max(ans,f[1][0].x+f[1][1].x);
    Max(ans,dp[u][2]);
    Max(ans,dp[u][1]);
    Max(ans,dp[u][0]);
}
int main(){
    int i,j,k,T,n,m;
    scanf("%d",&n);
    for(i=0;i<n;i++)scanf("%d",&a[i]);
    for(i=1;i<n;i++){
        scanf("%d%d",&j,&k);j--,k--;
        g[j].pb(k);g[k].pb(j);
    }
    dfs(0,-1);
    cout<<ans<<"\n";
    return 0;
}