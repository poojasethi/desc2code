#include <bits/stdc++.h>
using namespace std;
#define dprint(v) cerr << #v"=" << v << endl //;)
#define forr(i,a,b) for(int i=(a); i<(b); i++)
#define forn(i,n) forr(i,0,n)
#define dforn(i,n) for(int i=n-1; i>=0; i--)
#define forall(it,v) for(typeof(v.begin()) it=v.begin();it!=v.end();++it)
#define sz(c) ((int)c.size())
#define zero(v) memset(v, 0, sizeof(v))
#define fst first
#define snd second
#define mkp make_pair
#define pb push_back
typedef long long ll;
typedef pair<int,int> ii;

const int MAXN=100100;
int n,s[MAXN],h[MAXN];
ll a[MAXN];
vector<int> G[MAXN];
void prec(int v, int p) {
	int ant=-1;
	if(v==8) dprint(p);
	forall(it,G[v]) if (*it!=p) {
		if (s[v]==n) s[v] = *it;
		if (ant!=-1) h[ant]=*it;
		ant=*it;
		prec(*it,v);
	}
}
ll dp[MAXN][6];
ll f(int v, int e) {
	ll &r=dp[v][e];
	if (r!=-1) return r;
	if (v==n) return r=0;
	r=0;
	if (e==0) {
		r = max(r, a[v]+f(s[v],5) );
		r = max(r, a[v]+f(s[v],4)+f(h[v],1) );
		r = max(r, f(h[v],0) );
		r = max(r, f(s[v],0) );
		r = max(r, f(h[v],1)+f(s[v],1) );
	} else if(e==1) {
		r = max(r, a[v]+f(s[v],4) );
		r = max(r, f(s[v],1) );
		r = max(r, f(h[v],1) );
	} else if(e==2) {
		r = max(r, a[v]+f(s[v],2) );
		r = max(r, f(h[v],2) );
	} else if(e==3) {
		r = max(r, a[v]+f(s[v],3) );
		r = max(r, a[v]+f(s[v],2)+f(h[v],1) );
		r = max(r, a[v]+f(s[v],4)+f(h[v],2) );
		r = max(r, f(h[v],3) );
		r = max(r, f(s[v],1) + f(h[v],2) );
	} else if(e==4) {
		r = max(r, a[v]+f(s[v],2)+f(h[v],2) );
		r = max(r, f(h[v],4) );
	} else if(e==5) {
		r = max(r, a[v]+f(s[v],3)+f(h[v],2) );
		r = max(r, a[v]+f(s[v],2)+f(h[v],3) );
		r = max(r, a[v]+f(s[v],4)+f(h[v],4) );
		r = max(r, f(s[v],1)+f(h[v],4) );
		r = max(r, f(h[v],5) );
	}
	return r;
}
int main() {
	//~ freopen("in", "r", stdin);
    ios::sync_with_stdio(0);
    while(scanf("%d",&n)>0) {
		forn(i,n) {
			scanf("%lld",a+i);
			s[i]=h[i]=n;
		}
		forn(i,n-1) { int a,b; scanf("%d %d",&a,&b); a--; b--;
			G[a].pb(b); G[b].pb(a);
		}
		prec(0,-1);
		//~ forn(i,n) {
			//~ cout << i << " " << s[i] << " " << h[i] << endl;
		//~ }
		memset(dp,-1,sizeof(dp));
		//~ dprint(f(1,3));
		//~ dprint(f(1,3));
		printf("%lld\n",f(0,0));
		zero(G);
	}
	return 0;
}
