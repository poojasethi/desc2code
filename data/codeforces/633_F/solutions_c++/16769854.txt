#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>

using namespace std;

const int limite=1000000;

typedef long long int ll;

void maximiza(ll &a,ll b)
{
  a=max(a,b);
}

ll a[limite];
vector<int> g[limite];
ll max1[limite],max2[limite],maxt[limite],max1t[limite];
vector<pair<ll,ll> > lmaxt[limite],lmax1[limite],lmax1t[limite];

void eliminapadre(int u,int p)
{
  vector<int> &ar=g[u];
  vector<int> nextar;
  for (int i=0;i<int(ar.size());i++) {
    int v=ar[i];
    if (v!=p) {
      eliminapadre(v,u);
      nextar.push_back(v);
    }
  }
  ar=nextar;
}

void calcula(int u)
{
  vector<int> &ar=g[u];
  max1[u]=max2[u]=max1t[u]=maxt[u]=a[u];
  vector<pair<ll,ll> > &lt=lmaxt[u];
  vector<pair<ll,ll> > &l1=lmax1[u];
  vector<pair<ll,ll> > &l1t=lmax1t[u];
  for (int i=0;i<int(ar.size());i++) {
    int v=ar[i];
    calcula(v);
    maximiza(max2[u],max2[v]);
    lt.push_back(pair<ll,ll> (maxt[v],v));
    l1.push_back(pair<ll,ll> (max1[v],v));
    l1t.push_back(pair<ll,ll> (max1t[v],v));
  }
  sort(lt.begin(),lt.end());
  reverse(lt.begin(),lt.end());
  sort(l1.begin(),l1.end());
  reverse(l1.begin(),l1.end());
  sort(l1t.begin(),l1t.end());
  reverse(l1t.begin(),l1t.end());
  int len=int(lt.size());
  if (len>=1) {
    maximiza(maxt[u],a[u]+lt[0].first);
    maximiza(max1[u],l1[0].first);
    maximiza(max1t[u],a[u]+l1t[0].first);
  }
  if (len>=2) {
    maximiza(max1[u],a[u]+lt[0].first+lt[1].first);
    maximiza(max2[u],l1[0].first+l1[1].first);
    for (int i=0;i<2;i++)
      if (l1[i].second!=lt[0].second and l1[i].second!=lt[1].second)
	maximiza(max2[u],l1[i].first+a[u]+lt[0].first+lt[1].first);
    for (int i=0;i<2;i++) {
      for (int j=0;j<2;j++) {
	if (l1[i].second!=lt[j].second)
	  maximiza(max1t[u],l1[i].first+a[u]+lt[j].first);
	if (l1t[i].second!=lt[j].second)
	  maximiza(max2[u],l1t[i].first+a[u]+lt[j].first);
      }
    }
  }
  if (len>=3)
    for (int i=0;i<3;i++)
      for (int j=0;j<3;j++)
	for (int k=0;k<3;k++)
	  if (l1[i].second!=lt[j].second and l1[i].second!=lt[k].second and j!=k)
	    maximiza(max2[u],l1[i].first+a[u]+lt[j].first+lt[k].first);
  maximiza(max1[u],maxt[u]);
  maximiza(max1t[u],max1[u]);
  maximiza(max2[u],max1t[u]);
  //cout<<u<<" a "<<a[u]<<" maxt "<<maxt[u]<<" max1 "<<max1[u]<<" max1t "<<max1t[u]<<" max2 "<<max2[u]<<endl;
}

int n;

int main()
{
  ios::sync_with_stdio(false);
  cin>>n;
  for (int i=1;i<=n;i++)
    cin>>a[i];
  for (int i=0;i<n-1;i++) {
    int u,v;
    cin>>u>>v;
    g[u].push_back(v);
    g[v].push_back(u);
  }
  eliminapadre(1,0);
  calcula(1);
  cout<<max2[1]<<endl;
}
