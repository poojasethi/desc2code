#include<cstring>
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<map>
#include<cmath>
#define rep(i,l,r) for (int i=l;i<=r;i++)
#define down(i,l,r) for (int i=l;i>=r;i--)
#define clr(x,y) memset(x,y,sizeof(x))
#define maxn 100500
#define inf 1e9
#define ll unsigned long long
#define eps 1e-6
using namespace std;
struct data{int obj,pre; }e[maxn*2];
struct node{ll x;int y; }Dia[maxn][3],dep[maxn][4];
ll gdia[maxn],gdep[maxn],Dep[4],a[maxn],dia[maxn],ans;
int n,tot,head[maxn];
int read(){
    int x=0,f=1; char ch=getchar();
    while (!isdigit(ch)){if (ch=='-') f=-1; ch=getchar();}
    while (isdigit(ch)){x=x*10+ch-'0'; ch=getchar();}
    return x*f;
}
bool operator <(node a,node b){
	return a.x<b.x;
}
void insert(int x,int y){
	e[++tot].obj=y; e[tot].pre=head[x]; head[x]=tot;
}
void dfs(int u,int f){
	dia[u]=0;
	for (int j=head[u];j;j=e[j].pre){
		int v=e[j].obj;
		if (v==f) continue;
		dfs(v,u);
		dep[u][3]=(node){dep[v][0].x+a[v],v};
		sort(dep[u],dep[u]+4);
		reverse(dep[u],dep[u]+4);
		Dia[u][2]=(node){dia[v],v};
		sort(Dia[u],Dia[u]+3);
		reverse(Dia[u],Dia[u]+3);
	}
	dia[u]=max(Dia[u][0].x,dep[u][0].x+dep[u][1].x+a[u]);
}
void dp(int u,int f){
	for (int j=head[u];j;j=e[j].pre){
		int v=e[j].obj;
		if (v==f) continue;
		Dep[0]=gdep[u];
		if (dep[u][0].y==v) Dep[1]=dep[u][1].x,Dep[2]=dep[u][2].x;
		else if (dep[u][1].y==v) Dep[1]=dep[u][0].x,Dep[2]=dep[u][2].x;
		else Dep[1]=dep[u][0].x,Dep[2]=dep[u][1].x;
		sort(Dep,Dep+3);
		gdep[v]=Dep[2]+a[u];
		gdia[v]=max(gdia[u],Dep[2]+Dep[1]+a[u]);
		if (Dia[u][0].y==v) gdia[v]=max(gdia[v],Dia[u][1].x);
		else gdia[v]=max(gdia[v],Dia[u][0].x);
		ans=max(ans,dia[v]+gdia[v]);
		dp(v,u);
	}
}
int main(){
//	freopen("in.txt","r",stdin);
	n=read();
	rep(i,1,n) a[i]=read();
	rep(i,1,n-1){
		int x=read(),y=read();
		insert(x,y); insert(y,x);
	}
	dfs(1,0);
//	rep(i,1,n) printf("%lld ",dia[i]);
	dp(1,0);
	printf("%lld\n",ans);
    return 0;
}
