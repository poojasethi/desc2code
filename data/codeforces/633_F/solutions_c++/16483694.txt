#include<cstdio>
#include<iostream>
#include<cstring>
using namespace std;

struct sef { int ne, en; }h[200050];
int tot, first[100050];

int n, a[100050];
long long ans;
long long mx[100050][3], f[100050][3];

inline void setl(int x, int y) {
	h[++tot].ne = first[x]; h[tot].en = y;
	first[x] = tot;
}

void Dfs(int x, int fa) {
	int y;
	long long tmp = 0;
	for (int i = first[x]; y = h[i].en, i; i = h[i].ne)
		if (y != fa) {
			Dfs(y, x);
			if (mx[y][0] > mx[x][0]) {
				mx[x][2] = mx[x][1]; mx[x][1] = mx[x][0];
				mx[x][0] = mx[y][0];
			} else if (mx[y][0] > mx[x][1]) {
				mx[x][2] = mx[x][1]; mx[x][1] = mx[y][0];
			} else if (mx[y][0] > mx[x][2]) mx[x][2] = mx[y][0];
			ans = max(ans, tmp + f[y][0]);
			tmp = max(tmp, f[y][0]);
		}
	f[x][0] = max(mx[x][0] + mx[x][1] + a[x], tmp);
	
	long long v1, v2;
	for (int i = first[x]; y = h[i].en, i; i = h[i].ne)
		if (y != fa) {
			v1 = (mx[y][0] > mx[x][1] ? mx[x][1] : mx[x][0]);
			v2 = (mx[y][0] == mx[x][0] ? mx[x][2] : (mx[y][0] == mx[x][1] ? mx[x][2] : mx[x][1]));
			f[x][1] = max(f[x][1], max(v1 + f[y][0] + a[x], f[y][1] + a[x]));
			ans = max(ans, max(f[y][1] + v1, f[y][0] + v1 + v2) + a[x]);
		}
	for (int i = 1; i < 2; ++i) ans = max(ans, f[x][i]);
	mx[x][0] += a[x];
}

int main()
{
	scanf("%d", &n);
	for (int i = 1; i <= n; ++i) scanf("%d", &a[i]);
	int x, y;
	for (int i = 1; i < n; ++i) {
		scanf("%d%d", &x, &y);
		setl(x, y);	setl(y, x);
	}
	Dfs(1, 0);
	cout << ans << endl;
}