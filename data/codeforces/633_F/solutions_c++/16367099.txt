#include<iostream>
#include<sstream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cstdlib>
#include<cmath>
#include<cctype>
#include<ctime>
#include<algorithm>
#include<iomanip>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<cassert>
#include<bitset>

using namespace std;
typedef long long LL;
const int N=1e5+10;
struct Edge
{
	int v,next;
	Edge(){}
	Edge(int v,int next):v(v),next(next){}
}edge[N*2];
LL f[N][5],a[N],num[N];
int p[N],edn;
vector<int> vec[N];
void addedge(int u,int v)
{
	edge[edn]=Edge(v,p[u]);
	p[u]=edn++;
}
void dfs(int x,int fa)
{
	for(int i=p[x];~i;i=edge[i].next)
	{
		int y=edge[i].v;
		if(y!=fa)
		{
			vec[x].push_back(y);
			num[x]++;
			dfs(y,x);
		}
	}
	LL t=0,t1=0,t2=0,t3=0,w1,w2,w3;
	//f[x][3]
	for(int i=0;i<num[x];i++)
		t=max(t,f[vec[x][i]][3]);
	f[x][3]=t+a[x];
	
	//f[x][2]
	f[x][2]=f[x][3];
	for(int i=0;i<num[x];i++)
	{
		int y=vec[x][i];
		f[x][2]=max(f[x][2],f[y][2]);
		if(f[y][3]>t1)
		{
			t2=t1;
			t1=f[y][3];
		}else if(f[y][3]>t2) t2=f[y][3];
	}
	f[x][2]=max(f[x][2],t1+t2+a[x]);
	
	//f[x][1]
	f[x][1]=f[x][2];
	t1=t2=0;
	w1=w2=0;
	for(int i=0;i<num[x];i++)
	{
		int y=vec[x][i];
		f[x][1]=max(f[x][1],f[y][1] + a[x]);
		if(f[y][3]>t1)
		{
			t2=t1;
			w2=w1;
			t1=f[y][3];
			w1=i;
		}else if(f[y][3]>t2)
		{
			t2=f[y][3];
			w2=i;
		}
	}
	for(int i=0;i<num[x];i++)
	{
		int y=vec[x][i];
		if(i!=w1) f[x][1]=max(f[x][1],t1 + f[y][2] + a[x]);
		else f[x][1]=max(f[x][1],t2 + f[y][2] + a[x]);
	}
	
	//f[x][0]
	f[x][0]=f[x][1];
	t1=t2=0;
	for(int i=0;i<num[x];i++)
	{
		int y=vec[x][i];
		f[x][0]=max(f[x][0],f[y][0]);
		if(f[y][2]>t1)
		{
			t2=t1;
			t1=f[y][2];
		}else if(f[y][2]>t2) t2=f[y][2];
	}
	f[x][0]=max(f[x][0],t1+t2);
	
	t1=t2=0;
	w1=0,w2=0;
	for(int i=0;i<num[x];i++)
	{
		int y=vec[x][i];
		if(f[y][3]>t1)
		{
			t2=t1;
			w2=w1;
			t1=f[y][3];
			w1=i;
		}else if(f[y][3]>t2)
		{
			t2=f[y][3];
			w2=i;
		}
	}
	for(int i=0;i<num[x];i++)
	{
		int y=vec[x][i];
		if(i!=w1) f[x][0]=max(f[x][0],t1 + f[y][1] + a[x]);
		else f[x][0]=max(f[x][0],t2 + f[y][1] + a[x]);
	}
	t1=t2=t3=w1=w2=w3=0;
	for(int i=0;i<num[x];i++)
	{
		int y=vec[x][i];
		if(f[y][3]>t1)
		{
			t3=t2;w3=w2;
			t2=t1;w2=w1;
			t1=f[y][3];
			w1=i;
		}else if(f[y][3]>t2)
		{
			t3=t2;
			w3=w2;
			t2=f[y][3];
			w2=i;
		}else if (f[y][3]>t3)
		{
			t3=f[y][3];
			w3=i;
		}
	}
	for(int i=0;i<num[x];i++)
	{
		int y=vec[x][i];
		if(i!=w1 && i!=w2) f[x][0]=max(f[x][0],t1+t2+f[y][2]+a[x]);
		if(i!=w2 && i!=w3) f[x][0]=max(f[x][0],t2+t3+f[y][2]+a[x]);
		if(i!=w1 && i!=w3) f[x][0]=max(f[x][0],t1+t3+f[y][2]+a[x]);
	}
}
int main() {
	int n;
	cin>>n;
	memset(p,-1,sizeof(p));
	for(int i=1;i<=n;i++)
		scanf("%I64d",&a[i]);
	for(int i=1;i<n;i++)
	{
		int u,v;
		scanf("%d%d",&u,&v);
		addedge(u,v);
		addedge(v,u);
	}
	dfs(1,0);
	cout<<f[1][0]<<endl;
	return 0;
}