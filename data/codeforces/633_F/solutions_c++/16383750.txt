#include<bits/stdc++.h>

using namespace std;

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define sol (root+root)
#define sag (root+root+1)
#define orta ((bas+son)/2)
#define ll long long
#define pii pair<int,int>
#define type(x) __typeof((x).begin())
#define foreach(it, x) for(type(x) it = (x).begin(); it != (x).end(); it++)

const int N=1e5+5;
const int mod=1e9+7;
const int inf=1e9+7;

int n,i,a,b;
int A[N];
ll dp[N][3][3],dp2[3][3];

vector<int> V[N];

int dfs(int x,int ata){

	int i,j,k,l,m;

	for(i=0 ; i<V[x].size() ; i++)
		if(V[x][i]!=ata){
			dfs(V[x][i],x);
			
			for(j=0 ; j<3 ; j++)
				for(k=0 ; k<3 ; k++)
					dp2[j][k] = dp[x][j][k];

			for(j=0 ; j<3 ; j++)
				for(k=0 ; k<3 ; k++)
					for(l=0 ; l<=j ; l++)
						for(m=0 ; m<=k ; m++)
							dp[x][j][k] = max(dp[x][j][k], dp2[l][m] + dp[V[x][i]][j-l][k-m]);
		}

	for(i=0 ; i<3 ; i++)
		for(j=0 ; j<3 ; j++)
			if(i)
				dp[x][i][j] += A[x];

	dp[x][0][2] = max(dp[x][0][2], dp[x][2][1]);
	dp[x][0][1] = max(dp[x][0][1],dp[x][2][0]);
	dp[x][2][0] = dp[x][2][1] = dp[x][2][2] = 0;
}

main(){

	scanf("%d",&n);

	for(i=1 ; i<=n ; i++)
		scanf("%d",A+i);

	for(i=1 ; i<n ; i++){
		scanf("%d %d",&a,&b);
		V[a].pb(b);
		V[b].pb(a);
	}

	dfs(1,0);

	printf("%lld",dp[1][0][2]);
}
