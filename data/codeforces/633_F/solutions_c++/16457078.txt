#include <bits/stdc++.h>

#define FI(i,a,b) for(int i=(a);i<=(b);i++)
#define FD(i,a,b) for(int i=(a);i>=(b);i--)

#define LL long long
#define PLL pair<LL,LL>
#define mp make_pair
#define fi first
#define se second

using namespace std;

int n,s[100005];
PLL fp1[100005],sp1[100005],tp1[100005];
PLL fp2[100005],sp2[100005];

vector<int> V[100005];

LL ans=0,v1[100005],v2[100005];

void dfs(int id,int prev){
  FI(i,0,(int)V[id].size()-1){
    int to=V[id][i];
    if(to==prev) continue;
    dfs(to,id);
    //update p1
    if(v1[to]>fp1[id].fi){
      tp1[id]=sp1[id];
      sp1[id]=fp1[id];
      fp1[id]=mp(v1[to],to);
    }
    else if(v1[to]>sp1[id].fi){
      tp1[id]=sp1[id];
      sp1[id]=mp(v1[to],to);
    }
    else if(v1[to]>tp1[id].fi){
      tp1[id]=mp(v1[to],to);
    }
    //update p2
    if(v2[to]>fp2[id].fi){
      sp2[id]=fp2[id];
      fp2[id]=mp(v2[to],to);
    }
    else if(v2[to]>sp2[id].fi){
      sp2[id]=mp(v2[to],to);
    }
  }
  v1[id]=fp1[id].fi+s[id];
  v2[id]=max(fp2[id].fi,s[id]+fp1[id].fi+sp1[id].fi);
  return;
}

void dfs2(int id,int prev,LL val){
  FI(i,0,(int)V[id].size()-1){
    int to=V[id][i];
    if(to==prev) continue;
    //case 1
    if(fp1[id].se==to) ans=max(ans,val+s[id]+sp1[id].fi+v2[to]);
    else ans=max(ans,val+s[id]+fp1[id].fi+v2[to]);
    //case 2
    if(fp1[id].se==to) ans=max(ans,s[id]+sp1[id].fi+tp1[id].fi+v2[to]);
    else if(sp1[id].se==to) ans=max(ans,s[id]+fp1[id].fi+tp1[id].fi+v2[to]);
    else ans=max(ans,s[id]+fp1[id].fi+sp1[id].fi+v2[to]);
    //case 3
    if(fp2[id].se==to) ans=max(ans,v2[to]+v2[sp2[id].se]);
    else ans=max(ans,v2[to]+v2[fp2[id].se]);
  }
  FI(i,0,(int)V[id].size()-1){
    int to=V[id][i];
    if(to==prev) continue;
    if(fp1[id].se==to) dfs2(to,id,s[id]+max(val,sp1[id].fi));
    else dfs2(to,id,s[id]+max(val,fp1[id].fi));
  }
  return;
}

int main(){
  scanf("%d",&n);
  FI(i,1,n) scanf("%d",&s[i]);
  FI(i,2,n){
    int a,b;
    scanf("%d %d",&a,&b);
    V[a].push_back(b);
    V[b].push_back(a);
  }
  dfs(1,-1);
  dfs2(1,-1,0);
  
  printf("%lld\n",ans);
  return 0;
}