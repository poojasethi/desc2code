#include<cmath>
#include<cstdio>
#include<cstring>
#include<algorithm>
#define fo(i,a,b) for (int i = a;i <= b;i ++)
#define eps 1e-10
#define sqr(x) ((x)*(x))

using namespace std;

const int maxn = 950005;

int N,M,D,ans;

struct P
{
    long double rad;
    int v;
    P(long double _rad = 0.0,int _v = 0){rad = _rad, v = _v;}
}a[maxn];

inline bool cmp(const P &a,const P &b)
{
    long double delt = a.rad - b.rad;
    if (delt < -eps) return 1;
    else return abs(delt) < eps && a.v > b.v;
}

int main()
{
    scanf("%d%d",&N,&D);
    fo(i,1,N)
    {
        int x,y,r;
        scanf("%d%d%d",&x,&y,&r);
        long double c = sqrtl(sqr(x)+sqr(y));
        long double mid = atan2(y,x);
        int st = 1 + (c-r-eps)/D, en = (c+r) / D;
        fo(j,st,en)
        {
            long double d = j * D;
            long double rad = 0.5 * (sqr(c)+sqr(d)-sqr(r)) / c / d;
            rad = acos(rad);
            a[++M] = P(mid-rad,1);
            a[++M] = P(mid+rad,-1);
        }
    }
    sort(a+1,a+1+M,cmp);
    int cur = 0;
    fo(i,1,M)
    {
        cur += a[i].v;
        ans = max(ans,cur);
    }
    printf("%d\n",ans);
    return 0;
}