#include<cstdio>
#include<cmath>
#include<cstring>
#include<algorithm>

using namespace std;

double Eps=1e-9;
double Pi=acos(-1);

const int N=2000000;
int n,d;

struct node{
  double x;
  int y;
}h[N];
int tot;
void put(double x,int y){tot++;h[tot].x=x;h[tot].y=y;}
bool cmp(node u,node v){
  return u.x<v.x;
}

int main(){
  scanf("%d%d",&n,&d);
  for(int i=1;i<=n;i++){
    int x,y,r;
    scanf("%d%d%d",&x,&y,&r);
    int R=(int)floor((sqrt(x*x+y*y)+r)/d);
    for(int j=R;j>=1&&d*j+r>=sqrt(x*x+y*y);j--){
      double det=acos((j*j*d*d+x*x+y*y-r*r)/(2*j*d*sqrt(x*x+y*y)));
      double mid=atan2(x,y);
      double a=mid-det-Eps,b=mid+det+Eps;
      if(a<-Pi){
        put(a+2*Pi,1);
        put(Pi,-1);
        put(-Pi,1);
        put(b,-1);
      }
      else if(b>Pi){
        put(a,1);
        put(Pi,-1);
        put(-Pi,1);
        put(b-2*Pi,-1);   
      }
      else{
        put(a,1);put(b,-1);
      }
    }
  }
  sort(h+1,h+tot+1,cmp);
  int now=0,ans=0;
  for(int i=1;i<=tot;i++){
    now+=h[i].y;
    if(now>ans) ans=now;
  }
  printf("%d\n",ans); 
}
