#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#define N 20010
#define M N*80
#define eps (1e-8)
#define db double
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
const db pi=acos(-1);
struct O {
	db l,r;
} b[M];
int i,j,k,n,m,t,tt,an;
int f[M];
db x,y,rr,c[M];
inline void Into(db l,db r) {
	b[++t]=(O){l,r};
	c[++tt]=l;
	c[++tt]=r;
}
inline int find(db x) {
	int l=1,r=m,mid;
	for (;l<=r;) {
		mid=(l+r)/2;
		if (abs(c[mid]-x)<eps) return mid;
		if (c[mid]<x) l=mid+1;
		else r=mid-1;
	}
	return 0;
}
int main() {
	//freopen("420e.in","r",stdin);
	scanf("%d%d",&n,&m);
	For(i,1,n) {
		scanf("%lf%lf%lf",&x,&y,&rr);
		db ng=x*x+y*y;
		db dis=sqrt(ng);
		int L=int(ceil(dis-rr-eps)+eps),R=int(dis+rr+eps);
		L=(L-1)/m+1,R/=m;
		for (;L<=R;L++) {
			db ri=L*m;
			db ang=atan2(y,x);
			db A=(ri*ri+ng-rr*rr)/2/ri/dis;
			A=abs(acos(A));
			db l=ang-A;
			db r=ang+A;
			if (l<-pi) l+=2*pi;
			if (r>pi) r-=2*pi;
			if (l<=r) Into(l,r);
			else Into(l,pi),Into(-pi,r);
		}
	}
	sort(c+1,c+tt+1);
	m=0;
	For(i,1,tt) if (i==1||c[i]>c[m]+eps) c[++m]=c[i];
	For(i,1,t) {
		int A=find(b[i].l);
		f[A]++;
		A=find(b[i].r)+1;
		f[A]--;
	}
	For(i,1,m) f[i]+=f[i-1],an=max(an,f[i]);
	printf("%d\n",an);
	return 0;
}
