#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<cmath>
#define ld long double
#define fo(i,a,b) for(int i=a;i<=b;i++)
#define maxn 1000005
#define pi acos(-1)
#define eps 1e-10
using namespace std;

struct note{
	ld thi;
	int add;
}p[maxn];

int n,d,sum,tot;

ld sqr(ld x){
	return x*x;
}

ld dist(ld x,ld y,ld xx,ld yy){
	return sqrt(sqr(x-xx)+sqr(y-yy));
}

ld get(ld A,ld B,ld C){
	return acos((sqr(A)+sqr(C)-sqr(B))/(2*A*C));
}

bool cmp(note i,note j){
	return j.thi-i.thi>eps || fabs(j.thi-i.thi)<eps && i.add>j.add;
}

int main(){
	scanf("%d%d",&n,&d);
	fo(i,1,n) {
		ld x,y,r;
		cin>>x>>y>>r;
		ld tmp=atan2(y,x),dis=dist(0,0,x,y);
		int fr=ceil((dis-r-eps) / d),to=floor((dis+r+eps) / d);
		fo(j,fr,to) {
			ld thi=get((ld)j*d,r,dis);
			ld r1=tmp-thi,r2=tmp+thi;
			if (r1<=-pi) {
				r1+=2*pi;
				++sum;
			}
			else if (r2>=pi) {
				r2-=2*pi;
				++sum;
			}
			p[++tot].thi=r1;
			p[tot].add=1;
			p[++tot].thi=r2;
			p[tot].add=-1;
		}
	}
	sort(p+1,p+tot+1,cmp);
	int ans=0;
	fo(i,1,tot) {
		sum+=p[i].add;
		ans=max(ans,sum);
	}
	printf("%d",ans);
	return 0;
}
