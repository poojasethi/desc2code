#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#define mp make_pair
#define pb push_back
#define fir first
#define sec second
using namespace std;
typedef long long ll;

inline void R(int &x) {
	char ch = getchar(); x = 0;
	for (; ch<'0'; ch=getchar());
	for (; ch>='0'; ch=getchar()) x = x*10 + ch-'0';
}
const int N = 100005;
const double pi = 3.1415926535897932384626433832795;
const double eps = 1e-9;
int n, d;
inline double reg(double ang) {
	while (ang < 0) ang += 2*pi;
	while (ang > 2*pi) ang -= 2*pi;
	return ang; 
}
pair<double, double> get(double r0, double x, double y, double r){
	double A = r0, B = hypot(x, y), C = r;
	double ang = acos((A*A + B*B - C*C) / (2*A*B)), base = atan2(y, x);
	return mp(reg(base-ang), reg(base+ang));
}
vector< pair<double, int> > e;
int main() {
	R(n); R(d);
	double x, y, r;
	pair<double, double> res;
	int st, ed, cnt = 0;;
	for (int i=1; i<=n; ++i) {
		scanf("%lf%lf%lf", &x, &y, &r);
		double dis = hypot(x, y);
		st = (dis - r) / d;
		for (; st * d < dis - r - eps; ++st);
		ed = (dis + r) / d;
		for (; ed * d <= dis + r + eps; ++ed);
		for (int j=st; j<ed; ++j) {
			res = get(j * d, x, y, r);
			e.pb(mp(res.fir, -1));
			e.pb(mp(res.sec, 1));
			if (res.sec < res.fir)
				++cnt;
		}
	}
	sort(e.begin(), e.end());
	int ans = cnt;
	for (int i=0; i<e.size(); ++i) {
		cnt -= e[i].sec;
		ans = max(ans, cnt);
	}
	printf("%d\n", ans);
	return 0;
}
