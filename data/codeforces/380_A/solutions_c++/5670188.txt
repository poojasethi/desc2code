#include <iostream>
#include <string.h>
#include <stdio.h>
#include <algorithm>
using namespace std;
int n,m;
long long sum[100005];
int c[100005],v[100005];
bool ans=0;
long long query(long long x)
{
	int ind=(lower_bound(sum+1,sum+m,x)-sum);
	if (v[ind]==0) {ans=1; return c[ind];}
	return (x-sum[ind-1]-1)%c[ind]+1;
}
int main()
{
	int i,j,k,l;
	cin>>m;
	sum[0]=0;
	memset(v,0,sizeof(v));
	for (i=1;i<=m;i++)
	{
		cin>>j;
		if (j==1)
		{
			cin>>l;
			c[i]=l;
			sum[i]=sum[i-1]+1LL;
		}
		else
		{
			cin>>k>>l;
			c[i]=k; v[i]=l;
			sum[i]=sum[i-1]+1LL*k*l;
		}
	}
	cin>>n;
	for (i=0;i<n;i++)
	{
		long long a;
		cin>>a;
		ans=0;
		while (!ans)
		{
			a=query(a);
		}
		cout<<a<<" ";
	}
	cout<<endl;
}
