#include <algorithm>
#include <cstdio>
using namespace std;
typedef long long LL;
const int N = 100005;
int n,m,x[N],k[N];
LL t,a[N];
int work(LL t) {
    int l = lower_bound(a,a+n,t)-a-1;
    if (k[l] == 1) return x[l];
    else  return work((t-a[l]-1)%x[l]+1);
}
int main() {
    scanf("%d",&n);
    for (int i = 0;i < n;i++) {
        scanf("%d",k+i);
        if (k[i] == 1) {
            scanf("%d",x+i);
            a[i+1] = a[i]+1;
        } else {
            scanf("%d%I64d",x+i,&t);
            a[i+1] = a[i]+x[i]*t;
        }
    }
    scanf("%d",&m);
    while (m--) {
        scanf("%I64d",&t);
        printf("%d ",work(t));
    }
    return 0;
}
