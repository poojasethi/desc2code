#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<queue>
#include<map>
#include<set>
#include<vector>
#include<math.h>
#include<sstream>
#include<algorithm>
#include<iostream>
using namespace std;
typedef long long ll;
#define N 100010
const int inf=1<<29;

int fa[N];
ll val[N];
int find(int x){
	if(fa[x]==-1) return x;
	return fa[x]=find(fa[x]);
}
set<pair<ll,int> > S;
vector<pair<int,int> > ans;
int main() {
	int n,m,p,q,x,y,z;
	scanf("%d%d%d%d",&n,&m,&p,&q);
	memset(fa,-1,sizeof(fa));
	for(int i=0;i<m;i++){
		scanf("%d%d%d",&x,&y,&z);
		if(find(x)==find(y))
			val[find(x)]+=z;
		else{
			val[find(y)]+=val[find(x)]+z;
			fa[find(x)]=find(y);
		}
	}
	int cnt=0;
	for(int i=1;i<=n;i++)
		if(fa[i]==-1){
			cnt++;
			S.insert(make_pair(val[i],i));
		}
	if(q>cnt){
		printf("NO\n");
		return 0;
	}

	set<pair<ll,int> >::iterator it,sec;
	while(S.size()>q&&p>0){
		sec=S.begin();
		it=sec++;
		ans.push_back(make_pair(it->second,sec->second));
		ll t=min(it->first+sec->first+1,1000000000LL);
		val[sec->second]+=val[it->second]+t;
		fa[it->second]=sec->second;
		S.insert(make_pair(val[sec->second],sec->second));
		S.erase(it);S.erase(sec);
		p--;
	}
	if(S.size()>q){
		printf("NO\n");
		return 0;
	}
	if(q==n&&p){
		printf("NO\n");
		return 0;
	}
	for(int i=1;i<=n;i++){
		if(fa[i]!=-1){
			for(int j=0;j<p;j++)
				ans.push_back(make_pair(i,fa[i]));
			break;
		}
	}
	printf("YES\n");
	for(int i=0;i<ans.size();i++){
		printf("%d %d\n",ans[i].first,ans[i].second);
	}

}
