#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<ctime>
#include<cmath>
#include<iostream>
#include<climits>
#include<string>
#include<deque>
#include<list>
#include<queue>
#include<vector>
#include<algorithm>
#include<map>
#include<stack>
#include<set>
using namespace std;
#define inf 1000000000
#define N 120000
#define mk make_pair
using namespace std;
priority_queue<pair<int,int> > Q;
int s,t,i,fa[N],p,q,n,m,x,y,l,X[N],L[N],val[N],tot;
int get(int x){
	return fa[x]==x?x:(fa[x]=get(fa[x]));
}
int main(){
	scanf("%d%d%d%d",&n,&m,&p,&q);
	for(i=1;i<=n;++i)fa[i]=i;
	for(i=1;i<=m;++i){
		scanf("%d%d%d",&x,&y,&l);
		X[i]=x; L[i]=l;
		fa[get(x)]=get(y);
	}
	s=-1;
	for(i=1;i<=m;++i)val[get(X[i])]=max(-inf,val[get(X[i])]-L[i]);
	for(i=1;i<=n;++i)if(get(i)==i)Q.push(mk(val[i],i));
	else s=i,t=get(i);
	tot=Q.size();
	if(q>tot || tot-p>q || q==n && s==-1 && p>=1)return puts("NO"),0;
	puts("YES");
	for(i=1;i<=tot-q;++i){
		pair<int,int> a1,a2;
		a1=Q.top(); Q.pop();
		a2=Q.top(); Q.pop();
		s=a1.second; t=a2.second;
		printf("%d %d\n",s,t);
		a2.first=max(0ll-inf,2ll*(a1.first+a2.first)-1);
		Q.push(a2);
	}
	for(;i<=p;++i)printf("%d %d\n",s,t);
}
