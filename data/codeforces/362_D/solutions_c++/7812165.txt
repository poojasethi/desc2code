#include <iostream>
#include <cstdio>
#include <ctime>
#include <cassert>
#include <cmath>
#include <stack>
#include <set>
#include <map>
#include <vector>
#include <queue>
#include <algorithm>
#include <utility>
#include <cstdlib>
#include <cstring>

using namespace std;

#ifdef WIN32
	#define lld "%I64d"
#else
	#define lld "%lld"
#endif

#define mp make_pair
#define pb push_back
typedef long long ll;

const ll M = 1e5 + 15;
const ll Q = 1e9;

bool used[M];
vector<pair<ll, ll> > g[M];
ll su;
priority_queue <pair<ll, ll> > que;

void dfs(ll i){
	used[i] = true;
	for (ll j = 0; j < (ll)g[i].size(); j++)
		su += g[i][j].second;
	for (ll j = 0; j < (ll)g[i].size(); j++)
		if (!used[g[i][j].first])
			dfs(g[i][j].first);
}
int main(){
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	ll n, m, p, q, nom, i,s , f, cur1;
	ll cur;
	pair<ll, ll> a1, a2;
	cin >> n >> m >> p >> q;
	for (i = 0; i < m; i++){
		cin >> s >> f >> cur1;
		g[s].pb(mp(f, cur1));
		g[f].pb(mp(s, cur1));
	}
	nom = 0;
	for (i = 1; i <= n; i++){
		if (!used[i]){
			su = 0;
			dfs(i);
			su /= 2;       
			que.push(mp(-su, i));
			nom++;
		}
	}
	if (q > nom || p < (nom - q) || (q == n && p != 0)){
		cout << "NO";
		return 0;
	}
	cout << "YES\n";
	for (i = 0; i < nom - q; i++){
		a1 = que.top();
		que.pop();
		a2 = que.top();
		que.pop();
		cur = min(- a1.first - a2.first + 1, Q);
		printf("%d %d\n", (int)a1.second, (int)a2.second);
		s = a1.second;
		f = a2.second;
		que.push(mp(a1.first + a2.first - cur, a1.second));
	}
	
	for (i = 0; i < p - (nom - q); i++)
		printf("%d %d\n", (int)s, (int)f);
	return 0;
}