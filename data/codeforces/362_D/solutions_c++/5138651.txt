#include<iostream>
#include<cstdio>
#include<set>
#include<vector>
using namespace std;

#define FOR( i , a , n ) for(int (i)=(a);(i)< int(n);++(i))
#define mp pair< long long , int >
#define No() cout<<"NO"<<endl;return 0
typedef long long ll;
const int maxN=1e5+10;
int n,m,p,q,a[maxN],b[maxN],c[maxN],dad[maxN];
ll tot[maxN];
ll inf=1e9;
set< pair<ll , int> > s;
vector< pair<int,int> > ans;

inline int find(int x)
{
  if(dad[x]==x) return x;
  else return dad[x]=find(dad[x]);
}
void join(int x,int y,ll cur)
{
  int dx=find(x),dy=find(y);
  if(dy==dx) tot[dx]+=(ll)cur;
  else dad[dy]=dx,tot[dx]+=cur+tot[dy];
}

int main()
{
  ios_base::sync_with_stdio(false);
  cin>>n>>m>>p>>q;
  FOR(i,1,n+1) dad[i]=i;
  FOR(i,0,m)
    {
      cin>>a[i]>>b[i]>>c[i];
      join(a[i],b[i],(ll)c[i]);
    }
  FOR(i,1,n+1) if(dad[i]==i) s.insert(mp(tot[i],i));
  ll cnt=s.size();
  while(cnt>q and s.size()>1 and p>0)
    {
      int fi,se;
      fi=(*s.begin()).second;
      s.erase(s.begin());
      se=(*s.begin()).second;
      s.erase(s.begin());
      ll val=min(inf,tot[fi]+tot[se]+1);
      join(fi,se,val);
      ans.push_back(pair<int,int> (fi,se));
      s.insert(mp(tot[fi],fi));
      cnt--,p--;
    }
  if(cnt!=q) {No();}
  if(m!=0 and p!=0)
    {
      FOR(i,0,p) ans.push_back(pair<int,int> (a[0],b[0]));
      p=0;
    }
  if(ans.size()!=0 and p!=0)
    {
      FOR(i,0,p) ans.push_back(ans.front());
      p=0;
    }
  if(p!=0){No();}
  cout<<"YES"<<endl;
  FOR(i,0,ans.size())
    {
      cout<<ans[i].first<<' '<<ans[i].second<<endl;
    }
  return 0;
}

