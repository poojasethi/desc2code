#include <iostream>
#include <queue>
#include <vector>
using namespace std;

typedef long long ll;
typedef pair<ll,ll> pii;

ll MLEN = -1000000000;
ll n, m, p, q, par[100005], len[100005] = {}, reg = 0;
priority_queue<pii> pq;
vector<pii> act;

ll find(ll a){
    return (a==par[a])?a:par[a]=find(par[a]);
}

void join(ll a, ll b){
    par[find(a)] = find(b); 
}

int main() {
    
    cin >> n >> m >> p >> q;
    for(int i = 0; i<n; i++) par[i] = i;
    for(int i = 0; i<m; i++){
        ll a, b, c, newLen;
        cin >> a >> b >> c;
        a--; b--;
        newLen = len[find(a)]+c;
        if(find(a)!=find(b)) newLen+=len[find(b)];
        join(a,b);
        len[find(a)] = newLen;
    }
    for(int i = 0; i<n; i++) if(find(i)==i) pq.push(pii(-len[i],i)), reg++;
    if(reg<q||reg-p>q){
        cout << "NO";
        return 0;
    }
    for( ; reg>q; reg--, p--){
        pii a = pq.top(), b;
        pq.pop();
        b = pq.top();
        pq.pop();
        ll newLen = a.first+b.first+max(MLEN,a.first+b.first-1);
        join(a.second, b.second);
        act.push_back(pii(a.second,b.second));
        len[find(a.second)] = newLen;
        pq.push(pii(len[find(a.second)],find(a.second)));
    }
    int junk = -1;
    for(int i = 0; i<n; i++){
        if(find(i)!=i) junk = i;
        if(i==n-1&&p&&junk<0){
            cout << "NO";
            return 0;
        }
    }
    for(int i = 0; i<p; i++) act.push_back(pii(junk,find(junk)));
    cout << "YES\n";
    for(int i = 0; i<act.size(); i++) cout << act[i].first+1 << " " << act[i].second+1 << '\n';

}