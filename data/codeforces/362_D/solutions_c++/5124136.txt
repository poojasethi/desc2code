#include <cmath>
#include <map>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <queue>
using namespace std;

typedef pair<int, int> Pii;
#define x first
#define y second
#define mp make_pair

typedef long long LL;

const int MAXN = 100000 + 10;

int n, m, p, q, cnt, f[MAXN], X;
LL len[MAXN];

int getf(int x)
{
	if (f[x] == x) return x;
	f[x] = getf(f[x]);
	return f[x];
}
typedef pair<LL, int> Pli;
priority_queue<Pli> que;
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout);
#endif
	cin >> n >> m >> p >> q;
	X = n;
	if (!m && n - p != q && q == n)
		puts("NO"), exit(0);
	cnt = n;
	for (int i = 1; i <= n; ++i)
		f[i] = i;
	for (int i = 1; i <= m; ++i)
	{
		int x, y, z;
		cin >> x >> y >> z;
		x = getf(x), y = getf(y);
		if (x != y)
			f[y] = x, len[x] += len[y], --cnt;
		len[x] += z;
		X = x;
	}
	if (cnt < q)
		puts("NO"), exit(0);
	if (cnt - p > q)
		puts("NO"), exit(0);
	puts("YES");
	for (int i = 1; i <= n; ++i)
		if (getf(i) == i)
			que.push(mp(-len[i], i));
	LL Tohka = 0;
	for (; cnt > q; )
	{
		Pii a = que.top();
		que.pop();
		Pii b = que.top();
		que.pop();
		cout << a.y << " " << b.y << endl;
		Tohka += min((int)1e9, -a.x - b.x + 1);
		a.x += max(-(int)1e9, a.x + b.x - 1) + b.x;
		f[b.y] = a.y;
		que.push(a);
		--p; --cnt;
	}
	int w = n;
	for (; w >= 1; --w)
		if (w != X && getf(w) == getf(X))
			break;
	for (; p > 0; cout << X << " " << w << endl, --p);
	fclose(stdin);
	fclose(stdout);
	return 0;
}

