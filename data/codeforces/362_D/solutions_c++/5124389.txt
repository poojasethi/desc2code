#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <queue>
#define N 100010
#define inf 1000000000
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int a,b,c;
} e[N];
struct w1 {
	int head,s;
};
int i,j,k,n,m,p,q;
int f[N],s[N],ff[N];
inline bool operator < (const w1 &a,const w1 &b) {
	return a.s>b.s;
}
priority_queue<w1>a;
inline w1 mk(int head,int s) {
	w1 A={head,s};
	return A;
}
int get(int x) {
	return f[x]==x?x:f[x]=get(f[x]);
}
inline void fail() {
	printf("NO\n");
	//for(;;);
	exit(0);
}
int main() {
	scanf("%d%d%d%d",&n,&m,&p,&q);
	For(i,1,n) f[i]=i;
	For(i,1,m) {
		scanf("%d%d%d",&e[i].a,&e[i].b,&e[i].c);
		f[get(e[i].a)]=get(e[i].b);
	}
	For(i,1,m) {
		int A=get(e[i].a);
		s[A]=min(s[A]+e[i].c,inf);
	}
	For(i,1,n) if (get(i)==i) a.push(mk(i,s[i]));
	if (a.size()<q) fail();
	if (a.size()>q+p) fail();
	if (!m&&a.size()==q&&p) fail();
	printf("YES\n");
	for (;a.size()>q&&p;p--) {
		w1 A=a.top();
		a.pop();
		w1 B=a.top();
		a.pop();
		printf("%d %d\n",A.head,B.head);
		int C=min(A.s+B.s+1,inf);
		C=min(min(A.s+B.s,inf)+C,inf);
		a.push(mk(A.head,C));
		f[B.head]=A.head;
	}
	For(i,1,n) {
		int A=get(i);
		if (ff[A]) {
			For(j,1,p) printf("%d %d\n",ff[A],i);
			break;
		}
		ff[A]=i;
	}
	//for(;;);
	return 0;
}
