#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<ll, ll> pii;

const ll MAXN = 1e5 + 100;

ll sum[MAXN], par[MAXN], sz[MAXN];
pii ans[MAXN];
ll ansN;


ll findpar(ll u){
    return (par[u] == u ? u : findpar(par[u]));
}

void join(ll u, int v, int l){
    u = findpar(u), v = findpar(v);

    if (sz[v] > sz[u]) swap(sz[v], sz[u]);
    if (u == v) {
        sum[u] += l;
        return;
    }

    par[v] = u;
    sz[u] += sz[v];
    sum[u] += sum[v] + l;
}

int main(){
	ll n, m, p, q;

	ios::sync_with_stdio(0);
	scanf("%I64d%I64d%I64d%I64d", &n, &m, &p, &q);
	for (ll i = 0; i < n; i++)
		par[i] = i;

	for (ll i = 0 ; i < m; i++){
		ll x, y, l; 
		scanf("%I64d%I64d%I64d", &x, &y, &l);
		join(x -1, y -1, l);
	}

	set<pii> s;
	for (ll i = 0; i < n; i++)
		s.insert(pii(sum[findpar(i)] ,findpar(i)));
	
	if ((ll)s.size() - p > q || q > s.size()){
	//	cerr << s.size() - p << " " <<  (-1 > q)  << " , " << (q > s.size()) << "\n";
		printf("NO\n");
		return 0;
	}


	//cout << "YES\n";
	for (; s.size() != q; p--){
		pii x = *s.begin(); s.erase(s.begin());
		pii y = *s.begin(); s.erase(s.begin());

		join( x.second, y.second, min( x.first + y.first + 1, (ll)1e9) );
		ans[ansN++] = pii(x.second + 1, y.second + 1);
		s.insert(pii(sum[findpar(x.second)], findpar(x.second)));
	}

	for (ll i = 0; i < n; i++){
		int j = findpar(i);
		if (i != j){
			while(p){
				ans[ansN++] = pii(i + 1, j + 1);
				p--;
			}
			break;
		}
	}
			

	if (p){
		printf("NO\n");
		return 0;
	}

	printf("YES\n");
	for (ll i = 0; i < ansN; i++)
		printf("%I64d %I64d\n", ans[i].first, ans[i].second);

}
