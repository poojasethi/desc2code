#include <cstdio>
#include <queue>
#define maxn 100005
#define maxm 100005
using namespace std;
int fa[maxn],n,m,tot,p,q;
long long v[maxn];
struct zy{bool operator()(int &a,int &b){ return v[a]>v[b];}};
int find(int x){
    	if (fa[x]!=x) 
			fa[x]=find(fa[x]);
    	return fa[x];
	}
int main(){
		scanf("%d%d%d%d",&n,&m,&p,&q);
		for (int i=1;i<=n;++i)fa[i]=i;
		for (int i=1;i<=m;i++){
	 			int a,b,c;
        		scanf("%d%d%d",&a,&b,&c);
        		int x=find(a),y=find(b);
        		if (x!=y){
          				v[x]+=c+v[y];
            			fa[y]=fa[x];
          			}
        		else
          			v[x]+=c;
     		}
    	priority_queue<int,vector<int>,zy> dui;
    	for (int i=1;i<=n;i++) if (fa[i]==i) dui.push(i);
    	tot=dui.size();
		if (tot-p>q){printf("NO");return 0;}
    	if ((m==0)and(p>=1)and(q==n)){printf("NO");return 0;}
		if (tot<q){printf("NO");return 0;}
		printf("YES\n");
		q=tot-q;
		while (q--){
		 		int x,y;
		 		x=dui.top(); dui.pop();
	  	 		y=dui.top(); dui.pop();
	  	 		printf("%d %d\n",x,y);
	  	 		v[x]+=v[y];
	  	 		v[x]+=min(v[x]+1,(long long)(1e9));
	  	 		fa[y]=x;
	  	 		dui.push(x);
	  	 		p--;
	  		}
		if (p){
	  			for (int i=1;i<=n;i++)
	  	  		if(find(i)!=i){
	  	    			for (int j=1;j<=p;++j)
    	  	    		printf("%d %d\n",i,find(i));
						break;
	      			}
      		}
	}
	  	   				  							  			    		