#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
#include <numeric>
#include <cmath>
#include <queue>
#include <map>
#include <vector>
#include <set>
using namespace std; 
#define REP(i, n) for(int (i)=0; (i)<(int)(n); (i)++)
#define snuke(c, itr) for(typeof((c).begin()) itr=(c).begin(); itr!=(c).end(); itr++)
typedef long long ll; 

const int N=101000; 

int n, m, p, q; 
int a1, a2; 

ll lng[N]; 
int fa[N]; 

int dad(int x) {
    if (fa[x]==x) return x; 
    return fa[x]=dad(fa[x]); 
}

int nn; 
set<pair<ll, int> > s; 

int main() {
    scanf("%d%d%d%d", &n, &m, &p, &q); 
    int x, y, l, fx, fy; 
    for (int i=1; i<=n; i++) fa[i]=i; 
    REP(i, m){
        scanf("%d%d%d", &x, &y, &l); 
        fx=dad(x); fy=dad(y); 
        if (fx==fy) lng[fx]+=(ll)l; 
        else {
            a1=fx; a2=fy; 
            fa[fy]=fx; 
            lng[fx]+=(ll)l+lng[fy]; 
        }
    }
    for (int i=1; i<=n; i++) if (fa[i]==i) {
        nn++; 
        s.insert(make_pair(lng[i], i)); 
    }  
    if (q>nn||(q==nn&&nn==n&&p>0)||nn-q>p) {
        puts("NO"); 
        return 0; 
    }
    puts("YES"); 
    pair<ll, int> s1, s2; 
    set<pair<ll, int> >::iterator it; 
    ll tmp; 
    REP(i, nn-q) {
        it=s.begin(); 
        s1=*it; it++; s2=*it; 
        s.erase(s1); s.erase(s2); 
        a1=s1.second; a2=s2.second; 
        if (s1.first+s2.first>1e9) tmp=1e9; 
        else tmp=s1.first+s2.first+1;  
        s.insert(make_pair(s1.first+s2.first+tmp, s1.second)); 
        p--; 
        printf("%d %d\n", s1.second, s2.second); 
    }
    while (p--) printf("%d %d\n", a1, a2); 
    return 0; 
}
