#include <iostream>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <utility>
#include <algorithm>
#include <cmath>
#include <set>
#define MAXN 100010

using namespace std;

int n,m,p,q;
int par[MAXN];
long long len[MAXN];
int rg,rd;
vector<pair<int,int> > ans;
int X,Y;

struct cmp {
	bool operator()(int a, int b) {
		if (len[a] != len[b]) return len[a] < len[b];
		return a < b;
	}
};

set<int,cmp> s;

int find(int x) {
	if (x == par[x]) return x;
	return par[x] = find(par[x]);
}

void merge(int x, int y) {
	int xx = find(x), yy = find(y);
	if (xx == yy) return;
	len[xx] += len[yy];
	par[yy] = xx;
	rg--;
}

int main() {
	cin >> n >> m >> p >> q;
	rg = n;
	for (int i = 1; i <= n; i++) par[i] = i;
	for (int i = 0; i < m; i++) {
		int x,y,w;
		cin >> x >> y >> w;
		merge(x,y);
		len[find(x)] += w;
		X = x, Y = y;
	}
	
	for (int i = 1; i <= n; i++)
		if (find(i) == i) s.insert(i);
	
	while (rg > q && rd < p) {
		int x = *s.begin();
		s.erase(s.begin());
		if (s.empty()) break;
		int y = *s.begin();
		s.erase(s.begin());
		merge(x,y);
		len[find(x)] += min(len[find(x)]+1, 1000000000ll);
		rd++;
		ans.push_back(make_pair(x,y));
		s.insert(find(x));
	}
	if (rg == q && !(rd == 0 && p > 0 && m == 0)) {
		cout << "YES\n";
		for (int i = 0; i < rd; i++)
			cout << ans[i].first << ' ' << ans[i].second << '\n';
		for (int i = rd; i < p; i++) {
			if (m > 0) cout << X << ' ' << Y << '\n';
			else cout << ans[0].first << ' ' << ans[0].second << '\n';
		}
	}
	else cout << "NO\n";
}