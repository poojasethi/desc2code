import sys

def pro(nums):
    s = set()
    n = len(nums)
    for i in xrange(n - 1):
        j = i + 1
        delta = nums[j] - nums[i]
        s.add(delta)
    return len(s) <= 1

def main(n, nums):
    nums.sort()
    n = len(nums)
    ans = []
    if n == 1:
        ans = -1
    elif n == 2:
        delta = nums[1] - nums[0]
        if delta % 2 == 0:
            ans.append((nums[1] + nums[0]) / 2)
        ans.append(nums[0] - delta)
        ans.append(nums[1] + delta)
    else:
        if pro(nums):
            delta = nums[1] - nums[0]
            ans.append(nums[0] - delta)
            ans.append(nums[-1] + delta)
        else:
            d = {}
            for i in xrange(n - 1):
                j = i + 1
                delta = nums[j] - nums[i]
                d[delta] = d.get(delta, 0) + 1

            if len(d) != 2:
                ans = 0
            else:
                d = sorted(d.items(), key=lambda x: x[0])
                d0 = d[0]
                d1 = d[1]
                # print d
                # d0.delta < d1.delta

                if d0[0] * 2 == d1[0] and d1[1] == 1:
                    ddd = d1[0]
                    for i in xrange(n - 1):
                        j = i + 1
                        if nums[j] - nums[i] == ddd:
                            ans.append((nums[j] + nums[i]) / 2)
                            break
                else:
                    ans = 0
    if ans == -1 or ans == 0:
        print ans
    else:
        ans = list(set(ans))
        print len(ans)
        print ' '.join(map(str, sorted(ans)))
        return ans

if __name__ == '__main__':
    n = int(raw_input())
    nums = map(int, raw_input().split())
    main(n, nums)
