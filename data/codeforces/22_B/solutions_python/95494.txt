#!/usr/bin/env python
# -*- coding:utf-8 -*-
#

def readint(): return int(raw_input())
def readfloat(): return float(raw_input())
def readarray(N, foo):
        res = []
        for _ in xrange(N):
                res.append(foo())
        return res
def readlinearray(foo): return map(foo, raw_input().split())
def readlinearraylist(foo): return map(foo, list(raw_input()))

def get_perimeter(l1, c1, l2, c2):
    assert l1 <= l2, '%d %d' % (l1, l2)
    assert c1 <= c2, '%d %d' % (c1, c2)
    return 2 * (l2 - l1 + 1) + 2 * (c2 - c1 + 1) 

def get_max_perimeter(n, m, room):
    max_perimeter = 4
    for l1, c1 in [(l, c) for l in xrange(n) for c in xrange(m)]:
        if room[l1][c1] == 1:
            continue
        c2_limit = m
        for l2, c2 in [(l, c) for l in xrange(l1, n) for c in xrange(c1, m)]:
            if c2 >= c2_limit: continue
            if room[l2][c2] == 1:
                c2_limit = c2
                continue
            max_perimeter = max(max_perimeter, get_perimeter(l1, c1, l2, c2))
    return max_perimeter

if __name__ == '__main__':
    n, m = readlinearray(int)
    room = []
    for _ in xrange(n):
        room.append(readlinearraylist(int))
    print get_max_perimeter(n, m, room)