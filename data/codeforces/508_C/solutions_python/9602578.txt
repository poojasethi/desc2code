m, t, r = map(int, raw_input().split())
Ws = map(int, raw_input().split())

def is_impossible():
    first = -2*r
    last = -2*r - 2*t
    for i in xrange(0, m):
        first = Ws[i]-t
        if first < last: return True
        last = Ws[i]-t+ r
        if last >= Ws[i]: return True
    return False

secs = [0]*901
emply_slots = [True]*901

def find_prv_slot(curr):
    while True:
        curr = curr - 1
        if emply_slots[curr]:
            emply_slots[curr] = False
            return curr

def update_slot(curr):
    for sl in range(t):
        curr = curr + 1
        secs[curr] = secs[curr] + 1


def main():
    if t<r:
        print -1
        return

    count = 0

    for i in Ws:
        diff = r-secs[i+300]
        if diff <= 0: continue
        curr = 300+i
        for posit in xrange(diff):
            curr = find_prv_slot(curr)
            update_slot(curr)
        count = count + diff

##    for i in range(m-1, -1, -1):
##        if secs[Ws[i]+300] == r:
##            continue
##        for j in range(r):
##            if lit[300+Ws[i]+r-t] == 1:
##                continue
##            for k in range(300+Ws[i]+r-t , 300+Ws[i]+r):
##                secs[k] = secs[k] + 1
##            count = count + 1

    print count

main()
