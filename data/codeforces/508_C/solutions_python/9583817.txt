from bisect import bisect_right

B = {} 

m, t, R = map(int, raw_input().split()) 
W = map(int, raw_input().split()) 

cnt = [R] * m

cnt_light = [0]

def check(idx, w):
    i = w - 1
    k = 0 
    C = cnt[idx]
    while True:
        if k == C: 
            break
        l = i + 1
        r = l + t - 1
        if i not in B: 
            B[i] = 1
            cnt_light[0] += 1
            k += 1
            pos = bisect_right(W, r)
            for j in range(idx, pos): 
                if cnt[j] > 0:
                    cnt[j] -= 1

        i -= 1

    if cnt[idx] > 0: 
        return False
    return True

for i, w in enumerate(W): 
    if not check(i, w): 
        print -1 
        break
else: 
    print cnt_light[0]
