def ar():
    return map(int,raw_input().split())

def come_to_present(a,present, prev):
    for i in range(len(a)):
        a[i]=max(0,a[i]-present+prev)

def light_up(a,t):
    a.sort()
    j=0
    while j<len(a) and a[j]==0:
        a[j]=t-j
        j+=1
    #print j
    return j
def ghost_valid(a):
    a.sort()
    return a[0]>0

m,t,r=ar()
a=[0]*r
w=sorted(ar())
count=0
prev=w[0]
for i in range(r):
    a[i]=t-i
count=r
flag=True
flag=flag and ghost_valid(a)
for i in range(1,m):
    #print a,count
    come_to_present(a,w[i],prev)
    count+=light_up(a,t)
    flag=flag and ghost_valid(a)
    prev=w[i]
if flag:
    print count
else:
    print "-1"
    

##n=raw_input()
##swap=-1
##l=0
##r=len(n)-1
##while l<r:
##    if int(n[l])&1==0:
##        if n[l]<n[-1]:
##            swap=l
##            break
##        else:
##            swap=l
##    l+=1
##if swap==-1:
##    print swap
##else:
##    print n[:swap]+n[-1]+n[swap+1:-1]+n[swap]


##m,n,k=ar()
##move=0
##a=[]
##for i in range(m):
##    a.append(list("w"*n))
##for x in range(k):
##    i,j=ar()
##    i-=1
##    j-=1
##    a[i][j]="b"
##    if j-1>=0 and i-1>=0 and a[i-1][j]+a[i-1][j-1]+a[i][j-1]=="bbb":
##        move=x+1
##        break
##    if j+1<n and i-1>=0 and a[i-1][j]+a[i-1][j+1]+a[i][j+1]=="bbb":
##        move=x+1
##        break
##    if j+1<n and i+1<m and a[i+1][j]+a[i+1][j+1]+a[i][j+1]=="bbb":
##        move=x+1
##        break
##    if j-1>=0 and i+1<m and a[i+1][j]+a[i+1][j-1]+a[i][j-1]=="bbb":
##        move=x+1
##        break
##print move
