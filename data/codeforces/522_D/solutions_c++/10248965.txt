#include <bits/stdc++.h>

using namespace std;

const int MAX = 6*int(1e5) + 1;

typedef pair <int, int> ii;

vector < vector <ii> > adj;

int m, n, bit[MAX], near[MAX], ans[MAX];
map <int, int> a;


int CalC(int i)
{
    int res = bit[i];
    for ( ; i < MAX; i += (i & (-i))) res = min(res, bit[i]);
    return res;
}

int UpDate(int i, int j)
{
    for ( ; i ; i -= (i & (-i))) bit[i] = min(bit[i], j);
}


int main()
{
    //freopen("in.inp", "r", stdin);
    scanf("%d %d", &n, &m);
    adj.assign(n + 1, vector <ii>());
    for (int i = 1; i <= n; i++)
    {
        int x;
        scanf("%d", &x);
        if (a.find(x) != a.end()) near[i] = a[x];
        else near[i] = MAX;
        a[x] = i;
    }

    for (int i = 0; i < m; i++)
    {
        int u, v;
        scanf("%d %d", &u, &v);
        adj[v].push_back(ii(i, u));
    }

    for (int i = 1; i < MAX; i++) bit[i] = MAX;
    for (int i = 1; i <= n; i++)
    {
        UpDate(near[i], near[i] == MAX ? MAX : i - near[i]);
        for (int j = 0; j < adj[i].size(); j++)
        {
            int l = adj[i][j].second, id = adj[i][j].first;
            ans[id] = CalC(l);
            ans[id] = ans[id] == MAX ? -1 : ans[id];
        }
    }

    for (int i = 0; i < m; i++) printf("%d\n", ans[i]);
}
