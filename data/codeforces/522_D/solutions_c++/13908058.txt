#include <cstdio>
#include <iostream>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <map>
using namespace std;
int n,m,a[500005];

int c[500005],ans[500005];
int lowbit(int x)
{
	return x&(-x);
}
struct Node
{
	int l,r,id;
}e[500005];
bool cmp(Node x,Node y)
{
	return x.r<y.r;
}
map<int,int> mp;
int main()
{
	scanf("%d%d",&n,&m);
	for (int i=1;i<=n;++i) scanf("%d",&a[i]);
	for (int i=1;i<=m;++i) scanf("%d%d",&e[i].l,&e[i].r);
	for (int i=1;i<=m;++i) e[i].id=i;
	sort(e+1,e+m+1,cmp);
	int i=1;
	for (int i=1;i<=n;++i) c[i]=19950920;
	for (int z=1;z<=m;++z)
	{
		while (i<=e[z].r)
		{
			if (mp.find(a[i])!=mp.end())
			{
				c[mp[a[i]]]=min(c[mp[a[i]]],i-mp[a[i]]);
				for (int j=mp[a[i]];j>=1;j-=lowbit(j)) c[j]=min(c[j],c[mp[a[i]]]);
			}
			mp[a[i]]=i;
			++i;
		}
		int dq=19950920;
		for (int j=e[z].l;j<=n;j+=lowbit(j)) dq=min(dq,c[j]);
		ans[e[z].id]=dq==19950920?-1:dq;
	}
	for (int i=1;i<=m;++i) printf("%d\n",ans[i]);
	return 0;
}
