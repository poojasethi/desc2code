#include<bits/stdc++.h>
		 
using namespace std;
#define foreach(i,x) for(type(x)i=x.begin();i!=x.end();i++)
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define ROF(ii,aa,bb) for(int ii=aa;ii>=bb;ii--)
#define type(x) __typeof(x.begin())

#define dbg(x) cerr << (#x) << " --> " << (x) << endl
#define y1 sdfsdfsdf
#define ll long long
#define pii pair<int,int>
#define mod 1000000007
#define N (int)(5e5+10)
#define mp make_pair
#define pb push_back
#define sd second
#define ft first
#define endll puts("")
#define endl '\n'
#define inf mod
#define ort ((sol+sag)/2)
int n,m,l,r,ANS[4*N],ST[4*N],pos,x,arr[N];
map<int,int>last;
vector<pair<int,int> >Q[N];
int que(int v,int sol,int sag){
	if(sol > r or sag < l) return inf;

	if(sol >= l and sag <= r) return ST[v];
	
	return min(que(2*v,sol,ort) , que(2*v+1,ort+1,sag));
}
void upd(int v,int sol,int sag){
	if(sol == sag){
		ST[v] = x;
		return;
	}
	if(pos <= ort)
		upd(2*v,sol,ort);
	else
		upd(2*v+1,ort+1,sag);

	ST[v] = min(ST[2*v],ST[2*v+1]);
}
int main(){
	cin >> n >> m;
	FOR(i,1,n)
		scanf("%d",&arr[i]);
	FOR(i,1,m){
		scanf("%d %d",&l,&r);
		Q[r].pb(mp(l,i));
	}
	FOR(i,1,4*N) ST[i] = inf;
	FOR(i,1,n){
		if(last[arr[i]]){
			pos = last[arr[i]];
			x = i - pos;
			upd(1,1,n);
		}
		last[arr[i]] = i; 
		for(int j=0;j<Q[i].size();j++){
			l = Q[i][j].ft;
			r = i;
			ANS[Q[i][j].sd] = que(1,1,n);
		}
	}
	FOR(i,1,m) printf("%d\n",ANS[i] == inf ? -1 : ANS[i]);
}
