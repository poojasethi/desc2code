#include <bits/stdc++.h>
#define fi first
#define se second
#define endl '\n'

using namespace std;

typedef long long lint;
typedef pair<int,int> ii;
const int MAXN = 5e5+222;
const int mod = 1e9+7;

struct node{
	int l,r,mn;
	node(int _l=0,int _r=0,int _mn=0){
		l=_l; r=_r; mn=_mn;
	}
}seg[20000000];

int N,M,u[MAXN],cnt;
map<int,int> last;

inline int upd(int root,int b,int e,int a1,int p){
	if(!a1 || b>a1 || e<a1)
		return root;
	int keep=++cnt;
	if(b==e){
		seg[keep].mn=p;
		return keep;
	}
	int q1=upd(seg[root].l,b,(b+e)/2,a1,p),q2=upd(seg[root].r,(b+e)/2+1,e,a1,p);
	seg[keep]=node(q1,q2,min(seg[q1].mn,seg[q2].mn));
	return keep;
}

inline int find(int root,int b,int e,int a1,int a2){
	if(!root || b>a2 || e<a1)
		return 2e9;
	if(b>=a1 && e<=a2)
		return seg[root].mn;
	return min(find(seg[root].l,b,(b+e)/2,a1,a2),find(seg[root].r,(b+e)/2+1,e,a1,a2));
}

int main(){
	
	scanf(" %d %d",&N,&M);
	seg[0].mn=2e9;
	for(int i=1,a;i<=N;i++){
		scanf(" %d",&a);
		u[i]=upd(u[i-1],1,N,last[a],i-last[a]);
		last[a]=i;
	}
	for(int i=1,a,b;i<=M;i++){
		scanf(" %d %d",&a,&b);
		int tmp=find(u[b],1,N,a,b);
		if(tmp==2e9) tmp=-1;
		printf("%d\n",tmp);
	}
	
	return 0;
}
