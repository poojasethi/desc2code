#include <map>
#include <cstdio>
#include <algorithm>
using namespace std;
const int MXN=500050,oo=(1LL<<30)-1;
map <int,int> pre;
int a[MXN],t[MXN];
int f[MXN][25];
#define mid ((le+ri) >>1)
int find(int le,int ri,int rk) {
	while (le<=ri) if (mid+t[mid]>rk) 
		ri=mid-1; else le=mid+1;  
	return ri;
}
void ST(int n) {
	int i,j;
	for (i=1;i<=n;i++) f[i][0]=i;
	for (j=1;(1<<j)<=n;j++) 
	for (i=1;i+(1<<j)-1<=n;i++) {
		int a=f[i][j-1],b=f[i+(1<<(j-1))][j-1];
		if (t[a]<t[b]) f[i][j]=a; else f[i][j]=b; 
	}
}
int RMQ(int le,int ri) {
	int k=0;
	if (le>ri) return -1;
	while ((1<<(k+1))<=ri-le+1) k++;
	int a=f[le][k],b=f[ri-(1<<k)+1][k];
	if (t[a]<t[b]) return t[a]; else return t[b];  
}
int main() {
	int n,m,i,l,r,nn,las=0;
	scanf("%d%d",&n,&m);
	for (i=1;i<=n;i++) scanf("%d",&a[i]);
	for (i=1;i<=n+1;i++) t[i]=oo;
	nn=n;
	for (i=n;i;i--) {
		if (pre[a[i]]) t[i]=pre[a[i]]-i;
		if (t[i+1]<oo) t[i]=min(t[i],t[i+1]+1);
		if (t[i]==oo) nn--;
		pre[a[i]]=i;
	}
	ST(n);
	for (i=1;i<=m;i++) {
		scanf("%d%d",&l,&r);
		//l^=las; r^=las; 
		r=find(l,min(r,nn),r); r=min(r,nn);
		las=RMQ(l,r);
		printf("%d\n",las);
	}
}