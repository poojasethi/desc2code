#include <bits/stdc++.h>


#define Max 500009
#define INF 2000000000
#define ff first
#define ss second
#define mk make_pair

using namespace std;

int n,q;
int arr[Max];

int  sega[Max*4];
pair < int , pair < int, int > > data[Max];
int ans[Max];

map < int , int > mp;

void upd( int l , int r , int in , int nw , int val){
	
	if( l == r ){
		sega[in] = val;
		return;	
	}
	int mid=( l + r )/2;
	
	if( nw <= mid  )	upd( l , mid , in * 2 , nw , val );
	else				upd(mid+1 , r , in * 2 + 1 , nw , val );
	
	sega[ in ] = min( sega[in*2] , sega[in *2 + 1 ] );
	
}
int ask( int l , int r , int in , int ll , int rr ){
	
	if( ll <= l &&  r <= rr  )
		return sega[in] ;	
	if( l > rr || r < ll )
		return INF;
		
	int mid=( l + r ) / 2;
	return min(ask ( l , mid , in *2 , ll , rr ) , ask( mid +1 , r , in*2+1 , ll , rr ) );
}

int main(){
	
	cin >> n >> q;
	
	fill( sega , sega + n*4 , INF ) ;
	
	for( int i=1;i<=n;i++)scanf("%d" ,&arr[i]);
	
	int a,b;
	for( int i=0;i<q;i++){
		scanf( "%d %d" , &a , &b);
		data[i] = mk( b , mk( a , i ) ) ;		 
	}
	sort(data , data + q );
	
	int fr=1;
	
	for( int i=0;i<q;i++){
		
		for( ;fr<=data[i].ff;fr++){
			int a=arr[fr];
						
			if( mp[a] != 0 )
				upd( 1 , n , 1 , mp[a] , fr-mp[a] );
			mp[a]=fr;
		}
		ans[data[i].ss.ss] = ask( 1 , n , 1 , data[i].ss.ff , data[i].ff );
	}
	for( int i=0;i<q;i++) 
		if( ans[i] != INF )	printf( "%d\n" , ans[i] );
		else  				printf( "-1\n");
		
	return 0;
}
