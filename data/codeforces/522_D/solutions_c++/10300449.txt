#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <cstring>
using namespace std;

const int maxn = 500050;
int inf = 999999;
//vector<pair<pair<int,int>, int> > v;
int n, m, a[maxn], l[maxn], r[maxn], ord[maxn], fenwick[maxn], res[maxn];
map<int,int> val_pos;

bool comp (int xx, int yy) {return r[xx] < r[yy]; }

int main()
{

    ios_base::sync_with_stdio(false);

    cin >> n >> m;
    for (int i=0;i<maxn;i++)
        res[i] = inf;
    for (int i=0;i<maxn;i++)
        fenwick[i] = inf;
    for (int i=1;i<=n;i++)
        cin >> a[i];

    for (int i=0;i<m;i++)
    {
        cin >> l[i] >> r[i];
        ord[i] = i;
    }

    sort (ord,ord+m,comp);

    for (int i=0, j=1;i<m;i++)
    {
        int curr = ord[i];
        while (j<=r[curr])
        {
            if (val_pos.count(a[j]))
            for (int k=val_pos[a[j]]; k>0; k-=k&-k)
            {
                fenwick[k] = min(fenwick[k],j-val_pos[a[j]]);
            }

            val_pos[a[j]] = j;
            j++;
        }
        for (int k=l[curr];k<=n;k+=k&-k)
        res[curr] = min(res[curr], fenwick[k]);
    }


    for (int i=0;i<m;i++)
    {
      //  cout << l[ord[i]] << " " << r[ord[i]] << endl;
        if (res[i]==inf)
            cout << -1 << endl;
        else cout << res[i] << endl;
      //  cout << endl;
    }



    return 0;
}
/*
9
2 2 4 1 5 4 8 9 5
5
1 9
1 2
5 5
3 7
4 9

*/