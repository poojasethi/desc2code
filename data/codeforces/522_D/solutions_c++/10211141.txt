#include<iostream>
#include<fstream>
#include<cstring>
#include<stdio.h>
#include<assert.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<queue>
#include<stack>
#include<map>
#include<set>
#define mp make_pair
#define pb push_back
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define F first
#define S second
#define ll long long
#define pp pair<int,int>
#define SS system("pause")
#define INF 1000000000
#define P 1000000007
using namespace std;
const int N=500005;
int n,m,i,j,a[N],r[N],x,y,ans[N],f[N];
map<int,int> M;
vector<pair<pp,int> > v;

void add(int x,int k){
    for(int i=x;i<N;i=2*i-(i&(i-1)))f[i]=MIN(f[i],k);

}

int minim(int x){
    int pas=INF;
    while(x)pas=MIN(pas,f[x]),x&=x-1;
    return pas;
}

int main()
{scanf("%d%d",&n,&m);
 for(i=1;i<=n;i++)scanf("%d",&a[i]);

 for(i=n;i>=1;i--){
    r[i]=M[a[i]];
    M[a[i]]=i;
    if(r[i])v.pb(mp(mp(r[i],0),i));
 }
 for(i=1;i<=m;i++){
    scanf("%d%d",&x,&y);
    v.pb(mp(mp(y,i),x));
 }

 for(i=1;i<N;i++)f[i]=INF;
 sort(v.begin(),v.end());
 for(i=0;i<v.size();i++)
 if(v[i].F.S){
    x=v[i].S;
    ans[v[i].F.S]=minim(n-x+1);
   // cout<<i<<' '<<v[i].F.S<<' '<<ans[v[i].F.S]<<endl;SS;
 }else{
    add(n-v[i].S+1,v[i].F.F-v[i].S);
   // cout<<"add "<<v[i].F.S<<' '<<v[i].F.F-v[i].F.S<<endl;SS;
 }
 for(i=1;i<=m;i++)
     if(ans[i]==INF)printf("-1\n");else
                    printf("%d\n",ans[i]);
 return 0;
}
