#include <cstdio>
#include <vector>
#include <cstring>
#include <map>
#include <algorithm>
#define MAXN 1000005
#define INF 100000000
#define MOD 1000000007
#define REV ((MOD+1)/2)
using namespace std;
map <int,int> mp;
struct query
{
	int b,e,ind;
}que[MAXN];
struct limit
{
	int ind,pos;	
}last[MAXN];
bool queb(query a,query b)
{
	return a.b>b.b;	
}
bool limp(limit a,limit b)
{
	return a.pos>b.pos;	
}
int n,q,d[MAXN],fen[MAXN],ans[MAXN];
int ask(int x)
{
	int res=INF;
	while(x>0)
	{
		res=min(res,fen[x]);
		x-=x & -x;
	}
	return res;
}
void up(int x,int val)
{
	while(x<=n)
	{
		fen[x]=min(fen[x],val);
		x+=x & -x;
	}
}
int main()
{
	scanf("%d %d",&n,&q);
	for(int i=1;i<=n;i++)
	{
		fen[i]=INF;
		scanf("%d",&d[i]);
		last[i].pos=mp[d[i]];
		last[i].ind=i;
		mp[d[i]]=i;
	}
	for(int i=1;i<=q;i++)
	{
		scanf("%d %d",&que[i].b,&que[i].e);
		que[i].ind=i;	
	}
	sort(last+1,last+1+n,limp);
	sort(que+1,que+1+q,queb);
	for(int i=1,j=1;i<=q;i++)
	{
		while(j<=n && que[i].b<=last[j].pos)
		{
			up(last[j].ind,last[j].ind-last[j].pos);
			j++;
		}
		ans[que[i].ind]=ask(que[i].e);
	}
	for(int i=1;i<=q;i++)
		if(ans[i]>n)
			puts("-1");
		else
			printf("%d\n",ans[i]);
	scanf(" ");
}
