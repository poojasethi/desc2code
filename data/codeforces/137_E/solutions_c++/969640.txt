// Author: Ernesto Carvajal Lastres. Madrid, Spain.
#include <cstdio>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;
#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define contains(c,x) (find(all(c),x) != (c).end())
typedef vector<int> vi;

vi dif(1,0), pal(1,0); string vw("aeiou"); vi::iterator it;

bool isvowel(char c) {return contains(vw,tolower(c));}
bool isbad(int a, int b) {return dif[b] - dif[a] < 0;}

int main()
{
    char ch; int len(0), cnt(0);
    while (!isspace(ch = getchar()))
        dif.pb(dif.back() + (isvowel(ch) ? -1 : 2));
    for (int i = 1; i < sz(dif); i++)
        if (isbad(pal.back(), i)) pal.pb(i); else
        if ((it = lower_bound(all(pal),i,isbad)) != pal.end())
             if (len== i - *it) cnt++; else
             if (len < i - *it)
                {len = i - *it; cnt=1;}
    if (len > 0) printf("%d %d\n",len,cnt);
    else printf("No solution");
    return 0;
}
