#include<cstdio>
#include<cstring>
#include<map>
#include<vector>
#include<ctype.h>
#include<algorithm>
#define N 200001
#define F first
#define S second
using namespace std;
char b[N];
int v[N];
int n;
bool isvowel(char c){
	return c=='a'|| c=='e'||c=='i'||c=='o'||c=='u';
}
int main(){
	scanf("%s",b);
	n=strlen(b);
	
	map<int,int> val;
	for(int i=1;i<=n;++i){
		v[i]=  isvowel(tolower(b[i-1])) ? -1 : 2;

		v[i]+=v[i-1]; //acc
		int& rm = val[v[i]];
		rm = max(rm,i);
	}
	vector<int> vr;
	vector<int> mx;
	for(typeof(val.begin())it=val.begin();it!=val.end();++it){
		vr.push_back(it->F);
		mx.push_back(it->S);
	}
	for(int i=(int)mx.size()-2;i>=0;--i)
		mx[i]=max(mx[i],mx[i+1]);
	int bst=0,cnt;

	for(int i=1;i<=n;++i){
		if(v[i-1] <= vr.back() ){
			int p = mx[ lower_bound( vr.begin(),vr.end() , v[i-1] )-vr.begin() ];
			if( bst < (p-i+1) ){
				bst=p-i+1;
				cnt=1;
			}else if( bst == (p-i+1) ){
				bst=p-i+1;
				cnt++;
			}
		}

	}
	if(bst>0)
		printf("%d %d\n",bst,cnt);
	else
		printf("No solution\n");
	return 0;

}
