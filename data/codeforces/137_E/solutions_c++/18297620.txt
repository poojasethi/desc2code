#include <bits/stdc++.h>

using namespace std;

bool vowel(char c) {
	if (c >= 'A' && c <= 'Z')
		c += 'a' - 'A';
	return c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u';
}

const int N = 2e5 + 1;
int a[N];
map <int, int> m, ans;

main() {
	string s;
	cin >> s;
	int sum = 0;
	for (int i = 0; i < s.size(); i++) {
		a[i] = vowel(s[i]) ? -1 : 2;
		sum += a[i];
		m[sum] = i + 1;
	}
	ans[2 * s.size()] = m[2 * s.size()];
	for (int i = 2 * s.size() - 1; i >= (int) s.size() * -1; i--)
		m[i] = max(m[i + 1], m[i]);
	sum = 0;
	int ans = 0;
	for (int i = 0; i < s.size(); i++) {
		ans = max(ans, m[sum] - i);
		sum += a[i];
	}
	int cnt = 0;
	sum = 0;
	for (int i = 0; i < s.size(); i++) {
		sum += a[i];
		if (i >= ans)
			sum -= a[i - ans];
		if (i >= ans - 1 && sum >= 0)
			cnt++;
	}
	if (ans == 0)
		return cout << "No solution" << endl, 0;
	cout << ans << ' ' << cnt << endl;
}
