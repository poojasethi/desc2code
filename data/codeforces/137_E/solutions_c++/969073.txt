#include <iostream>
#include <string>
#include <queue>
#define INFI 300000
using namespace std;
bool is_vowel(const char &a)
{
	switch(a)
	{
		case 'a':
		case 'A':
		case 'e':
		case 'E':
		case 'i':
		case 'I':
		case 'o':
		case 'O':
		case 'u':
		case 'U':
		return true;
		break;
		default:
		return false;
		break;
	}
}
int loc[200001];
int sc[200001];
int main()
{
	string s;
	cin>>s;
	int size=s.size();
	for (int i=0;i<200001;i++)
		loc[i]=-INFI;
	for (int i=0;i<size;i++)
	{
		int a=is_vowel(s[i])?-1:2;
		sc[i+1]=a+sc[i];
	}
	int max_length=0;
	int max_cnt=0;
	for (int i=1;i<size+1;i++)
	{
		int length;
		length=(sc[i]>=0)?i:(i-(loc[-sc[i]]==-INFI?(loc[-sc[i]]=i):loc[-sc[i]]));
		if (length>max_length)
			max_length=length,max_cnt=1;
		else if (length&&length==max_length)
			max_cnt++;
	}
	if (max_cnt==0)
		cout<<"No solution";
	else
		cout<<max_length<<" "<<max_cnt;
}

