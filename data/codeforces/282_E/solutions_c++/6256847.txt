#include<stdio.h>
#define ll __int64
#define M 1<<45
#define N 4500005
struct qs{
	int ch[2];
	void clean(){
		ch[0]=ch[1]=-1;
	}
}tree[N];
ll tot;
void insert(ll x){
	ll t=(ll)M,now=0;
	while(t>0){
		ll y=x/t;
		x=x%t;
		t=t/2;
		if(tree[now].ch[y]!=-1){
			now=tree[now].ch[y];
		}
		else {
			tot++;
			tree[tot].clean();
			tree[now].ch[y]=tot;
			now=tot;
		}
	}
}
ll query(ll x){
	ll t=(ll)M,now=0,temp=0;
	while(t>0){
		ll y=x/t;
		x=x%t;
		if(tree[now].ch[y^1]!=-1){
			now=tree[now].ch[y^1];
			temp^=t;
		}
		else {
			now=tree[now].ch[y];
		}
		t=t/2;
		//printf("%I64d ",temp);
	}//printf("\n");
	return temp;
}
ll max(ll x,ll y){
	return x>y?x:y;
}
ll x,n,a[100005],maxn,i;
int main(){
	scanf("%I64d",&n);
	tot=0;tree[tot].clean();
	x=0;insert(x);
	for(i=1;i<=n;i++){
		scanf("%I64d",&a[i]);
		x^=a[i];
		insert(x);
	}	
	x=0;maxn=query(x);
	//printf("%I64d\n",maxn);
	for(i=n;i>=1;i--){
		x^=a[i];
		maxn=max(maxn,query(x));
	}
	printf("%I64d\n",maxn);
}
	    		 		 		   	  	  		 	