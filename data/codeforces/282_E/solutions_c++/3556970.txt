//by eop
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 100005
typedef long long LL;
LL ar[N],sum[N];
int find ( int n, LL val, int j ) {
    int pos=lower_bound(sum,sum+n,val)-sum;
    if ( pos==n ) return 0;
    LL a=sum[pos];
    if ( (a>>j)==(val>>j) ) return 1;
    return 0;
}
int main ()
{
    int n; scanf("%d",&n);
    for ( int i=1; i<=n; i++ ) scanf("%I64d",&ar[i]);
    for ( int i=1; i<=n; i++ ) sum[i]=ar[i]^sum[i-1];
    LL all=sum[n];
    sort(sum,sum+n+1);
//  for ( int i=0; i<=n; i++ ) printf("%I64d ",sum[i]); puts("");
    LL ans=0;
    for ( int i=1; i<=n; i++ ) {
        LL val=sum[i]^all;
        LL now=0;
        for ( int j=40; j>=0; j-- ) {
            if ( !(1LL<<j & val) ) now|=1LL<<j;
            if ( !find(n+1,now,j) ) now^=1LL<<j;
        }   
        ans=max(ans,now^val);
    }
    printf("%I64d\n",ans);
    return 0;
}
//---------------------------------------
