#include<iostream>
#include<algorithm>
using namespace std;
const int N = 100005;
typedef long long ll;
ll sum[N];
inline bool find(int n,ll value,ll len) {
	int pos = lower_bound(sum,sum+n,value) - sum;
	if(pos == n) return 0;
	ll v = sum[pos];
	if((v >> len) == (value >> len))
		return 1;
	return 0;
}
int main(){
	int n;
	cin >> n;
	for(int i = 1; i <= n; i++){
		ll v;
		cin >> v;
		sum[i] = sum[i-1] ^ v;
	}
	ll temp = sum[n];
	sort(sum,sum+n+1);
//	for(int i = 0; i <= n; i++) cout<< sum[i]<<" ";cout<<endl;
	ll ans = 0;
	for(int i = 1; i <= n; i++) {
		ll val = sum[i]^temp,now = 0;
	//	cout<<"val: "<<i<<" "<<val<<endl;
		for(int j = 40; j>= 0; j--){
		   	if(!(1LL<<j & val)) now |= 1LL<<j;
			if(!find(n+1,now,j)) now ^= 1LL <<j;
		}	
		ans = max(now^val,ans);
	}
	cout<< ans <<endl;
}
