#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
#include <cmath>
#define MAXN 100100
#define INF 1<< 30
typedef unsigned long long ULL;
typedef long long LL;
using namespace std;

const int cifre=50;
int N;
ULL a[MAXN];
ULL pot[cifre];
int prox[MAXN][cifre];
ULL xxx[MAXN];

ULL search(ULL x){
	int a=0;
	int b=N+1;
	for(int c=cifre-1;c>=0;c--){
		if(x&pot[c]){
			if(a<prox[a][c])b=min(b,prox[a][c]);
		}
		else{
			if(prox[a][c]<b)a=prox[a][c];
		}
	}
	return x^xxx[a];
}

int main(){
	cin >> N;
	for(int i=0;i<N;i++)cin >> a[i];
	
	for(int i=N-1;i>=0;i--)xxx[i]=xxx[i+1]^a[i];
	sort(xxx,xxx+N+1);
	
	for(int c=0;c<cifre;c++){
		int last=N+1;
		pot[c]=1LL<<c;
		for(int i=N;i>=0;i--){
			if(xxx[i]&pot[c])last=i;
			prox[i][c]=last;
		}
	}
	
	ULL val=0;
	ULL res=0;
	for(int i=0;i<N;i++){
		res=max(res,search(val));
		val^=a[i];
	}
	cout << res << "\n";
}