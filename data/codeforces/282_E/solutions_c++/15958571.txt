#include<iostream>
#include<algorithm>
#include<stdio.h>
#define maxn (100005)
#define LL long long
using namespace std;
struct node{
	int ch[3];
	void init()
	{
		ch[0]=0;
		ch[1]=0;
	}
}tr[maxn*50];
int tot,n;
LL ans,pre[maxn],nex[maxn],a[maxn];
void add(LL x)
{
	int now=0,p=0;
	for (int i=50;i>=0;i--)
	{
		if ((1LL<<i)&x) p=1;
		else p=0;
		if (!tr[now].ch[p])
		tot++,tr[now].ch[p]=tot,tr[tot].init();
		now=tr[now].ch[p];
	}
}
LL solve(LL x)
{
	LL tmp=0;
	int now=0,p=0;
	for (int i=50;i>=0;i--)
	{
		if ((1LL<<i)&x) p=0;
		else p=1;
		if (tr[now].ch[p]) tmp+=(1LL<<i);
		else p^=1;
		now=tr[now].ch[p];
	}
	return tmp;
}
int main()
{
	scanf("%d",&n);
	for (int i=1;i<=n;i++)
	{
		scanf("%I64d",&a[i]);
		pre[i]=pre[i-1]^a[i];
	}
	for (int i=n;i>=1;i--)
	nex[i]=nex[i+1]^a[i];

	for (int i=1;i<=n+1;i++)
	{
		add(pre[i-1]);
		ans=max(ans,solve(nex[i]));
	}
	printf("%I64d\n",ans);
}
	  			 		 		    	 				  		  	