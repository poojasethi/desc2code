#include <iostream>
using namespace std;

int n = 0;
int tot = 0;
int size = 40;
int trie[41 * 100000][2];
long long A[100000];
long long L[100001];
long long R[100001];

void insert(long long x) {
	int idx = 0;
	for (int i = size; i >= 0; i--) {
		if (!trie[idx][(x>>i)&1])
			trie[idx][(x>>i)&1] = ++tot;
		idx = trie[idx][(x>>i)&1];
	}
}

long long query(long long x) {
	int idx = 0;
	long long ans = 0;
	for (int i = size; i >= 0; i--) {
		if (trie[idx][(x>>i&1)^1]) {
			idx = trie[idx][(x>>i&1)^1];
			ans += 1LL << i;
		} else {
			idx = trie[idx][x>>i&1];
		}
	}
	return ans;
}

int main() {
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> A[i];
	L[0] = 0;
	R[n] = 0;
	for (int i = 1; i <= n; i++) {
		L[i] = L[i-1] ^ A[i-1];
		insert(L[i]);
	}
	for (int i = n-1; i >= 0; i--)
		R[i] = R[i+1] ^ A[i];
	long long m = 0;
	for (int i = 0; i <= n; i++) {
		long long q = query(R[i]);
		if (q > m)
			m = q;
	}
	cout << m << endl;
}

