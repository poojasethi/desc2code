#include <cstdio>
#include <cstdlib>
#include <iostream>

#define alloc() (node *)calloc(1,sizeof(node))

using namespace std;

typedef long long int Lint;

const int MAXN=1e5+10;

struct node{
	node *g[2];
};

int N;

Lint cur,res;
Lint L[MAXN];
Lint ar[MAXN];

node *root;

inline void add( node *p , Lint val , int d){
	
	int go=0;
	
	if( val&(1LL<<d) )
		go=1;
	
	if( !p->g[go] )
		p->g[go]=alloc();
	
	if(d)
		add(p->g[go],val,d-1);
}

inline void query( node *p , Lint val , int d ){
	
	int go=1;
	
	if( val&(1LL<<d) )
		go=0;
	
	if( !p->g[go] )
		go^=1;
	else
		cur+=(1LL<<d);
	
	if(d)
		query(p->g[go],val,d-1);
}

int main(){
	
	scanf("%d",&N);
	
	for( int i=1 ; i<=N ; i++ ){
		cin >> ar[i];
		L[i]=ar[i]^L[i-1];
	}
	
	root=alloc();
	add(root,0LL,40);
	
	Lint val=0LL;
	
	for( int i=N ; i>=0 ; i-- ){
		cur=0LL;
		query(root,L[i],40);
		val^=ar[i];
		add(root,val,40);
		res=max(res,cur);
	}
	
	cout << res << endl;
	return 0;
}