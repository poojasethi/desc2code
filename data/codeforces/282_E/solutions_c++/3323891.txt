#include <cstdio>
#include <cmath>
#include <iostream>
#include <map>

#define N 100000

using namespace std;

typedef long long ll;

struct Trie {
    map <int, Trie> m;
};

Trie root;

void insert (Trie &t, int p, ll n) {
    if (p >= 0)
        insert(t.m[(n >> p) & 1], p - 1, n);
}

ll find_best (Trie &t, int p, ll n) {
    if (p < 0)
        return 0;
    bool b = (n >> p) & 1; 
    if (t.m.count(!b))
        return (1LL << p) + find_best(t.m[!b], p - 1, n);
    else
        return find_best(t.m[b], p - 1, n);
}

int main () {
    int n;
    cin >> n;
    ll a[N];
    ll x = 0LL, rx = 0LL;
    for (int i = 0; i < n; i++) {
        scanf("%I64d",&a[i]);
        x ^= a[i];
    }
    insert (root, 42, 0);
    ll mx = 0LL;
    for (int i = n - 1; i >= 0; i--) {
        rx ^= a[i];
        x ^= a[i];
        insert (root, 42, rx);
        mx = max(mx, find_best(root, 42, x));
    }
    cout << mx;
    return 0;
}