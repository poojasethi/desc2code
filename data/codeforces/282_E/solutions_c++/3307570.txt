#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
using namespace std;

struct node {
	node* next[2];

	node() {
		next[0] = next[1] = NULL;
	}
};


int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int n;
	cin >> n;
	long long a[n], b[n+1];
	b[0] = 0;
	for (int i = 0; i < n; ++i) {
		cin >> a[i];
		b[i+1] = b[i]^a[i];
	}
	node* c = new node;
	c->next[0] = c->next[1] = NULL;
	node* tmp;
	long long d, e, f, ans = b[n];
	for (int i = 1; i <= n; ++i) {
		d = b[i-1];
		tmp = c;
		for (long long j = 1ll << 40; j >= 1; j >>= 1) {
			f = (d & j? 1 : 0);
			if (tmp->next[f] == NULL) tmp->next[f] = new node;
			tmp = tmp->next[f];
		}

		d = b[i]^b[n];
		e = 0;
		tmp = c;
		for (long long j = 1ll << 40; j >= 1; j >>= 1) {
			f = (d & j? 0 : 1);
			if (tmp->next[f] != NULL) {
				e += j;
				tmp = tmp->next[f];
			}
			else tmp = tmp->next[1-f];
		}
		ans = max(ans,e);
	}
	cout << ans;
	return 0;
}
