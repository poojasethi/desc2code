#include <cstdio>
#include <algorithm>
using namespace std;

const int max_n = 100000;
typedef long long ll;
const ll max_bit = (1LL << 42LL);

int n;
ll a[max_n];
ll sa[max_n + 1];

int main()
{
    scanf("%d", &n);
    sa[0] = 0;
    for(int i = 0; i < n; i++)
        scanf("%lld", &a[i]), sa[i + 1] = sa[i] ^ a[i];

    ll tot = sa[n];
    sort(sa, sa + n + 1);
    ll ans = 0LL;
    ll bit = max_bit;
    while(bit)
    {
        ll nans = (ans | bit);
        ll target = (nans ^ tot) & (~(bit - 1LL));
        bool ok = false;
        for(int i = 0; !ok && i <= n; i++)
        {
            ll val = ((sa[i] ^ target) & (~(bit - 1LL)));
            int pos = lower_bound(sa, sa + n + 1, val) - sa;
            if(pos <= n && ((sa[pos] ^ sa[i]) & (~(bit - 1LL))) == target)
                ok = true;
        }
        if(ok) ans = nans;
        bit >>= 1LL;
    }
    printf("%lld\n", ans);

    return 0;
}
