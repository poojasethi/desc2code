#include<cstdio>
#include<iostream>
#include<string>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;

struct edge
{int u,v,f,next;
};
struct edge e[400010];

int n,m,num,root,tot,cnt,N,N1,top,col,vcol=3,flag;
int head[200010],cp[200010],dfn[200010],b[200010],used[200010],vis[200010],st[200010],low[200010],pre[200010];
vector<int> a[200010];

void add(int u,int v)
{e[num].u=u;
 e[num].v=v;
 e[num].next=head[u];
 head[u]=num;
 num++;
 e[num].u=v;
 e[num].v=u;
 e[num].next=head[v];
 head[v]=num;
 num++;
}

void tarjan(int i,int fa)
{int j,s=0;
 
 dfn[i]=++tot;
 low[i]=tot;
 st[++top]=i;
 j=head[i];
 while(j!=-1)
 {	if(e[j].v!=fa)
 	{	if(dfn[e[j].v])
 			low[i]=min(low[i],dfn[e[j].v]);
 		else
		{	s++;
			tarjan(e[j].v,i);
			low[i]=min(low[i],low[e[j].v]);
			//cout<<i<<" "<<e[j].v<<" "<<low[e[j].v]<<endl;
			if(low[e[j].v]>=dfn[i])
			{	//cout<<i<<endl;
				cp[i]=1;
				cnt++;
				while(st[top]!=e[j].v) a[cnt].push_back(st[top--]);
				top--;
				a[cnt].push_back(e[j].v);
				if(low[e[j].v]==dfn[i]) a[cnt].push_back(i);
			}
		}
	}
	j=e[j].next;
 }
 if(i==root)
 {	if(s>1)
 		cp[i]=1;
 	else
		cp[i]=0;
 }
}

void work(int i,int fa)
{int j; 
 
 st[++top]=i;
 vis[i]=1;
 j=head[i];
 while(j!=-1)
 {	if(e[j].v!=fa && used[e[j].v]==col)
 	{	if(vis[e[j].v])
 		{	e[j].f=col;
 			e[j^1].f=col;
		 	N=0;
 			while(vis[e[j].v]==1)
 			{	if(st[top]!=e[j].v)
			 	{	e[pre[st[top]]].f=col;
 					e[pre[st[top]]^1].f=col;
 				}
			 	b[++N]=st[top];
			 	vis[st[top--]]=2;
 			}
 			flag=1;
 			return;
 		}
 		else
 		{	pre[e[j].v]=j;
 			//if(m==90993) cout<<"## "<<i<<" "<<e[j].v<<endl;
		 	work(e[j].v,i);
		}
 	}
 	if(flag) return;
 	j=e[j].next;
 }
 top--;
 //if(m==90993) cout<<i<<" "<<fa<<" "<<flag<<endl;
}

void print()
{int i,j,k;

 printf("YES\n");
 printf("%d",top);
 for(i=1;i<=top;i++) printf(" %d",st[i]);
 printf("\n");
 for(i=1;i<=N;i++)
 	if(b[i]==st[1]) break;
 for(j=1;j<=N;j++)
 	if(b[j]==st[top]) break;
 printf("%d",(N+j-i)%N+1);
 for(k=i;k!=j;k=k%N+1)
 	printf(" %d",b[k]);
 printf(" %d\n",b[j]);
 printf("%d",(N+i-j)%N+1);
 for(k=i;k!=j;k=(k+N-2)%N+1)
 	printf(" %d",b[k]);
 printf(" %d\n",b[j]);
}

int dfs(int i,int fa)
{int j;
 
 //cout<<i<<endl;
 vis[i]=vcol;
 st[++top]=i;
 j=head[i];
 while(j!=-1)
 {	//cout<<e[j].v<<" "<<e[j].f<<" "<<used[e[j].v]<<" "<<vis[e[j].v]<<endl;
 	if(e[j].v!=fa && e[j].f!=col && used[e[j].v]==col && vis[e[j].v]!=vcol)
 	{	//if(m==90993) cout<<i<<" "<<e[j].v<<" "<<e[j].f<<" "<<e[j^1].f<<" "<<col<<endl;
	 	if(vis[e[j].v]==2)
 		{	st[++top]=e[j].v;
 			flag=1;
 			return 1;
 		}
 		else
 			dfs(e[j].v,i);
 	}
 	if(flag) return 1;
 	j=e[j].next;
 }
 top--;
 return 0;
}

int check(int id)
{int i,j;
 
 col++;
 for(i=0;i<a[id].size();i++)
 {	used[a[id][i]]=col;
 	vis[a[id][i]]=0;
 }
 top=0;
 flag=0;
 N=0;
 work(a[id][0],0);
 //for(i=1;i<=N;i++) cout<<b[i]<<" ";
 //cout<<endl;
 //if(m==90993) cout<<b[1]<<" "<<b[N]<<" "<<a[id].size()<<" "<<(a[id].size()>=1?a[id][0]:-1)<<" "<<col<<endl;
 for(i=1;i<=N;i++)
 {	flag=0;
 	j=head[b[i]];
 	while(j!=-1)
 	{	if(e[j].f!=col && used[e[j].v]==col)
 		{	flag=1;
 			break;
 		}
 		j=e[j].next;
 	}
 	if(flag)
 	{	flag=0;
 		//cout<<b[i]<<endl;
 		//cout<<vis[5]<<" "<<vis[2]<<endl;
 		top=0;
 		vcol++;
 		//if(m==90993) cout<<b[i]<<" "<<col<<endl;
		if(dfs(b[i],0))
 		{	//for(j=1;j<=top;j++) cout<<st[j]<<" ";
 			//cout<<endl;
		 	//cout<<"DD"<<endl;
			print();
 			return 1;
 		}
 		else
 			vis[b[i]]=2;
 		//cout<<"$$$"<<endl;
 	}
 }
 return 0;
}
 		
int main()
{int i,j,x,y,fx,fy;
 
 scanf("%d%d",&n,&m);
 memset(head,-1,sizeof(head));
 for(i=1;i<=m;i++)
 {	scanf("%d%d",&x,&y);
 	add(x,y);
 }
 for(i=1;i<=n;i++)
 	if(!dfn[i])
	{	root=i;
		tarjan(i,0);
	}
 //for(i=1;i<=n;i++) cout<<cp[i]<<" ";
 //cout<<endl;	
 for(i=1;i<=cnt;i++)
 {	if(a[i].size()<=2) continue;
 	//for(j=0;j<a[i].size();j++)
 	//	cout<<a[i][j]<<" ";
 	//cout<<endl;
	if(check(i)) return 0;
 }
 printf("NO\n");
 return 0;
}