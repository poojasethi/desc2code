#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
using namespace std;

struct Edge {
    int y;
    Edge *next;
};

Edge *b[1000010];
int dfn[1000010],deep[1000010];
int fa[1000010];
int ans1[1000010],ans2[1000010],ans3[1000010];
pair<int,int> c[1000010];
int id;

void addedge(int x,int y) {
    Edge *p = new Edge;
    p->y = y;
    p->next = b[x];
    b[x] = p;
}

void doit(int p1,int q1,int p2,int q2,int x) {
    if (deep[q1] > deep[q2]) {
        swap(p1,p2);
        swap(q1,q2);
    }
    int cnt1 = 0,cnt2 = 0,cnt3 = 0;
    for (int i = x; i != q2; i = fa[i])
        ans1[cnt1++] = i;
    ans1[cnt1++] = q2;
    for (int i = p2; i != x; i = fa[i])
        ans2[cnt2++] = i;
    ans2[cnt2++] = x;
    for (int i = 0; i < cnt2 / 2; i++)
        swap(ans2[i],ans2[cnt2 - i - 1]);
    ans2[cnt2++] = q2;
    for (int i = q2; i != q1; i = fa[i])
        ans3[cnt3++] = i;
    ans3[cnt3++] = q1;
    for (int i = p1; i != x; i = fa[i])
        ans3[cnt3++] = i;
    ans3[cnt3++] = x;
    for (int i = 0; i < cnt3 / 2; i++)
        swap(ans3[i],ans3[cnt3 - i - 1]);
    printf("YES\n%d",cnt1);
    for (int i = 0; i < cnt1; i++)
        printf(" %d",ans1[i]);
    printf("\n%d",cnt2);
    for (int i = 0; i < cnt2; i++)
        printf(" %d",ans2[i]);
    printf("\n%d",cnt3);
    for (int i = 0; i < cnt3; i++)
        printf(" %d",ans3[i]);
    printf("\n");
    exit(0);
}

void dfs(int x,int f) {
    dfn[x] = ++id;
    for (Edge *i = b[x]; i != NULL; i = i->next)
        if (i->y != f)
            if (! dfn[i->y]) {
                deep[i->y] = deep[x] + 1;
                fa[i->y] = x;
                dfs(i->y,x);
            }
            else
                if (dfn[i->y] <= dfn[x])
                    for (int j = x; j != i->y; j = fa[j]) {
                        if (c[j].first)
                            doit(c[j].first,c[j].second,x,i->y,j);
                        c[j] = make_pair(x,i->y);
                    }
}

int main() {
    int n,m;
    scanf("%d%d",&n,&m);
    for (int i = 0; i < m; i++) {
        int x,y;
        scanf("%d%d",&x,&y);
        addedge(x,y);
        addedge(y,x);
    }
    for (int i = 1; i <= n; i++)
        if (! dfn[i])
            dfs(i,0);
    printf("NO\n");
    return 0;
}

