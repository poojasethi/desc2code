#include<stdio.h>
#include<vector>
#include<algorithm>
#define pb push_back
#define mp make_pair
#define x first
#define y second
using namespace std;
typedef pair<int,int> pii;
const int maxn=200050,maxm=maxn;
int n,m,S,T,ans[3][maxn];
int es=0,he[maxn],ne[maxm*2],to[maxm*2];
int tim=0,dfn[maxn],low[maxn],id[maxn];
int bs=0,bel[maxn];
pii st[maxn];
int tp=0;
vector<pii> ed[maxn],ed0[maxn];
int qu[maxn],en=0;
int es2=1,he2[maxn],ne2[maxm*2],to2[maxm*2];
bool cant[maxm*2],is[maxn],vis[maxn];
int fr[maxn];
int loop[maxn],ls;
void ins(int x,int y)
{
	ne[++es]=he[x],he[x]=es,to[es]=y;
	ne[++es]=he[y],he[y]=es,to[es]=x;
}
void ins2(int x,int y)
{
	ne2[++es2]=he2[x],he2[x]=es2,to2[es2]=y;
	ne2[++es2]=he2[y],he2[y]=es2,to2[es2]=x;
}
bool dfs2(int x,int f) //loop
{
	int i,y;
	vis[x]=1;
	fr[x]=f;
	for(i=he2[x];i;i=ne2[i])
		if(i!=fr[x]&&(y=to2[i]))
		{
			if(vis[y])
			{
				cant[i]=cant[i^1]=1;
				is[loop[ls++]=y]=1;
				while(x!=y)
					cant[fr[x]]=cant[fr[x]^1]=1,is[loop[ls++]=x]=1,x=to2[fr[x]];
				return 1;
			}
			else if(dfs2(y,i^1)) return 1;
		}
	return 0;
}
bool dfs3(int x) //route
{
	int i,y;
	vis[x]=1;
	ans[0][++ans[0][0]]=x;
	for(i=he2[x];i;i=ne2[i])
		if(!cant[i]&&!vis[y=to2[i]])
		{
			if(is[y])
			{ T=ans[0][++ans[0][0]]=y;return 1; }
			else if(dfs3(y))
				return 1;
		}
	ans[0][0]--;
	return 0;
}
inline bool get()
{
	if(en<=2||es2==en*2+1)
	{
		es2=1;
		while(en)
			he2[qu[--en]]=0;
		return 0;
	}
	int i,j;
	ls=0;
	dfs2(qu[0],0);
	for(i=0;i<en;i++)
		vis[qu[i]]=0;
	for(i=0;i<ls;i++)
		if(ne2[ne2[he2[loop[i]]]])
		{
			dfs3(S=loop[i]);
			for(j=i;loop[j]!=T;++j>=ls?j-=ls:0)
				ans[1][++ans[1][0]]=loop[j];
			for(j=i;loop[j]!=T;--j<0?j+=ls:0)
				ans[2][++ans[2][0]]=loop[j];
			ans[1][++ans[1][0]]=ans[2][++ans[2][0]]=T;
			break;
		}
	return 1;
}
bool dfs(int x,int f) //BCC
{
	int i,j,y;
	dfn[x]=low[x]=++tim;
	id[tim]=x;
	st[++tp]=mp(f,x);
	for(i=he[x];i;i=ne[i])
		if(!dfn[y=to[i]])
		{
			if(dfs(y,x)) return 1;
			if(low[y]>=dfn[x])
			{
				++bs;
				do
				{
					if(bel[st[tp].x]!=bs) bel[qu[en++]=st[tp].x]=bs;
					if(bel[st[tp].y]!=bs) bel[qu[en++]=st[tp].y]=bs;
					ins2(st[tp].x,st[tp].y);
					tp--;
				}while(st[tp+1].x!=x||st[tp+1].y!=y);
				for(j=0;j<ed0[x].size();j++)
					ins2(ed0[x][j].x,ed0[x][j].y);
				ed0[x].clear();
				if(get()) return 1;
			}
			else low[x]=min(low[x],low[y]);
			for(j=0;j<ed0[x].size();j++)
				ed[x].pb(ed0[x][j]);
			ed0[x].clear();
		}
		else if(y!=f&&dfn[y]<dfn[x])
			ed[x].pb(mp(x,y)),low[x]=min(low[x],dfn[y]);
	for(i=0;i<ed[x].size();i++)
		ed0[id[low[x]]].pb(ed[x][i]);
	return 0;
}
int main()
{
	int i,j,x,y;
	bool z=0;
	scanf("%d%d",&n,&m);
	for(i=0;i<m;i++)
		scanf("%d%d",&x,&y),ins(x,y);
	for(i=1;i<=n&&!z;i++)
		if(!dfn[i])
			z|=dfs(i,0);
	if(!z) printf("NO\n");
	else
	{
		printf("YES\n");
		for(i=0;i<3;i++)
		{
			printf("%d",ans[i][0]);
			for(j=1;j<=ans[i][0];j++)
				printf(" %d",ans[i][j]);
			printf("\n");
		}
	}
	return 0;
}
