#include<iostream>
#include<cstring>
#include<cstdio>
#include<vector>
using namespace std;
int a[40], b[40];
bool f[33][32][50000];
bool g[33][32][50000];
unsigned short d[33][32][50000];
int flag;
int s[40], cnt;
int N, n, p;
void solve(int x, int y, int z)
{
	if(x == 0)
		return ;
	int i, j, k;
	i = g[x][y][z];
	if(i == 1)
	{
		s[++cnt] = x;
		j = y ^ a[x];
		k = d[x][y][z];
		solve(x-1, j, k);
	}
	else
		solve(x-1, y, z);
}
int main()
{
	scanf("%d%d", &N, &p);
	for(int i = 1; i <= N; i++)
	{
		int k;
		scanf("%d", &k);
		if(k >= 32)
			continue;
		a[++n] = k;
		b[n] = i;
	}
	f[0][0][0] = 1;
	d[0][0][0] = p+1;
	for(int i = 0; i < n; i++)
		for(int j = 0; j < 32; j++)
			for(int k = 0; k < p; k++)
				if(f[i][j][k])
				{
					
					if(f[i+1][j][k] != true)
					{
						f[i+1][j][k] = true;
						g[i+1][j][k] = 0;
						d[i+1][j][k] = d[i][j][k];
					}
					int k1;
					if(a[i+1] < 10)
						k1 = k * 10 + a[i+1];
					else
						k1 = k * 100 + a[i+1];
					k1 %= p;
					if(f[i+1][j^a[i+1]][k1] != true || d[i+1][j^a[i+1]][k1] == p+1)
					{
						f[i+1][j^a[i+1]][k1] = true;
						g[i+1][j^a[i+1]][k1] = 1;
						d[i+1][j^a[i+1]][k1] = k;
					}
				}
	if(f[n][0][0] && d[n][0][0] != p+1)
	{
		solve(n, 0, 0);
		printf("Yes\n%d\n", cnt);
		for(int i = cnt; i >= 1; i--)
			printf("%d ", b[s[i]]);
		printf("\n");
	}
	else
		printf("No\n");
    return 0;
}
    
