# include <cstdio>

# define REP(i, n) for (int i = 1; i <= n; i ++)
# define REP_D(i, n) for (int i = n; i >= 1; i --)

bool vis[33][33][50010];

int n, m, P, li[100], len, a[100], id[50010], dig[100];

bool DFS (int i, int j, int k)
{
	if (i > n) return !j && !k;
	if (vis[i][j][k]) return false;
	vis[i][j][k] = true;
	if (DFS (i + 1, j, k)) return true;
	if (DFS (i + 1, j ^ a[i], (k * dig[a[i]] + a[i]) % P)) return li[++ len] = a[i], true;
	return false;
}

bool solve () {REP (i, n) if (DFS (i + 1, a[i], a[i] % P)) {li[++ len] = a[i]; return true;} return false;}

int main ()
{
	//freopen ("240D.in", "r", stdin);
	scanf ("%d%d", &m, &P); int t1;
	REP (i, 31) dig[i] = i < 10 ? 10 : 100;
	REP (i, m) {scanf ("%d", &t1); if (t1 < 32) id[a[++ n] = t1] = i;}
	if (solve ()) {printf ("Yes\n%d\n", len); REP_D (i, len) printf ("%d ", id[li[i]]);}
	else puts ("No");
	//while (1) ;
	return 0;
}
