#include <cstdio>
#include <cstring>
using namespace std;
const int N=50010,L=32;
int p,n=0;
int a[N],id[N],ans[N];
int pre[L][L][N];
bool f[L][L][N];
void init()
{
    int t,x;
    scanf("%d%d",&t,&p);
    for(int i=1;i<=t;i++)
	{    
        scanf("%d",&x);
        if (x<L)
		{
            a[++n]=x;
            id[n]=i;
        }
    }
}
void solve(){
    int now,pxor,pmod;
    memset(f,0,sizeof(f));
    f[1][a[1]][a[1]%p]=true;
    for(int i=2;i<=n;i++)
	{
        now=(a[i]<10)?10:100;
        for(int j=0;j<L;j++)
		{
            for(int k=0;k<p;k++)
			{
                if (f[i-1][j][k])
				{
                    f[i][j][k]=true;
                    pre[i][j][k]=k;
                    pxor=j^a[i];
                    pmod=(k*now+a[i])%p;
                    f[i][pxor][pmod]=true;
                    pre[i][pxor][pmod]=k;
                }
            }
        }
    }
    if (!f[n][0][0]) printf("No\n");
    else
	{
        printf("Yes\n");
        int tot=0;
        for(int i=n,j=0,k=0;i!=0;i--)
		{
            if (!f[i-1][j][k])
			{
                ans[++tot]=id[i];
                k=pre[i][j][k];
                j=j^a[i];
            }
        }
        printf("%d\n",tot);
        for(int i=tot;i>1;i--) printf("%d ",ans[i]);
        printf("%d\n",ans[1]);
    }
}   
int main(){
    init();
    solve();
    return 0;
}