#include <iostream>
#include <string.h>

using namespace std;

const int MAX_N=50010,L=32;

int p,n=0;
int a[MAX_N],id[MAX_N],ans[MAX_N];
int pre[L][L][MAX_N];
bool f[L][L][MAX_N];

void Init(){
	int t,x;
	cin >> t >> p;
	for(int i=1;i!=t+1;i++){	
		cin >> x;
		if (x<L){
			a[++n]=x;
			id[n]=i;
		}
	}
}

void Solve(){
	int now,pxor,pmod;
	memset(f,0,sizeof(f));
	f[1][a[1]][a[1]%p]=true;
	for(int i=2;i!=n+1;i++){
		now=(a[i]<10)?10:100;
		for(int j=0;j!=L;j++){
			for(int k=0;k!=p;k++){
				if (f[i-1][j][k]){
					f[i][j][k]=true;
					pre[i][j][k]=k;
					pxor=j^a[i];
					pmod=(k*now+a[i])%p;
					f[i][pxor][pmod]=true;
					pre[i][pxor][pmod]=k;
				}
			}
		}
	}
	if (!f[n][0][0]){
		cout << "No" << endl;
	}
	else {
		cout << "Yes" << endl;
		int tot=0;
		for(int i=n,j=0,k=0;i!=0;i--){
			if (!f[i-1][j][k]){
				ans[++tot]=id[i];
				k=pre[i][j][k];
				j=j^a[i];
			}
		}
		cout << tot << endl;
		for(int i=tot;i!=1;i--){
			cout << ans[i] << ' ';
		}
		cout << ans[1] << endl;
	}
}
		
int main(){
	Init();
	Solve();
	return 0;
}

