#include<bits/stdc++.h>
#define rep(i,a,b) for(int i = a; i <= b; ++i)
#define ll long long
#define VI vector<int>
using namespace std;

int read() {
	char c = getchar(); int f = 0,x = 0;
	while (!isdigit(c)) {if (c == '-') f = 1; c = getchar();}
	while (isdigit(c)) {x = x * 10 + c - '0'; c = getchar();}
	return f?-x:x;
}

#define N 100010
int fa[N], l[N], r[N], op[N], L[N], R[N], v[2*N];
VI seg[4*N];
int n;

int getf(int a) {return fa[a]==a ? a : fa[a] = getf(fa[a]);}

#define ls k<<1
#define rs ls|1

void modify(int l, int r, int k, int a) {
	for (VI::iterator it = seg[k].begin(); it < seg[k].end(); ++it) {
		L[n] = min(L[n], L[*it]);
		R[n] = max(R[n], R[*it]);
		fa[getf(*it)] = n;
	}
	seg[k].clear();
	if (l < r) {
		int mid = l+r>>1;
		if (a <= mid) modify(l,mid,ls,a); else modify(mid+1,r,rs,a);
	}
}

void addseg(int l, int r, int k, int a, int b) {
	if (a <= l && r <= b) {seg[k].push_back(n); return;}
	if (a > r || l > b) return;
	int mid = l+r>>1;
	addseg(l,mid,ls,a,b);
	addseg(mid+1,r,rs,a,b);
}

int main() {
	//freopen("pingpong.in","r",stdin);
	//freopen("pingpong.out","w",stdout);
	int T = read(), cnt = 0;
	rep(i,1,T) {
		op[i] = read(), l[i] = read(), r[i] = read();
		if (op[i] == 1) {
			v[++cnt] = l[i];
			v[++cnt] = r[i];
		}
	}
	sort(v+1,v+cnt+1);
	cnt = unique(v+1,v+cnt+1)-(v+1);
	rep(i,1,T) {
		if (op[i] == 1) {
			l[i] = lower_bound(v+1,v+cnt+1,l[i])-v;
			r[i] = lower_bound(v+1,v+cnt+1,r[i])-v;
			++n, fa[n] = n;
			L[n] = l[i]; R[n] = r[i];
			modify(1,cnt,1,l[i]);
			modify(1,cnt,1,r[i]);
			if (r[i] - l[i] > 1) addseg(1,cnt,1,L[n]+1,R[n]-1);
		} else {
			int fx = getf(l[i]), fy = getf(r[i]);
			if (fx == fy) puts("YES"); else
			if (L[fy] < L[l[i]] && L[l[i]] < R[fy] || L[fy] < R[l[i]] && R[l[i]] < R[fy]) puts("YES");
			else puts("NO");
		}
	}
	return 0;
}
