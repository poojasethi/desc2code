#include<cstdio>
#include<iostream>
#include<string>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;

struct question
{int opt,x,y;
};
struct question q[100010];

struct unit
{int fa,L,R;
};
struct unit f[800010];

int n,fx,fy,n1,m;
int t[800010],sa[200010],pos[200010];
vector<int> a[800010];

int find(int i)
{return f[i].fa==i?i:f[i].fa=find(f[i].fa);
}

void connect(int x,int y)
{x=find(x);
 y=find(y);
 if(x!=y)
 {	f[x].fa=y;
 	f[y].L=min(f[y].L,f[x].L);
 	f[y].R=max(f[y].R,f[x].R);
 }
}

void change(int p,int l,int r,int x,int y,int z)
{if(l>y || r<x || x>y) return;
 if(l>=x && r<=y)
 {	a[p].push_back(z);
 	return;
 }
 change(p*2,l,(l+r)/2,x,y,z);
 change(p*2+1,(l+r)/2+1,r,x,y,z);
}

void query(int p,int l,int r,int x)
{int i;
 
 for(i=0;i<a[p].size();i++) connect(fx,a[p][i]);
 a[p].clear();	
 if(l==r) return;
 if(x<=(l+r)/2)
 	query(p*2,l,(l+r)/2,x);
 else	
 	query(p*2+1,(l+r)/2+1,r,x);
}

int main()
{int i,j;
 
 scanf("%d",&n);
 for(i=1;i<=n;i++)
 {	scanf("%d%d%d",&q[i].opt,&q[i].x,&q[i].y);
 	if(q[i].opt==1)
	{	sa[++n1]=q[i].x;
		sa[++n1]=q[i].y;
		pos[++m]=i;
	}
 }
 sort(sa+1,sa+n1+1);
 for(i=1;i<=n;i++)
 	if(q[i].opt==1)
 	{	q[i].x=lower_bound(sa+1,sa+n1+1,q[i].x)-sa;
 		q[i].y=lower_bound(sa+1,sa+n1+1,q[i].y)-sa;
 	}
 for(i=1;i<=n;i++)
	if(q[i].opt==1)
	{	f[i].fa=i;
 		f[i].L=q[i].x;
 		f[i].R=q[i].y;
 	}
 	else
 	{	q[i].x=pos[q[i].x];
 		q[i].y=pos[q[i].y];
 	}
 for(i=1;i<=n;i++)
 	if(q[i].opt==1)
	{	fx=i;
		query(1,1,n1,q[i].x);	
		query(1,1,n1,q[i].y);
		fx=find(fx);
		change(1,1,n1,f[fx].L+1,f[fx].R-1,fx);
	}
	else
	{	fx=find(q[i].x);
		fy=find(q[i].y);
		//cout<<f[fx].L<<" "<<f[fx].R<<" "<<f[fy].L<<" "<<f[fy].R<<endl;
		if(fx==fy || (f[fx].L>f[fy].L && f[fx].L<f[fy].R) || (f[fx].R>f[fy].L && f[fx].R<f[fy].R))
			printf("YES\n");
		else if(f[fx].L==f[fy].L && f[fx].R==f[fy].R && (f[fx].L!=q[q[i].x].x || f[fx].R!=q[q[i].x].y))	
			printf("YES\n");
		else
			printf("NO\n");
	}
 return 0;
}