import sys
import copy



def min(a, b):
    if a < b:
        return a
    return b


def count_left(n, d1, d2):
    sum = 0
    for i in xrange(n+1):
        if d1[i] >=  n - i + 1:
            sum += 1
        if d2[i] >= n - i + 1:
            sum += 1
    return sum

def count_right(n, d1, d2):
    sum = 0
    for i in xrange(n+1, len(d1)):
        sum += min(d1[i], i - n)
        try:
            sum += min(d2[i + 1], i - n)
        except:
            pass
    return sum



def podpal_array(s):
    d1 = []
    n = len(s)
    for i in xrange(n):
        d1.append(0)

    l = 0
    r = -1
    for i in xrange(n):
        if i>r:
            k = 1
        else:
            k = min (copy.copy(d1[l+r-i]), r-i) + 1
        while i + k < n and i - k >= 0 and s[i+k] == s[i-k]:
            k += 1
        k = k - 1
        d1[i] = k
        if (i + k > r):
            l = i - k
            r = i + k
    for x in xrange(len(d1)):
        d1[x] += 1

    d2 = []
    n = len(s)
    for i in xrange(n):
        d2.append(0)

    l = 0
    r = -1
    for i in xrange(n):
        if i>r:
            k = 1
        else:
            k = min (copy.copy(d2[l+r-i + 1]), r-i + 1) + 1
        while i + k - 1 < n and i - k >= 0 and s[i + k - 1] == s[i - k]:
            k += 1
        k = k - 1
        d2[i] = k
        if (i + k > r):
            l = i - k
            r = i + k - 1
    
    return d1, d2

def main():
    s = sys.stdin.readline().split()[0]
    d1, d2 = podpal_array(s)
    
    sum = 0
    for i in xrange(len(s)-1):
        s1 = count_left(i, d1, d2)
        s2 = count_right(i, d1, d2)
        sum += s1 * s2
    print sum

if __name__ == "__main__":
    main()