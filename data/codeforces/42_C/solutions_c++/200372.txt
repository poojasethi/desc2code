#include <iostream>
using namespace std;

int A[5];

int cerc (int k)
{
	if (k <= 4) return k;
	if (k == 5) return 1;
	cout << "error1";
	return 0;
}

void aduna (int k)
{
	A[k] ++;
	A[cerc (k + 1)] ++;
}

void imparte (int k)
{
	A[k] /= 2;
	A[cerc (k + 1)] /= 2;
}

void next (int op, int poz)
{
	if (op == 1)
		aduna (poz),
		cout << "+" << poz << endl;
	else
		imparte (poz),		
		cout << "/" << poz << endl;
//	printf (" %d %d %d %d\n", A[1], A[2], A[3], A[4]);
//	printf ("\n");
}

int vecini_pari ()
{
	for (int i = 1; i <= 4; ++i)
		if ( !(A[i]&1) && !(A[cerc (i + 1)]&1) )
			return i;
	return 0;
}

int vecini_impari ()
{
	for (int i = 1; i <= 4; ++i)
		if ( A[i]&1 && A[cerc (i + 1)]&1 && !(A[i] == 1 && A[cerc (i + 1)] == 1))
			return i;
	return 0;
}

int valid ()
{
	for (int i = 1; i <= 4; ++i)
		if ( A[i] != 1 )
			return i;
	return 0;	
}

int main ()
{
	cin >> A[1] >> A[2] >> A[3] >> A[4];
	int poz, pozv;
	
	while ( pozv = valid () )
	{
		poz = vecini_pari ();
		if (poz) { next (2, poz); continue; }
		
		poz = vecini_impari ();
		if (poz) { next (1, poz); continue; }
		
		next (1, pozv);
	}
	
	return 0;
}

