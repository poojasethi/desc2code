#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <cmath>
#include <iostream>
#include <cstdlib>
#include <sstream>

using namespace std;
const int M=1000000007;
void add(int &a,int b)
{
	a+=b;
	if(a>=M)a-=M;
}
int dp[55][55][2];
int c[55][55];
int inv[55];
int main()
{
	inv[0]=inv[1]=1;
	for(int i=2;i<55;i++)inv[i]=(M-1LL*(M/i)*inv[M%i]%M)%M;
	for(int i=0;i<=50;i++)
	{
		c[i][0]=1;
		for(int j=1;j<=i;j++)c[i][j]=(c[i-1][j]+c[i-1][j-1])%M;
	}
	dp[1][0][0]=1;
	for(int i=2;i<=50;i++)
		for(int j=1;j<=i/2;j++)
			for(int k=0;k<2;k++)
			{
				for(int x=1;i-1-x>0;x++)
				{
					for(int y1=0;y1<=j-k;y1++)
						for(int p1=0;p1<2;p1++)
							if(dp[x][y1][p1])
							{
								int y2=j-k-y1;
								for(int p2=0;p2<2;p2++)
									if(dp[i-1-x][y2][p2])
									{
										if(max(y1-p1+1+y2,y2-p2+1+y1)==j)
										{
											add(dp[i][j][k],1LL*c[i-2][x-1]%M*dp[x][y1][p1]%M*dp[i-1-x][y2][p2]%M);
										}
									}
							}
				}
				add(dp[i][j][k],dp[i-1][j-k][j-k-(j-1)]%M);
				dp[i][j][k]=1LL*i*dp[i][j][k]%M;
			}
	int n,k;
	while(cin>>n>>k)
	{
		int ans=(dp[n][k][0]+dp[n][k][1])%M;
		ans=1LL*ans*inv[n]%M;
		cout<<ans<<endl;
	}
}