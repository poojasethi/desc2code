#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>
#include <queue>
#include <set>
#include <map>  
#include <ctime>
#include <cmath>
using namespace std;
typedef long long LL;
const int N = 55;
const int MOD = 1000000007;
int dp[N][N][2] , c[N][N];
int PowMod (int a , int b) {
    int ret = 1;
    while (b) {
        if (b & 1) ret = 1LL * ret * a % MOD;
        a = 1LL * a * a % MOD;
        b >>= 1;
    }
    return ret;
}
int main () {
    #ifndef ONLINE_JUDGE
        freopen ("input.txt" , "r" , stdin);
    #endif
    int inv = PowMod (2 , MOD - 2);
    for (int i = 0 ; i < N ; i ++) {
        c[i][0] = c[i][i] = 1;
        for (int j = 1 ; j < i ; j ++)
            c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % MOD;
    }
    dp[0][0][1] = 1;
    dp[1][0][0] = 1;
    for (int n = 2 ; n <= 50 ; n ++) {
        for (int left = 0 ; left < n ; left ++) {
            int right = n - 1 - left;
            for (int lc = 0 ; lc * 2 <=left ; lc ++) {
                for (int rc = 0 ; rc * 2 <= right ; rc ++) {
                    for (int lm = 0 ; lm < 2 ; lm ++) {
                        for (int rm = 0 ; rm < 2 ; rm ++) {
                            int cen = !(lm && rm);
                            dp[n][lc + rc + cen][cen] = (dp[n][lc + rc + cen][cen] + (1LL * (1LL * (1LL * dp[left][lc][lm] * dp[right][rc][rm] % MOD) * n % MOD) * c[n - 1][left] % MOD) * inv) % MOD;
                        }
                    }
                }
            }
        }
    }
    int n , k;
    while (cin >> n >> k) {
        cout << 1LL * (dp[n][k][0] + dp[n][k][1]) * PowMod (n , MOD - 2) % MOD << endl;
    }
    return 0;
}