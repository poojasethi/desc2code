#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <cmath>
#define ll long long
using namespace std;
const int mod = 1e9 + 7;
int n , m;
ll f[100][100][2] , C[100][100];

void init()
{
	for( int i = 0; i <= n; ++i )
	{
		C[i][i] = C[i][0] = 1;
		for(int j = 1; j < i; ++j)
		{
			C[i][j] = C[i - 1][j] + C[i - 1][j - 1];
			if(C[i][j] >= mod) C[i][j] -= mod;
		}
	}
}
int main()
{
	scanf("%d%d",&n,&m);
	init();
	f[1][0][0] = f[0][0][1] = 1;
	
	for( int i = 2 ; i <= n ; ++i )
		for( int j = 1 ; j <= (i / 2) ; ++j )
			{
				for( int son1 = 0 ,son2 = i - 1 ; son1 <= son2 ; son1 ++ , son2 -- )
				{
					
					ll tot;
					if( son1 != son2 ) tot = C[i - 1][son1];
					else tot = C[i - 2][son1 - 1];
					
					if( son1 ) tot = tot * son1 * son2 % mod;
					else tot = tot * son2 % mod;
					
					for( int p = 0 ; p <= j ; ++p )
					{
						int p2 = j - p ;
						f[i][j][0] += f[son1][p][1] * f[son2][p2][1] % mod * tot % mod;
						f[i][j][0] %= mod;
					}
					
					for( int p = 0 ; p <= j - 1 ; ++p )
					{
						int p2 = j - p - 1;
						f[i][j][1] += (f[son1][p][1] * f[son2][p2][0] % mod
									+ f[son1][p][0] * f[son2][p2][0] % mod
									+ f[son1][p][0] * f[son2][p2][1] % mod) % mod
									* tot % mod;
						f[i][j][1] %= mod;
					}
				}	
			}
			
	printf("%d\n",( f[n][m][0] + f[n][m][1] ) % mod );
	fclose(stdin);
	fclose(stdout);
	return 0;
}
//kgqnfbppoohntyeecpglenqtvdikctpitbapjsnwxakunacptkaxpbpyjahmkmfmeungytilxnvujhkwvaojsaytjrupqaupp