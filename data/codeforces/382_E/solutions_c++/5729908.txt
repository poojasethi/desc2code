#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <cstring>
#include <string>
using namespace std;
#define LL long long
const LL mod = 1000000007;
const LL inv2 = (mod + 1) / 2;

LL C[55][55];
LL inv[55];
LL dp[55][55][3];

LL N,M;
int main(){
	inv[1] = 1;
    for(LL i = 2; i <= 50; ++i) inv[i] = mod - mod / i * inv[mod%i] % mod;
    for(LL i = 0; i <= 50; ++i){
        C[i][0] = 1;
        for(LL j = 1; j <= i; ++j){
            C[i][j] = (C[i-1][j] + C[i-1][j-1])%mod;
        }
    }
	dp[0][0][1] = 1;
    dp[1][0][0] = 1;
    for(LL i = 2; i <= 50; ++i){
		for(LL i1 = 0;i1 < i; ++i1){
			LL i2 = i - i1 - 1;
            for(LL j1 = 0; j1 <= i1/2; ++j1){
                for(LL j2 = 0; j2 <= i2/2; ++j2){
                    for(LL k1 = 0; k1 <= 1; ++k1){
                        for(LL k2 = 0; k2 <= 1; ++k2){
                            LL k = !(k1&&k2);
                            LL j = j1 + j2 + k;
//                            cout<<"  "<<i1<<"  "<<i2<<"  "<<j1<<"  "<<j2<<"  "<<k1<<"  "<<k2<<endl;
//                            cout<<"                        "<<i<<"  "<<j<<"  "<<k<<endl;
                            LL tmp = dp[i1][j1][k1] * dp[i2][j2][k2] % mod * i % mod * C[i-1][i1] % mod;
                            tmp = tmp * inv2 % mod;
                            dp[i][j][k] += tmp;
                            dp[i][j][k] %= mod;
                        }
                    }
                }
            }
        }
    }
	scanf("%I64d%I64d",&N,&M);
	printf("%I64d\n",(dp[N][M][0]+dp[N][M][1])*inv[N]%mod);
	return 0;
}
