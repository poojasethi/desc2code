#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <cmath>
#include <algorithm>
#define lld long long
using namespace std;
const int maxn=60,mod=1000000007;
int n,k;
int f[maxn][maxn][2];
int c[maxn][maxn];
int main(){
//	freopen("a.in","r",stdin);
//	freopen("a.out","w",stdout);
	scanf("%d%d",&n,&k);
	for (int i=0;i<=n;i++) c[i][0]=1;
	for (int i=1;i<=n;i++)
		for (int j=1;j<=i;j++)
			c[i][j]=(c[i-1][j]+c[i-1][j-1])%mod;
	f[1][0][0]=1;
	f[0][0][1]=1;
	for (int i=2;i<=n;i++){
		for (int l=0,r=i-1;l<=r;l++,r--){
			int v;
			if (l!=r) v=c[i-1][l];
			else v=c[i-2][l-1];
			if (i!=n)
				v=(1LL*v*i)%mod;
			for (int ql=0;ql*2<=l;ql++)
			for (int qr=0;qr*2<=r;qr++)
			for (int tl=0;tl<=1;tl++)
			for (int tr=0;tr<=1;tr++){
				int cnt=!(tl&tr);
				int now=((1LL*f[l][ql][tl]*f[r][qr][tr])%mod*1LL*v)%mod;
				f[i][ql+qr+cnt][cnt]=(f[i][ql+qr+cnt][cnt]+now)%mod;
			}
		}
	}
	printf("%d\n",(f[n][k][0]+f[n][k][1])%mod);
//	fclose(stdin);
//	fclose(stdout);
	return 0;
}
