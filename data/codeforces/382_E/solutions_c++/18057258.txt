#include<cstdio>
#include<cstring>
#include<algorithm>
#define orz "%I64d"
#define LL long long
#define nn 52
using namespace std;

const int mod=(int)1e9+7,rev=(int)5e8+4;

int n,km;
LL f[nn][nn][2],c[nn][nn],fac[nn],ny[nn],ans;

LL powi(LL a,LL b)
{
	LL base=a,c=1;
	while(b)
	{
		if(b&1) (c*=base)%=mod;
		(base*=base)%=mod;
		b>>=1;
	}
	return c;
}

void init()
{
	scanf("%d%d\n",&n,&km);
	fac[0]=ny[0]=1;
	for(int i=1;i<=n;++i) fac[i]=fac[i-1]*i%mod,ny[i]=powi(fac[i],mod-2);
	for(int i=0;i<=n;++i)
		for(int j=0;j<=i;++j)
			c[i][j]=fac[i]*ny[i-j]%mod*ny[j]%mod;
}

void work()
{
	LL dt=0;
	f[1][0][0]=f[0][0][1]=1;
	for(int i=2;i<=n;++i)
	{
		for(int j=0;j<=km;++j)
		{
			for(int k=0;k<=(i-1)/2;++k)
			{
				for(int p=0;p<=k/2;++p)
				{
					if(j>=p)
					{
						dt=f[k][p][1]*f[i-1-k][j-p][1]%mod;
						(dt*=c[i-1][k]*max(k,1)%mod*(i-k-1)%mod)%=mod;
						if(i-1-k==k) dt=dt*rev%mod;
						(f[i][j][0]+=dt)%=mod;
					}
					if(j>p)
					{
						dt=f[k][p][1]*f[i-1-k][j-p-1][0]%mod+f[k][p][0]*f[i-1-k][j-p-1][1]%mod+f[k][p][0]*f[i-1-k][j-p-1][0]%mod;
						(dt*=c[i-1][k]*max(k,1)%mod*(i-k-1)%mod)%=mod;
						if(i-1-k==k) dt=dt*rev%mod;
						(f[i][j][1]+=dt)%=mod;
					}
				}
			}
		}
	}
	ans=(f[n][km][0]+f[n][km][1])%mod;
	if(ans<0) ans+=mod;
	printf(orz,ans);
}

int main()
{
	init();
	work();

	return 0;
}