#include <algorithm>
#include <stdio.h>
#include <memory.h>
#include <queue>
#include <cmath>
#include <set>
#include <map>
#include <string.h>
#include <string>
#include <ctype.h>
#include <ctime>
#include <complex>
#include <bitset>

using namespace std;

typedef long long INT;
typedef pair<int, int> pii;

#define eprintf(...) fprintf(stderr, __VA_ARGS__)
template <class T> inline void chkmin(T &a, T b) { if (a>b) a=b; }
template <class T> inline void chkmax(T &a, T b) { if (a<b) a=b; }

#define MOD 1000000007

int c[60][60], dp[60][30][30];

int main() {
	int i, j, N, K, i0, i1, j0, j1, n, x, y, k0, k1, ans;
	
	for (i=0; i<50; i++) {
		c[i][0]=c[i][i]=1;
		for (j=1; j<i; j++)
			c[i][j]=(c[i-1][j-1]+c[i-1][j])%MOD;
	}
	
	scanf("%d%d", &N, &K);
	
	dp[1][0][0]=1;
	for (n=2; n<=N; n++) {
		for (x=1, y=n-2; y>0; x++, y--) {
			for (i0=0; i0<=x/2; i0++) for (i1=0; i1<=x/2; i1++) {
				if (dp[x][i0][i1]==0) continue;
				for (j0=0; j0<=y/2; j0++) for (j1=0; j1<=y/2; j1++) {
					if (dp[y][j0][j1]==0) continue;
					k0=max(i0, i1)+max(j0, j1);
					k1=max(max(i0+j1, i1+j0), i0+j0)+1;
					dp[n][k0][k1]+=1LL*dp[x][i0][i1]*dp[y][j0][j1]%MOD*c[n-2][x-1]%MOD*x*y%MOD;
					dp[n][k0][k1]%=MOD;
				}
			}
		}
		for (i0=0; i0<=(n-1)/2; i0++) for (i1=0; i1<=(n-1)/2; i1++) {
			if (dp[n-1][i0][i1]==0) continue;
			k0=max(i0, i1); k1=i0+1;
			dp[n][k0][k1]+=1LL*dp[n-1][i0][i1]*(n-1)%MOD;
			dp[n][k0][k1]%=MOD;
		}
	}
	
	ans=0;
	for (k0=0; k0<=N/2; k0++)
		for (k1=0; k1<=N/2; k1++)
			if (max(k0, k1)==K)
				ans=(ans+dp[N][k0][k1])%MOD;
	
	printf("%d\n", ans);
	
	return 0;
}
