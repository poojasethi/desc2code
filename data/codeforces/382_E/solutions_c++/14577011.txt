#include <bits/stdc++.h>
#define ll long long
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
using namespace std;
const int mod = (int) 1e9 + 7;
const int inf = 1e9;
const int N = 56;
int n, m, x, z, y, dp[N][N][N], C[N][N];
int f(int size, int mx0, int mx1) {
	if(mx0 < 0 || mx1 < 0) return 0;
	if(size == 0) return mx0 == 0 && mx1 == 0;
	if(size == 1) return mx0 == 0 && mx1 == 1;
	int &r = dp[size][mx0][abs(mx0-mx1) + 2 * (mx0 < mx1)];
	if(r != -1) return r;
	r = 0;
	FOR(sz1, 1, size-1)
		FOR(n0_0, 0, mx1) {
			int n1_0 = mx1 - n0_0 - 1;
			FOR(a1, -1, 1)
				FOR(a2, -1, 1) {
					int n0_1 = n0_0 + a1;			
					int n1_1 = n1_0 + a2;		
					if(n0_0 < 0 || n0_1 < 0 || n1_0 < 0 || n1_1 < 0) continue;
					if(max(max(n0_0 + n1_1, n0_1 + n1_0), n0_0 + n1_0) == mx0) {
						r = (r + f(sz1, n0_0, n0_1) * (ll) f(size - sz1 - 1, n1_0, n1_1) % mod * C[size-2][sz1-1] % mod * (ll) (sz1) % mod * max((size-sz1-1), 1) % mod) % mod;
					}
				}
		} 
	return r;
}
int main() {
	C[0][0] = 1;
	FOR(i, 1, 55) {
		C[i][0] = 1;
		FOR(j, 1, i)
			C[i][j] = (C[i-1][j] + C[i-1][j-1]) % mod;
	}
	scanf("%d %d", &n, &m);
	memset(dp, -1, sizeof dp);
	int ans = 0;
	FOR(i, m-1, m+1) ans = (ans + f(n, m, i)) % mod;
	cout << ans << endl;
	return 0;
}
