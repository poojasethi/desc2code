from cmath import phase
def main():
    n = int(raw_input())
    a = [map(int, raw_input().split()) for i in xrange(n)]
    t = [complex(x[0], x[1]) for x in a]
    ans = 0
    for i in xrange(n):
        c = []
        for j in xrange(i):
            if a[i] == a[j]:
                ans += n - 2
            elif a[j][0] < a[i][0]:
                c.append(phase(t[i] - t[j]))
            elif a[j][0] > a[i][0]:
                c.append(phase(t[j] - t[i]))
            elif a[j][1] > a[i][1]:
                c.append(phase(t[i] - t[j]))
            else:
                c.append(phase(t[j] - t[i]))
        c.sort()
        p = -100
        cnt = 0
        for x in c:
            if x - p < 1e-9:
                cnt += 1
            else:
                cnt = 0
                p = x
            ans += cnt
    print n * (n - 1) * (n - 2) / 6 - ans
main()
