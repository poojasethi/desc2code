#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

int L[10][10], H[10][10], A[10][10];
int flow[10];
int n, max_cost, min_flow;

void dfs(int u, int v, int cost)
{
	if(u==n)
	{
		if(cost>max_cost) max_cost=cost;
		return;
	}
	if(v>n)
	{
		if(flow[u]==0) dfs(u+1, u+2, cost);
		return;
	}
	for(int i=L[u][v]; i<=H[u][v]; i++)
	{
		if(flow[u]<i) break;
		flow[u]-=i, flow[v]+=i;
		dfs(u, v+1, cost+(i==0?0:A[u][v])+i*i);
		flow[u]+=i, flow[v]-=i;
	}
}

int main()
{
	scanf("%d", &n);
	for(int i=0, a, b; i<n*(n-1)/2; i++)
	{
		scanf("%d%d", &a, &b);
		scanf("%d%d%d", &L[a][b], &H[a][b], &A[a][b]);
	}
	max_cost=-1, min_flow=-1;
	memset(flow, 0, sizeof flow);
	for(min_flow=0; min_flow<=100; min_flow++)
	{
		flow[1]=min_flow;
		dfs(1, 2, 0);
		if(max_cost!=-1) break;
	}
	if(max_cost!=-1) printf("%d %d\n", min_flow, max_cost);
	else printf("-1 -1\n");
	return 0;
}

 		 	 		     				   			 	