#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
using namespace std;

int n, a[8][8], l[8][8], r[8][8], s[8][8], d[8];
int ans1 = 0x7FFFFFFF, ans2 = -1;

int val(int s, int x)
{
	return x ? s + x * x : 0;
}

void dfs2(int, int, int, int);

void dfs(int v, int ind, int now)
{
	if (v == n)
		ans2 = max(ans2, now); else
		dfs2(v, v + 1, ind, now);
}

void dfs2(int x, int y, int res, int now)
{
	if (y == n)
	{
		if (res < l[x][y] || res > r[x][y]) return;
		a[x][y] = res;
		int cnt = 0;
		for (int i = 1; i <= x; ++i) cnt += a[i][x + 1];
		dfs(x + 1, cnt, now + val(s[x][y], res));
	} else
		for (int i = l[x][y]; i <= min(res, r[x][y]); ++i)
		{
			a[x][y] = i;
			dfs2(x, y + 1, res - i, now + val(s[x][y], i));
		}
}

int main()
{
	cin >> n;
	for (int i = 1; i * 2 <= n * (n - 1); ++i)
	{
		int x, y, ll, rr, st;
		cin >> x >> y >> ll >> rr >> st;
		l[x][y] = ll;
		r[x][y] = rr;
		s[x][y] = st;
	}
	for (int ans1 = 0; ans1 <= 25; ++ans1)
	{
		dfs(1, ans1, 0);
		if (ans2 >= 0)
		{
			cout << ans1 << " " << ans2 << endl;
			return 0;
		}
	}
	cout << "-1 -1\n";
	return 0;
}

