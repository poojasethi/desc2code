#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <bitset>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())

struct edge{
	int low,high,base;
};

edge E[10][10];
li n,res,mini=-1;
li rem[10],sum=0;

void recur(li from,li to){
	if(from==n){
		mini=max(sum,mini);
		return;
	}
	edge &e=E[from][to];
	for(int i=e.low;i<=e.high;i++){
		if(i!=0) sum+=e.base;
		sum+=i*i;
		rem[from]-=i;
		rem[to]+=i;
		if(to==n && 0==rem[from]) recur(from+1,from+2);
		if(to!=n && 0<=rem[from]) recur(from,to+1);
		rem[to]-=i;
		rem[from]+=i;
		sum-=i*i;
		if(i!=0) sum-=e.base;
	}
}

int main(){
	cin>>n;
	rep(i,n*(n-1)/2){
		li a,b,c,d,e;
		cin>>a>>b>>c>>d>>e;
		E[a][b]=(edge){c,d,e};
	}
	for(res=0;res<=5*n;res++){
		rep(i,10) rem[i]=0;
		rem[1]=res;
		recur(1,2);
		if(mini!=-1) break;
	}
	if(5*n<res) cout<<"-1 -1"<<endl;
	else cout<<res<<" "<<mini<<endl;
}
