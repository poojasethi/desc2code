#include <stdio.h>
#include <math.h>
#include <vector>
#include <string>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
using namespace std;

int low[6][6];
int high[6][6];
//int acti[6][6];
int the_cost[6][6][6];
int sur[6];
int n;
int ans_flow;
int ans_cost;

void find(int a, int b, int cost) {
  int na = a;
  int nb = b+1;
  if (b == a+1) {
    // check a
    if (a == 1 && (sur[0]>ans_flow)) return;
    if (a > 1 && sur[a-1] != 0) return;
  }
  if (nb == n) {
    na ++; nb = na + 1;
  }

  if (a == n-1) {
//    printf("%d %d\n", sur[0], cost);
    if (sur[0]<ans_flow || (sur[0]==ans_flow && ans_cost<cost))
      { ans_flow = sur[0]; ans_cost = cost; }
    return;
  }
  if (a>0 && abs(sur[a]) > 5*(n-b)) return;
  for (int i=low[a][b]; i<=high[a][b]; i++) {
//    printf("%d %d : %d\n", a, b, i);
    sur[a] += i;
    sur[b] -= i;
    find(na, nb, cost+the_cost[a][b][i]);
    sur[a] -= i;
    sur[b] += i;
  }
}

int main()
{
  cin >> n;
  for (int i=0; i<n*(n-1)/2; i++) {
    int s, f, l, h, a;
    cin >> s >> f >> l >> h >> a;
    low[s-1][f-1] = l;
    high[s-1][f-1] = h;
//    acti[s-1][f-1] = a;
    for (int j=l; j<=h; j++)
      the_cost[s-1][f-1][j] = (j==0)?0:(a+j*j);
  }
  ans_flow = 9999;
  ans_cost = 9999;
  find(0, 1, 0);
  if (ans_flow == 9999) printf("-1 -1\n");
  else printf("%d %d\n", ans_flow, ans_cost);
  return 0;
}
