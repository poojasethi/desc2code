#include <cstdio>
#include <algorithm>
using namespace std;

int n,m,x,y,L[10][10],H[10][10],A[10][10],in[10],out;

void dfs(int x, int y, int z, int c);

void DFS(int z, int c)
{
    if (z==n)
    {
        out=max(out,c);
    }
    else
    {
        dfs(z,z+1,in[z],c);
    }
}

void dfs(int x, int y, int z, int c)
{
    if (y>n)
    {
        if (z==0)
        {
            DFS(x+1,c);
        }
    }
    else
    {
        for (int i=L[x][y]; (i<=H[x][y])&&(i<=z); i++)
        {
            if (i)
            {
                in[y]+=i;
                dfs(x,y+1,z-i,c+A[x][y]+i*i);
                in[y]-=i;
            }
            else
            {
                dfs(x,y+1,z,c);
            }
        }
    }
}

void solve()
{
    for (int i=0; i<30; i++)
    {
        for (int j=1; j<=n; j++)
        {
            in[j]=0;
        }
        in[1]=i;
        out=-1;
        DFS(1,0);
        if (out!=-1)
        {
            printf("%d %d\n",i,out);
            return ;
        }
    }
    printf("-1 -1\n");
}

int main()
{
    scanf("%d",&n);
    m=n*(n-1)/2;
    while (m--)
    {
        scanf("%d%d",&x,&y);
        scanf("%d%d%d",&L[x][y],&H[x][y],&A[x][y]);
    }
    solve();
    return 0;
}
