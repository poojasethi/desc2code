#include <iostream>
#include <vector>
#define INF 1500000000
using namespace std;
int n;
vector<int> fo[6],L[6],U[6],A[6];
int EXC[6];
int solve(int vr,int nn){
  if(vr==n-1)return 0;
  if(nn==fo[vr].size()-1){
   if(EXC[vr]>U[vr][nn] || EXC[vr]<L[vr][nn])return -INF;
   int CP=EXC[vr];CP=CP*CP;if(CP>0)CP+=A[vr][nn];
   EXC[fo[vr].back()]+=EXC[vr];
   int AP=solve(vr+1,0);
   EXC[fo[vr].back()]-=EXC[vr];
   if(AP<0)return -INF;
   else return AP+CP;
                         }
  int UB=U[vr][nn],BEST=-INF;
  for(int i=L[vr][nn];i<=UB;++i){
   if(i>EXC[vr])break;
   int CP=i*i;if(i>0)CP+=A[vr][nn];
   EXC[vr]-=i;EXC[fo[vr][nn]]+=i;
   int AP=solve(vr,nn+1)+CP;
   if(AP>=0)
    if(BEST<AP)BEST=AP;
   EXC[vr]+=i;EXC[fo[vr][nn]]-=i;
                                }
  return BEST;
}
int main(){
  int i,j,x,y,z,p,q,S=0;
  //system("pause");
  cin>>n;
  for(i=0;i<n*(n-1)/2;++i){
   cin>>x>>y>>z>>p>>q;--x;--y;
   fo[x].push_back(y);
   L[x].push_back(z);U[x].push_back(p);
   A[x].push_back(q);
   if(x==0)S+=p;
                          }
  for(i=0;i<=S;++i){
   EXC[0]=i;
   x=solve(0,0);
   if(x>=0)break;
                   }
  if(i>S)cout<<-1<<' '<<-1<<'\n';
  else cout<<i<<' '<<x<<'\n';
  //system("pause");
  return 0;
}
