#include<iostream>
#include<sstream>
#include<vector>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<complex>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cassert>
using namespace std;

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define each(i,c) for(__typeof(c.begin()) i=c.begin();i!=c.end();i++)
#define pb push_back
#define mp make_pair
#define all(c) c.begin(),c.end()
#define dbg(x) cerr<<__LINE__<<": "<<#x<<" = "<<(x)<<endl

typedef vector<int> vi;
typedef pair<int,int> pi;
typedef long long ll;
const int inf=(int)1e9;
const double EPS=1e-9, INF=1e12;

const int mod = (int)1e9 + 7;
int h, w;
ll cnt[2][2];
ll P(int n, int m){
	ll res = 1;
	rep(i, m) res = res * (n - i) % mod;
	return res;
}
ll tri(ll n){
	ll res = n;
	rep(i, 2) res = res * n % mod;
	return res;
}
int main(){
	cin >> h >> w;
	
	ll ans = 0;
	rep(i, h + 1) rep(j, w + 1){
		cnt[i % 2][j % 2]++;
		if(i && j){
			int c = __gcd(i, j);
			ans += mod - 12ll * (c - 1) * (h - i + 1) * (w - j + 1) % mod;
		}
	}
	ans += mod - (w + 1) * P(h + 1, 3) % mod;
	ans += mod - (h + 1) * P(w + 1, 3) % mod;
	ans += P((h + 1ll) * (w + 1), 3) % mod;
	ans += mod - tri((w + 1ll) * (h + 1));
	
	rep(a, 2) rep(b, 2) rep(c, 2) rep(d, 2) rep(e, 2) rep(f, 2){
		int aa = c - a, bb = d - b;
		int cc = e - a, dd = f - b;
		
		if((aa * dd - bb * cc) % 2 == 0)
		ans += cnt[a][b] * cnt[c][d] % mod * cnt[e][f] % mod;
	}
	cout << ans % mod << endl;
	
	return 0;
}
