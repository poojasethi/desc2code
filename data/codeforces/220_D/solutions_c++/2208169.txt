#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
typedef __int64 lld;
const int maxn=4005;
const lld mod=1000000007;
int g[maxn][maxn];
lld gcd(lld a,lld b)
{
	if(!b)return a;
	return gcd(b,a%b);
}
int num[4];
int main()
{
	lld n,m;
	int i,j,k;
	int t;
	while(scanf("%I64d%I64d",&n,&m)!=-1)
	{
		memset(num,0,sizeof(num));
		++n;++m;
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				t=(i%2)*2+(j%2);
				num[t]++;
				if(i&&j)g[i][j]=(i>j?g[i-j][j]:g[i][j-i]);
				else g[i][j]=i+j;

			}
		}
		lld s=n*m%mod;
		s=(s*(s-1))%mod*(s-2)%mod;
	//	printf("s==%d\n",s);
		for(i=0;i<4;i++)
		{
		//	printf("num[%d]==%d\n",i,num[i]);
			lld tmp=1;
			for(j=0;j<4;j++)if(i!=j)
			{
				tmp*=num[j];
				tmp%=mod;
			}
			//printf("tmp==%I64d\n",tmp*6);
			s-=tmp*6;
			s%=mod;
		}
	//	printf("s==%I64d\n",s);
		s-=(((n-1)*(n-2)+(m-1)*(m-2))%mod)*(n*m%mod);
		s%=mod;
		for(i=1;i<n;i++)
		{
			for(j=1;j<m;j++)
			{
				s-=(g[i][j]-1)*((n-i)*(m-j)*12)%mod;
				s%=mod;
			}
		}
		s=(s%mod+mod)%mod;
		printf("%I64d\n",s);
	}
	return 0;
}