#include <cstdio>
#include <algorithm>
#include <vector>
#include <cmath>

#define FOR(a,b,c) for(int a=(b),_for=(c);a<_for;++a)
#define END(a) {printf ("%d ",a);return 0;}
#define ll long long
#define ull unsigned long long
#define lf double
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define pii pair < int, int >

using namespace std;

const int MAXN = 4000;
const int MOD = 1000000007;
const int INF = ((1<<31)-1);

ll x,y;

ll sol;

ll cnt[3][3];
int GCD[MAXN+5][MAXN+5];

bool p(pii a,pii b,pii c){
	return abs(a.x*(b.y-c.y)+b.x*(c.y-a.y)+c.x*(a.y-b.y))%2;
}

ll f(int bm){
	ll ret=1;
	ret=ret*cnt[!!(bm&8)][!!(bm&1)]%MOD;
	ret=ret*cnt[!!(bm&16)][!!(bm&2)]%MOD;
	ret=ret*cnt[!!(bm&32)][!!(bm&4)]%MOD;
	return ret;
}

int main(){
	scanf ("%I64d%I64d",&x,&y);
	FOR(i,0,x+1)
		FOR(j,0,y+1)
			cnt[i&1][j&1]++;
	FOR(bm,0,1<<6){
		pii a,b,c;
		c=mp(!!(bm&8),!!(bm&1));
		b=mp(!!(bm&16),!!(bm&2));
		a=mp(!!(bm&32),!!(bm&4));
		if (!p(a,b,c))
			sol=(sol+f(bm))%MOD;
	}
	sol-=(x+1)*(y+1);
	sol-=3ll*(x+1)*(y+1)*((x+1)*(y+1)-1)%MOD;
	FOR(i,0,x+2)
		FOR(j,0,y+2)
			GCD[i][j]=__gcd(i,j);
	FOR(dx,0,x+1)
		FOR(dy,dx?-y:1,y+1){
			if (!dx && !dy) continue;
			ll num = GCD[dx][abs(dy)]-1;
			sol = (sol - 6*num*(x-abs(dx)+1)*(y-abs(dy)+1))%MOD;
		}
	sol = (sol+MOD)%MOD;
	printf ("%I64d",sol);
	
	
	
	
	return 0;
}
