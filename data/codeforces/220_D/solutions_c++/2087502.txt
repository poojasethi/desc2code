#include <iostream>
#include <algorithm>
using namespace std;

#define rep(I,R) for(int I=0;I<=R;++I)
#define rep2(I,L,R) for(int I=L;I<=R;++I)

typedef long long LL;

const LL modu = LL(1e9) + 7;
const int N = 5050;

int w, h;
LL res, gcd[N][N];

inline LL C (int x, int t) {
	if (t == 1) return (x + 1) / 2;
	else return x / 2 + 1;
}
inline LL M (LL x, LL y) { return x * y % modu; }
inline void A (LL &x, LL y) { x = (x + y) % modu; }

int main ()
{
	cin >> w >> h;
	LL res(0), r(0);
	rep(x0, 1) rep(y0, 1) rep(x1, 1) rep(y1, 1) rep(x2, 1) rep(y2, 1)
		if (((x1 - x0) * (y2 - y0) - (x2 - x0) * (y1 - y0)) % 2 == 0)
			A(res, M(M(C(w, x0) * C(w, x1), C(w, x2)),
						M(C(h, y0) * C(h, y1), C(h, y2))));
	int z = max(w, h);
	rep(i, z)
		rep(j, i) gcd[i][j] = j ? gcd[j][i % j] : i;
	rep(i, z) rep2(j, i + 1, z) gcd[i][j] = gcd[j][i];
	A(r, (w + 1) * (h + 1));
	rep(x, w) rep(y, h)
	{
		if (!x && !y) continue;
		A(r, 6LL * gcd[x][y] * (w - x + 1) * (h - y + 1));
		if (!x || !y) continue;
		A(r, 6LL * gcd[x][y] * (w - x + 1) * (h - y + 1));
	}
	cout << (res - r + modu) % modu << endl;
	return 0;
}

