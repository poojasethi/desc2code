#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define mo 1000000007
#define int64 long long
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,an;
int64 a[4];
inline bool ju(int x,int y,int z) {
	y^=x,z^=x;
	return !(((y&1)&(z>>1&1))^((y>>1&1)&(z&1)));
}
inline int64 pow(int64 x,int y) {
	int64 an=1;
	for (;y;y>>=1) {
		if (y&1) an=an*x%mo;
		x=x*x%mo;
	}
	return an;
}
inline int work(int x,int y,int z) {
	if (x==z) return a[x]*(a[x]-1)%mo*(a[x]-2)%mo*pow(6,mo-2)%mo;
	if (x==y) return a[x]*(a[x]-1)/2%mo*a[z]%mo;
	if (y==z) return a[y]*(a[y]-1)/2%mo*a[x]%mo;
	return a[x]*a[y]%mo*a[z]%mo;
}
int main() {
	scanf("%d%d",&n,&m);
	n++,m++;
	For(i,1,n)For(j,1,m) a[(i&1)|(j&1)<<1]++;
	For(i,0,3)For(j,i,3)For(k,j,3) if (ju(i,j,k))
		an=(work(i,j,k)+an)%mo;
	For(i,1,n)For(j,1,m) {
		int64 A=__gcd(i-1,j-1)-1;
		if (A>0) {
			int64 B=A*(n-i+1)*(m-j+1)%mo;
			an=(-B*(i==1||j==1?1:2)+an)%mo;
		}
	}
	if (an<0) an+=mo;
	an=6ll*an%mo;
	printf("%d\n",an);
	return 0;
}
