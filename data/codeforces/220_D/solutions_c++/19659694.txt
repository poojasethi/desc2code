#include <bits/stdc++.h>

using namespace std;

#define NN 100010
#define rep(i, a, b) for (int i = (a); i < (b); i ++)
#define clr(a, b) memset(a, b, sizeof(a))
#define eps 1e-10
#define inf 1000000000
#define MOD 1000000007

typedef long long INT;
typedef pair<int, int> pii;
typedef pair<pii, int> pi3;

int gcd(int a, int b) {
	if (b == 0) return a;
	return gcd(b, a % b);
}

int main() {
	
	INT n, m, cntx[3], cnty[3];
	INT ans, X, Y;
	int x, y, x1, y1, x2, y2;
	scanf("%I64d%I64d", &n, &m);
	ans = 0;
	cntx[0] = (n / 2 + 1);
	cntx[1] = (n + 1) / 2;
	cnty[0] = (m / 2 + 1);
	cnty[1] = (m + 1) / 2;
	for (int i = 0; i < 64; ++i) {
	    x = (i & 1) == 1; y = (i & 2) == 2;
	    x1 = (i & 4) == 4; y1 = (i & 8) == 8;
	    x2 = (i & 16) == 16; y2 = (i & 32) == 32;
	    if (((x2 - x1) * y + (y1 - y2) * x + x1 * y2 - x2 * y1) % 2 == 0) {
	    	ans += cntx[x] * cntx[x1] * cntx[x2] * cnty[y] % MOD * cnty[y1] * cnty[y2] % MOD;
	      	ans %= MOD;
	    }
	}
	
	X = n + 1; Y = m + 1;
	INT del = 0;
	INT S = X * Y;
	del = (del + S) % MOD;
	del = (del + S * (S - 1) * 3 % MOD) % MOD;
	del = (del + X * Y % MOD * (Y - 1) % MOD * (Y - 2) % MOD) % MOD;
	del = (del + Y * X % MOD * (X - 1) % MOD * (X - 2) % MOD) % MOD;
	
	for (int i = 1; i < X; i ++) for (int j = 1; j < Y; j ++) {
		INT tmp = (INT)(gcd(i, j) - 1) * (X - i) * (Y - j) % MOD * 12 % MOD;
		del = (del + tmp) % MOD;
	}
	ans = (ans - del + MOD) % MOD;
	printf("%I64d\n", ans);
	
	return 0;
}
                    