#include<iostream>
#include<cassert>
using namespace std;
const int mod = (int)1e9+7;
const int N = 4444444;
typedef long long ll;
int cnt[4];
int C[N][4];
int gcd(int a,int b) {
	return b ? gcd(b, a%b) : a;
}
int work(ll w,ll h){
	ll ans = 0; 
	for(int i = 1,v; i <= h; i++)
		for(int j = 1; j <= w; j++)
			if((v = gcd(i,j))!=1) {
				ans += ((w - j + 1) * (h - i + 1) * (v-1)) % mod;
				ans %= mod;
			}
//	cout<< ans << endl;
	ans = ans * 2 + C[w+1][3]*(h+1)%mod + C[h+1][3]*(w+1)%mod;
	ans %= mod;
//	cout<< ans << endl;
	return (int)ans;
}
int main(){
	ll w,h;
	cin >> w >> h;
	for(int i = 0; i <= w; i++)
		for(int j = 0; j <= h; j++) {
			int c = i%2*2 + j%2;
			cnt[c] ++ ;
		}
	C[0][0] = 1;
//	for(int i = 0; i < 4; i++) cout<<cnt[i] <<" ";cout<<endl;
	for(int i = 1; i < N ; i++){
		C[i][0] = 1;
		for(int j = 1; j < 4; j++)
			C[i][j] = ( C[i-1][j] + C[i-1][j-1] ) % mod;}
	ll s = (w+1)*(h+1), ans = 0;
	for(int i = 0; i < 4; i++){
		ans += C[cnt[i]][3];
		ans += C[cnt[i]][2] *(s - cnt[i]) % mod;
	}
//	cout<< ans << endl;
	ans %= mod;
	ans -= work(w,h) - mod;
	cout<< (ans*6) % mod << endl;;
}
