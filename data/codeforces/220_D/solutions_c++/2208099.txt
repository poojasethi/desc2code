#include <cstdio>
#include <cstring>
typedef __int64 lld;
const lld mod = 1000000007;

int gcd(int a, int b) {
	int c;
	while (b) {
		c=a; a=b; b=c%b;
	}
	return a;
}
int main() {
	int w, h, i, j, k;
	int x[3], y[3];
	lld ans = 0;
	scanf("%d%d",&w,&h);
	w++, h++;
	for (i=0; i < 8; i++) {
		for (j=0; j < 8; j++) {
			lld sx = 1;
			lld sy = 1;
			for (k=0; k < 3; k++) {
				x[k] = (i&(1<<k))!=0;
				y[k] = (j&(1<<k))!=0;
				sx = sx*((w+1-x[k])/2)%mod;
				sy = sy*((h+1-y[k])/2)%mod;
			}
			int t = x[0]*(y[1]-y[2]) + x[1]*(y[2]-y[0]) + x[2]*(y[0]-y[1]);
			if (t%2 == 0) {
			//	printf("sx=%I64d sy=%I64d\n",sx,sy);
				ans = (ans + sx*sy) % mod;
			}
		}
	}
	lld t = w*h;
	ans = (ans - t - t*(t-1)*3)%mod;
	ans = (ans - t*(h-1)*(h-2)%mod - t*(w-1)*(w-2)%mod) % mod; 
	for (i=1; i < w; i++) {
		for (j=1; j < h; j++) {
			ans -= (lld)(gcd(i, j)-1)*(w-i)*(h-j)*12%mod;
		}
	}
	ans = (ans%mod + mod)%mod;
	printf("%I64d\n",ans);
	return 0;
} 
 