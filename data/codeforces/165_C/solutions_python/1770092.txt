"""problem may be found at 
http://www.codeforces.com/problemset/problem/165/C?locale=ru"""

def onepos(s):
	"""Returns all the places where there are 1s, as well as -1 and the
	strin.0g length"""
	i = 0
	result = [-1]
	for ch in s:
		if ch == "1":
			result.append(i)
		i += 1
	result.append(i)
	return result
	
def triangle(n):
	return (n*(n+1))/2

def onecount(s, n):
	"""The function that does the actual work"""
	l = onepos(s)
	sum = 0
	if n == 0:
		for i in range(1, len(l)):
			sum += triangle(l[i] - l[i-1] - 1)
	else:
		for i in range(1, len(l) - n):
			sum += (l[i] - l[i-1])*(l[i + n] - l[i + n - 1])
	return sum
	
def main():
	n = int(raw_input())
	s = raw_input()
	print onecount(s, n)
	
main()