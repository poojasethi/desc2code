#include<bits/stdc++.h>

using namespace std;

#define WAIT cout << flush, system("pause");
#define endl '\n'

typedef long long ll;

const ll MAXN = 100100;
const ll MAXK = 111;
const ll LOGPOS = 62;
const ll ALPHA = 26;

string s;
ll len;
ll n, q, k[MAXN], freq[111][ALPHA];
ll suff[LOGPOS][MAXK][ALPHA];

ll query(ll pos, ll c, ll L) {
    if (pos <= len)
        return freq[pos][c];
    
    while ((1LL << L) > pos/len)
        L--;
    //cout << pos << " " << L << endl;
    //WAIT;
        
    ll r = freq[len][c] * (1LL << L);
    
    ll d = pos - len * (1LL << L);
    r += suff[L][k[L]][c];
    if (d < k[L])
        r -= suff[L][k[L]-d][c];
    
    if (k[L] < d) {
        ll pos2 = d - k[L];
        r += query(pos2, c, L);
    }
    
    return r;
}

ll query(ll l, ll r, ll c, ll L) {
    return query(r, c, L) - query(l-1, c, L);
}

int main(){
    
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    
    cin >> s;
    len = s.length();
    for (ll i = 1; i <= len; i++) {
        for (ll j = 0; j < ALPHA; j++)
            freq[i][j] = freq[i-1][j];
        freq[i][(ll)(s[i-1]-'a')]++;
    }
    

    cin >> n >> q;
    for (ll i = 0; i < n; i++) {
        cin >> k[i];
        if (i < 10)
            k[i] %= ((ll)len * (1LL << i));
    }

    //suff[LOGPOS][MAXK][ALPHA]
    
    for (ll L = 0; L < LOGPOS; L++)
        for (ll ki = 1; ki < MAXK; ki++)
            for (ll c = 0; c < ALPHA; c++) {
                ll r = len * (1LL << L);
                ll l = r - ki + 1;
                suff[L][ki][c] = query(l, r, c, 61);
            }
        
    
    while (q--) {
        ll l, r;
        char ch;
        cin >> l >> r >> ch;
        cout << query(l, r, (ll)(ch-'a'), 61) << endl;
    }
    
    //WAIT;
}