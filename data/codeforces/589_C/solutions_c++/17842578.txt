#include <bits/stdc++.h>

#define ll long long

#define SZ(x) (int)(x).size()
#define pb push_back

template<class T>inline void chkmax(T &x, const T &y) {if(x < y) x = y;}
template<class T>inline void chkmin(T &x, const T &y) {if(x > y) x = y;}

template<class T>
inline void read(T &x) {
    char c;int f = 1;x = 0;
    while(((c=getchar()) < '0' || c > '9') && c != '-');
    if(c == '-') f = -1;else x = c-'0';
    while((c=getchar()) >= '0' && c <= '9') x= x*10+c-'0';
    x *= f;
}
int outn;
char out[(int)2e7];
template<class T>
inline void write(T x) {
    if(x < 0) out[outn++] = '-', x = -x;
    if(x) {
        static int tmpn;
        static char tmp[20];
        tmpn = 0;
        while(x) tmp[tmpn++] = x%10+'0', x /= 10;
        while(tmpn) out[outn++] = tmp[--tmpn];
    }
    else out[outn++] = '0';
}

const int L = 100;
const int N = 1e5, M = N;
const int SIGMA = 26;

char s[L+9];
int l, n, m;
int k[N+9];
int pre[70][SIGMA][L+9];
ll sum[SIGMA][N+9];

ll dfs(int p, ll n, int x) {
    if(!p) return pre[0][x][n];
    ll mid = l*(1ll<<(p-1));
    if(n <= mid) return dfs(p-1, n, x);
    else {
        ll ret = sum[x][p-1];n -= mid;
        if(n <= k[p]) ret += pre[p][x][n];
        else ret += pre[p][x][k[p]]+dfs(p-1, n-k[p], x);
        return ret;
    }
}

ll solve(ll n, int x) {
    int p = 0;
    while(l*(1ll<<p) < n) ++p;
    return dfs(p, n, x);
}

int get(int p, ll pos) {
    if(!p) return s[pos]-'a';
    ll mid = l*(1ll<<(p-1));
    if(pos <= mid) return get(p-1, pos);
    pos -= mid, pos = (pos-1-k[p]+mid)%mid+1;
    return get(p-1, pos);
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("589C.in", "r", stdin);
    freopen("589C.out", "w", stdout);
#endif

    scanf("%s", s+1);
    l = strlen(s+1);
    read(n), read(m);
    for(int i = 1; i <= n; ++i)
        read(k[i]);
    chkmin(n, 70);
    for(int i = 1; l*(1ll<<(i-1)) <= (ll)1e18+5; ++i)
        k[i] %= l*(1ll<<(i-1));
    for(int i = 0; i < 26; ++i) {
        for(int j = 1; j <= l; ++j)
            pre[0][i][j] = pre[0][i][j-1]+(s[j]==i+'a');
        ll all = pre[0][i][l];
        for(int j = 0; j <= n; ++j, all <<= 1)
            sum[i][j] = all;
    }
    for(int i = 1; i < 70 && l*(1ll<<(i-1)) <= (ll)1e18+5; ++i)
        for(int j = 1; j <= 100; ++j) {
            for(int k = 0; k < 26; ++k) pre[i][k][j] = pre[i][k][j-1];
            pre[i][get(i, j+l*(1ll<<(i-1)))][j]++;
        }
    while(m--) {
        ll l, r;char c;
        read(l), read(r), c = getchar();
        ll ans = solve(r, c-'a')-solve(l-1, c-'a');
        write(ans), out[outn++] = '\n';
    }
    printf("%s", out);
    
#ifndef ONLINE_JUDGE
    fclose(stdin);fclose(stdout);
#endif
    return 0;
}
