#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;

char s[100010];
int k[100010],cnt[100010][26],len,sum[100010];

long long work(long long x,long long y,int ti,int d)
{
    if (y<=len) return cnt[y][d];
    long long mid=x>>1,ret;
    if (y<=mid) return work(mid,y,ti-1,d);
    if (y==x) return cnt[len][d]*(1ll<<ti);
    ret=cnt[len][d]*(1ll<<(ti-1));
    y-=mid;
    if (y>k[ti]) ret+=work(mid,y-k[ti],ti-1,d),y=k[ti];
    ret+=cnt[len-sum[ti]+y][d]-cnt[len-sum[ti]][d];
    return ret;
}

int main()
{
    int n,m,a;
    long long l,r;
    char c[5];
    scanf("%s%d%d",s+1,&n,&m);
    len=strlen(s+1);
    while (len<10000&&n!=0)
    {
        --n;
        scanf("%d",&a);
        a%=len;
        int tmp=len;
        for (int i=tmp-a+1;i<=tmp;++i) s[++len]=s[i];
        for (int i=1;i<=tmp-a;++i) s[++len]=s[i];
    }
    s[len+1]=0;
    for (int i=1;i<=n;++i) scanf("%d",k+i),sum[i]=sum[i-1]+k[i];
    for (int i=1;i<=len;++i)
    {
        for (int j=0;j<26;++j) cnt[i][j]=cnt[i-1][j];
        ++cnt[i][s[i]-'a'];
    }
    while (m--)
    {
        scanf("%I64d%I64d%s",&l,&r,c);
        long long x=len;
        int ti=0;
        while (x<r) x<<=1,++ti;
        printf("%I64d\n",work(x,r,ti,c[0]-'a')-work(x,l-1,ti,c[0]-'a'));
    }
    return 0;
}

		    	 		  	       	   	 		  	