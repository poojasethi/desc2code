#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define Fit(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 1000000005
#define all(a) (a).begin(), (a).end()
#define ms(a,x) memset(a, x, sizeof(a))
#define mod 1000000007
#define sz(a) ((int)(a).size())

template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return __builtin_popcount(s);}
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)

typedef unsigned long long ull;
typedef long long ll;
typedef long double ld;
#define eps 1e-9
typedef pair<int, int> II;
typedef pair<ll, ll> LL;
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
#define PI 2 * acos(0)
#define linf (1ll << 60)

#define maxn 100005

ll len[105];
ll f[105][33], c[33];
string s, rr[105];
int n, m, d[maxn];
int max_len = 10000;

ll cal(int id, ll x, int ch){
    if(x == 0) return 0;
    if(id == 1){
        ll res = 0;
        for(int i = 0; i < x; i++) res += (s[i] - 'a' == ch);
        return res;
    }
    if(x < len[id - 1]) return cal(id - 1, x, ch);

//  cout << id << " " << x << " " << ch << endl;

    ll A = c[ch] * (1ll << (id - 2));
    x -= len[id - 1];
    if(x <= d[id - 1]){
        ll res = A;
        for(int j = 0; j < x; j++){
            res += (rr[id - 1][j] - 'a' == ch);
        }
        return res;
    }
    A += f[id - 1][ch];
    return A + cal(id - 1, x - sz(rr[id - 1]), ch);
}

int main(){
//  freopen("in.txt", "r", stdin);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    cin >> s >> n >> m;
    ms(f, 0); ms(c, 0);
    string RR = s;
    For(i, 1, n) {
        cin >> d[i];
        d[i] %= sz(RR);
        if(i <= 100){
            int len = sz(RR);
            rr[i] = RR.substr(len - d[i], d[i]);
            for(int j = 0; j < sz(rr[i]); j++){
                f[i][rr[i][j] - 'a']++;
            }
            string tt = rr[i] + RR.substr(0, len - d[i]);
            RR += tt;
            if(sz(RR) > max_len) RR = RR.substr(sz(RR) - max_len, max_len);
        }
    }
    len[1] = sz(s);
    for(int i = 2; i <= 100; i++){
        len[i] = len[i - 1] + len[i - 1];
        if(len[i] > (1ll << 60)) len[i] = (1ll << 60);
    }
    Rep(i, sz(s)) c[s[i] - 'a']++;

    Rep(run, m){
        ll l, r; char ch;
        cin >> l >> r >> ch;
        cout << cal(70, r, ch - 'a') - cal(70, l - 1, ch - 'a') << "\n";
    }

    return 0;
}
