#pragma comment(linker, "/STACK:102400000,102400000")
#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100005

template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}

char s[110];
int mx,p[26][110][110],K,t[N],ps[110][110][26];
ll len[110],all[110][26];
ll gao(ll l,ll r,int c,int h){
    if(l>r)return 0;
    if(h==0){return p[c][l][r];}
    ll lng=len[h]/2;
    ll i1=lng-t[h],i2=lng+t[h];
    if(l<i1){
        if(r<lng)return gao(l,r,c,h-1);
        else if(r<i2)return gao(l,i1-1,c,h-1)+2*ps[h-1][t[h]][c]-ps[h-1][i2-r-1][c];
        ll rt=r-i2;
        if(rt<l)return all[h-1][c]+ps[h-1][t[h]][c]-gao(rt+1,l-1,c,h-1);
        else return all[h-1][c]+ps[h-1][t[h]][c]+gao(l,rt,c,h-1);
    }
    else if(l<lng){
        if(r<lng)return ps[h-1][lng-l][c]-ps[h-1][lng-r-1][c];
        else if(r<i2)return ps[h-1][t[h]][c]-ps[h-1][i2-r-1][c]+ps[h-1][lng-l][c];
        return gao(0,r-i2,c,h-1)+ps[h-1][t[h]][c]+ps[h-1][lng-l][c];
    }
    else if(l<i2){
        if(r<i2)return ps[h-1][i2-l][c]-ps[h-1][i2-r-1][c];
        return ps[h-1][i2-l][c]+gao(0,r-i2,c,h-1);
    }
    return gao(l-i2,r-i2,c,h-1);
}
char getc(ll i,int h){
    if(h==0)return s[i];
    ll lng=len[h]/2;
    ll i1=lng-t[h];
    ll i2=lng+t[h];
    if(i<lng)return getc(i,h-1);
    if(i<i2)return getc(i-t[h],h-1);
    return getc(i-i2,h-1);
}
int main(){
    //ios::sync_with_stdio(0);
    ll L=1e18;
    int T,i,j,k,m,ca=0,n;
    scanf("%s%d%d",s,&K,&m);
    n=strlen(s);
    for(int c=0;c<26;c++){
        for(i=0;i<n;i++){
            int cnt=0;
            for(j=i;j<n;j++){
                cnt+=(s[j]-'a'==c);
                p[c][i][j]=cnt;
            }
        }
    }
    for(i=0;i<26;i++)all[0][i]=p[i][0][n-1];
    mx=0;
    for(i=1;i<=K;i++)scanf("%d",&t[i]),Max(mx,t[i]);
    ll dd=n;int d=0;
    for(;;d++,dd<<=1){
        if(dd>L)break;
    }
    K=min(K,d);
    len[0]=n;
    for(i=1;i<=K;i++){
        for(j=0;j<26;j++)all[i][j]=all[i-1][j]*2LL;
        len[i]=len[i-1]*2LL;
        t[i]%=len[i-1];
    }
    for(i=0;i<=K;i++){
        int l=min((ll)mx,len[i]);
        string z;
        for(j=0;j<l;j++)z+=getc(len[i]-j-1,i);
        for(j=0;j<l;j++)++ps[i][j+1][z[j]-'a'];
        for(int c=0;c<26;c++)
            for(j=1;j<=l;j++)ps[i][j][c]+=ps[i][j-1][c];
    }
    while(m--){
        ll l,r;char c[2];
        scanf("%I64d%I64d%s",&l,&r,c);
        ll ans=gao(l-1,r-1,c[0]-'a',K);
        printf("%I64d\n",ans);
    }
    return 0;
}