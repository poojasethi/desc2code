#include <bits/stdc++.h>
#define ll long long
using namespace std;

string s;
ll K[100005];
ll n;
ll N;
ll cnt[100][28][6002*2];
ll L[100];

void sim()
{
    ll a,b,c,d,e,x,y,z;

    e=s.size();

    for(a=1;a<=e;a++)
    {
        cnt[0][ s[e-a]-'a' ][a]++;
    }
    L[0]=e;

    for(a=1;a<=e;a++)
    {
        for(b=0;b<26;b++) cnt[0][b][a]=cnt[0][b][a]+cnt[0][b][a-1];
    }


    string si;

    for(a=1;a<=N;a++)
    {
        if(s.size()>6000) break;
        //cout<<s.size()<<endl;

        L[a]=L[a-1]*2ll;

        si=s;
        x=s.size();
        K[a]=(K[a]%x);

        for(b=0;b<s.size();b++)
        {
            si=si+s[ (x-K[a]+b)%x ];
        }
        //if(a==1) cout<<si<<endl;
        s=si;
        x=s.size();

        for(b=1;b<=x;b++)
        {
            cnt[a][ s[x-b]-'a' ][b]++;
        }

        for(b=1;b<=x;b++)
        {
            for(c=0;c<26;c++) cnt[a][c][b]=cnt[a][c][b]+cnt[a][c][b-1];
        }
    }

    //cout<<s.size()<<endl;
    //cout<<n<<" "<<s.size()<<endl;

    //for(a=0;a<=N;a++) cout<<L[a]<<endl;
   // cout<<cnt[1]['j'-'a'][26]<<endl;

    for(;a<=N;a++)
    {
        L[a]=L[a-1]*2ll;
       // cout<<a<<" "<<L[a]<<endl;
        if(L[a]>1000000000000000000ll) break;

        for(b=1;b<=6000;b++)
        {
            for(c=0;c<26;c++)
            {
                cnt[a][c][b]=cnt[a-1][c][K[a]+b]-cnt[a-1][ c ][K[a]];
            }
        }
    }
    //cout<<"OK"<<endl;
}

ll find_count(ll in,char ch)
{
    if(in==0) return 0;

    //cout<<"At length "<<in<<" character "<<ch<<endl;
    if(in<=n)
    {
        ll z=cnt[0][ ch-'a' ][n]-cnt[0][ch-'a'][n-in];

        //cout<<"Returning "<<z<<endl;

        return z;
    }

    for(ll a=1;a<=N;a++)
    {
        //cout<<"trying length "<<L[a]<<" at "<<a<<endl;
        if(L[a]>=in)
        {
            if(L[a]==in)
            {
                ll z=cnt[0][ ch-'a' ][n]*(1ll<<a);

                //cout<<"Length match. returning "<<z<<endl;

                return z;
            }
            ll z=cnt[0][ ch-'a' ][n]*(1ll<<(a-1));
            //cout<<"Added "<<z<<endl;
            ll x=in-L[a-1];
            //cout<<"partitioned into "<<L[a-1]<<" and "<<x<<endl;

            if(x<=K[a])
            {
                //cout<<"Covered"<<endl;
                z=z+ cnt[a-1][ch-'a'][K[a]]-cnt[a-1][ch-'a'][ K[a]-x ];
                //cout<<"Added "<<cnt[a-1][ch-'a'][x]<<endl;
                return z;
            }
            z=z+ cnt[a-1][ ch - 'a' ][ K[a] ];
            //cout<<"Added "<<cnt[a-1][ch-'a'][ K[a] ]<<endl;
            x=x-K[a];
            z=z+find_count(x,ch);
            return z;
        }
    }
}

int main()
{
   

    std::ios::sync_with_stdio(false);

    ll a,b,c,d,e,x,y,z;

    cin>>s;
    n=s.size();

    cin>>N>>z;

    for(int a=1;a<=N;a++) cin>>K[a];

    sim();

    //for(int a=0;a<=N;a++) cout<<L[a]<<endl;

    char ch;

    while(z--)
    {
        cin>>x>>y>>ch;

        e=0;
        //for(a=0;a<226;a++) if(s[a]==ch) e++;
        //cout<<e<<endl;

        y=find_count(y,ch);
        x=find_count(x-1,ch);
        //cout<<y<<" "<<x<<" "<<e<<endl;
        cout<<y-x<<endl;
    }

    return 0;
}
