#include <algorithm>
#include <iostream>
#include <cmath>
#include <cstdlib>
#include <cstdio>
#include <vector>
#include <cstring>
#include <map>
#include <string>
#include <queue>
#include <set>
#include <stack>
#define rep(i, a, b) for(int i = a; i < b; i++)
#define red(i, a, b) for(int i = a; i > b; i--)
#define RED true
#define BLACK false
#define pb push_back
#define mk make_pair
#define fi first
#define se second
using namespace std;
typedef pair<int, int> ii;
typedef long long ll;
typedef pair<ii, int> iii;
typedef vector<int> vi;
const int N = 1000007;
const int M = 60;
const int inf = 1e9 + 7;
const ll base = 1e18;
const double pi = acos(-1);
const double ep = 1e-18;

string s;
int a[N];
int n, m;
int d = 0;

int dp[N][27];
ll sum[N];
ll lt[N];

int k = s.size();

ll calc(ll x, int t, int c){
    //cout << x << " " << t << endl;
    if (t == 0){
        return dp[x][c];
    }
    ll ans = 0;
    if (x > k * lt[t-1]){
        ans += (ll)dp[k][c] * lt[t-1];
        ll tmp = k * lt[t-1];
        if (x - tmp <= a[t + d]){
            ans += dp[x - tmp + k - sum[t]][c] - dp[k - sum[t]][c];
        } else {
            ans += dp[k - sum[t - 1]][c] - dp[k - sum[t]][c];
            ans += calc(x - tmp - a[t + d], t - 1, c);
        }
    } else ans += calc(x, t - 1, c);

    return ans;
}

ll get(ll x, int c){
    ll r = k; int t = 0;
    while (r < x){
        t ++;
        r *= 2;
    }

    //cout << t << endl;

    return calc(x, t, c);
}


void solve(){
    cin >> s;
    cin >> n >> m;
    for(int i = 1; i <= n; i++)
        scanf("%d", a + i);
    for(int i = 1; i <= n; i++){
        if (s.size() * 2 < 10000) {
            int t = a[i] % s.size();
            int r = s.size() - t;
            s = s + s.substr(r, t) + s.substr(0, r);
            d = i;
        } else
            sum[i - d] = sum[i - 1 - d] + a[i];
    }

    lt[0] = 1;
    rep(i, 1, 65) lt[i] = lt[i-1] * 2;

    rep(i, 1, s.size() + 1){
        rep(j, 0, 26) dp[i][j] = dp[i-1][j];
        int c = s[i-1] - 'a';
        dp[i][c] ++;
    }
    k = s.size();
//    rep(j, 1, 1000){
//        rep(i, 0, 26)
//            if (get(j, i) - get(j-1, i) == 1)
//                cout << (char(i + 'a'));
//    }
    //cout << get(613895, 2);
    //return ;

    while (m-- > 0){
        ll l, r1; char c;
        scanf("%I64d %I64d", &l, &r1);
        //cin >> l >> r1;
        //cout << l << " " << r1 << endl;
        for(c = getchar(); c > 'z' || c < 'a'; c = getchar());
        //cout << c << endl;
        printf("%I64d\n", get(r1, c - 'a') - get(l - 1, c - 'a'));
    }
}

int main(){
#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
//    //freopen("out1.txt", "w", stdout);
#endif // ONLINE_JUDGE
    solve();
}
