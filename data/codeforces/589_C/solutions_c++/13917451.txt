#include<iostream>
#include<string>
#include<algorithm>
#include<string.h>
#include<vector>
#include<cstdio>
using namespace std;
long long ssize[100];
string x[100];
int K[101000];
long long l[101000],r[101000];
char c[101000];
vector<int> v[100][26];
long long mr;
char ts[110];
int cnt;
int full;
long long cntc[100][26];
int check(long long q)
{
    return upper_bound(ssize+full,ssize+cnt,q)-ssize-1;
    /*for(int i=full;i<cnt;i++)
    {
        if(q<ssize[i+1])
        {
            return i;
        }
    }*/
}
long long qry(long long q,char cc)
{

    if(q<=x[full].size())return v[full][cc-'a'][q];
    long long tmp = check(q);
    long long ret=cntc[tmp][cc-'a'];
    q-=ssize[tmp];
    if(q==0) return ret;
    if(q<=x[tmp+1].size())
    {
        return ret+v[tmp+1][cc-'a'][q];
    }else
    {
        q-=x[tmp+1].size();
        return ret+v[tmp+1][cc-'a'][x[tmp+1].size()]+qry(q,cc);
    }
}
int main()
{
    int i,j,k;
    cin>>x[0];
    int n,m;
    cin>>n>>m;
    for(i=1;i<=n;i++)
    {
        scanf("%d",&K[i]);
        //cin>>K[i];
    }
    mr=0;
    string tmp;
    for(i=0;i<m;i++)
    {
        scanf("%I64d%I64d%s",&l[i],&r[i],ts);
        c[i]=ts[0];
        if(r[i]>mr)
        {
            mr=r[i];
        }
    }
    ssize[0]=x[0].size();

    full=0;
    int now;
    cnt=0;
    for(i=1;ssize[i-1]<=mr;i++)
    {
        cnt=i;
        ssize[i]=ssize[i-1]*2LL;
        if(ssize[i]<20000)
        {
            string tmp=x[i-1];
            int tmpl=x[i-1].size();
            for(j=0;j<tmpl;j++)
            {
                tmp[(j+K[i])%tmpl]=x[i-1][j];
            }
            x[i]=x[i-1]+tmp;
            full=i;
            now=x[i].size()-1;
        }else
        {
            x[i].resize(K[i]);
            for(j=K[i]-1;j>=0;j--)
            {
                x[i][j]=x[full][now];
                now--;
            }
        }
    }
    cnt++;
    memset(cntc,0,sizeof(cntc));
    for(i=0;i<x[0].size();i++)
    {
        cntc[0][x[0][i]-'a']++;
    }
    for(i=1;i<cnt;i++)
    {
        for(j=0;j<26;j++)
        {
            cntc[i][j]=cntc[i-1][j]*2;
        }
    }
    for(i=0;i<cnt;i++)
    {

        for(j=0;j<26;j++)
        {
            v[i][j].resize(x[i].size()+1);
            v[i][j][0]=0;
            for(k=0;k<x[i].size();k++)
            {
                if((x[i][k]-'a')==j)
                {
                    v[i][j][k+1]=v[i][j][k]+1;
                }else
                {
                    v[i][j][k+1]=v[i][j][k];
                }
            }
        }
    }
   // cout<<x[full]<<endl;
    for(i=0;i<m;i++)
    {
       printf("%I64d\n",qry(r[i],c[i]) - qry(l[i]-1,c[i]));
    }
}






