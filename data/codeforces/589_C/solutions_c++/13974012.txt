#include <cstdio>
#include <algorithm>
#include <cstring>
#include <queue>
#include <cmath>
#include <time.h>
#define maxn 220005
#define mnn 1000007
#define macro 1000100
#define minf 0.00000000001
#define modp 1000000007

using namespace std;
typedef __int64 LL;
typedef struct pa{
    LL a;
    int b,c;
    pa(int x, int y) {a=x; b=y;}
    pa(LL x, int y) {a=x; b=y;}
    pa(int x, int y, int z) {a=x; b=y; c=z;}
    pa(){}
    friend pa operator+(const pa&x, const pa&y)
    {
        pa tmp;
        tmp.a=x.a+y.a;
        tmp.b=x.b+y.b;
        return tmp;
    }
}PA;
typedef struct node {
    int a,nxt;
}ND;
int n,m,T,uu,tot;

char s[2000];
int Q[maxn];
LL sum[200][30];
LL f[100][30];

LL dp(int b, LL x, int c)
{
    if (x<=T) return sum[x][c];
    LL res=0, len=T, cnt=0;
    while (x>len)
    {
        ++cnt;
        len<<=1;
    }
    LL pd=(len>>1), pl=pd/T;
    res=pl*sum[T][c];
    LL tmp=x-pd;
    LL mp=Q[cnt]%pd;
    if (tmp<=mp) return res+dp(cnt-1,pd-mp+tmp,c)-f[cnt-1][c];
    else return res+res-f[cnt-1][c]+dp(cnt-1,tmp-mp,c);

}

int main()
{
    scanf("%s",s);
    T=strlen(s);
    for (int i=0;i<T;++i)
    for (int j=0;j<26;++j)
    {
        sum[i+1][j]=sum[i][j]+((s[i]-'a')==j);
    }
    scanf("%d%d",&n,&m);
    for (int i=1;i<=n;++i) {scanf("%d",&Q[i]);}
    for (int i=0;i<26;++i)
    {
        long long bit=1;
        for (int j=0;j<62;++j)
        {
            if (bit>((1LL<<62)+Q[j+1])/T) break;
            f[j][i]=dp(j,bit*T-Q[j+1]%(bit*T),i);
            bit<<=1;
        }
    }
    for (int i=0;i<m;++i)
    {
        LL l,r;
        char c;
        scanf("%I64d%I64d %c",&l,&r,&c);
        printf("%I64d\n",dp(n,r,c-'a')-dp(n,l-1,c-'a'));
    }
    return 0;
}
