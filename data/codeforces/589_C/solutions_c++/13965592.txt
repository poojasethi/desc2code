#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
const int maxn = 1e5 + 10;
int n,m;
ll sum[110][30], d[110][30], day[maxn], len, mx;
string s;

void input(){
    scanf("%d%d",&n,&m);
    for(int i=0;i<n;i++) {
        scanf("%I64d",&day[i]);
    }
}

ll dfs(ll x,int c,int n){
    if(n == -1) return sum[x][c];
    if((len<<n) > x) return dfs(x, c, n-1);
    else if( (len<<n) == x) return sum[len][c]<<n;
    else{
        ll ans = sum[len][c]<<n;
        x -= (len<<n);
        if(x > day[n]){
            ans += dfs(x - day[n], c, n-1) + d[n][c];
        }else{
            ans += dfs(x + (len<<n) - day[n], c , n-1) - (sum[len][c]<<n) + d[n][c];
        }
        return ans;
    }
}

void pre_solve(){
    len = s.size();
    memset(sum,0,sizeof(sum));
    for(int i=0;i<len;i++){
        for(int j=0;j<26;j++){
            sum[i+1][j] = sum[i][j] + ((s[i] - 'a') == j);
        }
    }
    mx = 0;
    for(ll l=len; mx<n && l<(1e18); mx++,l<<=1){
        day[mx] %= l;
        for(int k=0;k<26;k++){
            d[mx][k] = (sum[len][k]<<mx) - dfs( l - day[mx], k, mx);
        }
    }
}

void solve(){
    ll L,R;
    char c;
    while(m--){
        scanf("%I64d %I64d %c",&L,&R,&c);
        printf("%I64d\n",dfs(R,c-'a',mx) - dfs(L-1,c-'a',mx));
    }
}

int main(){
    while(cin >> s){
        input();
        pre_solve();
        solve();
    }
    return 0;
}
