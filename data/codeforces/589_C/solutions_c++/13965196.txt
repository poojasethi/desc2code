#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 100010
#define inf 0x3f3f3f3f
typedef long long ll;
typedef unsigned long long ull;



ll pre[70][30];
char s[N];
ll sum[N][30];
int length,n,a[N];


ll dfs(int dep,ll idex,int k)
{
    if(dep==0)
        return sum[idex][k];
    ll len=(ll)length<<(dep-1);
    if(idex<=len)
        return dfs(dep-1,idex,k);
    ll presum=sum[length][k]<<(dep-1);
    int sft=a[dep]%len;
    if(idex<=len+sft)
        return dfs(dep-1,idex-sft,k)-pre[dep-1][k]+presum;
    else{
        return dfs(dep-1,idex-len-sft,k)+2*presum-pre[dep-1][k];
    }

}

ll cal(ll x,int k)
{
    ll len=length;
    int dep=0;
    while(len<x)
    {
        dep++;
        len<<=1;
    }
    return dfs(dep,x,k);
}


int main()
{
    //freopen("in.txt","r",stdin);
    int n,m;
    char ch[5];
    ll l,r;

    scanf("%s",s);
    memset(sum,0,sizeof(sum));
    length=strlen(s);
    for(int i=0;i<length;i++)
    {
        for(int j=0;j<26;j++)
            sum[i+1][j]+=sum[i][j];
        sum[i+1][s[i]-'a']++;
    }


    cin>>n>>m;
    for(int i=1;i<=n;i++)
        scanf("%d",&a[i]);
    ll len=strlen(s);
    ll lim=(ll)1e18;



    for(int i=0;i<n&&len<lim;i++)
    {
        for(int j=0;j<26;j++){
            int sft=a[i+1]%len;
            pre[i][j]=dfs(i,len-sft,j);
        }
        len<<=1;
    }


    for(int i=0;i<m;i++){
        scanf("%lld%lld",&l,&r);
        scanf("%s",ch);
        ll ans=cal(r,ch[0]-'a')-cal(l-1,ch[0]-'a');
        printf("%lld\n",ans);
    }




    return 0;
}
