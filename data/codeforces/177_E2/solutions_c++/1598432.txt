#include <cstdio>
#include <cstring>
#include <algorithm>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define CLR(a,x) memset(a, x, sizeof(a))
#define EXP(i,l) for (int i=(l); i; i=qn[i])
#define LLD long long
#define N 100005
#define MX (LLD)(1e18 + 100)
using namespace std;

int n;
LLD m, lo, hi, a[N], b[N], A;

LLD doit(LLD x){
	LLD r = 0;
	FOR(i,0,n){
		if (!a[i]){
			r++;
			continue;
		}
		if (x > m * b[i] / a[i] + b[i]) return m + 1;
		r += 1 + x * a[i] / b[i];
		if (r > m) return m + 1;
	}
	return r;
}

int main(){
	scanf("%d%I64d", &n, &m);
	FOR(i,0,n) scanf("%I64d%I64d", &a[i], &b[i]), A += a[i];
	
	if (!A){
		if (n == m) puts("-1");
		else puts("0");
		return 0;
	}

	for (LLD i=1, j=MX, k; j>=i;){
		k = i + (j - i) / 2;
		if (doit(k) >= m) lo = k, j = k - 1;
		else i = k + 1;
	}

	for (LLD i=1, j=MX, k; j>=i;){
		k = i + (j - i) / 2;
		if (doit(k) <= m) hi = k, i = k + 1;
		else j = k - 1;
	}
	
	printf("%I64d\n", max(0LL, hi - lo + 1));
	return 0;
}
