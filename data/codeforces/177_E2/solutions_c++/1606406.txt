#include <cstdio>
#include <iostream>
#include <climits>
#include <cassert>

using namespace std;

#define LL unsigned long long
#define TOP LLONG_MAX

int n;
LL c;
LL a[10000];
LL b[10000];
bool g;

LL solve(LL a, LL x, LL b)
{
	g = 1;
	if (a == 0) return 0;
	if (x > c*b/a)
	{
		g = 0;
		return 0;
	}
	if (c*b < (long double)x*a)
	{
		g = 0;
		return 0;
	}
	return x*a/b;
}

LL calc(LL mid)
{
	if (mid == 0) return 0;
	LL res = 0;
	g = 1;
	for (int i = 0; i < n; ++i)
	{
		res += 1;
		LL tmp = solve(a[i],mid,b[i]);
		if (!g) return 0;
		else res += tmp;
	}
	return res;
}

int main()
{
	cin >> n >> c;
	for (int i = 0; i < n; ++i)
		cin >> a[i] >> b[i];
	
	LL low = 1, hig = TOP, bot = TOP, top = 0;
	while (low != hig && low > 0)
	{
		LL mid = (low+hig)/2;
		LL res = calc(mid);
		if (res == c) bot = min(bot, mid), top = max(top, mid);
		if (res >= c || !g) hig = mid;
		else low = mid+1;
	}
	low = 1, hig = TOP;
	while (low != hig && low > 0)
	{
		LL mid = (low+hig+1)/2;
		LL res = calc(mid);
		if (res == c) bot = min(bot, mid), top = max(top, mid);
		if (res <= c && g) low = mid;
		else hig = mid-1;
	}
	if (top == TOP && n == c) cout << -1 << endl;
	else if (bot <= top && bot > 0 && top < TOP) cout << top-bot+1 << endl;
	else cout << 0 << endl;
	
	return 0;
}
