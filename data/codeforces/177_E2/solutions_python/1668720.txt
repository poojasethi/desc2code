#include <iostream>
#include <algorithm>
using namespace std;

typedef long long ll;

int n;
ll targ;
ll a[10010], b[10010];

ll test(ll v) {
	ll sum = 0;
	for (int i = 0; i < n; i++) {
		sum += (a[i] * v) / b[i];
		if (sum > targ) break;
	}
	return sum;
}

int main() {
	cin >> n >> targ;
	bool all0 = true;
	for (int i = 0; i < n; i++) {
		cin >> a[i] >> b[i];
		if (a[i]) all0 = false;
	}
	if (n > targ) {
		cout << 0 << endl;
		return 0;
	}
	targ -= n;
	if (all0) {
		if (0 == targ)
			cout << -1 << endl;
		else
			cout << 0 << endl;
		return 0;
	}
	ll cur = 1;
	while (test(cur) <= targ) {
		cur *= 2;
		if (cur > 2000000000000000000LL) break;
	}
	cur += 200;
	ll tl;
	{
		ll lo = 0, hi = cur, mid;
		while (lo + 1 < hi) {
			mid = (lo + hi) / 2;
			if (test(mid) < targ) {
				lo = mid;
			} else {
				hi = mid;
			}
		}
		tl = lo;
	}
	ll tr;
	{
		ll lo = 1, hi = cur, mid;
		while (lo + 1 < hi) {
			mid = (lo + hi) / 2;
			if (test(mid) <= targ) {
				lo = mid;
			} else {
				hi = mid;
			}
		}
		if (test(lo) != targ) {
			cout << 0 << endl;
			return 0;
		}
		tr = lo;
	}
	cout << max(tr - tl, 0LL) << endl;
}