#include <stdio.h>
#include <algorithm>
#include <iostream>
using namespace std;
typedef unsigned long long LL;
const int N = 10009;
LL a[N], b[N];
LL n, c;

LL gcd(LL, LL);
LL solve(LL val) {
	LL ret = 0;
	LL t;
	for( int i = 0; i < n; ++ i) {
		t = gcd(val, b[i]);
		ret = ret + (val / t) * a[i] / (b[i] / t)+ 1LL;
	}
	return ret;
}
LL gcd( LL x, LL y) {
	if( y == 0)return x;
	else return gcd(y, x % y);
}
LL work() {
	LL begin = 1, end = 1000000000ULL ;
	end = end * end;
	LL mid, ret = -1, t;
	while(begin <= end) {
		mid = (begin + end) >> 1;
		t = solve(mid);
	   	if( t >= c) {
			end = mid - 1;
			ret = mid;
		}else {
			begin = mid + 1;
		}
	}
	return ret;
}
int main() {
//	scanf("%d%d", &n, &c);
	cin >> n >> c;
	for( int i = 0; i < n; ++ i) {
		cin >> a[i] >>b[i];
		LL t = gcd(a[i], b[i]);
		a[i] /= t;
		b[i] /= t;
	}
		//scanf("%d%d", &a[i], &b[i]);
	bool f = true;
	for(int i = 0; i < n; ++ i)if(a[i] != 0) {
		f = false;
		break;
	}
	//cout << (0x6fffffff + 1) / 2 * 1000000000LL <<endl;
	if(f) {
		if(n == c) puts("-1");
		else puts("0");
	}else {
		LL ret = work();
		LL tmp = solve(ret);
		if(tmp == c) {
			++ c;
			LL D = work();
		//	cout << D <<" " << ret << endl;
			cout << D - ret << endl;
		}else {
			puts("0");
		}
	}
	return 0;
}
