#include "stdio.h"
#include "map"
using namespace std;

#define MAX_N 100001

typedef struct MINMAX_
{
	int n, x;
} MINMAX;

int x[MAX_N], y[MAX_N];

map<int, MINMAX> ml, mc, mk1, mk2;
int c[9] = {0};

void update(MINMAX &mx, int i)
{
	if(mx.n == 0 || y[i] < y[mx.n])
		mx.n = i;
	if(mx.x == 0 || y[i] > y[mx.x])
		mx.x = i;
}

void update_line(MINMAX &mx, int i)
{
	if(mx.n == 0 || x[i] < x[mx.n])
		mx.n = i;
	if(mx.x == 0 || x[i] > x[mx.x])
		mx.x = i;
}

inline int match(MINMAX &mx, int i)
{
	if(mx.x == mx.n)
		return 0;
	return !(mx.x == i) + !(mx.n == i);
}

int main()
{
	int n, m;
	scanf("%d%d", &n, &m);
	for(int i = 1; i <= m; i ++)
	{
		scanf("%d%d", &x[i], &y[i]);
		update_line(ml[y[i]], i);
		update(mc[x[i]], i);
		update(mk1[y[i] - x[i]], i);
		update(mk2[y[i] + x[i]], i);
	}
	for(int i = 1; i <= m; i ++)
	{
		int a = match(ml[y[i]], i) +
			match(mc[x[i]], i) +
			match(mk1[y[i] - x[i]], i) +
			match(mk2[y[i] + x[i]], i);
		c[a] ++;
	}
	for(int i = 0; i <= 8; i ++)
		printf(i == 8 ? "%d\n" : "%d ", c[i]);
	return 0;
}
