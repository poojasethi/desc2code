#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;

const int maxn=201000;

int find(vector<int> &v, int x){
	int cnt=0;
	vector<int>::iterator t=lower_bound(v.begin(),v.end(),x);
	if(t != v.begin())
		cnt++;
	if(t+1 != v.end())
		cnt++;
	return cnt;
}

vector<int> a[maxn],b[maxn],d[maxn],h[maxn];
int r[maxn],c[maxn];
int t[10];

int main(){
	int n,m;
	cin >> n >> m;
	for(int i=0;i<m;i++){
		int x,y;
		cin >> x >> y;
		x--;y--;
		r[i]=x;
		c[i]=y;
		a[x].push_back(y);
		b[y].push_back(x);
		d[x+y].push_back(y);
		h[n+x-y].push_back(x);
	}
	for(int i=0;i<n;i++)
		sort(a[i].begin(),a[i].end());
	for(int i=0;i<n;i++)
		sort(b[i].begin(),b[i].end());
	for(int i=0;i<2*n;i++)
		sort(d[i].begin(),d[i].end());
	for(int i=0;i<2*n;i++)
		sort(h[i].begin(),h[i].end());
	for(int i=0;i<m;i++){
		int cnt=0;
		cnt+=find(a[r[i]],c[i]);
		cnt+=find(b[c[i]],r[i]);
		cnt+=find(d[r[i]+c[i]],c[i]);
		cnt+=find(h[n+r[i]-c[i]],r[i]);
	//	cout << r[i] << " " << c[i] << " " << cnt << endl;
		t[cnt]++;
	}
	for(int i=0;i<=8;i++)
		cout << t[i] << " ";
	cout << endl;
	return 0;
}
