#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>


using namespace std;

#define N 100001

int f(const vector<int> &a, int t){
	int l = 0, r = a.size()-1, mid;

    if (!r) return 0;
 
	while (l <= r)
    {
		mid = (l + r) / 2;
		if (a[mid] == t){
			if (!mid || mid == a.size()-1) return 1;
			else return 2;
		}		
		if (a[mid] < t) l = mid + 1;
		else r = mid - 1;
	}
}

int n, m, i, x[N], y[N], ans, d[9];
vector<int> vr[N], vc[N], vx[N*2], vy[N*2]; 

int main() {
//	freopen("a.in", "r", stdin);
//	freopen("a.out", "w", stdout);
	scanf("%d%d", &n, &m);

	for (i = 0; i < m; i++){
		scanf("%d%d", &x[i], &y[i]);
		vr[x[i]].push_back(y[i]);
		vc[y[i]].push_back(x[i]);
		vx[x[i]-y[i]+n].push_back(x[i]);
		vy[x[i]+y[i]].push_back(x[i]);
	}

	for (i = 1; i <= n; i++){
		sort(vr[i].begin(), vr[i].end());
		sort(vc[i].begin(), vc[i].end());
	}

	for (i = 1; i < n*2; i++){
		sort(vx[i].begin(), vx[i].end());		
		sort(vy[i].begin(), vy[i].end());
	}
	for (i = 0; i < m; i++){
		ans = f(vr[x[i]], y[i]) + f(vc[y[i]], x[i]) + f(vx[x[i]-y[i]+n], x[i]) + f(vy[x[i]+y[i]], x[i]);
		d[ans]++;
	}
	
	for (i = 0; i < 9; i++)
	    printf("%d ", d[i]);
	return 0;
}
