#include <algorithm>
#include <stdio.h>
#define  MAXN      100000
#define  MAXM      200001
using    namespace std;

int n,m;
int ans[9];
int ar[MAXN][2];
int mnA[MAXM],mxA[MAXM];
int mnB[MAXM],mxB[MAXM];
int mnC[MAXM],mxC[MAXM];
int mnD[MAXM],mxD[MAXM];

int main()
{
  scanf("%d%d",&m,&n);
  for(int i=0,r,c ; i<n ; i++)
  {
    scanf("%d%d",&r,&c);
    ar[i][0]=r,ar[i][1]=c;
    mxA[r]=max(mxA[r],c);
    mxB[c]=max(mxB[c],r);
    mxC[r+c]=max(mxC[r+c],r);
    mxD[r-c+m]=max(mxD[r-c+m],r);
    if(!mnA[r] || c<mnA[r])          mnA[r]=c;
    if(!mnB[c] || r<mnB[c])          mnB[c]=r;
    if(!mnC[r+c] || r<mnC[r+c])      mnC[r+c]=r;
    if(!mnD[r-c+m] || r<mnD[r-c+m])  mnD[r-c+m]=r;
  }
  for(int i=0,r,c ; i<n ; i++)
  {
    int cnt=0;
    r=ar[i][0],c=ar[i][1];
    if(c!=mxA[r])     cnt++;
    if(r!=mxB[c])     cnt++;
    if(r!=mxC[r+c])   cnt++;
    if(r!=mxD[r-c+m]) cnt++;
    if(c!=mnA[r])     cnt++;
    if(r!=mnB[c])     cnt++;
    if(r!=mnC[r+c])   cnt++;
    if(r!=mnD[r-c+m]) cnt++;
    ans[cnt]++;
  }
  for(int i=0 ; i<9 ; i++)
    printf("%d ",ans[i]);
  printf("\n");
  return 0;
}
