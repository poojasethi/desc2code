#'''
n, m = [int(_) for _ in raw_input().split(" ")]

queens = []
for _ in xrange(m):
  x, y = [int(_) for _ in raw_input().split(" ")]
  queens.append((x, y))

'''
n, m = 10, 3
queens = [
(1, 1),
(1, 2),
(1, 3),
]
#'''

queens = [(x-1, y-1) for x, y in queens]
# print queens

rows = []
cols = []
for _ in xrange(n):
  rows.append((n*10, -n*10))
  cols.append((n*10, -n*10))

diag1 = []
diag2 = []
for _ in xrange(n*2):
  diag1.append((n*10, -n*10))
  diag2.append((n*10, -n*10))

'''
for x in xrange(n):
  for y in xrange(n):
    # step is x
    print x+n-1-y,
  print

print
print

for x in xrange(n):
  for y in xrange(n):
    # step is y
    print y+x,
  print

print
print

for x in xrange(n):
  for y in xrange(n):
    if (x, y) in queens:
      print "X",
    else:
      print ".",
  print
'''

for x, y in queens:
  minr, maxr = rows[x]
  rows[x] = (min(y, minr), max(y, maxr))

  minc, maxc = cols[y]
  cols[y] = (min(x, minc), max(x, maxc))

  mind1, maxd1 = diag1[x+n-1-y]
  diag1[x+n-1-y] = (min(x, mind1), max(x, maxd1))
  mind2, maxd2 = diag2[x+y]
  diag2[x+y] = (min(y, mind2), max(y, maxd2))


threats = [0] * 9
for x, y in queens:
  threat = 0
  row = x
  row_key = y
  col = y
  col_key = x
  d1 = x+n-1-y
  d1_key = x
  d2 = x+y
  d2_key = y

  '''
  print row_key, col_key, d1_key, d2_key
  print rows[row]
  print cols[col]
  print diag1[d1]
  print diag2[d2]
  '''

  if rows[row][0] != row_key:
    threat += 1
  if rows[row][-1] != row_key:
    threat += 1

  if cols[col][0] != col_key:
    threat += 1
  if cols[col][-1] != col_key:
    threat += 1

  if diag1[d1][0] != d1_key:
    threat += 1
  if diag1[d1][-1] != d1_key:
    threat += 1

  if diag2[d2][0] != d2_key:
    threat += 1
  if diag2[d2][-1] != d2_key:
    threat += 1

  threats[threat] += 1

print ' '.join(str(_) for _ in threats)
