#include <iostream>

using namespace std;
const int maxn = 100000+10;

long long n,q,col[maxn],v[maxn],a,b,dp[maxn],ind1,ind2,ind,mx;

int main () {
	ios::sync_with_stdio(0);
	cin >> n >> q;
	for(int i = 1; i <= n; i++) cin >> v[i];
	for(int i = 1; i <= n; i++) cin >> col[i];
	for(int qq = 1; qq <= q; qq++) {
		for(int j = 1; j <= n; j++) dp[j] = -(1ll<<60);
		mx = dp[0] = 0;
		ind1 = ind2 = 0;
		cin >> a >> b;
		for(int j = 1; j <= n; j++) {
			ind = col[j]!=ind1?ind1:ind2; 
			dp[col[j]] = max(dp[col[j]],dp[col[j]]+a*v[j]);
			dp[col[j]] = max(dp[col[j]],dp[ind]+b*v[j]);
			if(col[j] != ind1 && ind2 != col[j]) {
				if(dp[col[j]] >= dp[ind1]) { ind2 = ind1; ind1 = col[j]; }
				else if(dp[col[j]] >= dp[ind2]) { ind2 = col[j]; }
			} else {
				if(dp[ind1] <= dp[ind2]) swap(ind1,ind2);
			}
			mx = max(mx,dp[col[j]]);
		}
		cout << mx << endl;
	}
	return 0;
}
