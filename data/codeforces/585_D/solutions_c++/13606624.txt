#include <bits/stdc++.h>
#define pii pair<int,int>
#define mk make_pair
#define pb push_back
#define vi vector<pair<int,int> >
#define x first
#define y second
using namespace std;
int a[27][3];
pair<int,string> res;
map<pair<int,int>,pair<int,string> > m;
int mid;
void solve1(int pos,int tot1,int tot2,int tot3,string ans)
{
  if (pos>=mid)
  {
    if(m[mk(tot2-tot1,tot3-tot2)].x < tot1 or m[mk(tot2-tot1,tot3-tot2)].y=="")
      m[mk(tot2-tot1,tot3-tot2)]=mk(tot1,ans);
    return;
  }
  solve1(pos+1,tot1+a[pos][0],tot2+a[pos][1],tot3,ans+"LM\n");
  solve1(pos+1,tot1+a[pos][0],tot2,tot3+a[pos][2],ans+"LW\n");
  solve1(pos+1,tot1,tot2+a[pos][1],tot3+a[pos][2],ans+"MW\n");
}
void solve2(int pos,int tot1,int tot2,int tot3,string ans)
{
   if(pos<mid)
   {
     if(m.find(mk(tot1-tot2,tot2-tot3))!=m.end())
     {
       pair<int,string> it=m[mk(tot1-tot2,tot2-tot3)];
       reverse(ans.begin(),ans.end());
       if(it.x+tot1>res.x)
        res=mk(it.x+tot1,it.y+ans);
     }
     return;
   }
  solve2(pos-1,tot1+a[pos][0],tot2+a[pos][1],tot3,ans+"\nML");
  solve2(pos-1,tot1+a[pos][0],tot2,tot3+a[pos][2],ans+"\nWL");
  solve2(pos-1,tot1,tot2+a[pos][1],tot3+a[pos][2],ans+"\nWM");
}
int main()
{
    std::ios::sync_with_stdio(false);
    int n;
    cin>>n;
    for (int i = 0; i < n; ++i)
    {
      cin>>a[i][0]>>a[i][1]>>a[i][2];
    }
    mid=n/2;
    res.x=-1e9+13;
    res.y="Impossible";
    solve1(0,0,0,0,"");
    solve2(n-1,0,0,0,"");
    cout<<res.y;
    return 0;
} 