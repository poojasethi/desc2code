#include <bits/stdc++.h>
#define fi first
#define se second
using namespace std;

typedef pair < int , int > ii;

const int maxn = 25;

int L[maxn],M[maxn],W[maxn];
map < ii , ii > A , B;
string str = "LMW";

inline void f( int from , int to , int a , int b , int c , int k , map < ii , ii > &_map ){
    
    if( from == to ){
        
        ii p = ii(b-a, c-b);
        ii q = ii(a, k);
        
        if( !_map.count(p) or _map[p] < q )
			_map[p] = q;
        
        return;
    }
    
    f( from + 1 , to , a + L[from] , b + M[from] , c , 3*k+2 , _map);
    f( from + 1 , to , a + L[from] , b , c + W[from] , 3*k+1 , _map);
    f( from + 1 , to , a , b + M[from] , c + W[from] , 3*k , _map);
}

void write( int x , int n ){
    
    stack < int > st;
    
    for( int i=0 ; i < n ; i++ ){
        st.push(x % 3);
        x /= 3;
    }
    
    while( !st.empty() ){
        for( int i=0 ; i < 3 ; i++ )
			if( st.top() != i )
				printf("%c",str[i]);
        puts("");
        st.pop();
    }
}


int main(){
	
	int n;
	scanf("%d",&n);
	
    for( int i=0 ; i < n; i++ )
		scanf("%d%d%d",&L[i],&M[i],&W[i]);
    
    f( 0 , n/2 , 0 , 0 , 0 , 0 , A );
    f( n/2 , n , 0 , 0 , 0 , 0 , B );
    
    int a = -1 , b = -1 , ans = INT_MIN;
    
    for( map < ii , ii > :: iterator it = A.begin() ; it != A.end() ; it++ ){
        
        ii p = ii( -it->fi.fi , -it->fi.se );
        
        if( B.count(p) and it->se.fi + B[p].fi > ans ){
			a = A[it->fi].se;
			b = B[p].se;
			ans = it->se.fi + B[p].fi;
        }
    }
	
	if( ans == INT_MIN )
		puts("Impossible");
	else{
		//~ printf("%d\n",ans);
		write( a , n/2 );
		write( b , n-n/2 );
	}
    return 0;
}
