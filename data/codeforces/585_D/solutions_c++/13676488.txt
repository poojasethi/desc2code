#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int inf=1000000000;
struct data{
	int st,v1,v2,v0;
}b[1100001];
int tot,i,j,k,n,m,ans,a1,a2,a[111][3],lim1,lim2,q[111],p[3];
bool cmp(data a,data b){
	if (a.v1<b.v1) return 1;
	if (a.v1>b.v1) return 0;
	return a.v2<b.v2||a.v2==b.v2&&a.v0<b.v0;
}
int bs(int x,int y){
	int l=1,r=tot,m;
	if (b[1].v1>x||b[1].v1==x&&b[1].v2>y) return 0;
	while (l<r-1){
		m=(l+r)>>1;
		if (b[m].v1<x||b[m].v1==x&&b[m].v2<=y) l=m;else r=m-1;
	}
	return (b[r].v1<x||b[r].v1==x&&b[r].v2<=y)?r:l;
}
void work1(int x,int st){
	int i;
	if (x>lim1){
		b[++tot].st=st;b[tot].v0=p[0];b[tot].v1=p[1]-p[0];b[tot].v2=p[2]-p[0];
		return;
	}
	for (i=0;i<=2;i++){
		p[i]-=a[x][i];
		work1(x+1,st*3+i);
		p[i]+=a[x][i];
	}
}
void work2(int x,int st){
	int i,k;
	if (x>n){
		if (st==34)
		 st=34;
		k=bs(p[0]-p[1],p[0]-p[2]);
		if (!k||b[k].v1!=p[0]-p[1]||b[k].v2!=p[0]-p[2]) return;
		if (b[k].v0+p[0]<=ans) return;
		ans=b[k].v0+p[0];a1=b[k].st;a2=st;
		return;
	}
	for (i=0;i<=2;i++){
		p[i]-=a[x][i];
		work2(x+1,st*3+i);
		p[i]+=a[x][i];
	}
}
int main(){
	scanf("%d",&n);tot=0;ans=-inf;lim1=n/2;lim2=(n+1)/2;
	for (i=1;i<=n;i++)
	 for (j=0;j<=2;j++) scanf("%d",&a[i][j]);
	memset(p,0,sizeof(p));
	for (i=1;i<=lim1;i++)
	 for (j=0;j<=2;j++) p[j]+=a[i][j];
	work1(1,0);
	sort(b+1,b+1+tot,cmp);
	memset(p,0,sizeof(p));
	for (i=lim1+1;i<=n;i++)
	 for (j=0;j<=2;j++) p[j]+=a[i][j];
	work2(lim1+1,0);
	if (ans==-inf) puts("Impossible");else{
		for (i=1,k=a1;i<=lim1;i++) q[lim1-i+1]=k%3,k/=3;
		for (i=1,k=a2;i<=lim2;i++) q[n-i+1]=k%3,k/=3;
		for (i=1;i<=n;i++){
			if (q[i]==0) puts("MW");
			if (q[i]==1) puts("LW");
			if (q[i]==2) puts("LM");
		}
	}
	return 0;
}