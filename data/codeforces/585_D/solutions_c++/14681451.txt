#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
const int mm=(1<<20)-1;
typedef long long ll;
struct sef { int v,ne; ll A,B,C; }h[1700050];
int tot,first[mm+5];
int nn,n,T,D,a[31],b[31],c[31],L[31];
ll ans;
char s[5];
inline void Add(int v,const ll &A,ll B,ll C)
{
	B-=A;	C-=A;
	int x=B&mm;
	for (int i=first[x];i;i=h[i].ne)
		if (h[i].B==B&&h[i].C==C)	{
			if (h[i].A<A) h[i].A=A,h[i].v=v;
			return;
		}
	h[++tot].ne=first[x]; h[tot].v=v; h[tot].A=A; h[tot].B=B; h[tot].C=C;
	first[x]=tot;
	return;
}
inline void dfs(int x,int v,ll A,ll B,ll C)
{
	if (x==nn+1) {
		Add(v,A,B,C);
		return;
	}	
	dfs(x+1,v*3+2,A+a[x],B+b[x],C);	
	dfs(x+1,v*3+1,A+a[x],B,C+c[x]);
	dfs(x+1,v*3,A,B+b[x],C+c[x]);
}

inline sef Ask(ll A,ll B,ll C)
{
	B-=A; C-=A;
	B=-B; C=-C;
	int x=B&mm;
	for (int i=first[x];i;i=h[i].ne)
		if (h[i].B==B&&h[i].C==C)
			return h[i];
	return h[0];
}
inline void Solve(int x,int v,ll A,ll B,ll C)
{
	if (x==n+1) {
		sef tmp=Ask(A,B,C);
		//cerr<<v<<endl;
		if (tmp.A>h[0].A&&A+tmp.A>ans) {
			//cerr<<"a"<<A<<" "<<B<<" "<<C<<endl;
			//cerr<<"a"<<A<<" "<<tmp.A+tmp.B<<" "<<tmp.A+tmp.C<<endl;
		//	cerr<<tmp.A<<endl;
			ans=A+tmp.A;
			D=tmp.v;	T=v;
		}
		return;
	}
	Solve(x+1,v*3+2,A+a[x],B+b[x],C);
	Solve(x+1,v*3+1,A+a[x],B,C+c[x]);
	Solve(x+1,v*3,A,B+b[x],C+c[x]);
}
int main()
{
	scanf("%d",&n);
	for (int i=1;i<=n;++i)
		scanf("%d%d%d",a+i,b+i,c+i);
	h[0].A=ans=-(1ll<<36);
	ll INF=ans;	
	nn=n>>1;
	dfs(1,0,0,0,0);
	Solve(nn+1,1,0,0,0);
	if (ans<=INF) {
		printf("Impossible\n");
		return 0;
	}
	//cerr<<tot<<endl;
	int x=n+1;
	while (T)
	{
		L[--x]=T%3;
		T/=3;
	}
	++x;
	while (D)
	{
		L[--x]=D%3;
		D/=3;
	}
	//cerr<<x<<endl;
	s[0]='L'; s[1]='M'; s[2]='W';
	for (int i=1;i<=n;++i)
	{
		for (int j=0;j<3;++j)
			if (j!=L[i])	printf("%c",s[j]);
		printf("\n");
	}
	//cerr<<c[6]+c[8]+c[9]<<endl;
}