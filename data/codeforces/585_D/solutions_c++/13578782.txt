#include <iostream>
#include <map>
#include <algorithm>
using namespace std;

struct no{
	int first;
	int second;
};

bool operator<(no a ,no b){
	if(a.first==b.first)return a.second<b.second;
	return a.first<b.first;
}

int n;
int arr[30][3];
int p3[20];

map< no,int > set;
map< no,int > bit;
int main(){
	cin>>n;
	p3[0]=1;
	for(int i=1;i<20;i++){
		p3[i]=3*p3[i-1];
	}
	for(int i=0;i<n;i++){
		cin>>arr[i][0]>>arr[i][1]>>arr[i][2];
	}
	int k=n/2;
	
	for(int i=0;i<p3[k];i++){
		int t=i;
		int _a=0,_b=0,_c=0;
		for(int j=0;j<k;j++){
			if(t%3==0){
				_a+=arr[j][0];
				_b+=arr[j][1];
			}
			if(t%3==1){
				_a+=arr[j][0];
				_c+=arr[j][2];
			}
			if(t%3==2){
				_b+=arr[j][1];
				_c+=arr[j][2];
			}
			t/=3;
		}

		no h;
		h.first=_b-_a;
		h.second=_c-_b;
		if(set.count(h)){
			if(set[h]<_a){
				bit[h]=i;
				set[h]=_a;
			}
		} else {
			set[h]=_a;
			bit[h]=i;
		}
	}

	int sol=-1<<30;
	int bit1,bit2;
	int kk=n-k;
	for(int i=0;i<p3[kk];i++){
		int t=i;
		int _a=0,_b=0,_c=0;
		for(int j=0;j<kk;j++){
			if(t%3==0){
				_a+=arr[k+j][0];
				_b+=arr[k+j][1];
			}
			if(t%3==1){
				_a+=arr[k+j][0];
				_c+=arr[k+j][2];
			}
			if(t%3==2){
				_b+=arr[k+j][1];
				_c+=arr[k+j][2];
			}
			t/=3;
		}
		no h;
		h.first=_a-_b;
		h.second=_b-_c;
		int val=_a;
		if(set.count(h)){
			if(val+set[h]>sol){
				sol=val+set[h];
				bit1=bit[h];
				bit2=i;
			}
		}
	}
	if(sol==-1<<30){
		cout<<"Impossible"<<endl;
	} else {
		for(int i=0;i<k;i++){
			if(bit1%3==0){
				cout<<"LM"<<endl;
			}
			if(bit1%3==1){
				cout<<"LW"<<endl;
			}
			if(bit1%3==2){
				cout<<"MW"<<endl;
			}
			bit1/=3;
		}

		for(int i=0;i<kk;i++){
			if(bit2%3==0){
				cout<<"LM"<<endl;
			}
			if(bit2%3==1){
				cout<<"LW"<<endl;
			}
			if(bit2%3==2){
				cout<<"MW"<<endl;
			}
			bit2/=3;
		}
	}
}