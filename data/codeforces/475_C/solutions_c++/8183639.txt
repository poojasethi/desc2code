#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<string>
#include<algorithm>
#include<queue>
#include<vector>
#include<stack>
#include<map>
using namespace std;


const int maxn = 1000+20;
char s[maxn][maxn];
int sum[maxn][maxn];
const int INF = maxn*maxn;
int ans;
int a,b;
int sx,sy;

int n,m;
int cal(int x,int y) {
	return sum[x][y] - sum[x+b][y] - sum[x][y+a] + sum[x+b][y+a];
}

int check(int x,int y) {
	if(cal(x+1,y) == a*b) return  a+check(x+1,y);
	if(cal(x,y+1) == a*b) return  b+check(x,y+1);
	return cal(x,y);
}

int main() {	
	while(~scanf("%d%d",&n,&m)) {
		sx = sy = -1;
		ans = INF;
		memset(sum,0,sizeof(sum));
		for(int i=0;i<n;i++) {
			scanf("%s",s[i]);
			for(int j=0;j<m;j++) {
				if(sx == -1 && s[i][j] == 'X') {
					sx = i;
					sy = j;
				}
			}
		}

		for(int i = n-1;i>=0;i--) {
			for(int j=m-1;j>=0;j--) {
				sum[i][j] = (s[i][j]=='X') + sum[i+1][j] + sum[i][j+1] - sum[i+1][j+1];
			}
		}

		for(a = 1; sy+a-1<m && s[sx][sy+a-1]=='X';a++);a--;
			for(b = 1; sx + b -1 < n && s[sx+b-1][sy]=='X';b++) {
				if(check(sx,sy) == sum[0][0]){
					 ans = min(ans,a*b);
					 break;
				}
			}
		for(b = 1; sx + b -1 < n && s[sx+b-1][sy]=='X';b++);b--;
			for(a = 1; sy+a-1<m && s[sx][sy+a-1]=='X';a++) {
				if(check(sx,sy) == sum[0][0]) {
					ans = min(ans,a*b);
				}
			}

		printf("%d\n",ans==INF?-1:ans);
	}
    return 0;
}