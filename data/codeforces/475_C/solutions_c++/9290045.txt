#include <cstdio>
#include <algorithm>
#define N 1005
#define INF (1 << 29)
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int n, m, s[N][N], y, x, ans = INF;
char t[N];

int rec(int y1, int y2, int x1, int x2){
	return s[y2][x2] - s[y1 - 1][x2] - s[y2][x1 - 1] + s[y1 - 1][x1 - 1];
}

bool check(int y, int x, int i, int j, int c){
	if(rec(y, i + y - 1, x, j + x - 1) != i * j) return 0;
	if(y + i > n && x + j > m) return s[n][m] == c;
	
	if(y + i > n || !rec(i + y, n, x, x)){
		if(check(y, x + 1, i, j, c + i)) return 1;
	}
	
	if(x + j > m || !rec(y, y, x + j, m)){
		if(check(y + 1, x, i, j, c + j)) return 1;
	}
	
	return s[n][m] == c;
}

int main(){
	scanf("%d %d", &n, &m);
	fi(i, 0, n){
		scanf("%s", t);
		fi(j, 0, m){
			s[i + 1][j + 1] = s[i][j + 1] + s[i + 1][j] - s[i][j] + (t[j] == 'X');
			if(!y && t[j] == 'X') y = i + 1, x = j + 1;
		}
	}
	
	FI(i, 1, n - y + 1) FI(j, 1, m - x + 1) if(check(y, x, i, j, i * j)) ans = min(ans, i * j);
	printf("%d\n", ans == INF ? -1 : ans);
	scanf("\n");
}
