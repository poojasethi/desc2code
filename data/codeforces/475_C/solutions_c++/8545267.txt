#include <bits/stdc++.h>
#define rep(i,j,k)	for (int i = j; i <= k; i++)
#define dep(i,j,k)	for (int i = j; i >= k; i--)
using namespace std;
typedef long long ll;
const int N = 1010;
inline void get(ll &x)
{
	char ch = getchar();	x = 0;
	while (ch < '0')	ch = getchar();
	while (ch >= '0')	x = x*10+ch-'0', ch = getchar();
}
using namespace std;
char s[N][N];
int cnt, tot, sum[N][N];
int n, m, cmn = N, rmn = N, ans = N*N;
int cal(int a, int b, int x, int y){return sum[a][b]-sum[a][y+1]-sum[x+1][b]+sum[x+1][y+1];}
bool ok(int a, int b, int tx = cmn, int ty = rmn)
{
	while (1)
	{
		if (tx+a-1>n || ty+b-1>m)	return 0;
		if (cal(tx,ty,tx+a-1,ty+b-1) != a*b)	return 0;
		if (cal(tx,ty,n,m)==a*b && cal(tx,ty,tx+a-1,ty+b-1)==a*b)
			return (cnt+a*b==tot);
		bool ok1 = ((a*b)==cal(tx+1,ty,tx+a,ty+b-1));
		bool ok2 = ((a*b)==cal(tx,ty+1,tx+a-1,ty+b));
		if (!ok1 && !ok2)	return 0;
		if (ok1 && ok2)	return 0;
		if (ok1)	tx++, cnt += b;
		else	ty++, cnt += a;
	}
}
int main()
{
	cin >> n >> m;
	rep(i,1,n)	scanf("%s", s[i]+1);
	dep(i,n,1)	dep(j,m,1)
	{
		sum[i][j] = sum[i][j]-sum[i+1][j+1]+sum[i+1][j]+sum[i][j+1]+(s[i][j]=='X');
		if (s[i][j] == 'X')
			cmn = min(i,cmn), rmn = min(j,rmn), tot++;
	}
	rep(i,1,n)	rep(j,1,m)
	{
		if (ans <= i*j)	continue;
		cnt = 0;
		if (ok(i,j))	ans = i*j;
	}
	printf("%d\n", (ans==N*N)?-1:ans);
	return 0;
}