#include<cstdio>
#include<algorithm>
using namespace std;

int n, m, st_x, st_y, h, w, ans;
char s[1111];
int g[1111][1111], tot[1111][1111];

bool full(int x1, int y1, int x2, int y2) {
	int all = (x2-x1+1) * (y2-y1+1);
	int cnt = tot[x2][y2] - tot[x1-1][y2] - tot[x2][y1-1] + tot[x1-1][y1-1];
	return all == cnt;
}

bool check(int h, int w) {
	int x = st_x, y = st_y;
	if (!full(x, y, x+h-1, y+w-1)) return false;
	int cur = h * w;
	bool fin = false;
	while (!fin) {
		fin = true;
		while(full(x, y+1, x+h-1, y+w)) {
			cur += h;
			y++;
			fin = false;
		}
		while(full(x+1, y, x+h, y+w-1)) {
			cur += w;
			x++;
			fin = false;
		}
	}
	return cur == tot[n][m];
}

int main() {
	scanf("%d%d", &n, &m);
	for(int i=1;i<=n;i++) {
		scanf("%s", s);
		for(int j=0;j<m;j++) {
			g[i][j+1] = ((s[j] == '.') ? 0 : 1);
			if(!st_x && g[i][j+1]) {
				st_x = i; st_y = j+1;
			}
		}
	}
	for(int i=1;i<=n;i++)
		for(int j=1;j<=m;j++)
			tot[i][j] = g[i][j] + tot[i-1][j] + tot[i][j-1] - tot[i-1][j-1];
	h = 1;
	while(g[st_x + h][st_y]) h++;
	w = 1;
	while(g[st_x][st_y + w]) w++;
	
	ans = n*m+1;
	for(int i=1;i<=w;i++)
		if(check(h, i)) ans = min(ans, h*i);
	for(int i=1;i<=h;i++)
		if(check(i, w)) ans = min(ans, i*w);
	
	printf("%d\n", ans <= n*m ? ans : -1);
	
	return 0;
}