#include<bits/stdc++.h>
#include<tr1/unordered_map>
#define REP(i,n) for(i=1;i<=n;i++)
#define FOR(i,l,r) for(i=l;i!=r;i++)
#define add insert
#define pb push_back
using namespace std;
int const MAXN = 1e5+10, INF = 1e7;
int n, a[MAXN], b[MAXN], c[MAXN], i, I, id[MAXN], ans;
tr1::unordered_map<int,int> A, B, C, pos;
set<int> s;
set<int>::iterator it;
bool cmp(int x1, int x2){return C[pos[x1]]>C[pos[x2]];}
typedef pair<int,int> pii;
multiset<int> res;
multiset<pii> str;
multiset<pii>::iterator u,v,w;
void put(int x, int y){
  v = str.lower_bound(pii(x,0));
  if(v->second >= y) return;
  u = v, u--, w = v;
  res.erase(res.find(u->first+v->second)); 
  res.add(x+v->second);
  vector<pii> del;
  while(u->second < y){
    v = u, v--;
    res.erase(res.find(v->first+u->second));
    del.pb(pii(u->first,u->second)), u--;
  }
  while(w->first == x && w->second <= y){
    v = w, v--;
    del.pb(pii(w->first,w->second)), w--;
  }
  REP(i,del.size())str.erase(str.find(pii(del[i-1].first,del[i-1].second)));
  res.add(u->first+y);  
  str.add(pii(x,y));
}
int main(){
  cin.sync_with_stdio(0);
  cin >> n;
  REP(i,n) cin >> a[i], A[a[i]] = (!A[a[i]]) ? (i) : (A[a[i]]), s.add(a[i]);
  REP(i,n) cin >> b[i], B[b[i]] = (!B[b[i]]) ? (i) : (B[b[i]]), s.add(b[i]);
  REP(i,n) cin >> c[i], C[c[i]] = (!C[c[i]]) ? (i) : (C[c[i]]), s.add(c[i]);
  
  int cont = 0;
  FOR(it,s.begin(),s.end()){
    pos[++cont] = *it;
    if(!A[*it]) A[*it] = INF;
    if(!B[*it]) B[*it] = INF;
    if(!C[*it]) C[*it] = INF;
  }

  int sz = s.size();
   
  REP(i,sz) id[i] = i;
  sort(id+1,id+sz+1,cmp);
  
  str.add(pii(0,INF)), str.add(pii(INF,0)), res.add(0);
  ans = 3*n;
  REP(I,sz+1){
    if(I == sz+1){ ans = min(ans,*res.begin()); break; }
    else ans = min(ans,C[pos[id[I]]]+*res.begin());
    put(A[pos[id[I]]],B[pos[id[I]]]);
  }
  cout << ans << endl;
}
