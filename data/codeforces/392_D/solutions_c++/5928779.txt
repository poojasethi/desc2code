#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef double ld;

const int MAX=100000+10;
const int INF=10000000;

int n,a[MAX],b[MAX],c[MAX];

map<int,int> A,B,C;
set<int> all;
set< pair< pair<int,int>,int> > get;
set<int> que;
multiset<int> pp;

void insert(int a,int b)
{
	set< pair< pair<int,int> ,int> >::iterator it=get.lower_bound(mp(mp(a+1,a+1),0));
	--it;
	if(b<=it->y)
		return;
	if(a+1<=it->x.y)
	{
		get.insert(mp(mp(a+1,it->x.y),it->y));
		pp.insert(a+1+it->y);
	}
	int ll=a;
	while(a>=0)
	{
		set< pair< pair<int,int> ,int> >::iterator it=get.lower_bound(mp(mp(a+1,a+1),0));
		--it;
		if(b<=it->y)
			break;

		get.erase(it);
		pp.erase(pp.find(it->x.x+it->y));

		a=it->x.x-1;
	}
	get.insert(mp(mp(a+1,ll),b));
	pp.insert(a+1+b);
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
	int i;
	scanf("%d",&n);
	REP(i,1,n)
		scanf("%d",&a[i]);
	REP(i,1,n)
		scanf("%d",&b[i]);
	REP(i,1,n)
		scanf("%d",&c[i]);
	REP(i,1,n)
	{
		all.insert(a[i]);
		all.insert(b[i]);
		all.insert(c[i]);
	}
	for(set<int>::iterator it=all.begin();it!=all.end();++it)
	{
		A[*it]=INF;
		B[*it]=n+1;
		C[*it]=INF;
	}
	for(i=n;i>=1;--i)
	{
		A[a[i]]=i;
		B[b[i]]=i;
		C[c[i]]=i;
	}
	get.insert(mp(mp(0,n),0));
	pp.insert(0);
	for(set<int>::iterator it=all.begin();it!=all.end();++it)
		if(A[*it]==INF)
			insert(B[*it]-1,C[*it]);
	int ans=INF;
	for(i=n;i>=0;--i)
	{
		ans=min(ans,i+*pp.begin());
		if(i && A[a[i]]==i)
			insert(B[a[i]]-1,C[a[i]]);
	}
	cout<<ans<<endl;
	return 0;
}
