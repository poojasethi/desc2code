#include<stdio.h>
#include<string.h>
#include<vector>
#include<algorithm>
#include<set>
using namespace std;
#define MN (300005)

typedef pair<int,int> ii;
int l;
int a[MN],b[MN],c[MN];
int dc[MN],ldc=0,ll;
int A[MN],B[MN],C[MN];
int idx[MN];

bool cmp(int x,int y)
{
    return A[x]>A[y];
}

void INIT()
{
    scanf("%d",&l);
    for (int i=0;i<l;i++)scanf("%d",&a[i]),dc[ldc++]=a[i];
    for (int i=0;i<l;i++)scanf("%d",&b[i]),dc[ldc++]=b[i];
    for (int i=0;i<l;i++)scanf("%d",&c[i]),dc[ldc++]=c[i];
    sort(dc,dc+ldc);
    ll=unique(dc,dc+ldc)-dc;
}
void PREP()
{
    for (int i=0;i<l;i++)a[i]=lower_bound(dc,dc+ll,a[i])-dc;
    for (int i=0;i<l;i++)b[i]=lower_bound(dc,dc+ll,b[i])-dc;
    for (int i=0;i<l;i++)c[i]=lower_bound(dc,dc+ll,c[i])-dc;
    for (int i=0;i<ll;i++)A[i]=B[i]=C[i]=5*MN;
    for (int i=0;i<l;i++)if (A[a[i]]>MN)A[a[i]]=i+1;
    for (int i=0;i<l;i++)if (B[b[i]]>MN)B[b[i]]=i+1;
    for (int i=0;i<l;i++)if (C[c[i]]>MN)C[c[i]]=i+1;
    A[ll]=0;
    for (int i=0;i<ll+1;i++)idx[i]=i;sort(idx,idx+ll,cmp);
}
multiset<int> pro;
set<ii> st;
typedef set<ii>::iterator sti;
void ins(ii x)
{
    sti tmp=st.lower_bound(x);
    if (tmp->second>=x.second)return ;
    sti tmp2=st.insert(x).first;
    sti tmp3=tmp2;
    tmp3--;
    pro.erase(pro.lower_bound(tmp3->first+tmp->second));
    pro.insert(tmp2->first+tmp->second);
    while (tmp2->second>tmp3->second)
    {
        sti tmp4=tmp3--;
        pro.erase(pro.lower_bound(tmp3->first+tmp4->second));
        st.erase(tmp4);
    }
    pro.insert(tmp2->second+tmp3->first);
}
void PROCESS()
{
    int ans=A[idx[0]];
    st.insert(ii(0,MN*10)),st.insert(ii(MN*10,0)),pro.insert(0);
    for (int i=0;i<ll;i++)
    {
        ins(ii(B[idx[i]],C[idx[i]]));
        ans=min(ans,A[idx[i+1]]+*pro.begin());
    }
    printf("%d\n",ans);
}
int main()
{
    INIT();
    PREP();
    PROCESS();
    return 0;
}

