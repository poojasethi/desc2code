#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<vector>
#include<set>
#define LL long long
using namespace std;
struct point
{
	int x,y;
}p[300010];
int n,a[100010],b[100010],c[100010],vis[300010],d[300010],Min,Y[400010],inf=100000000;
set<int>A;
multiset<int> B;
void read(int &x)
{
	char ch=getchar();int mark=1;for(;ch!='-'&&(ch<'0'||ch>'9');ch=getchar());if (ch=='-') mark=-1,ch=getchar();
	for(x=0;ch>='0'&&ch<='9';ch=getchar()) x=x*10+ch-48;x*=mark;
}
int Get(int x,int y)
{
	if (x>n||y>n) return inf;
	return x+y;
}
void Add(point X)
{
	set<int>::iterator R,L,tmp;
	R=A.upper_bound(X.x);
	if (Y[*R]<X.y)
	{
		L=R;
		for(;Y[*L]<X.y;--L);
		for(set<int>::iterator it=L;it!=R;++it)
		{
			set<int>::iterator nxt=it;
			++nxt;
			B.erase(B.find(Get((*it),Y[*nxt])));
			//printf("- %d\n",Get((*it),Y[*nxt]));
		}
		B.insert(Get((*L),X.y));
		//printf("+ %d\n",Get((*L),X.y));
		B.insert(Get(X.x,Y[*R]));
		//printf("+ %d\n",Get(X.x,Y[*R]));
		if (L!=R)
		{
			set<int>::iterator it=L;++it;
			for(;it!=R;)
			{
				tmp=it;++it;A.erase(tmp);
			}
		}
		A.insert(X.x);
		Y[X.x]=X.y;
	}
}
int main()
{
	//freopen("a.in","r",stdin);
	read(n);
	int cnt=0;
	for(int i=1;i<=n;i++) read(a[i]),d[++cnt]=a[i];
	for(int i=1;i<=n;i++) read(b[i]),d[++cnt]=b[i];
	for(int i=1;i<=n;i++) read(c[i]),d[++cnt]=c[i];
	sort(d+1,d+cnt+1);
	cnt=unique(d+1,d+cnt+1)-(d+1);
	for(int i=1;i<=n;i++)
	{
		a[i]=lower_bound(d+1,d+cnt+1,a[i])-d;
		b[i]=lower_bound(d+1,d+cnt+1,b[i])-d;
		c[i]=lower_bound(d+1,d+cnt+1,c[i])-d;
	}
	for(int i=1;i<=n;i++) vis[a[i]]++;
	for(int i=1;i<=cnt;i++) p[i].x=p[i].y=n+i;
	for(int i=n;i;i--)
	{
		p[b[i]].x=i;p[c[i]].y=i;
	}
	Min=3*n;
	point tmp;
	tmp.x=0,Y[tmp.x]=n+cnt+1;
	A.insert(0);
	tmp.x=n+cnt+1;Y[tmp.x]=0;
	A.insert(n+cnt+1);
	B.insert(Get(0,0));
	for(int i=1;i<=cnt;i++) 
		if (!vis[i]) Add(p[i]);
	Min=min(Min,(*B.begin())+n);
	for(int i=n;i;i--)
	{
		vis[a[i]]--;
		if (!vis[a[i]]) 
		{
			if (p[a[i]].x>n&&p[a[i]].y>n) break;
			Add(p[a[i]]);
		}
		Min=min(Min,(*B.begin())+i-1);
	}
	printf("%d\n",Min);
	return 0;
}