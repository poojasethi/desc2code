#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<set>
#include<map>
#include<queue>
#include<vector>
#define inf  5001000
#define maxn 101000
using namespace std;
int i,j,k,m,n,out;
map<int,int> a,b,c,p;
map<int,int>::iterator it,ip;
pair<int,int> pi;
multiset<int>ans;
multiset<int>::iterator it2;
int x[maxn],y[maxn],z[maxn];
void read(map<int,int> &a,int x[]){
  for (int i=1;i<=n;i++){
    scanf("%d",x+i);
    if (!a.count(x[i]))a[x[i]]=i;
    else x[i]=0;
  }
}
void delans(int sum){
  it2=ans.find(sum);
  //if (it2!=ans.end())
  ans.erase(it2);
}
void addp(int x,int y){ 
  map<int,int>::iterator it;
  it=p.lower_bound(x);
  pair<int ,int >pii,pi=*it;
  if ((*it).second>y)return;
  ans.insert(x+(*it).second); 
  for (it--;it!=p.begin();){
    pii=pi;pi=*it;it--;
    if (pi.second<y){
      delans(pi.first+pii.second);
      p.erase(pi.first);
    } 
    else break;
  }
  p[x]=y;
  delans(pi.first+pii.second); 
  ans.insert(pi.first+y); 
}
int main(){
scanf("%d",&n);
read(a,x);
read(b,y);
read(c,z);
out=3*n;
p.clear();
p[-1]=inf;
p[inf]=0;p[0]=inf;ans.insert(0);
for (it=b.begin();it!=b.end();it++){
  pi=*it;
  if (a.count(pi.first))continue;
  if (!c.count(pi.first))addp(pi.second,3*n);
  else
  addp(pi.second,c[pi.first]); 
}
for (it=c.begin();it!=c.end();it++){
  pi=*it;
  if (a.count(pi.first)||b.count(pi.first))continue;
  addp(3*n,pi.second);
}
int u=n;while (!x[u])u--;
out=*(ans.begin())+u;
for (i=n;i>=1;i--)if (x[i]){
  u=i-1;while (u>0&&x[u]==0)u--;
  int pb,pc;
  if (b.count(x[i]))pb=b[x[i]];else pb=3*n;
  if (c.count(x[i]))pc=c[x[i]];else pc=3*n;
  if (pb==3*n && pc==3*n)break;
  addp(pb,pc);
  out=min(out,*(ans.begin())+u);
}
printf("%d\n",out);
//system("pause");
return 0;
}
