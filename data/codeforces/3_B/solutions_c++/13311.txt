#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;

int n,v;
struct Type
{
	int num,p;
	Type(int _num,int _p):num(_num),p(_p) {}
};
vector<Type> a,b;

bool cmp(const Type &a,const Type &b)
{
	return a.p>b.p;
}

void init()
{
	scanf("%d%d",&n,&v);
	int t,p;
	for(int i=0;i<n;i++)
	{
		scanf("%d%d",&t,&p);
		if(t==1) a.push_back(Type(i+1,p));
		else b.push_back(Type(i+1,p));
	}
	sort(a.begin(),a.end(),cmp);
	sort(b.begin(),b.end(),cmp);
}

void work()
{
	int sa[100001],sb[100001];
	int na=a.size(),nb=b.size();
	sa[0]=sb[0]=0;
	for(int i=0;i<na;i++) sa[i+1]=sa[i]+a[i].p;
	for(int i=0;i<nb;i++) sb[i+1]=sb[i]+b[i].p;
	int ans=-1,nn;
	for(int i=0;i<=nb && i*2<=v;i++)
	{
		int va=v-i*2;
		if(va>na) va=na;
		if(ans<sb[i]+sa[va])
		{
			ans=sb[i]+sa[va];
			nn=i;
		}
	}
	printf("%d\n",ans);
	for(int i=0;i<nn;i++) printf("%d ",b[i].num);
	for(int i=0;i<na && i<v-nn*2;i++) printf("%d ",a[i].num);
	printf("\n");
}

int main()
{
	init();
	work();
	return 0;
}
