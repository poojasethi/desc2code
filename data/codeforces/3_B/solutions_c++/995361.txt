#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
typedef pair<int,int> ii;
#define Z 100100

vector<ii> kay,cat;
int sumk[Z],sumc[Z];
int main() {
	int N,V;
	cin>>N>>V;
	for(int i=1;i<=N;i++) {
		int T,P;
		cin>>T>>P;
		if(T==1) {
			kay.push_back(ii(P,i));
		} else {
			cat.push_back(ii(P,i));
		}
	}
	sort(kay.rbegin(),kay.rend());
	for(int i=0;i<kay.size();i++) {
		sumk[i+1]=sumk[i]+kay[i].first;
	}
	sort(cat.rbegin(),cat.rend());
	for(int i=0;i<cat.size();i++) {
		sumc[i+1]=sumc[i]+cat[i].first;
	}
	
	int k=kay.size(),c=0;
	int cap=-1,capk,capc;
	while(k>=0 && c<=cat.size()) {
		if(k+2*c>V) {
			k--;
			continue;
		}
		if(sumk[k]+sumc[c]>cap) {
			cap=sumk[k]+sumc[c];
			capk=k;
			capc=c;
		}
		c++;
	}
	cout<<cap<<endl;
	for(int i=0;i<capk;i++) {
		cout<<kay[i].second<<endl;
	}
	for(int i=0;i<capc;i++) {
		cout<<cat[i].second<<endl;
	}
}
