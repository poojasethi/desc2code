import operator

count, total = map(int, raw_input().split())
boats = [map(int, raw_input().split()) for _ in range(count)]
boats = [[k+1, x[0], x[1]] for k, x in enumerate(boats)]

kayaks = filter(lambda x: x[1] == 1, boats)
catamarans = filter(lambda x: x[1] == 2, boats)

kayaks = sorted(kayaks, key=operator.itemgetter(2))[::-1]
catamarans = sorted(catamarans, key=operator.itemgetter(2))[::-1]

k = total-len(kayaks)
if k <= 0:
    results = kayaks[:total]
else:
    results = kayaks[:] + [None]*min(k, len(catamarans)*2)

pos = -1, -2
for c in catamarans:
    try:
        p1, p2 = results[pos[0]], results[pos[1]]
    except IndexError:
        break

    if p1 is None:
        p1_v = 0
    else:
        p1_v = p1[2]

    if p2 is None:
        p2_v = 0
    else:
        p2_v = p2[2]

    if c[2] > p1_v + p2_v:
        # substitution
        results[pos[0]] = None
        results[pos[1]] = c
        pos = pos[0]-2, pos[1]-2
    else:
        break

results = filter(lambda x: x, results)
print sum([int(r[2]) for r in results])
print ' '.join([str(r[0]) for r in results])

