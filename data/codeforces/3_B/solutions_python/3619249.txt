n, v = map(int, raw_input().split())
a = [map(int, raw_input().split()) for __ in xrange(n)]
for i in xrange(n):
    a[i][1] = float(a[i][1]) / a[i][0]
    a[i][0], a[i][1] = a[i][1], a[i][0]
    a[i].append(i + 1)

a.sort(reverse=True)

ans = 0
select = [False] * (n+1)
prev_ = -1
for i in xrange(n):
    if v == 0:
        break
    if a[i][1] == 1: prev_ = i
    if v >= a[i][1]:
        v -= a[i][1]
        ans += a[i][0] * a[i][1]
        select[a[i][2]] = True
    else:
        # remain 1 volume, but current type is catamaran
        next_ = i
        while next_ < n and a[next_][1] != 1: next_ += 1
        if next_ == n:
            # no kayak left
            if prev_ == -1 or a[prev_][0] >= a[i][0]*2:
                pass
            else:
                ans += a[i][0]*2 - a[prev_][0]
                select[a[prev_][2]] = False
                select[a[i][2]] = True
        else:
            # has kayak left
            if prev_ == -1 or a[next_][0]+a[prev_][0] > a[i][0]*2:
                ans += a[next_][0]
                select[a[next_][2]] = True
            else:
                ans += a[i][0]*2 - a[prev_][0]
                select[a[prev_][2]] = False
                select[a[i][2]] = True
        break
        
selection = [str(index) for index, item in enumerate(select) if item]
print '{ans}\n{select}'.format(ans=int(ans), select=' '.join(selection))
