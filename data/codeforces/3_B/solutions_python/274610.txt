

stdin_flag=1
if not stdin_flag:
  read_line_index=0
  testcasefilename="test.txt"
  Stestcase=open(testcasefilename).read()
  read_line_datas=Stestcase.split("\n")


def debugs(s):
  if not stdin_flag:
    print ";;;",s

#####################################
######################################

def read_line():
  global read_line_index
  if stdin_flag:
    return raw_input()
  else:
    s=read_line_datas[read_line_index]
    read_line_index+=1
    return s

def answer():
  if stdin_flag:
    return solve()
  else:
    while read_line_proceed():
      solve()
      

def read_line_proceed():
  global read_line_index
  print"##################"
  while 1:
    if read_line_index>= len (read_line_datas ):
      return False
    if read_line_datas[read_line_index]=="%%%":
      read_line_index+=1
      return True
    read_line_index+=1


def readint():
  return int (read_line() )


def readints():
  return map(int, read_line().split(" "))

def reads():
  return read_line()




###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################

def compute(m1,m2,n,v):
  m1=sorted(m1)
  m2=sorted(m2)
  x=[]
  tot=0
  while v:
    flag=aa(m1,m2,v)
    if flag==1:
      p,i=m1.pop()
      x.append(i)
      tot+=p
      v-=1
    elif flag==2:
      p,i=m2.pop()
      x.append(i)
      tot+=p
      v-=2
    else:
      break
  print tot
  print " ".join(map(str,x))


def aa(m1,m2,v):
  if v==1:
    if len(m1):
      return 1
    else:
      return 3
  if len(m1)==0:
    t1=-1
  if len(m1)==1:
    t1=m1[-1][0]
  if len(m1)>1:
    t1=m1[-1][0]+m1[-2][0]
  if len(m2)==0:
    t2=-1
  if len(m2)>0:
    t2=m2[-1][0]
  c=max(t1,t2)
  if c==-1:
    return 3
  if c==t1:
    return 1
  else:
    return 2

def solve():
  n,v=readints()
  m1=[]
  m2=[]
  for i in xrange(n):
    t,p=readints()
    (m1,m2)[t-1].append((p,i+1))
  compute(m1,m2,n,v)

def test():
  pass

test()
answer()
