#!/usr/bin/env python
# -*- coding: UTF-8 -*-
import sys
import time
import itertools
start = time.clock()
n,v=map(int,raw_input().split())
w1,w2,chk,nico,cnt,ans=[],[],[],[],0,0
for i in xrange(n):
#    t,p=map(int,raw_input().split())
    t,p=[int(x) for x in sys.stdin.readline().split()]
#(キャパ,番目)で収納
    if t==1:
        w1.append((p,i+1))
    else:
        w2.append((p/2.0,p,i+1))

#とりあえずsort
w1.sort()
w2.sort()


def kai(ans,chk):
    print ans
    if len(chk):
        print ' '.join(map(str,chk))
    exit()


for i in xrange(n):
    if cnt<=v-2:
        if len(w1)>1 and len(w2)>0:
            if w2[-1][1]>w1[-1][0]+w1[-2][0]:
                ans+=w2[-1][1]
                cnt+=2
                chk.append(w2[-1][2])
                nico.append(w2[-1])
                w2.pop(-1)
            else:
                ans+=w1[-1][0]
                cnt+=1
                chk.append(w1[-1][1])
                w1.pop(-1)
        elif len(w1)>0 and len(w2)>0:
            if w2[-1][1]>w1[-1][0]:
                ans+=w2[-1][1]
                cnt+=2
                chk.append(w2[-1][2])
                nico.append(w2[-1])
                w2.pop(-1)
            else:
                ans+=w1[-1][0]
                cnt+=1
                chk.append(w1[-1][1])
                w1.pop(-1)
        elif len(w1)==0 or len(w2)==0:
            if len(w1)==0:
                ans+=w2[-1][1]
                cnt+=2
                chk.append(w2[-1][2])
                nico.append(w2[-1])
                w2.pop(-1)
            else:
                ans+=w1[-1][0]
                cnt+=1
                chk.append(w1[-1][1])
                w1.pop(-1)
    else:
        if len(w1):
            ans+=w1[-1][0]
            cnt+=1
            chk.append(w1[-1][1])
            w1.pop(-1)
        else:
            break
#リミットぴったりか足すものが無くなって一旦終了
    if cnt==v or len(w1)==len(w2)==0:
        break
#探す必要なければ回答する
if cnt<v or len(w1)<1 or len(nico)==0:
    kai(ans,chk)

for j in xrange(len(w1)):
#nicoがなくなるか、nicoと1を入れ替えても増やせなくなってたら終わり
    if len(w1)<2 or len(nico)==0:
        break
    if w1[-1][0]+w1[-2][0]<=nico[-1][1]:
        break
    if w1[-1][0]+w1[-2][0]>nico[-1][1]:
        ans-=nico[-1][0]
        ans+=w1[-1][0]
        ans+=w1[-2][0]
        chk.remove(nico[-1][2])
        chk.append(w1[-1][1])
        chk.append(w1[-2][1])
        w1.pop(-1); w1.pop(-1)
        nico.pop(-1)
kai(ans,chk)