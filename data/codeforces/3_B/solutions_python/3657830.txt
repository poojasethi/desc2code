from sys import stdin


n, v = map(int, stdin.readline().split())


class boat(object):
    def __init__(self, number, kind, size):
        self.numher = number
        self.kind = kind
        self.size = size
        self.weight = size / kind

    def __str__(self):
        return '#%s: %s %s => %s' % (self.numher, self.kind, int(self.size), self.weight)


boats = [boat(i, int(x), float(y)) for i, (x, y) in enumerate(map(str.split, stdin.readlines()), start=1)]
boats.sort(key=lambda x: x.weight)

selected = []
space = v
sum_size = 0
while space > 1 and boats:
    boat = boats.pop()
    selected.append(boat)
    space -= boat.kind
    sum_size += boat.size

first = None
kandidate = None
while space == 1 and boats:
    boat = boats.pop()
    if not first:
        first = boat
    if boat.kind == 1:
        kandidate = boat
        break

if space == 1:
    if selected:
        for i in range(len(selected) - 1, -1, -1):
            boat = selected[i]
            if boat.kind == 1:
                delta = first.size - boat.size
                if kandidate and kandidate.size > delta:
                    selected.append(kandidate)
                    sum_size += kandidate.size
                    space -= 1
                elif delta > 0:
                    selected.remove(boat)
                    selected.append(first)
                    space -= 1
                    sum_size -= boat.size
                    sum_size += first.size
                break
    elif kandidate:
        selected.append(kandidate)
        sum_size += kandidate.size
        space -= 1

print int(sum_size)
print ' '.join([str(s.numher) for s in selected])