

def main():
	n,m,w=map(int,raw_input().strip().split())
	flowers=map(int,raw_input().strip().split())

	def check_possibility(flowers,heith,m,w):

		l=len(flowers)
		aux=[0 for i in xrange(l)]
		sol=0
		# if heith==8:import ipdb;ipdb.set_trace()
		for i in xrange(l):
			if i:aux[i]+=aux[i-1]
			if flowers[i]+aux[i]<heith:
				score=(heith-(flowers[i]+aux[i]))
				sol+=score
				aux[i]+=score
				if i+w<l:
					aux[i+w]-=score		
		
		return sol<=m
	
	def binary_search(flowers,m,le,ri):
		while le<ri:
			mid=(le+ri+1)/2	
			
			if check_possibility(flowers,mid,m,w):
				le=mid
			else:ri=mid-1
		return le

	sol=binary_search(flowers,m,0,max(flowers)+m)
	print sol








	



main()