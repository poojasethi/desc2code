from __future__ import division
from collections import deque

def can_reach(a, mid, m, w):
    wi = deque()
    wa = deque()
    ws = 0
    for i, x in enumerate(a):
        while wi and wi[0] + w - 1 < i:
            wi.popleft()
            ws -= wa.popleft()
        h = x + ws
        if h < mid:
            diff = mid - h
            if m < diff:
                return False
            m -= diff
            ws += diff
            wi.append(i)
            wa.append(diff)
    return True

n,m,w = map(int, raw_input().split())
a = map(int, raw_input().split())
a_min = min(a)
hl, hu = a_min, a_min + m + 1
while hl + 1 != hu:
    mid = (hl + hu) // 2
    if can_reach(a, mid, m, w):
        hl = mid
    else:
        hu = mid
print hl
            
    
    
