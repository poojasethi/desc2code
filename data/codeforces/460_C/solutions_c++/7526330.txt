#include <iostream>

using namespace std;
const int MAXN = 200010;
const long long INF = 2000000000;
long long a[MAXN];
long long have[MAXN];
int n, m, w;
bool pos(long long x)
{
	long long need = 0, now = 0;
	for (int i = 0; i < n; i++)
	{
		now += have[i];
		have[i] = 0;
		long long tmp = a[i] + now;
		if (tmp < x)
		{
			need += x - tmp;
			have[i + w] -= x - tmp;
			now += x - tmp;
		}
	}
	return need <= m;
		
}
int main()
{
	cin >> n >> m >> w;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	long long lo = 0, hi = INF;
	while (hi - lo > 1)
	{
		long long mid = (lo + hi) / 2;
		if (pos(mid))
			lo = mid;
		else
			hi = mid;
	}
	cout << lo << endl;
}
