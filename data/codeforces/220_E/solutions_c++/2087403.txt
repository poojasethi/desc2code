#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
using namespace std;
const int N = int(1e5)+7;
typedef long long ll;
int sega[N<<2],segb[N<<2];
int num[N],hash[N],M;
ll ins(int seg[],int p,int c,int v){
	p += M;
	ll ans = 0;
	while(p > 1) {
		seg[p] += v;
		if(p % 2 == !c){
			ans += seg[p ^ 1];
		}
		p >>= 1;
	}
	return ans;
}
int main(){
	int n;ll k;
	cin >> n >> k;
	for(int i =0 ; i < n; i++){
		cin >> num[i];
		hash[i] = num[i];
	}
	sort(hash, hash+ n);
	for(int i = 0; i < n; i++)
		num[i] = lower_bound(hash,hash+n,num[i]) - hash+1;
	for(int i = 30; i>=0;i--) if((1<<i) > n) M = 1<<i;
	ll  pl = 0,pr = 0,pz = 0, ans = 0;
	for(int i = n-1; i>=1; i--) pr += ins(segb,num[i],0,1);
	int r = 1;
	for(int l = 0; l < n && r < n; l ++){
		if(r <= l) {
			pz -= ins(sega,num[r],1,0);
			pr -= ins(segb,num[r],0,-1); 
			r++;
		}
		pl += ins(sega,num[l],1,1);
//		cout<<pz<<endl;
		pz += ins(segb,num[l],0,0);
//		cout<<l <<" "<<r<<" "<<pl<<" "<<pr<<" "<<pz<<endl;
		while(r < n && pl+pr+pz > k){
			pz -= ins(sega,num[r],1,0);
			pr -= ins(segb,num[r],0,-1);
			r++;
		}
		ans += n - r;
	}
	cout<< ans << endl;
}
