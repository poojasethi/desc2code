//By momo
#include<iostream>
#include<cstring>
#include<algorithm>
#define N 100010
#define LL long long
using namespace std;

LL na, nb, k, a[N], b[N], i, j;

LL big[N], sml[N];
void I(LL *dat, LL x, LL d, LL v){ while(x > 0 && x <= nb) dat[x] += v, x += d * (x&-x); }
LL   Q(LL *dat, LL x, LL d){ LL ret = 0; while(x > 0 && x <= nb) ret += dat[x], x += d * (x&-x); return ret; }

int main(){
	
	cin >> na >> k;
	for(i = 0; i < na; i++) cin >> a[i], b[i] = a[i];
	nb = unique(b, b + na) - b; sort(b, b + nb);
	for(i = 0; i < na; i++) a[i] = lower_bound(b, b + nb, a[i])-b+1;
	
	LL cnt = 0;
	for(i = na-1; i >= 0; i--){
		cnt += Q(sml, a[i]-1, -1);
		I(sml, a[i], 1, 1);
	} 
	I(sml, a[0],  1, -1);
	I(big, a[0], -1,  1);

	LL ans = 0; i = 0, j = 1;
	while( i < na && j < na ){
		while(i == j || cnt > k && j < na){
			cnt -= Q(big, a[j]+1,  1) + Q(sml, a[j]-1, -1);
			I(sml, a[j++],  1, -1);
		}
		ans += na-j;

		cnt += Q(big, a[++i]+1,  1) + Q(sml, a[i]-1, -1);
		I(big, a[i], -1, 1);

	}

	cout << ans << endl;
}
