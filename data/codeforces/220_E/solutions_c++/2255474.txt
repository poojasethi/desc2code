#include<iostream>
#include<algorithm>

using namespace std;

#define debug(x) cout<<#x<<"="<<x<<endl
#define rep(i,n) for(int i=0;i<(n);++i)
typedef long long ll;

const int maxn = 100010;
int a[maxn], Tmp[maxn];
int L[maxn], R[maxn];
ll X[maxn];
int n, m, k;
int sum(int pos, int C[]){
	int ret = 0;
	for(int i=pos;i>0;i-=i&(-i))
		ret += C[i];
	return ret;
}
void add(int pos,int val,int C[]){
	for(int i=pos;i<=m;i+=i&(-i))
		C[i] += val;
}

int main()
{
	cin >> n >> k;
	for(int i=1;i<=n;++i){
		cin>>a[i];
		Tmp[i] = a[i];
	}
	sort(Tmp+1,Tmp+1+n);
	m = unique(Tmp+1,Tmp+1+n) - Tmp;
	for(int i=1;i<=n;++i)
	{
		a[i] = lower_bound(Tmp+1,Tmp+m,a[i]) - Tmp;
	}
	for(int i=n;i>1;--i)
	{
		X[i] = X[i+1] + sum(a[i]-1,R);
		add(a[i],1,R);
	}
	ll ans = 0, tmp = 0;
	int j = 0;
	for(int i=2;i<=n;++i)
	{
		++j;
		while(j<i){
			ll _t = sum(a[j]-1,R) + sum(m,L) - sum(a[j],L);
			if( _t + tmp + X[i] <= k){
				add(a[j] , 1 , L);
				++j;
				tmp += _t;
			}
			else break;
		}
		--j;
		ans += j;
		tmp -= (sum(m,L) - sum(a[i],L));
		add(a[i],-1,R);
	}
	cout<<ans<<endl;
	return 0;
}
