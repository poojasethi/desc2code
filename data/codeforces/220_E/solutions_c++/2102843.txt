#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <iostream>
#include <cstring>
using namespace std;

#define MAXN 100005


void add(int n, int c[], int x, int a) {
	for (int i=x; i<=n; i+=i&(-i))
		c[i] += a;
}
int sum(int n, int c[], int x) {
	int ret = 0;
	for (int i=x; i>0; i-=i&(-i)) 
		ret += c[i];
	return ret;
}


int n, a[MAXN], s[MAXN], m, c[MAXN], cl[MAXN], cr[MAXN];
long long k, tot, ans;

int main() {
	scanf("%d", &n);
	cin >> k;
	for (int i=0; i<n; ++i) {
		scanf("%d", &a[i]);
		s[i] = a[i];
	}
	sort(s, s+n);
	m = (int) (unique(s, s+n) - s);
	for (int i=0; i<n; ++i) {
		a[i] = 1+(int)(lower_bound(s, s+m, a[i])-s);
	}
	tot = 0;
	memset(c, 0, sizeof(c));
	for (int i=0; i<n; ++i) {
		tot += i-sum(m, c, a[i]);
		add(m, c, a[i], 1);
	}
	memset(cl, 0, sizeof(cl));
	memset(cr, 0, sizeof(cr));
	ans = 0;
	for (int i=0; i<n-1; ++i) {
		add(m, cl, a[i], 1);
	}
	add(m, cr, a[n-1], 1);
	for (int i=n-2, j=n-1; i>=0; ) {
		while (i>0 && tot>k) {
			tot -= sum(m, cr, a[i]-1);
			tot -= i+1-sum(m, cl, a[i]);
			add(m, cl, a[i--], -1);
		}
		if (tot>k) break;
		ans += i+1;
		if (i+1 == j) {
			tot -= sum(m, cr, a[i]-1);
			tot -= i+1-sum(m, cl, a[i]);
			add(m, cl, a[i--], -1);
		}
		tot += i+1 - sum(m, cl, a[j-1]);
		tot += sum(m, cr, a[j-1]-1);
		add(m, cr, a[--j], 1);
	}
	cout << ans << endl;
	return 0;
}