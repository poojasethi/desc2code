#include <iostream>
#include <cstdio>
#include <map>

#define lowbit(i) ((i)&-(i))

using namespace std;

long a[200005]={0};
long b[200005]={0};
long c[200005]={0};
long o=0;

map<long,long> hash;

void ins(long pos,long data,long a[])
{
 long i;
 for(i=pos;i<=o;i+=lowbit(i))
   a[i]+=data;
}

long search(long pos,long a[])
{
 long s=0,i;
 for(i=pos;i;i-=lowbit(i))
   s+=a[i];
 return s;
}

int main()
{
 long n;
 long long k;
 long l,r;
 long i,j;
 long long cur=0;
 long long ans=0;
 
 scanf("%ld%I64d",&n,&k);
 for(i=1;i<=n;i++)
   {
    scanf("%ld",&a[i]);
    hash[a[i]]=1;
   }
 for(map<long,long>::iterator p=hash.begin();p!=hash.end();p++)
   p->second=++o;
 for(i=1;i<=n;i++)
   a[i]=hash[a[i]];
 for(i=n;i>=2;i--)
   {
    cur+=search(a[i]-1,c);
    ins(a[i],1,c);
   }
 cur+=search(a[1]-1,c);
 ins(o-a[1]+1,1,b);
 if(cur<=k)
  {
   printf("%I64d\n",(long long)n*(n-1)/2);
   return 0;
  }
 for(l=1,r=2;l<=n;l++)
   {
    for(;cur>k&&r<=n;r++)
      {
       cur-=search(a[r]-1,c);
       cur-=search(o-a[r],b);
       ins(a[r],-1,c);
      }
    ans+=n-r+1;
    if(l==n)
     break;
    cur+=search(o-a[l+1],b);
    cur+=search(a[l+1]-1,c);
    ins(o-a[l+1]+1,1,b);
   }
 printf("%I64d\n",ans);
 
 return 0;
}
