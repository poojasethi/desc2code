#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 100010
#define int64 long long
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m;
int a[N],b[N],tr[2][N];
int64 K,s,an;
inline void inc(int x,int y,int ty) {
    if (ty) x=n-x+1;
    for (;x<=n;x+=x&-x) tr[ty][x]+=y;
}
inline int cal(int x,int ty) {
    if (ty) x=n-x+1;
    int an=0;
    for (;x;x-=x&-x) an+=tr[ty][x];
    return an;
}
int main() {
    scanf("%d%I64d",&n,&K);
    For(i,1,n) scanf("%d",&a[i]),b[i]=a[i];
    sort(b+1,b+n+1);
    For(i,1,n) a[i]=lower_bound(b+1,b+n+1,a[i])-b;
    j=n+1;
    inc(a[1],1,1);
    for (;j>2;j--) {
        int A=cal(a[j-1]+1,1)+cal(a[j-1]-1,0);
        if (s+A>K) break;
        s+=A;
        inc(a[j-1],1,0);
    }
    an=n-j+1;
    For(i,2,n) {
        if (j==i) inc(a[j],-1,0),j++;
        else s+=cal(a[i]+1,1)+cal(a[i]-1,0);
        inc(a[i],1,1);
        for (;s>K&&j<=n;j++) s-=cal(a[j]+1,1)+cal(a[j]-1,0),inc(a[j],-1,0);
        an+=n-j+1;
    }
    printf("%I64d\n",an);
    return 0;
}