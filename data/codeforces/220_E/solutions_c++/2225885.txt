#include<cstdio>
#include<cstring>
#include<algorithm>
#define fo(i,a,b) for(i=a;i<=b;++i)
typedef long long LL;
using namespace std;
const int mn=101000;
int a[mn],sa[mn];
int s1[mn],s2[mn];
int n,r,L,i,j;
LL m,now,ans;
char ch;
void read(int&v)
{
    for(ch=getchar();ch<'0'||ch>'9';ch=getchar());
    v=ch-48;
    for(ch=getchar();ch>='0'&&ch<='9';ch=getchar())v=v*10+ch-48;
}
void add(int *s,int p,int v)
{
    for(;p<=L;p+=p&(-p))s[p]+=v;
}
int sum(int *s,int p)
{
    int res=0;
    for(;p;p-=p&(-p))res+=s[p];
    return res;
}
void Rpop()
{
    now-=i-sum(s1,a[r])+sum(s2,a[r]-1);
    add(s2,a[r],-1),++r;
}
int main()
{
    scanf("%d%I64d",&n,&m);
    fo(i,1,n)read(a[i]);
    memcpy(sa+1,a+1,(n+1)*4);
    sort(sa+1,sa+1+n),L=unique(sa+1,sa+1+n)-sa-1;
    r=1;
    fo(i,1,n)
    {
        a[i]=lower_bound(sa+1,sa+1+L,a[i])-sa;
        now+=(i-1)-sum(s2,a[i]),add(s2,a[i],1);
    }
    i=0;
    Rpop();
    fo(i,1,n-1)
    {
        now+=i-1-sum(s1,a[i])+sum(s2,a[i]-1);
        add(s1,a[i],1);
        while(r<=n&&now>m)Rpop();
        if(r>n)break;
        ans+=n-r+1;
        if(r==i+1)Rpop();
    }
    printf("%I64d\n",ans);
    return 0;
}