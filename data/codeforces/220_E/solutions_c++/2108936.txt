#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<map>
#include<queue>
#include<string>
#include<set>
#define clr(a,b) memset(a,b,sizeof(a));
#define ll long long
using namespace std;
const ll inf=100000000000000000LL;

int n,i,j;
ll k,a[200000],b[200000];
map<ll,int> mp;
int idx[200000],idx1[200000];

int lb(int x){return x&(-x);}
int query(int l,int idx[]){
    if(l==0) return 0;
    ll ans=0;
    for(int i=l;i>0;i-=lb(i)) ans+=idx[i];
    return ans;
}
void insert(int l,int w,int idx[]){
    for(int i=l;i<=n;i+=lb(i)) idx[i]+=w;
}
int main(){
//    freopen("e:\\in.txt","r",stdin);
    scanf("%d%I64d",&n,&k);
    for(i=1;i<=n;i++){
        scanf("%I64d",&a[i]);
        b[i]=a[i];
    }
    int l=0;
    sort(b+1,b+n+1);
    for(i=1;i<=n;i++){
        if(b[i]!=b[i-1]) mp.insert(make_pair(b[i],++l));
    }
    for(i=1;i<=n;i++) a[i]=mp[a[i]];
    ll sum=0;
    ll ans=0;
    for(j=n;j>=1;j--){
        insert(a[j],1,idx);
        sum+=query(a[j]-1,idx);
    }
    j=1;
    for(i=1;i<=n;i++){
        sum+=query(a[i]-1,idx)+(i-1)-query(a[i],idx1);
        insert(a[i],1,idx1);
        while(j<=n){
            if(sum<=k) break;
            sum-=(i-query(a[j],idx1)+query(a[j]-1,idx));
            insert(a[j],-1,idx);
            j++;
        }
        ans+=min(n-j+1,n-i);
    }
    printf("%I64d\n",ans);
    return 0;
}
