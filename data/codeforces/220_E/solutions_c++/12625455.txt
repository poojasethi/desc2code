#include <cstdio>
#include <cstdlib>
typedef long long int ll;
const int sz = 100200, tn = 1073741824;
int l[sz * 66], r[sz * 66], s[sz * 66], N;

int ins(int x, int a, int S){
     int m = ++N; s[m] = s[x] + 1;
     if (S == 1) return m;
     else if (a < (S >> 1)){l[m] = ins(l[x], a, S >> 1); r[m] = r[x];}
     else {l[m] = l[x]; r[m] = ins(r[x], a - (S >> 1), S >> 1);}
     return m;
}

int sum(int x, int a, int S){
     if (S == 1) return s[x];
     else if (a < (S >> 1)) return sum(l[x], a, S >> 1);
     else return sum(r[x], a - (S >> 1), S >> 1) + s[l[x]];
}

int n, a[sz], rtp[sz], rts[sz];
ll k, inv = 0, ans = 0;
int L, R;
void delr(){
     inv -= (L - sum(rtp[L], a[R], tn)); inv -= sum(rts[R + 1], a[R] - 1, tn);
     R++;
}
void inslplus1(){
     inv += (L - sum(rtp[L], a[L + 1], tn)); inv += sum(rts[R], a[L + 1] - 1, tn);
     L++;
}

int main(){
     int i;
     scanf("%d %I64d", &n, &k);
     for (i = 1; i <= n; i++) scanf("%d", &a[i]);
     for (i = 1; i <= n; i++) rtp[i] = ins(rtp[i - 1], a[i], tn);
     for (i = n; i; i--) rts[i] = ins(rts[i + 1], a[i], tn);
     inv = 0;
     for (i = 1; i <= n; i++) inv += sum(rts[i + 1], a[i] - 1, tn);
     for (L = 1, R = 2; L <= n; ){
      while (R <= n && inv > k) delr();
      ans += n - R + 1;
      if (R == L + 1) delr();
      inslplus1();
     }
     printf("%I64d", ans);
     return 0;
}
