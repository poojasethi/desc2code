#include<bits/stdc++.h>

using namespace std;

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define mod ((i	nt)1e9+7)
#define inf mod
#define sol (root*2)
#define sag (root*2+1)
#define orta ((bas+son)/2)
#define ll long long
#define N 300005
#define endl '\n'

int n,i,l,r;
int A[100005],F[300005],F2[300005],E[100005];

ll k,sum,t,t2,ans;

vector<int> B;

map<int,int> M;

int query(int x){
	int ans=0;
	for( ; x ; x-=x&-x)
		ans+=F[x];
	return ans;
}

int update(int x){
	for( ; x and x<N ; x+=x&-x)
		F[x]++;
}

int query2(int x){
	int ans=0;
	for( ; x and x<N ; x+=x&-x)
		ans+=F2[x];
	return ans;
}

int update2(int x,int v){
	for( ; x ; x-=x&-x)
		F2[x]+=v;
}

main(){

	cin>>n>>k;

	for(i=1 ; i<=n ; i++){
		scanf("%d",A+i);
		B.pb(A[i]);
	}
	
	sort(B.begin(),B.end());
	
	B.resize(unique(B.begin(),B.end())-B.begin());

	for(i=0 ; i<B.size() ; i++)
		M[B[i]]=i+1;

	for(i=1 ; i<=n ; i++)
		A[i]=M[A[i]];

	for(i=n ; i>=1 ; i--){
		E[i]=query(A[i]-1);
		update(A[i]);
		sum+=E[i];
	}

	for(i=1 ; i<=n ; i++){
		E[i]+=query2(A[i]+1);
		update2(A[i],1);
	}

	memset(F2,0,sizeof F2);

	r=2;

	for(l=1 ; l<n ; l++){
		while(r<=n){
			if(l!=r and sum-t2+t<=k){
				ans+=n-r+1;
				break;
			}
			r++;
			t+=query2(A[r-1]+1);
			t2+=E[r-1];
			update2(A[r-1],1);
		}
		update2(A[l+1],-1);
		t-=query2(1)-query2(A[l+1]);
		t2-=E[l+1];
	}

	cout<<ans;

}
