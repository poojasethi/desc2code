#include <bits/stdc++.h>
using namespace std;
const int maxn = 1e5+10;
int n,a[maxn],g[2][maxn],p;
long long k,now,ans;
pair<int,int> tmp[maxn];
void init(){
    for (int i=1; i<=n; i++) tmp[i]=make_pair(a[i],i);
    sort(tmp+1,tmp+n+1);int m=0;
    tmp[0].first=tmp[1].first-1;
    for (int i=1; i<=n; i++){
        if (tmp[i].first!=tmp[i-1].first) m++;
        a[tmp[i].second]=m;
    }
}
void update(int id,int x,int y){
    while (x<=n){
        g[id][x]+=y;
        x+=x&-x;
    }
}
int get(int id,int x){
    int ans=0;
    while (x){
        ans+=g[id][x];
        x-=x&-x;
    }
    return ans;
}
int main(){
    scanf("%d%I64d",&n,&k);
    for (int i=1; i<=n; i++) scanf("%d",&a[i]);
    init();
    for (int i=n; i>1; i--){
        now+=1LL*get(1,a[i]-1);
        update(1,a[i],1);
    }
    p=2;
    for (int i=1; i<n; i++){
        if (p==i){
            now-=1LL*get(1,a[p]-1);
            now-=1LL*(get(0,n)-get(0,a[p]));
            update(1,a[p],-1);
            p++;
        }
        now+=1LL*(get(0,n)-get(0,a[i]));
        now+=1LL*get(1,a[i]-1);
        update(0,a[i],1);
        while (p<=n&&now>k){
            now-=1LL*get(1,a[p]-1);
            now-=1LL*(get(0,n)-get(0,a[p]));
            update(1,a[p],-1);
            p++;
        }
        ans+=1LL*(n-p+1);
    }
    cout<<ans;
}
