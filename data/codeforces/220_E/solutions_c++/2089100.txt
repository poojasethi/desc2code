#include<iostream>
#include<cstring>
#include<cstdio>
#include<algorithm>
#include<set>
using namespace std;
#define ll long long
const int nMax = 100010;
int a[nMax],b[nMax],s[nMax*3],s2[nMax*3];

void Modify(int* c,int x,int y)
{
	while(x<nMax*3-1){
		c[x]+=y;
		x+=x&(-x);
	}
}

int getsum(int* c,int x)
{
	int res=0;
	while(x){
		res+=c[x];
		x-=x&(-x);
	}
	return res;
}

int main()
{
	ll sum,k,ans;
	int n,m,ta,he,i;
	while(scanf("%d%I64d",&n,&k)!=EOF){
		m=0;	sum=0;	ans=0;
		memset(s,0,sizeof(s));
		memset(s2,0,sizeof(s2));
		for(i=1;i<=n;i++)	scanf("%d",a+i),b[m++]=a[i];
		sort(b,b+m);
		m=unique(b,b+m)-b;
		for(i=1;i<=n;i++)	a[i]=lower_bound(b,b+m,a[i])-b+1;
		for(i=1;i<=n;i++){
			Modify(s,a[i],1);
			sum+=i-getsum(s,a[i]);
		}
//		printf("sum=%d\n",sum);
		if(sum<=k)	{printf("%I64d\n",(ll)n*(n-1)/2);	continue;}
		he=n-1,ta=n;
		Modify(s,a[n],-1);
		Modify(s2,a[n],1);
		while(1){
			while(sum>k && he){
				sum-=he-getsum(s,a[he]);
				sum-=getsum(s2,a[he]-1);
				Modify(s,a[he],-1);	he--;
			}
			if(!he)	break;
			ans+=he;	//printf("l=%d\t",he);
			ta--;
			sum+=he-getsum(s,a[ta]);
			sum+=getsum(s2,a[ta]-1);
			Modify(s2,a[ta],1);
	//		printf("sum=%d\n",sum);
		}
		printf("%I64d\n",ans);
	}
	return 0;
}
