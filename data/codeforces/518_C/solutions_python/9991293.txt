
from sys import stdin
import sys
from fractions import gcd
import string

from collections import defaultdict
d = defaultdict(int)

n,m,k = map(int, stdin.readline().rstrip().split())
order = map(int, stdin.readline().rstrip().split())
launched = map(int, stdin.readline().rstrip().split())

d = {}
for index, i in enumerate(order):
	d[i] = index

gs = 0
for i in launched:
	idx = d[i]
	gs += (idx // k) + 1
	if idx > 0:
		prev = order[d[i] - 1]
		d[prev] = d[prev] + 1
		d[i] = d[i] - 1
		order[idx], order[idx-1] = order[idx-1], order[idx]

print gs
		
