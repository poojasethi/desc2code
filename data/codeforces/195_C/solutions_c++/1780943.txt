#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>

using namespace std;

class Node{
	public:
		Node(){ parent = NULL; }
		Node(Node* n){ parent = n; }
		Node* parent;
		string type, message;
};

int main(){
	int n;
	Node *root, *node, *t_node;
	string t_type;
	root = new Node;
	root->message = "Unhandled Exception";
	node = root;
	
	cin >> n;
	for(int i = 0; i <= n; i++){
		string token; 
		char line[100], *tp;
		gets(line);
	
		bool in_quot = false;
		for(int j = 0; j < strlen(line); j++){
			if(line[j] == '"'){
				in_quot = !in_quot;
				line[j] = '@';
			}
			if(line[j] == '(' || line[j] == ')' || line[j] == ',' 
				|| (!in_quot && line[j] == ' ')){
					line[j] = '@';
			}
		}
		
		tp = strtok(line, "@");
		if(tp != NULL){
			token = tp;
			
			if(token == "try"){
				Node* n = new Node(node);
				node = n;
			}else if(token == "catch"){
				tp = strtok(NULL, "@");
				token = tp;
				node->type = token;
				tp = strtok(NULL, "@");
				token = tp;
				node->message = token;
				node = node->parent;
			}else if(token == "throw"){
				t_node = node;
				tp = strtok(NULL, "@");
				token = tp;	
				t_type = token;
			}
		}
	}
		
	while(1){
		if(t_node == root || t_node->type == t_type){
		cout << t_node->message << endl;
			return 0;
		}else t_node = t_node->parent;
	}
	return 0;
}