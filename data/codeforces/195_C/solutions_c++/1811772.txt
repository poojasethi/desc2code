#include <iostream>
#include <string>
#include <stack>
#include <cctype> 
using namespace std;
struct Node{
	Node():p(NULL){
	};
	Node* p;
	pair<string, string> c;
};

int main (void)
{
	int N;
	cin >> N;
	Node* tnode = NULL;
	cin.ignore();
	stack<Node*> s;
	string str;

	for(int i = 0; i < N; ++i){
		getline(cin,str);
		int j = 0;
		while (j < str.size() && !(str[j] == 't' || str[j] == 'c')) j++;

		if (j < str.size()){
			if (str[j] == 't'){
				Node* n = new Node;
				n->p = (s.empty() ? NULL : s.top());

				if (str[j+1] == 'r'){
					s.push(n);
				}else{
					tnode = n;
					j += 5; //Skip throw
					while (!isalpha(str[j]) ) j++;
					while (isalpha(str[j])) tnode->c.first += str[j++];
				}
			}else{
				//catch
				j += 5;
				Node* n = s.top();
				s.pop();
				while (!isalpha(str[j]) ) j++;
				while (isalpha(str[j])) n->c.first += str[j++];
				while (!(str[j]=='"')) j++;
				j++;
				while (!(str[j]=='"')) n->c.second += str[j++];

			}
		}
	}
	Node* pt = tnode->p;
	string res = "Unhandled Exception";
	while(pt){
		if (pt->c.first == tnode->c.first){
			res = pt->c.second;
			break;
		}
		pt = pt->p;
	}

	cout << res << endl;
}
