//By Lin
#include<cstdio>
#include<cstring>

using namespace std; 

int		k,len,n;
char	type[50],ss[50],s[50];
bool	ans; 

void	get_type(char type[], char s[] ) 
{
	int i = 0; 
	while ( s[i] != '(' ) i++; 
	i++; 
	while ( s[i] == ' ' ) i++; 
	int len = 0; 
	while ( s[i]>='a' && s[i] <= 'z' || s[i] >='A' && s[i] <= 'Z' ) {
		type[len++] = s[i]; 
		i++; 
	}
	type[len] = 0; 
}

int		deal(char s[] ) 
{
	int i = 0; 
	while ( s[i] == ' ' ) i++; 
	if ( s[i] == 't' && s[i+1] == 'r' ) return 0; 
	if ( s[i] == 't' && s[i+1] == 'h' ) {
		get_type( type , s );
		return 1; 
	}
	if ( s[i] == 'c' ) return 2;
	return -1; 
}

int	dfs(int depth)
{
	int k = -1; 
	while ( true ) 
	{
		if ( n-- == 0 ) return -1; 
		gets(s);
		int g = deal(s);
//		printf("%s k %d g %d %d\n" , s , k, g ,n);
		if ( g  == 0 ) 	
		{
			if ( dfs( depth+1 ) == 1) k = 1;
		}
		else if ( g == 1 ) {
//			printf("in\n");
			k = 1; 
		}
		else if ( g == 2 ) {
			if ( k == 1 ){
				get_type( ss , s );
				if ( strcmp( ss , type ) == 0 ) {
					ans = true; 
					int i = 0; 
					while ( s[i] != '"' ) i++;
					i++; 
					while ( s[i] != '"' ) {
						printf("%c", s[i] ); 
						i++; 
					}
					printf("\n");
					return 2; 
				}
			}
			return k; 
		}
	}
	return k; 
}

int		main()
{
	scanf("%d", &n );
	gets(s);
	ans = false; 
	dfs( 0 );
	if ( !ans ) printf("Unhandled Exception\n");
	return 0; 
}

