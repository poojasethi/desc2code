class END(Exception):
    pass

n = int(raw_input())

count = 0
exceptions = {}
throws = {}
for i in range(0, n):
    l = raw_input().rstrip().lstrip()
    if len(l) < 3:
        continue
    if l[:3] == 'try':
        count += 1
        if not exceptions.has_key(count):
            exceptions[count] = []
        exceptions[count].append([])
        exceptions[count][-1].append(i)
    elif l[:3] == 'cat':
        exceptions[count][-1].append(i)
        argument = l[l.find('(') + 1: l.find(')')].split(',')
        for j in argument:
            exceptions[count][-1].append(j.rstrip().lstrip())
        count -= 1
    elif l[:3] == 'thr':
        if not throws.has_key(count):
            throws[count] = []
        exception = l[l.find('(') + 1: l.find(')')].rstrip().lstrip()
        throws[count].append([i, exception])

for i, j in throws.items():
    for k in j:
        try:
            for l in range(i, 0, -1):
                for m in exceptions[l]:
                    if m[0] <= k[0] and k[0] <= m[1]:
                        if k[1] == m[2]:
                            print eval(m[3])
                            raise END
        except END:
            continue
        else:
            print 'Unhandled Exception'
