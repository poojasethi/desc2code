import re
n = int(raw_input())
level = 0
level_throw = -1
throw_exception = ""
expr = re.compile("[a-zA-Z]+")
found = False
throwed = False
new_try = -1

for i in xrange(n):
    cur = raw_input().lstrip()
    #print throwed, new_try, cur, "catch" in cur
    tr = cur.find("try")
    ca = cur.find("catch")
    th = cur.find("throw")
    if tr == 0:
        if throwed:
            new_try += 1
        else:
            level += 1
    elif ca == 0:
        level -= 1
        if new_try == 0:
            level_throw -= 1
            pos = cur.find("catch")
            exception = expr.search(cur[pos + 5:]).group(0)
            #print exception, throw_exception 
            if exception == throw_exception:
                found = True
                print re.search('".+"' ,cur[pos + 5:]).group(0)[1:-1]
                break
        else:
            new_try -= 1        
    elif th == 0:
        level_throw = level
        new_try = 0
        throwed = True
        pos = cur.find("throw")
        throw_exception = expr.search(cur[pos + 5:]).group(0)
        
if not found:
    print "Unhandled Exception"