#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<cstring>
#define pb push_back
#define rep(i,n) for(int i=0;i<n;++i)
#define M 210
using namespace std;

vector<int> g[M];
int n,k,o,c[M];
bool v[M];

int dfs(int now)
{
	for(;;)
	{
		bool change=false;
		rep(i,n)
			if(!v[i] && c[i]==now)
			{
				bool ok=true;
				rep(j,g[i].size())
				{
					int p=g[i][j];
					if(!v[p]) ok=false;
				}
				if(ok)
				{
					v[i]=true;
					change=true;
				}
			}
		if(!change) break;
	}
	if(count(v,v+n,true)==n) return 0;
	return 1+dfs((now+1) % 3);
}

int main()
{
    scanf("%d",&n);
	rep(i,n) scanf("%d",&c[i]),c[i]--;
	rep(i,n)
	{
		g[i].clear();
		scanf("%d",&k);
		rep(j,k)
		{
			scanf("%d",&o),--o;
			g[i].pb(o);
		}
	}
	int ans=~0U>>2;
	rep(i,3)
	{
		memset(v,0,sizeof v);
		ans=min(ans,dfs(i)+n);
	}
	cout<<ans<<endl;
	return 0;
}
