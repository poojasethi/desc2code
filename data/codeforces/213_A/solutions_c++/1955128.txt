#include<cstdio>
#include<vector>
#include<algorithm>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

const int INF=1<<29;

int n,c[200];
vector<int> G[200];

bool vis[200];
int dfs(int now){
	while(1){
		bool changed=false;
		rep(u,n) if(!vis[u] && c[u]==now) {
			bool ok=true;
			rep(i,G[u].size()){
				int v=G[u][i];
				if(!vis[v]) ok=false;
			}
			if(ok){
				vis[u]=true;
				changed=true;
			}
		}
		if(!changed) break;
	}

	if(count(vis,vis+n,true)==n) return 0;

	return 1+dfs((now+1)%3);
}

int main(){
	scanf("%d",&n);
	rep(u,n) scanf("%d",c+u), c[u]--;
	rep(u,n){
		G[u].clear();
		int m; scanf("%d",&m);
		rep(i,m){
			int v; scanf("%d",&v); v--;
			G[u].push_back(v);
		}
	}

	int ans=INF;
	rep(start,3){
		rep(u,n) vis[u]=false;
		ans=min(ans,dfs(start)+n);
	}
	printf("%d\n",ans);

	return 0;
}
