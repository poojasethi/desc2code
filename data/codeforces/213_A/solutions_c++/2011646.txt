#include <iostream>
#include <climits>
#include <cstdio>
#include <cstring>
#include <queue>
#define FOR(i, n) for (int i = 0; i < (n); ++i)
#define TR(it, c) for (typeof((c).begin()) it = (c).begin(); it != (c).end(); ++it)
#define MAX 200
using namespace std;

int n, c[MAX], deg[MAX], tdeg[MAX], best = INT_MAX;
vector<int> g[MAX];

int greedy(int k) {
	int hours = 0;
	queue<int> q[3];
	FOR (i, n) {
		tdeg[i] = deg[i];
		if (!tdeg[i]) q[c[i]].push(i);
	}
	for (int removed = 0; removed < n; ++hours) {
		if (q[k].empty()) k = (k + 1) % 3;
		else {
			int x = q[k].front(); q[k].pop();
			TR (it, g[x])
				if (!--tdeg[*it]) q[c[*it]].push(*it);
			++removed;
		}
	}
	return hours;
}

int main() {
	scanf("%d", &n);
	FOR (i, n) scanf("%d", &c[i]), --c[i];
	FOR (i, n) {
		scanf("%d", &deg[i]);
		FOR (j, deg[i]) {
			int tx;
			scanf("%d", &tx), --tx;
			g[tx].push_back(i);
		}
	}
	FOR (i, 3) best = min(best, greedy(i));
	printf("%d\n", best);
	return 0;
}
