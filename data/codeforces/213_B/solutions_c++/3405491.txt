#include <cstdio>
#include <iostream>
#include <cstring>

using namespace std;

const int MOD = 1e9+7;

int N;
int ar[123];

long long res;
long long dp[11][123];
long long dn[123][123];

long long comb(int n,int r){
	
	if(!r || n==r) return 1;
	if(r==1 || r==n-1) return n;
	if(dn[n][r]) return dn[n][r];
	return dn[n][r]=(comb(n-1,r)+comb(n-1,r-1))%MOD;
}

long long f(int k,int rem){
	
	long long &rev=dp[k][rem];
	
	if(rev!=-1) return rev;
	
	if(k==10) return rem==0;
	
	rev=0;
	
	for(int i=ar[k];i<=rem-!k;i++) rev=(rev+f(k+1,rem-i)*comb(rem-!k,i))%MOD;

	return rev;
}

int main(){
	
	ios_base::sync_with_stdio(false);
	
	memset(dp,-1,sizeof dp);
	
	cin >> N ;
	
	for(int i=0;i<10;i++) cin >> ar[i] ;
	
	for(int i=1;i<=N;i++) res=(res+f(0,i))%MOD;

	cout << res << endl ;
	
	return 0;
}
