#include <algorithm>
#include <iostream>
using namespace std;
const int M=1e9+7;
long long C[110][110], K[2][110];
int N, A[10];
int main() {
    for (int i=0; i<110; ++i)
	for (int j=0; j<=i; ++j)
	    C[i][j] = (!j||i==j) ? 1 : ((C[i-1][j-1] + C[i-1][j])%M);
    while (cin >> N) {
	for (int i=0; i<10; ++i) cin >> A[i];
	fill(K[0], K[0]+N+1, 0);
	K[0][0]=1;
	for (int i=0; i<10; ++i) {
	    fill(K[(i+1)%2], K[(i+1)%2]+N+1, 0);
	    for (int j=0; j<=N; ++j) {
		int p = K[i%2][j];
		if (p==0) continue;
		for (int k=A[9-i]; j+k<=N; ++k) {
		    bool z = i==9 && k;
		    K[(i+1)%2][j+k] += p*C[j-z+k][k];
		    K[(i+1)%2][j+k] %= M;
		}
	    }
	}
	long long sum = 0;
	for (int i=1; i<=N; ++i) sum = (sum + K[10%2][i])%M;
	cout << sum << endl;
    }
}
