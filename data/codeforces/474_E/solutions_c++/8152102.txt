#include<stdio.h>
#include<algorithm>
using namespace std;
const int maxn=100050;
int n,d,ans1,ans2[maxn],anss=0;
long long h[maxn],h0[maxn];
int f[maxn],fr[maxn];
int tr[2][maxn];
void add(int x,int k,int c)
{
	while(x<=n)
	{
		if(f[k]>f[tr[c][x]])
			tr[c][x]=k;
		x+=x&-x;
	}
}
int query(int x,int c)
{
	int s=0;
	while(x)
	{
		if(f[s]<f[tr[c][x]])
			s=tr[c][x];
		x-=x&-x;
	}
	return s;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("data.in","r",stdin);
	//freopen("data.out","w",stdout);
#endif
	int i,j;
	scanf("%d%d",&n,&d);
	for(i=1;i<=n;i++)
		scanf("%I64d",&h[i]),h0[i]=h[i];
	sort(h0+1,h0+1+n);
	for(i=1;i<=n;i++)
	{
		int p=lower_bound(h0+1,h0+1+n,h[i])-h0,p1=upper_bound(h0+1,h0+1+n,h[i]-d)-1-h0,p2=lower_bound(h0+1,h0+1+n,h[i]+d)-h0;
		//printf("%d %d %d\n",p,p1,p2);
		int fr1=query(p1,0),fr2=query(n-p2+1,1);
		if(!f[fr1]&&!f[fr2]) f[i]=1,fr[i]=0;
		else if(f[fr1]>f[fr2])
			f[i]=f[fr1]+1,fr[i]=fr1;
		else 
			f[i]=f[fr2]+1,fr[i]=fr2;
		add(p,i,0);
		add(n-p+1,i,1);
		if(f[i]>f[ans1]) ans1=i;
		//printf("%d\n",f[i]);
	}
	for(i=ans1;i;i=fr[i])
		ans2[anss++]=i;
	printf("%d\n",f[ans1]);
	for(i=anss-1;i>=0;i--)
		printf("%d ",ans2[i]);
	return 0;
}
