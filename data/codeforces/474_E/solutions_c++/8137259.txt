#include<cstdio>
#include<algorithm>
#define N 100005
#define L(x) (x&-x)
using namespace std;
long long a[N],b[N],d;
int pre[N],F[N],n,i,L,R,id,t1,t2,num,ans;
struct binary_array
{
  int f[N],id[N];
  inline void add(int x,int s){for (;x<=n;x+=L(x)) if (s>f[x]) f[x]=s,id[x]=i;}
  inline int ask(int x)
  {
    int s=0,num;
    for (;x;x-=L(x)) if (f[x]>s) s=f[x],num=id[x];
    return num;
  }
}A,B;
void P(int x){if (pre[x]) P(pre[x]);printf("%d ",x);}
int main()
{
  scanf("%d%I64d",&n,&d);
  for (i=1;i<=n;i++)
    scanf("%I64d",&a[i]),b[i]=a[i];
  sort(b+1,b+n+1);
  for (i=1;i<=n;i++)
  {
    id=lower_bound(b+1,b+n+1,a[i])-b;
    L=upper_bound(b+1,b+n+1,a[i]-d)-(b+1);
    R=lower_bound(b+1,b+n+1,a[i]+d)-b;
    t1=A.ask(L);t2=B.ask(n-R+1);
    if (F[t1]>F[t2]) F[i]=F[t1]+1,pre[i]=t1;else F[i]=F[t2]+1,pre[i]=t2;
    A.add(id,F[i]);B.add(n-id+1,F[i]);
  }
  for (i=1;i<=n;i++) 
    if (F[i]>ans) ans=F[i],num=i;
  printf("%d\n",ans);P(num);
  return 0;
}
