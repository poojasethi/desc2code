import math

def onetry(p, tr):
  m = 0
  for k in p.keys():
    nm = int(math.ceil((p[k]+0.)/tr[k]))
    if nm > m:
      m = nm
      mk = k
  return (m, mk)

if __name__=="__main__":
  s = raw_input()
  n = int(raw_input())
  p = {}

  for i in range(len(s)):
    try:
      p[s[i]] += 1
    except:
      p[s[i]] = 1

  if len(p) > n:
    print -1
    exit()

  tr = {}
  for k in p.keys():
    tr[k]=1

  for i in range(n-len(tr)):
    tr[onetry(p, tr)[1]]+=1

  rs=""
  for k in tr.keys():
    rs+=k*tr[k]

  print onetry(p,tr)[0]
  print rs