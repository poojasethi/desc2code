#include<iostream>
#include<vector>
#include<cmath>
#include<map>
#include<vector>
#include<cstring>
#include<cstdio>
#include<list>
#include<algorithm>
using namespace std;
typedef long long Long;

char mmap[512][512];

typedef pair<int,int> PII;
int MAP[512][2][26];

int N,M;
int memo[510][27][27][2];
int choi[510][27][27][2];
int dp(int row,int pf = -1,int ps=-1,int pos=0)
{
    if(row == N)return 0;
    if(memo[row][pf+1][ps+1][pos]!=-1)return memo[row][pf+1][ps+1][pos];
    int w = 100000000;
    
    for(int i = 0; i < 26; ++i)
    {
        if(pos == 1 && (i == pf || i == ps))continue;
        if(pos == 0 && i==pf)continue;
        int cost = 0;
        if(pos==0)cost += ((M+1)/2) - MAP[row][0][i];
        if(pos==1)cost += ((M)/2) - MAP[row][1][i];
        int t = (pos==0) ? (dp(row,i,ps,1)+cost) : (dp(row+1,pf,i,0)+cost);
        if(t < w)
        {
            choi[row][pf+1][ps+1][pos] = i;
            w = t;
        }
    }
    return memo[row][pf+1][ps+1][pos] = w;
}

int main()
{
    cin >> N >> M;
    for(int i = 0; i < N; ++i)
    {
        cin >> mmap[i];
        for(int j = 0; j < M; ++j)
            MAP[i][j&1][mmap[i][j]-'a']++;
    }
    memset(memo,-1,sizeof(memo));
    printf("%d\n",dp(0));
    int row = 0 , f = -1 , s = -1;
    while(row < N)
    {
        int ni = choi[row][f+1][s+1][0];
        int nj = choi[row][ni+1][s+1][1];
        for(int k = 0; k < M; ++k)
            printf("%c",((k&1) ? (char)(nj+'a') : (char)(ni+'a')));
        puts("");
        f = ni;
        s = nj;
        row++;
    }
//  cout << clock()/(double)CLOCKS_PER_SEC << endl;
}
