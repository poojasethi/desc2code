#include <vector>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <utility>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <fstream>

using namespace std;

char a[500][503];
int cnt[500][2][26], DP[501][26][26], child[501][26][26];

int main()
{
	int n, m; scanf("%d%d", &n, &m);
	for(int i=0; i<n; i++)
		scanf(" %s", a[i]);
	for(int i=0; i<n; i++)
		for(int j=0; j<m; j++)
			cnt[i][j%2][a[i][j]-'a']++;
	for(int i=n-1; i>=0; i--)
	{
		for(int p1=0; p1<26; p1++)
			for(int p2=0; p2<26; p2++)
				if(p1 != p2)
				{
					DP[i][p1][p2] = 1<<30;
					for(int p=0; p<26; p++)
						if(p != p1 || i == 0)
							for(int q=0; q<26; q++)
								if((q != p2 || i == 0) && q != p)
								{
									int pc = (m+1)/2 - cnt[i][0][p], qc = m/2 - cnt[i][1][q];
									if(pc + qc + DP[i+1][p][q] < DP[i][p1][p2])
										DP[i][p1][p2] = pc + qc + DP[i+1][p][q], child[i][p1][p2] = p + 26*q;
								}
					if(i == 0)
						goto here;
				}
	}
	here:;
	int curr = 0, mask = child[curr][0][1];
	while(curr < n)
	{
		int pp = mask % 26, qq = mask / 26;
		for(int col=0; col<m; col++)
			if(col&1)
				a[curr][col] = qq + 'a';
			else
				a[curr][col] = pp + 'a';
		mask = child[++curr][pp][qq];
	}
	printf("%d\n", DP[0][0][1]);
	for(int i=0; i<n; i++)
		printf("%s\n", a[i]);
	return 0;
}