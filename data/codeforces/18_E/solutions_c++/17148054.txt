#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdio>
using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define INF (1<<29)

int H,W;
char board[510][510],ans[510][510];
int even[30],odd[30],cost[510][30][30];
int dp[510][30][30];
pair <int, int> prev[510][30][30];

void calc_cost(int row){
    int i,j;
    REP(i,26) even[i] = odd[i] = 0;
    REP(i,W) REP(j,26) if(board[row][i] != 'a' + j) if(i%2 == 0) even[j]++; else odd[j]++;
    REP(i,26) REP(j,26) cost[row][i][j] = even[i] + odd[j];
}

int main(void){
    //freopen("E.in", "r", stdin);
    int i,j,a,b,c,d;
    
    scanf("%d%d",&H,&W);
    REP(i,H) scanf("%s",board[i]);
    
    REP(i,H) calc_cost(i);
    
    REP(i,H+1) REP(a,26) REP(b,26) dp[i][a][b] = INF;
    REP(a,26) REP(b,26) if(a != b) dp[0][a][b] = 0;
    
    REP(i,H) REP(a,26) REP(b,26) if(a != b){
        REP(c,26) REP(d,26) if(c!=d && c != a && d != b) if(dp[i][c][d] + cost[i][a][b] < dp[i+1][a][b]){
            dp[i+1][a][b] = dp[i][c][d] + cost[i][a][b];
            prev[i+1][a][b] = make_pair(c,d);
        }
    }
    
    a = 0; b = 1;
    REP(i,26) REP(j,26) if(dp[H][i][j] < dp[H][a][b]) {a = i; b = j;}
    
    printf("%d\n",dp[H][a][b]);
    
    for(i=H-1;i>=0;i--){
        REP(j,W) if(j%2 == 0) ans[i][j] = 'a' + a; else ans[i][j] = 'a' + b;
        c = prev[i+1][a][b].first; d = prev[i+1][a][b].second;
        a = c; b = d;
    }
    
    REP(i,H) ans[i][W] = '\0';
    REP(i,H) printf("%s\n",ans[i]);
    
    return 0;
}
	  	 	 	   	 	  					   			 		