#include <cstdio>
#include <cstring>
#include <cctype>
#include <algorithm>
#include <iostream>
using namespace std;

const int N = 505;

int num[505][26][26], dp[505][26][26];
int grid[505][505], m;
pair<int, int> pre[505][26][26];

void print(int n, int p, int q) {
    if (n < 0) return ;
    print(n - 1, pre[n][p][q].first, pre[n][p][q].second);
    for (int i = 0; i < m; ++i) 
	if (i & 1) putchar(q + 'a');
	else putchar(p + 'a');
    puts("");
}

int main() {
    int n;
    scanf("%d%d", &n, &m);
    for (int i = 0; i < n; ++i)
	for (int j = 0; j < m; ++j) {
	    int &ch = grid[i][j];
	    while (ch = getchar(), !islower(ch));
	    ch = ch - 'a';
	}
    int t[2];
    for (int i = 0; i < n; ++i)
	for (int j = 0; j < m; ++j)
	    for (t[0] = 0; t[0] < 26; ++t[0])
		for (t[1] = 0; t[1] < 26; ++t[1]) 
		    if (t[0] != t[1])
			num[i][t[0]][t[1]] += (t[j & 1] != grid[i][j]);
    memset(dp, 63, sizeof(dp));
    for (int k = 0; k < 26; ++k)
	for (int l = 0; l < 26; ++l)
	    if (k != l) dp[0][k][l] = num[0][k][l];
    for (int i = 1; i < n; ++i)
	for (int k = 0; k < 26; ++k)
	    for (int l = 0; l < 26; ++l)
		if (k != l)
		    for (int p = 0; p < 26; ++p)
			for (int q = 0; q < 26; ++q)
			    if (p != k && q != l)
			    if (dp[i][k][l] > dp[i - 1][p][q] + num[i][k][l]) {
				dp[i][k][l] = dp[i - 1][p][q] + num[i][k][l];
				pre[i][k][l] = make_pair(p, q);
			    }
    int ans = 1 << 30, p, q;
    for (int k = 0; k < 26; ++k)
	for (int l = 0; l < 26; ++l)
	    if (ans > dp[n - 1][k][l]) {
		ans = dp[n - 1][k][l];
		p = k;  q = l;
	    }
    printf("%d\n", ans);
    print(n - 1, p, q);
    return 0;
}
