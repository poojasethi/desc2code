#include <stdio.h>
#include <algorithm>
using namespace std;
#define INF 2000000000LL
long long n, m, hotel, rest, dist = INF, ans;
typedef struct sdf {
  long long x, y;
}point;
long long tx,ty;
point lu, ld, ru, rd;
inline long long calc(point a, point b) { return abs(a.x-b.x) + abs(a.y-b.y); }
int main () {
  lu.x = ld.x = ru.y = lu.y = INF;
  ld.y = ru.x = rd.x = rd.y = 0;
  scanf("%I64d%I64d", &n, &n);
  scanf("%I64d", &n);
  for (long long i = 1; i <= n; i++) {
    point t;
    scanf("%I64d%I64d", &t.x, &t.y);
    if (t.x+t.y < lu.x+lu.y) lu = t;
    if (t.y-t.x > ld.y-ld.x) ld = t;
    if (t.x-t.y > ru.x-ru.y) ru = t;
    if (t.x+t.y > rd.x+rd.y) rd = t; 
  }
  scanf("%I64d", &m);
  for (long long i = 1; i <= m; i++) {
    point t;
    scanf("%I64d%I64d", &t.x, &t.y);
    long long temp = max(max(calc(lu, t), calc(ld, t)), max(calc(ru, t), calc(rd, t)));
    if (temp < dist) {
      dist = temp;
      ans = i;
    }
  }
  printf("%I64d\n%I64d", dist, ans);
}