/*
 * task1.cpp
 *
 *  Created on: 10.03.2012
 *      Author: kalhit
 */
#include <stdio.h>
#include <stdlib.h>
#include <memory.h>
#include <set>
struct stud
{
	int id;
	int x;
	stud(int id_, int x_)
		:id(id_), x(x_)
	{}
	bool operator < (const stud& e) const
	{
		if(x != e.x)
			return x < e.x;
		return id < e.id;
	}
};
std::set< stud> set;
int tt[100111];
int main ()
{
	int n, m;

	scanf("%d%d", &n, &m);
	int time =0;
	for(int i = 0,t,x; i < n;)
	{
		scanf("%d%d", &t, &x);
		time = std::max(t, time);
		set.insert(stud(i, x));
		if(++i == n || set.size() == (unsigned int)m)
		{
			int k = 0;
			for(std::set<stud>::iterator it2, it = set.begin();
					it != set.end(); )
			{
				it2 = it;
				++it;
				tt[it2->id] =time + it2->x;
				++k;
				if(it == set.end() || it->x != it2->x)
				{
					time += 1 +k/2;
					k = 0;
					if(it == set.end())
						time += it2->x*2;
				}
			}
			set.clear();
		}
	}
	for(int i = 0;i < n; ++i)
		printf("%d ",tt[i]);

	return 0;
}
