#include <algorithm>
#include <cstdio>

using namespace std;

const int MAXN = 100000;

int n, m, t[MAXN], x[MAXN], res[MAXN], ctime = 0;
pair<int, int> pp[MAXN];

void calc(int nc)
{
  sort(&pp[0], &pp[nc]);

  int cl = 0, prev = 0;

  for (int i = 0; i < nc; ++i) {
    ++cl;
    if (i+1 == nc || pp[i+1].first != pp[i].first) {
      ctime += pp[i].first - prev;

      for (int j = i; j >= 0 && pp[j].first == pp[i].first; --j)
        res[pp[j].second] = ctime;

      ctime += 1 + cl/2; cl = 0; prev = pp[i].first;
    }
  }

  ctime += pp[nc-1].first;
}

int main()
{
  scanf("%d%d", &n, &m);

  for (int i = 0; i < n; ++i) scanf("%d%d", &t[i], &x[i]);

  int ci = 0;

  while (true) {
    int nc = 0;

    while (ci < n && nc < m) {
      pp[nc++] = make_pair(x[ci], ci);
      if (t[ci] > ctime) ctime = t[ci];
      ++ci;
    }

    calc(nc);
    if (ci == n) break;
  }

  for (int i = 0; i < n; ++i) printf("%d ", res[i]);

  return 0;
}
