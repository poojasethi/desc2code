//LONG LONG

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> w;
class Data{
public:
	int pos, t, x;
	bool operator <(const Data &other) const{
		return x < other.x;
	}
};
vector<Data> cur;
int main(){
	ios_base::sync_with_stdio(0);
	
	int n, m;
	cin >> n >> m;
	w.resize(n);
	int Time = 0;
	Data tmp;
	for (int done = 0; done < n; ){
		cur.clear();
		for (int i = 0; i < min(n - done, m); ++ i){
			cin >> tmp.t >> tmp.x;
			tmp.pos = done + i;
			cur.push_back(tmp);
		}
		Time = max(Time, cur.back().t);
		sort(cur.begin(), cur.end());
		for (int i = 0; i < (int)cur.size();){
			int i2;
			for (i2 = i; i2 < (int)cur.size() && cur[i2].x == cur[i].x; ++ i2);
			int t = 1 + (i2 - i) / 2;
			for (int j = i; j < i2; ++ j)
				w[cur[j].pos] = Time + cur[j].x;
			done += i2 - i;
			Time += t;
			i = i2;
		}
		Time += cur.back().x * 2;
	}
	for (int i = 0; i < n; ++ i)
		cout << w[i] << " ";
	cout << endl;
	return 0;
}