import sys
from collections import deque

def fill_bus(m, students):
    bus = {}
    last_t = 0
    for i in range(m):
        if len(students) > 0:
            # get first student
            st = students.popleft()
            # st is tuple (i, t, x)
            
            # put student on a bus
            if st[2] in bus:
                bus[ st[2] ] += [st[0]]
            else:
                bus[ st[2] ] = [st[0]]
                
            last_t = st[1]
            
    return bus, last_t

# read input

lines = sys.stdin.readlines()

n, m = map(int, lines[0].split())
students = deque()
for i in range(n):
    t, x = map(int, lines[i + 1].split())
    students.append( (i, t, x) )

# fill bus
bus, last_t = fill_bus(m, students)

t = last_t
w = {}
while len(students) > 0 or len(bus) > 0:
    last_x = 0
    x_list = bus.keys()
    x_list.sort()
    for x in x_list:
        i_list = bus[x]
        t = t + (x - last_x)
        for i in i_list:
            w[i] = t
        t = t + (1 + len(i_list) / 2)
        last_x = x
        
    bus = {}
    if len(students) > 0:
        # go back
        t = t + last_x
    # fill bus again
    if len(students) > 0:
        bus, last_t = fill_bus(m, students)
        # we have been waited for last student
        if last_t > t:
            t = last_t

# output

i_list = w.keys()
i_list.sort()

res = ""
for i in i_list:
    res += str(w[i]) + " "
    
print res
