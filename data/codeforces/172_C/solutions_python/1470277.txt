n, m = map(int, raw_input().split())

bus_free = 0


def service(base, content):
    new = sorted(content, key = lambda x: x[1])
    times = []
    way_time = 0
    max_time = 0
    pred_time = 0
    i = 0
    while i < len(new):
        j = i+1
        while j < len(new) and new[i][1] == new[j][1]: j += 1
        count = j - i
        max_time = max(new[i][1], max_time)
        way_time += new[i][1] - pred_time
        pred_time = new[i][1]
        for k in xrange(count):
            times.append((new[i+k][0], base_time + way_time))
        way_time += 1 + count/2
        i = j
    
    times.sort(key = lambda x: x[0])    
    for x in times:
        print x[1],
    
    return base_time + way_time + max_time 

bus_content = []    
j = 0
for i in xrange(n):
    j += 1
    #for j in xrange(m): 
    tj, xj = map(int, raw_input().split())
    max_time = tj
    bus_content.append((i, xj))

    if j == m or i == n-1:
        j = 0
        base_time = max_time
        if bus_free > max_time: base_time = bus_free
        
        bus_free = service(base_time, bus_content)
        bus_content = []
   