from __future__ import division
from itertools import islice, groupby
from operator import itemgetter

def proc(i):
    t, x = map(int, raw_input().split())
    return i, t, x

n, m = map(int, raw_input().split())
stds = (proc(i) for i in xrange(n)) # (index, time, x)

def take(n, iterable):
    return list(islice(iterable, n))

ctime = 0
cpos = 0
result = [None] * n
while True:
    group = take(m, stds)
    if not group:
        break
    ctime = max(group[-1][1], ctime) # last time
    group.sort(key=itemgetter(2)) # sort by x
    for pos, leaving in groupby(group, key=itemgetter(2)):
        dist = pos - cpos
        ctime += dist
        k = 0
        for std in leaving:
            index = std[0]
            result[index] = ctime
            k += 1
        ctime += 1 + k // 2
        cpos = pos
    ctime += cpos
    cpos = 0

for val in result:
    print val,