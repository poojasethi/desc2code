#include <iostream>
#include <cmath>

using namespace std;

double const EPS = 1e-13;

double acc, vmax, l, d, w;

double dist(double v, double t)
{
	return v*t + 0.5*acc*t*t;
}

double td(double v, double dst)
{
	double Delta = v * v + 2 * acc * dst;
	double t2 = (-v + sqrt(Delta))/(acc);
	double t1 = (vmax-v) / acc;
	if (t2 < t1 + EPS)
		return t2;
	return t1 + (dst - dist(v, t1))/(vmax);
}

double solve()
{
	if (vmax < w + EPS)
		return td(0, l);
	double tw = w / acc;
	double dw = dist(0, tw);
	if (d < dw + EPS)
		return td(0, l);
	return tw + 2 * td(w, 0.5*(d-dw)) + td(w, l-d);
}

int main()
{
	cin >> acc >> vmax >> l >> d >> w;
	cout.precision(15);
	cout << fixed << solve() << endl;
	return 0;
}
