#include<bits/stdc++.h>
#define MAXN 600009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define ff first
#define ss second
#define all(x) x.begin(),x.end()
#define pb(x) push_back(x)
#define ppb() pop_back()
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
const int SQ=777;
template<class T> bool umax(T& a, T b) {
 if(a.ff < b.ff){ a = b;return 1;}
 if(a.ff==b.ff and a.ss>b.ss){ a = b;return 1;}
 return 0;
}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
char s[MAXN],s2[MAXN];
int LOG[MAXN],p1[MAXN],p2[MAXN],q1[MAXN],q2[MAXN];
int deg[MAXN],P[MAXN][28],S[MAXN][28],fr[MAXN];
int ord[MAXN],in[MAXN],st[MAXN],en[MAXN],vis[MAXN];
pair<PII,int> C[MAXN],H[MAXN];
PII ans[MAXN],love[MAXN];
bool cmp(int x,int y){
	return (C[x]<C[y]);
}
int query(int x,int y){
	int k=LOG[y-x+1];
	return min(P[x][k],P[y-(1<<k)+1][k]);
}
PII online(int x,int y,int z,int t){
	PII mx=mp(0,z);
	for(int i=x;i<=y;i++)
		if(q2[i]>=z and q2[i]<=t)
			umax(mx,mp(++fr[q2[i]],q2[i]));
	for(int i=x;i<=y;i++)
		if(q2[i]>=z and q2[i]<=t)
			--fr[q2[i]];
	return mx;				
}
int t1(int l,int r,int ind,int x){
	while(l+1<r){
		int mid=(l+r)>>1;
		if(query(mid,ind-1)>=x)
			r=mid;
		else
			l=mid;	
	}
	for(int i=l;i<=r;i++)
		if(query(i,ind-1)>=x)
			return i;
	return ind;		
}
int t2(int l,int r,int ind,int x){
	while(l+1<r){
		int mid=(l+r)>>1;
		if(query(ind,mid)>=x)
			l=mid;
		else
			r=mid;	
	}
	for(int i=r;i>=l;i--)
		if(query(ind,i)>=x)
			return i;
	return ind-1;		
}
vector<pair<PII,pair<PII,int> > >adj[MAXN];
PII bul(int x,int y){
	PII mx=mp(0,x);
	if(in[x]==in[y]){
		for(int i=x;i<=y;i++)
			umax(mx,mp(fr[i],i));
		return mx;	
	}
	int s1=in[x]+1,s2=in[y]-1;
	for(int i=s1;i<=s2;i++)
		umax(mx,love[i]);
	for(int i=x;i<=en[in[x]];i++)
		umax(mx,mp(fr[i],i));
	for(int i=st[in[y]];i<=y;i++)
		umax(mx,mp(fr[i],i));
	return mx;				
}
int n,m;
void yaz(int x,int y){
	for(int i=x;i<=y;i++){
		cout<<deg[ord[i]]<<endl;
		for(int j=ord[i];j<=n;j++)
			cout<<s[j];
		cout<<endl;	
	}		
}
void fastsort(){
	memset(vis,0,sizeof(vis));
	for(int i=1;i<=n;i++)
		vis[C[i].ff.ss]++;
	for(int i=1;i<MAXN;i++)
		vis[i]+=vis[i-1];
	for(int i=n;i>=1;i--)
		H[vis[C[i].ff.ss]--]=C[i];
	memset(vis,0,sizeof(vis));
	for(int i=1;i<=n;i++)
		vis[H[i].ff.ff]++;
	for(int i=1;i<MAXN;i++)
		vis[i]+=vis[i-1];	
	for(int i=n;i>=1;i--)
		C[vis[H[i].ff.ff]--]=H[i];	
}
int main(){
	memset(P,32,sizeof(P));
	scanf("%s",s+1);
	n=strlen(s+1);s[++n]='$';
	scanf("%d",&m);
	for(int j=1;j<=m;j++){
		scanf("%s",s2+1);
		int sz=strlen(s2+1);
		for(int i=1;i<=sz;i++){
			s[++n]=s2[i];
			deg[n]=j;
		}
		s[++n]='$';	
	}
	for(int i=1;i<=n;i++){
		S[i][0]=s[i]-'a'+2;
		if(S[i][0]<0)
			S[i][0]=1;
		LOG[i]=log2(i);
	}
	for(int j=1;j<21;j++){
		for(int i=1;i<=n;i++){
			C[i]=mp(mp(S[i][j-1],(i+(1<<j-1)<=n?S[i+(1<<j-1)][j-1]:0)),i);
		}
		fastsort();
	//	sort(fake+1,fake+n+1);
		for(int i=1;i<=n;i++)
			S[C[i].ss][j]=S[C[i-1].ss][j]+(C[i].ff!=C[i-1].ff);	
	}
	for(int i=1;i<=n;i++)
		ord[S[i][20]]=i;
//	for(int i=1;i<=n;i++){
//		for(int j=ord[i];j<=n;j++)
//			cout<<s[j];
//		cout<<endl;	
//	}		
	//for(int i=1;i<n;i++){
	//	int a=ord[i],b=ord[i+1],res=0;
	//	for(int j=20;j>=0;j--)
	//		if(a<=n and b<=n and S[a][j]==S[b][j]){
	//			a+=(1<<j);b+=(1<<j);
	//			res+=(1<<j);
	//		}
	//	P[i][0]=res;
	//	cout<<res<<endl;	
	//}
	int j=0;
	for(int i=1;i<=n;i++){
		if(S[i][20]==1)
			continue;
		while(i+j<=n and ord[S[i][20]-1]+j<=n and s[i+j]==s[ord[S[i][20]-1]+j])
			j++;
		P[S[i][20]-1][0]=j;	
		if(j)
			j--;
	}
	for(int j=1;j<21;j++)
		for(int i=1;i<=n;i++)
			if(i+(1<<j-1)<=n)
				P[i][j]=min(P[i][j-1],(i+(1<<j-1)<=n?P[i+(1<<j-1)][j-1]:INF));
	int num=0,fup=0;
	for(int j=1;j<=n;j++){
		if(deg[ord[j]]){	
			fup++;q1[j]=fup;
			q2[fup]=deg[ord[j]];num=j;
		}
		p1[j]=num;
	}num=INF;
	for(int j=n;j>=1;j--){
		if(deg[ord[j]])
			num=j;
		p2[j]=num;			
	}	
	int gr=1;
	for(int i=1;i<MAXN;i++){
		in[i]=gr;
		if(i%SQ==0 or i==n){
			en[gr]=i;
			if(i<n)
				st[++gr]=i+1;
		}
	}
	int q;
	scanf("%d",&q);
	for(int i=1;i<=q;i++){
		int l,r,pl,pr;
		scanf("%d%d%d%d",&l,&r,&pl,&pr);
		int low=p2[t1(1,S[pl][20]-1,S[pl][20],pr-pl+1)];
		int upp=p1[t2(S[pl][20],n-1,S[pl][20],pr-pl+1)+1];
		//yaz(low,upp);
		if(low>upp)	
			ans[i]=mp(0,l);
		else{
			low=q1[low];upp=q1[upp];
			if(upp-low<=SQ<<1)
				ans[i]=online(low,upp,l,r);
			else
				adj[low/SQ].pb(mp(mp(upp,low),mp(mp(l,r),i)));	
		}		
	}
	for(int i=0;i<MAXN;i++){
		if(adj[i].size()==0)
			continue;sort(all(adj[i]));
		for(int j=1;j<MAXN;j++)
			fr[j]=0,love[j]=mp(0,j);	
		int cnt=(i+1)*SQ;	
		for(int j=0;j<adj[i].size();j++){
			pair<PII,pair<PII,int> > it=adj[i][j];
			PII mx=mp(0,it.ss.ff.ff);
			while(cnt<it.ff.ff){
				cnt++;fr[q2[cnt]]++;
				umax(love[in[q2[cnt]]],mp(fr[q2[cnt]],q2[cnt]));
			}umax(mx,bul(it.ss.ff.ff,it.ss.ff.ss));
			for(int k=it.ff.ss;k<=(i+1)*SQ;k++)
				if(q2[k]>=it.ss.ff.ff and q2[k]<=it.ss.ff.ss)
					umax(mx,mp(++fr[q2[k]],q2[k]));
			for(int k=it.ff.ss;k<=(i+1)*SQ;k++)
				if(q2[k]>=it.ss.ff.ff and q2[k]<=it.ss.ff.ss)
				--fr[q2[k]];
			ans[it.ss.ss]=mx;
		}
	}
	for(int i=1;i<=q;i++)
		printf("%d %d\n",ans[i].ss,ans[i].ff);
	return 0;
}
//LooK aT mY COde ONlinE +_+
