#include <iostream>
#include <algorithm>
#include <string>
#include <set>
#include <map>
#include <cmath>
#include <fstream>
#include <iomanip>
#include <vector>
using namespace std;

const int MAX_N=1000000+10;

int p[MAX_N],n,m,mark[MAX_N];

vector <int> G[MAX_N],l,g;

void dfs(int u){
	mark[u]=1;
	l.push_back(u);
	g.push_back(p[u]);
	for(int i=0;i<G[u].size();i++)if(mark[G[u][i]]==0){
		dfs(G[u][i]);
	}
}

int main(){
	
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++){
		scanf("%d",&p[i]);
	}

	for(int i=1;i<=m;i++){
		int x,y;
		scanf("%d%d",&x,&y);
		G[x].push_back(y);
		G[y].push_back(x);
	}

	for(int i=1;i<=n;i++)if(mark[i]==0){
		l.clear();
		g.clear();
		dfs(i);
		sort(g.begin(),g.end());
		sort(l.begin(),l.end());
		reverse(g.begin(),g.end());
		for(int j=0;j<l.size();j++){
			p[l[j]]=g[j];
		}
	}

	for(int i=1;i<=n;i++){
		printf("%d%c",p[i],' ');
	}
}

