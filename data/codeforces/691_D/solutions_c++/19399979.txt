#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
vector<long >z[1000005];
long a[1000005],b[1000004],u[1000005],v[1000003];
long l=0;
void dfs(long i){
l++;b[l]=i;u[l]=a[i];
v[i]=1;
for(long j=0;j<z[i].size();j++){
    long h=z[i][j];
    if(v[h]==0){
        v[h]=1;dfs(h);
    }
}
}
int main(){
    ios::sync_with_stdio(false);
        	cin.tie(0);
        	cout.tie(0);
long n,m;
cin>>n>>m;
for(long i=1;i<=n;i++)cin>>a[i];
long x,y;
for(long i=1;i<=m;i++){
    cin>>x>>y;
    z[x].push_back(y);
    z[y].push_back(x);
}
for(long i=1;i<=n;i++){
    if(v[i]==0){l=0;
        dfs(i);
        sort(b+1,b+l+1);
        sort(u+1,u+l+1);
        for(long j=l;j>=1;j--){
            long h=u[j];long p=b[l-j+1];
            a[p]=h;
        }
    }
}
for(long i=1;i<=n;i++)cout<<a[i]<<" ";
cout<<endl;}
