#include <bits/stdc++.h>

using namespace std;

const int N = 1e6 + 1;
vector <int> g[N], p, nodes;
bool mark[N];
int a[N];
int t = 0;

void dfs(int v) {
	mark[v] = true;
	nodes.push_back(a[v]);
	p.push_back(v);
	for (int i = 0; i < g[v].size(); i++)
		if (!mark[g[v][i]])
			dfs(g[v][i]);
}

main() {
	int n, m;
	scanf("%d %d", &n, &m);
	for (int i = 0; i < n; i++)
		scanf("%d", a + i);
	for (int i = 0; i < m; i++) {
		int u, v;
		scanf("%d %d", &u, &v); u--, v--;
		g[u].push_back(v);
		g[v].push_back(u);
	}
	for (int i = 0; i < n; i++)
		if (!mark[i]) {
			nodes.clear();
			p.clear();
			dfs(i);
			sort(nodes.begin(), nodes.end());
			sort(p.begin(), p.end());
			for (int i = nodes.size() - 1; i > -1; i--)
				a[p[p.size() - i - 1]]	= nodes[i];
		}
	for (int i = 0; i < n; i++)
		printf("%d ", a[i]);
}
