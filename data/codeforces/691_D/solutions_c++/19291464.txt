#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
const int N=1e6+2;
using namespace std;
vector <int> res[N];
vector <int> ancestor;
int ele[N],parent[N],pos[N];
bool vis[N];
int find(int n)
{
	if(n==parent[n])
		return n;
	else
	    return parent[n]=find(parent[n]);
}
int main()
{
	int i,j,m,n,a,b,t,p;
	scanf("%d %d",&n,&m);
	for(i=1;i<=n;i++)
	{
		scanf("%d",&ele[i]);
		parent[i]=i;
		vis[i]=0;
	}
	for(i=0;i<m;i++)
	{
		scanf("%d %d",&a,&b);
		a=find(a);
		b=find(b);
		if(a>b)
			parent[a]=b;
		if(a<b)
			parent[b]=a;
	}
	for(i=1;i<=n;i++)
	{
		p=find(i);
		res[p].push_back(ele[i]);
		if(!vis[p])
		{
			ancestor.push_back(p);
			vis[p]=1;
		}
	}
	for(i=0;i<ancestor.size();i++)
		sort(res[ancestor[i]].rbegin(),res[ancestor[i]].rend());
	for(i=1;i<n;i++)
		printf("%d ",res[find(i)][pos[find(i)]++]);
	printf("%d\n",res[find(i)][pos[find(i)]]);
	return 0;
}
    			 			 		  	 	 			 	  		