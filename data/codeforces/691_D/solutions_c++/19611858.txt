#include <bits/stdc++.h>
using namespace std;
const int lim = 1e6;
typedef priority_queue < int > pq;

int n,m,pset[lim+10],inf[lim+10],ans[lim+10];
vector <pq> lis;

int find_set(int x){
    if(x==pset[x])return x;
    else
        return pset[x] = find_set(pset[x]);
}
bool same(int x,int y){
    return find_set(x)==find_set(y);
}
void join_set(int x,int y){
    pset[find_set(x)] = find_set(y);
}

int main(){
    ios_base::sync_with_stdio(0);cin.tie();
    cin>>n>>m;
    for(int i = 1;i<=n;i++){cin>>inf[i];pset[inf[i]] = inf[i];}
    for(int i = 1;i<=m;i++)
    {
        int a,b;
        cin>>a>>b;
        join_set(inf[a],inf[b]);
    }
    lis.assign(n+1,pq());
    for(int i = 1;i<=n;i++)lis[find_set(inf[i])].push(inf[i]);

    for(int i = 1;i<=n;i++)
    {
        cout<<lis[find_set(inf[i])].top()<<" ";
        lis[find_set(inf[i])].pop();
    }
}
