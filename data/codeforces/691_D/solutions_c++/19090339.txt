#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<vector>
#define INF 0x3f3f3f3f
#define LL long long
#define N 1000100
using namespace std;
int f[N], size[N], n, a[N];

int getf(int x){
	return f[x] == x ? x : f[x] = getf(f[x]);
}
void merge(int x, int y){
	int fx = getf(x);
	int fy = getf(y);
	if(fx == fy) return;
	f[fx] = fy;
}

vector<int> list[N];

int m;
int main(){
	cin >> n >> m;
	for(int i = 1; i <= n; i ++){
		scanf("%d", &a[i]);
		f[i] = i;
	}
	
	for(int i = 1; i <= m; i ++){
		int x, y;
		scanf("%d%d", &x, &y);
		merge(x, y);
	}
	
	for(int i = 1; i <= n; i ++){
		int pnt = getf(i);
		list[pnt].push_back(a[i]);
	}
	
	for(int i = 1; i <= n; i ++){
		if(list[i].size() > 0){
			sort(list[i].begin(), list[i].end());
			size[i] = list[i].size() - 1;
		}
	}
	
	for(int i = 1; i <= n; i ++){
		int pnt = getf(i);
		printf("%d ", list[pnt][size[pnt]--]);
	}
	return 0;
}
