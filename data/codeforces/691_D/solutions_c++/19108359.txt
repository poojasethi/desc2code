#include <iostream>
#include <algorithm>
#include <vector>
#include <stdio.h>
using namespace std;
#define N 1000005
vector<int> g[N];
int visited[N];
int ans[N], d[N], p1[N], p2[N], t;
void dfs(int u) {
	if(visited[u])
		return;
	p1[t++] = u;
	visited[u] = 1;
	for(int i = 0; i < g[u].size(); i++) {
		dfs(g[u][i]);
	}
}
int main() {
	int n, i, m, u, v, j;
	scanf("%d%d", &n, &m);
	for(i = 0; i < n; i++)
		scanf("%d", d + i);
	for(i = 0; i < m; i++) {
		scanf("%d%d", &u, &v);
		g[u - 1].push_back(v - 1);
		g[v - 1].push_back(u - 1);
	}

	for(i = 0; i < n; i++) {
		if(visited[i])
			continue;
		t = 0;
		dfs(i);
		for(j = 0; j < t; j++)
			p2[j] = d[p1[j]];
		sort(p1, p1 + t);
		sort(p2, p2 + t);
		reverse(p2, p2 + t);
		for(j = 0; j < t; j++)
			ans[p1[j]] = p2[j];
	}

	for(i = 0; i < n; i++)
		printf("%d ", ans[i]);
	printf("\n");
}