from collections import Counter

def get_half(keys, counts):
    rez = []
    for key in keys:
        count = counts[key]
        s = key * (count / 2)
        rez.append(s)
    return rez

def main():
    s = raw_input().strip()
    # s = 'aabbcccdd'
    counts = Counter(s)
    letters = sorted(counts.keys())
    for i, l1 in enumerate(letters):
        if counts[l1] % 2 == 0:
            continue
        for j in xrange(len(letters) -1, i, -1):
            l2 = letters[j]
            if counts[l2] % 2 == 0:
                continue
            counts[l2] -= 1
            counts[l1] += 1
            break

    middle_let = None
    for let in counts:
        if counts[let] % 2 != 0:
            middle_let = let

    h1 = get_half(letters, counts)
    if middle_let:
        h1.append(middle_let)
    h2 = get_half(letters, counts)
    h2.reverse()
    h1.extend(h2)
    print ''.join(h1)

if __name__ == '__main__':
    main()
