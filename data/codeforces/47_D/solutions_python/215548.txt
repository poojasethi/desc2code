def next(n, a):
	k = len(a)
	for i in range(k - 1, -1, -1):
		if a[i] == n + i - k: continue
		return a[:i] + [a[i] + 1] + range(a[i] + 2, a[i] + k - i + 1)

def combs(n, k):
	a = range(k)
	while a is not None:
		yield a
		a = next(n, a)
	
def gen_all(s, c):
	res = []
	a = int(s, 2)
	for comb in combs(len(s), c):
		b = a
		for p in comb:
			b ^= 1 << p
		yield b

def filter_all(s, c, r):
	a = int(s, 2)
	return (x for x in r if bin(a ^ x).count('1') == c)

(n, k) = map(int, raw_input().split())
res = []
for i in range(k):
	(s, c) = raw_input().split()
	if not res:
		res = gen_all(s, int(c))
	else:
		res = filter_all(s, int(c), res)

print len(list(res))
