import sys
dp = dict()

def rek(w, b, pr):
    if (w, b) in dp: return dp[(w, b)]
    else:
        if w < 0 or b < 0 or w + b == 0: return 0 
        if pr:
            res = float(w) / (w + b) + float(b) / (w + b) * rek(w, b - 1, False)
            dp[(w, b)] = res
            return res
        else:
            if w + b <= 2: return 0
            res = float(b) / (w + b) * (float(w) / (w + b - 1) * rek(w - 1, b - 1, True) + \
                                        float(b - 1) / (w + b - 1) * rek(w, b - 2, True))
            dp[(w, b)] = res
            return res

sys.setrecursionlimit(3000)
[w, b] = map(int, raw_input().split())
print rek(w, b, True)
