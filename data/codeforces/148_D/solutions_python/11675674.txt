import sys
sys.setrecursionlimit(10000000)
def dp(white, black, mem, prin = 1):
    if black < 0 or white <= 0: 
        if prin == 1: return 0
        return 1
    if mem[white][black][prin] != -1: return mem[white][black][prin]
    if prin == 1:
        wewinnow = float(white) / (white + black)
        wewinlater = (1 - wewinnow) * dp(white, black - 1, mem, 0)
        res = wewinnow + wewinlater
        mem[white][black][prin] = res
        return res
    dragonblanks = float(black) / (white + black)
    whitejump, blackjump = 0, 0
    if black > 0: whitejump = dragonblanks * (float(white) / (white + black - 1)) * dp(white - 1, black - 1, mem)
    if black > 1: blackjump = dragonblanks * (float(black - 1) / (white + black - 1)) *dp(white, black - 2, mem)
    res = whitejump + blackjump 
    mem[white][black][prin] = res
    return res
w, b = map(int, raw_input().split())
mem = [[[-1] * 2 for _ in xrange(b + 1)] for _ in xrange(w + 1)]
print(dp(w, b, mem))