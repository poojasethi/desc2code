import sys
from Queue import Queue
from sets import Set

class pythonin:
    _data = []
    _ldata = []
    _cur = 0
    _lcur = 0
    
    def __init__(self):
        while True:
            try: self._ldata.append(raw_input())
            except EOFError : break

    def _convert(self):
        if self._lcur == len(self._ldata) : return
        l = self._ldata[self._lcur].split(" ")
        self._lcur += 1
        for x in l :
            if x != "" and x != "\t" :
                self._data.append(x)
        
    def eof(self) : 
        self._convert()
        return self._cur == len(self._data)

    def nextToken(self) :
        if self.eof() : return
        self._cur += 1
        return self._data[self._cur - 1]
    
    def nextInt(self) :
        return int(self.nextToken())
    
    def nextFloat(self) :
        return float(self.nextToken())
    
    def nextLine(self) :
        if self._lcur == len(self._ldata) : return 
        self._lcur += 1
        return self._ldata[self._lcur - 1]
    
#sys.stdin = open("input.txt", "r")
#sys.stdout = open("output.txt", "w")
#
pin = pythonin()

name = pin.nextLine()

n = pin.nextInt()

map = {}

actionCost = {"posted" : 15, "commented" : 10, "likes" : 5}

for i in xrange(0, n) :
    name1 = pin.nextToken()
    action = pin.nextToken()
    if action != "likes" : pin.nextToken()
    name2 = pin.nextToken()
    name2 = name2[0:len(name2) - 2]
    pin.nextToken()
    
    if not name1 == name :
        if not name1 in map.keys() : map[name1] = 0
    if not name2 == name :
        if not name2 in map.keys() : map[name2] = 0

    if name1 == name :
        map[name2] += actionCost[action]
    if name2 == name :
        map[name1] += actionCost[action]
        
for (p, s) in sorted([(100000 - pt, qs) for qs, pt in map.iteritems()]) : 
     print s