# -*- coding: UTF-8 -*-

# from itertools import *
from collections import defaultdict

# def baseN(num,b,numerals="0123456789abcdefghijklmnopqrstuvwxyz"):
#     return ((num == 0) and  "0" ) or ( baseN(num // b, b).lstrip("0") + numerals[num % b])
my_name = raw_input()
friends = defaultdict(list)
types = {"posted" : 15, "commented" : 10, "likes" : 5}
T = input()
# St = raw_input()
# data1 = map(int, raw_input().split())
data2 = [ raw_input() for i in xrange(T) ]

def comp(a, b):
    if a[0] > b[0]:
        return 1
    elif a[0] < b[0]:
        return -1
    else:
        if a[1] > b[1]:
            return -1
        else:
            return 1

for i in data2:
    i = i.split()
    if len(i) == 5:
        who = i[0]
        whom = i[3][:-2]
    else:
        who = i[0]
        whom = i[2][:-2]
    what = i[1]
    if who not in friends and who != my_name:
        friends[who] = 0
    if whom not in friends and whom != my_name:
        friends[whom] = 0
    if who == my_name:
        friends[whom] += types[what]
    if whom == my_name:
        friends[who] += types[what]

ans = sorted(zip(friends.values(), friends.keys()), comp)
ans.reverse()
for i in ans:
    print i[1]
