#include <iostream>
#include <map>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

bool compara(const pair<int, string>& a, const pair<int, string>& b)
{
	if (a.first < b.first)
		return false;
	if (a.first > b.first)
		return true;
	return a.second.compare(b.second) < 0;
}

map<string, int> mapa;
vector<pair<int, string> > q;

int main()
{
	string a, b, me, c, d;
	
	cin >> me;
	
	int n;
	
	cin >> n;
	
	while (n--)
	{
		cin >> a >> b;
		if (b == "posted" || b == "commented")
			cin >> c; // on
		cin >> c >> d;
		c.resize(c.size()-2);
		
		int h;
		if (c != me)
			h = mapa[c];
		if (a != me)
			h = mapa[a];
		
		if (!(a == me || c == me))
			continue;
		if (c == me)
			swap(a, c);
		if (b == "posted")
			mapa[c] += 15;
		else if (b == "commented")
			mapa[c] += 10;
		else
			mapa[c] += 5;
	}
	
	for (map<string, int>::iterator it = mapa.begin(), end = mapa.end(); it != end; ++it)
		q.push_back(make_pair(it->second, it->first));
	sort(q.begin(), q.end(), compara);
	
	while (!q.empty())
	{
		pair<int, string> p = q.front();
		q.erase(q.begin());
		cout << p.second << endl;
	}
	
	return 0;
}

