#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<cstdlib>
#include<algorithm>
using namespace std;

#define rep(i, s, t) for (int i = s; i <= t; ++i)
typedef long long LL;
LL n, x, y, dx, dy, t;
LL g[11], f[11], c[11][11], b[11][11], a[11][11];

void mul2(){
    memset(g, 0, sizeof g);
    rep(i, 0, 5) rep(k, 0, 5)
        (g[i] += c[i][k] * f[k]) %= n;
    memcpy(f, g, sizeof f);
}

void mul(LL c[][11], LL a[][11], LL b[][11]){
    rep(i, 0, 5) rep(j, 0, 5){
        c[i][j] = 0;
        rep(k, 0, 5) (c[i][j] += a[i][k] * b[k][j]) %= n;
    }
}

int main(){
    cin >> n >> x >> y >> dx >> dy >> t;
    f[0] = x - 1; f[1] = y - 1; f[2] = dx; f[3] = dy; f[4] = 0; f[5] = 1;
    a[0][0] = 2; a[0][1] = a[0][2] = a[0][4] = 1; a[0][5] = 2;
    a[1][1] = 2; a[1][0] = a[1][3] = a[1][4] = 1; a[1][5] = 2;
    a[2][0] = a[2][1] = a[2][2] = a[2][4] = 1; a[2][5] = 2;
    a[3][0] = a[3][1] = a[3][3] = a[3][4] = 1; a[3][5] = 2;
    a[4][4] = a[4][5] = 1;
    a[5][5] = 1;
    rep(i, 0, 5) c[i][i] = 1;
    rep(i, 0, 62){
        if ((t >> i) & 1){
            mul(b, c, a);
            memcpy(c, b, sizeof c);
        }
        mul(b, a, a);
        memcpy(a, b, sizeof a);
    }
    mul2();
    if (f[0] < 0) f[0] += n;
    if (f[1] < 0) f[1] += n;
    printf("%I64d %I64d\n", f[0] + 1, f[1] + 1);
    //system("pause");
}
