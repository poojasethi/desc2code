#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>

using namespace std;

typedef long long LL;

const int a[6][6] = {{2, 1, 1, 1, 0, 0}, {1, 2, 1, 1, 0, 0}, {1, 0, 1, 0, 0, 0}, {0, 1, 0, 1, 0, 0}, {1, 1, 1, 1, 1, 0}, {0, 0, 0, 0, 1, 1}};

int n;

struct Mat2
{
	int o[6][6];
	Mat2(){}
	void operator *= (const Mat2 &A)
	{
		static int c[6][6];
		for (int i = 0; i < 6; ++i)
			for (int j = 0; j < 6; ++j)
			{
				c[i][j] = 0;
				for (int k = 0; k < 6; ++k)
					c[i][j] = (c[i][j] + (LL)o[i][k] * A.o[k][j] % n) % n;
			}
		for (int i = 0; i < 6; ++i)
			for (int j = 0; j < 6; ++j)
				o[i][j] = c[i][j];		
	}
}M;

struct Mat1
{
	int o[6];
	Mat1(){}
	inline void in()
	{
		for (int i = 0; i < 4; ++i) scanf("%d", &o[i]);
		o[4] = 0;
		o[5] = 1;
	}
	void operator *= (const Mat2 &A)
	{
		static int c[6];
		for (int i = 0; i < 6; ++i)
		{
			c[i] = 0;
			for (int j = 0; j < 6; ++j)
				c[i] = (c[i] + (LL)o[j] * A.o[j][i] % n) % n;
		}
		for (int i = 0; i < 6; ++i)
			o[i] = c[i];
	}
}S;

LL t;

int main()
{
	scanf("%d", &n);
	S.in();
	scanf("%I64d", &t);
	for (int i = 0; i < 6; ++i)
		for (int j = 0; j < 6; ++j)
			M.o[i][j] = a[i][j];
	for (; t; t >>= 1, M *= M)
		if (t & 1)
			S *= M;
	printf("%d %d\n", (S.o[0] + n - 1) % n + 1, (S.o[1] + n - 1) % n + 1);
	
	return 0;
}
