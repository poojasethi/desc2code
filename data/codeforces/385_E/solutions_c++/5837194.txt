#include<cstdio>
#include<cstring>
#define MAXN 6
#define LL __int64
LL mod;
struct Mat{
    int r, c;
    LL m[MAXN][MAXN];
    Mat(){
        r=c=MAXN;
        memset(m,0,sizeof(m));
    }
    Mat operator * (const Mat& a){
        Mat tmp;
        for(int i=0; i<MAXN; i++){
            for(int j=0; j<MAXN; j++){
                for(int k=0; k<MAXN; k++){
                    tmp.m[i][j] = (tmp.m[i][j]+m[i][k]*a.m[k][j])%mod;
                }
            }
        }
        return tmp;
    }
};
LL n, sx, sy, dx, dy, t;
int main(){
    while(~scanf("%I64d %I64d %I64d %I64d %I64d %I64d", &n, &sx, &sy, &dx, &dy, &t)){
        mod=n;
        LL xx[6][6]={
            {2,1,1,1,0,0},
            {1,2,1,1,0,0},
            {1,0,1,0,0,0},
            {0,1,0,1,0,0},
            {1,1,1,1,1,0},
            {2,2,2,2,1,1}
        };
        Mat x;
        memcpy(x.m, xx, sizeof(xx));
        Mat s;
        for(int i=0; i<MAXN; i++)   s.m[i][i]=1;
        while(t){
            if(t&1) s = s*x;
            x = x*x;
            t>>=1;
        }
        LL tmp[6]={sx-1,sy-1,dx,dy,0,1};
        LL tx, ty;
        tx=ty=0;
        for(int i=0; i<MAXN; i++)   tx=(tx+tmp[i]*s.m[i][0])%mod;
        for(int i=0; i<MAXN; i++)   ty=(ty+tmp[i]*s.m[i][1])%mod;
        tx = (tx+mod)%mod;
        ty = (ty+mod)%mod;
        printf("%I64d %I64d\n", tx+1, ty+1);
    }
    return 0;
}
