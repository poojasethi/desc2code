#include <bits/stdc++.h>
using namespace std;
#define FREP(b) for(int i=0;i<b;i++)
#define REP(a,b,c) for(int a=b;a<c;a++)
#define asd(x) cout << "Here for " << #x << " :" <<x << endl;
#define asdf(x, y)  cout << "Here FOR " << #x << " :" << x << " " << #y  << " :" << y << endl;
typedef pair<int,int> ii;
typedef long long LL;

typedef vector<vector<LL> > matrix;
const int K = 6; // size of the matrix ..
LL n,sx,sy,dx,dy,t;
LL modd(LL a)
{ 
    return (a%n + n)%n;
}
matrix mul(matrix A, matrix B){ // returns A*B;
    matrix C(K+1, vector<LL>(K+1));
    REP(i,1,K+1) REP(j,1,K+1) REP(k,1,K+1){
        C[i][j] = modd(C[i][j] + (A[i][k] * B[k][j]));
    }
    return C;
}
matrix pow(matrix A, LL p){ // returns A^p
    if(p == 1) return A;
    if(p%2) return mul(A, pow(A, p-1));
    matrix X = pow(A, p/2);
    return mul(X, X);
}

int main()
{
    cin >> n >> sx >> sy >> dx >> dy >> t;

    matrix m(K+1, vector<LL>(K+1));
    int temp[6][6] = {
        {2,1,1,0,1,1},
        {1,2,0,1,1,1},
        {1,1,1,0,1,1},
        {1,1,0,1,1,1},
        {0,0,0,0,1,1},
        {0,0,0,0,0,1},
    };
    LL x[6] = {sx-1, sy-1, dx, dy, 1, 1};

    REP(i,1,7) REP(j,1,7) m[i][j] = temp[i-1][j-1];

    if(t != 0){
        m = pow(m, t);
        sx = sy = dx = dy = 0;
        REP(i,1,7) sx = modd(sx + x[i-1]*m[1][i]), sy = modd(sy + x[i-1]*m[2][i]);
        sx++,sy++;
    }
    cout << sx << " " << sy << endl;
    return 0;
}
