#include<cstdio>
#include<cstring>
#include<iostream>
#define LL long long
using namespace std;
struct matrix
{
	LL a[10][10];
	matrix()
	{
		a[0][0]=2;a[0][1]=1;a[0][2]=1;a[0][3]=0;a[0][4]=1;a[0][5]=2;
		a[1][0]=1;a[1][1]=2;a[1][2]=0;a[1][3]=1;a[1][4]=1;a[1][5]=2;
		a[2][0]=1;a[2][1]=1;a[2][2]=1;a[2][3]=0;a[2][4]=1;a[2][5]=2;
		a[3][0]=1;a[3][1]=1;a[3][2]=0;a[3][3]=1;a[3][4]=1;a[3][5]=2;
		a[4][0]=0;a[4][1]=0;a[4][2]=0;a[4][3]=0;a[4][4]=1;a[4][5]=1;
		a[5][0]=0;a[5][1]=0;a[5][2]=0;a[5][3]=0;a[5][4]=0;a[5][5]=1;
	}
}mt;
LL n,sx,sy,dx,dy,t;
LL ansx,ansy;
matrix operator*(matrix A,matrix B)
{
	matrix S;
	memset(S.a,0,sizeof(S.a));
	for (int i=0;i<6;i++)
	for (int j=0;j<6;j++)
	for (int k=0;k<6;k++)
	{
		S.a[i][j]+=A.a[i][k]*B.a[k][j];
		S.a[i][j]=(S.a[i][j]%n+n)%n;
	}
	return S;
}
matrix pow(matrix A,LL p)
{
	if (p<=1)return A;
	if (p==2)return A*A;
	matrix S=pow(pow(A,p/2),2);
	if (p&1)S=S*A;
	return S;
}
int main()
{
	cin>>n>>sx>>sy>>dx>>dy>>t;
	mt=matrix();mt=pow(mt,t);
	ansx=((mt.a[0][0]*(sx-1)+mt.a[0][1]*(sy-1)+mt.a[0][2]*dx+mt.a[0][3]*dy+mt.a[0][5])%n+n)%n+1;
	ansy=((mt.a[1][0]*(sx-1)+mt.a[1][1]*(sy-1)+mt.a[1][2]*dx+mt.a[1][3]*dy+mt.a[1][5])%n+n)%n+1;
	cout<<ansx<<" "<<ansy<<endl;
}
