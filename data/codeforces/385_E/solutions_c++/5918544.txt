#include<stdio.h>
#include<memory.h>
#define f(x) (((x-1)%n+n)%n+1)
    
typedef __int64 LL; 
LL n,t;
struct matrix{
    LL m[6][6];
}A,B;
matrix multi(matrix a,matrix b){    
    matrix c;
    int i,j,k;
    for(i=0;i<6;i++){
        for(j=0;j<6;j++)
            for(c.m[i][j]=k=0;k<6;k++)
                c.m[i][j]=f(c.m[i][j]+a.m[i][k]*b.m[k][j]);
    }
    return c;
}   
matrix power(LL cf){
    matrix y=B,ret=A;
    for(;cf;cf=cf>>1){
        if(cf&1) ret=multi(ret,y);
        y=multi(y,y);
    }
    return ret;
}   
    
int main(){
    int sx,sy,s,dx,dy;
    B.m[0][0]=B.m[0][2]=B.m[0][3]=1;
    B.m[1][1]=B.m[1][2]=B.m[1][3]=1;
    B.m[2][0]=B.m[2][3]=1;
    B.m[3][1]=B.m[3][2]=1;
    B.m[2][2]=B.m[3][3]=2;
    B.m[4][2]=B.m[4][3]=B.m[4][4]=1;
    B.m[5][4]=B.m[5][5]=1;
    while(~scanf("%I64d%d%d%d%d%I64d",&n,&sx,&sy,&dx,&dy,&t)){
        A.m[0][0]=sx;A.m[0][1]=sy;
        A.m[0][2]=f(dx+sx+sy);
        A.m[0][3]=f(dy+sx+sy);
        A.m[0][4]=A.m[0][5]=1;
        A=power(t);
        printf("%I64d %I64d\n",A.m[0][0],A.m[0][1]);
    }
    return 0;
}   