#include<cstdio>
#include<vector>
using namespace std;
typedef vector<long long>vec;
typedef vector<vec> mat;
long long n,sx,sy,dx,dy;
long long t;
mat mul(mat a,mat b)
{
    mat c(a.size(),vec(b[0].size()));
    for(int i=0;i<a.size();i++)
        for(int k=0;k<b.size();k++)
            for(int j=0;j<b[0].size();j++)
            c[i][j] = ((c[i][j]+a[i][k]*b[k][j])%n+n)%n;
    return c;
}
mat powm(mat a,long long k)
{
    mat c(a.size(),vec(a.size()));
    for(int i=0;i<a.size();i++) c[i][i] = 1;
    while(k>0)
    {
        if(k&1) c = mul(c,a);
        a = mul(a,a);
        k>>=1;
    }
    return c;
}
int main()
{
    scanf("%I64d%I64d%I64d%I64d%I64d%I64d",&n,&sx,&sy,&dx,&dy,&t);
   // if(n!=1)
    {
    mat nx(6,vec(6));
    nx[0][0] = 2;nx[0][1] = 1;nx[0][2] = 1;nx[0][4] = 1;
    nx[1][0] = 1;nx[1][1] = 2;nx[1][3] = 1;nx[1][4] = 1;
    nx[2][0] = 1;nx[2][1] = 1;nx[2][2] = 1;nx[2][4] = 1;
    nx[3][0] = 1;nx[3][1] = 1;nx[3][3] = 1;nx[3][4] = 1;
    nx[4][4] = 1;nx[4][5] = 1;
    nx[5][5] = 1;
    nx = powm(nx,t);
    mat f(6,vec(1));
    f[0][0] = sx;
    f[1][0] = sy;
    f[2][0] = dx;
    f[3][0] = dy;
    f[4][0] = 0;
    f[5][0] = 1;
    f = mul(nx,f);
    f[0][0] = (f[0][0]%n+n)%n;
    f[1][0] =  (f[1][0]%n+n)%n;
    if(f[0][0] == 0)
    f[0][0] = n;
    if(f[1][0] == 0)
    f[1][0] = n;
    printf("%lld %lld\n",f[0][0],f[1][0]);
    }
    //else if(n == 1)
   // printf("1 1\n");
}

	 		  	   	 	 		 	 		  			  		