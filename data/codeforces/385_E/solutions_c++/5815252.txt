#include <iostream>
#include <vector>

using namespace std;

typedef long long int ll;

ll n,sx,sy,dx,dy,t;

const int mida=6;

vector<ll> operator*(vector<vector<ll> > m,vector<ll> v)
{
  vector<ll> r(mida,0);
  for (int i=0;i<mida;i++)
    for (int j=0;j<mida;j++)
      r[i]=(r[i]+m[i][j]*v[j])%n;
  return r;
}


vector<vector<ll> > operator*(vector<vector<ll> > m1,
			       vector<vector<ll> > m2)
{
  vector<vector<ll> > r(mida,vector<ll> (mida,0));
  for (int i=0;i<mida;i++)
    for (int j=0;j<mida;j++)
      for (int k=0;k<mida;k++)
	r[i][j]=(r[i][j]+m1[i][k]*m2[k][j])%n;
  return r;
}


vector<vector<ll> > eleva(vector<vector<ll> > b,ll e)
{
  if (e==0) {
    vector<vector<ll> > r(mida,vector<ll> (mida,0));
    for (int i=0;i<mida;i++)
       r[i][i]=1;
    return r;
  }
  if (e%2==0) return eleva(b*b,e/2);
  return b*eleva(b*b,e/2);
}

int mat[6][6]={{2,1,1,0,1,0},
	       {1,2,0,1,1,0},
	       {1,1,1,0,1,0},
	       {1,1,0,1,1,0},
	       {0,0,0,0,1,1},
	       {0,0,0,0,0,1}};

int main()
{
  
  cin>>n>>sx>>sy>>dx>>dy>>t;
  vector<vector<ll> > m(mida,vector<ll> (mida,0));
  for (int i=0;i<mida;i++)
    for (int j=0;j<mida;j++)
      m[i][j]=mat[i][j];
  vector<ll> v(mida,0);
  v[0]=sx%n;
  v[1]=sy%n;
  v[2]=dx%n;
  v[3]=dy%n;
  v[4]=0;
  v[5]=1;
  v=eleva(m,t)*v;
  sx=v[0];
  if (sx==0) sx=n;
  if (sx<0) sx+=n;
  sy=v[1];
  if (sy==0) sy=n;
  if (sy<0) sy+=n;
  cout<<sx<<" "<<sy<<endl;
}

