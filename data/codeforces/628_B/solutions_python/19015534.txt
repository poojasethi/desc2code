s = raw_input()


def get_answer(s):
    def divisible_by_4(s):
        length = len(s)
        if length == 1:
            return int(s, 10) % 4 == 0
        else:
            return int(s[-2:], 10) % 4 == 0

    def b(s):
        return int(divisible_by_4(s))

    def ans(left, right):
        if left == right:
            return b(s[left])
        else:
            # _sum = 0
            _sum = ans(left, right - 1)
            # _sum1 = _sum
            for k in xrange(left, right + 1):
                _sum += b(s[k:right + 1])
            # print left, right, _sum1, _sum
            return _sum

    def dp_solution():
        length = len(s)
        dp = [0 for _ in xrange(length)]
        dp[0] = b(s[0])
        # for left in xrange(0, length):
        left = 0
        for right in xrange(left + 1, length):
            _sum = dp[right - 1]
            # if right - left >= 1:
            x = b(s[right - 1:right + 1])
            _sum += (right - left) * x + b(s[right])
            # else:
            #     for k in xrange(left, right + 1):
            #         _sum += b(s[k:right + 1])
            # print left, right, _sum, _sum1
            dp[right] = _sum
        return dp[length - 1]

    return dp_solution()
print get_answer(s)