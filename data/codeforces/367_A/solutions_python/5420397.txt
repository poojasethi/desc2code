s = raw_input().strip()

left_inclusive = [[0, 0, 0] for _ in xrange(len(s))]

for i, c in enumerate(s):
	left_inclusive[i][ord(c) - ord('x')] += 1

for i in xrange(1, len(s)):
	for j in xrange(3):
		left_inclusive[i][j] += left_inclusive[i - 1][j]

def in_range(l, r):
	if l == 0:
		return left_inclusive[r]
	else:
		left, right = left_inclusive[l - 1], left_inclusive[r]
		return [vr - vl for (vr, vl) in zip(right, left)]

def test(l, r):
	if r - l <= 1:
		return 'YES'
	chars = in_range(l, r)
	m = min(chars)
	for v in chars:
		v = v - m
		if v != 0 and v != 1:
			return 'NO'
	return 'YES'

m = int(raw_input())
for _ in xrange(m):
	l, r = map(lambda s: int(s) - 1, raw_input().split())
	print test(l, r)