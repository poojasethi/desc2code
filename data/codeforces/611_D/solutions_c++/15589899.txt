#include<iostream>
#include<algorithm>
#include<string>
using namespace std;
#define mod 1000000007
int dp3[5004][5004],dp1[5004][5004],dp2[5004][5004];
int n;
string s;
bool valid(int i,int j)
{
if(2*i-1-j<=0)
return false;
int temp=dp3[2*i-1-j][i];
if(i+temp>j)
return false;
if(s[i+temp-1]<=s[2*i-1-j+temp-1])
return false;
return true;
}

int func()
{
for(int i=n;i>=1;i--)
for(int j=n;j>=1;j--)
if(s[i-1]!=s[j-1])
dp3[i][j]=0;
else
dp3[i][j]=dp3[i+1][j+1]+1;
for(int j=1;j<=n;j++)
for(int i=1;i<=j;i++)
if(s[i-1]=='0')
{
dp2[i][j]=dp2[i-1][j];
continue;
}
else if(i==1)
{
dp1[i][j]=1;
dp2[i][j]=1;
}
else
{
if(valid(i,j))
dp1[i][j]=(dp1[i][j]+dp1[2*i-1-j][i-1])%mod;
if(i!=j)
{
dp1[i][j]=dp1[i][j]+dp2[i-1][i-1];
if(2*i-j-1>=0)
dp1[i][j]-=dp2[2*i-j-1][i-1];
if(dp1[i][j]<0)
dp1[i][j]+=mod;
}
dp1[i][j]=dp1[i][j]%mod;
dp2[i][j]=(dp2[i-1][j]+dp1[i][j])%mod;
}
return dp2[n][n];
}

int main()
{
ios_base::sync_with_stdio(false);
cin>>n>>s;
cout<<func()<<endl;
return 0;
}
