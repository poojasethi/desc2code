#include<bits/stdc++.h>
using namespace std;
int const lim = 5000;
string s;
int memo[lim+3][lim+3][3];
int com[lim+3][lim+3];
int const mod = 1e9+7;
int get(int i,int j)
{
    if(i+j>=s.size())return lim+10;
    if(s[i]!=s[i+j])return com[i][j] = i;
    if(com[i][j]!=-1)return com[i][j];
    return com[i][j] = get(i+1,j);
}
bool check(int i,int j)
{
    if(get(i,j)<i+j)
        return s[get(i,j)]<s[get(i,j)+j];
    return false;
}
int solve(int i,int len,bool fuck)
{
    bool shit = true;
    if(i==s.size())return 1;
    if(i+len>s.size()||s[i]=='0')return 0;
    if(fuck)shit = check(i-len,len);
    if(memo[i][len][fuck]!=-1)return memo[i][len][fuck];
    if(!shit)return memo[i][len][fuck] = solve(i,len+1,false)%mod;
    int tot = 0;
    tot+=solve(i+len,len,true);tot+=solve(i,len+1,false);
    return memo[i][len][fuck] = tot%mod;
}
int main()
{
    memset(memo,-1,sizeof memo);
    memset(com,-1,sizeof com);
    int n;cin >> n;
    cin >> s;
    cout << solve(0,1,false)<<endl;
}
