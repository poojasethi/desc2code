/*
 * D.cpp
 *
 *  Created on: 2016��1��1��
 *      Author: Administrator
 */


#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<string>
using namespace std;
int n;
string s;
vector<vector<int> > dp;
vector<vector<int> > lcp;

int g(int x,int y){
	if(x>y) swap(x,y);
	if(y==n) return 0;
	if(lcp[x][y]!=-1) return lcp[x][y];
	lcp[x][y]=0;
	if(s[x]==s[y]) lcp[x][y]=g(x+1,y+1)+1;
	return lcp[x][y];
}

int f(int x,int y){
	if(y==n-1) return 1;
	if(dp[x][y]!=-1) return dp[x][y];
	dp[x][y]=f(x,y+1);
	int l=y-x+1;
	int p=g(x,y+1);
	if(s[y+1]!='0'){
		if(l+y<n&&p<l&&s[x+p]<s[y+1+p]){

		}else{
			l++;
		}
		if(l+y<n){
			dp[x][y]+=f(y+1,y+l);
		}

	}
	return dp[x][y]=dp[x][y]%1000000007;
}
int main(){
	cin>>n>>s;
	dp.assign(n+10,vector<int>(n+10,-1));
	lcp=dp;
	cout<<f(0,0)<<endl;
	return 0;
}

