#include <cstdio>
using namespace std;

#define n   100005
#define INF ((1<<30)-1)
#define CH  (ch=getchar())

int     N,K,flag,A[n],D[n],L[n],R[n],Num[n];

int     IN(){
        int x=0,f=0,ch;
        for (;CH<'0'||ch>'9';f=(ch=='-'))
            if  (ch=='?')   return  INF;
        for (;ch>='0'&&ch<='9';CH)  (x*=10)+=ch-'0';
        return  f?-x:x;
}

int     main(){
        N=IN(); K=IN();
        for (int i=1;i<=N;i++)  {
            A[i]=IN();
            if  (A[i]==INF){
                if  (i>K&&A[i-K]==INF)  D[i]=D[i-K],Num[D[i]]++;
                else    D[i]=i,Num[i]=1,R[i]=INF,L[i]=(i>K?A[i-K]:-INF);
            }   else    if  (i>K){
                if  (A[i-K]==INF)   R[D[i-K]]=A[i];
                    else    flag|=(A[i]<=A[i-K]);
            }
        }
        for (int i=1;i<=N;i++)  if  (D[i]==i){
            if  (R[i]-L[i]>Num[i]){
                int v=(Num[i]-1)/2,u=v-Num[i]+1,z;
                if  (u<=L[i])   z=L[i]-u,u+=z+1,v+=z+1;
                if  (v>=R[i])   z=v-R[i],u-=z+1,v-=z+1;
                for (int j=i;Num[i]--;j+=K,u++) A[j]=u;
            }   else    flag|=1;
        }
        if  (flag)  puts("Incorrect sequence");
        else    for (int i=1;i<=N;i++)  printf("%d ",A[i]);
}