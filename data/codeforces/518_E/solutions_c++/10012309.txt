#include <bits/stdc++.h>

using namespace std;

const int MAXN = 110000;
const int INF = 1e9 + MAXN;

int n,k;
int a[MAXN];
bool u[MAXN];
bool flag;
char buf[100];
int ls[MAXN];

bool gen(int n,int l,int r)
{
	if (r - l <= n) return false;
	if (l > -1)
	{
		for(int i = 0;i < n;i++) ls[i] = i+l+1;
	} else
	if (r < 1)
	{
		for(int i = 0;i < n;i++) ls[i] = r-i-1;
		sort(ls,ls+n);
	} else
	{
		int s = 0,t = 1;
		for(int i = 0;i < n;i++)
		{
			if ((-s <= t && s > l) || (t >= r)) ls[i] = s--; else
			ls[i] = t++;
		}
		sort(ls,ls+n);
	}
	return true;
}

int main()
{
	scanf("%d%d",&n,&k);
	for(int i = 0;i < n;i++)
	{
		scanf("%s",buf);
		if (buf[0] == '?') u[i] = true; else
		{
			u[i] = false;
			a[i] = atoi(buf);
		}
	}
	flag = true;
	for(int i = 0;i < n;i++)
		if (u[i])
		{
			int L,R,t,x;
			t = 1;
			x = i;
			if (x < k) L = -INF; else L = a[x-k];
			while(x+k < n && u[x+k])
			{
				x += k;
				t++;
			}
			if (x+k < n) R = a[x+k]; else R = INF;
			flag = gen(t,L,R);
			if (!flag) break;
			x = i;
			for(int j = 0;j < t;j++)
			{
				a[x] = ls[j];
				u[x] = false;
				x += k;
			}
		} else
		{
			if (i >= k && a[i] <= a[i-k])
			{
				flag = false;
				break;
			}
		}
	if (flag)
	{
		for(int i = 0;i < n-1;i++) printf("%d ", a[i]);
		printf("%d\n", a[n-1]);
	} else puts("Incorrect sequence");
	return 0;
}