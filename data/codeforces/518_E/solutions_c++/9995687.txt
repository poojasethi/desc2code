#include <algorithm>
#include <iostream>
#include <cassert>
#include <cstdio>

using namespace std;

int A[100010];
int N,K;

int q[100010];

char str[15];

void inc(){
	printf("Incorrect sequence\n");
	exit(0);
}

int main(){

	int i;

	scanf("%d%d",&N,&K);

	for(i = 0; i < N; ++i){
		scanf("%s",str);
		if(str[0] == '?'){
			A[i] = 0;
			q[i] = 1;
			continue;
		}
		sscanf(str,"%d",&A[i]);
	}

	int k,p,st,en,n;
	for(i = 0; i < K; ++i){
		p = i;
		for(k = i; k < N; k+=K){
			if(!q[k]){
				p = k+K;
				continue;
			}

			if(k+K < N && q[K+k]) continue;

			n = (k-p)/K+1;
			st = (p >= K ? A[p-K] : -(1e9)-n-1);
			en = (k+K < N ? A[k+K] : (1e9)+n+1);


			if(en-n <= st) inc();

			if(st > 0){
				A[p] = st+1;
			}else if(en < 0){
				A[p] = en-n;
			}else{
				A[p] = max(-n/2,st+1);
				A[p] = min(A[p],en-n);
			}

			for(p+=K; p <= k; p +=K){
				A[p] = A[p-K]+1;
			}
		}

		for(k = i+K; k < N; k+=K){
			if(A[k-K] >= A[k]) inc();
		}
	}

	for(i = 0; i < N; ++i){
		printf("%d ",A[i]);
	}

	return 0;
}
