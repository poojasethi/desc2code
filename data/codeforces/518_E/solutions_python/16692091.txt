MARK = 2 * 10 ** 9

def solveSeg(a, left, right, minVal, maxVal):
	begin = 0
	if maxVal <= 0: begin = maxVal - 1
	elif minVal >= 0: begin = minVal + right - left + 1
	else: begin = maxVal - 1 if maxVal - minVal == right - left + 2 else min(maxVal - 1, (right - left) / 2)
	for i in xrange(right, left - 1, -1): 
		a[i] = begin
		begin -= 1

def solve(a):
	n = len(a)
	i = -1
	while i < n:
		j = n
		for j in xrange(i + 1, n):
			if a[j] != MARK: break
		if j == n - 1 and a[j] == MARK: j = n
		if -1 == i and j == n:
			a[0] = -(n - 1) / 2
			for k in xrange(1, n): a[k] = a[k - 1] + 1
			return True
		elif -1 == i and j != n:
			if j > 0: solveSeg(a, 0, j - 1, -MARK, a[j])
		elif i != -1 and j == n:
			solveSeg(a, i + 1, n - 1, a[i], MARK)
		else:
			if a[j] - a[i] < j - i: return False
			solveSeg(a, i + 1, j - 1, a[i], a[j])
		if j == n: break
		i = j
	return True

n, k = map(int, raw_input().split())
s = raw_input().split()
a = [0] * n
for i in xrange(n): a[i] = int(s[i]) if s[i] != "?" else MARK
for i in xrange(k):
	b = []
	for j in xrange(i, n, k): b.append(a[j])
	if not solve(b):
		print "Incorrect sequence"
		exit()
	for j in xrange(i, n, k): a[j] = b[j / k]
for x in a: print x,
