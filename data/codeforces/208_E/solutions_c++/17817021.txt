#include<bits/stdc++.h>
using namespace std;
#define fr first
#define sc second
#define pb push_back
#define pa pair<int,int>
#define paa pair<pa,int>

#define mod 1000000007
#define pi M_PI
vector <int> way[1000000],v[1000000];
int bit[1000000],bas[1000000];
int dad[200000][25],ar[1000000],n,depth[1000000],tim;
int dfs(int cur,int pre){
	bas[cur]=++tim;
	if(cur){
		depth[cur]=depth[pre]+1;
	}
	dad[cur][0]=pre;
	v[depth[cur]].pb(bas[cur]);
	for(int i=0 ; i<way[cur].size() ; i++){
		dfs(way[cur][i],cur);
	}
	bit[cur]=tim;
	return 0;
}
int lca(){
	for(int i=1 ; i<=16 ; i++){
		for(int j=1 ; j<=n ; j++){
			dad[j][i]=dad[dad[j][i-1]][i-1];
		}
	}
	return 0;
}
int main(){
	scanf("%d",&n);
	for(int i=1 ; i<=n ;i++){
		scanf("%d",&ar[i]);
		way[ar[i]].pb(i);
	}
	dfs(0,-1);
	lca();
	int m,a,b;
	scanf("%d",&m);
	for(int i=1 ; i<=m ; i++){
		scanf("%d %d",&a,&b);
		if(depth[a]<=b){
			printf("0 ");
			continue;
		}
		int x=a;
		for(int j=0 ; j<=16 ; j++){
			if(b & (1<<j)){
				a=dad[a][j];
			}
		}
		int o=(upper_bound(v[depth[x]].begin(),v[depth[x]].end(),bit[a]))-(lower_bound(v[depth[x]].begin(),v[depth[x]].end(),bas[a]));
		printf("%d ",o-1);
	}
	return 0;
}
