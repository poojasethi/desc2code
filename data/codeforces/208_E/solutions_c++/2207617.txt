#include<cstdio>
#include<vector>
#include<algorithm>
#include<iostream>
using namespace std;
int n,m,num;
vector<int>p[100005],q[100005];
int fa[17][100005],d[100005],l[100005],r[100005];
void dfs(int x,int y)
{
    d[x]=y;
    p[y].push_back(num);
    l[x]=num++;
    for(vector<int>::iterator it=q[x].begin();it!=q[x].end();it++)
        dfs(*it,y+1);
    r[x]=num;
}
int main()
{
    int i,j,a,b;
    scanf("%d",&n);
    for(i=1;i<=n;i++){
        scanf("%d",&j);
        q[j].push_back(i);
        fa[0][i]=j;
    }
    for(i=1;i<17;i++)
        for(j=1;j<=n;j++)
            fa[i][j]=fa[i-1][fa[i-1][j]];
    dfs(0,0);
    scanf("%d",&m);
    while(m--){
        scanf("%d%d",&a,&b);
        j=a;
        for(i=0;i<17;i++)
            if((1<<i)&b)
                j=fa[i][j];
        if(j)
            b=lower_bound(p[d[a]].begin(),p[d[a]].end(),r[j])-lower_bound(p[d[a]].begin(),p[d[a]].end(),l[j])-1;
        else
            b=0;
        cout<<b<<endl;
    }
    return 0;
}
