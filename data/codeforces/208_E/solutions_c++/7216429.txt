#include <iostream>
#include <algorithm>
#include <vector>
#define pb push_back
using namespace std;
const int maxn = 1000*100 + 152 ;
int n , par[17][maxn] , x , m , p , time , st[maxn] , fi[maxn] , hig[maxn] ;
vector <int> v[maxn] , h[maxn] ;
void dfs (int x , int hi){
	st[x] = time++ ;
	hig[x] = hi ;
	for (int i=0 ; i<v[x].size() ; i++){
		h[hi+1].pb(time);
		dfs (v[x][i] , hi+1);
	}
	fi[x] = time ;
}
int main (){
	cin >> n ;
	for (int i=1 ; i<=n ; i++){
		cin >> x ;
		v[x].pb(i);
		par[0][i] = x ;
	}
	for (int i=1 ; i<17 ; i++)
		for (int j=1 ; j<=n ; j++)
			par[i][j] = par[i-1][par[i-1][j]] ;
	dfs (0 , 0);
	cin >> m ;
	while (m--){
		cin >> x >> p ;
		for (int i=0 ; i<17 ; i++)
			if ((1<<i)&p)
				x = par[i][x] ;
		if (!x){
			cout << 0 << endl ;
			continue ;
		}
		p += hig[x] ;
		int ans = upper_bound (h[p].begin() , h[p].end() , fi[x])-h[p].begin() ;
		ans -= lower_bound (h[p].begin() , h[p].end() , st[x])-h[p].begin();
		cout << ans-1 << endl ;
	}
	return 0;
}
