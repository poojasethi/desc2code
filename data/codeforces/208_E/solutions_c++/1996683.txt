#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#define siz 100001
#define pb push_back
using namespace std;
int tot,b[siz],e[siz],h[siz];
int f[siz],s[siz],p[siz][20],c[20],d[siz];
int n;
vector<int>g[siz];
void Add(int x,int y)
{
	b[++tot]=y; e[tot]=h[x]; h[x]=tot;
}

void Dfs(int x)
{
	int pos=0;
	while (p[p[x][pos]][pos]!=0)
		p[x][++pos]=p[p[x][pos-1]][pos-1];
	g[d[x]].pb(++tot); f[x]=tot; 
	for (int go=h[x];go;go=e[go])
		d[b[go]]=d[x]+1,Dfs(b[go]);
	g[d[x]].pb(++tot); s[x]=tot;
}

int main()
{
	scanf("%d",&n);
	for (int i=1;i<=n;i++)	
	{
		scanf("%d",&p[i][0]);
		if (p[i][0]!=0) Add(p[i][0],i);
	}
	tot=0;
	for (int i=1;i<=n;i++)
		if (p[i][0]==0) Dfs(i);
	c[0]=1;
	for (int i=1;i<18;i++)c[i]=c[i-1]*2;
	int m,x,y;
	scanf("%d",&m);
	for(int i=0;i<m;i++)
	{
		scanf("%d%d",&x,&y);
		int pos=x,i,h=d[x];
		while (y&&pos)
		{
			for (i=16;i>=0;i--)
				if (y>=c[i]){y-=c[i];break;}
			pos=p[pos][i];
		}
		if (pos) printf("%d",(lower_bound(g[h].begin(),g[h].end(),s[pos])-
								lower_bound(g[h].begin(),g[h].end(),f[pos]))/2-1); 
		else printf("0");
		if (i!=m-1)printf(" ");
	}
	return 0;
}
			
	
