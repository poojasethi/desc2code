#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>
#include <set>
#include <vector>

#define pb push_back
#define ins insert
#define sz(x) int((x).size())

const int N=100010;
const int inf=0x3f3f3f3f;

using namespace std;

int f[21][N],l[N],r[N],dep[N],tot;
vector<int> st[N];
vector<int> vt[N];


void dfs(int u,int d)
{
	dep[u]=d;
	st[d].pb(tot);
	l[u]=tot++;
	for(int i=0;i<sz(vt[u]);i++)
	{
		int v=vt[u][i];
		dfs(v,d+1);
	}
	r[u]=tot;
}

int main()
{
	int n;
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%d",&f[0][i]);
	for(int i=1;i<=n;i++)
		vt[f[0][i]].pb(i);
	dfs(0,0);
	for(int i=1;i<=20;i++)
		for(int j=1;j<=n;j++)
			f[i][j]=f[i-1][f[i-1][j]];
	int q;
	scanf("%d",&q);
	for(int i=0;i<q;i++)
	{
		int a,b;
		scanf("%d%d",&a,&b);
		vector<int> &u=st[dep[a]];
		int p=a;
		for(int i=20;i>=0;i--) if((1<<i)&b) p=f[i][p];
		int ret=0;
		if(p) ret=lower_bound(u.begin(),u.end(),r[p])-lower_bound(u.begin(),u.end(),l[p])-1;
		printf("%d ",ret);
	}
	puts("");
	return 0;
}
