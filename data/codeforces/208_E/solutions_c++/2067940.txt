#include <bits/stdc++.h>
using namespace std;
#define cl(a,b) memset((a),(b), sizeof(a))
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define db(x) cerr << #x " == " << x << "\n"
#define _ << ", " <<
#define fr(a,b,c) for( int a = b ; a < c ; a++ )
#define rp(a,c) fr(a,0,c)

#define maxn 100010

int cc=0;
int a[maxn], b[maxn], c[maxn], d[maxn], e[maxn];
vector<int> adj[maxn], niv[maxn];

int pre(int x, int k){
	c[x]=++cc;
	niv[k].pb(cc);
	a[cc]=k;
	b[cc]=niv[k].size()-1;
	int y=cc;
	rp(i,adj[x].size())y = pre(adj[x][i], k+1);
	return e[c[x]]=y;
}
int solve(int x, int y){
	x=c[x];
	int k = a[x]-y;
	if(k<=0)return 0;
	int p = niv[k][(upper_bound(niv[k].begin(), niv[k].end(), x) - niv[k].begin() - 1 )];
	int q = e[p];
	k = a[x];
	p = (upper_bound(niv[k].begin(), niv[k].end(), p) - niv[k].begin() );
	q = (upper_bound(niv[k].begin(), niv[k].end(), q) - niv[k].begin() );
	return q-p-1;
}
int main(){
	int x, y, m, n;
	scanf("%d", &n);
	fr(i,1,n+1){
		scanf("%d", &x);
		adj[x].pb(i);
		d[i]=x;
	}
	cc=-1;
	pre(0,0);
	scanf("%d", &m);
	rp(i,m){
		scanf("%d%d", &x, &y);
		printf("%d ",solve(x,y));
	}
	return 0;
}
