#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;
const int MAXN = 100001;
const int MAXH = 18;

typedef vector<int> tbl;

int n, m, x, y, tick;
int f [MAXN][MAXH];
int l [MAXN], r [MAXN], d [MAXN];
tbl g [MAXN], q [MAXN];

inline void DFS (int u, int dep) {
	d [u] = dep;
	q [dep].push_back (tick);
	
	l [u] = tick++;
	for (int i = 0; i < (int)g [u].size (); ++i)
		DFS (g [u][i], dep + 1);
	r [u] = tick;
}

int main () {
//	freopen ("cf130e.in", "r", stdin);
//	freopen ("cf130e.out", "w", stdout);
	
	scanf ("%d\n", &n);
	for (int i = 1; i <= n; ++i) {
		scanf ("%d", &f [i][0]);
		g [f [i][0]].push_back (i);
	}
	
	DFS (0, 0);
	
	for (int i = 1; i <= 16; ++i)
		for (int j = 1; j <= n; ++j)
			f [j][i] = f [f [j][i - 1]][i - 1];
	
	scanf ("%d\n", &m);
	for (int i = 1; i <= m; ++i) {
		scanf ("%d %d\n", &x, &y);
		
		tbl& t = q [d [x]];
		for (int j = 0; j <= 16; ++j)
			if ((y >> j) & 1)
				x = f [x][j];
		
		int res = 0;
		if (x > 0)
			res = lower_bound (t.begin (), t.end (), r [x]) - lower_bound (t.begin (), t.end (), l [x]) - 1;
			
		printf ("%d%s", res, (i < m) ? " " : "\n");
	}
	
	fclose (stdin);
	fclose (stdout);
	return 0;
}
