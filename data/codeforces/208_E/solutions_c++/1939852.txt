#include <cstdio>
#include <algorithm>
#include <vector>

using namespace std;

vector<int> v[100001],e[100001];
int t,f[100001][17],d[100001],l[100001],r[100001];

void dfs(int x)
{
  for(int z=0;z<(int)e[x].size();++z)
  {
    int y=e[x][z];
    d[y]=d[x]+1;
    v[d[y]].push_back(++t);
    l[y]=t;
    dfs(y);
    r[y]=t+1;
  }
}

int main(void)
{
  int n;
  scanf("%d",&n);
  for(int i=1;i<=n;++i)
  {
    scanf("%d",&f[i][0]);
    e[f[i][0]].push_back(i);
  }
  for(int k=1;k<17;++k)
    for(int i=1;i<=n;++i)
      f[i][k]=f[f[i][k-1]][k-1];
  t=0;
  dfs(0);
  int m;
  scanf("%d",&m);
  for(int i=1;i<=m;++i)
  {
    int j,k;
    scanf("%d %d",&j,&k);
    int root=j;
    for(int p=0;p<17;++p)
      if((k&(1<<p))>0)
        root=f[root][p];
    if(root==0)
      printf("0 ");
    else
      printf("%d ",lower_bound(v[d[j]].begin(),v[d[j]].end(),r[root])-
                   lower_bound(v[d[j]].begin(),v[d[j]].end(),l[root])-1);
  }
  return 0;
}