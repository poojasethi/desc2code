#include<bits/stdc++.h>
using namespace std;
const int MAX=1e5+9,lg=20;
vector<int> g[MAX],h[MAX];
int cnt,d[MAX],s[MAX],f[MAX],par[MAX][lg];
void dfs(int v)
{	
	s[v]=cnt++;
	h[d[v]].push_back(s[v]);
	for (int i=0;i<g[v].size();i++)
	{
	    int u=g[v][i];
		d[u]=d[v]+1;
		par[u][0]=v;
		for (int i=1;i<lg;i++) 
		    par[u][i]=par[par[u][i-1]][i-1];
		dfs(u);
	}
	f[v]=cnt;
}

int main()
{
    std::ios::sync_with_stdio(false);
	int n,v,q,p;
	cin>>n;
	for (int i=0;i<n;i++) cin>>v,g[v].push_back(i+1);
	dfs(0);
	cin>>q;
	while (q--)
	{
		cin>>v>>p;
		for (int i=0;i<lg;i++) 
		if (p&(1<<i)) 
		    v=par[v][i]; 
		if (!v) 
		{
		    cout<<0<<' '; 
		    continue;
		}
		cout<<(upper_bound(h[d[v]+p].begin(),h[d[v]+p].end(),f[v])-h[d[v]+p].begin())-(upper_bound(h[d[v]+p].begin(),h[d[v]+p].end(),s[v])-h[d[v]+p].begin())-1<<' ';
	}
}