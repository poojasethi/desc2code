#include <algorithm>
#include <cstdio>
#include <iostream>
#include <vector>

#define pb push_back

using namespace std;

const int MAXN=1e5+10;

int N,M,cnt;
int st[MAXN];
int fn[MAXN];
int dep[MAXN];
int par[MAXN][18];

vector<int> g[MAXN];
vector<int> vec[MAXN];

inline void dfs( int nd , int d ){
	
	dep[nd]=d;
	vec[d].pb(cnt);
	st[nd]=cnt++;
	
	for( vector<int>::iterator it=g[nd].begin() ; it!=g[nd].end() ; it++ )
		dfs(*it,d+1);
	
	fn[nd]=cnt;
}

int main(){
	
	scanf("%d",&N);
	
	for( int i=1 ; i<=N ; i++ ){
		scanf("%d",&par[i][0]);
		g[par[i][0]].pb(i);
	}
	
	/*for( int i=1 ; i<=N ; i++ )
		if( !par[i][0] )
			dfs(i,0);*/
	
	dfs(0,0);
	
	for( int i=1 ; i<=17 ; i++ )
		for( int j=1 ; j<=N ; j++ )
			par[j][i]=par[par[j][i-1]][i-1];
	
	scanf("%d",&M);
	
	for( int v,p,i=0 ; i<M ; i++ ){
		
		scanf("%d%d",&v,&p);
		
		if( dep[v]<=p ){
			printf("0 ");
			continue;
		}
		
		int x=v;
		
		for( int j=0 ; j<=17 ; j++ )
			if( p&(1<<j) )
				x=par[x][j];
		
		printf("%d ",lower_bound(vec[dep[v]].begin(),vec[dep[v]].end(),fn[x])-lower_bound(vec[dep[v]].begin(),vec[dep[v]].end(),st[x])-1);
	}
	
	return 0;
}