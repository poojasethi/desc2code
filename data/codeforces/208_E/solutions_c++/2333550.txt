#include <cstdio>
#include <vector>
#include <algorithm>
#define N 100005
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int n, m, s[N], e[N], f[N], o[N], a[N][17], d[N], t, x;
bool u[N];
vector<int> v[N];

void dfs(int y){
	u[y] = 1;
	s[y] = t;
	d[y] = x;
	v[x].push_back(t);
	for(int i = 1; 1 << i <= x; i++) a[y][i] = a[a[y][i - 1]][i - 1];
	
	x++;
	fe(i, f[y], o) dfs(i);
	x--;
	
	e[y] = t++;
}

int main(){
	scanf("%d", &n);
	
	FI(i, 1, n){
		int t;
		scanf("%d", &t);
		a[i][0] = t;
		o[i] = f[t];
		f[t] = i;
	}
	
	FI(i, 1, n) if(!u[i]) dfs(i);
	
	scanf("%d", &m);
	while(m--){
		int x, y, t, c;
		scanf("%d %d", &x, &y);
		if(d[x] < y){
			printf("0 ");
			continue;
		}
		
		for(t = x, c = 0; y; y >>= 1, c++) if(y & 1) t = a[t][c];
		int l = lower_bound(v[d[x]].begin(), v[d[x]].end(), s[t]) - v[d[x]].begin();
		int h = lower_bound(v[d[x]].begin(), v[d[x]].end(), e[t]) - v[d[x]].begin();
		printf("%d ", h - l - 1);
	}
	
	scanf("\n");
}
