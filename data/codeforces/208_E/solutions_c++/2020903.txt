#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;

#define fe(i,n) for(__typeof(n.begin()) i=n.begin();i!=n.end();i++)
#define rep(i,l,r) for(int i=l;i<=r;++i)

const int N = 100050, lgN = 20;

int n, m, x, y, t, f[N][lgN];
int d[N], l[N], r[N];
vector<int> e[N], c[N];

void dfs (int x, int y)
{
	d[x] = y;
	c[y].push_back(t);
	l[x] = t++;
	fe(i, e[x]) dfs(*i, y + 1);
	r[x] = t;
}

int main ()
{
	scanf("%d", &n);
	rep(i, 1, n) scanf("%d", f[i]);
	rep(i, 1, n) e[f[i][0]].push_back(i);
	dfs(0, 0);
	rep(i, 1, lgN - 1) rep(j, 1, n)
		f[j][i] = f[f[j][i - 1]][i - 1];
	scanf("%d", &m); rep(i, 1, m)
	{
		scanf("%d%d", &x, &y);
		vector<int> &u = c[d[x]];
		rep(i, 0, lgN - 1) if (y >> i & 1) x = f[x][i];
		if (!x) { printf("0 "); continue; }
		printf("%d ", lower_bound(u.begin(), u.end(), r[x]) - lower_bound(u.begin(),u.end(),l[x]) - 1);
	}
	puts("");
	return 0;
}
