//By momo
#include<cstdio>
#include<vector>
#include<algorithm>
#define N 100010
#define PB push_back
#define FOR(it,c) for(__typeof((c).begin())it=(c).begin();it!=(c).end();it++)
using namespace std;
int n,m,i,j,x;
int L[N], R[N], tme[N], lev[N], par[20][N], c;
vector<int> G[N], Le[N];
void dfs( int p, int l ){
	Le[lev[p]=l].PB(L[p]=c++);
	FOR(it,G[p]) dfs(*it,l+1); R[p]=c;
}
int main(){
	scanf("%d",&n);
	for( i=1; i<=n; i++ ) scanf( "%d",&x ), G[par[0][i]=x].PB(i); dfs( 0, 0 );
	for( i=1; i<18; i++ ) for( j=1; j<=n; j++ ) par[i][j]=par[i-1][par[i-1][j]];
	scanf("%d",&m);
	while( m-- ){
		int u,p,v;
		scanf("%d%d",&u,&p); v=u;
		for( i=0; i<18; i++,p>>=1 ) if(p&1) u=par[i][u];
		if(!u){ printf("0%c",m?' ':'\n'); continue; }
		int lb=lower_bound(Le[lev[v]].begin(),Le[lev[v]].end(),L[u])-Le[lev[v]].begin();
		int rb=lower_bound(Le[lev[v]].begin(),Le[lev[v]].end(),R[u])-Le[lev[v]].begin();
		printf( "%d%c", rb-lb-1, m?' ':'\n' );
	}
}
