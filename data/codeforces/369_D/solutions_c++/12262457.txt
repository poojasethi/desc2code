#include <cstdio>
#include <cstring>
#include <vector>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#define N 3005
using namespace std;

int p[N],tmp[N];
int vis[N][N];
int n,m,cnt;
void dfs(int a,int b,int t){
  if(vis[a][b])  return;
  vis[a][b]=1;
  cnt++;
  if(t==m)  return;
  if(b>=n)  return;
  int p1=p[a],p2=tmp[b];
  if(p1){
    if(p2)  dfs(b+1,b+2,t+1);
    if(p2!=100)  dfs(a,b+1,t+1);
  }
  if(p1!=100&&p2!=0)  dfs(b,b+1,t+1);
}
int main()
{
  int i,j;
  while(cin>>n>>m){
    memset(tmp,0,sizeof(tmp));
    memset(vis,0,sizeof(vis));
    cnt=0;
    for(i=0;i<n;i++)  cin>>p[i];
    for(i=n-1;i>=0;i--) tmp[i]=max(tmp[i+1],p[i]);
    dfs(0,1,0);
    cout<<cnt<<endl;
  }
  return 0;
}

   	 	  		 			  		  		     	 		