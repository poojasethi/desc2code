#include <cstdio>
#include <cstring>
#include <iostream>

using namespace std;

const int MAX_N = 3001;

int n, k;
int p[MAX_N];
int MAX_P[MAX_N];
bool vis[MAX_N][MAX_N];

void dfs(int a, int b, int gun, int &cnt) {
	if (vis[a][b]) return ;
	vis[a][b] = true;
	++cnt;
	if (gun == k || b >= n) return ;
	if (p[a] > 0) {
		if (MAX_P[b] > 0) dfs(b + 1, b + 2, gun + 1, cnt);
		if (MAX_P[b] != 100) dfs(a, b + 1, gun + 1, cnt);
	}
	if (MAX_P[b] != 0 && p[a] != 100) dfs(b, b + 1, gun + 1, cnt);
}

void solve() {
	for (int i = n - 1; i >= 0; --i) {
		MAX_P[i] = max(MAX_P[i+1], p[i]);
	}
	int cnt = 0;
	dfs(0, 1, 0, cnt);
	printf("%d", cnt);
}

int main() {
	scanf("%d%d", &n, &k);
	for (int i = 0; i < n; ++i) {
		scanf("%d", &p[i]);
	}
	solve();
	return 0;
} 
 	 	        	  		    	 	  	