#include<algorithm>
#include<iostream>
#include<cstdlib>
#include<cstring>
#include<cstdio>
using std::max;
int const N = 3118;
int n,k,p[N];
int h[N],b[N],dp[N][N],ans;
void dfs(int st,int s,int e)
{
    if(dp[s][e])return ;
    dp[s][e]=1;ans++;
    if(e>n||st>=k)return ;
    int f1=p[s],f2=h[e];
    if(f1)
    {
       if(f2)dfs(st+1,e+1,e+2);
       if(f2!=100)dfs(st+1,s,e+1);
    }
    if(f1!=100&&f2)dfs(st+1,e,e+1);
}
int main()
{
    while(~scanf("%d %d",&n,&k))
    {
          memset(h,0,sizeof(h));
          memset(b,0,sizeof(b));
          memset(dp,0,sizeof(dp));
          for(int i=1;i<=n;i++)
              scanf("%d",&p[i]);
          for(int i=n;i>0;i--)
              h[i]=max(h[i+1],p[i]);
          ans=0;
          dfs(0,1,2);
          printf("%d\n",ans);
    }
    return 0;
}
