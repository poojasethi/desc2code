#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>

using namespace std;
const int N = 4005;
int p[N], s[N];
bool vis[N][N];
int n, k;
int ans;

void DFS(int A, int B, int round){
	if(vis[A][B]) return;
	vis[A][B] = 1;
	ans++;
	if(round == k || B>n) return;
	int p1 = p[A], p2 = s[B];
	if(p1){
		if(p2) DFS(B+1, B+2, round+1);
		if(p2!=100) DFS(A, B+1, round+1);
	}
	if(p1!=100&&p2) DFS(B, B+1, round+1);
	return;
}


int main(){
	//	freopen("in.txt", "r", stdin);
  scanf("%d %d", &n, &k);
  for(int i = 1; i <= n; i++){
    scanf("%d", &p[i]);
  }
  for(int i = n; i >= 1; i--){
	  s[i] = max(s[i+1], p[i]); 
  }
  ans = 0;
  DFS(1, 2, 0);
  printf("%d\n", ans);
  return 0;
}
