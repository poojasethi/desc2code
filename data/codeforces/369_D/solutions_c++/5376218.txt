#include <iostream>
#include <cstdio>
#include <algorithm>

using namespace std;

const int maxn=4000;

bool dp[maxn][maxn];
int n,k,p[maxn],sp[maxn],ans=0;

void dfs(int t,int A,int B)
{
    if(dp[A][B]) return ;
    dp[A][B]=true; ans++;
    if(t==k||B>n) return;
    int p1=p[A],p2=sp[B];
    if(p1)
    {
        if(p2) dfs(t+1,B+1,B+2);
        if(p2!=100) dfs(t+1,A,B+1);
    }
    if(p1!=100&&p2) dfs(t+1,B,B+1);
}

int main()
{
    scanf("%d%d",&n,&k);
    for(int i=1;i<=n;i++) scanf("%d",p+i);
    for(int i=n;i>=1;i--) sp[i]=max(sp[i+1],p[i]);
    dfs(0,1,2);
    printf("%d\n",ans);
    return 0;
}
