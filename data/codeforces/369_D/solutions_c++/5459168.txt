#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int MAX=3010;
int ans,n,p[MAX],maxp[MAX];
bool vis[MAX][MAX];
void dfs(int a,int b,int k)
{
    if(vis[a][b])
        return;
    vis[a][b]=true;ans++;
    if(k==0||a>n||b>n)
        return;
    if(p[a]&&maxp[b])
        dfs(b+1,b+2,k-1);
    if(p[a]!=100&&maxp[b])
        dfs(b,b+1,k-1);
    if(p[a]&&maxp[b]!=100)
        dfs(a,b+1,k-1);
}
int main()
{
    int k;
    while(scanf("%d%d",&n,&k)!=EOF)
    {
        for(int i=1;i<=n;i++)
            scanf("%d",&p[i]);
        for(int i=n;i>=1;i--)
            maxp[i]=max(maxp[i+1],p[i]);
        memset(vis,false,sizeof(vis));
        ans=0;dfs(1,2,k);printf("%d\n",ans);
    }
    return 0;
}
