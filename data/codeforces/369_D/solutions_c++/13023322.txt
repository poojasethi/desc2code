#include <cstdio>
#include <cstring>
#include <algorithm>
const int N = 3e3 + 10;
using namespace std;
int n,m,ans;
int s[N],p[N],vis[N][N];
void Dfs(int a,int b,int k)
{
    if(k > m)return;
    a = min(n + 1,a);
    b = min(n + 1,b);
    if(vis[a][b])
        return;
    vis[a][b] = 1; ++ans;
    if(p[a])
    {
        if (s[b]) Dfs(b+1,b+2,k+1);
        if(s[b] < 100) Dfs(a,b+1,k+1);
    }
    if(p[a] < 100 && s[b])
        Dfs(b,b+1,k+1);
}
int main()
{
    memset(vis,0,sizeof(vis));
    memset(p,0,sizeof(p));
    memset(s,0,sizeof(s));
    scanf("%d%d",&n,&m);
    for(int i=1;i<=n;i++)
        scanf("%d",p + i);
    for(int i=n;i>=1;i--)
        s[i] = max(s[i + 1],p[i]);
    ans = 0;
    if(n > 1) Dfs(1,2,0);
    else ans = 1;
    printf("%d\n",ans);
}

