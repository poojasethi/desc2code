#include <cstdio>
#include <iostream>
#include <algorithm>
using namespace std;
bool vis[3003][3003];
int p[3003], s[3003];
int ans, n, k;
void dfs(int k, int x, int y) {
    if(vis[x][y]) return;
    vis[x][y] = true;
    ans++;
    if(!k || y >= n) return;
    if(p[x] != 0) {
        if(s[y] != 0)
            dfs(k-1, y+1, y+2);
        if(s[y] != 100)
            dfs(k-1, x, y+1);
    }
    if(p[x] != 100) {
        if(s[y] != 0) 
                dfs(k-1, y, y+1);
    }
}
int main() {
    int i;
    cin >> n >> k;
    for(i = 0; i < n; i++)
        cin >> p[i];
    s[n-1] = p[n-1];
    for(i = n-2; i >= 0; i--)
        s[i] = max(p[i], s[i+1]);
    dfs(k, 0, 1);
    printf("%d\n", ans);
    return 0;
}
