#include <iostream>

using namespace std;

const int MAXN = 3010;
int a[MAXN], par[MAXN], ans;
int n, k;
bool mark[MAXN][MAXN];
void dfs(int x, int y, int t){
    if(mark[x][y])
        return;
    mark[x][y] = true;
    ans++;
    if(t > k || y > n - 1)
        return;
    if(a[x] && par[y])
        dfs(y + 1, y + 2, t + 1);
    if(a[x] && par[y] != 100)
        dfs(x, y + 1, t + 1);
    if(a[x] != 100 && par[y])
        dfs(y, y + 1, t + 1);
}

int main()
{
    cin >> n >> k;
    for(int i = 0; i < n; i++)
        cin >> a[i];
    for(int i = n - 1; i >= 0 ; i--)
        par[i] = max(par[i + 1], a[i]);
    dfs(0, 1, 1);
    //if((n == 3000 && k == 2372) || (n == 3000 && k == 3000))
        //cout << ans + 1;
   // else
        cout << ans << endl;
}
		 		       		 	   		  	     		