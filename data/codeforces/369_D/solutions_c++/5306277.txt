#include<cstdio>
#include<cstring>
#include<cmath>
#include<iostream>
using namespace std;

#define MAXN 3010

int n, k;
int p[MAXN], maxp[MAXN];
bool b[MAXN][MAXN];

void DFS(int first, int x, int num)
{
	if (b[first][x]) return;
	b[first][x] = true;
	if (x > n || num > k) return;
	if (maxp[x] != 0 && p[first] != 0) DFS(x+1, x+2, num + 1);
	if (maxp[x] != 0 && p[first] != 100) DFS(x, x+1, num + 1);
	if (maxp[x] != 100 && p[first] != 0) DFS(first, x+1, num + 1);
	}

int main()
{
	scanf("%d%d", &n, &k);
	for (int i = 1; i <= n; ++i) scanf("%d", &p[i]);
	maxp[n] = p[n];
	for (int i = n-1; i >= 1; --i) maxp[i] = max(maxp[i+1], p[i]);
	memset(b, false, sizeof(b));
	DFS(1, 2, 1);
	int ans = 0;
	for (int i = 1; i <= n+1; ++i)
		for (int j = 1; j <= n+2; ++j)
			if (b[i][j]) ans ++;
	printf("%d\n", ans);
	return 0;
	}
