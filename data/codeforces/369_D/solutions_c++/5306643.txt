#include <bits/stdc++.h>
#define MAX_N 3010
#define MAX_K 3010
#define EPS 0.00
using namespace std;

int n, k, ans, pr[MAX_N], mpr[MAX_N];
bool vis[MAX_N][MAX_N];

void dfs(int bullet, int fst, int snd){
  if(vis[fst][snd]) return;
  vis[fst][snd] = bullet;
  ans ++;
  if(snd > n || bullet == k) return;
  if(mpr[snd] > 0 && pr[fst] > 0) dfs(bullet + 1, snd + 1, snd + 2); // both die
  if(mpr[snd] > 0 && pr[fst] < 100) dfs(bullet + 1, snd, snd + 1); // only first die
  if(mpr[snd] < 100 && pr[fst] > 0) dfs(bullet + 1, fst, snd + 1); // only second die
}

int main(){

  scanf("%d %d", &n, &k);
  for(int i = 1; i <= n; i ++)
    scanf("%d", &pr[i]);

  mpr[n] = pr[n];
  for(int i = n - 1; i >= 1; i --)
    mpr[i] = max(mpr[i + 1], pr[i]);;

  ans = 0;
  memset(vis, 0, sizeof vis);
  dfs(0, 1, 2);

  printf("%d\n", ans);

  return 0;
}
