#!/usr/bin/python

n = input()

grid = [[0 for i in range(n+1)] for i in range(n+1)]

for i in range(n*(n-1)/2 - 1) : 
    r, c = map(int, raw_input().split())
    grid[r][c] = 1
    grid[c][r] = -1

mr = 0
mc = 0

for i in range(1, n+1) : 
    for j in range(1, n+1) : 
        if i != j and grid[i][j] == 0 : 
            mr = i
            mc = j

visit = [False for i in range(n+1)]

def dfs(start, end) : 
    visit[start] = True
    rtn = False
    if start == end : 
        return True
    else : 
        for i in range(1, len(grid[start])) : 
            if grid[start][i] == 1 and visit[i] == False : 
                rtn = rtn or dfs(i, end)
    return rtn

if dfs(mr, mc) : 
    print "%d %d" % (mr, mc)
else : 
    print "%d %d" % (mc, mr)
