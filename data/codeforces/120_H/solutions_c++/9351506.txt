#include<cstdio>
#include<string>
#include<map>
#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

const int maxn=100000;
map<string,int> hash;
string i2s[maxn];
vector<int> e[210];
int flag[maxn];
int mx[maxn],my[maxn];
int n,m;

bool find(int u)
{
	for (int v=0;v<e[u].size();v++)
	if (!flag[e[u][v]])
	{
		flag[e[u][v]]=1;
		if (!my[e[u][v]] || find(my[e[u][v]]))
		{
			mx[u]=e[u][v];
			my[mx[u]]=u;
			return 1;
		}
	}
	return 0;
}

int H(string s)
{
	if (!hash.count(s))
	{
		hash[s]=++m;
		i2s[m]=s;
	}
	return hash[s];
}

void rData(int i){
	char st[15];
		scanf("%s",st);
		for (int a=0;st[a];a++){
			string s1="";
			s1+=st[a];
			e[i+1].push_back(H(s1));
			for (int b=a+1;st[b];b++){
				string s2=s1+st[b];
				e[i+1].push_back(H(s2));
				for (int c=b+1;st[c];c++){
					string s3=s2+st[c];
					e[i+1].push_back(H(s3));
					for (int d=c+1;st[d];d++){
						string s4=s3+st[d];
						e[i+1].push_back(H(s4));
					}
				}
			}
		}
}

void readData(){
scanf("%d",&n);
	for (int i=0;i<n;i++){
		rData(i);
	}
}

int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	
	readData();

	for (int i=1;i<=n;i++)
	{
		for (int j=1;j<=m;j++) flag[j]=0;
		if (!find(i))
		{
			printf("-1\n");
			return 0;
		}
	}
	for (int i=1;i<=n;i++)
		cout << i2s[mx[i]] << endl;
}
