#include<fstream>
#include<string>
#include<vector>
#include<map>
#include<algorithm>
using namespace std;
#define Z 50000

vector<int> adj[210];
int fwd[210],rev[Z];
bool vis[Z];
string nm[Z];
map<string,int> hsh;

bool aug(int i) {
	for(int t=0;t<adj[i].size();t++) {
		int j=adj[i][t];
		if(!vis[j]) {
			vis[j]=1;
			if(rev[j]==-1 || aug(rev[j])) {
				rev[fwd[i]=j]=i;
				return 1;
			}
		}
	}
	return 0;
}

int z=0;
int get(string s) {
	if(!hsh.count(s)) {
		hsh[s]=z;
		nm[z]=s;
		z++;
	}
	return hsh[s];
}

string S[200];
void gen(int ind,string t,int i,int d) {
	if(d) {
		adj[ind].push_back(get(t));
	}
	if(d<4) {
		for(int j=i;j<S[ind].size();j++) {
			gen(ind,t+S[ind][j],j+1,d+1);
		}
	}
}

int main() {
	ifstream in("input.txt");
	ofstream out("output.txt");
	int N;
	in>>N;
	for(int i=0;i<N;i++) {
		in>>S[i];
		gen(i,"",0,0);
	}
	fill(rev,rev+z,-1);
	for(int i=0;i<N;i++) {
		fill(vis,vis+z,0);
		if(!aug(i)) {
			out<<-1;
			return 0;
		}
	}
	for(int i=0;i<N;i++) {
		out<<nm[fwd[i]]<<endl;
	}
}
