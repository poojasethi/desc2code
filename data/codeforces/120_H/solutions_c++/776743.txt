#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
using namespace std;

char s[20];
int a[20];
int g[201][1000],tot[201];

int n,len[201];

void DFS(int x,int k,int now,int len,int num){
	if(now>0 && now<5) g[x][++tot[x]]=num;
	if(k>len || now>4) return;
	for(int i=k;i<=len;i++) DFS(x,i+1,now+1,len,num*27+a[i]);
}

int vst[600000];
int my[600000],mx[201];
int turn=0;

bool Find(int x){
	for(int i=1;i<=tot[x];i++) {
		int y=g[x][i];
		if(vst[y]!=turn) {
			vst[y]=turn;
			if(!my[y] || Find(my[y])) {
				my[y]=x; mx[x]=y;
				return 1;
			}
		}
	}
	return 0;
}	

int b[10]={0};

void Hungary(){
	for(int i=1;i<=n;i++){
		turn++;
		if(!Find(i)) {
			printf("-1\n");
			return;
		}
	}

	for(int i=1;i<=n;i++) {
		int k=0;
		int num=mx[i];
		while(num) {
			b[++k]=num%27;
			num/=27;
			//printf("%d ",b[k-1]);
		}
		//while(k--) {
		//	printf("%d ",b[k]);
		//}
		while(k) {
			printf("%c",char(97+b[k]-1));
			k--;
		}
		printf("\n");
	}
}

void Solve(){
	scanf("%d",&n);
	for(int i=1;i<=n;i++) {
		scanf("%s",&s);
		len[i]=int(strlen(s));
		for(int k=1;k<=len[i];k++) a[k]=s[k-1]-'a'+1;
		if(len[i]<=4){
			tot[i]=1;
			for(int k=1;k<=len[i];k++) g[i][1]=g[i][1]*27+a[k];
		}
		else DFS(i,1,0,len[i],0);
	}
	Hungary();
}

void OpenFiles(){
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
}

int main(){
	OpenFiles();
	Solve();
	return 0;
}
