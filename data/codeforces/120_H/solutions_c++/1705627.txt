#include<fstream>
#include<map>
#include<vector>
#include<string>
#include<cstring>
#include<cstdio>
#include<cstdlib>
using namespace std;
map<string,int>flag;
vector<int>e[222];
string s[50000];
bool used[50000];
int match[50000],n,c=0;
bool dfs(int v){
    used[v]=1;
    int i,u,w;
    for(i=0;i<e[v].size();i++){
        u=e[v][i],w=match[u];
        if(w<0||!used[w]&&dfs(w)){
            match[v]=u;
            match[u]=v;
            return 1;
        }
    }
    return 0;
}
int bipartite_graph(){
    int i,res=0;
    memset(match,-1,sizeof(match));
    for(i=0;i<n;i++){
        if(match[i]<0){
            memset(used,0,sizeof(used));
            if(dfs(i))res++;
        }
    }
    return res;
}
void set_edge(int v,int now,int p,string r){
    int i;
    if(now){
        if(!flag[r]){
            flag[r]=++c;
            s[c]=r;
        }
        e[v].push_back(flag[r]);
    }
    if(now<4){
        for(i=p;i<s[v].size();i++)set_edge(v,now+1,i+1,r+s[v][i]);
    }
}
main(){
    ifstream fin("input.txt");
    ofstream fout("output.txt");
    int i,res;
    fin>>n;
    c=n;
    for(i=0;i<n;i++)fin>>s[i];
    for(i=0;i<n;i++)set_edge(i,0,0,"");
    res=bipartite_graph();
    if(res==n)
        for(i=0;i<n;i++)
            fout<<s[match[i]]<<endl;
    else fout<<"-1\n";
}
