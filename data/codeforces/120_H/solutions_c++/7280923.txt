#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <vector>
#include <map>
#include <cassert>

using namespace std;

const int MAXN = 210, MAXNODE = 50000;

int N, nxthash;
string str[MAXN];
vector<int> adj[MAXN];

map<string, int> mp;
string sord[MAXNODE];
int fwd[MAXN], rev[MAXNODE];
bool vis[MAXNODE];

int getmp (string s) {
	int& ref = mp[s];
	// cerr << ref << endl;
	if (ref) {
		return ref;
	}
	nxthash++;
	ref = nxthash;
	// cerr << nxthash << ' ' << s << endl;
	sord[nxthash] = s;
	return ref;
}

void gen (int ind, string t, int cur, int depth) {
	if (depth) {
		// cerr << "t = " << t << endl;
		adj[ind].push_back(getmp(t));
	}
	if (depth < 4) {
		depth++;
		string &s = str[ind];
		for (int i = cur, len = s.length(); i < len; i++) {
			gen(ind, t + s[i], i + 1, depth);	//it's ok
		}
	}
}

bool aug (int i) {
	for (vector<int>::iterator it = adj[i].begin(); it != adj[i].end(); it++) {
		int j = (*it);
		if (!vis[j]) {
			vis[j] = true;
			if (rev[j] == -1 || aug(rev[j])) {
				fwd[i] = j;
				rev[j] = i;
				// cerr << "match " << i << ' ' << j << endl;
				return true;
			}
		}
	}
	return false;
}

int main() {
#ifdef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#else
	freopen("codeforces120H.in", "r", stdin);
#endif
	cin >> N;
	for (int i = 1; i <= N; i++) {
		cin >> str[i];
		gen(i, "", 0, 0);
	}
	memset(rev, -1, sizeof(rev));
	for (int i = 1; i <= N; i++) {
		memset(vis, false, sizeof(vis));
		if (!aug(i)) {
			cout << "-1\n";
			return 0;
		}
	}
	// assert(mp[sord[2]] == 2);
	for (int i = 1; i <= N; i++) {
		cout << sord[fwd[i]] << '\n';
	}
}