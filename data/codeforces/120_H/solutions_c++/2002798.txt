#include <fstream>
#include <cstring>
#include <iostream>
#include <vector>
using namespace std;
const int MAXN=200+1,MAXM=27*27*27*27;
int n;
string a[MAXN];
vector <int> A[MAXN];
bool mark[MAXN];
int matchA[MAXN],matchB[MAXM];
int hash(string x,int p)
{
	return int(x[p]-'a'+1);
}
int hash(string x,int p,int q)
{
	return int(x[q]-'a'+1)*27+int(x[p]-'a'+1);
}
int hash(string x,int p,int q,int r)
{
	return int(x[r]-'a'+1)*27*27+int(x[q]-'a'+1)*27+int(x[p]-'a'+1);
}
int hash(string x,int p,int q,int r,int s)
{
	return int(x[s]-'a'+1)*27*27*27+int(x[r]-'a'+1)*27*27+int(x[q]-'a'+1)*27+int(x[p]-'a'+1);
}
string what(int x)
{
	string ans;
	while(x)
	{
		ans.push_back(char(x%27+'a'-1));
		x/=27;
	}
	return ans;
}
bool find(int v)
{
	mark[v]=1;
	for(int i=0;i<A[v].size();i++)
		if(matchB[A[v][i]]==-1)
		{
			matchA[v]=A[v][i];
			matchB[A[v][i]]=v;
			return true;
		}
	for(int i=0;i<A[v].size();i++)
		if(!mark[matchB[A[v][i]]]&&find(matchB[A[v][i]]))
		{
			matchA[v]=A[v][i];
			matchB[A[v][i]]=v;
			return true;
		}
	return false;
}
int main()
{
	ifstream in("input.txt");
	ofstream out("output.txt");
	in >> n;
	for(int i=0;i<n;i++)
		in >> a[i];
	memset(matchA,-1,sizeof matchA);
	memset(matchB,-1,sizeof matchB);
	for(int i=0;i<n;i++)
	{
		int m=a[i].size();
		for(int p=0;p<m;p++)
		{
			A[i].push_back(hash(a[i],p));
			for(int q=p+1;q<m;q++)
			{
				A[i].push_back(hash(a[i],p,q));
				for(int r=q+1;r<m;r++)
				{
					A[i].push_back(hash(a[i],p,q,r));
					for(int s=r+1;s<m;s++)
						A[i].push_back(hash(a[i],p,q,r,s));
				}
			}
		}
	}
	for(int i=0;i<n;i++)
	{
		if(!find(i))
		{
			out << -1 << endl;
			return 0;
		}
		memset(mark,0,sizeof mark);
	}
	for(int i=0;i<n;i++)
		out << what(matchA[i]) << endl;
	return 0;
}
