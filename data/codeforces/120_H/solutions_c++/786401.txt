#include <iostream>
#include <cstring>
#include <cstdio>
#include <vector>
#include <map>
using namespace std;

map <string, int> ind;
int n, p[500000], p1[300], sz;
string word[500000], s[300];
vector <int> g[300];
bool was[300];

void get_abbr(string& s, int index)
{
	string t = "";
	for (int i = 0; i < s.length(); ++i) {
		for (int j = i + 1; j <= s.length(); ++j)
			for (int k = j; k <= s.length(); ++k)
				for (int l = k; l <= s.length(); ++l) {
					t = s[i];
					if (j < s.length()) t += s[j];
					if (j != k && k < s.length()) t += s[k];
					if (j != l && k != l && l < s.length()) t += s[l];
				
				   if (ind.find(t) == ind.end()) {
//				      cerr << sz << " " << t << endl;
				   	g[index].push_back(sz);
				   	ind[t] = sz;
				   	word[sz] = t;
	               p[sz] = -1;
				   	sz++;
				   } else {
				   	g[index].push_back(ind[t]);
				   }
				}
	}
}

bool rec(int v)
{
	if (was[v]) return 0;
	was[v] = 1;

	for (int i = 0, u; i < g[v].size(); ++i) {
		u = g[v][i];

		if (p[u] == -1 || rec(p[u])) {
			p[u] = v;
			p1[v] = u;
			return 1;
		}	
	}

	return 0;
}

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

   scanf("%d\n", &n);
   for (int i = 0; i < n; ++i) {
      p1[i] = -1;
   	getline(cin, s[i]);
      get_abbr(s[i], i);
   }

   for (int i = 0; i < n; ++i) {
		memset(was, 0, sizeof was);
		rec(i);   	
   }
	
	for (int i = 0; i < n; ++i) {
	   if (p1[i] == -1) {
	   	puts("-1");
	   	return 0;
	   }
	}

	for (int i = 0; i < n; ++i) {
//		cout << p1[i] << " ";
		cout << word[p1[i]] << endl;
	}

	return 0;
}
