#include<cstdio>
#include<cstring>
#include<vector>
using namespace std;
const int N(205),T(27*27*27*27);
int n,m,p,i,tot;
char s[16];
char str[N][16];
int be[N];
int c[T],l[T];
vector<int> g[N];
int pos()
{
    int i,ret(0);
    for (i=0;i!=4;++i) {
        ret*=27;
        if ('a'<=s[i]&&s[i]<='z') ret+=s[i]-'a'+1;
    }
    return ret;
}
void build(int x,int t)
{
     if (x==m||t==4) {
        if (t) {
           p=pos();
           g[i].push_back(p);
        }
        return;
     }
     build(x+1,t);
     s[t]=str[i][x];
     build(x+1,t+1);
     s[t]=0;
}
int find(int x)
{
    int i;
    for (i=g[x].size()-1;i!=-1;--i) 
        if (c[g[x][i]]!=p) {
           c[g[x][i]]=p;
           if (l[g[x][i]]==-1||find(l[g[x][i]])) {
              l[g[x][i]]=x; be[x]=g[x][i]; return 1;
           }
        }
    return 0;
}
void output(int x)
{
     if (x==0) return;
     output(x/27);
     if (x%27) printf("%c",'a'+x%27-1);
}
int main()
{
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    scanf("%d",&n);
    for (i=0;i!=n;++i) {
        scanf("%s",str[i]);
        m=strlen(str[i]);
        if (m<=4) {
           memcpy(s,str[i],sizeof(str[i]));
           p=pos();
           g[i].push_back(p);
        }
        else {
             memset(s,0,sizeof(s));
             build(0,0);
        }
    }
    p=1; 
    memset(l,255,sizeof(l));
    for (i=0;i!=n;++i,++p) 
        if (find(i)) ++tot;
    if (tot!=n) {
       printf("-1\n");
       return 0;
    }
    for (i=0;i!=n;++i) {
        output(be[i]);
        printf("\n");
    }
    return 0;
}
