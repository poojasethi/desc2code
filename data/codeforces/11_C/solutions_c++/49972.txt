#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <queue>

using namespace std;

const int MAX = 250;

void solve()
{
	int ysize, xsize;
	cin >> ysize >> xsize;
	char a[MAX][MAX+1];
	int b[MAX][MAX+1];
	memset(b, 0, sizeof(b));
	for (int i=0; i<ysize; i++)
		cin >> a[i];
	int cnt = 0;
	for (int y=0, n=1; y<ysize; y++, n++) {
		for (int x=0; x<xsize; x++) {
			if (a[y][x]=='1' && b[y][x]==0)
			{
				queue<pair<int, int> > q;
				q.push(make_pair(x,y));
				b[y][x] = n;
				int t = 1;
				while (q.size() > 0) {
					pair<int, int> cur = q.front();
					q.pop();
					for (int dx=-1; dx<=1; dx++) {
						for (int dy=-1; dy<=1; dy++) {
							int nx=cur.first+dx, ny=cur.second+dy;
							if (nx >= 0 && nx < xsize && ny >= 0 && ny < ysize && a[ny][nx]=='1' && b[ny][nx]==0)
							{
								q.push(make_pair(nx,ny));
								b[ny][nx] = n;
								t++;
							}
						}
					}
				}
				if (t%4==0 && x+1<xsize && y+1<ysize)
				{
					int sideLen = t/4;
					if (b[y][x+1] == n) {
						// Type 1
						bool ok = x+sideLen < xsize && y+sideLen < ysize;
						for (int i=0; i<sideLen && ok; i++) {
							if (b[y][x+i] != n || b[y+i][x+sideLen] != n || b[y+sideLen][x+sideLen-i] != n || b[y+sideLen-i][x] != n)
								ok = false;
						}
						if (ok)
							cnt++;
					}
					else 
					{
						// Type 2
						int x1=x,y1=y, x2=x-sideLen,y2=y+sideLen;
						int x3=x,y3=y2+sideLen, x4=x+sideLen, y4=y+sideLen;
						bool ok = x2 >= 0 && x3 < xsize && y3 < ysize;
						for (int i=0; i<sideLen && ok; i++) {
							if (b[y1+i][x1-i] != n || b[y2+i][x2+i] != n || b[y3-i][x3+i] != n || b[y4-i][x4-i] != n)
								ok = false;
						}
						if (ok)
							cnt++;									
					}
				}
			}
		}
	}
	cout << cnt << endl;
}

int main (int argc, char * const argv[]) {
	//freopen("../../sample1.in","r",stdin);
	int T;
	cin >> T;
	while (T--) {
		solve();
	}
}
