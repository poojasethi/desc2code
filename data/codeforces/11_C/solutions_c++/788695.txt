#include<stdio.h>
#include<ctype.h>
#include<string.h>
#include<iostream>

using namespace std;

const int maxn=300;
const int INF=1000000000;

int n,m;

char map[maxn][maxn];

bool used[maxn][maxn];

int wi[8]={-1,-1,-1,0,0,1,1,1};
int wj[8]={-1,0,1,-1,1,-1,0,1};

int tq;
int qi[maxn*maxn];
int qj[maxn*maxn];

void init()
{
	scanf("%d%d",&n,&m);
	
	for (int i=1;i<=n;i++)
		scanf("%s",map[i]+1);
}

	void find(int i,int j)
	{
		used[i][j]=true;
		tq++ , qi[tq]=i , qj[tq]=j;
		
		for (int k=0;k<8;k++)
		{
			int ni=i+wi[k] , nj=j+wj[k];
			if (1<=ni && ni<=n && 1<=nj && nj<=m && map[ni][nj]=='1' && !used[ni][nj])
				find(ni,nj);
		}
	}

	bool check_1(int x1,int x2,int y1,int y2)
	{
		if ((x2-x1)!=(y2-y1) || x1==x2) return false;
		if (tq!=4*(x2-x1)) return false;
		
		for (int k=1;k<=tq;k++)
			if ((qi[k]!=x1 && qi[k]!=x2) && (qj[k]!=y1 && qj[k]!=y2))
				return false;
		
		return true;
	}
	
	bool check_2(int x1,int x2,int y1,int y2)
	{
		if ((x2-x1)!=(y2-y1) || x1==x2 || ((x2-x1)&1)) return false;
		if (tq!=2*(x2-x1)) return false;
		
		for (int k=1;k<=tq;k++)
			if (min(qi[k]-x1,x2-qi[k])+min(qj[k]-y1,y2-qj[k])!=(x2-x1)/2)
				return false;
		
		return true;
	}
	
void doit()
{
	memset(used,false,sizeof(used));
	
	int ans=0;
	
	for (int i=1;i<=n;i++)
		for (int j=1;j<=m;j++)
			if (map[i][j]=='1' && !used[i][j])
			{
				tq=0 , find(i,j);
				
				int x1=INF,x2=0,y1=INF,y2=0;
				
				for (int k=1;k<=tq;k++)
				{
					x1=min(x1,qi[k]);
					x2=max(x2,qi[k]);
					y1=min(y1,qj[k]);
					y2=max(y2,qj[k]);
				}
				
				if (check_1(x1,x2,y1,y2) || check_2(x1,x2,y1,y2))
					ans++;
			}
			
	printf("%d\n",ans);
}

int main()
{
	//freopen("11C.in","r",stdin);
	//freopen("11C.out","w",stdout);
	
	int T; scanf("%d",&T);
	while (T--)
	{
		init();
		doit();
	}
	
	return 0;
}
