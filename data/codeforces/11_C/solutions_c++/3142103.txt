/*
00100 010
01010 101
10001 010
01010
00100*/
#include<iostream>
#include<string>
#include<cstring>
using namespace std;

int t,n,m;
int v[8][2]={1,0,0,1,1,-1,1,1,0,-1,-1,0,-1,1,-1,-1};
int time,count;
int u[502][502];
bool isok;

void dfs(int x,int y)
{
	time++;
	int x1,y1;
	u[x][y]=count;
	for(int i=0;i<8;i++){
		x1=x+v[i][0];
		y1=y+v[i][1];
		if(x1>0 && y1>0 && x1<=n && y1<=m && u[x1][y1]==-1)
		    dfs(x1,y1);
	}
}
bool check(int x,int y,int num)
{
	if(num%4!=0) return false;
	int bz=u[x][y],i,j;
	if(x+num/4<=n && y+num/4<=m &&u[x+num/4][y]==bz && u[x][y+num/4]==bz && u[x+num/4][y+num/4]==bz)
	{
		bool isok=true;
		for(i=x;i<=x+num/4;i++)
		   if(u[i][y]!=bz) {isok=false;break;}
		for(i=y;i<=y+num/4;i++)
		   if(u[x][i]!=bz||!isok) {isok=false;break;}
		for(i=y;i<=y+num/4;i++)
		   if(u[x+num/4][i]!=bz||!isok){isok=false;break;}
		for(i=x;i<=x+num/4;i++)
		   if(u[i][y+num/4]!=bz||!isok){isok=false;break;}
		if(isok) return true;
	}
	if(x+num/2<=n && y-num/4>0 && y+num/4<=m && u[x+num/4][y+num/4]==bz && u[x+num/4][y-num/4]==bz && u[x+num/2][y]==bz)
	{
		isok=true;
		for(i=x,j=y;i<=x+num/4 && j<=y+num/4;i++,j++)
		   if(u[i][j]!=bz){isok=false;break;}
		for(i=x,j=y;i<=x+num/4 && j>=y-num/4;i++,j--)
		   if(u[i][j]!=bz||!isok){isok=false;break;}
		for(i=x+num/4,j=y+num/4;i<=x+num/2&&j>=y;i++,j--)
		   if(u[i][j]!=bz||!isok){isok=false;break;}
		for(i=x+num/4,j=y-num/4;i<=x+num/2&&j<=y;i++,j++)
		   if(u[i][j]!=bz||!isok){isok=false;break;}
		if(isok) return true;
	}//ifд���� 
	return false;
}

int main()
{
	int s=0;
	string temp;
	cin>>t;
	for(int q=1;q<=t;q++)
	{
		memset(u,-1,sizeof(u));
		s=0;count=0;
		cin>>n>>m;
		for(int i=1;i<=n;i++)
		{
			cin>>temp;
			for(int j=0;j<m;j++)
			   if(temp[j]=='0')u[i][j+1]=0;
		}
		for(int i=1;i<=n;i++)
		   for(int j=1;j<=m;j++)
		   {
		   	  if(u[i][j]!=-1) continue;
		   	  count++;
		   	  time=0;
		   	  dfs(i,j);
		   	  if(check(i,j,time)) s++;
		   }
		cout<<s<<endl;
	}
	return 0;
}
