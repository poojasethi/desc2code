#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>

const int fin=0,maxn=21;
int n,m;
char g[maxn][maxn];
int f[maxn<<1][maxn<<1][maxn<<1][maxn<<1];
#define F(a,b,c,d) f[a-2][b-2][c+m-1][d+m-1]

inline int sol(int a,int b,int c,int d){
  if(a>b||c>d)return 0;
  if(F(a,b,c,d)!=-1)return F(a,b,c,d);
  int v[maxn*maxn],i,j,t,x,y;
  memset(v,0,sizeof(v));
  for(i=a;i<=b;i+=2)for(j=c;j<=d;j+=2){
    x=i+j>>1,y=i-j>>1;
    if(x<1||x>n||y<1||y>m)continue;
    if(g[x][y]=='L')t=sol(a,i-2,c,d)^sol(i+2,b,c,d);
    else if(g[x][y]=='R')t=sol(a,b,c,j-2)^sol(a,b,j+2,d);
    else t=sol(a,i-2,c,j-2)^sol(a,i-2,j+2,d)^sol(i+2,b,c,j-2)^sol(i+2,b,j+2,d);
    v[t]=1;
  }
  for(t=0;v[t];++t);
  return F(a,b,c,d)=t;
}

int main(){
  if(fin){
    freopen("t.in","r",stdin);
    freopen("t.out","w",stdout);
  }
  int i;
  scanf("%d%d\n",&n,&m);
  for(i=1;i<=n;++i)gets(g[i]+1);
  memset(f,-1,sizeof(f));
  puts((sol(3,n+m-1|1,1-m|1,n-2|1)^
       sol(2,n+m-(n+m&1),1-m+(1-m&1),n-1-(n-1&1)))?"WIN":"LOSE");
  return 0;
}
