#include<iostream>
#include<cstdlib>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
char c[30][30],map[30][30];
int n,m,f[30][30][30][30];
bool used[30][30][30][30];
int fgh(int a,int b,int c,int d)
{
	if(a>b||c>d)return 0;
	if(used[a][b][c][d])return f[a][b][c][d];
	used[a][b][c][d]=1;
	bool cann[410];
	memset(cann,0,sizeof(cann));
	for(int i=a;i<=b;i++)
		for(int j=c;j<=d;j++)
			if(map[i][j]){
				if(map[i][j]=='L')
					cann[fgh(a,i-1,c,d)^fgh(i+1,b,c,d)]=1;
				if(map[i][j]=='R')
					cann[fgh(a,b,c,j-1)^fgh(a,b,j+1,d)]=1;
				if(map[i][j]=='X')
					cann[fgh(a,i-1,c,j-1)^fgh(i+1,b,j+1,d)^fgh(i+1,b,c,j-1)^fgh(a,i-1,j+1,d)]=1;
			}
	for(int i=0;i<=410;i++)
		if(!cann[i]){
			f[a][b][c][d]=i;
			return i;
		}
}
int main()
{
	int g1,g2;
	scanf("%d %d\n",&n,&m);
		for(int i=1;i<=n;i++,getchar())
			for(int j=1;j<=m;j++)
				c[i][j]=getchar();
		memset(used,0,sizeof(map));
		memset(used,0,sizeof(used));
		for(int i=1;i<=n;i++)
			for(int j=1;j<=m;j++)
				if((i+j)&1)
					map[(i+j)>>1][(j-i+n+1)>>1]=c[i][j];
		g1=fgh(1,(n+m)>>1,1,(n+m)>>1);
		memset(map,0,sizeof(map));
		memset(used,0,sizeof(used));
		for(int i=1;i<=n;i++)
			for(int j=1;j<=m;j++)
				if(((i+j)&1)==0)
					map[(i+j)>>1][(j-i+n+1)>>1]=c[i][j];
		g2=fgh(1,(n+m)>>1,1,(n+m)>>1);
		if(g1^g2)printf("WIN\n");
		else printf("LOSE\n");
	
	return 0;
}
	 		 							 	  		 	 	 	  	