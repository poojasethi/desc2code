#include <cstdio>
#include <set>

using namespace std;

const int maxn = 42;

int H, W, sg[maxn][maxn][maxn][maxn][2];
bool v[maxn][maxn][maxn][maxn][2];
char board[maxn][maxn];

int calc(int l, int r, int b, int t, int odd){
	if (v[l][r][b][t][odd]) return sg[l][r][b][t][odd];
	v[l][r][b][t][odd] = true;

	int &ret = sg[l][r][b][t][odd] = 0;
	set<int> next;
	for (int y = 0; y < H; y++){
		for (int x = 0; x < W; x++) if ((x + y) % 2 == odd){
			int u = y + x, v = y - x + W, val;
			if (l <= u && u < r && b <= v && v < t) {
				if (board[y][x] == 'L') val = calc(l, u, b, t, odd) ^ calc(u+1, r, b, t, odd);
				else if (board[y][x] == 'R') val = calc(l, r, b, v, odd) ^ calc(l, r, v+1, t, odd);
				else val = calc(l, u, b, v, odd) ^ calc(l, u, v + 1, t, odd) ^ calc(u+1, r, b, v, odd) ^ calc(u+1, r, v + 1, t, odd);
				next.insert(val);
			}
		}
	}

	for (; next.find(ret) != next.end(); ++ret);
	return ret;
}

int main(){
	scanf("%d%d", &H, &W);
	for (int i = 0; i < H; i++) scanf("%s", board[i]);
	printf("%s", (calc(0, H + W, 0, H + W, 0) ^ calc(0, H + W, 0, H + W, 1)) ? "WIN" : "LOSE");
	return 0;
}

