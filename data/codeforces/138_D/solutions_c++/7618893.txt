#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 50
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,nn;
int sg[N][N][N][N];
char p[N][N],a[N][N];
int dfs(int xl,int xr,int yl,int yr) {
	if (xl>xr||yl>yr) return 0;
	int &A=sg[xl][xr][yl][yr];
	if (A>=0) return A;
	int i,j,f[1000]={};
	For(i,xl,xr)For(j,yl,yr) if (a[i][j]!='.') {
		if (a[i][j]=='R') f[dfs(xl,i-1,yl,yr)^dfs(i+1,xr,yl,yr)]=1;
		if (a[i][j]=='L') f[dfs(xl,xr,yl,j-1)^dfs(xl,xr,j+1,yr)]=1;
		if (a[i][j]=='X') f[dfs(xl,i-1,yl,j-1)^dfs(xl,i-1,j+1,yr)
			^dfs(i+1,xr,yl,j-1)^dfs(i+1,xr,j+1,yr)]=1;
	}
	for (A=0;f[A];A++);
	return A;
}
int main() {
	scanf("%d%d",&n,&m);
	For(i,1,n) scanf("%s",p[i]+1);
	nn=n+m; memset(sg,255,sizeof(sg));
	For(i,1,nn)For(j,1,nn) a[i][j]='.';
	For(i,1,n)For(j,1,m) if (i+j&1) {
		int A=i-j+m,B=i+j;
		a[A][B]=p[i][j];
	}
	int an=dfs(1,nn,1,nn);
	For(i,1,nn)For(j,1,nn) a[i][j]='.';
	memset(sg,255,sizeof(sg));
	For(i,1,n)For(j,1,m) if (!(i+j&1)) {
		int A=i-j+m,B=i+j;
		a[A][B]=p[i][j];
	}
	an^=dfs(1,nn,1,nn);
	printf("%s\n",an?"WIN":"LOSE");
	//for(;;);
	return 0;
}
