#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
int f[41][41][41][41][2],v[10000],n,m,i,num;
char a[21][21];

int sg(int lx,int rx,int ly,int ry,int k)
{
	int &ans=f[lx][rx][ly][ry][k];
	if(ans!=-1) return ans;
	int i,j,x,y;
	for(i=1;i<=n;i++)
		for(j=1;j<=m;j++)
			if(x=i+j-1,y=n-i+j,(x&1)==k&&x>=lx&&x<=rx&&y>=ly&&y<=ry)
				if(a[i][j]=='L')
					sg(lx,x-1,ly,ry,k),sg(x+1,rx,ly,ry,k);
				else if(a[i][j]=='R')
					sg(lx,rx,ly,y-1,k),sg(lx,rx,y+1,ry,k);
				else sg(lx,x-1,ly,y-1,k),sg(lx,x-1,y+1,ry,k),sg(x+1,rx,ly,y-1,k),sg(x+1,rx,y+1,ry,k);
	num++;
	for(i=1;i<=n;i++)
		for(j=1;j<=m;j++)
			if(x=i+j-1,y=n-i+j,(x&1)==k&&x>=lx&&x<=rx&&y>=ly&&y<=ry)
				if(a[i][j]=='L')
					v[sg(lx,x-1,ly,ry,k)^sg(x+1,rx,ly,ry,k)]=num;
				else if(a[i][j]=='R')
					v[sg(lx,rx,ly,y-1,k)^sg(lx,rx,y+1,ry,k)]=num;
				else v[sg(lx,x-1,ly,y-1,k)^sg(lx,x-1,y+1,ry,k)^sg(x+1,rx,ly,y-1,k)^sg(x+1,rx,y+1,ry,k)]=num;
	for(i=0;v[i]==num;i++);
	return ans=i;
}

int main()
{
	cin>>n>>m;
	for(i=1;i<=n;i++) scanf("%s",a[i]+1);
	memset(f,-1,sizeof(f));
	puts(sg(1,n+m-1,1,n+m-1,0)^sg(1,n+m-1,1,n+m-1,1)?"WIN":"LOSE");
	return 0;
}