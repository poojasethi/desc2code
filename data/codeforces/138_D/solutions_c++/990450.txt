#include<cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

int m,n,mn,g[2][45][45][45][45];
char s[25][25];

int sg(int z, int x0, int x1, int y0, int y1) {
    if ((x0>x1)||(y0>y1)) return 0;
    if (g[z][x0][x1][y0][y1]!=-1) return g[z][x0][x1][y0][y1];
//printf("%d %d %d %d\n",x0,x1,y0,y1);
    bool b[205];
    memset(b,true,sizeof(b));
    for (int i=max(0, (x0+y0-(n-1)+1)>>1), j=min(m-1, (x1+y1-(n-1))>>1); i<=j; i++) {
        for (int k=max(0, max(i+(n-1)-x1, y0-i)), l=min(n-1, min(i+(n-1)-x0, y1-i)); k<=l; k++) {
            if (((i+k)&1)==z) {
                if (s[i][k]=='R')
                    b[(sg(z,x0,i-k+(n-1)-1,y0,y1)^sg(z,i-k+(n-1)+1,x1,y0,y1))]=false;
                if (s[i][k]=='L')
                    b[(sg(z,x0,x1,y0,i+k-1)^sg(z,x0,x1,i+k+1,y1))]=false;
                if (s[i][k]=='X')
                    b[(sg(z,x0,i-k+(n-1)-1,y0,i+k-1)^sg(z,x0,i-k+(n-1)-1,i+k+1,y1)^sg(z,i-k+(n-1)+1,x1,y0,i+k-1)^sg(z,i-k+(n-1)+1,x1,i+k+1,y1))]=false;
            }
        }
    }
    for (int i=0; ; i++) 
        if (b[i]) 
            return g[z][x0][x1][y0][y1] = i;
}

int main() {
    scanf("%d%d",&m,&n);
    for (int i=0; i<m; i++)
        scanf("%s",s[i]);
    mn=m+n-1;
    memset(g,-1,sizeof(g));
    if (sg(0,0,mn-1,0,mn-1)^sg(1,0,mn-1,0,mn-1)) printf("WIN\n");
    else printf("LOSE\n");
    return 0;
}