// Codeforces 138D
#include<cstdio>
#include<cstring>
#include<set>
#define rep(i,a) for(int i=0;i<(a);++i)
#define clr(a,v) memset((a),(v),sizeof(a))

const int MAX_N = 20;

int n, m;
char fld[MAX_N][MAX_N+1];

int mem[2*MAX_N+1][2*MAX_N+1][2*MAX_N+1][2*MAX_N+1][2];

int grundy( int pl, int pu, int ml, int mu, bool odd )
{
    int &ret = mem[pl][pu][ml][mu][odd];

    if( ~ret )
        return ret;

    std::set<int> s;
    rep( y, n ) rep( x, m ) if( ((x+y)&1) == odd )
    {
        const int plus = x+y, minus = y-x+m;

        if( pl <= plus && plus < pu && ml <= minus && minus < mu )
        {
            if( fld[y][x] == 'L' )
                s.insert( grundy(pl,plus,ml,mu,odd)^grundy(plus+1,pu,ml,mu,odd) );
            else if( fld[y][x] == 'R' )
                s.insert( grundy(pl,pu,ml,minus,odd)^grundy(pl,pu,minus+1,mu,odd) );
            else if( fld[y][x] == 'X' )
                s.insert( grundy(pl,plus,ml,minus,odd)
                         ^grundy(pl,plus,minus+1,mu,odd)
                         ^grundy(plus+1,pu,ml,minus,odd)
                         ^grundy(plus+1,pu,minus+1,mu,odd) );
        }
    }

    for( ret = 0; s.count(ret); ++ret );

    return ret;
}

int main()
{
    scanf( "%d%d", &n, &m );
    rep( i, n )
        scanf( "%s", fld[i] );
    
    clr( mem, -1 );
    puts( grundy(0,m+n,0,m+n,0)^grundy(0,m+n,0,m+n,1)?"WIN":"LOSE" );

    return 0;
}