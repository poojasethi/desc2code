#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<vector>
#include<cstring>
using namespace std;

int n, m;
char p[21][21];
int d[2][41][41][41][41];

int get(int t, int x1, int x2, int y1, int y2)
{
	int &ans = d[t][x1][x2][y1][y2];
	if(ans != -1) return ans;
	if(x1 >= x2 || y1 >= y2) return ans = 0;

	int tmp = 0;
	vector<int> tmp2;
	vector<bool> used;
	for(int i = 0; i < n; ++i)
		for(int j = 0; j < m; ++j)
		{
			if(((i+j)&1) != t) continue;
			int x = i + j + 1, y = i - j + (m - 1) + 1;
			if(x <= x1 || x >= x2 || y <= y1 || y >= y2)
				continue;
			if(p[i][j] == 'L')
				tmp = get(t, x1, x, y1, y2)^get(t, x, x2, y1, y2);	
			else if(p[i][j] == 'R')
				tmp = get(t, x1, x2, y1, y)^get(t, x1, x2, y, y2);
			else
				tmp = get(t, x1, x, y1, y)^get(t, x1, x, y, y2)^get(t, x, x2, y1, y)^get(t, x, x2, y, y2);
			tmp2.push_back(tmp);   
		}                        	
	used.resize(tmp2.size() + 2, false);
	for(int i = 0; i < tmp2.size(); ++i)
		if(tmp2[i] < used.size())
			used[tmp2[i]] = true;
	for(int i = 0; i < used.size(); ++i)
		if(!used[i])       	
			return ans = i;
} 

int main()
{
	cin >> n >> m;
	for(int i = 0; i < n; ++i)
		for(int j = 0; j < m; ++j)
			cin >> p[i][j];
	memset(d, -1, sizeof(d));

	cout << ((get(0, 0, n + m, 0, n + m)^get(1, 0, n + m, 0, n + m)) == 0 ? "LOSE" : "WIN");

	return 0;
}