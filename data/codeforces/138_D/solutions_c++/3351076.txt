#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <set>
#define rep(i,l,r) for(int i = l;i <= r;++ i)
using namespace std;
const int MAXN = 42;
int f[MAXN][MAXN][MAXN][MAXN][2],n,m;
bool done[MAXN][MAXN][MAXN][MAXN][2];
char map[MAXN][MAXN];

int calc(int u,int l,int d,int r,int mask)
{
    if(done[u][l][d][r][mask]) return f[u][l][d][r][mask];
	done[u][l][d][r][mask] = true;
	int &sg = f[u][l][d][r][mask];
	set<int> succ;
	rep(i,1,n)
     rep(j,1,m)
	 if(((i + j) & 1) == mask){
	    int x = i + j,y = n - i + 1 + j;
		if(x < u || x > d || y < l || y > r) continue;
		if(map[i][j] == 'L')
		  succ.insert(calc(u,l,x - 1,r,mask) ^ calc(x + 1,l,d,r,mask));//succ.insert(calc(u,l,d,y - 1,mask) ^ calc(u,y + 1,d,r,mask));
		else if(map[i][j] == 'R')
		  succ.insert(calc(u,l,d,y - 1,mask) ^ calc(u,y + 1,d,r,mask));//succ.insert(calc(u,l,x - 1,r,mask) ^ calc(x + 1,l,d,r,mask));
		else if(map[i][j] == 'X')
		  succ.insert(calc(u,l,x - 1,y - 1,mask) ^ calc(x + 1,y + 1,d,r,mask) ^ calc(u,y + 1,x - 1,r,mask) ^ calc(x + 1,l,d,y - 1,mask));
	 }
	while(succ.find(sg) != succ.end()) ++ sg;
	return sg;
}
int main()
{
    //freopen("input.in","r",stdin); freopen("output.out","w",stdout);
    scanf("%d%d",&n,&m);
    rep(i,1,n) scanf("%s",map[i] + 1);
	if((calc(2,2,n + m,n + m,0) ^ calc(2,2,n + m,n + m,1)) == 0) puts("LOSE");
	else puts("WIN");
	return 0;
}
