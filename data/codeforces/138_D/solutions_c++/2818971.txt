/*
Author: LJQ
PROG: Codeforces Beta #99 Div1 D. World of Darkraft
DATE: 2012.12.23
*/
#include <bitset>
#include <cstdio>

using namespace std;

const int maxn = 41;

bool vis[maxn][maxn][maxn][maxn][2];
int f[maxn][maxn][maxn][maxn][2];
char st[maxn][maxn];
int n, m, ret;

void init()
{
	scanf("%d%d", &n, &m);
	for (int i = 0; i < n; i ++) scanf("%s", st[i]);
}

int solve(int l, int r, int u, int d, int N)
{
	int &ret = f[l][r][u][d][N];
	if (vis[l][r][u][d][N]) return ret;
	vis[l][r][u][d][N] = true;
	bitset <100> cur;
	for (int i = 0; i < n; i ++)
		for (int j = 0; j < m; j ++) if (((i + j) & 1) == N){
			int p = i + j, q = j - i + n;
			if (l <= p && p < r && u <= q && q < d){
				int tmp = 0;
				if (st[i][j] == 'L')
					tmp = solve(l, p, u, d, N) ^ solve(p+1, r, u, d, N);
				else if (st[i][j] == 'R')
					tmp = solve(l, r, u, q, N) ^ solve(l, r, q+1, d, N);
				else 
					tmp = solve(l, p, u, q, N) ^ solve(p+1, r, u, q, N) ^ solve(l, p, q+1, d, N) ^ solve(p+1, r, q+1, d, N);
				cur[tmp] = 1;
			}
		}
	for (int i = 0; i < 100; i ++) 
		if (!cur[i]){ ret = i; break;}
	return ret;
}

void work()
{
	ret = solve(0, n+m, 0, n+m, 0) ^ solve(0, n+m, 0, n+m, 1);
}

void print()
{
	puts(ret ? "WIN" : "LOSE");
}

int main()
{
	init();
	work();
	print();
	return 0;
}
