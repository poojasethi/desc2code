#include<stdio.h>
#include<string.h>
#include<ctype.h>
#include<set>
using namespace std;
const int maxn=20+2;
char pic[maxn][maxn];
int vis[2*maxn][2*maxn][2*maxn][2*maxn];
int n,m;
int flag;
int solve(int al,int ar,int dl,int dr)
{
	if (al>ar||dl>dr) return 0;
	if (vis[al][ar][dl][dr]!=-1) return vis[al][ar][dl][dr];
	set<int>st;
	for (int i=0;i<n;i++)
	for (int j=(i%2)^flag;j<m;j+=2)
	{
		int a=i+j,d=j-i+20;
		if (al<=a&&a<=ar&&dl<=d&&d<=dr)
		{
			if (pic[i][j]=='R') st.insert(solve(al,ar,dl,d-2)^solve(al,ar,d+2,dr));
			if (pic[i][j]=='L') st.insert(solve(al,a-2,dl,dr)^solve(a+2,ar,dl,dr));
			if (pic[i][j]=='X') st.insert(solve(al,a-2,dl,d-2)^solve(al,a-2,d+2,dr)
		    	                         ^solve(a+2,ar,dl,d-2)^solve(a+2,ar,d+2,dr));
		}
	}
	int ret=0;
	while (st.count(ret)) ret++;
	return vis[al][ar][dl][dr]=ret;
}
int main()
{
	scanf("%d%d",&n,&m);
	for (int i=0;i<n;i++) scanf("%s",pic[i]);
	int ans1,ans2;
	memset(vis,-1,sizeof(vis));
	flag=1;ans1=solve(0,(n-1)+(m-1),0-(n-1)+20,(m-1)-0+20);
	memset(vis,-1,sizeof(vis));
	flag=0;ans2=solve(0,(n-1)+(m-1),0-(n-1)+20,(m-1)-0+20);
	if ((ans1^ans2)==0) printf("LOSE\n");
	else printf("WIN\n");
	return 0;
}
 	  	  			 	 		 	   	  	 						