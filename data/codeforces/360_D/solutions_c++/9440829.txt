#include <cstdio>
#include <algorithm>
const int N = 1000000 + 9;
int n,m,p,a[N],s[N],d,f[N],ans;
bool mark[N];
int gcd(int a,int b){return b ? gcd(b,a % b) : a;}
int pow(int a,int k)
{
	int res = 1;
	for (; k; k /= 2,a = 1ll * a * a % p)
		if (k & 1) res = 1ll * res * a % p;
	return res;
}
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("360D.in","r",stdin);
	freopen("360D.out","w",stdout);
	#endif
	scanf("%d%d%d",&n,&m,&p);
	for (int i = 1; i <= n; ++i) scanf("%d",a + i);
	for (int i = 1,x; i <= m; ++i) {scanf("%d",&x);d = gcd(d,x);}
	--p;
	for (int i = 1; i * i <= p; ++i)
		if (p % i == 0) {
			s[++s[0]] = i;
			if (i * i != p) s[++s[0]] = p / i;
		}
	++p;
	std::sort(s + 1,s + 1 + s[0]);
	for (int i = 1; i <= n; ++i)
		for (int j = 1; j <= s[0]; ++j)
			if (pow(a[i],s[j]) == 1) {
				int t = gcd(1ll * (p - 1) / s[j] * d % (p - 1),p - 1);
				for (int k = 1; k <= s[0]; ++k)
					if (!mark[k] && s[k] % t == 0) mark[k] = true;
				break;
			}
	for (int i = s[0]; i; --i) {
		f[i] = (p - 1) / s[i];
		for (int j = i + 1; j <= s[0]; ++j)
			if (s[j] % s[i] == 0) f[i] -= f[j];
		if (mark[i]) ans += f[i];
	}
	printf("%d\n",ans);
}
