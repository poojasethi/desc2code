#include <algorithm>
#include <iostream>
#include <cstdio>
#include <vector>

#define MAXN 10005

using namespace std;

int n, m, p, a[MAXN];

int gcd(int x, int y)
{
  return (x == 0) ? y : gcd(y % x, x);
}

int pow(int a, int b)
{
  if (b == 1) return a;
  else
  {
    int c = pow(a, b / 2);
    c = 1LL * c * c % p;
    return (b & 1) ? 1LL * c * a % p : c;
  }
}

main()
{
  cin >> n >> m >> p;
  for (int i = 0; i < n; i++) cin >> a[i];
  
  int g = p - 1;
  for (int i = 0; i < m; i++)
  {
    int x;
    cin >> x;
    g = gcd(g, x);
  }
  
  vector<int> V;
  for (int i = 1; i * i < p; i++) 
    if ((p - 1) % i == 0)
    {
      V.push_back(i);
      if (i * i != (p - 1)) V.push_back((p - 1) / i);
    }
    
  sort(V.begin(), V.end());
  
  vector<int> mark;
  mark.resize(V.size(), 0);
  for (int i = 0; i < n; i++)
  {
    a[i] = pow(a[i], g);
    for (int j = 0; j < V.size(); j++) 
      if (pow(a[i], V[j]) == 1) 
      {
        mark[j] = 1;
        break;
      }
  }
  
  int res = 0;
  vector<int> c;
  c.resize(V.size(), 0);
  for (int i = 0; i < V.size(); i++)
    if (mark[i])
    {
      c[i] = V[i];
      for (int j = 0; j < i; j++)
        if (V[i] % V[j] == 0) c[i] -= c[j];
      res += c[i];
    }
    
  cout << res;
//  system("pause");
}
