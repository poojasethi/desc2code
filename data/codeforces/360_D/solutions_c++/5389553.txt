#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <iostream>
#include <algorithm>
#include <ctime>
#include <cmath>
#define LL long long
using namespace std;
int sum[100010],q[100010],a[100010],b[100010],phi[100010];
int N,M,P,t,len,x,d,k,ans;
bool flag;
int find(int x){
	int l=1,r=len;
	for (;l<r;){
		int mid=(l+r+1)>>1;
		if (sum[mid]>x)r=mid-1;
		else l=mid;
	}
	return l;
}
int quick(int x,int y){
	int s=1,t=x;
	for (;y;y=y/2){
		if (y&1)s=(LL)s*t%P;
		t=(LL)t*t%P;
	}
	return s;
}
int gcd(int a,int b){
	while (b){
		int c=a%b;
		a=b;b=c;
	}
	return a;
}
int main(){
	scanf("%d%d%d",&N,&M,&P);
	for (int i=1;i<=N;i++)scanf("%d",&a[i]);
	for (int i=1;i<=M;i++)scanf("%d",&b[i]);
	t=P-1;
	for (int i=1;i<=M;i++)t=gcd(t,b[i]);
	for (int i=1;i<=trunc(sqrt(P-1));i++)
	if ((P-1)%i==0){
		sum[++len]=i;
		if ((P-1)/i!=i)sum[++len]=(P-1)/i;
	}
	sort(sum+1,sum+len+1);
	for (int i=1;i<=len;i++){
		phi[i]=sum[i];
		for (int j=1;j<i;j++)
		if (sum[i]%sum[j]==0)
		phi[i]=phi[i]-phi[j];
	}
	for (int i=1;i<=N;i++){
		x=quick(a[i],t);
		for (int j=1;j<=len;j++)
		if (quick(x,sum[j])==1){
			d=sum[j];
			break;
		}
		q[i]=(P-1)/d;
	}
	for (int i=1;i<=len;i++){
		k=sum[i];
		flag=false;
		for (int j=1;j<=N;j++)
		if (k%q[j]==0){
			flag=true;
			break;
		}
		if (flag)
		ans+=phi[find((P-1)/k)];
	}
	printf("%d",ans);
}