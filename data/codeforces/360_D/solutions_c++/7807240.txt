#include <cstdio>
#include <cstdlib>
#include <algorithm>
using namespace std;

int n,m,P,ans,x,G;
int a[1000001],p[1000001],cnt;
int flag[1000001],phi[1000001];

int gcd(int a,int b)
{
	for (;b;b^=a^=b^=a%=b);
	return a;
}

long long pow(long long a,long long b,long long P)
{
	long long ans=1;
	for (;b;b>>=1,a=(a*a)%P) if (b&1) ans=(ans*a)%P;
	return ans;
}

int main()
{
//	freopen("360D.in","r",stdin);
//	freopen("360D.out","w",stdout);	
	scanf("%d%d%d",&n,&m,&P); P--;
	for (int i=1;i<=n;i++) scanf("%d",&a[i]);
	for (int i=1;i<=m;i++) scanf("%d",&x),G=gcd(G,x);
	for (long long i=1;i*i<=P;i++)
		if (P%i==0)
		{
			p[++cnt]=i;
			if (P/i!=i) p[++cnt]=P/i;
		}
	sort(p+1,p+1+cnt);
	for (int i=1;i<=n;i++)
	{
		for (int j=1;j<=cnt;j++) 
			if (pow(a[i],(long long)G*p[j],P+1)==1) 
			{
				flag[cnt-j+1]=1;
				break;
			}
	}
	for (int j=1;j<=cnt;j++)
		if (flag[j]) for (int k=j+1;k<=cnt;k++) if (p[k]%p[j]==0) flag[k]=1;
	for (int j=1;j<=cnt;j++)
	{
		phi[j]=p[j];
		for (int k=1;k<j;k++) if (p[j]%p[k]==0) phi[j]-=phi[k];
	}
	for (int j=1;j<=cnt;j++) if (flag[j]) ans+=phi[cnt-j+1];
	printf("%d\n",ans);
}

