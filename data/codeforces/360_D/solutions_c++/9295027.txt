#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <string>
using namespace std;
typedef unsigned long long u64;
const int Maxn=10005,Maxm=100005;
int n,m,p,t;
int a[Maxn],s[Maxm],sn=0;
int f[Maxn],ans=0;

inline int get() {
	char ch;
	while (!isdigit(ch=getchar()));
	int v=ch-48;
	while (isdigit(ch=getchar())) v=v*10+ch-48;
	return v;
}

int gcd(int x,int y) {
	return y?gcd(y,x%y):x;
}

int Pow(u64 a,u64 x) {
	int ret=1;
	for (;x;x>>=1,a=u64(a)*a%p)
		if (x&1) ret=ret*a%p;
	return ret;
}

int main() {
	n=get(); m=get(); t=(p=get())-1;
	for (int i=1;i<=n;i++) a[i]=get();
	for (int i=1;i<=m;i++) t=gcd(t,get());
	for (int i=1;i*i<p;i++)
		if ((p-1)%i==0) s[++sn]=i;
	for (int i=s[sn]*s[sn]==p-1?sn-1:sn;i>=1;i--) s[++sn]=(p-1)/s[i];
	for (int i=1;i<=n;i++)
		for (int j=1;j<=sn;j++)
			if (Pow(a[i],u64(t)*s[j])==1) {
				a[i]=(p-1)/s[j];
				break;
			}
	sort(a+1,a+n+1);
	n=unique(a+1,a+n+1)-a-1;
	for (int i=n;i>=1;i--) {
		f[i]=(p-1)/a[i];
		for (int j=n;j>i;j--) if (a[j]%a[i]==0) f[i]-=f[j];
		ans+=f[i];
	}
	printf("%d\n",ans);
	return 0;
}