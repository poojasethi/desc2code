#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iostream>
#include<algorithm>

using namespace std;

typedef long long ll;
const ll maxn = 10010,maxm = 100010;
ll n,m,p,a[maxn],b[maxm],q[maxn],d[maxn],fac[maxn],ans;

ll power(ll a,ll x)
{
	ll r = 1;
	while (x)
	{
		if (x&1) r = r*a%p;
		a = a*a%p;
		x >>= 1;
	}
	return r;
}

ll phi(ll x)
{
	ll r = x,i;
	for (i=2; i*i<=x; i++) if (x%i==0)
	{
		r = r/i*(i-1);
		while (x%i==0) x /= i;
	}
	if (x>1) r = r/x*(x-1);
	return r;
}

int main()
{
	ll i,j,k,t,tt;
	scanf("%I64d%I64d%I64d",&n,&m,&p);
	t = 0;
	for (i=1; i<=n; i++) scanf("%I64d",a+i);
	t = 0;
	for (i=1; i<=m; i++)
	{
		scanf("%I64d",b+i);
		t = __gcd(t,b[i]);
	}
	t = __gcd(t,p-1);
	
	fac[0] = 0;
	tt = p-1;
	for (i=1; i*i<=tt; i++) if (tt%i==0)
	{
		fac[++fac[0]] = i;
		if (tt/i != i) fac[++fac[0]] = tt/i;
	}
	sort(fac+1,fac+fac[0]+1);

	for (i=1; i<=n; i++)
	{
		for (j=1; j<=fac[0]; j++)
			if (power(a[i],fac[j])==1) break;
		q[i] = (p-1)/fac[j];
		d[i] = __gcd(q[i]*t,p-1);
	}
	sort(d+1,d+n+1);
	n = unique(d+1,d+n+1)-d-1;
	ans = 0;
	for (i=fac[0]; i>=1; i--)
	{
		for (j=1; j<=n; j++)
			if (fac[i] % d[j]==0) break;
		if (j<=n) ans += phi((p-1)/fac[i]);
	}
	printf("%I64d\n",ans);
	
	return 0;
}
