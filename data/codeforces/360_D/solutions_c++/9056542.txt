#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long LL;

const int N = 10005;

int a[N], n, m, g, p;

int d[N], s[N];

int gcd(int x, int y){return y?gcd(y,x%y):x;}
int pow(int x, int y){ LL r(1), s(x); for(; y; y>>=1, s=s*s%p) if(y&1) r=r*s%p; return int(r); }
int cal(int x)
{
	int r(x); 
	for(int i=2; i*i<=x; i++) if(x%i==0) { for(; x%i==0; x/=i); r = r / i * (i-1); }
	if(x>1) r = r / x * (x-1);
	return r;
}

int main()
{
	scanf("%d%d%d", &n, &m, &p), g = p-1;
	for(int i=1; i<=n; i++) scanf("%d", &a[i]);
	for(int i=1, x; i<=m; i++) scanf("%d", &x), g = gcd(g, x);
	
	for(int i=1; i*i<p; i++) if((p-1)%i==0)
	{
		d[++d[0]]=i;
		if(i*i!=p-1) d[++d[0]]=(p-1)/i;
	}
	sort(d+1, d+d[0]+1);
	
	for(int i=1; i<=n; i++) for(int j=1; j<=d[0]; j++)
	if(pow(a[i], (LL(g)*d[j])%(p-1))==1) {s[i]=(p-1)/d[j]; break;}
	sort(s+1, s+n+1), s[0] = unique(s+1, s+n+1) - s - 1;
	
	int r(0);
	for(int i=1; i<=d[0]; i++) for(int j=1; j<=s[0]; j++) if(d[i]%s[j] == 0)
	{r+=cal((p-1)/d[i]); break;}
	printf("%d\n", r);
	
	return 0;
}
