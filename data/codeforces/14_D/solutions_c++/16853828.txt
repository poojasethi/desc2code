#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N = 205;
vector < int > G[N];
vector < pair < int, int > > edges;
int res = 0;
int DFS(int i = 0, int parent = -1) {
	int cur = 0, pre = 0, MAX = 0;
	for(int j = 0; j < G[i].size(); j++) {
		int child = G[i][j];
		if(child == parent) continue;
		cur = 1 + DFS(child, i);
		res = max(res, cur + MAX);
		MAX = max(cur, MAX);
		pre = cur;
	}
	return MAX;
}

int main() {
	#ifndef ONLINE_JUDGE
		freopen("a.in", "r", stdin);
	#endif
    int n, x, y; scanf("%d", &n);
    for(int i = 0; i < n-1; i++) {
		scanf("%d%d", &x, &y);
		edges.push_back(make_pair(x, y));
		G[x].push_back(y);
		G[y].push_back(x);
    }
    ll ans = 0, xx, yy;
	for(int i = 0; i < n-1; i++) {
		DFS(edges[i].first, edges[i].second);
		xx = res, res = 0;
		DFS(edges[i].second, edges[i].first);
		yy = res, res = 0;
		ans = max(ans, xx*yy);
	}
	cout << ans;
	return 0;
}
