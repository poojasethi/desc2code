#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<vector>
#define M 3005
#define Max(a,b) if(a<(b))a=(b);
using namespace std;
vector<int>edge[M];
int mx,id,ans;
void rd(int &res){
	res=0;char c;
	while(c=getchar(),c<'0');
	do res=(res<<1)+(res<<3)+(c^48);
	while(c=getchar(),c>='0');
}
void solve(int x,int f,int d,int t){
	if(mx<d)mx=d,id=x;
	for(int i=0;i<edge[x].size();i++){
		int y=edge[x][i];
		if(y==f||y==t)continue;
		solve(y,x,d+1,t);
	}
}
void query(int x,int y){
	solve(x,x,0,y);solve(id,id,0,y);
	int res=mx;mx=-1;
	solve(y,y,0,x);solve(id,id,0,x);
	Max(ans,res*mx);mx=-1;
}
void dfs(int x,int f){
	for(int i=0;i<edge[x].size();i++){
		int y=edge[x][i];
		if(y==f)continue;
		query(x,y);
		dfs(y,x);
	}
}
int main(){
	int n,a,b,i;
	scanf("%d",&n);
	for(i=1;i<n;i++){
		rd(a),rd(b);
		edge[a].push_back(b);
		edge[b].push_back(a);
	}dfs(1,0);
	printf("%d",ans);
	return 0;
}
		