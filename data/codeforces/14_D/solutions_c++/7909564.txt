#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
int n;
int deep;
int map[220][220];
int dfs(int v,int pre)
{
	int s=0;
	int maxd1=0,maxd2=0;
	for(int i=1;i<=n;i++)
	{
		if(map[v][i]==1&&i!=pre)
		{
			s=max(s,dfs(i,v));
			if(deep>maxd1)
			{
				maxd2=maxd1;
				maxd1=deep;
			}
			else	maxd2=max(maxd2,deep);
		}
	}
	s=max(s,maxd1+maxd2);
	deep=maxd1+1;
	return s;
}
int main()
{
	scanf("%d",&n);
	int q,p;
	int ans=0;
	memset(map,0,sizeof(map));
	for(int i=1;i<n;i++)
	{
		scanf("%d %d",&q,&p);
		map[q][p]=map[p][q]=1;
	}
	for(int i=1;i<=n;i++)
	{
		for(int j=i+1;j<=n;j++)
		{
			if(map[i][j]==1)
			{
				int d=dfs(i,j);
				int b=dfs(j,i);
				ans=max(ans,d*b);
			}
		}
	}
	printf("%d\n",ans);
	return 0;
}