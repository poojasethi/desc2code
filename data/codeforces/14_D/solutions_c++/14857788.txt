#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair < int, int > pii;

const ll linf = 1e18 + 9;
const int inf = 1e9 + 9;
const int N = 2e2 + 9;

int n, u, v, gr[N][N], mx, w, node2;

void dfs(int node, int from, int stp) {
//	cout << node << endl;
	if (stp > w) {
		w = stp;
		node2 = node;
	}
	for (int i = 1; i <= n; i++)
		if (i != from and gr[node][i])
			dfs(i, node, stp + 1);
}

int lp(int node) {
	node2 = 0;
	dfs(node, -1, 0);
	w = 0;
	dfs(node2, -1, 0);
	return w;
}

int main() {

	cin >> n;

	for (int i = 1; i < n; i++) {
		cin >> u >> v;
		gr[u][v] = gr[v][u] = true;
	}

	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			if (!gr[i][j]) continue;
			gr[i][j] = gr[j][i] = false;
			int ans = 0; w = 0;
			ans = lp(i); w = 0;
			ans *= lp(j);
			mx = max(ans, mx);
			gr[i][j] = gr[j][i] = true;
		}
	}

	cout << mx << endl;

	return 0;
}
