#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

bool vis[300];
int d, x[300], y[300];
vector <int> G[300]; 

int dfs(int u) {
    int m1=0, m2=0, res=0;
    vis[u]=true;
    for(int i=0; i<G[u].size(); i++) {
        if(!vis[G[u][i]]) {
            res=max(res, dfs(G[u][i]));
            if(d>m1) swap(d, m1);
			if(d>m2) swap(d, m2);
        }
    }
    d=m1+1;
    res=max(res, m1+m2);
    return res;
}

int main() {
	int n, ans=0;
	scanf("%d", &n);
	for(int i=0; i<n-1; i++) {
		scanf("%d%d", &x[i], &y[i]);
		G[x[i]].push_back(y[i]);
		G[y[i]].push_back(x[i]);
	}	
	for(int i=0; i<n-1; i++) {
		memset(vis, 0, sizeof(vis));
		vis[x[i]]=vis[y[i]]=true;
		ans=max(ans, dfs(x[i])*dfs(y[i]));
	}
	printf("%d\n", ans);
	return 0;
}
   	 	 		 			   	     		 	 	