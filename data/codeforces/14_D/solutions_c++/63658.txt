#include <iostream>
#include <vector>
using namespace std;

vector<int> g[256];

int maxpath(int v, int pa, int& depth)
{
	int d1 = 0;
	int d2 = 0;
	
	int res = 0;
	for(int i = 0; i < g[v].size(); ++i)
	{
		if (g[v][i] != pa)
		{
			int d;
			res = max(res, maxpath(g[v][i], v, d));
			
			if (d > d1)
			{
				d2 = d1;
				d1 = d;
			}
			else if (d > d2)
			{
				d2 = d;
			}
		}
	}
	
	res = max(res, d1 + d2);
	depth = d1 + 1;
	
	return res;
}

int main()
{
	int n;
	cin >> n;
	
	for(int i = 0; i < n - 1; ++i)
	{
		int a, b;
		cin >> a >> b;
		g[--a].push_back(--b);
		g[b].push_back(a);
	}
	
	int res = 0;
	
	for(int i = 0; i < n; ++i)
	{
		for(int j = 0; j < g[i].size(); ++j)
		{
			int dpt;
			int d1 = maxpath(i, g[i][j], dpt);
			int d2 = maxpath(g[i][j], i, dpt);
			res = max(res, d1 * d2);
		}
	}
	
	cout << res;
	
	return 0;
}
