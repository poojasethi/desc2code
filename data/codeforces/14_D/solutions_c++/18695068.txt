#include<cstdio>
#include<algorithm>
using namespace std;
const int M=205;
struct Edge{
	int to,nxt;
}edge[M<<1];
int head[M],T,del,len[2];
void add_edge(int a,int b){
	edge[T]=(Edge){b,head[a]};
	head[a]=T++;
}
int mx,ID;
void rec(int x,int f,int dep){
//	printf("%d %d\n",x,f);
	if(dep>mx){
		mx=dep;
		ID=x;
	}
	for(int i=head[x];~i;i=edge[i].nxt){
		if(edge[i].to==f||del==(i>>1)) continue;
		rec(edge[i].to,x,dep+1);
	}
}
void solve(int x,int f){
	mx=-1;
	rec(x,0,0);
	rec(ID,0,0);
	len[f]=mx;
}
int main(){
	int n;
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		head[i]=-1;
	for(int i=1;i<n;i++){
		int a,b;
		scanf("%d%d",&a,&b);
		add_edge(a,b);
		add_edge(b,a);
	}
	int ans=0;
	for(int i=0;i<n-1;i++){
		del=i;
		solve(edge[i<<1].to,0);
		solve(edge[i<<1|1].to,1);
		ans=max(ans,len[0]*len[1]);
	}
	printf("%d\n",ans);
	return 0;
}
