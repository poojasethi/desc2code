#include <bits/stdc++.h>
using namespace std;
vector<int> g[205];
int x[205],y[205];
int dist,far;
void dfs(int cur,int par,int d)
{
    if(d>dist)
    {
        dist=d;
        far=cur;
    }
    for(int i=0;i<g[cur].size();i++)
    {
        if(g[cur][i]!=par)
            dfs(g[cur][i],cur,d+1);
    }
}
int main()
{
    int i,j,ans=0,n;
    cin>>n;
    for(i=1;i<n;i++)
        cin>>x[i]>>y[i];
    for(i=1;i<n;i++)
    {
        for(j=1;j<=n;j++)
            g[j].clear();
        for(j=1;j<n;j++)
        {
            if(j!=i)
            {
                g[x[j]].push_back(y[j]);
                g[y[j]].push_back(x[j]);
            }
        }
        dist=-1;
        dfs(x[i],-1,0);
        dfs(far,-1,0);
        int temp=dist;
        dist=-1;
        dfs(y[i],-1,0);
        dfs(far,-1,0);
        ans=max(ans,dist*temp);
    }
    cout<<ans<<endl;
    return 0;
}
