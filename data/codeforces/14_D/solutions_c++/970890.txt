#include<iostream>
using namespace std;
bool adj[210][210];
int n,dist,c,ans;
void dfs(int cur, int par, int cdist) { 
        if (cdist > dist){
            c = cur;
            dist = cdist;
    }   
        for(int i=0;i<n;i++) 
    {
        if(i!=par&&adj[cur][i]==true) dfs(i,cur,cdist+1);
    }   
}
int fnd(int s) { 
        dist=-1; 
        dfs(s,-1,0); 
        s=c; 
        dist=-1; 
        dfs(s,-1,0); 
        return dist; 
}
int main(){
    cin>>n;
    for(int i=1;i<n;i++)
    {
        int g1,g2;cin>>g1>>g2;
        g1--;g2--;
        adj[g1][g2]=adj[g2][g1]=true;
    }
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            if(adj[i][j]==true)
            {
                adj[i][j]=adj[j][i]=false;
                ans=max(ans,fnd(i)*fnd(j));
                adj[i][j]=adj[j][i]=true;
            }
        }
    }
    cout<<ans;
}
