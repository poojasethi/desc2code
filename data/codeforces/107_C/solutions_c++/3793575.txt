#include <cstdio>
#include <cstring>

typedef long long LL;

const int maxn = 16;
const int maxk = 1 << maxn;

LL f[maxk], y;
int ans[maxn], d[maxk], n, m;
bool v[maxn + 1];

LL getdp() {
    memset(f, 0, sizeof(f));
    f[0] = 1;
    for (int i = 0; i < (1 << n); ++ i) {
        int num = 0;
        for (int j = 0; j < n; ++ j) num += ((i & (1 << j)) > 0);
        for (int j = 0; j < n; ++ j) {
            if (!(i & (1 << j)) && (ans[j] == -1 || ans[j] == num) && ((i | d[j]) == i)) {
                f[i | (1 << j)] += f[i];
            }
        }
    }
    return f[(1 << n) - 1];
}

int main() {
    scanf("%d%I64d%d", &n, &y, &m);
    while (m --) {
        int l, r;
        scanf("%d%d", &l, &r);
        -- l;
        -- r;
        d[r] |= (1 << l);
    }
    y -= 2001;
    memset(ans, -1, sizeof(ans));
    for (int i = 0; i < n; ++ i) {
        for (int j = 0; j <= n; ++ j) {
            if (v[j]) continue;
            if (j == n) {
                puts("The times have changed");
                return 0;
            } else {
                ans[i] = j;
                LL t = getdp();
                if (t <= y) {
                    y -= t;
                } else {
                    v[j] = 1;
                    break;
                }
            }
        }
    }
    for (int i = 0; i < n; ++ i) printf("%d ", ans[i] + 1);
    return 0;
}
