#include <stdio.h>
#include <cstring>
#include <vector>
#include <list>
using namespace std;

typedef long long LL;

const int MAXN = 30;
int use[MAXN],req[MAXN], ans[MAXN];
LL dp[1<<16], y;

LL solve(int n) {
	memset(dp, 0, sizeof(dp));
	dp[0] = 1;
	for(int i = 1; i < (1<<n); i++) {
		int k = __builtin_popcount(i);
		for(int j = 0; j < n; j++)
			if( (i & (1 <<j)) && (req[j] & i) == req[j])
				if (use[k] == -1 ||  use[k] == j + 1)
					dp[i] += dp[i^(1<<j)];
	}
	return dp[(1<<n) - 1];
}

int main(){
	int n, m, a, b;
	//freopen("C.in","r",stdin);
	scanf("%d%I64d%d", &n, &y, &m);
	y -= 2000;
	memset(req, 0, sizeof(req));
	for(int i = 0; i < m; ++i) {
		scanf("%d%d", &a, &b);
		--a;  --b;
		req[b] |= 1 << a;
	}
	memset(use, -1, sizeof(use));

	for(int i = 1; i <= n; i++) {
		bool ok = false;
		for(int j = 1; j <= n; j++) {
			if(use[j] == -1){
				use[j] = i,	ans[i] = j;
				LL k = solve(n);
				if(y > k)
					y -= k,use[j] = -1;
				else {
					ok = true;
					break;
				}
			}
		}
		if (!ok){
			puts("The times have changed");
			return 0;
		}
	}
	for(int i = 1; i <= n; i++)
		printf("%d ", ans[i]);
	return 0;
}