#include<cstdio>
#include<cstring>
#define N   16
#define B(x) (1<<(x))
#include<iostream>
using namespace std;

long long f[1<<N],y;

int g[N],ans[N],i,k,z,Z,n,m,a,b;

int s[1<<10];

bool mark[N+1];

int main()
{
    scanf("%d%I64d%d",&n,&y,&m);

    y-=2000;

    while(m--)
    {
        scanf("%d%d",&a,&b);
        g[--b]|=B(--a);
    }

    Z =B(n) -1;

    memset(ans,-1,sizeof(ans));

    for(i=0;i<n;++i)
    {
        for(ans[i]=0;;++ans[i])
        if(!mark[ans[i]])
        {
            if(ans[i]>=n)return puts("The times have changed");
            memset(f,0,sizeof(f));

            f[0]=1;

            for(z=0;z<=Z;++z)
            if(f[z])
            {
                b= __builtin_popcount(z);
                for(k=0;k<n;++k)
                if(!(z&B(k)))
                    {
                        if((ans[k]==-1||ans[k]==b) && ((z&g[k])== g[k]))
                        {
                            f[z|B(k)]+=f[z];

                        }

                    }
            }

        //  if(y>=f[Z])y-=f[Z];

            if(f[Z]>=y)
            {
                mark[ans[i]]=true;
                break;
            }
            else y-=f[Z];
        }
    }
    for(i=0;i<n;++i)printf("%d%c",ans[i]+1,i+1==n?'\n':' ');

    return 0;
}
