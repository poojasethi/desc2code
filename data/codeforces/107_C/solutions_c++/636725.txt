#include <iostream>
#include <cstring>
using namespace std;

const int max_n = 16;
long long ans[1 << max_n];
int a[max_n], where[max_n], adj[max_n], n;

bool include(int mask1, int mask2) {
	return (mask1 | mask2) == mask1;
}

long long count(int mask) {
	if (ans[mask] != -1) return ans[mask];
	if (mask == (1 << n) - 1) return 1;
	ans[mask] = 0;
	int cnt = 0;
	for (int i = 0; i < n; ++i)
		if (mask & (1 << i)) cnt++;
	for (int i = 0; i < n; ++i)
		if ((where[cnt] == -1) || (where[cnt] == i))
			ans[mask] += (include(mask, adj[i]) && !(mask & (1 << i))) ? count(mask | (1 << i)) : 0;
	return ans[mask];
}

int main() {
	long long y;
	int u, v, m;
	cin >> n >> y >> m;
	y -= 2000;
	for (int i = 0; i < m; ++i) {
		cin >> u >> v;
		u--, v--;
		adj[v] |= (1 << u);
	}
	memset(a, -1, sizeof(a));
	memset(where, -1, sizeof(where));
	for (int i = 0; i < n; ++i) {
		for (int j = 0; j < n; ++j)
			if (where[j] == -1) {
				a[i] = j, where[j] = i;
				memset(ans, -1, sizeof(ans));
				long long tmp = count(0);
				if (y <= tmp) break;
				y -= tmp, a[i] = -1, where[j] = -1;
			}
		if (a[i] == -1) {
			cout << "The times have changed" << endl;
			return 0;
		}
	}
	for (int i = 0; i < n; ++i)
		cout << a[i] + 1 << " ";
	cout << endl;
	return 0;
}