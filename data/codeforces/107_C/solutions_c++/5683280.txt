#include <cstdio>
#include <iostream>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <functional>
#include <limits>
#include <cassert>
#include <sstream>
#include <cmath>
#include <string>
#include <fstream>

using namespace std;
typedef long long ll;

const int max_n=105;

int n,m;
ll y;
int c[20];
ll dp[1<<20];
int res[max_n],pos[max_n];

ll cal()
{
	dp[(1<<n)-1]=1;
    for(int mask=(1<<n)-2; mask>=0; mask--)
    {
    	int nf=0;
    	for(int i=0; i<n; i++)
    		nf+=bool(mask&(1<<i));
    	
    	dp[mask]=0;
    	int k=nf<n?pos[nf]:-1;
    	// if(nf<n and pos[nf]!=-1)
    	// {
    	// 	if((mask&(c[pos[nf]]))==c[pos[nf]])
    	// 		dp[mask]=dp[mask+(1<<pos[nf])];
    	// 	continue;
    	// }

    	for(int i=0; i<n; i++)
    		if(!(mask&(1<<i)))
    		{
    			if(k!=-1 and k!=i)
    				continue;
    			if((mask&c[i])==c[i])
    				dp[mask]+=dp[mask+(1<<i)];
    		}
    	//cout<<mask<<" "<<dp[mask]<<endl;
    }

    return dp[0];
}

int main()
{
	int a,b;
    cin>>n>>y>>m;
	for(int i=0; i<m; i++)
	{
		scanf("%d%d",&a,&b);
		a--;b--;
		c[b]|=(1<<a);
    }

    y-=2001ll;
    fill(pos,pos+n,-1);
    if(cal()<=y)
    {
    	printf("The times have changed\n");
		return 0;
	}

	int mask=0;
	for(int z=0; z<n; z++)
	{
		for(int i=0; i<n; i++)
			if(!(mask&(1<<i)))
			{
				res[z]=i;
				pos[i]=z;
				ll tmp=cal();
				//cout<<z<<" "<<i<<" "<<y<<" "<<tmp<<endl;
				if(tmp>y)
				{
					mask+=(1<<i);
					break;
				}
				else
				{
					y-=tmp;
					pos[i]=-1;
				}
			}
	}

	for(int i=0; i<n; i++)
		printf("%d ",res[i]+1);

    return 0;
}
