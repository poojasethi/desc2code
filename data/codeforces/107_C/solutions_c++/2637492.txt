#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstring>
#define MAXN 17
using namespace std;
typedef long long int ll;
int limit[MAXN],pos[MAXN];
ll dp[1<<MAXN];
int n,k;
ll m;

ll DP(int now, int mask)
{
    if (now == n)return 1;
    if (dp[mask] != -1)return dp[mask];
    dp[mask] = 0;
    for (int i(0); i<n; ++i) {
        if (mask & (1<<i))continue;
        if (pos[i] != -1 && pos[i] != now)continue;
        if ((limit[i]&mask) != limit[i])continue;
        
        dp[mask] += DP(now + 1, mask | (1<<i));
    }
    return dp[mask];
}

int main()
{
    scanf("%d%I64d%d",&n,&m,&k);
    memset(dp,-1,sizeof(dp));
    memset(pos,-1,sizeof(pos));
    memset(limit,0,sizeof(limit));
    for (int i(0); i<k; ++i) {
        int a,b;
        scanf("%d%d",&a,&b);
        limit[b-1] |= (1<<(a-1)); 
    }
    m -= 2001;
    ll tt = DP(0,0);
    //cout<<tt<<endl;
    if (tt <= m) {
        cout<<"The times have changed"<<endl;
        //system("pause");
        return 0;
    }
    
    for (int i(0); i<n; ++i) {
        for (int j(0); j<n; ++j) {
            pos[i] = j;
            memset(dp,-1,sizeof(dp));
            tt = DP(0,0);
            if (m < tt)break;
            m -= tt;
        }
    }

    for (int i(0); i<n; ++i) {
        cout<<pos[i] + 1<<" ";
    }
    cout<<endl;
    
    //system("pause");
    return 0;
}
