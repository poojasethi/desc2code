#include <algorithm>
#include <iostream>
#include <cstring>
#include <vector>
#include <cstdio>

using namespace std;

typedef long long llint;

bool used[20];
int dad[20], pos[20], n;
llint dp[1<<16];

llint solve( int who, int mask ){

    if( who == n ) return 1;

    llint &ref = dp[mask];
    if( ref != -1 ) return ref;

    ref = 0;
    for(int i = 0; i < n; ++i ){
      if( mask & (1<<i) ) continue;
      if( pos[i] != -1 && who != pos[i] )continue;
      if( (mask & dad[i]) != dad[i] ) continue;
      ref = ( ref + solve( who+1, mask | (1<<i) ) );
    }

    return ref;
}

int main(){

    int m; llint y;
    scanf("%d%I64d%d", &n, &y, &m ); y -= 2001;

    for(int i = 0; i < m; ++i){
        int a, b;
        scanf("%d %d", &a, &b );
        dad[b-1] |= 1 << (a-1);
    }

    memset(dp, -1, sizeof(dp) );
    memset(pos, -1, sizeof(pos) );

    llint ss = solve( 0, 0 );

    if( ss <= y ){
        printf("The times have changed\n");
        return 0;
    }

    for(int i = 0; i < n; ++i ){
      llint comb = 0;
      for(int j = 0; j < n; ++j )
      {
          pos[i] = j;
          memset( dp, -1, sizeof(dp) );
          llint w = solve( 0, 0 );
          if( w > y ){ break; }
          y -= w;
      }
    }

    for(int i = 0; i < n; ++i )
      printf("%d ", pos[i] + 1 );

    printf("%\n");
    return 0;
}
