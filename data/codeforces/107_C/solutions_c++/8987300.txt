#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define int64 long long
#define N 20
#define M (1<<16)
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,nn;
int xiao[N],a[N],b[N],f[N],ge[M];
int64 K,h[M];
inline int64 suan() {
	int i,j;
	memset(h,0,sizeof(h));
	h[0]=1;
	For(i,0,nn-1) if (h[i]) {
		int A=ge[i]+1;
		For(j,1,n) if (!(i>>j-1&1)&&(!f[A]||f[A]==j)) {
			if ((xiao[j]|i)>i) continue;
			int B=i|1<<j-1;
			h[B]+=h[i];
		}
	}
	return h[nn];
}
void dfs(int x) {
	if (x>n) {
		int i;
		For(i,1,n) printf("%d ",b[i]);
		printf("\n");
		exit(0);
	}
	if (suan()<K) {
		K-=suan();
		return;
	}
	int i;
	For(i,1,n) if (!f[i]) {
		f[i]=x;
		b[x]=i;
		dfs(x+1);
		f[i]=0;
	}
}
int main() {
	scanf("%d%I64d%d",&n,&K,&m);
	For(i,1,m) {
		int x,y;
		scanf("%d%d",&x,&y);
		xiao[y]|=1<<x-1;
	}
	K-=2000;
	nn=(1<<n)-1;
	For(i,0,nn)For(j,0,n-1) ge[i]+=i>>j&1;
	dfs(1);
	printf("The times have changed\n");
	return 0;
}
