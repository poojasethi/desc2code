#include <iostream>
#include <string>
#include <cstring>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <map>
#include <bitset>
#include <queue>
#include <set>	
#include <time.h>
#pragma comment(linker, "/STACK:102400000,102400000")
using namespace std;

#define LL long long
#define ULL unsigned long long
#define eps 1e-9
#define N (800 + 10)
#define M (200000 + 10)
#define pii pair<int,int>
#define MP make_pair
#define md (ll+rr>>1)
#define lson ll, md, ls
#define rson md + 1, rr, rs
#define ls (i<<1)
#define rs (i<<1|1)
#define inf 0x3f3f3f3f
#define mod 1000000007


LL f[N], dp[1<<17];
int ans[N];
bool used[N];
int main() {
	int n, m;
	LL y;
	cin>>n>>y>>m;
	y -= 2001;
	for(int i = 0 ; i < m; ++i) {
		int a, b;
		scanf("%d%d", &a, &b);
		f[b-1] |= 1<<(a-1);
	}
	memset(ans, -1, sizeof ans);
	for(int i = 0; i < n; ++i) {
		for(ans[i] = 0; ; ++ans[i]) if(!used[ans[i]]) {
			if(ans[i] >= n) {
				puts("The times have changed");
				return 0;
			}
			memset(dp, 0, sizeof dp);
			dp[0] = 1;
			for(int s = 0; s < (1<<n); ++s) {
				int cnt = 0;
				for(int t = s; t; t -= t&-t) ++cnt;
				for(int j = 0; j < n; ++j) if(!(s & (1<<j))) {
					if((ans[j] == -1 || ans[j] == cnt) && (s & f[j]) == f[j])
						dp[s|(1<<j)] += dp[s];
				}
			}
			if(y < dp[(1<<n)-1]) {
				used[ans[i]] = 1;
				break;
			}
			else y -= dp[(1<<n)-1];
		}
	}
	for(int i = 0; i < n; ++i) {
		printf("%d%c", ans[i]+1, i == n-1 ? '\n' :' ');
	}
}
        	 	  			 	 	  						