#include <cstdio>
#include <cstring>
#include <iostream>
#include <vector>
#include <stack>
#include <queue>
#include <map>
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define maxn 200005
#define pii pair < int ,int >
using namespace std;
int n,m,q,i,j,k,a,b,c,num[maxn],cc[maxn],low[maxn],bcc[maxn],bccn,syc,ccn,ata[maxn][20],deg[maxn],fre2[maxn],fre[maxn],dep[maxn];
stack <int > s;
queue <int > Q;
bool cnt;
vector < int > d[maxn],e[maxn];
map < int ,int > val[maxn];
void dfs(int x,int pa){
	 low[x]=num[x]=++syc;
	 cc[x]=ccn;
	 s.push(x);
	 int i,nd;
	 for(i=0;i<d[x].size();i++){
		 nd=d[x][i];
		 if(!num[nd]){
			 dfs(nd,x);
			 low[x]=min(low[x],low[nd]);
		 }
		 else if(nd!=pa or val[x][nd]>1)
			 low[x]=min(low[x],num[nd]);
	 }
	 if(num[x]==low[x]){
		 ++bccn;
		 while(1){
			 nd=s.top();
			 s.pop();
			 bcc[nd]=bccn;
			 if(nd==x)
			 break;
		 }
	 }
}
void dfs2(int x,int pa){
	 num[x]=1;
	 ata[x][0]=pa;
	 int i,nd,syc=0;
	 for(i=0;i<e[x].size();i++){
		 nd=e[x][i];
		 if(nd==pa)
		 continue;
		 dep[nd]=dep[x]+1;
		 syc++;
		 dfs2(nd,x);
	 }
	 deg[x]=syc;
	 if(!deg[x])
	 Q.push(x);
}
int lca(int x,int y){
	if(dep[x]<dep[y])
	swap(x,y);
	int i,diff;
	diff=dep[x]-dep[y];
	for(i=0;i<=18;i++)
	if((1<<i) & diff)
	x=ata[x][i];
	if(x==y)
	return x;
	for(i=18;i>=0;i--){
		if(ata[x][i]!=ata[y][i]){
			x=ata[x][i];
			y=ata[y][i];
		}
	}
	return ata[x][0];
}
void bfs(){
	 int i,j;
	 while(!Q.empty()){
		 int nd=Q.front();
		 Q.pop();
		 if(ata[nd][0]==0)
		 continue;
		 if(fre[nd] and fre2[nd]){
			 cnt=1;
			 return ;
		 }
		 fre[ata[nd][0]]+=fre[nd];
		 fre2[ata[nd][0]]+=fre2[nd];
		 deg[ata[nd][0]]-=1;
		 if(!deg[ata[nd][0]])
			 Q.push(ata[nd][0]);
	 }
}
int main(){
	scanf("%d %d %d",&n,&m,&q);
	for(i=1;i<=m;i++){
		scanf("%d %d",&a,&b);
		val[a][b]++;
		val[b][a]++;
		d[a].pb(b);
		d[b].pb(a);
	}
	for(i=1;i<=n;i++){
		if(!num[i]){
			ccn++;
			dfs(i,0);
		}
	}
	for(i=1;i<=n;i++){
		for(j=0;j<d[i].size();j++){
		    int nd=d[i][j];
		    if(bcc[i]!=bcc[nd])
			   e[bcc[i]].pb(bcc[nd]);
	    }
	}
	memset(num,0,sizeof num);
	for(i=1;i<=bccn;i++)
	if(!num[i])
	dfs2(i,0);
	for(j=1;j<=18;j++)
	for(i=1;i<=bccn;i++)
	ata[i][j]=ata[ata[i][j-1]][j-1];
	for(i=1;i<=q;i++){
		scanf("%d %d",&a,&b);
		if(cc[a]!=cc[b]){
			printf("No\n");
			return 0;
		}
		if(bcc[a]==bcc[b])
		continue;
		a=bcc[a];
		b=bcc[b];
		c=lca(a,b);
		fre[a]++;
		fre[c]--;
		fre2[c]--;
		fre2[b]++;
	}
	bfs();
	if(!cnt)
	printf("Yes\n");
	else
	printf("No\n");
	return 0;
}

