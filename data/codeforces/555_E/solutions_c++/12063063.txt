#include<stdio.h>
#include<vector>
#include<stdlib.h>
#include<string.h>
using namespace std;
vector<int>con[200010];
int cnt,ch[200010],n,m,q,up[200010],lev[200010],bridge[200010],par[200010],d[21][200010],ch2[200010];
int a1[200010],a2[200010];
struct data
{
    int x,y;
}e[200010];
void dfs(int x,int p)
{
    int i;
    ch[x]=cnt; par[x]=p; up[x]=lev[x];
    for(i=0;i<con[x].size();i++)
    {
        if(con[x][i]==p && ch2[x]==0){ch2[x]=1; continue;}
        if(ch[con[x][i]])
        {
            up[x]=min(up[x],up[con[x][i]]);
            continue;
        }
        lev[con[x][i]]=lev[x]+1;
        dfs(con[x][i],x);
        up[x]=min(up[x],up[con[x][i]]);
    }
    if(up[x]>=lev[x]) bridge[x]=1;
}
void dfs2(int x,int p)
{
    int i;
    ch[x]=1;
    for(i=0;i<con[x].size();i++)
    {
        if(con[x][i]==p || ch[con[x][i]]) continue;
        dfs2(con[x][i],x);
        a1[x]+=a1[con[x][i]];
        a2[x]+=a2[con[x][i]];
    }
    if(bridge[x] && a1[x] && a2[x]){printf("NO"); exit(0);}
}
int LCA(int x,int y)
{
    int i,t;
    if(lev[x]<lev[y]) swap(x,y);
    t=lev[x]-lev[y];
    for(i=0;i<=20;i++)
    {
        if((1<<i)&t) x=d[i][x];
    }
    if(x==y) return x;
    for(i=20;i>=0;i--)
    {
        if(d[i][x]!=d[i][y]) x=d[i][x], y=d[i][y];
    }
    return d[0][x];
}
int main()
{
    int i,x,y,j,p;
    scanf("%d %d %d",&n,&m,&q);
    for(i=1;i<=m;i++)
    {
        scanf("%d %d",&x,&y);
        con[x].push_back(y); con[y].push_back(x);
    }
    for(i=1;i<=n;i++) up[i]=2147483647;
    for(i=1;i<=n;i++)
    {
        if(ch[i]) continue;
        cnt++; dfs(i,0);
    }
    for(i=1;i<=n;i++) d[0][i]=par[i];
    for(i=1;i<=20;i++)
    {
        for(j=1;j<=n;j++)
        {
            d[i][j]=d[i-1][d[i-1][j]];
        }
    }
    for(i=1;i<=q;i++)
    {
        scanf("%d %d",&x,&y);
        if(ch[x]!=ch[y]){printf("NO\n"); return 0;}
        p=LCA(x,y);
        a1[x]++; a1[p]--;
        a2[y]++; a2[p]--;
    }
    memset(ch,0,sizeof ch);
    for(i=1;i<=n;i++)
    {
        if(ch[i]) continue;
        dfs2(i,0);
    }
    printf("YES");
    return 0;
}
