#include<bits/stdc++.h>

using namespace std;

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define sol (root+root)
#define sag (root+root+1)
#define orta ((bas+son)/2)
#define ll long long
#define pii pair<int,int>

const int N=2e5+5;
const int mod=1e9+7;

int n,m,k,x,y,i,s,tme,j,q;
int st[N],low[N],belong[N],dep[N],belong2[N];
int bridge[N],pred[N],lca[N][20],H[N];

vector<pii > V[N],Q[N];
vector<int> C[N];

void fb(int x){

	st[x]=low[x]=++tme;

	int i,cnt=0;

	for(i=0 ; i<V[x].size() ; i++)
		if(!st[V[x][i].st]){
			pred[V[x][i].st]=x;
			fb(V[x][i].st);
			low[x]=min(low[x],low[V[x][i].st]);
			if(low[V[x][i].st]>st[x])
				bridge[V[x][i].nd]=1;
		}
		else if(V[x][i].st!=pred[x])
			low[x]=min(low[x],st[V[x][i].st]);
		else {
			cnt++;
			if(cnt==2)
				low[x]=min(low[x],st[V[x][i].st]);
		}
}

void f(int x){

	belong[x]=s;

	int i;

	for(i=0 ; i<V[x].size() ; i++)
		if(!bridge[V[x][i].nd] and !belong[V[x][i].st])
			f(V[x][i].st);

}

void dfs(int x,int d){
	
	dep[x]=d;
	belong2[x]=q;

	int i;

	for(i=0 ; i<C[x].size() ; i++)
		if(C[x][i]!=lca[x][0]){
			lca[C[x][i]][0]=x;
			dfs(C[x][i],d+1);
		}
}

int flca(int x,int y){
	
	if(dep[x]<dep[y])
		swap(x,y);

	int i,t=dep[x]-dep[y];

	for(i=0 ; i<=19 ; i++)
		if(t&(1<<i))
			x=lca[x][i];

	if(x==y)
		return x;

	for(i=19 ; i>=0 ; i--)
		if(lca[x][i]!=lca[y][i]){
			x=lca[x][i];
			y=lca[y][i];
		}

	return lca[x][0];
}

int dfs2(int x){

	H[x]=1;

	int a=0,i,t,l;

	for(i=0 ; i<C[x].size() ; i++)
		if(C[x][i]!=lca[x][0]){
			t=dfs2(C[x][i]);
//			cout<<C[x][i]<<' '<<t<<endl;
			if(t<0)
				t++;
			else if(t>0)
				t--;
			if(a<=0 and t<=0)
				a=min(a,t);
			else if(a>=0 and t>=0)
				a=max(a,t);
			else {	
				puts("No");
				exit(0);
			}
		}

	for(i=0 ; i<Q[x].size() ; i++){
		l=flca(x,Q[x][i].nd);
		t=dep[x]-dep[l];
//		cout<<"#"<<x<<' '<<Q[x][i].nd<<' '<<t<<endl;
		if(x==l)
			continue;
		if(Q[x][i].st)
			t=-t;
		if(a<=0 and t<=0)
			a=min(a,t);
		else if(a>=0 and t>=0)
			a=max(a,t);
		else {
			puts("No");
			exit(0);
		}
	}

//	cout<<x<<' '<<a<<endl;

	return a;
}

main(){

	scanf("%d %d %d",&n,&m,&k);

	for(i=1 ; i<=m ; i++){
		scanf("%d %d",&x,&y);
		V[x].pb(mp(y,i));
		V[y].pb(mp(x,i));
	}
	
	fb(1);

	for(i=1 ; i<=n ; i++)
		if(!belong[i]){
			s++;
			f(i);
		}

	for(i=1 ; i<=n ; i++)
		for(j=0 ; j<V[i].size() ; j++)
			if(bridge[V[i][j].nd])
				C[belong[i]].pb(belong[V[i][j].st]);

	
	for(i=1 ; i<=s ; i++)
		if(!dep[i]){
			++q;
			dfs(i,0);
		}

	for(i=1 ; i<=19 ; i++)
		for(j=1 ; j<=s ; j++)
			lca[j][i]=lca[lca[j][i-1]][i-1];

	for(i=1 ; i<=k ; i++){
		scanf("%d %d",&x,&y);
		if(belong2[belong[x]]!=belong2[belong[y]]){
			puts("No");
			exit(0);
		}
		Q[belong[x]].pb(mp(0,belong[y]));
		Q[belong[y]].pb(mp(1,belong[x]));
	}

	for(i=1 ; i<=s ; i++)
		if(!H[i])
			dfs2(i);

	puts("Yes");

}
