#include<bits/stdc++.h>
using namespace std;
const int maxn=200001;
vector<int>v[maxn];
int cnt[maxn][2],n,m,q,par[maxn][22],mark[maxn],h[maxn],cv[maxn],anss[maxn][2],mark2[maxn];
void dfs(int a,int num)
{
	int ans=0;
	mark[a]=1;
	mark2[a]=num;
	cv[a]=h[a];
	for(int i=0;i<v[a].size();i++)
	{
		int child=v[a][i];
		if(par[a][0]==child)
			ans++;
		else if(!mark[child])
		{
			par[child][0]=a;
			for(int j=1;j<21;j++)
				par[child][j]=par[par[child][j-1]][j-1];
			h[child]=h[a]+1;
			dfs(child,num);
			cv[a]=min(cv[a],cv[child]);
		}else 
			cv[a]=min(cv[a],h[child]);
		if(ans>1 && par[a][0]==child)
			cv[a]=min(cv[a],h[child]);
	}
}			

int lca(int a,int b)
{
	if(h[a]<h[b])
		swap(a,b);
	int d=h[a]-h[b];
	for(int i=0;i<21;i++)
		if(1<<i & d)
			a=par[a][i];
	//cout<<a<<" "<<b<<endl;
	if(a==b)
		return a;
	for(int i=20;i>=0;i--)
		if(par[a][i]!=par[b][i])
		{
			a=par[a][i];
			b=par[b][i];
		}
	return par[a][0];
}
void ps(int a,int b)
{
	mark[a]=1;
	for(int i=0;i<v[a].size();i++)
	{
		int child=v[a][i];
		if(!mark[child])
		{
			ps(child,b);
			cnt[a][b]+=cnt[child][b];
		}
	}
}
				
int main()
{
	int a,b;
	cin>>n>>m>>q;
	for(int i=0;i<m;i++)
	{
		cin>>a>>b;
		v[a].push_back(b);
		v[b].push_back(a);
	}
	h[1]=1;
	for(int i=1;i<=n;i++)
		if(!mark[i])
			dfs(i,i);
	for(int i=0;i<q;i++)
	{
		cin>>a>>b;
		if(mark2[a]!=mark2[b])
		{
			cout<<"No";
			return 0;
		}
		int p=lca(a,b);
	//	cout<<p<<" ";
		cnt[a][0]++;
		cnt[p][0]--;
		cnt[b][1]++;
		cnt[p][1]--;
	}
	for(int i=1;i<=n;i++)
		mark[i]=0;
	for(int i=1;i<=n;i++)
                if(!mark[i])
			ps(i,0);
	for(int i=1;i<=n;i++)
		mark[i]=0;
	for(int i=1;i<=n;i++)
                if(!mark[i])
			ps(i,1);
	for(int i=1;i<=n;i++)
		if(cnt[i][0]>0 && cnt[i][1]>0 && h[i]<=cv[i])
		{
			cout<<"No";
			return 0;
		}
	cout<<"Yes";	
}
