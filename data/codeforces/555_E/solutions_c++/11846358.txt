#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <vector>
using namespace std;
const int N=4E5+5;
struct map{
    int x,y,p;
}a[N*2];
int fir[N],next[N*2],k;
int n,m,q,x,y,fa[N][21],f[N],F[N],sum,pa[N],lca,p[N];
int S[N],tot,lowlink[N],dep[N],t;
bool o[N];
vector <int> G[N];

void add(int x,int y,int p)
{
    k++; a[k].x=x; a[k].y=y; a[k].p=p; next[k]=fir[x]; fir[x]=k;
    swap(x,y);
    k++; a[k].x=x; a[k].y=y; a[k].p=p; next[k]=fir[x]; fir[x]=k;
}

int dfs(int x)
{
    S[++tot]=x;
    lowlink[x]=dep[x]=++t;
    for (int i=fir[x];i;i=next[i]) if (!o[a[i].p])
    {
        o[a[i].p]=1;
        if (!dep[y=a[i].y]) lowlink[x]=min(lowlink[x],dfs(y)); else if (!F[y]) lowlink[x]=min(lowlink[x],dep[y]);
    }
    if (lowlink[x]==dep[x])
    {
        sum++;
        for (;S[tot+1]!=x;tot--) F[S[tot]]=sum;
    }
    return lowlink[x];
}

void find(int x)
{
    for (int i=0;i<G[x].size();i++) if (fa[x][0]!=(y=G[x][i])&&x!=y)
    {
        pa[y]=fa[y][0]=x; dep[y]=dep[x]+1; 
        for (int j=1;(1<<j)<=dep[y];j++) fa[y][j]=fa[fa[y][j-1]][j-1];
        find(G[x][i]);
    }
}

int LCA(int x,int y)
{
    if (dep[x]<dep[y]) swap(x,y);
    for (int i=20;i>=0;i--) if (dep[x]-(1<<i)>=dep[y]) x=fa[x][i];
    if (x==y) return x;
    for (int i=20;i>=0;i--) if (fa[x][i]!=fa[y][i]) x=fa[x][i],y=fa[y][i];
    return fa[x][0];
}

bool work(int x,int k)
{
    for (int v=pa[x];dep[x]>dep[lca];v=pa[x])
    {
        if (p[x]==(k^1)) return 0;
        pa[x]=lca; p[x]=k; x=v;
    }
    return 1;
}

int main()
{
    cin>>n>>m>>q;
    for (int i=1;i<=m;i++)
    {
        scanf("%d%d",&x,&y);
        add(x,y,i);
    }
    for (int i=1;i<=n;i++) if (!dep[i]) dfs(i);
    for (int i=1;i<=n;i++) 
        for (int j=fir[i];j;j=next[j]) G[F[i]].push_back(F[a[j].y]);
    memset(dep,0,sizeof(dep));
    for (int i=1;i<=n;i++) if (!fa[i][0]) find(i);
    for (int i=1;i<=q;i++)
    {
        scanf("%d%d",&x,&y); 
        x=F[x]; y=F[y]; lca=LCA(x,y);
        if (!lca||!work(x,2)||!work(y,3)) { cout<<"No"; exit(0); }
    }
    cout<<"Yes";
}










