#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <stdio.h>
using namespace std;
const int n=200000,u=4;
class sp{
  public:
  int q,e;
  sp *w;
  sp(int q1,sp *w1,int e1){
   q=q1;w=w1;e=e1;}
};
sp *a[n];
int c1,v1,i=0,s[n],s1[n],d[n][18],f[n],f1[n],g[n][2],h1[n],h2[n];
bool ans=1;
int k(int w){
  if(f[w]!=w)
   f[w]=k(f[w]);
  return f[w];
}
int k1(int w){
  if(f1[w]!=w)
   f1[w]=k1(f1[w]);
  return f1[w];
}
void m(int q,int w,int t){
  s[q]=t;
  int e=q;
  for(sp *c=a[q];c;c=c->w)
   if(c->e!=w){
    if(s[c->q]==-1)
     m(c->q,c->e,t+1);
    if((s[k(c->q)]>0)&&(s[e]>s[k(c->q)]))
     e=k(c->q);}
  f[q]=e;
  s[q]=-2;
}
void l(int q,int w){
  sp *c;
  s[q]=i;
  i++;
  int e,r;
  d[q][0]=w;
  e=w;
  for(r=1;r<u;r++){
   if(e<0)
    break;
   d[q][r]=e=d[e][r-1];}
  for(;r<u;r++)
   d[q][r]=-2;
  for(c=a[q];c;c=c->w)
   if(c->q!=w)
    l(c->q,q);
  s1[q]=i;
}
void bpnd(int w,int y){
  int e,r;
  for(e=u-1;e>=0;e--){
   r=d[w][e];
   if((r>=0)&&(!((s[r]<=c1)&&(v1<s1[r])) )){
    g[w][y]=max(g[w][y],1<<e);
    w=r;}}
  if(!((s[w]<=c1)&&(v1<s1[w])))
   g[w][y]=max(g[w][y],1);
}
void l1(int q,int w){
  sp *c;
  int e;
  for(c=a[q];c;c=c->w)
   if(c->q!=w){
    l1(c->q,q);
    for(e=0;e<2;e++)
     g[q][e]=max(g[q][e],g[c->q][e]-1);}
  if(min(g[q][0],g[q][1])>0)
   ans=0;
}
int main(){
  //freopen("input.txt","r",stdin);
  //freopen("output.txt","w",stdout);
  int q,w,e,r,t,o;
  scanf("%d%d%d",&q,&w,&o);
  for(e=0;e<q;e++){
   a[e]=0;
   f1[e]=f[e]=e;
   s[e]=-1;
   g[e][0]=g[e][1]=0;}
  for(e=0;e<w;e++){
   scanf("%d%d",&h1[e],&h2[e]);
   h1[e]--;
   h2[e]--;
   a[h1[e]]=new sp(h2[e],a[h1[e]],e);
   a[h2[e]]=new sp(h1[e],a[h2[e]],e);}
  for(e=0;e<q;e++){
   if(s[e]==-1)
    m(e,-1,1);
   a[e]=0;}
  for(e=0;e<w;e++){
   h1[e]=k(h1[e]);
   h2[e]=k(h2[e]);
   if(h1[e]!=h2[e]){
    f1[k1(h1[e])]=k1(h2[e]);
    a[h1[e]]=new sp(h2[e],a[h1[e]],e);
    a[h2[e]]=new sp(h1[e],a[h2[e]],e);}}
  for(w=0;w<q;w++)
   if(s[w]==-2){
    i=0;
    l(w,-2);}
  for(;o;o--){
   scanf("%d%d",&e,&r);
   e=k(e-1);
   r=k(r-1);
   if(e==r)
    continue;
   if(k1(e)!=k1(r)){
    printf("No");
    return 0;}
   c1=s[e];
   v1=s[r];
   if(c1>v1){
    w=c1;c1=v1;v1=w;}
   bpnd(e,0);
   bpnd(r,1);}
  for(w=0;w<q;w++)
   if((f[w]==w)&&(d[w][0]<0))
    l1(w,-1);
  if(ans)
   printf("Yes");
  else
   printf("No");
  return 0;}
