#include<cstdio>
#include<cstring>
int n,m,q;
int head[200001],end[400001],next[400001],ok[400001],tp=-1;
int head2[200001],end2[400001],next2[400001],tp2=0;
int s[200001],d[200001];
int dfn[200001],low[200001],vis[200001],tim=0;
int st[200001],stp=0;
int dad[200001],gs=0,ddd[200001],tot=0;
int dd[200001],son[200001],dep[200001],siz[200001],top[200001];
int isa[200001],isb[200001],isc[200001],a[200001],b[200001],c[200001];
void tarjan(int p)
{
	int i,j,k;
	dfn[p]=low[p]=++tim;
	vis[p]=1;st[++stp]=p;
	for(i=head[p];i>=0;i=next[i])if(!ok[i]&&!ok[i^1])
	{
		ok[i]=1;
		if(!vis[end[i]])tarjan(end[i]);
		if(low[end[i]]<low[p])low[p]=low[end[i]];
	}
	if(low[p]==dfn[p])
	{
		gs++;
		while(st[stp+1]!=p)dad[st[stp--]]=gs;
	}
}
void dfs(int p)
{
	int i,j,k;
	int mx=0;
	siz[p]=1;vis[p]=1;ddd[p]=tot;
	for(i=head2[p];i;i=next2[i])if(end2[i]!=dd[p])
	{
		dd[end2[i]]=p;dep[end2[i]]=dep[p]+1;
		dfs(end2[i]);
		siz[p]+=siz[end2[i]];
		if(siz[end2[i]]>mx){mx=siz[end2[i]];son[p]=end2[i];}
	}
}
void dfs2(int p,int pp)
{
	int i,j,k;
	top[p]=pp;
	if(son[p]!=0)dfs2(son[p],pp);
	for(i=head2[p];i;i=next2[i])if(end2[i]!=son[p]&&end2[i]!=dd[p])dfs2(end2[i],end2[i]);
}
void dfs3(int p)
{
	int i,j,k;
	vis[p]=1;
	a[p]=isa[p];b[p]=isb[p];c[p]=isc[p];
	for(i=head2[p];i;i=next2[i])if(end2[i]!=dd[p])
	{
		dfs3(end2[i]);
		a[p]+=a[end2[i]];b[p]+=b[end2[i]];c[p]+=c[end2[i]];
	}
}
		
int main()
{
	int i,j,k;
	//freopen("555e.in","r",stdin);
	scanf("%d%d%d",&n,&m,&q);
	memset(head,-1,sizeof(head));
	for(i=1;i<=m;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		next[++tp]=head[x];head[x]=tp;end[tp]=y;
		next[++tp]=head[y];head[y]=tp;end[tp]=x;
	}
	for(i=1;i<=n;i++)if(!vis[i])tarjan(i);
	for(i=1;i<=n;i++)
	for(j=head[i];j>=0;j=next[j])if(ok[j]&&dad[end[j]]!=dad[i])
	{
		next2[++tp2]=head2[dad[i]];head2[dad[i]]=tp2;end2[tp2]=dad[end[j]];
		next2[++tp2]=head2[dad[end[j]]];head2[dad[end[j]]]=tp2;end2[tp2]=dad[i];		
	}
	memset(vis,0,sizeof(vis));
	for(i=1;i<=gs;i++)if(!vis[i]){tot++;dfs(i);dfs2(i,i);}
	//puts("ok");
	for(i=1;i<=q;i++)
	{
		scanf("%d%d",&s[i],&d[i]);s[i]=dad[s[i]];d[i]=dad[d[i]];
		if(ddd[s[i]]!=ddd[d[i]]){puts("No");return 0;}
		if(s[i]==d[i])continue;
		int x=s[i],y=d[i];
		while(top[x]!=top[y])
		{
			if(dep[top[x]]>dep[top[y]])x=dd[top[x]];else y=dd[top[y]];
		}
		if(dep[x]>dep[y])x=y;
		isa[s[i]]++;isb[d[i]]++;isc[x]++;
		//printf("i=%d\n",i);
	}
	memset(vis,0,sizeof(vis));
	for(i=1;i<=gs;i++)if(!vis[i])dfs3(i);
	for(i=1;i<=gs;i++)if(a[i]>c[i]&&b[i]>c[i])break;
	if(i<=gs)puts("No");else puts("Yes");
	return 0;
}		
