#include<algorithm>
#include<iostream>
#include<cstdlib>
#include<cstring>
#include<cstdio>
#include<vector>
#include<cmath>
#include<ctime>
#include<queue>
#include<set>
#include<map>
#define N 500005
using namespace std;
int fa[N],dad[N][20],direction[N],deep[N];
int head[N],nxt[N],lst[N],X[N],Y[N],q[N],bl[N],st[N];
int n,m,Q,tot,cnt,T;
int find(int x)
{
	int top=0;
	while(fa[x]!=x) st[++top]=x,x=fa[x];
	while(top) fa[st[top--]]=x;
	return x;
}
int findbl(int x)
{
	int top=0;
	while(bl[x]!=x) st[++top]=x,x=bl[x];
	while(top) bl[st[top--]]=x;
	return x;
}
void insert(int x,int y)
{
	lst[++tot]=y; nxt[tot]=head[x]; head[x]=tot;
	lst[++tot]=x; nxt[tot]=head[y]; head[y]=tot;
}
void bfs(int s)
{
	q[1]=s;
	for(int l=1,r=2;l<r;l++)
	{
		int x=q[l];
		for(int i=head[x];i;i=nxt[i])
		    if(lst[i]!=dad[x][0])
		         deep[lst[i]]=deep[x]+1,dad[q[r++]=lst[i]][0]=x;
	}
}
void merge(int x,int y)
{
	x=find(x),y=find(y);
	while(x!=y)
	{
		if(deep[x]<deep[y])swap(x,y);
		int f=find(dad[x][0]);
		fa[x]=f;
		x=f;
	}
}
int Lca(int x,int y)
{
	if(deep[x]<deep[y])swap(x,y);
	int t=deep[x]-deep[y];
	for(int i=0;i<=18;i++)
	    if((1<<i)&t)x=dad[x][i];
	for(int i=18;i>=0;i--)
	    if(dad[x][i]!=dad[y][i])
	         x=dad[x][i],y=dad[y][i];
	return x==y?x:dad[x][0];
}
int belong(int x)
{
	for(int i=18;i>=0;i--)
	    if(dad[x][i]) x=dad[x][i];
	return x;
}
bool jud(int x,int F,int t)
{
	int lx=0; x=find(x);
	
	while(deep[x]>deep[F])
	{
		if(!direction[x])
		    direction[x]=t;
		else if(direction[x]!=t)return 0;
		
		x=findbl(x);
		if(lx) bl[lx]=x; 
		lx=x;
		x=find(dad[x][0]);
	}
	return 1;
}

int main()
{
	//freopen("51nod_Problem_1470_Test_20_In.txt","r",stdin);
	scanf("%d%d%d",&n,&m,&Q);
	for(int i=1;i<=n;i++)fa[i]=i;
	for(int i=1;i<=m;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		if(find(x)!=find(y))
			insert(x,y),fa[find(x)]=find(y);
		else X[++cnt]=x,Y[cnt]=y;
	}
	for(int i=1;i<=n;i++) if(!deep[i]) bfs(i);
	for(int i=1;i<=18;i++)
	    for(int j=1;j<=n;j++)
	        dad[j][i]=dad[dad[j][i-1]][i-1];
	
	for(int i=1;i<=n;i++)
	    fa[i]=bl[i]=i;
	for(int i=1;i<=cnt;i++)
	    merge(X[i],Y[i]);
	while(Q--)
	{
		int s,t,lca;
		scanf("%d%d",&s,&t);
		lca=Lca(s,t);
		if(belong(s)!=belong(t)||!jud(s,lca,1)||!jud(t,lca,2))
		{
			puts("No");
			return 0;
		}
	}
	puts("Yes");
	return 0;
}
		
		