#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())

int dx[]={1,0,-1,0};
int dy[]={0,1,0,-1};
int main(){
#define dis(a,b,c,d) (abs((a)-(c))+abs((b)-(d)))
	li n,m,k,sx,sy,tx,ty;
	cin>>n>>m>>k;
	vector<string> mp(n);
	rep(i,n) cin>>mp[i];
	rep(i,n)rep(j,m)if(mp[i][j]=='S') sx=i,sy=j;
	rep(i,n)rep(j,m)if(mp[i][j]=='T') tx=i,ty=j;
#define P pair<int,pair<pair<string,int>,pair<int,int> > >
	priority_queue< P , vector< P > , greater < P > > q;
	q.push(make_pair(dis(sx,sy,tx,ty),make_pair(make_pair("",0),make_pair(sx,sy))));
	set<pair<int,pair<int,int> > > s;
	while(sz(q)){
		P pp=q.top();
		pair<pair<string,int>,pair<int,int> > p = pp.second;
		q.pop();
		string str=p.first.first;
		int mask=p.first.second;
		int x=p.second.first;
		int y=p.second.second;
		if(s.find(make_pair(mask,make_pair(x,y)))!=s.end()) continue;
		s.insert(make_pair(mask,make_pair(x,y)));
//cout<<x<<","<<y<<"="<<str<<endl;
		rep(i,4){
			int xx=x+dx[i];
			int yy=y+dy[i];
			if(xx<0 || n<=xx || yy<0 || m<=yy) continue;
			if(mp[xx][yy]=='T'){
				cout<<str<<endl;
				return 0;
			}
			if('a'<= mp[xx][yy] && mp[xx][yy]<='z'){
				int next=(1<<(mp[xx][yy]-'a'))|mask;
				if(k<__builtin_popcount(next)) continue;
				q.push(make_pair(sz(str)+1+dis(xx,yy,tx,ty),make_pair(make_pair(str+string(1,mp[xx][yy]),next),make_pair(xx,yy))));
			}
		}
	}
	cout<<"-1"<<endl;
}
