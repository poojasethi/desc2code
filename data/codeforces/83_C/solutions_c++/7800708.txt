#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 60
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
const int a1[4]={0,0,1,-1},a2[4]={1,-1,0,0};
struct ww {
	int x,y;
	inline bool operator == (const ww &A) {
		return x==A.x&&y==A.y;
	}
} S,T,g[N*N];
struct w {
	int a[15];
	int len;
	inline bool operator < (const w &A) {
		if (len<A.len) return 1;
		if (len>A.len) return 0;
		int i;
		for (i=len/15;i>=0;i--) {
			if (a[i]<A.a[i]) return 1;
			if (a[i]>A.a[i]) return 0;
		}
		return 1;
	}
} gg[N][N];
struct Ans {
	int len;
	char p[100];
	inline bool operator < (const Ans &A) {
		if (len<A.len) return 1;
		if (len>A.len) return 0;
		int i;
		For(i,1,len) {
			if (p[i]<A.p[i]) return 1;
			if (p[i]>A.p[i]) return 0;
		}
		return 1;
	}
	inline void print() {
		if (len==100) printf("-1\n");
		else {
			int i;
			For(i,1,len) printf("%c",p[i]);
			printf("\n");
		}
	}
} an;
int i,j,k,n,m,K;
int id[N],a[N];
char p[N][N],re[100];
inline void into(w &A,int B) {
	int a1=A.len/15,a2=A.len%15;
	A.len++;
	A.a[a1]|=B<<(2*a2);
}
inline void work() {
	int i,j,l,r;
	For(i,1,n)For(j,1,m) gg[i][j].len=1000;
	g[l=r=1]=T;
	gg[T.x][T.y].len=0;
	For(i,0,14) gg[T.x][T.y].a[i]=0;
	for (;l<=r;l++) {
		ww A=g[l];
		if (A==S) break;
		For(i,0,3) {
			int x=A.x+a1[i],y=A.y+a2[i];
			ww asd={x,y};
			if (x&&y&&x<=n&&y<=m) {
				int B=id[p[x][y]-'a'+1];
				if (!(asd==S)&&!B) continue;
				w C=gg[A.x][A.y];
				if (!(asd==S)) into(C,B-1);
				if (C<gg[x][y]) {
					if (gg[x][y].len==1000) g[++r]=asd;
					gg[x][y]=C;
				}
			}
		}
	}
	if (l>r) return;
	w res=gg[S.x][S.y];
	if (res.len>an.len) return;
	Ans ans={};
	for (i=res.len-1;i>=0;i--) {
		int A=i/15,B=i%15;
		int C=(res.a[A]>>(2*B))&3;
		ans.p[++ans.len]='a'+a[C+1]-1;
	}
	if (ans<an) an=ans;
}
void dfs(int x,int y) {
	if (x>K) {
		work();
		return;
	}
	int i;
	For(i,y+1,26) {
		id[i]=x;
		a[x]=i;
		dfs(x+1,i);
		id[i]=0;
	}
}
int main() {
	scanf("%d%d%d",&n,&m,&K);
	For(i,1,n) scanf("%s",p[i]+1);
	For(i,1,n)For(j,1,m) {
		if (p[i][j]=='S') S=(ww){i,j};
		if (p[i][j]=='T') T=(ww){i,j};
	}
	an.len=100;
	dfs(1,0);
	an.print();
	return 0;
}
