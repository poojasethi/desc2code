#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <set>
#include <map>

using namespace std;

int n, m, k, res, sx, sy, col;
string ans, v;
char s[99][99];

int w;

int d[99][99];
int used[99][99], prev[99][99];
int qx[99999], qy[99999];

int cvet, dep;
int was[99][99];

int fx[] = {1, 0, -1, 0}, fy[] = {0, -1, 0, 1};

void out (int x, int y, int chng)
{
	if (s[x][y]!='T')
	{
		if (s[x][y] == 'S') return;
		if (s[x][y]<ans[dep-1])
			chng = 1;
		cvet += chng;
		if (s[x][y]>ans[dep-1]&&!chng) return;
		ans[dep-1] = s[x][y];
	}
	if (was[x][y] == cvet) return;
	was[x][y] = cvet;
	dep++;

	for (int i = 0; i < 4; i++)
	{
		int xx = x+fx[i], yy = y+fy[i];

		if (xx<0||yy<0||xx>=n||yy>=m) continue;
		if (used[xx][yy] != col) continue;
		if (d[xx][yy]+1 != d[x][y]) continue;

		out (xx, yy, chng);
		chng = 0;
	}

	dep--;
}

void bfs ()
{
	int l = 0, r = 1, xx, yy;
	qx[0] = sx; qy[0] = sy;
	used[sx][sy] = ++col;

	for (; l < r; l++)
		for (int j = 0; j < 4; j++)
		{
		 	xx = qx[l]+fx[j]; yy = qy[l]+fy[j];
		 	if (xx<0 || yy<0 || xx>=n || yy>=m || used[xx][yy] == col) continue;
		 	if (s[xx][yy] == 'T')
		 	{
		 		d[xx][yy] = d[qx[l]][qy[l]]+1;
		 		if (res==-1 || res > d[xx][yy])
		 		{
					ans = "";
					res = d[xx][yy];
					for (int i = 0; i < res-1; i++)
						ans += 'z';
					cvet++;
					out (xx, yy, 1);
		 		}
		 		else
		 		if (res == d[xx][yy])
		 		{
		 			cvet++;
			 		out (xx, yy, 0);
			 	}

				return;
		 	}
		 	if (!(w&(1<<(s[xx][yy]-'a')))) continue;
		 	used[xx][yy] = col;
		 	prev[xx][yy] = j;
			d[xx][yy] = d[qx[l]][qy[l]]+1;
			qx[r] = xx; qy[r++] = yy;
		}
}

void gen (int u, int k)
{
	if (!k) bfs ();
	else
	if (u < 26)
	{
	 	w ^= 1<<u;
	 	gen (u+1, k-1);
	 	w ^= 1<<u;
	 	gen (u+1, k);
	}
}

int main ()
{
	scanf ("%d%d%d", &n, &m, &k);

	for (int i = 0; i < n; i++)
		scanf ("%s", s[i]);

	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			if (s[i][j] == 'S')
				sx = i,
				sy = j;

	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			if (s[i][j] == 'T')
			 	s[i][j] = 'S';
	s[sx][sy] = 'T';

	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			if (s[i][j] == 'S')
				sx = i,
				sy = j;

	res = -1;
	gen (0, k);

	if (res == -1)
		puts ("-1");
	else
	 	cout << ans << endl;

	return 0;
}
