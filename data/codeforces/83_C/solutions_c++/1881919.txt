#include <cstdio>
#include <iostream>
#include <cstdlib>
#include <string>
#include <queue>
#include <set>

using namespace std;

struct node
{
  int x,y,g,h,t;
  string p;
  bool operator<(const node& obj) const
  {
    if(g+h!=obj.g+obj.h)
      return g+h>obj.g+obj.h;
    return p>obj.p;
  }
};

typedef pair<pair<int,int>,int> state;

const int dx[4]={-1,0,1,0},dy[4]={0,-1,0,1};
priority_queue<node> q;
set<state> v;
char a[51][55];

int main(void)
{
  int n,m,s,sx,sy,tx,ty;
  scanf("%d %d %d",&n,&m,&s);
  for(int i=1;i<=n;++i)
  {
    scanf("%s",a[i]+1);
    for(int j=1;j<=m;++j)
    {
      if(a[i][j]=='S')
      {
        sx=i;
        sy=j;
      }
      else if(a[i][j]=='T')
      {
        tx=i;
        ty=j;
      }
    }
  }
  node b;
  b.x=sx;
  b.y=sy;
  b.g=0;
  b.h=abs(sx-tx)+abs(sy-ty);
  b.t=0;
  b.p="";
  q.push(b);
  while(!q.empty())
  {
    b=q.top();
    if(b.h==0)
      break;
    q.pop();
    state temp=make_pair(make_pair(b.x,b.y),b.t);
    if(v.count(temp)>0)
      continue;
    v.insert(temp);
    for(int k=0;k<4;++k)
    {
      int i=b.x+dx[k],j=b.y+dy[k];
      if((i<1)||(i>n)||(j<1)||(j>m)||(a[i][j]=='S'))
        continue;
      node e=b;
      e.x+=dx[k];
      e.y+=dy[k];
      ++e.g;
      e.h=abs(i-tx)+abs(j-ty);
      if(a[i][j]=='T')
      {
        q.push(e);
        continue;
      }
      e.t|=(1<<(a[i][j]-'a'));
      int temp=e.t,c=0;
      while(temp>0)
      {
        c+=temp%2;
        temp/=2;
      }
      if(c>s)
        continue;
      e.p+=a[i][j];
      q.push(e);
    }
  }
  if(!q.empty())
    cout<<q.top().p<<endl;
  else
    printf("-1\n");
  return 0;
}