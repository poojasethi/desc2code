#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
using namespace std;
const int maxn=200010;
int tail,xx,num,now,kk,n,b,l,i,o,j,kind[maxn],an[maxn],biao[maxn],le[maxn],od[maxn],h[maxn],tmp[maxn],sa[maxn],rank[maxn],tax[maxn],t[maxn];
int st[maxn][18];
char sw[maxn];
long long anan[maxn];
void sor(int u)
{
	int i;
	for(i=1;i<=l;i++) tax[i]=0;
	for(i=1;i<=l;i++) tax[rank[sa[i]+u]]++;
	for(i=1;i<=l;i++) tax[i]+=tax[i-1];
	for(i=l;i>=1;i--)
	tmp[tax[rank[sa[i]+u]]]=sa[i],tax[rank[sa[i]+u]]--;
	for(i=1;i<=l;i++)
	sa[i]=tmp[i];
}
int qu(int l, int r)
{
	int o=floor(double(log(r-l+1))/double(log(2)));
	return(min(st[l][o],st[r-(1 << o)+1][o]));
}
int main()
{
	//freopen("1.in","r",stdin);
	//freopen("1.out","w",stdout);
	scanf("%d%d",&n,&kk); now=255;
	for(i=1;i<=n;i++)
	{
		cin>>sw;  
		long long ws=strlen(sw);
		for(j=1;j<=ws;j++)
		{
			l++;od[l]=sw[j-1];biao[l]=i;le[l]=j;
		}
		if (kk==1) cout<<(ws*(ws+1)/2)<<' ';
		l++;od[l]=now;now++;
	}
	if (kk==1) return 0;
	if (n==1)
	{
	cout<<0;return 0;
	}
	l--;
	for(i=1;i<=l;i++)t[od[i]]=1;
	for(i=1;i<=now;i++)t[i]+=t[i-1];
	for(i=1;i<=l;i++)rank[i]=t[od[i]];
	for(i=1;i<=l;i++)sa[i]=i;
	i=0;
	for(int orzcp=1;orzcp;)
	{
		o=1 << i;
		sor(o);
		sor(0);
		tmp[sa[1]]=1;
		for(j=2;j<=l;j++)
		{
			tmp[sa[j]]=tmp[sa[j-1]];
			if (rank[sa[j]]!=rank[sa[j-1]]||rank[sa[j]+o]!=rank[sa[j-1]+o])tmp[sa[j]]++;
		}
		for(int ii=1;ii<=l;ii++)
		rank[ii]=tmp[ii];
		if (rank[sa[l]]==l)
		break; 
		i++;	
	} 
	for(i=1;i<=l;i++)
	if (rank[i]!=l)
	{
		o=rank[i];
		b=sa[o+1];
		for(;od[i+h[o]]==od[b+h[o]];h[o]++)
		h[rank[i+1]]=max(h[o]-1,0);
	}
	for(i=1;i<l;i++) st[i][0]=h[i];
	for(i=1;i<=17;i++)
		for(j=1;j<=l-(1 << i);j++)
		{
		st[j][i]=min(st[j][i-1],st[j+(1 << (i-1))][i-1]);
		}
	num=1; kind[biao[sa[1]]]=1; xx=1e9;
	for(i=2;i<=l;i++)
	{
		if (h[i-1]<xx) xx=h[i-1];
		kind[biao[sa[i]]]++;
		if (biao[sa[i]]&&kind[biao[sa[i]]]==1)num++;
		if (num==kk) break;
	}
	tail=i;
	an[1]=xx;
	for(i=2;i<l;i++)
	{
		kind[biao[sa[i-1]]]--;
		if (biao[sa[i-1]]&&kind[biao[sa[i-1]]]==0) num--;
		for(;tail<l&&num<kk;)
		{
			tail++;
			kind[biao[sa[tail]]]++;
			if (biao[sa[tail]]&&kind[biao[sa[tail]]]==1)num++;
		}
		an[i]=max(min(an[i-1],h[i-1]),qu(i,tail-1));
	}
	for(i=1;i<=l;i++)
	{
		long long cp=an[i];
		anan[biao[sa[i]]]=cp+anan[biao[sa[i]]];
	}
	for(i=1;i<=n;i++)
	cout<<anan[i]<<' ';
}