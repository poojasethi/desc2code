#include<bits/stdc++.h>

using namespace std;

#define pii pair<int,int>
#define ll long long
#define N (int)(2e5+10)
#define mod 1000000007
#define mp make_pair
#define pb push_back
#define nd second
#define st first
#define inf mod
#define endl '\n'
#define sag (sol|1)
#define sol (root<<1)
#define bit(x,y) ((x>>y)&1)

int S[N][18],belong[N];
int i,j,k,n,m,x,y,z;
int sz[N],wh[N];
int H[N],next[N];
char str1[N];
ll ans[N];
string str,str2;
vector< pair< pii , int > > v;

void yaz(int x,int y){

	for(int i=x ; i<=y ; i++)
		cout << str.substr(wh[i],str.size()-wh[i]) << endl;
}

int lcp(int x,int y){
	int ans=0;
	if(x == y)
		return inf;
	for(int i=17 ; i>=0 ; i--)
		if(S[x][i] == S[y][i]){
			x += (1<<i);
			y += (1<<i);
			ans += (1<<i);
		}
	return ans;
}

int main(){

	cin >> n >> m;

	for(i=1 ; i<=n ; i++){
		scanf("%s",str1);
		j = str.size();
		str2 = str1;
		str += str2+'$';
		for( ; j < str.size()-1 ; j++){
			belong[j] = i;
			sz[j] = str.size()-j-1;
		}
	}

	for(i=0 ; i<str.size() ; i++)
		S[i][0] = str[i];

	for(i=1 ; i<=17 ; i++){
		v.clear();
		for(j=0 ; j<str.size() ; j++)
			v.pb(mp(mp(S[j][i-1],S[min((int)str.size(),j+(1<<i-1))][i-1]),j));

		sort(v.begin(),v.end());

		S[v[0].nd][i] = 1;

		for(j=1 ; j<v.size() ; j++)
			if(v[j].st != v[j-1].st)
				S[v[j].nd][i] = S[v[j-1].nd][i]+1;
			else
				S[v[j].nd][i] = S[v[j-1].nd][i];
	}

	for(i=0 ; i<str.size() ; i++)
		wh[S[i][17]] = i;

	int p = 0;

	j = 0;

	for(i=1 ; i<=str.size() ; i++){

		while(j<=str.size() and p < m){
			H[belong[wh[++j]]]++;
			if(H[belong[wh[j]]] == 1)
				p++;
		}

		H[belong[wh[i]]]--;

		next[i] = j;
 
		if(!H[belong[wh[i]]])
			p--;
	}

	wh[str.size()+1] = str.size();

	for(i=1 ; i<=str.size() ; i++){

		int bas = 1;
		int son = min(i,(int)str.size()-m+1);

		while(bas < son){
			int ort = bas+son>>1;
//			if(i==18)
//				cout << " --> " << bas << ' ' << next[ort-1] << endl;
			if(bas == ort)
				ort++;
			if(lcp(wh[ort],wh[i]) <= lcp(wh[i],wh[max(i,next[ort])]))
				bas = ort;
			else 
				son = ort-1;
		}

		int mx = lcp(wh[bas],wh[max(i,next[bas])]);

		if(bas != min(i,(int)str.size()-m+1))
			mx = max(mx , lcp(wh[bas+1],wh[max(i,next[bas+1])]));

		if(belong[wh[i]] == 1 and 0){
			cout << i << ' '  << bas << ' ' << next[bas] << ' ' << " --> " << mx << " VVVVVVVVVVV" << endl;
			yaz(i,i);
			yaz(bas-1,next[bas]);
			puts("\n\n\n");
		}
		ans[belong[wh[i]]] += min(mx,sz[wh[i]]);
	}

	for(i=1 ; i<=n ; i++)
		printf("%lld ",ans[i]);

	puts("");
}
