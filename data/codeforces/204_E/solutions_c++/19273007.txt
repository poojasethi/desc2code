#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
#define MAXN 200010
#define LL long long
using namespace std;
int n,k;
char ch[MAXN];
string s[MAXN>>1];
LL ans;
struct sam
{
    int a[MAXN][27],fa[MAXN],len[MAXN],vis[MAXN],c[MAXN];
    LL sum[MAXN];
    int p,q,np,nq,last,cnt;
    sam()   {last=++cnt;}
    void insert(int c)
    {
        p=last;np=last=++cnt;len[np]=len[p]+1;
        while (!a[p][c]&&p) a[p][c]=np,p=fa[p];
        if (!p) fa[np]=1;
        else
        {
            q=a[p][c];
            if (len[q]==len[p]+1)   fa[np]=q;
            else
            {
                nq=++cnt;len[nq]=len[p]+1;memcpy(a[nq],a[q],sizeof(a[q]));
                fa[nq]=fa[q];fa[q]=fa[np]=nq;
                while (a[p][c]==q)  a[p][c]=nq,p=fa[p];
            }
        }
    }
    void get_ans(int x)
    {
        if (x==1||vis[x])   return;
        vis[x]=1;   get_ans(fa[x]); sum[x]+=sum[fa[x]];
    }
}sam;
int main()
{
    scanf("%d%d",&n,&k);
    for (int i=1;i<=n;i++)
    {
        scanf("%s",ch); int l=strlen(ch);   s[i]=(string)(ch);
        for (int j=0;j<l;j++)   sam.insert(ch[j]-'a');  sam.last=1;
    }
    for (int i=1;i<=n;i++)
    {
        int l=s[i].length();int x=1,now=i;
        for (int j=0;j<l;j++)
        {
            x=sam.a[x][s[i][j]-'a'];    int t=x;
            while (t&&sam.vis[t]!=now)  sam.vis[t]=now,sam.c[t]++,t=sam.fa[t];
        }
    }
    for (int i=1;i<=sam.cnt;i++)    sam.vis[i]=0;
    for (int i=1;i<=sam.cnt;i++)    sam.sum[i]=(sam.c[i]>=k)*(sam.len[i]-sam.len[sam.fa[i]]);
    for (int i=1;i<=sam.cnt;i++)    sam.get_ans(i);
    for (int i=1;i<=n;i++)
    {
        int x=1,l=s[i].length();ans=0;
        for (int j=0;j<l;j++)   x=sam.a[x][s[i][j]-'a'],ans+=sam.sum[x];
        printf("%lld ",ans);
    }
}
		   	   	  	    			 				 	 	