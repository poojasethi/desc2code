#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <set>

using namespace std;

typedef long long LL;

#define FOR(i,l,r) for(int i=l;i<r;i++)
#define FORD(i,r,l) for(int i=r;i>=l;i--)
#define MEMSET_0(a) memset(a,0,sizeof(a))

const int MaxM = 200010;
const int MaxN = 100010;

int n,m,len;
char buf[MaxM];
int st[MaxM],Tlen[MaxN];
int sa[MaxM],rank[MaxM],height[MaxM],data[20][MaxM];
int cnt[MaxM],tmp[2][MaxM];
int leftPos[MaxM],belong[MaxM];
LL ans[MaxN];

void SA(){
	int *x=tmp[0],*y=tmp[1],n=len+1,m=MaxM;
	MEMSET_0(tmp);MEMSET_0(cnt);
	FOR(i,0,n) cnt[x[i]=st[i]]++;
	FOR(i,1,m) cnt[i]+=cnt[i-1];
	FORD(i,n-1,0) sa[--cnt[x[i]]]=i;
	for(int k=1;k<=n;k<<=1){
		int p=0;
		FOR(i,n-k,n) y[p++]=i;
		FOR(i,0,n) if(sa[i]>=k) y[p++]=sa[i]-k;
		MEMSET_0(cnt);
		FOR(i,0,n) cnt[x[y[i]]]++;
		FOR(i,1,m) cnt[i]+=cnt[i-1];
		FORD(i,n-1,0) sa[--cnt[x[y[i]]]]=y[i];
		swap(x,y);p=1;x[sa[0]]=0;
		FOR(i,1,n) x[sa[i]]=(y[sa[i]]==y[sa[i-1]] && y[sa[i]+k]==y[sa[i-1]+k]) ? p-1 : p++;
		if(p>=n) break;m=p;
	}
	FOR(i,0,n) rank[sa[i]]=i;
}
void calc_height(){
	int j;
	for(int i=0,k=0;i<len;height[rank[i++]]=k)
		for(k ? k-- : 0,j=sa[rank[i]-1];st[i+k]==st[j+k];k++);
}
void initRMQ(){
	int n=len+1;
	FOR(i,0,n) data[0][i]=height[i];
	FOR(i,1,19) FOR(j,0,n-(1<<i)+1) data[i][j]=min(data[i-1][j],data[i-1][j+(1<<i-1)]);
}
void pre_proc(){
	set<int> list;
	static int hash[MaxN];
	MEMSET_0(hash);
	FOR(i,0,len+1){
		int j=sa[i];
		if(~belong[j]){
			if(hash[belong[j]]) list.erase(hash[belong[j]]);
			list.insert(hash[belong[j]]=i);
			if(list.size()>m){
				hash[belong[sa[*(list.begin())]]]=0;
				list.erase(list.begin());
			}
			if(list.size()>=m) leftPos[i]=*(list.begin());
			else leftPos[i]=-1;
		}
	}
}

int check(int num,int len){
	int l=num,r=num;
	if(len<=0) return 1;
	FORD(i,19,0){
		if(l+1>=(1<<i) && data[i][l+1-(1<<i)]>=len) l-=1<<i;
		if(data[i][r+1]>=len) r+=1<<i;
	}
	return leftPos[r]>=l;
}

int main()
{
	scanf("%d%d",&n,&m);
	FOR(i,0,n){
		int tlen;scanf("%s",buf);
		tlen=strlen(buf);
		if(i) st[len++]=i,belong[len-1]=-1;
		FOR(j,0,tlen) st[len+j]=100000+buf[j]-'a'+1,belong[len+j]=i;
		len+=tlen;Tlen[i]=len;
	}
	belong[len]=-1;
	SA();calc_height();initRMQ();pre_proc();
	FOR(i,0,len+1) if(~belong[sa[i]]){
		int l=1,r=Tlen[belong[sa[i]]]-sa[i],T=0;
		while(l<=r){
			int mid=l+r >> 1;
			if(check(i,mid)) T=mid,l=mid+1;
			else r=mid-1;
		}
		ans[belong[sa[i]]]+=T;
	}
	FOR(i,0,n) cout << ans[i] << ' ';cout << endl;
	return 0;
}
