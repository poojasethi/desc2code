#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const int N=30;
ll a[N],s,ans;
int n,K;
ll f[N];
map<ll,ll>mp[2][30];
ll get(ll x)
{
	ll tmp=1;
	for (int i=1;i<=x;i++)
	{
		tmp*=i;
		if (tmp>s) return s+1;
	}
	return tmp;
}
void dfs(int pos,int k,ll sum)
{
	if (pos>n)
	{
		mp[pos%2][k][sum]++;
		return ;
	}
	if (k<K&&sum+f[pos]<=s) dfs(pos+2,k+1,sum+f[pos]);
	if (sum+a[pos]<=s) dfs(pos+2,k,sum+a[pos]);
	dfs(pos+2,k,sum);
}
ll solve()
{
	map<ll,ll>::iterator it1,it2;
	for (int k1=0;k1<=K;k1++)
		for (it1=mp[0][k1].begin();it1!=mp[0][k1].end();it1++)
			for (int k2=0;k1+k2<=K;k2++)
				ans+=it1->second*mp[1][k2][s-it1->first];
	return ans;
}
int main()
{
	scanf("%d%d%I64d",&n,&K,&s);
	for (int i=1;i<=n;i++) scanf("%I64d",&a[i]);
	for (int i=1;i<=n;i++) f[i]=get(a[i]);
	dfs(1,0,0);
	dfs(2,0,0);
	printf("%I64d\n",solve());
}
/*
25 25 25
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
1 1 1 1 1
*/
