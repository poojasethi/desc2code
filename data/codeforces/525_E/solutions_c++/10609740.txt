#include<map>
#include<cstdio>
#include<algorithm>
using namespace std;
long long a[26];
long long p[26];
map<long long,long long> mp1[30];
long long s;
int kt;
long long ans=0;
inline void dfs1(int d,long long sx,int lim,int k)
{
	 if(sx>s)
	      return ;
	 if(d>lim)
	 {
	      mp1[kt-k][sx]++;
	      return ;
	 }
     if(k>0&&a[d]<=18)
          dfs1(d+1,sx+p[a[d]],lim,k-1);
     dfs1(d+1,sx+a[d],lim,k);
     dfs1(d+1,sx,lim,k);
}
inline void dfs2(int d,long long sx,int lim,int k)
{
	 if(sx>s)
	      return ;
	 if(d>lim)
	 {
	 	  int i;
	 	  for(i=0;i<=k;i++)
	 	       ans+=mp1[i][s-sx];
	      return ;
	 }
     if(k>0&&a[d]<=18)
          dfs2(d+1,sx+p[a[d]],lim,k-1);
     dfs2(d+1,sx+a[d],lim,k);
     dfs2(d+1,sx,lim,k);
}
int main()
{
     int n;
     scanf("%d%d%I64d",&n,&kt,&s);
     int i,j;
     for(i=1;i<=n;i++)
          scanf("%d",&a[i]);
     p[0]=1;
     for(i=1;i<=18;i++)
          p[i]=p[i-1]*(long long)i;
     dfs1(1,0,n/2+1,kt);
     dfs2(n/2+2,0,n,kt);
     printf("%I64d\n",ans);
     return 0;
}
