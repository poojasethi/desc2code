#include<bits/stdc++.h>
using namespace std;
typedef __int64 ll;
int n,m; ll S,ans;
ll fac[20],val[30];
map<ll,ll> mp[30];

void init(){
	int i; fac[0]=1;
	for(i=1;i<=18;i++){
		fac[i]=fac[i-1]*i;
	}
}

void dfs(int cur,int x,ll S2){     // ��val[cur] ����x���� Ŀǰ��ΪS2 
	if(S2>S) return;
	if(cur==n/2){
		mp[x][S2]++; return;
	}
	dfs(cur+1,x,S2);
	dfs(cur+1,x,S2+val[cur]);
	if(val[cur]<19 && x<m) dfs(cur+1,x+1,S2+fac[val[cur]]); 
}

void dfs2(int cur,int x,ll S2){
	if(S2>S) return;
	if(cur==n){
		for(int i=0;i<=m-x;i++)
			if(mp[i].find(S-S2)!=mp[i].end())
				ans+=mp[i][S-S2];
		return;
	}
	dfs2(cur+1,x,S2);
	dfs2(cur+1,x,S2+val[cur]);
	if(val[cur]<19 && x<m) dfs2(cur+1,x+1,S2+fac[val[cur]]);
}

int main(void){
	int i,j;
	init();
	while(~scanf("%d%d%I64d",&n,&m,&S)){
		ans=0;
		for(i=0;i<=25;i++) mp[i].clear();
		for(i=0;i<n;i++) scanf("%I64d",&val[i]);
		dfs(0,0,0);
		dfs2(n/2,0,0);
		printf("%I64d\n",ans);
	}
	return 0;
}

