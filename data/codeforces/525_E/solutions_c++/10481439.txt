#include<bits/stdc++.h>
#define LL long long
using namespace std;
LL n,k,S;
LL a[30];
LL fac[20];
LL ans;
LL n1,n2;
map<LL,LL> Map[30];
void DFS1(int x,LL c,int p)
{
	if(x==n1)
	{
		if(c==S&&p<=k)ans++;
		if(c<=S)
		{
			if(p<=k)Map[p][c]++;
		}
		return;
	}
	if(c+a[x]<=S)DFS1(x+1,c+a[x],p);
	if(a[x]<=18&&c+fac[a[x]]<=S)DFS1(x+1,c+fac[a[x]],p+1);
	DFS1(x+1,c,p);
}
void DFS2(int x,LL c,int p)
{
	if(x==n)
	{
		if(c==S&&p<=k)ans++;
		if(c>0&&c<S)
		{
			for(int t=p;t<=k;t++)ans+=Map[k-t][S-c];
		}
		return;
	}
	if(c+a[x]<=S)DFS2(x+1,c+a[x],p);
	if(a[x]<=18&&c+fac[a[x]]<=S)DFS2(x+1,c+fac[a[x]],p+1);
	DFS2(x+1,c,p);
}
int main()
{
//	freopen("input.txt","r",stdin);
	fac[0]=1;
	for(int i=1;i<=18;i++)fac[i]=fac[i-1]*i;
	while(cin>>n>>k>>S)
	{
		for(int i=0;i<=k;i++)Map[i].clear();
		for(int i=0;i<n;i++)scanf("%I64d",&a[i]);
		sort(a,a+n);
		n1=(n+1)/2,n2=n-n1;
		ans=0;
		DFS1(0,0,0);
		DFS2(n1,0,0);
		printf("%I64d\n",ans);
	}
}
