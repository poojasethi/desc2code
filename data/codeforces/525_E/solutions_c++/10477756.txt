#include <bits/stdtr1c++.h>

#define clr(ar) memset(ar, 0, sizeof(ar))
#define read() freopen("lol.txt", "r", stdin)
#define dbg(x) cout << #x << " = " << x << endl

using namespace std;

int i, n, m, k;
long long s, res, factorial[19], ar[25];
std::tr1::unordered_map <long long, int> mp[27];

void backtrack(int i, int lim, int r, long long sum, bool flag){
    if (r > k || sum > s) return;

    if (i == lim){
        if (flag) mp[r][sum]++;
        else{
            for (i = 0; (i + r) <= k; i++) res += mp[i][s - sum];
        }
        return;
    }

    backtrack(i + 1, lim, r, sum, flag);
    backtrack(i + 1, lim, r, sum + ar[i], flag);
    if (ar[i] < 19) backtrack(i + 1, lim, r + 1, sum + factorial[ar[i]], flag);
}

int main(){
    factorial[0] = 1;
    for (i = 1; i < 19; i++) factorial[i] = (factorial[i - 1] * i);

    cin >> n >> k >> s;
    for (i = 0; i < n; i++) cin >> ar[i];

    res = 0, m = n >> 1;
    backtrack(0, m, 0, 0, true);
    backtrack(m, n, 0, 0, false);
    cout << res << endl;
    return 0;
}