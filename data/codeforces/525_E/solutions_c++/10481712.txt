#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <map>
using namespace std;
typedef long long LL;
map<pair<LL,int>,LL> mp;
LL jc[20];
int n,k;
LL sum,ans;
LL a[30];
void dfs1(int pos,LL dqs,int dqk)
{
	if (dqk>k) return;
	if (dqs>sum) return;
	if (pos==n/2+1)
	{
		mp[make_pair(dqs,dqk)]++;
		return;
	}
	dfs1(pos+1,dqs,dqk);
	dfs1(pos+1,dqs+a[pos],dqk);
	if (a[pos]<=18) dfs1(pos+1,dqs+jc[a[pos]],dqk+1);
}
void dfs2(int pos,LL dqs,int dqk)
{
	if (dqk>k) return;
	if (dqs>sum) return;
	if (pos==n/2)
	{
		for (int i=0;i+dqk<=k;++i)
		{
			if (mp.find(make_pair(sum-dqs,i))==mp.end()) continue;
			ans+=mp[make_pair(sum-dqs,i)];
		}
		return;
	}
	dfs2(pos-1,dqs,dqk);
	dfs2(pos-1,dqs+a[pos],dqk);
	if (a[pos]<=18) dfs2(pos-1,dqs+jc[a[pos]],dqk+1);
}
int main()
{
	mp.clear();
	jc[0]=1;
	for (int i=1;i<=18;++i) jc[i]=jc[i-1]*i;
	scanf("%d%d%I64d",&n,&k,&sum);
	for (int i=1;i<=n;++i) scanf("%I64d",&a[i]);
	dfs1(1,0,0);
	dfs2(n,0,0);
	printf("%I64d\n",ans);
	return 0;
}