#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>
#include <queue>
#include <map>
using namespace std;
//#define vector vv

int const N=2e6+5;
int const md=1e9+7;
int n,m,i,j;
int x,y,z,k,d[N],a[N],t,tp;
long long s,b[111],ans;
map <long long,int> mp[27];

void poisk(int i,int j,long long sum)
{
if (j>m || sum>s) return;
if (i > n/2) {
            mp[j][sum]++;
            return;
            }
 poisk(i+1,j,sum);
 poisk(i+1,j,sum+a[i]);
 if (a[i]<20) poisk(i+1,j+1,sum+b[a[i]]);
}

void poisk_1(int i,int j,long long sum)
{
if (j>m || sum>s) return;
if (i > n) {
            for (z=0;z+j<=m;z++)
               if (mp[z].find(s-sum)!=mp[z].end() ) ans+=mp[z][s-sum];
            return;
            }


 poisk_1(i+1,j,sum);
 poisk_1(i+1,j,sum+a[i]);
 if (a[i]<20) poisk_1(i+1,j+1,sum+b[a[i]]);
}


int main()
{
 //ios_base::sync_with_stdio(0);
 string st;
 cin>>n>>m>>s;
 b[0]=1;
 for (k=1;k<20;k++)
    b[k]=b[k-1]*k;

for (i=1;i<=n;i++)
   cin>>a[i];
poisk(1,0,0);
poisk_1(n/2+1,0,0);
cout<<ans;

}

