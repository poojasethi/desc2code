#include<bits/stdc++.h>
using namespace std;
typedef long long LL;

const int maxn = 25 + 10;

map<LL, int> h[maxn];
LL f[maxn];
LL S, cnt;
int a[maxn];
int n, K, lim;

void dfs(int cur, int k, LL s) {
    if(s > S || k > K) return ;
    if(cur == lim) {
        h[k][s]++;
        return ;
    }
    dfs(cur + 1, k, s);
    dfs(cur + 1, k, s + a[cur]);
    if(a[cur] < 19) dfs(cur + 1, k + 1, s + f[a[cur]]);
}

void DFS(int cur, int k, LL s) {
    if(s > S || k > K) return ;
    if(cur == lim) {
        for(int i = 0; i + k <= K; i++)
            if(h[i].count(S - s)) cnt += h[i][S - s];
        return ;
    }
    DFS(cur + 1, k, s);
    DFS(cur + 1, k, s + a[cur]);
    if(a[cur] < 19) DFS(cur + 1, k + 1, s + f[a[cur]]);
}

int main() {
    cin >> n >> K >> S;
    f[1] = 1;
    for(int i = 2; i < 19; i++) f[i] = f[i - 1] * i;
    for(int i = 0; i < n; i++) cin >> a[i];
    lim = n / 2;
    dfs(0, 0, 0);
    lim = n;
    DFS(n / 2, 0, 0); // 注意传参是DFS(n / 2, 0, 0) 而不是 DFS(n / 2 + 1, 0, 0)
    cout << cnt << endl;
    return 0;
}
