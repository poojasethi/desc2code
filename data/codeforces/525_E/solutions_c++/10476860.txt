#include <cstdio>
#include <map>

typedef long long ll;

const int N = 26, F = 18;

int a[N];
ll fact[F + 9];
int n, k, i, md;
ll s, sum;
std::map<ll, int> w[N];

void go(int t, ll c, int k)
{
	if (t == md + 1)
	{
		for (int i = k; i < N; i++)
			sum += w[i][c];
	}
	if (t <= md && c <= s)
	{
		go(t + 1, c, k);
		go(t + 1, c + a[t], k);
		if (a[t] <= F)
			go(t + 1, c + fact[a[t]], k + 1);
	}
}

void goinv(int t, ll c, int k)
{
	if (t == md && k >= 0)
		++w[k][c];
	if (t > md && c >= 0)
	{
		goinv(t - 1, c, k);
		goinv(t - 1, c - a[t], k);
		if (a[t] <= F)
			goinv(t - 1, c - fact[a[t]], k - 1);
	}	
}

int main()
{
	fact[0] = 1;
	for (i = 1; i <= F; i++)
		fact[i] = fact[i - 1] * i;

	scanf("%d%d%I64d", &n, &k, &s);
	for (i = 0; i < n; i++)
		scanf("%d", &a[i]);

	md = n / 2 - 2;
	if (md < 0)
		md = 0;

	goinv(n - 1, s, k);
	go(0, 0, 0);

	printf("%I64d\n", sum);

	return 0;
}