#include<cstdio>
#include<algorithm>
#include<map>

using namespace std;

int a[30];
long long f[30],s,ans;
int i,j,k,n,m;
map <long long ,int > g[30];

void Dfs1(int num,int x,long long sum){

  if (sum>s) return;
  if (num>n/2){
    g[x][sum]++;
    return;
  }
  Dfs1(num+1,x,sum);
  Dfs1(num+1,x,sum+a[num]);
  if (a[num]<=19 && x<k) Dfs1(num+1,x+1,sum+f[a[num]]);


}

void Dfs2(int num,int x,long long sum){

int i;

  if (sum>s) return;
  if (num>n){
    for (i=0;i<=k-x;i++)
      if (g[i].find(s-sum)!=g[i].end())
        ans+=g[i][s-sum];
    return;
  }
  Dfs2(num+1,x,sum);
  Dfs2(num+1,x,sum+a[num]);
  if (a[num]<=19 && x<k) Dfs2(num+1,x+1,sum+f[a[num]]);


}


int main(){

  scanf("%d%d%I64d",&n,&k,&s);
  for (i=1;i<=n;i++) scanf("%d",&a[i]);
  f[0]=1;
  for (i=1;i<=20;i++) f[i]=f[i-1]*i;

  ans=0;
  Dfs1(1,0,0);

  Dfs2(n/2+1,0,0);
  printf("%I64d\n",ans);
  return 0;



}
