#include <iostream>
#include <map>

using namespace std;

int a[26];
int N, K;
long long S;
long long p[20];
long long res=0;

map<long long, int> m[26];

void bf(int i, long long s, int k) {
	if (k>K || s > S)
		return;
	if (i == N/2) {
		m[k][s]++;
		return;
	}
	bf(i+1, s, k);
	bf(i+1, s+a[i], k);
	if (a[i]<20)
		bf(i+1, s+p[a[i]], k+1);
}

void bf2(int i, long long s, int k) {
	if (k>K || s>S)
		return;
	if (i==N) {
		for (int j=0; j<=K-k; ++j)
			if (m[j].count(S-s))
				res += m[j][S - s];
		return;
	}
	
	bf2(i+1, s, k);
	bf2(i+1, s+a[i], k);
	if (a[i]<20)
		bf2(i+1, s+p[a[i]], k+1);
}

int main() {
	//freopen("input.txt", "r", stdin);
	cin >> N >> K >> S;
	for (int i=0; i<N; ++i)
		cin >> a[i];
	p[0] = 1;
	for (int i=1; i<20; ++i)
		p[i]=p[i-1]*i;
	bf(0, 0, 0);
	bf2(N/2, 0, 0); 
	cout << res << endl;
	
	return 0;
}