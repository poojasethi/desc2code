#include <bits/stdc++.h>
using namespace std;
const int N = 26;
const int maxa = 18;
#define mp make_pair
typedef long long int ll;
typedef pair<ll, int> pli;
typedef vector<pli> vpli;
ll sum;
int K;
int a[N];
ll f[N]={1};
void dfs(int i, int end, ll s, int k, vpli &container){
	if(s>sum)	return;
	if(k>K)	return;
	if(i>=end){
		container.push_back(mp(s, k));
		return;
	}
	dfs(i+1, end, s, k, container);
	dfs(i+1, end, s+a[i], k, container);
	if(a[i]<=maxa)	dfs(i+1, end, s+f[a[i]], k+1, container);
}
int main()
{
	// freopen("in.txt", "r", stdin);
	for(int i=1; i<=maxa; i++)	f[i] = f[i-1] * i;
	int n;
	while(2==scanf("%d%d", &n, &K)){
		cin >> sum;
		for(int i=0; i<n; i++){
			scanf("%d", &a[i]);
		}
		vpli x;
		vpli y;
		dfs(0, n/2, 0, 0, x);
		dfs(n/2, n, 0, 0, y);
		sort(x.begin(), x.end());
		sort(y.begin(), y.end());
		ll ans = 0;
		for(int i=0, l=y.size(), r=y.size(); i<x.size(); i++){
			pli t1 = mp(sum-x[i].first, K-x[i].second);
			pli t2 = mp(sum-x[i].first, 0);
			while(r>0 && y[r-1]>t1)	r--;
			while(l>0 && y[l-1]>=t2)	l--;
			ans += r-l;
		}
		cout << ans << endl;
	}
	return 0;
}