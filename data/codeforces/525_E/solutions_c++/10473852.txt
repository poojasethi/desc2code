#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <set>
#include <map>
#include <string>
#include <cstring>
#include <vector>
using namespace std;
long long ans;
int n,k,i,mid,cnt,A[105],j;
long long S,bit[105];
struct node {int x;long long y;} t[1594324];
map <pair<int,long long>,long long>mp;
void dfs(int x,int y,long long z)
{
    if (z>S || y>k) return;
    if (x==mid+1) {t[++cnt].x=y; t[cnt].y=z;return;}
    dfs(x+1,y,z);
    dfs(x+1,y,z+A[x]);
    if (A[x]<=19) dfs(x+1,y+1,z+bit[A[x]]);
}
void DFS(int x,int y,long long z)
{
    if (z>S) return;
    if (x==n+1) {mp[make_pair(y,z)]++; return;}
    DFS(x+1,y,z);
    DFS(x+1,y,z+A[x]);
    if (A[x]<=19) DFS(x+1,y+1,z+bit[A[x]]);
}
int main()
{
    cin>>n>>k>>S;
    for (i=1; i<=n; i++) scanf("%d",&A[i]);
    bit[0]=1;
    for (i=1; i<=19; i++) bit[i]=bit[i-1]*i;
    mid=n/2;
    dfs(1,0,0);
    DFS(mid+1,0,0);
    for (i=1; i<=cnt; i++)
    {
        for (j=0; j<=k-t[i].x; j++) ans+=mp[make_pair(j,S-t[i].y)];
    }
    cout<<ans;
    return 0;
}
