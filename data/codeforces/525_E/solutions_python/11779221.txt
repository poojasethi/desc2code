from math import factorial
fac = factorial

def dfs(lst):
    sums = [{} for i in xrange(k+1)]
    sums[0][0]=1
    while len(lst)>0:
        cur = lst.pop(0)
        temp = [item.copy() for item in sums]
        for i in xrange(k+1):
            for j in temp[i]:
                if j + cur <=s:
                    if j + cur not in sums[i]:
                        sums[i][j + cur] = temp[i][j]
                    else:
                        sums[i][j + cur] += temp[i][j]
                    if cur<19 and i<k and j+fac(cur)<=s:
                        if j+fac(cur) not in sums[i+1]:
                            sums[i+1][j+fac(cur)] = temp[i][j]
                        else:
                            sums[i+1][j+fac(cur)] += temp[i][j]
    return sums


n, k, s = map(int, raw_input().split())
a = [int(item) for item in raw_input().split()]
a.sort()

first = dfs(a[:n/2])
second = dfs(a[n/2:])

count = 0
for i in xrange(k+1):
    for sum1 in first[i]:
        for kk in xrange(k-i+1):
            if s-sum1 in second[kk]:
                count += first[i][sum1]*second[kk][s-sum1]
print count