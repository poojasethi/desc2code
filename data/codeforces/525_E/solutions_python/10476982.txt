from math import factorial
from collections import defaultdict
def main():
    n, k, s = map(int, raw_input().split())
    a = map(int, raw_input().split())
    def f(b):
        res = [defaultdict(int) for _ in xrange(k + 1)]
        res[k][0] = 1
        for x in b:
            nr = [defaultdict(int) for _ in xrange(k + 1)]
            for j in xrange(k + 1):
                for y, t in res[j].viewitems():
                    if j and x <= 18 and factorial(x) + y <= s:
                        nr[j-1][factorial(x) + y] += t
                    if x + y <= s:
                        nr[j][x + y] += t
                    nr[j][y] += t
            res = nr
        return res
    def g(b):
        res = [defaultdict(int) for _ in xrange(k + 1)]
        res[k][s] = 1
        for x in b:
            nr = [defaultdict(int) for _ in xrange(k + 1)]
            for j in xrange(k + 1):
                for y, t in res[j].viewitems():
                    if j and x <= 18 and y - factorial(x) >= 0:
                        nr[j-1][y - factorial(x)] += t
                    if y - x >= 0:
                        nr[j][y - x] += t
                    nr[j][y] += t
            res = nr
        return res
    dl = f(a[:n/2])
    dr = g(a[n/2:])
    ans = 0
    for i, d in enumerate(dl):
        for x, t in d.viewitems():
            for j in xrange(k - i, k + 1):
                ans += t * dr[j][x]
    print ans
main()
