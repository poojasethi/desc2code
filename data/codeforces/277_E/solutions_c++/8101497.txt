#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#define db double
#define N 500000
#define inf (1e7)
#define eps (1e-8)
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	db x,y;
	inline ww operator - (const ww &A) {
		return (ww){x-A.x,y-A.y};
	}
	inline db com() {
		return x*x+y*y;
	}
} a[N];
int i,j,k,n,m,S,T,t,num;
int b[N],d[N],next[N],head[N],g[N*10],F[N],ff[N],pre[N];
db c[N],gg[N],an;
inline bool cc1(const ww &a,const ww &b) {
	return a.y>b.y;
}
inline db dis(int x,int y) {
	ww A=a[x]-a[y];
	return sqrt(A.com());
}
inline void add(int x,int y,int z,db len) {
	b[++t]=y,d[t]=z,c[t]=len,next[t]=head[x],head[x]=t;
	b[++t]=x,d[t]=0,c[t]=-len,next[t]=head[y],head[y]=t;
}
inline void bfs() {
	int l,r,v;
	g[l=r=1]=S; F[S]=++num; gg[S]=0;
	for (;l<=r;l++) {
		int A=g[l];
		ff[A]=0;
		for (v=head[A];v;v=next[v]) if (d[v]) {
			int B=b[v];
			if (F[B]!=num||gg[B]>gg[A]+c[v]+eps) {
				F[B]=num; pre[B]=v;
				gg[B]=gg[A]+c[v];
				if (!ff[B]) g[++r]=B,ff[B]=1;
			}
		}
	}
}
int main() {
	scanf("%d",&n);
	For(i,1,n) scanf("%lf%lf",&a[i].x,&a[i].y);
	sort(a+1,a+n+1,cc1);
	S=2*n+1,T=S+1,t=1;
	For(i,1,n) {
		add(S,i,2,0);
		For(j,i+1,n) if (a[i].y>a[j].y) add(i,j+n,1,dis(i,j));
		add(i+n,T,1,0);
	}
	int re=0;
	for (;;) {
		bfs();
		if (F[T]!=num) break;
		re++;
		an+=gg[T];
		for (i=T;i!=S;i=b[pre[i]^1]) d[pre[i]]--,d[pre[i]^1]++;
	}
	if (re+1<n) printf("-1\n");
	else printf("%.12lf\n",an);
	return 0;
}
