#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<fstream>
#include<algorithm>
#include<string>
#include<vector>
#include<map>
#include<set>
#define sqr(x) ((x)*(x))
using namespace std;
struct EDGE{
	long ne,to;
	double d;
}e[640003];
struct POINT{
	long x,y;
}p[403];
double x[803],y[803],d;
long atm[803],c[803];
bool visx[803],visy[803];
bool operator < (POINT u,POINT v){
	return u.y>v.y;
}
bool KM (long u){
	if (visx[u]) return 0;
	visx[u]=1;
	for (int i=atm[u];i!=0;i=e[i].ne){
		if (fabs(x[u]+y[e[i].to]-e[i].d)<1e-9){
			visy[e[i].to]=1;
			if (c[e[i].to]==0){
				c[e[i].to]=u;
				return 1;
			}
			else if (KM(c[e[i].to])){
				c[e[i].to]=u;
				return 1;
			}
		}
		else d=min(d,x[u]+y[e[i].to]-e[i].d);
	}
	return 0;
}
int main(){
	std::ios::sync_with_stdio(false);
	long i,j,k,m,n;
	cin >> n;
	for (i=1;i<=n;++i)
		cin >> p[i].x >> p[i].y;
	sort(p+1,p+n+1);
	for (i=1,j=2;j<=n;++i){
		if (p[i].y>p[j].y) j+=2;
		else break;
	}
	if (j<=n){
		cout << -1 << endl;
		return 0;
	}
	k=0;
	for (i=2;i<=n;++i)
		x[i]=-1000000000000.0;
	for (i=1;i<n;++i){
		for (j=i+1;p[j].y==p[i].y;++j);
		for (;j<=n;++j){
			++k;
			e[k].to=i;
			e[k].ne=atm[j];
			e[k].d=-sqrt(sqr(p[i].x-p[j].x)*1.0+sqr(p[i].y-p[j].y)*1.0);
			atm[j]=k;
			++k;
			e[k].to=i+n;
			e[k].ne=atm[j];
			e[k].d=e[k-1].d;
			atm[j]=k;
			x[j]=max(x[j],e[k].d);
		}
	}
	m=n<<1;
	for (i=2;i<=n;++i){
		do{
			memset(visx,0,sizeof(visx));
			memset(visy,0,sizeof(visy));
			d=1000000000000000.0;
			if (KM(i)) break;
			for (j=1;j<=m;++j){
				if (visx[j]) x[j]-=d;
				if (visy[j]) y[j]+=d;
			}
		}while (1);
	}
	double sum=0.0;
	for (i=1;i<=m;++i)
		sum+=x[i]+y[i];
	printf("%.16f\n",-sum);
	return 0;
}
