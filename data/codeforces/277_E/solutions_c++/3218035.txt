#include<cstdio>
#include<cstring>
#include<cmath>
using namespace std;
const int tt=888;
struct edge{
	edge *nxt;
	int des,flow;
	double cst;
	void maker(edge *&a,int b,int c,double d){
		nxt=a,des=b,flow=c,cst=d;
		a=this;
	}
} w[400000],*sta[tt],*tot,*lst[tt];
int x[tt],y[tt],*l,*r,que[400000];
double dis[tt];
void buildedge(int a,int b,int c,double d){
	tot++->maker(sta[a],b,c,d);
	tot++->maker(sta[b],a,0,-d);
}
int sqr(int a){
	return a*a;
}
int main(){
//	freopen("e.in","r",stdin);
//	freopen("e.out","w",stdout);
	int n,i,j,res;
	double ans;
	scanf("%d",&n);
	for (i=0;i<=2*n+1;i++) sta[i]=NULL;
	for (tot=w,i=1;i<=n;i++){
		scanf("%d%d",x+i,y+i);
		for (j=1;j<i;j++){
			if (y[j]>y[i]) buildedge(j,i+n,1,sqrt(sqr(x[i]-x[j])+sqr(y[i]-y[j])));
			if (y[j]<y[i]) buildedge(i,j+n,1,sqrt(sqr(x[i]-x[j])+sqr(y[i]-y[j])));
		}
		buildedge(0,i,2,0);
		buildedge(i+n,2*n+1,1,0);
	}
	for (ans=0,res=0;;){
		for (i=0;i<=2*n+1;i++) dis[i]=1e10,lst[i]=NULL;
		for (dis[*(l=r=que)=0]=0;l<=r;l++) for (edge *e=sta[*l];e;e=e->nxt)
			if (e->flow && dis[*l]+e->cst<dis[e->des]){
				dis[*(++r)=e->des]=dis[*l]+e->cst;
				lst[e->des]=e;
			}
		if (!lst[2*n+1]) break;
		ans+=dis[2*n+1],res++;
		for (i=2*n+1;i;i=w[lst[i]-w^1].des) lst[i]->flow--,w[lst[i]-w^1].flow++;
	}
	if (res==n-1) printf("%.10lf\n",ans); else printf("-1\n");
	return 0;
}
