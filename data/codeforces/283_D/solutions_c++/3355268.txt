#include<cstdio>
#include<iostream>
using namespace std;
const int N = 5000 + 2;
int odd[N], dp[N];
long long a[N];
bool ok(int x, int y)
{
    return a[x] % a[y] ? false : (odd[y] < y - x || odd[y] == y - x + odd[x]);
}
int main()
{
    ios::sync_with_stdio(false);
    int n;
    cin >> n;
    for(int i = 1; i <= n; ++i)
    {
        cin >> a[i];
        while(~a[i] & 1) a[i] >>= 1, ++odd[i];
    }
    int res = n;
    for(int i = 1; i <= n; ++i)
    {
        dp[i] = i - 1;
        for(int j = 1; j < i; ++j)
            if(ok(j, i)) dp[i] = min(dp[i], dp[j] + i - j - 1);
        res = min(res, n - i + dp[i]);
    }
    cout << res << endl;
    return 0;
}
