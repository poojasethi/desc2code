from sys import stdin
import fractions, time, math, random

def line():
    return stdin.readline().split()
def read_int():
    return int(line()[0])
def read_ints():
    return [int(x) for x in line()]
def memo(fn):
    table = {}
    def memoized(*args):
        if args not in table:
            table[args] = fn(*args)
        return table[args]
    return memoized

def increment(dct, val):
    if val not in dct:
        dct[val] = 0
    dct[val] += 1

front_colors = {}
back_colors = {}
same_colors = {}
colors = set()

n = read_int()
for _ in range(n):
    front, back = read_ints()
    if front == back:
        increment(same_colors, front)
    else:
        increment(front_colors, front)
        increment(back_colors, back)
    colors.add(front)
    colors.add(back)

best_color, best_needed = None, 10**6
half = float(n)/2
for color in colors:
    current = front_colors.get(color, 0) + same_colors.get(color, 0)
    backs = back_colors.get(color, 0)
    if (current + backs) < half: continue

    if current < half:
        needed = int(math.ceil(half)) - current
    else:
        needed = 0

    if needed < best_needed:
        best_color, best_needed = color, needed

if best_color:
    print best_needed
else:
    print -1
