#include <cstdio>
#include <vector>
#include <algorithm>
#define rep(i,n) for (int i=0; i<n; ++i)
#define For(i,n) for (int i=1; i<=n; ++i)
using namespace std;
const int N = 100000 + 10;
vector <int> add[N*3],del[N*3];
int n,Rborder,l[N],v[N],r[N];
int L,R,Tans,ans[N*12],mark[N*12],who[N*12];

inline void Change(int x,int d) {
  ans[x]+=d;
  mark[x]+=d;
}
inline void Update(int x) {
  if (ans[x+x] > ans[x+x+1]) {
    who[x] = who[x+x];
    ans[x] = ans[x+x];
  }
  else {
    who[x] = who[x+x+1];
    ans[x] = ans[x+x+1];
  }

}
void Build(int x,int l,int r) {
  who[x] = r;
  if (l==r) return;

  int m = l+r >>1;
  Build(x+x,l,m);
  Build(x+x+1,m+1,r);
}
void Modify(int x,int l,int r,int aa,int bb,int d) {
  if (aa<=l && r<=bb) {
    Change(x,d);
    return;
  }
  if (mark[x]!=0) {
    Change(x+x,mark[x]);
    Change(x+x+1,mark[x]);
    mark[x] = 0;
  }
  int m = l+r >>1;
  if (aa<=m) Modify(x+x,l,m,aa,bb,d);
  if (m+1<=bb) Modify(x+x+1,m+1,r,aa,bb,d);
  Update(x);

}
int main() {
  scanf("%d",&n);
  For(i,n) {
    scanf("%d%d%d",&l[i],&v[i],&r[i]);
    add[l[i]].push_back(i);
    del[v[i]].push_back(i);
    Rborder = max(Rborder, r[i]);
  }
  Tans = 0;
  Build(1,1,Rborder);
  For(x,Rborder) {

    rep(i,add[x].size()) {
      int id = add[x][i];
      Modify(1,1,Rborder,v[id],r[id],1);
    }
    if (ans[1] > Tans) {
      Tans = ans[1];
      L=x;
      R=who[1];
    }
    rep(i,del[x].size()) {
      int id = del[x][i];
      Modify(1,1,Rborder,v[id],r[id],-1);
    }

  }
  printf("%d\n",Tans,L,R);
  For(i,n)
    if (l[i]<=L && R<=r[i] && L<=v[i] && v[i]<=R)
      printf("%d ",i);
  return 0;
}
