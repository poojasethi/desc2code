#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#define fo(i,a,b) for(int i=a;i<=b;i++)
#define fd(i,a,b) for(int i=a;i>=b;i--)
#define maxn 300005
#define min(a,b) (((a) < (b)) ? a : b)
#define max(a,b) (((a) > (b)) ? a : b)
using namespace std;

struct seg{
	int add,mx,w;
}t[maxn * 4];

int n,ans,ans1,ans2,mxw;

int l[maxn],v[maxn],r[maxn];

int head[maxn],next[maxn],fr[maxn],to[maxn],val[maxn],sum;

void insert(int x,int y,int z,int c){
	val[++sum]=c;
	fr[sum]=y;
	to[sum]=z;
	next[sum]=head[x];
	head[x]=sum;
}

void add(int v,int l,int r,int x,int y,int z){
	if (l==x && r==y) {
		t[v].add+=z;
		t[v].mx+=z;
		return;
	}
	int mid=(l+r) >> 1;
	if (y<=mid) add(v << 1,l,mid,x,y,z);
	else if (x>mid) add(v << 1 | 1,mid+1,r,x,y,z);
	else add(v << 1,l,mid,x,mid,z),add(v << 1 | 1,mid+1,r,mid+1,y,z);
	t[v].mx=max(t[v << 1].mx,t[v << 1 | 1].mx);
	if (t[v].mx==t[v << 1].mx) t[v].w=t[v << 1].w;
	else t[v].w=t[v << 1 | 1].w;
	t[v].mx+=t[v].add;
}

void build(int v,int l,int r){
	t[v].w=l;
	if (l==r) return;
	int mid=(l+r) >> 1;
	build(v << 1,l,mid);
	build(v << 1 | 1,mid+1,r);
}

int main(){
	scanf("%d",&n);
	fo(i,1,n) {
		scanf("%d%d%d",&l[i],&v[i],&r[i]);
		insert(l[i],v[i],r[i],1);
		insert(v[i]+1,v[i],r[i],-1);
	}
	build(1,1,300000);
	fo(i,1,300000) {
		for(int tmp=head[i];tmp;tmp=next[tmp]) 
			add(1,1,300000,fr[tmp],to[tmp],val[tmp]);
		if (t[1].mx>ans) {
			ans=t[1].mx;
			ans1=i;
			ans2=t[1].w;
		}
	}
	printf("%d\n",ans);
	fo(i,1,n) 
		if (l[i]<=ans1 && ans1<=v[i] && v[i]<=ans2 && ans2<=r[i]) printf("%d ",i);
	return 0;
}