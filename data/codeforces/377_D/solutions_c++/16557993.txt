#include<bits/stdc++.h>

using namespace std;

#define pii pair<int,int>
#define ll long long
#define N (int)(3e5+10)
#define mod 1000000007
#define mp make_pair
#define pb push_back
#define nd second
#define st first
#define inf mod
#define endl '\n'
#define sag (sol|1)
#define sol (root<<1)
#define ort ((bas+son)>>1)
#define bit(x,y) ((x>>y)&1)

int St[4*N],i,j,k,n,m,x,y,z,kobe;
int ans,Lazy[4*N],l,r,a,H[N],kob;
vector< pair < pii , int > > v[2][N];
int aa[N],A[4*N],rr[N];

int upd(int root,int bas,int son,int x,int y,int t){
	if(bas > y or son < x)
		return St[root];

	if(x <= bas and son <= y){
		Lazy[root] += t;
		return St[root] += t;
	}

	Lazy[sol] += Lazy[root];
	Lazy[sag] += Lazy[root];
	St[sol] += Lazy[root];
	St[sag] += Lazy[root];
	Lazy[root]=0;

	upd(sol,bas,ort,x,y,t);
	upd(sag,ort+1,son,x,y,t);

	St[root] = max(St[sol],St[sag]);

	if(St[sol] > St[sag]){
		A[root] = A[sol];
	}
	else{
		A[root] = A[sag];
	}
}

void init(int root,int bas,int son){
	if(bas == son){
		A[root] = bas;
		return;
	}
	init(sol,bas,ort);
	init(sag,ort+1,son);
	A[root] = bas;
	return;
}

int main(){
	cin >> n;

	for(i=1 ; i<=n ; i++){
		scanf("%d %d %d",&l,&a,&r);
		v[0][l].pb(mp(mp(a,r),i));
		v[1][a].pb(mp(mp(a,r),i));
		aa[i] = a;
		rr[i] = r;
	}

	init(1,1,N);

	for(i=1 ; i<N ; i++){
		for(j=0 ; j<v[0][i].size() ; j++)
			upd(1,1,N,v[0][i][j].st.st,v[0][i][j].st.nd,+1);
		if(St[1] > ans){
			ans = St[1];
			kob = i;
			kobe = A[1];
		}
		for(j=0 ; j<v[1][i].size() ; j++)
			upd(1,1,N,v[1][i][j].st.st,v[1][i][j].st.nd,-1);
	}

	cout << ans << endl;

	for(i=1 ; i<N ; i++){
		for(j=0 ; j<v[0][i].size() ; j++)
			H[v[0][i][j].nd]=1;
		if(i==kob)
			break;
		for(j=0 ; j<v[1][i].size() ; j++)
			H[v[1][i][j].nd]=0;
	}

	for(i=1 ; i<=n ; i++)
		if(H[i] and aa[i] <= kobe and kobe <= rr[i])
			printf("%d ",i);
}
