#include <cstdio>
#include <cstring>
#include <algorithm>
#include <set>
#include <iostream>
#include <vector>
#define pb push_back
#define fr(i,a,b) for(int i=a;i<b;i++)
#define rep(i,b) fr(i,0,b)
#define F first
#define S second
#define mp make_pair

#define N 300100
using namespace std;
int oo;
typedef pair<int,int> pii;
typedef long long ll;

int pa[N], pb[N], pv[N];
int bst[4*N], sum[4*N], pos[4*N];
vector< pii > ls1[N];
vector<int> ls2[N];

void add(int no, int l1, int l2, int p, int v){
    if(l1==l2){
        sum[no]+=v;
        bst[no]+=v;
        pos[no]=l1;
    }else{
        int l=(l1+l2)>>1, f1=2*no, f2=2*no+1;
        if(p<=l) add(f1,l1,l,p,v);
        else add(f2,l+1,l2,p,v);
        sum[no]=sum[f1]+sum[f2];
        
        if(bst[f1]>=sum[f1]+bst[f2]) bst[no]=bst[f1], pos[no]=pos[f1];
        else bst[no]=sum[f1]+bst[f2], pos[no]=pos[f2];
    }
}

int main(){
    int n;
    scanf("%d",&n);
    
    int p1, p2;
    rep(i,n){
        int a, v, b;
        scanf("%d %d %d",&a,&v,&b);
        pa[i]=a,pb[i]=b,pv[i]=v;
        ls1[a].pb(mp(v,b));
        ls2[v].pb(b);
        p1=p2=v;
    }   
    
    int root=1, l1=1,l2=N;  
    int rsp=1;
    fr(i,1,N){
        fr(j,0,ls1[i].size()) add(root,l1,l2,ls1[i][j].F,1), add(root,l1,l2,ls1[i][j].S+1,-1);
        
        if(bst[root]>rsp){
            rsp=bst[root];
            p1=i, p2=pos[root];
        }
        
        fr(j,0,ls2[i].size()) add(root,l1,l2,ls2[i][j]+1,1), add(root,l1,l2,i,-1);
    }
        
    int k=0;
    //printf("%d %d\n",p1,p2);
    printf("%d\n",rsp);
    rep(i,n){
        if(pa[i]<=p1 && pb[i]>=p2 && pv[i]>=p1 && pv[i]<=p2){
            if(k) printf(" ");
            printf("%d",i+1);
            k++;
        }
    }
    printf("\n");
    
    return 0;
}
