//In the name of God
#include <bits/stdc++.h>
using namespace std;
typedef pair<int,int> pii;
const int N = 2e6 + 9;
pair<int,int> t[N];
int ch[N];
set< pair<pii,pii > > q,s;
int mark[N];
void build(int v = 1,int b = 0,int e = 3e5) {
	if(b == e) {
		t[v] = {0,b};
		return;
	}
	int mid = b + e >> 1,l = v << 1,r = l | 1;
	build(l,b,mid);
	build(r,mid+1,e);
	t[v] = max(t[l],t[r]);
}
void update(int i,int j,int x,int v = 1,int b = 0,int e = 3e5) {
	if(i > e || b > j) return;
	if(i <= b && e <= j) {
		t[v].first += x;
		ch[v] += x;
		return;
	}
	int mid = b + e >> 1,l = v << 1,r = l | 1;
	ch[l] += ch[v],ch[r] += ch[v],t[l].first += ch[v],t[r].first += ch[v],ch[v] = 0;
	update(i,j,x,l,b,mid);
	update(i,j,x,r,mid+1,e);
	t[v] = max(t[l],t[r]);
	return;
}
int main() {
	ios_base::sync_with_stdio(0);
	int n; cin >> n;
	for(int i = 0; i < n; ++i) {
		int l,v,r; cin >> l >> v >> r; --l,--v,--r;
		q.insert({{l,-i},{v,r}});
		q.insert({{v,i + 1},{v,r}});
	}
	s = q;
	int ans = 0,id = -1;
	build();
	while(q.size()) {
		pair<pii,pii> cur = *(q.begin());
		q.erase(cur);
		int c = cur.first.second,l = cur.second.first,r = cur.second.second;
		if(c < 1) update(l,r,1);
		else update(l,r,-1);
		ans = max(ans,t[1].first);
		if(t[1].first == ans) id = t[1].second;
	}
	cout << ans << endl;
	while(s.size()) {
		pair<pii,pii> cur = *(s.begin());
		s.erase(cur);
		int c = cur.first.second,l = cur.second.first,r = cur.second.second;
		if(c < 1) if(l <= id && id <= r) mark[-c] = 1,t[1].first++;
		if(c >= 1) if(l <= id && id <= r) mark[c - 1] = 0,t[1].first--;
		if(ans == t[1].first) {
			for(int i = 0; i < n; ++i) {
				if(mark[i]) {
					cout << i + 1 << ' ';
				}
			}
			return 0;
		}
	}
}