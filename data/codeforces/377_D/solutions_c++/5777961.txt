// in the name of god

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<vector>

#define PII pair<int,int>
#define S second
#define F first
#define S second
#define MP make_pair
#define PB push_back

using namespace std;

const int maxn=3*1000*100+100;

int n,m,mx[4*maxn],dif[4*maxn],ans1,ans2,ans3;

vector<PII> v[maxn];

vector<int>d[maxn];

pair<PII,int> p[maxn];

void diff(int x){
	mx[2*x]+=dif[x];
	mx[2*x+1]+=dif[x];
	dif[2*x+1]+=dif[x];
	dif[2*x]+=dif[x];
	dif[x]=0;
}

void update(int x,int y,int val,int l=0,int r=maxn-1,int cnt=1){
	if(y<l || r<x)
		return;
	if(x<=l && r<=y){
		mx[cnt]+=val;
		dif[cnt]+=val;
		return;
	}
	diff(cnt);
	int med=(l+r)/2;
	update(x,y,val,l,med,2*cnt);
	update(x,y,val,med+1,r,2*cnt+1);
	mx[cnt]=max(mx[2*cnt],mx[2*cnt+1]);
}

PII query(int x,int y,int l=0,int r=maxn-1,int cnt=1){
	if(l==r)
		return MP(mx[cnt],l);
	int med=(l+r)/2;
	diff(cnt);
	if(mx[2*cnt]>=mx[2*cnt+1])
		return query(x,y,l,med,2*cnt);
	else
		return query(x,y,med+1,r,2*cnt+1);
}

int main(){
	cin>>n;
	for(int i=1;i<=n;i++){
		int l,g,r;
		cin>>l>>g>>r;
		v[r].PB(MP(l,g));
		d[g].PB(l);
		p[i]=MP(MP(l,r),g);
	}
	for(int i=maxn-1;i>0;i--){
		for(int j=0;j<v[i].size();j++){
			int x=v[i][j].F,y=v[i][j].S;
			update(x,y,1);
		}
		PII c=query(0,i);
		if(c.F>ans3){
			ans1=c.S;
			ans2=i;
			ans3=c.F;
		}
		for(int j=0;j<d[i].size();j++){
			int x=d[i][j];
			update(x,i,-1);
		}
	}
	cout<<ans3<<endl;
	for(int i=1;i<=n;i++){
		int l=p[i].F.F,r=p[i].F.S,v=p[i].S;
		if(ans1<=v && v<=ans2 && l<=ans1 && ans2<=r)
			cout<<i<<" ";
	}
	cout<<endl;
	return 0;
}

