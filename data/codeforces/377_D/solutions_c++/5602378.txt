#include <cstdio>
#include <algorithm>
using namespace std;

#define N 110000

struct aa {
	int l, v, r;
} a[N];
int n, i, h, h1, ans, l, ansl, ansr, tx[N], ty[N], sum[1500000], ma[1500000];

bool cmpl(int x, int y) {
	return	a[x].l < a[y].l;
}

bool cmpv(int x, int y) {
	return a[x].v < a[y].v;
}

void modify(int k, int q, int h, int x, int y) {
	if (q == h) {
		sum[k] += y;
		ma[k] = max(0, sum[k]);
	}else {
		if (x <= (q + h) / 2)	modify(k * 2, q, (q + h) / 2, x, y);
		else	modify(k * 2 + 1, (q + h) / 2 + 1, h, x, y);
		sum[k] = sum[k * 2] + sum[k * 2 + 1];
		ma[k] = max(ma[k * 2], sum[k * 2] + ma[k * 2 + 1]);
	}
}

void Modify(int x, int t) {
	modify(1, 0, 300001, a[x].v, t);
	modify(1, 0, 300001, a[x].r + 1, -t);	
}

int gets(int k, int q, int h) {
	if (q == h)	return q;
	else	if (ma[k * 2] == ma[k])	return gets(k * 2, q, (q + h) / 2);
	else	return gets(k * 2 + 1, (q + h) / 2 + 1, h);
}

void out(int l, int r) {
	for (int i = 1; i <= n; i++)
		if (l <= a[i].v && a[i].v <= r && a[i].l <= l && a[i].r >= r)	printf("%d ", i);
	printf("\n");
}

int main() {
	scanf("%d", &n);
	for (i = 1; i <= n; i++)	scanf("%d%d%d", &a[i].l, &a[i].v, &a[i].r);
	for (i = 1; i <= n; i++)	tx[i] = ty[i] = i;
	sort(tx + 1, tx + n + 1, cmpl);
	sort(ty + 1, ty + n + 1, cmpv);
	h = h1 = 1;
	for (l = 1; l <= 300000; l++) {
		while (a[ty[h]].v == l - 1)	Modify(ty[h], -1), h++;
		while (a[tx[h1]].l == l)	Modify(tx[h1], 1), h1++;
		if (ma[1] > ans)	ans = ma[1], ansl = l, ansr = gets(1, 0, 300001);
	}
	printf("%d\n", ans);
	out(ansl, ansr);
}
