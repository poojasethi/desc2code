#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 300010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int l,v,r,id;
} a[N];
struct w1 {
	int a,id,cov;
} tr[N*4];
int i,j,k,n,m,L,R,sum,ma,nn;
int next[N],head[N],an[N];
inline bool cc1(const ww &a,const ww &b) {
	return a.l<b.l;
}
inline void incc(int x,int y) {
	tr[x].a+=y,tr[x].cov+=y;
}
inline void renew(int q) {
	if (tr[q].cov) incc(q*2,tr[q].cov),incc(q*2+1,tr[q].cov);
	tr[q].cov=0;
}
inline void update(int x) {
	int y=x*2,z=x*2+1;
	tr[x].a=max(tr[y].a,tr[z].a);
	tr[x].id=tr[y].id;
	if (tr[z].a==tr[x].a) tr[x].id=tr[z].id;
}
void inc(int q,int x,int y,int l,int r,int k) {
	if (l<=x&&y<=r) {
		incc(q,k); return;
	}
	renew(q);
	int mid=(x+y)/2;
	if (l<=mid) inc(q*2,x,mid,l,r,k);
	if (mid<r) inc(q*2+1,mid+1,y,l,r,k);
	update(q);
}
inline void into(int x) {
	inc(1,1,nn,a[x].v,a[x].r,1);
	next[j]=head[a[x].v],head[a[x].v]=j;
}
inline void out(int x) {
	int v;
	for (v=head[x];v;v=next[v]) inc(1,1,nn,a[v].v,a[v].r,-1);
}
void build(int q,int x,int y) {
	if (x==y) {
		tr[q].id=x; return;
	}
	int mid=(x+y)/2;
	build(q*2,x,mid);
	build(q*2+1,mid+1,y);
	update(q);
}
int main() {
	scanf("%d",&n); nn=N-1;
	For(i,1,n) scanf("%d%d%d",&a[i].l,&a[i].v,&a[i].r),a[i].id=i;
	sort(a+1,a+n+1,cc1);
	build(1,1,nn);
	j=1;
	For(i,1,nn) {
		for (;j<=n&&i==a[j].l;j++) into(j);
		if (tr[1].a>ma) ma=tr[1].a,L=i,R=tr[1].id;
		out(i);
	}
	printf("%d\n",ma);
	For(i,1,n) if (L<=a[i].v&&a[i].v<=R&&a[i].l<=L&&a[i].r>=R) an[a[i].id]=1;
	For(i,1,n) if (an[i]) printf("%d ",i);
	printf("\n");
//	for(;;);
	return 0;
}
