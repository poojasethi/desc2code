#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
struct mjj{int x,y,num;}a[2010];
int n,i,b[2010],xx[2010],yy[2010],l,x[4010],f[2010],sz[4010],hav[2010][2010],gs[2010],g[2010],pre[2010],j,t,ans[2010],dn;
bool cmp(mjj x,mjj y){return x.y<y.y;}
bool cmp1(int x,int y){return yy[x]<yy[y];}
void add(int x,int y){for(;x<=l&&g[sz[x]]<g[y];x+=x&(-x))sz[x]=y;}
int count(int x){int t=0;for(;x;x-=x&(-x))if(g[sz[x]]>g[t])t=sz[x];return t;}
void deal(int x)
{
    if(x<=n)ans[++dn]=a[x].num;
    for(int i=1;i<=gs[x];i++)deal(hav[x][i]);
}
int main()
{
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        scanf("%d%d",&a[i].x,&a[i].y);b[i]=i;a[i].num=i;
        x[++l]=a[i].x-a[i].y;x[++l]=a[i].x+a[i].y;
    }sort(a+1,a+n+1,cmp);sort(x+1,x+l+1);l=unique(x+1,x+l+1)-x-1;
    for(i=1;i<=n;i++)
    {
        xx[i]=lower_bound(x+1,x+l+1,a[i].x-a[i].y)-x;
        yy[i]=lower_bound(x+1,x+l+1,a[i].x+a[i].y)-x;
    }sort(b+1,b+n+1,cmp1);xx[n+1]=1;yy[n+1]=l;
    for(i=1;i<=n+1;i++)
    {
        memset(sz,0,sizeof(sz));memset(g,0,sizeof(g));
        for(j=1;j<=n&&yy[b[j]]<=yy[i];j++)if(b[j]<i&&xx[b[j]]>=xx[i])
            g[b[j]]=g[pre[b[j]]=count(xx[b[j]])]+f[b[j]],add(yy[b[j]],b[j]);
        for(f[i]=g[t=count(yy[i])]+1;t;hav[i][++gs[i]]=t,t=pre[t]);
    }printf("%d\n",f[n+1]-1);deal(n+1);sort(ans+1,ans+dn+1);
    for(i=1;i<=dn;i++)printf("%d ",ans[i]);
}