#include<cstdio>
#include<utility>
#include<vector>
#include<algorithm>
#define pb push_back
#define fo(i,a,b) for(i=a;i<=b;++i)
using namespace std;
const int mn=4100;
int n,m,d[mn],x[mn],y[mn],L,len;
int f[mn][mn],t[mn][mn],ans[mn];
vector<int>g[mn],v[mn];
void dfs(int i,int j)
{
    if(!f[i][j]||i>j)return;
    if(t[i][j]!=-1)
    {
        dfs(i,t[i][j]),dfs(t[i][j],j);
    }
    else dfs(i+1,j);
    int p;
    for(p=0;p<g[i].size();++p)
        if(g[i][p]==j)
            ans[++len]=v[i][p];
}
int main()
{
    scanf("%d",&n);
    int i,j,k,l,p,r,c;
    L=0;
    fo(i,1,n)
    {
        scanf("%d%d",&c,&r);
        x[i]=c-r,y[i]=c+r;
        d[++L]=x[i],d[++L]=y[i];
    }
    sort(d+1,d+1+L),L=unique(d+1,d+1+L)-d-1;;
    fo(i,1,n)
    {
        x[i]=lower_bound(d+1,d+1+L,x[i])-d;
        y[i]=lower_bound(d+1,d+1+L,y[i])-d;
        g[x[i]].pb(y[i]);
        v[x[i]].pb(i);
    }
    fo(l,1,L)
        fo(i,1,L-l+1)
        {
            j=i+l-1;
            if(l>1)f[i][j]=f[i+1][j],t[i][j]=-1;
            c=0;
            for(p=0;p<g[i].size();++p)
            {
                k=g[i][p];
                if(k==j)++c;
                if(k>j)continue;
                r=f[i][k]+f[k][j];
                if(r>f[i][j])f[i][j]=r,t[i][j]=k;
            }
            f[i][j]+=c;
        }
    dfs(1,L);
    printf("%d\n",len);
    printf("%d",ans[1]);
    fo(i,2,len)printf(" %d",ans[i]);
    printf("\n");
    return 0;
}