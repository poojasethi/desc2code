#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;
const int MAXN=2005;
int a[MAXN*2],l[MAXN],r[MAXN];
int last[MAXN*2],next[MAXN*2],d[MAXN*2],top;
int f[MAXN*2][MAXN*2],q[MAXN*2];
int cir[MAXN*2][MAXN*2],cut[MAXN*2][MAXN*2];
int n;
int dfs(int l,int r)
{
	if(l==r)
		return 0;
	int &ans=f[l][r],&def=cut[l][r];
	if(f[l][r]!=-1)
		return ans;
	def=l+1;
	ans=dfs(l+1,r);
	int tmp=dfs(l,r-1);
	if(tmp>ans)
		def=r-1,ans=tmp;
	for(int i=last[l];i;i=next[i])
		if(d[i]>l&&d[i]<r)
		{
			int tmp=dfs(l,d[i])+dfs(d[i],r);
			if(tmp>ans)
				def=d[i],ans=tmp;
		}
	for(int i=last[r];i;i=next[i])
		if(d[i]>l&&d[i]<r)
		{
			int tmp=dfs(l,d[i])+dfs(d[i],r);
			if(tmp>ans)
				def=d[i],ans=tmp;
		}
	ans+=cir[l][r]>0;
	return ans;
}
int find(int x)
{
	int l=1,r=n*2;
	while(true)
	{
		int mid=(l+r)>>1;
		if(a[mid]==x)
			return q[mid];
		if(a[mid]<x)
			l=mid+1;
		else
			r=mid-1;
	}
}
void add(int x,int y)
{
	next[++top]=last[x];last[x]=top;d[top]=y;
}
void get(int l,int r)
{
	if(cir[l][r])
		printf("%d ",cir[l][r]);
	if(l==r-1)
		return;
	get(l,cut[l][r]);
	get(cut[l][r],r);
}
int main()
{
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
		int d,rr;
		scanf("%d%d",&d,&rr);
		a[i*2-1]=l[i]=d-rr;
		a[i*2]=r[i]=d+rr;
	}
	sort(a+1,a+1+n*2);
	q[1]=1;
	for(int i=2;i<=n*2;i++)
		q[i]=q[i-1]+(a[i]!=a[i-1]);
	bool flag=0;
	for(int i=1;i<=n;i++)
	{
		l[i]=find(l[i]);r[i]=find(r[i]);
		cir[l[i]][r[i]]=i;
		add(l[i],r[i]);add(r[i],l[i]);
	}
	memset(f,-1,sizeof(f));
	printf("%d\n",dfs(1,q[n*2]));
	get(1,q[n*2]);
	printf("\n");
	return 0;
}
	 		 	 	 			 		 	  			   	