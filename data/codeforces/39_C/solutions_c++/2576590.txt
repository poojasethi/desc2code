#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
const int u=4010; 
struct rec{int x,l,r;}a[u];
int f[u][u],d[u][u],v[u][u],b[u],n,m,i;
vector<int> c[u];

int dp(int l,int r)
{
	if(l>r) return 0;
	if(f[l][r]!=-1) return f[l][r];
	f[l][r]=dp(l+1,r);
	int i,j;
	for(i=0;i<c[l].size();i++)
		if(a[j=c[l][i]].r<r&&dp(l,a[j].r)+dp(a[j].r,r)>f[l][r])
			f[l][r]=f[l][a[j].r]+f[a[j].r][r],d[l][r]=j;
	return f[l][r]+=(v[l][r]>0);
}

void print(int l,int r)
{
	if(l>r) return;
	if(v[l][r]) printf("%d ",v[l][r]);
	if(d[l][r]) print(l,a[d[l][r]].r),print(a[d[l][r]].r,r);
	else print(l+1,r);
}

int main()
{
	cin>>n;
	for(i=1;i<=n;i++)
	{
		scanf("%d%d",&a[i].x,&a[i].r);
		a[i].l=a[i].x-a[i].r,a[i].r+=a[i].x;
		b[++m]=a[i].l,b[++m]=a[i].r;
	}
	sort(b+1,b+m+1);
	m=unique(b+1,b+m+1)-b-1;
	for(i=1;i<=n;i++)
	{
		a[i].l=lower_bound(b+1,b+m+1,a[i].l)-b;
		a[i].r=lower_bound(b+1,b+m+1,a[i].r)-b;
		c[a[i].l].push_back(i);
		v[a[i].l][a[i].r]=i; 
	}
	memset(f,-1,sizeof(f));
	cout<<dp(1,m)<<endl;
	print(1,m);
	return 0;
}