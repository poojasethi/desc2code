#include<iostream>
#include<algorithm>
#include<vector>
#include<cstdio>
#include<cstring>

#define pb push_back

using namespace std;

const int fin=0,maxn=4010;
int n,m;
int L[maxn],R[maxn];
vector<int>A,B[maxn],V;
int f[maxn][maxn],p[maxn][maxn],s[maxn][maxn];

int sol(int L,int R){
  if(L==R)return 0;
  int &F=f[L][R],&P=p[L][R];
  if(F!=-1)return F;
  F=sol(L+1,R),P=-1;
  int i,t;
  for(i=0;i<B[L].size();++i)
    if(t=B[L][i],::R[t]<R){
      t=sol(L,::R[t])+sol(::R[t],R);
      if(F<t)F=t,P=B[L][i];
    }
  return F+=!!s[L][R];
}

void det(int L,int R){
  if(L==R)return;
  int &P=p[L][R];
  if(s[L][R])V.pb(s[L][R]);
  if(P!=-1)det(L,::R[P]),det(::R[P],R);
  else det(L+1,R);
}

int main(){
  if(fin){
    freopen("t.in","r",stdin);
    freopen("t.out","w",stdout);
  }
  int i,j,tx,ty;
  scanf("%d",&n);
  for(i=1;i<=n;++i){
    scanf("%d%d",&tx,&ty);
    L[i]=tx-ty,R[i]=tx+ty;
    A.pb(L[i]),A.pb(R[i]);
  }
  sort(A.begin(),A.end());
  A.resize(unique(A.begin(),A.end())-A.begin());
  for(i=1;i<=n;++i){
    L[i]=lower_bound(A.begin(),A.end(),L[i])-A.begin();
    R[i]=lower_bound(A.begin(),A.end(),R[i])-A.begin();
    B[L[i]].pb(i),s[L[i]][R[i]]=i;
  }
  m=A.size();
  for(i=0;i<m;++i)
    for(j=i;j<m;++j)
      f[i][j]=-1;
  sol(0,m-1);
  det(0,m-1);
  printf("%d\n",V.size());
  for(i=0;i<V.size();++i)printf("%d ",V[i]);
  return 0;
}
