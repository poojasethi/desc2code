#include<cstdio>
#include<cstring>
#include<algorithm>
#include<map>
using namespace std;
const int maxn=4005;
struct Node
{
    int l,r;
}a[maxn];
map <int,int> hash;
int n,s,hs[maxn],first[maxn],f[maxn][maxn],p[maxn][maxn],ok[maxn][maxn];
__inline bool cmp(const Node &a,const Node &b)
{
    return a.l<b.l||a.l==b.l&&a.r>b.r;
}
int dp(int l,int r)
{
    if(l>r)return 0;
    if(f[l][r]!=-1)return f[l][r];
    f[l][r]=dp(l+1,r);
    for(int i=first[l];a[i].l==l;i++)
        if(a[i].r<r&&dp(l,a[i].r)+dp(a[i].r,r)>f[l][r])
        {
            f[l][r]=f[l][a[i].r]+f[a[i].r][r];
            p[l][r]=i;
        }
    f[l][r]+=ok[l][r]>0;
    return f[l][r];
}
void print(int l,int r)
{
    if(l>r)return;
    if(ok[l][r])printf("%d ",ok[l][r]);
    if(p[l][r])
    {
        print(l,a[p[l][r]].r);
        print(a[p[l][r]].r,r);
    }
    else print(l+1,r);
}
int main()
{
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
    {
        int q,p;
        scanf("%d%d",&q,&p);
        hs[i]=a[i].l=q-p;
        hs[i+n]=a[i].r=q+p;
    }
    sort(hs+1,hs+(n<<1)+1);
    hs[0]=-2147483648;
    for(int i=1;i<=n<<1;i++)
        if(hs[i]!=hs[i-1])hash[hs[i]]=++s;
    for(int i=1;i<=n;i++)
    {
        a[i].l=hash[a[i].l];
        a[i].r=hash[a[i].r];
        ok[a[i].l][a[i].r]=i;
    }
    sort(a+1,a+n+1,cmp);
    for(int i=1;i<=n;i++)
        if(first[a[i].l]==0)first[a[i].l]=i;
    memset(f,-1,sizeof(f));
    printf("%d\n",dp(1,s));
    print(1,s);
    printf("\n");
    return 0;
}
