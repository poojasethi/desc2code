#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define orta (bas + son >> 1)
#define sag (k + k + 1)
#define sol (k + k)
#define endl '\n'
#define foreach(i,x) for(type(x)i=x.begin();i!=x.end();i++)
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define ROF(ii,aa,bb) for(int ii=aa;ii>=bb;ii--)
#define mp make_pair
#define nd second
#define st first
#define type(x) __typeof(x.begin())

typedef pair < int ,int > pii;

typedef long long ll;

const long long linf = 1e18+5;
const int mod = (int) 1e9 + 7;
const int logN = 17;
const int inf = 1e9 + 1;
const int N = 4e3 + 55;

int n, m, x, y, t, dp[N][N][2];
vector< int > ans, v[N];
map< int , int > H, w;
pii e[N];

int f(int x, int y, bool t) {
	if(x > y) return 0;
	int &r = dp[x][y][t];
	if(r != -1) return r;
	r = f(x+1, y, 0);
	foreach(it, v[x])
		if(e[*it].nd <= (y - t)) { 
			r = max(r, 1 + f(x, e[*it].nd, 1) + f(e[*it].nd, y, 0));
		}
	return r;
}

void print(int x, int y, int t) {
	if(x > y) return ;
	int &r = dp[x][y][t];
	if(f(x+1, y, 0) == r) {
		print(x + 1, y, 0);
		return ;
	}
	foreach(it, v[x])
		if(e[*it].nd <= (y - t) && 1 + f(x, e[*it].nd, 1) + f(e[*it].nd, y, 0) == r) { 
			if(*it) ans.pb(*it);
			print(x, e[*it].nd, 1);
			print(e[*it].nd, y, 0);
			break;
		}
}

int main() {

	scanf("%d", &n);

	H[2 * -inf] = H[2 * inf] = 1;
	e[0] = mp(-inf * 2, inf * 2);
	FOR(i, 1, n) {
		scanf("%d %d", &x, &y);
		int l = x - y, r = x + y;
		H[l] = H[r] = 1;
		e[i] = mp(l, r);
	}

	int s = 0;
	foreach(it, H) w[it->st] = ++s;

	FOR(i, 0, n) {
		e[i] = mp(w[e[i].st], w[e[i].nd]);
		if(i) v[e[i].st].pb(i);
	}

	memset(dp, -1, sizeof dp); 
	cout << f(1, s, 0) << endl;
	print(1, s, 0);
	sort(ans.begin(), ans.end());
	foreach(it, ans)
		printf("%d ", *it); cout << endl;
	return 0;
}
