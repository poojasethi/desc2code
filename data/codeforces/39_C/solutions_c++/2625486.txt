#include<cstdio>
#include<cstring>
#include<vector>
#include<cmath>
#include<algorithm>
#define rep(i,n) for(int i=0;i<n;i++)
#define N 2010
#define X first
#define Y second
using namespace std;
int l[N],r[N],f[N<<1][N<<1];
pair <int,int> a[N<<1];
vector <int> c[N<<1];
int n,cnt;
int dp(int L,int R)
{
	if (f[L][R]>=0) return f[L][R];
	f[L][R]=L<R?dp(L+1,R):0;
	int tot=0;
	rep(i,c[L].size())
	{
		int x=c[L][i];
		if (r[x]==R) tot++;
		if (r[x]>=R) continue;
		dp(L,r[x]);dp(r[x],R);
		f[L][R]=max(f[L][R],f[L][r[x]]+f[r[x]][R]);
	}
	return f[L][R]+=tot;
}
void print(int L,int R)
{
	rep(i,c[L].size())
	{
		int x=c[L][i];
		if (r[x]==R) f[L][R]--,printf("%d ",x+1);
	}
	if (f[L+1][R]==f[L][R]) { print(L+1,R);return; }
	rep(i,c[L].size())
	{
		int x=c[L][i];
		if (r[x]<R && f[L][r[x]]+f[r[x]][R]==f[L][R])
		{
			print(L,r[x]);print(r[x],R);
			return;
		}
	}
}
int main()
{
	scanf("%d",&n);
	rep(i,n)
	{
		scanf("%d%d",&l[i],&r[i]);
		a[i+i]=make_pair(l[i]-r[i],i+i);
		a[i+i+1]=make_pair(l[i]+r[i],i+i+1);
	}
	sort(a,a+n+n);
	rep(i,n+n)
	{
		if (!i || a[i-1].X<a[i].X) cnt++;
		if (a[i].Y&1) r[a[i].Y>>1]=cnt;
			     else l[a[i].Y>>1]=cnt;
	}
	rep(i,n) c[l[i]].push_back(i);
	memset(f,-1,sizeof(f));
	printf("%d\n",dp(1,cnt));
	print(1,cnt);
	return 0;
}
