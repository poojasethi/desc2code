#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<vector>
#define lb lower_bound
#define pb push_back
using namespace std;
const int maxn=4010;
vector<int> have[maxn];
int cnt=0,n,x,r;
int X[maxn],g[maxn][maxn],ex[maxn][maxn],f[maxn][maxn];
struct circle{int l,r;} a[maxn];
int get(int l,int r){
    if(l>r)return 0;
    if(f[l][r]>=0)return f[l][r];
    int ret=get(l+1,r);
    g[l][r]=-1;
    for(int i=0;i<have[l].size();i++){
        int p=have[l][i];
        if(p<r){
            int tmp=get(l,p)+get(p,r);
            if(tmp>ret)ret=tmp,g[l][r]=p;
        }
    }
    if(ex[l][r])ret++;
    return f[l][r]=ret;
}
void print(int l,int r){
    if(g[l][r]==0||l>r)return;
    if(ex[l][r])printf("%d ",ex[l][r]);
    if(g[l][r]==-1)print(l+1,r);
    else{
        print(l,g[l][r]);
        print(g[l][r],r);
    }
}
int main(){
    //freopen("AC.in","r",stdin);
    //freopen("AC.out","w",stdout);
    scanf("%d",&n);
    for(int i=1;i<=n;i++){
        scanf("%d%d",&x,&r);
        a[i].l=x-r;
        a[i].r=x+r;
        X[cnt++]=a[i].l;
        X[cnt++]=a[i].r;
    }
    sort(X,X+cnt);
    cnt=unique(X,X+cnt)-X;
    for(int i=1;i<=n;i++){
        a[i].l=lb(X,X+cnt,a[i].l)-X+1;
        a[i].r=lb(X,X+cnt,a[i].r)-X+1;
        have[a[i].l].pb(a[i].r);
        ex[a[i].l][a[i].r]=i;
    }
    memset(f,-1,sizeof f);
    cout<<get(1,cnt)<<endl;
    print(1,cnt);
    return 0;
}
