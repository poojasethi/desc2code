#include <iostream>
#include <cstdlib>
#include <vector>

using namespace std;

const int tope=1<<22;
const int primero=1<<21;
const int desp=1<<20;

int cuantos[tope];
int elemento[tope];
int visto[tope];

void inserta(int pos,int c,int e)
{
  //cout<<pos-desp<<" "<<c<<" "<<e<<endl;
  pos+=primero;
  cuantos[pos]=c;
  elemento[pos]=e;
  while (pos>1) {
    pos/=2;
    cuantos[pos]=cuantos[2*pos]+cuantos[2*pos+1];
  }
}

int kesimo(int k)
{
  int pos=1;
  while (pos<primero) {
    if (cuantos[2*pos]>=k) pos=2*pos;
    else {
      k-=cuantos[2*pos];
      pos=2*pos+1;
    }
  }
  return pos;
}

void mueve(int x,int y,int d)
{
  int pos=kesimo(y);
  if ((elemento[pos] or visto[x]) and elemento[pos]!=x) {
    cout<<-1<<endl;
    exit(0);
  }
  visto[x]=1;
  inserta(pos-primero,0,x);
  inserta(desp-d,1,x);
}

int main()
{
  ios::sync_with_stdio(false);
  int n,m;
  cin>>n>>m;
  for (int i=1;i<=n;i++)
    inserta(desp+i,1,0);
  for (int i=0;i<m;i++) {
    int x,y;
    cin>>x>>y;
    mueve(x,y,i);
  }
  int ivisto=1;
  vector<int> sol;
  for (int i=1;i<=n;i++) {
    if (elemento[primero+desp+i])
      sol.push_back(elemento[primero+desp+i]);
    else {
      while (visto[ivisto]) ivisto++;
      sol.push_back(ivisto);
      ivisto++;
    }
  }
  for (int i=0;i<int(sol.size());i++) {
    if (i>0) cout<<" ";
    cout<<sol[i];
  }
  cout<<endl;
}
