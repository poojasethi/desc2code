#include<cstdio>
#include<algorithm>
#include<cstring>
#include<map>

using namespace std;

const int N=1000050;
int T[12*N],S[12*N];
int M1[N],M2[N];
int n,m;
void build(int v,int s,int t){
  if(s==t){
    if(s>=1) T[v]=s,S[v]=1; 
    return;
  }
  int mid=(s+t)>>1;
  build(v*2,s,mid);
  build(v*2+1,mid+1,t);
  S[v]=S[v*2]+S[v*2+1];
}
int get;
void ask(int y){
  for(int v=1,s=-m,t=n,k=y;;){
    S[v]--;
    if(s==t){
      get=T[v];
      return;
    }
    int mid=(s+t)>>1;
    if(S[v*2]>=k) v=v*2,t=mid;
    else k-=S[v*2],v=v*2+1,s=mid+1;
  }
}
void modify(int p,int x){
  for(int v=1,s=-m,t=n;;){
    S[v]++;
    if(s==t){
      T[v]=x;
      return;
    }
    int mid=(s+t)>>1;
    if(p<=mid) v=v*2,t=mid;
    else v=v*2+1,s=mid+1;
  }
}


int main(){
  //freopen("D.in","r",stdin);
  //freopen("D.out","w",stdout);
  scanf("%d%d",&n,&m);  
  build(1,-m,n);
  for(int i=1,j=0;i<=m;i++){
    int x,y;scanf("%d%d",&x,&y);
    ask(y);
    if(M2[x]&&M2[x]!=get){
      printf("-1\n");
      return 0;
    }
    if(M1[get]&&M1[get]!=x){
      printf("-1\n");
      return 0;
    }
    M2[x]=get;M1[get]=x;
    modify(--j,get);
  }
  for(int i=1,j=1;i<=n;i++)
    if(!M1[i]){
      for(;M2[j];j++);
      M1[i]=j;M2[j]=i;
    }
  for(int i=1;i<=n;i++)
    printf("%d ",M1[i]);
}
