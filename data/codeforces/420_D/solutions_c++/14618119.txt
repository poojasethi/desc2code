#include<bits/stdc++.h>

using namespace std;

#define INF 1000000

int n,m,a[2111111],last,npr,x,y,ch,w[1111111],b[1111111],r=1;

struct item
{
	int cnt,x;
}t[9999999];

void build(int v,int l,int r)
{
	if(l==r)
	{
		t[v].cnt=a[l];
		t[v].x=-1;
		return;
	}
	int mid=(l+r)/2;
	build(v+v,l,mid);
	build(v+v+1,mid+1,r);
	t[v].cnt+=t[v*2].cnt+t[v*2+1].cnt;
}

void upd(int v,int l,int r,int x,int y)
{
	if(l==r)
	{
		t[v].cnt^=1;
		t[v].x=y;
		return;
	}
	int mid=(l+r)/2;
	if(x<=mid)
		upd(v*2,l,mid,x,y);
	else
		upd(v*2+1,mid+1,r,x,y);
	t[v].cnt=t[v*2].cnt+t[v*2+1].cnt;
}

void fin(int v,int l,int r,int x,int y)
{
	if(l==r)
	{
		if(w[y]&&t[v].x==-1)
			ch=1;
		if(t[v].x!=y&&t[v].x!=-1)
			ch=1;
		if(t[v].x==-1)
		{
			b[l-INF]=y;
		}
		upd(1,1,npr,l,y);
		last--;
		upd(1,1,npr,last,y);
		return;
	}
	int mid=(l+r)/2;
	if(t[v*2].cnt>=x)
		fin(v*2,l,mid,x,y);
	else
		fin(v*2+1,mid+1,r,x-t[v*2].cnt,y);
}
        
int main()
{
	std::ios_base::sync_with_stdio(false);
	cin>>n>>m;
	npr=INF+n;
	last=INF+1;
	for(int i=INF+1;i<=npr;i++)
		a[i]=1;
	build(1,1,npr);
	for(int i=1;i<=m;i++)
	{
		cin>>x>>y;
		fin(1,1,npr,y,x);
		w[x]=1;
	}
	if(ch)
	{
		cout<<-1;
		return 0;
	}
	for(int i=1;i<=n;i++)
	{
		if(b[i]>0)
			cout<<b[i]<<" ";
		else
		{
			while(w[r]==1)
				r++;
			cout<<r<<" ";
			r++;
		}
	}
}