#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int maxn=1000002;
struct BIT{
  int f[maxn*2];
  int n;
  void init(int _n){
    n=_n;
    for (int i=0;i<=n;++i) f[i]=0;
  }
  void add(int x,int y){
    for (;x<=n;x+=x&(-x)) f[x]+=y;
  }
  int rank(int x){
    int k=0;
    for (int p=20;p>=0;--p)
      if (k+(1<<p)<=n && f[k+(1<<p)]<x){
        x-=f[k+(1<<p)];
        k+=(1<<p);
      }
    
    return k+1;
  }
}bit;
int x[maxn],y[maxn],d[maxn*2];
bool v[maxn];
int n,m;

bool solve(){
  int i,k,p;
  p=m+1;
  bit.init(p+n);
  for (i=p;i<p+n;++i) bit.add(i,1);
  for (i=0;i<m;++i){
    --p;
    k=bit.rank(y[i]);
    if (v[x[i]]){
      if (d[k]!=x[i]) return 0;
      bit.add(k,-1);
      bit.add(p,1);
      d[p]=x[i];
    }
    else {
      if (d[k]) return 0;
      d[k]=x[i];
      v[x[i]]=1;
      d[p]=x[i];
      bit.add(k,-1);
      bit.add(p,1);
    }
  }
  p=m+1;
  k=1;
  for (i=p;i<p+n;++i)
    if (d[i]) printf("%d ",d[i]);
    else {
      while (v[k]) ++k;
      printf("%d ",k++);
    }
  return 1;
}

int main(){
  scanf("%d%d",&n,&m);
  for (int i=0;i<m;++i) scanf("%d%d",&x[i],&y[i]);
  if (!solve()) puts("-1");
  return 0;
}