#include<cstdio>
#include<cstring>
const int N = 1000005;
int c[2][N];
int lowbit(int x)
{
    return x&(-x);
}
int getsum(int x,int t)
{
    int r=0;
    while(x>0)
    {
        r+=c[t][x];
        x-=lowbit(x);
    }
    return r;
}
void up(int x,int v,int t)
{
    while(x<N)
    {
        c[t][x]+=v;
        x+=lowbit(x);
    }
}
int ps[N],pre[N];
int main()
{
    int n,m,i;
    scanf("%d%d",&n,&m);
    for(i=1;i<=m;i++)
    {
        int a,b;
        scanf("%d%d",&a,&b);
        up(m+1-i,1,1);
        up(m+1-pre[a],-1,1);
        if(pre[a])
        {
            int v=getsum(m+1-pre[a],1);
            if(b!=v){puts("-1");return 0;}
            pre[a]=i;
            continue;
        }
        pre[a]=i;
        int low=0,high=n+1,mid,fg=0;
        while(low<high-1)
        {
            int mid=(low+high)/2;
            int v=getsum(n+1-mid,0)+mid;
            if(v<b)low=mid;
            else if(v>b)high=mid;
            else if(ps[mid])low=mid;
            else {fg=mid;break;}
        }
        if(!fg){puts("-1");return 0;}
        ps[fg]=a;
        up(n+1-fg,1,0);
    }
    int t=1;
    for(i=1;i<=n;i++)
    {
        if(!ps[i]){while(pre[t])t++;ps[i]=t;t++;}
        printf("%d ",ps[i]);
    }
    return 0;
}