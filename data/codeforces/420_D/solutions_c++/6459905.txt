#include <cstdio>
using namespace std;

int n, m, x, y, ans[8100000], sum[8100000], to[8100000], tt[8100000];

void mkt(int k, int q, int h) {
	if (q < h) {
		mkt(k * 2, q, (q + h) / 2);
		mkt(k * 2 + 1, (q + h) / 2 + 1, h);
		sum[k] = sum[k * 2] + sum[k * 2 + 1];
	}else	if (q > m)	sum[k] = 1, to[k] = q - m;
}

int get(int k, int q, int h, int x) {
	if (q == h)	return k;
	if (x <= sum[k * 2])	return get(k * 2, q, (q + h) / 2, x);
	return get(k * 2 + 1, (q + h) / 2 + 1, h, x - sum[k * 2]);
}

void modify(int k, int q, int h, int x, int y) {
	sum[k]++;
	if (q == h)	to[k] = y;
	else	if (x <= (q + h) / 2)	modify(k * 2, q, (q + h) / 2, x, y);
	else	modify(k * 2 + 1, (q + h) / 2 + 1, h, x, y);
}

int main() {
	scanf("%d%d", &n, &m);
	mkt(1, 1, n + m);
	for (int i = 1; i <= m; i++) {
		scanf("%d%d", &x, &y);
		int p = get(1, 1, n + m, y);
		if (!ans[to[p]]) {
			if (tt[x]) {
				printf("-1\n");
				return 0;
			}
			ans[to[p]] = x, tt[x] = to[p];
		}
		else	if (ans[to[p]] != x) {
			printf("-1\n");
			return 0;
		}
		int k = to[p];
		while (p)	sum[p]--, p /= 2;
		modify(1, 1, n + m, m - i + 1, k);
	}
	int q = 1;
	for (int i = 1; i <= n; i++)	if (!ans[i]) {
		while (tt[q])	q++;
		ans[i] = q;
		tt[q] = i;
	}
	for (int i = 1; i <= n; i++)	printf("%d ", ans[i]);
}
