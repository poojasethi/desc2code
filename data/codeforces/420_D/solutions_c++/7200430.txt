#include <cstdio>
#include <ext/pb_ds/assoc_container.hpp>
#define rep(i,s,e) for (int i=(s);i<=(e);++i)
using namespace __gnu_pbds;

const int N=1<<20;
int n, m, lo, mid, p[N], R[N];
tree<int,int,std::less<int>,rb_tree_tag,tree_order_statistics_node_update> t;

int main() {
    scanf("%d%d",&n,&m);
    lo = mid = m + 99;
    rep(i,mid+1,mid+n) t.insert(std::make_pair(i,1));
    rep(i,1,m) {
        int x, y; scanf("%d%d",&x,&y);
        if (!p[x]) {
            p[x] = t.find_by_order(y-1)->first;
            if (p[x] <= mid) { puts("-1"); return 0; }
            R[p[x] - mid] = x;
        }
        if (p[x] != t.find_by_order(y-1)->first) { puts("-1"); return 0; }
        t.erase(p[x]);
        t.insert(std::make_pair(p[x]=lo--,1));
    }
    int r = 1;
    rep(i,1,n) if (!p[i]) {
        while (R[r]) ++r;
        R[r] = i;
    }
    rep(i,1,n) printf("%d ",R[i]);
    puts("");
}