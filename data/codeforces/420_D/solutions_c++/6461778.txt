#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define S(x) scanf("%d",&x)
#define P(x) printf("%d\n",x)

typedef long long int LL;
const int MAXN = 20000002;
int BIT[MAXN];
int V[MAXN];
int ans[MAXN/2];
bool vis[MAXN/2];

void update(int idx, int val) {
	for(int i = idx; i < MAXN; i += i & -i) BIT[i] += val;
}

int query(int idx) {
	int res = 0;
	for(int i = idx; i; i -= i & -i) res += BIT[i];

	return res;
}

int main() {
	int n,m;
	scanf("%d%d",&n,&m);
	rep(i,1,n+1) {
		update(MAXN/2+i, 1);
		V[i+MAXN/2] = i;
	}
	int idx = MAXN/2;
	rep(i,0,m) {
		int x,y;
		scanf("%d%d",&x,&y);
		int id;
		int lo = idx+1;
		int hi = MAXN/2+n;
		while(lo <= hi) {
			int mi = (lo+hi)>>1;
			int q = query(mi);
			if(q <= y) {
				id = mi;
				lo = mi+1;
			} else {
				hi = mi-1;
			}
		}
		if(ans[V[id]] && ans[V[id]] != x) {
			printf("-1\n");
			return 0;
		}
		if(vis[x] && ans[V[id]] != x) {
			printf("-1\n");
			return 0;
		}
		ans[V[id]] = x;
		update(id+1, -1);
		V[idx--] = V[id];
		update(idx+1, 1);
		vis[x] = true;
	}

	// rep(i,1,n+1) printf("%d ",ans[i]);
	// printf("\n");
	int cur = 1;
	rep(i,1,n+1) if(!ans[i]) {
		while(vis[cur]) cur++;
		ans[i] = cur;
		cur++;
	}

	rep(i,1,n+1) printf("%d ",ans[i]);
	printf("\n");
	return 0;
}