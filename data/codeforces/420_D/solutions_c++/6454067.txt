#include <vector>
#include <cstring>
#include <string>
#include <algorithm>
#include <iostream>
#include <cmath>
#include <map>
#include <cstdio>

using namespace std;

#define FOR(i, a, b) for(int i = a; i < b; i++)
#define REP(i, n) FOR(i, 0, n)
#define ll long long
#define mp make_pair
#define pb push_back

#define N 1000005
#define M 1000005
#define base (1<<21)
int seg[base<<1];
void update(int pos, int inc)
{
    for(int i = base+pos; i >= 1; i >>= 1)
        seg[i] += inc;
}
int query(int k)
{
    int n = 1;
    while(n < base)
        if(seg[n <<= 1] < k)
            k -= seg[n], n++;
    return n-base;
}
int n, m;
vector<int> ans;
bool done[N];
int color[M+N]; // color of ball at posn
int assign[N];

int main()
{
    ios_base::sync_with_stdio(0);
    cin >> n >> m;
    int front = m;
    FOR(i, 1, n+1) update(front+i, 1);
    FOR(i, 1, n+1) color[front+i] = i;
    REP(i, m)
    {
        int x, y;
        cin >> x >> y; // cup x at position y
        int pos = query(y);
        if(done[x] and !assign[color[pos]])
        {
            cout << -1 << endl;
            return 0;
        }
        if(assign[color[pos]] and assign[color[pos]] != x)
        {
            cout << -1 << endl;
            return 0;
        }
        done[x] = 1;
        assign[color[pos]] = x;
        color[front] = color[pos];
        color[pos] = 0;
        update(pos, -1); update(front, 1);
        front--;
    }
    for(int i = 1; i <= n; i++) ans.push_back(assign[i]);
    int j = 1;
    REP(i, n) if(!ans[i])
    {
        while(done[j]) j++;
        ans[i] = j++;
    }
    REP(i, n) cout << ans[i] << ' '; cout << endl;
    return 0;
}
