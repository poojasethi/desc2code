#include <bits/stdc++.h>

using namespace std;

#define type(x) __typeof((x).begin())
#define foreach(it, x) for(type(x) it = (x).begin(); it != (x).end(); it++)

typedef long long ll;
typedef pair < int, int > ii;

const int inf = 1e9 + 333;
const ll linf = 1e18 + inf;

const int N = 1 << 21;

int n, m;
int a[N], b[N], arr[N], ans[N], fen[N];

void up(int x, int k) {
	for(; x < N; x += x & -x)
		fen[x] += k;
}

int get(int x) {
	int num = 0, sum = 0;
	for(int i = 20; i >= 0; i--) {
		if(fen[num | (1 << i)] + sum < x) {
			num |= 1 << i;
			sum += fen[num];
		}
	}
	return num + 1;
}

void assign(int i, int x) {
	if(ans[i] and ans[i] != x) {
		puts("-1");
		exit(0);
	}
	ans[i] = x;
}

int main() {

	scanf("%d %d", &n, &m);

	for(int i = 1; i <= n; i++) {
		up(i + m, 1);
		arr[i + m] = i;
	}

	int ptr = m;

	for(int i = 1; i <= m; i++) {
		scanf("%d %d", a + i, b + i);
		int x = get(b[i]);
		int k = arr[x];
		assign(k, a[i]);
		up(x, -1);
		up(ptr, +1);
		arr[x] = 0;
		arr[ptr] = k;
		ptr--;
	}

	for(int i = 1; i <= n; i++) {
		int x = get(i);
		//printf("arr[%d] = %d\n", x, arr[x]);
	}

	set < int > s;

	for(int i = 1; i <= n; i++)
		s.insert(i);

	for(int i = 1; i <= n; i++) {
		if(ans[i]) {
			if(s.find(ans[i]) == s.end()) {
				puts("-1");
				return 0;
			}
			s.erase(ans[i]);
		}
	}

	for(int i = 1; i <= n; i++) {
		if(!ans[i]) {
			ans[i] = *s.begin();
			s.erase(s.begin());
		}
		printf("%d ", ans[i]);
	}

	puts("");

	return 0;

}
