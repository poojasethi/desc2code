from __future__ import division
from collections import Counter as ctr
from math import ceil, log, factorial
# reads a line of input and converts into a list of ints
# 1 1 3 => [1, 1, 3]
def rl():
    return [int(i) for i in raw_input().split()]

# reads n lines of input (if n defined) and returns a list of strings
# where each element is a line in the input
# abc
# abcdef
# => ['abc', 'abcdef']
# if n not defined, read first line to get number of lines
# 2
# abc
# abcdef
# => ['abc', 'abcdef']
def rm(n=None):
    if n is None:
        n = input()
    return [raw_input() for i in range(n)]

# same as rm, except converts each line to a list of ints like rl
def rlm(n=None):
    if n is None:
        n = input()
    return [rl() for i in range(n)]

def yn(b):
    if b:
        print "YES"
    else:
        print "NO"

l = sorted(rlm())
dp = [0 for i in range(l[-1][0]+1)]
dp[l[0][0]] = 1
best = 1
index = 1
for i in xrange(l[0][0]+1, l[-1][0]+1):
    if index >= len(l):
        break
    elif i < l[index][0]:
        dp[i] = dp[i-1]
        continue
    elif (i - l[index][1] - 1) < 0:
        dp[i] = 1
    else:
        dp[i] = dp[i-l[index][1]-1] + 1
    index += 1
    best = max(best, dp[i])
print len(l) - best
