#import<bits/stdc++.h>
using namespace std;
int n, ans=1, r[6005], d[6005];
vector<int> a[6005];

void dfs(int p, int q) {
	int i, k, t;
	k = lower_bound(d, d + 6000, r[p]) - d;
	ans = max(ans, k + 1);
	t = d[k];
	d[k] = r[p];
	for (i = 0; i < a[p].size(); i++) {
		if (a[p][i] != q) {
			dfs(a[p][i], p);
		}
	}
	d[k] = t;
}

main() {
	int i, x, y;
	for (i = 0; i < 6005; i++) d[i] = 1<<30;
	cin >> n;
	for (i = 1; i <= n; i++) scanf("%d", &r[i]);
	for (i = 0; i < n - 1; i++) {
		scanf("%d%d", &x, &y);
		a[x].push_back(y);
		a[y].push_back(x);
	}
	for (i = 1; i <= n; i++) {
		dfs(i, 0);
	}
	cout << ans;
}
