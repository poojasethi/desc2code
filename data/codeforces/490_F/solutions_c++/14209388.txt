#include <bits/stdc++.h>
using namespace std;

const int maxn = 6060 , inf = 1e9;

int n,ans,val[maxn],lis[maxn];
vector < int > way[maxn];

void dfs( int node , int dad ){
	int pos = lower_bound(lis+1 , lis+n+1 , val[node]) - lis;
	ans = max(ans , pos);
	int tmp = lis[pos];
	lis[pos] = val[node];
	for( int i=0 ; i < (int)way[node].size() ; i++ ){
		int adj = way[node][i];
		if( adj != dad )
			dfs( adj , node );
	}
	lis[pos] = tmp;
}

int main(){
	
	scanf("%d",&n);
	
	for( int i=1 ; i <= n ; i++ )
		scanf("%d",&val[i]);
	
	for( int i=1,a,b ; i < n ; i++ ){
		scanf("%d%d",&a,&b);
		way[a].push_back(b);
		way[b].push_back(a);
	}
	
	for( int i=1 ; i <= n ; i++ ){
		for( int j=1 ; j <= n ; j++ )
			lis[j] = inf;
		dfs(i , 0);
	}
	
	printf("%d\n",ans);
	
	return 0;	
}
