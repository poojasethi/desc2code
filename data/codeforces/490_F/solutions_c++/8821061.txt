#include<cstdio>
#include<algorithm>
#include<vector>
using namespace std;
typedef pair<int,int> PII;

const int NMAX=6000;

int N,P[NMAX];
vector<int> E[NMAX];
int A;
vector<int> T;

void solve(int u,int p) {
	vector<int>::const_iterator it;
	if(P[u]>T.back()) {
		T.push_back(P[u]);
		A=max(A,(int)(T.size()-1));
		for(it=E[u].begin();it!=E[u].end();++it)if(*it!=p)solve(*it,u);
		T.pop_back();
	} else {
		const int i=lower_bound(T.begin(),T.end(),P[u])-T.begin();
		const int t=T[i];
		T[i]=P[u];
		for(it=E[u].begin();it!=E[u].end();++it)if(*it!=p)solve(*it,u);
		T[i]=t;
	}
}

int main() {
	scanf("%d",&N);
	for(int i=0;i<N;i++)scanf("%d",P+i);
	for(int i=1;i<N;i++) {
		int a,b;
		scanf("%d%d",&a,&b);a--;b--;
		E[a].push_back(b);
		E[b].push_back(a);
	}
	A=0;
	T.push_back(0);
	for(int i=0;i<N;i++)solve(i,-1);
	printf("%d\n",A);
	return 0;
}
