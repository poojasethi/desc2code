#include <iostream>
#include <cstdio>
#include <vector>
using namespace std;

int n, mx, r[6005];
vector<int> a[6005];

void dfs(int p, int q, int lis[]) {
	int i, y, num;
	y = lower_bound(lis, lis + n, r[p]) - lis;
	num = lis[y];
	if (y > mx) mx = y;
	lis[y] = r[p];
	for (i = 0; i < a[p].size(); i++) {
		if (a[p][i] != q) {
			dfs(a[p][i], p, lis);
		}
	}
	lis[y] = num;
}

int main()
{
	int i, x, y, lis[6005];
//	freopen ("input.txt", "r", stdin);

	cin >> n;
	for (i = 1; i <= n; i++) {
		scanf ("%d", &r[i]);
	}
	for (i = 0; i < n - 1; i++) {
		scanf ("%d%d", &x, &y);
		a[x].push_back(y);
		a[y].push_back(x);
	}
	for (i = 0; i < n; i++) {
		lis[i] = 987654321;
	}
	for (i = 1; i <= n; i++) {
		dfs(i, 0, lis);
	}
	cout << mx + 1 << endl;
    return 0;
}
