#include <stdio.h>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

#define long long long
#define f1(i,n) for (int i=1; i<=n; i++)
#define f0(i,n) for (int i=0; i<n; i++)

#define N 6003
int n, Size[N], b[N], Best=0;
vector<int> a[N];

void visit(int u, int p, int Result) {
    int Current = lower_bound(b+1, b+Result+1, Size[u]) - b;
    Best = max(Best, Current);
    int Old = b[Current]; b[Current] = Size[u];
    for (int i=0; int v=a[u][i]; i++) if (v!=p) 
    visit(v, u, max(Result, Current));
    b[Current]=Old; 
}

main(){
    scanf("%d", &n);
    f1(i,n) scanf("%d", &Size[i]);
    f1(i,n-1) {
        int x, y; scanf("%d%d", &x, &y);
        a[x].push_back(y);
        a[y].push_back(x);
    }
    f1(i,n) a[i].push_back(0);
    f1(i,n) visit(i, i, 0);
    cout << Best << endl;
}
