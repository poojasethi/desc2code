#include <bits/stdc++.h>

#define MAX_N 6666
int val[MAX_N];
std::vector<int> G[MAX_N];
int ans;
int f[MAX_N], top;
void dfs(int u, int fa) {
	int k = std::lower_bound(f, f + top, val[u]) - f;
	int tmp = f[k], add = 0;
	f[k] = val[u];
	if(k == top) {
		add = 1;
		top ++;
		ans = std::max(ans, k + 1);
	}
	for(int i = G[u].size() - 1; i >= 0; i --)
		if(G[u][i] != fa)
			dfs(G[u][i], u);
	if(add == 1)
		top --;
	else
		f[k] = tmp;
}
int main() {
	int N;
	scanf("%d", &N);
	for(int i = 1; i <= N; i ++)
		scanf("%d", &val[i]);
	for(int i = 0,u,v; i < N - 1; i ++) {
		scanf("%d%d", &u, &v);
		G[u].push_back(v);
		G[v].push_back(u);
	}
	for(int i = 1; i <= N; i ++)
		dfs(i, -1);
	printf("%d\n", ans);
}
