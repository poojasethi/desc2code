#include<cstdio>
#include<algorithm>
#include<queue>
#include<cstring>
using namespace std;
int data[6005]={0},n,ans=1,f[6005];
vector <int>map[6005];
int ask(int t)
{
    int l=1,r=n,k;
    while(l<r)
	{
        k=(l+r)>> 1;
        if(f[k]>=t)r=k;else l=k+1;
    }
    return l;
}
void dfs(int t,int fa)
{
    int x=ask(data[t]),pre=f[x];
    ans=max(ans,x);
    f[x]=data[t];
    for(int i=map[t].size()-1;i>=0;--i)if(map[t][i]!=fa)dfs(map[t][i],t);
    f[x]=pre;
}

int main()
{
	memset(f,1,sizeof(f));
	scanf("%d",&n);
	for(int i=1;i<=n;i++)scanf("%d",&data[i]);
	for(int i=1;i<n;i++)
	{
		int a,b;
		scanf("%d%d",&a,&b);
		map[a].push_back(b);
		map[b].push_back(a);
	}
	for(int i=1;i<=n;i++)dfs(i,0);
	printf("%d\n",ans);
	return 0;
}