# include <bits/stdc++.h>
using namespace std;
const int MAXN = 10000,INF=1000000;
int n,a[10001],d[10001],mx = 0,u[10001],result;
int s[100001];
vector <int >  g[10001],ans;
void dfs(int x,int predok)
{
	int j = upper_bound (s, s + 1+ n, a[x]) - s;
	int point = s[j];
	if (s[j-1] < a[x] && a[x] < s[j]){
	s[j] = a[x];
	mx = max(j,mx);
	}	
	for(int i = 0;i < g[x].size();i ++ )
	{
		if(g[x][i] != predok)
		dfs(g[x][i],x);
	}
	s[j] = point;
	}
	
int main ()
{
	ios_base :: sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
	cin >> n;
	s[0] = -INF;
    for (int i=1; i <= n; ++i)
	s[i] = INF;
	for(int i = 1;i <= n;i ++)
	cin >> a[i];
	for(int i = 1;i < n;i ++)
	{
		int x,y;
		cin >> x >> y;
		g[x].push_back(y);
		g[y].push_back(x);
	}
	for(int i = 1;i <= n;i ++)
	{
		dfs(i,-1);		
	}
	cout << mx ;
}
  									  	 	  					  					