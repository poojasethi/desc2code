#include <iostream>
#include <algorithm>
#include <vector>
#define repeat(ii,a,b) for(int ii=(a);ii<=(b);ii++)
#define maxN 6003
using namespace std;
vector<int> a[maxN];
int n,ans=0,r[maxN],mark[maxN],dp[maxN];
void dfs(int x){
    int t,k;
    mark[x]=1;
    k=lower_bound(dp,dp+n,r[x])-dp;
    if (k>ans) ans=k;
    t=dp[k];
    dp[k]=r[x];
    for (vector<int>::iterator it=a[x].begin();it<a[x].end();it++){
        int y=*it;
        if (mark[y]==0){
            dfs(y);
        }
    }
    dp[k]=t;
}
int main(){
    cin>>n;
    repeat(i,1,n) cin>>r[i];
    repeat(i,1,n-1){
         int x,y;
         cin>>x>>y;
         a[x].push_back(y);
         a[y].push_back(x);
    }
    repeat(j,0,n-1){dp[j]=1<<30;}
    repeat(i,1,n){
         repeat(j,1,n) mark[j]=0;
         dfs(i);
    }
    cout<<ans+1;
    //cin.get();
}
