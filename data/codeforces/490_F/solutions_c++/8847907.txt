#include<iostream>
#include<memory.h>
#include<algorithm>
#include<vector>
using namespace std;
int ans = 0;
vector<vector<int> > g;
int a[6001], f[6001];
void dfs(int v,int pred)
{
	for(int i = 0;i<g[v].size();i++)
	{
		int to = g[v][i];
		if(to == pred) continue;
		int m = lower_bound(f,f + sizeof(f) / sizeof(int),a[to]) - f;
		//cout<<m<<endl;
		ans = max(ans,m);
		int h = f[m];
		f[m] = min(a[to],f[m]);
		dfs(to,v);
		f[m] = h;
		}
	} 
int main()
{
	int n;
	cin>>n;
	for(int i=0;i<6001;i++) f[i] = (int)1e9+1;
	for(int i=0;i<n;i++)
	cin>>a[i];
	g.resize(n);
	for(int i=0;i<n-1;i++)
	{
		int x,y;
		cin>>x>>y;
		x--;y--;
		g[x].push_back(y);
		g[y].push_back(x); 
		}
	for(int i=0;i<n;i++)
	f[0] = a[i],dfs(i,-1);
	cout<<ans+1;
	}
