#include <cstdio>
#include <algorithm>
using namespace std;

int n, r[6001], a[6001], b[12000], e[12000];
int c[6000], ci;
int ans;
bool vs[6001];

void dfs(int v) {
    if (vs[v])
        return;
    vs[v] = true;
    int l = lower_bound(c, c + ci, r[v]) - c;
    int tmp2 = ci;
    if (l == ci)
        ci++;
    int tmp = c[l];
    c[l] = r[v];
    ans = max(ci, ans);
    for (int i = a[v]; i; i = b[i])
        dfs(e[i]);
    c[l] = tmp;
    ci = tmp2;
}

int main() {
    scanf("%d", &n);
    for (int i = 1; i <= n; i++)
        scanf("%d", r + i);
    for (int i = 1; i < n; i++) {
        scanf("%d%d", e + i, e + i + n);
        b[i + n] = a[e[i]];
        a[e[i]] = i + n;
        b[i] = a[e[i + n]];
        a[e[i + n]] = i;
    }
    for (int i = 1; i <= n; i++) {
        dfs(i);
        fill(vs, vs + n + 1, false);
    }
    printf("%d\n", ans);
}