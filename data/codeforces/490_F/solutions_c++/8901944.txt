#include <bits/stdc++.h>
using namespace std;

int n, ans = 1, r[6005], d[6005];
vector<int> a[6005];

void dfs(int p, int q) {
    int i, k, temp;
    k = lower_bound(d, d + 6000, r[p]) - d;
    ans = max(ans, k + 1);
    temp = d[k];
    d[k] = r[p];
    for (i = 0; i < a[p].size(); i++) {
        if (a[p][i] != q) {
            dfs(a[p][i], p);
        }
    }
    d[k] = temp;
}

int main()
{
    int i, t1, t2;
//    freopen("input.txt", "r", stdin);
    for (i = 0; i < 6005; i++) {
        d[i] = 987654321;
    }
    cin >> n;
    for (i = 1; i <= n; i++) {
        scanf("%d", &r[i]);
    }
    for (i = 0; i < n - 1; i++) {
        scanf("%d %d", &t1, &t2);
        a[t1].push_back(t2);
        a[t2].push_back(t1);
    }

    for (i = 1; i <= n; i++) {
        dfs(i, 0);
    }
    cout << ans;
    return 0;
}
