
// LIS on tree
#include <bits/stdc++.h>
using namespace std;
#define io_speed ios_base::sync_with_stdio(0);cin.tie(0)
const int N =6010;
vector<int> e[N];
int r[N],dp[N];
void dfs(int u,int fa,int &ans){
    int pos=lower_bound(dp,dp+N,r[u])-dp;
    int tmp=dp[pos];
    dp[pos]=r[u];
    ans=max(ans,pos+1);
    for(int i=0;i<e[u].size();++i){
        int v=e[u][i];
        if(v==fa) continue;
        dfs(v,u,ans);
    }
    dp[pos]=tmp;
}
int main(){
    io_speed;
    
    int n;
    cin>>n;
    for(int i=1;i<=n;++i) 
        cin>>r[i];
    for(int i=1;i<n;++i){
        int u,v;
        cin>>u>>v;
        e[u].push_back(v);
        e[v].push_back(u);
    }
    int ans=0;
    memset(dp,0x3f,sizeof dp);
    for(int i=1;i<=n;++i){
        dfs(i,0,ans);
    }
    cout<<ans<<endl;
    return 0;
} 