#include<bits/stdc++.h>
using namespace std;
int n,mx,r[6005],d[6005];
vector<int> a[6005];

void dfs(int p, int q) {
	int i,k,t;
	k = lower_bound(d, d + n, r[p]) - d;
	if (k>mx) mx = k;
	t = d[k];
	d[k] = r[p];
	for (i=0; i<a[p].size(); i++)
		if (a[p][i] != q)
			dfs(a[p][i], p);
	d[k] = t;
}

int main() {
	int i,x,y;
	cin>>n;
	for (i=1; i<=n; i++) cin>>r[i];
	for (i=0; i<n-1; i++) {
		cin>>x>>y;
		a[x].push_back(y);
		a[y].push_back(x);
	}
	for (i=0; i<n; i++) d[i] = 1<<30;
	for (i=1; i<=n; i++)
		dfs(i, 0);
	cout<<mx + 1;
}
