from math import log, exp
import sys

n,p,t = raw_input().strip().split()
n = int(n)
t = int(t)
p = float(p)

mem = {}
def choose(n, k):
	if (0 <= k and k <= n):
		if ((n,k) in mem): return mem[(n,k)]
		if ((n,n-k) in mem): return mem[(n,n-k)]
		inn = n
		ntok = 1
		ktok = 1
		for t in xrange(1, min(k, n - k) + 1):
			ntok *= n
			ktok *= t
			n -= 1
		answ = ntok // ktok
		mem[(inn,k)] = answ
		return answ
	else:
		return 0

if abs(p-1.0) < 10**-6:
	print min(n,t)
	sys.exit()

if abs(p-0.0) < 10**-6:
	print 0
	sys.exit()

e = 0
for i in range(1,min(n,t)):
	pf = log(i) + log(choose(t,i)) + i*log(p) + (t-i)*log(1.-p)
	pf = exp(pf)
	e += pf

if t < n: e += t*(p**t)
else:
	pf = 0.
	for i in range(n, t+1):
		lpf = log(max(1,choose(i-1,n-1))) + n*log(p) + (i-n)*log((1.-p))
		pf += exp(lpf)
	e += n*pf


print e
