#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<string>
#include<cstdlib>
#include<functional>
#include<iostream>
#include<map>
#include<bitset>
#define fo(i,a,b) for(i=a;i<=b;i++)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define MP(a,b) make_pair(a,b)
#define clr(x,y) memset(x,y,sizeof x)
#define fi first
#define se second
#define LL long long
#define sqr(z) ((z)*(z))
using namespace std;
typedef pair<int,int> PII;
const int oo=1047483647,maxn=1100;
int n,i,j,k,m,q,tot,w,now;
int a[maxn*maxn*2],T[maxn*maxn],H[maxn*maxn],b[maxn*maxn*2],vx,vy;
int f[maxn*maxn*8],cover[maxn*maxn*8];
int Read()
{
	char ch;while (ch = getchar(), (ch < '0' || ch > '9') && (ch != '-')); 
	bool neg= (ch == '-');
	if (ch=='-') ch=getchar();
	int v=0;
	while (ch>='0' && ch<='9') v=v*10+ch-'0',ch=getchar();
	if (neg) v=-v;
	return v;
}
bool cmp(const int &x,const int &y)
{
	return a[x]<a[y];
}
bool cmp2(const int &x,const int &y)
{
	return T[x]<T[y];
}
void change(int p,int v)
{
	f[p]=max(f[p],v);
	cover[p]=max(cover[p],v);
}
void put(int p)
{
	change(p*2,cover[p]);
	change(p*2+1,cover[p]);
	cover[p]=0;
}
int ask(int p,int x,int y,int l,int r,int v)
{
	if (x!=y && cover[p]) put(p);//<
	if (l<=x && y<=r)
	{
		int t=f[p];
		change(p,v);
		if (x!=y) put(p);
		return t;
	}
	int mid=(x+y)/2;
	int t1;
	if (r<=mid) t1=ask(p*2,x,mid,l,r,v);
	else if (l>mid) t1=ask(p*2+1,mid+1,y,l,r,v);//��Ҫupdata
	else
	{
		t1=ask(p*2,x,mid,l,r,v);
        int t2=ask(p*2+1,mid+1,y,l,r,v);
        t1=min(t1,t2);
	}
	f[p]=min(f[p*2],f[p*2+1]);
	return t1;
}
int main()//���������䴹ֱ�����������ͶӰ
{
//	freopen("1.in","r",stdin);
   //freopen("1.out","w",stdout);
	n=Read();vx=Read();vy=Read();
	fo(i,0,n-1)
	fo(j,0,n-1)
	{
		H[++tot]=Read();
		int dx,dy;
		int L=oo,R=-oo,tx=oo;
		fo(dx,0,1)
		fo(dy,0,1)
		{
			int Rec=(i+dx)*vy-vx*(j+dy);
			int ER=(i+dx)*vx+(j+dy)*vy;//Read
			L=min(L,Rec);
			R=max(R,Rec);
			tx=min(tx,ER);
		}
		a[++w]=L;
		a[++w]=R;
		T[tot]=tx;
	}
	fo(i,1,w) b[i]=i;
	sort(b+1,b+w+1,cmp);
	memset(cover,0,sizeof cover);
	memset(f,0,sizeof f);//!!��ʼ,��max��min
	int last=-oo;
	fo(i,1,w)
	{
		if (a[b[i]]!=last)
		now++;
		last=a[b[i]];
		a[b[i]]=now;//����͸���a[b[i]]
	}
	fo(i,1,tot) b[i]=i;
	sort(b+1,b+tot+1,cmp2);
	LL ans=0;
	fo(j,1,tot)
	{
		i=b[j];
		int t=ask(1,1,now,a[i+i-1]+1,a[i+i],H[i]);
		ans+=max(H[i]-t,0);
	}
	cout<<ans;
	return 0;
}
