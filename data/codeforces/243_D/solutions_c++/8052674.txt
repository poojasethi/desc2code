#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,n) for (int i=a;i<n;i++)
#define per(i,a,n) for (int i=n-1;i>=a;i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define SZ(x) ((int)(x).size())
#define fi first
#define se second
typedef vector<int> VI;
typedef long long ll;
typedef pair<int,int> PII;
const ll mod=1000000007;
ll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
// head

const int N=1010000;
int prio[N],l[N],r[N],v[N],p[N],n,vx,vy;
int fg[N*8],nd[N*8];
ll ret;
VI vc;
bool cmp(const int &a,const int &b) { return prio[a]<prio[b];}
int query(int p,int tl,int tr,int l,int r) {
	if (tl==l&&tr==r) return nd[p];
	else {
		int md=(tl+tr)>>1;
		if (r<=md) return max(fg[p],query(p+p,tl,md,l,r));
		else if (l>md) return max(fg[p],query(p+p+1,md+1,tr,l,r));
		else return max(fg[p],min(query(p+p,tl,md,l,md),query(p+p+1,md+1,tr,md+1,r)));
	}
}
void modify(int p,int tl,int tr,int l,int r,int w) {
	if (tl==l&&tr==r) fg[p]=max(fg[p],w),nd[p]=max(nd[p],w);
	else {
		int md=(tl+tr)>>1;
		if (r<=md) modify(p+p,tl,md,l,r,w);
		else if (l>md) modify(p+p+1,md+1,tr,l,r,w);
		else modify(p+p,tl,md,l,md,w),modify(p+p+1,md+1,tr,md+1,r,w);
		nd[p]=max(fg[p],min(nd[p+p],nd[p+p+1]));
	}
}
int main() {
	scanf("%d%d%d",&n,&vx,&vy);
	rep(i,0,n) rep(j,0,n) {
		scanf("%d",v+i*n+j);
		prio[i*n+j]=min(0,vx)+min(0,vy)+i*vx+j*vy;
		l[i*n+j]=min(0,-vy)+min(0,vx)-i*vy+j*vx;
		r[i*n+j]=max(0,-vy)+max(0,vx)-i*vy+j*vx;
		vc.pb(l[i*n+j]); vc.pb(r[i*n+j]);
	}
	sort(all(vc)); vc.erase(unique(all(vc)),vc.end());
	rep(i,0,n*n) {
		p[i]=i;
		l[i]=lower_bound(all(vc),l[i])-vc.begin()+1;
		r[i]=lower_bound(all(vc),r[i])-vc.begin()+1;
	}
	sort(p,p+n*n,cmp);
	rep(i,0,n*n) {
		int c=query(1,1,SZ(vc),l[p[i]],r[p[i]]-1);
		ret+=max(v[p[i]]-c,0);
		modify(1,1,SZ(vc),l[p[i]],r[p[i]]-1,v[p[i]]);
	}
	printf("%I64d\n",ret);
}
