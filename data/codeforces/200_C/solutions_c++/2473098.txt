#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <map>
#include <algorithm>
#include <string> 
#include <cassert>
using namespace std;
struct P
{
	int tot,win,lose;
	string s;
}a[10],ber,riv,seq[10];
inline bool cmp(const P &y,const P &x)
{
	if(y.tot!=x.tot) return y.tot>x.tot;
	if(y.win-y.lose!=x.win-x.lose) return y.win-y.lose>x.win-x.lose;
	if(y.win!=x.win) return y.win>x.win;
	return y.s<x.s;
}
map <string,int> m,v;
int mr,b,sb;
void match(string s1,string s2,int x,int y)
{
	if(!m[s1]) m[s1]=++mr,a[mr].s=s1;
	if(!m[s2]) m[s2]=++mr,a[mr].s=s2;
	if(x>y)
	{
		a[m[s1]].tot+=3,a[m[s1]].win+=x,a[m[s1]].lose+=y;
		a[m[s2]].tot+=0,a[m[s2]].win+=y,a[m[s2]].lose+=x;
	}
	else if(x==y)
	{
		a[m[s1]].tot+=1,a[m[s1]].win+=x,a[m[s1]].lose+=y;
		a[m[s2]].tot+=1,a[m[s2]].win+=y,a[m[s2]].lose+=x;
	}
	else if(x<y)
	{
		a[m[s1]].tot+=0,a[m[s1]].win+=x,a[m[s1]].lose+=y;
		a[m[s2]].tot+=3,a[m[s2]].win+=y,a[m[s2]].lose+=x;
	}
}
int main()
{
	for(int i=1;i<=5;++i) 
	{
		string s1,s2; int x,y;
		cin>>s1>>s2;
		scanf("%d:%d",&x,&y);
		match(s1,s2,x,y);
		++v[s1],++v[s2];
	}
	b=m["BERLAND"];
	for(int i=1;i<=4;++i) if(v[a[i].s]<3&&i!=b) sb=i;
	ber=a[b],riv=a[sb];
	int ans=0x3f3f3f3f,ansx,ansy=0x3f3f3f3f;
	for(int x=1;x<=200;++x)
		for(int y=0;y<x;++y)
		{
			match(a[b].s,a[sb].s,x,y);
			for(int i=1;i<=4;++i) seq[i]=a[i];
			sort(seq+1,seq+4+1,cmp);
			if(seq[1].s=="BERLAND"||seq[2].s=="BERLAND") 
			{
				if(x-y<ans||x-y==ans&y<ansy) ansx=x,ansy=y,ans=x-y;
			}
			a[b]=ber,a[sb]=riv;
		}
	if(ans==0x3f3f3f3f)	printf("IMPOSSIBLE\n");
	else	printf("%d:%d\n",ansx,ansy);
	return 0;
}