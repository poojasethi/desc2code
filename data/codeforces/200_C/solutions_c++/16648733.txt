#include <iostream>
#include <conio.h>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <map>
#include <fstream>
#include <iomanip>
#include <string>
#include <sstream>
#include <string.h>
#include <set>
#include <ios>
#include <cstdlib>
#include <ctime>
#include <utility>
#include <cmath>
#include <queue>
using namespace std;
struct Team
{
	int sum,get,put,cnt;
	Team() {sum=0,get=0,put=0;cnt=0;}
	int operator > (Team b)
	{
		if (sum!=b.sum)
			return sum>b.sum;
		if (get-put!=b.get-b.put)
			return get-put>b.get-b.put;
		if (get!=b.get)
			return get>b.get;
		return -1;
	}
};
bool not_empty(Team team)
{
	return !(team.sum==0&&team.get==0&&team.put==0);
}
map<string,Team> a;
int main()
{
	string s1,s2;
	int A,B;
	char ccc;
	for (int k = 1;k <= 5;k++)
	{
		cin >> s1 >> s2 >> A >> ccc >> B;
		if (A==B) {a[s1].sum++;a[s2].sum++;}
		else if (A>B) a[s1].sum+=3;
		else if (A<B) a[s2].sum+=3;
		a[s1].get+=A;a[s1].put+=B;
		a[s2].get+=B;a[s2].put+=A;
		a[s1].cnt++;a[s2].cnt++;
	}
	string enemy = "";
	for (map<string,Team>::iterator it=a.begin();
		it!=a.end();it++)
	{
		string c = it -> first;
		if (a[c].cnt==2 && c != "BERLAND")
		{
			enemy=c;
			break;
		}
	}
	for (int d = 1;d <= 20;d++)
		for (int Y = 0;Y <= 20;Y++)
		{
			int X = Y+d;
			a["BERLAND"].sum+=3;
			a[enemy].get+=Y;
			a[enemy].put+=X;
			a["BERLAND"].get+=X;
			a["BERLAND"].put+=Y;
			int K = 0;
			for (map<string,Team>::iterator it=a.begin();
				it!=a.end();it++)
			{
				string c = it -> first;
				if (c=="BERLAND") continue;
				int d = a["BERLAND"]>a[c];
				if ((d>0 || (d==-1 && "BERLAND"<c)))
					K++;
			}
			if (K>=2)
			{
				cout << X << ":" << Y << endl;
				return 0;
			}
			a["BERLAND"].sum-=3;
			a[enemy].get-=Y;
			a[enemy].put-=X;
			a["BERLAND"].get-=X;
			a["BERLAND"].put-=Y;
		}
	cout << "IMPOSSIBLE\n";
	return 0;
}
