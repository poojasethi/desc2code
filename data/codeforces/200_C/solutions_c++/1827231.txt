#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <map>
using namespace std;

int pp[6], di[6], sg[6], g1, g2, cnt[6], d1, d2;

char s1[100], s2[100];
map<string, int> mp;
string name[6];

int getrank(int xx, int yy) {
	pp[d1] += 3;
	di[d1] += xx - yy;
	di[d2] += yy - xx;
	sg[d1] += xx;
	sg[d2] += yy;

	int res = 0;
	for (int i = 1; i < 4; i++) {
		if (pp[i] != pp[0]) {
			if (pp[i] > pp[0])
				res++;
		} else if (di[i] != di[0]) {
			if (di[i] > di[0])
				res++;
		} else if (sg[i] != sg[0]) {
			if (sg[i] > sg[0])
				res++;
		} else if (name[i] < name[0])
			res++;
	}
	
	pp[d1] -= 3;
	di[d1] -= xx - yy;
	di[d2] -= yy - xx;
	sg[d1] -= xx;
	sg[d2] -= yy;

	return res;
}

int cur_id;

int getid(string s) {
	if (mp.count(s) > 0)
		return mp[s];
	mp[s] = cur_id;
	name[cur_id] = s;
	return cur_id++;
}

int main() {
	mp["BERLAND"] = 0;
	name[0] = "BERLAND";
	cur_id = 1;

	for (int i = 0; i < 5; i++) {
		scanf("%s %s %d:%d", s1, s2, &g1, &g2);

		int id1 = getid(s1), id2 = getid(s2);
		if (g1 > g2)
			pp[id1] += 3;
		else if (g1 < g2)
			pp[id2] += 3;
		else {
			pp[id1]++; pp[id2]++;
		}

		sg[id1] += g1;
		sg[id2] += g2;

		di[id1] += g1 - g2;
		di[id2] += g2 - g1;
		cnt[id1]++;
		cnt[id2]++;
	}

	d1 = 0;
	for (int i = 1; i < 4; i++)
		if (cnt[i] == 2)
			d2 = i;

	bool found = false;
	int xx, yy;
	for (int i = 1; i < 100; i++)
		for (int j = 0; j < i; j++) {

			if (getrank(i, j) < 2) {
				if (!found) {
					found = true;
					xx = i;
					yy = j;
				} else {
					if (i - j < xx - yy || (i - j == xx - yy && j < yy)) {
						xx = i;
						yy = j;
					}
				}
			} 
		}

	if (found)
		printf("%d:%d\n", xx, yy);
	else
		printf("IMPOSSIBLE\n");
}

