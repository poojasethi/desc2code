#include<iostream>
#include<sstream>
#include<fstream>
#include<algorithm>
#include<functional>
#include<set>
#include<map>
#include<list>
#include<queue>
#include<deque>
#include<stack>
#include<vector>
#include<utility>
#include<cassert>
#include<iomanip>
#include<cstring>
#include<string>
#include<string.h>
#include<cmath>
#include<math.h>
#include<ctime>
#include<cstdio>
#include<cstdlib>
#include<bitset>
using namespace std;
map<string,int>sco,mis,goa,tim;
int main()
{
	string a,b,c;
	for(int i=0;i<5;i++)
	{
		int m,n;
		cin>>a>>b>>c;
		sscanf(c.c_str(),"%d:%d",&m,&n);
		if(m>n)sco[a]+=3;
		if(m<n)sco[b]+=3;
		if(m==n)sco[a]++,sco[b]++;
		goa[a]+=m,goa[b]+=n,mis[a]+=n,mis[b]+=m;
		tim[a]++,tim[b]++;
	}
	string myself="BERLAND",other;
	for(map<string,int>::iterator it=tim.begin();it!=tim.end();it++)
	if(it->first!=myself&&it->second==2)other=it->first;
	for(int diff=1;diff<=40;diff++)
	{
		for(int y=0;y<=40;y++)
		{
			int x=y+diff;
			sco[myself]+=3;
			goa[myself]+=x,mis[myself]+=y,goa[other]+=y,mis[other]+=x;
			int cnt=0;
			for(map<string,int>::iterator it=tim.begin();it!=tim.end();it++)
			{
				if(it->first==myself)continue;
				if(sco[it->first]>sco[myself])
				{
					cnt++;
					continue;
				}
				if(sco[it->first]<sco[myself])continue;
				int jsqi=goa[myself]-mis[myself];
				int jsqo=goa[it->first]-mis[it->first];
				if(jsqi>jsqo)continue;
				if(jsqi<jsqo)
				{
					cnt++;
					continue;
				}
				int goai=goa[myself];
				int goao=goa[it->first];
				if(goai>goao)continue;
				if(goai<goao)
				{
					cnt++;
					continue;
				}
				if(it->first<myself)
				{
					cnt++;
					continue;
				}
			}
			if(cnt<=1)
			{
				printf("%d:%d\n",x,y);
				return 0;
			}
			goa[myself]-=x,mis[myself]-=y,goa[other]-=y,mis[other]-=x;
			sco[myself]-=3;
		}
	}
	puts("IMPOSSIBLE");
	return 0;
}
