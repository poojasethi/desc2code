#include <cstdio>
#include <cstring>
#include <algorithm>
#include <map>
#include <string>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define FOD(i,s,e) for (int i=(s)-1; i>=(e); i--)
#define CLR(a,x) memset(a, x, sizeof(a))
#define EXP(i,l) for (int i=(l); i; i=qn[i])
#define LLD long long
using namespace std;

int x, y, m, t1, t2, t;
int goal[10], miss[10], score[10], played[10];
char s1[30], s2[30];
map<string, int> MAP;
string TEAM[10];

int team2int(char s[]){
	if (MAP[(string)s] != 0) return MAP[(string)s];
	++m;
	MAP[(string)s] = m;
	TEAM[m] = (string)s;
	return m;
}

bool cmp(int x, int y){
	if (score[x] != score[y]) return score[x] > score[y];
	if (goal[x] - miss[x] != goal[y] - miss[y]) return goal[x] - miss[x] > goal[y] - miss[y];
	if (goal[x] != goal[y]) return goal[x] > goal[y];
	return TEAM[x] < TEAM[y];
}

int verify(){
	int p[10];
	FOR(i,0,6) p[i] = i + 1;
	sort(p, p + 6, cmp);
	return p[0] == m || p[1] == m;
}


int main(){
	FOR(i,0,5){
		scanf("%s%s%d:%d", s1, s2, &x, &y);
		t1 = team2int(s1);
		t2 = team2int(s2);
		if (x > y) score[t1] += 3;
		if (x < y) score[t2] += 3;
		if (x == y) score[t1]++, score[t2]++;
		goal[t1] += x;
		miss[t1] += y;
		goal[t2] += y;
		miss[t2] += x;
		played[t1]++;
		played[t2]++;
	}
	
	m = MAP["BERLAND"];
	FOE(i,1,6)
	if (i != m && played[i] == 2) t = i;
	score[m] += 3;
	
	FOR(x,1,200){
		FOR(i,0,200){
			goal[m] += i + x;
			miss[m] += i;
			goal[t] += i;
			miss[t] += i + x;
			if (verify()){
				printf("%d:%d\n", i + x, i);
				return 0;
			}
			goal[m] -= i + x;
			miss[m] -= i;
			goal[t] -= i;
			miss[t] -= i + x;
		}
	}
	puts("IMPOSSIBLE");
	return 0;
}
