#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include<string>
using namespace std;
string str1,k;
char a[100];
int s1[4],s2[4],s3[4],s4[4];
int t3[4],t4[4];
string name[4]={};
int fin(string str1)
{
    for (int i=0;i<4;i++)
    {
        if (name[i]==str1) return i;
        if (name[i]=="") {name[i]=str1;return i;}
    }
}
int init()
{
    int i,j,k1,k2,l,t,x,y,t2;
    string str2;
    name[0]="BERLAND";
    for (j=1;j<=5;j++)
    {
        gets(a);
        str1=a;
        l=str1.length();
        t=str1.find(' ',0);
        t2=str1.find(' ',t+1);
        str2=str1.substr(0,t);
        x=fin(str2);
        str2=str1.substr(t+1,t2-t-1);
        y=fin(str2);
        s1[x]++;s1[y]++;
        k=str1.substr(t2+1);
        i=k1=k2=0;
        while (k[i]!=':') {k1=k1*10+k[i]-'0';i++;}
        i++;
        while (i<k.length()) 
        {k2=k2*10+k[i]-'0';i++;}
        if (k1>k2) s2[x]+=3;
        if (k1<k2) s2[y]+=3;
        if (k1==k2) {s2[x]++;s2[y]++;}
        s3[x]+=k1;s4[y]+=k1;
        s3[y]+=k2;s4[x]+=k2;
    }
}
bool pd(int t)
{
     if (s2[0]>s2[t]) return false;
     if (s2[0]<s2[t]) return true;
     if (t3[0]-t4[0]>t3[t]-t4[t]) return false;
     if (t3[0]-t4[0]<t3[t]-t4[t]) return true;
     if (t3[0]>t3[t]) return false;
     if (t3[0]<t3[t]) return true;
     if (name[0]<name[t]) return false;
     if (name[0]>name[t]) return true;
}
int work()
{
    int o,i,k,k1,k2,r;
    if (s1[1]<3) o=1;
    if (s1[2]<3) o=2;
    if (s1[3]<3) o=3;
    s2[0]+=3;
    for (i=1;i<=20;i++)
      for (k=0;k<=20;k++)
      {
          for (k1=0;k1<=3;k1++) {t3[k1]=s3[k1];t4[k1]=s4[k1];}
          t3[0]+=i+k;t4[0]+=k;
          t3[o]+=k;t4[o]+=k+i;
          r=0;
          for (k1=1;k1<4;k1++) 
           if (pd(k1)) r++;
          if (r<2) 
          {printf("%d:%d",i+k,k);return 0;}
      }
    printf("IMPOSSIBLE");
}
int main()
{
    init();
    work();
}
