#include <iostream>
#include <fstream>
#include <string.h>
#include <cstdio>
#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <cassert>
#include <list>
#include <iomanip>
#include <math.h>
#include <deque>
#include <utility>
#include <map>
#include <set>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <functional>
#include <sstream>
#include <cstring>
using namespace std;
map<string,int> sc,goal,missed,ch;
int main()
{
	int i,dif,t1,t2,cnt,vi,vm;
	string s1,s2,s3,me="BERLAND",other;
	for (i=0;i<5;i++)
	{
		cin>>s1>>s2>>s3;
		sscanf(s3.c_str(),"%d:%d",&t1,&t2);
		if (t1>t2)
			sc[s1]+=3;
		else if (t1==t2)
		{
			sc[s1]++;
			sc[s2]++;
		}
		else
			sc[s2]+=3;
		goal[s1]+=t1;
		missed[s1]+=t2;
		goal[s2]+=t2;
		missed[s2]+=t1;
		ch[s1]++;
		ch[s2]++;
	}
	for (map<string,int>::iterator it=ch.begin();it!=ch.end();it++)
	{
		if (it->first!=me&&it->second==2)
			other=it->first;
	}
	for (dif=1;dif<41;dif++)
	{
		for (t2=0;t2<41;t2++)
		{
			t1=dif+t2;
			sc[me]+=3;
			goal[me]+=t1;
			missed[me]+=t2;
			goal[other]+=t2;
			missed[other]+=t1;
			cnt=0;
			for (map<string,int>::iterator it=ch.begin();it!=ch.end();it++)
			{
				if (it->first==me)
					continue;
				if (sc[it->first]>sc[me])
				{
					cnt++;
					continue;
				}
				if (sc[it->first]<sc[me])
					continue;
				vi=goal[it->first]-missed[it->first];
				vm=goal[me]-missed[me];
				if (vi>vm)
				{
					cnt++;
					continue;
				}
				if (vi<vm)
					continue;
				vi=goal[it->first];
				vm=goal[me];
				if (vi>vm)
				{
					cnt++;
					continue;
				}
				if (vi<vm)
					continue;
				if (it->first<me)
				{
					cnt++;
					continue;
				}
			}
			if (cnt<2)
			{
				cout<<t1<<":"<<t2;
				return 0;
			}
			goal[me]-=t1;
			missed[me]-=t2;
			goal[other]-=t2;
			missed[other]-=t1;
			sc[me]-=3;
		}
	}
	cout<<"IMPOSSIBLE";
	return 0;
}
