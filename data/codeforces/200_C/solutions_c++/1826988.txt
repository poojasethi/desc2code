#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>

#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int, int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned

using namespace std;
map<string,int> p,g1,g2,cnt;
int get()
{
	vector<pair<pnt,pair<int,string> > > a;
	for (map<string,int>::iterator it=cnt.begin(); it!=cnt.end(); ++it)
	{
		string s=it->first;
		a.push_back(mp(mp(-p[s],-g1[s]+g2[s]),mp(-g1[s],s)));
	}
	sort(a.begin(),a.end());
	FOR(i,0,a.size())
		if (a[i].second.second=="BERLAND")
			return i+1;
}
int main()
{
#ifdef Fcdkbear
	freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
#endif
	FOR(i,0,5)
	{
		string s1,s2,s3;
		cin>>s1>>s2>>s3;
		int p1=s3[0]-'0';
		int p2=s3[2]-'0';
		if (p1>p2)
			p[s1]+=3;
		else
			if (p2>p1)
				p[s2]+=3;
			else
			{
				p[s1]++;
				p[s2]++;
			}
		cnt[s1]++;
		cnt[s2]++;
		g1[s1]+=p1;
		g2[s1]+=p2;
		g1[s2]+=p2;
		g2[s2]+=p1;
	}
	string s1="BERLAND";
	string s2;
	for (map<string,int>::iterator it=cnt.begin(); it!=cnt.end(); ++it)
		if ((it->second==2) && (it->first!="BERLAND"))
			s2=it->first;
	p[s1]+=3;
	FOR(dx,1,100)
	{
		FOR(p1,0,100)
		{
			int p2=p1+dx;
			g1[s1]+=p2;
			g2[s1]+=p1;
			g1[s2]+=p1;
			g2[s2]+=p2;
			int v=get();
			if (v<3)
			{
				printf("%d:%d\n",p2,p1);
				return 0;
			}
			g1[s1]-=p2;
			g2[s1]-=p1;
			g1[s2]-=p1;
			g2[s2]-=p2;
		}
	}
	printf("IMPOSSIBLE\n");
	return 0;
}