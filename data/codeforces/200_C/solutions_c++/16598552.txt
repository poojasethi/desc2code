#include <iostream>
#include <map>
#include <vector>
#include <cstring>
#include <utility>
#include <algorithm>
#include <cstdio>
#include <queue>
#include <string>
#include <stack>
#include <set>
#include <deque>
#include <sstream> 
#define mp make_pair
using namespace std;
map <string,int> score,diff,goal,play;
string s[4];
char s1[100],s2[100];
int sn,win;
bool bett(const string &i,const string &j)
{
	if (score[i]!=score[j]) return score[i]>score[j];
	if (diff[i]!=diff[j]) return diff[i]>diff[j];
	if (goal[i]!=goal[j]) return goal[i]>goal[j];
	return i<j;
}

int doplay(int i,int j,int d,int g)
{
	int D=diff["BERLAND"]+d;
	int G=goal["BERLAND"]+d+g;
	for (int t=0;t<4;t++)
	{
		if (t!=i)
		{

			if (score[s[i]]+3>score[s[t]]){
				win++;
			}else if (score[s[i]]+3==score[s[t]]){
				int D1=diff[s[t]];
				int G1=goal[s[t]];
				if (t==j) D1-=d,G1+=g;
				if (D>D1) {win++;continue;}
				if (D<D1) continue;
				if (G>G1) {win++;continue;}
				if (G<G1) continue;
				if (s[i]<s[t]) win++;
			}
		}
	}
	return win;
}

int main()
{
	for (int i=0;i<5;i++)
	{
		int a,b;
		scanf("%s%s%d:%d",&s1,&s2,&a,&b);
		if (a>b){
			score[s1]+=3;
			score[s2]+=0;
		}else if (a==b){
			score[s1]++;
			score[s2]++;
		}else{
			score[s1]+=0;
			score[s2]+=3;
		}
		diff[s1]+=a-b;
		diff[s2]+=b-a;
		goal[s1]+=a;
		goal[s2]+=b;
		if (string(s1)=="BERLAND") play[string(s2)]=1;
		if (string(s2)=="BERLAND") play[string(s1)]=1;
	}
	for (map <string,int>::iterator it=score.begin();it!=score.end();it++)
	{
		s[sn++]=it->first;
		//cout<<it->first<<' '<<score[it->first]<<' '<<diff[it->first]<<' '<<goal[it->first]<<' '<<play[it->first]<<endl;
	}

	sort(s,s+4,bett);
	int i=0;
	while (s[i]!="BERLAND")
	{
		i++;
	}
	int j=0;
	while (play[s[j]]==1 || i==j)
	{
		j++;
	}
	for (int d=1;d<50;d++)
	{
		for (int g=0;g<50;g++)
		{
			win=0;
			if (doplay(i,j,d,g)>=2)
			{
				printf("%d:%d",g+d,g);
				return 0;
			}
		}
	}
	puts("IMPOSSIBLE");
	return 0;
}
