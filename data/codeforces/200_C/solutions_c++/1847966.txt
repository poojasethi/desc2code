#include<cstdio>
#include<map>
#include<string>
#include<algorithm>

using namespace std;
const int MAX = 25;

struct Team{
	int gp, gc, pts, wv;
	string name;
};

bool ans;
int n, pa, pb, g1, g2, t1, t2;
char aux1[MAX], aux2[MAX];
string s1, s2;
Team v[5], cp[5];
map <string, int> stoi;

bool cmp(const Team &a, const Team &b){
	if(a.pts == b.pts){
		if(a.gp-a.gc == b.gp-b.gc){
			if(a.gp == b.gp) return a.name < b.name;
			return a.gp > b.gp;
		}
		return a.gp-a.gc > b.gp-b.gc;
	}
	return a.pts > b.pts;
}

void evaluate(int x, int y){
	if(ans) return;
	for(int i=0;i<n;i++) cp[i] = v[i];
	cp[pb].gp += x; cp[pb].gc += y;
	cp[pa].gp += y; cp[pa].gc += x;
	sort(&cp[0], &cp[n], cmp);
	for(int i=0;i<=1;i++){
		if(cp[i].name == "BERLAND"){
			printf("%d:%d\n", x, y);
			ans = true;
		}
	}
}

int main(){
	n = 0;
	stoi.clear();
	for(int i=0;i<5;i++) 
		v[i].gp = v[i].gc = v[i].pts = v[i].wv = 0;
	for(int i=0;i<5;i++){
		scanf(" %s %s %d:%d", aux1, aux2, &g1, &g2);
		s1 = aux1; s2 = aux2;
		if(stoi.count(s1) == 0)	stoi[s1] = n++;
		if(stoi.count(s2) == 0) stoi[s2] = n++;
		t1 = stoi[s1]; t2 = stoi[s2];
		v[t1].name = s1;
		v[t2].name = s2;

		if(g1 > g2) v[t1].pts += 3;
		if(g1 < g2) v[t2].pts += 3;
		if(g1 == g2){
			v[t1].pts++;
			v[t2].pts++;
		}

		v[t1].gp += g1; v[t1].gc += g2;
		v[t2].gp += g2; v[t2].gc += g1;

		v[t1].wv++;
		v[t2].wv++;
	}
	pb = stoi["BERLAND"];
	v[pb].pts += 3;
	for(int i=0;i<n;i++)
		if(v[i].wv == 2 && i != pb) pa = i;
	
	ans = false;
	for(int dif=1;dif<80;dif++)
		for(int y=0;y<40;y++)
			evaluate(y+dif, y);
	if(!ans) printf("IMPOSSIBLE\n");
	return 0;
}
