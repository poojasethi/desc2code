#include <cstdio>
#include <map>
#include <iostream>
#include <algorithm>
using namespace std;
string A, B, s[100];
map<string, int> m;
int v[100], n, xx[10000], yy[10000], c;
struct Q {
	int a, b, c, num;
	string s;
}p[1000], t[1000];
inline bool cmp (const Q & x, const Q & y)
{
	if (x.a != y.a)
		return x.a > y.a;
	if (x.b != y.b)
		return x.b > y.b;
	if (x.c != y.c)
		return x.c > y.c;
	return x.s < y.s;
}
inline bool ck (int x, int y, int a, int b)
{
	for (int i = 1; i <= n; i ++)
		t[i] = p[i];
	p[a].a += 3;
	p[a].b += x - y;
	p[b].b += y - x;
	p[a].c += x;
	p[b].c += y;
	sort (p + 1, p + 1 + n, cmp);
	if (p[1].num == a || p[2].num == a)
	{
		for (int i = 1; i <= n; i ++)
			p[i] = t[i];
		return true;
	}
	for (int i = 1; i <= n; i ++)
		p[i] = t[i];
	return false;
}
int main ()
{
	for (int i = 1, x, y, a, b; i <= 5; i ++)
	{
		cin >> A >> B;
		scanf ("%d:%d", &x, &y);
		if (!m[A])
			m[A] = ++ n, s[n] = A;
		a = m[A]; 
		if (!m[B])
			m[B] = ++ n, s[n] = B;
		b = m[B];
		v[a] ++;
		v[b] ++;
		if (x > y)
			p[a].a += 3;
		if (x < y)
			p[b].a += 3;
		if (x == y)
			p[a].a += 1, p[b].a += 1;
		p[a].b += x - y;
		p[b].b += y - x;
		p[a].c += x;
		p[b].c += y;
	}
	for (int i = 1; i <= n; i ++)
		p[i].s = s[i], p[i].num = i;
	int a, b;
	for (int i = 1; i <= n; i ++)
		if (v[i] == 2 && s[i] != "BERLAND")
			b = i;
	for (int i = 1; i <= n; i ++)
		if (s[i] == "BERLAND")
			a = i;
	bool f = false;
	int t1 = 0x3f3f3f3f, t2 = 0x3f3f3f3f, t3 = 0, t4 = 0;
	for (int i = 0; i <= 200; i ++)
		for (int j = 0; j < i; j ++)
			if (ck (i, j, a, b))
			{
				f = true;
				if (i - j < t1)
				{
					t1 = i - j;
					t3 = i, t4 = j;
				}
				if (i - j == t1 && j < t2)
				{
					t2 = j;
					t3 = i, t4 = j;
				}
			}
	if (!f)
		puts ("IMPOSSIBLE");
	else	
		printf ("%d:%d\n", t3, t4);
	return 0;
}