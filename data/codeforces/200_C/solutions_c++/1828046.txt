#include <iostream>
#include <memory.h>
#include <cstdio>
#include <vector>
#include <string>
#include <map>
#define inf 1000000000
#define P pair <int, int>
#define x first
#define y second
using namespace std;
int gp[4];
int BER, AGN;
string in[4];
map <string, int> mp;
int po[4], sg[4], gg[4];
bool less_(int i, int j){
	if (po[i] > po[j]) return true;
	if (po[i] < po[j]) return false;
	if (sg[i] - gg[i] > sg[j] - gg[j]) return true;
	if (sg[i] - gg[i] < sg[j] - gg[j]) return false;
	if (sg[i] > sg[j]) return true;
	if (sg[i] < sg[j]) return false;
	return in[i] < in[j];
}
bool sort(){
	vector <int> ans(4);
	for (int i = 0;i < 4;++i) ans[i] = i;
	for (int i = 1;i < 4;++i){
		for (int j = i;j > 0;--j){
			if (less_(ans[j], ans[j - 1]))
				swap(ans[j], ans[j - 1]);
			else break;
		}
	}
	//for (int i = 0;i < 4;++i)
	//	cout << in[ans[i]] << " " << po[ans[i]] << " " << sg[ans[i]] << " " << gg[ans[i]]<< endl;
	//cout << endl;
	return (ans[0] == BER || ans[1] == BER);
}
int main(){
	int C = 0;
	string s, p, q;
	for (int i = 0;i < 5;++i){
		cin >> s >> p >> q;
		if (mp.find(s) == mp.end()) mp[s] = C++;
		if (mp.find(p) == mp.end()) mp[p] = C++;
		
		int i = mp[s], j = mp[p];
		if (q[0] < q[2]) po[j] += 3; 
		else if (q[0] == q[2]) po[i]++, po[j]++;
		else po[i] += 3;
		sg[i] += q[0] - '0', gg[i] += q[2] - '0';
		sg[j] += q[2] - '0', gg[j] += q[0] - '0';
		in[i] = s, in[j] = p;
		gp[i]++, gp[j]++;
		if (s == "BERLAND") BER = i;
		if (p == "BERLAND") BER = j;
	}
	for (int i = 0;i < 4;++i)
		if (gp[i] == 2 && in[i] != "BERLAND")
			AGN = i;
	sort();
	int X = 100, Y = 0;
	for (int i = 1;i < 50;++i){
		for (int j = 0;j < i;++j){
			po[BER] += 3;
			sg[BER] += i, gg[BER] += j;
			sg[AGN] += j, gg[AGN] += i;
			if (sort()){
				if (X - Y > i - j) X = i, Y = j;
				else if (X - Y == i - j && Y > j) X = i, Y = j;
			}
			po[BER] -= 3;
			sg[BER] -= i, gg[BER] -= j;
			sg[AGN] -= j, gg[AGN] -= i;
		}
	}
	if (X == 100)
		cout << "IMPOSSIBLE" << endl;
	else cout << X << ":" << Y << endl;
	return 0;
}