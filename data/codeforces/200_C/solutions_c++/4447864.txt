#include<vector>
#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#include <queue>
#include <vector>
#include <math.h>
#include <string>
#include <set>
#include <map>
#define ll long long
using namespace std;
map<string,int> tr,to;
struct node
{
	string nam;
	int poi,get,los;
}a[9],b[9];
struct CC
{
	string n1,n2;
	int nn1,nn2;
	int s,t;
}ar[9];
bool cmp(node a,node b)
{
	if(a.poi!=b.poi) return a.poi>b.poi;
	int ca=a.get-a.los;
	int cb=b.get-b.los;
	if(ca!=cb) return ca>cb;
	if(a.get!=b.get) return a.get>b.get;
	return a.nam<b.nam;
}
bool check()
{
	for(int i=1;i<5;i++) a[i].poi=a[i].get=a[i].los=0;
	for(int i=0;i<6;i++)
	{
		int h1=ar[i].nn1;
		int h2=ar[i].nn2;
		if(ar[i].s==ar[i].t)
		{
			a[h1].poi++;
			a[h2].poi++;
		}else 
		if(ar[i].s>ar[i].t)
		{
			a[h1].poi+=3;
		}else 
		{
			a[h2].poi+=3;
		}
		a[h1].get+=ar[i].s;
		a[h2].los+=ar[i].s;
		a[h2].get+=ar[i].t;
		a[h1].los+=ar[i].t;
	}
	for(int i=1;i<5;i++) b[i]=a[i];
	sort(b+1,b+5,cmp);
	return b[2].nam==string("BERLAND")||b[1].nam==string("BERLAND");
}
int main()
{
	int id=1;
	for(int i=0;i<5;i++) 
	{
		cin>>ar[i].n1>>ar[i].n2;
		if(tr[ar[i].n1]==0)to[ar[i].n1]=id++,a[id-1].nam=ar[i].n1;
		if(tr[ar[i].n1]) tr[ar[i].n1]++;
		else tr[ar[i].n1]=1;
		if(tr[ar[i].n2]==0)to[ar[i].n2]=id++,a[id-1].nam=ar[i].n2;
		if(tr[ar[i].n2]) tr[ar[i].n2]++;
		else tr[ar[i].n2]=1;
		ar[i].nn1=to[ar[i].n1];
		ar[i].nn2=to[ar[i].n2];
		scanf("%d",&ar[i].s);
		getchar();
		cin>>ar[i].t;
	}
	for(int i=1;i<=4;i++)
	if(tr[a[i].nam]!=3&&a[i].nam!=string("BERLAND"))
	{
		ar[5].n1=string("BERLAND");
		ar[5].n2=a[i].nam;
		ar[5].nn1=to[ar[5].n1];
		ar[5].nn2=to[ar[5].n2];
	}
	int s,t=-1;
	for(int l=1;l<=31;l++)
	{
		for(int j=0;j+l<=31;j++)
		{
			int i=j+l;
			ar[5].s=j+l;
			ar[5].t=j;
			if(check()&&(t==-1))
			{
				s=i;
				t=j;
				break;
			}
		}
		if(t+1)break;
	}
	if(t+1) printf("%d:%d\n",s,t);
	else puts("IMPOSSIBLE");
	//puts("?");
	return 0;
}