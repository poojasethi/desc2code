def find(teams):
    for i in range(len(teams)):
        if teams[i].name == "BERLAND": return i
def find_other(teams):
    for j in range(len(teams)):
        if teams[j].name != "BERLAND" and teams[j].games == 2: return j

class Team(object):
    def __init__(self,name):
        self.name = name
        self.gfor = 0
        self.gagainst =0
        self.points = 0
        self.games=0
        
    def __lt__(self,other):
        if self.points == other.points:
            if self.gfor-self.gagainst == other.gfor-other.gagainst:
                if self.gfor == other.gfor:
                    return self.name < other.name
                else:
                    return self.gfor > other.gfor
            else:
                return self.gfor-self.gagainst > other.gfor-other.gagainst
        else:
            return self.points > other.points
        
    def __str__(self):
        return self.name
    
        
        
#data = open("P3.txt")
teams = []
names = []
for _ in range(5):
    t1,t2,goals = raw_input().split()
    if t1 not in names:
        names.append(t1)
        teams.append(Team(t1))
    if t2 not in names:
        names.append(t2)
        teams.append(Team(t2))
    
    i=names.index(t1)
    j=names.index(t2)
    a,b = map(int,goals.split(":"))
    teams[i].games += 1
    teams[j].games += 1
    teams[i].gfor += a
    teams[i].gagainst += b
    teams[j].gfor += b
    teams[j].gagainst += a
    if a==b:
        teams[i].points += 1
        teams[j].points += 1
    elif a > b:
        teams[i].points += 3
    else:
        teams[j].points += 3
        

'''teams = []
t = Team("A")
t.points = 3
t.gfor = 5
t.gagainst = 0
t.games = 2
teams.append(t)

t = Team("BERLAND")
t.points = 0
t.gfor = 0
t.gagainst = 4
t.games = 2
teams.append(t)

t = Team("C")
t.points = 3
t.gfor = 0
t.gagainst = 0
t.games = 3
teams.append(t)

t = Team("D")
t.points = 9
t.gfor = 6
t.gagainst = 0
t.games = 3
teams.append(t)'''


teams.sort()
#for t in teams: print t,t.points,t.gfor,t.gagainst
i = find(teams)
j = find_other(teams)
    
if i==0 or i==1:
    print "1:0"
else:
    minp = teams[1].points
    if teams[i].points+3<minp:
        print "IMPOSSIBLE"
    elif teams[i].points+3>minp:
        print "1:0"
        
    else:
        #find minimum goal difference
        teams[i].points += 3
        teams[i].gfor += 1
        teams[j].gagainst += 1
        count = 1
        teams.sort()
        i = find(teams)
        j = find_other(teams)
        while teams[i].gfor-teams[i].gagainst < teams[1].gfor-teams[1].gagainst and count<100:
            teams[i].gfor += 1
            teams[j].gagainst += 1
            count += 1
            teams.sort()
            i = find(teams)
            j = find_other(teams)
            
        if count==100:
            print "IMPOSSIBLE"
        else:
            #find minimum goals for with this goal difference
            '''teams[i].gfor += 1
            teams[i].gagainst += 1
            teams[j].gfor += 1
            teams[j].gagainst += 1'''
            count2 = 0
            teams.sort()
            i = find(teams)
            j = find_other(teams)
            while i > 1 and count2<100:
                teams[i].gfor += 1
                teams[i].gagainst += 1
                teams[j].gfor += 1
                teams[j].gagainst += 1
                count2 += 1
                teams.sort()
                i = find(teams)
                j = find_other(teams)
                
            if i>1:
                print "IMPOSSIBLE"
            else:
                print "%i:%i" %(count+count2,count2)
            
        '''if j!=1:
            mingd = teams[1].gfor-teams[1].gagainst
            gd = mingd-(teams[i].gfor-teams[i].gagainst)
            if teams[i].name > teams[1].name:
                gd += 1
            print "%i:0" %(gd)
            
        else:
            if i==2:
                mingd = teams[1].gfor-teams[1].gagainst
                gd = mingd-(teams[i].gfor-teams[i].gagainst)
                gd /= 2
                teams
                if teams[i].name > teams[1].name:
                    gd += 1
                print "%i:0" %(gd)'''
            
            
            