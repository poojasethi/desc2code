import copy
import collections

teams = {}
times = collections.defaultdict(int)

def putTeam(s):
    if not s[0] in teams:
        teams[s[0]] = [0, 0, 0, s[0]]
    if not s[1] in teams:
        teams[s[1]] = [0, 0, 0, s[1]]
    g1, g2 = map(int, s[2].split(':'))
    if g1 > g2:
        teams[s[0]][0] -= 3
        teams[s[1]][0] -= 0
    elif g1 < g2:
        teams[s[0]][0] -= 0
        teams[s[1]][0] -= 3
    else:
        teams[s[0]][0] -= 1
        teams[s[1]][0] -= 1
    teams[s[0]][1] -= g1 - g2
    teams[s[1]][1] -= g2 - g1
    teams[s[0]][2] -= g1
    teams[s[1]][2] -= g2


def addTimes(s):
    times[s[0]] += 1
    times[s[1]] += 1

for _ in xrange(5):
    s = raw_input().split()
    putTeam(s)
    addTimes(s)

myTeam = "BERLAND"
anotherTeam = ""
for k, v in times.items():
    if v == 2 and k != myTeam:
        anotherTeam = k

backupTeams = copy.deepcopy(teams)
answer = (10000000, 0, "IMPOSSIBLE")
for g1 in xrange(60):
    for g2 in xrange(60):
        if g1 > g2:
            teams = copy.deepcopy(backupTeams)
            putTeam(("%s %s %d:%d" % (myTeam, anotherTeam, g1, g2)).split())
            s = sorted(teams.values())
            if myTeam == s[0][3] or myTeam == s[1][3]:
                answer = min(answer, (g1 - g2, g2, "%d:%d" % (g1, g2)))
print answer[2]