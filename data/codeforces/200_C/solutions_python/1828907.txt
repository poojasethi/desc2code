from sys import stdin

in_lines = stdin.readlines()

def int_values(line) :
    return map( int, line.split(' ') )

lines = map( lambda x:x.strip(), in_lines  )

r1 = {}
r2 = {}
r3 = {}
r4 = []

for l in lines :
    a, b, m = l.split(' ')
    am, bm = map(int, m.split(':'))
    r4 += [a, b]
    #print a, b, am, bm
    for k in (a, b) :
        try :
            r1[k]
        except KeyError :
            r1[k] = 0
            r2[k] = 0
            r3[k] = 0
    r1[a] += (am > bm ) * 3 + (am == bm) * 1
    r1[b] += (am < bm ) * 3 + (am == bm) * 1
    r2[a] += am - bm
    r2[b] += bm - am
    r3[a] += am
    r3[b] += bm

#print r1
#print r2
#print r3
r4.sort()
last = filter( lambda x: 2 == len(filter(lambda y: x == y and y != 'BERLAND', r4) ), r1.keys() )[0]
good = []
for x in range(1, 100) :
    for y in range(x) :
        a, b, am, bm = 'BERLAND', last, x, y
        dr1 = dict()
        dr2 = dict()
        dr3 = dict()
        for k in r1.keys() :
            dr1[k] = 0
            dr2[k] = 0
            dr3[k] = 0
        dr1[a] = (am > bm ) * 3 + (am == bm) * 1
        dr1[b] = (am < bm ) * 3 + (am == bm) * 1
        dr2[a] = am - bm
        dr2[b] = - am + bm
        dr3[a] = am
        dr3[b] = bm
        tourney = []
        for k in r1.keys() :
            xr1 = r1[k] + dr1[k]
            xr2 = r2[k] + dr2[k]
            xr3 = r3[k] + dr3[k]
            tourney.append((-xr1, -xr2, -xr3, k))
        tourney.sort()
        #print x, y, tourney[0][3], tourney[1][3]
        if tourney[0][3] == 'BERLAND' or tourney[1][3] == 'BERLAND' :
            good.append((x - y, y, x, y))
good.sort()
if len(good) :
    print ''.join(map(str, (good[0][2], ':', good[0][3])))
else :
    print 'IMPOSSIBLE'
