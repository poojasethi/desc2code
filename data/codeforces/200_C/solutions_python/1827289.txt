def calc(games):
  cmds = games.keys()
  score = dict()
  gin = dict()
  gout = dict()
  for cmd in cmds:
    score[cmd] = 0
    gin[cmd] = 0
    gout[cmd] = 0
  for play1 in cmds:
    for play2 in cmds:
      if games[play1][play2] == False:
        continue
      gin[play1] += games[play1][play2][0]
      gout[play1] += games[play1][play2][1]
      if games[play1][play2][0] > games[play1][play2][1]:
        score[play1] += 3
      elif games[play1][play2][0] == games[play1][play2][1]:
        score[play1] += 1
  cs = sorted([(-score[cmd], -gin[cmd]+gout[cmd], -gin[cmd], cmd) for cmd in cmds])
  return 'BERLAND' in tuple(x[3] for x in cs[:2])

games = {}
lines = []
for x in range(5):
  line = raw_input()
  lines += [line]

cmds = set()
for line in lines:
  l = line.split()
  cmds.add(l[0])
  cmds.add(l[1])

bs = {'BERLAND'}

games = dict((cmd1, dict((cmd2, False) for cmd2 in cmds)) for cmd1 in cmds)

for line in lines:
  l = line.split()
  games[l[0]][l[1]] = tuple(map(int, l[2].split(':')))
  games[l[1]][l[0]] = tuple(map(int, reversed(l[2].split(':'))))
  if 'BERLAND' in (l[0], l[1]):
    bs.add(l[0])
    bs.add(l[1])

cmd1 = 'BERLAND'
cmd2 = cmds.difference(bs).pop()

minans = False

for s1 in range(50):
  for s2 in range(s1):
    g1 = games
    g1[cmd1][cmd2] = (s1,s2)
    g1[cmd2][cmd1] = (s2,s1)
    if not calc(g1):
      continue
    if minans == False:
      minans = (s1,s2)
    else:
      if s1-s2 < minans[0]-minans[1]:
        minans = (s1,s2)
      elif s1-s2 == minans[0]-minans[1]:
        if s2 < minans[1]:
          minans = (s1,s2)

if minans == False:
  print('IMPOSSIBLE')
else:
  print('%d:%d' % minans)
