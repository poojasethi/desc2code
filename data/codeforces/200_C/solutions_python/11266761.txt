cnt = 0
MAP = {}
MAPD = {}
R = [
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0],
        [0, 0, 0, 0]]

def getNo(s):
        global cnt
        if MAP.get(s, "") == "":
                MAP[s] = cnt
                MAPD[s] = 0
                cnt += 1
        MAPD[s] += 1
        return MAP[s]

def proc(na, nb, x, y):
        global R
        diff = x-y
        if diff == 0:
                R[na][0] += 1
                R[nb][0] += 1
        elif diff > 0:
                R[na][0] += 3
        else:
                R[nb][0] += 3
        R[na][1] += diff
        R[nb][1] -= diff
        R[na][2] += x
        R[nb][2] += y

for _ in xrange(5):
        a, b, s = raw_input().split()
        x, y = map(int, s.split(':'))
        proc(getNo(a), getNo(b), x, y)

# get opponent
for k in MAPD:
        v = MAPD[k]
        if MAPD[k] == 2 and k != "BERLAND":
                OPP = k

NMAP = MAP.items()
NMAP.sort(reverse=True)
for i in xrange(4):
        cna = NMAP[i][0]
        cno = NMAP[i][1]
        R[cno][3] = i
        MAP[cna] = i

bbb = MAP["BERLAND"]
ooo = MAP[OPP]

def find(v):
        for i in xrange(4):
                if R[i][3] == v:
                        return i

# cases
ber = find(bbb)
opp = find(ooo)
R[ber][0] += 3
for i in xrange(1, 100):
        R[ber][1] += 1
        R[opp][1] -= 1
        R[ber][2] += 1
        for j in xrange(100):
                R[ber][2] += j
                R[opp][2] += j
                R.sort(reverse=True)
                if R[0][3] == bbb or R[1][3] == bbb:
                        print "%d:%d" % (i+j, j)
                        exit()
                ber = find(bbb)
                opp = find(ooo)
                R[ber][2] -= j
                R[opp][2] -= j

print "IMPOSSIBLE"


 	  	    	 		 		  	     				 		