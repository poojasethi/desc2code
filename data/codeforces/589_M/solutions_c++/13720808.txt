#pragma comment(linker, "/STACK:102400000,102400000")
#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100005

template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}

bool b[105][105];
int n,w,l,dir[][2]={-1,0,1,0,0,-1,0,1};
struct P{
    int x,y;
    P(int _x=0,int _y=0):x(_x),y(_y){}
    int dist(const P&a)const{
        return abs(x-a.x)+abs(y-a.y);
    }
    void mark(){
        b[x][y]=1;
    }
    bool valid(){
        return x>=0&&x<=w&&y>=0&&y<=l;
    }
    bool operator !=(const P&a)const{
        return x!=a.x||y!=a.y;
    }
}p[105];
double a,vm,vp,f[105][105],vm2,vp2;
int d[105][105];
void bfs(P s){
    memset(d,-1,sizeof(d));
    queue<P>q;d[s.x][s.y]=0;
    q.push(s);
    while(!q.empty()){
        P e=q.front();q.pop();
        if(e!=s&&b[e.x][e.y])continue;
        for(int i=0;i<4;i++){
            int nx=e.x+dir[i][0],ny=e.y+dir[i][1];
            P ee=P(nx,ny);
            if(ee.valid()&&d[nx][ny]==-1){
                d[nx][ny]=d[e.x][e.y]+1;
                q.push(ee);
            }
        }
    }
}
double sqr(double x){return x*x;}
double cal(int i,int j,int d,int flag=1){
    if(i==n||j==0||d<0)return 1e9;
    if(i==j)return 0;
    double va=i==0?0:vp,va2=sqr(va);
    if(j==n&&flag){
        if(vm2-va2<2*a*d)return (vm-va)/a+(d-(vm2-va2)/2/a)/vm;
        else return (sqrt(2*a*d+va2)-va)/a;
    }
    if(i==0&&(vp2-va2)/2/a>=d)return 1e10;
    if(2*vm2-va2-vp2>2*a*d){
        double x=sqrt((va2+vp2+2*a*d)/2);
        return (x-va+x-vp)/a;
    }
    else return (2*vm-va-vp)/a+(d-(2*vm2-va2-vp2)/2/a)/vm;
}
int main(){
    //ios::sync_with_stdio(0);
    int T,i,j,k,m,ca=0;
    scanf("%d%d%d%lf%lf%lf",&w,&l,&n,&a,&vm,&vp);
    if(vp>vm)vp=vm;
    vm2=sqr(vm),vp2=sqr(vp);
    int x1,y1,x2,y2;
    scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
    p[0]=P(x1,y1);
    for(i=1;i<=n;i++){
        scanf("%d%d",&p[i].x,&p[i].y);
        double t=cal(0,i,p[0].dist(p[i]),0);
        if(t<1e9){
            p[i].mark();
        }
        else i--,n--;
    }
    n++;
    p[n]=P(x2,y2);
    for(i=0;i<=n;i++){
        bfs(p[i]);
        for(j=0;j<=n;j++){
            f[i][j]=cal(i,j,d[p[j].x][p[j].y]);
        }
    }
    for(k=0;k<=n;k++)
        for(i=0;i<=n;i++)
            for(j=0;j<=n;j++)
                f[i][j]=min(f[i][j],f[i][k]+f[k][j]);
    printf("%.15lf\n",f[0][n]);
    return 0;
}