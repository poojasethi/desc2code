#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <cassert>
using namespace std;
#define rep(i,a,n) for (int i=a;i<n;i++)
#define per(i,a,n) for (int i=n-1;i>=a;i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define SZ(x) ((int)(x).size())
typedef vector<int> VI;
typedef long long ll;
typedef pair<int,int> PII;
const ll mod=1000000007;
ll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
// head

#define y1 safdasfdfasdfa
const int DX[]={1,0,-1,0},DY[]={0,1,0,-1};
const int N=110;
PII q[N*N];
int vis[N][N],mark[N][N],dis[N][N],h,w,n,x1,y1,x2,y2,x[N],y[N];
double a,vmax,vp,g[N][N];
void bfs(int sx,int sy,double v) {
    rep(i,0,h+1) rep(j,0,w+1) vis[i][j]=0,dis[i][j]=0;
    int t=0; q[t++]=mp(sx,sy); vis[sx][sy]=1;
    mark[sx][sy]=0;
    rep(i,0,t) {
        int x=q[i].fi,y=q[i].se;
        if (mark[x][y]&&2*a*dis[x][y]+v*v>=vp*vp) continue;
        rep(k,0,4) {
            int nx=x+DX[k],ny=y+DY[k];
            if (nx>=0&&nx<=h&&ny>=0&&ny<=w&&!vis[nx][ny]) {
                q[t++]=mp(nx,ny); vis[nx][ny]=1; dis[nx][ny]=dis[x][y]+1;
            }
        }
    }
    mark[sx][sy]=1;
}
double ff(double v0,double v1,double x) {
    double v2=sqrt(a*x+(v0*v0+v1*v1)/2);
    if (v2<=vmax) return (v2-v0+v2-v1)/a;
    else return (x-(vmax*vmax-v0*v0)/2/a-(vmax*vmax-v1*v1)/2/a)/vmax+(vmax-v0+vmax-v1)/a;
}
double gg(double v,double x) {
    double v2=sqrt(v*v+2*a*x);
    if (v2<=vmax) return (v2-v)/a;
    else return (x-(vmax*vmax-v*v)/2/a)/vmax+(vmax-v)/a;
}
int main() {
//  freopen("in","r",stdin);
    scanf("%d%d%d%lf%lf%lf",&h,&w,&n,&a,&vmax,&vp);
    vp=min(vp,vmax);
    scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
    rep(i,0,n) scanf("%d%d",x+i,y+i),mark[x[i]][y[i]]=1;
    bfs(x1,y1,0);
    rep(i,0,n+2) rep(j,0,n+2) g[i][j]=1e30*(i!=j);
    rep(i,0,n) if (vis[x[i]][y[i]]&&dis[x[i]][y[i]]>=vp*vp/2/a) {
        g[n][i]=ff(0,vp,dis[x[i]][y[i]]);
//      printf("%d %d %.10f\n",n,i,g[n][i]);
    }
    if (vis[x2][y2]) {
        g[n][n+1]=gg(0,dis[x2][y2]);
//      printf("%d %d %d %.10f\n",n,n+1,dis[x2][y2],g[n][n+1]);
    }
    rep(i,0,n) {
        bfs(x[i],y[i],vp);
        rep(j,0,n) if (vis[x[j]][y[j]]) g[i][j]=ff(vp,vp,dis[x[j]][y[j]]);
        if (vis[x2][y2]) {
            g[i][n+1]=gg(vp,dis[x2][y2]);
//          printf("%d %d %d %.10f\n",i,n+1,dis[x2][y2],g[i][n+1]);
        }
    }
    rep(k,0,n+2) rep(i,0,n+2) rep(j,0,n+2) if (i!=k&j!=k&&i!=j)
        g[i][j]=min(g[i][j],g[i][k]+g[k][j]);
    printf("%.10f\n",g[n][n+1]);
}