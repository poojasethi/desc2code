#include <bits/stdc++.h>
using namespace std;
typedef pair <int, int> PII;
#define X first
#define Y second
#define M 3030
PII p[M];
int r, c, n, m;

__int64 ans;

int q[M][M], d[M], L[M], R[M], cnt[M];

void update(int x, int y) {
	q[x][d[x]++] = y;
	for (int i = 0; i <= m + 3; i++) R[i] = c + 1, L[i] = 0;
	L[0] = y; R[0] = y;
	for (int i = x; i; i--) {
		int o = upper_bound(q[i], q[i] + d[i], y) - q[i];
		int j = o - 1, k = 0;
		while (j >= 0 && k <= m + 1) {
			int u = q[i][j];
			if (L[k+1] == L[k]) k++;
            if (L[k+1] < u) {
                for (int I = m + 1; I >= k + 2; I--) L[I] = L[I-1]; L[k+1] = u;
				j--; k++;
            }
			else k++;
		}
		j = o, k = 0;
		while (j < d[i] && k <= m + 1) {
			int u = q[i][j];
			if (R[k+1] == R[k]) k++;
            if (u < R[k+1]) {
                for (int I = m + 1; I >= k + 2; I--) R[I] = R[I-1]; R[k+1] = u;
				j++; k++;
            }
			else k++;
		}
		for (k = 0; k <= m; k++)
			ans += 1LL * (L[k] - L[k+1]) * (R[m - k + 1] - R[m - k]) * (r - x + 1);
	}
}

int main() {
//	freopen("E.in", "r", stdin);
	scanf("%d %d %d %d", &r, &c, &n, &m);
	for (int i = 0; i < n; i++) {
		scanf("%d %d", &p[i].X, &p[i].Y);
	}
	sort(p, p + n);
	for (int i = 0; i < n; i++) update(p[i].X, p[i].Y);
	printf("%I64d\n", ans);
}
