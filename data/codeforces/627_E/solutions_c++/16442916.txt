#include <bits/stdc++.h>
using namespace std;
#define LL long long
int R,C,N,K,head,tail;
LL ans,res;
class poi{
	public:
	int x,y;
}P[3010];
int st[3010],ne[3010];
int pre[3010],nex[3010],nexK[3010];
vector <int > q;
bool cmpr(const int &A,const int &B){return P[A].x<P[B].x||(P[A].x==P[B].x&&P[A].y<P[B].y);}
int calc(int x){
	if (!x||x==N+1)return 0;
	int xd,xu;
	if (nexK[x]==tail)return 0;
	xd=P[x].x-P[pre[x]].x;
	xu=R+1-P[nexK[x]].x;
	return xd*xu;
}
int main(){
	scanf("%d%d%d%d",&R,&C,&N,&K);
	for (int i=1;i<=N;i++){
		scanf("%d%d",&P[i].x,&P[i].y);
		ne[i]=st[P[i].y];
		st[P[i].y]=i;
	}
	P[N+1].x=R+1;
	for (int l=1;l<=C;l++){
		for (int i=1;i<=N;i++)
			if (P[i].y>=l)
				q.push_back(i);
		sort(q.begin(),q.end(),cmpr);
		memset(nex,0,sizeof(nex));
		memset(nexK,0,sizeof(nexK));
		memset(pre,0,sizeof(pre));
		head=0,tail=N+1;
		pre[0]=0;nex[0]=N+1;pre[N+1]=0;nex[N+1]=tail;
		int len=q.size();
		for (int i=0;i<len;i++){
			int t=pre[tail];
			pre[tail]=q[i];pre[q[i]]=t;
			nex[q[i]]=tail;nex[t]=q[i];
		}
		res=0;
		for (int x=nex[head];x!=tail;x=nex[x]){
			int y=x;
			for (int i=1;i<K;i++)y=nex[y];
			nexK[x]=y;
			res=res+calc(x);
		}
		for (int r=C;r>=l;r--){
			ans=ans+res;
/*			for (int j=st[r];j;j=ne[j]){
				int x=j;
			}*/
			for (int j=st[r];j;j=ne[j]){
				int x=j,y=x;
				res=res-calc(x);
				for (int i=1;i<K;i++){
					y=pre[y];
					res=res-calc(y);
					nexK[y]=nex[nexK[y]];
					res=res+calc(y);
				}
				res=res-calc(nex[x]);
				nexK[x]=tail;
				pre[nex[x]]=pre[x];
				nex[pre[x]]=nex[x];
				res=res+calc(nex[x]);
				pre[x]=nex[x]=0;
			}
		}
		q.clear();
	}
	printf("%I64d",ans);
}