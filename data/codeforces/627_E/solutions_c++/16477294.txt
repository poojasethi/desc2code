#pragma comment(linker, "/STACK:102400000,102400000")
#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define x first
#define y second
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define ll long long 
#define inf 1000000007
#define mod 1000000007
#define pi acos(-1)
#define N 200010
#define DBG(x) cerr<<(#x)<<"="<<x<<endl;
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)

template <class T,class U> inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U> inline void Min(T &a,U b){if(a>b)a=b;}

inline void add(int &a,int b){a+=b;while(a>=mod)a-=mod;}

int pow(int a,int b){
    int ans=1;
    while(b){
        if(b&1)ans=1LL*ans*a%mod;
        a=1LL*a*a%mod;b>>=1;
    }
    return ans;
}

int cnt[3003],pr[3003],ne[3003];
vi a[3003];
int main(){
    int i,j,k,T;
    int r,c,n;
    scanf("%d%d%d%d",&r,&c,&n,&k);
    for(i=0;i<n;i++){
        int x,y;
        scanf("%d%d",&x,&y);
        a[x].pb(y);
    }
    for(i=1;i<=r;i++)sort(all(a[i]));
    ll ans=1LL*(r+1)*r/2*((c+1)*c/2);
    for(i=1;i<=r;i++){
        memset(cnt,0,sizeof(cnt));
        for(j=1;j<=i;j++)FOREACH(it,a[j])cnt[*it]++;
        int last=0;
        for(j=1;j<=c;j++){
            if(cnt[j])pr[j]=last,last=j;
        }
        last=c+1;
        for(j=c;j;j--){
            if(cnt[j])ne[j]=last,last=j;
        }
        for(j=1;j<=i;j++)
            for(int k=a[j].size()-1;k>=0;k--){
                int y=a[j][k];
                --cnt[y];
                if(cnt[y]==0){
                    pr[ne[y]]=pr[y];
                    ne[pr[y]]=ne[y];
                }
            }
        int cur=c*(c+1)/2;
        for(j=i;j;j--){
            FOREACH(it,a[j]){
                if(cnt[*it]==0){
                    ne[pr[*it]]=*it;
                    pr[ne[*it]]=*it;
                }
                ++cnt[*it];
                int st=*it,sum=cnt[*it];
                while(sum<k&&pr[st])sum+=cnt[st=pr[st]];
                int ed=*it;
                while(st<=*it){
                    while(sum<k&&ne[ed]<=c)sum+=cnt[ed=ne[ed]];
                    if(sum<k)break;
                    if(sum==k)cur-=(st-pr[st])*(ne[ed]-ed);
                    sum-=cnt[st];
                    st=ne[st];
                }
            }
            ans-=cur;
        }
    }
    cout<<ans<<"\n";
    return 0;
}