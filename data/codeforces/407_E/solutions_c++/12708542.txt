#include <map>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define n   200005
#define For(i,a,b)  for(int i=a;i<=b;i++)

int     N,K,D,A[n],S1[n],S2[n],Min[n<<2],Laz[n<<2];
map<int,int>G;

void    Upd(int u,int t)    {Min[u]+=t;Laz[u]+=t;}
void    Dn(int u)   {
        if  (Laz[u])Upd(u<<1,Laz[u]),Upd(u<<1|1,Laz[u]),Laz[u]=0;
}
void    Up(int u)   {Min[u]=min(Min[u<<1],Min[u<<1|1]);}

void    Build(int u,int l,int r){
        Min[u]=l;   Laz[u]=0;   int Mid=l+r>>1;
        if  (l^r)   Build(u<<1,l,Mid),Build(u<<1|1,Mid+1,r);
}
void    Modify(int u,int l,int r,int x,int y,int t){
        if  (x<=l&&r<=y)    {Upd(u,t);return;}  int Mid=l+r>>1; Dn(u);
        if  (x<=Mid)    Modify(u<<1,l,Mid,x,y,t);
        if  (Mid<y)     Modify(u<<1|1,Mid+1,r,x,y,t);   Up(u);
}
int     Query(int u,int l,int r,int x,int y,int t){
        if  (Min[u]>t)  return  -1;
        if  (l==r)  return  l;  int Mid=l+r>>1,p=-1;    Dn(u);
        if  (x<=Mid)    p=Query(u<<1,l,Mid,x,y,t);
        return  p!=-1?p:Query(u<<1|1,Mid+1,r,x,y,t);
}

int     main(){
        scanf("%d%d%d",&N,&K,&D);
        For(i,1,N)  scanf("%d",&A[i]),A[i]+=1000000000;
        if  (!D)    {
            int Ans=0,ret=1;
            for (int i=1,j;i<=N;i=j+1){
                for (j=i;j+1<=N&&A[j+1]==A[i];j++);
                if  (j-i>Ans)   Ans=j-i,ret=i;
            }
            printf("%d %d\n",ret,ret+Ans);  return 0;
        }

        int Ans=0,ret=1;
        for (int L=1,R,T1,T2;L<=N;L=R+1){
            for (R=L;R+1<=N&&A[R+1]%D==A[L]%D;R++); Build(1,L,R);
            For(i,L,R)  A[i]/=D;    G.clear();  T1=T2=0;

            for (int i=L,j=L;i<=R;i++){
                for (G[A[i]]++;G[A[i]]>1;G[A[j]]--,j++);
                for (;T1&&A[i]>=A[S1[T1]];T1--) Modify(1,L,R,S1[T1-1]+1,S1[T1],A[i]-A[S1[T1]]);
                for (;T2&&A[i]<=A[S2[T2]];T2--) Modify(1,L,R,S2[T2-1]+1,S2[T2],A[S2[T2]]-A[i]);
                S1[++T1]=S2[++T2]=i;

                int t=Query(1,L,R,j,i,i+K);
                if  (i-t>Ans)   Ans=i-t,ret=t;
            }
        }
        printf("%d %d\n",ret,ret+Ans);
}