#include<cstdio>
#include<map>
using namespace std;
#define all 1,n
inline void readi(int &x);
const int maxn=200005;

template<class T> inline bool ten(T &x,const T &y){return y<x?(x=y,1):0;}
template<class T> inline bool rel(T &x,const T &y){return x<y?(x=y,1):0;}

inline int mod(const int &x,const int &y){int t=x%y;return t<0?t+y:t;}

int K,D,seq[maxn],len;
int *a,n;
int pre[maxn],s0[maxn],t0,s1[maxn],t1;

struct node
{
	int dta;
	int key,mn;
	node *lc,*rc;
	inline void tagdta(const int &x)
	{key+=x,mn+=x,dta+=x;}
	inline void update()
	{mn=min(lc->mn,rc->mn);}
	inline void downdate()
	{
		if(dta)
		{
			lc->tagdta(dta);
			rc->tagdta(dta);
			dta=0;
		}
	}
	void add(int l,int r,const int &a,const int &b,const int &c)
	{
		if(l>=a&&r<=b)tagdta(c);
		else
		{
			int mid=l+r>>1;
			downdate();
			if(a<=mid)lc->add(l,mid,a,b,c);
			if(b>mid)rc->add(mid+1,r,a,b,c);
			update();
		}
	}
	int pop(int l,int r)
	{
		if(l==r)return l;
		downdate();
		if(lc->mn<=K)return lc->pop(l,l+r>>1);
		else return rc->pop(l+r+2>>1,r);
	}
	int get(int l,int r,const int &a,const int &b)
	{
		if(l>=a&&r<=b)
			return mn<=K?pop(l,r):-1;
		int mid=l+r>>1,t=-1;
		downdate();
		if(a<=mid)t=lc->get(l,mid,a,b);
		if(t!=-1)return t;
		if(b>mid)t=rc->get(mid+1,r,a,b);
		return t;
	}
}ndl[maxn*3],*root;
int ns=1;

node* build(int l,int r)
{
	node *c=ndl+ns++;
	if(l!=r)c->lc=build(l,l+r>>1),c->rc=build(l+r+2>>1,r);
	return c;
}

void calc(int &L,int &R)
{
	L=R=0;
	int best=0;
	map<int,int> b;
	for(int i=1;i<=n;i++)
	{
		int &t=b[a[i]];
		pre[i]=t;
		t=i;
	}
	root=build(1,n);
	*s0=*s1=t0=t1=0;
	for(int i=1,j,mp=0;i<=n;i++)
	{
		if(i>1)root->add(all,1,i-1,-1);
		for(;t0&&a[i]<a[s0[t0]];t0--)
			root->add(all,s0[t0-1]+1,s0[t0],a[s0[t0]]);
		root->add(all,s0[t0]+1,i,-a[i]);
		s0[++t0]=i;
		for(;t1&&a[i]>a[s1[t1]];t1--)
			root->add(all,s1[t1-1]+1,s1[t1],-a[s1[t1]]);
		root->add(all,s1[t1]+1,i,a[i]);
		s1[++t1]=i;
		rel(mp,pre[i]);
		j=root->get(all,mp+1,i);
		if(i-j>R-L)L=j,R=i;
	}
}

void work()
{
	int L=1,R=1,l,r;
	for(int i=1,j,t,u;i<=len;i=j)
	{
		t=mod(seq[i],D);
		for(j=i;j<=len&&(u=mod(seq[j],D))==t;j++)seq[j]=(seq[j]-u)/D;
		a=seq+i-1,n=j-i;
		calc(l,r);
		if(r-l>R-L)L=l+i-1,R=r+i-1;
	}
	printf("%d %d\n",L,R);
}

void work0()
{
	int L=1,R=1;
	for(int i=1,j;i<=len;i=j)
	{
		for(j=i;j<=len&&seq[j]==seq[i];j++);
		if(j-i>R-L+1)L=i,R=j-1;
	}
	printf("%d %d\n",L,R);
}

void init()
{
	readi(len),readi(K),readi(D);
	for(int i=1;i<=len;i++)
		readi(seq[i]);
}

int main()
{
	init();
	if(D==0)work0();
	else work();
	return 0;
}

inline void readi(int &x)
{
  char c;bool fl;
  while(c=getchar(),c!='-'&&(c>'9'||c<'0'));
  if(c=='-')fl=1,x=0;
  else fl=0,x=c^'0';
  while(c=getchar(),c>='0'&&c<='9')x=x*10+(c^'0');
  if(fl)x=-x;
}
