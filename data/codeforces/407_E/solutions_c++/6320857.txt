#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<vector>
#include<map>
#include<queue>
#include<string>
#include<bitset>
#include<iomanip>
#include<iostream>
#include<cmath>
using namespace std;

#define rep(i,x,y) for(i=x;i<=y;i++)
#define _rep(i,x,y) for(i=x;i>=y;i--)
#define CL(S,x) memset(S,x,sizeof(S))
#define CP(S1,S2) memcpy(S1,S2,sizeof(S2))
#define ALL(x,S) for(x=S.begin();x!=S.end();x++)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define fi first
#define se second
#define upmin(x,y) x=min(x,y)
#define upmax(x,y) x=max(x,y)
#define pb push_back
#define COUT(S,x) cout<<fixed<<setprecision(x)<<S<<endl

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;

template<class T> inline void read(T&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};
template<class T> inline void read(T&x,T&y){read(x);read(y);}
template<class T> inline void read(T&x,T&y,T&z){read(x);read(y);read(z);}
inline char getc(){char c;for(c=getchar();c<=32;c=getchar());return c;}

const int N=200010;
const int D=N<<2;
const int inf=int(2e9);
int n,K,d,i,j,k,l,li,p,ok,ans,st,res,ki;
int a[N],b[N];
bool upmaxs(int&x,int y){return y>x?x=y,1:0;}

pii c[N];int la[N];
int q1[N],h1,q2[N],h2;

struct seg
{
	int smax[D],smin[D],tmax[D],tmin[D],opt[D];
	int L[D];bool lef[D];
	void pmax(int i,int s)
	{
		opt[i]=s+smin[i];tmax[i]=s;smax[i]=s+L[i];
	}
	void pmin(int i,int s)
	{
		opt[i]=s+smax[i];tmin[i]=s;smin[i]=s+L[i];
	}
	void pdown(int i)
	{
		if(tmax[i]!=inf)pmax(i*2,tmax[i]),pmax(i*2+1,tmax[i]),tmax[i]=inf;
		if(tmin[i]!=inf)pmin(i*2,tmin[i]),pmin(i*2+1,tmin[i]),tmin[i]=inf;
	}
	void upd(int i)
	{
		opt[i]=min(opt[i*2],opt[i*2+1]);
		smin[i]=min(smin[i*2],smin[i*2+1]);
		smax[i]=min(smax[i*2],smax[i*2+1]);
	}
	int get(int i)
	{
		if(opt[i]>res)return inf;
		if(lef[i])return L[i];
		pdown(i);int ans=(opt[i*2]<=res)?get(i*2):get(i*2+1);upd(i);
		return ans;
	}
	void find(int i,int x,int y,int l,int r)
	{
		if(y<l||x>r)return;
		if(x>=l&&y<=r)
		{
			if(ki==1)pmax(i,res);
			else if(ki==2)pmin(i,res);
			else upmin(ok,get(i));
			return;
		}
		pdown(i);
		find(i*2,x,(x+y)/2,l,r);
		find(i*2+1,(x+y)/2+1,y,l,r);
		upd(i);
	}
	void bui(int i,int x,int y)
	{
		tmax[i]=tmin[i]=inf;
		smax[i]=smin[i]=opt[i]=L[i]=x;
		if(x!=y){bui(i*2,x,(x+y)/2);bui(i*2+1,(x+y)/2+1,y);}
		else lef[i]=1;
	}
}T;
int main()
{
    //freopen("1.in","r",stdin);freopen("1.out","w",stdout);
	
	read(n,K,d);
	rep(i,1,n)read(a[i]);
	if(d==0)
	{
		for(i=1;i<=n;i=j+1)
		{
			for(j=i;j<=n&&a[j]==a[i];j++);j--;
			if(upmaxs(ans,j-i+1))st=i;
		}
		printf("%d %d\n",st,st+ans-1);return 0;
	}
	rep(i,1,n)b[i]=(a[i]%d+d)%d;
	
	rep(i,1,n)c[i]=mp(a[i],i);sort(c+1,c+1+n);
	rep(i,1,n)
	{
		p=lower_bound(c+1,c+1+n,mp(a[i],i))-c;
		if(p>1&&c[p-1].fi==a[i])la[i]=c[p-1].se;
	}
	
	rep(i,1,n)a[i]=(a[i]-b[i])/d;
	
	T.bui(1,1,n);
	b[0]=-1;
	rep(p,1,n)
	{
		if(b[p]!=b[p-1])li=p;upmax(li,la[p]+1);
		
		for(;h1>0&&a[p]>=a[q1[h1]];h1--);
		res=a[p];ki=1;T.find(1,1,n,q1[h1]+1,p);
		for(;h2>0&&-a[p]>=-a[q2[h2]];h2--);
		res=-a[p];ki=2;T.find(1,1,n,q2[h2]+1,p);
		q1[++h1]=p;q2[++h2]=p;
		
		res=p+K;ki=3;ok=inf;T.find(1,1,n,li,p);
		//printf("%d %d\n",ok,p);
		if(upmaxs(ans,p-ok+1))st=ok;
	}
	
	printf("%d %d\n",st,st+ans-1);
    scanf("\n");
    return 0;
}
