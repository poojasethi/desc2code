#include<bits/stdc++.h>
#define MAXN 200009
#define INF 1000000007
#define imx 2147483647
#define LLINF 1000000000000000007
#define mp(x,y) make_pair(x,y)
#define wr cout<<"Continue Debugging!!!"<<endl;
#define all(x) x.begin(),x.end()
#define ff first
#define ss second
#define pb(x) push_back(x)
#define ppb() pop_back()
#define f(x,y,z) mp(x,mp(y,z))
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i!=(c).end(); i++)
using namespace std;
typedef long long ll;
typedef pair<int,int>PII;
typedef pair<int,pair<int,int> >data;
template<class T> bool umin(T& a, T b) { if(a > b){ a = b;return 1;}return 0;}
template<class T> bool umax(T& a, T b) { if(a < b){ a = b;return 1;}return 0;}
//freopen(".in", "r", stdin);
//freopen(".out", "w", stdout);
int n,d,k,arr[MAXN],D[MAXN],s[MAXN<<2],lazy[MAXN<<2];
map<int,int>H;
void shift(int nd){
	if(lazy[nd]==0)
		return;
	lazy[nd<<1]+=lazy[nd];
	lazy[nd<<1|1]+=lazy[nd];
	s[nd<<1]+=lazy[nd];
	s[nd<<1|1]+=lazy[nd];
	lazy[nd]=0;
}
void upd(int l,int r,int v,int nd,int x,int y){
	if(l>y or x>r)
		return;
	if(l<=x and y<=r){
		s[nd]+=v;lazy[nd]+=v;
		return;
	}
	shift(nd);
	int mid=(x+y)>>1;
	upd(l,r,v,nd<<1,x,mid);
	upd(l,r,v,nd<<1|1,mid+1,y);	
	s[nd]=min(s[nd<<1],s[nd<<1|1]);
}
int tap(int l,int r,int nd,int x,int y){
	if(l>y or x>r or s[nd]>k)
		return -1;
	if(x==y){
		if(s[nd]<=k)
			return x;
		return -1;	
	}
	shift(nd);int mid=(x+y)>>1;
	int i2=tap(l,r,nd<<1|1,mid+1,y);
	if(i2!=-1)
		return i2;
	return tap(l,r,nd<<1,x,mid);		
}
int main(){
	scanf("%d%d%d",&n,&k,&d);
	for(int i=1;i<=n;i++)
		scanf("%d",arr+i);
	if(!d){
		int c=1,mx=0,l=1,r=1;
		for(int i=1;i<=n;i++){
			while(c<=n and arr[i]==arr[c])
				c++;	
			if((c-1)-i>mx){
				l=i;r=c-1;
				mx=r-l;
			}
		}
		if(printf("%d %d\n",l,r)!=~123456789)
			return 0;
	}
	int c=1;
	for(int i=1;i<=n;i++){
		while(c<=n and abs(arr[i]-arr[c])%d==0 and !H[arr[c]])
			H[arr[c++]]++;D[i]=c-1;
		--H[arr[i]];arr[i]/=d;
	}
	stack<data>mx,mn;
	mx.push(f(-imx,n+1,n+1));
	mn.push(f(imx,n+1,n+1));
	int mm=0,l=1,r=1;
	for(int i=n;i>=1;i--){
		int L=i,R=i;
		while(!mx.empty() and mx.top().ff<=arr[i]){
			L=mx.top().ss.ss;
			upd(mx.top().ss.ff,mx.top().ss.ss,arr[i]-mx.top().ff,1,1,n);
			mx.pop();
		}
		while(!mn.empty() and mn.top().ff>=arr[i]){
			R=mn.top().ss.ss;
			upd(mn.top().ss.ff,mn.top().ss.ss,mn.top().ff-arr[i],1,1,n);
			mn.pop();
		}
		mx.push(f(arr[i],i,L));
		mn.push(f(arr[i],i,R));
		int ans=tap(i,D[i],1,1,n);
		if(ans!=-1 and ans-i>=mm){
			l=i;r=ans;
			mm=r-l;
		}
		upd(i,n,-1,1,1,n);
	}
	if(printf("%d %d\n",l,r)!=~123456789)
		return 0;
}