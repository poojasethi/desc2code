#include <cstdio>
#include <vector>
#include <algorithm>
#include <string>
#include <cmath>
#include <cstdlib>
#include <set>
using namespace std;
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define sz(a) (int)(a.size())
#define all(a) a.begin(), a.end()
#define R(a) ((a)%mod)

using namespace std;

typedef long long ll;
typedef vector<int> VI;
typedef vector<ll> VL;
typedef vector<VI> VVI;
typedef pair<int, int> PI;
typedef vector<PI> VPI;

ll mod = 1000000007;
int maxn = 1024*1024, two = 2;
VL phi, F, A[4], ans, G[4];

int main(int argc, char const *argv[])
{
	phi = VL(maxn, 0), F = VL(maxn, 0), ans = VL(maxn, 0);
	for(int i = 0; i < 4; i++) {
		A[i] = VL(maxn, 0);
		G[i] = VL(maxn, 0);
	}
	for (ll i = 1; i < maxn; ++i)  {
		phi[i] = R(R(phi[i] + i) + mod);
		F[i] = R(F[i] + phi[i]);

		A[1][i] = R(A[1][i-1] + i);
		A[2][i] = R(A[2][i-1] + (i-1)*(i-1));
		A[3][i] = R(R(i*i)*i);

		for (ll j = 2; i*j < maxn; ++j) {
			phi[i*j] -= phi[i];
			F[i*j] += R(phi[i] * j);
		}

		ans[i] = R(two * A[2][i] + A[3][i] - two*i*(A[1][i]) + two * F[i]);
		ans[i] = R(ans[i] + mod);

		G[0][i] = R(G[0][i-1] + ans[i]);
		G[1][i] = R(G[1][i-1] + ans[i] * i);
		G[2][i] = R(G[2][i-1] + ans[i] * R(i*i));
	}


	int t;
	ll a, b;
	scanf("%d", &t);
	for (int cs = 0; cs < t; ++cs) {
		scanf("%I64d %I64d", &a, &b);
		int n = min(a, b);
		++a, ++b;
		ll res = R(a * b) * G[0][n] - (a+b) * G[1][n] + G[2][n];
		printf("%I64d\n", R(R(res)+mod));
	}


	// cout << phi[maxn-1] << ' ' << F[maxn-1] << ' ' << A[0][maxn-1] << ' ' << A[1][maxn-1] << ' ' << A[2][maxn-1] << ' ' << A[3][maxn-1] <<'\n';

	return 0;
}