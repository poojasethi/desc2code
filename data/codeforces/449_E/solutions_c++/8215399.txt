#include <cstdio>
#include <cstdlib>
typedef long long int ll;
#define sz 1020202
#define ljz 1000000007

void gi(ll &x){char ch = getchar(); x = 0; while (ch < '0' || ch > '9') ch = getchar(); while (ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();}
void pi(ll x){if (x > 9) pi(x / 10); putchar(x % 10 + 48);}

#define F(x) (((2 * x * x * x - 6 * x * x + x) / 3) % ljz)

ll prime[sz], isnp[sz], phi[sz], pc;
ll h[sz], sh[sz], ssh[sz];

void init(){
  ll i, j, k, l;
  phi[1] = 1;
  for (i = 2; i <= 1000000; i++){
    if (!isnp[i]) prime[++pc] = i, phi[i] = i - 1;
    for (j = 1; j <= pc && prime[j] * i <= 1000000; j++){
      isnp[i * prime[j]] = 1;
      if (i % prime[j] == 0){phi[i * prime[j]] = phi[i] * prime[j]; break;}
      else phi[i * prime[j]] = phi[i] * phi[prime[j]];
    }
  }

  for (i = 1; i <= 1000000; i++)
    for (j = i, k = 1; j <= 1000000; j += i, k++)
      (h[j] += k * phi[i]) %= ljz;
  for (i = 1; i <= 1000000; i++)
    h[i] = ((h[i] << 1) + F(i)) % ljz;
  for (i = 1; i <= 1000000; i++)
    ssh[i] = (ssh[i - 1] + h[i] * ((i * i) % ljz)) % ljz;
  for (i = 1; i <= 1000000; i++)
    sh[i] = (sh[i - 1] + h[i] * i) % ljz;
  for (i = 1; i <= 1000000; i++)
    (h[i] += h[i - 1]) %= ljz;
}

int main(){
  ll T, n, m, B;
  init();
  gi(T);
  while (T--){
    gi(n); gi(m); n++; m++; B = (n > m ? m : n); B--;
    pi(((ssh[B] - (n + m) * sh[B] + ((m * n) % ljz) * h[B]) % ljz + ljz) % ljz), putchar('\n');
  }
  return 0;
}
