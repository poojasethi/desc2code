#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#define MAXN 1000005
#define mod 1000000007
using namespace std;
typedef long long LL;

LL T,N,M,L;
LL pr[MAXN],cnt;
LL vis[MAXN];
LL phi[MAXN],psum[MAXN],sum[MAXN];
LL pre1[MAXN],pre2[MAXN],pre3[MAXN];
LL ans;

LL ksm(LL x,LL t)
{
    LL tmp=1;
    for(t;t;t>>=1,x=x*x%mod)
        if(t&1)tmp=tmp*x%mod;
    return tmp;
}

void Find_prime()
{
    LL i,j,tmp;
    phi[1]=1;
    for(i=2;i<=1000000;i++) 
    {
        if(!vis[i])pr[++cnt]=i,phi[i]=i-1;
        for(j=1;j<=cnt&&i*pr[j]<=1000000;j++)
        {
            vis[i*pr[j]]=1;
            if(i%pr[j]==0)
            {
                phi[i*pr[j]]=phi[i]*pr[j]%mod;
                break;
            }
            phi[i*pr[j]]=phi[i]*(pr[j]-1)%mod;
        }
    }
    for(i=1;i<=1000000;i++)
        for(j=1;j*i<=1000000;j++)
            psum[i*j]=(psum[i*j]+i*phi[j])%mod;
    tmp=ksm(3,mod-2);
    for(i=1;i<=1000000;i++)
        sum[i]=(i*(i+1)%mod*(2*i+1)%mod*tmp%mod-3*i*i%mod+2*psum[i]+mod)%mod;
}

int main()
{
    LL i,j;Find_prime();
    for(i=1;i<=1000000;i++)
    {
        pre1[i]=(pre1[i-1]+sum[i])%mod;
        pre2[i]=(pre2[i-1]+i*sum[i])%mod;
        pre3[i]=(pre3[i-1]+i*i%mod*sum[i])%mod;
    }
    scanf("%I64d",&T);
    for(i=1;i<=T;i++)
    {
        scanf("%I64d %I64d",&N,&M);
        ans=0,N++,M++;
        L=min(N-1,M-1);
        ans=(ans+N*M%mod*pre1[L])%mod;
        ans=(ans-(N+M)*pre2[L]%mod+mod)%mod;
        ans=(ans+pre3[L])%mod;
        printf("%I64d\n",ans);
    }
    return 0;
}