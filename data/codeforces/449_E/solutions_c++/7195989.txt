#include <iostream>
#include <algorithm>
#include <cstdio>
using namespace std;

typedef long long LL;
const int M = 1000000007;
const int N = 2000000;

int n, m;
LL pris[N], dots[N], tot[N];
LL gdots[N], gdotsi[N], gdotsi2[N];

void init()
{
    int tn = 1000000;
    tot[0] = 0;
    for (int i = 1; i <= tn; ++i){
        pris[i] = i - 1; 
        tot[i] = (tot[i - 1] + LL(i)*LL(i-1)/2 % M) % M;
        dots[i] = (LL(i) * LL(i) % M - tot[i] * 2) % M;
    }
    
    pris[1] = 0;
    for (int i = 1; i <= tn; ++i){
        int p = pris[i];
        for (int j = i, k = 1; j <= tn; j+=i, ++k){
            pris[j] -= p;
            dots[j] = (dots[j] + LL(j)*LL(j) % M * p % M - LL(i-1)*LL(k) % M * p % M * 2) % M;
        }
    }
    gdots[0] = gdotsi[0] = gdotsi2[0] =0;
    for (int i = 1; i <= tn; ++i)
    {
        gdots[i] = (gdots[i-1] + dots[i]) % M;
        gdotsi[i] = (gdotsi[i-1] + dots[i]*LL(i) % M) % M;
        gdotsi2[i] = (gdotsi2[i-1] + dots[i]*LL(i) % M *LL(i) % M) % M;
    }
}

void work()
{
    int tmin = min(n, m);
    LL ans = (gdots[tmin]*LL(n+1) % M*LL(m+1) % M + gdotsi2[tmin] - gdotsi[tmin]*LL(n+m+2) % M) % M;
    ans = (ans + M) % M;
    int tans = ans;
    printf("%d\n", tans);
}

int main()
{
    //freopen("a.in", "r", stdin);
    init();
    int test;
    scanf("%d", &test);
    for (int i = 0; i < test; ++i){
        scanf("%d%d", &n, &m);
        work();
    }
}