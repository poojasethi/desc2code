/*
    Look at me!
    Look at me!
    Look at how large the monster inside me has become!
*/

#include<iostream>
#include<cstdio>
#include<map>
#include<set>
#define FIT(a,b) for(vector<int >::iterator a=b.begin();a!=b.end();a++)
#define FITP(a,b) for(vector<pair<int,int> >::iterator a=b.begin();a!=b.end();a++)
#define RIT(a,b) for(vector<int>::reverse_iterator a=b.end();a!=b.begin();++a)
#include<stack>
#define ROF(a,b,c) for(int a=b;a>=c;--a)
#include<vector>
#include<algorithm>
#define FOR(a,b,c) for(int a=b;a<=c;++a)
#define REP(a,b) for(register int a=0;a<b;++a)
#include<cstring>
#include<bitset>
#include<cmath>
#include<iomanip>
#define f cin
#define g cout
#include<queue>
#define INF 0x3f3f3f3f
#define debug cerr<<"OK";
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define ld long double
#define ll long long
#define ull unsigned long long
#define eps 1.e-7
#define BUFMAX 10100100
#define N 1000100
#define mod 1000000007
using namespace std;
/*int dx[]={0,0,0,1,-1};
int dy[]={0,1,-1,0,0};*/

ll L[N],Lp[N],n,m,Lpp[N];
int p[N],T;

int main ()
{
    #ifndef ONLINE_JUDGE
    freopen("a.in","r",stdin);
    freopen("a.out","w",stdout);
    #endif

    int nm=1000010;
    FOR(i,1,nm)
    p[i]=i;
    FOR(i,2,nm)
    if(p[i]==i)
    {
        p[i]--;
        for(int j=i+i;j<=nm;j+=i)
            p[j]=p[j]/i*(i-1);
    }
    FOR(i,1,nm)
    {
        for(int j=i;j<=nm;j+=i)
            L[j]+=p[j/i]*i%mod;
    }
    FOR(i,1,nm)
    {
        L[i]*=2;
        L[i]%=mod;
        L[i]+=1LL*i*(i+1)*(2*i+1)/3%mod-3LL*i*i%mod;
        L[i]%=mod;
        Lp[i]=L[i]*i+Lp[i-1];
        Lp[i]%=mod;
        Lpp[i]=L[i]*i%mod*i%mod+Lpp[i-1];
        Lpp[i]%=mod;
        L[i]+=L[i-1];
        L[i]%=mod;
    }
    f>>T;
    while(T--)
    {
        f>>n>>m;
        if(n>m)
            swap(n,m);
        ll ans=(n*m%mod+n+m+1)%mod*L[n]%mod;
        ans-=(n+m+2)*Lp[n]%mod;
        ans+=Lpp[n];
        ans%=mod;
        if(ans<0)
            ans+=mod;
        g<<ans<<"\n";
    }

    return 0;
}
