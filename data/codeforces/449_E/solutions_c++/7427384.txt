#include <cmath>
#include <map>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <set>
#include <bitset>
#include <memory.h>
#include <functional>
#include <queue>
#include <fstream>
#include <ctime>
#include <deque>
#include <utility>
#include <stack>
#include <sstream>
#include <list>
#include <cctype> 
#include <numeric>
#include <iomanip>
#include <assert.h>
using namespace std;
#define sqr(_) ((_)*(_))

typedef long long LL;

typedef pair<int, int> Pii;
#define x first
#define y second
#define mp make_pair
#define pb push_back

const int MAXN = 1000000 + 10, MOD = (int)1e9 + 7;

int n, m, f[MAXN], s0[MAXN], s1[MAXN], s2[MAXN], p[MAXN], phi[MAXN];

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout);
#endif
	
	phi[1] = 1, p[1] = 1;
	for (int i = 2; i < MAXN; ++i)
		if (!p[i])
		{
			p[i] = i;
			for (int j = i + i; j < MAXN; j += i)
				p[j] = i;
		}
	for (int i = 1; i < MAXN; ++i)
	{
		if ((i / p[i]) % p[i] == 0)
			phi[i] = phi[i / p[i]] * p[i];
		else
		phi[i] = phi[i / p[i]] * (p[i] - 1);
		for (int j = 1; j * j <= i; ++j)
			if (i % j == 0)
			{
				f[i] = ((LL)f[i] + (LL)j * phi[i / j]) % MOD;
				if (j * j != i)
					f[i] = ((LL)f[i] + (LL)i / j * phi[j]) % MOD;
			}
		f[i] = ((LL)i * (i + 1) * (2 * i + 1) / 3 % MOD - (LL)3 * i * i % MOD + 2ll * f[i] + (LL)MOD) % MOD;
		s0[i] = (s0[i - 1] + f[i]) % MOD;
		s1[i] = ((LL)s1[i - 1] + (LL)f[i] * i) % MOD;
		s2[i] = ((LL)s2[i - 1] + (LL)f[i] * i % MOD * i) % MOD;
	}
	int test;
	cin >> test;
	for (; test; --test)
		scanf("%d%d", &n, &m),
		printf("%d\n", (int)(((LL)s2[min(n, m)] - (LL)(n + m + 2) * s1[min(n, m)] + (LL)(n + 1) * (m + 1) % MOD * (LL)s0[min(n, m)]) % MOD + MOD) % MOD);
	
	fclose(stdin);
	fclose(stdout);
	return 0;
}

