#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<cstdlib>
#include<algorithm>
#define N 1000005
#define mo 1000000007
#define INF6 166666668
#define LL long long
#define oo (1<<30)
#define TAT "%I64d"
using namespace std;
int T;
LL ans=0,F[N],phi[N],S[N],Sa[N],Saa[N],n,m;
LL sqr(LL x){ return 1LL*x*x%mo;}
LL gcd(LL x,LL y){ return x ? gcd(y%x,x) : y;}
LL Get(LL n){ return n*(n+1)%mo*(2*n+1)%mo*INF6%mo;}
void prepare()
{
    int i,j;
    for(i=1;i<N;i++) phi[i]=i;
    for(i=2;i<N;i++)
        if(phi[i]==i)
            for(j=i;j<N;j+=i)
                phi[j]=phi[j]/i*(i-1);
}
void work()
{
    int i,j;
    for(i=1;i<N;i++)
        for(j=i;j<N;j+=i)
            F[j]=(F[j]+2LL*i*phi[j/i])%mo;
}
int main()
{
    LL i;
    scanf("%d",&T),prepare();
    for(i=1;i<N;i++){
        F[i]=(i*i-2*i*(i-1)%mo+mo)%mo;
        F[i]=(F[i]+2*Get(i-1))%mo;
        F[i]=(F[i]-2*i+mo)%mo;
      }
    work();
    for(i=1;i<N;i++){
        S[i]=(S[i-1]+F[i])%mo;
        Sa[i]=(Sa[i-1]+i*F[i])%mo;
        Saa[i]=(Saa[i-1]+i*i%mo*F[i]%mo)%mo;
      }
    while(T--){
        scanf(TAT""TAT,&n,&m),ans=0;
        ans=(n+1)*(m+1)%mo*S[min(n,m)];
        ans=(ans+Saa[min(n,m)])%mo;
        ans=(ans-(n+m+2)*Sa[min(n,m)]%mo+mo)%mo;
        printf(TAT"\n",ans);
      }
    return 0;
}
