#include <cstdio>
#include <cstdlib>
#define N 10000000
#define P 1000000007 
using namespace std;

int T,n,m;
long long M,NM,Ans;
int _2,_3,_6,_12,_30;
int p[N+1],yl[N+1],prime[N/10],primes;
int G[N+1],GT[N+1],GTT[N+1];
long long _=1;

int pow(int a,int b)
{
    long long ans=1;
    for (;b;b>>=1)
    {
        if (b&1) ans=(_*ans*a)%P;
        a=(_*a*a)%P;
    }
    return ans;
}

int X0(int n)
{
    return n;
}

int X1(int n)
{
    return _*n*(n+1)%P*_2%P;
}

int X2(int n)
{
    return (_*n*(n+1)%P*(2*n+1)%P*_6%P)%P;
}

int X3(int n)
{
    long long ans=_*n*(n+1)%P*_2%P;
    return (ans*ans)%P;
}

int X4(int n)
{
    long long n3=_*n*n*n%P;
    long long n4=n3*n%P;
    long long n5=n4*n%P;
    return (n5*6+n4*15+n3*10-n)*_30%P;
}

int X5(int n)
{
    return (pow(n+1,6)-1-15ll*X4(n)-20ll*X3(n)-15ll*X2(n)-6ll*X1(n)-X0(n))*_6%P;
}

int main()
{
    _2=pow(2,P-2); _3=pow(3,P-2); _6=pow(6,P-2); 
    _12=pow(12,P-2); _30=pow(30,P-2);
    for (int i=1;i<=N;i++) p[i]=i;
    for (int i=2;i<=N;i++)
    {
        if (p[i]==i) prime[++primes]=i,yl[i]=1;
        for (int j=1;j<=primes&&prime[j]<=p[i]&&i<=N/prime[j];j++)
        {
            p[i*prime[j]]=prime[j];
            yl[i*prime[j]]=p[i]==prime[j]?yl[i]:i;
        }
    }
    G[1]=GT[1]=GTT[1]=1;
    for (int i=2;i<=N;i++)
    {
        if (yl[i]==1)
        {
            for (int x=i;x!=1;x/=p[i]) G[i]=(G[i]+_*(i/x)*(_*x*(p[i]-1)/p[i])%P)%P;
            G[i]=(G[i]+i)%P;
        } else G[i]=(_*G[yl[i]]*G[i/yl[i]])%P;
        GT[i]=(_*G[i]*i)%P; GTT[i]=(_*GT[i]*i)%P;
    }
    for (int i=2;i<=N;i++)
    {
        G[i]=(G[i]+G[i-1])%P;
        GT[i]=(GT[i]+GT[i-1])%P;
        GTT[i]=(GTT[i]+GTT[i-1])%P;
    }
    
    scanf("%d",&T);
    while (T--)
    {
        scanf("%d%d",&n,&m);
        M=n<m?n:m; NM=_*(n+1)*(m+1)%P;
        Ans=2ll*(_*NM*G[M]%P-_*(n+m+2)*GT[M]%P+_*GTT[M])%P;
        Ans=(Ans+(_*NM*(2ll*X3(M)-6ll*X2(M)+X1(M))%P)*_3)%P;
        Ans=(Ans-_*(n+m+2)*(2ll*X4(M)-6ll*X3(M)+X2(M))%P*_3)%P;
        Ans=(Ans+_*(2ll*X5(M)-6ll*X4(M)+X3(M))*_3)%P;
        printf("%I64d\n",(Ans+P)%P);
    }
}
