#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<vector>
#include<string>
#define LL long long
using namespace std;
struct node
{
	int p,c;
}h[40];
int n,m,T,P=1000000007,phi[1000010],pr[100010],tot,d[1000010],f[1000010],cnt,ans,s1[1000010],s2[1000010];
int s3[1000010];
void read(int &x)
{
	char ch=getchar();int mark=1;for(;ch!='-'&&(ch<'0'||ch>'9');ch=getchar());if (ch=='-') mark=-1,ch=getchar();
	for(x=0;ch>='0'&&ch<='9';ch=getchar()) x=x*10+ch-48;x*=mark;
}
void dfs(int step,int x,int L)
{
	if (step==cnt+1)
	{
		(ans+=(LL)phi[x]*(L/x)%P)%=P;return;
	}
	dfs(step+1,x,L);
	int t=1;
	for(int i=1;i<=h[step].c;i++)
	{
		t*=h[step].p;
		dfs(step+1,x*t,L);
	}
}
int main()
{
	read(T);
	n=1000000;
	phi[1]=1;
	for(int i=2;i<=n;i++)
	{
		if (!d[i])
		{
			pr[++tot]=i;
			phi[i]=i-1;
			d[i]=i;
		}
		for(int j=1;j<=tot&&pr[j]*i<=n;j++)
		{
			d[pr[j]*i]=pr[j];
			if (d[i]==pr[j]) phi[pr[j]*i]=phi[i]*pr[j];
			else phi[pr[j]*i]=phi[i]*(pr[j]-1);
			if (d[i]==pr[j]) break;
		}
	}
	//for(int i=1;i<=25;i++) printf("%d ",phi[i]); 
	for(int i=1;i<=n;i++)
	{
		LL t1=i,t2=(LL)i*i*2+1;
		if (t1%3) t2/=3;else t1/=3;
		t2%=P;
		f[i]=t1*t2%P;
		f[i]-=(LL)i*i*2%P;
		f[i]%=P;
		cnt=0;
		ans=0;
		for(int j=i;j!=1;j/=d[j])
		{
			if (h[cnt].p==d[j]) h[cnt].c++;
			else
			{
				h[++cnt].p=d[j];
				h[cnt].c=1;
			}
		}
		dfs(1,1,i);
		//if (i<=25) printf("%d\n",ans);
		f[i]=(f[i]+ans*2%P)%P;
		(f[i]+=P)%=P;
	}
	for(int i=1;i<=n;i++)
	{
		s1[i]=(s1[i-1]+f[i])%P;
		s2[i]=(s2[i-1]+(LL)f[i]*i%P)%P;
		s3[i]=(s3[i-1]+(LL)f[i]*i%P*i%P)%P;
	}
	for(;T--;)
	{
		read(n);read(m);
		if (n>m) swap(n,m);
		LL t1=((LL)n*m%P+n+m+1)%P,t2=(-n-m-2+P)%P,t3=1;
		printf("%d\n",((t1*s1[n]%P+t2*s2[n]%P)%P+s3[n])%P);
	}
	return 0;
}
