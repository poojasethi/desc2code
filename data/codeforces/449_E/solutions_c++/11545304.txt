#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

const int Mod=1e9+7;

int prime[1000010]={0};
int ptot=0;
int phi[1000010]={0};
int hash[1000010]={0};
vector <int> fact[1000010];

void Pre()
{
	phi[1]=1;
	fact[1].push_back(1);
	for(int i=2;i<=1000000;i++)
	{
		if(hash[i]==0)
		{
			prime[++ptot]=i;
			phi[i]=i-1;
		}
		for(int j=1;j<=ptot && i*prime[j]<=1000000;j++)
		{
			hash[i*prime[j]]=1;
			if(i%prime[j]==0)
			{
				phi[i*prime[j]]=phi[i]*prime[j];
				break;
			}
			phi[i*prime[j]]=phi[i]*phi[prime[j]];
		}
		for(int j=i;j<=1000000;j+=i)
			fact[j].push_back(i);
		fact[i].push_back(1);
	}
	return;
}

int Sum_1[1000010]={0};
int Sum_L[1000010]={0};
int Sum_L2[1000010]={0};

int xigema_gcd(int x)
{
	int returnd=0;
	int Size=fact[x].size();
	for(int i=0;i<Size;i++)
	{
		returnd+=(int)((long long)phi[x/fact[x][i]]*fact[x][i]%Mod);
		returnd%=Mod;
	}
	return returnd;
}

int main()
{
	Pre();
	for(int i=1;i<=1000000;i++)
	{
		Sum_1[i]-=(int)((long long)3*i*i%Mod);
		int g1=(i%3==0?i/3:i),g2=((i+1)%3==0?(i+1)/3:i+1),g3=((i*2+1)%3==0?(i*2+1)/3:i*2+1);
		Sum_1[i]+=(int)((long long)g1*g2%Mod*g3%Mod);
		Sum_1[i]+=xigema_gcd(i)*2%Mod;
		Sum_1[i]=(Sum_1[i]+Mod)%Mod;
		Sum_L[i]=(int)((long long)Sum_1[i]*i%Mod);
		Sum_L2[i]=(int)((long long)Sum_L[i]*i%Mod);
		Sum_1[i]+=Sum_1[i-1];
		Sum_L[i]+=Sum_L[i-1];
		Sum_L2[i]+=Sum_L2[i-1];
		Sum_1[i]%=Mod;Sum_L[i]%=Mod;Sum_L2[i]%=Mod;
	}
	int TAT;
	scanf("%d",&TAT);
	for(;TAT>0;TAT--)
	{
		int N,M;
		scanf("%d%d",&N,&M);
		if(N>M) swap(N,M);
		long long ans=0;
		ans+=(long long)(N+1)*(M+1)%Mod*Sum_1[N]%Mod;
		ans-=(long long)(N+M+2)*Sum_L[N]%Mod;
		ans+=(long long)Sum_L2[N]%Mod;
		ans=(ans+Mod)%Mod;
		printf("%d\n",(int)ans);
	}
	return 0;
}