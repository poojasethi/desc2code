a, b = map(int, raw_input().split())
if a == 0:
	# don't have any o's, decision's easy
	print -1 * pow(b, 2)
	print 'x' * b
else:
	# iterate over sacrificed o's
	max_score, max_o_sacs = -1, 0
	for o_sacs in range(a):
		x_parts = o_sacs + 2	# get two partitions for free
		x_part_long_count = b % x_parts
		x_part_short_count = x_parts - x_part_long_count
		x_part_short_length = (b / x_parts)
		x_part_long_length = x_part_short_length + 1

		score = o_sacs + pow(a - o_sacs, 2)
		score -= x_part_long_count * pow(x_part_long_length, 2)
		score -= x_part_short_count * (pow(x_part_short_length, 2))
		if o_sacs == 0 or score > max_score:
			max_score = score
			max_o_sacs = o_sacs

	# recalcuate for the max
	x_parts = max_o_sacs + 2
	x_part_long_count = b % x_parts
	x_part_short_count = x_parts - x_part_long_count
	x_part_short_length = (b / x_parts)
	x_part_long_length = x_part_short_length + 1
	print max_score
	print (('x' * x_part_long_length) + 'o') * x_part_long_count + \
          (('x' * x_part_short_length) + 'o') * (x_part_short_count - 1) + \
          ('o' * (a - x_parts + 1)) + ('x' * x_part_short_length)
