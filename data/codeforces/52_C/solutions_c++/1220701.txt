#include <stdio.h>
#include <string.h>
#include <sstream>

#define MIN(x,y) ((x)<(y)?(x):(y))
#define MAX(x,y) ((x)>(y)?(x):(y))

using namespace std;


struct tnode{
  int val,add;
};

const int MaxSize = 1<<18;
const int INF = 1<<30;

tnode t[MaxSize*(1<<2)];
int n,q,m,l,r,v,x;
char buf[100];

void modify(int l, int r, int val, int x=1, int ll=1, int rr=MaxSize){
  if (l>rr || ll>r) return;
  if (l==ll && rr==r){
    t[x].add+=val;
    t[x].val+=val;
    return;
  }
  modify(l,MIN(r,(ll+rr)>>1),val,x<<1,ll,(ll+rr)>>1);
  modify(MAX(l,((ll+rr)>>1)+1),r,val,(x<<1)+1,((ll+rr)>>1)+1,rr);
  t[x].val=MIN(t[x<<1].val,t[(x<<1)+1].val)+t[x].add;
}

int findmin(int l, int r, int x=1, int ll=1, int rr=MaxSize){
  if (l>rr || ll>r) return INF;
  if (l==ll && rr==r) return t[x].val;
  return MIN(findmin(l,MIN(r,(ll+rr)>>1),x<<1,ll,(ll+rr)>>1),
             findmin(MAX(l,((ll+rr)>>1)+1),r,(x<<1)+1,((ll+rr)>>1)+1,rr))+t[x].add;
}

int main(){
  memset(t,0,sizeof(t));
  scanf("%d\n",&n);
  for (int i = 1; i <= n; i++) {
    scanf("%d",&x);
    modify(i,i,x);
  }

  scanf("%d\n",&m);
  for (int i = 0; i < m; i++){
    gets(buf);
    stringstream in (buf);
    in>>l>>r;
    l++; r++;
    if (!(in >> v)){
      if (l<=r) 
        printf("%d\n",findmin(l,r));
      else
        printf("%d\n",MIN(findmin(1,r),findmin(l,n)));
    } else {
      if (l<=r)
        modify(l,r,v);
      else {
        modify(1,r,v);
        modify(l,n,v);
      }
    }
  }
  return 0;
}