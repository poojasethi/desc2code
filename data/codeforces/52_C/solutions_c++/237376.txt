#include<iostream>
#include<vector>
#include<cstring>
#include<cstdio>
#include<algorithm>
#include<sstream>
using namespace std;
const int INF=1<<30;
int n, m, num[800010], all[800010], in[200010];
char w[100];
int get_min(int cur, int l, int r, int h, int t){
    if(h>r || t<l)  return INF;
    if(h<=l && t>=r)    return num[cur];
    int m=(l+r)/2;
    return min(get_min(cur*2, l, m, h, t), get_min(cur*2+1, m+1, r, h, t))+all[cur];
}
void do_add(int cur, int l, int r, int h, int t, int x){
    if(h>r || t<l)  return;
    if(h<=l && t>=r){
        num[cur]+=x;
        all[cur]+=x;
        return;
    }
    
    int m=(l+r)/2;
    do_add(cur*2, l, m, h, t, x);
    do_add(cur*2+1, m+1, r, h, t, x);
    num[cur]=min(num[cur*2], num[cur*2+1])+all[cur];
}

int main(){
    scanf("%d", &n);
    for(int i=1; i<=n; i++){
        scanf("%d", &in[i]);
        do_add(1, 1, n, i, i, in[i]); 
    }
    scanf("%d", &m);
    gets(w);
    for(int i=0; i<m; i++){
        gets(w);
        stringstream in(w);
        int a, b, c;
        in>>a>>b;
        a++;    b++;
        if(in>>c){
            if(a<=b)        do_add(1, 1, n, a, b, c);
            else{
                do_add(1, 1, n, 1, b, c);
                do_add(1, 1, n, a, n, c);
            }
        }else{
            if(a<=b)    cout<<get_min(1, 1, n, a, b)<<endl;
            else cout<<min(get_min(1, 1, n, 1, b), get_min(1, 1, n, a, n))<<endl;
        }
    }
    return 0;
}