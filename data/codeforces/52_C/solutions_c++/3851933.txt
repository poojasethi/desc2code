#include <iostream>
#include <stdio.h>

#define MAXN 200020

using namespace std;

typedef long long int i64;

i64 st[3 * MAXN];
i64 lazy[3 * MAXN];
i64 a[MAXN];
int n , m;

void init(int v , int l , int r)
{
	if (l == r) {
		st[v] = a[r];
		return;
	}
	init(2 * v , l , (l + r) / 2);
	init(2 * v + 1 , (l + r) / 2 + 1 , r);
	st[v] = min(st[2 * v] , st[2 * v + 1]);
}

i64 inc(int v , int l , int r , int l1 , int r1 , int k)
{
	if (r1 < l || l1 > r)
		return st[v] + lazy[v];
	if (l >= l1 && r <= r1) {
		lazy[v] += k;
		return st[v] + lazy[v];
	}
	int mid = (l + r) / 2;
	st[v] = min(inc(2 * v , l , mid , l1 , r1 , k) , inc(2 * v + 1 , mid + 1 , r , l1 , r1 , k));
	return st[v] + lazy[v];
}

i64 query(int v , int l , int r , int l1 , int r1)
{
	if (r1 < l || l1 > r)
		return 1e15;
	if (l >= l1 && r <= r1)
		return st[v] + lazy[v];
	int mid = (l + r) / 2;
	return min(query(2 * v , l , mid , l1 , r1) , query(2 * v + 1 , mid + 1 , r , l1 , r1)) + lazy[v];
}

int main()
{
	char ch;
	i64 cc;
	int x , y;
	
	scanf(" %d",&n);
	for (int i = 1; i <= n; i++)
		scanf(" %I64d",&a[i]);
		
	init(1 , 1 , n);
	
	scanf(" %d",&m);
	for (int i = 0; i < m; i++) {
		scanf(" %d %d%c",&x,&y,&ch); x++; y++;
		if (ch == ' ') {
			scanf(" %I64d",&cc);
			if (x > y) {
				inc(1 , 1 , n , x , n , cc);
				inc(1 , 1 , n , 1 , y , cc);
			}
			else inc(1 , 1 , n , x , y , cc);
		}
		else {
			if (x > y) 
				printf("%I64d\n",min(query(1 , 1 , n , x , n) , query(1 , 1 , n , 1 , y)));
			else printf("%I64d\n",query(1 , 1 , n , x , y));
		}
	}
	return 0;
}
