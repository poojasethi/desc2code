#include<iostream>
#include<cstring> 
#include<cstdio>
using namespace std;
#define mid (l+r)/2
#define lft p*2,l,mid
#define rgt p*2+1,mid+1,r
const long long INF=1LL<<60,maxn=200010;
int n,a[maxn],m,L,R,v;
char ch[1000];
long long sum[4*maxn],minsum[4*maxn];
void pull(int p){
	minsum[p]=min(minsum[p*2],minsum[p*2+1])+sum[p];
}
void initialize(int p,int l,int r){
	if(l==r) {
		minsum[p]=sum[p]=a[l];
		return;
	}
	sum[p]=0;
	initialize(lft);
	initialize(rgt);
	pull(p);
}
void add(int p,int l,int r){
	if(L<=l && R>=r){
		sum[p]+=v;
		minsum[p]+=v;
		return;
	}
	if(L<=mid) add(lft);
	if(R>mid) add(rgt);
	pull(p);
}
long long query(int p,int l,int r){
	if (L<=l && R>=r)return minsum[p];
	long long res=INF;
	if(L<=mid) res=min(res,query(lft));
	if(R>mid) res=min(res,query(rgt));
	res+=sum[p];
	return res;
}
int main(){
	scanf("%d",&n);
	for(int i=0;i<n;i++)scanf("%d",&a[i]);
	initialize(1,0,n-1);
	scanf("%d",&m);
	gets(ch);
	while(m--){
		gets(ch);
		int lf,rg;
		if(sscanf(ch,"%d%d%d",&lf,&rg,&v)==3){
			if(rg<lf){
				L=lf;R=n-1;
				add(1,0,n-1);
				L=0;R=rg;
				add(1,0,n-1);
			}else {
				L=lf;R=rg;
				add(1,0,n-1);
			}
		}else{
			long long res;
			sscanf(ch,"%d%d",&lf,&rg);
			if(rg<lf){
				L=lf;R=n-1;
				res=query(1,0,n-1);
				L=0;R=rg;
				res=min(res,query(1,0,n-1));
			}else{
				L=lf;R=rg;
				res=query(1,0,n-1);
			}
			printf("%I64d\n",res);
		}
	}
	return 0;
}