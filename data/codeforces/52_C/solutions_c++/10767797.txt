#include<bits/stdc++.h>

using namespace std;

#define foreach(i, x)  for(type(x) i=x.begin() ; i != x.end() ; i++)
#define FOR(ii, aa, bb) for(int ii = aa ; ii <= bb ; ii++)
#define ROF(ii, aa, bb) for(int ii = aa ; ii >= bb ; ii--)

#define type(x) __typeof(x.begin())

#define orta (bas + son >> 1)
#define sag (k + k + 1)
#define sol (k + k)

#define pb push_back
#define mp make_pair

#define nd second
#define st first

#define endl '\n'

typedef pair< int, int > pii;

typedef long long ll;
 
const int mod  = 1e9+7;
const ll  linf = 1e18;
const int inf  = 1e9;

const int N = 2e5 + 10;

int ST[N<<2], L[N<<2], i, j, k, n, m, x, y, z;
char c;

int query(int k,int bas,int son,int x,int y){
	if(bas > y || son < x) return inf;
	if(x <= bas && son <= y) return ST[k];
	return min(query(sol,bas,orta,x,y), query(sag,orta+1,son,x,y)) + L[k];
}

int update(int k,int bas,int son,int x,int y,int t){
	if(bas > y || son < x) return ST[k];
	if(x <= bas && son <= y){ ST[k] += t; L[k] += t; return ST[k]; }
	return ST[k] = min(update(sol,bas,orta,x,y,t), update(sag,orta+1,son,x,y,t)) + L[k];
}


int main(){

	scanf("%d",&n);

	FOR(i,1,n){ scanf("%d",&x); update(1,1,n,i,i,x); }

	scanf("%d",&m);

	FOR(i,1,m){
		scanf("%d %d%c",&x,&y,&c); x++, y++;
		if(c != '\n'){ scanf("%d",&z); if(x > y){ update(1,1,n,x,n,z); update(1,1,n,1,y,z); } else update(1,1,n,x,y,z); }
		else{ int ans = 0; if(x > y) ans = min(query(1,1,n,x,n),query(1,1,n,1,y)); else ans = query(1,1,n,x,y); cout << ans << endl;}
	}

   return 0;
}
