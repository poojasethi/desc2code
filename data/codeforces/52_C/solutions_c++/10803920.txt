#include <bits/stdc++.h>
using namespace std;

const int MAXN = 200020;

int N,M,seg[MAXN<<2],lazy[MAXN<<2],ar[MAXN];

inline int init( int k , int b , int e ){
	if( b == e )
		return seg[k] = ar[b];
	int m = (b+e)>>1;
	return seg[k] = min( init( 2*k , b , m ) , init( 2*k+1 , m+1 , e ) );
}

inline int find( int k , int b , int e , int x , int y ){
	if( b > y or e < x )
		return 1e9;
	if( b >= x and e <= y )
		return seg[k] + lazy[k];
	int m = (b+e)>>1;
	return min( find( 2*k , b , m , x , y ) , find( 2*k+1 , m+1 , e , x , y )) + lazy[k];
}

inline int update( int k , int b , int e , int x , int y , int t ){
	if( b > y or e < x )
		return seg[k] + lazy[k];
	if( b >= x and e <= y ){
		lazy[k] += t;
		return seg[k] + lazy[k];
	}
	int m = (b+e)>>1;
	seg[k] = min( update( 2*k , b , m , x , y , t ) , update( 2*k+1 , m+1 , e , x , y , t ));
	return seg[k] + lazy[k];
}

int main(){
	
	scanf("%d",&N);
	
	for( int i=0 ; i < N ; i++ )
		scanf(" %d",&ar[i]);
	N--;
	init(1 , 0 , N);
	
	scanf("%d",&M);
	char type;
	for( int i=1,a,b,t ; i <= M ; i++ ){
		scanf(" %d %d%c",&a,&b,&type);
		if( type == '\n' ){
			if( a > b )
				printf("%d\n",min( find( 1 , 0 , N , a , N ) , find( 1 , 0 , N , 0 , b ) ));
			else
				printf("%d\n",find( 1 , 0 , N , a , b ));
		} else {
			scanf("%d",&t);
			if( a > b ){
				update( 1 , 0 , N , a , N , t );
				update( 1 , 0 , N , 0 , b , t );
			} else
				update( 1 , 0 , N , a , b , t );
		}
		
	}
	
	return 0;
}
