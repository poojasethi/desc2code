#include<iostream>
#include<vector>
#include<string>
using namespace std;
#define int long long
const int inf=1e15;
int n;
int a[800010];
int seg[800010];
int RMQ(int ind,int s,int e,int l,int r)
{
	if(s>=r||e<=l)
		return inf;
	if(l<=s&&r>=e)
		return seg[ind]+a[ind];
	return min(RMQ(2*ind,s,(s+e)/2,l,r),RMQ(2*ind+1,(s+e)/2,e,l,r))+a[ind];
}
void add(int ind,int s,int e,int l,int r,int v)
{
	if(s>=r||e<=l)
		return;
	if(l<=s&&r>=e)
	{
		a[ind]+=v;
		return;
	}
	add(ind*2,s,(s+e)/2,l,r,v);
	add(ind*2+1,(s+e)/2,e,l,r,v);
	seg[ind]=min(seg[2*ind]+a[2*ind],seg[2*ind+1]+a[2*ind+1]);
}
main()
{
	int m;
	cin>>n;
	for(int i=0;i<n;i++)
	{
		int v;
		cin>>v;
		add(1,0,n,i,i+1,v);
	}
	cin>>m;
	string p;
	getline(cin,p);
	for(int i=0;i<m;i++)
	{
		vector<int> v;
		string s;
		getline(cin,s);
		v.push_back(0);
		int manfi=1;
		for(int i=0;i<s.size();i++)
		{
			if(s[i]==' ')
			{
				v.push_back(0);
				continue;
			}
			if(s[i]=='-')
			{
				manfi*=-1;
				continue;
			}
			v[v.size()-1]*=10;
			v[v.size()-1]+=s[i]-'0';
		}
		v[v.size()-1]*=manfi;
		if(v.size()==2)
		{
			if(v[1]<v[0])
			{
				cout<<min(RMQ(1,0,n,0,v[1]+1),RMQ(1,0,n,v[0],n))<<endl;;
			}
			else
			{
				cout<<RMQ(1,0,n,v[0],v[1]+1)<<endl;
			}
		}
		if(v.size()==3)
		{
			if(v[1]<v[0])
			{
				add(1,0,n,0,v[1]+1,v[2]);
				add(1,0,n,v[0],n,v[2]);
			}
			else
			{
				add(1,0,n,v[0],v[1]+1,v[2]);
			}
		}
	}
	//system("pause");

}