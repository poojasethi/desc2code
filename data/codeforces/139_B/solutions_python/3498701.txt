#!/usr/bin/env python

import math

def get_min_cost(rooms, rolls):
    cost = 0 
    for l, w, h in rooms:
        min_cost_for_room = 999999999
        total_length = l * 2 + w * 2
        for rl, rw, rc in rolls:
            if rl < h:
                continue
            length_covered_per_roll = (rl / h) * rw if rl >= h else rw
            num_rolls_req = math.ceil(total_length / float(length_covered_per_roll))
            total_cost = int(num_rolls_req) * rc
            min_cost_for_room = min(min_cost_for_room, total_cost)
        cost += min_cost_for_room
    return cost
            
if __name__ == '__main__':
    n = int(raw_input())
    rooms = []
    for i in range(n):
        l, w, h = map(int, raw_input().split()) 
        rooms.append((l, w, h))
    m = int(raw_input())
    rolls = []
    for i in range(m):
        l, w, c = map(int, raw_input().split())
        rolls.append((l, w, c))

    print get_min_cost(rooms, rolls)

