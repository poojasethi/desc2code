I = lambda : map(int, raw_input().split())
mod = 1000000007

def s(n, k):
    if n < 1 or k < 1: return 0
    if _s[n][k] is None: _s[n][k] = s(n-1, k) + f(n, k) % mod
    return _s[n][k]

def f(n, k):
    if n < 1 or k < 1: return 0
    if k == 1: return n*(n+1)/2
    if n < 3: return 0
    if _f[n][k] is not None: return _f[n][k]

    ret = f(n-1, k) + s(n-2, k-1)
    ret %= mod
    _f[n][k] = ret
    return ret

def main():
    global _f
    global _s
    _f = [[None]*1001 for _ in range(1001)]
    _s = [[None]*1001 for _ in range(1001)]

    n, m, k = I()
    r1 = f(n-2, k)
    r2 = f(m-2, k)
    #print r1, r2
    print r1 * r2 % mod

if __name__ == '__main__':
    main()