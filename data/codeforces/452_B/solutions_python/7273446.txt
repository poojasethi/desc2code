import math
first_line = raw_input()
n = int(first_line.split(" ")[0])
m = int(first_line.split(" ")[1])

points = []
for i in xrange(0, n+1):
	for j in xrange(0, m+1):
		points.append((i, j))
curr_max = 0

count_p1 = 0
count_p2 = 0
count_p3 = 0
count_p4 = 0

#points should be: (0,0) (0,n), (0,m), (n,m) in some order if rectangle
def dist(a, b):
	return math.sqrt((a[0]-b[0])**2+(a[1]-b[1])**2)
def total_dist(l):
	return dist(l[0], l[1]) + dist(l[1], l[2]) + dist(l[2], l[3])
answer_list = []
if n == 0:
	answer_list.append((0, 1))
	answer_list.append((0, m))
	answer_list.append((0, 0))
	answer_list.append((0, m-1))
elif m == 0:
	answer_list.append((1, 0))
	answer_list.append((n, 0))
	answer_list.append((0, 0))
	answer_list.append((n-1, 0))
else:
	possible_combos = [[(0,0), (n, m), (0, m), (n, 0)], [(0,0), (n, m), (n, 0), (0, m)], 
	[(0,1), (n, m), (0, 0), (n, m-1)], [(1,0), (n, m), (0, 0), (n-1, m)]]
	max_dist = 0
	maxcount = -1
	count = 0
	for combo in possible_combos:
		if total_dist(combo) > max_dist:
			max_dist = total_dist(combo)
			maxcount = count
		count +=1  
	for tup in possible_combos[maxcount]:
		answer_list.append(tup)


	# if n > m:
	# 	answer_list.append((n, m-1))
	# 	answer_list.append((0, 1))
	# else:
	# 	answer_list.append((m-1, n))
	# 	answer_list.append((1, m))

ans_string = []
for tup in answer_list:
	s = str(tup[0]) + " " + str(tup[1])
	ans_string.append(s)

for s in ans_string:
	print s




#print dist((0,1), (1, 0))

def arrange_max(a, b, c, d):
	temp_max = 0
	return dist(a,b)

