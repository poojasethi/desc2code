#!/usr/bin/env python

from sys import stdin, stderr

import math
import itertools

def dist( p1, p2 ):
   return math.sqrt( (p1[0]-p2[0])**2 + (p1[1]-p2[1])**2 )

def dist_poly( P ):
   res = 0
   for i in xrange(1, len(P)):
      res += dist( P[i-1], P[i] )
   return res

def main():
   N, M = map(int, stdin.readline().split())
   points = [ (0, 0), (N, M), (N, 0), (0, M)  ]
   if N > 0:
      points.append( (1, 0) )
      points.append( (N-1, M) )
      points.append( (N-1, 0) )
      points.append( (1, M) )

   if M > 0:
      points.append( (0, 1) )
      points.append( (N, M-1) )
      points.append( (N, 1) )
      points.append( (0, M-1) )

   points = list( set(points) )

   best_dist = 0
   for p in itertools.permutations( points, 4 ):
      d = dist_poly( p )
      if d > best_dist:
         best_dist = d
         ans = p

#  print >>stderr, '%.7f' % best_dist

   for p in ans:
      print '%d %d' % (p[0], p[1])

   return 0

if __name__ == '__main__': main()
