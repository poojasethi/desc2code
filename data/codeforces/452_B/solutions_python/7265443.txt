import sys

def get_line(n, m):
  if n == 0:
    return [(0, 1), (0, m), (0, 0), (0, m-1)]
  if m == 0:
    return [(1, 0), (n, 0), (0, 0), (n-1, 0)]
  candidates =[
    [(0, 0), (n, m), (n, 0), (0, m)],
    [(0, 0), (n, m), (0, m), (n, 0)],
    [(0, 0), (n-1, m), (1, 0), (n, m)],
    [(0, 0), (n, m-1), (0, 1), (n, m)],
    [(1, 0), (n, m), (0, 0), (n-1, m)],
    [(0, 1), (n, m), (0, 0), (n, m-1)]
  ]
  return max(candidates, key=d)

def d(ps):
  x = 0
  for i in range(len(ps) - 1):
    x += (ps[i][0] - ps[i+1][0]) ** 2 + (ps[i][1] - ps[i+1][1]) ** 2
  return x

if __name__ == '__main__':
  lines = [line for line in sys.stdin]
  n, m = map(int, lines[0].split())
  for p in get_line(n, m):
    print '%d %d' % p