from math import sqrt
d=lambda (x1,y1),(x2,y2):sqrt((x1-x2)**2+(y1-y2)**2)
n,m=map(int,raw_input().split())
def res(a):
    return d(a[0],a[1])+d(a[2],a[1])+d(a[3],a[2])
import sys
if n==0:
    print 0,1
    print 0,m
    print 0,0
    print 0,m-1
    sys.exit()
if m==0:
    print 1,0
    print n,0
    print 0,0
    print n-1,0
    sys.exit()
import itertools as it
c=it.permutations(range(4),2)
e=m if m<4 else 1
r=n if n<4 else 1
a,b=[(0,0),(0,e),(1,1),(r,0)],[(n,m),(n-r,m),(n,m-e),(n-1,m-1)]
s=0
vec=[0 for i in range(4)]
for q in c:
    vec[0]=a[q[0]]
    vec[2]=a[q[1]]
    for w in it.permutations(range(4),2):
        vec[1]=b[w[0]]
        vec[3]=b[w[1]]
        if res(vec)>s:
            s=res(vec)
            ans=vec[:]
for q in ans:
    print q[0],q[1]
