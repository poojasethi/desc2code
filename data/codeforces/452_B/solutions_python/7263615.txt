#!/usr/bin/python2
# -*- coding: utf-8 -*-

import sys
import os
from math import sqrt

def dist(p1, p2):
    x = p1[0] - p2[0]
    y = p1[1] - p2[1]
    return sqrt(x*x+y*y)

def test(X):
    ret = 0
    for i in xrange(1, len(X)):
        ret += dist(X[i], X[i-1])
    return ret

def main():
    N, M = map(int, sys.stdin.readline().split())
    if N < M:
        N, M = M, N
        swap = True
    else:
        swap = False
    zero = ((0, 0), ) * 4
    p = ((N-1, M), (0, 0), (N, M), (1, 0))
    if M > 0:
        p1 = ((0, M), (N, 0), (0, 0), (N, M))
        if test(p1) > test(p):
            p = p1
        p1 = ((0, 1), (N, M), (0, 0), (N, M-1))
        if test(p1) > test(p):
            p = p1

    if swap:
        p = [(x, y) for (y, x) in p]
    for x, y in p:
        print x, y
    #print test(p)

if __name__ == '__main__':
    main()
