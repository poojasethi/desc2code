#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

typedef long long LL;
const int N = 1e6 + 10;
const int mod = 1e6 + 3;

int n, c;

LL F[N], R[N];
LL pow_mod(LL x, int p){
	LL s = 1;
	while(p){
		if(p & 1)	s = s * x % mod;
		x = x * x % mod;
		p >>= 1;
	}
	return s;
}

LL C(int n, int m){
	if(n < m)	return 0;
	return F[n] * R[m] % mod * R[n-m] % mod;
}

int main(){
	F[0] = R[0] = 1;
	for(int i=1; i<N; i++){
		F[i] = F[i-1] * i % mod;
		R[i] = pow_mod(F[i], mod-2);
	}
	while(~scanf("%d %d", &n, &c)){
		LL ans = 0;
		for(int i=1; i<=n; i++){
			ans = (ans + C(c+i-1, i)) % mod;
		}
		printf("%I64d\n", ans);
	}
	return 0;
}
