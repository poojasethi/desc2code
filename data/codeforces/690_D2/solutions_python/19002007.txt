#include<bits/stdc++.h>

using namespace std;

const int mo = 1000003;
long long inv[1000005], fac[1000005];
typedef long long ll;

void exgcd(ll a,ll b,ll &d,ll &x,ll &y)
  {
    if(!b) { x = 1; y = 0; d = a; return; }
    else {
      exgcd(b,a%b,d,y,x);
      y -= x*(a/b);
    }
  }

  ll inverse(ll i)
  {
    ll x,y,d;
    exgcd(i,mo,d,x,y);
    if(d == -1) x = -x;
    return (x%mo+mo)%mo;
  }
  
  void ready()
  {
    fac[0] = 1;
    for(int i=1;i<=1000000;i++) fac[i] = (fac[i-1]*i)%mo;
    inv[1000000] = inverse(fac[1000000]);
    for(int i=999999;i>=0;i--) inv[i] = inv[i+1]*(i+1)%mo;
  }

ll C(int n,int m) {
  return fac[n]*inv[m]%mo*inv[n-m]%mo;
}

int main() {
  int n, m;
  scanf("%d%d",&n,&m);
  ready();
  cout<<(C(n+m,m)-1+mo)%mo<<"\n";
  return 0;
}
