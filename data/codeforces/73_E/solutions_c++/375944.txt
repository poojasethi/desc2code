#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>
#include <set>

using namespace std;

const int MAXN = 2000000;
bool mark[MAXN];

vector<int> plist;

void init() {
	memset(mark, 0, sizeof(mark));
	mark[0] = mark[1] = true;
	for (int i = 2; i < MAXN; ++i) {
		if (!mark[i]) {
			plist.push_back(i);
		}

		for (int j = 2; j * i < MAXN && j <= i; ++j) {
			mark[j * i] = true;
			if (i % j == 0) {
				break;
			}
		}
	}
//	for (int i = 0; i < 10; ++i) {
//		printf("%d\n", plist[i]);
//	}
//	printf("%d\n", plist.size());
}

int main() {
	init();
	int n, x, y;
	scanf("%d%d", &n, &x);

	set<int> st;
	for (int i = 0; i < n; ++i) {
		scanf("%d", &y);
		st.insert(y);
	}

	if (x == 2) {
		puts("0");
		return 0;
	}

	if (st.size() == 0) {
		puts("-1");
		return 0;
	}

	if (*(st.begin()) == 1) {
		puts("1");
		return 0;
	}
	int cnt = 0;
	for (int i = 0, sz = plist.size(); i < sz && plist[i] < x; ++i) {
		if (!st.count(plist[i])) {
			puts("-1");
			return 0;
		} else {
			cnt++;
		}
	}
	printf("%d\n", cnt);
	return 0;
}
