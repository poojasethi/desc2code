#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <deque>
#include <cstdio>
#include <cassert>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>

using namespace std;

int N, X;
typedef set<int> IntSet;
IntSet S;
// typedef vector<int> IntVec;
// IntVec A;

bool prime(int v) {
  // double dv = v;
  // double sqrtv = sqrt(v);
  if (v==2)
    return true;
  for (int i=2; i<sqrt(v)+1; ++i) {
    if (v%i==0)
      return false;
  }
  return true;
}

int main() {
  if (0) {
    assert(prime(2));
    assert(prime(3));
    assert(!prime(4));
    return 0;
  }
  cin>>N>>X;
  for (int i=0; i<N; ++i) {
    int buf;
    cin>>buf;
    S.insert(buf);
  }
  // for (IntSet::iterator it=S.begin(); it!=S.end(); ++it) {
    // A.push_back(*it);
    // cout<<*it<<endl;
  // }
  if (X==2) {
    cout<<0<<endl;
    return 0;
  }
  if (S.find(1)!=S.end()) {
    cout<<1<<endl;
    return 0;
  }

  int cnt = 0;
  for (int i=2; i<X; ++i) {
    if (prime(i)) {
      if (S.find(i)==S.end()) {
        cout<<-1<<endl;
        return 0;
      }
      ++cnt;
    }
  }
  cout<<cnt<<endl;

  return 0;
}


