#include <cstdio>
#include <string.h>
#include <algorithm>
using namespace std;

const long maxn = 100001;
const long maxL = 1300001;
long n,x;
long p[maxn+10], a[maxn];
bool mark[maxL];

long get()
{
	if (x==2) return 0;
	if (a[0]==1) return 1;
	long f = 0;
	for (long i = 0; i != n; ++i) 
	if (a[i] == p[f+1]) {
		++f;
		if (p[f+1]>=x) break;
	}
	if (p[f+1]>=x) return f;
	else return -1;
}

void prework()
{
	memset(mark,0,sizeof(mark));	
	long m = 0;
	for (long i = 2; i != maxL; ++i) 
		if (!mark[i]) {
			p[++m] = i;
			for (long j = 2; j*i<maxL; ++j)
				mark[i*j] = true;
			if (m>=maxn) break;
		}
	return;
}

void init()
{
	scanf("%d%d",&n,&x);
	for (long i = 0; i != n; ++i) scanf("%d",&a[i]);
	sort(a,a+n);
}

int main()
{
	prework();
	init();
	printf("%d\n",get());

	return 0;
}