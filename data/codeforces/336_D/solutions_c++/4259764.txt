#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define mod 1000000007
#define LL __int64
LL A[200005],B[200005];
LL pow(LL x,LL n)
{
    LL res=1;
    while(n)
    {
        if(n&1)res=res*x%mod;
        x=x*x%mod;
        n>>=1;
    }
    return res;
}
LL C(int n,int m)
{
    LL res=A[n]*B[m]%mod*B[n-m]%mod;
    return res;
}
void init(int n)
{
    A[0]=1;
    for(int i=1;i<=n;++i)A[i]=A[i-1]*i%mod;
    for(int i=0;i<=n;++i)B[i]=pow(A[i],mod-2);
}
LL dp[200005];
LL solve(int n,int m)
{
    if(m==0)return n%2;
    dp[0]=m>1;
    dp[1]=m+(m==1);
    for(int i=2;i<=n;++i)
    {
        dp[i]=dp[i-2]+C(m+i-1,m-1);
        dp[i]%=mod;
    }
    return dp[n];
}
int main()
{
    int n,m,g;
    scanf("%d%d%d",&n,&m,&g);
    init(n+m);
    LL ans=solve(n,m);
    if(g==1)ans=C(n+m,n)-ans;
    ans=(ans%mod+mod)%mod;
    printf("%I64d\n",ans);
}
