#include <cstdio>

typedef long long LL;

const int MOD = 1000000007;

void gcd ( LL a , LL b , LL & d , LL & x , LL & y )
{
	if (! b ){ d = a ; x = 1; y = 0; }
	else {
		gcd (b , a %b , d , y , x ); // (**)
		y -= x *( a / b );
	}
}
LL mod(LL x, LL n) {
	return (x % n + n) % n;
}
LL inv(LL a, LL n) {
	LL d, x, y;
	gcd(a, n, d, x, y);
	return d == 1 ? mod(x, n) : -1;
}


int n, m, g, ans;
LL f[200005];

int main() {
	scanf("%d%d%d", &n, &m, &g);
	if (!m) {
		ans = n % 2 == !g ? 1 : 0;
	} else {
	f[m] = m == 1 ? 1 : 0;
	f[m+1] = 1 - f[m];
	LL c = 1;
	for (int i = m+2; i <= m+n+1; ++i) {
		c = c * (i-1) % MOD * inv(i-m-1, MOD) % MOD;
		f[i] = mod(c - f[i-1], MOD);
//		printf("%d %d %d %d\n", i, (int)c, (int)f[i-1], (int)f[i]);
	}
	ans = (int)(g ? f[m+n] : f[m+n+1]);
	}
	printf("%d\n", ans);
}
