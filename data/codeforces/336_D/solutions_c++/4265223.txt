#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

using namespace std;

typedef __int64 ll;
const ll mo = 1000000007;
const int MAXN = 200005;
ll n,m,inv[MAXN],mu[MAXN];
int g;
ll pw(ll x,ll y)
{
    if (y == 0) return 1;
    ll s = pw(x,y/2);
    return (y & 1) ? s * s % mo * x % mo : s * s % mo;
}
ll tot(ll x,ll y)
{
    if (x < 0 || y < 0) return 0;
    return mu[x+y] * inv[x] % mo * inv[y] % mo;
}
ll dp(ll x,ll y)
{
    if (x < 0 || y < 0) return 0;
    if (x + y == 1) return y == 1;
    if (x + y == 2) return x == 2;
    return (tot(x-1,y-1) + dp(x-2,y)) % mo;
}
int main()
{
    scanf("%I64d%I64d%d",&n,&m,&g);
    inv[0] = inv[1] = mu[0] = mu[1] = 1; 
    for (int i = 2; i <= n+m; i ++)
        inv[i] = pw(i,mo-2) * inv[i-1] % mo,
        mu[i] = i * mu[i-1] % mo;
    ll res = dp(n,m);
    if (g != 1) res = (tot(n,m) - res + mo) % mo;
    printf("%I64d\n",res);
    //system("pause");
    return 0;
}
