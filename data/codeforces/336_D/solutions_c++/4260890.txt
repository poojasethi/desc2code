#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
#define mod 1000000007
#define maxn 200010
using namespace std;
typedef long long LL;
LL power(LL p,LL n)
{
	LL ans=1;
	for(;n;n>>=1,p=p*p%mod)
		if(n&1)
			ans=ans*p%mod;
	return ans;
}
LL Anti(LL p)
{
	return power(p,mod-2);
}
LL n,m,fact[maxn],anti[maxn];
int g;
LL C(LL n,LL m)
{
	return fact[n]*anti[n-m]%mod*anti[m]%mod;
}
LL solve()
{
	if(m==0)
		return (n&1)!=g;
	fact[0]=1,anti[0]=Anti(1);
	for(int i=1;i<=n+m;i++)
	{
		fact[i]=fact[i-1]*i%mod;
		anti[i]=Anti(fact[i]);
	}
	LL sum=0;
	for(int i=0;i<=n;i++)
		if((i&1)==g&&n-i+m-1)
			sum=(sum+C(n-i+m-1,m-1))%mod;
	if(m==1&&(n+m)%2==g)
		sum++;
	return sum;
}
int main()
{
	cin>>n>>m>>g;
	cout<<solve()<<endl;
	return 0;
}