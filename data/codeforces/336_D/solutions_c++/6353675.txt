//In the name of God
#include <iostream>
using namespace std;
const int N = 2e5 + 5, mod = 1e9 + 7;

int n, m, g, fac[N] = {1}, dfac[N] = {1};

/*int num0(int, int, int);
int num(int n, int m, int g) {
	cerr << n << ' ' << m << ' ' << g << '\n' << num0(n, m, g) << '\n';
}*/
int num(int n, int m, int g) {
	if (n + m == 1)
		return m == g;
	if (!g)
		return (1ll * fac[n + m] * dfac[n] % mod * dfac[m] - num(n, m, 1)) % mod;
	if (!n)
		return m == 1;
	return num(n - 1, m, 0);
}
int pow(int a, int b) {
	if (!b)
		return 1;
	if (b & 1)
		return 1ll * a * pow(1ll * a * a % mod, b >> 1) % mod;
	return pow(1ll * a * a % mod, b >> 1);
}
int main() {
	int n, m, g;
	for (int i = 1; i < N; i++) {
		fac[i] = 1ll * fac[i - 1] * i % mod;
		dfac[i] = pow(fac[i], mod - 2);
	}
	cin >> n >> m >> g;
	cout << (num(n, m, g) + mod) % mod << '\n';
	return 0;
}
