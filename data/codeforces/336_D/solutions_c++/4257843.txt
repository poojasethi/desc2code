#include<cstdio>
#define LL long long
#define N 100000
#define M 1000000007LL
LL f[2*N+1],fi[2*N+1];

void gcdEx(LL a, LL b, LL& x, LL& y, LL& g)
{
	if (!b) { x = 1; y = 0; g = a; return; }
    	gcdEx(b, a%b, x, y, g);
    	LL x1 = y;
    	LL y1 = x-(a/b)*y;
    	x = x1;
    	y = y1;
}

LL inverse(LL a, LL mod){
	LL x,y,g;
	gcdEx(a,mod,x,y,g);
	return  (x+mod)%mod;
}


void calc(){
	f[0]=fi[0]=1;
	for(int i=1;i<=2*N;++i)
		f[i]=(i*f[i-1])%M, fi[i]=(inverse(i,M)*fi[i-1])%M;
}
LL mod(LL v){
	return v%M;
}
int main(){
	calc();
	int z,o,d;scanf("%d%d%d",&z,&o,&d);
	LL ans=0;
	while(1){
		//want 1
		if(d){
			if(z)
				d=0,--z; 
			else{
				ans=mod(ans+(o==1));
				break;
			}
		}
		//want 0

		// 1
		if(o && (o-1+z) ){
				ans+=mod(mod(f[o-1+z]*fi[o-1])*fi[z]);
				ans%=M;
		}
		// 0
		if(z){
			if(z==1){
				ans=mod(ans+(o<2));
				break;
			}else
				--z,d=1;
		}else
			break;
	}
	printf("%d\n",(int)ans);
	return 0;
}
