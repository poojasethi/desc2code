#include <iostream>
#include <cstdio>
using namespace std;
typedef long long LL;
const LL M=1e9+7;
int n, m,g;
LL inv[200001], fiv[200001], fac[200001];
void Init( int n )
{
    fac[0]=fiv[0]=1;
    fac[1]=inv[1]=fiv[1]=1;
    for( int i=2; i<=n; ++ i ){
        fac[i]=(fac[i-1]*i)%M;
        inv[i]=M-M/i*inv[M%i]%M;
        fiv[i]=(fiv[i-1]*inv[i])%M;
    }
}
LL C(int x, int y )
{
    return (fac[x]*fiv[y])%M*fiv[x-y]%M;
}

LL dfs( int a, int b, int r )
{
    if( b>n ) return 0;
    if( a==1 ){
        if(m==0&&r==g) return 1;
        if(m==1&&r!=g) return 1;
        return 0;
    }
    LL ret=0;
    if( r==g ) ret=C(a-1, n-b );
    return (ret+dfs( a-1, b+1, r^1 ))%M;

}
int main( )
{
    while( scanf("%d%d%d", &n, &m, &g)!= EOF ){
        Init( n+m );
        LL ans=dfs(m+n, 0, 0);
        printf("%I64d\n", ans);
    }
    return 0;
}
