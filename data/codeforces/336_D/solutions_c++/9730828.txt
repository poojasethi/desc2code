#include <bits/stdc++.h>
using namespace std;
const long long mod=1000000007;
const int MAXN=200000;
long long fact[MAXN+5];

long long power(long long x,long long y){
	
	if(y==0)return 1;
	
	long long ret=power(x,y/2);
	
	ret*=ret; ret%=mod;
	if(y%2){ret*=x; ret%=mod;}
	
	return ret;
}

long long calc(int n,int r){
	long long A=(fact[r]*fact[n-r])%mod ;
	
	long long inverse=power(A,mod-2);
	return ( fact[n]* inverse )%mod;
}
long long solve(int z,int o,int g){
	//cout<<"**"<<z<<" "<<o<<endl;
	if(z+o==1){
		if(o && g)return 1;
		if(z && !g)return 1;
		return 0;
	}
	long long ret=0;
	if(!g){// to get zero
		if(o)ret+=calc(o+z-1,z); ret%=mod;
		if(z)ret+=solve(z-1,o,1); ret%=mod;
	}
	else{// to get one 
		if(z)ret+=solve(z-1,o,0); ret%=mod;
	}
	return ret;
}
int main(){
	int z,o,g;
	cin>>z>>o>>g;
	
	fact[0]=1;
	for(int i=1;i<=z+o;i++)
		fact[i]=(fact[i-1]*i)%mod;
		
	cout<<solve(z,o,g)<<"\n";
}
