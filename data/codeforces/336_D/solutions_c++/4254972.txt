#include<cstdio>
#include<iostream>
#include<cstring>
#include<vector>
#include<algorithm>
#include<queue>
#include<map>
#include<string>
using namespace std;
typedef long long i64;
const i64 inf = 1000000007 ;
i64 mod(i64 a,i64 b)
{
    i64 res=1;
    while(b)
    {
        if(b&1) res=res*a%inf;
        b>>=1;
        a=a*a%inf;
    }
    return res;
}
i64 f[1100000],rev[1100000];
i64 cal(i64 a,i64 b){
    return f[a]*mod(f[b]*f[a-b]%inf,inf-2)%inf;
}
i64 dfs(i64 a,i64 b,i64 k)
{
    if(a+b==1)  return k^a; 
    if(k==1&&a==0)  return 0;
    if(k==1)    return dfs(a-1,b,0);
    if(b==0)    return dfs(a-1,b,1);
    if(a==0)    return 1;
    return (cal(a+b-1,a)+dfs(a-1,b,1))%inf;
}
int main()
{
    f[0]=1;
    for(int i=1;i<=1000005;++i) f[i]=f[i-1]*i%inf;
    i64 n,m,k;
    cin>>n>>m>>k;
    cout<<dfs(n,m,k)<<endl;
    return 0;
}