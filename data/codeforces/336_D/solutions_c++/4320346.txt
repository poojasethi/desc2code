#include <iostream>

#define MOD 1000000007
#define MAXN 200005

using namespace std;

int a, b, g, c[MAXN], d[MAXN];

int ff(int x, int n)
{ 
  if (n == 1) return x;
  else
  {
    int p = ff(x, n / 2);
    p = 1LL * p * p % MOD;
    return (n & 1) ? 1LL * p * x % MOD : p;
  }
}

int getSum(int a, int b)
{
  return (b < 0) ? 0 : 1LL * c[a + b] * d[a] % MOD * d[b] % MOD;
}

int getResult(int a, int b, int g)
{
  if (a == 0) 
    return (g == 0 && b > 1) || (g == 1 && b <= 1);
  else
    return (g) ? getResult(a - 1, b, 0) : (getSum(a, b - 1) + getResult(a - 1, b, 1)) % MOD;
}

main()
{
  cin >> a >> b >> g;
  
  c[0] = 1;
  d[0] = 1;
  for (int i = 1; i <= a + b; i++)
  {
    c[i] = 1LL * i * c[i - 1] % MOD;
    d[i] = ff(c[i], MOD - 2);
  }
  
  cout << getResult(a, b, g);
//  system("pause");
}
