#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;

const int mod=1000000007;

long long mi[200010];

int powmod(long long a,int b)
{
    long long ans=1;
    while(b)
    {
	if(b&1)
	    ans*=a,ans%=mod;
	b>>=1;
	a*=a,a%=mod;
    }
    return ans;
}
int C(int i,int j)
{
    return mi[i]*powmod(mi[j],mod-2)%mod*powmod(mi[i-j],mod-2)%mod;
}
long long dfs(int n,int m,int k)
{
    if(m==0)
    {
	if(k==0&&n>1)
	    return 1;
	if(k==1&&n==1)
	    return 1;
	return 0;
    }
    if(k==0)
	return (C(n+m,n)-dfs(n,m,1)+mod)%mod;
    return dfs(n,m-1,0)%mod;
}
int main()
{
    int n,m,k;
    mi[0]=1;
    for(int i=1;i<=200000;i++)
	mi[i]=mi[i-1]*i%mod;
    scanf("%d%d%d",&m,&n,&k);
    n=dfs(n,m,k);
    printf("%d\n",n);
}
