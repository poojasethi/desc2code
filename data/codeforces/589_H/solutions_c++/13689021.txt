#include<cstdio>
#include<iostream>
#include<string>
#include<cstring>
#include<vector>
using namespace std;

struct tree
{int flag,last,d,fa;
};
struct tree a[50010];

struct edge
{int u,v,next;
};
struct edge e[100100];

int n,m,k,num,ans;
int p[50010],used[50010],fa[50010];
vector<int> b,c,w[50010];

int find(int i)
{if(fa[i]==i) return i;
 return fa[i]=find(fa[i]);
}

void add(int u,int v)
{e[num].u=u;
 e[num].v=v;
 e[num].next=p[u];
 p[u]=num;
 num++;
 
 e[num].u=v;
 e[num].v=u;
 e[num].next=p[v];
 p[v]=num;
 num++;
}

void init(int i,int fa)
{int j;
 
 j=p[i];
 while(j!=-1)
 {	if(e[j].v!=fa)	
 	{	a[e[j].v].fa=i;
 		a[e[j].v].d=a[i].d+1;
 		init(e[j].v,i);
 	}
	j=e[j].next;
 }
}
	
void connect(int i,int j)
{int k;
	
 //cout<<i<<" "<<j<<endl;	
	
 b.clear();
 c.clear();
 while(i!=j)
 {	if(a[i].d>a[j].d)
 	{	b.push_back(i);
 		i=a[i].fa;
 	}
 	else
 	{	c.push_back(j);
 		j=a[j].fa;
 	}
 }
 ans++;
 for(k=0;k<b.size();k++)
 	w[ans].push_back(b[k]);
 w[ans].push_back(i);
 for(k=c.size()-1;k>=0;k--)
 	w[ans].push_back(c[k]);
}

void work(int i,int fa)
{int j,x=0;
 
 used[i]=1;
 j=p[i];
 while(j!=-1)
 {	if(e[j].v!=fa)
 		work(e[j].v,i);
	j=e[j].next;	
 }

 if(a[i].flag==1)
 	x=i;
 j=p[i];
 while(j!=-1)
 {	if(e[j].v!=fa && a[e[j].v].last!=0)
 	{	if(x!=0)
		{ 	connect(a[e[j].v].last,x);
 			x=0;
 		}
 		else
 			x=a[e[j].v].last;
 	}
 	j=e[j].next;
 }
 a[i].last=x;
}

int main()
{int i,j,k,x,y,fx,fy;
 
 scanf("%d%d%d",&n,&m,&k);
 
 for(i=1;i<=n;i++)
 	fa[i]=i;
 
 memset(p,-1,sizeof(p));
 for(i=1;i<=m;i++)
 {	scanf("%d%d",&x,&y);
 	fx=find(x);
 	fy=find(y);
 	if(fx!=fy)
 	{	add(x,y);
 		fa[fx]=fy;
	}
 }
 
 for(i=1;i<=k;i++)
 {	scanf("%d",&x);
 	a[x].flag=1;
 }
 
 for(i=1;i<=n;i++)
 	if(used[i]==0)
	{ 	init(i,0);
		//cout<<"sdg"<<endl;
		work(i,0);
		//cout<<"jk"<<endl;
 	}
 
 printf("%d\n",ans);
 for(i=1;i<=ans;i++)
 {	printf("%d",w[i].size()-1);
 	for(j=0;j<w[i].size();j++)
	 	printf(" %d",w[i][j]);
	printf("\n");
 }
 
 return 0;
}	