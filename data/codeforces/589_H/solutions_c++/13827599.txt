#include <bits/stdc++.h>

using namespace std;

const int MAXN = 60000;

bool ok[MAXN];
vector<int> g[MAXN];

int n,m,k;

bool mk[MAXN];
int next[MAXN];
int back[MAXN];
int end[MAXN];

int solsz;
vector<int> routes[MAXN];

bool solve( int u , int p ){
    if( mk[u] ){
        return false;
    }

    mk[u] = true;

    vector<int> tmp , tmp2;

    for(int i = 0; i < g[u].size(); i++){
        int v = g[u][i];
        if( solve( v , u ) ){
            tmp.push_back( end[v] );
            tmp2.push_back( v );
        }
    }

    int mid = tmp.size() / 2;
    for(int i = 0; i < mid; i++){
        for( int v = tmp[i]; v != -1; v = back[v] ){
            routes[solsz].push_back( v );
        }
        for( int v = tmp2[i+mid]; v != -1; v = next[v] ){
            routes[solsz].push_back( v );
        }
        solsz++;
    }

    if( tmp.size() % 2 == 0 ){
        if( !ok[u] ){
            return false;
        }
        end[u] = u;
        back[u] = p;
        return true;
    }

    if( ok[u] ){
        routes[solsz].push_back( u );
        for( int v = tmp2[ tmp.size()-1 ]; v != -1; v = next[v] ){
            routes[solsz].push_back( v );
        }
        solsz++;
        return false;
    }
    next[u] = tmp2[ tmp.size()-1 ];
    back[u] = p;
    end[u] = end[ next[u] ];
    return true;
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);

    //freopen("dat.txt","r",stdin);

    cin >> n >> m >> k;

    for(int i = 0; i < m; i++){
        int u,v; cin >> u >> v;
        g[u].push_back(v);
        g[v].push_back(u);
    }

    for(int i = 0; i < k; i++){
        int u; cin >> u;
        ok[u] = true;
    }
    for(int i = 0; i <= n; i++){
        next[i] = back[i] = end[i] = -1;
    }

    for(int i = 1; i <= n; i++){
        if( !mk[i] ){
            solve( i , -1 );
        }
    }

    cout << solsz << '\n';

    for(int i = 0; i < solsz; i++){
        cout << routes[i].size()-1;
        for(int j = 0; j < routes[i].size(); j++){
            cout << ' ' << routes[i][j];
        }
        cout << '\n';
    }
}