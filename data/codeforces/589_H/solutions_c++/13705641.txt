#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <vector>
#include <set>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 50005

template <class T> inline void Min(T &a,T b){if(a>b)a=b;}
template <class T> inline void Max(T &a,T b){if(a<b)a=b;}

vector<vi>res;
vi g[N],q[N];
int mark[N],vis[N],p[N];
void add(int u,int v,int w){
    vi a,b;
    while(u!=w)a.pb(u),u=p[u];
    while(v!=w)b.pb(v),v=p[v];
    a.pb(w);
    for(int i=b.size()-1;i>=0;i--)a.pb(b[i]);
    res.pb(a);
}
int dfs(int u,int fa){
    p[u]=fa;vis[u]=1;
    if(mark[u])q[u].pb(u);
    for(int i=0;i<g[u].size();i++){
        int j=g[u][i];
        if(j==fa||vis[j])continue;
        int x=dfs(j,u);
        if(x!=-1)q[u].pb(x);
    }
    for(int i=1;i<q[u].size();i+=2){
        add(q[u][i],q[u][i-1],u);
    }
    if(q[u].size()&1)return q[u][q[u].size()-1];
    return -1;
}
int main(){
    int T,i,j,k,n,m,K;
    scanf("%d%d%d",&n,&m,&K);
    for(i=0;i<m;i++){
        scanf("%d%d",&j,&k);
        g[j].pb(k),g[k].pb(j);
    }
    while(K--){
        scanf("%d",&i);mark[i]=1;
    }
    for(i=1;i<=n;i++)if(!vis[i])dfs(i,0);
    printf("%d\n",res.size());
    for(i=0;i<res.size();i++){
        vi &v=res[i];
        printf("%d ",v.size()-1);
        for(j=0;j<v.size();j++)printf("%d ",v[j]);puts("");
    }
    return 0;
}