#include<cstdio>
#include<cstring>
#include<vector>
#include<algorithm>
#define LL long long
#define lson l,m,rt<<1
#define rson m+1,r,rt<<1|1
using namespace std;
int n,m,k;
const int N=5e5+5;
vector<int> G[N];
vector<pair<int,int> >ans;
vector<int>road[N];
int vis[N],is[N],last[N];
void dfs(int u)
{
    vis[u]=1;last[u]=-1;
    if(is[u])
    {
        last[u]=u;
        road[u].clear();road[u].push_back(u);
    }
    for(int i=0;i<G[u].size();i++)
    {
        int v=G[u][i];
        if(vis[v])continue;
        dfs(v);
        if(last[v]!=-1)
        {
            road[last[v]].push_back(u);
            if(last[u]!=-1)
            {
                ans.push_back(make_pair(last[u],last[v]));
                last[u]=-1;
            }
            else last[u]=last[v];
        }
    }
}
int main()
{
    //freopen("a.txt","r",stdin);
    while(~scanf("%d%d%d",&n,&m,&k))
    {
        for(int i=1;i<=n;i++)G[i].clear();
        for(int i=1;i<=m;i++)
        {
            int u,v;
            scanf("%d%d",&u,&v);
            G[u].push_back(v);G[v].push_back(u);
        }
        memset(is,0,sizeof(is));
        memset(vis,0,sizeof(vis));
        ans.clear();
        for(int i=1;i<=k;i++)
        {
            int x;scanf("%d",&x);
            is[x]=1;
        }
        for(int i=1;i<=n;i++)if(!vis[i])dfs(i);
        printf("%d\n",ans.size());
        for(int i=0;i<ans.size();i++)
        {
            int u=ans[i].first,v=ans[i].second;
            printf("%d",road[u].size()+road[v].size()-2);
            for(int j=0;j<road[u].size();j++)printf(" %d",road[u][j]);
            for(int j=road[v].size()-2;j>=0;j--)printf(" %d",road[v][j]);
            printf("\n");
        }
    }
    return 0;
}

					  			 	 		 		 			 					