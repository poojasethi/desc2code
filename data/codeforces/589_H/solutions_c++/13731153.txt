#include <bits/stdc++.h>

#define FOR(a,b,c) for(int a=(b),_for=(c);a<_for;++a)
#define ll long long
#define vi vector < int > 
#define pii pair < int, int >
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define PCNT(a) __builtin_popcount(a);

using namespace std;

const int MAXN = 50000;

int n,m,k;
bool bitan[MAXN+5];
bool bio[MAXN+5];
vector < int > sol[MAXN+5];
vector < int > v[MAXN+5];
vector < int > v0[MAXN+5];
int spos;

void spoji(int v1,int a,int v2){
	FOR(i,0,v[v1].size())
		sol[spos].pb(v[v1][i]);
	v[v1].clear();
	sol[spos].pb(a);
	if (v2>=0){
		for (int i=v[v2].size()-1;i>=0;--i)
			sol[spos].pb(v[v2][i]);
		v[v2].clear();
	}
	spos++;
}

int dfs(int curr){
	bio[curr]=1;
	int imam=-1;
	FOR(i,0,v0[curr].size()){
		int nx=v0[curr][i];
		if (bio[nx]) continue;
		int vec = dfs(nx);
		if (vec>=0){
			if (imam>=0){
				spoji(imam,curr,vec);
				imam=-1;
			}
			else imam=vec;
		}
	}
	if (bitan[curr]){
		if (imam>=0 && bitan[curr]){
			spoji(imam,curr,-1);
			imam=-1;
		}
		else{
			v[curr].pb(curr);
			imam=curr;
		}
	}
	else{
		if (imam>=0) v[imam].pb(curr);
	}
	if (imam>=0){
		return imam;
	}
	else return -1;
}

int main(){
	scanf ("%d%d%d",&n,&m,&k);
	FOR(i,0,m){
		int a,b;
		scanf ("%d%d",&a,&b);a--;b--;
		v0[a].pb(b);
		v0[b].pb(a);
	}
/*	FOR(i,0,n){
		printf ("%d -> ",i);
		FOR(j,0,v[i].size())
			printf ("%d ",v[i][j]);
		printf ("\n");
	}*/
	FOR(i,0,k){
		int a;
		scanf ("%d",&a);a--;bitan[a]=1;
	}
	FOR(i,0,n) if (!bio[i]) dfs(i);
	printf ("%d\n",spos);
	FOR(i,0,spos){
		printf ("%d ",(int)sol[i].size()-1);
		FOR(j,0,sol[i].size())
			printf ("%d ",sol[i][j]+1);
		printf ("\n");
	}
	return 0;
}

