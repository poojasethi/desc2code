#include<cstdio>
#include<algorithm>
#include<cmath>
#include<deque>
#include<cctype>
#include<vector>
#include<iostream>
using namespace std;

vector<vector<int> > g;
vector<bool> mark, u;
vector<vector<int> > res;

vector<int> dfs(int v) {
	u[v] = 1;
	vector<int> prev;
	if (mark[v])
		prev.push_back(v);
	for (size_t i=0;i<g[v].size();++i) 
		if (!u[g[v][i]]){
			vector<int> p = dfs(g[v][i]);
			if (p.empty())
				continue;
			if (!prev.empty()) {
				prev.insert(prev.end(), p.rbegin(), p.rend());
				res.push_back(prev);
				prev.clear();
			} else {
				p.push_back(v);
				p.swap(prev);
			}
		}
	return prev;
}

void solve() {
	int n, m, k;
	scanf("%d%d%d",&n,&m,&k);
	g.clear();
	g.resize(n);
	mark.assign(n, false);
	u.assign(n, false);
	res.clear();
	for (int i=0;i<m;++i) {
		int a, b;
		scanf("%d%d",&a,&b);
		g[a-1].push_back(b-1);
		g[b-1].push_back(a-1);
	}
	for (int i=0;i<k;++i) {
		int t;
		scanf("%d", &t);
		mark[t-1] = true;
	}
	for (int i=0;i<n;++i)
		if (!u[i])
			dfs(i);
	cout << res.size() << endl;
	for (size_t i=0;i<res.size();++i) {
		cout << res[i].size() - 1;
		for (size_t j=0;j<res[i].size();++j)
			cout << ' ' << res[i][j] + 1;
		cout << endl;
	}
}

int main() {
#ifdef MULTITEST
	freopen("input.txt","r",stdin);
	while(!feof(stdin)) {
		int ch = getchar();
		if (isgraph(ch)) {
			ungetc(ch, stdin);
			solve();
		}
	}
#else
	solve();
#endif
	return 0;
}
