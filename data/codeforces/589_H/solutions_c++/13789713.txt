#define _USE_MATH_DEFINES
#define _CRT_SECURE_NO_WARNINGS

#include <cstdio>
#include <algorithm>
#include <map>
#include <vector>
#include <iostream>
#include <set>
#include <cmath>
#include <cstring>
#include <bitset>
#include <deque>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef pair<int, int> pii;
typedef vector<pii> vpii;

#define bpc(a) __builtin_popcount(a)
#define debug(x) { cerr<<#x<<" = "<<(x)<<endl; }

const int mod = 1e9 + 7;
const int inf = 1e9;

ll powm(ll a,ll p,ll m){ll r=1 % m;while(p){if(p&1)r=r*a%m;p>>=1;a=a*a%m;}return r;}

int n, m, k, rc[50001], uses[50001], from[50001];
vi g[50001];
vvi ans;

int dfs(int v, int p)
{
    if(uses[v])
        return 0;
    uses[v] = 1;
    from[v] = p;
    int a = rc[v] ? v : 0;
    for(int i = 0; i < g[v].size(); ++i)
    {
        int b = dfs(g[v][i], v);
        if(a && b)
        {
            vi path, path2;
            for(; a != v; a = from[a])
                path.push_back(a);
            for(; b != v; b = from[b])
                path2.push_back(b);
            path.push_back(v);
            for(int j = path2.size() - 1; j >= 0; --j)
                path.push_back(path2[j]);
            ans.push_back(path);
            a = b = 0;
        }
        if(b)
            a = b;
    }
    return a;
}

int main()
{
    scanf("%d%d%d", &n, &m, &k);
    for(int i = 0, a, b; i < m; ++i)
    {
        scanf("%d%d", &a, &b);
        g[a].push_back(b);
        g[b].push_back(a);
    }
    for(int i = 0, r; i < k; ++i)
    {
        scanf("%d", &r);
        rc[r] = 1;
    }
    for(int i = 1; i <= n; ++i)
        dfs(i, 0);
    printf("%d\n", (int)ans.size());
    for(int i = 0; i < ans.size(); ++i)
    {
        printf("%d", (int)ans[i].size() - 1);
        for(int j = 0; j < ans[i].size(); ++j)
            printf(" %d", ans[i][j]);
        puts("");
    }
    return 0;
} 
