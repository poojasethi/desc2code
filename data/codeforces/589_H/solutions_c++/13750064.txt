#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define X first
#define Y second
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	mp make_pair
#define	pb push_back

inline int max(int a,int b){return a<b?b:a;}
inline int min(int a,int b){return a>b?b:a;}
inline ll max(ll a,ll b){return a<b?b:a;}
inline ll min(ll a,ll b){return a>b?b:a;}
const int mod = 1e9+7;
const int N = 1e5+10;
const ll INF = 1e18;

vector<int> G[N],c[N],p[N];
int u[N],a[N];
int h=0;
int dfs(int v){
  u[v]=1;
//  printf("%d\n",v);
  int cur=-1;
  if(a[v]==1){
    c[v].pb(v); cur=v;
  }
  REP(i,G[v].size()) if(u[G[v][i]]==0){
    int x=dfs(G[v][i]);
    if(x!=-1){
      if(cur==-1) cur=x;
      else{
        REP(j,c[cur].size()) if(c[cur][j]!=v){
          p[h].pb(c[cur][j]);
        }
        p[h].pb(v);
        for(int j=c[x].size()-1;j>=0;j--) if(c[x][j]!=v){
          p[h].pb(c[x][j]);
        }
        h++;
        cur=-1;
      }
    }
  }
  if(cur!=-1){
    if(c[cur][0]!=v)c[cur].pb(v);
  }
//  printf("%d %d\n",v,cur);
  return cur;
}
int main(){
  int n,m,k;
  scanf("%d%d%d",&n,&m,&k);
  REP(i,m){
    int x,y; scanf("%d%d",&x,&y);x--;y--;
    G[x].pb(y);G[y].pb(x);
  }
  REP(i,k) {
    int x; scanf("%d",&x);
    x--; a[x]=1;
  }
  REP(i,n) if(u[i]==0) dfs(i);
  printf("%d\n",h);
  REP(i,h){
    printf("%d ",(int)p[i].size()-1);
    REP(j,p[i].size()) printf("%d ",p[i][j]+1);
    printf("\n");
  }
  return 0;
}
