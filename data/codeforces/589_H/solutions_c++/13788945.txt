#include<bits/stdtr1c++.h>
using namespace std;

int n,m,k;
vector<vector<int> > adj;
vector<bool> spec, vis;

vector<vector<int> > ans;
void merge(vector<int> &a, vector<int> &b) {
	reverse(b.begin(), b.end());
	for(int i =1;i<b.size();i++)
		a.push_back(b[i]);
	ans.push_back(a);
}

vector<int> dfs(int ind) {
	queue<vector<int> > q;
	vis[ind] = 1;
	for(int i=0;i<adj[ind].size();i++) {
		int t = adj[ind][i];
		if(vis[t])
			continue;
		vector<int> ret = dfs(t);
		if(ret.size()) {
			ret.push_back(ind);
			q.push(ret);
		}
	}
	while(q.size() > 1) {
		vector<int> a = q.front();q.pop();
		vector<int> b = q.front();q.pop();
		merge(a,b);
	}
	vector<int> ret;
	if(q.size()) {
		if(spec[ind]) {
			ans.push_back(q.front());
		} else {
			ret = q.front();
		}
	} else {
		if(spec[ind]) {
			ret.push_back(ind);
		}
	}
	return ret;
}

int main() {
#ifndef ONLINE_JUDGE
    freopen("2.in", "r", stdin);

#endif // ONLINE_JUDGE
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    cin>>n>>m>>k;
    adj.resize(n+1);
    spec.resize(n+1);
    vis = spec;
    int a, b;
    while(m--) {
    	cin>>a>>b;
    	a--;
    	b--;
    	adj[a].push_back(b);
    	adj[b].push_back(a);
    }
    while(k--) {
    	cin>>a;
    	a--;
    	spec[a] =1;
    }
    for(int i=0;i<n;i++) {
    	if(!vis[i]){
    		dfs(i);
    	}
    }
    cout<<ans.size()<<endl;
    for(int i=0;i<ans.size();i++) {
    	cout<<ans[i].size() -1 ;
    	for(int j=0;j<ans[i].size();j++) {
    		cout<<" ";
    		cout<<ans[i][j]+1;
    	}cout<<endl;
    }
    return 0;

}
