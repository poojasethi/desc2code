#include <cstdio>
#include <vector>

using namespace std;

const int MAXN = 5E4 + 10;

vector<int> E[MAXN];
vector<int> a[MAXN];
int vis[MAXN];
bool spec[MAXN];

int ans;
vector<vector<int> > lst;

int DFS(int u){
	vis[u] = true;
	int pre = 0;
	if (spec[u])
		pre = u;
	for (int v, i = 0; i < E[u].size(); ++i)
		if (!vis[v = E[u][i]]){
			int res = DFS(v);
			if (res > 0){
				if (pre > 0){
					lst.push_back(vector<int>());
					for (int j = 0; j < a[pre].size(); ++j)
						lst[ans].push_back(a[pre][j]);
					lst[ans].push_back(u);
					for (int j = a[res].size() - 1; j >= 0; --j)
						lst[ans].push_back(a[res][j]);
					++ans;
					pre = 0;
				}
				else
					pre = res;
			}
		}
	if (pre)
		a[pre].push_back(u);
	return pre;
}

int main(){
	int n, m, k;
	scanf("%d%d%d", &n, &m, &k);
	for (int u, v, i = 0; i < m; ++i){
		scanf("%d%d", &u, &v);
		E[u].push_back(v);
		E[v].push_back(u);
	}
	for (int u, i = 0; i < k; ++i){
		scanf("%d", &u);
		spec[u] = true;
	}

	for (int i = 1; i <= n; ++i)
		if (!vis[i]){
			DFS(i);
		}
	printf("%d\n", ans);
	for (int i = 0; i < ans; ++i){
		printf("%d", (int)(lst[i].size() - 1));
		for (int j = 0; j < lst[i].size(); ++j)
			printf(" %d", lst[i][j]);
		puts("");
	}
	return 0;
}
