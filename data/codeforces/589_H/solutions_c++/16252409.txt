#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<map>
#include<vector>
#include<queue>
#include<stack>
#include<algorithm>
using namespace std;
typedef pair<int,int> P;
typedef long long ll;
#define MAXN 50010
int n,m,k,is[MAXN],last[MAXN],vis[MAXN];
vector<int> G[MAXN];
vector<int> road[MAXN];
int num;
P ans[MAXN];

void dfs(int u)
{
    //cout<<u<<endl;
    vis[u]=1;
    if(is[u])
    {
        last[u]=u;
        road[u].push_back(u);
    }
    else last[u]=0;
    for(int i=0,sz=G[u].size();i<sz;i++)
    {
        int v=G[u][i];
        if(!vis[v])
        {
            dfs(v);
        }
        else continue;
        if(last[v])
        {
            road[last[v]].push_back(u);
            if(last[u])
            {
                ans[++num]=make_pair(last[u],last[v]);
                //cout<<num<<" "<<ans[num].first<<" "<<ans[num].second<<endl;
                last[u]=0;
            }
            else last[u]=last[v];
        }
    }
}

int main()
{
    scanf("%d%d%d",&n,&m,&k);
    for(int i=1;i<=n;i++)
    {
        G[i].clear();
        road[i].clear();
    }
    memset(last,0,sizeof(last));
    memset(is,0,sizeof(is));
    memset(vis,0,sizeof(vis));
    num=0;
    for(int i=1;i<=m;i++)
    {
        int a,b;
        scanf("%d%d",&a,&b);
        G[a].push_back(b);
        G[b].push_back(a);
    }
    for(int i=1;i<=k;i++)
    {
        int p;
        scanf("%d",&p);
        is[p]=1;
    }
    for(int i=1;i<=n;i++)
    {
        if(!vis[i])
            dfs(i);
    }
    printf("%d\n",num);
    for(int i=1;i<=num;i++)
    {
        int u=ans[i].first;
        int v=ans[i].second;
        printf("%d ",road[u].size()+road[v].size()-2);
        for(int i=0;i<road[u].size()-1;i++)
            printf("%d ",road[u][i]);
        for(int i=road[v].size()-1;i>=0;i--)
        {
            printf("%d",road[v][i]);
            if(i) printf(" ");
            else printf("\n");
        }
    }
}

 	  		      		 				      				 	