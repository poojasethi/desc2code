#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <cmath>
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

#define pb push_back
#define mp make_pair
#define fi first
#define se second


const int MAXN = 512345;

vector<pair<int, int> > e[MAXN];
bool r[MAXN];
bool vis[MAXN];
bool use[MAXN];
int next[MAXN];
int size[MAXN];


void dfs(int i){
	int j;
	vis[i] = true;
	size[i] = r[i];
	for(j = 0; j < e[i].size(); j++)
		if(!vis[e[i][j].fi]){
			dfs(e[i][j].fi);
			if(size[e[i][j].fi] % 2 == 1)
				use[e[i][j].se] = true;
			size[i] += size[e[i][j].fi];
		}
}

int main(){
#ifdef LOCAL
	freopen("in", "r", stdin);
#endif
	int n, m, k;
	int i, j;

	scanf("%d%d%d", &n, &m, &k);
	for(i = 0; i < m; i++){
		int a, b;
		scanf("%d%d", &a, &b);
		a--;
		b--;
		e[a].pb(mp(b, i));
		e[b].pb(mp(a, i));
	}
	for(i = 0; i < k; i++){
		int a;
		scanf("%d", &a);
		a--;
		r[a] = true;
	}

	for(i = 0; i < n; i++)
		if(r[i] && !vis[i]){
			dfs(i);
			if(size[i] % 2 == 1)
				r[i] = false;
		}

	int ans = 0;
	for(i = 0; i < n; i++)
		ans += r[i];
	ans /= 2;
	printf("%d\n", ans);
	for(i = 0; i < n; i++){
		if(r[i]){
			int tempi = i;
			vector<int> sol;
			sol.pb(i);
			r[i] = false;
			while(!r[i]){
				j = next[i];
				for(; j < e[i].size(); j++)
					if(use[e[i][j].se]){
						use[e[i][j].se] = false;
						next[i] = j;
						i = e[i][j].fi;
						break;
					}
				sol.pb(i);
			}
			r[i] = false;
			printf("%d", sol.size()-1);
			for(j = 0; j < sol.size(); j++)
				printf(" %d", sol[j]+1);
			printf("\n");
			i = tempi;
		}
	}

	return 0;
}
