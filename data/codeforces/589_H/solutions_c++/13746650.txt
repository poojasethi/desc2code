#include <bits/stdc++.h>

using namespace std;

#define dbgs(x) cerr << (#x) << " --> " << (x) << ' '
#define dbg(x) cerr << (#x) << " --> " << (x) << endl

#define foreach(i,x) for(type(x)i=x.begin();i!=x.end();i++)
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define ROF(ii,aa,bb) for(int ii=aa;ii>=bb;ii--)

#define type(x) __typeof(x.begin())

#define orta (bas + son >> 1)
#define sag (k + k + 1)
#define sol (k + k)

#define pb push_back
#define mp make_pair

#define nd second
#define st first

#define endl '\n'

typedef pair < int ,int > pii;

typedef long long ll;

const long long linf = 1e18+5;
const int mod = (int) 1e9 + 7;
const int logN = 17;
const int inf = 1e9;
const int N = 1e6 + 5;

int root[N], s, n, m, x, y, ok[N], h[N], t, k;
pair< int , pii > ans[N];
vector< int > v[N];

int solve(int node) {
	int t = ok[node] ? node : 0;
	h[node] = 1;
	foreach(it, v[node])
		if(!h[*it]) {
			root[*it] = node;
			int k = solve(*it);
			if(k) {
				if(!t) t = k;
				else {
					ans[++s] = mp(node, mp(k, t));
					t = 0;
				}
			}
		}
	return t;	
}

int main() {
	scanf("%d %d %d",&n, &m, &k);
	FOR(i, 1, m) {
		scanf("%d %d", &x, &y);
		v[x].pb(y);
		v[y].pb(x);
	}
	FOR(i, 1, k) { scanf("%d",&x); ok[x] = 1; }
	FOR(i, 1, n) if(!h[i]) solve(i);
   	cout << s << endl;
	FOR(i, 1, s) {
		stack< int > S;
		queue< int > Q;
		int x = ans[i].nd.st, y = ans[i].nd.nd, t = ans[i].st;
		while(x != t) { Q.push(x); x = root[x]; } Q.push(t);
		while(y != t) { S.push(y); y = root[y]; };
		printf("%d ",(int) Q.size() + (int) S.size() - 1);
		while(!Q.empty()) { printf("%d ",Q.front()); Q.pop(); } 
		while(!S.empty()) { printf("%d ",S.top()); S.pop(); } printf("\n");
	}
	return 0;
}
