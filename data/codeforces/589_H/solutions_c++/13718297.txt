#include <stdio.h>
#include <string.h>
#include <string>
#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <math.h>
#include <algorithm>
using namespace std;

#define pb push_back
#define mp make_pair
#define f first
#define s second
#define LL long long

std::vector<int> v[50005];
std::vector<std::vector<int> > res;
bool good[50005], vis[50005];
int nxt[50005];

bool dfs(int node)
{
	vis[node] = true;
	int x, y = -1;
	for(int i=0;i<v[node].size();i++)
	{
		x = v[node][i];
		if(vis[x]) continue;
		if(dfs(x))
		{
			if(y != -1)
			{
				std::vector<int> tmp;
				while(x)
				{
					tmp.pb(x);
					x = nxt[x];
				}
				reverse(tmp.begin(), tmp.end());
				tmp.pb(node);
				while(y)
				{
					tmp.pb(y);
					y = nxt[y];
				}
				res.push_back(tmp);
				y = -1;
			}
			else y = x;
		}
	}
	if(y != -1)
	{
		if(good[node])
		{
			std::vector<int> tmp;
			tmp.pb(node);
			while(y)
			{
				tmp.pb(y);
				y = nxt[y];
			}
			res.push_back(tmp);
			return 0;
		}
		else{
			nxt[node] = y;
			return 1;
		}
	}
	else
	{
		if(good[node]) return 1;
		return 0;
	}
}

int main () {
	int n, m, k, x, y;
	scanf("%d %d %d", &n, &m, &k);
	for(int i=0;i<m;i++)
	{
		scanf("%d %d", &x, &y);
		v[x].pb(y);
		v[y].pb(x);
	}
	for(int i=0;i<k;i++)
	{
		scanf("%d", &x);
		good[x] = true;
	}
	for(int i=1;i<=n;i++)
		if(!vis[i])
			dfs(i);
	printf("%d\n", res.size());
	for(int i=0;i<res.size();i++)
	{
		printf("%d", res[i].size() - 1);
		for(int j=0;j<res[i].size();j++)
			printf(" %d", res[i][j]);
		printf("\n");
	}
	return 0;
}