#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

const int N=100005;
struct node{
	int to,next;
}p[N];
int ans,si,n,m,k,tot,head[N],rem[N],a[N],fa[N];
bool vis[N],key[N];
inline void add(int x,int y){
	p[++tot].to=y;p[tot].next=head[x];head[x]=tot;
	p[++tot].to=x;p[tot].next=head[y];head[y]=tot;
}
inline void connect(int x,int y,int t){
	int l=0,r=0;
	while(x!=t) a[++l]=x,x=fa[x];
	a[++l]=t;r=l;
	while(y!=t) a[++l]=y,y=fa[y];
	if(l>r) reverse(a+r+1,a+l+1);
	printf("%d",l-1);
	for(int i=1;i<=l;i++) printf(" %d",a[i]);
	puts("");
}
inline void dfs(int x){
	vis[x]=1;si+=key[x];
	for(int i=head[x];i;i=p[i].next){
		int y=p[i].to;
		if(vis[y]) continue;
		dfs(y);fa[y]=x;
	}
}
inline void solve(int x){
	vis[x]=1;int last=0;
	for(int i=head[x];i;i=p[i].next){
		int y=p[i].to;
		if(vis[y]) continue;
		solve(y);
		if(rem[y]){
			if(!last) last=rem[y]; else connect(last,rem[y],x),last=0;
		}
	}
	if(last&&!key[x]) rem[x]=last;
	else if(!last&&key[x]) rem[x]=x;
	else if(last&&key[x]) connect(last,x,x);
}

int main(){
	scanf("%d%d%d",&n,&m,&k);
	for(int i=1;i<=m;i++){
		int x,y;
		scanf("%d%d",&x,&y);
		add(x,y);
	}
	for(int i=1;i<=k;i++){
		int x;scanf("%d",&x);
		key[x]=1;
	}
	for(int i=1;i<=n;i++) if(!vis[i]) si=0,dfs(i),ans+=si/2;
	printf("%d\n",ans);
	memset(vis,0,sizeof(vis));
	for(int i=1;i<=n;i++) if(!vis[i]) solve(i);
	return 0;
}

/*
4 3 4
1 2
1 3
1 4
1 2 3 4
*/