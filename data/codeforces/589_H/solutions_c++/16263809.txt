#include<iostream>
#include<cstdlib>
#include<cstdio>
#include<cstring>
#include<vector>
using namespace std;

const int N=50005;
const int M=100000+10;
bool mark[N],vis[N];
int fa[N];
int Head[N];
vector<vector<int> >ans;
struct Edge
{
    int u,v,next;
}edge[M];
int e_cnt;
void init()
{
    memset(Head,-1,sizeof(Head));
    e_cnt=0;
}
void add_edge(int u,int v)
{
    e_cnt++;edge[e_cnt].u=u;edge[e_cnt].v=v;
    edge[e_cnt].next=Head[u];Head[u]=e_cnt;
}

int dfs(int u)
{
    vis[u]=1;
    vector<int> s;
    for(int i=Head[u];i!=-1;i=edge[i].next)
    {
        int v=edge[i].v;
        if(vis[v])continue;
        fa[v]=u;
        int t=dfs(v);
        if(t!=-1)s.push_back(t);
    }
    if(mark[u])s.push_back(u);
    for(int i=0;i+1<s.size();i+=2)
    {
        int a=s[i],b=s[i+1];
        vector<int> res,temp;
        while(a!=u)res.push_back(a),a=fa[a];
        res.push_back(u);
        while(b!=u)temp.push_back(b),b=fa[b];
        for(int j=temp.size()-1;j>=0;j--) res.push_back(temp[j]);
        ans.push_back(res);
    }
    if(s.size()&1)return s[s.size()-1];
    else return -1;
}

int main()
{
    int n,m,k;
    scanf("%d%d%d",&n,&m,&k);
    init();
    for(int i=0;i<m;i++)
    {
        int u,v;
        scanf("%d%d",&u,&v);
        add_edge(u,v);
        add_edge(v,u);
    }
    for(int i=0;i<k;i++)
    {
        int x;
        scanf("%d",&x);
        mark[x]=true;
    }
    for(int i=1;i<=n;i++)if(!vis[i])dfs(i);
    cout<<ans.size()<<endl;
    for(int i=0;i<ans.size();i++)
    {
        cout<<ans[i].size()-1<<" ";
        for(int j=0;j<ans[i].size();j++)cout<<ans[i][j]<<" ";
        cout<<endl;
    }
    return 0;
}
			   	   	 						 	 			   				