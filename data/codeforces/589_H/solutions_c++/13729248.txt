#include<bits/stdc++.h>

using namespace std;

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define sol (root+root)
#define sag (root+root+1)
#define orta ((bas+son)/2)
#define ll long long
#define pii pair<int,int>

const int N=1e5+5;
const int mod=1e9+7;

int i,j,n,m,k,x,y,l;
int H[N],pred[N],A[N];

vector<pair<pii,int> > ans;

vector<int> V[N],ww,qq;

int f(int x,int ata){
	
	int q=0,w=0,i;

	H[x]=1;

	pred[x]=ata;

	for(i=0 ; i<V[x].size() ; i++)
		if(!H[V[x][i]]){
			q=0;
			q=f(V[x][i],x);
			if(w and q){
				ans.pb(mp(mp(w,q),x));
				w=0;
			}
			else if(q)
				w=q;
		}

	if(w and A[x]){
		ans.pb(mp(mp(x,w),x));
		w=0;
	}
	else if(A[x])
		w=x;

	return w;
}

main(){

	scanf("%d %d %d",&n,&m,&k);

	for(i=1 ; i<=m ; i++){
		scanf("%d %d",&x,&y);
		V[x].pb(y);
		V[y].pb(x);
	}

	for(i=1 ; i<=k ; i++){
		scanf("%d",&x);
		A[x]=1;
	}

	for(i=1 ; i<=n ; i++)
		if(!H[i])
			f(i,0);

	printf("%d\n",(int)ans.size());

	for(i=0 ; i<ans.size() ; i++){
		x=ans[i].st.st;
		y=ans[i].st.nd;
		l=ans[i].nd;
		qq.clear();
		ww.clear();
		while(x!=l){
			qq.pb(x);
			x=pred[x];
		}
		while(y!=l){
			ww.pb(y);
			y=pred[y];
		}
		int qqs=qq.size(),wws=ww.size();
		printf("%d ",qqs+wws);
		for(j=0 ; j<qqs ; j++)
			printf("%d ",qq[j]);
		printf("%d ",l);
		for(j=wws-1 ; j>=0 ; j--)
			printf("%d ",ww[j]);
		printf("\n");
	}
}
