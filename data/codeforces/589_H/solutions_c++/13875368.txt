#include <bits/stdc++.h>

using namespace std;

const int maxn = 200008;

vector<int> g[maxn], ans[maxn], vec;
int fa[maxn], f[maxn], vis[maxn], mark[maxn];
int all;

int myfind(int x){
	if(x == fa[x]) return x;
	return fa[x] = myfind(fa[x]);
}

int dfs(int x, int pre){
	int res = -1;
	vis[x] = 1;
	f[x] = pre;
	for(int i = 0; i < (int)g[x].size(); i++){
		if(g[x][i] == pre) continue;
		if(vis[g[x][i]]) continue;
		int cc = dfs(g[x][i], x);
		if(cc == -1) continue;
		if(res == -1){
			res = cc;
		}
		else{
			all++;
			while(res != x){
				ans[all].push_back(res);
				res = f[res];
			}
			ans[all].push_back(x);
			vec.clear();
			while(cc != x){
				vec.push_back(cc);
				cc = f[cc];
			}
			for(int i = vec.size() - 1; i >= 0; i--){
				ans[all].push_back(vec[i]);
			}
			res = -1;
		}
	}
	if(mark[x]){
		if(res == -1){
			res = x;
		}
		else{
			all++;
			while(res != x){
				ans[all].push_back(res);
				res = f[res];
			}
			ans[all].push_back(x);
			res = -1;
		}
	}
	return res;
}

int main(){
	int n, m, k, x, y;

	while(scanf("%d%d%d", &n, &m, &k) > 0){
		for(int i = 0; i <= n; i++){
			fa[i] = i;
			g[i].clear();
			ans[i].clear();
			mark[i] = vis[i] = 0;
		}
		for(int i = 1; i <= m; i++){
			scanf("%d%d", &x, &y);
			int xx = myfind(x);
			int yy = myfind(y);
			if(xx == yy) continue;
			g[x].push_back(y);
			g[y].push_back(x);
		}
		for(int i = 1; i <= k; i++){
			scanf("%d", &x);
			mark[x] = 1;
		}
		all = 0;
		for(int i = 1; i <= n; i++){
			if(vis[i]) continue;
			dfs(i, 0);
		}
		printf("%d\n", all);
		for(int i = 1; i <= all; i++){
			printf("%d", ans[i].size() - 1);
			for(int j = 0; j < (int)ans[i].size(); j++){
				printf(" %d", ans[i][j]); 
			}
			printf("\n");
		}
	}

	return 0;
}

	    		    		 						   	   	 	