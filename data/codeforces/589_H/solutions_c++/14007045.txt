#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <vector>
#include <queue>
using namespace std;
const int N=5E5+5;
struct map{
    int dep,p;
}a[N];
int n,m,k,sum,ans[N],f[N],fa[N],tot,x,y;
bool o[N];
vector <int> G[N],g[N];

int comp(const map&a,const map&b)
{
    return a.dep>b.dep;
}

void dfs(int x)
{
    o[x]=1;
    int y;
    for (int i=0;i<G[x].size();i++) if (!o[y=G[x][i]])
    {
        fa[y]=x; a[y].dep=a[x].dep+1;
        dfs(y);
    }
}

void go(int s,int t)
{
    sum=0;
    for (;s!=t;s=fa[s]) ans[++sum]=s;
}

void work(int x)
{
    if (!f[x]) return;
    int y=fa[x];
    if (f[y])
    {
        tot++;
        go(f[x],y);
        for (int i=1;i<=sum;i++) g[tot].push_back(ans[i]);
        g[tot].push_back(y);
        go(f[y],y);
        for (int i=sum;i;i--) g[tot].push_back(ans[i]);
        f[y]=0;
    } else if (y!=0) f[y]=f[x];
}

int main()
{
    cin>>n>>m>>k;
    //cout<<n<<endl;
    for (int i=1;i<=m;i++)
    {
        scanf("%d%d",&x,&y);
        G[x].push_back(y); G[y].push_back(x);
    }
    for (int i=1;i<=k;i++) 
    {
        scanf("%d",&x); f[x]=x;
    }
    for (int i=1;i<=n;i++) a[i].p=i;
    for (int i=1;i<=n;i++) if (!o[i]) dfs(i);
//  for (int i=1;i<=n;i++) printf("%d\n",f[i]);
    sort(a+1,a+n+1,comp);
    for (int i=1;i<=n;i++) work(a[i].p);
    cout<<tot<<endl;
    for (int i=1;i<=tot;i++)
    {
        printf("%d ",g[i].size()-1);
        for (int j=0;j<g[i].size();j++) printf("%d ",g[i][j]);
        printf("\n");
    }
}







