#include <bits/stdc++.h>
using namespace std;
#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)
#define FOR(i,a,b) for(int i = (a), _b=(b); i<= _b; ++i)
#define FOD(i,a,b) for(int i = (a), _b=(b); i>= _b; --i)
#define REP(i,b) for(int i = 0, _b=(b); i< _b; ++i)
#define eeuler exp(1)
#define pb push_back
#define ll long long
#define ull unsigned long long
#define uint unsigned int
#define Pi acos(-1.0)
#define Epsa 0.0000008
#define Epsb 0.000005
#define eps 1e-9
#define INF 1000000007
#define mod 1000000007ll
#define mod2 1000000009ll
#define oo 1000000007
#define ff first
#define ss second
#define mp make_pair
#define ED pair<int,int>
#define EDF pair<ll,int>
#define EDGE pair<ED,int>
#define maxn 1000111
#define maxe 1000
#define maxv 1000

int n, fat[100111];
vector<int> adj[100111];
bool spe[100111];

vector<int> res[100111];
vector<int> luu;
int nres=0;

void trace(int x,int y,int f){
	nres++;
	while(y!=f){
		res[nres].pb(y);
		y = fat[y];
	}
	res[nres].pb(f);
	luu.clear();
	while(x!=f){
		luu.pb(x);
		x = fat[x];
	}
	Repd(i,luu.size())
		res[nres].pb(luu[i]);
}

int dfs(int x){
	int cur = (spe[x])? x: -1, tmp;
	REP(j,adj[x].size()){
		int y = adj[x][j];
		if(y!= fat[x] && fat[y]==0){
			fat[y] = x;
			tmp = dfs(y);
			if(tmp!=-1){
				if(cur!=-1){
					trace(cur,tmp,x);
					cur = -1;
				}else 
					cur = tmp;
			}
		}
	}
	return cur;
}

int main()
{
//	freopen("inp.txt","r",stdin);
//    freopen("out.txt","w",stdout);
	
	int k, m,x,y;
	scanf("%d%d%d",&n,&m,&k);
	REP(i,m){
		scanf("%d%d",&x,&y);
		adj[x].pb(y);
		adj[y].pb(x);
	}
	REP(i,k){
		scanf("%d",&x);
		spe[x] = 1;
	}
	FOR(i,1,n)
		if(fat[i]==0){
			fat[i] = -1;
			dfs(i);
		}
	printf("%d\n",nres);
	FOR(i,1,nres){
		printf("%d ",res[i].size()-1);
		REP(j,res[i].size())
			printf("%d ",res[i][j]);
		printf("\n");
	}
    return 0;
}