#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
typedef long long LL;
LL c[32],d[32];
LL callNeed(int i,LL need)
{
	if(i==32) return 0;
	if(c[i]>=need)
	{
		c[i]-=need;
		return need;
	}
	LL res=c[i];
	need-=c[i];
	c[i]=0;
	LL get=2*callNeed(i+1,need/2+need%2);
	res+=min(get,need);
	c[i]=get-min(get,need);
	return res;
}
int main()
{
	int n,m;
	scanf("%d%d",&n,&m);
	for(int i=0;i<32;++i)
		c[i]=d[i]=0;
	for(int i=0;i<n;++i)
	{
		int x;
		scanf("%d",&x);
		for(int i=0;x;++i,x>>=1)
			if(x&1) ++c[i];
	}
	for(int i=0;i<m;++i)
	{
		int x;
		scanf("%d",&x);
		d[x]++;
	}
	LL ans=0;
	for(int i=0;i<32;++i)
		ans+=callNeed(i,d[i]);
	printf("%I64d\n",ans);
}