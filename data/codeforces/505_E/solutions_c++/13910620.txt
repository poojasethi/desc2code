#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#define MAXN 100005
#define MAXM 5005
using namespace std ;
typedef long long LL ;

int N, M, K ;
LL P ;
LL mx[MAXN], a[MAXN], h[MAXN] ;
int sum[MAXM] ;

bool Check(LL x)
{
	int i, j ;
	LL tmp = 0 ;
	memset(sum, 0, sizeof(sum)) ;
	for(i = 1; i <= N; i ++)
		if(mx[i] > x)
			tmp += max(0LL, (mx[i]-x-1)/P+1) ;
	if(tmp > M*K) return 0 ;
	for(i = 1; i <= N; i ++)
		if(mx[i] > x)
			for(tmp = (mx[i]-x-1)%P+1; tmp <= mx[i]-x; tmp += P)
				sum[tmp<=h[i]?0:(tmp-h[i]-1)/a[i]+1] ++ ;
	if(sum[M]) return 0 ;
	for(i = tmp = 0; i < M; i ++)
		tmp = max(0LL, tmp+sum[i]-K) ;
	return tmp==0 ;
}

int main()
{
	int i, j ;
	LL lt = 0, rt, mid ;
	scanf("%d %d %d %d", &N, &M, &K, &P) ;
	for(i = 1; i <= N; i ++)
	{
		scanf("%I64d %I64d", &h[i], &a[i]) ;
		mx[i] = h[i]+a[i]*M ;
		rt = max(rt, mx[i]) ;
	}
	while(lt <= rt)
	{
		mid = (lt+rt)/2 ;
		if(Check(mid)) rt = mid-1 ;
		else lt = mid+1 ;
	}
	printf("%I64d\n", lt) ;
	return 0 ;
}
