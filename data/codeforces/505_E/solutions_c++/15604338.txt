#include <stdio.h>
#include <algorithm>
#include <iostream>
#include <string.h>
#define LL long long
#define NN 100005
#define MM 5005
using namespace std;
int n, m, k, p;
LL h[NN], a[NN], cnt[MM], t[NN], need[NN];
bool judge(LL mid)
{
    LL sum = 0;
    for(int i = 0; i < n; i++)
    {
        need[i] = max(0LL, h[i] + (LL)m * a[i] - mid);
        t[i] = need[i] / (LL)p;
        if(t[i] * (LL)p < need[i]) t[i]++;
        sum += t[i];
    }
    memset(cnt, 0, sizeof(cnt));
    if(sum > (LL)m * (LL)k) return false;
    for(int i = 0; i < n; i++)
    {
        for(int j = 0; j < (int)t[i]; j++)
        {
            if(need[i] <= h[i])
            {
                cnt[0]++;
                need[i] -= p;
            }
            else
            {
                LL day = (need[i] - h[i]) / a[i];
                if(day * a[i] < (need[i] - h[i])) day++;
                cnt[day]++;
                need[i] -= p;
            }
        }
    }
    for(int i = 0; i < m; i++)
    {
        if(cnt[i] > k) cnt[i + 1] += (cnt[i] - k);
    }
    return cnt[m] == 0;
}
int main()
{
    LL l = 0, r = 0;
    scanf("%d%d%d%d", &n, &m, &k, &p);
    for(int i = 0; i < n; i++)
    {
        scanf("%I64d%I64d", &h[i], &a[i]);
        r = max(r, h[i] + (LL)m * a[i]);
    }
    while(l <= r)
    {
        LL mid = (l + r) >> 1;
        if(judge(mid)) r = mid - 1;
        else
            l = mid + 1;
    }
    printf("%I64d\n", l);
    return 0;
}
