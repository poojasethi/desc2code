#include <iostream>
#include <queue>
#include <cstring>
#include <cstdio>
using namespace std;
struct node{
    int id;
    long long val;
    int cnt;
    bool friend operator <(const node &a,const node &b){
        return a.val>b.val;
    }
};
long long n,m,k;
long long p;
long long h[100008];
long long a[100008];

bool check(long long val){
    priority_queue<node> que;
    for(int i=1;i<=n;i++){
        if(val-a[i]*m<h[i]){
            node tmp;
            tmp.id=i;
            tmp.val=val/a[i];
            tmp.cnt=0;
            que.push(tmp);
        }
    }
    for(int i=1;i<=m;i++){
        if(que.empty()) break;
        for(int j=1;j<=k;j++){
            if(que.empty()) break;
            node tmp=que.top();
            que.pop();
            if(tmp.val<i) return false;
            tmp.cnt++;
            if(val+tmp.cnt*p-a[tmp.id]*m<h[tmp.id]){
                tmp.val=(val+tmp.cnt*p)/a[tmp.id];
                que.push(tmp);
            }
        }
    }
    if(que.empty()) return true;
    else return false;
}

int main(){
    long long l=0;
    long long r=0;
    long long mid;
    scanf("%I64d %I64d %I64d %I64d",&n,&m,&k,&p);
    for(int i=1;i<=n;i++){
        scanf("%I64d %I64d",&h[i],&a[i]);
        r=max(r,h[i]+a[i]*m);
    }
    while(r-l>1){
        mid=(l+r)/2;
        if(check(mid)){
            r=mid;
        }
        else l=mid;
    }
    printf("%I64d\n",r);
    return 0;
}
