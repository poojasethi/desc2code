#include<iostream>
#include<string>
#include<queue>
using namespace std;
typedef long long ll;
int n,m,k;
const int mx=100005;
ll h[mx],a[mx];
ll h2[mx],p;
typedef pair<ll,int> P;

bool check(ll hmax)
{
    fill_n(h2,n,hmax);
    priority_queue<P,vector<P>,greater<P> > q;
    int i;
    for(i=0;i<n;i++)
    {
        if(h2[i]-m*a[i]>=0)continue;
        q.push(P(h2[i]/a[i]-1,i));
    }
    int count=0;
    ll ans;
    for(;count<m*k;count++)
    {
        if(q.empty())break;
        P cur=q.top();
        q.pop();
        ans=cur.first;
        i=cur.second;
        if(ans<count/k)return false;
        h2[i]+=p;
        if(h2[i]-m*a[i]>=0)continue;
        q.push(P(h2[i]/a[i]-1,i));
    }
    for(i=0;i<n;i++)
    {
         if(h2[i]-m*a[i]>=h[i])continue;
         count+=(h[i]-(h2[i]-m*a[i])+p-1)/p;
         if(count>m*k)return false;
    }
    return true;
}
int main()
{
    cin>>n>>m>>k>>p;
    int i;
    for(i=0;i<n;i++)
    {
        cin>>h[i]>>a[i];
    }
    ll l=0,r=1LL<<55;
    while(l+1<r)
    {
        ll md=(l+r)>>1;
        if(check(md))
        {
            r=md;
        }
        else
            l=md;
    }
    cout<<r<<endl;
    return 0;
}