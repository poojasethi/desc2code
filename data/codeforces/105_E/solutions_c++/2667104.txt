#include <cstdio>
#include <set>
const int MOD=100000007;
using namespace std;
set<unsigned int> Hash; int maxs; bool hash[MOD],usehash; 
int ans,grab[3],p[3],mr[3],tr[3]; bool on[3],thrown[3],moved[3];
int state()
{
  int re=0; int i;
  for(i=0;i<3;i++)
    re = (re*43+p[i]+MOD)%MOD;
  for(i=0;i<3;i++)
    re = (re*3+grab[i])%MOD;
  for(i=0;i<3;i++)
    re = (re*2+moved[i])%MOD;
  for(i=0;i<3;i++)
    re = (re*2+thrown[i])%MOD;
  for(i=0;i<3;i++)
    re = (re*2+on[i])%MOD;
  if(re > maxs) 
    maxs = re;
  return re;
}
void dfs()
{
  if(usehash){
  int s = state();
  if(hash[s]) 
    return;
  hash[s] = true;}
  int i,j,k;
  //refresh
  for(i=0;i<3;i++)
    if(p[i] > ans)
      ans = p[i];
  //throw
  for(i=0;i<3;i++)
    if(grab[i] && !thrown[i] && !on[i])
      for(j=tr[i];j>=-tr[i];j--)
      {
	for(k=0;k<3;k++) if(p[k] == p[i]+j) break;
	if(k == 3){
	  bool mark = false;
	  int tmp = p[grab[i]-1]; int tmp2 = grab[i]-1; 
	  int tmp3 = grab[grab[i]-1]-1;
	  p[tmp2]=p[i]+j; thrown[i]=true; on[tmp2]=false;
	  if((tmp3+1) && !thrown[tmp2])
	    { 
	      p[tmp3]= p[tmp2];
	      mark=true;
	    }
	  dfs();
	  p[tmp2]=tmp; thrown[i]=false; on[tmp2]=true;
	  if(mark) 
	    p[tmp3] = tmp;
	}
      }
  //move
  for(i=0;i<3;i++)
    if(!moved[i] && (!grab[i] || thrown[i]) && !on[i])
    for(j=mr[i];j>=-mr[i];j--)
      {
	for(k=0;k<3;k++) if(p[k] == p[i]+j) break;
	if(k == 3){
	  p[i]+=j; moved[i]=true; 
	  dfs(); 
	  moved[i]=false; p[i]-=j;
	}
      }
  //grab
  for(i=0;i<3;i++)
    if(!thrown[i] && !grab[i] && !on[i])
      for(k=0;k<3;k++)
	if((p[k]==p[i]-1||p[k]==p[i]+1) && !on[k])
	  {int tmp=p[k];
	    p[k]=p[i]; on[k]=false; grab[i]=k+1;
	    dfs();
	    p[k]=tmp; on[k]=false; grab[i]=0;
	  }
}
int main()
{
  //freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
  for(int i=0;i<3;i++)
    scanf("%d%d%d",&p[i],&mr[i],&tr[i]);
  if(mr[1]+mr[2]+mr[0]+tr[1]+tr[2]+tr[0] >= 40) usehash=true;
  dfs();
  printf("%d\n",ans);
}
