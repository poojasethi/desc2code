#include <iostream>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <vector>
using namespace std;
const int X=688,Y=X*X,P=10000007;
//Pos 42,Lift 2,~Lift 2,Throw 2,Move 2
struct Tini{int x,M,T;}A[3];
bool F[P];

namespace Ninit{
	void init(){
		scanf("%d%d%d",&A[0].x,&A[0].M,&A[0].T);
		scanf("%d%d%d",&A[1].x,&A[1].M,&A[1].T);
		scanf("%d%d%d",&A[2].x,&A[2].M,&A[2].T);
	}
}

namespace Nsolve{
	int ans;
	vector<int> H;
	inline int Mp(int A,int B,int C){
		return A+B*X+C*Y;
	}
	inline int G(int x,int y,int z,int p,int q){
		return x*16+y*8+z*4+p*2+q;
	}
	void dfs(int S){
		static int tot=0;
		int Ubuf[50],*U=Ubuf+1;
		int a[3]={S%X,S/X%X,S/Y},b[3];
		int i,j,k,u;bool flag;
		++tot;
		if(F[S%P])return;F[S%P]=true;
		/*
		if(tot>1169)return;
		H.push_back(S);
		if(tot==1169){	
			for(i=0;i<H.size();++i){
				a[0]=H[i]%X,a[1]=H[i]/X%X,a[2]=H[i]/Y;
				for(j=0;j<3;++j){
					fprintf(stderr,"(P:%d %d%d%d%d) ",
					a[j]/16,a[j]&8?1:0,a[j]&4?1:0,a[j]&2?1:0,a[j]&1);
				}
				cerr<<endl;
			}
		}
		*/
		for(i=0;i<3;++i)ans=max(ans,a[i]/16);
		for(i=0;i<3;++i)if(~a[i]&4)U[a[i]/16]=S*4+i;
		//if(a[0]!=656)return;
		//cerr<<a[0]<<' '<<a[1]<<' '<<a[2]<<endl;
		//cerr<<a[0]%16<<' '<<a[1]%16<<' '<<a[2]%16<<endl;
		//if(a[0]==G(3,0,0,0,0) && a[1]==G(2,0,0,0,0) && a[2]==G(4,0,0,0,0))cerr<<"A"<<endl;
		//if(a[0]==G(0,0,1,0,0) && a[1]==G(2,0,0,0,0) && a[2]==G(4,1,0,0,0))cerr<<"B"<<endl;
		//if(a[0]==G(5,0,0,0,0) && a[1]==G(2,0,0,0,0) && a[2]==G(4,0,0,1,0))cerr<<"C"<<endl;
		//if(max(max(a[0]/16,a[1]/16),a[2]/16)>15){cerr<<tot<<" :"<<a[0]<<' '<<a[1]<<' '<<a[2]<<endl;return;}
		
		for(i=0;i<3;++i)if(~a[i]&4 && ~a[i]&2){
			for(k=0;k<2;++k)
			if(u=a[i]/16+(2*k-1),u>0 && U[u]/4==S){
				memcpy(b,a,sizeof b),j=U[u]&3;
				b[i]+=10,b[j]&=15,b[j]+=4;
				dfs(Mp(b[0],b[1],b[2]));
			}
		}
		for(i=0;i<3;++i)if(~a[i]&4 && a[i]&8){
			for(flag=0,k=0;k<3;++k)
				if(!flag && i!=k && a[k]&8)flag=1,j=k;
			for(k=0;k<3;++k)
				if(!flag && i!=k && a[k]&4)flag=1,j=k;
			for(k=-A[i].T;k<=A[i].T;++k)
			if(u=a[i]/16+k,u>0 && U[u]/4!=S){
				memcpy(b,a,sizeof b);
				b[i]-=8,b[j]+=(a[i]/16+k)*16-4;
				dfs(Mp(b[0],b[1],b[2]));
			}
		}
		for(i=0;i<3;++i)if(~a[i]&8 && ~a[i]&4 && ~a[i]&1){
			for(k=-A[i].M;k<=A[i].M;++k)
			if(u=a[i]/16+k,u>0 && U[u]/4!=S){
				memcpy(b,a,sizeof b),b[i]+=k*16+1;
				dfs(Mp(b[0],b[1],b[2]));
			}
		}
		H.pop_back();
	}
	void solve(){
		dfs(Mp(A[0].x*16,A[1].x*16,A[2].x*16));
		cout<<ans<<endl;
	}
}

int main(){
	//freopen("A.in","r",stdin);
	Ninit::init();
	Nsolve::solve();
	return 0;
}
