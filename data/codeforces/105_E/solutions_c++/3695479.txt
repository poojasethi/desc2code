#include<cstdio>
#include<cstring>
#include<algorithm>
#define fou(i,j,k) for (int i=j;i<=k;i++)
#define fod(i,j,k) for (int i=j;i>=k;i--)
using namespace std;

typedef long long LL;

const int maxn=5;
const int maxl=100;
const int maxp=2000000;

int ans;
int p[maxn],d[maxn],w[maxn],ju[maxn];
bool vis[maxl],bj[maxn],walk[maxn],fju[maxn],fre[maxn];
bool f[maxp];

void init()
{
	fou(i,1,3){
		scanf("%d%d%d",&p[i],&d[i],&w[i]);
	}
}

int myabs(int a)
{
	return a<0?(-a):a;
}

int ha()
{
	int sd=997;
	int val=0;
	
	fou(i,1,3) val=(val*sd+p[i])%maxp;
	fou(i,1,3) val=(val*sd+walk[i]+1)%maxp;
	fou(i,1,3) val=(val*sd+fju[i]+1)%maxp;
	fou(i,1,3) val=(val*sd+fre[i]+1)%maxp;
	
	return val;
}

void dfs()
{
	int val=ha();
	if (f[val]) return;
	f[val]=true;
	
	fou(i,1,3)
		if (ans<p[i]) ans=p[i];
	fou(i,1,3){
		if (!walk[i] && !bj[i] && !ju[i]){
			walk[i]=true;
			int st=max(-d[i],-p[i]+1);
			fou(j,st,d[i])
				if (!vis[p[i]+j]){
					vis[p[i]]=false;
					p[i]+=j;
					vis[p[i]]=true;
					dfs();
					vis[p[i]]=false;
					p[i]-=j;
					vis[p[i]]=true;
				}
			walk[i]=false;
		}
		if (!fju[i] && !ju[i] && !bj[i]){
			fju[i]=true;
			fou(j,1,3)
				if (myabs(p[i]-p[j])==1 && !bj[j]){
					int tmp=p[j];
					int now=j;
					while (now){
						p[now]=p[i];
						now=ju[now];
					}
					vis[tmp]=false;
					
					ju[i]=j;
					bj[j]=true;
					dfs();
					bj[j]=false;
					ju[i]=0;
					
					now=j;
					while (now){
						p[now]=tmp;
						now=ju[now];
					}
					vis[tmp]=true;
				}
			fju[i]=false;
		}
		if (!fre[i] && ju[i] && !bj[i]){
			fre[i]=true;
			int st=max(-w[i],-p[i]+1);
			fou(j,st,w[i]){
				bool flag=true;
				int now=ju[i];
				while (now){
					if (vis[p[now]+j]) {flag=false;break;}
					now=ju[now];
				}
				
				if (flag){
					now=ju[i];
					vis[p[now]]=false;
					vis[p[now]+j]=true;
					while (now){
						p[now]+=j;
						now=ju[now];
					}
					
					int tmp=ju[i];
					bj[tmp]=false;
					ju[i]=0;
					dfs();
					bj[tmp]=true;
					ju[i]=tmp;
					
					now=ju[i];
					vis[p[now]]=false;
					vis[p[now]-j]=true;
					while (now){
						p[now]-=j;
						now=ju[now];
					}
				}
			}
			fre[i]=false;
		}
	}
}

void solve()
{
	memset(ju,0,sizeof(ju));
	memset(bj,false,sizeof(bj));
	memset(walk,false,sizeof(walk));
	memset(fju,false,sizeof(fju));
	memset(fre,false,sizeof(fre));
	memset(vis,false,sizeof(vis));
	memset(f,false,sizeof(f));
	ans=0;
	fou(i,1,3) vis[p[i]]=true;
	dfs();
	printf("%d\n",ans);
	fou(i,1,3) vis[p[i]]=false;
}

int main()
{
	init();
	solve();
	return 0;
}
