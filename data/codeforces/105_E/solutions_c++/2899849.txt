#include <cstdlib>
#include <cstdio>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <cstring>
#include <bitset>

using namespace std;

typedef long long LL;
typedef unsigned long long ULL;

#define SIZE(x) (int((x).size()))
#define rep(i,l,r) for (int i=(l); i<=(r); i++)
#define repd(i,r,l) for (int i=(r); i>=(l); i--)
#define rept(i,c) for (typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)

#ifndef ONLINE_JUDGE
#define debug(x) { cerr<<#x<<" = "<<(x)<<endl; }
#else
#define debug(x) {}
#endif

#define MD 1000000009

bitset<MD> hash;
struct man
{
	int x,lift,lifted;
};
man a[4];

LL hashing()
{
	LL res=0;
	rep(i,1,3) res=(((res*178373+a[i].x)%MD*27101+a[i].lift)%MD*6473997+a[i].lifted)%MD;
	return res;
}

int final;
int walk[4], fly[4];

void dfs(int state)
{
	int z=(hashing()*1846387+state)%MD;
	if (hash[z]) return; hash[z]=1;
	rep(i,1,3) final=max(final,a[i].x);
	man bak[4]; memcpy(bak,a,sizeof a);
	rep(i,1,3)
	{	
		if (state&(1<<(i*3-3)) && !a[i].lift && !a[i].lifted)	//walk
			rep(t,max(a[i].x-walk[i],1),a[i].x+walk[i])
			{
				if (a[1].x==t || a[2].x==t || a[3].x==t) continue;
				a[i].x=t; 
				dfs(state-(1<<(i*3-3)));
				memcpy(a,bak,sizeof a);
			}
		if (state&(1<<(i*3-2)) && !a[i].lift && !a[i].lifted)	//lift
			rep(t,1,3)
				if (abs(a[i].x-a[t].x)==1 && !a[t].lifted)
				{
					a[t].x=a[i].x; if (a[t].lift) a[a[t].lift].x=a[i].x;
					a[t].lifted=1; a[i].lift=t;
					dfs(state-(1<<(i*3-2)));
					memcpy(a,bak,sizeof a);
				}
		if (state&(1<<(i*3-1)) && a[i].lift && !a[i].lifted)	//fly
			rep(t,max(a[i].x-fly[i],1),a[i].x+fly[i])
				{
					if (a[1].x==t || a[2].x==t || a[3].x==t) continue;
					a[a[i].lift].x=t; if (a[a[i].lift].lift) a[a[a[i].lift].lift].x=t;
					a[a[i].lift].lifted=0; a[i].lift=0;
					dfs(state-(1<<(i*3-1)));
					memcpy(a,bak,sizeof a);
				}
	}
}

void lemon()
{
	rep(i,1,3) cin>>a[i].x>>walk[i]>>fly[i], a[i].lift=a[i].lifted=0;
	final=0;
	dfs(511);
	cout<<final<<endl;
}

int main()
{
	ios::sync_with_stdio(true);
	#ifndef ONLINE_JUDGE
		freopen("105E.in","r",stdin);
	#endif
	lemon();
	return 0;
}