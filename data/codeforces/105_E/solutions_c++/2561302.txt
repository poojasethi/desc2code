#include<cstdio>
#include<cstring>
#include<algorithm>
#define cp(a,b) memcpy(a,b,sizeof b)
#define fo(i,a,b) for(i=a;i<=b;++i)
#define fd(i,a,b) for(i=a;i>=b;--i)
using namespace std;
typedef long long LL;
const int mo=10000007;
int p[4],m[4],t[4],c[4],s[4];
int i,ans;
bool f[mo];
void solve();
void dfs(int x,int y,int z);
void solve()
{
    int i,j,k,ha=0;
    fo(i,1,3)ans=max(ans,p[i]);
    fo(i,1,3)ha=(ha*29+s[i])%mo;
    fo(i,1,3)ha=(ha*29+p[i])%mo;
    fo(i,1,3)ha=(ha*29+c[i])%mo;
    if(f[ha])return;
    dfs(1,2,3),dfs(1,3,2);
    dfs(2,1,3),dfs(2,3,1);
    dfs(3,1,2),dfs(3,2,1);
    f[ha]=1;
}
void dfs(int x,int y,int z)
{
    int p1[4],s1[4],c1[4],i;
    cp(p1,p),cp(s1,s),cp(c1,c);
    if(p[x]!=p[y]&&p[x]!=p[z])
        if(s[x]&1)
            fo(i,p[x]-m[x],p[x]+m[x])
                if(i>=1&&i!=p[y]&&i!=p[z])
                {
                    p[x]=i,s[x]^=1;
                    solve();
                    cp(p,p1),cp(s,s1),cp(c,c1);
                }
    if(p[x]==p[y]&&c[x]+1==c[y]&&c[x]==0)
        if(s[x]&2)
            fo(i,p[y]-t[x],p[y]+t[x])
                if(i>=1&&i!=p[z])
                {
                    p[y]=i,s[x]^=2,c[y]=0;
                    if(p1[z]==p1[y])c[z]=1,p[z]=i;
                    solve();
                    cp(p,p1),cp(s,s1),cp(c,c1);
                }
    if(abs(p[x]-p[y])==1&&c[x]==c[y])
        if(s[x]&4)
        {
            if(p[z]==p[y])p[z]=p[x],c[z]=2;
            p[y]=p[x],c[y]=c[x]+1;
            s[x]^=4;
            solve();
            cp(p,p1),cp(s,s1),cp(c,c1);
        }
}
int main()
{
    fo(i,1,3)scanf("%d%d%d",p+i,m+i,t+i);
    fo(i,1,3)c[i]=0,s[i]=7;
    ans=0;
    solve();
    printf("%d\n",ans);
    return 0;
}