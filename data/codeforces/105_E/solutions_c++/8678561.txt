#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define P 46
#define N 50
#define gets() dfs(b[1],b[2],b[3],c[1],c[2],c[3])
#define For(i,x,y) for(i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,an;
int a[4][4];
bool f[N][N][N][4][4][4];
void dfs(int x,int y,int z,int A,int B,int C) {
	int b[4]={0,x,y,z},c[4]={0,A,B,C},i,j,g[N]={};
	if (f[x][y][z][A][B][C]) return;
	f[x][y][z][A][B][C]=1;
	For(i,1,3) g[b[i]]=i;
	For(i,1,3) {
		int t=b[i];
		if (t<=P) {
			an=max(an,t);
			if (!(c[i]&1)&&!g[P+i]) {
				For(j,t-a[i][2],t+a[i][2]) if (j>0&&!g[j]) {
					b[i]=j,c[i]^=1;
					gets();
					b[i]=t;c[i]^=1;
				}
			}
			if (!(c[i]&2)&&!g[P+i]) {
				For(j,1,3) {
					int v=b[j];
					if (abs(t-v)!=1) continue;
					b[j]=P+i; c[i]^=2;
					gets();
					b[j]=v; c[i]^=2;
				}
			}
			if (g[P+i]) {
				int A=g[P+i];
				For(j,t-a[i][3],t+a[i][3]) if (j>0&&!g[j]) {
					b[A]=j;
					gets();
					b[A]=P+i;
				}
			}
		}
	}
}
int main() {
	For(i,1,3)For(j,1,3) scanf("%d",&a[i][j]);
	dfs(a[1][1],a[2][1],a[3][1],0,0,0);
	printf("%d\n",an);
	return 0;
}
