#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
#define N 10000
#define M 2000000
int n,V,m,a[N],b[N],X[M],Y[M],Z[M],tot,q[N];
struct edge{
	edge*n;
	int v;
}E[M],*etp=E,*G[N];
void addedge(int u,int v){
	etp->v=v;etp->n=G[u];G[u]=etp++;
	etp->v=u;etp->n=G[v];G[v]=etp++;
}
bool find(int u,int f,int tar){
	q[++q[0]]=u;
	if(u==tar)return 1;
	else{
		for(edge*e=G[u];e;e=e->n)
			if(e->v!=f&&find(e->v,u,tar))return 1;
		--q[0];
		return 0;
	}
}
void trans(int u,int v,int w){
	q[0]=0;
	if(find(u,0,v)){
		int last=q[0];
		for(int i=q[0]-1;i>=1;i--){
			if(a[q[i]]>=w){
				for(int j=i;j<last;j++)
					X[++tot]=q[j],Y[tot]=q[j+1],Z[tot]=w;
				last=i;
			}
		}
		a[u]-=w;a[v]+=w;
	}
}
int ufs[N];
int findfa(int u){
	return u==ufs[u]?u:(ufs[u]=findfa(ufs[u]));
}
int main(){
	scanf("%d%d%d",&n,&V,&m);
	for(int i=1;i<=n;i++)
		scanf("%d",&a[i]),ufs[i]=i;
	for(int i=1;i<=n;i++)
		scanf("%d",&b[i]);
	for(int i=1,u,v;i<=m;i++){
		scanf("%d%d",&u,&v);
		if(findfa(u)!=findfa(v)){
			addedge(u,v);
			ufs[findfa(u)]=findfa(v);
		}
	}
	for(int i=1;i<=n;i++){
		if(a[i]==b[i])continue;
		for(int j=1;j<=n;j++){
			int tmp=min(a[i]-b[i],b[j]-a[j]);
			if(tmp<=0)continue;
			if(tmp<=V/2)trans(i,j,tmp);
			else trans(i,j,V/2),trans(i,j,tmp-V/2);
		}
	}
	for(int i=1;i<=n;i++)
		if(a[i]!=b[i])return puts("NO"),0;
	printf("%d\n",tot);
	for(int i=1;i<=tot;i++)
		printf("%d %d %d\n",X[i],Y[i],Z[i]);
		cin>>n;
}
