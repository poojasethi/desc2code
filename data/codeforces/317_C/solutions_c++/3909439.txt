#include <cstdio>
#include <cstring>

int a[333], b[333], n, v, e, m[333][333], k[333][333], p[111111][3], o;

#define min(a,b) (a<b?a:b)
#define r(a,b) for(int a = 0; a < b; a++){
#define s(x) scanf("%d",&x);

void add(int q, int w, int d){
  p[o][0] = q + 1;
  p[o][1] = w + 1;
  p[o ++][2] = d;
  a[w] += d;
  a[q] -= d;
}

void go(int q, int w, int d){
  if(m[q][w]){
    add(q, w, d);
    return ;
  }
  r(e, n)
    if(k[q][e] != -1 && k[q][e] < k[q][w] && m[e][w]){
      if(a[e] >= d){
        add(e, w, d);
        go(q, e, d);
        break;
      } 
      else{
        int s = d - a[e];
        add(e, w, a[e]);
        go(q, e, d);
        add(e, w, s);
        break;
      }
    }
  }
}

int main(){
  memset(k, -1, sizeof k);
  s(n)s(v)s(e)
  r(q, n)
    s(a[q])
  }
  r(q, n)
    s(b[q])
  }
  r(q, e)
    int u, v;
    s(u)s(v)
    u --; v --;
    m[u][v] = m[v][u] = 1;
    k[u][v] = k[v][u] = 1;
  }
  r(q, n)
    r(w, n)
      r(e, n)
        if(k[w][q] != -1 && k[q][e] != -1 && (k[w][e] > k[w][q] + k[q][e] || k[w][e] == -1)){
          k[w][e] = k[w][q] + k[q][e];
        }
      }
    }
  }
  o = 0;
  r(i, n)
    r(q, n)
      if(a[q] <= b[q]) continue;
      r(w, n)
        if(a[w] >= b[w] || k[q][w] == -1) continue;
        int d = min(a[q] - b[q], b[w] - a[w]);
        go(q, w, d);
        break;
      }
    }
  }
  r(q, n)
    if(a[q] != b[q]){
      printf("NO\n");
      return 0;
    }
  }
  printf("%d\n", o);
  r(q, o)
    printf("%d %d %d\n", p[q][0], p[q][1], p[q][2]);
  }
  return 0;
}
