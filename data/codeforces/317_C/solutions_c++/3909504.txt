#include <cstring>
#include <iostream>
#include <vector>
using namespace std;

#define F(i, n) for (i = 0; i < n; i++)
#define P(x, y, f) if (f) a[x] -= f, a[y] += f, X.push_back(x), Y.push_back(y), D.push_back(f);

vector<int> X, Y, D;
int i, j, k, n, v, e, x, y, a[300], b[300], d[300][300];

void m(int x, int y, int f) {
	if (d[x][y] == 1) {
		P(y, x, f);
	} else {
		int z;
		F(z, n)
			if (d[x][z] == 1 && 1 + d[z][y] == d[x][y])
				break;
		if (a[z] >= f) {
			P(z, x, f);
			m(z, y, f);
		} else {
			int t = a[z];
			P(z, x, t);
			f -= t;
			m(z, y, t + f);
			P(z, x, f);
		}
	}
}

int main() {
	cin >> n >> v >> e;
	F(i,n)
		cin >> a[i];
	F(i,n)
		cin >> b[i];
	memset(d, 63, sizeof d);
	for (i = 0; i < e; i++) {
		cin >> x >> y;
		x--, y--;
		d[x][y] = d[y][x] = 1;
	}
	F(k,n)
		F(i,n)
			F(j,n)
				d[i][j] = min(d[i][j], d[i][k] + d[k][j]);
	F(i,n)
		F(j,n)
			if (d[i][j] < n && a[i] < b[i] && a[j] > b[j])
				m(i, j, min(b[i] - a[i], a[j] - b[j]));
	F(i,n)
		if (a[i] != b[i]) {
			cout << "NO\n";
			return 0;
		}
	cout << X.size() << '\n';
	F(i,X.size())
		cout << X[i] + 1 << ' ' << Y[i] + 1 << ' ' << D[i] << '\n';
	return 0;
}
