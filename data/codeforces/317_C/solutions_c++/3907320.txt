#include <cassert>
#include <cstring>
#include <iostream>
#include <vector>
using namespace std;

vector<int> ansx, ansy, ansd;
int n, v, e, x, y, a[300], b[300], dis[300][300];

void push(int from, int to, int flow) {
	if (flow == 0) return;
	a[from] -= flow, a[to] += flow;
	ansx.push_back(from), ansy.push_back(to), ansd.push_back(flow);
}

void move(int x, int y, int d) {
	if (dis[x][y] == 1) {
		push(y, x, d);
		return;
	}
	int z;
	for (z = 0; z < n; z++)
		if (dis[x][z] == 1 && dis[x][z] + dis[z][y] == dis[x][y])
			break;
	if (a[z] >= d) {
		push(z, x, d);
		move(z, y, d);
	} else {
		int temp = a[z];
		push(z, x, temp);
		d -= temp;
		move(z, y, temp + d);
		push(z, x, d);
	}
}

int main() {
	cin >> n >> v >> e;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 0; i < n; i++)
		cin >> b[i];
	memset(dis, 63, sizeof dis);
	for (int i = 0; i < e; i++) {
		cin >> x >> y;
		x--, y--;
		dis[x][y] = dis[y][x] = 1;
	}
	for (int i = 0; i < n; i++)
		dis[i][i] = 0;
	for (int k = 0; k < n; k++)
		for (int i = 0; i < n; i++)
			for (int j = 0; j < n; j++)
				dis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++)
			if (dis[i][j] < n && a[i] < b[i] && a[j] > b[j]) {
				if (b[i] - a[i] < a[j] - b[j])
					move(i, j, b[i] - a[i]);
				else
					move(i, j, a[j] - b[j]);
			}
	for (int i = 0; i < n; i++)
		if (a[i] != b[i]) {
			cout << "NO\n";
			return 0;
		}
	cout << ansx.size() << '\n';
	for (int i = 0; i < int(ansx.size()); i++)
		cout << ansx[i] + 1 << ' ' << ansy[i] + 1 << ' ' << ansd[i] << '\n';
	return 0;
}
