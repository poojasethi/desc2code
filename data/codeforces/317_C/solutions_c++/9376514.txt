#include<bits/stdc++.h>
using namespace std;
int n,v,e,fir[301],next[100001],to[100001],sz;
int now[301],tar[301],stk[301],top;bool viewed[301];
int ans,ansx[180001],ansy[180001],ansd[180001];
void add(int x,int y)
{
	next[++sz]=fir[x];fir[x]=sz;to[sz]=y;
	next[++sz]=fir[y];fir[y]=sz;to[sz]=x;
}
void work(int t,int d)
{
	if(t==top)return ;
	if(now[stk[t+1]]+d<=v)
	{
		++ans;ansx[ans]=stk[t];ansy[ans]=stk[t+1];
		ansd[ans]=d;now[stk[t]]-=d;now[stk[t+1]]+=d;
		work(t+1,d);
	}
	else if(now[stk[t+1]]>=d)
	{
		work(t+1,d);
		++ans;ansx[ans]=stk[t];ansy[ans]=stk[t+1];
		ansd[ans]=d;now[stk[t]]-=d;now[stk[t+1]]+=d;
	}
	else 
	{
		int temp=v-now[stk[t+1]];
		++ans;ansx[ans]=stk[t];ansy[ans]=stk[t+1];
		ansd[ans]=temp;now[stk[t]]-=ansd[ans];
		now[stk[t+1]]+=ansd[ans];
		work(t+1,d);
		++ans;ansx[ans]=stk[t];ansy[ans]=stk[t+1];
		ansd[ans]=d-temp;now[stk[t]]-=ansd[ans];
		now[stk[t+1]]+=ansd[ans];
	}
}
bool dfs(int x,int st)
{
	viewed[x]=true;stk[++top]=x;
	if(now[x]<tar[x]){work(1,min(now[st]-tar[st],tar[x]-now[x]));return true;}
	for(int i=fir[x];i;i=next[i])
	if(!viewed[to[i]]&&dfs(to[i],st))
	return true;
	--top;return false;
}
int main()
{
	scanf("%d%d%d",&n,&v,&e);
	for(int i=1;i<=n;i++)scanf("%d",&now[i]);
	for(int i=1;i<=n;i++)scanf("%d",&tar[i]);
	for(int u,v;e--;)
	{
		scanf("%d%d",&u,&v);
		add(u,v);
	}
	while(true)
	{
		int ok=true;
		for(int i=1;i<=n;i++)
		if(now[i]>tar[i])
		{
			memset(viewed,false,sizeof(viewed));
			top=0;
			if(dfs(i,i))
				ok=false;
		}
		if(ok)break;
	}
	for(int i=1;i<=n;i++)if(now[i]!=tar[i])return puts("NO"),0;
	printf("%d\n",ans);
	for(int i=1;i<=ans;i++)
		printf("%d %d %d\n",ansx[i],ansy[i],ansd[i]);
}
