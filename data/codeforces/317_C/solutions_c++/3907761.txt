#include <cstdio>
#include <cstring>

int a[333], b[333], n, v, e, m[333][333], k[333][333], ans[111111][3], nans;

#define min(a,b) (a<b?a:b)

void add(int q, int w, int d){
  ans[nans][0] = q + 1;
  ans[nans][1] = w + 1;
  ans[nans ++][2] = d;
  a[w] += d;
  a[q] -= d;
}

void go(int q, int w, int d){
  if(m[q][w]){
    add(q, w, d);
    return ;
  }
  for(int e = 0; e < n; e++){
    if(k[q][e] != -1 && k[q][e] < k[q][w] && m[e][w]){
      if(a[e] >= d){
        add(e, w, d);
        go(q, e, d);
        break;
      } 
      else{
        int rem = d - a[e];
        add(e, w, a[e]);
        go(q, e, d);
        add(e, w, rem);
        break;
      }
    }
  }
}

int main(){
  memset(m, 0, sizeof m);
  memset(k, -1, sizeof k);
  scanf("%d%d%d", &n, &v, &e);
  for(int q = 0; q < n; q++){
    scanf("%d", &a[q]);
  }
  for(int q = 0; q < n; q++){
    scanf("%d", &b[q]);
  }
  for(int q = 0; q < e; q++){
    int u, v;
    scanf("%d%d", &u, &v);
    u --; v --;
    m[u][v] = m[v][u] = 1;
    k[u][v] = k[v][u] = 1;
  }
  for(int q = 0; q < n; q++){
    for(int w = 0; w < n; w++){
      for(int e = 0; e < n; e++){
        if(k[w][q] != -1 && k[q][e] != -1 && (k[w][e] > k[w][q] + k[q][e] || k[w][e] == -1)){
          k[w][e] = k[w][q] + k[q][e];
        }
      }
    }
  }
  nans = 0;
  bool done = 0;
  while(!done){
    done = 1;
    for(int q = 0; q < n; q++){
      if(a[q] <= b[q]) continue;
      for(int w = 0; w < n; w++){
        if(a[w] >= b[w] || k[q][w] == -1) continue;
        int d = min(a[q] - b[q], b[w] - a[w]);
        go(q, w, d);
        done = 0;
        break;
      }
    }
  }
  for(int q = 0; q < n; q++){
    if(a[q] != b[q]){
      printf("NO\n");
      return 0;
    }
  }
  printf("%d\n", nans);
  for(int q = 0; q < nans; q++){
    printf("%d %d %d\n", ans[q][0], ans[q][1], ans[q][2]);
  }
  return 0;
}
