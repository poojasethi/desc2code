#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<vector>
#define N 1200
using namespace std;
vector <pair<int,pair<int,int> > > ans;
int head[N],e[N],next[N],a[N],b[N],id[N],fa[N],tot,q[N],n,v,m,i,x,y,len,j;
int get(int x){
	return fa[x]==x?x:(fa[x]=get(fa[x]));
}
bool dfs(int s,int t,int &tot){
	q[++tot]=s;
	if(s==t)return 1;
	for(int i=head[s];i;i=next[i])if(e[i]!=q[tot-1])
		if(dfs(e[i],t,tot))return 1;
	tot--;
	return 0;
}
void liu(int x,int y,int tmp){
	int tot=0;
	dfs(x,y,tot);
	int last=tot;
	if(!tot)return;
	for(int i=tot-1;i>=1;--i){
		if(a[q[i]]>=tmp){
			for(int j=i;j<last;++j)ans.push_back(make_pair(q[j],make_pair(q[j+1],tmp)));
			last=i;
		}
	}
	a[x]-=tmp; a[y]+=tmp;
}
int main(){
	scanf("%d%d%d",&n,&v,&m);
	for(i=1;i<=n;++i)fa[i]=i;
	for(i=1;i<=n;++i)scanf("%d",&a[i]);
	for(i=1;i<=n;++i)scanf("%d",&b[i]);
	for(i=1;i<=m;++i){
		scanf("%d%d",&x,&y);
		if(get(x)!=get(y)){
			next[++len]=head[x]; head[x]=len; e[len]=y;
			next[++len]=head[y]; head[y]=len; e[len]=x;
			fa[get(x)]=get(y);
		}
	}
	for(i=1;i<=n;++i)
		for(j=1;j<=n;++j){
			int tmp=min(a[i]-b[i],b[j]-a[j]);
			if(tmp<=0)continue;
			if(tmp>v/2){
				liu(i,j,v/2);
				liu(i,j,tmp-v/2);
			}else liu(i,j,tmp);
		}
	for(i=1;i<=n;++i)if(a[i]!=b[i]){
		printf("NO\n");
		exit(0);
	}
	printf("%d\n",ans.size());
	for(i=0;i<ans.size();++i)printf("%d %d %d\n",ans[i].first,ans[i].second.first,ans[i].second.second);
}
