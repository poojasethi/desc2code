#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>

using namespace std;

#define clr(f,x) memset(f,x,sizeof f)
#define rep(it,a,b) for(int it=a;it<=b;++it)
#define _rep(it,a,b) for(int it=a;it>=b;--it)
#define For_edge(p,x) for(int p=H[x];p;p=X[p])
#define LL long long
const int MaxN=305;
const int MaxM=100010;
int n,v,m;
int H[MaxN],E[MaxM],X[MaxM],co=0;
inline void add(int x,int y){
	E[++co]=y,X[co]=H[x],H[x]=co;
	E[++co]=x,X[co]=H[y],H[y]=co;
}
int fa[MaxN];
int Find(int x){return fa[x]==0?x:fa[x]=Find(fa[x]);}
int a[MaxN],b[MaxN];
LL s[MaxN];
const int Mans=MaxN*MaxN*2;
int Ax[Mans],Ay[Mans],Ad[Mans],L;
void pre(int x,int ff){
	s[x]=a[x]-b[x];
	For_edge(p,x)if(E[p]!=ff){
		pre(E[p],x);
		s[x]+=s[E[p]];
	}
}
inline void prt(int x,int y,int z){if(z)Ax[++L]=x,Ay[L]=y,Ad[L]=z,a[x]-=z,a[y]+=z;}
void dfs(int x,int ff,int z){
	for(int p=H[x],y,w,t;p;p=X[p])if((y=E[p])!=ff&&s[E[p]]>0&&(w=z<s[y]?z:s[y])>0){
		z-=w;
		if(a[y]>=w){
			prt(y,x,w);
			if(a[y]<b[y])dfs(y,x,b[y]-a[y]);
		}else{
			t=a[y];
			prt(y,x,t);
			dfs(y,x,w);
			prt(y,x,w-t);
		}
	}
}
int main(){
	scanf("%d%d%d",&n,&v,&m);
	rep(i,1,n)scanf("%d",a+i);
	rep(i,1,n)scanf("%d",b+i);
	int x,y,x1,x2;
	rep(i,1,m){
		scanf("%d%d",&x,&y);
		x1=Find(x),x2=Find(y);
		if(x1!=x2)fa[x1]=x2,add(x,y);
	}
	rep(i,1,n)s[Find(i)]+=a[i]-b[i];
	rep(i,1,n)if(s[i])return puts("NO"),0;
	rep(i,1,n)if(a[i]<b[i])pre(i,0),dfs(i,0,b[i]-a[i]);
	printf("%d\n",L);
	rep(i,1,L)printf("%d %d %d\n",Ax[i],Ay[i],Ad[i]);
	return 0;
}
