#include<bits/stdc++.h>
using namespace std;

const int N=310;
vector<int> g[N];
int n,limit,m;
int a[N],b[N];

struct Re{
    int x,y,z;
    Re(){}
    Re(int x,int y,int z):x(x),y(y),z(z){}
};
vector<Re> ans;
int st[N],tp;
bool vis[N];
void update(int x){
    vis[x]=true;
    st[++tp]=x;
    if(a[x]<b[x]){
        int val=min(a[st[1]]-b[st[1]],b[x]-a[x]);
        for(int i=1;i<tp;i++){
            int cc=min(val,limit-a[st[i+1]]);
            if(cc)ans.push_back(Re(st[i],st[i+1],cc));
        }
        for(int i=tp;i>1;i--){
            int cc=val-min(val,limit-a[st[i]]);
            if(cc)ans.push_back(Re(st[i-1],st[i],cc));
        }
        a[st[1]]-=val;
        a[x]+=val;
    }
    for(int i=0;i<g[x].size();i++){
        if(vis[g[x][i]])continue;
        update(g[x][i]);
    }
    tp--;
}

int main(){
    scanf("%d%d%d",&n,&limit,&m);
    for(int i=1;i<=n;i++){
        scanf("%d",&a[i]);
    }
    for(int i=1;i<=n;i++){
        scanf("%d",&b[i]);
    }
    for(int i=0;i<m;i++){
        int x,y;
        scanf("%d%d",&x,&y);
        g[x].push_back(y);
        g[y].push_back(x);
    }
    for(int i=1;i<=n;i++){
        if(a[i]>b[i]){
            memset(vis,0,sizeof(vis));
            update(i);
        }
    }
    bool judge=true;
    for(int i=1;i<=n;i++){
        if(a[i]!=b[i]){
            judge=false;
            break;;
        }
    }
    if(judge){
        printf("%d\n",ans.size());
        for(int i=0;i<ans.size();i++){
            printf("%d %d %d\n",ans[i].x,ans[i].y,ans[i].z);
        }
    }
    else{
        puts("NO");
    }

    return 0;
}
