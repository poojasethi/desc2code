#include <iostream>
using namespace std;
typedef long long LL;

const int MOD=1000000007;

LL fac[1100000],inv[1100000],f[1100];
LL ret=0;
int n,m,k,i,j;

LL pow(int a,int n){
        if (!n) return 1LL;
        LL ret=pow(a,n/2);
        ret=ret*ret%MOD;
        if (n%2) ret=ret*a%MOD;
        return ret;
}

LL com(int n,int m){
        return fac[n]*inv[m]%MOD*inv[n-m]%MOD;
}

LL calc(int x){
        if (f[x]!=-1) return f[x];
        LL ret=0,F=1;
        for(int i=x;i;i--){
                ret+=pow(i,n)*com(x,i)%MOD*F;
                ret%=MOD;
                F=-F;
        }
        if (ret<0) ret+=MOD;
        f[x]=ret;
        return ret;
}

int main(){
        cin>>n>>m>>k;
        if (m==1) {cout<<pow(k,n)<<endl;return 0;}
        fac[0]=inv[0]=1;
        for(i=1;i<=k;i++) fac[i]=fac[i-1]*i%MOD,inv[i]=inv[i-1]*pow(i,MOD-2)%MOD;
        for(i=0;i<=n;i++) f[i]=-1;
        for(i=0;i<=k&&i<=n;i++)for(j=0;i+j+j<=k&&i+j<=n;j++){
                LL tmp=calc(i+j);
                //cout<<i<<' '<<j<<' '<<ret<<endl;
                ret+=tmp*tmp%MOD*com(k,i)%MOD*com(k-i,j)%MOD*com(k-i-j,j)%MOD*pow(i,n*(m-2))%MOD;
                //cout<<i<<' '<<j<<' '<<ret<<endl<<endl;
                ret%=MOD;
        }
        cout<<ret;
}
