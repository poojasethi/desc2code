#include<cstdio>
const long long M=1000000007LL;
long long to[1010];
long long jie[1000010],ny[1000010];
long long mod(long long a,long long b)
{
    long long ans=1;
    while(b)
    {
        if(b&1)
        ans=ans*a%M;
        a=a*a%M;
        b>>=1;
    }
    return ans;
}
long long c(int a,int b)
{
    if(b>a/2)
    b=a-b;
    if(b==0)
    return 1;
    return jie[a]*ny[b]%M*ny[a-b]%M;
}
int main()
{
    int n,m,k;
    scanf("%d%d%d",&n,&m,&k);  
    if(m==1)
    {
        printf("%I64d",mod(k,n));
        return 0;
    }
    int max,chao;
    if(n>k)
    max=k,chao=n;
    else
    max=n,chao=k;
    jie[0]=ny[0]=1;
    for(int i=1;i<=chao+5;i++)
    {
        jie[i]=jie[i-1]*i%M;
        ny[i]=mod(jie[i],M-2);
    }
    long long ans=0;
    for(int i=1;i<=max;i++)
    {
        long long temp=mod(i,n);
        for(int j=i-1;j;j--)
        temp=(temp-c(i,j)*to[j])%M;
        to[i]=temp;
        for(int j=(m==2?0:1);j<=i;j++)
        {
            temp=to[i]*to[i]%M;
            temp=temp*mod(j,n*(m-2))%M;
            temp=temp*jie[k]%M*ny[k-2*i+j]%M*ny[j]%M*ny[i-j]%M*ny[i-j]%M;
            ans=(ans+temp)%M;
        }
    }
    printf("%I64d",ans);
}
