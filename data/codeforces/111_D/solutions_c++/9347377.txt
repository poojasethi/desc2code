#include <bits/stdc++.h>
#define PS system("pause");
#define maxn 1024
using namespace std;
const int MOD=1e9+7;
long long S2[maxn][maxn],fact[1000009],rfact[1000009];
int n,m,k;
long long mgml(long long a,int b)
{
	long long res=1;
	while(b)
	{
		if(b&1)
			res=res*a%MOD;
		a=a*a%MOD;
		b>>=1;
	}
	return res;
}
inline long long C(int n,int m)
{
	return fact[n]*rfact[m]%MOD*rfact[n-m]%MOD;
}
int main()
{
	cin>>n>>m>>k;
	fact[0]=1;rfact[0]=1;
	for(int i=1;i<1000009;i++)
	{
		fact[i]=fact[i-1]*i%MOD;
		rfact[i]=mgml(fact[i],MOD-2);
	}
	for(int i=0;i<maxn;i++)
	{
		S2[i][0]=0;
		S2[i][i]=1;
		for(int j=1;j<i;j++)
		{
			S2[i][j]=(S2[i-1][j-1]+j*S2[i-1][j])%MOD;
		}
	}
	long long ans=0;
	if(m==1)
	{
		ans=mgml(k,n*m);
	}
	else if(m==2)
	{
		for(int i=1;i<=k&&i<=n;i++)
		{
			long long cur=C(k,i)*fact[i]%MOD*S2[n][i]%MOD;
			cur=cur*cur%MOD;
			ans=(ans+cur)%MOD;
		}
	}
	else
	{
		long long cur=0;
		for(int i=1;i<=n&&i<=k;i++)
		{
			for(int j=max(0,2*i-k);j<=i;j++)
			{
				cur=C(k,2*i-j)*C(2*i-j,j)%MOD*C(2*i-2*j,i-j)%MOD;
				cur=cur*fact[i]%MOD*fact[i]%MOD*S2[n][i]%MOD*S2[n][i]%MOD;
				cur=cur*mgml(j,n*m-2*n)%MOD;
				ans=(ans+cur)%MOD;
			}
		}
	}
	printf("%I64d\n",ans);
	return 0;
}
