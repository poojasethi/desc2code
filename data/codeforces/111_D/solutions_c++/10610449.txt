#include <cstdio>
#define scanf(arg...) (scanf(arg)?:0)

typedef long long ll;

const ll MOD=1e9+7;
const int MAXN=1e6+5;

ll wynik, silnia[MAXN], odwrotnosc[MAXN], T[1005][1005];
int n, m, k;

ll newton(int n, int k)
{
  ll ret=(silnia[n]*odwrotnosc[k])%MOD;
  ret=(ret*odwrotnosc[n-k])%MOD;
  return ret;
}

ll pot(ll x, ll y)
{
  ll ret=1;

  while(y>0)
  {
    if(y%2==1) ret=(ret*x)%MOD;
    x=(x*x)%MOD, y/=2;
  }
  
  return ret;
}

ll oblicz(ll w, ll p)
{
  if(w+2*p>k || w+2*p==0) return 0;
  if(w==0 && m>2) return 0;
  
  ll srodek=(w==0) ? 1 : pot(w,n*(m-2));
  
  ll ret=(T[n][w+p]*srodek)%MOD;
  ret=(ret*T[n][w+p])%MOD;
  ret=(ret*newton(k,w))%MOD;
  ret=(ret*newton(k-w,p))%MOD;
  ret=(ret*newton(k-w-p,p))%MOD;
  
  return ret;
}

int main()
{
  scanf("%d %d %d", &n, &m, &k);

  if(m==1)
  {
    printf("%I64d\n", pot(k,n));
    //printf("%lld\n", pot(k,n));
    return 0;
  }
  
  T[1][1]=1;
  for(int i=1; i<=n; i++)
    for(int j=1; j<=i; j++)
    {
      T[i][j]+=T[i-1][j]*ll(j);
      T[i][j]+=T[i-1][j-1]*ll(j);
      T[i][j]%=MOD;
    }

  silnia[0]=1; odwrotnosc[0]=pot(silnia[0], MOD-2);  
  for(int i=1; i<=k; i++)
    silnia[i]=(silnia[i-1]*ll(i))%MOD,
    odwrotnosc[i]=pot(silnia[i], MOD-2);
  
  for(int i=0; i<=n; i++)
    for(int j=0; i+j<=n; j++)
      wynik=(wynik+oblicz(i,j))%MOD;

  //printf("%lld\n", wynik);
  printf("%I64d\n", wynik);
     
  return 0;
}
