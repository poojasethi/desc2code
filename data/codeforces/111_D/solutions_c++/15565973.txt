#include<cstdio>
#include<iostream>
#include<cstring>
using namespace std;
const int mod=1e9+7;
typedef __int64 LL;
const int N=1000+10;
const int NN=1e6+10;
LL biao[N][N];
LL dp[N];
LL inv[NN];
LL jie[NN];

LL pow(LL a,int b){
    LL ans=1;
    while(b){
        if(b&1){
            ans=ans*a;ans%=mod;
        }
        a=a*a;a%=mod;
        b/=2;
    }
    return ans;
}

void init(){
    memset(biao,0,sizeof(biao));
    for(int i=1;i<=1000;i++){
        biao[i][0]=biao[i][i]=1;
        for(int j=1;j<i;j++){
            biao[i][j]=biao[i-1][j]+biao[i-1][j-1];biao[i][j]%=mod;
        }
    }
    inv[0]=1;jie[0]=1;
    for(int i=1;i<=1000000;i++){
        jie[i]=jie[i-1]*i;jie[i]%=mod;
        inv[i]=pow(jie[i],mod-2);
    }
}
LL zuhe(int i,int j){
    if(i<j)return 0;
    return ((jie[i]*inv[i-j])%mod*inv[j])%mod;
}

int main(){
    #ifdef DouBi
    freopen("in.cpp","r",stdin);
    #endif // DouBi
    init();
    int n,m,k;
    while(scanf("%d%d%d",&n,&m,&k)!=EOF){
        if(m==1){
            printf("%I64d\n",pow(k,n));continue;
        }
        for(int i=1;i<=n;i++){
            dp[i]=pow(i,n);
            for(int j=1;j<i;j++){
                dp[i]-=dp[j]*biao[i][j]%mod;dp[i]%=mod;
            }
        }
        LL ans=0;
        for(int i=1;i<=n&&i<=k;i++){

            for(int j=0;j<=i;j++){
                ans+=(((((zuhe(k,i)*biao[i][j])%mod*zuhe(k-i,i-j))%mod*dp[i])%mod*dp[i])%mod*pow(j,n*m-2*n))%mod;
                ans%=mod;
            }
        }
        printf("%I64d\n",(ans+mod)%mod);
    }
    return 0;
}

   	  		   		 	  			 	  		   	