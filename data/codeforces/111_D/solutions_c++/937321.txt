#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <algorithm>

#define LL long long

using namespace std;

const int maxn=1010, mo=1000000007;
int n, m, k;
LL f[maxn][maxn], g[maxn], fac[1000010], rev[1000010], ans, tmp, sum;

LL C(int n, int m){
	LL ret=fac[n]*rev[m]%mo*rev[n-m]%mo;
	return ret;
}

LL power(LL p, int e){
	if (e==0) return 1;
	if (e==1) return p;
	LL ret=power(p, e/2);
	ret=ret*ret%mo;
	if (e&1) ret=ret*p%mo;
	return ret;
}

int main(){
	cin>>n>>m>>k;
	if (m==1){
		cout<<power(k, n)<<endl;
		return 0;
	}
	fac[0]=rev[0]=1; ans=0;
	for (int i=1; i<=k; i++) fac[i]=fac[i-1]*i%mo, rev[i]=power(fac[i], mo-2);
	f[0][0]=1;
	for (int i=1; i<=n; i++)
		for (int j=1; j<=min(i, k); j++)
			f[i][j]=(f[i-1][j-1]+f[i-1][j]*j)%mo;
	for (int i=1; i<=n; i++) g[i]=f[n][i]*fac[i]%mo;
	for (int i=1; i<=n; i++)
		for (int j=0; j<=i; j++){
			int total=i+i-j;
			if (total>k) continue;
			LL overall=C(k, total);
			LL ansmid=power(j, n*m-n-n);
			LL ansleft=g[i]*C(total, i)%mo;
			LL ansright=g[i]*C(i, j)%mo;
			ans=(ans+ansleft*ansright%mo*ansmid%mo*overall%mo)%mo;
		}
	cout<<ans<<endl;
}
