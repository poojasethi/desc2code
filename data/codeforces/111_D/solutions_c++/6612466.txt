#include<cstdio>
#include<cstdlib>
#define LL long long
#define MOD 1000000007
int K;
LL fac[1000005],rev[1000006];
LL f[100005];
LL power(LL a,int b){
    LL res=1;
    while (b){
        if(b&1) res=res*a%MOD;
        a=a*a%MOD; b>>=1;
    }
    return res;
}
LL C(LL N,LL I){
    return fac[N]*rev[N-I]%MOD*rev[I]%MOD;
}
int main(){
    int N,M,K;
    scanf("%d%d%d",&N,&M,&K);
    LL ans=0;
    if(M==1){printf("%I64d\n",power(K,N)); return 0;}
    fac[0]=rev[0]=1;
    for (int i=1;i<=1000000;i++) fac[i]=fac[i-1]*i%MOD;
    for (int i=1;i<=1000000;i++) rev[i]=power(fac[i],MOD-2);
//  printf("fac %I64d\n",fac[10001]);
    for (int i=1;i<=N;i++){
        f[i]=power(i,N);
        for (int j=1;j<i;j++) f[i]=(f[i]-C(i,j)*f[j]%MOD+MOD)%MOD;
//      printf("f[%d] %I64d\n",i,f[i]);
    }
//  printf("%I64d\n",C(5,3));
    for (int i=0;i<=N;i++)
        for (int j=0;j<=N;j++){
            if(i==0&&j==0) continue;
            if(i+j+j>K||i+j>N) break;
            ans+=f[i+j]*f[i+j]%MOD*C(K,i)%MOD*C(K-i,j)%MOD*C(K-i-j,j)%MOD*power(i,N*(M-2))%MOD;
//          printf("%d %d %I64d\n",i,j,ans);
            ans%=MOD;
        }
    printf("%I64d\n",ans);
}
