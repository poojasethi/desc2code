#include <iostream>
using namespace std;
typedef long long ll;
const int mod = 1000000007;
int n,m,k;
int dp[1234][1234];
int fa[1234567],df[1234567];
inline int pw (int base , int p){
    if (p==0) return 1;
    ll now = pw(base,p/2);
    return (p%2==1) ? (((now*now)%mod)*(ll)base)%mod : (now*now)%mod;
}
inline void init (){   
    int maxi = max(max(n,m),k);
    fa[0]=1;
    for (int i=1; i<=maxi; i++)
        fa[i] = ((ll)fa[i-1]*i)%mod;
    for (int i=0; i<=maxi; i++)
        df[i] = pw(fa[i],mod-2);
}
inline int calcC (int x , int y){   
    return ((((ll)fa[x] * df[y])%mod) * (ll)df[x-y])%mod;
}
int main(){
    cin >> n >> m >> k; swap(n,m);
    init ();
    dp[0][0] = 1;
    for (int i=1; i<=m; i++)
        for (int j=1; j<=m; j++)
            dp[i][j] = ((ll)j * (dp[i-1][j] + dp[i-1][j-1]))%mod;
    if (n==1){
        cout << pw(k,m) << endl;
        return 0;
    }
    ll res = 0;
    for (int i=0; i<=m; i++)
        for (int j=0; j<=m; j++) if (i+2*j<=k && i+j<=m){
            if (i==0 && n!=2 && j==0)
                continue;
            ll cont = (ll)calcC(k,i) * ((calcC(k-i,j) * (ll)calcC(k-i-j,j))%mod); cont%=mod;
            cont*= pw(i,m*(n-2)); cont%=mod;
            cont*= (((ll)dp[m][i+j] * dp[m][i+j])%mod); cont%=mod;
            res+= cont; res%=mod;
        }
    cout << res << endl;
    return 0;
}   