#include<cstdio>
#include<algorithm>
const int mod=1000000007;
long long sil[1000001];
long long pot(long long a , long long b){
    long long wyn=1;
    while(b>0){
        if(b%2==1)
            wyn=(wyn*a)%mod;
            a=(a*a)%mod;
        b/=2;
    }
    return wyn;
}
long long newton(long long n, long long k){
    if(k==0)
        return 1;
    if(k>n)
        return 0;
    if(n<0 || k<0)
        return 0;
    long long wyn=sil[n];
    wyn=(wyn*pot(sil[k], mod-2))%mod;
    wyn=(wyn*pot(sil[n-k], mod-2))%mod;
    return wyn;
}
int main(){
    long long n,m,p, wyn=0;
    scanf("%lld%lld%lld", &n, &m, &p);
    sil[0]=1;
    for(long long i=1; i<=p; i++){
        sil[i]=(sil[i-1]*i)%mod;
    }
    if(m==1){
        wyn=pot(p,n);
        printf("%lld\n", wyn);
        return 0;
    }
    for(int i=1; i<=std::min(n,p); i++){
        long long wyn2=0;
        long long l=1;
        for(int j=i; j>=1; j--){
            wyn2=(wyn2+l*(pot(j,n)*newton(i,j))%mod+mod)%mod;
            l*=-1;
        }
        wyn2=(wyn2*wyn2)%mod;
        long long wyn3=0;
        for(int j=0; j<=i; j++){
            wyn3=newton(p,j);
            wyn3=(wyn3*newton(p-j,i-j))%mod;
            wyn3=(wyn3*newton(p-i,i-j))%mod;
            wyn3=(wyn3*pot(j,n*(m-2)))%mod;
            wyn=(wyn+wyn2*wyn3)%mod;
            //printf("%lld %lld\n", wyn2, wyn3);
        }

    }
    printf("%lld\n", wyn);
}
