#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <cstdio> 

#define forn(i,n) for (int i = 0; i < int(n); i ++)
#define mp make_pair
#define pb push_back
#define ll long long

using namespace std;

long long mod = 1000000007;

long long X(long long a, long long b) {
	return a * b % mod;
}

long long po(long long a, int b) {
	if (!b) {
		return 1;
	}
	long long c = po(a, b >> 1);
	c = X(c, c);
	if (b & 1) {
		c = X(c, a);
	}
	return c;
}

long long f[1000010];
long long d[1010][1010];

int main(){
//	freopen ("input.txt", "r", stdin);
//	freopen ("output.txt", "w", stdout);
	int n, m, k;
	cin >> n >> m >> k;
	f[0] = 1;
	forn(i, 1000005) {
		f[i + 1] = X(f[i], (i + 1));
	}
	forn(i, 1005) {
		d[0][i] = d[i][0] = 0;
	}
	d[0][0] = 1;
	for (int i = 1; i < 1005; i++) {
		for (int j = 1; j < 1005; j++) {
			d[i][j] = X(j, d[i - 1][j] + d[i - 1][j - 1]);
		}
	}
	if (m == 1) {
		cout << po(k, n) << endl;
		return 0;
	}
	long long res = 0;
	forn(i, n + 1) {
		forn(j, min(n - i, (k - i) / 2) + 1) {
			res += X(X(f[k], po(X(X(f[j], f[j]), X(f[i], f[k - i - 2 * j])), mod - 2)), X(po(i, n * (m - 2)), X(d[n][i + j], d[n][i + j])));
			res %= mod;
		}
	}
	cout << res << endl;
	return 0;
}

