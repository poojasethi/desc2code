#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 1000010
#define int64 long long
#define mo 1000000007
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,s,an,K;
int64 h[N],p[N],f[1010][1010],tmp;
inline int64 pow(int64 x,int64 y) {
	int64 an=1;
	for (;y;y>>=1) {
		if (y&1) an=an*x%mo;
		x=x*x%mo;
	}
	return an;
}
inline int64 C(int n,int m) {
	return h[n]*p[m]%mo*p[n-m]%mo;
}
int main() {
	h[0]=1; For(i,1,N-1) h[i]=h[i-1]*i%mo;
	p[0]=1; For(i,1,N-1) p[i]=p[i-1]*pow(i,mo-2)%mo;
	scanf("%d%d%d",&n,&m,&K);
	if (m==1) {
		printf("%I64d\n",pow(K,n));
		return 0;
	}
	f[0][0]=1;
	For(i,0,n)For(j,0,i) if (tmp=f[i][j]) {
		f[i+1][j]=(f[i+1][j]+tmp*j)%mo;
		f[i+1][j+1]=(f[i+1][j+1]+tmp)%mo;
	}
	s=(m-2)*n;
	For(i,0,n)For(j,0,n-i) {
		if (i+j+j>K||i+j==0) continue;
		int A=i+j;
		int64 B=f[n][A]*h[A]%mo;
		B=B*B%mo*pow(i,s)%mo*C(K,i)%mo*C(K-i,j)%mo*C(K-i-j,j)%mo;
		an=(B+an)%mo;
	}
	printf("%d\n",an);
	return 0;
}
