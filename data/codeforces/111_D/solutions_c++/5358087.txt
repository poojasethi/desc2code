#include<iostream>
#include<cstdio>
using namespace std;
int n,m,k;
long long ans=0;
long long sum=0;
const long long MOD=1000000007;
long long fac[1000005],rv[1000005];
long long dp[1000006];
long long cal(long long x,long long y)
{
    if(y==0)return 1;
    if(y==1)return x;
    long long tmp=cal(x,y/2);
    if(y&1)
    {
        return tmp*tmp%MOD*x%MOD;
    }
    else
    return tmp*tmp%MOD;
}
long long C(int x,int y){
    return fac[x]*rv[y]%MOD*rv[x-y]%MOD;
}

int main()
{
    cin>>n>>m>>k;
    fac[0]=1,rv[0]=cal(fac[0],MOD-2);
    for (int i=1;i<=1000000;i++)
       fac[i]=(long long)fac[i-1]*i%MOD,rv[i]=cal(fac[i],MOD-2);
    if(m==1)
    {
        cout<<cal(k,n);
        return 0;
    }
    for(int i=1;i<=n&&i<=k;i++)
    {
        dp[i]=cal(i,n);
        for(int j=1;j<i;j++)
        {
            dp[i]=(dp[i]-C(i,j)*dp[j]%MOD+MOD)%MOD;
        }
    }
    if(m==2)
    {
        for(int i=1;i<=n && i<=k;i++)
        ans+=dp[i]*dp[i]%MOD*C(k,i)%MOD*C(k,i)%MOD,ans%=MOD;
    }else  
    for(int i=1;i<=n && i<=k;i++)
    {  
        for(int j=0;j<=n&&j<=k;j++)
        {  
            if(k<2*j+i||i+j>n) break;  
            long long tmp=dp[i+j]*dp[i+j]%MOD;  
            tmp=((tmp*C(k,i)%MOD)*C(k-i,j)%MOD)*C(k-i-j,j)%MOD;  
            tmp=(tmp*cal(i,n*(m-2)))%MOD;  
            ans=(ans+tmp)%MOD;  
        }  
    } 
    cout<<ans;
    //system("pause");
    return 0;
}
