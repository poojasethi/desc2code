#include <cstdio>
#include <algorithm>
using namespace std;

int n, m, x, y;
pair<long long, long long> a[100010], b[100010];

long long cross(pair<long long, long long> a, pair<long long, long long> b, pair<long long, long long> c)
{
	return (b.first - a.first) * (c.second - a.second) - (c.first - a.first) * (b.second - a.second);
}

int main()
{
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
	{
		scanf("%d%d", &x, &y);
		a[i] = make_pair(1ll * x, 1ll * y);
	}

	scanf("%d", &m);
	while (m--)
	{
		scanf("%d%d", &x, &y);
		int l = 1, r = n - 1;
		while (r - l > 1)
		{
			int md = (l + r) >> 1;
			long long det = cross(a[0], a[md], make_pair(1ll * x, 1ll * y));
			if (det <= 0) // right_turn or collinear
				l = md;
			else
				r = md;
		}
		long long det1 = cross(a[0], a[l], make_pair(1ll * x, 1ll * y));
		long long det2 = cross(a[l], a[r], make_pair(1ll * x, 1ll * y));
		long long det3 = cross(a[0], a[r], make_pair(1ll * x, 1ll * y));
		if (det1 > 0 || l == 1 && det1 == 0 || det2 >= 0 || det3 < 0 || r == n - 1 && det3 == 0)
		{
			puts("NO");
			return 0;
		}
	}
	puts("YES");
	return 0;
}
