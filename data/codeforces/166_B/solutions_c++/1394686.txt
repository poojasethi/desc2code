#include <stdio.h>
#include <algorithm>
#define N 200000

struct point
{
  long long int x,y;
  bool type;
  bool operator<(const point &j)const{return x<j.x||(x==j.x&&y<j.y);}
}p[N];

int stack[N],top=0;

int main(void)
{
  int n,m,i,cut;
  bool ans=0;
  scanf("%d",&n);
  for (i=0;i<n;i++)
  {
    scanf("%I64d %I64d",&p[i].x,&p[i].y);
    p[i].type=0;
  }
  scanf("%d",&m);
  for (;i<n+m;i++)
  {
    scanf("%I64d %I64d",&p[i].x,&p[i].y);
    p[i].type=1;
  }
  std::sort(p,p+n+m);
  for (i=0;i<n+m;i++)
	{
		while(top>1&&(p[stack[top-1]].x-p[stack[top-2]].x)*(p[i].y-p[stack[top-1]].y)>(p[stack[top-1]].y-p[stack[top-2]].y)*(p[i].x-p[stack[top-1]].x))
			top--;
		stack[top++]=i;
	}
	cut=top;
	for (i=n+m-2;i>=0;i--)
	{
		while(top>cut&&(p[stack[top-1]].x-p[stack[top-2]].x)*(p[i].y-p[stack[top-1]].y)>(p[stack[top-1]].y-p[stack[top-2]].y)*(p[i].x-p[stack[top-1]].x))
			top--;
		stack[top++]=i;
	}
	for (i=0;i<top-1;i++)
    ans|=p[stack[i]].type;
  if (ans)puts("NO");
  else puts("YES");
}
