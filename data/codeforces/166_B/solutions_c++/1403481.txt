#include<iostream>
#include<algorithm>
#include<cmath>
#define pdd pair<double,double>
#define x first
#define y second
#define mp make_pair
using namespace std;

pdd operator -(pdd A,pdd B){return mp(A.x-B.x,A.y-B.y);}
double operator *(pdd A,pdd B){return A.x*B.y-A.y*B.x;}
int n,m,i,l,r,mid;
pdd a[200000],t;

string DO()
{
	cin>>n;
	for(i=1;i<=n;++i)cin>>a[i].x>>a[i].y;
	for(cin>>m;m--;)
	{
		for(cin>>t.x>>t.y,l=2,r=n,mid=(l+r)/2;l<r;mid=(l+r)/2)
			if((a[mid]-a[1])*(t-a[1])>=0)r=mid;else l=mid+1;
		if(l<3||(a[n]-a[1])*(t-a[1])<=0||(a[l-1]-a[l])*(t-a[l])<=0)return "NO";
	}
	return "YES";
}

int main()
{
	cout<<DO()<<endl;
	return 0;
}
