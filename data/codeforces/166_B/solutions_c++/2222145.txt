#include<stdio.h>
int i,j,m,n;
struct point
{
	int x,y;
};
struct vec
{
	long long x,y;
	vec(point p1,point p2)
	{
		x=p2.x-p1.x;
		y=p2.y-p1.y;
	}
	long long operator*(vec v)
	{
	return ((x*v.y-y*v.x));
	}
};
point a[100001],b[20002];
bool judge(int x,int y,int k)
{
	if(y-x<=1)
	{
		return(vec(a[x],a[y])*vec(a[x],b[k])<0&&vec(a[0],a[x])*vec(a[0],b[k])<=0&&vec(a[0],a[y])*vec(a[0],b[k])>=0
			&&vec(a[0],a[1])*vec(a[0],b[k])<0&&vec(a[0],a[n-1])*vec(a[0],b[k])>0);
	}

	if(vec(a[0],a[x])*vec(a[0],b[k])>0||vec(a[0],a[y])*vec(a[0],b[k])<0)
		return 0;
	else if((vec(a[0],a[(x+y)/2])*vec(a[0],b[k]))<0)
		return judge((x+y)/2,y,k);
	else
		return	judge(x,(x+y)/2,k);
}

int main()
{
	bool bb=1;
	scanf("%d",&n);
	for(i=0;i<n;i++)
		scanf("%d%d",&a[i].x,&a[i].y);
	scanf("%d",&m);
	for(i=0;i<m;i++)
		scanf("%d%d",&b[i].x,&b[i].y);
	for(i=0;i<m&&bb;i++)
		if(!judge(1,n-1,i)) bb=0;
	if(bb)
	 printf("YES\n");
	else
		printf("NO\n");
	return  0;

}

	  			 				 	 		 	   	  		