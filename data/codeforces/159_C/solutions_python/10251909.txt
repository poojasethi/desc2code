from collections import defaultdict

__author__ = 'Rugnar'

r = lambda: raw_input()
ri = lambda: int(r())
rl = lambda: [x for x in r().split()]


class Operation(object):
    def __init__(self, index, character):
        self.i = int(index)-1
        self.c = character

    def __repr__(self):
        return "Op({}{})".format(self.c, self.i)


n = ri()
s = list(n*r())
sd = {i: c for i, c in enumerate(s)}

counter = defaultdict(lambda: [])


for i, c in enumerate(s):
    counter[c].append(i)

n = ri()

for op in (Operation(*rl()) for _ in xrange(n)):
    index = counter[op.c].pop(op.i)
    sd.pop(index)

print ''.join(sd.values())