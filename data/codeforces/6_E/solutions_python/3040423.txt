from collections import deque
n, m = map(int, raw_input().split())
height = map(int, raw_input().split())

left = 0
right = n
vols = []
queMin = deque()
queMax = deque()
maxLen = -1
start = 0
for i in range(n):
    while(len(queMin) > 0 and height[queMin[-1]] >= height[i]):
        queMin.pop()
    queMin.append(i)
    while(len(queMax) > 0 and height[queMax[-1]] <= height[i]):
        queMax.pop()
    queMax.append(i)
    while height[queMax[0]] - height[queMin[0]] > m:
        start += 1
        if len(queMin) > 0 and queMin[0] < start:
            queMin.popleft()
        if len(queMax) > 0 and queMax[0] < start:
            queMax.popleft()
    if i-start+1 > maxLen:
        maxLen = i-start+1
curl = maxLen
queMin.clear()
queMax.clear()
for i in range(n):
    while(len(queMin) > 0 and height[queMin[-1]] >= height[i]):
        queMin.pop()
    queMin.append(i)
    while(len(queMax) > 0 and height[queMax[-1]] <= height[i]):
        queMax.pop()
    queMax.append(i)
    if queMin[0] <= i - curl:
        queMin.popleft()
    if queMax[0] <= i - curl:
        queMax.popleft()
    #print i,queMax[0],queMin[0]
    if i >= curl - 1 and height[queMax[0]] - height[queMin[0]] <= m:
        vols.append([i-curl+1,i])

print curl,len(vols)
for i in range(len(vols)):
    print vols[i][0]+1,vols[i][1]+1