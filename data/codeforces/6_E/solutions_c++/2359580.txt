#include <iostream>
#include <algorithm>
#include <set>

using namespace std;

const int N = 100005;
int n, k, a[N], L[N], R[N], ns, ms, beg;
multiset<int>s;
int main ()
{
    cin>>n>>k;
    for (int i; i < n; i++)
        cin>>a[i];

    for (int i = 0; i < n; i++)
    {
        s.insert(a[i]);
        while ((*s.rbegin()) - (*s.begin())  > k)
            s.erase(s.find(a[beg++]));
        if (s.size() > ms)
            ns = 0, ms = s.size();
        if (s.size() == ms)
            L[ns] = beg, R[ns++] = i;
    }

    cout<<ms<<" "<<ns<<endl;
    for (int i = 0; i < ns; i++)
        cout<<L[i]+1<<" "<<R[i]+1<<endl;

    return 0;
}
