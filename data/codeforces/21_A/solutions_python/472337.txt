# -*- coding: UTF-8 -*-

# from itertools import *
# from collections import defaultdict

# def gcd(a,b):
#     while b > 0: a,b = b, a%b
#     return a

# def baseN(num,b,numerals="0123456789abcdefghijklmnopqrstuvwxyz"):
#     return ((num == 0) and  "0" ) or ( baseN(num // b, b).lstrip("0") + numerals[num % b])

patt = "qwertyuiopasdfghjklzxcvbnm1234567890_"
k = raw_input()
if k[-1] == "/":
    print "NO"
    exit()
St = k.lower().split("@")
if len(St) != 2:
    print "NO"
    exit()
    
St = [St[0]] + St[1].split("/", 1)

if len(St) == 2:
    St.append("")

if len(St[0]) > 16 or len(St[1]) > 32 or len(St[2]) > 16:
    print "NO"
    exit()
    
if not St[0] or not St[1]:
    print "NO"
    exit()
    
for i in St[0]:
    if i not in patt:
        print "NO"
        exit()
        
for i in St[1]:
    if i not in patt and i != ".":
        print "NO"
        exit()
        
for i in St[2]:
    if i not in patt:
        print "NO"
        exit()
        
j = St[1].split(".")
for i in j:
    if len(i) > 16 or len(i) == 0:
        print "NO"
        exit()

print "YES"
