#include <iostream>

using namespace std;

const long long MOD = 1000 * 1000 * 1000 + 7;
const int MAX_N = 200 * 1000 + 10;
long long p[MAX_N];

long long binPow(long long a, long long q)
{
	a %= MOD;
	if (q == 0)
		return 1;
	long long x = binPow(a * a, q / 2);
	if (q % 2 == 1)
		x *= a;
	x %= MOD;
	return x;
}

int main()
{
	int m;
	cin >> m;
	for (int i = 0; i < m; i++)
	{
		int x;
		cin >> x;
		p[x]++;
	}
	long long d = 1, ans = 1;
	for (int i = 2; i <= MAX_N - 10; i++)
	{
		long long fi = binPow(i, (p[i] + 1) * p[i] / 2);
		ans = binPow(ans, p[i] + 1) * binPow(fi, d);
		d *= p[i] + 1;
		d %= MOD - 1;
	}
	cout << ans << endl;
	return 0;
}