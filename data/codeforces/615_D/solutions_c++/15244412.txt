#include <cstdio>

typedef long long LL;

const int P = 1e9 + 7, N = 200005;

int a[N], l[N], r[N];

int pow(int a, int b) {
	int res = 1;
	while (b) {
		if (b & 1) res = ((LL)res * a) % P;
		a = (LL)a * a % P;
		b >>= 1;
	}
	return res;
}

int main() {
	int m;
	scanf("%d", &m);
	while (m--) {
		int x;
		scanf("%d", &x);
		++a[x];
	}
	l[1] = 1;
	for (int i = 2; i <= 200000; ++i) {
		l[i] = (LL)l[i - 1] * (a[i] + 1) % (P - 1);
	}
	r[200001] = 1;
	for (int i = 200000; i >= 2; --i) {
		r[i] = (LL)r[i + 1] * (a[i] + 1) % (P - 1);
	}
	int ans = 1;
	for (int i = 2; i <= 200000; ++i) {
		int foo;
		if (a[i] % 2 == 0) {
			foo = (LL)a[i] / 2 * (a[i] + 1) % (P - 1);
		} else foo = (LL)(a[i] + 1) / 2 * a[i] % (P - 1);
		ans = (LL)ans * pow(i, (LL)l[i - 1] * r[i + 1] % (P - 1) * foo % (P - 1)) % P;
	}
	printf("%d\n", ans);
	return 0;
}

