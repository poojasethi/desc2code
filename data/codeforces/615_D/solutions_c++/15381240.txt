#include<stdio.h>
#include<string.h>
__int64 mod = 1e9+7;
__int64 mood = (mod-1)*2;
__int64 p[200005],cnt[200005];
__int64 qmod(__int64 x,__int64 a)
{
	__int64 res=1;
	while(a)
	{
		if(a%2==1) res=(res*x)%mod;
		x=(x*x)%mod;
		a/=2;
	}
	return res;
}

int main()
{
	int m,n;
	int i,j,k;
	while(scanf("%d",&m)!=EOF)
	{
		memset(cnt,0,sizeof(cnt));
		n=0;
		for(i=0;i<m;i++)
		{
			int temp;
			scanf("%d",&temp);
			if(cnt[temp]==0) p[n++]=temp;
			cnt[temp]++;
		}
		__int64 tot=1;
		for(i=0;i<n;i++)
		{
			tot=(tot*(cnt[p[i]]+1))%mood;
		}
		__int64 ans=1;
		for(i=0;i<n;i++)
		{
			ans=(ans* qmod(p[i],(cnt[p[i]]*tot/2)%(mod-1)) %mod);
		}
		printf("%I64d\n",ans);
	}
	return 0;
}