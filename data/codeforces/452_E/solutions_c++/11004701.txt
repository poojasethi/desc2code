#include <iostream>
#include <fstream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <cstdlib>
#include <algorithm>
#include <map>
using namespace std;

const int maxN = 700005;
const int mod = 1000000007;
const int oo = 100000000;

struct Tlink{
	int u, v, len;
}Lin[maxN];

int n, minA;
char str[maxN];
int r[maxN], wa[maxN], wb[maxN], sum[maxN];
int sa[maxN], rk[maxN], height[maxN];
int id[maxN], f[maxN];
long long cnt[maxN][4], pri[maxN];

void Readln(){
	n = 0;
	minA = oo;
	for (int i=1; i<=3; i++){
		scanf( "%s", str );
		int len = strlen(str);
		for (int j=0; j<len; j++){
			r[n+j] = str[j]-96;
			id[n+j] = i;
		}
		n += len;
		minA = min(minA, len);
		r[n] = 27+i;
		n++;
	}
}

bool cmp(int *r, int a, int b, int j){
	return r[a] == r[b] && r[a+j] == r[b+j];
}

void da(int *r, int *sa, int n, int m){
	int *x = wa, *y = wb, *t, i, j, p;
	for (i=0; i<m; i++) sum[i] = 0;
	for (i=0; i<n; i++) sum[x[i] = r[i]]++;
	for (i=1; i<m; i++) sum[i] += sum[i-1];
	for (i=n-1; i>=0; i--) sa[--sum[x[i]]] = i;
	for (j=1, p=0; p<n; j+=j, m=p){
		for (p=0, i=n-j; i<n; i++) y[p++] = i;
		for (i=0; i<n; i++) if (sa[i]-j >= 0) y[p++] = sa[i]-j;
		for (i=0; i<m; i++) sum[i] = 0;
		for (i=0; i<n; i++) sum[x[y[i]]]++;
		for (i=1; i<m; i++) sum[i] += sum[i-1];
		for (i=n-1; i>=0; i--) sa[--sum[x[y[i]]]] = y[i];
		for (t=x, x=y, y=t, x[sa[0]] = 0, p=1, i=1; i<n; i++)
			x[sa[i]] = cmp(y, sa[i], sa[i-1], j)?p-1:p++;
	}
}

void getheight(int *r, int *sa, int n){
	int i, j, k=0;
	for (i=1; i<=n; i++) rk[sa[i]] = i;
	for (i=0; i<n; height[rk[i++]] = k)
		for (k?k--:0, j=sa[rk[i]-1]; r[i+k] == r[j+k]; k++);
}

bool cmp2(Tlink a, Tlink b){
	return a.len > b.len;
}

int getfa(int u){
	if (f[u] == u) return u;
	return f[u] = getfa(f[u]);
}

void Solve(){
	da(r, sa, n+1, 255);
	getheight(r, sa, n);
	for (int i=1; i<=n; i++){
		Lin[i].u = i-1;
		Lin[i].v = i;
		Lin[i].len = height[i];
	}
	sort(Lin+1, Lin+n, cmp2);
	for (int i=0; i<=n; i++){
		if (id[sa[i]] > 0) cnt[i][id[sa[i]]] = 1;
		f[i] = i;
	}
	long long ans = 0;
	int now = 1;
	for (int i=minA; i>=1; i--){
		while (Lin[now].len >= i && now <= n){
			int fu = getfa(Lin[now].u);
			int fv = getfa(Lin[now].v);
			ans -= cnt[fu][1]*cnt[fu][2]*cnt[fu][3];
			ans -= cnt[fv][1]*cnt[fv][2]*cnt[fv][3];
			f[fv] = fu;
			for (int j=1; j<=3; j++) cnt[fu][j] += cnt[fv][j];
			ans += cnt[fu][1]*cnt[fu][2]*cnt[fu][3];
			now++;
		}
		pri[i] = ans;
	}
	for (int i=1; i<=minA; i++) printf( "%I64d ", pri[i]%mod );
	printf( "\n" );
}

int main(){
	Readln();
	Solve();
	return 0;
}