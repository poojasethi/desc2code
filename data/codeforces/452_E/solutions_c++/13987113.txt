#include <stdio.h>
#include <string.h>
#include <algorithm>
using namespace std;

#define n   600005
#define P   1000000007
#define For(i,a,b)  for(int i=a;i<=b;i++)

char    s[n];
int     N,Ans[n],Max[n];

bool    Cmp(int a,int b)    {return Max[a]>Max[b];}

struct  SAM{
        int     L,D,F[n],Ord[n],siz[n][4],A[n][27];
        SAM()   {L=D=1;}

        void    Add(int x,int bel){
            int np=++D,p=L,q,nq;    Max[np]=Max[p]+1;
            for (;p&&!A[p][x];p=F[p])   A[p][x]=np;
            if  (!p)    F[np]=1;    else
            if  (Max[q=A[p][x]]==Max[p]+1)  F[np]=q;
            else    {
                F[nq=++D]=F[q]; Max[nq]=Max[p]+1;
                For(i,0,26) A[nq][i]=A[q][i];
                for (F[q]=F[np]=nq;p&&A[p][x]==q;p=F[p])    A[p][x]=nq;
            }   L=np;   siz[np][bel]++;
        }

        void    Work(){
            For(i,1,D)  Ord[i]=i;
            sort(Ord+1,Ord+D+1,Cmp);
            For(i,1,D)  {
                int x=Ord[i],y=F[x],k=1;
                For(j,0,2)  siz[y][j]+=siz[x][j],k=1ll*k*siz[x][j]%P;
                (Ans[Max[x]]+=k)%=P;    (Ans[Max[y]]-=k)%=P;
            }
            for (int i=D;i;i--) (Ans[i]+=Ans[i+1])%=P;
        }
}S;

int     main(){
        N=1<<30;
        For(i,0,2)  {
            scanf("%s",s+1);int Len=strlen(s+1);N=min(N,Len);
            For(j,1,Len)    S.Add(s[j]-'a',i);  S.Add(26,3);
        }   S.Work();
        For(i,1,N)  printf("%d ",(Ans[i]+P)%P);
}
