#include<stdio.h>
#include<string.h>
#include<iostream>
#include<algorithm>
int wa[400002],wb[400002],wv[400002],ws[400002];
char s[400002];
int r[400002],sa[400002];
int cmp(int *r,int a,int b,int l)
{
	return r[a]==r[b]&&r[a+l]==r[b+l];
}
void da(int *r,int *sa,int n,int m)
{
	int i,j,p,*x=wa,*y=wb,*t;
	for(i=0;i<m;i++)
		ws[i]=0;
	for(i=0;i<n;i++)
		ws[x[i]=r[i]]++;
	for(i=1;i<m;i++)
		ws[i]+=ws[i-1];
	for(i=n-1;i>=0;i--)
		sa[--ws[x[i]]]=i;
	for(j=1,p=1;p<n;j*=2,m=p)
	{
		for(p=0,i=n-j;i<n;i++)
			y[p++]=i;
		for(i=0;i<n;i++)
			if(sa[i]>=j)
			{
				y[p++]=sa[i]-j;
			}
			for(i=0;i<n;i++)
				wv[i]=x[y[i]];
			for(i=0;i<m;i++)
				ws[i]=0;
			for(i=0;i<n;i++)
				ws[wv[i]]++;
			for(i=1;i<m;i++)
				ws[i]+=ws[i-1];
			for(i=n-1;i>=0;i--)
				sa[--ws[wv[i]]]=y[i];
			for(t=x,x=y,y=t,p=1,x[sa[0]]=0,i=1;i<n;i++)
				x[sa[i]]=cmp(y,sa[i-1],sa[i],j)?p-1:p++;
	}
	return;
}
int rank[400002],height[400002];
void calheight(int *r,int *sa,int n)
{
	int i,j,k=0;
	for(i=1;i<=n;i++)
		rank[sa[i]]=i;
	for(i=0;i<n;height[rank[i++]]=k)
		for(k?k--:0,j=sa[rank[i]-1];r[i+k]==r[j+k];k++);
	return;
}
long long ans;
long long z[400020];
char A[400002], B[400002], C[400002];
int aa[400020], bb[400020], cc[400020];
int ff[400020];
int F(int x) {
	return ff[x] != x ? ff[x] = F(ff[x]) : x;
}
int rr[400020];
bool cccmp(int x,int y) {
	return height[x]> height[y];
}
int min(int x, int y) {
	return x < y ? x : y;
}
int p = 1000000007;
int main()
{
	int la, lb, lc;
	scanf("%s",A);
	la=strlen(A);
	scanf("%s",B);
	lb=strlen(B);
	scanf("%s",C);
	lc=strlen(C);
	int ll = min(min(la, lb), lc);
	A[la++]=1;
	B[lb++]=2;
	C[lc++]=3;
	int n=la+lb+lc;
	for(int i=0;i<n;i++)
	{
		if (i < la) {
			r[i] = A[i];
		} else if(i < la + lb) {
			r[i] = B[i - la];
		} else {
			r[i] = C[i - la - lb];
		}
	}
	r[n]=0;
	da(r,sa,n+1,256);
	calheight(r, sa, n);
	for(int i = 1; i <= n ;i++)  {
		rr[i] = i;
		ff[i] = i;
	}
	for(int i=0;i<n;i++)
	{
		if(i < la) {
			aa[i] = 1;
		} else if(i < la + lb) {
			bb[i] = 1;
		} else {
			cc[i] = 1;
		}
	} 
	std::sort(rr + 2, rr + n + 1, cccmp);
	int ss = 2;
	for (int i = ll; i >= 1; i--) {
		while(ss <= n && height[rr[ss]] >= i) {
			int x = F(sa[rr[ss]]), y = F(sa[rr[ss]-1]);
			ans -= (long long)aa[x] * bb[x] % p * cc[x] % p;
			ans -= (long long)aa[y] * bb[y] % p * cc[y] % p;
			ff[y] = x;
			aa[x] += aa[y];
			bb[x] += bb[y];
			cc[x] += cc[y];
			aa[y] = 0;
			bb[y] = 0;
			cc[y] = 0;
			
			ans += (long long)aa[x] * bb[x] % p * cc[x] % p;
			ans %= p;
			if (ans < 0) {
				ans += p;
			}
			ss++;
		}
		z[i] = ans;
	}
	for (int i = 1; i <= ll;i++) {
		printf("%d ", z[i]);
	}
	return 0;
}
