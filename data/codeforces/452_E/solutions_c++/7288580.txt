#include<stdio.h>
#include<iostream>
#include<string.h>
#include<vector>
#include<queue>
#include<algorithm>
#include<map>
#include<set>
#include<cmath>
#include<deque>
//#include<time.h>
using namespace std;
#define ll long long
#define ull unsigned long long
#define inf 2000000007
#define mod 1000000007
#define pii pair<int,int>
#define vi vector<int>
#define VS vector<string>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 300010
#define pi 3.14159265358979323846
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(__typeof(t.begin()) i=t.begin();i!=t.end();i++)

char s[N],s1[N];
struct node
{
	int ch[28],fail,len;
	void init()
	{
		memset(ch,0,sizeof(ch));
		fail=len=0;
	}
}t[N*6];
int sz,cnt[N*2][3],pos[N*2][3],f[N],n1,n2,n3;
int code(char c)
{
	if(c=='#')return 0;
	if(c=='$')return 1;
	return c-'a'+2;
}
void build(char *s)
{
	int ed=0,i,j,n=strlen(s);t[0].init();t[0].fail=-1;sz=0;
	memset(pos,-1,sizeof(pos));
	for(i=0;s[i];i++)
	{
		j=code(s[i]);
		int p=++sz;t[p].init();t[p].len=t[ed].len+1;
		if(i<n1)pos[p][0]=i,cnt[p][0]=1;
		else if(i<n2)pos[p][1]=i,cnt[p][1]=1;
		else pos[p][2]=i,cnt[p][2]=1;
		while(ed>=0&&t[ed].ch[j]==0)t[ed].ch[j]=p,ed=t[ed].fail;
		if(ed==-1){ed=p;continue;}
		int q=t[ed].ch[j];
		if(t[q].len==t[ed].len+1)t[p].fail=q;
		else
		{
			int r=++sz;t[r]=t[q];t[r].len=t[ed].len+1;
			t[p].fail=t[q].fail=r;
			while(ed>=0&&t[ed].ch[j]==q)t[ed].ch[j]=r,ed=t[ed].fail;
		}
		ed=p;
	}
}
int main()
{
	int i,j,n,m,k;
	scanf("%s",s);n1=strlen(s);strcat(s,"#");n=n1;
	scanf("%s",s1);n=min(n,(int)strlen(s1));
	strcat(s,s1);n2=strlen(s);strcat(s,"$");
	scanf("%s",s1);n=min(n,(int)strlen(s1));
	strcat(s,s1);n3=strlen(s);
	build(s);
	m=strlen(s);
	vi v[m+1];
	for(i=1;i<=sz;i++)v[t[i].len].pb(i);
	for(int len=m;len;len--)
	{
		for(int x=0;x<v[len].size();x++)
		{
			i=v[len][x];
			j=t[i].fail;
			for(k=0;k<3;k++)
			if(pos[i][k]!=-1)
			{
				pos[j][k]=max(pos[j][k],pos[i][k]);
				cnt[j][k]+=cnt[i][k];
			}
			int good=1;
			for(k=0;k<3;k++)
			good&=(pos[i][k]!=-1);
			//cerr<<i<<" "<<t[i].len<<" "<<j<<" "<<good<<"\n";
			if(!good)continue;
			ll cur=(ll)cnt[i][0]*cnt[i][1]%mod*cnt[i][2]%mod;
			int a=t[j].len+1;
			int b=t[i].len;
			(f[a]+=cur)%=mod;(f[b+1]+=mod-cur)%=mod;
		}
	}
	for(i=1;i<=n;i++)
	{
		(f[i]+=f[i-1])%=mod;
		printf("%d ",f[i]);
	}
	puts("");
	return 0;
}