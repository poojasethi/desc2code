#include<cstdio>
#include<algorithm>
#include<cmath>
using namespace std;

struct point{
	bool q;
	int h,d,l,r;
};

const int maxn=100100;

int n,s[maxn*2],x[maxn*2],tot;
point a[maxn*3];
long long ans;

bool compare(point a,point b){
	if(a.q^b.q)return a.q;
	if(a.q){
		if(a.l!=b.l)return a.l<b.l;
		if(a.d!=b.d)return a.d<b.d;
		return a.h<b.h;
	}
	else{
		if(a.d!=b.d)return a.d<b.d;
		if(a.l!=b.l)return a.l<b.l;
		return a.r<b.r;
	}
}

bool cmp2(point a,point b){
	if(a.h!=b.h)return a.h>b.h;
	if(a.q^b.q)return a.q>b.q;
	return a.l<b.l;
}

int find(int i){
	int l=1,r=tot,mid;
	while(l!=r){
		mid=(l+r)/2;
		if(x[mid]>=i)r=mid;
		else l=mid+1;
	}
	return l;
}

int lowbit(int x){
	return x&-x;
}

int sum(int x){
	int ss=0;
	while(x>0){
		ss+=s[x];
		x-=lowbit(x);
	}
	return ss;
}

void add(int x,int y){
	while(x<=tot){
		s[x]+=y;
		x+=lowbit(x);
	}
}

int main(){
	scanf("%d",&n);
	int i;
	for(i=1;i<=n;i++){
		scanf("%d%d%d%d",&a[i].l,&a[i].h,&a[i].r,&a[i].d);
		if(a[i].r<a[i].l)swap(a[i].l,a[i].r);
		if(a[i].h<a[i].d)swap(a[i].h,a[i].d);
		if(a[i].l==a[i].r)a[i].q=true;
	}
	sort(a+1,a+1+n,compare);
	for(i=1;i<n;i++)
	if(a[i].q==a[i+1].q){
		if(a[i].q){
			if(a[i].l==a[i+1].l)
			if(a[i+1].d<=a[i].h+1){
				a[i+1].d=a[i].d;
				a[i+1].h=fmax(a[i+1].h,a[i].h);
				a[i].l=0;a[i].r=-1;
			}
		}
		else{
			if(a[i].h==a[i+1].h)
			if(a[i+1].l<=a[i].r+1){
				a[i+1].l=a[i].l;
				a[i+1].r=fmax(a[i+1].r,a[i].r);
				a[i].l=0;a[i].r=-1;
			}
		}
	}
	for(i=1;i<=n;i++)ans+=(a[i].r-a[i].l+1)*(a[i].h-a[i].d+1);
	for(i=1;i<=n;i++)
	if(a[i].l<=a[i].r)x[++tot]=a[i].l,x[++tot]=a[i].r;
	sort(x+1,x+1+tot);
	int tmp=n;
	for(i=1;i<=tmp;i++)if(a[i].q && a[i].l<=a[i].r){
		++n;
		a[n].q=true;
		a[n].h=a[i].h;
		a[n].d=a[i].l;
		a[n].l=1;a[n].r=1;
		++n;
		a[n].q=true;
		a[n].h=a[i].d-1;
		a[n].d=a[i].l;
		a[n].l=-1;
		a[i].l=0;a[i].r=-1;
	}
	sort(a+1,a+1+n,cmp2);
	for(i=1;i<=n;i++){
		if(a[i].l<=a[i].r){
			if(a[i].q)add(find(a[i].d),a[i].l);
			else ans-=sum(find(a[i].r))-sum(find(a[i].l)-1);
		}
	}
	printf("%I64d\n",ans);
	return 0;
}
