#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
typedef long long ll;
struct data{
    int a,b,v;
}ax[110001],ay[110001],bx[110001],by[110001];
ll ans,c[410001];
int i,j,k,n,t1,t2,c1,c2,d[410001],a1,a2,b1,b2,w1[110001],w2[110001];
bool cmp1(data a,data b){
    return a.v<b.v||a.v==b.v&&a.a<b.a;
}
bool cmp2(int x,int y){
    return ax[x].a<ax[y].a;
}
bool cmp3(int x,int y){
    return ax[x].b<ax[y].b;
}
void work(data *a,data *b,int l,int r,int &p){
    int i,j,k;
    for (i=l;i<=r;i=j+1){
        for (k=b[i].b,j=i;j<r&&b[j+1].a<=k;j++) k=max(k,b[j+1].b);
        a[++p].a=b[i].a;a[p].b=k;a[p].v=b[i].v;
    }
}
int bs(int x){
    int l,r,m;
    for (l=1,r=d[0];l<r-1;){
        m=(l+r)>>1;
        if (d[m]>=x) r=m;else l=m+1;
    }
    return (d[l]>=x)?l:r;
}
void change(int x,ll v){
    for (;x<=d[0];x+=x&(-x)) c[x]+=v;
}
ll query(int x){
    ll res=0;
    for (;x;x-=x&(-x)) res+=c[x];
    return res;
}
int main(){
    scanf("%d",&n);ans=0;memset(c,0,sizeof(c));
    for (i=1,t1=t2=0;i<=n;i++){
        scanf("%d%d%d%d",&a1,&b1,&a2,&b2);
        if (a1>a2) swap(a1,a2);
        if (b1>b2) swap(b1,b2);
        if (b1==b2){
            bx[++t1].v=b1;bx[t1].a=a1;bx[t1].b=a2;
        }else{
            by[++t2].v=a1;by[t2].a=b1;by[t2].b=b2;
        }
    }
    sort(bx+1,bx+1+t1,cmp1);sort(by+1,by+1+t2,cmp1);
    for (c1=c2=0,i=1;i<=t1;i=j+1){
        for (j=i;j<t1&&bx[j+1].v==bx[i].v;j++);
        work(ax,bx,i,j,c1);
    }
    for (i=1;i<=t2;i=j+1){
        for (j=i;j<t2&&by[j+1].v==by[i].v;j++);
        work(ay,by,i,j,c2);
    }
    for (i=1,d[0]=0;i<=c1;i++) ans+=ax[i].b-ax[i].a+1,d[++d[0]]=ax[i].v,w1[i]=w2[i]=i;
    for (i=1;i<=c2;i++) ans+=ay[i].b-ay[i].a+1,d[++d[0]]=ay[i].a,d[++d[0]]=ay[i].b;
    sort(d+1,d+1+d[0]);sort(w1+1,w1+1+c1,cmp2);sort(w2+1,w2+1+c1,cmp3);
    for (i=1;i<=c1;i++) ax[i].v=bs(ax[i].v);
    for (i=1;i<=c2;i++) ay[i].a=bs(ay[i].a),ay[i].b=bs(ay[i].b);
    for (i=j=k=1;i<=c2;i++){
        for (;j<=c1&&ax[w1[j]].a<=ay[i].v;j++) change(ax[w1[j]].v,1);
        for (;k<=c1&&ax[w2[k]].b<ay[i].v;k++) change(ax[w2[k]].v,-1);
        ans-=query(ay[i].b)-query(ay[i].a-1);
    }
    cout<<ans<<endl;
    return 0;
}