#include<cstdio>
#include<algorithm>
using namespace std;
int n;
struct st
{
	int sum,tme;
	st *ls,*rs;
}seg[8000010];
st *nil;
int ans=0,pool=0;
void update(st *cur,int nl,int nr)
{
	if(cur->tme) cur->sum=nr-nl+1;
	else cur->sum=cur->ls->sum+cur->rs->sum;
}
void chag(st* &cur,int nl,int nr,int l,int r,int val)
{
	if(cur==nil)
	{
		cur=&seg[++pool];
		cur->ls=cur->rs=nil;
		cur->sum=0,cur->tme=0;
	}
	if(nl>=l && nr<=r)
	{
		cur->tme+=val;
		update(cur,nl,nr);
		return;
	}
	int mid=nl+((nr-nl)>>1);
	if(l<=mid) chag(cur->ls,nl,mid,l,r,val);
	if(r>mid) chag(cur->rs,mid+1,nr,l,r,val);
	update(cur,nl,nr);
}
struct rec
{
	int x,y,len,val;
	bool operator <(const rec &p)const
	{
		return x<p.x;
	}
}a[200010];
#define inf 1000000001
int main()
{
	scanf("%d",&n);
	for(int i=1; i<=n; i++)
	{
		scanf("%d%d%d%d",&a[i].x,&a[i].y,&a[i+n].x,&a[i+n].y);
		a[i].x+=inf; a[i].y+=inf; a[i+n].x+=inf; a[i+n].y+=inf;
		if(a[i].x>a[i+n].x) swap(a[i].x,a[i+n].x);
		if(a[i].y>a[i+n].y) swap(a[i].y,a[i+n].y);
		if(a[i].x==a[i+n].x)
		{
			a[i+n].x++;
			a[i+n].len=a[i].len=a[i+n].y-a[i].y+1;
			a[i+n].y=a[i].y;
		}
		else
		{
			a[i+n].x++;
			a[i+n].len=a[i].len=1;
		}
		a[i].val=1;
		a[i+n].val=-1;
	}
	n+=n;
	sort(a+1,a+1+n);
	nil=&seg[++pool]; nil->sum=nil->tme=0;
	st *root=&seg[++pool]; root->ls=root->rs=nil; root->sum=root->tme=0;
	long long ans=0;
	for(int i=1; i<=n; i++)
	{
		int cur=i;
		while(cur<n && a[i].x==a[cur+1].x) cur++;
		for(int j=i; j<=cur; j++)
			chag(root,1,2*inf,a[j].y,a[j].y+a[j].len-1,a[j].val);
		ans=ans+1ll*root->sum*(a[cur+1].x-a[cur].x);
		i=cur;
	}
	printf("%I64d\n",ans);
	return 0;
}


