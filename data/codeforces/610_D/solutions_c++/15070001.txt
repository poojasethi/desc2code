#include<cstdio>
#include<algorithm>
using namespace std;
const int N=200005;
struct line{
    int l,r,y,tp;
}a[2*N];
int rec[4*N],cnt[16*N];
int sum[16*N];
int n,sx,sy,ex,ey,i,now;
int tot;
long long ans;
bool cmp(line a,line b){return a.y<b.y;}
int lower(int x)
{
    int l=1,r=tot*2,mid;
    while(l<r)
    {
        mid=(l+r)/2;
        if (rec[mid]<x) l=mid+1;else r=mid;
    }
    return r;
}
void up(int i){sum[i]=sum[i*2]+sum[i*2+1];}
void build(int i,int l,int r)
{
    if (l==r-1){sum[i]=cnt[i]=0;return ;}
    int mid=(l+r)/2;
    build(i*2,l,mid);
    build(i*2+1,mid,r);
}
void add(int i,int l,int r,int x,int y)
{
    if (x<=l&&r<=y)
    {
        cnt[i]++;
        sum[i]=rec[r]-rec[l];
        return ;
    }
    int mid=(l+r)/2;
    if (y<=mid) add(i*2,l,mid,x,y);
    if (x>=mid) add(i*2+1,mid,r,x,y);
    if (x<mid&&y>mid) add(i*2,l,mid,x,y),add(i*2+1,mid,r,x,y);
    if (cnt[i]) sum[i]=rec[r]-rec[l];
    else up(i);
}
void del(int i,int l,int r,int x,int y)
{
    if (x<=l&&r<=y)
    {
        cnt[i]--;
        if (cnt[i]) sum[i]=rec[r]-rec[l];
        else up(i);
        return ;
    }
    int mid=(l+r)/2;
    if (y<=mid) del(i*2,l,mid,x,y);
    if (x>=mid) del(i*2+1,mid,r,x,y);
    if (x<mid&&y>mid) del(i*2,l,mid,x,y),del(i*2+1,mid,r,x,y);
    if (cnt[i]) sum[i]=rec[r]-rec[l];
    else up(i);
}
int main()
{
    scanf("%d",&n);
        //n=100000;
    for (i=1;i<=n;i++)
    {
        scanf("%d%d%d%d",&sx,&sy,&ex,&ey);
            //sx=-(1e9),ex=1e9,sy=1,ey=1;
        if (sx>ex) swap(sx,ex);
        if (sy>ey) swap(sy,ey);
        a[++tot]={sx,ex+1,sy,1},a[++tot]={sx,ex+1,ey+1,-1};
    }
    //tot=200000;
    for (i=1;i<=tot;i++)
        rec[i*2-1]=a[i].l,
        rec[i*2]=a[i].r;
    sort(rec+1,rec+tot*2+1);
    for (i=1;i<=tot;i++)
    {
        if (i==100006)
            i=i;
        a[i].r=lower(a[i].r);
        if (a[i].r==1)
        {
            a[i].r=1;
        }
        a[i].l=lower(a[i].l);
    }
    sort(a+1,a+tot+1,cmp);
    build(1,1,tot*2);
    for (i=1;i<=tot;i++)
    {
        now=i;
        ans+=(long long )sum[1]*(a[i].y-a[i-1].y);
        if (a[i].tp==1) add(1,1,tot*2,a[i].l,a[i].r);
        else del(1,1,tot*2,a[i].l,a[i].r);
    }
    printf("%I64d\n",ans);
}
