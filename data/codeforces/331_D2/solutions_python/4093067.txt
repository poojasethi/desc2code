#include <iostream>
#include <sstream>
#include <fstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <bitset>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long ll;

int B;
string ds = "RULD";
int dx[] = {1,0,-1,0}, dy[] = {0,1,0,-1};
int a[1010][1010];

int S;
#define MAXS 4100000
int next[MAXS];
int dp[25][MAXS];
int dp2[MAXS];

int get_state(int x, int y, int d){
    return x + y * (B+1) + d * (B+1) * (B+1);
}

void prepare(void){
    int i,j,x,y,d;
    
    S = (B+1) * (B+1) * 4;
    
    REP(x,B+1) REP(y,B+1) REP(d,4){
        int st = get_state(x, y, d);
        int x2 = x, y2 = y, d2 = d;
        if(x2 != 0 && x2 != B && y2 != 0 && y2 != B){
            if(a[x2][y2] != -1) d2 = a[x2][y2];
            x2 += dx[d2];
            y2 += dy[d2];
        }
        next[st] = get_state(x2, y2, d2);
    }
    
    REP(i,S) dp[0][i] = next[i];
    REP(i,24) REP(j,S) dp[i+1][j] = dp[i][dp[i][dp[i][dp[i][j]]]];
}

pair <int, int> query(int x, int y, int d, ll t){
    int start = get_state(x, y, d);
    int i;
    int goal = start;
    
    ll four = 1;
    REP(i,25){
        if(t&four) goal = dp[i][goal];
        four <<= 1;
        if(t&four){
            goal = dp[i][goal];
            goal = dp[i][goal];
        }
        four <<= 1;
    }
    
    int x2 = goal % (B+1);
    int y2 = (goal % ((B+1) * (B+1))) / (B+1);
    if(x2 == 0) x2++; if(x2 == B) x2--;
    if(y2 == 0) y2++; if(y2 == B) y2--;
    return make_pair(x2, y2);
}

int main(void){
    int N,i,j,x,y;
    
    cin >> N >> B; B += 2;
    
    REP(i,B+1) REP(j,B+1) a[i][j] = -1;
    
    REP(i,N){
        int x1,y1,x2,y2;
        cin >> x1 >> y1 >> x2 >> y2; x1++; y1++; x2++; y2++;
        
        if(y1 == y2){
            y = y1;
            if(x1 < x2) for(x=x1;x<=x2;x++) a[x][y] = 0;
            if(x1 > x2) for(x=x2;x<=x1;x++) a[x][y] = 2;
        }
        
        if(x1 == x2){
            x = x1;
            if(y1 < y2) for(y=y1;y<=y2;y++) a[x][y] = 1;
            if(y1 > y2) for(y=y2;y<=y1;y++) a[x][y] = 3;
        }
    }
    
    prepare();
    
    int Q;
    cin >> Q;
    
    REP(i,Q){
        int x,y;
        ll t;
        string dir;
        cin >> x >> y >> dir >> t;
        x++; y++;
        REP(j,4) if(dir[0] == ds[j]) break;
        pair <int, int> ans = query(x, y, j, t);
        printf("%d %d\n", ans.first-1, ans.second-1);
    }
    
    return 0;
}
