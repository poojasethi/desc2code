#include <cstdio>
#include <algorithm>
#include <iostream>
#include <iomanip>
#include <iostream>

using namespace std;

const int Cx[4] = {-1,0,1,0};
const int Cy[4] = {0,-1,0,1};
int n, m;
int f[24][4016016];
int d[4016016];
int mark[4016016];
int C[256];

int Work ( int x,int y,int z )
{
    return x * m * 4 + y * 4 + z;
}

int Tries ( int x, int y )
{
    if ( mark[x] )
    {
        return y-mark[x];
    }
    mark[x] = y;
    return d[x] = Tries ( f[0][x],y+1 );
}

int main()
{
    cin>> n>> m;
    m ++;
    int sizeM = m * m * 4;
    int i_luu, j_luu;
    for (int i = 0 ; i < m ; i++)
    {
        for (int j = 0 ; j < m ; j++)
        {
            for (int k = 0 ; k < 4 ; k++)
            {
                i_luu = i + Cx[k];
                j_luu = j + Cy[k];
                int v = Work ( i,j,k );
                if ( i_luu < 0  ||  j_luu < 0  ||  i_luu >= m  ||  j_luu >= m )
                {
                    f[0][v] = v;
                }
                else
                {
                    f[0][v] = Work ( i_luu,j_luu,k );
                }
            }
        }
    }
    int v_luu, val_luu;
    int x1, x2, y1, y2;
    for (int i = 0 ; i < n ; i++)
    {
        cin>> x1>> y1>> x2>> y2;
        if ( x1 == x2 )
        {
            if ( y1 < y2 )
            {
                v_luu = 3;
                val_luu = 1;
            }
            else
            {
                v_luu = 1;
                val_luu = -1;
            }
            for (; y1 - val_luu != y2 ; y1 += val_luu)
            {
                int v = Work ( x1,y1,v_luu );
                for (int k = 0 ; k < 4 ; k++)
                {
                    int u = Work ( x1,y1,k );
                    f[0][u] = f[0][v];
                }
            }
        }
        else
        {
            if ( x1 < x2 )
            {
                v_luu = 2;
                val_luu = 1;
            }
            else
            {
                v_luu = 0;
                val_luu = -1;
            }
            for (; x1 - val_luu != x2 ; x1 += val_luu)
            {
                int v = Work ( x1,y1,v_luu );
                for (int k = 0 ; k < 4 ; k++)
                {
                    int u = Work ( x1,y1,k );
                    f[0][u] = f[0][v];
                }
            }
        }
    }
    C['L'] = 0;
    C['D'] = 1;
    C['R'] = 2;
    C['U'] = 3;
    for (int i = 0 ; i < sizeM ; i++)
    {
        Tries(i,1);
    }
    for (int i = 1 ; i <= 23 ; i++)
    {
        for (int j = 0 ; j < sizeM ; j++)
        {
            f[i][j] = f[i-1][f[i-1][j]];
        }
    }
    cin>> n;
    char cha;
    long long int tmp2;
    int tmp1, val;
    for (int run = 0 ; run < n; run++)
    {
        cin>> x1>> y1>> cha>> tmp2;
        v_luu = C[cha];
        int v = Work ( x1,y1,v_luu );
        tmp1 = min(3000000ll,tmp2);
        val = 1 << 23;
        for (int i = 23 ; i >= 0 ; i--)
        {
            if ( tmp1 & val )
            {
                v = f[i][v];
            }
            val >>= 1;
        }
        tmp2 -= tmp1;
        if ( tmp2 )
        {
            tmp1 = tmp2 % d[v];
        }
        else
        {
            tmp1 = 0;
        }
        val = 1 << 23;
        for (int i = 23 ; i >= 0 ; i--)
        {
            if ( tmp1 & val )
            {
                v = f[i][v];
            }
            val >>= 1;
        }
        v /= 4;
        cout<< v/m<<' '<< v%m<< endl;
    }
    return 0;
}