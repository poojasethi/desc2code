#include <cstdio>
#include <cstring>
#include <cassert>

char s[10000], r[10000];
int gp[10000], gpc;
int a[256];
int mx, mc;


int isp (int x) {
  if (x == 1) return 0;
  for (int i = 2; i < x; i++)
    if (x % i == 0) return 0;
  return 1;
}

int main () {
  gets (s);
  int l = strlen (s);
  for (int i = 0; i < l; i++) {
    a[(int)s[i]]++;
    if (a[(int)s[i]] > mx) {
      mx = a[(int)s[i]];
      mc = s[i];
    }
  }
  gp[0] = 0;
  gpc = 1;
  for (int i = l / 2 + 1; i <= l; i++)
    if (isp (i))
      gp[gpc++] = i - 1;

  //printf ("%d %d\n", l, gpc);

  if (mx < l - gpc) puts ("NO"); else {
    puts ("YES");
    memset (r, mc, l);
    a[mc] -= l - gpc;
    for (int i = 0; i < 256; i++)
      while (a[i]) {
	r[gp[--gpc]] = i;
	--a[i];
	assert (gpc >= 0);
      }
    printf ("%s\n", r);
  }
  return 0;
}
