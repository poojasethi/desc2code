#include<cstdio>
#include<algorithm>
#include<map>
#define N 200010
#define ll long long
using namespace std;
ll n,d,m,now,ans;
map <ll,ll> a;
ll sta[N];
struct node
{
	ll pos,cost,f;
};
node b[N];


int main()
{
	ll i,j,k,s,t;
	map <ll,ll>::iterator u;
	scanf("%I64d%I64d%I64d",&d,&n,&m);
	a[0]=0;a[d]=0;
	for(i=1;i<=m;i++)
	{
		scanf("%I64d%I64d",&s,&t);
		u=a.find(s);
		if(u==a.end())	
			a[s]=t;
		else
			a[s]=min(a[s],t);
	}
	m=0;
	for(u=a.begin();u!=a.end();u++)
	{
		b[++m].pos=u->first;
		b[m].cost=u->second;
	}
	ll head=1,tail=1;
	sta[1]=m;
	for(i=m-1;i;i--)
	{
		while(tail>=head&&b[sta[head]].pos-b[i].pos>n) head++;
		while(tail>=head&&b[sta[tail]].cost>b[i].cost) tail--;
		if(tail>=head) b[i].f=sta[tail];
		sta[++tail]=i;
	}
	
	for(i=1;i<m;i++)
	{
		if(b[i].f)
		{
			if(now<b[b[i].f].pos-b[i].pos)
			{
				ans+=(b[b[i].f].pos-b[i].pos-now)*b[i].cost;
				now=b[b[i].f].pos-b[i].pos;
			}
		}
		else
		{
			ans+=(n-now)*b[i].cost;
			now=n;
		}
		now-=b[i+1].pos-b[i].pos;
		if(now<0) {puts("-1");return 0;}
	}
	printf("%I64d",ans);
	return 0;
}

 