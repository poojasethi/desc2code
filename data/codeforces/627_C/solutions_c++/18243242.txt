#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;

typedef long long int64;
int64 ans;
int n,d,m,c[1000005],next[200005],now;
struct station {
	int pos,price;
} a[200005];
inline bool operator <(station a,station b) {
	return a.pos<b.pos;
}
inline int lowbit(int x) {
	return x&(-x);
}
inline int query(int x) {
	int ans=m+1;
	for (;x;x-=lowbit(x)) ans=min(ans,c[x]);
	return ans;
}
inline void change(int x,int d) {
	for (;x<=1000000;x+=lowbit(x)) c[x]=min(c[x],d);
}
int main() {
	scanf("%d%d%d",&d,&n,&m);
	for (int i=1;i<=m;i++) scanf("%d%d",&a[i].pos,&a[i].price);
	sort(a+1,a+m+1);
	a[m+1].pos=d;
	for (int i=1;i<=m+1;i++) if (a[i].pos-a[i-1].pos>n) {
		puts("-1"); return 0;
	}
	for (int i=1;i<=1000000;i++) c[i]=m+1;
	for (int i=m;i;i--) {
		next[i]=query(a[i].price);
		change(a[i].price,i);
	}
	now=n;
	for (int i=1;i<=m;i++) {
		now-=a[i].pos-a[i-1].pos;
		int t=min(n,a[next[i]].pos-a[i].pos)-now;
		if (t>0) {
			ans+=(int64)t*a[i].price;
			now+=t;
		}
	}
	printf("%I64d\n",ans);
	return 0;
}
