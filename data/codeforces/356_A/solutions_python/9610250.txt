n, m = map(int, raw_input().split())
father = range(n+3)
result = [0] * (n+2)


def find(key):
    parent = father[key]
    ps = []
    while parent != father[parent]:
        ps.append(parent)
        parent = father[parent]
    for p in ps:
        father[p] = parent
    father[key] = parent
    return father[key]


def union(left, right, color):
    while left <= right:
        parent = find(left)
        if left == parent:
            result[left] = color
            father[left] = left + 1
        left = father[left]

for _ in range(m):
    l, r, x = map(int, raw_input().split())
    union(l, x-1, x)
    union(x+1, r, x)
print ' '.join(map(str, result[1:-1]))