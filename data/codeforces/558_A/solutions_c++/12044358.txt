#include<queue>
#include<iostream>
#include<algorithm>
using namespace std;

typedef pair<int,int> tree;
priority_queue<tree> ql,qr;

int main(){
    int n,x,a,ans=0; cin>>n;
    for(int i=0;i<n;i++){
	cin>>x>>a;
	if(x<0) ql.push(make_pair(x,a));
	else qr.push(make_pair(-x,a));
    }
    if(ql.size()>qr.size()) swap(ql,qr);
    while(!ql.empty()){
	ans+=ql.top().second; ql.pop();
	ans+=qr.top().second; qr.pop();
    }
    if(!qr.empty()) ans+=qr.top().second;
    cout<<ans;
    return 0;
}

