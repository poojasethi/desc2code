#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<vector>
#include<bitset>
using namespace std;
typedef unsigned long long ll;
#define maxn 100100
#define maxk 64
ll c[maxn];
int cnt[maxk];
vector<int> b;
vector<bitset<maxn> > a;
#define pb push_back
int imp[maxn];
int n;
inline void add(bitset<maxn> A,int B) {
	int m=a.size();
	for (int i=0;i<m;i++) 
		if (A[imp[i]]) A^=a[i],B^=b[i];
	int id=-1;
	for (int i=0;i<n;i++) if (A[i]) {id=i;break;}
	if (id==-1) return ;
	imp[m]=id;
	for (int i=0;i<m;i++) 
		if (a[i][id]) a[i]^=A,b[i]^=B;
	a.pb(A),b.pb(B);
}
int ans[maxn];
int main(){
	scanf("%d",&n);
	for (int i=0;i<n;i++) {
		scanf("%I64u",&c[i]);
		for (int j=0;j<62;j++) cnt[j]+=(c[i]>>j)&1;
	}
	for (int i=61;i>=0;i--) {
		if (cnt[i]&&!(cnt[i]&1)) {
			bitset<maxn> t;
			t.reset();
			for (int j=0;j<n;j++) t[j]=(c[j]>>i)&1;
			add(t,1);
		}
	}
	for (int i=61;i>=0;i--) {
		if (cnt[i]&&(cnt[i]&1)) {
			bitset<maxn> t;
			t.reset();
			for (int j=0;j<n;j++) t[j]=(c[j]>>i)&1;
		add(t,0);
		}
	}
	for (int i=0;i<a.size();i++) ans[imp[i]]=b[i];
	for (int i=0;i<n;i++) printf("%d ",2-ans[i]);
	return 0;
}
