#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<algorithm>
#define N 100010
#define int64 long long
#define foru(i,a,b) for(int i=a;i<=b;++i)

using namespace std;
int64 x[61][N/60+2],d[61],a[N];
int rk[61],ans[N],pos[61],p[N];
int cnt,n,nn;
bool cmp(int a,int b)
{
	if(p[a]!=p[b]) return p[a];
	return a>b;
}
bool get(int i,int j)
{
	return (x[i][j/60+1]&d[(j-1)%60+1])!=0;
} 
int main()
{
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	scanf("%d",&n);
	foru(i,1,n) scanf("%I64d",&a[i]);	
	d[1]=1; foru(i,2,60) d[i]=d[i-1]<<1;
	foru(k,1,60)
	{
		cnt=0;
		foru(i,1,n)
		  if(a[i]&d[k]) ++cnt;
		p[k]=cnt&&(!(cnt&1)); rk[k]=k;
	}
	sort(rk+1,rk+61,cmp);
	//foru(i,1,60) printf("%d %d\n",i,rk[i]);
	foru(k,1,60)
	{
		foru(i,1,n) 
		  if(a[i]&d[rk[k]]) x[k][i/60+1]|=d[(i-1)%60+1];
		x[k][n/60+2]=p[rk[k]];
	}
	nn=n/60+2;
	foru(i,1,60)
	{
		int j=1; while(j<=n&&!get(i,j)) ++j; pos[i]=j;
		if(j==n+1) {x[i][nn]=0; continue;}
		foru(j,1,60)
		  if(i!=j&&get(j,pos[i]))
		    foru(k,1,nn) x[j][k]^=x[i][k];
	} 
	foru(i,1,60) ans[pos[i]]=x[i][nn];
	foru(i,1,n) printf("%d%c",2-ans[i],i==n?'\n':' ');
	return 0;
}
