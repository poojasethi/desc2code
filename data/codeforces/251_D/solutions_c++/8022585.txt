#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <vector>
#define N 100010
#define int64 long long
#define M N*80
#define W 63
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,t;
int id[80],Id[80],b[M],next[M],head[N],in[N],f[N],F[N],h[100];
int64 a[N],sum,ans;
inline bool cc1(const int &A,const int &B) {
	int a1=h[A],a2=h[B];
	if (!a1&&a2) return 1;
	if (a1&&!a2) return 0;
	return A>B;
}
inline void add(int x,int y) {
	b[++t]=y,next[t]=head[x],head[x]=t;
	in[y]++;
}
void dfs(int x) {
	int v;
	F[x]=1;
	for (v=head[x];v;v=next[v]) {
		int A=b[v];
		f[A]^=f[x];
		if (!(--in[A])) dfs(A);
	}
}
int main() {
	scanf("%d",&n);
	For(i,1,n) scanf("%I64d",&a[i]),sum^=a[i];
	For(j,0,W) Id[j]=j,h[j]=sum>>j&1;
	sort(Id,Id+W+1,cc1);
	For(i,1,n) {
		For(j,0,W) {
			int A=Id[j];
			if (a[i]>>A&1) {
				if (id[A]) {
					add(i,id[A]);
					a[i]^=a[id[A]];
				} else {
					id[A]=i;
					break;
				}
			}
		}
	}
	For(j,0,W) {
		int A=Id[j];
		if (!(ans>>A&1)&&id[A]) {
			add(0,id[A]);
			ans^=a[id[A]];
		}
	}
	f[0]=1;
	For(i,0,n) if (!in[i]&&!F[i]) dfs(i);
	For(i,1,n) printf("%d ",f[i]+1);
	printf("\n");
	return 0;
}
