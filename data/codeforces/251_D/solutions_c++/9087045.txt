#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<iostream>
typedef long long LL;
#define N 100005
using namespace std;
int n,vis[200],determine[N],ans[N];
bool A[130][N];
LL a[N],sum,tot;
bool check(){
	for(int i=1;i<tot;i++){
		if(vis[i]&&A[tot][vis[i]]){
			for(int j=1;j<=n+1;j++)
				A[tot][j]^=A[i][j];
		}
	}
	for(int i=1;i<=n;i++){
		if(A[tot][i]&&!determine[i]){
			determine[i]=tot;
			vis[tot]=i;
			for(int j=1;j<tot;j++)
				if(A[j][i]){
					for(int k=1;k<=n+1;k++)
						A[j][k]^=A[tot][k];
				}
			break;
		}
	}
	if(!vis[tot]){
		bool now=0;
		for(int i=1;i<=n;i++)
			if(A[tot][i])now^=A[determine[i]][n+1];
		return now==A[tot][n+1];
	}
	return 1;
}
int main(){
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%I64d",&a[i]),sum^=a[i];
	for(int i=62;i>=0;i--){
		LL dig=1LL<<i;
		if(!(sum&dig)){
			tot++;
			for(int j=1;j<=n;j++)
				if((a[j]&dig))
					A[tot][j]=1;
				else A[tot][j]=0;
			A[tot][n+1]=1;
			if(!check())tot--;
		}
	}
	for(int i=62;i>=0;i--){
		LL dig=1LL<<i;
		if((sum&dig)){
			tot++;
			for(int j=1;j<=n;j++)
				if((a[j]&dig))
					A[tot][j]=1;
				else A[tot][j]=0;
			A[tot][n+1]=0;
			if(!check())tot--;
		}	
	}
	for(int i=1;i<=n;i++)
		if(determine[i])
			ans[i]=A[determine[i]][n+1];
		else ans[i]=0;
	for(int i=1;i<=n;i++)
		printf("%d ",(ans[i]^1)+1);
	puts("");
}
