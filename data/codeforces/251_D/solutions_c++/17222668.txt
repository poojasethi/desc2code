#include<cstdio>
#include<cstring>
#include<algorithm>
#include<bitset>

using namespace std;

const int MAXM = 100005;

typedef long long LL;

bitset<MAXM> F[105];
bitset<65> Fi[MAXM];
LL T;
int Final[MAXM],Ch[MAXM],N;

int main()
{
	scanf("%d", &N);
	for(int i = 1;i <= N;i ++)
	{
		LL Cur;scanf("%I64d", &Cur);
		T ^= Cur;
		for(int j = 0;j <= 62;j ++) if (Cur & (1LL << j)) Fi[i][j] = 1;
	}
	int cur = 0;
	for(int j = 0;j < 2;j ++)
		for(int i = 62;i >= 0;i --) 
		if (((T >> i) & 1) == j)
		{
			cur ++;Final[cur] = 1 << 30;F[cur][N + 1] = 1;
			for(int k = 1;k <= N;k ++) if (Fi[k][i]) F[cur][k] = 1; else F[cur][k] = 0;
			for(int k = 1;k < cur;k ++) if (F[cur][Final[k]]) F[cur] ^= F[k];
			for(int k = 1;k <= N + 1;k ++) if (F[cur][k]) {Final[cur] = k;break;}
			if (Final[cur] > N) cur --; else
				for(int k = 1;k < cur;k ++) if (F[k][Final[cur]]) F[k] ^= F[cur];
		}
	for(int i = 1;i <= cur;i ++) Ch[Final[i]] = F[i][N + 1];
	for(int i = 1;i <= N;i ++) printf("%d%c", Ch[i] + 1, i == N ? '\n' : ' ');
	return 0;
}