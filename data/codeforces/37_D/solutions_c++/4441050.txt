#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <vector>
#include <set>
#include <queue>
#include <map>
#include <sstream>
#include <stack>
#include <cassert>
#include <ctime>
#include <cmath>

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;

#define pb push_back
#define sz(x) ((x).size())
#define mp make_pair
#define x first
#define y second

const int N = 110;
const int M = 300005;
const int mod = 1e9 + 7;
const int inf = 0x3f3f3f3f;
const ll oo = 0x3f3f3f3f3f3f3f3fll;
const double eps = 1e-6;

int n, x[N], y[N], sum[N];
ll dp[N][1010], c[1010][1010];

ll dfs(int a, int b){
	if(a == n){
		return b + x[n] <= y[n];
	}
	ll &ret = dp[a][b];
	if(ret + 1) return ret;
	ret = 0;
	for(int i = 0; i <= min(y[a], b + x[a]); i++){
		ret = (ret + dfs(a + 1, b + x[a] - i) * c[b + x[a]][i] % mod) % mod;
	}
	(ret *= c[sum[a]][x[a]]) %= mod;
	//cout << a << " " << b << " " << ret << endl;
	return ret;
}

int main() {
	scanf("%d", &n);
	for(int i = 1; i <= n; i++)
		scanf("%d", &x[i]);
	for(int i = n; i >= 1; i--)
		sum[i] = sum[i + 1] + x[i];
	for(int i = 1; i <= n; i++)
		scanf("%d", &y[i]);
	ll ret = 1;
	for(int i = 0; i < 1010; i++){
		c[i][0] = c[i][i] = 1;
		for(int j = 1; j < i; j++)
			c[i][j] = (c[i - 1][j - 1] + c[i - 1][j]) % mod;
	}
	memset(dp, -1, sizeof(dp));
	ret = dfs(1, 0);
	cout << ret << endl;
    return 0;
}