#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

typedef long long LL;

const int mo=1e9+7;

int n,m,s[105],f[105][1005],Fact[1005],Ie[1005],X[105],Y[105];

int quick(int x,int y)
{
	if (!y) return 1;
	int tmp=quick(x,y/2);
	tmp=(LL)tmp * tmp % mo;
	if (y % 2==1) tmp=(LL)tmp*x % mo;
	return tmp;
}

int C(int n,int m)
{
	return (LL)Fact[n] * Ie[m] % mo * Ie[n-m] % mo;
}

int main()
{
	scanf("%d",&m);
	for (int i=1;i<=m;i++)
	{
		scanf("%d",&X[i]);
		s[i]=s[i-1]+X[i];
	}
	n=s[m];
	for (int i=1;i<=m;i++) scanf("%d",&Y[i]);
	Fact[0]=Ie[0]=1;
	for (int i=1;i<=n;i++)
	{
		Fact[i]=(LL)Fact[i-1]*i % mo;
		Ie[i]=quick(Fact[i],mo-2);
	}
	f[0][0]=1;
	for (int i=1;i<=m;i++)
	{
		for (int j=0;j<=s[i];j++)
		{
			for (int k=0;k<=min(j,Y[i]);k++)
			{
				f[i][j]=(f[i][j]+(LL)f[i-1][j-k] * C(s[i]-j+k,k) % mo) % mo;
			}
		}
	}
	int ans=f[m][n];
	for (int i=1;i<=m;i++) ans=(LL)ans * C(n-s[i-1],X[i]) % mo;
	printf("%d\n",ans);
	return 0;
}
