#include<cstdio>
#include<algorithm>
using namespace std;
int n,x[101],y[101],sum;
long long dp[101][1001],C[1002][1002],mo = 1e9+7,f[1001];
long long inv(long long x,long long k){
    if(k == 1ll) return x;
    long long tmp = inv(x,k/2ll);
    tmp = (tmp*tmp)%mo;
    if(k%2) tmp *= x, tmp %= mo;
    return tmp;
}
int main(){
    C[0][0] = 1ll; f[0] = 1ll;
    for(int i=1;i<=1000;i++){
        f[i] = (f[i-1]*i)%mo; C[i][0] = 1ll; 
        for(int j=1;j<=i;j++)
            C[i][j] = (C[i-1][j-1]+C[i-1][j])%mo;
    }
    scanf("%d",&n);
    for(int i=1;i<=n;i++) scanf("%d",&x[i]), sum += x[i];
    for(int i=1;i<=n;i++) scanf("%d",&y[i]);
    dp[0][0] = 1ll;
    for(int i=1;i<=n;i++){
        for(int j=0;j<=sum;j++)
            for(int k=0;k<=y[i];k++)
                if(j >= k && j >= x[i])
                    dp[i][j-k] += (dp[i-1][j-x[i]]*C[j][k])%mo, dp[i][j-k] %= mo;
    }
    for(int i=1;i<=sum;i++)
        dp[n][0] *= 1ll*i, dp[n][0] %= mo;
    for(int i=1;i<=n;i++)
        dp[n][0] *= inv(f[x[i]],mo-2), dp[n][0] %= mo;
    printf("%I64d\n",dp[n][0]);
    return 0;
}