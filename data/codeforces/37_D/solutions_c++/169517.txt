#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <ctime>
#define MOD 1000000007LL

using namespace std;
typedef long long ll;

int M;
int X[111], Y[111];
ll C[1011][1011];
ll dp[1011][1011];

void compute(){
    for(int i = 0; i < 1011; i++)
        for(int j = 0; j <= i; j++){
            if(j == 0 || j == i) C[i][j] = 1;
            else C[i][j] = (C[i - 1][j - 1] +  C[i - 1][j]) % MOD;
        }
}

int main(){
    cin >> M;
    for(int i = 0; i < M; i++) cin >> X[i];
    for(int i = 0; i < M; i++) cin >> Y[i];
    for(int i = 0; i < M - 1; i++) X[i + 1] += X[i];

    compute();

    dp[M][X[M - 1]] = 1;
    for(int i = M - 1; i >= 0; i--){
        for(int j = 0; j <= X[i]; j++){
            for(int k = 0; k <= Y[i]; k++){
                if(j + k <= X[i])
                    dp[i][j] = (dp[i][j] + dp[i + 1][j + k] * C[X[i] - j][k]) % MOD;
            }
        }
    }
    long long ans = dp[0][0];
    for(int i = 0; i < M- 1; i++)
        ans = (ans * C[X[i + 1]][X[i]]) % MOD;
    cout << (int)ans << endl;
    return 0;
}
