#include <stdio.h>

const int MOD = 1000000007;
int inv[1005], f[1005], a[105], b[105];
int dp[1005][1005]={};
typedef long long LL;
LL c[1005][1005];

LL getinv(LL x, LL y, LL p, LL q, LL r, LL s) {
	if(y==0) return (p%MOD+MOD)%MOD;
	return getinv(y, x%y, r, s, p-r*(x/y), q-s*(x/y));
}

inline LL C(int x, int y) {
	return c[x][y];
}


int main(void) {
	int m, sol=1;
	scanf("%d", &m);
	c[0][0] = 1;
	for(int i=1;i<=1000;i++) {
		c[i][0] = 1;
		for(int j=1;j<=i;j++) c[i][j] = (c[i-1][j-1] + c[i-1][j]) % MOD;
	}
	for(int i=1;i<=1000;i++) inv[i] = getinv(i, MOD, 1, 0, 0, 1);
	for(int i=1;i<=m;i++) scanf("%d", &a[i]);
	for(int i=1;i<=m;i++) scanf("%d", &b[i]);
	int sofar = 0;
	dp[0][0] = 1;
	for(int i=1;i<=m;i++) {
		dp[i][0] = 1;
		sofar += a[i];
		for(int j=1;j<=sofar;j++)
			for(int k=0;k<=j && k<=b[i];k++)
				dp[i][j] = (dp[i][j] + dp[i-1][j-k] * C(sofar-(j-k), k)) % MOD;
	}
	sofar = 0;
	for(int i=1;i<=m;i++) {
		for(int j=1;j<=a[i];j++)
			sol = sol * 1LL * (sofar + j) %MOD * inv[j] % MOD;
		sofar += a[i];
	}
	sol = sol * 1LL * dp[m][sofar] % MOD;
	printf("%d\n", sol);
	return 0;
}
