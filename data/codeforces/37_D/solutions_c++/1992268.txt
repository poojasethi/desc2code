#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int MAXM = 128;
const int MAXN = 1024;
const int MODD = 1000000007;

int m, n, ans, x[MAXM], y[MAXM], s[MAXN], c[MAXN][MAXN], dp[MAXM][MAXN];

int main() {
	memset(c, 0, sizeof(c));
	for (int i = 0; i < MAXN; ++i)
		c[i][0] = 1;
	for (int i = 1; i < MAXN; ++i)
		for (int j = 1; j <= i; ++j)
			c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % MODD;
	while (scanf("%d", &m) != EOF) {
		n = 0;
		ans = 1;
		s[0] = 0;
		for (int i = 1; i <= m; ++i) {
			scanf("%d", &x[i]);
			s[i] = s[i - 1] + x[i];
			ans = (ans * 1LL * c[n += x[i]][x[i]]) % MODD;
		}
		for (int i = 1; i <= m; ++i)
			scanf("%d", &y[i]);
		memset(dp, 0, sizeof(dp));
		dp[0][0] = 1;
		for (int i = 0; i < m; ++i) {
			for (int j = 0; j <= n; ++j) {
				if (dp[i][j] > 0) {
					int tot = s[i + 1] - j;
					for (int cc = 0; cc <= y[i + 1] && cc <= tot; ++cc) {
						dp[i + 1][j + cc] = (dp[i + 1][j + cc] + dp[i][j] * 1LL * c[tot][cc]) % MODD;
					}
				}
			}
		}
		/*
		for (int i = 0; i <= m; ++i) {
			for (int j = 0; j <= n; ++j) {
				if (dp[i][j] > 0) {
					printf("dp[%d][%d] = %d\n", i, j, dp[i][j]);
				}
			}
		}
		*/
		printf("%d\n", (int)((ans * 1LL * dp[m][n]) % MODD));
	}
	return 0;
}
