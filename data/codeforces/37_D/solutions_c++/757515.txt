#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#include<iostream>
using namespace std;
typedef long long LL;
const LL P=1000000007;
LL Pow(LL x,LL y)
{
	LL ret=1;
	LL te=x;
	while(y>0)
	{
		if(y%2==1)ret=ret*te%P;
		te=te*te%P;y/=2;
	}
	return ret;
}
LL dp[120][1200],C[1200][1200];
LL fac[1200];
int i,j,k,x[120],y[120],N,re,n;
LL ret;
int main()
{
	fac[1]=1;
	for(i=2;i<1100;i++)
	fac[i]=fac[i-1]*i%P;
	for(i=1;i<1100;i++)
	{
		C[i][0]=C[i][i]=1;
		for(j=1;j<i;j++)
		C[i][j]=(C[i-1][j-1]+C[i-1][j])%P;
	}
	while(~scanf("%d",&n))
	{
		for(i=0;i<n;i++)
		scanf("%d",&x[i]);
		N=0;
		for(i=0;i<n;i++)N+=x[i];
		ret=fac[N];
		for(i=0;i<n;i++)
		ret=ret*Pow(fac[x[i]],P-2)%P;
		for(i=0;i<n;i++)
		scanf("%d",&y[i]);
		memset(dp,0,sizeof(dp));
		dp[0][0]=1;
		for(i=0;i<n;i++)
		for(j=0;j<=N;j++)
		{
			if(dp[i][j]==0)continue;
			re=j+x[i];
			for(k=0;k<=min(re,y[i]);k++)
			{
				dp[i+1][re-k]+=dp[i][j]*C[re][k];
				dp[i+1][re-k]%=P;
			}
		}
		cout<<dp[n][0]*ret%P<<endl;
	}
}
	   	 						         			