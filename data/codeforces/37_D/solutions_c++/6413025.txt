#include <algorithm>
#include <stdio.h>
#include <memory.h>
#include <queue>
#include <cmath>
#include <set>
#include <map>
#include <string.h>
#include <string>
#include <ctype.h>
#include <ctime>
#include <bitset>
#include <vector>
#include <cassert>

using namespace std;

#define eprintf(...) fprintf(stderr, __VA_ARGS__)
template <class T> inline void chkmin(T &a, T b) { if (a>b) a=b; }
template <class T> inline void chkmax(T &a, T b) { if (a<b) a=b; }

typedef long long INT;
typedef pair<int, int> pii;

#define NN 1100
#define MOD 1000000007

INT c[NN][NN], dp[NN][NN], x[NN], y[NN];

int main() {
	int i, j, k, M;
	INT ans;
	
	for (i=0; i<NN; i++) {
		c[i][0]=c[i][i]=1;
		for (j=1; j<i; j++)
			c[i][j]=(c[i-1][j-1]+c[i-1][j])%MOD;
	}
	
	scanf("%d", &M);
	for (i=0; i<M; i++) scanf("%d", &x[i]);
	for (i=0; i<M; i++) scanf("%d", &y[i]);
	
	for (i=1; i<M; i++) x[i]+=x[i-1];
	
	dp[M][x[M-1]]=1;
	for (i=M-1; i>=0; i--) for (j=0; j<=x[i]; j++) {
		for (k=0; k<=y[i]; k++) 
			if (k<=x[i]-j) dp[i][j]=(dp[i][j]+dp[i+1][j+k]*c[x[i]-j][k])%MOD;
	}
	
	ans=dp[0][0];
	for (i=0; i<M-1; i++) ans=ans*c[x[i+1]][x[i]]%MOD;
	
	printf("%I64d\n", ans);
	
	return 0;
}
