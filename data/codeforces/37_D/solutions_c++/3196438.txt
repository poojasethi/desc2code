// In the name of God

#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstring>
#include <string>
#include <set>
#include <map>
#include <complex>
#include <cmath>
#include <fstream>
#include <iomanip>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef complex<ld> point;
typedef pair<int,int> pii;

const int maxn = 1111;
const ll mod = 1000 * 1000 * 1000 + 7;

ll c[maxn][maxn / 10];
ll dp[maxn][maxn / 10];
ll n,m,x[maxn],y[maxn];

int main()
{  
  ios_base::sync_with_stdio(false);

  cin >> m;
  for(int i=1;i<=m;++i)
    cin >> x[i];
  for(int i=1;i<=m;++i)
    cin >> y[i];

  for(int i=1;i<=m;++i)
    n += x[i];

  for(int i=0;i<maxn;++i)
    c[i][0] = 1;
  for(int i=1;i<maxn;++i)
    for(int j=1;j<maxn/10;++j)
      c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % mod;

  ll ans = 1;
  int cp = n;
  for(int i=1;i<=m;++i){
    ans *= c[cp][x[i]];
    cp -= x[i];
    ans %= mod;
  }

  for(int i=0;i<=n;++i)
    if(i <= y[m])
      dp[i][m] = 1;
    else
      dp[i][m] = 0;

  for(int j=m-1;j>=1;--j)
    for(int i=0;i<=n;++i)
      for(int l=0;l<=min(y[j],(ll)i);++l){
	dp[i][j] += (dp[i - l + x[j + 1]][j + 1] * c[i][l]) % mod;
	dp[i][j] %= mod;
      }

  cout << (ans * dp[x[1]][1]) % mod << endl;

  return 0;
}
