#include <iostream>
#include <string.h>
using namespace std;

const long maxn = 102; 
const long maxm = maxn*maxn;
const long mod = 1000000007;

long a[maxn], b[maxn];
long n, m;
long long f[maxn][maxm], c[maxm][maxn];

int init()
{ 
	m = 0;
	cin >> n;
	for (long i = 1; i <= n; i++) { 
		cin >> a[i];
		m += a[i];
	}
	for (long i = 1; i <= n; i++) cin >> b[i];
	return 0;
}

void work()
{
	memset(c, 0, sizeof(c));
	c[0][0] = 1;
	c[1][0] = c[1][1] = 1;
	for (long i = 2; i <= m; i++) {
		c[i][0] = 1;
		for (long j = 1; j <= maxn; j++)
			if (j<=i) {
				c[i][j] = c[i-1][j-1] + c[i-1][j];
				if (c[i][j] >= mod) c[i][j] -= mod;	
			} else break;
	}
	long long ans = 1;
	long mm = m;
	for (long i = 1; i <= n; i++) {
		ans = (ans*c[mm][a[i]])%mod;	
		mm -= a[i];
	}

	memset(f, 0, sizeof(f));
	f[0][0] = 1;
	for (long i = 0; i <= n-1; i++) 
		for (long j = 0; j <= 100*i; j++)
			if (f[i][j]) {
				for (long k = 0; k <= b[i+1]; k++)
				if (k<=j+a[i+1]) {
					f[i+1][j+a[i+1]-k] += (f[i][j]*c[j+a[i+1]][k])%mod;
					f[i+1][j+a[i+1]-k] %= mod;
				}
			}
	ans = (ans*f[n][0])%mod;
	cout << ans << endl;
}

int main()
{
	init();
	work();
	return 0;
}


