#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <queue>
#include <map>
#include <set>
#include <vector>
#include <string>
#include <stack>
#define INF 0x3f3f3f3f
#define eps 1e-8
using namespace std;
typedef long long LL;
int n,stx,sty,all;
int maze[505][505];
bool vis[505][505];
string ans="";
char dir[]="RDLU";
int nx[]={0,1,0,-1},ny[]={1,0,-1,0};

bool can(int x,int y,int d)
{
    int xx,yy;
    for(int i=1;i<=n;++i)
    {
        xx=x+i*nx[d];yy=y+i*ny[d];
        if(xx<0||xx>=n||yy<0||yy>=n||vis[xx][yy]) return false;
        if(maze[xx][yy]) return true;
    }
    return false;
}

void dfs(int x,int y)
{
    vis[x][y]=1;
    if(maze[x][y]) all--;
    else ans+='1';
    for(int d=0;d<4;++d)
    {
        if(can(x,y,d))
        {
            ans+=dir[d];
            dfs(x+nx[d],y+ny[d]);
            ans+=dir[(d+2)%4];
        }
    }
    ans+='2';
}

int main()
{
    scanf("%d%d%d",&n,&stx,&sty);
    stx--;sty--;all=0;
    int i,j;
    for(i=0;i<n;++i)
        for(j=0;j<n;++j)
        scanf("%d",&maze[i][j]),all+=maze[i][j];
    memset(vis,0,sizeof(vis));
    dfs(stx,sty);
    if(!all)
    {
        puts("YES");
        cout<<ans<<endl;
    }
    else puts("NO");
    return 0;
}
