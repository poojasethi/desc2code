#include<cstdio>
#include<cstring>

int dir[4][2]={{-1,0},{1,0},{0,-1},{0,1}},n,x0,y0,ind;
int map[505][505];
char d[4]={'U','D','L','R'};
char ans[3000005];
bool vis[505][505];

bool check()
{
	for(int i=1;i<=n;i++)
	  for(int j=1;j<=n;j++)
		if(map[i][j]==1)
		  return false;
	return true;
}

bool cango(int x,int y,int k)
{
	int newx=dir[k][0]+x;
	int newy=dir[k][1]+y;
	if(newx>=1&&newx<=n&&newy>=1&&newy<=n&&!vis[newx][newy])
	{
		while(newx>=1&&newx<=n&&newy>=1&&newy<=n)
		{
			if(map[newx][newy]==1)
			  return true;
			newx+=dir[k][0];
			newy+=dir[k][1];
		}
		return false;
	}
	else
	  return false;
}

void dfs(int x,int y)
{
	vis[x][y]=true;
	if(map[x][y]==0)
	  ans[ind++]='1',map[x][y]=1;
	for(int k=0;k<4;k++)
	  if(cango(x,y,k))
	  {
		 ans[ind++]=d[k];
		 dfs(x+dir[k][0],y+dir[k][1]);
		 if(k==0||k==2)
		   ans[ind++]=d[k+1];
		 else
		   ans[ind++]=d[k-1];
	  }
	ans[ind++]='2',map[x][y]=0;
}

int main()
{
	memset(map,0,sizeof(map));
	memset(vis,0,sizeof(vis));
	ind=0;
	scanf("%d%d%d",&n,&x0,&y0);
	for(int i=1;i<=n;i++)
	  for(int j=1;j<=n;j++)
		scanf("%d",&map[i][j]);
	dfs(x0,y0);
	if(check())
	{
		puts("YES");
		ans[ind]=0;
		printf("%s\n",ans);
	}
	else puts("NO");
	return 0;
}
