#include <bits/stdc++.h>
using namespace std;

const int N = 510;
int dir[4][2] = {0,1,0,-1,1,0,-1,0};
char dirs1[] = "RLDU";
char dirs2[] = "LRUD";
int n,tot = 0;
char path[10000010];
int a[N][N];
int cnt = 0,visit[N][N];
bool sure(int x,int y)
{
    return x >= 1 && x <= n && y >= 1 && y <= n && !visit[x][y];
}

bool check(int x,int y,int d)
{
    for(int i = 1; ; i ++) {
        int tx = x + dir[d][0] * i;
        int ty = y + dir[d][1] * i;
        if(!sure(tx,ty)) return false;
        if(a[tx][ty]) return true;
    }
}

void dfs(int x,int y)
{
    visit[x][y] = 1;
    if(!a[x][y]) {
        a[x][y] = 1;
        path[cnt ++] = '1';
        tot ++;
    }
    for(int i = 0; i < 4; i ++) {
        int tx = x + dir[i][0];
        int ty = y + dir[i][1];
        if(check(x,y,i)) {
            path[cnt ++] = dirs1[i];
            dfs(tx,ty);
            path[cnt ++] = dirs2[i];
        }
    }
    path[cnt ++] = '2';
    tot --;
}

int main()
{
    int x,y;
    scanf("%d%d%d",&n,&x,&y);
    for(int i = 1; i <= n; i ++)
        for(int j = 1; j <= n; j ++) {
            scanf("%d",&a[i][j]);
            tot += a[i][j];
        }
    dfs(x,y);
    if(tot) cout << "NO" << endl;
    else {
        cout << "YES" << endl;
        printf("%s\n",path);
    }
    return 0;
}
    
    
    

	    		    	 	   		 	 	   	