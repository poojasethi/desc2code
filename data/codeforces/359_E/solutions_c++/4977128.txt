#include <iostream>
#include <cstdio>
#include <cmath>

#define run(a) (cmd[a]+dfs(x+dirx[a], y+diry[a])+cmd[a^1])

using namespace std;

const string cmd = "RLDU";
const int dirx[] = {0, 0, 1, -1};
const int diry[] = {1, -1, 0, 0};

int n, sum=0, deep=0;
bool vis[550][550]={0}, map[550][550]={0};
string ans="";

bool pan(int x, int y, int i)
{
	for(int l=1; l<=n; l++)
	{
		int x_=x+dirx[i]*l, y_=y+diry[i]*l;
		if(x_<1 || y_<1 || x_>n || y_>n || vis[x_][y_]) return false;
		if(map[x_][y_]) return true;
	}
	return false;
}

void dfs(int x, int y)
{
	vis[x][y]=1;
	if(map[x][y]) sum--;
	else ans+='1';
	for(int i=0; i<4; i++)
	{
		if(pan(x, y, i))
		{
			ans+=cmd[i];
			dfs(x+dirx[i], y+diry[i]);
			ans+=cmd[i^1];
		}
	}
	ans+='2';
}

int main()
{
	int x0=0, y0=0;
	cin>>n>>x0>>y0;
	for(int i=1; i<=n; i++)
		for(int j=1; j<=n; j++) 
		{
			cin>>map[i][j];
			sum+=map[i][j];
		}
	dfs(x0, y0);
	if(sum) { cout<<"NO"<<endl; return 0; }
	cout<<"YES"<<endl;
	cout<<ans<<endl;
	return 0;
}
