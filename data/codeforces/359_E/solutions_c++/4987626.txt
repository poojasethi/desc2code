#include <iostream>
#include <cstdio>
using namespace std;
int graph[501][501];
int n ,x , y;
int dx [] = {1,-1,0,-0};
int dy [] = {0,0,1,-1};
int sum = 0 , p = 0;
char res [3000000];
bool vis [501][501];

bool good (int x,int y,int mode) {
    for (;;) {
        x+=dx[mode],y+=dy[mode];
        if (x < 0 || y < 0 || x >= n || y >= n) return 0;
        if (vis[x][y]) return 0;
        if (graph[x][y]) return 1;
    }
}

void DFS (int x ,int y) {
vis[x][y] = true;
if(graph[x][y] == 0) res[p++] = '1' , sum++;
for(int i = 0; i < 4;i++) {
   int xd = x + dx[i];
   int yd = y + dy[i];
   if(good(x,y,i)) {
    res[p++]=!i?'D':i==1?'U':i==2?'R':'L';
    DFS(xd,yd);
    res[p++]=!i?'U':i==1?'D':i==2?'L':'R';
   }
}
res[p++] = '2', sum--;
}

int main()
{
   cin >> n >> x >> y;
   for(int i = 0; i < n;i++)
    for(int j = 0; j < n;j++) {
      scanf("%d",&graph[i][j]);
      if(graph[i][j] == 1) sum++;
    }
    DFS(x-1,y-1);
    if(sum != 0) {
        cout << "NO"<<endl;
        return 0;
    }
    cout << "YES" << endl;
    cout << res << endl;
}
