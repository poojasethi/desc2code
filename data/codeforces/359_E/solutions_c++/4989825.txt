#include <stdio.h>
#include <string.h>

const int maxn=500+10;
int n;
int g[maxn][maxn];
bool vis[maxn][maxn];
int len=0;
char ans[maxn*maxn*4];
int x,y;
int move[2][4]={{-1,0,1,0},{0,1,0,-1}};
char dir[4]={'U','R','D','L'};


bool check(int x,int y,int d) {
	int i=d;
	while (1) {
		x=x+move[0][i];
		y=y+move[1][i];
		if (x<=0 || x>n || y<=0 || y>n) break;
		if (vis[x][y]) break;
		if (g[x][y]==1) return 1;
	}
	return 0;
}


void dfs(int x,int y,int d) {
	int xx,yy;
	vis[x][y]=1;
	if (!g[x][y]) {ans[len++]='1';g[x][y]=1;}
	for (int i=0;i<4;i++) {
		xx=x+move[0][i];
		yy=y+move[1][i];
		if (xx<=0 || xx>n || yy<=0 || yy>n) continue;
		if (vis[xx][yy]) continue;
		if (!check(x,y,i)) continue;
		ans[len++]=dir[i];
		dfs(xx,yy,i);
	}
	ans[len++]='2';
	g[x][y]=0;
	if (d!=-1) ans[len++]=dir[(d+2) & 3];
}

int main() {
	memset(ans,0,sizeof(ans));
	memset(vis,0,sizeof(vis));
	len=0;
	scanf("%d%d%d",&n,&x,&y);
	for (int i=1;i<=n;i++)
		for (int j=1;j<=n;j++)
			scanf("%d",&g[i][j]);
	dfs(x,y,-1);
	int tot=0;
	for (int i=1;i<=n;i++)
		for (int j=1;j<=n;j++) tot+=g[i][j];
	if (tot) puts("NO");
	else {
		puts("YES");
		printf("%s\n",ans);
	}
	return 0;
}
