//In the name of God
#include <algorithm>
#include <iostream>
using namespace std;
const int N = 505;

int n, x[] = {0, 1, 0, -1}, y[] = {1, 0, -1, 0}, x0, y0, cnt;
bool on[N][N], dir[N][N][4], mark[N][N];
string ans = "YES\n";
char c[] = {'R', 'D', 'L', 'U' };

inline void add(int i, int j) {
	for (int k = j - 1; k && !dir[i][k][0]++; k--);
	for (int k = i - 1; k && !dir[k][j][1]++; k--);
	for (int k = j + 1; k <= n && !dir[i][k][2]++; k++);
	for (int k = i + 1; k <= n && !dir[k][j][3]++; k++);
}
int dis(int x, int y) { return abs(x - x0) + abs(y - y0); }
void dfs(int x0, int y0) {
	mark[x0][y0] = true;
	if (!on[x0][y0]++) {
		add(x0, y0);
		cnt++;
		ans.push_back('1');
	}
	for (int i = 0; i < 4; i++) {
		int x = ::x[i] + x0, y = ::y[i] + y0;
		if (x && x <= n && y && y <= n && !mark[x][y] && dir[x0][y0][i]) {
			ans.push_back(c[i]);
			dfs(x, y);
			ans.push_back(c[i ^ 2]);
		}
	}
}
void dfs2(int x0, int y0) {
	for (int i = 0; i < 4; i++) {
		int x = ::x[i] + x0, y = ::y[i] + y0;
		if (x && x <= n && y && y <= n && on[x][y] && dis(x, y) > dis(x0, y0)) {
			ans.push_back(c[i]);
			dfs2(x, y);
			ans.push_back(c[i ^ 2]);
		}
	}
	ans.push_back('2');
	cnt--;
	on[x0][y0] = false;
}
	
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> x0 >> y0;
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= n; j++) {
			cin >> on[i][j];
			if (on[i][j])
				add(i, j), cnt++;
		}
	dfs(x0, y0);
	dfs2(x0, y0);
	cout << (cnt? "NO": ans) << '\n';
	return 0;
}
