#include <cstdlib>
#include <cstdio>
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

const int MAXN = 512;
const int dx[] = {0, 0, -1, 1};
const int dy[] = {-1, 1, 0, 0};
const char dc[] = {'L', 'R', 'U', 'D'};
const char dr[] = {'R', 'L', 'D', 'U'};

bool arr[MAXN][MAXN];
int virt[MAXN][MAXN];

int N;
string sans;

void dfs(int x, int y)
{
	//cout<<"("<<x<<","<<y<<")"<<endl;
	virt[x][y]++;
	if(virt[x][y] == 1 && !arr[x][y])sans.push_back('1');
	arr[x][y] = false;

	for(int i=0; i<4; i++)
	{
		int xx = x, yy = y;
		bool ok = false;
		while(1)
		{
			xx += dx[i];
			yy += dy[i];
			if(xx < 0 || xx >= N || yy < 0 || yy >= N)break;
			if(arr[xx][yy])
			{
				ok = true;
				break;
			}
		}
		if(ok)
		{
			sans.push_back(dc[i]);
			dfs(x + dx[i], y + dy[i]);
			sans.push_back(dr[i]);
		}
	}

	virt[x][y]--;
	if(virt[x][y] == 0)sans.push_back('2');
}

int main()
{
    ios_base::sync_with_stdio(0);

    int x0, y0;
    cin>>N>>x0>>y0;
    x0--;
    y0--;

    for(int i=0; i<N; i++)
	{
		for(int j=0; j<N; j++)
		{
			cin>>arr[i][j];
			//virt[i][j] = arr[i][j];
		}
	}

	dfs(x0, y0);

	for(int i=0; i<N; i++)
	{
		for(int j=0; j<N; j++)
		{
			if(arr[i][j])
			{
				cout<<"NO"<<endl;
				return 0;
			}
		}
	}

	cout<<"YES"<<endl;
	cout<<sans<<endl;

    return 0;
}
