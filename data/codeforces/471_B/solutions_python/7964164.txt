from collections import defaultdict, OrderedDict
from itertools import permutations

n = int(raw_input())
nums = map(int, raw_input().split())

d = defaultdict(list)
for i in xrange(0, n):
	d[nums[i]].append(i)

permCount = 1
for k in d:
	permCount *= len(d[k])

if permCount < 3:
	print "NO"
	exit(0)

print "YES"

orderedD = OrderedDict(sorted(d.items()))

results = [[], [], []]
nextR = 0

for k, v in orderedD.iteritems():
	if len(v) == 1:
		for i in range(0, 3):
			results[i].extend(v)
	else:
		perms = permutations(v)
		if len(v) == 2:
			results[nextR].extend(next(perms))
			results[(nextR + 1) % 3].extend(next(perms))
			results[(nextR + 2) % 3].extend(v)
			nextR = (nextR + 2) % 3
		else:
			results[0].extend(next(perms))
			results[1].extend(next(perms))
			results[2].extend(next(perms))

for r in results:
	for i in r:
		print i + 1,
	print