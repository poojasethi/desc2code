#include <bits/stdc++.h>
using namespace std;

const int MAX = 1e5 + 1;
#define LL long long
int n, t, l, r, k, w;
int cumSum[MAX], cumSumk[MAX];
string s;
int main() {
	cin >> n >> k >> w;
	cin >> s;

	for (int i = 1 ; i <= n ; i++ ) {
		cumSum[i] = cumSum[i - 1] + (s[i - 1] == '1');
		cumSumk[i] = (s[i - 1] == '1');
		 if(i - k >= 0) cumSumk[i] += cumSumk[i - k];
	}
	while (w--) {
		cin >> l >> r;
		int all = cumSum[r] - cumSum[ l - 1 ];
		int need = cumSumk[r] - cumSumk[ l - 1 ];
		int mustHave = (r - l + 1) / k;
		mustHave -= need;
		int ans = mustHave + (all - need);
		cout << ans << endl;
	}
	return 0;
}