import sys

def genPrimes(bound):
	isPrime = [True] * max(bound + 1, 2)
	isPrime[0] = isPrime[1] = False
	for i in range(4, len(isPrime), 2):
		isPrime[i] = False
	for i in range(3, len(isPrime), 2):
		if isPrime[i]:
			for j in range(i * i, len(isPrime), 2 * i):
				isPrime[j] = False
	return [x for x in range(len(isPrime)) if isPrime[x]]

def div(f1, f2):
	return [f1[i] - f2[i] for i in range(len(f1))]

def fact(primes, n):
	res = [0] * len(primes)
	for i in range(len(primes)):
		q = primes[i]
		while n / q > 0:
			res[i] += n / q
			q *= primes[i]
	return res

def c(primes, n, k):
	return div(div(fact(primes, n), fact(primes, k)), fact(primes, n - k))

#cin = open("input.txt", "rt")
cin = sys.stdin
n, m, h = [int(x) for x in cin.readline().split()]
a = [int(x) for x in cin.readline().split()]

h -= 1
n -= 1
a[h] -= 1
a[h], a[-1] = a[-1], a[h]
left, right = sum(a[:-1]), a[-1]

if left + right < n:
	print -1
	sys.exit(0)
if n > left:
	print 1
	sys.exit(0)		

primes = genPrimes(left + right)

num = c(primes, left, n)
den = c(primes, left + right, n)

for i in range(len(primes)):
	v = min(num[i], den[i])
	num[i] -= v
	den[i] -= v

ans = 1.0
for i in range(len(primes)):
	for _ in range(num[i]):
		ans *= primes[i]
	for _ in range(den[i]):
		ans /= primes[i]
print "%.6f" % (1.0 - ans)
