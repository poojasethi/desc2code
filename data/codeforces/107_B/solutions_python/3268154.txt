factors = [None] * 100000
ans = [0] * 100000
prime = [2,]
def primes():
    for i in range(3,320,2):
        if [i % j == 0 for j in prime].count(True) == 0:
            prime.append(i)

def make_factors():
    for num in range(1,100000):
        if num <= 1:
            factors[num] = [1,]
        else:
            factors[num] = []
            for p in prime:
                if num % p == 0:
                    factors[num] = [p,] + factors[num / p]
                    break;
            if len(factors[num]) == 0:
                factors[num] = [num,]

def solve(a,b,c): # (a-c)!a!/(a-b)!c!
    num = [i + 1 for i in xrange(c-b)] + [i + 1 for i in xrange(a)]
    den = [i + 1 for i in xrange(a-b)] + [i + 1 for i in xrange(c)]
    num.sort()
    den.sort()

    for u in num:
        facts = factors[u]
        for f in facts:
            ans[f] += 1
    
    for u in den:
        facts = factors[u]
        for f in facts:
            ans[f] -= 1
    
    res = 1.0
    for i in range(100000):
        res *= i ** ans[i]
    return res

primes()
make_factors()
n,m,h = map(int,raw_input().split())
arr = map(int,raw_input().split())
if sum(arr) < n:
    print -1
    quit()

arr[h-1] -= 1
n -= 1

if sum(arr)-arr[h-1] < n:
    print 1
else:
    print 1 - solve(sum(arr) - arr[h-1],n,sum(arr))
