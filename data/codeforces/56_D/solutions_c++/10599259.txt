#include<iostream>
#include<string>
#include<cstring>
#include<cstdio>
#include<cmath>
#include<iomanip>
#include<map>
#include<algorithm>
#include<queue>
#include<set>
#define inf 1000000000
#define pi acos(-1.0)
#define eps 1e-8
#define seed 131
using namespace std;
typedef pair<int,int> pii;
typedef unsigned long long ull;
typedef long long ll;
const int maxn=100005;
char s1[1005];
char s2[1005];
int n,m;
int dp[1005][1005];
void dfs(int i,int j)
{
    if(i==0&&j==0)
        return;
    if(j-1>=0&&dp[i][j]==dp[i][j-1]+1)
    {
        dfs(i,j-1);
        printf("INSERT %d %c\n",j,s2[j]);
    }
    else if(i-1>=0&&dp[i][j]==dp[i-1][j]+1)
    {
        dfs(i-1,j);
        printf("DELETE %d\n",j+1);
    }
    else
    {
        dfs(i-1,j-1);
        if(s1[i]!=s2[j])
        {
            printf("REPLACE %d %c\n",j,s2[j]);
        }
    }
}
int main()
{
    scanf("%s",s1+1);
    scanf("%s",s2+1);
    n=strlen(s1+1);
    m=strlen(s2+1);
    dp[0][0]=0;
    for(int i=1;i<=m;i++)
        dp[0][i]=i;
    for(int i=1;i<=n;i++)
        dp[i][0]=i;
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            dp[i][j]=min(min(dp[i][j-1],dp[i-1][j])+1,dp[i-1][j-1]+(s1[i]==s2[j]?0:1));
        }
    }
    cout<<dp[n][m]<<endl;
    dfs(n,m);
    return 0;
}












  		  		   	 	   	       			