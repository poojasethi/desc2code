#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <sstream>
#include <cassert>
using namespace std;

char s[1005],t[1005];
int f[1005][1005];

inline int dfs(int i,int j)
{
	if (i==0 && j==0){
		return 0;
	}
	int &res=f[i][j];
	if (res!=-1) return res;
	res=1000000000;
	if (i>0 && j>0){
		res=min(res,dfs(i-1,j-1)+(s[i]!=t[j]));
	}
	if (i>0){
		res=min(res,dfs(i-1,j)+1);
	}
	if (j>0){
		res=min(res,dfs(i,j-1)+1);
	}
	return res;
}

inline void go(int i,int j)
{
	if (i==0 && j==0){
		return;
	}
	int res=dfs(i,j);
	if (i>0 && j>0 && res==dfs(i-1,j-1)+(s[i]!=t[j])){
		go(i-1,j-1);
		if (s[i]!=t[j]){
			printf("REPLACE %d %c\n",j,t[j]);
		}
		return;
	}
	if (i>0 && res==dfs(i-1,j)+1){
		go(i-1,j);
		printf("DELETE %d\n",j+1);
		return;
	}
	if (j>0 && res==dfs(i,j-1)+1){
		go(i,j-1);
		printf("INSERT %d %c\n",j,t[j]);
		return;
	}
	assert(false);
}

int main()
{
	scanf("%s%s",s+1,t+1);
	int n=strlen(s+1);
	int m=strlen(t+1);
	
	memset(f,-1,sizeof(f));
	printf("%d\n",dfs(n,m));
	go(n,m);
	
	return 0;
}

			  	  	 	 				 	  	  	