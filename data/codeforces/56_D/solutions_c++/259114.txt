#include <algorithm>
#include <cstdio>
#include <cstring>
using namespace std;

char A[1010], B[1010];
int n, m;
int dp[1010][1010];

void compute() {
	n = strlen(A);
	m = strlen(B);
	memset(dp, 63, sizeof(dp));
	dp[n][m] = 0;
	for(int x = 0; x < m; x ++)	dp[n][x] = m-x;
	for(int y = 0; y < n; y ++)	dp[y][m] = n-y;
	for(int y = n-1; y >= 0; y --) {
		for(int x = m-1; x >= 0; x --) {
			int & t = dp[y][x];
			t = min(t, dp[y+1][x]+1);				//ɾ
			t = min(t, dp[y][x+1]+1);				//��
			t = min(t, dp[y+1][x+1]+(A[y]!=B[x]));	//��
		}
	}
}

void output() {
	int idx = 1;
	printf("%d\n", dp[0][0]);
	for(int x=0,y=0; x<m || y<n; ) {
		if(dp[y][x]==dp[y+1][x]+1) {	//�����õ��˳����߽�Ϊinf��assume
			printf("DELETE %d\n", idx);
			y ++;
		} else if(dp[y][x]==dp[y][x+1]+1) {
			printf("INSERT %d %c\n", idx, B[x]);
			x ++;
			idx ++;
		} else {
			if(A[y] != B[x])	printf("REPLACE %d %c\n", idx, B[x]);
			y ++;
			x ++;
			idx ++;
		}
	}
}

int main() {
	scanf("%s%s", A, B);
	compute();
	output();
	return 0;
}
