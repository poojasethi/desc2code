#include <iostream>
#include <algorithm>
#include <cstring>
using namespace std;
char s[1100], t[1100];
int dp[1100][1100];
int
main() {
	cin >> s >> t;
	int l1 = strlen(s), l2 = strlen(t);
	for(int i = 0; i <= l1; i++)
		dp[i][0] = i;
	for(int i = 0; i <= l2; i++)
		dp[0][i] = i;
	for(int i = 1; i <= l1; i++) for(int j = 1; j <= l2; j++) {
		if(s[i-1] == t[j-1])
			dp[i][j] = dp[i-1][j-1];
		else dp[i][j] = dp[i-1][j-1]+1;
		dp[i][j] = min(dp[i][j], min(dp[i-1][j]+1,dp[i][j-1]+1));
	}
	cout << dp[l1][l2] << endl;
	while(l1 || l2) {
		if(dp[l1][l2] == dp[l1-1][l2] + 1) {
			cout << "DELETE " << l1 << endl;
			l1--;
		}
		else if(dp[l1][l2] == dp[l1][l2-1] + 1) {
			cout << "INSERT " << l1+1 << " " << t[l2-1] << endl;
			l2--;
		}
		else if(dp[l1][l2] == dp[l1-1][l2-1] + 1) {
			cout << "REPLACE " << l1 << " " << t[l2-1] << endl;
			l1--; l2--;
		}
		else {
			l1--; l2--;
		}
	}
	return 0;
}
