#include <iostream>
#include <string>
#include <string.h>
using namespace std;

int INF, dp[1001][1001];

string s, t;

int find(int i, int j) {
    if (i < 0 || j < 0) return INF;
    if (dp[i][j] != INF) return dp[i][j];
    return dp[i][j] = min(find(i - 1, j - 1) + (s[i - 1] == t[j - 1] ? 0 : 1), min(find(i - 1, j) + 1, find(i, j - 1) + 1));
}

int main()
{
    memset(dp, 1, sizeof(dp));
    INF = dp[0][0], dp[0][0] = 0;
    cin >> s >> t;
    int n = s.size(), m = t.size(), d = find(n, m), i = n, j = m;

    cout << d << endl;

    while (i || j) {
        i = n, j = m, d = dp[i][j];
        int tp = 0, q = (i && j && s[i - 1] != t[j - 1] ? 1 : 0);
        if (i && j && d >= dp[i - 1][j - 1] + q) {
            d = dp[i - 1][j - 1] + q, n = i - 1, m = j - 1;
            if (q) tp = 3;
        }
        if (i && d >= dp[i - 1][j] + 1) d = dp[i - 1][j] + 1, m = j, n = i - 1, tp = 1;
        if (j && d >= dp[i][j - 1] + 1) d = dp[i][j - 1] + 1, m = j - 1, n = i, tp = 2;

        if (tp == 1) cout << "DELETE " << i << endl;
        if (tp == 2) cout << "INSERT " << i + 1 << " " << t[j - 1] << endl;
        if (tp == 3) cout << "REPLACE " << i << " " << t[j - 1] << endl;
    }
    return 0;
}
