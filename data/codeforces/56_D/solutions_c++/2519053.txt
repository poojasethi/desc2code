#include <iostream>
using namespace std;
#define FOR(i, a, n) for (register int i = (a); i < (int)(n); ++i)
#define FOR(i, a, n) for (register int i = (a); i < (int)(n); ++i)

#define FOR(i, a, n) for (register int i = (a); i < (int)(n); ++i)

#if (_win32 || __win32__)
#define LLD "%lld"
#endif

#define Size(n) ((int)(n).size())

const int maxn = 1024;

int dp[maxn][maxn];
char move[maxn][maxn];

int main() {
	string A, B;
	cin >> A >> B;
	A = "#" + A;
	B = "#" + B;
	FOR(i, 0, Size(A)) FOR(j, 0, Size(B))
		if (i || j) {
			int res = 1<<20;
			char mov = '#';
			if (i > 0 && j > 0 && A[i] == B[j] && res > dp[i-1][j-1]) res = dp[i-1][j-1], mov = 'M';
			if (i > 0 && j > 0 && res > dp[i-1][j-1]+1) res = dp[i-1][j-1]+1, mov = 'R';
			if (i > 0 && res > dp[i-1][j]+1) res = dp[i-1][j]+1, mov = '1';
			if (j > 0 && res > dp[i][j-1]+1) res = dp[i][j-1]+1, mov = '2';
			dp[i][j] = res;
			move[i][j] = mov;
		}
	int n = Size(A)-1;
	int m = Size(B)-1;
	cout << dp[n][m] << endl;
	while (n || m) {
		if (move[n][m] == 'M') n--, m--;
		else if (move[n][m] == 'R') cout << "REPLACE " << n << " " << B[m] << endl, n--, m--;
		else if (move[n][m] == '1') cout << "DELETE " << n << endl, n--;
		else if (move[n][m] == '2') cout << "INSERT " << n+1 << " " << B[m] << endl, m--;
	}
	return 0;
}
