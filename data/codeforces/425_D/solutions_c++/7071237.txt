#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
vector<int> h[200010], v[200010];
int x[200010], y[200010];
inline int find(int x, int y) {
	return binary_search(h[x].begin(), h[x].end(), y) ? 1 : 0;
}
int main() {
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%d%d", &x[i], &y[i]);
		h[x[i]].push_back(y[i]);
		v[y[i]].push_back(x[i]);
	}
	for (int i = 0; i < 100010; i++) {
		sort(h[i].begin(), h[i].end());
		sort(v[i].begin(), v[i].end());
	}
	long long ans = 0;
	for (int i = 0; i < n; i++) {
		vector<int> &hh = h[x[i]], &vv = v[y[i]];
		int j = upper_bound(hh.begin(), hh.end(), y[i]) - hh.begin();
		int k = upper_bound(vv.begin(), vv.end(), x[i]) - vv.begin();
		while (j < hh.size() && k < vv.size()) {
			if (hh[j] - y[i] < vv[k] - x[i]) {
				++j;
			} else if (hh[j] - y[i] > vv[k] - x[i]) {
				++k;
			} else {
				ans += find(vv[k], hh[j]);
				++j; ++k;
			}
		}
	}
	printf("%lld\n", ans);
	return 0;
}

