#include<cstdio>
#include<algorithm>
#include<vector>
#include<iostream>
#include<cmath>

using namespace std;


const int CntBound = 450;
const int MaxXY = 100000 + 88;

vector<int> pts[MaxXY];

inline bool exists(int x, int y) {
	if(x >= MaxXY or x < 0)
		return false;
	return binary_search(pts[x].begin(), pts[x].end(),y);
}

int main () {
	int n,xx,yy;
	scanf("%d", &n);
	for(int i=0;i<n;i++) {
		scanf("%d %d", &xx, &yy);
		pts[xx].push_back(yy);
	}
	for(int i=0;i<MaxXY;i++)
		sort(pts[i].begin(), pts[i].end());
	int ans = 0;
	for(int i=0;i<MaxXY;i++) {
		if(pts[i].size() == 0) continue;
		if(pts[i].size() < CntBound) {
			for(int j=0;j<(int)pts[i].size();j++)
				for(int k=j+1;k<(int)pts[i].size();k++) {
				int d = pts[i][k] - pts[i][j];
					if(exists(i+d,pts[i][j]) && exists(i+d,pts[i][k]))
						ans++;
				}
		}
		else {	
			for(int j=i+1;j<MaxXY;j++) {
				int d = j-i;
				for(int k=0;k<(int)pts[j].size();k++) {
					if(exists(i,pts[j][k]) && exists(i,pts[j][k]-d) && exists(j,pts[j][k]-d))
						ans++;
				}	
			}
		}
	}
	printf("%d", ans);
}

