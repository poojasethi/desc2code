//In the name of God
#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;
const int N = 1e5 + 5;

int n, a[N], b[N], ans;
vector<int> x[N], y[N];

int main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> a[i] >> b[i];
		x[b[i]].push_back(a[i]);
		y[a[i]].push_back(b[i]);
	}
	for (int i = 0; i < N; i++) {
		sort(x[i].begin(), x[i].end());
		sort(y[i].begin(), y[i].end());
	}
	for (int i = 0; i < n; i++) {
		int x0 = a[i], y0 = b[i];
		if (x[y0].size() < y[x0].size()) {
			for (int i = 0; i < x[y0].size() && x[y0][i] < x0; i++) {
				int l = x0 - x[y0][i];
				if (y0 >= l)
					if (binary_search(x[y0 - l].begin(), x[y0 - l].end(), x0) && 
							binary_search(x[y0 - l].begin(), x[y0 - l].end(), x[y0][i]))
						ans++;
			}
		}
		else
			for (int i = 0; i < y[x0].size() && y[x0][i] < y0; i++) {
				int l = y0 - y[x0][i];
				if (x0 >= l)
					if (binary_search(y[x0 - l].begin(), y[x0 - l].end(), y0) && 
							binary_search(y[x0 - l].begin(), y[x0 - l].end(), y[x0][i]))
						ans++;
			}
	}
	cout << ans << '\n';
	return 0;
}
