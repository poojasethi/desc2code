#include <cstdio>
#include<vector>
#include<algorithm>
using namespace std;
vector<int> G[100010];
int n,x,y;
bool check(int x,int y)
{
    if(x>100000) return false;
    return binary_search(G[x].begin(),G[x].end(),y);
}
int main()
{
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
    {
        scanf("%d%d",&x,&y);
        G[x].push_back(y);
    }
    for(int i=0;i<=100000;i++) sort(G[i].begin(),G[i].end());
    long long cnt=0;
    for(int x=0;x<=100000;x++)
    {
        if(G[x].size()*G[x].size()<n){
            for(int i=0;i<G[x].size();i++)
                for(int j=i+1;j<G[x].size();j++)
            {

                int d=G[x][j]-G[x][i];
                if(check(x+d,G[x][i])&&check(x+d,G[x][j])) ++cnt;
            }
        }
        else{
        for(int i=x+1;i<=100000;i++)
            for(int j=0;j<G[i].size();j++)
        {
            int d=i-x;
            if(check(x,G[i][j])&&check(x,G[i][j]+d)&&check(i,G[i][j]+d)) ++cnt;
        }
        }
    }
    printf("%I64d",cnt);
    return 0;
}

		  	 			  			  	 		    	 	  	