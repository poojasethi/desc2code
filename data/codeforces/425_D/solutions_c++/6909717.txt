#include<stdio.h>
#include<algorithm>
#define M 100100
#define N 100000
#include<vector>
using namespace std;

vector <int> vx[M],vy[M],vv[M*2];

struct pnt{
	int x, y;
	pnt(int x=0, int y=0):x(x),y(y){}
}p[M];

bool cmp(pnt a, pnt b){
	if(a.x!=b.x)return a.x<b.x;
	return a.y<b.y;
}

int ans,n;

void run(){
	bool sus;
	int a,b,c,i,m,x,y,z;
	sort(p,p+n,cmp);
	for(i=0;i<n;i++){
		a=p[i].x;b=p[i].y;c=p[i].x-p[i].y+N;
		if(vx[a].size() && vy[b].size() && vv[c].size()){
			x=vx[a].size()-1;y=vy[b].size()-1;z=vv[c].size()-1;
			while(1){
				if(x<0 || y<0 || z<0)break;
				m=0;
				if(m<b-vx[a][x])m=b-vx[a][x];
				if(m<a-vy[b][y])m=a-vy[b][y];
				if(m<a-vv[c][z])m=a-vv[c][z];
				sus=0;
				if(m!=b-vx[a][x])x--,sus=1;
				if(m!=a-vy[b][y])y--,sus=1;
				if(m!=a-vv[c][z])z--,sus=1;
				if(!sus){ans++;x--;y--;z--;}
			}
		}
		vx[a].push_back(b);vy[b].push_back(a);vv[c].push_back(a);
	}
	return;
}

int main(){
	//freopen("d2.in","r",stdin);
	scanf("%d",&n);
	for(int i=0;i<n;i++)scanf("%d %d\n",&p[i].x,&p[i].y);
	ans=0;
	run();
	printf("%d\n",ans);
	return 0;
}
