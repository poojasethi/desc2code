#include<cstdio>
#include<iostream>
#include<cstring>
#include<cstdlib>
#include<vector>
#include<algorithm>
#include<cmath>
using namespace std;
const int maxn=100000;
vector<int> vec[100002];
int n,i,j,k,d,x,y,ans;
bool find(int x,int y)
{
	if (x>maxn) return false;
	return binary_search(vec[x].begin(),vec[x].end(),y);
}
int main()
{
	int sqrtmaxn=int(sqrt(maxn*1.0));
	scanf("%d",&n);
	for (i=1;i<=n;++i)
	{
		scanf("%d%d",&x,&y);
		vec[x].push_back(y);
	}
	for (i=0;i<=maxn;++i) sort(vec[i].begin(),vec[i].end());
	for (i=0;i<=maxn;++i)
	{
		if (vec[i].size()<sqrtmaxn)
		{
			for (j=0;j<vec[i].size();++j)
			for (k=j+1;k<vec[i].size();++k)
			{
				d=vec[i][k]-vec[i][j];
				if (find(i+d,vec[i][k])&&find(i+d,vec[i][j])) ans++;
			}
		}
		else
		{
			for (j=i+1;j<=maxn;++j)
			for (k=0;k<vec[j].size();++k)
			{
				d=j-i;y=vec[j][k];
				if (find(i,y)&&find(i,y+d)&&find(j,y+d)) ans++;
			}
		}
	}
	printf("%d\n",ans);
}