#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <vector>
typedef long long LL;
using namespace std;
const int maxn = 100010;
vector<int> a[maxn];
const int sqrtmaxn = (int)sqrt(maxn+.0) + 1;
bool find(int x,int y){
    if(x>=maxn)return false;
    return binary_search(a[x].begin(),a[x].end(),y);
}
int n,x,y,dq;

int main()
{
	scanf("%d",&n);
	for (int i=0;i<n;++i)
	{
		scanf("%d%d",&x,&y);
		a[x].push_back(y);
	}
	for (int i=0;i<maxn;++i) sort(a[i].begin(),a[i].end());
	LL ans=0;
	for (int x=0;x<maxn;++x)
		if (a[x].size()<sqrtmaxn)
		{
			for (int i=0;i<a[x].size();++i)
			{
				for (int j=i+1;j<a[x].size();++j)
				{
					int dq=a[x][j]-a[x][i];
					if (find(x+dq,a[x][i])&&find(x+dq,a[x][j])) ++ans;
				}
			}
		}
		else
		{
			for (int xx=x+1;xx<maxn;++xx)
			{
				for (int i=0;i<a[xx].size();++i)
				{
					int yy=a[xx][i];dq=xx-x;
					if (find(x,yy)&&find(x,yy+dq)&&find(xx,yy+dq)) ++ans;
				}
			}
		}
	printf("%I64d\n",ans);
	return 0;
}
   			 						  	 	   			    	