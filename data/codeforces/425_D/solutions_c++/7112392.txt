#include <iostream>
#include <cstdlib>
#include <algorithm>
#include <set>
#define MAXN 100005
#define SQRT 320

using namespace std;

int n;
set<int> s1[MAXN],s2[MAXN];
int ans;

void calc(set<int> *s) {
    for (int i = 0; i < MAXN; i++) {
        if (s[i].size() > SQRT) continue;
        for (set<int>::iterator it1 = s[i].begin(), it2; it1 != s[i].end(); it1++) {
            it2 = it1;
            for (it2++; it2 != s[i].end(); it2++) {
                int a = *it1, b = *it2;
                int l = b-a;
                if (i-l >= 0 && s[i-l].find(a) != s[i-l].end() && s[i-l].find(b) != s[i-l].end()) ans++;
                if (i+l < MAXN && s[i+l].find(a) != s[i+l].end() && s[i+l].find(b) != s[i+l].end()) ans++;
            }
        }
        s[i].clear();
    }
}

int main() {
    cin >> n;
    for (int i = 0; i < n; i++) {
        int x,y;
        cin >> x >> y;
        s1[x].insert(y);
    }
    calc(s1);
    for (int i = 0; i < MAXN; i++)
        for (set<int>::iterator it = s1[i].begin(); it != s1[i].end(); it++)
            s2[*it].insert(i);
    calc(s2);
    cout << ans << '\n';
}
