#include<iostream>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<vector>
#include<algorithm>


using namespace std;
typedef long long ll;
#define N 100000
vector<int>vx[N+10];


int hash(int a,int b)
{
    if (a<0||a>N||b<0||b>N) return 0;
    return binary_search(vx[a].begin(),vx[a].end(),b);
}

int main()
{

  int n;
  cin>>n;
  for (int i=1;i<=n;i++)
  {
      int x,y;
      cin>>x>>y;
      vx[x].push_back(y);
  }

  for (int i=0;i<=N;i++) sort(vx[i].begin(),vx[i].end());

  int bd=sqrt(1.0*N);
  int ans=0;


  for (int i=0;i<=N;i++)
  if (vx[i].size())
  {
      if (vx[i].size()<bd)
      {
          for (int j=0;j<vx[i].size();j++)
          for (int k=j+1;k<vx[i].size();k++)
          {
              int d=vx[i][k]-vx[i][j];
              if (hash(i+d,vx[i][j])&&hash(i+d,vx[i][k])) ans++;
          }
      }
      else
      {
          for (int j=i+1;j<=N;j++)
          for (int k=0;k<vx[j].size();k++)
          {
              int y=vx[j][k];
              int d=j-i;
              if (hash(i,y)&&hash(i,y+d)&&hash(j,y+d)) ans++;
          }
      }
  }
  cout<<ans;
  return 0;
}

		 						 		   	 		 		 		 	 	