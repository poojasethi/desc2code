#include <iostream>
#include <cstring>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
using namespace std;

const int maxn = 100000 + 123;

vector<int> ax[maxn];
vector<int> ay[maxn];

int n;

int main()
{
	scanf("%d", &n);
	for (int i = 0; i < n; ++ i)
	{
		int x, y;
		scanf("%d%d", &x, &y);
		ax[x].push_back(y);
		ay[y].push_back(x);
	}

	for (int i = 0; i < maxn; ++ i)
		if (!ax[i].empty())
			sort(ax[i].begin(), ax[i].end());

	for (int i = 0; i < maxn; ++ i)
		if (!ay[i].empty())
			sort(ay[i].begin(), ay[i].end());
	
	int count = 0;
	
	for (int i = 0; i < maxn; ++ i)
		for (vector<int>::iterator ty = ax[i].begin(); ty < ax[i].end(); ++ ty)
		{
			int x = i, y = *ty;
			vector<int>::iterator px = upper_bound(ay[y].begin(), ay[y].end(), x);
			vector<int>::iterator py = ty + 1;
			while (px < ay[y].end() && py < ax[x].end())
			{
				int l1 = *px - x, l2 = *py - y;
				if (l1 == l2)
				{
					if (binary_search(ax[*px].begin(), ax[*px].end(), *py))
						count ++;
				}
				if (l1 > l2) py ++;
				else px ++;
			}
		}
	
	printf("%d\n", count);

   	return 0;
}
