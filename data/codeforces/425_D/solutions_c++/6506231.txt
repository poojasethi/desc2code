#include <iostream>
#include <cstdio>
#include <map>
#include <vector>
#include <algorithm>
using namespace std;
const int NMAX = 100000;
int sol;
map< pair < int ,int > , int > M;
vector< int > L[NMAX+5],C[NMAX+5];
int main(){
	#ifndef ONLINE_JUDGE
		freopen("input","r",stdin);
		freopen("output","w",stdout);
	#endif
	int n;
	cin >> n;
	for(int i=1;i<=n;++i){
		int x,y;
		cin >> x >> y;
		M[make_pair(x,y)] = 1;
		L[x].push_back(y);
		C[y].push_back(x);
	}
	for(int i=0;i<=NMAX;++i){
		sort(L[i].begin(),L[i].end());
		sort(C[i].begin(),C[i].end());
	}
	for(int i=0;i<=NMAX;++i){
		for(vector < int > ::iterator it= L[i].begin(); it != L[i].end();++it){
			int x = i;
			int y = *it;
			vector < int > ::iterator it1 = it;
			vector < int > ::iterator it2 = upper_bound(C[y].begin(),C[y].end(),x);
			while(it1 != L[x].end() && it2 != C[y].end()){
				int diff1 = *it1 - y;
				int diff2 = *it2 - x;
				if(diff1 > diff2)
					++it2;
				else
					if(diff1 < diff2)
						++it1;
					else{
						if(M[make_pair(x+diff1,y+diff1)])
							++sol;
						++it1,++it2;
					}
					
			}
		}
	}
	cout<<sol<<"\n";
	return 0;
}
