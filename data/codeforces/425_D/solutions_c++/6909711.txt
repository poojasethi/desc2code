#include <stdio.h>
#include <map>
#include <math.h>
#include <algorithm>
#include <string>
#include <queue>
#include <vector>
#include <string.h>
using namespace std;
#define M 100100
map<int, bool>mp[M];
vector<int> X[M], Y[M];
int x[M], y[M], gx[M], gy[M], n;
int ans;

void input(){
	scanf("%d", &n);
	for(int i=0; i<n; i++){
		scanf("%d %d", &x[i], &y[i]);
		mp[x[i]][y[i]]=1;
		X[x[i]].push_back(y[i]);
		Y[y[i]].push_back(x[i]);
	}
}

void prepare(){
	for(int i=0; i<M; i++)
		sort(X[i].begin(), X[i].end()), gx[i]=X[i].size(),
		sort(Y[i].begin(), Y[i].end()), gy[i]=Y[i].size();
	///exit(0);
}

int solve(){
	for(int i=0; i<n; i++){
		int a=x[i], b=y[i], u;
		if(gx[a]<gy[b]){
			for(int j=0; X[a][j]<b; j++)if(b-X[a][j]<=a){
				u=a-b+X[a][j];
				if(mp[u].count(b) && mp[u].count(X[a][j]))ans++;
			}
		}else{
			for(int j=0; Y[b][j]<a; j++)if(a-Y[b][j]<=b){
				u=b-a+Y[b][j];
				if(mp[a].count(u) && mp[Y[b][j]].count(u))ans++;
			}
		}
	}
}

int main(){
    ///freopen("d4.in", "r", stdin);
    input();
    prepare();
	solve();
	printf("%d\n", ans);
    return 0;
}
