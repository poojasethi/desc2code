#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<map>
#include<vector>
using namespace std;

#define pr pair<int,int>
#define X first
#define Y second
#define mp make_pair
#define pb push_back

#define N M+10
#define M 100000
//map < pr , int > ha;
vector < int > r[N],c[N];
int n,ans=0;
int main(){
	scanf("%d",&n);
	int x,y;int mx=0,my=0;
	for(int i=1;i<=n;i++){
		scanf("%d%d",&x,&y);
	//	ha[mp(x,y)]=1;
		mx=max(mx,x);
		my=max(my,y);
		r[x].pb(y);
		c[y].pb(x);
	}
	for(int i=0;i<=mx;i++)	sort(r[i].begin(),r[i].end());
	for(int i=0;i<=my;i++)	sort(c[i].begin(),c[i].end());
	vector < int > :: iterator ii,ix,iy;
	for(int i=0;i<=mx;i++){
		for(ii=r[i].begin();ii!=r[i].end();++ii){
			x=i,y=*ii;
			ix=lower_bound(c[y].begin(),c[y].end(),x);
			++ix;
			iy=ii+1;
			for(;ix!=c[y].end() && iy!=r[x].end();){
				if(*ix-x<*iy-y)	++ix;
				else	if(*ix-x>*iy-y)	++iy;
				else{
				//	if(ha[mp(*ix,*iy)])	++ans;
					if(binary_search(r[*ix].begin(),r[*ix].end(),*iy))++ans;
					++ix;++iy;
				}
			}
		}
	}
	cout << ans << endl;
	return 0;
}

			
