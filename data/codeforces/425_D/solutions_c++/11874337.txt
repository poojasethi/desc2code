#include <map>
#include <vector>
#include <cstdio>
#include <algorithm>
using namespace std;

#define n	100005
#define For(i,a,b)	for(int i=a;i<=b;i++)

int		N,Ans;
struct	Nod{int x,y;}P[n];

map<int,int>D[n];
vector<int>X[n],Y[n];

int		main(){
		scanf("%d",&N);
		For(i,1,N)	{
			scanf("%d%d",&P[i].x,&P[i].y);
			X[P[i].x].push_back(P[i].y);
			Y[P[i].y].push_back(P[i].x);	D[P[i].x][P[i].y]=1;
		}

		For(i,0,100000)	sort(X[i].begin(),X[i].end()),
						sort(Y[i].begin(),Y[i].end());
		For(i,1,N)	{
			int x=P[i].x,y=P[i].y,tx=X[x].size(),ty=Y[y].size(),
				sx=upper_bound(X[x].begin(),X[x].end(),y)-X[x].begin(),
				sy=upper_bound(Y[y].begin(),Y[y].end(),x)-Y[y].begin();
			if	(tx-sx<ty-sy){
				for (;sx<tx;sx++){
					int k=X[x][sx]-y;
					if	(D[x+k].count(y)&&D[x+k].count(y+k))	Ans++;
				}
			}	else	{
				for (;sy<ty;sy++){
					int k=Y[y][sy]-x;
					if	(D[x].count(y+k)&&D[x+k].count(y+k))	Ans++;
				}
			}
		}	printf("%d\n",Ans);
}