#include <bits/stdc++.h>

#define NN 100010

using namespace std;

int head[NN], to[2*NN], nxt[2*NN], TD, dp[NN], vst[NN];

void dfs(int u){
	int mn=0, mx=0;
	vst[u]=1;
	for(int edge=head[u]; edge!=-1; edge=nxt[edge]){
		int v=to[edge];
		if(vst[v]) continue;
		dfs(v);
		dp[u]=max(dp[u], dp[v]+1);
		if(mn<dp[v]+1) mn=dp[v]+1;
		if(mn>mx) swap(mx, mn);
	}
	TD=max(TD, mn+mx);
	TD=max(TD, dp[u]);
}

int main() {
	
	int N, M, i, u, v;
	
	scanf("%d %d", &N, &M);
	int edge=0;
	memset(head, -1, sizeof(head));
	
	while(M--){
		scanf("%d %d", &u, &v);
		nxt[edge]=head[u], to[edge]=v, head[u]=edge++;
		nxt[edge]=head[v], to[edge]=u, head[v]=edge++;
	}
	
	dfs(1);
	
	printf("%d\n", TD);
	return 0;
}
         