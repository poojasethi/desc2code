#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
vector<vector<int> > adj(100001);// Graph Data 
int t;
int mx=-1;
vector<bool> vis(100001,false);
int dfs(int x,int m)
{
	vis[x]=true;
	int m1=0,m2=0;
	for(int i=0;i<adj[x].size();i++)
		if(!vis[adj[x][i]])
		{
			int n=dfs(adj[x][i],m+1);
			if(n>m1) m2=m1  , m1=n;
			else if(n>m2) m2=n;
		}
	if(m1==0 && m2==0 )return m;
	if(m1+m2-2*m >mx) mx=m1+m2-2*m;
	vis[x]=false;
	return m1;
}
 
int main()
{
    int m ; 
	cin>>t >> m ; 
	t--;
	while(t--)
	{
		int x,y;
		cin>>x>>y;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}
	dfs(1,0);
	cout<<mx<<endl;
 
} 