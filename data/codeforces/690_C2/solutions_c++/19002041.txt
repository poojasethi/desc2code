#include<bits/stdc++.h>

int n, m, d[100005], ans;
std::vector<int> c[100005];

void dfs(int x, int y) {
	d[x] = d[y] + 1;
	for (int i = 0; i < c[x].size(); i++) if (c[x][i] != y) dfs(c[x][i], x);
	int m1 = 0, m2 = 0;
	for (int i = 0; i < c[x].size(); i++) if (c[x][i] != y) {
		if (d[c[x][i]] - d[x] > m1) {
			m2 = m1;
			m1 = d[c[x][i]] - d[x];
		}
		else if (d[c[x][i]] > m2) {
			m2 = d[c[x][i]] - d[x];
		}
	}
	ans = std::max(ans, m1 + m2);
	d[x] += m1;
}

int main() {
	scanf("%d %d", &n, &m);
	for (int i = 0; i < m; i++) {
		int u, v;
		scanf("%d %d", &u, &v);
		c[u].push_back(v);
		c[v].push_back(u);
	}
	d[0] = -1;
	dfs(1, 0);
	printf("%d\n", ans);
}