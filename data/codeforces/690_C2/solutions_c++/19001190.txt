#include <iostream>
#include <algorithm>
#include <time.h>
#include <stack>
#include <string>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <vector>
#include <queue>
#include <map>
#include <set>

using namespace std;

int n,m,i,j,a,b,mx,gag;
bool mark[100005];
vector <int> g[100005];
void update(int n){
    for(int i=1;i<=n;i++)mark[i]=0;
}
void dfs(int v,int r){
    if(r>mx){
        mx=r;
        gag=v;
    }
    mark[v]=1;
    for(int i=0;i<g[v].size();i++){
        int to=g[v][i];
        if(mark[to])continue;
        dfs(to,r+1);
    }
}
int main()
{
    cin>>n>>m;
    for(i=1;i<=m;i++){
        cin>>a>>b;
        g[a].push_back(b);
        g[b].push_back(a);
    }
    dfs(1,0);
    update(n);mx=0;
    dfs(gag,0);
    cout<<mx<<endl;
    return 0;
}
