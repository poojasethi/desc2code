#include<bits/stdc++.h>
using namespace std;
const int N=100100;
int n,m,last[N]={},next[N+N]={},end[N+N]={},total_edge=1;
int dis[N]={},q[N]={};
void add_edge(int u,int v)
{
	next[++total_edge]=last[u];
	last[u]=total_edge;
	end[total_edge]=v;
}
void bfs(int S)
{
	bool v[N]={};
	int head=0,tail=0;
	q[++tail]=S;
	v[S]=true;
	dis[S]=0;
	while(head!=tail)
	{
		int s=q[++head];
		for(int i=last[s];i;i=next[i])
		{
			int j=end[i];
			if(!v[j])
			{
				v[j]=true;
				q[++tail]=j;
				dis[j]=dis[s]+1;
			}
		}
	}
}
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=1,u,v;i<n;++i)
	{
		scanf("%d%d",&u,&v);
		add_edge(u,v);
		add_edge(v,u);
	}
	bfs(1);
	bfs(max_element(dis+1,dis+n+1)-dis);
	printf("%d\n",*max_element(dis+1,dis+n+1));
}