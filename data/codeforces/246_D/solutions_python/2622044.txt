from itertools import combinations
from collections import defaultdict

(n,m) = [int(l) for l in raw_input().split()]
c = [int(yy) for yy in raw_input().split()]

neighb = defaultdict(set)

colnum = 0
maxval = -1

for j in xrange(0,m):
    (u,v) = [int(l) for l in raw_input().split()]
    if c[v-1] != c[u-1]:
        neighb[c[u-1]].add(c[v-1])
        neighb[c[v-1]].add(c[u-1])

sortedc = sorted(c)

for node in xrange(0,len(sortedc)):
    uyz = len(neighb[sortedc[node]])
    if uyz > maxval:
        maxval = uyz
        colnum = sortedc[node]

print colnum
##from itertools import combinations
##from collections import defaultdict
##
##(n,k) = [int(l) for l in raw_input().split()]
##man = []
##bb = [int(zz) for zz in raw_input().split()]
##for i in xrange(0,n):
##    man.append(bb[i])
##
##sums = defaultdict(int)
##
##counter = 0
##
##for i in xrange(1, len(man)+1):
##    if counter == k:
##        break
##    for j in combinations(man, i):
##        if counter == k:
##            break
##        lj = len(j)
##        sj = sum(j)
##        if (sums[sj] == 0) and lj > 0:
##            sums[sj] = 1
##            print lj, 
##            for l in j:
##                print l,
##            print
##            counter+=1
##            if counter == k:
##                break
