n, m = map( int, raw_input().split() )
color = map( int, raw_input().split() )
colorOriginal = color[:]
x = 1
colors, colorback = {}, {}
for i in range( n ):
    if not colors.get( color[i] ):
        #print x, "->", color[i]
        colors[ color[i] ] = x
        colorback[ x ] = color[i]
        x += 1
    color[i] = colors[ color[i] ]
neibor = [[]]*(x)
for i in range(1,x):
    neibor[i] = set()
for i in range(m):
    a, b = map( int, raw_input().split() )
    a , b = a-1, b-1
    neibor[ color[a] ].add( color[b] )
    neibor[ color[b] ].add( color[a] )
#print neibor
for i in range(1,x):
    if i in neibor[ i ]:
        neibor[ i ].remove( i )
maxn = 0
agg = []
#print x
for i in range(1,x):
    if len(neibor[i]) > maxn:
        agg = [ colorback[i] ]
        maxn = len(neibor[i])
    elif len(neibor[i]) == maxn:
        agg.append( colorback[i] )
print min( agg )
