n, m = map(int, raw_input().strip().split(' '))

cis = map(int, raw_input().strip().split(' '))
colors = sorted(list(set(cis)))

edges = [set() for _ in xrange(n)]

for _ in xrange(m):
    ai, bi = map(int, raw_input().strip().split(' '))
    ai -= 1; bi -= 1
    edges[ai].add(bi)
    edges[bi].add(ai)

for i in xrange(n):
    edges[i] = map(lambda x: cis[x], edges[i])

color_sets = {x: set() for x in colors}
for i, color in enumerate(cis):
    color_sets[color].add(i)

neighbors = {x: set() for x in colors}
for color in colors:
    for member in color_sets[color]:
        for ncol in edges[member]:
            if ncol != color:
                neighbors[color].add(ncol)

max_color = colors[0]
for color in colors[1:]:
    if len(neighbors[color]) > len(neighbors[max_color]):
        max_color = color

print max_color