#include <cstdio>
#include <algorithm>
#include <cmath>
using namespace std;

struct node {
	double x,y;
	int z;
}a[40];

int n,cnt;
double sum;

double hull(int i, int j, int k) {
	return (a[j].y-a[i].y)*(a[k].x-a[i].x)-(a[k].y-a[i].y)*(a[j].x-a[i].x);
}

double dis(int i, int j) {
	return sqrt((a[i].x-a[j].x)*(a[i].x-a[j].x)+(a[i].y-a[j].y)*(a[i].y-a[j].y));
}

bool same(double x, double y) {
	double z=x-y;
	return (-1e-8<z)&&(z<1e-8);
}

double fun() {
	for (int i=2; i<n+2; i++) {
		if ((same(hull(0,1,i),0))&&(dis(0,i)<dis(0,1))&&(dis(1,i)<dis(0,1))) {
			cnt++;
			a[n+2+cnt]=a[i];
			a[n+2+cnt].z=i;
		}
		if ((hull(0,1,i)*hull(0,1,i+1)<=-1e-8)&&(hull(i,i+1,0)*hull(i,i+1,1)<=-1e-8)) {
			cnt++;
			double m1,m2,c1,c2;
			if (same(a[0].x,a[1].x)) {
				m1=(a[i].y-a[i+1].y)/(a[i].x-a[i+1].x);
				c1=a[i].y-m1*a[i].x;
				a[n+2+cnt].x=a[0].x;
				a[n+2+cnt].y=m1*a[n+2+cnt].x+c1;
			}
			else if (same(a[i].x,a[i+1].x)) {
				m1=(a[0].y-a[1].y)/(a[0].x-a[1].x);
				c1=a[0].y-m1*a[0].x;
				a[n+2+cnt].x=a[i].x;
				a[n+2+cnt].y=m1*a[n+2+cnt].x+c1;
			}
			else {
				m1=(a[0].y-a[1].y)/(a[0].x-a[1].x);
				c1=a[0].y-m1*a[0].x;
				m2=(a[i].y-a[i+1].y)/(a[i].x-a[i+1].x);
				c2=a[i].y-m2*a[i].x;
				a[n+2+cnt].x=(c1-c2)/(m2-m1);
				a[n+2+cnt].y=m1*a[n+2+cnt].x+c1;
			}
			a[n+2+cnt].z=i;
		}
	}
	if (cnt==2) {
		cnt=0;
		double temp=0;
		for (int i=2; i<n+2; i++) {
			if (cnt==0) {
				if (a[n+2+1].z==i) {
					cnt++;
					temp+=dis(n+2+1,i+1);
				}
			}
			else if (cnt==1) {
				if (a[n+2+2].z==i) {
					cnt++;
					temp+=dis(i,n+2+2);
				}
				else {
					temp+=dis(i,i+1);
				}
			}
		}
		double D=dis(0,1)-dis(n+2+1,n+2+2);
		return min(min(D+temp,D+sum-temp),D+2*dis(n+2+1,n+2+2));
	}
	else {
		return dis(0,1);
	}
}

int main() {
	for (int i=0; i<2; i++) scanf("%lf%lf",&a[i].x,&a[i].y);
	scanf("%d",&n);
	for (int i=2; i<n+2; i++) scanf("%lf%lf",&a[i].x,&a[i].y);
	a[n+2]=a[2];
	sum=0;
	for (int i=2; i<n+2; i++) sum+=dis(i,i+1);
	cnt=0;
	printf("%.7f\n",fun());
	return 0;
}