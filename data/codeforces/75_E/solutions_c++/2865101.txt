#include<cstdio>
#include<cmath>
#define online(x) (fabs((x-S)^(T-S))<1e-8)
#define Link(x,y) d[x][y]=d[y][x]=(a[x]-a[y]).dist()
#define rep(i,n) for (int i=0;i<n;i++)
#define Min(x,y) x=x<y?x:y
struct note{
	double x,y; void read(){scanf("%lf%lf",&x,&y);}	
	note (double X=0,double Y=0):x(X),y(Y){}
	note operator +(note A){return note(x+A.x,y+A.y);}
	note operator -(note A){return note(x-A.x,y-A.y);}
	note operator *(double A){return note(x*A,y*A);}
	note operator /(double A){return note(x/A,y/A);}
	double operator ^(note A){return x*A.y-y*A.x;}
	double dist(){return sqrt(x*x+y*y);}
} a[999],S,T,O;
int n,m; double d[999][999];
bool cross(note A,note B,note &O)
{
	double s1=(T-S)^(A-S),s2=(T-S)^(B-S);
	if (s1*s2>0 || ((S-A)^(B-A))*((T-A)^(B-A))>0) return 0;
	O=(B*s1-A*s2)/(s1-s2); return 1;
}
int main()
{
	S.read(),T.read(),scanf("%d",&n),m=n; a[++m]=S,a[++m]=T;
	rep(i,n+9) rep(j,n+9) d[i][j]=1e20;
	rep(i,n) a[i].read(); a[n]=a[0],Link(0,n);
	rep(i,n) if (online(a[i])) a[++m]=a[i],Link(i,m);
		else if (!online(a[i+1]) && cross(a[i],a[i+1],O)) a[++m]=O,Link(i,m),Link(i+1,m);
	if (m<n+4) return printf("%.9lf\n",(S-T).dist()),0;
	if ((S-a[m]).dist()<(S-a[m-1]).dist()) Link(n+1,m),Link(n+2,m-1);
	else Link(n+2,m),Link(n+1,m-1);
	Link(m,m-1)*2; rep(i,n) Link(i,i+1);
	rep(k,m+1) rep(i,m+1) rep(j,m+1) Min(d[i][j],d[i][k]+d[k][j]);
	printf("%.9lf",d[n+1][n+2]); return 0;
} 
