#include <iostream>
#include <cmath>
#include <cstdio>
using namespace std;
#define REP(i,a,b) for(i=a;i<b;i++)

struct point{double x,y;};

double cross(point A,point B,point C){return (B.x-A.x)*(C.y-A.y)-(B.y-A.y)*(C.x-A.x);}
double dot(point A,point B,point C){return (B.x-A.x)*(C.x-A.x)+(B.y-A.y)*(C.y-A.y);}
double dist(point A,point B){return sqrt((B.x-A.x)*(B.x-A.x)+(B.y-A.y)*(B.y-A.y));}

double eps=1e-8;

point A,B,P[50];
double Len[50];
int n;

double Length(double id){
	int i=floor(id);
	return Len[i]+dist(P[i],P[(i+1)%n])*(id-double(i));
}

int main(){
	int i;
	cin>>A.x>>A.y>>B.x>>B.y;
	cin>>n;
	REP(i,0,n) cin>>P[i].x>>P[i].y;
	REP(i,0,n) Len[i+1]=Len[i]+dist(P[i],P[(i+1)%n]);
	
	double low=1,high=0,lowid=0,highid=0;
	REP(i,0,n)if(abs(cross(A,B,P[i]))<eps&&dot(A,B,P[i])>0&&dot(B,A,P[i])>0){
		double tmp=dist(A,P[i])/dist(A,B);
		if (tmp>high) {high=tmp;highid=i;}
		if (tmp<low) {low=tmp;lowid=i;}
	}
	REP(i,0,n){
		point C=P[i],D=P[(i+1)%n];
		if(cross(A,B,C)*cross(A,B,D)<0&&cross(C,D,A)*cross(C,D,B)<0){
			double tmp=cross(C,D,A)/(cross(C,D,A)-cross(C,D,B));
			double id=i+cross(A,B,C)/(cross(A,B,C)-cross(A,B,D));
			if (tmp>high) {high=tmp;highid=id;}
			if (tmp<low) {low=tmp;lowid=id;}
		}
	}
	//cout<<low<<' '<<high<<endl;
	if (low>high) printf("%.9lf",dist(A,B));
	else {
		double p1=Length(lowid),p2=Length(highid);
		if (p1>p2) swap(p1,p2);
		//cout<<lowid<<' '<<highid<<' '<<p1<<' '<<p2<<endl;
		printf("%.9lf",min(dist(A,B)*(1.0+high-low),dist(A,B)*(1.0-high+low)+min(p2-p1,Len[n]-p2+p1)));
	}
}