#include<cstdio>
#include<algorithm>
#include<cstring>
#include<string>
#include<cstdlib>
#include<functional>
#include<iostream>
#include<cmath>
#define fo(i,a,b) for(i=a;i<=b;i++)
#define fd(i,a,b) for(i=a;i>=b;i--)
#define MP(a,b) make_pair(a,b)
#define clr(x,y) memset(x,y,sizeof x)
#define fi first
#define se second
#define LL long long
#define sqr(z) ((z)*(z))
using namespace std;
typedef pair<double,double> PDD;
const int oo=1047483647,maxn=310;
const double eps=1e-9;
int n,i,j,k,m,q,b[40],tot;
double best;
PDD a[40],S,E;
PDD r[40];
struct node
{
	int w;
	PDD r;
}br[40];
double cha(PDD a,PDD b,PDD c)
{
	double x1=b.fi-a.fi,x2=c.fi-a.fi;
	double y1=b.se-a.se,y2=c.se-a.se;
	return x1*y2-x2*y1;
}
bool ok(PDD a,PDD b,PDD c,PDD d)
{
	return cha(a,b,c)*cha(a,b,d)<eps;
}
bool getcross(PDD a,PDD b,PDD c,PDD d)
{
	return (ok(a,b,c,d) && ok(c,d,a,b));
}
void solve()
{
	fo(i,0,n-1)
	{
		if (getcross(S,E,a[i],a[(i+1)%n]))
		{
			br[++tot].w=i;
			double k=(double)cha(S,a[i],a[(i+1)%n])/cha(E,a[i],a[(i+1)%n]);
			k=fabs(k);
			k=k/(1+k);
			br[tot].r=MP(S.fi+(E.fi-S.fi)*k,S.se+(E.se-S.se)*k);
		}
	}
}
double dis(PDD a,PDD b)
{
	return sqrt(sqr(a.fi-b.fi)+sqr(a.se-b.se));
}
int ne(int x)
{
	return (x+1)%n;
}
int pre(int x)
{
	return (x-1+n)%n;
}
bool cmp(const node&a,const node&b)
{
	return (a.r.fi<b.r.fi) || (a.r.fi==b.r.fi && a.r.se<b.r.se);
}
int main()
{
//	freopen("1.in","r",stdin);
	scanf("%lf%lf%lf%lf",&S.fi,&S.se,&E.fi,&E.se);
	scanf("%d",&n);
	fo(i,0,n-1)
	{
		scanf("%lf%lf",&a[i].fi,&a[i].se);
	}
	solve();
	sort(br+1,br+tot+1,cmp); //�ڶ˵��غ����е�
	int tt=tot;tot=1;
	fo(i,2,tt)
	{
		if (fabs(br[i].r.fi-br[i-1].r.fi)>eps || fabs(br[i].r.se!=br[i-1].r.se)>eps) tot++;
		br[tot]=br[i];
	}
	if (tot!=2) printf("%.10f",dis(S,E));
	else
	{
		b[1]=br[1].w;r[1]=br[1].r;
		b[2]=br[2].w;r[2]=br[2].r;
		if (dis(S,r[1])>dis(S,r[2]))
		{
			swap(r[1],r[2]);
			swap(b[1],b[2]); //!!
		}
		best=dis(S,r[1])+dis(r[1],r[2])*2+dis(r[2],E);
		double tmp=dis(a[ne(b[1])],r[1])+dis(a[b[2]],r[2])+dis(S,r[1])+dis(r[2],E);
		for(i=ne(b[1]);i!=b[2];i=ne(i))//!! ������д��������λ��
		tmp+=dis(a[i],a[ne(i)]); 
		best=min(best,tmp);
		tmp=dis(a[b[1]],r[1])+dis(r[2],a[ne(b[2])])+dis(S,r[1])+dis(r[2],E);
		for(i=b[1];i!=ne(b[2]);i=pre(i))
		tmp+=dis(a[i],a[pre(i)]);
		best=min(best,tmp);
		printf("%.9f",best);
	}
	return 0;
}
