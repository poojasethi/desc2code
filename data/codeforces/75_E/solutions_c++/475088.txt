#include<cstdio>
#include<cmath>
#include<algorithm>
using namespace std;

#define x first
#define y second

const double eps=1e-8;
pair<double,double> P[100];
pair<double,double> S,T;
int n;

double dist(pair<double,double> A,pair<double,double> B) {return sqrt((A.x-B.x)*(A.x-B.x)+(A.y-B.y)*(A.y-B.y));}

double dist(double x1,double y1,double x2,double y2) {return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));}

double det(pair<double,double> A,pair<double,double> B,pair<double,double> C) 
{return (B.x-A.x)*(C.y-A.y)-(B.y-A.y)*(C.x-A.x);}

double dot(pair<double,double> A,pair<double,double> B,pair<double,double> C) 
{return (B.x-A.x)*(C.x-A.x)+(B.y-A.y)*(C.y-A.y);}

void cross(pair<double,double> A,pair<double,double> B,pair<double,double> C,pair<double,double> D,double &x,double &y)
{
    double s1=det(A,C,B);
    double s2=det(A,B,D);
    if (fabs(s1+s2)<=eps) {x=y=1e20;return;}
    x=(C.x*s2+D.x*s1)/(s1+s2);
    y=(C.y*s2+D.y*s1)/(s1+s2);
}

int main()
{
    //freopen("input.txt","r",stdin);

    scanf("%lf%lf%lf%lf",&S.x,&S.y,&T.x,&T.y);
    scanf("%d",&n);
    for (int i=0;i<n;i++) scanf("%lf%lf",&P[i].x,&P[i].y);
    for (int i=0;i<n;i++) P[i+n]=P[i+n+n]=P[i];
    
    bool ok=1;
    for (int i=0;i<n;i++)
    for (int j=i+1;j<n;j++)
    {
        pair<double,double> w;
        cross(S,T,P[i],P[j],w.x,w.y);
        if (w.x>1e15) continue;
        if (dot(S,T,w)>0 && dot(T,S,w)>0 && dot(P[i],P[j],w)>0 && dot(P[j],P[i],w)>0 &&
            dist(S,w)>eps && dist(T,w)>eps && dist(P[i],w)>eps && dist(P[j],w)>eps)
            ok=0;
    }
    if (ok)
    {
        printf("%0.9lf\n",dist(S,T));
        return 0;
    }

    int L=100000,R=-1;
    for (int i=n;i<n*2;i++)
    if (det(S,T,P[i])<-eps)
    {
        L=R=i;
        for (;det(S,T,P[L-1])<=eps;L--);
        for (;det(S,T,P[R+1])<=eps;R++);
        break;
    }

    double ux,uy,vx,vy;
    cross(S,T,P[L-1],P[L],ux,uy);
    cross(S,T,P[R],P[R+1],vx,vy);
    double s1=dist(ux,uy,P[L].x,P[L].y)+dist(P[R].x,P[R].y,vx,vy),s2=0;
    for (int i=L;i<R;i++) s1+=dist(P[i],P[i+1]);
    for (int i=0;i<n;i++) s2+=dist(P[i],P[i+1]);
    s2-=s1;

    double r1=dist(S,T)+dist(ux,uy,vx,vy);
    double r2=min(dist(S.x,S.y,ux,uy),dist(S.x,S.y,vx,vy))+
                min(dist(T.x,T.y,ux,uy),dist(T.x,T.y,vx,vy))+
                min(s1,s2);
    printf("%0.9lf\n",min(r1,r2));
}
