#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<cmath>
#define N 111
#define zero 0.000000001
using namespace std;
struct line{
    double x1,y1,x2,y2,a,b,c;
    void init(){
        a=y1-y2;
        b=x2-x1;
        c=-(a*x1+b*y1);
        if (c!=-(a*x2+b*y2)) printf("ERROR!\n");
        }
    }dl[111],l;
struct pnt{double x,y;}cir[N],f[4],s,t;
int a1,b1,a2,b2;
int n,i,j,pd=-1,g[2];
inline int operator *(pnt a,pnt b){
    return (int)(a.x*b.y-a.y*b.x);
    }
inline int xj(const line &a,const line &b){
    if (a.a==b.a) return 1;
    pnt x=(pnt){b.x1-a.x1,b.y1-a.y1},y=(pnt){b.x2-a.x1,b.y2-a.y1},z=(pnt){a.x2-a.x1,a.y2-a.y1};
    return (x*z)*(y*z);
    }
inline double dist(pnt a,pnt b){
    return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));
    }
inline pnt cross(line a,line b){
    double t=a.a*b.b-a.b*b.a;
    if ((xj(a,b)>0)||(!t)) return (pnt){10000,10000};
    double x,y;
    y=(a.c*b.a-b.c*a.a)/t;
    if (!a.a) x=-(b.b*y+b.c)/b.a;else
        x=-(a.b*y+a.c)/a.a;
    return (pnt){x,y};
    }
void myinit(line a){
    a.init();
    scanf("%d",&n);
    int t1,t2;
    pnt tp;
    for (i=1;i<=n;i++)
        scanf("%lf%lf",&cir[i].x,&cir[i].y);
    for (i=1;i<=n;i++){
        dl[i]=(line){cir[i%n+1].x,cir[i%n+1].y,cir[i].x,cir[i].y};
        dl[i].init();
        t1=xj(a,dl[i]);
        t2=xj(dl[i],a);
        if (t1<=0&&t2<=0){
            if (t1==0&&t2==0) continue;
            tp=cross(a,dl[i]);
            if (abs(tp.x-dl[i].x1)<zero&&(abs(tp.y-dl[i].y1)<zero)) continue;
            g[++pd]=i;
            f[pd]=tp;
            }
        }
    
    if (pd<1){
        printf("%.10lf\n",dist(s,t));
        exit(0);
        }
    for (i=n;i>g[1];i--) cir[i+1]=cir[i];
    cir[g[1]+1]=f[1];
    for (i=n+1;i>g[0];i--) cir[i+1]=cir[i];
    cir[g[0]+1]=f[0];
    g[0]++;
    g[1]+=2;
    if (dist(f[0],s)>dist(f[1],s)) swap(f[0],f[1]),swap(g[0],g[1]);
    
    }
double walk(int a,int b){
    double ans=0;
    int i;
    for (i=a;i!=b;i=i%(n+2)+1)
        ans=ans+dist(cir[i],cir[i%(n+2)+1]);
    return ans;
    }
double work(){
    double temp=dist(s,f[0])+dist(f[1],t),dist1,dist2,dist3;
    dist1=dist(f[0],f[1])*2;
    dist2=walk(g[0],g[1]);
    dist3=walk(g[1],g[0]);
    return min(min(dist1,dist2),dist3)+temp;
    }
int main(){
    scanf("%d%d%d%d",&a1,&b1,&a2,&b2);
    s=(pnt){a1,b1};
    t=(pnt){a2,b2};
    l=(line){a1,b1,a2,b2};
    l.init();
    myinit(l);
    printf("%.10lf\n",work());
    return 0;
    }
