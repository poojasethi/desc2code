#include <bits/stdc++.h>

#define	st first
#define	nd second
#define	mp make_pair
#define	pb push_back
#define	lli long long int
#define	all( gg )	gg.begin(),gg.end()
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	FP( ii,aa,bb ) for( lli ii=aa;ii<=bb;ii++ )
#define	FM( ii,aa,bb ) for( lli ii=aa;ii>=bb;ii-- )
#define	debug(ccc)	cout << #ccc << " = " << ccc << endl;

#define	mod	1000000007LL

using namespace std;

class	data{
	public:
		int	x,y,c,t,id;
}arr[500000];

int	n,m;
lli	res,a,b;

int	A[2000000];

bool	cmp( data a,data b ){
	if( a.x!=b.x )	return	a.x<b.x;
	if( a.t!=b.t )	return	a.t<b.t;
	return	a.y<b.y;
}

pair<int,int>	F[2000000];

void	update( int y,int val,int id ){
	while( y<1500000 ){
		F[y] = max( F[y],mp( val,id ) );
		y += y&-y;
	}
}
pair<int,int>	query( int y ){
	pair<int,int>	res = mp(0,0);
	while( y ){
		res = max( res,F[y] );
		y -= y&-y;
	}
	return	res;
}

int	OK;

int main(){
	ios_base::sync_with_stdio( false );
	cin >> n >> m;
	FP( i,1,n ){
		cin >> arr[i].x >> arr[i].y;
		arr[i].t = 0;
		arr[i].c = 1;
		arr[i].id = i;
	}
	FP( i,n+1,n+m ){
		cin >> arr[i].x >> arr[i].y >> arr[i].c;
		arr[i].t = 1;
		arr[i].id = i-n;
	}

solve:

	sort( arr+1,arr+n+m+1,cmp );

	int	maxi=0,id=0;

	FP( i,1,n+m ){
		if( arr[i].t==0 ){
			maxi = max( maxi,arr[i].y );
			if( maxi==arr[i].y )
				id = arr[i].id;
		}
		else{
			if( res<(lli)(min( arr[i].y,maxi )-arr[i].x)*arr[i].c ){
				res = (lli)(min( arr[i].y,maxi )-arr[i].x)*arr[i].c;
				a = id;
				b = arr[i].id;
			}
		}
	}

	map<int,int>	yer;
	int	I=0;

	FP( i,1,n+m )
		yer[ arr[i].y ] = 1;

	foreach( yer,it )
		it->nd = ++I;

	memset( F,0,sizeof F );

	FM( i,n+m,1 ){
		if( arr[i].t==0 )
			update( yer[arr[i].y],arr[i].y-arr[i].x,arr[i].id );
		else{
			pair<int,int>	p = query( yer[arr[i].y] );
			if( res<(lli)p.st*arr[i].c ){
				res=(lli)p.st*arr[i].c;
				a = p.nd;
				b = arr[i].id;
			}
		}
	}

	if( !OK ){
		OK = 1;
		FP( i,1,n+m ){
			swap( arr[i].x,arr[i].y );
			arr[i].x = mod-arr[i].x;
			arr[i].y = mod-arr[i].y;
		}
		goto	solve;
	}

	cout << res << endl;
	if( res ){
		cout << a << " " << b << endl;
	}

}
