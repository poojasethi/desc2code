#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define n	200005
#define I64	long long
#define For(i,a,b)	for(int i=a;i<=b;i++)

int		N,M,Q;
struct	Nod{int l,r,ID;}A[n];
struct	Pai{int val,ID;}T[n*4];

bool	Cmp(Nod a,Nod b){
		return	a.l<b.l||a.l==b.l&&a.r>b.r;
}
bool	Cmp1(Nod a,Nod b)	{return	a.l<b.l;}
bool	Cmp2(Nod a,Nod b)	{return	a.r<b.r;}

Pai		Max(Pai a,Pai b){
		return	a.val<b.val?b:a; 
}
Pai		Ask(int l,int r){
		Pai	ret=(Pai){-1,-1};
		for	(l+=M-1,r+=M+1;l^r^1;l>>=1,r>>=1){
			if	(l&1^1)	ret=Max(ret,T[l^1]);
			if	(r&1)	ret=Max(ret,T[r^1]);
		}	return	ret;
}

int		main(){
		scanf("%d%d",&N,&Q);
		For(i,1,N)	scanf("%d%d",&A[i].l,&A[i].r),A[i].ID=i;
		sort(A+1,A+N+1,Cmp);

		int	_N=N;	N=0;
		For(i,1,_N)	if	(i==1||A[i].r>A[N].r)	A[++N]=A[i];
		for	(M=1;M<=N+1;M<<=1);
		For(i,1,N)	T[M+i]=(Pai){A[i].r-A[i].l,A[i].ID};
		for	(int i=M;i;i--)	T[i]=Max(T[i<<1],T[i<<1|1]);

		int X=0,Y=0;	I64	Ans=0;
		for	(int l,r,c,pp=1;pp<=Q;pp++){
			scanf("%d%d%d",&l,&r,&c);
			int x=lower_bound(A+1,A+N+1,(Nod){l,0,0},Cmp1)-A,
				y=upper_bound(A+1,A+N+1,(Nod){0,r,0},Cmp2)-A-1;
			Pai	ret=(Pai){-1,-1};

			if	(x<=y)	ret=Max(ret,Ask(x,y));
			if	(x&&A[x-1].r>l)	ret=Max(ret,(Pai){min(r,A[x-1].r)-l,A[x-1].ID});
			if	(y<N&&A[y+1].l<r)	ret=Max(ret,(Pai){r-max(l,A[y+1].l),A[y+1].ID});
			if	(1ll*ret.val*c>Ans)	Ans=1ll*ret.val*c,X=ret.ID,Y=pp;
		}

		if	(Ans==0)	return	puts("0"),0;
		printf("%I64d\n%d %d\n",Ans,X,Y);
}