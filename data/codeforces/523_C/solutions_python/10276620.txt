from collections import defaultdict

__author__ = 'Rugnar'
r = lambda: raw_input()
ri = lambda: int(r())
rl = lambda: [x for x in r().split()]
rli = lambda: [int(x) for x in r().split()]


class S(object):
    def __init__(self, s):
        self.s = list(s)
        self.a = -1
        self.b = len(s)
        self.indices = defaultdict(lambda: [])
        for i, c in enumerate(self.s):
            self.indices[c].append(i)

    def cut_name(self, name):
        for l in name:
            self.cut_letter_begin(l)
        for l in reversed(name):
            self.cut_letter_end(l)

        return self.b - self.a

    def cut_letter_begin(self, l):
        indices_l = self.indices[l]
        while True:
            index = indices_l.pop(0)
            if index > self.a:
                self.a = index
                return index

    def cut_letter_end(self, l):
        indices_l = self.indices[l]
        while True:
            index = indices_l.pop(-1)
            if index < self.b:
                self.b = index
                return index


def main():
    name = r()
    s = r()

    #print name
    #print s
    #print ''.join(str(x) for x in range(len(s)))

    s = S(s)

    try:
        print s.cut_name(name)
    except:
        print 0


if __name__ == '__main__':
    main()