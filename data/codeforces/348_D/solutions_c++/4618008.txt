#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
const int mod = (int) 1e9 + 7;
using namespace std;

char p[3010][3010];
int f[3010][3010];
int n, m;

long long calc(int stx, int sty, int etx, int ety)
{
	memset(f, 0, sizeof(f));
	f[stx - 1][sty] = 1;
	for (int i = stx; i <= etx; ++i)
		for (int j = sty; j <= ety; ++j)  {
			f[i][j] = f[i - 1][j] + f[i][j - 1];
			if (f[i][j] >= mod)  f[i][j] -= mod;
			if (p[i][j] == '#')  f[i][j] = 0;
		}

	return f[etx][ety];
}
int main()
{
	//freopen("D.in", "r", stdin);
	//freopen("D.out", "w", stdout);

	scanf("%d %d\n", &n, &m);
	for (int i = 1; i <= n; ++i)
		scanf("%s", p[i] + 1);

	printf("%I64d", (calc(1, 2, n - 1, m) * calc(2, 1, n, m - 1) % mod - calc(1, 2, n, m - 1) * calc(2, 1, n - 1, m) % mod + mod) % mod);
}
