#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long ll;
const int mod = 1e9+7;
int n, m;
char s[3003][3003];
ll dp[3003][3003];

ll gao(int x, int y, int n, int m) {
    int i, j;
    memset(dp, 0, sizeof(dp));
    if(s[x][y] != '#')dp[x][y] = 1;
    for(i = x; i <= n; i++)
        for(j = y; j <= m; j++) {
            if(x == i && y == j) continue;
            if(s[i][j] == '#') dp[i][j] = 0;
            else {
                dp[i][j] = (dp[i-1][j] + dp[i][j-1])%mod;
            }
        }
    return dp[n][m];
}
int main() {
    int i, j;
    scanf("%d%d", &n, &m);
    for(i = 1; i <= n; i++) scanf("%s", s[i]+1);
    ll ans = gao(1, 2, n-1, m)*gao(2, 1, n, m-1) - gao(1, 2, n, m-1)*gao(2, 1, n-1, m);
    printf("%I64d\n", (ans%mod + mod)%mod);
    return 0;
}
