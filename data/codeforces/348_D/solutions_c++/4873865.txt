#include <cstdio>
#include <algorithm>
using namespace std;

typedef long long int64;
const int MOD = 1e9 +7;
char s[3004][3004];
int dp[4][3004][3004];
int nr, nc;

inline int OPT(int sr, int sc, int er, int ec) {
  static int k = -1; k++;
  dp[k][sr][sc] = s[sr][sc] == '#'? 0: 1;
  for(int i = 1; i <= nr; i++) {
    for(int j = 1; j <= nc; j++) {
      if((i != sr or j != sc) and s[i][j] != '#') {
	dp[k][i][j] = (dp[k][i-1][j] + dp[k][i][j-1]) % MOD;
      }
    } 
  }
  // printf("finish round %d\n", k);
  return dp[k][er][ec];
}

int main() {
  scanf("%d %d", &nr, &nc);
  for(int i = 1; i <= nr; i++) {
    scanf("%s", &s[i][1]);
  }
  int64 a = OPT(2, 1, nr, nc-1);
  int64 b = OPT(1, 2, nr-1, nc);
  int64 c = OPT(2, 1, nr-1, nc);
  int64 d = OPT(1, 2, nr, nc-1);
  // printf("???\n");
  printf("%I64d\n", ((a*b%MOD - c*d%MOD) % MOD + MOD) % MOD);
}
