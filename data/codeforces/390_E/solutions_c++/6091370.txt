/*************************************************************************
    > File Name: E.cpp
    > Author: mengshangqi
    > Mail: mengshangqi@gmail.com
    > Created Time: 2014年03月20日 星期四 20时27分44秒
 ************************************************************************/

#include<iostream>
#include<cstdio>
#include<set>
#include<map>
#include<algorithm>
#include<vector>
#include<cstring>
#include<string>
#include<bitset>
#include<sstream>
#include<queue>
#include<stack>
#include<cmath>
using namespace std;
typedef long long ll;
const int N=4100005;
class BIT
{
  public:
	int lim;
	ll bit[N],bit2[N];
  public:
	void setlim(int n)
	{
		lim=n;
	}
	int lowbit(int x)
	{
		return x&(-x);
	}
	void up(ll *b,int x,ll val)
	{
		while(x<=lim)
		{
			b[x]+=val;
			x+=lowbit(x);
		}
	}
	void update(int l,int r,ll val)
	{
		up(bit,l,val);
		up(bit2,l,val*l);

		up(bit,r+1,-val);
		up(bit2,r+1,-val*(r+1));
	}
	ll get(ll *b,int x)
	{
		ll res=0;
		while(x>0)
		{
			res+=b[x];
			x-=lowbit(x);
		}
		return res;
	}
	ll get_sum(int l,int r)
	{
		ll res=get(bit,r)*(r+1)-get(bit2,r);
		res-=get(bit,l-1)*l-get(bit2,l-1);
		return res;
	}
};
int main()
{
	//freopen("/home/mengshangqi/input.txt","r",stdin);
	int n,m,w;
	int op,x1,y1,x2,y2;
	ll v;
	BIT r,c;

	while(cin>>n>>m>>w)
	{
		r.setlim(n);
		c.setlim(m);
		ll sum=0;
		while(w--)
		{
			cin>>op>>x1>>y1>>x2>>y2;
			if(op==0)
			{
				cin>>v;
				sum+=(x2-x1+1)*(y2-y1+1)*v;
				r.update(x1,x2,(y2-y1+1)*v);
				c.update(y1,y2,(x2-x1+1)*v);
			}else {
				ll ans=r.get_sum(x1,x2)+c.get_sum(y1,y2)-sum;
				cout<<ans<<endl;
			}
		}
	}
	return 0;
}
