#include <iostream>

using namespace std;

#define MAXN 4000000
long long fen[MAXN + 10][5];
void add(int t, int x, long long v)
{
	for (; x <= MAXN; x += x & -x)
		fen[x][t] += v;
}
long long get(int t, int x)
{
	long long ans = 0;
	for (; x > 0; x -= x & -x)
		ans += fen[x][t];
	return ans;
}
void addInterval(int t, int s, int e, long long val)
{
	add(2 * t + 1, s, -(s - 1) * val);
	add(2 * t + 1, e, e * val);
	add(2 * t, s, val);
	add(2 * t, e, -val);

}
long long getInterval(int t, int s, int e)
{
	s--;
	long long st = s * get(2 * t, s) + get(2 * t + 1, s);
	long long en = e * get(2 * t, e) + get(2 * t + 1, e);
	return en - st;
}
int main()
{
	int n, m, w;
	cin >> n >> m >> w;
	for (int i = 0; i < w; i++)
	{
		int t;
		cin >> t;
		if (t == 0)
		{
			int x1, x2, y1, y2, v;
			cin >> x1 >> y1 >> x2 >> y2 >> v;
			addInterval(0, x1, x2, (y2 - y1 + 1) * v);
			addInterval(1, y1, y2, (x2 - x1 + 1) * v);
		}
		else
		{
			int x1, x2, y1, y2;
			cin >> x1 >> y1 >> x2 >> y2;
			//cout << getInterval(0, x1, n) << endl;
			//cout << getInterval(1, y1, y2) << endl;
			cout << getInterval(0, x1, x2) - getInterval(0, 1, n) + getInterval(1, y1, y2) << endl;
		}
		//cout << getInterval(0, 1, n) << endl;
	}
}
