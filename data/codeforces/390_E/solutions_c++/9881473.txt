#include<stdio.h>
long long seg[2][1<<23];
long long dif[2][1<<23];
int seg_n[2];

void init(int t,int n){
    seg_n[t]=1;
    while(seg_n[t]<n)seg_n[t]*=2;
    for(int i=0;i<seg_n[t]*2-1;i++){
        seg[t][i]=0;
        dif[t][i]=0;
    }
}

long long get(int t,int k,int l,int r){
    return seg[t][k]+dif[t][k]*(r-l);
}

void add(int t,int x,int a,int b,int k,int l,int r){
    if(r<=a||b<=l)return;
    else if(a<=l&&r<=b)dif[t][k]+=x;
    else{
        add(t,x,a,b,k*2+1,l,(l+r)/2);
        add(t,x,a,b,k*2+2,(l+r)/2,r);
        seg[t][k]=get(t,k*2+1,l,(l+r)/2)+get(t,k*2+2,(l+r)/2,r);
    }
}

long long query(int t,int a,int b,int k,int l,int r){
    if(r<=a||b<=l)return 0;
    else if(a<=l&&r<=b)return get(t,k,l,r);
    else{
        if(dif[t][k]>0){
            dif[t][k*2+1]+=dif[t][k];
            dif[t][k*2+2]+=dif[t][k];
            dif[t][k]=0;
        }
        long long vl=query(t,a,b,k*2+1,l,(l+r)/2);
        long long vr=query(t,a,b,k*2+2,(l+r)/2,r);
        seg[t][k]=get(t,k*2+1,l,(l+r)/2)+get(t,k*2+2,(l+r)/2,r);
        return vl+vr;
    }
}

int main(){
    int h,w,n;
    scanf("%d %d %d",&h,&w,&n);
    init(0,h);
    init(1,w);
    long long s=0;
    for(int i=0;i<n;i++){
        int q,x1,y1,x2,y2;
        scanf("%d %d %d %d %d",&q,&x1,&y1,&x2,&y2);
        x1--;y1--;
        if(q==0){
            int v;
            scanf("%d",&v);
            add(0,v*(y2-y1),x1,x2,0,0,seg_n[0]);
            add(1,v*(x2-x1),y1,y2,0,0,seg_n[1]);
            s+=v*(x2-x1)*(y2-y1);
        }
        if(q==1){
            long long vx1=query(0,0,x1,0,0,seg_n[0]);
            long long vx2=query(0,x2,h,0,0,seg_n[0]);
            long long vy1=query(1,0,y1,0,0,seg_n[1]);
            long long vy2=query(1,y2,w,0,0,seg_n[1]);
            printf("%I64d\n",s-(vx1+vx2+vy1+vy2));
        }
    }
    return 0;
}