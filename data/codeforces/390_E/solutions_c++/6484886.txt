#include <cstdio>
typedef long long lint;
lint bx[2][1 << 22];
lint by[2][1 << 22];
void ad(lint *b, int p, lint v) {
	for (; p < 1 << 22; p |= p+1) {
		b[p] += v;
	}
}
lint sum(lint *b, int p) {
	lint res = 0;
	for (; p > 0; p = (p & (p + 1)) - 1) {
		res += b[p];
	}
	return res;
}
void add(int i, int l, int r, int d, lint v) {
	v *= d;
	if (i) {
		ad(bx[0], r+1, -v);
		ad(bx[0], l, v);
		ad(bx[1], r+1, v * r);
		ad(bx[1], l, v * (-l+1));
	} else {
		ad(by[0], r+1, -v);
		ad(by[0], l, v);
		ad(by[1], r+1, v * r);
		ad(by[1], l, v * (-l+1));
	}
}
lint query(int i, int l, int r) {
	lint res = 0;
	if (i) {
		res += r * sum(bx[0], r) - (l-1) * sum(bx[0], l-1);
		res += sum(bx[1], r) - sum(bx[1], l-1);
	} else {
		res += r * sum(by[0], r) - (l-1) * sum(by[0], l-1);
		res += sum(by[1], r) - sum(by[1], l-1);
	}
	return res;
}
int main() {
	int n, m, k;
	int t, x1, x2, y1, y2, v;
	scanf("%d%d%d", &n, &m, &k);
	while (k--) {
		scanf("%d%d%d%d%d", &t, &x1, &y1, &x2, &y2);
		if (t) {
			lint ans = query(0, x1, x2) + query(1, y1, y2);
			printf("%I64d\n", ans - query(0, 1, n));
		} else {
			scanf("%d", &v);
			add(0, x1, x2, y2 - y1 + 1, v);
			add(1, y1, y2, x2 - x1 + 1, v);
		}
	}
	return 0;
}
