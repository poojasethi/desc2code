#include<iostream>
#include<cstdio>
#define lld long long
#define lowbit(x) ((x) & -(x))
using namespace std;

const int MaxN = 4 * 1000000 + 10;
class BIT
{
	public:
	lld s1[MaxN], s2[MaxN];
	int size;
	void init(int _sz){size = _sz;}
	void add(int wz,int x)
	{
		for(int i = wz; i <= size; i += lowbit(i)) s1[i] += (lld)x;
		for(int i = wz; i <= size; i += lowbit(i)) s2[i] += (lld)x * (lld)wz;
	}
	lld ask(int wz)
	{
		lld ret = 0;
		for(int i = wz; i > 0; i -= lowbit(i)) ret -= s2[i];
		for(int i = wz; i > 0; i -= lowbit(i)) ret += s1[i] * (lld)(wz + 1);
		return ret;
	}
	void add(int st,int en,int v)
	{
		add(st, v);
		add(en + 1, -v);
	}
	lld ask(int st,int en)
	{
		return ask(en) - ask(st - 1);
	}
}x, y;
int n, m, w, t, x1, y1, x2, y2, v;
lld all;
int main()
{
	scanf("%d%d%d", &n, &m, &w);
	x.init(n);y.init(m);
	for(int i = 1; i <= w; ++i)
	{
		scanf("%d%d%d%d%d", &t, &x1, &y1, &x2, &y2);
		if(t == 0)
		{
			scanf("%d", &v);
			x.add(x1, x2, (lld)v * (lld)(y2 - y1 + 1));
			y.add(y1, y2, (lld)v * (lld)(x2 - x1 + 1));
			all += (lld)v * (lld)(x2 - x1 + 1) * (lld)(y2 - y1 + 1);
		}
		else printf("%I64d\n", x.ask(x1, x2) + y.ask(y1, y2) - all);
	}
	return 0;
}
