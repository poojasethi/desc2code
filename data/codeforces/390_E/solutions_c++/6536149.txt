// In the name of Allah

#include <algorithm>
#include <iostream>
#include <sstream>
#include <cstring>
#include <iomanip>
#include <numeric>
#include <vector>
#include <queue>
#include <cmath>
#include <set>
#include <map>

using namespace std;

#define FOR(i,a,b) for ( int i = a; i < b; i ++ )
#define rep(i,n) for ( int i = 0; i < n; i ++ )
#define PI 3.14159265
#define X first
#define Y second

typedef long long ll;
typedef long double ld;

const int max_n = 4e6 + 10;
ll fen [4][max_n];
int N;

void add ( int who, int at, ll v )
{
	for ( ; at <= N; at += at & -at )
		fen [who][at] += v;
}

ll get ( int who, int at )
{
	ll ans = 0;
	for ( int i = at; i > 0; i -= i & -i )
		ans += fen [who][i];
	ans *= at;
	for ( int i = at; i > 0; i -= i & -i )
		ans += fen [who+1][i];
	return ans;
}

int main()
{
	int n, m, w;
	cin >> n >> m >> w;
	N = max (n, m ) + 2;
	memset ( fen, 0, sizeof fen );
	
	ll sum = 0;
	int x1, y1, x2, y2;
	ll v, val;
	while ( w -- )
	{
		bool b;
		cin >> b >> x1 >> y1 >> x2 >> y2;
		if ( b )
		{
			//cerr << endl;
			//cerr << x1 << " ta " << x2 << " *** " << get(0, x2) - get (0, x1-1) << endl;
			//cerr << y1 << " ta " << y2 << " *** " << get (2, y2) - get (2, y1-1) << endl;
			cout << ( get(0, x2) - get (0, x1-1) ) + ( get (2, y2) - get (2, y1-1) ) - sum << endl;
		}
		else
		{
			cin >> val;
			sum += ( x2-x1+1 ) * ( y2-y1+1 ) * val;
			
			v = val * ( y2-y1+1 );
			add ( 0, x1, v );
			add ( 0, x2, -v );
			add ( 1, x1, -v * (x1-1) );
			add ( 1, x2, v * x2 );
			
			v = val * ( x2-x1+1 );
			add ( 2, y1, v );
			add ( 2, y2, -v );
			add ( 3, y1, -v * (y1-1) );
			add ( 3, y2, v * y2 );
		}
	}

	return 0;
}
