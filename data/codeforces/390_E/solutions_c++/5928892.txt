#include <cmath>
#include <map>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <set>
#include <bitset>
#include <memory.h>
#include <functional>
#include <queue>
#include <fstream>
#include <ctime>
#include <deque>
#include <utility>
#include <stack>
#include <sstream>
#include <list>
#include <cctype> 
#include <numeric> 
#include <iomanip>
#include <assert.h>
using namespace std;
#define sqr(_) ((_)*(_))

typedef pair<int, int> Pii;
#define x first
#define y second
#define mp make_pair
#define pb push_back

typedef long long LL;

inline int Read()
{
	char ch = getchar();
	while (!((ch >= '0' && ch <= '9') || ch == '-')) ch = getchar();
	int x = 0, p = 1;
	if (ch == '-') p = -1, ch = getchar();
	while (ch >= '0' && ch <= '9') x = x * 10 + ch - '0', ch = getchar();
	return x * p;
}

const int MAXN = 1000000 * 4 + 10;

int w;
LL x[MAXN], f[MAXN], y[MAXN], g[MAXN], Mashiro;

int lowbit(int x)
{
	return x & -x;
}
void Add(LL *a, LL *b, int x, LL v)
{
	for (int i = x; i <= a[0]; i += lowbit(i))
		a[i] += v * (x - 1), b[i] += v;
}
LL Get(LL *a, LL *b, int x)
{
	LL Tohka = 0;
	for (int i = x; i; i -= lowbit(i))
		Tohka += b[i] * x - a[i];
	return Tohka;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout);
#endif
	x[0] = Read(); y[0] = Read(); w = Read();
	for (int i = 1; i <= w; ++i)
	{
		int ty, xl, yl, xr, yr, v;
		ty = Read(); xl = Read(); yl = Read(); xr = Read(); yr = Read();
		if (!ty)
			v = Read(),
			++xr, ++yr, Mashiro += (LL)(xr - xl) * (yr - yl) * v,
			Add(x, f, xl, (LL)(yr - yl) * v), Add(x, f, xr, -(LL)(yr - yl) * v),
			Add(y, g, yl, (LL)(xr - xl) * v), Add(y, g, yr, -(LL)(xr - xl) * v);
		else
		printf("%I64d\n", Get(x, f, xr) - Get(x, f, xl - 1) + Get(y, g, yr) - Get(y, g, yl - 1) - Mashiro);
	}
	fclose(stdin);
	fclose(stdout);
	return 0;
}
