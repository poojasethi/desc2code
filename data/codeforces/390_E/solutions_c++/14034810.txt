#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<algorithm>
using namespace std;
int n,m,q,x1,y1,x2,y2,i,v,type;
long long tree[4][4010000],sum;
void add(int flag,int x,long long u){
	int limit=flag<=1?n:m;
	for(int i=x;i<=limit;i+=i&(-i))tree[flag][i]+=u*v;
}
long long calc(int flag,int x){
	int limit=flag<=1?n:m;
	long long res=0;
	for(int i=x;i;i-=i&(-i))res+=tree[flag][i];
	return res;
}
int main(){
	scanf("%d%d%d",&n,&m,&q);
	for(i=1;i<=q;++i){
		scanf("%d%d%d%d%d",&type,&x1,&y1,&x2,&y2);
		if(type==0){
			scanf("%d",&v);
			add(0,x1,y2-y1+1); add(1,x1,1ll*(y2-y1+1)*x1);
			add(0,x2+1,-(y2-y1+1)); add(1,x2+1,-1ll*(y2-y1+1)*(x2+1));
			add(2,y1,x2-x1+1); add(3,y1,1ll*(x2-x1+1)*y1);
			add(2,y2+1,-(x2-x1+1)); add(3,y2+1,-1ll*(x2-x1+1)*(y2+1));
			sum+=(x2-x1+1)*(y2-y1+1)*v;
		}else{
			printf("%I64d\n",
			((calc(0,x2)*(x2+1)-calc(1,x2))-(calc(0,x1-1)*x1-calc(1,x1-1))
				+(calc(2,y2)*(y2+1)-calc(3,y2))-(calc(2,y1-1)*y1-calc(3,y1-1)))-sum);
		}
	}
}
