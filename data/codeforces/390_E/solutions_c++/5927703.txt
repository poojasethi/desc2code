#include <iostream>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <utility>
#include <algorithm>
#include <cmath>
#define MAXN 4000010

using namespace std;

int n,m,w;
long long rowa[MAXN],rowb[MAXN],cola[MAXN],colb[MAXN];

void upd(long long *treea, long long *treeb, int pos, long long a, long long b) {
	for (;pos < MAXN; pos |= pos+1) {
		treea[pos] += a;
		treeb[pos] += b;
	}
}

void update(long long *treea, long long *treeb, int l, int r, long long val) {
	upd(treea,treeb,l,val,-val*(l-1));
	upd(treea,treeb,r,-val,val*r);
}

long long get(long long *treea, long long *treeb, int pos) {
	long long x = pos, a = 0, b = 0;
	for (;pos >= 0; pos = (pos & (pos+1)) - 1) {
		a += treea[pos];
		b += treeb[pos];
	}
	return a*x + b;
}

long long query(long long *treea, long long *treeb, int l, int r) {
	return get(treea,treeb,r) - get(treea,treeb,l-1);
}

int main() {
	cin >> n >> m >> w;
	while (w--) {
		int op,l,r,u,d;
		cin >> op >> u >> l >> d >> r;
		if (op == 0) {
			long long v;
			cin >> v;
			update(rowa,rowb,u,d,v*(r-l+1));
			update(cola,colb,l,r,v*(d-u+1));
		}
		else {
			long long ans = query(cola,colb,l,r);
			ans -= query(rowa,rowb,1,u-1);
			ans -= query(rowa,rowb,d+1,n);
			cout << ans << '\n';
		}
	}
}