#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 100010
#define M 4000010
#define int64 long long
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int ty,x,y,xx,yy,v;
} a[N];
int i,j,k,n,nn,m,F;
int64 an[N],tr[2][M];
inline int64 calc(int x,int y) {
	int64 an=0;
	for (;x;x-=x&-x) an+=tr[y][x];
	return an;
}
inline int64 cal(int x) {
	return calc(x-1,1)+calc(n-x+1,0)*x;
}
inline void inc(int x,int y,int64 z) {
	if (!x) return;
	for (;x<=n;x+=x&-x) tr[y][x]+=z;
}
inline void add(int x,int64 y) {
	inc(n-x+1,0,y),inc(x,1,y*x);
}
void work() {
	memset(tr,0,sizeof(tr));
	int64 s=0;
	For(i,1,m) if (!a[i].ty) {
		int64 A=(int64)(a[i].yy-a[i].y+1)*a[i].v;
		add(a[i].xx,A),add(a[i].x-1,-A);
		s+=(int64)(a[i].xx-a[i].x+1)*(a[i].yy-a[i].y+1)*a[i].v;
	} else {
		if (F) an[i]-=s;
		an[i]+=cal(a[i].xx)-cal(a[i].x-1);
	}
}
int main() {
	scanf("%d%d%d",&n,&nn,&m); n=max(n,nn);
	For(i,1,m) {
		scanf("%d%d%d%d%d",&a[i].ty,&a[i].x,&a[i].y,&a[i].xx,&a[i].yy);
		if (!a[i].ty) scanf("%d",&a[i].v);
	}
	work(); F=1;
	For(i,1,m) swap(a[i].x,a[i].y),swap(a[i].xx,a[i].yy);
	work();
	For(i,1,m) if (a[i].ty) printf("%I64d\n",an[i]);
	return 0;
}