#include <bits/stdc++.h>

using namespace std;
const long long MAXN = 4 * 1000 * 1000 + 100;
long long fen[4][MAXN];

long long sum(long long fennum, long long start)
{
    long long ans = 0;
    for(int i = start ; i > 0 ; i -= i & -i)
        ans += fen[fennum][i];
    ans *= start;
    for(int i = start ; i > 0 ; i -= i & -i)
        ans += fen[fennum + 1][i];
    return ans;
}

void update(long long fennum, long long start, long long val)
{
    for(int i = start ; i < MAXN ; i += i & -i)
        fen[fennum][i] += val;
}

int main()
{
    ios_base::sync_with_stdio(false);
    long long n, m, w, totalsum = 0;
    cin >> n >> m >> w;
    for(int i = 0 ; i < w ; i++)
    {
        long long q, x1, x2, y1, y2, v;
        cin >> q >> x1 >> y1 >> x2 >> y2;
        if(q == 0)
        {
            cin >> v;
            totalsum += v * (x2 - x1 + 1) * (y2 - y1 + 1);
            update(0, x1, v * (y2 - y1 + 1));
            update(0, x2 + 1, -v * (y2 - y1 + 1));
            update(1, x1, -v * (y2 - y1 + 1) * (x1 - 1));
            update(1, x2 + 1, v * (y2 - y1 + 1) * x2);

            update(2, y1, v * (x2 - x1 + 1));
            update(2, y2 + 1, -v * (x2 - x1 + 1));
            update(3, y1, -v * (x2 - x1 + 1) * (y1 - 1));
            update(3, y2 + 1, v * (x2 - x1 + 1) * y2);
        }
        else
            cout << (sum(0, x2) - sum(0, x1 - 1)) + (sum(2, y2) - sum(2, y1 - 1)) - totalsum << endl;
    }
}