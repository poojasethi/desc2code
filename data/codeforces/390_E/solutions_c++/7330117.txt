#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
typedef long long LL;
#define lowbit(x) (x&-x)
LL B[2][4001000],C[2][4001000];
const int N = 4000000;
void add_b(int x, LL d, int p)
{
    while(x) { B[p][x]+=d; x-=lowbit(x);}
}
void add_c(int x, LL d, int p)
{
    if(!x)return;
    LL D=x*d;
    while(x<=N) {C[p][x]+=D; x+=lowbit(x);}
}
LL sum_b(int x, int p)
{
    LL ret=0;
    if(x)
    while(x<=N) { ret+=B[p][x]; x+=lowbit(x); }
    return ret;
}
LL sum_c(int x, int p)
{
    LL ret=0;
    while(x) { ret+=C[p][x]; x-=lowbit(x); }
    return ret;
}
LL sum(int x, int p)
{
    return sum_b(x,p)*x+sum_c(x-1,p);
}
int main()
{
    int i,j,k,w,h,m,n;
    int p,x1,x2,y1,y2,v;
    scanf("%d%d%d",&n,&m,&w);
    while(w--)
    {
        scanf("%d",&p);
        if(p)
        {
            scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
            LL ans=sum(x1-1,0)+ (sum(n,0)-sum(x2,0))+ sum(y1-1,1) +( sum(m,1)-sum(y2,1));
            printf("%lld\n",sum(n,0)-ans);
        }
        else
        {
            scanf("%d%d%d%d%d",&x1,&y1,&x2,&y2,&v);
            LL a=(LL)(x2-x1+1)*(LL)v;
            LL b=(LL)(y2-y1+1)*(LL)v;
            add_b(x2,b,0); add_b(x1-1,-b,0);
            add_b(y2,a,1); add_b(y1-1,-a,1);
            add_c(x2,b,0); add_c(x1-1,-b,0);
            add_c(y2,a,1); add_c(y1-1,-a,1);
        }
    }
}
	  		 	 				 	   			 			  	