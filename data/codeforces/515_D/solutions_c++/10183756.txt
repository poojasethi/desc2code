#include<iostream>
#include<cstring>
using namespace std;

const int maxn = 2100;
const int dx[4] = {1, -1, 0,  0};
const int dy[4] = {0,  0, 1, -1};
const char c[4]  = {'^', 'v', '<', '>'};
const char c2[4] = {'v', '^', '>', '<'};

typedef pair<int,int> pii;

int n, m, p, q;
string a[maxn];
pii saf[maxn*maxn];

int kho(int x, int y){
	if (x<0 || y<0 || x>=n || y>=m) return 0;
	if (a[x][y] != '.') return 0;
	return 1;
}	

int deg(int x, int y){
	int j = 0;
	for (int i=0 ; i<4 ; i++){
		int x2 = x + dx[i];
		int y2 = y + dy[i];
		j += kho(x2, y2);
	}
	return j;
}	

int main(){
	cin >> n >> m;
	for (int i=0 ; i<n ; i++)
		cin >> a[i];
	for (int i=0 ; i<n ; i++)
		for (int j=0 ; j<m ; j++){
			if (!kho(i, j)) continue;
			if (deg(i, j)!=1) continue;
			saf[q++] = make_pair(i, j);
		}
	while(p < q){
		int x = saf[p].first;
		int y = saf[p].second;
		p++;
		for (int i=0 ; i<4 ; i++){
			int x2 = x + dx[i];
			int y2 = y + dy[i];
			if (!kho(x2, y2)) continue;
			a[x][y] = c[i];
			a[x2][y2] = c2[i];
			for (int j=0 ; j<4 ; j++){
				int x3 = x2 + dx[j];
				int y3 = y2 + dy[j];
				if (!kho(x3, y3)) continue;
				if (deg(x3, y3)!=1) continue;
				saf[q++] = make_pair(x3, y3);
			}
		}	
	}
	for (int i=0 ; i<n ; i++)
		for (int j=0 ; j<m ; j++)
			if (a[i][j] == '.'){
				cout << "Not unique" << endl;
				return 0;
			}
	for (int i=0 ; i<n ; i++)
		cout << a[i] << endl;
}
