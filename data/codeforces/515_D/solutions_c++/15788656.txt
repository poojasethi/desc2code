#include <bits/stdc++.h>
using namespace std;
const int N = 2005;
char board[N][N];
int xp=0,yp=0;
queue<pair<int,int> > q;
#define mp make_pair
#define x first
#define y second
int dx[4]={0,-1,0,1},dy[4]={1,0,-1,0},deg[N][N];
char ss[2][8]={"^>v<","v<^>"};
int main(){
	int n,m,k,i,j,a,x,y;cin>>n>>m;
	for(i=1;i<=n;++i)scanf("%s",board[i]+1);
	for(i=1;i<=n;++i)
		for(j=1;j<=m;++j){
			if(board[i][j]=='.'){
				for(k=0;k<4;++k){
					y= i+dy[k],x= j+dx[k];
					if(board[y][x]=='.')++deg[i][j];
				}
				if(deg[i][j]==1)q.push(mp(i,j));
			}
		}
	while(!q.empty()){
		x = q.front().y,y= q.front().x;q.pop();
		if(board[y][x]=='.'){
			int nx,ny,id=-1;
			bool tt=false;
			for(k=0;k<4;++k){
				nx = x+dx[k],ny = y+dy[k];
				id=k;
				if(board[ny][nx]=='.'){
					tt=true;break;
				}
			}
			if(!tt){
				cout<<"Not unique\n";return 0;
			}
			board[y][x]=ss[0][id];
			board[ny][nx]=ss[1][id];
			deg[y][x]=0;
			deg[ny][nx]=0;
			for(k=0;k<4;++k){
				int nnx = nx+dx[k],
					nny = ny+dy[k];
				deg[nny][nnx]--;
				if(deg[nny][nnx]==1)q.push(mp(nny,nnx));
			}
		}
	}
	for(i=1;i<=n;++i)for(j=1;j<=m;++j)if(board[i][j]=='.'){
		cout<<"Not unique\n";return 0;
	}
	for(i=1;i<=n;++i)
		puts(board[i]+1);
}
