#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <iostream>
#define M 2005
using namespace std;
struct kxj{
	int x,y,d;
}Q[M*M];
bool mark[M][M];
int n,m,degree[M][M],d[M][M];
int rx[]={-1,0,1,0},ry[]={0,-1,0,1};
char str[M][M],s[][3]={{"v^"},{"><"},{"^v"},{"<>"}};
bool check(int x,int y){
	return x>=0&&y>=0&&x<n&&y<m&&str[x][y]!='*'&&!mark[x][y];
}
int solve(){
	int i,j,L=0,R=0,cnt=0;
	for(i=0;i<n;i++)
		for(j=0;j<m;j++){
			if(degree[i][j]==1)Q[R++]=(kxj){i,j};
		}
	while(L<R){
		kxj now=Q[L++];
		if(mark[now.x][now.y])continue;
		cnt++;mark[now.x][now.y]=1;
		for(i=0;i<4;i++){
			int x=rx[i]+now.x,y=ry[i]+now.y;
			if(!check(x,y))continue;
			mark[x][y]=1;
			d[now.x][now.y]=i;
			for(j=0;j<4;j++){
				int x1=x+rx[j],y1=y+ry[j];
				if(!check(x1,y1))continue;
				if(--degree[x1][y1]==1)Q[R++]=(kxj){x1,y1};
			}
		}
	}
	return cnt*2;
}
int main(){
	memset(d,-1,sizeof(d));
	int i,j,k,cnt=0;
	scanf("%d %d",&n,&m);
	for(i=0;i<n;i++)
		scanf("%s",str[i]);
	for(i=0;i<n;i++)
		for(j=0;j<m;j++){
			if(str[i][j]=='*')continue;
			for(k=0;k<4;k++){
				int x=rx[k]+i,y=ry[k]+j;
				degree[i][j]+=check(x,y);
			}cnt++;
		}
	if(solve()==cnt){
		for(i=0;i<n;i++)
			for(j=0;j<m;j++){
				int x=d[i][j];
				if(x==-1)continue;
				str[i][j]=s[x][0];
				str[i+rx[x]][j+ry[x]]=s[x][1];
			}
		for(i=0;i<n;i++)puts(str[i]);
	}else puts("Not unique");
	return 0;
}
