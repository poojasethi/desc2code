#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
#include <queue>
using namespace std;
string s[2005];
int dx[4] = { 0, -1, 1, 0 };
int dy[4] = { -1, 0, 0, 1 };
char xxx[4] = { '<', '^', 'v', '>' };
char yyy[4] = { '>', 'v', '^', '<' };
int vis[2005][2005];
int one_d(int n, int m, int u, int v) {
	int i, x, y, c = 0, p = 0;
	for (i = 0; i < 4; i++) {
		x = u + dx[i];
		y = v + dy[i];
		if (x >= 0 && x < n && y >= 0 && y < m) {
			if (s[x][y] == '.'){
				p = i;
				c++;
			}
		}

	}
	if (c == 1)
		return p;
	else
		return -1;
}
void func(int n, int m, int u, int v) {
	int i, j, x, y, d, xx, yy;
	d = one_d(n, m, u, v);
	if (d != -1) {
		x = u + dx[d];
		y = v + dy[d];
		s[u][v] = yyy[d];
		s[x][y] = xxx[d];
		for (int l = 0; l < 4; l++){
			int xx = x + dx[l];
			int yy = y + dy[l];
			if (xx >= n || yy >= m || xx < 0 || yy < 0) continue;
			if (s[xx][yy] == '.' && one_d(n, m, xx, yy) != -1) func(n, m, xx, yy);
		}
	}
}
int main() {
	int i, j, n, m;
	cin >> n >> m;
	for (i = 0; i < n; i++) {
		cin >> s[i];
	}
	for (i = 0; i < n; i++) {
		for (j = 0; j < m; j++) {
			if (s[i][j] == '.' && one_d(n, m, i, j) != -1) {
				func(n, m, i, j);
			}
		}
	}
	for (i = 0; i < n; i++) {
		for (j = 0; j < m; j++) {
			if (s[i][j] == '.') {
				cout << "Not unique" << endl;
				return 0;
			}
		}
	}
	for (i = 0; i < n; i++) {
		for (j = 0; j < m; j++) {
			cout << s[i][j];
		}
		cout << endl;
	}
	return 0;
}