#include <cstdio>
int q[2000*2000+10][2], deg[2011][2011], dy[4] = {0, 0, -1, 1};
int head, tail, dx[4] = {-1, 1, 0, 0}, n, m;
char print[4][3] = {"v^","^v","><","<>"};
char map[2011][2011];

void build() {
  for (int i = 1; i <= n; i++)
    for (int j = 1; j <= m; j++)
      if (map[i][j] == '.') {
        for (int k = 0; k < 4; k++)
          if (map[i+dx[k]][j+dy[k]] == '.') deg[i][j] ++;
        if (deg[i][j] == 1) q[++tail][0] = i, q[tail][1] = j;
      }
}

void make(int a, int b, int k) {map[a][b] = print[k][0]; map[a+dx[k]][b+dy[k]] = print[k][1];}

void toposort_or_whatever() {
  while (head < tail) {
    int x = q[++head][0], y = q[head][1], i;
    if (!deg[x][y]) continue;
    for (i = 0; i < 4; i++)
      if (map[x+dx[i]][y+dy[i]] == '.')
        break;
    success: make(x, y, i);
    int xx = x+dx[i], yy = y+dy[i];
    deg[x][y] = deg[xx][yy] = 0;
    for (int i = 0; i < 4; i++)
      if (map[xx+dx[i]][yy+dy[i]] == '.')
        if (--deg[xx+dx[i]][yy+dy[i]] == 1)
          q[++tail][0] = xx+dx[i], q[tail][1] = yy+dy[i];
  }
  for (int i = 1; i <= n; i++)
    for (int j = 1; j <= m; j++)
      if (map[i][j] == '.') {
        puts("Not unique"); return;
      }
  for (int i = 1; i <= n; i++)
    puts(map[i]+1);
}

int main() {
  scanf("%d%d", &n, &m);
  for (int i = 1; i <= n; i++)
    scanf("%s", map[i]+1);
  build();
  toposort_or_whatever();
  return 0;
}