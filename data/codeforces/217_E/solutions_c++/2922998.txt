#include <cstring>
#include <cstdio>
using namespace std;

char s[3000010], ans[3000010];
int tree[3000010], l[10000], r[10000], from[3000010];
int k,m,len;

inline int lowbit(int x){return (-x)&x;}

inline void modify(int p, int dx)
{
	for (;p<=k;p+=lowbit(p)) tree[p]+=dx;
}

inline int get(int x)
{
	int res=0;
	for (int i=1<<21; i; i>>=1)
		if (res+i<=k && tree[res+i]<x)
			x-=tree[res+i], res+=i;
	return res+1;
}

inline int sum(int x)
{
	int res=0;
	for (;x ;x-=lowbit(x)) res+=tree[x];
	return res;
}

int main()
{
	//freopen("a.in","r",stdin);
	scanf("%s",s+1); scanf("%d",&k);int _k=k;
	for (int i=1; i<=k; i++) modify(i,1);
	scanf("%d",&m);
	for (int i=1; i<=m; i++) scanf("%d%d",&l[i],&r[i]);
	
	for (int i=m; i; i--)
	{
		for (int pos=l[i]+1; pos<=r[i] && r[i]<_k; pos+=2, _k--)
		{
			int y=get(r[i]+1), x=get(pos);
			from[y]=x; modify(y,-1);
		}
		for (int pos=l[i]; pos<=r[i] && r[i]<_k; pos+=2, _k--)
		{
			int y=get(r[i]+1), x=get(pos);
			from[y]=x; modify(y,-1);
		}
	}
	
	for (int i=1; i<=k; i++)
		if (sum(i)-sum(i-1)) ans[i]=s[++len];
	for (int i=1; i<=k; i++) 
		if (from[i]) ans[i]=ans[from[i]];
	printf("%s\n",ans+1);
	//for (;;);
}
