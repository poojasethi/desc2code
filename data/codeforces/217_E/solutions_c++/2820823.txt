/*
Author: LJQ
PROG: Codeforces #134 Div1 E. Alien DNA
DATE: 2012.12.24
*/
#include <cstdio>

using namespace std;

const int maxk = 3000005;
const int maxn = 5005;
const int LIM = 1 << 21;

char st[maxk], ans[maxk];
int cnt[maxk], fat[maxk];
int x[maxn], y[maxn];
int n, K;

void init()
{
	scanf("%s%d%d", st + 1, &K, &n);
	for (int i = 1; i <= n; i ++) scanf("%d%d", &x[i], &y[i]);
}

inline int lowbit(int x){
	return x & (x ^ (x - 1));
}

void Del(int x){
	for (; x <= K; x += lowbit(x)) cnt[x] --;
}

int Get(int x){
	int y = 0;
	for (int i = LIM; i && x; i >>= 1)
		if (y + i <= K && cnt[y + i] < x)
			y += i, x -= cnt[y];
	return y + 1;
}

void work()
{
	for (int i = 1; i <= K; i ++) cnt[i] = lowbit(i);
	int len = K;
	for (int i = n; i >= 1; i --){
		int p = x[i] + 1;
		for (int j = x[i]; j <= y[i] && y[i] < len; j ++, len --, p += 2){
			if (p > y[i]) p = x[i];
			int cur = Get(y[i] + 1); Del(cur); fat[cur] = Get(p);
		}
	}
	int tail = 0;
	for (int i = 1; i <= K; i ++)
		ans[i] = fat[i] ? ans[fat[i]] : st[++ tail];
}

void print()
{
	puts(ans + 1);
}

int main()
{
	init();
	work();
	print();
	return 0;
}
