#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#define N 3100000
using namespace std;
int tree[N],link[N];
char c[N],ans[N];
int i,k,n,l,r,L[12000],R[12000],u,t,num,x,j,y;
int Find(int x){
	int i,y=0;
	for(i=21;i>=0;--i)if(y+(1<<i)<=k && tree[y+(1<<i)]<x){
		x-=tree[y+(1<<i)];
		y+=1<<i;
	}
	return y+1;
}
void del(int x){
	for(int i=x;i<=k;i+=i&(-i))tree[i]--;
}
int main(){
	scanf("%s%d%d",c+1,&k,&n);
	for(i=1;i<=n;++i)scanf("%d%d",&L[i],&R[i]);
	for(i=1;i<=k;++i)tree[i]=i&(-i);
	num=k;
	for(i=n;i>=1;--i){
		l=L[i]; r=R[i]; u=(r-l+1)/2;
		for(j=min(r+r-l+1,num);j>=r+1;--j){
			x=Find(j);
			if(j-r<=u)y=Find((j-r)*2+l-1);
			else y=Find((j-r-u)*2+l-2);
			link[x]=y;
			del(x);
			--num;
		}
	}
	t=0;
	for(i=1;i<=k;++i)if(!link[i])ans[i]=c[++t];
		else ans[i]=ans[link[i]];
	printf("%s\n",ans+1);
}