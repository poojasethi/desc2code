#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <queue>
#include <ext/rope>
#ifdef WIN32
#define TAT "%I64d"
#else
#define TAT "%lld"
#endif 
#define int64 long long
#define wc(c) freopen(c".in","r",stdin);   freopen(c".out","w",stdout);
using namespace std;
using namespace __gnu_cxx;

char ch[5005000];
int n,K,l[10010],r[10010];
crope s;

crope findans(int dep,int len)
{
	if (!dep)    return s.substr(0,len);
	int dis = min(len - (r[dep] + 1),r[dep] - l[dep] + 1);
	if (dis <= 0)     return findans(dep - 1 ,len);
	crope ss = findans(dep - 1 ,len - dis);
	ch[dis] = 0;   int whe = l[dep] + 1;
	if (whe > r[dep])   whe = l[dep];
	for (int i = 0;i < dis;i++)
		{
			ch[i] = ss[whe];
			whe += 2;   if (whe > r[dep])   whe = l[dep];
		}
	ss.insert(r[dep] + 1,ch);
	return ss;
}

int main()
{
	scanf("%s",ch);
	s = ch;    cin >> K >> n;
	for (int i = 1;i <= n;i++)
		scanf("%d %d",&l[i],&r[i]),l[i]--,r[i]--;
	puts(findans(n,K).c_str());
}
  
