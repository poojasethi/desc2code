//admire panyuchao
//admire ACRUSH
#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstring>
#define Rep(i,j,k) for (int i=(j); i<=(k); i++)
#define Repd(i,j,k) for (int i=(j); i>=(k); i--)
using namespace std;
#define maxn (3<<20)

int n, t, L[5100], R[5100], size[maxn*2], dsu[maxn], tot, pw2[30];
char s[maxn], ans[maxn];

void minus_one(int x){
	tot--;
	while(x<=n)
		size[x]--, x+=x&-x;
}

int getkth(int k){
	k--;
	int ret=0;
	Repd(i,22,0)
		if (ret+pw2[i]<=n && size[ret+pw2[i]]<=k){
			ret+=pw2[i];
			k-=size[ret];
		}
	return ret+1;
}

int main(){
	
	scanf("%s%d%d",s+1,&n,&t);
	
	Rep(i,1,t) scanf("%d%d",L+i,R+i);
	
	pw2[0]=1; Rep(i,1,22) pw2[i]=pw2[i-1]*2;
	tot=n;
	Rep(i,1,n) size[i]=i&-i;
	
	Repd(i,t,1){
		int len=R[i]-L[i]+1, now=min(L[i]+1,R[i]);
		for(int j=1; j<=len && R[i]<tot; j++){
			int k=getkth(R[i]+1);
			minus_one(k);
			dsu[k]=getkth(now);
			now+=2;
			if (now>R[i]) now=L[i];
		}
	}
	
	char *ch=s+1;
	Rep(i,1,n)
		if (dsu[i]) ans[i]=ans[dsu[i]]; else ans[i]=*(ch++);
	ans[n+1]=0;
	printf("%s\n",ans+1);

    return 0;
}

