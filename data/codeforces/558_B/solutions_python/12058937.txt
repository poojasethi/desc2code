def solve():
    begin, count, n = {}, {}, int(raw_input())

    retval = (1, 1, 0)
    for index, val in enumerate(map(int, raw_input().split())):
        if val not in begin:
            begin[val] = index + 1
        count[val] = count.get(val, 0) + 1

        if count[val] > retval[2] or count[val] == retval[2] and (index + 1 - begin[val]) < (retval[1] - retval[0]):
            retval = (begin[val], index + 1, count[val])

    return retval[:2]


if __name__ == '__main__':
    try:
        while True:
            l, r = solve()
            print l, r
    except EOFError:
        pass
