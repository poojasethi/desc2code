def my_cmp(x, y):
    return cmp(x[0], y[0])

def my_cmp2(x, y):
    return cmp(x[2], y[2])

def search_index(target, x):
    i = 0
    j = len(target) - 1
    while True:
	m = (i + j) / 2
	if i + 1 >= j:
	    break
	elif x < target[m][0]:
	    j = m
	else:
	    i = m
    return j

def main():
    n = int(raw_input())
    target = []
    for i in range(n):
	j = map(int, raw_input().split())
	j.append(i)
	target.append(tuple(j))
    target.sort(my_cmp)
    m = int(raw_input())
    count = 0
    for i in range(1, m + 1):
	x, y = map(int, raw_input().split())
	index = search_index(target, x)
	if index > 0:
	    x_, r, target_n = target[index - 1]
	    if r > 0 and (x - x_) ** 2 + y ** 2 <= r ** 2:
		target[index - 1] = (x_, -1 * i, target_n)
		count += 1
	x_, r, target_n = target[index]
	if r > 0 and (x - x_) ** 2 + y ** 2 <= r ** 2:
	    target[index] = (x_, -1 * i, target_n)
	    count += 1
    print count
    target.sort(my_cmp2)
    output = ""
    for x, r, target_n in target:
	if r > 0:
	    output += str(-1) + " "
	else:
	    output += str(-1 * r) + " "
    print output[:-1]
	
main()
