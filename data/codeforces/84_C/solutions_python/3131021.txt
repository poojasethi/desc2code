from bisect import *
from math import *
n = input()
a = [map(int, raw_input().split()) for i in xrange(n)]
targets = sorted([(a[i][0], i) for i in xrange(n)])
pos = [targets[i][0] for i in xrange(n)]
nums = [targets[i][1] for i in xrange(n)]
hits = [-1] * n
m = input()
for i in xrange(m):
  x, y = map(int, raw_input().split())
  k = bisect_left(pos, x)
  if k == 0:
    if hypot(abs(x - pos[0]), abs(y)) <= a[nums[0]][1] and hits[nums[0]] == -1:
      hits[nums[0]] = i + 1
  elif k == n:
    if hypot(abs(x - pos[n - 1]), abs(y)) <= a[nums[n - 1]][1] and hits[nums[n - 1]] == -1:
      hits[nums[n - 1]] = i + 1
  else:
    r1 = hypot(abs(x - pos[k]), abs(y))
    r2 = hypot(abs(x - pos[k - 1]), abs(y))
    if r1 <= a[nums[k]][1] and hits[nums[k]] == -1:
      hits[nums[k]] = i + 1
    if r2 <= a[nums[k - 1]][1] and hits[nums[k - 1]] == -1:
      hits[nums[k - 1]] = i + 1
      
print len([1 for h in hits if h != -1])
print ' '.join(map(str, hits))