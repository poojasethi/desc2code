#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
using namespace std;
struct point
{
	int x,y,id;
	friend bool operator<(const point &p,const point &q) {
		return p.x<q.x;
	}
}a[100010],b[100010];
int visit[100010];
int main()
{
	int n,m,i,j,k;
	memset(visit,-1,sizeof(visit));
	scanf("%d",&n);
	for(i=1;i<=n;i++) {
		scanf("%d%d",&a[i].x,&a[i].y);
		a[i].id=i;
	}
	sort(a+1,a+n+1);
	int x,y;
	a[0].x=-21000;
	a[n+1].x=21000;
	a[0].y=0;
	a[n+1].y=0;
	int cnt=0;
	scanf("%d",&m);
	for(i=1;i<=m;i++){
		scanf("%d%d",&x,&y);
		int left=1,right=n,mid;
		while(left<=right){
			mid=(left+right)/2;
			if(a[mid].x<=x&&a[mid+1].x>=x) break;
			else if(a[mid].x>x) right=mid-1;
			else left=mid+1;
		}
	//	if(left>right) continue;
		int t1,t2;
		t1=(a[mid].x-x)*(a[mid].x-x)+y*y;
		if(t1<=a[mid].y*a[mid].y&&visit[a[mid].id]==-1) visit[a[mid].id]=i,cnt++;
		t2=(a[mid+1].x-x)*(a[mid+1].x-x)+y*y;
		if(t2<=a[mid+1].y*a[mid+1].y&&visit[a[mid+1].id]==-1) visit[a[mid+1].id]=i,cnt++;
	}
	printf("%d\n",cnt);
	for(i=1;i<=n;i++){
		printf("%d",visit[i]);
		if(i==n) printf("\n");
		else printf(" ");
	}
	return 0;
}

