#include <iostream>
#include <algorithm>
#include <map>

using namespace std;

int N,M,ans[10010],result,R[10010];
map<int,int> target;

int dist(int x1,int y1,int x2,int y2)
{
	return (x1-x2)*(x1-x2)+(y1-y2)*(y1-y2);
}

int main()
{
	cin >> N;
	for (int i=0;i<N;i++)
	{
		int x;
		cin >> x >> R[i];
		target[x]=i;
		ans[i]=-1;
	}
	cin >> M;
	for (int i=0;i<M;i++)
	{
		int x,y;
		cin >> x >> y;
		map<int,int>::iterator it=target.lower_bound(x);
		if (it!=target.end())
		{
			if (ans[it->second]==-1&&dist(x,y,it->first,0)<=R[it->second]*R[it->second])
			{
				ans[it->second]=i+1;
				result++;
			}
		}
		if (it!=target.begin())
		{
			it--;
			if (ans[it->second]==-1&&dist(x,y,it->first,0)<=R[it->second]*R[it->second])
			{
				ans[it->second]=i+1;
				result++;
			}
		}
	}
	cout << result << endl;
	for (int i=0;i<N;i++)
		cout << ans[i] << " ";
	return 0;
}