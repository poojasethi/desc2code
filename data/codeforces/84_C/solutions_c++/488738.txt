#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;

struct Circle
{
    int x,r,num,n;
}cir[10001];

bool cmpx(Circle a,Circle b)
{
    return a.x<b.x;
}

bool cmpnum(Circle a,Circle b)
{
    return a.num<b.num;
}

int m,n;

bool incir(int x,int y,int nc)
{
    return (x-cir[nc].x)*(x-cir[nc].x)+y*y<=cir[nc].r*cir[nc].r;
}

int bins(int x)
{
    int l=0,h=m;
    while(1<h-l)
    {
        int mid=(l+h)/2;
        if(cir[mid].x>x)
            h=mid;
        else
            l=mid;
    }
    return l;
}

int main()
{
    cin>>m;
    for(int i=0;i<m;i++)
    {    
        cin>>cir[i].x>>cir[i].r;
        cir[i].num=i;
        cir[i].n=-1;
    }
    sort(cir,cir+m,cmpx);
    int x,y;
    cin>>n;
    for(int i=0;i<n;i++)
    {   
        cin>>x>>y;
        int p=bins(x);
        for(int j=p;j<p+5&&j<m;j++)
            if(cir[j].n==-1&&incir(x,y,j))
                cir[j].n=i+1;
    }

    int cnt=0;

    for(int i=0;i<m;i++)
        if(cir[i].n!=-1)
            cnt++;
    cout<<cnt<<endl;
    sort(cir,cir+m,cmpnum);
    for(int i=0;i<m;i++)
        cout<<cir[i].n<<" ";
    cout<<endl;
    //system("pause");
    return 0;
}   
