#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define maxN 10010

struct node{
	int a, r, p, f;
}e[maxN];
int n, m, cnt = 0;
void update(int m, int x, int y, int i) {
	if (e[i].f != -1) return;
	long long t = ((long long)x - e[i].a) * ((long long)x - e[i].a) + (long long)y * y;
	if (t <= e[i].r * e[i].r) e[i].f = m;
}
int cmp(node x, node y) {
	return x.a < y.a;
}
int cmp2(node x, node y) {
	return x.p < y.p;
}
int main() {
	scanf("%d", &n);
	for (int i = 0; i < n; i++) {
		scanf("%d%d", &e[i].a, &e[i].r);
		e[i].p = i, e[i].f = -1;
	}
//	for (int i = 0; i < n; i++) printf("%d\n",e[i].p);
	sort(e, e+n, cmp);
	scanf("%d", &m);
	for (int i = 0; i < m; i++) {
		int l = 0, r = n-1, mid, x, y;
		scanf("%d%d", &x, &y);
		while (l < r) {
			mid = (l + r) >> 1;
			if (x > e[mid].a)
				l = mid + 1;
			else 
				r = mid;
		}
		//printf("i = %d, l = %d\n",i,l);
		update(i, x, y, l - 1);
		update(i, x, y, l);
		update(i, x, y, l + 1);
	}
	sort(e, e+n, cmp2);
	for (int i = 0; i < n; i++)
		if (e[i].f != -1) cnt++;
	printf("%d\n", cnt);
	for (int i = 0; i < n; i++){
		printf("%d%c", (e[i].f==-1?-1:e[i].f+1), (i!=n-1)?' ':'\n');
	}
	return 0;
}
