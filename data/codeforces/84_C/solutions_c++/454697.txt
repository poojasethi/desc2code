#include <stdio.h>
#include <algorithm>
#include <math.h>

using namespace std;

const int maxn = 10000+5, maxm = 200000+5;

struct dude {
    int x, r, num;
} a[maxn];
int n, m;
int x, y, ans[maxn];

bool f (dude a, dude b) { return a.x < b.x; }
int bin_search(int x)
{
    int l = 0, r = n-1, m;
    while (l <= r) {
        m = (l + r) / 2;
        if (a[m].x <= x) l = m + 1;
        else r = m - 1;
    }
    return l - 1;
}

int main() {
    scanf("%d", &n);
    for (int i = 0; i < n; ++i) { scanf("%d%d", &a[i].x, &a[i].r); a[i].num = i; ans[i] = -1; }
    sort(a, a+n, f);
    scanf("%d", &m);

    int cnt = 0;
    for (int i = 0; i < m; ++i) {
        scanf("%d %d", &x, &y);
        int t = bin_search(x), tmp = a[t].num;
        if (ans[tmp] == -1 && a[t].r*a[t].r >= (a[t].x-x)*(a[t].x-x)+y*y) { ans[tmp] = i+1; ++cnt; }
        ++t; tmp = a[t].num;
        if (ans[tmp] == -1 && a[t].r*a[t].r >= (a[t].x-x)*(a[t].x-x)+y*y) { ans[tmp] = i+1; ++cnt; }
    }

    printf("%d\n", cnt);
    for (int i = 0; i < n; ++i) printf("%d ", ans[i]);
    printf("\n");
    return 0;
}