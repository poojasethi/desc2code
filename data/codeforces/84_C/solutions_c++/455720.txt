#include<stdio.h>
#include<string.h>
#define ADD (2*10000+1001)

int v[4*10000+2*1010];
int vr[10010];
int vx[10010];
int hit[10010];
int n;

int f ( int x, int y, int indice ) {
	int rindice,xindice;
	if ( indice <= 0 || indice > n ) return 0;
	rindice = vr[indice]; xindice = vx[indice];
	if ( (xindice-x)*(xindice-x) + y*y <= rindice*rindice ) return 1;
	return 0;
}

int main (void) {
	memset(v,-1,sizeof(v));
	memset(hit,-1,sizeof(hit));
	scanf("%d",&n);
	int acertou = 0,x,r,y,m,indice;
	for(int i = 1; i <= n; i++) {
		scanf("%d %d",&x,&r);
		x += ADD;
		vx[i] = x;
		vr[i] = r;
		for(int j = x-r; j <= x+r; j++) v[j] = i;
	}
	
	scanf("%d",&m);
	for(int i = 1; i <= m; i++) {
		scanf("%d %d",&x,&y);
		x += ADD;
		indice = v[x];
		if ( f(x,y,indice) && hit[indice] == -1 ) { hit[indice] = i; acertou++; }
		indice = v[x+1];
		if ( f(x,y,indice) && hit[indice] == -1 ) { hit[indice] = i; acertou++; }
		indice = v[x-1];
		if ( f(x,y,indice) && hit[indice] == -1 ) { hit[indice] = i; acertou++; }
		
	}

	
	printf("%d\n",acertou);
	for(int i = 1; i <= n; i++) printf("%d ",hit[i]);
	printf("\n");
	
	return 0;
}
		
		
