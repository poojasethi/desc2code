#include<iostream>
#include<algorithm>
#include<vector>

#define PB push_back
#define SZ(c) ll((c).size())
#define foreach(it, c) for(typeof((c).begin()) it=(c).begin(); it!=(c).end(); it++)
#define WAIT cout<<flush, system("PAUSE")
using namespace std;
typedef long long ll;
typedef pair<ll,ll> pii;
#define MAX 100100

ll N, Q, x, y, pos;
pii center[MAX];
ll R[MAX], P[MAX], sol[MAX], cnt;

ll sqr(ll x){ return x*x; }
void update(ll p, ll q){
   if (sol[p]>-1) return;
   
   if (sqr(x-P[p])+sqr(y) <= sqr(R[p])){
      cnt++;
      sol[p] = q;
   }
}

int main(){
   ios_base::sync_with_stdio(0);
   cin.tie(0);
   
   cin>>N;
   for(ll I=0; I<N; I++){
      cin >> x;
      P[I] = x;
      center[I]=pii(x, I);
      sol[I]=-1;
      cin >> R[I];
   }
   sort(center, center+N);

   cin>>Q;
   for(ll q=1; q<=Q; q++){
      cin>>x>>y;
      pos = upper_bound(center, center+N, pii(x, N+1))-center;
      if (pos>0)
         update(center[pos-1].second, q);
      if (pos<N)
         update(center[pos].second, q);
   }
   
   cout<<cnt<<endl;
   for(ll I=0; I<N; I++) cout<<sol[I]<<" \n"[I+1==N];
   //WAIT;
}











