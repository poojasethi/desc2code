#include <stdio.h>
#include <map>
#include <algorithm>

using namespace std;

int main() {
	int c[10000], r[10000], p[10000];
	int n, m, x, y, i, sup, inf, count = 0;
	pair<int, int> pc[10000];
		
	scanf("%d", &n);
	for (i = 0; i<n; i++) {
		scanf("%d %d", &c[i], &r[i]);
		pc[i] = pair<int, int> (c[i], i);
		p[i] = -1;
	}
	
	sort(pc, pc + n);

	scanf("%d", &m);
	for (i = 0; i<m; i++) {
		scanf("%d %d", &x, &y);
		sup = n-1;
		inf = 0;
		while (1) {
			if (n == 1) break;
			if (pc[sup].first<x) {
				inf = sup - 1;
				break;
			}
			if (pc[inf].first>x) {
				sup = inf + 1;
				break;
			}
			if (pc[(sup+inf)/2].first<=x) inf = (sup + inf)/2; 
			else sup = (sup+inf)/2;
			if (sup == inf + 1) break;
		}
		if ( ((x-pc[inf].first)*(x-pc[inf].first)+y*y<=r[pc[inf].second]*r[pc[inf].second])&&(p[pc[inf].second] == -1) ) {
			p[pc[inf].second] = i+1;
			count++;
		}
		if ( ((x-pc[sup].first)*(x-pc[sup].first)+y*y<=r[pc[sup].second]*r[pc[sup].second])&&(p[pc[sup].second] == -1) ) {
			p[pc[sup].second] = i+1;
			count++;
		}


	}

	if (n == 1) count = count/2;
	printf("%d\n", count);
	for (i = 0; i<n; i++) printf("%d ", p[i]);
	return 0;
} 
