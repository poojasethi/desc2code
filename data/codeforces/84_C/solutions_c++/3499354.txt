#include <cstdio>
#include <algorithm>
#include <iostream>
using namespace std;
const int maxn=10000+5;
struct node
{
    int x,r,res,id;
}f[maxn];
int n;
bool judge(int x,int y,int p)
{
    if(p<0||p>=n) return false;
    if(f[p].res!=-1) return false;
    if((f[p].x-x)*(f[p].x-x)+y*y<=f[p].r*f[p].r)
        return true;
    return false;
}
bool cmp1(node a,node b)
{
    return a.x<b.x;
}
bool cmp2(node a,node b)
{
    return a.id<b.id;
}
int Bin(int x)
{
    int l=0,r=n-1;
    while(l<=r)
    {
        int m=(l+r)>>1;
        if(f[m].x>x) r=m-1;
        else l=m+1;
    }
    return l;
}
int main()
{
    int m;
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
        scanf("%d%d",&f[i].x,&f[i].r);
        f[i].id=i;
        f[i].res=-1;
    }
    sort(f,f+n,cmp1);
    scanf("%d",&m);
    int cnt=0;
    for(int i=1;i<=m;i++)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        int t=Bin(x);
        for(int k=-1;k<=1;k++){
            int p=t+k;
            if(judge(x,y,p)) f[p].res=i,cnt++;
        }
    }
    sort(f,f+n,cmp2);
    cout<<cnt<<endl;
    for(int i=0;i<n;i++)
        cout<<f[i].res<<" ";
    cout<<endl;
    return 0;
}