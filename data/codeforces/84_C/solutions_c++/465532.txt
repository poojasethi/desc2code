#include<cstdio>
#include<algorithm>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

struct Target{
	int id,x,r,hit;
	Target():hit(-1){}

	bool operator<(const Target &t)const{ return x<t.x; }
	bool operator<(int X)const{ return x+r<X; }

	bool contain(int X,int Y){ return (x-X)*(x-X)+(Y*Y)<=r*r; }
};

int main(){
	int n; scanf("%d",&n);
	Target tar[10000];
	rep(i,n){
		tar[i].id=i;
		scanf("%d%d",&tar[i].x,&tar[i].r);
	}
	sort(tar,tar+n);

	int m; scanf("%d",&m);
	rep(i,m){
		int x,y; scanf("%d%d",&x,&y);
		Target *p=lower_bound(tar,tar+n,x);
		if(p==tar+n) continue;

		Target &t=*p;
		if(t.contain(x,y)){
			if(t.hit==-1) t.hit=i+1;
		}
		if(p+1!=tar+n && (p+1)->contain(x,y)){ // double hits
			if((p+1)->hit==-1) (p+1)->hit=i+1;
		}
	}

	int ans[10000];
	rep(i,n) ans[tar[i].id]=tar[i].hit;
	printf("%d\n",n-count(ans,ans+n,-1));
	rep(i,n) printf("%d%c",ans[i],i<n-1?' ':'\n');

	return 0;
}
