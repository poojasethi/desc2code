#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>

using namespace std;
const int N=10005;
struct C
{
    int x,r,id;
}a[N];
int res[N],ans=0;

bool cmp(const C &a,const C &b)
{
    return a.x<b.x;
}

bool check(int x,int y,int k)
{
    if ((x-a[k].x)*(x-a[k].x)<=a[k].r*a[k].r-y*y) return true;
    return false;
}

int bs(int x,int y,int l,int r,int t)
{
    int mid;
    while (l<=r)
    {
        mid=(l+r)/2;
        if (res[a[mid].id]==-1)
        {
            if (check(x,y,mid)) {ans++; res[a[mid].id]=t;}
        }
        if (x>=a[mid].x+a[mid].r) l=mid+1; else r=mid-1;
    }
}


int main()
{
    int n,i,m,o,x,y,k;
    scanf("%d",&n);
    for (i=1; i<=n; i++)
      {scanf("%d%d",&a[i].x,&a[i].r); a[i].id=i;}
    sort(a+1,a+n+1,cmp);
    memset(res,-1,sizeof(res));
    scanf("%d",&o);
    for (i=1; i<=o; i++)
    {
        scanf("%d%d",&x,&y);
        bs(x,y,1,n,i);
    }
    printf("%d\n",ans);
    for (i=1; i<=n; i++) printf("%d ",res[i]);
}


