//UW 4feet
#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cmath>
#include <cstdlib>
#include <numeric>

using namespace std;
#define X first
#define Y second
#define FI first
#define SE second
#define ST first
#define ND second
#define MP make_pair
#define PB push_back
typedef long long LL;
typedef double D;
typedef long double LD;
typedef vector<int> VI;
typedef pair<int,int> PII;
#define REP(i,n) for (int i=0;i<(n);++i)
#define FOR(i,a,b) for (VAR(i,a);i<=(b);++i)
#define FORD(i,a,b) for(VAR(i,a);i>=(b);--i)
#define FORE(e,v) for(VAR(e,v.begin());e!=v.end();++e)
#define VAR(a,b) __typeof(b) a=(b)
#define SIZE(a) ((int)(a).size())
#define ALL(x) (x).begin(),(x).end()
#define CLR(x,a) memset(x,a,sizeof(x))

const int M = 100013;

set<LL> s;
int a[M], px[M];
vector<pair<D,PII> > t;
PII xx[M];

int main() {
    srand(1313);
    int n;
    scanf("%d",&n);
    REP(i,M) a[i] = i;
    a[0] = 1;
    LL sx = 0, sy = 0;
    REP(j,n+1)
    {
        int x = 0;
        LL r = 1LL*a[0]*a[0];
        REP(i,M) 
        {
            while(s.count(1LL*i*i + 1LL*a[i]*a[i])) a[i]++;
            if(1LL*i*i + 1LL*a[i]*a[i] < r) x = i, r = 1LL*i*i + 1LL*a[i]*a[i];
            if(a[i]==i) break;
        }
        if(rand()%2)
        {
            sx += x;
            sy += a[x];
            t.PB(MP(atan2(a[x],x),MP(x,a[x])));
        }
        else
        {
            sx += a[x];
            sy += x;
            t.PB(MP(atan2(x,a[x]),MP(a[x],x)));
        }
        s.insert(r);
        a[x]++;
    }
    FORD(i,SIZE(t)-1,1)
        if((sx-t[i].Y.X)%2 == (sy-t[i].Y.Y)%2)
        {
            sx -= t[i].Y.X;
            sy -= t[i].Y.Y;
            FOR(j,i,SIZE(t)-2) t[j] = t[j+1];
            t.pop_back();
            if(sx%2) 
                swap(t[0].Y.X,t[0].Y.Y);
            break;
        }   
    REP(i,n) xx[i] = MP(t[i].Y.X,i);
    sort(xx,xx+n);
    int ss = 0;
    FORD(i,n-1,0) if(ss <= 0)
        {
            ss += xx[i].X;
        }
        else
        {
            t[xx[i].Y].Y.X *= -1;
            ss -= xx[i].X;
        }
    if(ss) while(1);//return -1/0;
    REP(i,n) xx[i] = MP(t[i].Y.Y,i);
    sort(xx,xx+n);
    ss = 0;
    FORD(i,n-1,0) if(ss <= 0)
        {
            ss += xx[i].X;
        }
        else
        {
            t[xx[i].Y].Y.Y *= -1;
            ss -= xx[i].X;
        }
    if(ss) while(1);//return -1/0;
    REP(i,n) t[i].X = atan2(t[i].Y.Y, t[i].Y.X);
    sort(t.begin(),t.end());
    sx = 0, sy = 0;
    puts("YES");
    REP(i,n)
    {
        cout << sx << " " <<  sy << endl;
        sx += t[i].Y.X;
        sy += t[i].Y.Y;
    }
    return 0;
}