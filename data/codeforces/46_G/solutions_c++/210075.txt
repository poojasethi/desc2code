#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

#define M 100000
int dx[M],dy[M];

int x[10010],y[10010];

int main2(int N){
    int i,j;
    
//  cin >> N;
    
    for(i=0;i*i<M;i++) for(j=0;i*i+j*j<M;j++){
        dx[i*i+j*j] = i;
        dy[i*i+j*j] = j;
    }
    
    int c = 0, xsum = 0, ysum = 0;
    for(i=2;;i++) if(dx[i] != 0 || dy[i] != 0){
        x[c] = dx[i]; y[c] = dy[i]; xsum += dx[i]; ysum += dy[i]; c++;
        if(c == N) break;
    }
    if(xsum % 2 != ysum % 2) y[0] = 0;
    if(xsum % 2 != 0) REP(i,N) if(x[i] % 2 != y[i] % 2){
        swap(x[i],y[i]);
        break;
    }
    
    while(1){
        int X = 0, Y = 0;
        for(i=N-1;i>=0;i--){
            if(X > 0) x[i] = -x[i]; X += x[i];
            if(Y > 0) y[i] = -y[i]; Y += y[i];
        }
        if(X == 0 && Y == 0) break;
        
        REP(i,N){
            x[i] = abs(x[i]);
            y[i] = abs(y[i]);
        }
        
        while(1){
            int r = rand() % N;
            if(x[r] % 2 == y[r] % 2){
                swap(x[r],y[r]);
                break;
            }
        }
    }
    
//  cout << N << endl;
//  if(X != 0 || Y != 0) cout << "warning" << endl;
//  REP(i,N) cout << x[i] << ' ' << y[i] << endl;

    vector <pair <double, int> > v;
    REP(i,N){
        double theta = atan2(y[i],x[i]);
        v.push_back(make_pair(theta,i));
    }
    sort(v.begin(),v.end());
    
    printf("YES\n");
    xsum = 0; ysum = 0;
    REP(i,N){
        printf("%d %d\n",xsum,ysum);
        int id = v[i].second;
        xsum += x[id]; ysum += y[id];
    }
    
    return 0;
}

int main(void){
//  for(int i=3;;i++) main2(i);
    int N;
    cin >> N;
    main2(N);
    return 0;
}
