#include<bits/stdc++.h>
#define TF(ii,aa,bb) for(ll ii=aa;ii>=bb;ii--)
#define F(ii,aa,bb) for(ll ii=aa;ii<bb;ii++)
#define FI(ii,aa,bb) for(ll ii=aa;ii<=bb;ii++)
#define pb push_back
#define st first
#define MOD (1000000007)
#define nd second
#define mp make_pair
#define pii pair<int,int>
#define ll long long
#define inf (INT_MAX)
#define _inf (-inf)

using namespace std;

ll n,m,k;

class matrix{ public:
	ll n,A[55][55];
	matrix(){}
	ll* operator[](int x){
		return A[x];
	}
};
matrix operator*(matrix a,matrix b){
	matrix T;
	ll n=a.n,mul;
	FI(i,1,n) FI(j,1,n){
			mul=0;
			FI(k,1,n){
				mul+=a[i][k]*b[k][j];
				mul%=MOD;
			}
			T[i][j]=mul;
	}
	T.n=n;
	return T;
}
int toint(char ch){
	return (ch<'a')? ch-'A'+28 : ch-'a'+2;
}
matrix FE(matrix M,ll n){
	if(n==1) return M;
	matrix t=FE(M,n>>1);
	t=t*t;
	if(n&1) t=t*M;
	return t;
}
int main()
{
	char x,y;
	scanf("%lld %lld %lld",&n,&m,&k);
	matrix M,R;
	M.n=++m;
	FI(i,1,m) FI(j,1,m){
		M[i][j]=(j!=1);
	}
	FI(i,1,k){
		scanf(" %c %c",&x,&y);
		M[toint(x)][toint(y)]=0;
	}
	R=FE(M,n);
	int res=0;
	FI(i,1,m+1){
		res+=R[1][i];
		res%=MOD;
	}
	cout << res << endl;
	return 0;
}
