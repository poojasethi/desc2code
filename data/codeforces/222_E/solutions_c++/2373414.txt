#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
using namespace std;

typedef long long ll;
#define V(x) vector< x >

const ll P = 1e9+7;
ll n;
int m, k;
V(V(ll)) a;
ll ans = 0;

V(V(ll)) mult(V(V(ll)) a, V(V(ll)) b) {
  V(V(ll)) c(m, V(ll)(m));
  for (int i = 0; i < m; ++i)
    for (int j = 0; j < m; ++j)
      for (int l = 0; l < m; ++l)
        c[i][j] = (c[i][j]+a[i][l]*b[l][j]) % P;
  return c;
}

V(V(ll)) qpow(V(V(ll)) a, ll b) {
  V(V(ll)) ans(m, V(ll)(m));
  for (int i = 0; i < m; ++i)
    ans[i][i] = 1;
  while (b) {
    if (b & 1)
      ans = mult(ans, a);
    a = mult(a, a);
    b >>= 1;
  }
  return ans;
}

int main() {
  cin >> n >> m >> k;
  a.assign(m, V(ll)(m, 1));
  for (int i = 0; i < k; ++i) {
    char x, y;
    scanf(" %c%c", &x, &y);
    a[x >= 'a' ? x-'a' : x-'A'+26][y >= 'a' ? y-'a' : y-'A'+26] = 0;
  }
  
  a = qpow(a, n-1);
  for (int i = 0; i < m; ++i)
    for (int j = 0; j < m; ++j)
      ans = (ans+a[i][j]) % P;

  cout << ans << endl;
  return 0;
}
