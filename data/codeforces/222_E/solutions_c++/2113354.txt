#include<cstdio>
#include<cctype>

typedef long long Int;

struct mat {
  Int X[52][52];
};

const Int MO = 1000000007;
int M;

mat mul(mat A, mat B)
{
  mat C;
  for(int i=0; i<M; ++i)
    for(int j=0; j<M; ++j)
      C.X[i][j] = 0;
  for(int i=0; i<M; ++i)
    for(int j=0; j<M; ++j)
      for(int k=0; k<M; ++k)
        (C.X[i][j] += A.X[i][k] * B.X[k][j]) %= MO;
  return C;
}

mat pow(mat A, Int P)
{
  mat V;
  for(int i=0; i<M; ++i)
    for(int j=0; j<M; ++j)
      V.X[i][j] = (i==j ? 1 : 0);
  for(; P; P>>=1, A=mul(A,A))
    if(P&1) V=mul(V,A);
  return V;
}

int main()
{
  Int n;
  int k;

  scanf("%I64d%d%d", &n, &M, &k);

  mat K;
  for(int i=0; i<M; ++i)
    for(int j=0; j<M; ++j)
      K.X[i][j] = 1;
  
  for(int i=0; i<k; ++i) {
    char p[4];
    scanf("%s", p);

    int a = islower(p[0]) ? p[0]-'a' : p[0]-'A'+26;
    int b = islower(p[1]) ? p[1]-'a' : p[1]-'A'+26;

    K.X[b][a] = 0;
  }

  mat S = pow(K, n-1);

  Int sol = 0;
  for(int i=0; i<M; ++i)
    for(int j=0; j<M; ++j)
      (sol += S.X[i][j]) %= MO;

  printf("%I64d\n", sol);

  return 0;
}
