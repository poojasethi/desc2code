#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
using namespace std;
template<class T>inline void gmax(T &a,T b){if(a<b)a=b;}
template<class T>inline void gmin(T &a,T b){if(a>b)a=b;}

struct matrix{
	long long a[100][100];
};

const long long MOD=1000000007;
matrix mat,base;
int m,k;
long long ans,n;
char s[5];

int order(char c){
	return c<'a'?c-'A'+26:c-'a';
}

matrix mul(matrix a,matrix b){
	matrix res;
	for(int i=0;i<m;i++)
		for(int j=0;j<m;j++){
			res.a[i][j]=0;
			for(int k=0;k<m;k++){
				res.a[i][j]+=(a.a[i][k]*b.a[k][j])%MOD;
				res.a[i][j]%=MOD;
			}
		}
	return res;
}

int main(){
	cin>>n>>m>>k;
	//m*=2;
	for(int i=0;i<m;i++) mat.a[0][i]=1;
	for(int i=0;i<m;i++)	
		for(int j=0;j<m;j++)
			base.a[i][j]=1;
	while(k--){
		cin>>s;
		base.a[order(s[0])][order(s[1])]=0;
	}
	for(n--;n;n>>=1){
		if(n&1) mat=mul(mat,base);
		base=mul(base,base);
	}
	for(int i=0;i<m;i++)
		ans=(ans+mat.a[0][i])%MOD;
	cout<<ans<<endl;
}