#include <cstdio>
#include <cstring> 
#include <iostream>

using namespace std; 

const int MAX_N = 53;
const int mod = 1000000007;

struct Matrix {
	long long m[MAX_N][MAX_N];
};

int m, k;

Matrix mul(Matrix a, Matrix b) {
	Matrix matriX;
	memset(matriX.m, 0, sizeof matriX.m);
	for (int i = 0; i < m; ++i) {
		for (int j = 0; j < m; ++j) {
			for (int k = 0; k < m; ++k) {
				matriX.m[i][j] = (matriX.m[i][j] + (a.m[i][k] * b.m[k][j]) % mod) % mod;
			}
		}
	}
	return matriX;
}

int get(char ch) {
	if (islower(ch)) return ch - 'a';
	else if (isupper(ch)) return ch - 'A' + 26;
}

int main() {
	long long n;
	scanf("%I64d%d%d", &n, &m, &k);
	Matrix mat;
	for (int i = 0; i < m; ++i) {
		fill(mat.m[i], mat.m[i] + m , 1);
	}
	for (int i = 0; i < k; ++i) {
		char str[3];
		scanf("%s", str);
		mat.m[get(str[0])][get(str[1])] = 0;
	}
	Matrix t;
	for (int i = 0; i < m; ++i) {
		t.m[i][0] = 1;
	}
	
	--n;
	while (n > 0) {
		if (n & 1) t = mul(mat, t);
		mat = mul(mat, mat);
		n >>= 1;
	}
	long long ans = 0;
	for (int i = 0; i < m; ++i) {
		ans = (ans + t.m[i][0]) % mod;
	}
	
	printf("%I64d\n", ans);
	return 0;
} 
  			   			  		   					