#include <bits/stdc++.h>
using namespace std;
typedef unsigned long long ull;
typedef long long ll;
typedef vector<vector<ll> > mat;
ll n;
int m, k;
const int M = 1000000007;
mat mult(mat& a, mat& b) {
	int n = a.size();
	mat c(n, vector<ll>(n, 0));
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < n; ++j)
			for (int k = 0; k < n; ++k)
				c[i][j] = (c[i][j] + a[i][k] * b[k][j]) % M;
	return c;
}

mat power(mat& a, ll p) {
	if (p == 1)
		return a;
	mat c = power(a, p / 2);
	c = mult(c, c);
	if (p & 1)
		c = mult(c, a);
	return c;
}

char s1, s2;
int i1, i2;

inline int getInd(char s) {
	return (islower(s) ? s - 'a' : s - 'A' + 26);
}

int main() {
	scanf("%lld%d%d", &n, &m, &k);
	mat a(m + 2, vector<ll>(m + 2, 1));
	for (int i = 0; i <= m + 1; ++i)
		a[m][i] = a[i][m + 1] = 0;
	a[m + 1][m] = 0;
	while (k--) {
		getchar();
		i1 = getInd(getchar());
		i2 = getInd(getchar());
		a[i1][i2] = 0;
	}
	a = power(a, n + 1);
	printf("%lld", a[m + 1][m]);
	return 0;
}
