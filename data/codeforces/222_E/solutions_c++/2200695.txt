#include <cstdio>
#include <cstdlib>
#define REP for(int i=0;i<M;i++)for(int j=0;j<M;j++)
#define MO 1000000007
long long N,M,K;
struct matrix{
	long long val[52][52];
	matrix operator*(const matrix& other){
		matrix m(0);
		REP{
			m.val[i][j]=0;
			for(int k=0;k<M;k++)
			m.val[i][j]=(m.val[i][j]+val[i][k]*other.val[k][j])%MO;
		}
		return m;
	}
	matrix(bool X){REP val[i][j]=X||(i==j);}
	matrix pow(long long n){
		matrix a(0);
		matrix buf(1);
		buf=*this;
		if(n&1)a=buf;
		for(int i=1;(1LL<<i)<=n;i++){
			buf=buf*buf;
			if(n&(1LL<<i)) a=a*buf;
		}
		return a;
	}
};
int s(char c){return (c>='a')?(c-'a'):(c-'A'+26);}
int main(){
	scanf("%I64d%I64d%I64d",&N,&M,&K);
	matrix m(1);
	for(int i=0;i<K;i++){
		char c[3];
		scanf("%s",c);
		m.val[s(c[0])][s(c[1])]=0;
	}
	m=m.pow(N-1);
	int res=0;
	REP res=(res+m.val[i][j])%MO; 
	printf("%d\n",res);
}
