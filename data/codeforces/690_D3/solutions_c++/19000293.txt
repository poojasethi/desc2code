#include <bits/stdc++.h>

namespace FastIO {
	template <typename T>
	inline void readInteger(T& ret) {
		char ch = getchar();
		bool flag = false;
		while ((ch<'0' || ch>'9') && ch!='-') ch=getchar();
		if (ch == '-') {
			flag = true;
			ch = getchar();
		}
		ret = 0;
		while (ch>='0' && ch<='9') {
			ret = ret*10 + (ch-'0');
			ch = getchar();
		}
		if (flag) ret = -ret;
	}
	
	inline int nextInt() {
		int x;
		readInteger(x);
		return x;
	}
	
	inline long long nextLong() {
		long long x;
		readInteger(x);
		return x;
	}
	
	template <typename T>
	inline void outInteger(T x) {
		if (x < 0) {
			putchar('-');
			x = -x;
		}
		if (x >= 10) {
			outInteger(x / 10);
		}
		putchar(x % 10 + '0');
	}
	
	inline void newline () {
		putchar('\n');
	}
}

using namespace std;
using namespace FastIO;

#define NN 110
#define inf 0x3f3f3f3f
#define eps 1e-8
#define eprintf(...) fprintf(stderr, __VA_ARGS__)
#define MOD 1000003

typedef pair<int, int> pii;
typedef long long INT;

int H, W, C;
int N;

void multi(INT a[NN][NN], INT b[NN][NN], INT c[NN][NN]) {
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			c[i][j] = 0;
			for (int k = 0; k < N; k++) {
				c[i][j] += a[i][k] * b[k][j] % MOD;
			}
			c[i][j] %= MOD;
		}
	}
}

INT temp[NN][NN];
void pow(INT a[NN][NN], int m, INT b[NN][NN]) {
	if (m == 0) {
		for (int i = 0; i < N; i++) {
			for (int j = 0; j < N; j++) {
				if (i == j) b[i][j] = 1;
				else b[i][j] = 0;
			}
		}
		return ;
	}
	pow(a, m / 2, b);
	multi(b, b, temp);
	if (m & 1) {
		multi(temp, a, b);
	} else {
		for (int i = 0; i < N; i++)  {
			for (int j = 0; j < N; j++) {
				b[i][j] = temp[i][j];
			}
		}
	}
}

INT mat[NN][NN], ans[NN][NN];
int main() {
	scanf("%d%d%d", &C, &W, &H);
	
	INT cur = 1;
	
	N = W + 1;
	for (int i = 0; i < N; i++) {
		mat[0][i] = cur;
		cur = cur * H % MOD;
	}
	
	for (int i = 1; i < N; i++)
		mat[i][i - 1] = 1;
	
	pow(mat, C + 1, ans);
	
	printf("%I64d\n", ans[0][0]);
	
	return 0;
}
             