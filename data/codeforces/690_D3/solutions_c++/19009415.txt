#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <queue>
using namespace std;
int dp[110],tmp[110];
int MOD=1e6+3;
int dir[200];
int main(int argc, char const *argv[])
{
	int n,w,h;
	scanf("%d%d%d",&n,&w,&h);
	dir[0]=1;
	for (int i=1;i<=150;i++) dir[i]=dir[i-1]*h%MOD;
	// memset(dp,0,sizeof(dp));
	// dp[0]=1;
	// for (int i=0;i<n;i++){
	// 	memset(tmp,0,sizeof(tmp));
	// 	for (int j=1;j<=w;j++){
	// 		tmp[j]=dp[j-1]*(h)%MOD;
	// 		tmp[0]+=dp[j];
	// 	}
	// 	tmp[0]+=dp[0];
	// 	tmp[0]%=MOD;
	// 	memcpy(dp,tmp,sizeof(dp));
	// }
	long long sum=1;
	queue<long long>q;
	for (int i=0;i<w;i++) q.push(0);
	q.push(1);
	for (int i=0;i<n;i++){
		q.push(sum);
		long long x=q.front()*dir[min(i,w)]%MOD;
		sum=(sum-x)*h+sum;
		sum=(sum%MOD+MOD)%MOD;
		q.pop();
	}
	printf("%I64d\n",sum );
	// long long ans=0;
	// for (int i=0;i<=w;i++)
	// 	ans+=dp[i];
	// printf("%I64d\n",ans%MOD );
	return 0;
}