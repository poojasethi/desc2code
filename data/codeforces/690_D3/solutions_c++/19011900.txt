#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<queue>

using namespace std;
long long mod =1000003;
long long c,w,h;
vector<vector<long long> > mat;
long long mul(long long x,long long y){
	return (x*y)%mod;
}
long long add(long long x,long long y){
	return (x+y)%mod;
}
long long pow_mod(long long a,long long x){
	if(x==0LL) return 1LL;
	long long ans = pow_mod(a,x/2);
	ans=mul(ans,ans);
	if(x%2) ans=mul(ans,a);
	return ans;
}
vector<vector<long long> > mul_mat(vector<vector<long long> > a,vector<vector<long long> > b){
	vector<vector<long long> > c(w+1,vector<long long>(w+1,0LL));
	for(long long i=0;i<=w;i++){
		for(long long j=0;j<=w;j++){
			for(long long k=0;k<=w;k++){
				c[i][j]=add(c[i][j],mul(a[i][k],b[k][j]));
			}
		}
	}
	return c;

}
vector<vector<long long> > pow_mat(vector<vector<long long> > m,long long x){
	if(x==0){
		vector<vector<long long> > re(w+1,vector<long long>(w+1,0LL));
		for(long long i=0;i<=w;i++){
			re[i][i]=1LL;
		}
		return re;
	}
	vector<vector<long long> > re = pow_mat(m,x/2);
	re=mul_mat(re,re);
	if(x%2) re=mul_mat(re,m);
	return re;
}
int main(){
	cin>>c>>w>>h;
	mat.assign(w+1,vector<long long>(w+1,0LL));
	for(int j=0;j<=w;j++){
		mat[j][0]=pow_mod(h,j);
	}
	for(int i=0;i<=w;i++){
		if(i+1<=w) mat[i][i+1]=1;
	}
	/*for(int i=0;i<=w;i++){
		for(int j=0;j<=w;j++){
			cout<<mat[i][j]<<" ";
		}
		cout<<endl;
	}
	cout<<endl;*/
	mat=pow_mat(mat,c);
	/*for(int i=0;i<=w;i++){
		for(int j=0;j<=w;j++){
			cout<<mat[i][j]<<" ";
		}
		cout<<endl;
	}*/
	cout<<add(mat[0][0],mat[1][0])<<endl;

	return 0;
}
