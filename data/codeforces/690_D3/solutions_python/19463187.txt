///Gonna one hit
#include <bits/stdc++.h>
#define base ll(1e6+3)
using namespace std;
typedef long long ll;

struct Matrix{int r,c;ll ma[102][102];};
Matrix operator*(Matrix a,Matrix b)
{
    Matrix ans;
    ans.r = a.r;
    ans.c = b.c;
    for(int i = 0 ; i < a.r ; i++)
        for(int j = 0 ; j < b.c ; j++)
        {
            ans.ma[i][j] = 0;
            for(int k = 0 ; k < a.c ; k++)  ans.ma[i][j] = (ans.ma[i][j] + a.ma[i][k]*b.ma[k][j])%base;
        }
        return ans;
}
Matrix Pow(Matrix a,ll n)
{
    Matrix ans = a;
    n--;
    while(n > 0)
    {
        if(n%2 == 1)    ans = ans*a;
        a = a*a;
        n /= 2;
    }
    return ans;
}
int main()
{
    ll c,w,h;
    cin >> c >> w >> h;
    Matrix a;
    a.c = w+2;
    a.r = w+2;
    ll hh= h;
    ll hhh = h;
    memset(a.ma,0,sizeof(a.ma));
    for(int i = 2 ; i <= w+1 ; i++)
    {
        a.ma[i][1] = h;
        a.ma[i][0] = a.ma[i][1];
        a.ma[i-1][i] = 1;
        hhh = (hhh*hh)%base;
        h = (h+hhh)%base;
    }
    a.ma[0][0] = 1;
    a.ma[w+1][w+1] = 1;
    if(c <= w)
    {
        ll ans = 1;
        for(int i = 1 ; i <= c ; i++)   ans = (ans*(hh+1))%base;
        cout << ans;
        return 0;
    }
    a = Pow(a,c-w);
    Matrix ans;
    ans.r = 1;
    ans.c = w+2;
    ll tmp = 1;
    ans.ma[0][0] = 1;
    ans.ma[0][w+1] = 1;
    for(int i = w ; i >= 1 ; i--)
    {
        ans.ma[0][i] = (tmp*hh)%base;
        tmp = (tmp+ans.ma[0][i])%base;
        ans.ma[0][0] = (ans.ma[0][0]*(hh+1))%base;
    }
    ans = ans*a;
    cout << (ans.ma[0][0])%base;
}
