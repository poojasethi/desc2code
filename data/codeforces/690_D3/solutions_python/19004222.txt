#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <cmath>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <algorithm>

#define mp make_pair
#define pb push_back

using namespace std;

const int inf = 0x3f3f3f3f;

int s[201][201], g[201][201], v[201][201];

const int mod = 1e6 + 3;

int h, w, c;

void calc1()
{
	for (int i = 1; i <= w; i ++)
		for (int j = 1; j <= w; j ++)
			s[i][j] = g[i][j], g[i][j] = 0;

	for (int k = 1; k <= w; k ++)
		for (int i = 1; i <= w; i ++)
			for (int j = 1; j <= w; j ++)
			{
				g[i][j] += 1LL * s[i][k] * s[k][j] % mod;
				if (g[i][j] >= mod) g[i][j] -= mod;
			}
}

void calc2()
{
	for (int i = 1; i <= w; i ++)
		for (int j = 1; j <= w; j ++)
			s[i][j] = g[i][j], g[i][j] = 0;

	for (int k = 1; k <= w; k ++)
		for (int i = 1; i <= w; i ++)
			for (int j = 1; j <= w; j ++)
			{
				g[i][j] += 1LL * s[i][k] * v[k][j] % mod;
				if (g[i][j] >= mod) g[i][j] -= mod;
			}
}

void ksm(int x)
{
	if (x == 0)
	{
		for (int i = 1; i <= w; i ++)
			for (int j = 1; j <= w; j ++)
				if (i == j) g[i][j] = 1;
				else g[i][j] = 0;
		return ;
	}
	if (x == 1)
	{
		for (int i = 1; i <= w; i ++)
			for (int j = 1; j <= w; j ++)
				g[i][j] = v[i][j];
		return ;
	}
	ksm(x >> 1);
	calc1();
	if (x & 1) calc2();
}

int main( )
{
	scanf("%d %d %d", &c, &w, &h);
	++ w;
	for (int i = 1; i <= w; i ++)
		v[i][1] = 1;

	for (int i = 1; i < w; i ++)
		v[i][i + 1] = h;

	int ans = 0;
	ksm(c);
	for (int i = 1; i <= w; i ++)
		ans += g[1][i], ans %= mod;

	printf("%d\n", ans);
	return 0;
}
