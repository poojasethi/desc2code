#include <stdio.h>
#include <iostream>
#include <string.h>
#include <algorithm>
using namespace std;

#define M 1000003
#define W 105
typedef long long ll;

struct matrix{
	int size;
	ll d[W][W];
	matrix(int s){memset(d,0,sizeof(d));size=s;}
	matrix(){memset(d,0,sizeof(d));size=0;}
	void print(){
		for (int i=1;i<=size;i++) {
			for (int j=1;j<=size;j++) printf("%d ",d[i][j]);
			printf("\n");
		}
	}
};
matrix operator *(matrix a, matrix b){
	matrix p=matrix(a.size);
	for (int i=1;i<=a.size;i++) 
		for (int j=1;j<=a.size;j++) 
			for (int k=1;k<=a.size;k++) 
				p.d[i][j]=(p.d[i][j]+a.d[i][k]*b.d[k][j])%M;
	return p;
}

int h,w,c;
matrix power,product;
//int x[N],y[N];

void exponent(){
	product=matrix(w+1); 
	power=matrix(w+1);
	for (int i=1;i<=w+1;i++) product.d[i][i]=1;
	power.d[1][1]=1; power.d[2][1]=1;
	for (int i=2;i<=w+1;i++) {
		power.d[1][i]=(power.d[1][i-1]*h)%M;
		power.d[i][i-1]=1;
	}
	while (c) {
		if (c%2) product=product*power;
		power=power*power;
		c/=2;
	}
	//product.print();
}
void multiply(){
	//memset(x,0,sizeof(x)); x[1]=1;
	//for (int i=1;i<=w+1;i++) {
	//	y[i]=x[i]*product.d[i][i];
	//}
	printf("%d\n",product.d[1][1]);
}
void reader(){
	scanf("%d%d%d",&c,&w,&h); c++;
	exponent();
	multiply();
}
int main(){
	reader();
}