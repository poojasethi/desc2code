from itertools import permutations as P
import math
R=lambda:map(int,raw_input().split())
S=lambda x:sorted(map(tuple,map(sorted,x)))
a=[R() for _ in range(8)]
p=S(a)
A=lambda x,y:(x[0]+y[0],x[1]+y[1],x[2]+y[2])
M=lambda x,y:(x[0]-y[0],x[1]-y[1],x[2]-y[2])
D=lambda x,y:x[0]*y[0]+x[1]*y[1]+x[2]*y[2]
L=lambda x:D(x,x)
def F(x):
  t=int(math.sqrt(x)+0.2)
  return t*t==x
R=lambda x,y:() if x[0]%y or x[1]%y or x[2]%y else (x[0]/y,x[1]/y,x[2]/y)
for p0 in P(p[0]):
  for i in range(1,8):
    for j in range(1,8):
      if i!=j:
        for l in range(1,8):
          if i!=l and j!=l:
            for p1 in P(p[i]):
              for p2 in P(p[j]):
                for p3 in P(p[l]):
                  x,y,z=M(p1,p0),M(p2,p0),M(p3,p0)
                  s=L(x)
                  if s and s==L(y) and s==L(z) and 0==D(x,y) and 0==D(y,z) and 0==D(z,x):
                    p4=M(A(p1,p2),p0)
                    p5=M(A(p2,p3),p0)
                    w=[p0,p1,p2,p3,p4,p5,M(A(p3,p1),p0),M(A(p4,p5),p2)]
                    if p==S(w):
                      print 'YES'
                      for z in a:
                        for u in range(8):
                          if sorted(w[u])==sorted(z):
                            print ' '.join(map(str,w[u]))
                            w[u]=()
                            break
                      exit()
print 'NO'
