#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
#include <cstdio>
using namespace std;

#define lint long long
#define linf 1e18
int x[8][3];


lint p2(lint x){
  return x*x;
}
lint dist(int i, int j){
  lint d1= 0;
  for(int k = 0; k < 3; k++){
    d1 += p2(x[i][k]-x[j][k]);
  }
  return d1;
}
bool check(){
  lint len = linf, d;
  int n[3];
  for(int i = 0; i < 3; i++){
    n[i] = 0;
  }
  
  for(int i = 1; i < 8; i++){
    len = min(len, dist(0,i));
  }
  if(len == 0) return 0;
  
  for(int i = 0; i < 8; i++){
    for(int j = i+1; j < 8; j++){
      d = dist(i,j);
      if(d < len) return 0;
      if(d== len){
        n[0]++;
      }else if(d == 2*len){
        n[1]++;
      }else if(d == 3*len){
        n[2]++;
      }
    }
  }
  return (n[0] == 12 && n[1] == 12 && n[2] == 4);
}



int f(int i){
  if(i>= 8){
    return check();
  }
  for(int j = 0; j < 6; j++){
    if(f(i+1)) return 1;
    next_permutation(x[i],x[i]+3);
    
  }
  return 0;
}
int main(){
  for(int i = 0; i < 8; i++){
      for(int j = 0; j < 3; j++){
        scanf("%d", &x[i][j]);
      }
    }
  if(f(0)){
    printf("YES\n");
    for(int i = 0; i < 8; i++){
      for(int j = 0; j < 3; j++){
        printf("%d%c", x[i][j], j==2?'\n':' ');
      }
    }
  }else{
    printf("NO\n");
  }
  return 0;
}
