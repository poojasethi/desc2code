#include <cstdio>
#include <iostream>
#include <cmath>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long LL;
LL map[10][5];
LL a[10];

LL dist(int x,int y)
{
	return (map[x][1]-map[y][1])*(map[x][1]-map[y][1])+(map[x][2]-map[y][2])*(map[x][2]-map[y][2])+(map[x][3]-map[y][3])*(map[x][3]-map[y][3]);
}
int work(int x)
{
	int num=0;
	for (int i=1;i<=8;++i)
	{
		if (i==x) continue;
		++num;a[num]=dist(i,x);
	}
	sort(a+1,a+1+num);
	if (a[1]==0||a[1]!=a[2]||a[1]!=a[3]||a[4]!=a[5]||a[4]!=a[6]||a[4]!=2*a[1]||a[7]!=3*a[1]) return 0;
	return 1;
}
int check()
{
	for (int i=1;i<=8;++i)	if (!work(i)) return 0;
	printf("YES\n");
	for (int i=1;i<=8;++i)
	{
		for (int j=1;j<=3;++j) printf("%I64d ",map[i][j]);
		printf("\n");
		
	}
	return 1;
}
int dfs(int x)
{
	if (x==9) return check();
	sort(map[x]+1,map[x]+4);
	do
	{
		if (dfs(x+1)) return 1;;
	}while (next_permutation(map[x]+1,map[x]+4));
	return 0;
}
int main()
{
	for (int i=1;i<=8;++i) 
		for (int j=1;j<=3;++j) scanf("%I64d",&map[i][j]);
	if (!dfs(1)) printf("NO\n");
	return 0;
}
 	   				 				    	 		 		  	 	