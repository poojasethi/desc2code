#include <iostream>
#include <algorithm>
using namespace std;

typedef long long int64;

int64 points[8][3];

bool IsCube() {
  int64 squares[28];
  int id = 0;
  for (int i = 0; i < 8; ++i) {
    for (int j = i + 1; j < 8; ++j) {
      int64 d0 = points[i][0] - points[j][0];
      int64 d1 = points[i][1] - points[j][1];
      int64 d2 = points[i][2] - points[j][2];
      squares[id++] = d0 * d0 + d1 * d1 + d2 * d2;
    }
  }
  sort(squares, squares + 28);

  int64 unit = squares[0];
  return (unit &&
          unit == squares[11] &&
          unit * 2 == squares[12] &&
          unit * 2 == squares[23] &&
          unit * 3 == squares[24] &&
          unit * 3 == squares[27]);
}

bool Check(int id) {
  if (id == 8)
    return IsCube();

  sort(points[id], points[id] + 3);
  do {
    if (Check(id + 1))
      return true;
  } while (next_permutation(points[id], points[id] + 3));

  return false;
}

int main(void) {
  for (int i = 0; i < 8; ++i) {
    for (int j = 0; j < 3; ++j)
      cin >> points[i][j];
  }

  if (Check(1)) {
    cout << "YES\n";
    for (int i = 0; i < 8; ++i) {
      cout << points[i][0] << " "
           << points[i][1] << " "
           << points[i][2] << "\n";
    }
  } else {
    cout << "NO\n";
  }
}
