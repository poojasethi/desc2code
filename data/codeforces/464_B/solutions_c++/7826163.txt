#include <stdio.h>
int n=8,su[8][3],save[8][3];
bool flag;
long long get_dist(int a[],int b[]){
	int i;
	long long sum=0;
	for(i=0;i<3;i++){
		sum+=1LL*(a[i]-b[i])*(a[i]-b[i]);
	}
	return sum;
}
void back(int k){
	if(k==n){
		int i,j;
		long long dist=(1LL)<<60;
		for(i=0;i<n;i++){
			for(j=i+1;j<n;j++){
				if(get_dist(save[i],save[j])<dist)
					dist=get_dist(save[i],save[j]);
				if(dist==0)
					return ;
			}
		}
		int count[4]={0,},s;
		for(i=0;i<n;i++){
			for(j=i+1;j<n;j++){
				if(get_dist(save[i],save[j])%dist!=0)
					return ;
				if(get_dist(save[i],save[j])/dist<=3)
					count[get_dist(save[i],save[j])/dist]++;
			}
		}
		if(count[1]==12 && count[2]==12 && count[3]==4){
			flag=1;
			printf("YES\n");
			for(i=0;i<8;i++){
				for(j=0;j<3;j++)
					printf("%d ",save[i][j]);
				printf("\n");
			}
		}
		return ;
	}
	int a,b,c;
	for(a=0;a<3;a++){
		for(b=0;b<3;b++){
			if(a==b) continue;
			for(c=0;c<3;c++){
				if(a==c || b==c) continue;
				save[k][0]=su[k][a];
				save[k][1]=su[k][b];
				save[k][2]=su[k][c];
				back(k+1);
				if(flag) return ;
			}
		}
	}
}
int main(){
	int i,j;
	for(i=0;i<n;i++)
		for(j=0;j<3;j++)
			scanf("%d",&su[i][j]);
	for(i=0;i<3;i++)
		save[0][i]=su[0][i];
	back(1);
	if(!flag)
		printf("NO\n");
	return 0;
}

