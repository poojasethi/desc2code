#include <cstdio>
#include <algorithm>
typedef long long i64;

i64 c[9][3],d[9][9],m[9],x[9],s[9],t[9];

i64 sqr(i64 x)
{
    return x*x;
}
bool chk()
{
    for (int i=1;i<8;++i) for (int j=i+1;j<=8;++j)
        d[i][j]=d[j][i]=sqr(c[i][0]-c[j][0])+sqr(c[i][1]-c[j][1])+sqr(c[i][2]-c[j][2]);
    for (int i=1;i<=8;++i) 
    {
        s[i]=t[i]=0;
        x[i]=0;
        m[i]=0X1000000000000LL;
        for (int j=1;j<=8;++j) if (i!=j)
        {
            if (x[i]==d[i][j]) ++t[i];
            else if (x[i]<d[i][j]) x[i]=d[i][j],t[i]=1;
            if (m[i]==d[i][j]) ++s[i];
            else if (m[i]>d[i][j]) m[i]=d[i][j],s[i]=1;
        }
        if (x[i]!=x[1] || m[i]!=m[1] || s[i]!=3 || t[i]!=1) return false;
    }
    return true;
}
bool dfs(int p)
{
    if (p==9) return chk();
    for (int i=1;i<=6;++i)
    {
        if (dfs(p+1)) return true;
        std::next_permutation(c[p],c[p]+3);
    }
    return false;
}
int main()
{
    for (int i=1;i<=8;++i) for (int j=0;j<3;++j) scanf("%I64d",c[i]+j);
    if (dfs(1))
    {
        puts("YES");
        for (int i=1;i<=8;++i)
        {
            for (int j=0;j<3;++j) printf("%I64d ",c[i][j]);
            putchar('\n');
        }
    }
    else puts("NO");
    return 0;
}