#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;

const int inf=1000000005;
int n,k,m,a[100005],f[100005],b[100005],pos[100005],value[100005],len,pre[100005],gap[100005],all;
bool use[100005];
inline int countgap(int l,int r) {
	return gap[r]-gap[l-1];
}
inline int countnum(int l,int r) {
	return max(0,(int)(upper_bound(b+1,b+m+1,r)-lower_bound(b+1,b+m+1,l)));
}
int main() {
	scanf("%d",&n);
	n++; a[1]=0;
	for (int i=2;i<=n;i++) scanf("%d",&a[i]);
	a[++n]=inf;
	for (int i=1;i<=n;i++) gap[i]=gap[i-1]+(a[i]==-1);
	scanf("%d",&m);
	for (int i=1;i<=m;i++) scanf("%d",&b[i]);
	sort(b+1,b+m+1);
	int t=1;
	for (int i=2;i<=m;i++) if (b[i]!=b[t]) swap(b[i],b[++t]);
	all=m; m=t;
	pos[len=1]=1; f[1]=1;
	for (int i=2;i<=n;i++) {
		if (a[i]!=-1) {
			int l=1,r=len,ans=len+1;
			while (l<=r) {
				int mid=(l+r)>>1;
				if (value[mid]>=a[i]) ans=mid,r=mid-1; else l=mid+1;
			}
			if (ans>len) {
				pos[++len]=i; value[len]=a[i];
				f[i]=len; pre[i]=pos[len-1];
				if (a[pre[i]]==-1) pre[i]=-1;
			} else {
				pos[ans]=i; value[ans]=a[i];
				f[i]=ans; pre[i]=pos[ans-1];
				if (a[pre[i]]==-1) pre[i]=-1;
			}
		} else {
			for (int j=m,k=len;j;j--) {
				if (b[j]>value[len]) {
					pos[++len]=i; value[len]=b[j]; k=len; continue;
				}
				while (b[j]<=value[k-1]) k--;
				pos[k]=i; value[k]=b[j];
			}
		}
	}
	for (int p=pos[len];p;) {
		if (pre[p]==-1) {
			for (int i=p-1;i;i--) if (a[i]!=-1&&a[i]<a[p]&&f[p]-f[i]-1<=min(countgap(i,p),countnum(a[i]+1,a[p]-1))) {
				int t=upper_bound(b+1,b+m+1,a[i])-b;
				for (int j=i+1;j<p;j++) if (a[j]==-1) {
					while (t<=m&&use[t]) t++;
					if (use[t]||t>m) break;
					a[j]=b[t]; use[t]=true; t++;
				}
				p=i;
				break;
			}
		} else p=pre[p];
	}
	for (int i=2,j=1;i<n;i++) if (a[i]==-1) {
		while (use[j]) j++;
		a[i]=b[j]; use[j]=true; j++;
	}
	for (int i=2;i<n;i++) printf("%d ",a[i]);
	putchar('\n');
	return 0;
}
