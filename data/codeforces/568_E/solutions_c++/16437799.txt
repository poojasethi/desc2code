#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define orta (bas + son >> 1)
#define sag (k + k + 1)
#define sol (k + k)
#define endl '\n'
#define foreach(i,x) for(type(x)i=x.begin();i!=x.end();i++)
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define ROF(ii,aa,bb) for(int ii=aa;ii>=bb;ii--)
#define mp make_pair
#define nd second
#define st first
#define type(x) __typeof(x.begin())

typedef pair < int ,int > pii;

typedef long long ll;

const long long linf = 1e18+5;
const int mod = (int) 1e9 + 7;
const int logN = 17;
const int inf = 1e9;
const int N = 2e5 + 5;

int pre[N], bef[N], ans[N], len, n, m, a[N], b[N], x, y, z, cnt[N], cnt2[N], wh[N];
pii S[N];
map< int, int > h, w;

int main() {

	scanf("%d", &n);
	
	a[1] = -inf; a[n + 2] = inf; n = n + 2;
	
	FOR(i, 2, n - 1) {
		scanf("%d", &a[i]);
		if(a[i] == -1)
			pre[i]++;
	}

	FOR(i, 1, n) pre[i] += pre[i-1];
	
	scanf("%d", &m);
	
	FOR(i, 1, m) {
		scanf("%d", &b[i]);
		h[b[i]] = 1;
	}
	
	sort(b + 1, b + m + 1);

	FOR(i, 1, n) if(a[i] != -1) h[a[i]] = 1;
	
	int s = 0;
	
	foreach(it, h) { w[it->st] = ++s; wh[s] = it->st; }
	
	FOR(i, 1, n) if(a[i] != -1) a[i] = w[a[i]];
	
	FOR(i, 1, m) {
		b[i] = w[b[i]];
		cnt[b[i]] = 1;
		cnt2[b[i]]++;
	}

	FOR(i, 1, s) cnt[i] += cnt[i-1];

	FOR(i, 1, n) {
		if(a[i] != -1) {
			int ind = lower_bound(S, S + len, mp(a[i], -inf)) - S;
			S[ind] = mp(a[i], i);
			ans[i] = ind + 1;
			if(ind > 0) bef[i] = S[ind - 1].nd; 
			if(len == ind) len++;
		}
		else {
			int ind = len;
			ROF(i, m, 1) {
				while(ind > 0 && S[ind-1] >= mp(b[i], -inf)) ind--;
				S[ind] = mp(b[i], -1);
				if(ind == len) len++;
			}			
		}
	}

	int cur = n;

	while(cur > 1) {
		if(bef[cur] != -1) cur = bef[cur];
		else {
			ROF(i, cur - 1, 1) {
				if(a[i] != -1 && a[i] < a[cur] && min(pre[cur] - pre[i], cnt[a[cur]-1] - cnt[a[i]]) >= max(0, ans[cur] - ans[i] - 1)) {
					int need = max(0, ans[cur] - ans[i] - 1), ind = a[i] + 1;
					FOR(j, i+1, cur-1) {
						if(a[j] == -1) {
							while(!cnt2[ind]) ind++;
							a[j] = ind;
							cnt2[ind]--; ind++;
							need--;
							if(!need) break;
						}
					}
					FOR(j, 1, s)
						cnt[j] = cnt[j-1] + (cnt2[j] > 0);
					cur = i;
					break;
				}
			}
		}
	}

	FOR(i, 2, n - 1) {
		if(a[i] == -1) {
			FOR(j, 1, s)
				if(cnt2[j]) {
					a[i] = j;
					cnt2[j]--;
					break;
				}
		}
		cout << wh[a[i]] << ' ';
	}
	cout << endl;
	return 0;
}
