#include <iostream>
#define fo(i, n) for(i=0; i<n; i++)
#define Fo(i, k, n) for(i=k; i<n; i++)
#define ll long long
using namespace std;
const int mod = 1e9+7;
const int N = 2003;
ll dp[N][N];
int main() {
	int n, m;
	string a;
	cin>>n>>m;
	cin>>a;
	int b = 0, sm = 1e6+3;
	int i, j;
	fo(i, N){
		dp[1][i] = dp[0][i] = 0;
		dp[i][i] = 1;
	}
		
	Fo(i, 1, N)
	fo(j, i){
		if (j == 0)
			dp[i][j] = dp[i-1][j+1];
		else
			dp[i][j] = (dp[i-1][j-1]+dp[i-1][j+1])%mod;
	}
	
	fo(i, m){
		if (a[i] == '(')
			b++;
		else
			b--;
		sm = min(sm, b);
	}
	ll ans = 0;
	int begin = max(0, -sm);
	Fo(i, begin, n-m+1){
		Fo(j, begin, n-m-i-b+1){
			ans += (dp[i][j]*1LL*dp[n-m-i][j+b])%mod;
			ans %= mod;
		}
	}
	cout<<ans<<endl;
			
	
	
	return 0;
}