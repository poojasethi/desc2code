#include <cstdio>
#include <iostream>
#include <algorithm>
#include <set>
#include <cstring>
using namespace std;
set<int> ctr;
long long ans,now;
int n,i,j,k,A[100011],tot,x[1011],stu[59049],next[1011];
bool used[2048];
long long calc(long long X)
{
		 return (X*(X+1)*(2*X+1)/6+(X+1)*X/2)/2;
}
int quick(int x)
{
		int ans=0,i;
		for (i=1;x;i*=2,x/=10)
				if (x%10==7) ans+=i*2;
				else
				if (x%10==4) ans+=i;
				else				 return -1;
		return ans;
}
int main()
{
		scanf("%d",&n);
		for (i=1;i<=n;i++)
		{
				scanf("%d",&A[i]);
				A[i]=quick(A[i]);
				if (A[i]>=0) x[++tot]=i;
		}
		for (i=tot;i>=1;i--)
				next[i]=stu[A[x[i]]],stu[A[x[i]]]=i;
		x[tot+1]=n+1;
		for (i=1;i<=n;i++)
				ans+=(long long)i*(n-i)*(n-i+1)/2;
		for (i=1;i<=tot;i++)
		{
				ctr.clear();
				ctr.insert(n+1);
				now=0;
				for (j=i;j>0;j--)
				{
						if (next[j]>i)
						for (k=next[j];k;k=next[k])
						{
					 	 		ctr.insert(x[k]);
								set<int>::iterator X,Y;
								X=Y=ctr.find(x[k]);
								Y++;
								if (X==ctr.begin())
									 now+=(long long)(*Y-x[k])*((x[i+1]-x[i])*(x[k]-x[i+1])+(x[i+1]-x[i])*(x[i+1]-x[i]+1)/2);
								else
								{
									 X--;
									 now+=(long long)(x[i+1]-x[i])*(x[k]-*X)*(*Y-x[k]);
								}
						}
						ans-=(x[j]-x[j-1])*now;
				}
		}
		cout << ans << endl;
		return 0;
}