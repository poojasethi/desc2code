#include<cstdio>
#include<cstdlib>
#include<set>
#include<map>
#include<vector>
using namespace std;
#define pb(x) push_back(x)
#define maxn 100005
map<int,vector<int> > mm;
int a[100005];
int li[100005];
long long ans;
int n,m;
int islucky(int x) 
{	for (;x > 0;x /= 10)
		if ((x % 10) != 4 && (x % 10) != 7)
			return false;
	
	return true;
}
long long work()
{	int i,j,k,up_k,x;
	long long sum;
	set<int> visit,seg;
	set<int>::iterator itL,it,itR;
	for (i=1;i<=m;++i) 
	{	visit.clear();
		seg.clear();
		seg.insert(li[i]);
		seg.insert(n+1);
		sum=0;
		for (j=i;j>0;--j) 
		{	if (visit.find(a[li[j]])==visit.end()) 
			{	x=a[li[j]];
				visit.insert(x);
				vector<int> que=mm[x];
				up_k=que.size();
				for (k=0;k<up_k;++k)
					if (que[k]>li[i])
					{	it=seg.insert(que[k]).first;
						itL=itR=it;
						itL--,itR++;
						if (itL==seg.begin()) 
						{	sum+=(long long)(li[i+1]-li[i])*(li[i+1]-li[i]-1)/2*(*itR-*it);
							sum+=(long long)(li[i+1]-li[i])*(*it-li[i+1]+1)*(*itR-*it);
						} 
						else sum+=(long long)(li[i+1]-li[i])*(*it-*itL)*(*itR-*it);
					}
			}
			ans-=(long long)(li[j]-li[j-1])*sum;
		}
	}
	return ans;
}
int main()
{	int i,j;
	scanf("%d",&n);
	long long nn[4]={n-1,n,n+1,n+2};
	for (i=4;i>=2;--i) 
		for (j=0;j<4;++j)
			if (nn[j]%i==0)
			{	nn[j]/=i;
				break;
			}
	ans=nn[0]*nn[1]*nn[2]*nn[3];
	for (i=1;i<=n;++i)
	{	scanf("%d",&a[i]);
		if (islucky(a[i])) 
		{	mm[a[i]].pb(i);
			li[++m]=i;
		}
	}
	printf("%I64d\n",work());
	return 0;
}

	  	  		 	     	 		 					