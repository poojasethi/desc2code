#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<set>
#define maxn 100010
using namespace std;
typedef long long LL;
set<LL> Number;
LL ans,n,w[maxn];
int digit[maxn],nLuck;
int next[maxn];
bool isLucky(int p)
{
	for(;p;p/=10)
		if(p%10!=4&&p%10!=7)
			return false;
	return true;
}
void read()
{
	cin>>n;
	for(int i=1;i<=n;i++)
	{
		scanf("%d",&digit[i]);
		if(isLucky(digit[i]))
			w[++nLuck]=i;
		ans=ans+(n-i)*(n-i+1)/2*i;
	}
	for(int i=1;i<=nLuck;i++)
		for(int j=i+1;j<=nLuck;j++)
			if(digit[w[i]]==digit[w[j]])
			{
				next[i]=j;
				break;
			}
}
void work()
{
	set<LL>::iterator l,r;
	for(int i=1;i<=nLuck;i++)
	{
		Number.clear();
		Number.insert(w[i]);
		Number.insert(n+1);
		LL temp=0;
		for(int j=i;j>=1;j--)
		{
			if(next[j]>i)
				for(int k=next[j];k;k=next[k])
				{
					l=r=Number.insert(w[k]).first;
					l--,r++;
					LL L=*l,R=*r;
					if(L==w[i])
						temp=temp+((w[i+1]-w[i])*(w[i+1]-w[i]+1)/2+(w[i+1]-w[i])*(w[k]-w[i+1]))*(R-w[k]);
					else
						temp=temp+(w[i+1]-w[i])*(w[k]-L)*(R-w[k]);
				}
			ans=ans-temp*(w[j]-w[j-1]);
		}
	}
	cout<<ans<<endl;
}
int main()
{
 	read();
 	work();
 	return 0;
}
