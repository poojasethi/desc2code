#include <set>
#include <map>
#include <cstdio>
#include <cstring>
#include <algorithm>
#define ll long long
using namespace std;

typedef set<int>::iterator it;
int N,M,S,V[1005][1005],s[1005],a[1005],b[100005];
map<int,int> F;
set<int> Q;
bool bg[1005];

ll C(ll x) {return x*(x-1)/2;}

void init()
{
	scanf("%d",&N);
	for (int i=1,x,ok; i<=N; i++)
	{
		scanf("%d",&b[i]),x=b[i],ok=1;
		for (int y=x; ok&&y; y/=10) if (y%10!=4&&y%10!=7) ok=0;
		if (!ok) continue;
		if (!F[x]) F[x]=++S;
		V[F[x]][++s[F[x]]]=i,a[++M]=i;
	}
	a[0]=0,a[M+1]=N+1;
}

void doit()
{
	it x,y,z; ll ans=0,t;
	for (int i=1; i<=N; i++) ans+=C(i)*(N-i+1);
	for (int i=1; i<=M; i++)
	{
		Q.clear(),Q.insert(0),t=0,memset(bg,0,sizeof(bg));
		for (int j=i,p; p=F[b[a[j]]],j<=M; j++)
		{
			if (!bg[p]) for (int k=1,q; k<=s[p]&&(q=V[p][k])<a[i]; k++)
			{
				Q.insert(q),y=z=x=Q.find(q),y--,z++;
				if (z==Q.end()) t+=1ll*(q-*y)*(C(a[i]-a[i-1]+1)+(a[i-1]-q)*(a[i]-a[i-1]));
				else t+=1ll*(a[i]-a[i-1])*(*z-q)*(q-*y);
			}
			ans-=t*(a[j+1]-a[j]),bg[p]=1;
		}
	}
	printf("%I64d\n",ans);
}

int main()
{
	init();
	doit();
	return 0;
}