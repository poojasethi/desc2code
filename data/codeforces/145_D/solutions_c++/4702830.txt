#include<cstdio>
#include<set>
using namespace std;
const int maxn=100005;
int n,m,a[maxn],p[maxn],next[maxn];
long long ans;
set <int> q;
bool check(int x)
{
    while(x)
    {
        if(x%10!=4&&x%10!=7)return 0;
        x/=10;
    }
    return 1;
}
int main()
{
    scanf("%d",&n); 
    for(int i=1;i<=n;i++)
    {
        scanf("%d",&a[i]);
        if(check(a[i]))p[++m]=i;
    }
    for(int i=1;i<=m;i++)
    {
        next[i]=maxn;
        for(int j=i+1;j<=m;j++)
            if(a[p[i]]==a[p[j]])
            {
                next[i]=j;
                break;
            }
    }
    for(int i=1;i<=n;i++)ans+=(long long)i*(i+1)/2*(n-i);
    for(int i=1;i<=m;i++)
    {
        q.clear();
        q.insert(p[i]);
        q.insert(n+1);
        long long now=0;
        for(int j=i;j>=1;j--)
        {
            if(next[j]>i)
                for(int k=next[j];k<=m;k=next[k])
                {
                    set<int>::iterator x,y;
                    x=y=q.insert(p[k]).first;
                    x--;
                    y++;
                    if(*x==p[i])
                    {
                        now+=(long long)(p[i+1]-p[i])*(p[i+1]-p[i]+1)/2*(*y-p[k]);
                        now+=(long long)(p[i+1]-p[i])*(p[k]-p[i+1])*(*y-p[k]);
                    }
                    else
                    {
                        now+=(long long)(p[i+1]-p[i])*(p[k]-*x)*(*y-p[k]);
                    }
                }
            ans-=now*(p[j]-p[j-1]);
        }
    }
    printf("%I64d\n",ans);
    return 0;
}
