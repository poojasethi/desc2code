#include<cstdio>
#include<set>
using namespace std;
set<int> s;
typedef long long ll;
const int tt=100005;
const int kk=1005;
int a[tt],y[tt],x[tt];
bool pluck(int a){
    return !a?1:(a%10==4 || a%10==7)&& pluck(a/10);
}
ll c1(int a){
    return a*ll(a+1)/2;
}
ll sum(int a){
    return (a*ll(a+1)*(2*a+1)/6+a*ll(a+1)/2)/2;
}
ll c2(int a,int b){
    return sum(a-1)-sum(a-b-1);
}
int main(){
//  freopen("145d.in","r",stdin);
//  freopen("145d.out","w",stdout);
    ll res,ans;
    int n,i,cnt,j,k,bg,ed,lst;
    scanf("%d",&n);
    for (x[0]=0,i=cnt=1;i<=n;i++){
        scanf("%d",a+i);
        if (pluck(a[i])) x[cnt++]=i;
    }
    for (i=1;i<=n;i++) y[i]=0;
    for (i=1;i<cnt;i++){
        for (j=i+1;j<cnt && a[x[i]]!=a[x[j]];j++);
        y[x[i]]=j==cnt?0:x[j];
    }
    x[cnt]=n+1;
    for (res=0,i=cnt-1;i>=0;i--){
        s.clear();
        s.insert(x[i]),s.insert(n+1),ans=c2(n-x[i]+1,x[i+1]-x[i]);
        for (j=1;j<x[i+1]-x[i];j++)
            res+=c2(n-x[i]+1-j,x[i+1]-x[i]-j);
        if (i==0) break;
        for (lst=x[i],j=i;j;j--) if (y[x[j]]>x[i]){
            res+=(lst-x[j])*ans;
            for (k=y[x[j]];k;k=y[k]){
                set<int>::iterator it=s.lower_bound(k);
                ed=*(it--);
                bg=*it;
                if (bg!=x[i])
                    ans-=(c1(ed-bg-1)-c1(ed-k-1)-c1(k-bg-1))*(x[i+1]-x[i]);
                else
                    ans-=c2(ed-bg,x[i+1]-x[i])-c1(ed-k-1)*(x[i+1]-x[i])-c2(k-bg,x[i+1]-x[i]);
                s.insert(k);
            }
            lst=x[j];
        }
        res+=lst*ans;
    }
    printf("%I64d\n",res);
    return 0;
}
