#include<cstdio>
#include<set>
#define fo(i,a,b) for(i=a;i<=b;++i)
#define fd(i,a,b) for(i=a;i>=b;--i)
using namespace std;
typedef long long LL;
const int mn=101000;
int n,m,i,j,k;
int a[mn],b[mn],next[mn],L;
LL ans,now;
set<int>T;
set<int>::iterator A,B;
bool check(int x)
{
    for(;x;x/=10)
        if(x%10!=4&&x%10!=7)return 0;
    return 1;
}
int main()
{
    scanf("%d",&n);
    fo(i,1,n)
    {
        scanf("%d",a+i);
        if(check(a[i]))b[++L]=i;
    }
    ans=(unsigned long long)(n-1)*n/2*(n+1)/3*(n+2)/4;
    fo(i,1,L)
    {
        next[i]=L+1;
        fo(j,i+1,L)
            if(a[b[i]]==a[b[j]]){next[i]=j;break;}
    }
    fo(i,1,L-1)
    {
        T.clear();
        T.insert(b[i]),T.insert(n+1);
        now=0;
        fd(j,i,1)
        {
            if(next[j]>i)
            for(k=next[j];k<=L;k=next[k])
            {
                A=B=T.insert(b[k]).first;
                --A,++B;
                if(A==T.begin())
                {
                    now+=(long long)(*B-b[k])*(b[i+1]-b[i]+1)*(b[i+1]-b[i])/2;
                    now+=(long long)(*B-b[k])*(b[k]-b[i+1])*(b[i+1]-b[i]);
                }
                else now+=(long long)(*B-b[k])*(b[k]-*A)*(b[i+1]-b[i]);
            }
            ans-=now*(b[j]-b[j-1]);
        }
    }
    printf("%I64d\n",ans);
    return 0;
}