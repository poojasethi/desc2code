#include <cstdio>
#include <iostream>
#include <set>
using namespace std;
unsigned long long int p[10000],a[10000];int next[10000];
unsigned long long int ans,n;
set<int> S;
bool chk(int x)
{
  while(x>0)
    {
      int dig = x%10;
      if(dig != 4 && dig != 7) return false;
      x /= 10;
    }
  return true;
}
int main()
{
  //freopen("d.in","r",stdin);
  //freopen("d.out","w",stdout);
  int num,i,j,m=0,k;
  set<int>::iterator iter1,iter2;
  cin>>n;
  for(i=1;i<=n;i++)
    {
      scanf("%d",&num);
      if(chk(num))
	{p[++m] = i; a[m] = num;}
    }
  for(i=1;i<=m;i++)
    {
      for(j=i+1;j<=m;j++)
	if(a[i] == a[j]) break;
      next[i] = j;
    }
  p[m+1] = n+1;
  ans = (unsigned long long int)(((n+2)*(n+1)/2)*n)/3*(n-1)/4;
  for(i=1;i<=m;i++)
    {
      S.clear(); long long int tmp = 0;
      S.insert(i); S.insert(m+1);
      for(j=i;j>=1;j--)
	{
	  if(next[j] > i)
	    for(k=next[j];k<=m;k=next[k])
	      {
		iter1 = iter2 = S.insert(k).first;
		iter1--; iter2++;
		if(*iter1 > i)
		  tmp += (long long int)(p[*iter2]-p[k])*(p[k]-p[*iter1])*(p[i+1]-p[i]);
		else{
		  tmp += (long long int)(p[k]-p[i]+1)*(p[k]-p[i])/2*(p[*iter2]-p[k]);
		  tmp -= (long long int)(p[k]-p[i+1]+1)*(p[k]-p[i+1])/2*(p[*iter2]-p[k]);
		}
	      }
	  ans -= (long long int)(p[j]-p[j-1])*tmp; 
	}
    }
  cout<<ans;
}
