/*
Author: LJQ
PROG: Codeforces #104 Div1 D. Lucky Pair
DATE: 2012.12.22
*/
#include <set>
#include <cstdio>

using namespace std;

const int maxm = 1005;
const int maxn = 100005;

typedef long long LL;

int num[maxn];
int key[maxm], next[maxm];
int n, m; LL ret;

bool islucky(int x)
{
	while (x){
		int d = x % 10;
		if (d != 4 && d != 7) return 0;
		x /= 10;
	}
	return 1;
}

void init()
{
	scanf("%d", &n); m = 0;
	for (int i = 1; i <= n; i ++){
		scanf("%d", &num[i]);
		if (islucky(num[i])) key[++ m] = i;
	}
}

set <int> H;

void work()
{
	//next
	for (int i = 1; i <= m; i ++){
		next[i] = n + 1;
		for (int j = i+1; j <= m; j ++)
			if (num[key[j]] == num[key[i]]){next[i] = j; break;}
	}
	//init
	LL a = n-1, b = n, c = n+1, d = n+2;
	if (b & 1){
		a >>= 1; c >>= 1; if (a & 1) c >>= 1; else a >>= 1;
	} else {
		b >>= 1; d >>= 1; if (b & 1) d >>= 1; else b >>= 1;
	}
	if (a % 3 == 0) a /= 3; else if (b % 3 == 0) b /= 3; else c /= 3;
	ret = a * b * c * d;
	//calculate
	for (int i = 1; i < m; i ++){
		H.clear(); H.insert(key[i]); H.insert(n + 1);
		LL cur = 0;
		for (int j = i; j >= 1; j --){
			if (next[j] > i){
				for (int k = next[j]; k <= m; k = next[k]){
					set <int>::iterator x, y;
					x = y = H.insert(key[k]).first;
					x --; y ++;
					if (*x == key[i]){//(j-1, j] => [i, i+1, 2] or [i, i+1) with (i+1, k] => [k, y)
						cur += ((LL)key[i+1] - key[i]) * (key[i+1] - key[i] + 1) / 2 * (*y - key[k]);
						cur += ((LL)key[i+1] - key[i]) * (key[k] - key[i+1]) * (*y - key[k]);
					} else {//(j-1, j] => [i, i+1) vs (x, k] => [k, y)
						cur += ((LL)key[i+1] - key[i]) * (key[k] - *x) * (*y - key[k]);
					}
				}
			}
			ret -= cur * (key[j] - key[j - 1]);
		}
	}
}

void print()
{
	printf("%I64d\n", ret);
}

int main()
{
	init();
	work();
	print();
	return 0;
}
