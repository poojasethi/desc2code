#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<algorithm>
#include<set>
using namespace std;
typedef long long LL;
const int N=100100,NN=1010,inf=1<<30;
int n,m,len=0;
LL ans;
int a[N],b[NN],nt[NN];
set<int>s;
set<int>::iterator A,C;
bool ok(const int x)
{
	for(int i=x;i>0;i/=10) 
		if ( i%10!=4 && i%10!=7 ) return 0;
	return 1;
}
int main()
{
	scanf("%d",&n);
	for(int i=1;i<=n;++i)
	{
		scanf("%d",&a[i]);
		if ( ok(a[i]) ) b[++len]=i;
	}
	b[0]=0;
	ans=(LL)(n-1)*n/2*(n+1)/3;
	if ( ans%4==0 ) ans/=4,ans*=n+2;
	else if ( ans%2==0 ) ans/=2,ans*=(n+2)/2;
	else ans*=(n+2)/4;
	for(int i=1;i<=len;++i)
	{
		nt[i]=inf;
		for(int j=i+1;j<=len;++j)
		if ( a[b[i]]==a[b[j]] ){	nt[i]=j;	break;}
	}
	for(int i=1;i<len;++i)
	{
		s.clear();
		s.insert(b[i]),s.insert(n+1);
		LL now=0;
		for(int j=i;j>0;--j)
		{			
			if ( nt[j]>i )
				for(int k=nt[j];k<=len;k=nt[k]  )
				{
					s.insert(b[k]);
					A=C=s.find(b[k]);
					--A,++C;
					if ( A==s.begin())
					{
						now+=(LL)(*C-b[k])*(b[i+1]-b[i]+1)*(b[i+1]-b[i])/2;
						now+=(LL)(*C-b[k])*(b[k]-b[i+1])*(b[i+1]-b[i]);
					}else now+=(LL)(*C-b[k])*(b[k]-*A)*(b[i+1]-b[i]);
				}
			ans-=now*(b[j]-b[j-1]);
		}
	}
	cout<<ans<<endl;
	return 0;
}