#include <cstdio>
#include <cstring>
#include <algorithm>
#include <set>
using namespace std;

#define fi first
#define se second

typedef unsigned long long i64;

const int maxn = 200001;

int n,m;
i64 ans,del;
i64 A[maxn],B[maxn],pre[maxn];
set < i64 > setle;

int lucky(int x)
{
    for (; x; x /= 10) if (x % 10 != 4 && x % 10 != 7) return 0;
    return 1;
}

int main()
{
    int i,j,k,l,r;
    set < i64 >::iterator he,sh;

    scanf("%d",&n);
    ans = (unsigned long long)n*(n-1)*(n+1)/6*(n+2)/4;
    for (i = 1; i <= n; ++i)
    {
        scanf("%I64d",&A[i]);
        if (lucky(A[i])) B[++m] = i;
    }
    B[++m] = n+1;
    for (i = 1; i <= m; ++i)
        for (j = 1; j < i; ++j)
        if (A[B[i]] == A[B[j]]) pre[i] = j;
    for (i = 1; i <= m; ++i)
    {
        del = 0,setle.clear(),setle.insert(0);
        for (j = i+1; j < m; ++j)
        {
            if (pre[j] <= i)
                for (k = pre[j]; k; k = pre[k])
                {
                    he = setle.insert(B[k]).fi,sh = he;
                    he--,sh++;
                    l = *he,r = *sh;
                    if (sh == setle.end()) del += (B[k]-l)*((B[i+1]-B[i])*(B[i+1]-B[i]+1)/2+(B[i+1]-B[i])*(B[i]-B[k]));
                    else del += (B[k]-l)*(r-B[k])*(B[i+1]-B[i]);
                }
            ans -= (B[j+1]-B[j])*del;
        }
    }
    printf("%I64d",ans);

    return 0;
}
