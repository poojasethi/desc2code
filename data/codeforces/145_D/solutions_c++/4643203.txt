#include <cstdio>
#include <cstring>
#include <map>
#include <set>
#include <vector>
#include <algorithm>
using namespace std;

map <int, vector<int> > pos;
long long C[100010][10];
long long b[1010];
int a[1010];
bool check(int x)  
{  
    while (x)  
    {  
        if (x%10!=4 && x%10!=7) return false;  
        x/=10;  
    }  
    return true;  
}  

int main()
{
	int n;
	scanf("%d",&n);
	int x,cnt=0;
	for (int i = 0; i < n; i++)
	{
		scanf("%d",&x);
		if (check(x))
		{
			a[cnt]=x,b[cnt++]=i;
			pos[x].push_back(i);
		}
	}

	C[0][0]=1;
	for (int i=1; i <= n+2; i++)
		for (int j=0; j <= 4; j++)
		{
			C[i][j]=C[i-1][j];
			if (j!=0) C[i][j]+=C[i-1][j-1];
		}
	long long ans=C[n+2][4];
	b[cnt] = n;
	set <int> ss,ss2;set<int>::iterator pp,ll,rr;
	for (int i = 0; i < cnt; i++)
	{
		ss.clear(),ss2.clear();
		ss.insert(-1),ss.insert(b[i]);
		long long ansi = 0;
		for (int j = i; j<cnt; j++)
		{
			if (ss2.find(a[j])==ss2.end())
			{
				ss2.insert(a[j]);
				for (int k=0; k < pos[a[j]].size(); k++)
					if (pos[a[j]][k] < b[i])
					{
						ss.insert(pos[a[j]][k]);
						ll=rr=pp=ss.find(pos[a[j]][k]);
						ll--,rr++;
						if (*rr==b[i])
							ansi += ((b[i]-*pp)*(b[i]-b[i-1])-(b[i]-b[i-1]-1)*(b[i]-b[i-1])/2)*(*pp-*ll);
						else
							ansi += (*pp-*ll)*(*rr-*pp)*(b[i]-b[i-1]);
					}
			}
			ans-=ansi*(b[j+1]-b[j]);
		}
	}
	printf("%I64d\n",ans);
	return 0;
}