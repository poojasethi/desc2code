#include <iostream>
#include <vector>
#include <utility>
using namespace std;

#define forn(i, n, k) for(int i = n; i < k; i++)

int abs(int x);
int abs(int x) { return (x < 0 ? -x : x); }

int min(int x, int y);
int min(int x, int y) { return (x < y ? x : y); }

int max(int x, int y);
int max(int x, int y) { return (x < y ? y : x); }

int main() {
	int hor, ver;
	cin >> ver >> hor;
	
	vector<pair<pair<int, int>, pair<int, int> > > hori, veri;
	
	int x, y, l;
	forn(i, 0, ver) {
		cin >> x >> y >> l;
		veri.push_back(make_pair(make_pair(x, y), make_pair(x, y + l)));
	}
	forn(i, 0, hor) {
		cin >> x >> y >> l;
		hori.push_back(make_pair(make_pair(x, y), make_pair(x + l, y)));
	}
	
	int res = 0;
	forn(i, 0, ver) {
		x = ((veri[i]).first).first;
		int yo = ((veri[i]).first).second;
		int yf = ((veri[i]).second).second;
		forn(j, 0, hor) {
			y = ((hori[j]).first).second;
			int xo = ((hori[j]).first).first;
			int xf = ((hori[j]).second).first;
			int md = min(min(abs(x - xo), abs(xf - x)), min(abs(y - yo), abs(yf - y)));

/*			cout << "(x,y) = (" << x << "," << y << ")" << endl;
			cout << "maximum distance = " << md << endl;
			cout << "current res = " << res << endl;
			cout << "md > res? " << (md > res) << endl;*/
			// the intersecting point is (x, y)
			if (xo < x && x < xf && yo < y && y < yf && md > res) res = md;
//			cout << "after res = " << res << endl;
		}
	}
	
	cout << res << endl;
	
	return 0;
}
