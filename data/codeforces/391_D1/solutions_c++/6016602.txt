#include <iostream>
#include <set>
#include <map>
#include <vector>
#include <cmath>
#include <string>
#include <cstring>
#include <algorithm>
#include <queue>
using namespace std;

const int N = 5e5 + 5;

#define X1 first.first
#define Y1 first.second
#define X2 second.first
#define Y2 second.second

typedef pair <int, int> Point;
typedef pair <Point, Point> Line;

Line v[N];
int n, m, sol;

int intersection (Line a, Line b) {
    if (a.Y2 <= b.Y1 || a.Y1 >= b.Y1 || a.X1 >= b.X2 || a.X1 <= b.X1)
        return 0;
    int x[2];
    x[0] = min (b.Y1 - a.Y1, a.Y2 - b.Y1);
    x[1] = min (b.X2 - a.X1, a.X1 - b.X1);
    return min(x[0], x[1]);
}

int main() {
    cin >> n >> m;
    for (int i = 0; i < n; ++i) {
        int l;
        cin >> v[i].X1 >> v[i].Y1 >> l;
        v[i].X2 = v[i].X1;
        v[i].Y2 = v[i].Y1 + l;
    }
    for (int i = 0; i < m; ++i) {
        Line L; int l;
        cin >> L.X1 >> L.Y1 >> l;
        L.X2 = L.X1 + l;
        L.Y2 = L.Y1;
        for (int j = 0; j < n; ++j)
            sol = max(sol, intersection (v[j], L));
    }
    cout << sol;

}

