//Done by Mycroft Grey
//Fet per Ferran Alet

#include<iostream>
#include<cmath>
#include<iomanip>
#include<vector>
#include<map>
#include<queue>
#include<fstream>
#include<algorithm>
#include<string>
#include<stack>
#include<numeric>
#include<set>
#include<sstream>
#include<list>

#define INF 2147483647
#define LINF 1000000000000000000LL
#define EPS 1e-9
#define debug(x) cerr << #x << " = " << x << endl
#define Debug(v) cerr << #v << " = "; for(int wow=0;wow<v.size();++wow) cerr<<v[wow]<<' '; cerr<<endl
#define FOR(x,y) for(int x=0;x<y;x++)
#define FORU(x,y) for(int x=1;x<=y;x++)
#define RFOR(x,y) for(int x=y-1;x>=0;--x)
using namespace std;


typedef long long ll;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef vector<double> VD;
typedef vector<VD> VVD;
typedef vector<bool> VB;
typedef vector<VB> VVB;
typedef vector<string> VS;
typedef map<int,int> MII;
typedef MII::iterator iMII;
typedef vector<PII > VP;

struct hor{
  int y;
  int xi;
  int xf;
};

struct ver{
  int x;
  int yi;
  int yf;
};

int main(){
//   ios_base::sync_with_stdio(false);
  int n;
  int m;
  cin>>n>>m;
  vector<ver> v(n);
  vector<hor> w(m);
  FOR(i,n) {
    cin>>v[i].x>>v[i].yi>>v[i].yf;
 //   v[i].xi-=v[i].xf;
    v[i].yf=v[i].yi+v[i].yf;
  }
  FOR(i,m){
    cin>>w[i].xi>>w[i].y>>w[i].xf;
   // w[i].yi-=w[i].yf;
    w[i].xf=w[i].xi+w[i].xf;
  }
 // FOR(i,n) cerr<<v[i].x<<" des de "<<v[i].yi<<" fins a "<<v[i].yf<<endl;
 // FOR(i,m) cerr<<w[i].y<<" des de "<<w[i].xi<<" fins a "<<w[i].xf<<endl;
  int res=0;
  FOR(i,n){
    FOR(j,m){
      //if(v[i].y>=w[j].yi && v[i].y<=w[j].yf && w[j].x>=v[i].xi && w[j].x<=v[i].xf){
        int length=min(min(v[i].x-w[j].xi,w[j].xf-v[i].x),min(w[j].y-v[i].yi,v[i].yf-w[j].y));
        res=max(length,res);
      //}
    }
  }
  cout<<res<<endl;
  //system("pause");
}
