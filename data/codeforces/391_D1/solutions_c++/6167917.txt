#include <cmath>
#include <map>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <set>
#include <bitset>
#include <memory.h>
#include <functional>
#include <queue>
#include <fstream>
#include <ctime>
#include <deque>
#include <utility>
#include <stack>
#include <sstream>
#include <list>
#include <cctype> 
#include <numeric> 
using namespace std;
#define sqr(_) ((_)*(_))

typedef long long LL;

typedef pair<int, int> Pii;
typedef pair<Pii, int> Ppi;
#define x first
#define y second
#define mp make_pair
#define pb push_back

const int MAXN = 50000 + 10;

int n, m;
Ppi ns[MAXN], ew[MAXN];
vector<Pii> w;
set<int> s;

bool check(int d)
{
	w.clear(); s.clear();
	for (int i = 1; i <= m; ++i)
		if (ew[i].y >= d)
			w.pb(mp(ew[i].x.x - ew[i].y + d, -i)),
			w.pb(mp(ew[i].x.x + ew[i].y - d, n + i));
	for (int i = 1; i <= n; ++i)
		if (ns[i].y >= d)
			w.pb(mp(ns[i].x.x, i));
	sort(w.begin(), w.end());
	for (int i = 0; i < (int)w.size(); ++i)
		if (w[i].y < 0)
			s.insert(ew[-w[i].y].x.y);
		else
		if (w[i].y > n)
			s.erase(ew[w[i].y - n].x.y);
		else
		if (s.lower_bound(ns[w[i].y].x.y - ns[w[i].y].y + d) != s.upper_bound(ns[w[i].y].x.y + ns[w[i].y].y - d))
			return true;
	return false;
}
int Find(int l, int r)
{
	while (l <= r)
	{
		int mid = (l + r) >> 1;
		if (check(mid))
			l = mid + 1;
		else
		r = mid - 1;
	}
	return r;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout);
#endif
	scanf("%d%d", &n, &m);
	int mx = 0;
	for (int i = 1; i <= n; ++i)
	{
		int x, y, l;
		scanf("%d%d%d", &x, &y, &l);
		x *= 2, y *= 2;
		ns[i] = mp(mp(x, y + l), l);
		mx = max(mx, l);
	}
	for (int i = 1; i <= m; ++i)
	{
		int x, y, l;
		scanf("%d%d%d", &x, &y, &l);
		x *= 2, y *= 2;
		ew[i] = mp(mp(x + l, y), l);
		mx = max(mx, l);
	}
	cout << Find(0, mx) / 2 << endl;
	fclose(stdin);
	fclose(stdout);
	return 0;
}

