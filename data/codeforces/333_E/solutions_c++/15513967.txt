#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<bitset>
using namespace std;
const int maxn=3005;
struct node
{
    int len,x,y;
}d[maxn*maxn];
bool cmp(node a,node b)
{
    return a.len>b.len;
}
bitset<maxn> f[maxn],t;
int x[maxn],y[maxn],a[maxn][maxn];
int main()
{
    int n,i,j,cnt=0;
    scanf("%d",&n);
    for (i=1;i<=n;++i) scanf("%d%d",&x[i],&y[i]);
    for (i=1;i<n;++i)
        for (j=i+1;j<=n;++j)
        {
            a[i][j]=(x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]);
            ++cnt;
            d[cnt].len=a[i][j];d[cnt].x=i;d[cnt].y=j;
        }
    sort(d+1,d+cnt+1,cmp);
    for (i=1;i<=n;++i) f[i].reset();
    for (i=1;i<=cnt;++i)
    {
        f[d[i].x].set(d[i].y);
	f[d[i].y].set(d[i].x);
	t=f[d[i].x]&f[d[i].y];
	if (t.count()>0)
	{
		printf("%.8lf\n",sqrt(d[i].len)/2);
		break;
	}

    }
    return 0;
}

	 	 			  	 	  	         	   	