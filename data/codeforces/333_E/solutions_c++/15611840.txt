#include<cstdio>
#include<cmath>
#include<algorithm>
#include<bitset>
using namespace std;
#define N 3001
struct seg{
	int x, y;
	double dis;
}a[N*N];

int get(){
	int tmp = 0, bj = 1;
	char c;
	while((c = getchar()) < '0' || c > '9'){
		if(c == '-')bj = -1;
	};
	while('0' <= c && c <= '9')tmp = tmp*10+c-'0', c = getchar();
	return tmp*bj; 
}

int n, x[N], y[N], m;
bitset<N>bj[N];

inline bool cmp(const seg &lhs, const seg &rhs){
	return lhs.dis > rhs.dis;
}

int main(){
	int i, j;
	n = get();
	m = 0;
	for(i = 1; i <= n; ++i){
		x[i] = get();
		y[i] = get();
		bj[i].reset();
		for(j = 1; j < i; ++j){
			a[m].dis = sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
			a[m].x = i;
			a[m++].y = j;
		}
	}
	sort(a, a+m, cmp);
	for(i = 0; i < m; ++i){
		if((bj[a[i].x]&bj[a[i].y]).count()){
			printf("%lf", a[i].dis/2);
			return 0;
		}
		bj[a[i].x].set(a[i].y);
		bj[a[i].y].set(a[i].x);
	}
}
					   	 			 			 	 		 		 		  	