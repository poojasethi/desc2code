#include <bits/stdc++.h>
using namespace std;

const int MAX_N = 3010;

#define sq(x)			((x)*(x))

struct Edge { int a, b, c; };
bool cmp ( const Edge& a, const Edge& b ) { return a.c > b.c; }

bitset<MAX_N> parsed[MAX_N];
Edge edges[MAX_N*MAX_N];
int x[MAX_N], y[MAX_N];
int n, nEdges;

int main ( )
{
	nEdges=0;
	scanf ( "%d", &n );
	for ( int i = 0; i < n; ++i ) {
		scanf ( "%d%d", &x[i], &y[i] );
		for ( int j = 0; j < i; ++j ) {
			edges[nEdges].a=i;
			edges[nEdges].b=j;
			edges[nEdges].c=sq(x[i]-x[j])+sq(y[i]-y[j]);
			nEdges++;
		}
	}

	for ( int i = 0; i < n; ++i )
		parsed[i].reset();
	
	int a, b;
	sort ( edges, edges+nEdges, cmp );
	for ( int i = 0; i < nEdges; ++i ) {
		a=edges[i].a, b=edges[i].b;
		parsed[a][b] = parsed[b][a]=true;
		if ( (parsed[a]&parsed[b]).count() == 0 ) continue;
		printf ( "%.10lf\n", sqrt((double)edges[i].c)/2.0 );	
		break;
	}

	return 0;
}
