//In the name of God
#include <bitset>
#include <iomanip>
#include <complex>
#include <iostream>
#include <algorithm>
using namespace std;
typedef pair<int, int> pii;
#define X real()
#define Y imag()
const int N = 3e3 + 3;

int n, m, nor[N][N];
pii a[N * N];
complex<int> p[N];
bitset<N> adj[N];

bool cmp(const pii &x, const pii &y) { return nor[x.first][x.second] > nor[y.first][y.second]; }
int main() {
	ios_base::sync_with_stdio(false);
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> p[i].X >> p[i].Y;
		for (int j = 0; j < i; j++)
			a[m++] = pii(i, j), nor[i][j] = norm(p[i] - p[j]);
	}
	sort(a, a + m, cmp);
	for (int i = 0; ; i++) {
		int u = a[i].first, v = a[i].second;
		if ((adj[u] & adj[v]).any()) {
			cout << fixed << setprecision(10) << sqrt(nor[u][v]) / 2 << '\n';
			return 0;
		}
		adj[u][v] = adj[v][u] = 1;
	}
}
