import heapq

n = input()
d = [0 for _ in xrange(n)]
s = [0 for _ in xrange(n)]
ans=[]
ls = []
for x in xrange(n):
    d[x],s[x] = map(int, raw_input().split())
    ls.append((d[x],s[x],x))

heapq.heapify(ls)
while len(ls) > 0:
    h = heapq.heappop(ls)
    if h[0] == 0: continue
    if h[0] != d[h[2]]: continue
    assert(h[0] == 1)
    d[h[1]] -= 1
    s[h[1]] ^= h[2]
    heapq.heappush(ls,(d[h[1]],s[h[1]],h[1]))
    ans.append((h[1], h[2]))

print len(ans)
for z in ans:
    print z[0], z[1]