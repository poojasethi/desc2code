#include<cstdio>
#include<algorithm>

const int N=30;
int m,n,a[N],k,d[N],s[N],g[N];

bool dfs(int v){
  if(v==n){
    int g=0;
    for(int i=1;i<=n;i++){
      if(s[i]+1>a[i]) return false;  
      if(d[i]+a[i]-1-s[i]<2) return false;
      g+=a[i]-1-s[i];
    }
    return g==k;
  }
  for(int i=v+1;i<=n;i++){
    d[i]+=1;s[i]+=a[v];
    if(dfs(v+1))return true;
    d[i]-=1;s[i]-=a[v];
  }
  return false;
}

bool work(){
  scanf("%d",&m);
  for(int i=1;i<=m;i++){
    int x;scanf("%d",&x);
    if(x==1) k++;
    else if(x==2) return false;
    else a[++n]=x;
  }
  if(n==0&&k==1) return true;
  if(k<n) return false;
  std::sort(a+1,a+1+n);
  return dfs(1);
}

int main(){
  //freopen("C.in","r",stdin);
  //freopen("C.out","w",stdout);
  if(work())printf("YES");
  else printf("NO");
  //while(1);
}
