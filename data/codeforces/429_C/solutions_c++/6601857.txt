#include <cstdio>
#include <iostream>
#include <algorithm>
#define maxn 30

using namespace std;

int n;
int w[maxn],p[maxn];

int dfs(int x,int used) {
	//printf("%d %d\n",x,used);
	if (x>n) return *max_element(p+1,p+1+n)==0;
	for (int i=1;i<=x;i++) 
		if ((p[i]>w[x]||p[i]==w[x]&&p[i]!=w[i]-1)&&((used&(1<<p[i])))==0) {
			p[i]-=w[x];
			if (dfs(x+1,x+1<=n&&w[x]==w[x+1]?used:0)) return 1;
			p[i]+=w[x];
			used|=1<<p[i];
		}
	return 0;
}

int main() {
	scanf("%d",&n);
	for (int i=1;i<=n;i++) scanf("%d",&w[i]);
	sort(w+1,w+1+n,greater<int>());
	for (int i=1;i<=n;i++) p[i]=w[i]-1;
	printf(dfs(2,0)?"YES\n":"NO\n");
}