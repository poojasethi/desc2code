#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
int n,leaf,a[30],size[30],deg[30];
bool dfs(int now){
	int need=a[now]-size[now]-1;
	if(need<0)return 0;
	if(need>leaf)return 0;
	leaf-=need;
	deg[now]+=need;
	if(deg[now]==1){
		leaf+=need;
		deg[now]-=need;
		return 0;
	}
	if(now==n){
		if(leaf)return leaf+=need,deg[now]-=need,0;
		return 1;
	}
	for(int i=now+1;i<=n;i++)
		if(size[i]+a[now]+1<=a[i]){
			size[i]+=a[now];
			deg[i]++;
			if(dfs(now+1))return 1;
			deg[i]--;
			size[i]-=a[now];
		}
		leaf+=need;
		deg[now]-=need;
	return 0;
}
int main(){
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
		scanf("%d",&a[i]);
	sort(a+1,a+1+n);
	if(a[n]!=n)puts("NO");
	else{
		if(n==1)puts("YES");
		else{
			for(int i=1;i<=n;i++)
				if(a[i]==1)leaf=i;
			if(n-leaf>12)puts("NO");
			else
				puts(dfs(leaf+1)?"YES":"NO");
		}
	}
}