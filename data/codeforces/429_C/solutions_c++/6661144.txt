#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<iostream>
#define maxn 30
using namespace std;
int n,p[maxn];
int bitcount(int x)
{
    return x==0?0:(x&1)+bitcount(x>>1);
}
bool dfs(int s,int pos,int from,int cur)
{
    if(pos==n)
        return bitcount(s)==1;
    for(int i=from;i<pos&&p[i]+cur<p[pos];i++)
    if(s&(1<<i))
    {
        if(p[i]+cur<p[pos]-1)
        {
            if(dfs(s-(1<<i),pos,i+1,cur+p[i]))
                return 1;
        }
        else
            if(cur&&dfs(s-(1<<i)+(1<<pos),pos+1,0,0))
                return 1;
    }
    return 0;
}
int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++)
        scanf("%d",&p[i]);
    sort(p,p+n);int s=0,i;
    for(i=0;i<n&&p[i]==1;i++)s+=(1<<i);
    if(dfs(s,i,0,0))
        printf("YES\n");
    else
        printf("NO\n");
    return 0;
}
