#include <iostream>
#include <algorithm>

using namespace std;

#define forn(i, n) for(int i = 0; i < (n); ++i)

int n, p[24], w[24];

inline bool solve(int d, int used = 0) {
    if (d == n) return *max_element(p, p + n) == 0;
    forn (i, d) {
        if ((p[i] > w[d] || p[i] == w[d] && p[i] + 1 != w[i])
                && ((used & (i<<p[i]))) == 0) {
            p[i] -= w[d];
            if (solve(d+1, d+1<n && w[d]==w[d+1] ? used : 0)) {
                return true;
            }
            p[i] += w[d];
            used |= 1 << p[i];
        }
    }
    return false;
}

int main() {
    cin >> n;
    forn (i, n) cin >> w[i]; sort(w, w + n, greater<int>());
	forn (i, n) p[i] = w[i] - 1;
    cout << (solve(1) ? "YES" : "NO") << endl;
    return 0;
}