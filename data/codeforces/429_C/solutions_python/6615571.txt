#!/usr/bin/python

import sys

def Ni(): return tuple(map(int, sys.stdin.readline().split()))

n = Ni()[0]
c = Ni()

avail = [c.count(i) for i in range(n+1)]

def backtrack(stack, sumleft):
    #print stack, avail, sumleft
    if len(stack) == 1 and sumleft == 0:
        print "YES"
        sys.exit(0)

    # try to shift a 1
    if avail[1] > 0:
        avail[1] -= 1
        backtrack(stack + [1], sumleft - 1)
        avail[1] += 1

    # reduce if possible
    if len(stack) < 2:
        return

    s = 1 + stack[-1]
    for i in range(2, len(stack) + 1):
        s += stack[-i]
        if s >= n + 1:
            break

        if avail[s] > 0:
            avail[s] -= 1
            backtrack(stack[:-i] + [s], sumleft - s)
            avail[s] += 1
        

backtrack([], sum(c))
print "NO"
