//admire ACMONSTER
#include <vector>
#include <cstdio>
#include <set>
#include <map>
#include <algorithm>
#include <cstdlib>
#include <sstream>
#include <numeric>
#include <queue>
#include <iostream>
#include <string>
#include <cstring>
#include <utility>
#define sz(a) ((int)(a).size())
#define pb push_back
#define mk make_pair
#define fi first
#define se second
#define Rep(i,j,k) for (int i=(j); i<=(k); i++)
#define Repd(i,j,k) for (int i=(j); i>=(k); i--)
#define ALL(c) (c).begin(),(c).end()
#define TR(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define SUM(a) accumulate(all(a),string())
#define online1
#define RAND ((rand()<<15)+rand())
using namespace std;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int,int> II;
typedef long long LL;

const int N=2*(250000+10);

int n, a[N], lg[N];
struct T{
	int dis, id;
	bool operator<(const T &b)const{
		return dis<b.dis;
	}
} st[N][20];
int f[N][20];

void init(int n){
	for(int i=1, j=0; i<=n; i++){
		if ( (1<<(j+1)) == i )
			j++;
		lg[i]=j;
	}
	Rep(i,1,n)
		st[i][0]=(T){max(i-a[i],1), i};
	Rep(d,1,lg[n])
		Rep(i,1,n) if (i+(1<<d)-1>n) break; else
			st[i][d]=min(st[i][d-1], st[i+(1<<(d-1))][d-1]);
			
	memset(f, 0xff, sizeof f);
	Rep(i,1,n){
		int l=max(i-a[i],1), r=i, d=lg[r-l+1];
		f[i][0]=min(st[l][d], st[r-(1<<d)+1][d]).id;
	}
	Rep(d,1,lg[n])
		Rep(i,1,n)
			f[i][d]=f[f[i][d-1]][d-1];
}

int main(){
	
	cin>>n;
	Rep(i,1,n)
		scanf("%d",a+i), a[i+n]=a[i];
	
	init(2*n);	
	
	LL ans=0;
	Rep(i,n,2*n-1)
		if (st[i][0].dis<=i-n+1)
			ans++;
		else{
			int x=i;
			Repd(d,lg[n*2],0)
				if ( f[x][d]!=-1 && st[f[x][d]][0].dis > i-n+1 ){
					x=f[x][d];
					ans+=1<<d;
				}
			ans+=2;
		}
	
	cout<<ans<<endl;

    return 0;
}
