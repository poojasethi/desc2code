#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <map>
#include <vector>
#include <queue>
#include <cmath>
#include <set>
#include <sstream>
#define MP make_pair
#define PB push_back

using namespace std;

typedef long long LL;

const int MAXN = 1000010;

int tank[MAXN];
int N;
int q[MAXN], qn, bg;

int solve(int id)
{
//	for(int i = bg; i < qn; ++ i)	cout << q[i] << " ";	cout << "---" << endl;
	int cur = qn - 1, ret = 1;
//	cout << cur << " " << cur - tank[cur] << " " << id - N << endl;
	while(q[cur] - tank[q[cur]] > id - N)
	{
		++ ret;
		int tmp = cur;
		for(int i = tmp-1; i >= bg && q[i] >= q[tmp] - tank[q[tmp]]; cur = i --);
	}
//	cout << "ret  " << ret << endl;
	return ret;
}

int  main()
{
	while(cin >> N)
	{
		for(int i = 0; i < N; ++ i)	
		{
			scanf("%d", &tank[i]);
			tank[i + N] = tank[i];	
		}
		
		for(int i = 0; i < N; ++ i)
		{
			while(qn && i - tank[i] <= q[qn-1] - tank[q[qn-1]])	-- qn;
			q[qn ++] = i;	
		}
		
		LL ans = 0;
		for(int i = N; i < 2*N; ++ i)	
		{
			ans += solve(i);
			if(q[bg] == i - N)	++ bg;
			while(qn > bg && i - tank[i] <= q[qn-1] - tank[q[qn-1]])	-- qn;
			q[qn ++] = i;
		}
		cout << ans << endl;
	}
	
	
	return 0;	
}
