#include<cstdio>
#include<cstring>
#include<iostream>
#define clr(a,b) memset(a,b,sizeof(a))
#define maxn 12000
#define inf (1<<28)
using namespace std;
int s,t;
struct EDGE{
	int u,v,flow,next;
}edge[150000];
int head[maxn+10],pp;
void adde(int u,int v,int flow){
	edge[++pp]=(EDGE){u,v,flow,head[u]};
	head[u]=pp;
	edge[++pp]=(EDGE){v,u,0,head[v]};
	head[v]=pp;
}
int d[maxn+10],que[maxn+10],he,ta;
bool bfs(){
	clr(d,-1);
	que[he=ta=0]=s;
	d[s]=0;
	while(he<=ta){
		int u=que[he++];
		for(int i=head[u];i;i=edge[i].next)if(edge[i].flow){
			int v=edge[i].v;
			if(d[v]==-1)d[v]=d[u]+1,que[++ta]=v;
		}
	}
	return d[t]!=-1;
}
int cur[maxn+10];
int dfs(int u,int a){
	if(u==t||a==0)return a;
	int flow=0,f;
	for(int &i=cur[u];i;i=edge[i].next){
		int v=edge[i].v;
		if(d[v]==d[u]+1&&(f=dfs(v,min(a,edge[i].flow)))>0){
			edge[i].flow-=f;
			a-=f;
			edge[i^1].flow+=f;
			flow+=f;
			if(a==0)break;
		}
	}
	return flow;
}
int maxflow(){
	int flow=0;
	while(bfs()){
		for(int i=s;i<=t;i++)cur[i]=head[i];
		flow+=dfs(s,inf);
	}
	return flow;
}
int gen[10010];
int main(){
//	freopen("311E.in","r",stdin);
	int n,m,g;
	scanf("%d%d%d",&n,&m,&g);
	s=0;
	t=n+m+1;
	for(int i=1;i<=n;i++)scanf("%d",&gen[i]);
	pp=1;
	for(int i=1;i<=n;i++){
		int v;
		scanf("%d",&v);
		if(gen[i]==0)adde(s,i,v);
		else adde(i,t,v);
	}
	int sum=0;
	for(int i=1;i<=m;i++){
		int gen,w,k;
		scanf("%d%d%d",&gen,&w,&k);
		while(k--){
			int a;
			scanf("%d",&a);
			if(gen==1)adde(a,i+n,inf);
			else adde(i+n,a,inf);
		}
		int fl;
		scanf("%d",&fl);
		sum+=w;
		if(fl)w+=g;
		if(gen==0)adde(s,i+n,w);
		else adde(i+n,t,w);
	}
	printf("%d\n",sum-maxflow());
	return 0;
}
