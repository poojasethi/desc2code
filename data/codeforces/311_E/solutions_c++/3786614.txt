#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <string>
#include <cctype>
#include <algorithm>
#define maxn 10005
#define maxm 70000
#define INF 2000000000

using namespace std;

int n,m,g,s,t,a[maxn],ans,e[maxm],next[maxm],first[maxn+2005],w[maxm],pi,h[maxn+2005],q[maxn+2005];

void ins(int x,int y,int z)
 {
  e[pi]=y;next[pi]=first[x];first[x]=pi;w[pi]=z;pi++;
  e[pi]=x;next[pi]=first[y];first[y]=pi;w[pi]=0;pi++;
 }

void init()
 {
  scanf("%d%d%d",&n,&m,&g);
  s=0;t=n+m+1;
  int i,x,k,j,ww;
  for (i=1;i<=n;i++)scanf("%d",&a[i]);
  memset(first,-1,(t+1)*4);
  for (i=1;i<=n;i++)
   {
    scanf("%d",&x);
    if (a[i])ins(s,i,x);
     else ins(i,t,x);
   }
  for (i=1;i<=m;i++)
   {
    scanf("%d%d%d",&x,&ww,&k);ans+=ww;
    while (k--)
     {
      scanf("%d",&j);
      if (x)ins(n+i,j,INF);
       else ins(j,n+i,INF);
     }
    scanf("%d",&j);
    if (x)ins(s,n+i,ww+j*g);
     else ins(n+i,t,ww+j*g);
   }
 }

bool bfs()
 {
  int i,j,k,head=0,tail=1;
  memset(h,-1,(t+1)*4);h[0]=0;q[1]=0;
  while (head<tail)
   {
    j=q[++head];
    for (i=first[j];i!=-1;i=next[i])
     {
      k=e[i];
      if (h[k]==-1 && w[i])
       {
        h[k]=h[j]+1;q[++tail]=k;
       }
     }
   } 
  return h[t]!=-1; 
 }

int dfs(int u,int flow)
 {
  if (u==t)return flow;
  int i,tmp=0,minf,k;
  for (i=first[u];i!=-1;i=next[i])
   {
    k=e[i];
    if (h[k]==h[u]+1 && w[i])
     {
      minf=dfs(k,min(flow-tmp,w[i]));
      tmp+=minf;w[i]-=minf;w[i^1]+=minf;
      if (tmp>=flow)break;
     }
   }
  if (!tmp)h[u]=-1;
  return tmp;
 }
 
void work()
 {
  while (bfs())ans-=dfs(s,INF);
  printf("%d\n",ans);
 }
 
int main()
  {
   init();
   work();
   return 0;
  }
