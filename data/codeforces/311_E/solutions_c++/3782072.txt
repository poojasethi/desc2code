#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#define M 10100000
#define N 120000
#define inf 1000000000
using namespace std;
int next[M],c[M],dis[N],e[M],bfs[N],sex[N],sex_[N],off,ans,s,t,x,
	head[N],st[N],len=1,n,m,g,i,j,v,w,num[N],b[N][12],tmp,k,l;
bool build(){
	int l,r,i;
	memset(dis,0,sizeof(dis));
	bfs[l=r=1]=s;
	dis[s]=1;
	off=t;
	while(l<=r){
		x=bfs[l];
		for(i=head[x];i;i=next[i]) if(c[i]&&!dis[e[i]]){
			dis[e[i]]=dis[x]+1;
			bfs[++r]=e[i];
			if(e[i]==t)return(1);
		}
		l++;
	}
	return(0);
}
void dinic(int x){
	int i;
	if(x==t){
		int flow=inf;
		for(i=t;i!=s;i=e[st[i]^1]) flow=min(flow,c[st[i]]);
		for(i=t;i!=s;i=e[st[i]^1]){
			c[st[i]]-=flow;
			c[st[i]^1]+=flow;
			if(c[st[i]]==0)off=e[st[i]^1];
		}
		ans-=flow;
		return;
	}
	for(i=head[x];i;i=next[i])if(c[i]&&dis[x]+1==dis[e[i]]){
		st[e[i]]=i;
		dinic(e[i]);
		if(dis[x]>dis[off])return;
		off=t;
	}
	dis[x]=-1;
}
void addedge(int x,int y,int k){
	next[++len]=head[x]; head[x]=len; e[len]=y; c[len]=k;
	next[++len]=head[y]; head[y]=len; e[len]=x; c[len]=0;
}
int main(){
	scanf("%d%d%d",&n,&m,&g);
	s=0; t=n+m+1;
	for(i=1;i<=n;++i)scanf("%d",sex+i);
	for(i=1;i<=n;++i){
		scanf("%d",&v);
		if(sex[i]==0)addedge(s,i,v);
		else addedge(i,t,v);
	}
	for(i=1;i<=m;++i){
		scanf("%d%d%d",&sex_[i],&w,&num[i]);
		for(j=1;j<=num[i];++j){
			scanf("%d",&b[i][j]);
			if(sex_[i]==sex[b[i][j]])continue;
			if(sex[b[i][j]]==0)addedge(b[i][j],i+n,inf);
			else addedge(i+n,b[i][j],inf);
		}
		scanf("%d",&tmp);
		ans+=w;
		if(tmp==1)w+=g;
		if(sex_[i]==1)addedge(i+n,t,w);
		else addedge(s,i+n,w);
	}
	for(i=1;i<=m;++i)if(sex_[i]==0)
		for(j=1;j<=m;++j)if(sex_[j]==1){
			int flag=0;
			for(k=1;k<=num[i] && !flag ;++k)
				for(l=1;l<=num[j] && !flag ;++l)if(b[i][k]==b[j][l])
					flag=1;
			if(flag)addedge(i+n,j+n,inf);
		}
	while(build()) dinic(s);
	printf("%d\n",ans);
}
