#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int nn=15005;
const int mm=4*nn+40000;
const int inf=1<<30;
int n,m,g,te,u,v,sum;
int e[mm],f[mm],p[nn],q[mm],pp[nn];
int a[nn],b[nn],c[nn],h[nn],vh[nn];
int tx[nn],ty[nn],tz[20];
inline void add(int x,int y,int z){
	e[++te]=y;f[te]=z;
	q[te]=p[x];p[x]=te;
}
inline void link(int x,int y,int z){
	add(x,y,z);add(y,x,0);
}
void init(){
	scanf("%d%d%d",&n,&m,&g);
	u=n+m+1;v=n+m+2;
	for(int i=1;i<=n;++i)scanf("%d",&tx[i]);
	for(int i=1;i<=n;++i)scanf("%d",&ty[i]);
	for(int i=1;i<=n;++i)
		if(tx[i])link(u,i,ty[i]);else link(i,v,ty[i]);
	for(int i=1;i<=m;++i){
		int x,y,z,w;
		scanf("%d%d%d",&z,&x,&y);
		sum+=x;
		for(int j=1;j<=y;++j)scanf("%d",&tz[j]);
		scanf("%d",&w);
		if(w)x+=g;
		if(z)link(u,i+n,x);else link(i+n,v,x);
		for(int j=1;j<=y;++j)
			if(z)link(i+n,tz[j],inf);
				else link(tz[j],i+n,inf);
	}
}
int sap(){
 	int s=0,t=1;
 	memset(h,0,sizeof(h));
 	memset(vh,0,sizeof(vh));vh[0]=v;
 	memcpy(pp,p,sizeof(p));
 	a[1]=u;b[1]=0;c[1]=inf;
 	while(h[u]<v){
 		int i=a[t],j=0;
 		for(;pp[i];pp[i]=q[pp[i]]){
 			j=pp[i];
 			if(f[j]&&h[i]==h[e[j]]+1)break;
 		}
 		if(pp[i]){
 			a[++t]=e[j];
 			b[t]=j;
 			c[t]=min(c[t-1],f[j]);
 			if(a[t]==v){
 				s+=c[t];
 				for(int j=t;j>1;--j){
 					f[b[j]]-=c[t];
 					if(b[j]&1)f[b[j]+1]+=c[t];
 					else f[b[j]-1]+=c[t];
 				}
 				t=1;
 			}
 		}
 		else{
 			if(--vh[h[i]]==0)break;
 			h[i]=v;
 			for(j=p[i];j;j=q[j])
 				if(f[j]&&h[e[j]]+1<h[i]){
 					pp[i]=j;
 					h[i]=min(h[i],h[e[j]]+1);
 				}
 			++vh[h[i]];
 			if(t>1)--t;
 		}
 	}
 	return s;
}
int main(){
	init();
	printf("%d\n",sum-sap());
	return 0;
}
