#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<algorithm>
#define inf 0x3fffffff
using namespace std;
const int N=20010;
struct qwe{int q,w,l;}a[N<<2];
int n,m,g,v,t,w,k,u,p;
int S,T,s,cl,op,ans,sum;
int sex[N],he[N],ha[N];
int dis[N],qe[N],way[N];
void build(int x,int y,int s)
{
	a[++p].q=y; a[p].w=s; a[p].l=he[x]; he[x]=p;
	a[++p].q=x; a[p].w=0; a[p].l=he[y]; he[y]=p;
}
int dfs()
{
	memset(dis,0,sizeof(dis));
	dis[S]=1; qe[cl=op=1]=S;
	while (cl<=op)
	{
		for (int i=he[qe[cl]];i;i=a[i].l)
			if (a[i].w&&!dis[a[i].q])
			{
				dis[a[i].q]=dis[qe[cl]]+1;
				qe[++op]=a[i].q;
			}
		cl++;
	}
	memcpy(ha,he,sizeof(he));
	return (dis[T]!=0);
}
int find(int x,int l)
{
	if (x==T)
	{
		int mn=inf;
		for (int i=1;i<l;i++)
			if (a[way[i]].w<mn)
			{
				mn=a[way[i]].w;
				s=i;
			}
		sum+=mn;
		for (int i=1;i<l;i++)
		{
			a[way[i]].w-=mn;
			a[way[i]^1].w+=mn;
		}
		return 1;
	}
	for (int&i=ha[x];i;i=a[i].l)
		if (a[i].w&&dis[a[i].q]==dis[x]+1)
		{
			way[l]=i;
			if (find(a[i].q,l+1)&&s!=l) return 1;
		}
	return 0;
}
int main()
{
//	freopen("311.in","r",stdin);
//	freopen("311.out","w",stdout);
	scanf("%d%d%d",&n,&m,&g);
	S=0; T=n+m+1; p=1;
	for (int i=1;i<=n;i++) scanf("%d",&sex[i]);
	for (int i=1;i<=n;i++)
	{
		scanf("%d",&v);
		if (!sex[i]) build(S,i,v);
		else build(i,T,v);
	}
	for (int i=1;i<=m;i++)
	{
		scanf("%d%d%d",&t,&w,&k);
		ans+=w;
		for (int j=1;j<=k;j++)
		{
			scanf("%d",&u);
			if (t) build(u,i+n,inf);
			else build(i+n,u,inf);
		}
		scanf("%d",&k);
		if (k) w+=g;
		if (t) build(i+n,T,w);
		else build(S,i+n,w);
	}
	while (dfs()) find(S,1);
	printf("%d\n",ans-sum);
	return 0;
}
