#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef double ld;

const int MAX=50000+10;
const int INF=1000000000;

int n,m,g;
int S,T,v[MAX],sex[MAX];

struct Edge
{
	int t;
	int C;
	int next;
}e[MAX*20];
int tot=1,begin[MAX],h[MAX],gap[MAX];

void addedge(int a,int b,int c)
{
	e[++tot].t=b;
	e[tot].next=begin[a];
	begin[a]=tot;
	e[tot].C=c;
}

void add(int a,int b,int c)
{
	addedge(a,b,c);
	addedge(b,a,0);
}

int sap(int u,int flow)
{
	if(u==T)
		return flow;
	int i,v,remain=flow;
	for(i=begin[u];i;i=e[i].next)
	{
		v=e[i].t;
		if(e[i].C && h[u]==h[v]+1)
		{
			int tmp=sap(v,min(remain,e[i].C));
			e[i].C-=tmp;
			e[i^1].C+=tmp;
			remain-=tmp;
			if(!remain)
				return flow;
		}
	}
	--gap[h[u]];
	if(!gap[h[u]])
		h[S]=T+1;
	++gap[++h[u]];
	return flow-remain;
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
	int i;
	scanf("%d%d%d",&n,&m,&g);
	S=n+m+1;
	T=n+m+2;
	REP(i,1,n)
		scanf("%d",&sex[i]);
	REP(i,1,n)
	{
		scanf("%d",&v[i]);
		if(!sex[i])
			add(S,i,v[i]);
		else
			add(i,T,v[i]);
	}
	int ans=0;
	REP(i,1,m)
	{
		int sex,w,k,fri;
		scanf("%d%d%d",&sex,&w,&k);
		ans+=w;
		int j,a;
		REP(j,1,k)
		{
			scanf("%d",&a);
			if(sex==0)
				add(i+n,a,INF);
			else add(a,i+n,INF);
		}
		scanf("%d",&fri);
		if(fri)
			w+=g;
		if(sex==0)
			add(S,i+n,w);
		else add(i+n,T,w);
	}
	gap[0]=T;
	while(h[S]<T+1)
		ans-=sap(S,INF);
	cout<<ans<<endl;
	return 0;
}
