#include<queue>
#include<stdio.h>
#include<string.h>
#include<algorithm>
#define N 13000
#define M 1100000
using namespace std;
int next[M],to[M],flow[M],head[N],ce=1;
int dis[N],S,T;
queue<int>q;
bool s[N];
void add(int x,int y,int fl=0x3f3f3f3f)
{
	to[++ce]=y;
	flow[ce]=fl;
	next[ce]=head[x];
	head[x]=ce;
	to[++ce]=x;
	flow[ce]=0;
	next[ce]=head[y];
	head[y]=ce;
}
bool BFS()
{
	int x,i;
	q.push(S);
	memset(dis,0,sizeof(dis));
	dis[S]=1;
	while(!q.empty())
	{
		x=q.front(),q.pop();
		for(i=head[x];i;i=next[i])
		{
			if(flow[i]&&!dis[to[i]])
			{
				dis[to[i]]=dis[x]+1;
				q.push(to[i]);
			}
		}
	}
	return dis[T]!=0;
}
int dfs(int x,int lim)
{
	if(x==T)	return lim;
	int ret,i,temp;
	for(i=head[x],ret=0;i;i=next[i])
	{
		if(flow[i]&&dis[to[i]]==dis[x]+1)
		{
			temp=dfs(to[i],min(flow[i],lim-ret));
			ret+=temp;
			flow[i]-=temp,flow[i^1]+=temp;
			if(ret==lim)
				return ret;
		}
	}
	if(!ret)	dis[x]=0;
	return ret;
}
int main()
{
	int n,m,g,i,j,k,x,v,ts,w,ans;
	scanf("%d%d%d",&n,&m,&g);
	S=n+m+1,T=n+m+2;
	for(i=1;i<=n;i++)
		scanf("%d",s+i);
	for(i=1;i<=n;i++)
	{
		scanf("%d",&v);
		if(s[i])
			add(S,i,0),add(i,T,v);
		else
			add(S,i,v),add(i,T,0);
	}
	for(i=1,ans=0;i<=m;i++)
	{
		scanf("%d%d%d",&ts,&w,&k);
		for(j=1;j<=k;j++)
		{
			scanf("%d",&x);
			if(ts)
				add(x,i+n);
			else
				add(i+n,x);
		}
		scanf("%d",&k);
		if(ts)
			add(i+n,T,w+k*g);
		else
			add(S,i+n,w+k*g);
		ans+=w;
	}
	while(BFS())
		ans-=dfs(S,0x3f3f3f3f);
	printf("%d\n",ans);
	return 0;
}
