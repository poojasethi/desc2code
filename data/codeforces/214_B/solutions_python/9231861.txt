def con_and_print(l):
    if l[0] == 0: print 0
    else:
        strd = map(str, l)
        ans = "".join(strd)
        print ans

def rem_one(l, ext):
    ind = -1
    if ext in d:
        ind = d.index(ext)
    elif ext+3 in d:
        ind = d.index(ext+3)
    elif ext+6 in d:
        ind = d.index(ext+6)
    if ind == -1: return False
    l.pop(ind)
    return True

def rem_two(l, ext):
    ne = (ext+ext)%3
    if rem_one(l, ne) and rem_one(l, ne): return True
    return False

def rem_ext(l, ext):
    if rem_one(l, ext): return True
    elif rem_two(l,ext): return True
    return False

m1 = [1,4,7,]

n = int(raw_input())
d = map(int, raw_input().split())
d.sort(reverse=True)
if 0 not in d: print -1
else:
    s = sum(d)
    ext = s%3
    if(ext == 0): con_and_print(d)
    elif rem_ext(d, ext): con_and_print(d)
##    else:
##        ind = -1
##        if ext in d:
##            ind = d.index(ext)
##        elif ext+3 in d:
##            ind = d.index(ext+3)
##        elif ext+6 in d:
##            ind = d.index(ext+6)
##        if ind == -1: print -1
##        else:
##            d.pop(ind)
##            con_and_print(d)


