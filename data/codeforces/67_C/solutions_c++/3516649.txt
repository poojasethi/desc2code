#include<iostream>
#include<cstring>
#include<cstdio>
#include<algorithm>
using namespace std;
const int mm=4e3+9;
int dp[mm][mm],pa[mm][133],pb[mm][133];
int t1,t2,t3,t4;
int la,lb;
char a[mm],b[mm];
int main()
{
  while(scanf("%d%d%d%d",&t1,&t2,&t3,&t4)!=EOF)
  { scanf("%s%s",a,b);
    la=strlen(a);lb=strlen(b);
    memset(dp,0,sizeof(dp));
    memset(pa,0,sizeof(pa));
    memset(pb,0,sizeof(pb));
    for(int i=1;i<=la;++i)
    { dp[i][0]=i*t2;///删除费用
      for(int j='a';j<='z';++j)pa[i][j]=pa[i-1][j];
      pa[i][a[i-1]]=i;///含有a[i-1]字符的最近的标号
    }
    for(int i=1;i<=lb;++i)
    {
      dp[0][i]=i*t1;///插入费用
      for(int j='a';j<='z';++j)pb[i][j]=pb[i-1][j];
      pb[i][b[i-1]]=i;
    }
    for(int i=1;i<=la;++i)
      for(int j=1;j<=lb;++j)
    {
      dp[i][j]=min(dp[i-1][j]+t2,min(dp[i][j-1]+t1,dp[i-1][j-1]+t3*(a[i-1]!=b[j-1])));
      int ii=pa[i-1][b[j-1]],jj=pb[j-1][a[i-1]];
      if(ii&&jj)
      {
        dp[i][j]=min(dp[i][j],dp[ii-1][jj-1]+t4+t1*(j-1-jj)+t2*(i-1-ii));
      }
    }
    printf("%d\n",dp[la][lb]);
  }
}

     	 	 	 					 							 	