import sys

# f = open('p1.2.in','r')
# read = lambda: f.readline().strip()
read = lambda: sys.stdin.readline().strip()

def get_floor(i):
    i %= cycle_length
    if i <= m-1:
        return [i+1,i,1]
    else:
        return [m-(i-m)-1,i,-1]


n,m = map(int,read().split(' '))
cycle_length = 2*m-2
for i in xrange(n):
    si,fi,ti = map(int,read().split(' '))
    if si == fi:
        print ti
    else:
        total = ti
        floor,i,direction = get_floor(ti)
        if direction == 1:
            if floor <= si:
                total += si-floor
            else:
                total += m-i+m-si-1
                direction = -1
        elif direction == -1:
            if floor >= si:
                total += floor-si
            else:
                total += floor-1+si-1
                direction = 1
        if direction == 1:
            if si <= fi:
                total += fi-si
            else:
                total += m-si+m-fi
        elif direction == -1:
            if si >= fi:
                total += si-fi
            else:
                total += si-1+fi-1
        print total
