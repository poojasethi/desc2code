"""
T = 0
S = 1
V = 2
state = (t, s, v)
"""
# const
T = 0
S = 1
V = 2

def getState(t):
	#floor: 1,2,3....m,m-1,m-2,....2,|1
	#time:  0,1,2... m-1
	t1 = t % (2 * m - 2)
	if t1 < m:
		return (t, t1 + 1, 1)
	else:
		return (t, 2 * m - 1 - t1, -1)

def nextArrive(curTime, destFloor):
	""" return the state of the next elevator arrive"""
	state0 = getState(curTime)
	if state0[S] == destFloor:
		return state0
	elif state0[S] < destFloor:
		if state0[V] > 0:
			return getState(curTime + destFloor - state0[S])
		else:
			return getState(curTime + destFloor + state0[S] - 2)
	else:
		# state0[S] > destFloor
		if state0[V] < 0:
			return getState(curTime - destFloor + state0[S])
		else:
			return getState(curTime + 2 * m - destFloor - state0[S])

def readin():
	return raw_input()

def main():
	global n, m
	n, m = map(int, readin().split())
	for i in xrange(n):
		si, fi, ti = map(int, readin().split())
		if si != fi:
			state1 = nextArrive(ti, si)
			state2 = nextArrive(state1[T], fi)
			# print state1,state2
			print state2[T]
		else:
			print ti
main()
