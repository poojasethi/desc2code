#!/usr/bin/env python
n = int(raw_input().strip())
cards = raw_input().strip().split()

import Queue

q = Queue.Queue()

def ok(c1, c2):
    return c1[0]==c2[0] or c1[1]==c2[1]

last = cards[-4:] if len(cards)>=4 else cards[:]
q.put((n,last))
res = "YES"
s = set((n,tuple(last)))
while not q.empty():
    i,last = q.get()
    if len(last)==1:
        break
    saved = last[:]
    savedi = i
    if ok(last[-1], last[-2]):
        last = last[:-2] + [last[-1]]
        if (i<=2):
            break
        elif (i>4):
            last = [cards[i-5]] + last
        i-=1
        if (i,tuple(last)) not in s:
            s.add((i,tuple(last)))
            q.put((i,last))
    last = saved[:]
    i = savedi
    if len(last)>=4:
        if ok(last[-1], last[-4]):
            last = [last[-1]] + last[-3:-1]
            if i>4:
                last = [cards[i-5]] + last
            i-=1
            if (i,tuple(last)) not in s:
                s.add((i,tuple(last)))
                q.put((i,last))
else:
    res = "NO"

print res
        



