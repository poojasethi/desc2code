#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

const int N=100010;
const int inf=0x3f3f3f3f;

using namespace std;

int n,cnt;
char s[109][3];

int dp[53][53][53][53];

bool check(char c1[3],char c2[3])
{
	if(c1[0]==c2[0] || c1[1]==c2[1]) return 1;
	return 0;
}

bool dfs(int k,int a,int b,int c)
{
	if(k==0) return 1;
	if(dp[k][a][b][c]+1) return dp[k][a][b][c];
	if(k-3>=0 && check(s[a],s[k-3]))
	{
		int tmp=k-3;
		if(dfs(k-1,b,c,a)) return dp[k][a][b][c]=1;
	}
	if(k-1>=0 && check(s[a],s[b]))
	{
		if(dfs(k-1,a,c,k-3)) return dp[k][a][b][c]=1;
	}
	return dp[k][a][b][c]=0;
}

int main()
{
	memset(dp,-1,sizeof(dp));
	scanf("%d",&n);
	for(int i=0;i<n;i++)
		scanf("%s",s[i]);
	if(dfs(n-1,n-1,max(0,n-2),max(0,n-3))) puts("YES");
	else puts("NO");
	return 0;
}


