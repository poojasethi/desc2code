#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#define N 505
using namespace std;
int a[N][N] , f[N] , link[N] , v[N];
int n , m , tot;

bool dfs(int x , int root){
     for (int i=1;i<=n;++i)
           if (!v[i] && i != root && a[x][i]){
                      v[i] = 1;
                      if (f[i] == 0 || dfs(f[i],root)){
                               f[i] = x;
                               return 1;
                      }
           }
     return 0;
}

void Solve(){
     int i , j , k;
     scanf("%d%d",&n,&m);
     memset(a,0,sizeof(a));
     for (k=1;k<=m;++k){
           scanf("%d%d",&i,&j);
           a[i][j] = 1;
     }
     int ans = N*N*N;
     for (i=1;i<=n;++i){
         int t = (n-1)*2 + 1 , p = n-1;
         int mm = m;
         for (j=1;j<=n;++j)
         {
             if (a[i][j]) --t , --mm;
             if (i != j) if (a[j][i]) --t , --mm;
         }
         memset(f,0,sizeof(f));
         for (j=1;j<=n;++j){
             if (j == i) continue;
             memset(v,0,sizeof(v));
             if (dfs(j,i)) --mm , --p;
         }
         ans = min(ans,t+mm+p);
     }
     cout << ans << endl;
}


int main(){
    Solve();
    cin >> n;
    return 0;
}
