#include <vector>
#include <cstring>
#include <cstdio>
#include <algorithm>

using namespace std;

vector <int> eList[500];
int adj[500][500], n, m;

int seen[500], match[500];
int bpmN;
int bpm(int u, int center)
{
	for(int i=0;i<eList[u].size();i++)
	{
		int v = eList[u][i];
		if(v == center) continue;
		if(seen[v] == bpmN) continue;
		seen[v] = bpmN;

		if(match[v] < 0 || bpm(match[v], center))
		{
			match[v] = u;
			return 1;
		}
	}

	return 0;
}

int main(void)
{
	scanf("%d %d", &n, &m);
	for(int i=0;i<m;i++)
	{
		int u, v;
		scanf("%d %d", &u, &v);
		u--, v--;
		eList[u].push_back(v);
		adj[u][v] = true;
	}

	int ans = 99999999;
	for(int center=0;center<n;center++)
	{
		int curAns = n - eList[center].size();
		int cnt = 0, sum = 0;
		memset(match, -1, sizeof(match));
		for(int i=0;i<n;i++)
		{
			if(i == center) continue;
			sum += eList[i].size();
			if(adj[i][center] == 0) curAns++;
			else sum--;

			bpmN++;
			cnt += bpm(i, center);
		}
		curAns += (n - 1 - cnt);
		curAns += (sum - cnt);
		ans = min(ans, curAns);
	}

	printf("%d\n", ans);
	return 0;
}
