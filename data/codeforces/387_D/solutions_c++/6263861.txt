#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;
#define maxn 1000+10
int vis[maxn],u[maxn],v[maxn],match[maxn],mat[maxn][maxn];
int n,m;
int dfs(int s)
{
	for(int i=1;i<=n;i++)
	{
		if(!vis[i] && mat[s][i])
		{
			vis[i] = 1;
			if(!match[i] || dfs(match[i]))
			{
				match[i] = s;
				return 1;
			}
		}
	}
	return 0;
}
int main(void)
{
	
	cin>>n>>m;
	for(int i=1;i<=m;i++)
		cin>>u[i]>>v[i];
    int min = 1000000;
    
	for(int i=1;i<=n;i++)//i is center
	{
		int ans=0,c=0;//edge with connect with center
		memset(mat,0,sizeof(mat));
		memset(match,0,sizeof(match));
		for(int j=1;j<=m;j++)
		{
			if(u[j]!=i && v[j]!=i) mat[u[j]][v[j]] = 1;
			else c++;
		}
		for(int k=1;k<=n;k++)
		{
            memset(vis,0,sizeof(vis));
			if(dfs(k)) ans++;
		}
		int add = 3*n-2-c-ans;//(2*n-1-c) + ((n-1)*2-2*ans)/2;
	    int sub = m - c - ans;
	    if(min>(sub+add)) min = sub + add;
	    //cout<<min<<endl;
	}
	
	cout<<min<<endl;
	return 0;
}
