#include <iostream>
#include <cstdio>
#include <string>
#include <cstring>
#include <ctime>
#include <cmath>
#include <cstdlib>
#include <vector>
#include <algorithm>
#define INF 15000
#define N 510
using namespace std;
int n,m;
bool x[N][N];
bool dfs(int u,int no,int *link,bool *used)
{
    for(int i=1;i<=n;i++)
    {
        if(!x[u][i]||i==no)continue;
        if(used[i])continue;
        used[i]=true;
        if(link[i]==-1||dfs(link[i],no,link,used))
        {
            link[i]=u;
            return true;
        }
    }
    return false;
}
int solve(int no)
{
    int add=0;
    for(int i=1;i<=n;i++)
        if(!x[i][no])add++;
    for(int i=1;i<=n;i++)
        if(!x[no][i]&&i!=no)add++;
    int link[N],res=0;
    bool used[N];
    memset(link,-1,sizeof(link));
    for(int i=1;i<=n;i++)
    {
        if(i==no)continue;
        memset(used,0,sizeof(used));
        if(dfs(i,no,link,used))res++;
    }
    int k=add+(n-1-res);
    int cm=k+m-2*n+1-(n-1);
    return k+cm;
}
int main()
{
    cin>>n>>m;
    for(int i=0,o,p;i<m;i++)
    {
        cin>>o>>p;
        x[o][p]=true;
    }
    int ans=INF;
    for(int i=1;i<=n;i++)
    {
        int k=solve(i);
        if(k<ans)ans=k;
    }
    cout<<ans<<endl;
    return 0;
}
