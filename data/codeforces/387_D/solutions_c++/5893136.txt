//In the name of God
#include <iostream>

using namespace std;
const int N = 505;

int n, m, a[N][N], match[N], ans = 1e9;
bool mark[N];

bool dfs(int v) {
	for (int i = 1; i < n; i++)
		if (a[v][i])
			if (match[i] == -1 || (!mark[i]++ && dfs(match[i])))
				return match[i] = v, true;
	return false;
}
int prob(int cen) {
	for (int i = 0; i < n; i++)
		swap(a[cen][i], a[0][i]);
	for (int i = 0; i < n; i++)
		swap(a[i][cen], a[i][0]);
	int res = !a[0][0] + n - 1;
	for (int i = 1; i < n; i++)
		res += !a[i][0] + !a[0][i];
	fill(match, match + n, -1);
	for (int i = 1; i < n; i++) {
		fill(mark, mark + n, false);
		res -= dfs(i);
	}
	return res + (m + res - (3 * n - 2));
}
int main() {
	ios::sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		int u, v;
		cin >> u >> v;
		a[--u][--v] = true;
	}
/*	for (int i = 0; i < n; i++, cerr << '\n')
		for (int j = 0; j < n; j++)
			cerr << a[i][j];
	cerr << '\n';*/
	for (int cen = 0; cen < n; cen++)
		ans = min(ans, prob(cen));
	cout << ans << '\n';
	return 0;
}
