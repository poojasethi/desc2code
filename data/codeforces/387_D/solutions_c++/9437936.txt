#include <bits/stdc++.h>
#define maxn 509
using namespace std;
vector<int>G[maxn],V[maxn];
bool a[maxn][maxn];
int n,m,lable,vis[maxn],cy[maxn];
int build(int c)
{
	int res=0;
	for(int i=1;i<=n;i++)
		V[i].clear();
	for(int i=1;i<=n;i++)
	{
		if(i==c)
			continue;
		for(int j=0;j<(int)G[i].size();j++)
		{
			if(G[i][j]==c)
				continue;
			res++;
			V[i].push_back(G[i][j]);
		}
	}
	return res;
}
int dfs(int u)
{
	for(int i=0;i<(int)V[u].size();i++)
	{
		int v=V[u][i];
		if(vis[v]==lable)
			continue;
		vis[v]=lable;
		if(cy[v]==-1||dfs(cy[v]))
		{
			cy[v]=u;
			return 1;
		}
	}
	return 0;
}
int match(int c)
{
	memset(cy,-1,sizeof(cy));
	memset(vis,0,sizeof(vis));
	lable=0;
	int res=0;
	for(int i=1;i<=n;i++)
	{
		if(i==c)
			continue;
		lable++;
		res+=dfs(i);
	}
	return res;
}
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		G[x].push_back(y);
		a[x][y]=1;
	}
	int ans=1<<30;
	for(int i=1;i<=n;i++)
	{
		int cur=n-G[i].size();
		for(int j=1;j<=n;j++)
		{
			if(a[j][i]==0)
				cur++;
		}
		if(a[i][i]==0)
			cur--;
		int edge=build(i);
		ans=min(ans,cur+edge+n-1-2*match(i));
	}
	printf("%d\n",ans);
	//system("pause");
	return 0;
}