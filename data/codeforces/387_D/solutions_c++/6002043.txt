#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int INF=0xfffff;
const int N=510;
int map[N][N];
int in[N],out[N];
int n,m;
int vis[N],fa[N];
void init(){
	memset(out,0,sizeof(out));
	memset(in,0,sizeof(in));
	memset(map,0,sizeof(map));
}
bool dfs(int u,int v){
	int i,j;
	for(i=1;i<=n;i++){
		if(i==u) continue;
		if(!map[v][i]) continue;
		if(vis[i]) continue;
		vis[i]=1;
		if(fa[i]==-1||dfs(u,fa[i])){
			fa[i]=v;
			return true;
		}
	}
	return false;
}
int match(int u){
	int i,j;
	int ans=0;
	memset(fa,-1,sizeof(fa));
	for(i=1;i<=n;i++){
		if(u==i) continue;
		memset(vis,0,sizeof(vis));
		if(dfs(u,i)) ans++;
	}
	return ans;
}
int operate(int a){
	int s=in[a]+out[a]-map[a][a];
	int temp=2*n-1-s;
	int f=match(a);
	//printf("%d\n",f);
	temp=temp+m-f-s;
	temp=temp+n-1-f;
	//printf("%d\n",temp);
	return temp;
}
int main(){
	int i,j,x,y;
	while(scanf("%d%d",&n,&m)!=EOF){
		init();
		for(i=1;i<=m;i++){
			scanf("%d%d",&x,&y);
			out[x]++;
			in[y]++;
			map[x][y]=1;
		}
		int ans=INF;
		for(i=1;i<=n;i++) ans=min(ans,operate(i));
		printf("%d\n",ans);
	}
}