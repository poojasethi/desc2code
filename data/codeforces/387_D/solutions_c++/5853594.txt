#include <iostream>
#include <sstream>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <bitset>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <climits>
typedef long long LL;
using namespace std ;


vector<int> a[510];
int pre[510],vis[510],b[510][510],N;

int find(int x,int u){
    for (vector<int>::iterator i=a[u].begin();i!=a[u].end();i++)
        if (*i!=x && !vis[*i]){
            vis[*i]=1;
            if (!pre[*i] || find(x,pre[*i])){
                pre[*i]=u; return 1;
            }
        }
    return 0;
}

int hungary(int x){
    int s=0;
    memset(pre,0,sizeof(pre));
    int i;
    for (i=1;i<=N;i++){
        if (i==x) continue;
        memset(vis,0,sizeof(vis));
        s+=find(x,i);
    }
    return s;
}

int main(){
    int M,i,j;
    scanf("%d%d",&N,&M);
    for (i=0;i<M;i++){
        int u,v;
        scanf("%d%d",&u,&v);
        a[u].push_back(v);
        b[u][v]=1;
    }
    int ans=INT_MAX;
    for (i=1;i<=N;i++){
        int s=b[i][i];
        for (j=1;j<=N;j++)
            if (j!=i) s+=b[i][j]+b[j][i];
        ans=min(ans, ((M-s)-hungary(i)) + ((N-1)*2+1-s) + (N-1-hungary(i)) );
    }
    printf("%d\n",ans);
}
