#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
#define MAXN 502
#define MAXM 1002
vector<vector<int> > adj(MAXN);
int from[MAXM],to[MAXM],n,m,wc,nwc;
int match[MAXN];
bool vis[MAXN];
void build(int center) {
    wc=0;
    nwc=0;
    for(int i=1; i<=n; i++) adj[i].clear();
    for(int i=1; i<=m; i++) {
        if(from[i]==center||to[i]==center) wc++;
        else {
            nwc++;
            adj[from[i]].push_back(to[i]);
        }
    }
}
int dfs(int p) {
    for(int i=0; i<adj[p].size(); i++) {
        int v=adj[p][i];
        if(!vis[v]) {
            vis[v]=true;
            int t=match[v];
            match[v]=p;
            if(t==-1||dfs(t)) return 1;
            match[v]=t;
        }
    }
    return 0;
}
int hungary() {
    int ans=0;
    memset(match,-1,sizeof(match));
    for(int i=1; i<=n; i++) {
        memset(vis,false,sizeof(vis));
        ans+=dfs(i);
    }
    return ans;
}
int main() {
    scanf("%d%d",&n,&m);
    for(int i=1; i<=m; i++) scanf("%d%d",&from[i],&to[i]);
    int ans=0x3f3f3f3f;
    for(int i=1; i<=n; i++) {
        build(i);
        int mt=hungary();
        int tmp=3*n-2-wc+nwc-2*mt;
        ans=min(ans,tmp);
    }
    printf("%d\n",ans);
    return 0;
}