#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
#define M 505
#define N 1005

int maz[M][M],vis[M],match[M],edu[N],edv[N];
int n,m,ans;

bool dfs(int u)
{
	int i;
	for(i=1;i<=n;i++)
	{
		if(!vis[i]&&maz[u][i])
		{
			vis[i]=1;
			if(!match[i]||dfs(match[i]))
			{
				match[i]=u;
				return true;
			}
		}
	}
	return false;
}

int bimatch()
{
	int i,sol=0;
	memset(match,0,sizeof(match));
	for(i=1;i<=n;i++)
	{
		memset(vis,0,sizeof(vis));
		if(dfs(i)) sol++;
	}
	return sol;
}

int main()
{
	int i,j,x,y,tmp;
	scanf("%d%d",&n,&m);
	for(i=1;i<=m;i++) scanf("%d%d",&edu[i],&edv[i]);
	ans=n*n;
	for(i=1;i<=n;i++)
	{
		x=2*n-1;//add edge for root
		memset(maz,0,sizeof(maz));
		for(j=1;j<=m;j++)
		{
			if(edu[j]!=i&&edv[j]!=i) maz[edu[j]][edv[j]]=1;
			else x--;
		}
		y=2*n-1-x;//used edge for root
		ans=min(ans,n+m+x-y-2*bimatch()-1);
	}
	printf("%d\n",ans);
	return 0;
}
