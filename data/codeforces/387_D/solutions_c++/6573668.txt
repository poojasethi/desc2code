#include <iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
#define M 505
#define N 1005

int maz[M][M],vis[M],match[M],edu[N],edv[N];
int n,m,ans;

bool dfs(int u)
{
    int i;
    for(i=1;i<=n;i++)
    {
        if(!vis[i]&&maz[u][i])
        {
            vis[i]=1;
            if(!match[i]||dfs(match[i]))
            {
                match[i]=u;
                return true;
            }
        }
    }
    return false;
}

int bimatch()
{
    int i,sol=0;
    memset(match,0,sizeof(match));
    for(i=1;i<=n;i++)
    {
        memset(vis,0,sizeof(vis));
        if(dfs(i)) sol++;
    }
    return sol;
}

int main()
{
    int i,j,x,y,tmp;
    scanf("%d%d",&n,&m);
    for(i=1;i<=m;i++) scanf("%d%d",&edu[i],&edv[i]);
    ans=n*n;
    for(i=1;i<=n;i++)
    {
        x=2*n-1;
        memset(maz,0,sizeof(maz));
        for(j=1;j<=m;j++)
        {
            if(edu[j]!=i && edv[j]!=i) maz[edu[j]][edv[j]]=1;
            else x--;
        }
        y=2*n-1-x;
        int t=bimatch();
        int ans1=n-1-t+x;   //  增加边的个数
        int ans2=m-y-t;     //  删除边的个数
        ans=min(ans,ans1+ans2);
    }
    printf("%d\n",ans);
    return 0;
}


       