#include <algorithm>
#include <cstring>
#include <vector>
#include <cstdio>
using namespace std;
const int N = 510;
int n,m,k,t,x,y,p[N],ans;
vector<int> a[N];
bool v[N];
bool find(int x) {
    if (x == k) return false;
    for (int i = 0,y;i < a[x].size();i++)
        if (v[y = a[x][i]]) {
            v[y] = false;
            if ((!p[y])||find(p[y])) return p[y] = x;
        }
    return false;
}
int main() {
    scanf("%d%d",&n,&m);
    for (int i = 0;i < m;i++) {
        scanf("%d%d",&x,&y);
        a[x].push_back(y);
    }
    for (k = 1;k <= n;k++) {
        t = a[k].size();
        for (int i = 1;i <= n;i++)
            if (i != k) for (int j = 0;j < a[i].size();j++)
                if (a[i][j] == k) t++;
        memset(p,0,sizeof(p));
        for (int i = 1;i <= n;i++) {
            for (int j = 1;j <= n;j++) v[j] = (j != k);
            if (find(i)) t++;
        }
        ans = max(ans,t);
    }
    printf("%d\n",3*n-2+m-2*ans);
    return 0;
}
