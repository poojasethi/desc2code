#include<cstdio>
#include<cstring>
typedef __int64 ll;
ll INF = 1000000000000000000L;
const int N = 1505;
ll dp[N][N],key[N][N],sum[N][N];
ll max(const ll &x,const ll &y){return x>y?x:y;}
int a[N][N];
int main()
{
	int n,m,i,j;
	scanf("%d%d",&m,&n);
	for(i=1;i<=m;i++)
	{
		for(j=1;j<=n;j++)
		{
			scanf("%d",&a[i][j]);
			sum[i][j]=sum[i][j-1]+a[i][j];
		}
	}
	for(i=1;i<=m;i++)key[i][0]=key[i][n+1]=-INF;
	for(i=1;i<=n;i++)
	{
		dp[1][i]=sum[1][i];
	}
	for(i=n;i>0;i--)
	{
		key[1][i]=max(dp[1][i],key[1][i+1]);
	}
	for(i=2;i<=m;i++)
	{
		for(j=1;j<=n;j++)
		{
			if(i%2==0)
			{
				dp[i][j]=sum[i][j]+key[i-1][j+1];
			}
			else
			{
				dp[i][j]=sum[i][j]+key[i-1][j-1];
			}
		}
		if(i%2)
		{
			for(j=n;j>0;j--)key[i][j]=max(dp[i][j],key[i][j+1]);
		}
		else
		{
			for(j=1;j<=n;j++)key[i][j]=max(dp[i][j],key[i][j-1]);
		}
	}
	ll r=-INF;
	for(i=1;i<=n;i++)if(r<dp[m][i])r=dp[m][i];
	printf("%I64d\n",r);
	return 0;
}