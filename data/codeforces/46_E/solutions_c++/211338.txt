#include<cstdio>
#include<iostream>
#include<algorithm>
using namespace std;
long long int a[1509][1509];
long long int dp[1509][1509];
long long int INF;
int main()
{
	int m,n;
	INF = (1<<30);
	INF = (INF <<30);
	scanf("%d%d",&m,&n);
	int i,j,t;
	for(i=0;i<m;i++)
	{
		for(j=0;j<n;j++) {
			scanf("%d",&t);
			a[i][j] = t;
		}
	}
	for(i=0;i<m;i++)
	{
		for(j=1;j<n;j++)
			a[i][j]+=a[i][j-1];
	}
	for(i=0;i<m+4;i++)
	{
		for(j=0;j<n+4;j++)
			dp[i][j] = -INF;
	}
	for(j=0;j<n;j++)
		dp[0][j] = a[0][j];
	for(j=1;j<m;j++)
	{
		if(j%2)
		{
			//j-1 cnt > jcnt
			long long int curmax=-INF;
			for(i=n-1;i>0;i--)
			{
				//consider chosen upto i in prev
				curmax = max(curmax,dp[j-1][i]);
				dp[j][i-1]=curmax+a[j][i-1];
			}
		}
		else
		{
			//j-1 cnt < jcnt
			long long int curmax=-INF;
			for(i=0;i<n-1;i++)
			{
				curmax = max(curmax,dp[j-1][i]);
				dp[j][i+1]=curmax+a[j][i+1];
			}
		}
	}
	long long int ans=-INF;
	for(i=0;i<n;i++)
		ans = max(ans,dp[m-1][i]);
	cout<<ans<<endl;
	return 0;
}
