#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;
const int N = 1505;
const long long inf = (long long) 1e17;
long long s[N][N], f[N][N];
int n, m;

int main() {
	ios :: sync_with_stdio(0);
	cin >> n >> m;
	for (int i = 1; i <= n; i++)
	for (int j = 1; j <= m; j++) {
		cin >> s[i][j];
		s[i][j] += s[i][j - 1];
	}
	for (int i = 1; i <= n; i++) {
		if (i & 1) {
			for (int j = 1 + 1; j <= m; j++)
				f[i][j] = s[i][j] + f[i - 1][j - 1];
			f[i][1] = -inf;
			if (i == 1)
				f[i][1] = s[i][1];
		}
		else {
			for (int j = 1; j <= m - 1; j++)
				f[i][j] = s[i][j] + f[i - 1][j + 1];
			f[i][m] = -inf;
		}
		if (i & 1)
			for (int j = m - 1; j >= 1; j--)
				f[i][j] = max(f[i][j], f[i][j + 1]);
		else
			for (int j = 1 + 1; j <= m; j++)
				f[i][j] = max(f[i][j], f[i][j - 1]);
	}
	long long ans = -inf;
	for (int i = 1; i <= m; i++)
		ans = max(ans, f[n][i]);
	cout << ans << endl;
}

	 		 		    	 	  		 		    	