#include <algorithm>
#include <stdlib.h>
#include <stdio.h>
#include <time.h>
#include <vector>
#include <map>
#define  maxn      1000000
#define  pb        push_back
using    namespace std;
typedef  long long LL;

int n;
LL ar[maxn];

LL gcd(LL a , LL b)
{
  if(!b) return a;
  return gcd(b,a%b);
}

int main()
{
  srand(time(NULL));
  clock_t begin=clock();
  scanf("%d",&n);
  for(int i=0 ; i<n ; i++)
    scanf("%I64d",&ar[i]);
  LL ans=1;
  while(clock()-begin < 3.6*CLOCKS_PER_SEC)
  {
    vector<LL>v;
    map<LL,int>hash;
    int curr=(rand()*rand())%n;
    LL numb=ar[curr];
    for(int i=0 ; i<n ; i++)
      hash[gcd(numb,ar[i])]++;
    for(LL i=1 ; i*i<=numb ; i++)
      if(numb%i==0)
      {
        v.pb(i);
        if(i*i!=numb) v.pb(numb/i);
      }
    sort(v.begin(),v.end());
    for(LL i=1 ; i<v.size() ; i++)
      for(LL j=0 ; j<i ; j++)
        if(v[i]%v[j]==0)
          hash[v[j]]+=hash[v[i]];
    for(LL i=0 ; i<v.size() ; i++)
      if(hash[v[i]]>=(n+1)/2)
        ans=max(ans,v[i]);
  }
  printf("%I64d\n",ans);
  return 0;
}
