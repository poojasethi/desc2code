#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <cmath>
using namespace std;
typedef long long LL;
const int N=1000001;
LL n,k,r,i,j,m,x,ans,a[N],b[N],s[N];
LL gcd(LL x,LL y) {return (y==0)?x:gcd(y,x%y);}
int main() {
	scanf("%I64d",&n);
	for (i=0;i<n;i++) scanf("%I64d",a+i);
	for (k=0;k<10;k++) {
		r=rand()*rand()%n;m=0;
		for (i=1;i<=sqrt(a[r]+0.5);i++)
			if (a[r]%i==0) {b[m++]=i;b[m++]=a[r]/i;}
		sort(b,b+m);
		memset(s,0,sizeof(s));
		for (i=0;i<n;i++) {
			x=gcd(a[i],a[r]);
			s[lower_bound(b,b+m,x)-b]++;
		}
		for (i=0;i<m;i++) {
			for (j=i+1;j<m;j++) if (b[j]%b[i]==0) s[i]+=s[j];
			if (s[i]*2>=n) ans=max(ans,b[i]);
		}
	}
	printf("%I64d\n",ans);
}
