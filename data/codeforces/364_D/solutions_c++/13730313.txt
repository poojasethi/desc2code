# include <bits/stdc++.h>

using namespace std;

typedef long long int ll;

const int maxn = 1e6 + 100;
const int maxm = 6720 + 100;
const int pro = 9;

ll a[maxn], c[maxm], v[maxm];

int main(){
	srand(724);
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; i++)
		scanf("%I64d", &a[i]);
	
	random_shuffle(a, a + n);
	
	ll ans = 1;
	for (int piv = 0; piv < min(pro, n); piv++){
		ll x = a[piv];

		int k = 0;
		for (int j = 1; (ll)j * j <= a[piv]; j++)
			if (a[piv] % j == 0){
				v[k++] = j;
				v[k++] = a[piv] / j;
			}
		sort(v, v + k);

		memset (c, 0, sizeof c);
		for (int i = 0; i < n; i++)
			c[lower_bound(v, v + k, __gcd(a[i], a[piv])) - v]++;
		
		for (int i = 0; i < k; i++)
			for (int j = i + 1; j < k; j++)
				if (v[j] % v[i] == 0)
					c[i] += c[j];
	
		int idx = -1;
		for (int i = k - 1; i >= 0; i--)
			if(c[i] * 2 >= n){
				idx = i;
				break;
			}
		
		if(idx != -1)
			ans = max(ans, v[idx]);
	}

	cout << ans << endl;

	return 0;
}
