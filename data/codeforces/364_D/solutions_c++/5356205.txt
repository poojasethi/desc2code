#include <iostream>
#include <algorithm>
#include <cmath>
#include <map>
#include <vector>

using namespace std;

typedef long long int ll;

ll mcd(ll a,ll b)
{
  if (a<b) swap(a,b);
  if (b==0) return a;
  return mcd(a%b,b);
}

int n;
ll a[2000000];

int main()
{
  ios::sync_with_stdio(false);
  cin>>n;
  for (int i=0;i<n;i++)
    cin>>a[i];
  ll sol=1;
  for (int cas=0;cas<12;cas++) {
    random_shuffle(a,a+n);
    ll val=a[0];
    map<ll,int> amount;
    for (ll d=1;d<=val and d*d<=val;d++) {
      if (val%d==0) {
	amount[d];
	amount[val/d];
      }
    }
    for (int i=0;i<n;i++)
      amount[mcd(a[i],val)]++;
    vector<pair<ll,int> > v;
    for (map<ll,int>::iterator it=amount.begin();it!=amount.end();it++)
      v.push_back(pair<ll,int> (it->first,it->second));
    for (int i=0;i<int(v.size());i++)
      for (int j=i+1;j<int(v.size());j++)
	if (v[j].first%v[i].first==0) v[i].second+=v[j].second;
    for (int i=0;i<int(v.size());i++)
      if (2*v[i].second>=n)
	sol=max(sol,v[i].first);
  }
  cout<<sol<<endl;
}
