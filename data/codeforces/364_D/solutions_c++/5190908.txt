#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int N = 1111111;
const int K = 10;
LL a[N], ans;
int n;

inline LL gcd(LL a, LL b) { return b ? gcd(b, a % b) : a; }
LL find(const LL &p) {
	map<LL, int> cnt;
	LL mx = 1;
	for (int i = 0; i < n; i++) cnt[gcd(p, a[i])]++;
	for (map<LL, int>::iterator mi = cnt.begin(); mi != cnt.end(); mi++) {
		if (mi->first <= ans) continue;
		for (map<LL, int>::iterator mj = mi; mj != cnt.end(); mj++) {
			if (mi == mj) continue;
			if (mj->first % mi->first) continue;
			mi->second += mj->second;
		}
		if (mi->second >= (n + 1 >> 1)) mx = max(mi->first, mx);
	}
	return mx;
}

int main() {
	while (cin >> n) {
		srand(time(0));
		for (int i = 0; i < n; i++) cin >> a[i];
		for (int i = 0; i < K; i++) ans = max(find(a[rand() * rand() % n]), ans);
		cout << ans << endl;
	}
	return 0;
}
