#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;

typedef long long int64;
int n,num,b[1000005];
int64 a[1000005],ans,fact[1000005];
int64 gcd(int64 a,int64 b) {
	if (!a||!b) return a+b;
	return a>b?gcd(a%b,b):gcd(b%a,a);
}
int main() {
	srand(23333);
	scanf("%d",&n);
	for (int i=1;i<=n;i++) scanf("%I64d",&a[i]);
	for (int k=1;k<=12;k++) {
		int pos=((rand()<<15)+rand())%n+1;
		num=0;
		for (int64 i=1;i*i<=a[pos];i++) if (a[pos]%i==0) {
			fact[++num]=i;
			if (i*i!=a[pos]) fact[++num]=a[pos]/i;
		}
		for (int i=1;i<=num;i++) b[i]=0;
		sort(fact+1,fact+num+1);
		for (int i=1;i<=n;i++) {
			int64 g=gcd(a[i],a[pos]);
			int p=lower_bound(fact+1,fact+num+1,g)-fact;
			if (fact[p]==g) b[p]++;
		}
		for (int i=num;i;i--) {
			int64 now=fact[i];
			int s=b[i];
			for (int j=i+1;j<=num;j++) if (fact[j]%now==0) s+=b[j];
			if (s>=(n+1)>>1) {
				ans=max(ans,now);
				break;
			}
		}
	}
	printf("%I64d\n",ans);
	return 0;
}
