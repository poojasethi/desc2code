#include <map>
#include <ctime>
#include <cmath>
#include <vector>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;
typedef long long llong;
#define rep(i,n) for(int i=0 ; i<(n) ; i++)
#define mid ((l+r)>>1)
#define ls ((rt<<1))
#define rs ((rt<<1)+1)
#define maxn 1000100
llong a[maxn],i,j,k;
llong f[12000],tot;
map<llong,int>ha;
int n,cnt[12000];
int find(llong num)
{
	return lower_bound(f,f+tot,num)-f;
}
llong getrand()
{
	unsigned int i = (((int)rand()<<14)+rand())%n;
	return a[i];
}
int main()
{
	srand(time(0));
	scanf("%d",&n);
	llong ans=0;
	for (i=0 ; i<n ; i++ ) scanf("%lld",&a[i]);
	for (i=0 ; i<10 ; i++ )
	{
		llong v = getrand();
		tot=0;
		for (j=1 ; j*j<=v ; j++ ) if (v%j==0)
		{
			f[tot++]=j;
			if (j*j!=v) f[tot++]=(v/j);
		}
		sort(f,f+tot);
		for (j=0 ; j<tot ; j++ ) cnt[j]=0;
		for (j=0 ; j<n ; j++ ) cnt[find(__gcd(v,a[j]))]++;
		for (j=0 ; j<tot ; j++ )
		{
			int sum=0;
			for (k=j ; k<tot ; k++ )
			if (f[k]%f[j]==0) sum += cnt[k];
			if (sum*2>=n) ans = max(ans,f[j]);
		}
	}
	cout<<ans<<endl;
	return 0;
}

