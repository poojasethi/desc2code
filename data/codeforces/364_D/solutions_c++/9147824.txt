#include <bits/stdc++.h>
#define maxn 1000009
using namespace std;
__int64 a[maxn],d[maxn];
int sum[maxn];
__int64 gcd(__int64 a,__int64 b)
{
	return b?gcd(b,a%b):a;
}
int rd(int n)
{
	long long MOD=1e9+9;
	return (1LL*rand()*MOD+rand())%n;
}
int main()
{	
	int n;
	scanf("%d",&n);
	for(int i=0;i<n;i++)
		scanf("%I64d",&a[i]);
	int tt=10,tot;__int64 ans=0;
	while(tt--)
	{
		__int64 p=a[rd(n)];
		tot=0;
		for(int i=1;1LL*i*i<=p;i++)
		{
			if(p%i==0)
			{
				d[tot++]=i;
				if(1LL*i*i!=p)
					d[tot++]=p/i;
			}
		}
		memset(sum,0,sizeof(int)*(tot+5));
		sort(d,d+tot);
		for(int i=0;i<n;i++)
			sum[lower_bound(d,d+tot,gcd(a[i],p))-d]++;
		for(int i=0;i<tot;i++) 
			for(int j=i-1;j>=0;j--)
				if(d[i]%d[j]==0)
					sum[j]+=sum[i];
		for(int i=0;i<tot;i++)
			if(sum[i]*2>=n)
				ans=max(ans,d[i]);
	}
	printf("%I64d\n",ans);
	//system("pause");
	return 0;
}	