//In the name of GOd

#include <iostream>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <cassert>
using namespace std;
#define lol long long
const int MAXN=1e6+10,MAXM=1e5+10;
int n;
lol a[MAXN],b[MAXM];
int cnt[MAXM],m;
lol Max=-1;
void fact(lol x)
{
  m=0;
  for(lol i=1;i*i<=x;i++)
    if(x%i==0)
      {
	b[m++]=i;
	if(i*i!=x)
	  b[m++]=x/i;
      }
  sort(b,b+m);
}

void solve(int ind)
{
  memset(cnt,0,sizeof cnt);
  fact(a[ind]);
  for(int i=0;i<n;i++)
    {
      lol x=__gcd(a[ind],a[i]);
      int p=lower_bound(b,b+m,x)-b;
      assert(b[p]==x);
      cnt[p]++;
    }
  for(int i=0;i<m;i++)
    {
      int p=cnt[i];
      for(int j=i+1;j<m;j++)
	if(b[j]%b[i]==0)
	  p+=cnt[j];
      if(p>=(n+1)/2)
	Max=max(b[i],Max);
    }
  
}

int main()
{
  ios::sync_with_stdio(false);
  srand(222);
  cin>>n;
  for(int i=0;i<n;i++)
    cin>>a[i];
  random_shuffle(a,a+n);
  for(int i=0;i<min(10,n);i++)
    solve(i);
  cout<<Max<<endl;
  return 0;
}
