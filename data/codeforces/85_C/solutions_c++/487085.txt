#include <cstdio>
#include <vector>
#include <cmath>
#include <algorithm>
using namespace std;
typedef long long ll;

ll N,v[100001],p[100001],c[100001][2],sum[100001],num[100001],mx[100001],mn[100001];
void dfs (ll i)
{
     if (c[i][0]) {
        dfs(c[i][0]),dfs(c[i][1]);
        mx[i]=mx[c[i][1]];
        mn[i]=mn[c[i][0]];
     }
     else mx[i]=mn[i]=v[i];
}

void dfs2 (ll i) 
{
     sum[i]=sum[p[i]]+((v[p[i]]>v[i])?mn[c[p[i]][1]]:mx[c[p[i]][0]]);
     num[i]=num[p[i]]+1;
     if (c[i][0]) dfs2(c[i][0]),dfs2(c[i][1]);
}
vector<pair<ll,ll> > V;
int main ()
{
    scanf("%I64d",&N);
    ll x,y;
    for (ll i=1;i<=N;++i) scanf("%I64d %I64d",&p[i],&v[i]),V.push_back(make_pair(v[i],i));
    sort(V.begin(),V.end());
    ll s;
    for (ll i=1;i<=N;++i) {
        if (p[i]==-1) s=i;
        else if (v[p[i]]>v[i]) c[p[i]][0]=i;
        else c[p[i]][1]=i;
    }
    dfs(s),dfs2(c[s][0]),dfs2(c[s][1]);
ll Q;
    scanf("%I64d",&Q);
    while (Q--) {
          scanf("%I64d",&x);
          ll l=0,r=V.size()-1;
          while (l<r) {
                ll m=(ll)ceil((l+r)/2.0);
                if (V[m].first>x) r=m-1;
                else l=m;
          }
          if (l==V.size()-1 || !c[V[l].second][0]) printf("%.9lf\n",1.0*sum[V[l].second]/num[V[l].second]);
          else printf("%.9lf\n",1.0*sum[V[l+1].second]/num[V[l+1].second]);
    }
    return 0;
}
