#include <cstdio>
#include <map>
using namespace std;

int n, p[100001], v[100001], q[100001], c[100001][2];
int le[100001], ri[100001], d[100001];
double e[100001];
map<int, int> m;

int main() {
	scanf("%d", &n);
	for (int i = 1; i <= n; i++) {
		scanf("%d%d", p + i, v + i);
		m[v[i]] = i;
		if (p[i] == -1)
			q[0] = i;
		else if (c[p[i]][0] == 0)
			c[p[i]][0] = i;
		else if (v[i] > v[c[p[i]][0]])
			c[p[i]][1] = i;
		else
			c[p[i]][1] = c[p[i]][0],
			c[p[i]][0] = i;
	}
	for (int i = 1, h = 0, t = 1; h < t; i++)
		for (int m = t; h < m; h++) {
			if (c[q[h]][0])
				q[t++] = c[q[h]][0],
				q[t++] = c[q[h]][1];
			d[q[h]] = i;
		}
	for (int h = n - 1; h >= 0; h--)
		if (c[q[h]][0])
			le[q[h]] = le[c[q[h]][0]],
			ri[q[h]] = ri[c[q[h]][1]];
		else
			le[q[h]] = ri[q[h]] = v[q[h]];
	for (int h = 0; h < n; h++)
		if (c[q[h]][0])
			e[c[q[h]][0]] = e[q[h]] + le[c[q[h]][1]],
			e[c[q[h]][1]] = e[q[h]] + ri[c[q[h]][0]];
	int k;
	scanf("%d", &k);
	while (k--) {
		int x;
		scanf("%d", &x);
		map<int, int>::iterator it = m.lower_bound(x);
		if (it == m.end() || c[it->second][0])
			it--;
		printf("%.10f\n", e[it->second] / (d[it->second] - 1));
	}
}
