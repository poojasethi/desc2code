#include <stdio.h>
#include <string.h>
#include <algorithm>
#define maxn 100010

using namespace std;

int ch[maxn][2];
int vmax[maxn],vmin[maxn];
int v[maxn];
int a[maxn],an;
int root;
int m;
double sum[maxn];
int n;
void dfs(int x){
	if (!ch[x][0] && !ch[x][1]){
		vmin[x]=vmax[x]=v[x];
		return;
	}
	dfs(ch[x][0]);
	vmin[x]=vmin[ch[x][0]];
	a[an++]=v[x];
	dfs(ch[x][1]);
	vmax[x]=vmax[ch[x][1]];
}
void dfs2(int x,int dep,double tot){
	if (!ch[x][0] && !ch[x][1]){
		sum[m++]=tot/dep;
		return;
	}
	dfs2(ch[x][0],dep+1,tot+vmin[ch[x][1]]);
	dfs2(ch[x][1],dep+1,tot+vmax[ch[x][0]]);
}
int main(){
	scanf("%d",&n);
	for (int i=1;i<=n;i++){
		int k;
		scanf("%d %d",&k,v+i);
		if (k==-1) root=i;else{
			if (ch[k][0] && v[ch[k][0]]<v[i])
				ch[k][1]=i;
			else{
				ch[k][1]=ch[k][0];
				ch[k][0]=i;
			}
		}
	}
	an=0;
	dfs(root);
	m=0;
	dfs2(root,0,0);
	int qn;
	for (scanf("%d",&qn);qn>0;qn--){
		int value;
		scanf("%d",&value);
		if (value>a[an-1]) printf("%.9lf\n",sum[m-1]);else{
			int k=lower_bound(a,a+an,value)-a;
			printf("%.9lf\n",sum[k]);
		}
	}
	return 0;
}