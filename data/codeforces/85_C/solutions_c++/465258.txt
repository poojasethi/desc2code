#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int N=100010;

int n,m,a[N][2],ord[N],b[N],r[N][2];
double dp[N],sum,cnt;

bool cmp( int i,int j )
{
	return b[i]<b[j];
}

void dfs( int x )
{
	if ( a[x][0]==-1 )
	{
		r[x][0]=r[x][1]=b[x];
	}
	else
	{
		dfs( a[x][0] );
		dfs( a[x][1] );
		r[x][0]=r[a[x][0]][0];
		r[x][1]=r[a[x][1]][1];
	}
}

void ddfs( int x )
{
//	printf( "%d %lf %lf\n",x,cnt,sum );
	if ( a[x][0]!=-1 )
	{
		sum+=r[a[x][1]][0];
		cnt++;
		ddfs( a[x][0] );

		sum-=r[a[x][1]][0];
		sum+=r[a[x][0]][1];
		ddfs( a[x][1] );
		sum-=r[a[x][0]][1];
		cnt--;
	}
	else
	{
		dp[x]=sum/cnt;
	}


}

int main()
{
//	freopen( "test.in","r",stdin );
	scanf( "%d",&n );
	int x,y,z;
	memset( a,-1,sizeof(a) );
	for ( int i=1;i<=n;i++ )
	{
		scanf( "%d%d",&x,&b[i] );
		if ( x==-1 ) z=i;
		else 
		{
			a[x][1]=a[x][0];
			a[x][0]=i;
		}
		ord[i]=i;
	}

	for ( int x=1;x<=n;x++ )
		if ( a[x][0]>-1 && b[a[x][0]]>b[a[x][1]] )
		{
			int tmp=a[x][0]; a[x][0]=a[x][1]; a[x][1]=tmp;
		}

	sort( ord+1,ord+1+n,cmp );
	dfs( z );
	
	sum=cnt=0;
	ddfs( z );
	
	scanf( "%d",&m );
	int tar;
	for ( int i=1;i<=m;i++ )
	{
		scanf( "%d",&z );
		x=1; y=n;
		tar=-1;
		if ( z<b[ord[1]] ) tar=1;
		else if ( b[ord[n]]<z ) tar=n;
		else
		while ( x<=y )
			if ( b[ord[(x+y)>>1]]<z ) 
			{
				if ( tar<((x+y)>>1) ) tar=((x+y)>>1);
				x=((x+y)>>1)+1;
			}
			else y=((x+y)>>1)-1;

		if ( tar>1 && tar<n && a[ord[tar]][0]!=-1 ) tar++;
//		printf( "%d \n",ord[tar] );
		printf( "%.15lf\n",dp[ord[tar]] );

	}

	return 0;

}



