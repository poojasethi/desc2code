#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
#define N 100005
typedef __int64 ll;
int f[N],a[N],b[N],L[N],R[N],l[N],r[N],d[N];
ll dp[N];
int cmp(int x,int y)
{
	return a[x]<a[y];
}
void init(int x)
{
	if(f[x]==-1){dp[x]=0;d[x]=0;}
	else if(a[x]<a[f[x]])dp[x]=dp[f[x]]+a[R[f[x]]];
	else dp[x]=dp[f[x]]+a[L[f[x]]];
	if(f[x]!=-1)d[x]=d[f[x]]+1;
	if(!l[x])return ;
	init(l[x]);
	init(r[x]);
}
int main()
{
	int n,m,i,root;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	{
		scanf("%d%d",f+i,a+i);
		b[i]=i;
	}
	for(i=1;i<=n;i++)
	{
		if(f[i]!=-1)
		{
			if(a[i]<a[f[i]])l[f[i]]=i;
			else r[f[i]]=i;
		}
		else root=i;
	}
	sort(b+1,b+n+1,cmp);
	for(i=1;i<=n;i++)
	{
		L[b[i]]=b[i-1];
		R[b[i]]=b[i+1];
	}
	init(root);
	int v,low,high,mid,pos;
	scanf("%d",&m);
	while(m--)
	{
		scanf("%d",&v);
		low=0;
		high=n+1;
		while(low<high-1)
		{
			mid=(low+high)/2;
			if(a[b[mid]]<v)low=mid;
			else high=mid;
		}
		if(!low||r[b[low]])pos=b[low+1];
		else pos=b[low];
		printf("%.10lf\n",(double)dp[pos]/(double)d[pos]);
	}
	return 0;
}
	   	  		    	  	  	   			   		