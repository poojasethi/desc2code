#include <iostream>
#include <vector>
#include <cstdio>
#include <algorithm>
using namespace std;
#define f first
#define s second
#define mp make_pair
#define pb push_back
#define ll long long
#define INF 1<<30
#define ll long long
struct versh
{
  int len,lgo,rgo,l,r;
  ll sum;
  versh(int _lgo=-1,int _rgo=-1,int _len=0,ll _sum=0,int _l=0,int _r=0)
  {
    sum=_sum;
    lgo=_lgo;
    rgo=_rgo;
    len=_len;
    l=_l;
    r=_r;
  }
};
vector <versh> a;
vector <pair<int,int> > t;
void findLR()
{
  for(int i=0;i<t.size();i++)
    if (a[t[i].s].lgo!=-1)a[t[i].s].l=t[i-1].f,a[t[i].s].r=t[i+1].f;
}
void pathsum(int v)
{
  if (a[v].lgo==-1)return;
  a[a[v].lgo].sum=a[v].sum+a[v].r;
  a[a[v].lgo].len=a[v].len+1;
  pathsum(a[v].lgo);
  a[a[v].rgo].sum=a[v].sum+a[v].l;
  a[a[v].rgo].len=a[v].len+1;
  pathsum(a[v].rgo);
}
int binary(int x)
{
  int l=-1,r=t.size(),m;
  while (l<r-1)
  {
    m=(l+r)/2;
    if (x>=t[m].f)l=m;
    else r=m;
  }
  if (l==-1)return 0;
  if (a[t[l].s].lgo==-1)return l;
  return l+1;
}
int main()
{
  int n,k,p,x,from;
  cin>>n;
  a.resize(n);
  for(int i=0;i<n;i++)
  {
    scanf("%d%d",&p,&x);
    p--;
    if (p!=-2 && a[p].lgo==-1)a[p].lgo=i;
    else if (p!=-2) a[p].rgo=i;
    t.pb(mp(x,i));
    if (p==-2)from=i;
  }
  for(int i=0;i<n;i++)
    if (t[a[i].lgo].f>t[a[i].rgo].f)swap(a[i].lgo,a[i].rgo);
  a[from].len=1;
  a[from].sum=0;
  sort(t.begin(),t.end());
  findLR();
  pathsum(from);
  cin>>k;
  int j;
  for(int i=0;i<k;i++)
  {
    cin>>x;
    j=binary(x);
    printf("%.9f\n",a[t[j].s].sum*1.0/(a[t[j].s].len-1));
  }
  return 0;
}