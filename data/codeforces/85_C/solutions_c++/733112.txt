#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>

using namespace std;
const int N=100005;
struct node
{
    int f,l,r,v,id,d;
    long long sum;
}a[N];
int b[N],c[N],m=0,l=0;
double res;

void dfs(int p,int d)
{
    if (a[p].l!=0) dfs(a[p].l,d+1);
    m++; b[m]=a[p].v; a[p].id=m; a[p].d=d;
    if (a[p].l==0) c[++l]=p;
    if (a[p].r!=0) dfs(a[p].r,d+1);
}

void dp(int p)
{
    if (a[p].l==0) return;
    a[a[p].l].sum=a[p].sum+b[a[p].id+1]; dp(a[p].l);
    a[a[p].r].sum=a[p].sum+b[a[p].id-1]; dp(a[p].r);
}

int bs(int x,int l,int r)
{
    int mid,p;
    while (1)
    {
        mid=(l+r)/2; p=c[mid];
        if (x>b[a[p].id-1] && x<b[a[p].id+1]) return p;
        if (x>a[p].v) l=mid+1; else r=mid-1;
    }
}

int main()
{
    int n,i,o,x,root,k;
    scanf("%d",&n);
    for (i=1; i<=n; i++)
      scanf("%d%d",&a[i].f,&a[i].v);
    for (i=1; i<=n; i++)
      if (a[i].f==-1) root=i;
      else if (a[i].v>a[a[i].f].v) a[a[i].f].r=i; else a[a[i].f].l=i;
    dfs(root,0);
    b[0]=-1; b[n+1]=2000000000;
    dp(root);
    scanf("%d",&o);
    for (i=1; i<=o; i++)
    {
        scanf("%d",&x);
        k=bs(x,1,l);
        printf("%.10lf\n",(double)a[k].sum/a[k].d);
    }
}
