#include<cstdio>
#include<cmath>
#include<algorithm>
#include<queue>
#include<cstring>
#include<vector>
using namespace std;
struct node{
    int l,r;
    double res;
}tmp;
vector <node> ans;
int maxv[100005],minv[100005];
int v[100005];
int sub[100005][2];
void dfs1(int x){
    if (!sub[x][0]) {maxv[x]=minv[x]=v[x]; return;}
    dfs1(sub[x][0]);
    dfs1(sub[x][1]);
    minv[x]=minv[sub[x][0]];
    maxv[x]=maxv[sub[x][1]];
}
void dfs2(int x,int cnt,long long val,int l,int r){
    if (!sub[x][0]) {
        tmp.res=(double)val/cnt;
        tmp.l=l;
        tmp.r=r;
        ans.push_back(tmp);
        return ;
    }
    dfs2(sub[x][0],cnt+1,val+minv[sub[x][1]],l,v[x]-1);
    dfs2(sub[x][1],cnt+1,val+maxv[sub[x][0]],v[x]+1,r);
}
int main(){
    int n,m,x;
    while(~scanf("%d",&n)){
        int root,fa;
        for (int i=1;i<=n;i++){
            scanf("%d%d",&fa,&v[i]);
            if (fa==-1) root=i;
            else {
                if (sub[fa][0]){
                    if (v[sub[fa][0]]>v[i]){sub[fa][1]=sub[fa][0];sub[fa][0]=i;}
                    else sub[fa][1]=i;
                }
                else {
                    sub[fa][0]=i;
                }
            }
        }
        dfs1(root);
        dfs2(root,0,0,0,1000000007);
        scanf("%d",&m);
        while(m--){
            scanf("%d",&x);
            int le=0,ri=ans.size()-1;
            int mid;
            while(ri-le){
                mid=(le+ri)/2;
                if (ans[mid].r<x) le=mid+1;
                else ri=mid;
            }
            printf("%.10f\n",ans[le].res );
        }
    }
    return 0;
}
	 		 	 		 	  			 		  				  	 		