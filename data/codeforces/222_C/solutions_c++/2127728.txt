#include <stdbool.h>
#include <stdio.h>
#include <vector>

using namespace std;

#define MAX 10000000

vector<int> p(MAX+1);
vector<int> c(MAX+1);

void primes ()
{
  int i=1;
  while (i <= MAX) {
    p[i] = i; i++;
    p[i] = 2; i++;
  }
  for (int k=3; k*k<=MAX; k+=2)
    if (p[k] == k)
      for (i=k*k; i<=MAX; i+=k)
        if (p[i] == i)
          p[i] = k;
}

void factorize (int x, int d)
{
  do {
    c[p[x]] += d;
    x /= p[x];
  } while (x > 1);
}

int rebuild (int x, int d)
{
  int result = 1;
  do {
    if (d*c[p[x]]>0) {
      c[p[x]] -=d ;
      result *= p[x];
    }
    x /= p[x];
  } while (x > 1);
  return result;      
}

int main ()
{
  int N, M, i;

  primes();
  scanf("%d %d", &N, &M);

  vector<int> a(N);
  vector<int> b(M);

  for (i=0; i<N; i++) {
    scanf("%d", &(a[i]));
    factorize(a[i], 1);
  }
  for (i=0; i<M; i++) {
    scanf("%d", &(b[i]));
    factorize(b[i], -1);
  }

  printf("%d %d\n", N, M);
  for (i=0; i<N; i++)
    printf("%d%c", rebuild(a[i], 1), i==N-1 ? '\n' : ' ');
  for (i=0; i<M; i++)
    printf("%d%c", rebuild(b[i], -1), i==M-1 ? '\n' : ' ');

  return 0;
}
