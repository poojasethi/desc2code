#include <algorithm>
#include <stdio.h>
#define  MAXN      100002
#define  MAXS      10000002
using    namespace std;

int N,M;
int A[MAXN];
int B[MAXN];
int pr[MAXS];
int divA[MAXS];
int divB[MAXS];

void Solution(int n , int *X , int *Y)
{
  for(int i=1 ; i<=n ; i++)
  {
    int ans=1;
    for(int j=X[i] ; j>1 ; j/=pr[j])
    {
      if(Y[pr[j]]) Y[pr[j]]--;
      else         ans*=pr[j];
    }
    printf("%d",ans);
    if(i<n) printf(" ");
  }
  printf("\n");
}

void Count_Divisors(int n , int *X , int *Y)
{
  for(int i=1 ; i<=n ; i++)
    for(int j=X[i] ; j>1 ; j/=pr[j])
      Y[pr[j]]++;
}

void Find_Divisors(void)
{
  for(int i=2 ; i<MAXS ; i++)
    if(!pr[i])
      for(int j=i ; j<MAXS ; j+=i)
        pr[j]=i;
}

void Read(void)
{
  scanf("%d%d",&N,&M);
  printf("%d %d\n",N,M);
  for(int i=1 ; i<=N ; i++)
    scanf("%d",&A[i]);
  for(int i=1 ; i<=M ; i++)
    scanf("%d",&B[i]);
}

int main()
{
  Read();
  Find_Divisors();
  Count_Divisors(N,A,divA);
  Count_Divisors(M,B,divB);
  Solution(N,A,divB);
  Solution(M,B,divA);
  return 0;
}
