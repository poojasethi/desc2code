#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
using namespace std;
typedef long long ll;
#define rep(i,a,b) for(int (i)=(a);(i)<=(b);(i)++)
const int maxn=2105;
char s1[maxn],s[maxn],s2[maxn];
int lcp1[maxn][maxn],lcp2[maxn][maxn],x[maxn],y[maxn];
int main(){
	scanf("%s",s1+1);scanf("%s",s+1);
	int n=strlen(s+1),m=strlen(s1+1);
	rep(i,1,m)s2[m-i+1]=s1[i];
	rep(i,1,n)rep(j,1,m){
		if(lcp1[i][j])continue;
		int k=0;
		while(i+k<=n&&j+k<=m&&s[i+k]==s1[j+k])k++;
		rep(p,0,k)lcp1[i+p][j+p]=k-p;
	}
	rep(i,1,n)rep(j,1,m){
		if(lcp2[i][j])continue;
		int k=0;
		while(i+k<=n&&j+k<=m&&s[i+k]==s2[j+k])k++;
		rep(p,0,k)lcp2[i+p][j+p]=k-p;
	}
	int cnt=0;
	rep(i,1,n){
		int res=0,flag=0,place=0;
		rep(j,1,m)if(lcp1[i][j]>res)res=lcp1[i][j],flag=0,place=j;
		rep(j,1,m)if(lcp2[i][j]>res)res=lcp2[i][j],flag=1,place=j;
		cnt++;
		if(!res)return puts("-1");
		if(flag){
			x[cnt]=m-place+1;
			y[cnt]=m-(place)+1-res+1;
		}else{
			x[cnt]=place;
			y[cnt]=place+res-1;
		}
		i+=res-1;
	}
	printf("%d\n",cnt);
	rep(i,1,cnt)printf("%d %d\n",x[i],y[i]);
}