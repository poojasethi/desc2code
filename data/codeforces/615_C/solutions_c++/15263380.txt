#include <iostream>
#include <vector>

using namespace std;

string S, T;
int LS, LT;

int LC[2][2120][2120];

int main() {
    cin >> S >> T;
    LS = (int)S.size();
    LT = (int)T.size();
    
    for (int x = LS - 1; x >= 0; x--) {
        for (int y = LT - 1; y >= 0; y--) {
            if (S[x] == T[y]) LC[0][x][y] = LC[0][x + 1][y + 1] + 1;
            if (S[LS - 1 - x] == T[y]) LC[1][x][y] = LC[1][x + 1][y + 1] + 1;
        }
    }
    
    vector<pair<int, int> > R;
    
    int cur = 0;
    
    while (cur < LT) {
        int ma = 0;
        pair<int, int> p;
        for (int y = 0; y < LS; y++) {
            if (LC[0][y][cur] > ma) ma = LC[0][y][cur], p = make_pair(y, y + ma - 1);
            if (LC[1][y][cur] > ma) ma = LC[1][y][cur], p = make_pair(LS - 1 - y, LS - 1 - y - (ma - 1));
        }
        cur += ma;
        if (ma == 0) {
            cout << -1 << endl;
            return 0;
        }
        R.push_back(p);
    }
    
    cout << R.size() << endl;
    for (int i = 0; i < R.size(); i++) cout << R[i].first + 1 << ' ' << R[i].second + 1 << endl;
    return 0;
}