#include <stdio.h>
#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
using namespace std;
const int maxn=3100;
int d[maxn][maxn];
int rd[maxn][maxn];
string s,t;
string r;

int main(){
	cin>>s>>t;
	r=s;
	reverse(r.begin(),r.end());
	int n=s.size(),m=t.size();
	d[n][m]=0;
    for(int i=n-1;i>=0;i--)for(int j=m-1;j>=0;j--){
			if(s[i]!=t[j])
				d[i][j]=0;
			else
				d[i][j]=d[i+1][j+1]+1;
		
	}
	rd[n][m]=0;
	for(int i=n-1;i>=0;i--)for(int j=m-1;j>=0;j--){
			if(r[i]!=t[j])
				rd[i][j]=0;
			else
				rd[i][j]=rd[i+1][j+1]+1;
		
	}
	int c=0;
	vector<pair<int,int> > ans;
	while(c<t.size()){
		int mx=0,pos,rv=0;
		for(int i=0;i<n;i++)
			if(mx<d[i][c])
				mx=d[i][c],pos=i;
		for(int i=0;i<n;i++)
			if(mx<rd[i][c])
				mx=rd[i][c],pos=i,rv=1;
		if(mx==0){
			cout<<-1<<endl;
			return 0;
		}
		//	cerr<<mx<<" "<<pos<<" "<<rv<<endl;
		if(rv)
			ans.push_back(pair<int,int>(n-pos,n-pos-mx+1));
		else
			ans.push_back(pair<int,int>(pos+1,pos+mx));
		c+=mx;
	}
	cout<<ans.size()<<endl;
	for(int i=0;i<ans.size();i++)
		cout<<ans[i].first<<" "<<ans[i].second<<endl;
	return 0;
}
