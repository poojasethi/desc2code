#include<bits/stdc++.h>
using namespace std;
const int maxN=3030;
int lcp1[maxN][maxN];
int lcp2[maxN][maxN];
int main()
{

	string str1,str2;
	cin>>str1>>str2;
	int l1=str1.size(),l2=str2.size();
	str1="@"+str1+"*";
	str2="&"+str2+"%";
	
	//calculating lcp
	int j;
	
	for(int i=l2;i>=1;i--)
	{
		for(j=l1;j>=1;j--)
		{
			if(str1[j]==str2[i])
			lcp1[i][j]=lcp1[i+1][j+1]+1;
		}
		
		for(j=1;j<=l1;j++)
		{
			if(str1[j]==str2[i])
			lcp2[i][j]=lcp2[i+1][j-1]+1;
		}
	}
	vector<pair<int,int> >v;
	//finding maximum lcps
	for(int i=1;i<=l2;)
	{
		int i1=max_element(lcp1[i]+1,lcp1[i]+l1+1)-lcp1[i];
		int i2=max_element(lcp2[i]+1,lcp2[i]+l1+1)-lcp2[i];	
		int len=max(lcp1[i][i1],lcp2[i][i2]);
		if(len==0)
		{
			cout<<"-1";
			return 0;
		}
		if(len==lcp1[i][i1])	
			v.push_back(make_pair(i1,i1+len-1));
		else
			v.push_back(make_pair(i2,i2-len+1));
			i+=len;
	}
	cout<<v.size()<<endl;
	for(int i=0;i<v.size();i++)
		cout<<v[i].first<<" "<<v[i].second<<endl;

return 0;
}
