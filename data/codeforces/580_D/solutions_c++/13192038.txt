#include <bits/stdc++.h>
using namespace std;

int n,m,k,s[20],c[20][20];
long long int dp[20][300005];

long long int solve (int l, int mask) {

    int v = 0;
    for (int i=0; i<18; i++) v+= (1&mask>>i);
    if (v >= m) return 0;

    if ( dp[l][mask] != -1 ) return dp[l][mask];

    long long int t = 0;

    for (int i=0; i<18; i++) {
        if (1&mask>>i) {}
        else {
            t = max(t, s[i] + c[l][i] + solve(i, mask|1<<i ) );
        }
    }

    return dp[l][mask] = t;
}

int main () {

    memset(dp,-1, sizeof(dp) );

    cin >> n >> m >> k;
    for (int i=0; i<n; i++) cin >> s[i];
    int x,y;
    for (int i=0; i<k; i++) {
        cin >> x >> y;
        x--; y--;
        cin >> c[x][y];
    }

    cout << solve(19,0) << endl;

}
