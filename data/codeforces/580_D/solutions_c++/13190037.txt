#include<bits/stdc++.h>
using namespace std;

const int N=19;
typedef long long ll;

int n,m,k;
int a[N],sat[N][N];
ll dp[(1<<(N-1))][N];

ll result(int mask,int pos) {
  if(__builtin_popcountll(mask)==m) {
    return 0;
  }
  if(dp[mask][pos]!=-1) {
    return dp[mask][pos];
  }
  ll cnt=0;
  for(int i=0;i<n;i++) {
    //already included
    if(mask&(1<<i)) {
      continue;
    }
    cnt=max(cnt,a[i]+sat[pos][i]+result(mask|(1<<i),i));
  }
  return dp[mask][pos]=cnt;
}
int main() {
  //freopen("a.cpp","r",stdin);
  cin>>n>>m>>k;
  memset(dp,-1,sizeof(dp));
  for(int i=0;i<n;i++) {
    cin>>a[i];
  }
  for(int i=1;i<=k;i++) {
    int x,y,c;
    cin>>x>>y>>c;
    x--,y--;
    sat[x][y]=c;
  }
  cout<<result(0,N-1);
  return 0;
}
