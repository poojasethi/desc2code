#include <iostream>
#include <algorithm>
#include <memory.h>
using namespace std;
#define ll long long
int n,m,k,x,y,c;
int r[18][18],satis[18];
ll dp[18][1<<19];
ll solve(int bef,int make){
	int c=0,temp = make;
	while(temp){
		c+=temp&1;
		temp>>=1;
	}
	if(c==m)return 0;
	if(bef==-1){
		ll ret= 0;
		for(int i=0;i<n;++i){
			ret= max(ret,satis[i]+solve(i,1<<i));
		}
		return ret;
	}
	ll &ret = dp[bef][make];
	if(ret!=-1)return ret;
	for(int i=0;i<n;++i){
		if( ( make&(1<<i) )==(1<<i))continue;
		ret= max(ret, r[bef][i]+ satis[i]+solve(i,make|(1<<i)) );
	}
	return ret;
}
int main(){
	memset(r,0,sizeof(r));
	cin>>n>>m>>k;
	for(int i=0;i<n;++i)cin>>satis[i];
	for(int i=0;i<k;++i){
		cin>>x>>y>>c;
		r[y-1][x-1]=c;
	}
	memset(dp,-1,sizeof(dp));
	cout<<solve(-1,0)<<endl;
}
