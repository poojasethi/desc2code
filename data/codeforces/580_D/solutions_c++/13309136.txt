#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

int n, m, k, x, y, v;
int a[22], c[22][22];
long long f[262262][20];

long long dfs(int mask, int cur, int dep) {
	long long &t = f[mask][cur];
	if (t>=0) return t;
	if (dep==m) return t = a[cur];
	
	t = 0LL;
	for(int i=1;i<=n;i++) {
		if(mask & (1<<(i-1))) continue;
		t = max(t, dfs(mask + (1<<(i-1)), i, dep+1) + c[cur][i]);
	}
	return t += a[cur];
}

int main() {
	scanf("%d%d%d", &n, &m, &k);
	for(int i=1;i<=n;i++) scanf("%d", &a[i]);
	for(int i=1;i<=k;i++) {
		scanf("%d%d%d", &x, &y, &v);
		c[x][y] = v;
	}
	
	memset(f, -1, sizeof f);
	printf("%I64d\n", dfs(0, 0, 0));
	
	return 0;
}