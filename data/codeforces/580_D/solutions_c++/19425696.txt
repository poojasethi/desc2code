#include <iostream>
#include <cstring>
#include <cstdio>
#include <algorithm>
using namespace std;
int n,m,k;
long long v[20],buf[20][20];
long long ans,dp[1<<19][20];

long long DFS(int bitmask,int lastnum,int p)
{
	if(dp[bitmask][lastnum]!=-1)
		return dp[bitmask][lastnum];
	if(p==m)
		return 0;
	long long ret=0;
	for(int i=0;i<n;i++)
	{
		if(bitmask&(1<<i))
			continue ;
		ret=max(ret,DFS(bitmask^(1<<i),i,p+1)+v[i]+buf[lastnum][i]);
	}
	return dp[bitmask][lastnum]=ret;
}

int main()
{
	int i,j,x,y,vl;
	scanf("%d%d%d",&n,&m,&k);
	for(i=0;i<n;i++)
		scanf("%lld",&v[i]);
	memset(buf,0,sizeof(buf));
	while(k--)
	{
		scanf("%d%d%d",&x,&y,&vl);
		buf[x-1][y-1]=vl;
	}
	memset(dp,-1,sizeof(dp));
	printf("%lld\n",DFS(0,19,0));
	return 0;
}
