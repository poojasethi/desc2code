#include <bits/stdc++.h>

using namespace std;

const int N = 19;
int a[N], c[N][N];
long long dp[1 << N][N];

int main() {
  int n, m, k;
  scanf("%d %d %d", &n, &m, &k);
  for (int i = 0; i < n; ++i)
    scanf("%d", a + i);
  for (int i = 0; i < k; ++i) {
    int x, y, ci;
    scanf("%d %d %d", &x, &y, &ci);
    c[x - 1][y - 1] = ci;
  }
  for (int mask = (1 << n) - 1; mask >= 0; --mask) {
    if (__builtin_popcount(mask) > m)
      continue;
    for (int i = 0; i <= n; ++i) {
      for (int j = 0; j < n; ++j) {
        if (((mask >> j) & 1) || __builtin_popcount(mask) >= m)
          continue;
        dp[mask][i] = max(dp[mask][i], dp[mask | (1 << j)][j] + a[j] + c[i][j]);
      }
    }
  }
  printf("%I64d\n", dp[0][n]);
}