#include<bits/stdc++.h>
#define INF 0x3f3f3f3f
using namespace std;

long long int n, m, k, v[20], g[20][20], pd[19][1<<19];

long long int solve(int i, int mask){

	int t = __builtin_popcount(mask);

	if(t==n) return 0;

	if(pd[i][mask]!=-1) return pd[i][mask];
	long long int ans = 0;
	for(int j=0; j<m; j++){
		if(!((1<<j)&mask))
			ans = max(ans, solve(j, mask|(1<<j))+g[i][j]+v[j]); 
	}

	return pd[i][mask] = ans;	
}

int main(){
	
	cin>>m>>n>>k;
	int a, b;
	memset(pd, -1, sizeof pd);
	for(int i=0; i<m; i++)	cin>>v[i];	
	for(int i=0; i<k; i++){
		 cin>>a>>b;
		--a; --b;
		 cin>>g[a][b];
	}
	long long int r = 0;
	for(int i=0; i<m; i++)
		r = max(r, v[i] + solve(i, (1<<i)));

	cout << r << endl;
		
	return 0;
}