#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

const int N=1000010;
const int inf=0x3f3f3f3f;

using namespace std;

struct data
{
	int a,b,id;
	double w;
	bool operator < (const data &r) const {return w<r.w;}
}e[N],ee[N];

int p[N];
int n,m,k;

int find(int x)
{
	if(p[x]!=x) p[x]=find(p[x]);
	return p[x];
}

#define sz(x) ((x).size())
#define pb push_back

vector<int> vt;

int kru(double mid)
{
	int ret=0;
	vt.clear();
	for(int i=1;i<N;i++)
		p[i]=i;
	for(int i=0;i<m;i++)
		ee[i]=e[i];
	for(int i=0;i<m;i++)
		if(ee[i].a==1) ee[i].w+=mid;
	sort(ee,ee+m);
	for(int i=0;i<m;i++)
		if(find(ee[i].a)!=find(ee[i].b))
			ret+=(ee[i].a==1),vt.pb(ee[i].id),p[find(ee[i].a)]=find(ee[i].b);
	return ret;
}

int main()
{
	scanf("%d%d%d",&n,&m,&k);
	for(int i=0;i<m;i++)
	{
		int a,b,w;
		scanf("%d%d%d",&a,&b,&w);
		if(a>b) swap(a,b);
		e[i].a=a;e[i].b=b;e[i].id=i+1;e[i].w=w+1e-6;
	}
	double l=-1e6,r=1e6,mid=0;
	for(int i=0;i<100;i++)
	{
		mid=(l+r)/2;
		int ret=kru(mid);
		if(k==ret) break;
		else if(k>ret) r=mid;
		else l=mid;
	}
	if(kru(mid)!=k) printf("-1\n");
	else
	{
		printf("%d\n",n-1);
		for(int i=0;i<n-1;i++)
			printf("%d ",vt[i]);
		puts("");
	}
	return 0;
}
