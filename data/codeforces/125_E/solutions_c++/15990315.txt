#include <bits/stdc++.h>
using namespace std;
const int N = 100010;
struct rec
{
    int x, y, id;
    double z;
} a[N], b[N];
int fa[N], ans[N], n, m, k, i, now, x, y;
bool operator <(rec a, rec b)
{
    return a.z < b.z;
}
int find(int x)
{
    if(x == fa[x]) return fa[x];
    return fa[x] = find(fa[x]);
}
int solve(double mid)
{
    int i, t = 0, now = 0;
    for(i = 1; i <= m; i++)
        b[i] = a[i], b[i].x == 1 ? b[i].z += mid : 0;
    sort(b + 1, b + m + 1);
    for(i = 1; i <= n; i++) fa[i] = i;
    for(i = 1; i <= m; i++) {
        x = find(b[i].x), y = find(b[i].y);
        if(x != y) {
            ans[++t] = b[i].id, now += b[i].x == 1;
            fa[x] = y;
        }
    }
    return now;
}

int main()
{
    cin >> n >> m >> k;
    for(i = 1; i <= m; i++)
    {
        scanf("%d%d%lf",&a[i].x,&a[i].y,&a[i].z);
        if(a[i].x > a[i].y) swap(a[i].x, a[i].y);
        a[i].id = i;
    }
	double l = -1000000, r = 1000000, mid;
    for(i = 1; i <= 100; i++)
    {
        mid = (l + r) / 2;
        now = solve(mid);
        if(now == k) break;
        if(now < k) r = mid;
        else l = mid;
    }
    if(now == k)
    {
        printf("%d\n",n - 1);
        for(i = 1; i < n; i++) printf("%d ",ans[i]);
    }
    else printf("-1\n");
    return 0;
}
