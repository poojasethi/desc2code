#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<algorithm>
#include<cstring>

using namespace std;
struct EDGE
{
	int u,v,id;
	int w;
}e[500005];
int n,m,k,deg,cnt,num,vis[500005],fa[500005];
double mid,l,r;
int cmp(const EDGE &a,const EDGE &b)
{
	return (double)(a.w)+mid*(a.u==1||a.v==1)<(double)(b.w)+mid*(b.u==1||b.v==1);
}
int find(int x){return x==fa[x]?x:fa[x]=find(fa[x]);}
void work(int flag)
{
	sort(e+1,e+m+1,cmp);
	cnt=n,num=0;
	for(int i=1;i<=n;++i)fa[i]=i;
	for(int i=1;i<=m;++i)vis[i]=0;
	for(int i=1;i<=m;++i)
	{
		int u=e[i].u,v=e[i].v;
		int r1=find(u),r2=find(v);
		if(r1!=r2&&(num+(e[i].u==1||e[i].v==1)<=k||flag))
		{
			if(e[i].u==1||e[i].v==1)num++;
			fa[r1]=r2;vis[i]=1;
			cnt--;
			if(cnt==1)break;
		}
	}
}
int main()
{
	scanf("%d%d%d",&n,&m,&k);
	for(int i=1;i<=m;++i)
	{
		scanf("%d%d%d",&e[i].u,&e[i].v,&e[i].w);
		if(e[i].u==1||e[i].v==1)deg++;
		e[i].id=i;
	}
	if(deg<k||(n>1&&k==0)){printf("-1");return 0;}
	mid=0;
	work(1);
	if(cnt>1){printf("-1");return 0;}
	l=-1e8,r=1e8;
	while(r-l>=1e-8&&num!=k)
	{
		mid=(l+r)/2;
		work(1);
		if(num<k)r=mid;
		else l=mid;
	}
	if(num!=k)
	{
		mid=(l+r)/2;work(0);
	}
	int ans=0;
	for(int i=1;i<=m;++i)
	  if(vis[i])
	    ans++;
	printf("%d\n",ans);
	for(int i=1;i<=m;++i)
	  if(vis[i])
	    printf("%d ",e[i].id);
	return 0;
}
