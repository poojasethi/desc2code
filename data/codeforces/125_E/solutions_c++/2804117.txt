#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int u=100010;
struct rec{int x,y,id; double z;}a[u],b[u];
int fa[u],ans[u],n,m,k,i,now,x,y;
double l=-1e6,r=1e6,mid;
bool operator <(rec a,rec b)
{
	return a.z<b.z;
}
int get(int x)
{
	if(x==fa[x]) return x;
	return fa[x]=get(fa[x]);
}
int solve()
{
	int i,t=0,now=0;
	for(i=1;i<=m;i++)
		b[i]=a[i],b[i].x==1?b[i].z+=mid:0;
	sort(b+1,b+m+1);
	for(i=1;i<=n;i++) fa[i]=i;
	for(i=1;i<=m;i++)
	{
		x=get(b[i].x),y=get(b[i].y);
		if(x!=y)
		{
			ans[++t]=b[i].id,now+=b[i].x==1;
			fa[x]=y; 
		}
	}
	return now;
}

int main()
{
	ios::sync_with_stdio(false);
	cin>>n>>m>>k;
	for(i=1;i<=m;i++)
	{
		cin>>a[i].x>>a[i].y>>a[i].z;
		if(a[i].x>a[i].y) swap(a[i].x,a[i].y);
		a[i].id=i; 
	}
	for(i=1;i<=100;i++)
	{
		mid=(l+r)/2;
		now=solve(); 
		if(now==k) break;
		if(now<k) r=mid; else l=mid;
	}
	if(now==k)
	{
		cout<<n-1<<endl;
		for(i=1;i<n;i++) cout<<ans[i]<<' ';
	}
	else cout<<"-1\n";
	return 0;
}