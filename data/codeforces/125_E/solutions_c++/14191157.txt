#include<cstdio>
#include<algorithm>
#define N 100005
double l=-1e6,r=1e6,mid;
int n,m,K,t,len,cnt,C,x[N],y[N],z[N],p[N],f[N],a[N];
bool cmp(int i,int j){return (x[i]==1)*mid+z[i]<(x[j]==1)*mid+z[j];}
int get(int x){return f[x]-x?f[x]=get(f[x]):x;}
int work(bool flag)
{
	cnt=len=0,std::sort(p,p+m,cmp); for (int i=1;i<=n;i++) f[i]=i;
	for (int k=0;k<m;k++){
		int i=p[k],t1=get(x[i]),t2=get(y[i]);
		if (t1-t2 && (cnt+(x[i]==1)<=K || flag)) f[t1]=t2,a[++len]=i,cnt+=x[i]==1;
		}
}
int main()
{
	scanf("%d%d%d",&n,&m,&K);
	for (int i=0;i<m;i++){
		scanf("%d%d%d",&x[i],&y[i],&z[i]),p[i]=i;
		if (x[i]>y[i]) t=x[i],x[i]=y[i],y[i]=t; C+=x[i]==1;
		}
	work(1); if (len<n-1 || C<K || n>1 && !K) return puts("-1"),0;
	while (l+.1<r && cnt-K){
		mid=(l+r)/2,work(1);
		if (cnt<K) r=mid; else l=mid;
		}
	if (cnt-K) mid=(l+r)/2; work(0); printf("%d\n",len);
	for (int i=1;i<=len;i++) printf("%d%s",a[i]+1,i<len?" ":"\n");
	return 0;
}
