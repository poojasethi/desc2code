#include <cstdio>
#include <cstring>
using namespace std;
const int N=100004,M=400004;
struct rec {int a[26];} sum[M];
int n,m,set[M],ql,qr,qv;
char s[N];
void build(int o,int l,int r)
{
	set[o]=-1;
	if (l==r)
	{
		for (int i=0;i<26;i++) sum[o].a[i]=0;
		sum[o].a[s[l]-'a']=1;
		return;
	}
	int m=(l+r)/2;
	build(o*2,l,m); build(o*2+1,m+1,r);
	for (int i=0;i<26;i++) sum[o].a[i]=sum[o*2].a[i]+sum[o*2+1].a[i];
}
void setv(int o,int l,int r,int v)
{
	set[o]=v;
	for (int i=0;i<26;i++) sum[o].a[i]=0;
	sum[o].a[v]=r-l+1;
}
void down(int o,int l,int r)
{
	if (set[o]<0) return;
	int m=(l+r)/2;
	setv(o*2,l,m,set[o]);
	setv(o*2+1,m+1,r,set[o]);
	set[o]=-1;
}
void Set(int o,int l,int r)
{
	if ((ql<=l)&&(r<=qr)) {setv(o,l,r,qv); return;}
	int m=(l+r)/2; down(o,l,r);
	if (ql<=m) Set(o*2,l,m);
	if (m<qr) Set(o*2+1,m+1,r);
	for (int i=0;i<26;i++) sum[o].a[i]=sum[o*2].a[i]+sum[o*2+1].a[i];
}
rec query(int o,int l,int r)
{
	if ((ql<=l)&&(r<=qr)) return sum[o];
	int m=(l+r)/2; down(o,l,r);
	rec ret; for (int i=0;i<26;i++) ret.a[i]=0;
	if (ql<=m) ret=query(o*2,l,m);
	if (m<qr)
	{
		rec tmp=query(o*2+1,m+1,r);
		for (int i=0;i<26;i++) ret.a[i]+=tmp.a[i];
	}
	return ret;
}
void getans(int o,int l,int r)
{
	if (l==r)
	{
		int i;
		for (i=0;i<26;i++) if (sum[o].a[i]) break;
		putchar('a'+i);
		return;
	}
	int m=(l+r)/2; down(o,l,r);
	getans(o*2,l,m); getans(o*2+1,m+1,r);
}
int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int i,j; scanf("%d%d%s",&n,&m,s+1);
	build(1,1,n);
	for (i=1;i<=m;i++)
	{
		scanf("%d%d",&ql,&qr);
		int l=ql,r=qr;
		rec c=query(1,1,n);
		int k=0,cnt=0;
		for (j=0;j<26;j++) if (c.a[j]%2) k=j,cnt++;
		if (cnt>1) continue;
		if (cnt)
		{
			c.a[k]--;
			ql=qr=(l+r)/2; qv=k;
			Set(1,1,n);
		}
		for (j=0;j<26;j++)
		{
			if (!c.a[j]) continue;
			ql=l; qr=l+c.a[j]/2-1; qv=j;
			Set(1,1,n);
			ql=r-c.a[j]/2+1; qr=r; qv=j;
			Set(1,1,n);
			l+=c.a[j]/2; r-=c.a[j]/2;
		}
	}
	getans(1,1,n);
	putchar('\n');
	fclose(stdin); fclose(stdout);
	return 0;
}