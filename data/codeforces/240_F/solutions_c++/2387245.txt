#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define rep(i,n) for (int i=0;i<n;i++)
int n,m,l,r,ans[100100],S[100];
char s[100100];
struct segment{
	int cnt[26],fg;
}nd[1<<18];
void set(int p,int tl,int tr,int g) {
	nd[p].fg=g;
	rep(j,26) nd[p].cnt[j]=0;
	nd[p].cnt[g]=tr-tl+1;
}
void push(int p,int tl,int tr) {
	if (tl==tr) return;
	if (nd[p].fg!=-1) {
		int mid=(tl+tr)>>1;
		set(p<<1,tl,mid,nd[p].fg);
		set((p<<1)+1,mid+1,tr,nd[p].fg);
		nd[p].fg=-1;
	}
}
void insert(int p,int tl,int tr,int l,int r,int g) {
	if (tl==l && tr==r) { set(p,tl,tr,g);return; }
	push(p,tl,tr);
	int mid=(tl+tr)>>1;
	if (r<=mid) insert(p<<1,tl,mid,l,r,g);
	else if (l>mid) insert((p<<1)+1,mid+1,tr,l,r,g);
	else insert(p<<1,tl,mid,l,mid,g),insert((p<<1)+1,mid+1,tr,mid+1,r,g);
	rep(j,26) nd[p].cnt[j]=nd[p<<1].cnt[j]+nd[(p<<1)+1].cnt[j];
}
int ask(int p,int tl,int tr,int l,int r,int g) {
	if (tl==l && tr==r) return nd[p].cnt[g];
	push(p,tl,tr);
	int mid=(tl+tr)>>1;
	if (r<=mid) return ask(p<<1,tl,mid,l,r,g);
	else if (l>mid) return ask((p<<1)+1,mid+1,tr,l,r,g);
	else return ask(p<<1,tl,mid,l,mid,g)+ask((p<<1)+1,mid+1,tr,mid+1,r,g);
}
void gans(int p,int tl,int tr) {
	if (tl==tr) rep(j,26) if (nd[p].cnt[j]) {s[tl]=j+'a';return;}
	int mid=(tl+tr)>>1;push(p,tl,tr);
	gans(p<<1,tl,mid);gans((p<<1)+1,mid+1,tr);
}
int main() {
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d%d",&n,&m);
	scanf("%s",&s);
	rep(j,(1<<18)) nd[j].fg=-1;
	rep(i,n) insert(1,0,n-1,i,i,s[i]-'a');
	int t=1;
	rep(i,m) {
		scanf("%d%d",&l,&r);
		--l;--r;
		int k=0;
		rep(j,26) {
			S[j]=ask(1,0,n-1,l,r,j);
			if (S[j]&1) k++;
		}
		if (k>=2) continue;
		int p;
		rep(j,26) {
			if (S[j]) insert(1,0,n-1,l,r,j),l+=S[j]/2,r-=S[j]/2;
			if (S[j]%2==1) p=j;
		}
		if (k) insert(1,0,n-1,l,r,p);
	}
	gans(1,0,n-1);
	rep(i,n) putchar(s[i]);
	puts("");
}