#include <iostream>
#include <iomanip>
#include <cmath>
#include <set>
#include <queue>
#include <cstring>
#include <algorithm>
#include <fstream>
#include <cstdlib>

using namespace std;

typedef long long ll;
typedef long double ld;
 
#define mp make_pair

const ll N = 1e5+5;
const ll M = 30;
const ll SQRT = 350;
const ll INF = 1e16;
const ll MOD = 1e9+7;

int n,q,c[N],seg[M][4*N],lazy[M][4*N],mark[M][4*N];
char ans[N];
string s;

inline void shift(int c,int v,int l,int r)
{
	if (!mark[c][v]) return;
	int mid = (l+r)/2;
	lazy[c][2*v] = lazy[c][2*v+1] = lazy[c][v];
	seg[c][2*v] = (mid-l)*lazy[c][2*v];
	seg[c][2*v+1] = (r-mid)*lazy[c][2*v+1];
	mark[c][2*v] = mark[c][2*v+1] = true;
	mark[c][v] = false;
}

inline void modify(int c,int v,int l,int r,int s,int e,int val)
{
	if (e<=l || s>=r) return;
	if (s<=l && e>=r)
	{
		mark[c][v] = true;
		lazy[c][v] = val;
		seg[c][v] = (r-l)*val;
		return;
	}
	int mid = (l+r)/2;
	shift(c,v,l,r);
	modify(c,2*v,l,mid,s,e,val);
	modify(c,2*v+1,mid,r,s,e,val);
	seg[c][v] = seg[c][2*v]+seg[c][2*v+1];
}

inline int get(int c,int v,int l,int r,int s,int e)
{
	if (e<=l || s>=r) return 0;
	if (s<=l && e>=r) return seg[c][v];
	int mid = (l+r)/2;
	shift(c,v,l,r);
	int ans = get(c,2*v,l,mid,s,e)+get(c,2*v+1,mid,r,s,e);
	seg[c][v] = seg[c][2*v]+seg[c][2*v+1];
	return ans;
}

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);		

	scanf("%d %d",&n,&q);
	int tmp;
	scanf("%d %d",&n,&q);
	for (int i = 0; i<n; i++)
	{
		char c;
		scanf("%c",&c);
		modify(c-'a',1,0,n,i,i+1,1);
	}
	for (int i = 0; i<q; i++)
	{
		int l,r;
		scanf("%d %d",&l,&r);
		l--;
		int cnt = 0 , k = 0;
		for (int j = 0; j<26; j++)
		{
			c[j] = get(j,1,0,n,l,r);
			if (c[j]%2)
			{
				cnt++;
				k = j;
				c[j]--;
			}
		}
	//	cout << cnt << ' ' << k << endl;
		if (((r-l)%2 && cnt>1) || ((r-l)%2==0 && cnt)) continue;
		int pos1 = l , pos2 = r;
		for (int j = 0; j<26; j++)
		{
			if (c[j] || j==k)
			{
				modify(j,1,0,n,l,r,0);
				modify(j,1,0,n,pos1,pos1+(c[j]/2),1);
				modify(j,1,0,n,pos2-(c[j]/2),pos2,1);
				pos1 += c[j]/2;
				pos2 -= c[j]/2;
			}
		}
		modify(k,1,0,n,pos1,pos2,1);
	}
	for (int i = 0; i<n; i++)
	{
		for (int j = 0; j<26; j++)
			if (get(j,1,0,n,i,i+1))
				ans[i] = char(j+'a');
		printf("%c",ans[i]);
	}
	printf("\n");
	
	return 0;
}
	 		     			 	 		 	 	  			 			