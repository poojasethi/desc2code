#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 100050
#define M 26
struct Point
 {int a[M];} s[N*4],Emp,C;
int n,m,xgw[N*4];char b[N];
Point operator+ (const Point &x,const Point &y)
 {
    C=Emp;
    for (int i=0;i<M;i++) C.a[i]=x.a[i]+y.a[i];
    return C;
 }
inline int Read()
 {
    int x=0;char y;
    do y=getchar(); while (y<'0'||y>'9');
    do x=x*10+y-'0',y=getchar(); while (y>='0'&&y<='9');
    return x;
 }
void Set_up(int x,int y,int z)
 {
    int i=x + y >> 1,j=z << 1;xgw[z]=-1;
    if (x==y) {s[z].a[b[x-1]-'a']=1;return;}
    Set_up(x,i,j);Set_up(i+1,y,j+1);
    s[z]=s[j]+s[j+1];
 }
void xgj(int x,int y,int z)
 {
    if (xgw[z]==-1) return;
    int j=z << 1;
    s[z]=Emp;s[z].a[xgw[z]]=y-x+1;
    if (x!=y)
      xgw[j]=xgw[j+1]=xgw[z];
    xgw[z]=-1;
 }
void Modify(int x,int y,int z,int o,int p,int u)
 {
    int i=x + y >> 1,j=z << 1;
    if (x==o&&y==p)
      {xgw[z]=u;xgj(x,y,z);return;}
    xgj(x,y,z);
    if (o<=i) Modify(x,i,j,o,min(p,i),u); else xgj(x,i,j);
    if (p>i) Modify(i+1,y,j+1,max(o,i+1),p,u); else xgj(i+1,y,j+1);
    s[z]=s[j]+s[j+1];
 }
Point Query(int x,int y,int z,int o,int p)
 {
    int i=x + y >> 1,j=z << 1;xgj(x,y,z);
    if (x==o&&y==p) return s[z];
    if (o>i) return Query(i+1,y,j+1,o,p);
    if (p<=i) return Query(x,i,j,o,p);
    return Query(x,i,j,o,i)+Query(i+1,y,j+1,i+1,p);
 }
void DFS(int x,int y,int z)
 {
    int i=x + y >> 1,j=z << 1;xgj(x,y,z);
    if (x==y)
     {
        for (int i=0;i<M;i++)
          if (s[z].a[i]) putchar(i+'a');
     } else
       DFS(x,i,j),DFS(i+1,y,j+1);
 }
int main()
 {
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    scanf("%d%d%s",&n,&m,b);
    Set_up(1,n,1);
    while (m--)
     {
        int q=Read(),w=Read(),k=0;Point e=Query(1,n,1,q,w);
        for (int i=0;i<M&&k!=2;i++) k+=e.a[i]&1;
        if (k==2) continue;
        for (int i=0;i<M;i++)
         {
            if (e.a[i]&1)
              Modify(1,n,1,q + w >> 1,q + w >> 1,i),e.a[i]--;
            if (e.a[i])
              Modify(1,n,1,q,q+e.a[i]/2-1,i),
              Modify(1,n,1,w-e.a[i]/2+1,w,i),
              q+=e.a[i]/2,w-=e.a[i]/2;
         }
     }
    DFS(1,n,1);puts("");
    return 0;
 }