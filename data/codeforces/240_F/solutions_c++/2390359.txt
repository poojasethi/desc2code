#include<cstdio>
#include<cstring>
#define N 400005
#define tree int t,int l,int r
#define left t*2,l,mid
#define right t*2+1,mid+1,r
#define M int mid=(l+r)/2
int n,m,flag=1,c[55];
char s[N];
struct seg_tree{
	int a[N],c[N];
	void down(tree,int mid){
		int v=c[t]; c[t]=0; c[t*2]=c[t*2+1]=v;
		if (v>0) a[t*2]=mid-l+1,a[t*2+1]=r-mid;
		else a[t*2]=a[t*2+1]=0;
		}
	int query(tree,int ll,int rr){
		if (l==ll && r==rr) return a[t]; 
		M; if (c[t]) down(t,l,r,mid);
		if (rr<=mid) return query(left,ll,rr);
		if (ll>mid) return query(right,ll,rr);
		return query(left,ll,mid)+query(right,mid+1,rr);
		}
	void modify(tree,int ll,int rr){
		if (l==ll && r==rr) {c[t]=flag,a[t]=(flag>0)?(r-l+1):0; return;}
		M; if (c[t]) down(t,l,r,mid);
		if (rr<=mid) modify(left,ll,rr);
		else if (ll>mid) modify(right,ll,rr);
			else modify(left,ll,mid),modify(right,mid+1,rr);
		a[t]=a[t*2]+a[t*2+1];
		}
}T[26];
int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d%d%s",&n,&m,s+1);
	for (int i=1;i<=n;i++) T[s[i]-97].modify(1,1,n,i,i);
	while (m--){
		int cnt=0,odd=0,l,r,st; scanf("%d%d",&l,&r); st=l;
		for (int i=0;i<26;i++){
			c[i]=T[i].query(1,1,n,l,r);
			if (c[i]&1) odd=i,cnt++;
			if (cnt>1) break;
			}
	//	for (int i=0;i<26;i++) printf("%d ",c[i]); printf("\n");
		if (cnt>1) continue; flag=-1;
		for (int i=0;i<26;i++) T[i].modify(1,1,n,l,r); flag=1;
		for (int i=0;i<26;i++) if (c[i]>1)
			T[i].modify(1,1,n,st,st+c[i]/2-1),st+=c[i]/2;
		if (cnt) T[odd].modify(1,1,n,st,st),st++;
		for (int i=25;i>=0;i--) if (c[i]>1)
			T[i].modify(1,1,n,st,st+c[i]/2-1),st+=c[i]/2;
		}
	for (int i=1;i<=n;i++)
		for (int j=0;j<26;j++)
			if (T[j].query(1,1,n,i,i)) {printf("%c",j+97); break;}
	printf("\n"); return 0;
}
