#include<stdio.h>

const int MAXN=131072;

struct seg_tree
{
	int t[MAXN<<1];
	inline void ins(int r,int a)
	{
		int u=1,l=1,m;
		for(;;)
		{
			++t[u];
			if(l==r)
				return;
			m=(l+r)>>1;
			if(a<=m)
				u+=u,r=m;
			else u+=u+1,l=m+1;
		}
	}
	inline void push(int u,int l,int m,int r)
	{
		if(t[u]==r-l+1)
		{
			t[u+u]=m-l+1;
			t[u+u+1]=r-m;
		}
		else if(!t[u])
			t[u+u]=t[u+u+1]=0;
	}
	inline void pull(int u)
	{
		t[u]=t[u+u]+t[u+u+1];
	}
	int ask(int u,int l,int r,int a,int b)
	{
		if(r<a || l>b)
			return 0;
		if(a<=l && r<=b)
			return t[u];
		int m=(l+r)>>1;
		push(u,l,m,r);
		return ask(u+u,l,m,a,b)+ask(u+u+1,m+1,r,a,b);
	}
	void set(int u,int l,int r,int a,int b,bool type)
	{
		if(r<a || l>b)
			return;
		if(a<=l && r<=b)
		{
			t[u]=type?r-l+1:0;
			return;
		}
		int m=(l+r)>>1;
		push(u,l,m,r);
		set(u+u,l,m,a,b,type);
		set(u+u+1,m+1,r,a,b,type);
		pull(u);
	}
}tr[26];

char s[MAXN];
int cnt[26];
int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int n,m,i,j,k,l,r;
	int mid;
	scanf("%d%d%s",&n,&m,s+1);
	for(i=1;i<=n;++i)
		tr[s[i]-'a'].ins(n,i);
	for(i=1;i<=m;++i)
	{
		scanf("%d%d",&l,&r);
		k=0,mid=-1;
		for(j=0;j<26;++j)
		{
			cnt[j]=tr[j].ask(1,1,n,l,r);
			if(cnt[j]&1)
				++k,mid=j;
			cnt[j]>>=1;
		}
		if(k!=(r-l+1)%2)
			continue;
		for(j=0;j<26;++j)
			tr[j].set(1,1,n,l,r,0);
		k=0;
		for(j=0;j<26;++j)
			if(cnt[j])
			{
				tr[j].set(1,1,n,l+k,l+k+cnt[j]-1,1);
				tr[j].set(1,1,n,r-k-cnt[j]+1,r-k,1);
				k+=cnt[j];
			}
		if(mid!=-1)
			tr[mid].set(1,1,n,l+k,r-k,1);
	}
//	puts("ok"),fflush(stdout);
	for(i=1;i<=n;++i)
		for(j=0;j<26;++j)
			if(tr[j].ask(1,1,n,i,i))
			{
				s[i]=j+'a';
				break;
			}
	puts(s+1);
	return 0;
}
