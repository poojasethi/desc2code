#include <cstdio>
#include <iostream>
#include <cstring>
using namespace std;

#define REP(i,n) for(int i = 0; i < n; i++)
#define CL(x) memset(x, 0, sizeof(x))

const int N = 100005, A = 26;
int val[A][4*N], sum[A][4*N];

inline void update(int c, int id, int a, int b) {
	int p = id>>1;
	if (val[c][p] != -1) {
		val[c][id] = val[c][p];
		sum[c][id] = val[c][id] * (b - a);
	}
}
inline void set_range(int c, int l, int r, int v, int id, int a, int b) {
	if (id != 1) update(c, id, a, b);
	if (l <= a && b <= r) {
		val[c][id] = v;
		sum[c][id] = (b-a)*v;
	} else if (!(r <= a || b <= l)) {
		set_range(c, l, r, v, (id<<1), a, (a+b)>>1);
		set_range(c, l, r, v, (id<<1)+1, (a+b)>>1, b);
		val[c][id] = -1;
		sum[c][id] = sum[c][id<<1] + sum[c][(id<<1)+1];
	}
	//cout << a << " " << b << " " << c << " " << sum[c][id] << endl;
}
inline int count_range(int c, int l, int r, int id, int a, int b) {
	if (id != 1) update(c, id, a, b);
	if (l <= a && b <= r) {
		return sum[c][id];
	} else if (r <= a || b <= l) {
		return 0;
	} else {
		return count_range(c, l, r, (id<<1), a, (a+b)>>1) + count_range(c, l, r, (id<<1)+1, (a+b)>>1, b);
	}
}

int n, m, l, r;
char x[N];

void print() {
	REP(i, n) {
		REP(j, 26) {
			if (count_range(j, i, i+1, 1, 0, n))
				printf("%c",'a'+j);
		}
	}
	printf("\n");
}

int main() {
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	
	scanf("%d %d",&n,&m);
	scanf("%s",&x);
	
	memset(val, -1, sizeof(val));
	memset(sum, 0, sizeof(sum));
	REP(i, n) set_range(x[i]-'a', i, i+1, 1,/**/ 1, 0, n);
	
	//print();
	
	int freq[A];
	REP(i, m) {
		scanf("%d %d",&l,&r);
		l--; r--;
		
		int odd = 0, is_odd = -1;
		REP(j, 26) {
			freq[j] = count_range(j, l, r+1,/**/ 1, 0, n);
			if (freq[j] % 2) {
				is_odd = j;
				odd++;
			}
		}
		
		/* REP(j, 3)
			cout << j << " " << freq[j] << endl; /**/
		
		if ((odd != 0 && (r - l + 1) % 2 == 0) || (odd != 1 && (r - l + 1) % 2 == 1)) {
			//cout << "nok" << endl;
			//can't do
		} else {
			//cout << "ok" << endl;
		
			REP(j, 26) if (freq[j])
				set_range(j, l, r+1, 0, 1, 0, n);
				
			int p = l;
			REP(j, 26) if (freq[j]) {
				set_range(j, p, p+freq[j]/2, 1, 1, 0, n);
				p += freq[j]/2;
			}
			if ((r - l + 1) % 2) {
				set_range(is_odd, p, p+1, 1, 1, 0, n);
				p++;
			}
			REP(j, 26) if (freq[25-j]) {
				set_range(25-j, p, p+freq[25-j]/2, 1, 1, 0, n);
				p += freq[25-j]/2;
			}/**/
			
			//print();
		}
	}
	
	print();
}
