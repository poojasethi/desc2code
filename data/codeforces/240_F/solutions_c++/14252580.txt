// #include <iostream>
#include <vector>
#include <string>
#include <fstream>
#include <algorithm>
#include <map>
#include <cassert>
#include <cstring>
#include <queue>

#define SZ(x) int(x.size())
#define InTheNameOfGod ios::sync_with_stdio(false); cin.tie(0);

using namespace std;

const int N = 100000 + 121;

int a[26], toset[4*N], t[4*N][26], n, m;
string s;

void shift(int xl, int xr, int k) {
	if (toset[k] == -1) return;
	toset[k*2] = toset[k*2+1] = toset[k];
	for (int i = 0; i < 26; i++) t[k*2][i] = t[k*2+1][i] = 0;
	int xm = (xl+xr)/2;
	t[k*2][toset[k]] = xm-xl;
	t[k*2+1][toset[k]] = xr-xm;
	toset[k] = -1;
}

void upd (int ql, int qr, int v, int xl = 0, int xr = n, int k = 1) 
{
	if (ql >= xr || qr <= xl) return;
	if (ql <= xl && qr >= xr)
	{
		toset[k] = v;
		for (int i = 0; i < 26; i++) t[k][i] = 0;
		t[k][v] = xr-xl;
		return;
	}
	int xm = (xr+xl)/2;
	shift(xl, xr, k);
	upd(ql, qr, v, xl, xm, k*2);
	upd(ql, qr, v, xm, xr, k*2+1);
	for (int i = 0; i < 26; i++)
	{
		t[k][i] = t[k*2][i] + t[k*2+1][i];
	}
} 


int get (int ql, int qr, int c, int xl = 0, int xr = n, int k = 1)
{
	if (ql >= xr || qr <= xl) return 0;
	if (ql <= xl && qr >= xr) return t[k][c];
	int xm = (xl+xr)/2;
	shift(xl, xr, k);
	return get (ql, qr, c, xl, xm, k*2) + get (ql, qr, c, xm, xr, k*2+1);
}

int main ()
{
	ifstream cin ("input.txt"); 
	ofstream cout ("output.txt"); 
	cin >> n >> m >> s;
	fill(toset, toset+4*N, -1);
	for (int i = 0; i < n; i++)
	{
		upd(i, i+1, s[i]-'a');
	}
	for (int i = 0; i < m; i++)
	{
		int l, r; cin >> l >> r; l--;
		int tf = 0, f = 0;
		for (int j = 0; j < 26; j++)
		{
			a[j] = get(l, r, j);
			if (a[j] & 1)
			{
				tf++;
				f = j;
			}	
		}
		if (tf > 1) continue;
		int cur = l;
		for (int j = 0; j < 26; j++)
		{
			if(a[j] == 0) continue;
			upd(cur, cur+(a[j]/2), j);
			cur += a[j]/2;
		}
		if (tf)
		{
			upd(cur, cur+1, f);
			cur++;
		}
		for (int j = 25; j >= 0; j--)
		{
			if(a[j] == 0) continue;
			upd(cur, cur+(a[j]/2), j);
			cur += a[j]/2;
		}
	}
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < 26; j++)
		{
			if (get (i, i+1, j))
				cout << char(j+'a');
		}
	}
	cout << flush;
	return 0;
}