#include <bits/stdc++.h>

using namespace std;

const int N = 100010;

int n,m;
char st[N];
int Cnt[26];

struct SegTree{
	int s[N<<2],tag[N<<2];
	inline void init(){memset(tag,0xff,sizeof(tag));}
	inline void Mdf(int x,int l,int r,int t){tag[x]=t;s[x]=(r-l+1)*t;}
	inline void Sink(int x,int l,int r){if(~tag[x]) Mdf(x<<1,l,l+r>>1,tag[x]),Mdf((x<<1)+1,(l+r>>1)+1,r,tag[x]),tag[x]=-1;}
	inline int qry(int x,int l,int r,int ql,int qr){
		if(ql<=l && qr>=r) return s[x];
		Sink(x,l,r);
		if(qr<=(l+r>>1)) return qry(x<<1,l,l+r>>1,ql,qr);
		else if(ql>(l+r>>1)) return qry((x<<1)+1,(l+r>>1)+1,r,ql,qr);
		else return qry(x<<1,l,l+r>>1,ql,qr)+qry((x<<1)+1,(l+r>>1)+1,r,ql,qr);
	}
	inline void mdf(int x,int l,int r,int ql,int qr,int t){
		if(ql<=l && qr>=r) Mdf(x,l,r,t);
		else{
			Sink(x,l,r);
			if(ql<=(l+r>>1)) mdf(x<<1,l,l+r>>1,ql,qr,t);
			if(qr>(l+r>>1)) mdf((x<<1)+1,(l+r>>1)+1,r,ql,qr,t);
			s[x]=s[x<<1]+s[(x<<1)+1];
		}
	}
}rt[26];

int main()
{
#ifdef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif
	scanf("%d%d%s",&n,&m,st+1);
	for(int i=0;i<26;i++) rt[i].init();
	for(int i=1;i<=n;i++) rt[st[i]-'a'].mdf(1,1,n,i,i,1);
	for(int i=1;i<=m;i++){
		int l,r,cnt=0,cl=0;scanf("%d%d",&l,&r);
		for(int i=0;i<26 && cnt<2;i++) cnt+=(Cnt[i]=rt[i].qry(1,1,n,l,r))&1;
		if(cnt>=2) continue;
		for(int i=0;i<26;i++){
			int t=Cnt[i];
			rt[i].mdf(1,1,n,l,r,0);
			if(t>1) rt[i].mdf(1,1,n,l+cl,l+cl+(t>>1)-1,1),rt[i].mdf(1,1,n,r-cl-(t>>1)+1,r-cl,1);
			cl+=t>>1;
			if(t&1) rt[i].mdf(1,1,n,l+r>>1,l+r>>1,1);
		}
	}
	for(int i=1;i<=n;i++)
		for(int j=0;j<26;j++) if(rt[j].qry(1,1,n,i,i)){
			st[i]=j+'a';break;
		}
	puts(st+1);
	return 0;
}
