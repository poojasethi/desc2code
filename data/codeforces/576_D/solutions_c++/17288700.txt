#include<bits/stdc++.h>

using namespace std;

#define pii pair<int,int>
#define ll long long
#define N (int)(155)
#define mod 1000000007
#define mp make_pair
#define pb push_back
#define nd second
#define st first
#define inf mod
#define endl '\n'
#define sag (sol|1)
#define sol (root<<1)
#define ort ((bas+son)>>1)
#define bit(x,y) ((x>>y)&1)

int n;

bitset<155> A[N],B[N];

class matris{ public:
	int a[155][155];
	matris operator*(matris b){
		matris c;

		for(int i=1 ; i<=n ; i++)
			for(int j=1 ; j<=n ; j++){
				A[i][j] = a[i][j];
				B[i][j] = b[j][i];
			}

		for(int i=1 ; i<=n ; i++)
			for(int j=1 ; j<=n ; j++)
				c[i][j] = (A[i]&B[j]).any();

		return c;
	}
	int* operator[](int x){
		return a[x];
	}
};

matris t,bos,p;

int ans = INT_MAX;
int i,j,k,m,x,y,z,l,H[N];
vector< pair< int , pii > > edge;
vector<int> arr[N];

matris fe(matris x,int y){
	if(!y)
		return bos;

	matris t = fe(x,y/2);

	if(y&1)
		return t*t*x;
	return t*t;
}

int main(){
	cin >> n >> m;

	for(i=1 ; i<=n ; i++)
		bos[i][i] = 1;

	for(i=1 ; i<=m ; i++){
		scanf("%d %d %d",&x,&y,&z);
		edge.pb(mp(z,mp(x,y)));
	}

	sort(edge.begin(),edge.end());

	t = bos;

	int l=0;

	for(i=0 ; i<edge.size() ; i++){

		x = edge[i].nd.st;
		y = edge[i].nd.nd;
		z = edge[i].st;
		
		t = t*fe(p,z-l);
		l = z;

		queue< pii > xx;
		
		p[x][y] = 1;
		arr[x].pb(y);

		for(j=1 ; j<=n ; j++)
			if(t[1][j])
				xx.push(mp(z,j));

		memset(H,0,sizeof H);

		while(!xx.empty()){
			int x = xx.front().nd;
			int v = xx.front().st;

			xx.pop();

			if(H[x])
				continue;

			if(x == n){
				ans = min(ans,v);
				break;
			}

			H[x] = 1;

			for(j=0 ; j<arr[x].size() ; j++)
				if(!H[arr[x][j]])
					xx.push(mp(v+1,arr[x][j]));
		}
	}

	if(ans < INT_MAX)
		cout << ans << endl;
	else
		puts("Impossible");
}
