#include<bits/stdc++.h>
#define N 151
using namespace std;
bitset<N>space,now,tmp,pmt[N],d[N],road[N];
int A[N],B[N],C[N],U[N],k,n,m,i,t;
void change(bitset<N>res[N],bitset<N>t[N]){
    for (int i=1;i<=n;i++)
        for (int j=1;j<=n;j++)
            res[i][j]=t[j][i];
}
void debug(bitset<N>a){
    for (int i=1;i<=n;i++)
        printf("%d ",(int)a[i]);
    puts("");
}
void mul(bitset<N>c[N],bitset<N>a[N],bitset<N>b[N]){
    change(d,b);
    for (int i=1;i<=n;i++)
        for (int j=1;j<=n;j++)
            c[i][j]=(a[i]&d[j]).any();
}
void mul(bitset<N>&c,bitset<N>a,bitset<N>b[N]){
    //for (int i=1;i<=n;i++) debug(b[i]);
    change(d,b);
    //for (int i=1;i<=n;i++) debug(d[i]);
    //debug(a);
    for (int i=1;i<=n;i++) 
        c[i]=(a&d[i]).any();
    //debug(c);
}
void copy(bitset<N>*a,bitset<N>*b){memcpy(a,b,sizeof(b));}
void Pow(int T){
    while (T){
        if (T&1) mul(tmp,now,road),now=tmp;
        //debug(now);
        T>>=1;mul(pmt,road,road);
        for (int i=1;i<=n;i++)
            road[i]=pmt[i];
  }
}
int main()
{
    scanf("%d%d",&n,&m);
    for (i=1;i<=m;i++)
        scanf("%d%d%d",&A[i],&B[i],&C[i]),U[i]=C[i];
    sort(U+1,U+m+1);
    *U=unique(U+1,U+m+1)-(U+1);
    U[++*U]=2e9;
    now=space;now[1]=1;
    for (k=1;k<=*U;k++){
        for (i=1;i<=n;i++) road[i]=space;
        for (i=1;i<=m;i++)
            if (C[i]<U[k]) 
                road[A[i]][B[i]]=1;
        //for (i=1;i<=n;i++)
            //debug(road[i]);
        for (t=1;t<=n&&(U[k-1]+t<=U[k]||k==*U);t++){
            mul(tmp,now,road);now=tmp;
            //debug(now);
            if (now[n]) return printf("%d\n",U[k-1]+t),0;
      }
      if (t>n) 
        Pow(U[k]-U[k-1]-n);
      //debug(now);
      //if (t>n)
            //Pow(U[k]-U[k-1]-n);
  }puts("Impossible");
}