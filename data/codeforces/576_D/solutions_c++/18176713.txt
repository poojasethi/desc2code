#include <cmath>
#include <cstdio>
#include <bitset>
#include <cstring>
#include <algorithm>

using namespace std;

struct edge
{
	int x,y,z;
	bool operator <(edge a)const {return z<a.z;}
}e[155];

const int inf=2000000000;

bitset<151> f[151],g[151];
int n;

struct matrix
{
	bool d[151][151];
	matrix operator *(matrix a)const
	{
		matrix b;
		for (int i=1;i<=n;i++)
			for (int j=1;j<=n;j++)
				f[i][j]=d[i][j];
		for (int i=1;i<=n;i++)
			for (int j=1;j<=n;j++)
				g[i][j]=a.d[j][i];
		for (int i=1;i<=n;i++)
			for (int j=1;j<=n;j++)
				b.d[i][j]=(f[i]&g[j]).any();
		return b;
	}
}b,c;

int d[155],q[155];

int main()
{
	#ifndef ONLINE_JUDGE
		freopen("input.txt","r",stdin);
		freopen("output.txt","w",stdout);
	#endif
	int m;scanf("%d%d",&n,&m);
	for (int i=1;i<=m;i++) scanf("%d%d%d",&e[i].x,&e[i].y,&e[i].z);
	sort(e+1,e+m+1);
	for (int i=1;i<=n;i++)
		for (int j=1;j<=n;j++)
			b.d[i][j]=0;
	for (int i=1;i<=n;i++)
		for (int j=1;j<=n;j++)
			c.d[i][j]=bool(i==j);
	e[0].z=0;int ans=inf;
	for (int i=1;i<=m;i++)
	{
		int t=e[i].z-e[i-1].z;
		while (t)
		{
			if (t&1) c=c*b;
			b=b*b;t>>=1;
		}
		for (int j=1;j<=n;j++)
			for (int k=1;k<=n;k++)
				b.d[j][k]=0;
		for (int j=1;j<=i;j++) b.d[e[j].x][e[j].y]=1;
		int f=1,r=1;q[1]=n;
		for (int j=1;j<n;j++) d[j]=inf;d[n]=0;
		while (f<=r)
		{
			int x=q[f++];
			for (int i=1;i<=n;i++)
				if (d[i]==inf&&b.d[i][x])
				{
					d[i]=d[x]+1;q[++r]=i;
				}
		}
		for (int j=1;j<=n;j++) if (c.d[1][j]&&d[j]<inf) ans=min(ans,d[j]+e[i].z);
	}
	if (ans<inf) printf("%d\n",ans); else puts("Impossible");
	return 0;
}
