#include<bits/stdc++.h>
using namespace std;
const int oo = 0x3f3f3f3f;
int N, M, dis[151][151], Ans = oo;

struct Edge{
    int u, v, w;
    bool operator < (const Edge& c){ return w < c.w; }
}E[151];

struct Matrix{
    bitset<151> R[151], C[151];
    void Set(int i,int j) { R[i].set(j);C[j].set(i); }
    Matrix operator * (const Matrix& c) const{
	Matrix ret;
	for(int i = 1;i <= N; ++i)
	    for(int j = 1;j <= N; ++j)
		if((R[i] & c.C[j]).count())
		    ret.Set(i, j);
	return ret;
    }
}C, T;

void pow(int d){ for(Matrix t = C; d;t = t * t, d >>= 1) if(d & 1) T = T * t; }
int main(){
    if(fopen("input.txt","r")){
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
    }

    scanf("%d%d", &N, &M);
    for(int i = 0;i < M; ++i) scanf("%d%d%d",&E[i].u,&E[i].v,&E[i].w);
    sort(E, E + M);

    memset(dis, oo, sizeof dis);
    for(int i = 1;i <= N; ++i) dis[i][i] = 0,T.Set(i, i);
    
    for(int i = 0;i < M; ++i){
	int u = E[i].u,v = E[i].v,w = E[i].w,d = w - E[i - 1].w;
	
	if(d) pow(d);
	
	C.Set(u, v); dis[u][v] = 1;
	for(int t = 1;t <= N; ++t)
	    for(int j = 1;j <= N; ++j)
		for(int k = 1;k <= N; ++k)
		    dis[j][k] = min(dis[j][k], dis[j][t] + dis[t][k]);

#ifdef DEBUG
	for(int i = 1;i <= N; ++i) {
	    for(int j = 1;j <= N; ++j){
		printf("%d",C.R[i][j] ? 1: 0);
	    }puts("");
	}puts("");

	for(int i = 1;i <= N; ++i) {
	    for(int j = 1;j <= N; ++j){
		printf("%d ",dis[i][j]);
	    }puts("");
	}puts("");
#endif
	for(int j = 1;j <= N; ++j)
	    if(T.R[1][j])
		Ans = min(Ans, w + dis[j][N]);
    };
    
    if(Ans >= oo) puts("Impossible");
    else printf("%d", Ans);
    return 0;
}

                                                                                                                                        