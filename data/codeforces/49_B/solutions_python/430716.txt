import sys
import math
import time
from Queue import Queue
from sets import Set

class pythonin:
    _data = []
    _ldata = []
    _cur = 0
    _lcur = 0
    
    def __init__(self):
        while True:
            try: self._ldata.append(raw_input())
            except EOFError : break

    def _convert(self):
        if self._lcur == len(self._ldata) : return
        l = self._ldata[self._lcur].split(" ")
        self._lcur += 1
        for x in l :
            if x != "" and x != "\t" :
                self._data.append(x)
        
    def eof(self) : 
        self._convert()
        return self._cur == len(self._data)

    def nextToken(self) :
        if self.eof() : return
        self._cur += 1
        return self._data[self._cur - 1]
    
    def nextInt(self) :
        return int(self.nextToken())
    
    def nextFloat(self) :
        return float(self.nextToken())
    
    def nextLine(self) :
        if self._lcur == len(self._ldata) : return 
        self._lcur += 1
        return self._ldata[self._lcur - 1]
    
#sys.stdin = open("input.txt", "r")
#sys.stdout = open("output.txt", "w")

pin = pythonin()

a = pin.nextInt()
b = pin.nextInt()

def toBase(x, base) :
    sum = 0
    for c in str(x) : 
        sum *= base
        sum += int(c)
    return sum
   
def clBase(x, base) :
    res = 0
    while x > 0:
        x /= base
        res += 1
    return res

res = 0

for base in range(max([int(c) for c in Set(str(a) + str(b))]) + 1, 1000) :
    res = max(res, clBase(toBase(a, base) + toBase(b, base), base))
    
print res



#print ("Press any key to continue")
#raw_input() 
