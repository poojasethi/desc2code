#include<iostream>
#include<cstring>
#include<algorithm>
#include<string>
#include<set>
#define MAXN 101
using namespace std;
int n;
int num1[52],num2[52];
string nam[MAXN],sur[MAXN],t[52],st;
multiset<string>s;
multiset<string>::iterator p;
inline int pos(char x)
{
	if(x<='Z')
		return x-'A';
	return x-'a'+26;
}
int main()
{
	int i,j;
	for(i=0;i<26;i++)
		t[i].push_back('A'+i);
	for(i=26;i<52;i++)
		t[i].push_back('a'+i-26);
	cin>>n;
	for(i=1;i<=n;i++)
	{
		cin>>nam[i];
		num1[pos(nam[i][0])]++;
	}	
	sort(nam+1,nam+1+n);
	for(i=1;i<=n;i++)
	{
		cin>>sur[i];
		num2[pos(sur[i][0])]++;
		s.insert(sur[i]);
	}
	for(i=1;i<=n;i++)
	{
		if(num1[pos(nam[i][0])]>num2[pos(nam[i][0])])
		{
			for(p=s.begin();p!=s.end()&&((*p)[0]!=nam[i][0]);p++)
				if(num1[pos((*p)[0])]<num2[pos((*p)[0])])
					break;
		}
		else
			p=s.lower_bound(t[pos(nam[i][0])]);
		st=*p;
		s.erase(p);
		cout<<nam[i]<<" "<<st;
		if(i==n)
			cout<<endl;
		else
			cout<<", ";
		num1[pos(nam[i][0])]--;
		num2[pos(st[0])]--;
	}
	return 0;
}