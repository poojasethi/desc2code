#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iostream>
#include<algorithm>

using namespace std;

#define N 105
#define M 26
struct node
{
    char name[15];
}s[N],t[N];
int n,i,a[M],b[M],j,ans[N];
bool visit[N];
int cmp(const node &a,const node &b)
{
    return strcmp(a.name,b.name)<0;
}
int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++)
        scanf("%s",s[i].name),a[s[i].name[0]-'A']++;
    for(int i=0;i<n;i++)
        scanf("%s",t[i].name),b[t[i].name[0]-'A']++;
    sort(s,s+n,cmp);
    sort(t,t+n,cmp);
    for(int i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        if(!visit[j]&&((s[i].name[0]==t[j].name[0])||(a[s[i].name[0]-'A']>b[s[i].name[0]-'A']&&b[t[j].name[0]-'A']>a[t[j].name[0]-'A'])))
            break;
        ans[i]=j;
        visit[j]=true;
        a[s[i].name[0]-'A']--;
        b[t[j].name[0]-'A']--;
    }
    for(int i=0;i<n-1;i++)
        printf("%s %s, ",s[i].name,t[ans[i]].name);
    printf("%s %s",s[n-1].name,t[ans[n-1]].name);
    return 0;
}
