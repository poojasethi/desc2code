#include<iostream>
#include<cstring>
#include<vector>
#include<algorithm>
using namespace std;
#define forit(i,a) for(__typeof(a.begin()) i=a.begin();i!=a.end();i++)
#define rep(i,a) for(int i=0;i<a;i++)
typedef pair<string,bool> pi;

vector<pi> names[2];
int c[2][26];
int getmx() {
	memset(c,0,sizeof(c));
	rep(i,2) {
		forit(j,names[i]) {
			if(j->second) {
				c[i][j->first[0]-'A']++;
			}
		}
	}
	int sm=0;
	rep(i,26) {
		sm+=min(c[0][i],c[1][i]);
	}
	return sm;      
}
string ans="";
int main() {
	int n;
	cin>>n;
	string t;
	rep(i,2) {
		rep(j,n) {
			cin>>t;
			names[i].push_back(pi(t,true));
		}
		sort(names[i].begin(),names[i].end());
	}
	int targ=getmx(),add=0;
	forit(i,names[0]) {
		t=i->first;
		i->second=false;
		forit(j,names[1]) {
			if(j->second) {
				bool inc=(t[0]==j->first[0]);
				add+=inc;
				j->second=false;
				if(add+getmx()==targ) {
					ans+=", ";
					ans+=t;
					ans+=' ';
					ans+=j->first;
					break;
				}
				add-=inc;
				j->second=true;
			}
		}
	}
	cout<<ans.substr(2);
}
