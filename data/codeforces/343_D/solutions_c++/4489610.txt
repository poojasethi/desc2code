#include <iostream>
#include <vector>
using namespace std;  int n, q; const int h=1<<19; int a[h*2], b[h*2
]; int s[h], e[h], cdfs=-1; vector<int> adj[h];  inline void dfs(int 
u, int p=0) { s[u]=++cdfs; for(int i=0; i<(int)adj[u].size(); i++) if
(adj[u][i]!=p) dfs(adj[u][i], u); e[u]=cdfs; }  inline void put1(int 
x, int y, int t) { for(x+=h, y+=h; x<=y; x=(x+1)/2, y=(y-1)/2) { if(x
&1) a[x]=t; if(~y&1) a[y]=t; } }  inline void put0(int x, int t) { 
for(x+=h; x; x/=2) b[x]=t; }  inline int get1(int x) { int r=0; for(x
+=h; x; x/=2) r=max(r, a[x]); return r; }  inline int get0(int x, int
y) { int r=0; for(x+=h, y+=h; x<=y; x=(x+1)/2, y=(y-1)/2) { if(x&1) 
r=max(r, b[x]); if(~y&1) r=max(r, b[y]); } return r; }  int main() { 
cin>>n; for(int u, v, i=1; i<n; i++) cin>>u>>v, adj[u].push_back(v), 
adj[v].push_back(u);  dfs(1);  cin>>q; for(int c, u, t=1; t<=q; t++) 
{ cin>>c>>u; if(c==1) put1(s[u], e[u], t); else if(c==2) put0(s[u], t
); else cout << (get0(s[u], e[u]) < get1(s[u])) << endl; } }
