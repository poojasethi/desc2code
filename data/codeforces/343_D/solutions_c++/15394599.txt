#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

const int N = 5*1e5+3;
const int rozmiar = 1<<22;

vector <int> Graf[N];
int Nr[N];
pair <int,int> Order[N]; 
int D_P1[2*rozmiar];
int D_P2[2*rozmiar];
int time;

void Wczytaj(int n){
	int i;
	int v,u;
	for(i=0; i<n-1; i++){
		scanf("%d%d", &v,&u);
		Graf[v].push_back(u);
		Graf[u].push_back(v);
	}
}

void DFSOrder(int v,int ojciec){
	int i;
	Order[v].first = time++;
	Nr[v] = time++;
	for(i=0; i<Graf[v].size(); i++){
		if(Graf[v][i] != ojciec) DFSOrder(Graf[v][i],v);
	}
	Order[v].second = time++;
}

void Dodaj1(int p,int k,int x){
	D_P1[p] = max(D_P1[p],x);
	D_P1[k] = max(D_P1[k],x);
	while(p/2 != k/2){
		if(p%2 == 0) D_P1[p+1] = max(D_P1[p+1],x);
		if(k%2 == 1) D_P1[k-1] = max(D_P1[k-1],x);
		p /= 2; k /= 2;
	}
}

int WezMax1(int v){
	int res;
	res = 0;
	while(v>0){
		res = max(res,D_P1[v]);
		v /= 2;
	}
	return res;
}

void Dodaj2(int v,int x){
	D_P2[v] = x;
	v /= 2;
	while(v>0){
		D_P2[v] = max(D_P2[2*v],D_P2[2*v+1]);
		v /= 2;
	}
}

int WezMax2(int p,int k){
	int res;
	res = max(D_P2[p],D_P2[k]);
	while(p/2 != k/2){
		if(p%2 == 0) res = max(res,D_P2[p+1]);
		if(k%2 == 1) res = max(res,D_P2[k-1]);
		p /= 2; k /= 2;
	}
	return res;
}

int main(){
	int n,i,q;
	int c,v;
	int time1,time2;
	scanf("%d", &n);
	Wczytaj(n);
	time = 1;
	DFSOrder(1,1);
	scanf("%d", &q);
	for(i=1; i<=q; i++){
		scanf("%d%d", &c,&v);
		if(c==1){
			Dodaj1(rozmiar+Order[v].first,rozmiar+Order[v].second, i);
		}
		if(c==2){
			Dodaj2(rozmiar+Nr[v], i);
		}
		if(c==3){
			time1 = WezMax1(rozmiar+Nr[v]);
			time2 = WezMax2(rozmiar+Order[v].first,rozmiar+Order[v].second);
			//printf("%d %d\n", time1,time2);
			if(time1 <= time2) printf("0\n");
			else printf("1\n");
		}
	}
	return 0;
}
