#include<bits/stdc++.h>
#define maxn 500009
#define INF 1000000007
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define mid(a,b) (a+b)/2
#define sz size()
#define ll long long
#define pii pair<int,int>
#define all(x) x.begin(),x.end()
using namespace std;
vector<int>adj[maxn];
int tout[maxn],tin[maxn],S[maxn*4],pary[maxn];
int tie=0;
void dfs(int nd, int par){
	tin[nd]=++tie;
	pary[nd]=par;
	for(int i=0;i<adj[nd].sz;i++){
		if(adj[nd][i]!=par)
			dfs(adj[nd][i],nd);
	}
	tout[nd]=tie;
}

void upd(int l, int r, int x, int y, int nd, int v){
	if(l>=x && r<=y){
		S[nd]=(r-l+1)*v;
		return;
	}
	if(l>y or r<x)
		return;
	if(S[nd]==(r-l+1)){
		S[nd*2]=mid(l,r)-l+1;
		S[nd*2+1]=r-mid(l,r);
	}
	if(S[nd]==0){
		S[nd*2]=0;
		S[nd*2+1]=0;
	}
	upd(l,mid(l,r),x,y,nd*2,v);
	upd(mid(l,r)+1,r,x,y,nd*2+1,v);
	S[nd]=S[nd*2]+S[nd*2+1];
}

int get(int l, int r, int x, int y, int nd){
	if(l>=x && r<=y){
		return (S[nd]==r-l+1);
	}
	if(l>y or r<x)
		return 1;
	if(S[nd]==(r-l+1)){
		S[nd*2]=mid(l,r)-l+1;
		S[nd*2+1]=r-mid(l,r);
	}
	if(S[nd]==0){
		S[nd*2]=0;
		S[nd*2+1]=0;
	}
	int a=get(l,mid(l,r),x,y,nd*2);
	int b=get(mid(l,r)+1,r,x,y,nd*2+1);
	return (a==1 && b==1);
}

int main(){
	int n,m,type,k,l;
	cin>>n;
	for(int i=0;i<n-1;i++){
		scanf("%d%d" , &k,&l);
		adj[k].pb(l);
		adj[l].pb(k);
	}
	dfs(1,0);
	cin>>m;

	for(int i=0;i<m;i++){
		scanf("%d%d" , &type,&k);
		if(type==1){
			if(k!=1)
			if(get(1,n,tin[k],tout[k],1)==0 && k!=1)
			upd(1,n,tin[pary[k]],tin[pary[k]],1,0);
			upd(1,n,tin[k],tout[k],1,1);
		}
		if(type==2)
			upd(1,n,tin[k],tin[k],1,0);
		if(type==3)
			printf("%d\n" , get(1,n,tin[k],tout[k],1));
	}

return 0;
}

