#include <iostream>
#include <cstdio>
#include <vector>
#define PB push_back
using namespace std;

const int MAX = 500050;
const int MAX_TREE = 2097152+1000;

int n, licznik = 1;

vector< int >tab[ MAX ];
int vis[ MAX ];
int pre[ MAX ];
int post[ MAX ];

int M = 1;
int wl[ MAX_TREE ]; // drzewo na ktorym wlewamy wode
int wyl[ MAX_TREE ]; // drzewo na ktorym wylewamy wode

void DFS(int v)
{
	pre[ v ] = licznik++;
	vis[ v ] = true;
	for (int i = 0; i < (int)tab[ v ].size(); i++)
		if( !vis[ tab[v][i] ] )
			DFS(tab[ v ][ i ]);
	post[ v ] = licznik++;
}

void Wlej(int a,int b,int oper)
{
	a += (M-1);
	b += (M-1);
	
	wl[ a ] = oper;
	wl[ b ] = oper;
	
	while( a/2 != b/2 )
	{
		if( a%2 == 0 )
			wl[ a+1 ] = oper;
		if( b%2 == 1 )
			wl[ b-1 ] = oper;
		a /= 2;
		b /= 2;
	}
}

int Wlano(int a)
{
	a += (M-1);
	int wyn = wl[ a ];
	
	while( a != 0 )
	{
		wyn = max(wyn,wl[ a ]);
		a /= 2;
	}
	return wyn;
}

void Wylej(int a,int oper)
{
	a += (M-1);
	wyl[ a ] = oper;
	
	while( a != 0 )
	{
		wyl[ a ] = oper;
		a /= 2;
	}
}

int Wylano(int a,int b)
{
	a += (M-1);
	b += (M-1);
	int wyn = max(wyl[ a ],wyl[ b ]);
	
	while( a/2 != b/2 )
	{
		if( a%2 == 0 )
			wyn = max(wyn,wyl[ a+1 ]);
		if( b%2 == 1 )
			wyn = max(wyn,wyl[ b-1 ]);
		a /= 2;
		b /= 2;
	}
	return wyn;
}

int main()
{
	int a = 0, b = 0, oper = 0, t = 0;
	scanf("%d", &n);
	
	while( M < 2*n )
		M *= 2;
	
	for (int i = 1; i <= n-1; i++) {
		scanf("%d%d", &a, &b);
		tab[ a ].PB(b);
		tab[ b ].PB(a);
	}
	
	DFS(1);

	scanf("%d", &t);
	
	for (int i = 1; i <= t; i++) {
		scanf("%d%d", &oper, &a);
		if( oper == 1 )
			Wlej(pre[ a ],post[ a ],i);
		else if( oper == 2 )
			Wylej(pre[ a ],i);
		else {
			if( Wylano(pre[ a ],post[ a ]) >= Wlano(pre[ a ]) )
				printf("0\n");
			else printf("1\n");
		}
	}
	
	return 0;
}