#include <cstdio>
#include <iostream>
#include <vector>

#define pb push_back

using namespace std;

const int MAXN=500005;

int N,M,cnt;
int beg[MAXN];
int end[MAXN];
int seg2[MAXN*5];
int lazy[MAXN*5];

vector<int> g[MAXN];

inline void rec( int nd , int pre ){
	
	beg[nd]=++cnt;
	
	for( vector<int>::iterator it=g[nd].begin() ; it!=g[nd].end() ; it++ )
		if( *it!=pre )
			rec(*it,nd);
	
	end[nd]=cnt;
}

inline void push_down( int k ){
	if( lazy[k] ){
		lazy[k*2]=lazy[k];
		lazy[k*2+1]=lazy[k];
		lazy[k]=0;
	}
}

inline void update( int k , int b , int e , int a1 , int a2 , int v ){
	
	if( b>a2 || e<a1 )
		return;
	if( b>=a1 && e<=a2 ){
		lazy[k]=v;
		return;
	}
	
	push_down(k);
	
	update(k*2,b,(b+e)/2,a1,a2,v);
	update(k*2+1,(b+e)/2+1,e,a1,a2,v);
}

inline int query( int k , int b , int e , int pl ){
	
	if( b>pl || e<pl )
		return 0;
	if( b==e )
		return lazy[k];
	
	push_down(k);
	
	return max(query(k*2,b,(b+e)/2,pl),query(k*2+1,(b+e)/2+1,e,pl));
}

inline int update2( int k , int b , int e , int pl , int v ){
	
	if( b>pl || e<pl )
		return seg2[k];
	if( b==e )
		return seg2[k]=v;
	
	return seg2[k]=max(update2(k*2,b,(b+e)/2,pl,v),update2(k*2+1,(b+e)/2+1,e,pl,v));
}

inline int query2( int k , int b , int e , int a1 , int a2 ){
	
	if( b>a2 || e<a1 )
		return 0;
	if( b>=a1 && e<=a2 )
		return seg2[k];
	
	return max(query2(k*2,b,(b+e)/2,a1,a2),query2(k*2+1,(b+e)/2+1,e,a1,a2));
}

int main(){
	
	scanf(" %d",&N);
	
	for( int a,b,i=1 ; i<N ; i++ ){
		scanf(" %d %d",&a,&b);
		g[a].pb(b);
		g[b].pb(a);
	}
	
	rec(1,0);
	
	scanf(" %d",&M);
	
	for( int a,b,i=1 ; i<=M ; i++ ){
		scanf(" %d %d",&a,&b);
		if( a==1 )
			update(1,1,N,beg[b],end[b],i);
		if( a==2 )
			update2(1,1,N,beg[b],i);
		if( a==3 )
			printf("%d\n",query(1,1,N,beg[b])>query2(1,1,N,beg[b],end[b]));
	}
	
	return 0;
}
