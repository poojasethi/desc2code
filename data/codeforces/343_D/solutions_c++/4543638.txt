#include <bits/stdc++.h>
#define fr(i,a,b) for(int i=a;i<b;i++)
#define rep(i,b) fr(i,0,b)
#define F first
#define S second
#define mp make_pair
#define pb push_back

using namespace std;
typedef pair<int,int> pii;
typedef long long ll;
#define N 500100
int cod[N], pai[N],lim[N];
set<int> cnj;
set<int>::iterator it;
int cnt;
vector<int> adj[N];
void calc(int v, int p){
    pai[v] = p;
    cod[v] = cnt++;
    rep(i,adj[v].size()){
        int w=adj[v][i];
        if(w==pai[v]) continue;
        calc(w,v);
    }   
    lim[v] = cnt-1;
}

int main(){
    int n,q;
    scanf("%d",&n);
    cnt=0;
    rep(i,n-1){
        int a, b;
        scanf("%d %d",&a,&b);
        adj[a].pb(b), adj[b].pb(a);
    }
    calc(1,-1);
    fr(i,1,n+1){
        if(adj[i].size()<=1) cnj.insert(cod[i]);
        //printf("%d  %d %d %d\n",i,cod[i],lim[i],pai[i]);
    }
    scanf("%d",&q);
    rep(i,q){
        int op, v;
        scanf("%d %d",&op,&v);
        if(op==1){
            int qtd=0;
            while((it = cnj.lower_bound(cod[v])) != cnj.end() && (*it)<=lim[v]) cnj.erase(it), qtd++;
            if(qtd && v!=1){
                cnj.insert(cod[pai[v]]);
            }
        }else if(op==2){            
            if((it = cnj.lower_bound(cod[v])) == cnj.end() || (*it)>lim[v])
                cnj.insert(cod[v]);
        }else{
            if((it = cnj.lower_bound(cod[v])) != cnj.end() && (*it)<=lim[v])
                printf("0\n");
            else
                printf("1\n");          
        }
    }
    
    return 0;
}
