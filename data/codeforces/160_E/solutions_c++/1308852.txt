#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <set>
#include <map>
#include <utility>
#define INF 2000000005

using namespace std;

typedef pair<int,int> pr;
typedef set<pr> p_set;
const int N=100005;
struct rec {int st,ed,tm,o,id;}a[2*N];
struct node {p_set v;}t[16*N];
int n,m,i,j,tot,p,q,x,last,ans[N];
set<int> s;
map<int,int> mp;

int cmp(const rec &a,const rec &b)
{
	if (a.st==b.st) return a.o<b.o;
	return a.st<b.st;
}

void init()
{
	scanf("%d%d",&n,&m);
	for (i=1;i<=n;i++) 
	{
		scanf("%d%d%d",&a[i].st,&a[i].ed,&a[i].tm);
		a[i].id=i;s.insert(a[i].st);s.insert(a[i].ed);
	}
	for (i=n+1;i<=n+m;i++)
	{
		scanf("%d%d%d",&a[i].st,&a[i].ed,&a[i].tm);
		a[i].id=i-n;a[i].o=1;s.insert(a[i].st);s.insert(a[i].ed);
	}
	set<int>::iterator it;
	for (it=s.begin();it!=s.end();it++) mp[*it]=++tot;
	for (i=1;i<=n+m;i++) a[i].st=mp[a[i].st],a[i].ed=mp[a[i].ed];
	sort(a+1,a+1+n+m,cmp);
}

void modify(int l,int r,int w)
{
	int mid=(l+r)>>1;
	t[w].v.insert(make_pair(a[j].tm,a[j].id));
	if (l==r) return;
	if (a[j].ed<=mid) modify(l,mid,w<<1);else modify(mid+1,r,(w<<1)+1);
}

pr query(int l,int r,int w)
{
	int mid=(l+r)>>1;
	p_set::iterator it;
	if (p<=l&&r<=q) 
	{
		it=t[w].v.lower_bound(make_pair(x,-1));
		if (it==t[w].v.end()) return make_pair(INF,-1);
		else return *it;
	}
	pr x=make_pair(INF,-1),y=make_pair(INF,-1);
	if (p<=mid) x=query(l,mid,w<<1);
	if (mid<q) y=query(mid+1,r,(w<<1)+1);
	return x.first<y.first?x:y;
}

void dawn()
{
	for (i=1;i<=n+m;i++) if (a[i].o)
	{
		for (j=last+1;j<i;j++) modify(1,tot,1);
		last=i;
		p=a[i].ed;q=tot;x=a[i].tm;
		pr t=query(1,tot,1); 
		ans[a[i].id]=t.second;
	}
	for (i=1;i<=m;i++) printf("%d ",ans[i]);
	cout<<endl;
}

int main()
{
	//freopen("1.txt","r",stdin);
	init();
	dawn();
	//while (1);
}
