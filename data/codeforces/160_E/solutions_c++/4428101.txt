#include<cstdio>
#include<cstring>
#include<algorithm>

using namespace std;

const int maxn = 200010;

int tt[maxn],ans[maxn>>1];
int ind[maxn<<2],mv[maxn<<2];

struct bus
{
    int l,r,ti,id;
    bool operator<(const bus& a) const
    {
        return (l<a.l||(l==a.l&&id<a.id));
    }
}ji[maxn];

int query(int p,int v,int l,int r,int rt)
{
    if(mv[rt]<v)
        return -1;
    if(l==r)
        return ind[rt];
    int m = (l+r)>>1;
    if(p<=m)
    {
        int st = query(p,v,l,m,rt<<1);
        if(st>0)
            return st;
    }
    return query(p,v,m+1,r,rt<<1|1);
}

void update(int p,int v,int w,int l,int r,int rt)
{
    if(l==r)
    {
        mv[rt] = v;
        ind[rt] = w;
        return ;
    }
    int m = (l+r)>>1;
    if(p<=m)
        update(p,v,w,l,m,rt<<1);
    else
        update(p,v,w,m+1,r,rt<<1|1);
    mv[rt] = max(mv[rt<<1],mv[rt<<1|1]);
}

int main()
{
    int n,m;
    scanf("%d%d",&n,&m);
    m += n;
    for(int i=1;i<=m;++i)
    {
        scanf("%d%d%d",&ji[i].l,&ji[i].r,&ji[i].ti);
        ji[i].id = i;
        tt[i] = ji[i].ti;
    }
    sort(ji+1,ji+m+1);
    sort(tt+1,tt+m+1);
    int tot = unique(tt+1,tt+m+1) - tt - 1;
    for(int i=1;i<=m;i++)
    {
        int p = lower_bound(tt+1,tt+tot+1,ji[i].ti) - tt;
        if(ji[i].id<=n)
            update(p,ji[i].r,ji[i].id,1,tot,1);
        else
            ans[ji[i].id-n] = query(p,ji[i].r,1,tot,1);
    }
    for(int i=1;i<=m-n;i++)
    {
        printf("%d\n",ans[i]);
    }
}

   			  	  			   		 	 	  	