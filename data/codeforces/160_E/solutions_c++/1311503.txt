#include <cstdio>
#include <algorithm>
#define MAXN 200011
using namespace std;

struct bus
{
	int l,r,t,i;
}dat[MAXN*2];

struct seg_tree
{
	int l,r,i,m;
}segt[MAXN*4];

int time[MAXN],ret[MAXN];

inline int max(int a,int b){ return a<b?b:a; }
inline int min(int a,int b){ return a<b?a:b; }
inline int L(int i){ return i<<1; }
inline int R(int i){ return (i<<1)|1; }
int cmp_int(int a,int b){ return a<b; }
int cmp_bus(bus a,bus b){ return a.l==b.l?a.i<b.i:a.l<b.l; }

void insert(int id,int l,int r,int x,int _max,int ind)
{
	int mid=(l+r)>>1;
	segt[id].m=max(_max,segt[id].m);
	if(l==r)
	{
		segt[id].i=ind;
		return;
	}
	if(mid>=x)
		insert(L(id),l,mid,x,_max,ind);
	else
		insert(R(id),mid+1,r,x,_max,ind);
}

int cal(int id,int l,int r,int ll,int rr,int _max)
{
	int ret=-1,mid=(l+r)>>1;
	if(segt[id].m<_max)	return -1;
	if(l==r) return segt[id].i;
	if(mid>=ll)
	{
		ret=cal(L(id),l,mid,ll,min(rr,mid),_max);
		if(ret>=0)	return ret;
	}
	if(mid<rr)
	 ret=cal(R(id),mid+1,r,max(mid+1,ll),rr,_max);
	return ret;
}

int main()
{
	int n,m,i,x;
	scanf("%d%d",&n,&m);
	for(i=1; i<=n; i++)
	{
		scanf("%d%d%d",&dat[i].l,&dat[i].r,&dat[i].t);
		dat[i].i=i;
		time[i]=dat[i].t;
	}
	for(i=n+1; i<=m+n; i++)
	{
		scanf("%d%d%d",&dat[i].l,&dat[i].r,&dat[i].t);
		dat[i].i=i;
		time[i]=dat[i].t;
	}
	sort(dat+1,dat+m+n+1,cmp_bus);
	sort(time+1,time+m+n+1,cmp_int);
	for(i=1; i<=m+n; i++)
	{
		x=lower_bound(time+1,time+m+n+1,dat[i].t)-time;
		if(dat[i].i>n)
			ret[dat[i].i-n]=cal(1,1,m+n,x,m+n,dat[i].r);
		else
			insert(1,1,m+n,x,dat[i].r,dat[i].i);
	}
	for(i=1; i<=m; i++)
		printf("%d ",ret[i]);
	puts("");
	return 0;
}
