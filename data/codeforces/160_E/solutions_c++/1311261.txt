#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#define pii pair<int,int>
#define mp make_pair
using namespace std;
struct event{
    int x,y,t,id,k;
}e[200010];
bool cmp(event a,event b){return a.y>b.y||(a.y==b.y&&a.k<b.k);}
int n,m,ans[100010],x[200010],tot;
set<pii>c[200010];
int lowbit(int x){return x&(-x);}
void ins(int x,pii w){
    for(int i=x;i<=tot;i+=lowbit(i))
        c[i].insert(w);
}
int sum(int x,pii w){
    pii got=mp(0x7FFFFFFF,-1),res;
    for(int i=x;i>0;i-=lowbit(i)){
        res=*c[i].lower_bound(w);
        if(c[i].lower_bound(w)!=c[i].end()){
            if(res.first<got.first)got=res;
        }
    }
    return got.second;
}
int get(int val){
    return lower_bound(x+1,x+tot+1,val)-x;
}
int main(){
    scanf("%d%d",&n,&m);
    for(int i=1;i<=n;++i){
        scanf("%d%d%d",&e[i].x,&e[i].y,&e[i].t);
        e[i].id=i;x[++tot]=e[i].x;
    }
    for(int i=1;i<=m;++i){
        scanf("%d%d%d",&e[i+n].x,&e[i+n].y,&e[i+n].t);
        e[i+n].id=i+n;e[i+n].k=1;x[++tot]=e[i+n].x;
    }
    sort(x+1,x+tot+1);
    tot=unique(x+1,x+tot+1)-x-1;
    sort(e+1,e+n+m+1,cmp);
    for(int i=1;i<=n+m;++i){
        if(e[i].k==0)ins(get(e[i].x),mp(e[i].t,e[i].id));
        else{
            ans[e[i].id-n]=sum(get(e[i].x),mp(e[i].t,-1));
        }
    }
    for(int i=1;i<=m;++i)printf("%d ",ans[i]);
    return 0;
}
