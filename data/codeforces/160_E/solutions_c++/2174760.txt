#include <cstdio>
#include <iostream>
#include <algorithm>
#define MAXN 200010
#define fi first
#define se second
using namespace std;
typedef pair<int,int> ii;

int N,M;
int Kal[MAXN];
int Var[MAXN];
int Har[MAXN];
int Pos[MAXN];
int Kd[MAXN*3];
int Res[MAXN];
ii Sok[MAXN],Sov[MAXN];

int update(int k,int a,int b,int a1,int t){
	if(a>a1 || b<a1)
		return Kd[k];
	if(a>=a1 && b<=a1)
		return Kd[k]=t;
	
	int ta=update(k*2,a,(a+b)/2,a1,t);
	int tb=update(k*2+1,(a+b)/2+1,b,a1,t);
	
	if(Var[ta]>Var[tb])
		return Kd[k]=ta;
	return Kd[k]=tb;
}

int find(int k,int a,int b,int a1,int b1){
	if(a>b1 || b<a1)
		return 0;
	if(a>=a1 && b<=b1)
		return Kd[k];
	
	int ta=find(k*2,a,(a+b)/2,a1,b1);
	int tb=find(k*2+1,(a+b)/2+1,b,a1,b1);
	
	if(Var[ta]>Var[tb])
		return ta;
	return tb;
}

int comp(const ii &a,const ii &b){
	if(a.fi==b.fi)
		return a.se>b.se;
	return a.fi<b.fi;
}

int main(){
	scanf("%d%d",&N,&M);
	
	for(int i=1;i<=N+M;i++){
		scanf("%d%d%d",Kal+i,Var+i,Har+i);
		Sov[i]=ii(Har[i],i);
		Sok[i]=ii(Kal[i],i);
	}
	
	sort(Sok+1,Sok+N+M+1);
	sort(Sov+1,Sov+N+M+1,comp);
	Var[0]=-1;
	
	for(int i=1;i<=N+M+1;i++)
		Pos[Sov[i].se]=i;
	
	for(int i=1,tmp;i<=N+M+1;i++){
		if(Sok[i].se<=N)
			update(1,1,N+M,Pos[Sok[i].se],Sok[i].se);
		else{
			int lo,hi=N+M,mi;
			lo=Pos[Sok[i].se];
			while(lo<hi){
				mi=(lo+hi)/2;
				if(Var[find(1,1,N+M,lo,mi)]>=Var[Sok[i].se])
					hi=mi;
				else
					lo=mi+1;
			}
			tmp=find(1,1,N+M,lo,hi);
			if(!tmp || Var[tmp]<Var[Sok[i].se])
				Res[Sok[i].se-N]=-1;
			else
				Res[Sok[i].se-N]=tmp;
		}
	}
	
	for(int i=1;i<=M;i++)
		printf("%d ",Res[i]);
	printf("\n");
	return 0;
}
