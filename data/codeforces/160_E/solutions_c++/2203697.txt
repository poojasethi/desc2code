#include <cstdio>
#include <algorithm>
#include <iostream>
#define MAXN 200000
using namespace std;
struct node
{
	int b,l,r,t;
};
node ar[MAXN+1];
node A[MAXN+1];

int KD[3*MAXN+1];
int n,m;
int res[MAXN+1];
int up[MAXN+1];
bool cmp(node a,node b)
{
	if(a.l != b.l) return a.l < b.l;
	return a.b < b.b;
}
bool cmp1(node a,node b)
{
	return a.t < b.t;
}
int update(int k,int a,int b,int t)
{
	int x,y;
	if(t > b || t < a) return KD[k];
	if(a==b) return KD[k]=t;
	x=update(k*2,a,(a+b)/2,t);
	y=update(k*2+1,(a+b)/2+1,b,t);
	if(A[x].r > A[y].r) return KD[k]=x;
	return KD[k]=y;
}
int find(int k,int a,int b,int t)
{
	if(ar[t].t > A[b].t || A[KD[k]].r < ar[t].r) return 0;
	
	if(a==b) return KD[k];
	int x=find(k*2,a,(a+b)/2,t);
	if(x) return x;
	return find(k*2+1,(a+b)/2+1,b,t);
}
int main()
{
	int i,k;
	scanf(" %d %d",&n,&m);
	for(i=1;i<=n+m;i++)
	{
		scanf(" %d %d %d",&ar[i].l,&ar[i].r,&ar[i].t);
		ar[i].b=i;
	}
	
	for(i=1;i<=n;i++)
		A[i]=ar[i];
	sort(ar+1,ar+n+m+1,cmp);
	sort(A+1,A+n+1,cmp1);
	for(i=1;i<=n;i++)
		up[A[i].b]=i;
	//for(i=1;i<=n+m;i++)
	//	printf("%d %d %d %d\n",ar[i].b,ar[i].l,ar[i].r,ar[i].t);
	//printf("\n");
	for(i=1;i<=n+m;i++)
	{
		if(ar[i].b <= n)
		{
			update(1,1,n,up[ar[i].b]);
			//for(int j=1;j<=7;j++) printf("%d ",KD[j]);
			//printf("\n");
		}
		else
		{
			//printf("%d*\n",ar[i].b-n);
			res[ar[i].b-n]=A[find(1,1,n,i)].b;
			//cout << find(1,1,n,i) << endl;
			if(!res[ar[i].b-n])
				res[ar[i].b-n]=-1;
		}
	}
	for(i=1;i<=m;i++)
		printf("%d ",res[i]);
	printf("\n");
	return 0;
}
