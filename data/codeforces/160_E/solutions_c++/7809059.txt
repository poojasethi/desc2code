#include<bits/stdc++.h>

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define all(c) (c).begin(),(c).end()
#define mp make_pair
#define pb push_back
#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define dbg(x) cerr<<__LINE__<<": "<<#x<<" = "<<(x)<<endl

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
const int inf = (int)1e9 + 7;
const double INF = 1e12, EPS = 1e-9;

#define F first
#define S second

const int MX = 100010;
int n, m, ans[MX];

const int N = 131072;
int dat[2 * N - 1];
inline void update(int k, int x){
	k += N - 1;
	dat[k] = max(dat[k], x);
	while(k){
		k = (k - 1) / 2;
		dat[k] = max(dat[k * 2 + 1], dat[k * 2 + 2]);
	}
}
inline int find(int a, int b, int l, int r, int k, int x){
	if(b <= l || a >= r) return inf;
	if(dat[k] < x) return inf;
	if(l + 1 == r) return l;
	
	int t = find(a, b, l, (l + r) / 2, k * 2 + 1, x);
	if(t < inf) return t;
	return find(a, b, (l + r) / 2, r, k * 2 + 2, x);
}

int main(){
	rep(i, 2 * N - 1) dat[i] = -inf;
	
	scanf("%d%d", &n, &m);
	vector<pair<pi, pi> > v;
	vi ts;
	map<int, int> id;
	
	rep(i, n){
		int a, b, c;
		scanf("%d%d%d", &a, &b, &c);
		v.pb(mp(mp(a, i), mp(b, c)));
		id[c] = i + 1;
		ts.pb(c);
	}
	rep(i, m){
		int a, b, c;
		scanf("%d%d%d", &a, &b, &c);
		v.pb(mp(mp(a, i + n), mp(b, c)));
	}
	sort(all(v));
	sort(all(ts)); ts.erase(unique(all(ts)), ts.end());
	
	rep(i, v.size()){
		int c = lower_bound(all(ts), v[i].S.S) - ts.begin();
		if(v[i].F.S < n){
			update(c, v[i].S.F);
		}
		else{
			int k = find(c, N, 0, N, 0, v[i].S.F);
			ans[v[i].F.S - n] = k < inf ? id[ts[k]] : -1;
		}
	}
	rep(i, m) printf("%d%c", ans[i], i == m - 1 ? '\n' : ' ');
	
	return 0;
}
