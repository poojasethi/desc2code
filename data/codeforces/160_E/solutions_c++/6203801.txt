#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<sstream>
#include<cmath>
#include<assert.h>
using namespace std;
#define eprintf(...) fprintf (stderr, __VA_ARGS__)
#define ll long long
#define ull unsigned long long
#define pi acos(-1)
#define inf 1001001001
#define mod 1000000007
//const ll inf = 1000000000005LL;
#define pii pair<int,int>
#define vi vector<int>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 200010

#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(typeof(t.begin()) i=t.begin();i!=t.end();i++)

struct bus
{
    int s,f,t,id;
    bool operator <(const bus&a)const
    {
        return s<a.s||s==a.s&&id<a.id;
    }
}b[N];
int ans[N/2],x[N],t[N<<2],c[N<<2];
#define lst p<<1,l,m
#define rst p<<1|1,m+1,r
void update(int p,int l,int r,int x,int v,int id)
{
    if(l==r){t[p]=v,c[p]=id;return;}
    int m=(l+r)>>1;
    if(x<=m)update(lst,x,v,id);
    else update(rst,x,v,id);
    t[p]=max(t[p<<1],t[p<<1|1]);
}
int query(int p,int l,int r,int x,int v)
{
    if(t[p]<v)return -1;
    if(l==r)return c[p];
    int m=(l+r)>>1,ret=-1;
    if(x<=m)
    {
        ret=query(lst,x,v);
        if(ret>0)return ret;
    }
    return query(rst,x,v);
}
int main()
{
    int T,m,i,j,k,n;
    while(~scanf("%d%d",&n,&m))
    {
        int sz=0;
        for(i=0;i<n+m;i++)
        scanf("%d%d%d",&b[i].s,&b[i].f,&b[i].t),b[i].id=i,x[sz++]=b[i].t;
        sort(b,b+n+m);
        sort(x,x+sz);
        sz=unique(x,x+sz)-x;
        for(i=0;i<n+m;i++)
        {
            j=lower_bound(x,x+sz,b[i].t)-x;
            if(b[i].id<n)update(1,0,sz-1,j,b[i].f,b[i].id+1);
            else ans[b[i].id-n]=query(1,0,sz-1,j,b[i].f);
        }
        for(i=0;i<m;i++)printf("%d ",ans[i]);
        puts("");
    }
    return 0;
}