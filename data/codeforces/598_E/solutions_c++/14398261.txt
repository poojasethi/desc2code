#include <iostream>
#include <algorithm>
#include <cstdio>
using namespace std;
int dp[40][40][60];
int work(int n,int m,int k){
	if(dp[n][m][k]!=-1){
		return dp[n][m][k];
	}
	if (k==0 || k==n*m){
		dp[n][m][k]=0;
		return 0;
	}
	int mn=1e9;
	for (int i=1;i<n;i++){
		for (int j=0;j<=k;j++){
			mn=min(mn,work(i,m,j)+work(n-i,m,k-j)+m*m);
		}
	}
	for (int i=1;i<m;i++){
		for (int j=0;j<=k;j++){
			mn=min(mn,work(n,i,j)+work(n,m-i,k-j)+n*n);
		}
	}
	dp[n][m][k]=mn;
	return mn;
}
int main(){
	int t;
	cin>>t;
	for (int i=0;i<=35;i++){
		for (int j=0;j<=35;j++){
			for (int k=0;k<=55;k++){
				dp[i][j][k]=-1;
			}
		}
	}
	while (t--){
		int n,m,k;
		cin>>n>>m>>k;
		cout<<work(n,m,k)<<endl;
	}
}