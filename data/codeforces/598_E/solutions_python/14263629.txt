import sys

readline = sys.stdin.readline
num_bars = int(readline())
memo = [[[None]*51 for _ in xrange(31)] for _ in xrange(31)]

inf = float('inf')

def d(n, m, k):
    return memo[n][m][k]

def c(n, m, k):
    if n * m == k:
        return 0

    elif k <= 0 or n <= 0 or m <= 0:
        return inf

    elif memo[n][m][k] is not None:
        return d(n, m, k)

    else:
        cost = inf
        n2 = n * n
        m2 = m * m

        for i in xrange(1, n):
            cost = min(cost, m2 + d(i, m, k), m2 + c(n - i, m, k - m * i))

        for i in xrange(1, m):
            cost = min(cost, n2 + d(n, i, k), n2 + c(n, m - i, k - n * i))

        return cost

for n in xrange(1, 31):
    for m in xrange(1, 31):
        for k in xrange(1, 51):
            memo[n][m][k] = c(n, m, k)
            
for _ in xrange(num_bars):
    n, m, k = map(int, readline().split(' '))
    print d(n, m, k)