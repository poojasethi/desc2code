#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#define rep(i, n) for(int i = 0; i < (n); ++i)
#define INF 100000000
using namespace std;
int tree[2001][2001];
int main()
{
	FILE* ifp = fopen("input.txt", "r");
	FILE* ofp = fopen("output.txt", "w");
	int n, m; fscanf(ifp, "%d%d", &n, &m);
	int k; fscanf(ifp, "%d", &k);
	rep(i, 2001) rep(j, 2001) tree[i][j] = INF;
	while (k--) {
		int a, b; fscanf(ifp, "%d%d", &a, &b);
		rep(i, n) rep(j, m)
			tree[i][j] = min(tree[i][j], abs(i-(a-1)) + abs(j-(b-1)));
	}
	int best = -1, r, c;
	rep(i, n) rep(j, m) if (best < tree[i][j]) {
		best = tree[i][j]; r = i; c = j;
	}

	fprintf(ofp, "%d %d\n", r+1, c+1);
	fclose(ifp);
	fclose(ofp);
	return 0;
}

