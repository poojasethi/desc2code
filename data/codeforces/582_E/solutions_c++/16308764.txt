#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int MAXN = 505,MAXS = (1 << 16) + 5,Mo = int(1e9) + 7;

struct Data
{
	int F[MAXS];
}T[MAXN];

char S[MAXN];
int Stack[17][3][MAXS],Tmp[MAXS],N,cnt;

void Mul(int A[],int B[],int C[],int dep)
{
	if (!dep) {C[0] = A[0] * 1ll * B[0] % Mo;return;}
	int L = (1 << dep);
	for(int i = 0;i < L / 2;i ++) Stack[dep][0][i] = A[i + L / 2],Stack[dep][1][i] = B[i + L / 2];
	for(int i = 0;i < L / 2;i ++) A[i] = (A[i] + A[i + L / 2]) % Mo,B[i] = (B[i] + B[i + L / 2]) % Mo;
	Mul(A,B,C,dep - 1);Mul(Stack[dep][0],Stack[dep][1],Stack[dep][2],dep - 1);
	int *R = Stack[dep][2];
	for(int i = 0;i < L / 2;i ++) C[i] = (C[i] - R[i] + Mo) % Mo;
	for(int i = L / 2;i < L;i ++) C[i] = R[i - L / 2];
}

void Rev(int A[])
{
	static int Bak[MAXS];
	int L = (1 << 16) - 1;
	for(int i = 0;i <= L;i ++) Bak[L ^ i] = A[i];
	for(int i = 0;i <= L;i ++) A[i] = Bak[i];
}

void OrMul(int A[],int B[],int C[])
{
	Rev(A),Rev(B);
	Mul(A,B,C,16);
	Rev(C);
}

int Calc(int l,int r)
{
	int nt = ++ cnt,c = 0,mid;
	if (l == r)
	{
		if (S[l] == '?')
		{
			for(int i = 0;i < 8;i ++)
			{
				int s = 0;
				for(int j = 15;j + 1;j --)
				{
					int cr = ((i & 1) ^ ((j & (1 << (i / 2)))) > 0);
					s = ((s << 1) | cr);
				}
				T[nt].F[s] ++;
			}
		}
		if (S[l] >= 'a' && S[l] <= 'z')
		{
			int s = 0;
			int i = (S[l] - 'a') * 2 + 1;
			for(int j = 15;j + 1;j --)
			{
				int cr = ((i & 1) ^ ((j & (1 << (i / 2)))) > 0);
				s = ((s << 1) | cr);
			}
			T[nt].F[s] ++;
		}
		if (S[l] >= 'A' && S[l] <= 'Z')
		{
			int s = 0;
			int i = (S[l] - 'a') * 2;
			for(int j = 15;j + 1;j --)
			{
				int cr = ((i & 1) ^ ((j & (1 << (i / 2)))) > 0);
				s = ((s << 1) | cr);
			}
			T[nt].F[s] ++;
		}
		return nt;
	}
	for(int op = l;op <= r;op ++)
		if (S[op] == '(') c ++; else
			if (S[op] == ')') c --; else
				if (!c) {mid = op;break;}
	int L,R;
	for(int op = l;op <= r;op ++)
		if (S[op] == '(') {L = Calc(op + 1,mid - 2);break;}
	for(int op = r;op;op --)
		if (S[op] == ')') {R = Calc(mid + 2,op - 1);break;}
	if (S[mid] == '&') Mul(T[L].F,T[R].F,T[nt].F,16); else
		if (S[mid] == '|') OrMul(T[L].F,T[R].F,T[nt].F); else
		{
			static int Bak[MAXS],B1[MAXS];
			for(int i = 0;i < (1 << 16);i ++) Bak[i] = T[L].F[i],B1[i] = T[R].F[i];
			Mul(T[L].F,T[R].F,T[nt].F,16); 
			OrMul(Bak,B1,Tmp);
			for(int i = 0;i < (1 << 16);i ++) T[nt].F[i] = (T[nt].F[i] + Tmp[i]) % Mo;
		}
	return nt;
}

int Ch[20],Ans;

void Dfs(int Now,int S)
{
	if (Now < 0) Ans = (Ans + T[1].F[S]) % Mo; else
	{
		if (Ch[Now] != -1) Dfs(Now - 1,(S << 1) | Ch[Now]); else
			for(int i = 0;i < 2;i ++)
				Dfs(Now - 1,(S << 1) | i);
	}
}

int main()
{
	//freopen("data.in","r",stdin),freopen("data.out","w",stdout);
	scanf("%s", S + 1);
	N = strlen(S + 1);
	Calc(1,N);
	scanf("%d", &N);
	memset(Ch,255,sizeof Ch);
	for(int i = 1;i <= N;i ++)
	{
		int a,b,c,d,e;
		scanf("%d%d%d%d%d", &a, &b, &c, &d, &e);
		Ch[d * 8 + c * 4 + b * 2 + a] = e;
	}
	Dfs(15,0);
	printf("%d\n", Ans);
}
