#include<stdio.h>
#include<iostream>
#define MOD 1000000007
using namespace std;
int N,a,b,c,D,e,req[20];
string s;
int root, d[510][(1<<16)+10], sl[(1<<16)+10], sr[(1<<16) + 10], S[(1<<16)+10];
char ss[8] = {'D','d','C','c','B','b','A','a'};
int p[8][8] = 
{ {8,9,10,11,12,13,14,15},
    {0,1,2,3,4,5,6,7},
    {4,5,6,7,12,13,14,15},
    {0,1,2,3,8,9,10,11},
    {2,3,6,7,10,11,14,15},
    {0,1,4,5,8,9,12,13},
    {1,3,5,7,9,11,13,15},
    {2,4,6,8,10,12,14}};

int parse(int x, int y) {
    if(y==x) {
        for(int m=0;m<(1<<16);++m) {
            for(int i=0;i<8;++i) {
                if(s[x] == ss[i] || s[x] == '?') {
                    bool ok = 1;
                    for(int j=0;j<8;++j) {
                        if(!(m & (1<<p[i][j]))) {
                            ok = 0;
                        }
                    }
                    int h = i+1;
                    if(i%2) h = i-1;
                    for(int j=0;j<8;++j) {
                        if(m & (1<<p[h][j])) {
                            ok = 0;
                        }
                    }
                    if(ok) {
                        ++d[x][m];
                    }
                }
            }
        }
        return x;
    }
    int z = x, nr = 1;
    while(nr) {
        if(s[z+1] == '(') {
            ++nr;
        } else if(s[z+1] == ')') {
            --nr;
        }
        ++z;
    }
    int l = parse(x+1, z-1);
    int r = parse(z+3, y-1);
    if(s[z+1] == '|' || s[z+1] == '?') {
        for(int m = 0; m < (1<<16); ++m) {
            sl[m] = d[l][m];
            sr[m] = d[r][m];
        }
        for(int i=0;i<16;++i) {
            for(int m=0;m<(1<<16);++m) {
                if(! (m & (1<<i))) {
                    sl[m ^ (1<<i)] = (sl[m ^ (1<<i)] + sl[m]) % MOD;
                    sr[m ^ (1<<i)] = (sr[m ^ (1<<i)] + sr[m]) % MOD;
                }
            }
        }
        for(int m=0;m<(1<<16);++m) {
            S[m] = (1LL*sl[m]*sr[m]) % MOD;;
        }
        for(int i=0;i<16;++i) {
            for(int m=0; m<(1<<16);++m) {
                if(!(m & (1<<i))) {
                    S[m ^ (1<<i)] = (S[m ^ (1<<i)] - S[m] + MOD) % MOD;
                }
            }
        }
        for(int m=0;m<(1<<16);++m) { 
            d[z+1][m] = S[m];
        }
        /*for(int i=0;i<16;++i) {
            for(int m=0; m<(1<<16);++m) {
                if(!(m & (1<<i))) {
                    if((m^(1<<i)) == 511) {
                        cout<<m<<" "<<d[z+1][m]<<"\n";
                    }
                    d[z+1][m ^ (1<<i)] = (d[z+1][m ^ (1<<i)] - d[z+1][m] + MOD) % MOD;
                }
            }
        }*/
    } 
    if(s[z+1] == '&' || s[z+1] == '?') {
        for(int m = 0; m < (1<<16); ++m) {
            sl[m] = d[l][m];
            sr[m] = d[r][m];
        }
        for(int i=0;i<16;++i) {
            for(int m=0;m<(1<<16);++m) {
                if(m & (1<<i)) {
                    sl[m ^ (1<<i)] = (sl[m ^ (1<<i)] + sl[m]) % MOD;
                    sr[m ^ (1<<i)] = (sr[m ^ (1<<i)] + sr[m]) % MOD;
                }
            }
        } 
        for(int m=0;m<(1<<16);++m) {
            S[m] = (1LL*sl[m]*sr[m]) % MOD;;
        }
        for(int i=0;i<16;++i) {
            for(int m=0; m<(1<<16);++m) {
                if(m & (1<<i)) {
                    S[m ^ (1<<i)] = (S[m ^ (1<<i)] - S[m] + MOD) % MOD;
                }
            }
        }
        for(int m=0;m<(1<<16);++m) {
            d[z+1][m] = (d[z+1][m] + S[m]) % MOD;
        }
    }
    root = z + 1;
    return z+1;
}
    
int main() {
	#ifndef ONLINE_JUDGE
	freopen("input.in","r",stdin);
	#endif
    cin>>s>>N;
    parse(0,s.size()-1);
    
    for(int i=0;i<16;++i) {
        req[i] = -1;
    }
    for(int i=1;i<=N;++i) {
        scanf("%d%d%d%d%d",&a,&b,&c,&D,&e);
        int x = a*1 + b*2 + c*4 + D*8;
        req[x] = e;
    }
    int ret = 0;

    for(int i=0;i<(1<<16);++i) {
        bool ok = 1;
        for(int j=0;j<16;++j) {
            if(req[j] != -1 && req[j] != ( (i & (1<<j)) >>j) ) {
                ok = 0;
            }
        }
        if(ok) {
        //    if(d[root][i]) cout<<i<<" "<<d[root][i]<<"\n";
            ret = (ret + d[root][i]) % MOD;
        }
    }
    cout<<ret<<"\n";
	return 0;
}
