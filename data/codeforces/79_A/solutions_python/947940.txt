#print "".join(reduce(lambda x,y:(x[0][2:],x[1]+(x[0][2:]+"<"+y+"\n",)) if y[0]=='/' else (x[0]+"  ",x[1]+(x[0]+"<"+y+"\n",)),raw_input().split("<")[1:],("",()))[1])
#print reduce(lambda x,y:(x[0]+(1 if y in x[1] else 0),x[1].symmetric_difference(set([y]))),map(int,(raw_input(),raw_input())[1].split()),(0,set()))[0]/2
vrs=((2,2),(1,12),(0,22))
def ciel(c,d):
   for i,j in vrs:
      if c>=i and d>=j:
         return (c-i,d-j)
   print "Hanako"
   raise SystemExit()

def hanako(c,d):
   for i,j in reversed(vrs):
      if c>=i and d>=j:
         return (c-i,d-j)
   print "Ciel"
   raise SystemExit()

x,y=map(int,raw_input().split())
while 1:
   x,y=ciel(x,y)
   x,y=hanako(x,y)
