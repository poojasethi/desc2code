#include <iostream>
#include <vector>
#include <utility>
#include <algorithm>

using namespace std;

typedef struct event {
	int x, y, id;
};

bool compear(event a, event b) {
	return (a.x < b.x) || ((a.x == b.x) && (a.y - a.x <= b.y - b.x));
}

int main() {

	int n = 0;
	cin >> n;
	vector < event > v(n+1);
	for (int i = 1; i <= n; i++) {
		int x, y;
		cin >> x >> y;
		v[i].x = x;
		v[i].y = y;
		v[i].id = i;
	}

	sort(v.begin(), v.end(), compear);
	vector < int > res(n+1);

	for (int i = 1; i <= n; i++) {
		res[v[i].id] = v[i].x;
		for (int k = i+1; k <= n; k++) {
			if (v[i].x == v[k].x) {
				v[k].x++;
			}
		}
		sort(v.begin() + i, v.end(), compear);
	}

	for (int i = 1; i <= n; i++) {
		cout << res[i] << ' ';
	}

	return 0;
}