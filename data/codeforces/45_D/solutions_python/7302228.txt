import collections

def process(input):
	dates = []
	n = int(next(input))
	for i, line in enumerate(input):
		line = line.rstrip("\r\n")
		start, end = line.split(" ")
		dates.append([int(start), int(end), i])

	d = {}
	for i in xrange(n):
		start, index = min_date(dates)
		d[index] = start
	keys = sorted(d)
	return " ".join(str(d[key]) for key in keys)

	
def min_date(dates):
	start_min, end_min, j_min = dates[0]
	i_min = 0
	for i, date in enumerate(dates):
		start, end, j = date
		if start < start_min or (start == start_min and end < end_min):
			start_min, end_min, i_min, j_min = start, end, i, j
		
	dates.pop(i_min)
	
	for date in dates:
		date[0] = max(date[0], start_min + 1)

	return start_min, j_min


#~ if __name__ == "__main__":
	#~ for i in range(1, 8):
		#~ expected = next(open("output" + str(i))).rstrip("\r\n")
		#~ actual = process(open("input" + str(i))).rstrip("\r\n")
		#~ print "test %s" % i,
		#~ try:
			#~ assert actual == expected
		#~ except:
			#~ print actual
		#~ else:
			#~ print "ok"
import sys
print process(sys.stdin)
