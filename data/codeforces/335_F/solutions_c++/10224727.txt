#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<map>
#include<set>

using namespace std;

const int MAXN = 500005;

typedef long long LL;

LL A[MAXN];
map<int,int> Hash;
multiset<int> G;
int N;

int main()
{
	scanf("%d", &N);
	LL Sum = 0;
	for(int i = 1;i <= N;i ++)
	{
		int x;scanf("%d", &x);Hash[x] ++;Sum += x;
	}
	int cnt = 0;
	for(map<int,int>::reverse_iterator it = Hash.rbegin();it != Hash.rend();it ++)
	{
		int v = (*it).first,h = (*it).second,total = min(cnt,(cnt + h) / 2),front = max(0,total - h);
		for(int i = total - 1;i >= front;i --)
			if (i >= G.size()) A[i] = 0; else
				A[i] = *G.begin(),G.erase(G.begin());
		for(int i = front,j = cnt - i;i < j && i < total;i ++)
		if (A[i] < v) A[i] = v; else if ((-- j) < total) A[j] = max(0LL,2 * v - A[i]);
		G.insert(A + front,A + total);cnt += h;
	}
	for(multiset<int>::iterator it = G.begin();it != G.end();it ++) Sum -= *it;
	printf("%I64d\n", Sum);
	return 0;
}
