#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<set>
using namespace std;
#define maxn 500100
typedef long long ll;
int a[maxn],n,m;
int b[maxn];
typedef pair<int,int> ii;
#define fi first
#define se second
ii s[maxn];
multiset<int> map;
bool cmp(int x,int y){return x>y;} 
int main(){
//	freopen("1.in","r",stdin);
	scanf("%d",&n);
	for (int i=1;i<=n;i++) scanf("%d",a+i);
	sort(a+1,a+1+n,cmp);
	int l=0;
	ll ans=0;
	for (int i=1;i<=n;i++) {
		if (a[i]!=a[i-1]) l++;
		s[l].fi=a[i];s[l].se++;
		ans+=a[i];
	}
	n=l;
	int size=0;
	for (int i=1;i<=n;i++) {
		int x=s[i].fi,y=s[i].se;
		int last=size;
		size=min(m,(m+y)>>1);
		int cnt=max(0,size-y);
		for (int j=size-1;j>=cnt;j--)
			if (j<map.size()) b[j]=*map.begin(),map.erase(map.begin());
			else b[j]=0;	
		for (int j=cnt,k=m-j;j<k&&j<size;j++)
			if (b[j]<x) b[j]=x;
			else if (--k<size) b[k]=max(0,2*x-b[j]);
		map.insert(b+cnt,b+size);
		m+=y;
	//	for (set<int>::iterator it=map.begin();it!=map.end();it++) printf("%d ",*it);
	//	printf("\n");
	}

	for (set<int>::iterator it=map.begin();it!=map.end();it++) {ans-=*it;} 
	cout<<ans;
	return 0;
}
