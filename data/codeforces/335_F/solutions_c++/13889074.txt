#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <queue>
#include <vector>
using namespace std;
#define N 500050
#define ll long long
int n,m,st,s[N][2],v[N];ll cnt=0;
priority_queue <ll,vector<ll>,greater<ll> > a;
inline int Read()
 {
 	int x=0;char y;
 	do y=getchar(); while (y<'0'||y>'9');
 	do x=x*10+y-'0',y=getchar(); while (y>='0'&&y<='9');
 	return x;
 }
inline ll max(ll x,ll y)
 {return x<y?y:x;}
inline ll min(ll x,ll y)
 {return x<y?x:y;}
int main()
 {
 	n=Read();
 	for (int i=1;i<=n;i++) cnt+=(v[i]=Read());
 	sort(v+1,v+n+1);v[0]=-1;
    for (int i=1;i<=n;i++)
      st+=v[i]!=v[i-1],s[st][0]=v[i],s[st][1]++;
    int now=0;
    for (int i=st;i>=1;i--)
     {
     	vector <ll> b;ll l=min(now-a.size()*2,s[i][1]);
     	for (int j=1;j<=l;j++) b.push_back(s[i][0]);
     	l=min(now,s[i][1])-l;
     	for (int j=1;j<=l;j+=2)
     	 {
     	 	ll k=a.top();a.pop();
     	 	if (k<s[i][0])
     	 	 {
     	 	 	b.push_back(s[i][0]);
     	 	 	if (j!=l) b.push_back(s[i][0]);
     	 	 } else
     	 	 {
     	 	 	b.push_back(k);
     	 	 	if (j!=l&&s[i][0]*2-k>0) b.push_back(s[i][0]*2-k);
     	 	 }
     	 }
     	for (int j=0;j<b.size();j++) a.push(b[j]);
     	now+=s[i][1];
     }
    while (!a.empty()) cnt-=a.top(),a.pop();
    cout <<cnt<<endl;
    return 0;
 }