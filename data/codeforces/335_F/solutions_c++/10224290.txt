#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#define fo(i,a,b) for(int i=a;i<=b;i++)
#define fd(i,a,b) for(int i=a;i>=b;i--)
using namespace std;
typedef long long ll;

const int N = int(5e5)+5;
int a[N] , b[N] , tot , c[N] , d[N];
int n;
ll g[N] , ans , sum;
multiset<int> X;

bool cmd(int x,int y){return x>y;}

void Init()
{
    scanf("%d",&n);
    sum = 0;
    fo(i,1,n) scanf("%d",&a[i]) , sum += a[i];
    sort(a+1,a+1+n,cmd);
    fo(i,1,n)
    {
        if (a[i] != a[i-1]) a[++tot] = a[i];
        b[tot] ++;
    }
}

void Work()
{
    int M = 0;
    
    fo(i,1,tot)
    {
        int x = a[i] , y = b[i] , ms = min(M , (M+y) >> 1) , beg = max(0 , ms - y);
        fd(i,ms-1,beg)
        if (i < X.size()) c[i] = *X.begin() , X.erase(X.begin());else c[i] = 0;
        for(int i = beg , j = M - i; i < j && i < ms; i++)
        if (c[i] < x) c[i] = x;else if (--j < ms) c[j] = max(0 , x+x - c[i]);
        X.insert(c+beg,c+ms); M += y;
    }
    
    while (X.size()) sum -= *X.begin() , X.erase(X.begin());
    printf("%lld\n",sum);
}

int main()
{
    
    Init();
    Work();
    
    return 0;
}