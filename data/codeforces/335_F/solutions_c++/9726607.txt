#include <iostream>
#include <fstream>
#include <cstring>
#include <string>
#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <bitset>
#include <ctime>
#include <map>
#include <queue>
#include <set>
using namespace std;

const int maxn=500000+15;
int n,a[maxn];
int m,b[maxn],num[maxn];
long long sum;
int sc;
priority_queue <int> que;
int main()
{
	scanf("%d",&n);
	for (int i=1;i<=n;i++) scanf("%d",&a[i]);
	sort(a+1,a+n+1);
	for (int i=1;i<=n;i++)
	{
		if (a[i]!=a[i-1]) b[++m]=a[i];
		num[m]++;
		sum+=a[i];
	}
	for (int i=m;i>=1;i--)
	{
		int opt=sc-que.size()*2;
		opt=min(opt,num[i]);
		vector <int> ls;
		for (int j=1;j<=opt;j++) ls.push_back(b[i]);
		opt=min(sc,num[i])-opt;
		for (int j=1;j<=opt;j+=2)
		{
			int g=-que.top();
			que.pop();
			if (g<b[i])
			{
				ls.push_back(b[i]);
				if (j!=opt) ls.push_back(b[i]);
			}
			else
			{
				ls.push_back(g);
				if (j!=opt && 2*b[i]-g>0) ls.push_back(2*b[i]-g);
			}
		}
		for (int j=0,s=ls.size();j<s;j++) que.push(-ls[j]);
		sc+=num[i];
	}
	while (!que.empty())
	{
		int g=-que.top();
		que.pop();
		sum-=g;
	}
	printf("%I64d\n",sum);
	return 0;
}
