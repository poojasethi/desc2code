from __future__ import division
import sys
  
a = []
calced = []
calcedExtra = []
calcedMoves = []
calcedMovesExtra = []


def extraf(x, q):
  global a
  global calcedExtra
  global calcedMovesExtra
  if calcedExtra[x][q] >= 0:
    return calcedExtra[x][q]
  
  r = -1
  move = (-1, -1)
  if x < 0:
    r = a[q]
    move = (q, -1)
  elif x == 0:
    r = max(a[0], a[q])
    move = (q, 0)
  else:
    r1 = max(a[q], a[x]) + f(x-1)
    r2 = max(a[q], a[x-1]) + extraf(x-2, x)
    r3 = max(a[x], a[x-1]) + extraf(x-2, q)
    if  (r2 >= r1 <= r3):
      r = r1
      move = (q, x)
    elif (r1 >= r2 <= r3):
      r = r2
      move = (q, x-1)
    else:
      r = r3
      move = (x, x-1)
  
  calcedExtra[x][q] = r
  calcedMovesExtra[x][q] = move
  
  return r
    
def f(x):
  global a
  global calced
  global calcedMoves

  if x < 0:
    return 0  
    
  if calced[x] >= 0:
    return calced[x]
    
  r = -1
  move = (-1, -1)  
  if x == 0:
    r = a[0]
    move = (0, -1)
  elif x == 1:
    r = max(a[0], a[1])
    move = (1, 0)
  else:
    r1 = max(a[x], a[x-1]) + f(x-2)
    r2 = max(a[x], a[x-2]) + extraf(x-3, x-1)
    r3 = max(a[x-1], a[x-2]) + extraf(x-3, x)
    if  (r2 >= r1 <= r3):
      r = r1
      move = (x, x-1)
    elif (r1 >= r2 <= r3):
      r = r2
      move = (x, x-2)
    else:
      r = r3
      move = (x-1, x-2)    
        
  calced[x] = r
  calcedMoves[x] = move
  
  return r
  
def pn(x):
  global a
  return (len(a) - x)
      
def printMoves(x, q=-1):
  global calcedMoves
  global calcedMovesExtra
  
  if q < 0:
    if (x < 0):
      return
    
    move = calcedMoves[x]
    if move[1] == -1:
      print("%d" % pn(move[0]))
    else:
      print("%d %d" % (pn(move[0]), pn(move[1])))
    
    if move == (x, x-1):
      printMoves(x-2)
    elif move == (x, x-2):
      printMoves(x-3, x-1)
    elif move == (x-1, x-2): 
      printMoves(x-3, x)
  else:
    move = calcedMovesExtra[x][q]
    
    if move[1] == -1:
      print("%d" % pn(move[0]))
    else:
      print("%d %d" % (pn(move[0]), pn(move[1])))
    
    if move == (q, x):
      printMoves(x-1)
    elif move == (q, x-1):
      printMoves(x-2, x)
    elif move == (x, x-1):
      printMoves(x-2, q)      

sys.stdin.readline()
a = list(map(int, sys.stdin.readline().strip("\n\r\t ").split()))
a.reverse()

calced = [-1] * len(a)
calcedExtra = [[-1] * len(a) for i in range(len(a))]

tmp = [None] * len(a)
calcedMoves = tmp[:]
calcedMovesExtra = [tmp[:] for i in range(len(a)) ] 
  
print(f(len(a)-1))
printMoves(len(a)-1)