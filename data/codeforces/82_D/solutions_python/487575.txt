#!/usr/bin/python2.6

import sys

n = int(sys.stdin.readline().strip())

a = map(lambda x : int(x), sys.stdin.readline().strip().split(" "))

d = map(lambda x : (n+2)*[0], (n+2)*[0] )
way = map(lambda x : (n+2)*[0], (n+2)*[0] )

def solve(i,j):

    if j >= n:
        if i >= n:
            return 0
        way[i][j] = 4
        return a[i]

    if j == n-1:
        way[i][j] = 1
        d[i][j] = max(a[i],a[j])
        return d[i][j]

    if d[i][j] > 0:
        return d[i][j]

    d_j1_j2 = solve(j+1, j+2)
    d_j_j2  = solve(j, j+2)
    d_i_j2  = solve(i, j+2)

    best = min((d_j1_j2 + max(a[i], a[j]), 1), (d_j_j2 + max(a[i], a[j+1]), 2), (d_i_j2 + max(a[j],a[j+1]), 3))

    d[i][j] = best[0]
    way[i][j] = best[1]

    return d[i][j]

res = solve(0,1)

def print_way(i, j):

    if i >= n:
        return 0

    if way[i][j] == 1:
        print(str(i+1) + " " + str(j+1))
        print_way(j+1, j+2)
        return 0
    if way[i][j] == 2:
        print(str(i+1) + " " + str(j+1+1))
        print_way(j, j+2)
        return 0
    if way[i][j] == 3:
        print(str(j+1) + " " + str(j+1+1))
        print_way(i, j+2)
        return 0
    print(i+1)
    return 0

print(res)
print_way(0,1)
