#include <iostream>

using namespace std;
int n;
int v[1001];
int dp[1001][1001];
int was[1001][1001];
int max(int a, int b) {if (a > b) return a; return b;}
int go(int am, int idx)
{
	if (idx > n) return v[am];
	// unul singur
	if (idx == n) return max(v[am], v[idx]);
	if (was[am][idx]) return dp[am][idx];	

	// am, idx
	dp[am][idx] = max(v[am], v[idx]) + go(idx + 1, idx + 2);
	// am, idx +1
	int aux = max(v[am], v[idx+1]) + go(idx, idx + 2);
	if (aux < dp[am][idx]) dp[am][idx] = aux;
	// idx, idx + 1
	aux = max(v[idx], v[idx+1]) + go(am, idx + 2);
	if (aux < dp[am][idx]) dp[am][idx] = aux;
	was[am][idx] = 1;
	return dp[am][idx];
}
int main()
{
	cin >> n;
	for (int i = 1; i <= n; ++i)
		cin >> v[i];
	cout << go(1, 2) << '\n';
	int am = 1, idx = 2;
	while (1)
	{
		if (idx > n) {cout << am << '\n'; return 0;}
		if (idx == n) {cout << am << ' ' << idx << '\n'; return 0;}

		int A = max(v[am], v[idx]) + go(idx + 1, idx + 2);
		int B = max(v[am], v[idx+1]) + go(idx, idx + 2);
		int C = max(v[idx], v[idx+1]) + go(am, idx + 2);
		if (A < B && A < C)
		{
			cout << am << ' ' << idx << '\n';
			am = idx + 1; idx = idx + 2;
			continue;
		}
		if (B < C)
		{
			cout << am << ' ' << idx + 1 << '\n';
			am = idx; idx = idx += 2;
			continue;
		}
		cout << idx << ' ' << idx + 1 << '\n';
		am = am; idx += 2;
	}
	return 0;
}
