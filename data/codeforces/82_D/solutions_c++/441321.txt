#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())

li n,a[10005],dp[1005][1005];
li recur(li rem,li pos){
	li &res=dp[rem][pos];
	if(res!=-1) return res;
	if(pos>=n){
		if(pos==n) return res=max(a[rem],a[pos]);
		else return res=a[rem];
	}
#define t0 (recur(rem,pos+2)+max(a[pos],a[pos+1]))
#define t1 (recur(pos,pos+2)+max(a[rem],a[pos+1]))
#define t2 recur(pos+1,pos+2)+max(a[rem],a[pos])
	return res=min(t0,min(t1,t2));
}
void recur2(li rem,li pos){
	if(pos>=n){
		if(pos==n) cout<<rem<<" "<<pos<<endl;
		else cout<<rem<<endl;
	}else if(dp[rem][pos]==t0) cout<<pos<<" "<<pos+1<<endl,recur2(rem,pos+2);
	else if(dp[rem][pos]==t1) cout<<rem<<" "<<pos+1<<endl,recur2(pos,pos+2);
	else cout<<rem<<" "<<pos<<endl,recur2(pos+1,pos+2);
}
int main(){
	rep(i,1005)rep(j,1005) dp[i][j]=-1;
	cin>>n;
	rep(i,n) cin>>a[i+1];
	cout<<recur(1,2)<<endl;
	recur2(1,2);
}
	
