#include<cstdio>
#include<cstring>
#include<algorithm>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

int n,a[1000],memo[1000][1000],path[1000][1000];

int dfs(int i,int j){
	if(i>=n) return 0;
	if(j>=n) return a[i];

	if(~memo[i][j]) return memo[i][j];

	int k=j+1,tmp[3];
	tmp[0]=max(a[i],a[j])+dfs(k,k+1);
	tmp[1]=max(a[i],a[k])+dfs(j,k+1);
	tmp[2]=max(a[j],a[k])+dfs(i,k+1);

	int idmin=min_element(tmp,tmp+3)-tmp;
	path[i][j]=idmin;

	return memo[i][j]=tmp[idmin];
}

void printPairs(int i,int j){
	if(i>=n) return;
	if(j>=n){
		printf("%d\n",i+1);
		return;
	}

	int k=j+1;
	if(path[i][j]==0){
		printf("%d %d\n",i+1,j+1);
		printPairs(k,k+1);
	}
	else if(path[i][j]==1){
		printf("%d %d\n",i+1,k+1);
		printPairs(j,k+1);
	}
	else{
		printf("%d %d\n",j+1,k+1);
		printPairs(i,k+1);
	}
}

int main(){
	scanf("%d",&n);
	rep(i,n) scanf("%d",a+i);

	memset(memo,-1,sizeof memo);

	printf("%d\n",dfs(0,1));
	printPairs(0,1);

	return 0;
}
