#include <iostream>
#include <cstring>
using namespace std;
const int MXN = 1010;
typedef pair<int, int> ii;
typedef pair<int, ii> poss;

int N;
int a[MXN];
poss mem[MXN][MXN];
void setmn(poss &a, poss b) {
	if (a > b) {
		a = b;
	}
}
int get(int i, int p) {
	if (i >= N - 1) {
		return max(a[i], a[p]);
	}
	poss &res = mem[i][p];
	if (res.first != -1) {
		return res.first;
	}
	res.first = 1999999999;
	setmn(res, poss(get(i + 2, p) + max(a[i], a[i + 1]), ii(i, i + 1)));
	setmn(res, poss(get(i + 2, i) + max(a[p], a[i + 1]), ii(p, i + 1)));
	setmn(res, poss(get(i + 2, i + 1) + max(a[p], a[i]), ii(p, i)));
	return res.first;
}
int main() {
	memset(mem, -1, sizeof(mem));
	cin >> N;
	for (int i = 0; i < N; ++i) {
		cin >> a[i];
	}
	cout << get(1, 0) << '\n';
	int i = 1, p = 0;
	while (i < N - 1) {
		ii u = mem[i][p].second;
		cout << u.first + 1 << ' ' << u.second + 1 << '\n';
		p = p + i + i + 1 - u.first - u.second;
		i += 2;
	}
	if (a[p]) {
		cout << p + 1;
		if (a[i]) {
			cout << ' ' << i + 1;
		}
	}
}
