#include <iostream>
#include <vector>

using namespace std;

int n;
vector<int> a;
int d[ 1010 ][ 1010 ];
int v[ 1010 ][ 1010 ];

int solve(int i, int j) {
  if (j >= n + 1) {
    return a[i];
  } else if (j == n) {
    d[i][j] = max(a[j-1],a[i]);
    v[i][j] = -1;
    return d[i][j];
  } else if (d[i][j] != 0) {
    return d[i][j];
  } else {
    int ret = solve(i, j+2) + max(a[j], a[j-1]);
    v[i][j] = i;
    if (ret > (solve(j-1, j+2) + max(a[j], a[i]))) {
      ret = (solve(j-1, j+2) + max(a[j], a[i]));
      v[i][j] = j-1;
    }
    if (ret > (solve(j, j+2) + max(a[j-1], a[i]))) {
      ret = (solve(j, j+2) + max(a[j-1], a[i]));
      v[i][j] = j;
    }
    d[i][j] = ret;
    return ret;
  }
}

int main(int argc, char *argv[]) {
  cin >> n;
  for (int i = 0; i < n; ++i) {
    int temp;
    cin >> temp;
    a.push_back(temp);
  }

  cout << solve(0,2) << endl;
  int nl = 0;
  for (int i = 2; i <= n + 1; i+=2) {
    if (i == n) {
      cout << nl + 1 << " " << i << endl;
      break;
    } else if (i == n+1) {
      cout << nl + 1 << endl;
      break;
    }
    // nl, i-1, i
    if (nl != v[nl][i]) {
      cout << nl+1 << " ";
    }
    if (i-1 != v[nl][i]) {
      cout << i << " ";
    }
    if (i != v[nl][i]) {
      cout << i + 1 << " ";
    }
    cout << endl;
    nl = v[nl][i];
  }

  return 0;
}
