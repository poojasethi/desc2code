#include <bits/stdc++.h>

using namespace std ;
const int MX = 1000  + 2 ; 
int dp[MX][MX] , n , par[MX][MX] , a[MX] ; 

int main(){
	//ipt
	cin>>n ; 
	for ( int i = 0 ;i < n ; i++ ) {
		cin>>a[i] ; 
		dp[n][i] = a[i] ; 
	}
	//base 
	for ( int i = 0 ; i < n ; i++ ) {
		dp[n-1][i] = max ( a[i] , a[n-1] ) ; 
		par[n-1][i] = n ; 
	}
	// solve 
	for ( int i = n-2 ; i >= 0 ; i-- ) 
		for ( int j = i - 1 ; j >= 0 ; j-- )  { 
			dp[i][j] = max ( a[i] , a[j] ) + dp[i+2][i+1] ; 
			par[i][j] = i+1 ; 
			if ( dp[i][j] > max ( a[i] , a[i+1] ) + dp[i+2][j] ) { 
				dp[i][j] = max ( a[i] , a[i+1] ) + dp[i+2][j]  ; 
				par[i][j] = j ; 
			}
			if ( dp[i][j] > max ( a[i+1] , a[j] ) + dp[i+2][i]  ) {
				dp[i][j] = max ( a[i+1] , a[j] ) + dp[i+2][i]  ; 
				par[i][j] = i  ; 
			}
		}
	//opt
	cout << dp[1][0] << endl; 
	int ind = 0 , cn = 1 ;
	while ( cn <= n ) { 
		
		int q= par[cn][ind] ; 
		if ( cn == n ) 
			cout << ind + 1  <<endl;
		
		else if ( q == ind ) 
			cout << cn + 1 << " " << cn+ 1 + 1 <<endl ; 
		else if ( q == cn ) 
			cout << cn + 1 + 1 << " " << ind + 1 << endl;  
		else if ( q == cn + 1 ) 
			cout << cn + 1 << " " << ind + 1 << endl; 
		ind = par[cn][ind] ; 
		cn+=2; 
	}
	
	
	
	return 0;
 }
