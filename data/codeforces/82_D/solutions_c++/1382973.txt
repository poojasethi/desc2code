//82D Two out of Three - dp
#include <cstdio>
#include <algorithm>
using namespace std;

int N;
int A[1009];

//dp[i][j] = min time to process [j] ++ [i..N]
int dp[1009][1009];

int min(int a, int b, int c)
{
  return min(min(a, b), c);
}

int main ()
{
  //input
  scanf("%d", &N);
  for (int i = 1; i <= N; i++)
    scanf("%d", &A[i]);
  
  //init
  for (int i = 1; i <= N; i++)
  {
    dp[N + 1][i] = A[i];
    dp[N + 2][i] = A[i];
  }
  
  //dp
  for (int i = N; i >= 1; i--)
    for (int j = 1; j < i; j++)
      dp[i][j] = min( dp[i + 2][j] + max(A[i], A[i + 1]),
                      dp[i + 2][i] + max(A[j], A[i + 1]),
                      dp[i + 2][i + 1] + max(A[j], A[i]) );

  //answer
  printf("%d\n", dp[2][1]);
  
  int j = 1;
  for (int i = 2; i <= N; i += 2)
    if (dp[i][j] == dp[i + 2][j] + max(A[i], A[i + 1]))
      printf("%d %d\n", i, i + 1);
    else if (dp[i][j] == dp[i + 2][i] + max(A[j], A[i + 1]))
    {
      printf("%d %d\n", j, i + 1);
      j = i;
    }
    else if (dp[i][j] == dp[i + 2][i + 1] + max(A[j], A[i]))
    {
      printf("%d %d\n", j, i);
      j = i + 1;
    }
  if (N % 2 == 1)
    printf("%d\n", j);
  return 0;
}
