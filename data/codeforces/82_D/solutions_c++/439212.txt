#include<iostream>
#include<vector>
#include<string>
#include<cmath>
#include<algorithm>
#include<sstream>
#define fr(i,a,b) for(i=a;i<=b;i++)
using namespace std;
const int maxn=1002;
int f[maxn][maxn],besta[maxn][maxn],bestb[maxn][maxn],prea[maxn][maxn],preb[maxn][maxn],x[maxn],i,n;
int cal(int a,int b){
	if(f[a][b]>0)
		return f[a][b];
	f[a][b]=1000000000;
	if(b>n){
		besta[a][b]=a;
		return f[a][b]=x[a];
	}
	if(b==n){
		besta[a][b]=a;
		bestb[a][b]=b;
		return f[a][b]=max(x[a],x[b]);
	}
	f[a][b]=max(x[a],x[b])+cal(b+1,b+2);
	besta[a][b]=a;
	bestb[a][b]=b;
	prea[a][b]=b+1;
	preb[a][b]=b+2;
	if(f[a][b]>max(x[a],x[b+1])+cal(b,b+2)){
		f[a][b]=max(x[a],x[b+1])+cal(b,b+2);
		besta[a][b]=a;
		bestb[a][b]=b+1;
		prea[a][b]=b;
		preb[a][b]=b+2;
	}
	if(f[a][b]>max(x[b],x[b+1])+cal(a,b+2)){
		f[a][b]=max(x[b],x[b+1])+cal(a,b+2);
		besta[a][b]=b;
		bestb[a][b]=b+1;
		prea[a][b]=a;
		preb[a][b]=b+2;
	}
	return f[a][b];
}
void print(int a,int b){
	if(besta[a][b]==0)
		return;
	cout<<besta[a][b];
	if(bestb[a][b]>0)
		cout<<" "<<bestb[a][b];
	cout<<endl;
	print(prea[a][b],preb[a][b]);
}
int main(){
	cin>>n;
	fr(i,1,n)
		cin>>x[i];
	cout<<cal(1,2)<<endl;
	print(1,2);
}