#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int N = 1e3 + 5;
//好稳啊～～
int dp[N][N], a[N], n;
int dfs(int i, int j)
{
    if(dp[i][j]) return dp[i][j];
    if(j == n) return dp[i][j] = a[i];
    if(j == n-1) return dp[i][j] = max(a[i],a[j]);
    dp[i][j] = max(a[i], a[j]) + dfs(j + 1, j + 2);
    dp[i][j] = min(dp[i][j], max(a[i], a[j + 1]) + dfs(j, j + 2));
    dp[i][j] = min(dp[i][j], max(a[j], a[j + 1]) + dfs(i, j + 2));
    return dp[i][j];
}
void output(int i, int j)
{
    if(j == n)
    {
        printf("%d\n", i + 1);
        return;
    }
    if(j == n - 1)
    {
        printf("%d %d\n", i + 1, j + 1);
        return;
    }
    if(dp[i][j] == max(a[i], a[j]) + dp[j + 1][j + 2])
    {
        printf("%d %d\n", i + 1, j + 1);
        output(j + 1, j + 2);
    }
    else if(dp[i][j] == max(a[i], a[j + 1]) + dp[j][j + 2])
    {
        printf("%d %d\n", i + 1, j + 2);
        output(j, j + 2);
    }
    else if(dp[i][j] == max(a[j], a[j + 1]) + dp[i][j + 2])
    {
        printf("%d %d\n", j + 1, j + 2);
        output(i, j + 2);
    }
}
int main()
{
    scanf("%d",&n);
    for(int i = 0; i < n; ++i) scanf("%d", &a[i]);
    printf("%d\n", dfs(0, 1));
    output(0, 1);
    return 0;
}
  		 	 	       	 	   			  				