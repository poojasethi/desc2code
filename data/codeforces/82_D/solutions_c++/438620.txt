#include <iostream>
#include <cstring>
using namespace std;
int N;
int as[1<<20];
int dp[1024][1024];
int ch[1024][1024];
int dfs(int n, int k) {
	int a = as[k];
	if (n==N) return a;
	if (n==N-1) return max(a, as[n]);
	if (dp[n][k]>=0) return dp[n][k];
	int x = max(as[n],as[n+1]) + dfs(n+2,k);
	int y = max(as[n],a) + dfs(n+2,n+1);
	int z = max(as[n+1],a) + dfs(n+2,n);
	int r;
	if (x<=y && x<=z) r=x, ch[n][k]=0;
	else if (y<=z) r=y, ch[n][k]=1;
	else r=z, ch[n][k]=2;
	return dp[n][k] = r;
}
void print(int n, int k) {
	if (n==N) {cout<<k+1<<'\n';return;}
	if (n==N-1) {cout<<k+1<<' '<<n+1<<'\n';return;}
	int c = ch[n][k];
	if (c==0) cout<<n+1<<' '<<n+2<<'\n', print(n+2,k);
	else if (c==1) cout<<k+1<<' '<<n+1<<'\n', print(n+2,n+1);
	else if (c==2) cout<<k+1<<' '<<n+2<<'\n', print(n+2,n);
}
int main()
{
	memset(dp,-1,sizeof(dp));
	cin>>N;
	for(int i=0; i<N; ++i) cin>>as[i];
	cout<<dfs(1,0)<<'\n';
	print(1,0);
}
