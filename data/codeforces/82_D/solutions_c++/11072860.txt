#include <iostream>
#include <algorithm>
using namespace std;
typedef long long ll;

const int MAX = 1001;

int p[MAX];
int dp[MAX][MAX];
int par[MAX][MAX];

int main(){
	int n;
	cin >> n;
	for (int i = 0; i < n; ++i){
		cin >> p[i];
		dp[n][i] = p[i];
	}
	for (int i = 0; i < n - 1; ++i){
		dp[n - 1][i] = max(p[i], p[n - 1]);
	}
	for (int i = n - 2; i >= 1; --i){
		for (int j = 0; j < i; ++j){
			dp[i][j] = max(p[i], p[j]) + dp[i + 2][i + 1];
			par[i][j] = i + 1;
			if (max(p[i], p[i + 1]) + dp[i + 2][j] < dp[i][j]){
				dp[i][j] = max(p[i], p[i + 1]) + dp[i + 2][j];
				par[i][j] = j;
			}
			if (max(p[j], p[i + 1]) + dp[i + 2][i] < dp[i][j]){
				dp[i][j] = max(p[j], p[i + 1]) + dp[i + 2][i];
				par[i][j] = i;
			}
		}
	}
	cout << dp[1][0] << '\n';
	int i = 1, j = 0;
	while (i < n - 1){
		if (par[i][j] == i + 1){
			cout << j + 1 << ' ' << i + 1 << '\n';
		}else if (par[i][j] == j){
			cout << i + 1 << ' ' << i + 2 << '\n';
		}else{
			cout << j + 1 << ' ' << i + 2 << '\n';
		}
		j = par[i][j];
		i += 2;
	}
	if (i == n){
		cout << j + 1 << '\n';
	}else{
		cout << n << ' ' << j + 1 << '\n';
	}
	return 0;
}
