#include<iostream>
#include<algorithm>
#include<string>
#include<deque>
#include<vector>

using namespace std;

int a[1005];
int dp[1005][1005];
pair<int, int> succ[1005][1005];
pair<int, int> p[1005][1005];

int main() {
	int n;
	cin >> n;
	for (int i=1; i<=n; i++) cin >> a[i];
	for (int f=1; f <= n; f++) {
		dp[f][n+1] = a[f];
	}
	for (int f=1; f <= n-1; f++) {
		dp[f][n] = max(a[f], a[n]);
	}
	for (int s=n-1; s>=2; s--) {
		for (int f=1; f<s; f++) {
			int r1, r2, r3;
			r1 = max(a[f], a[s]) + dp[s+1][s+2];
			r2 = max(a[f], a[s+1]) + dp[s][s+2];
			r3 = max(a[s], a[s+1]) + dp[f][s+2];
			if (r1 <= r2 and r1 <= r3) {
				dp[f][s] = r1;
				succ[f][s] = make_pair(s+1, s+2);
				p[f][s] = make_pair(f, s);
			} else {
				if (r2 <= r3) {
					dp[f][s] = r2;
					succ[f][s] = make_pair(s, s+2);
					p[f][s] = make_pair(f, s+1);
				} else {
					dp[f][s] = r3;
					succ[f][s] = make_pair(f, s+2);
					p[f][s] = make_pair(s, s+1);
				}
			}
		}
	}
	cout << dp[1][2] << "\n";
	int f=1, s=2;
	while (s < n) {
		cout << p[f][s].first << " " << p[f][s].second << "\n";
		int ff = succ[f][s].first;
		s = succ[f][s].second;
		f = ff;
	}
	if (s == n) cout << f << " " << s << "\n";
	else cout << f << "\n";
	return 0;
}

			
