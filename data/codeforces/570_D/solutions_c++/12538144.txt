#include<bits/stdc++.h>
using namespace std;
#define N 500000
vector< int > G[ N + 1 ];
vector< int > H[ 26 ][ N + 1 ];
int in[ N + 1 ], out[ N + 1];
int timer;
char s[ N + 1 ];
void dfs( int u , int h ){
    H[ s[ u ] - 'a' ][ h ].push_back( timer );
    in[ u ] = timer++; 
    for ( int i = 0 ; i < (int)G[ u ].size(); i++ ){
        int v = G[ u ][ i ];
        dfs( v , h + 1 );
    }
    out[ u ] = timer++;
}
int main(){
    int n , m;
    scanf("%d %d", &n , &m );
    for ( int i = 1 ; i <= n - 1; i++ ){
        int x;
        scanf("%d", &x);
        x--;
        G[ x ].push_back( i );
    }
    scanf("%s" , s );
    dfs( 0 , 0 );
    for ( int i = 0 ; i < m; i++ ){
        int x , h;
        scanf("%d %d" , &x , &h );
        x-- ,h--;
        int cnt = 0;
        for ( int j = 0 ; j < 26; j++ ){
            int num = upper_bound( H[ j ][ h ].begin() , H[ j ][ h ].end() , out[ x ] ) - lower_bound( H[ j ][ h ].begin() , H[ j ][ h ].end() , in[ x ] );
            if( num & 1 ) cnt++;
            if( cnt > 1 ) break;
        }
        if( cnt <= 1 ) puts("Yes");
        else puts("No");
    }
    
}