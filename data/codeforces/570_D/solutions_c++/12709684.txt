#include <cstdio>
#include <vector>
using namespace std;

const int MAX_N = 500005;

int n, m;
vector<int> q[MAX_N], adj[MAX_N];
char str[MAX_N];
int ans[MAX_N];
int h[MAX_N];
int dp[MAX_N];

inline void dfs(int u, int d) {
  for (int i = 0; i < q[u].size(); i++) {
    int j = q[u][i];
    ans[j] = dp[h[j]];
  }
  dp[d] ^= 1 << (str[u] - 'a');
  for (int i = 0; i < adj[u].size(); i++) {
    int v = adj[u][i];
    dfs(v, d+1);
  }
  for (int i = 0; i < q[u].size(); i++) {
    int j = q[u][i];
    ans[j] ^= dp[h[j]];
  }
}

int main() {
  scanf("%d %d", &n, &m);
  for (int i = 2; i <= n; i++) {
    int u;
    scanf("%d", &u);
    adj[u].push_back(i);
  }
  scanf("%s", str+1);
  for (int i = 1; i <= m; i++) {
    int u;
    scanf("%d %d", &u, &h[i]);
    q[u].push_back(i);
  }
  dfs(1, 1);
  for (int i = 1; i <= m; i++) {
    if (ans[i] == (ans[i] & -ans[i])) {
      printf("Yes\n");
    } else {
      printf("No\n");
    }
  }
}
