#include<bits/stdc++.h>

using namespace std;

#define N 500005

vector < int > V[N], dpt[N], P[N];

int F[N],D[N],Node[N],T,n,w,x,i,j,k,l,r,d;

char ch[N];

void f(int x){
	dpt[++d].push_back(D[x] = ++T);
    Node[T] = x;
	for(int i=0; i<V[x].size(); i++)
		if(!D[ V[x][i] ])
			f( V[x][i] );
	F[x] = T; d--;
}

int main(){

	scanf("%d%d",&n,&w);

	for(i=2;i<=n;i++){
		scanf("%d",&x);
		V[x].push_back(i);
	}

	scanf(" %s",ch + 1);

	f(1);

	for(i=1;i<=n;i++)
       for(k=0;k<dpt[i].size();k++)
            P[i].push_back( (k ? P[i][k-1] : 0) ^ (1 << ch[ Node[ dpt[i][k] ] ] - 'a') );

	while(w--){

		scanf("%d%d",&x,&d);

		l = lower_bound(dpt[d].begin() , dpt[d].end() , D[x]) - dpt[d].begin();
		r = upper_bound(dpt[d].begin() , dpt[d].end() , F[x]) - dpt[d].begin() - 1;

        j = 0;
 		if(r != -1)
            for(i=0;i<26;i++)
                j += (P[d][r] & (1 << i)) != (l ? (P[d][l-1] & (1 << i)) : 0);

		puts(j > 1 ? "No" : "Yes");
	}

	return 0;
}
