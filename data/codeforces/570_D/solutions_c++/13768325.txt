#include <bits/stdc++.h>
using namespace std;

const int maxn = 5e5+123;

int n,m,h[maxn],ans[maxn],sum[maxn];
vector < int > way[maxn],query[maxn];
char ar[maxn];

void dfs( int node , int depth ){
	
	for( int i=0 ; i < (int)query[node].size() ; i++ )
		ans[query[node][i]] ^= sum[h[query[node][i]]];
	
	sum[depth] ^= 1<<(ar[node] - 'a');
	
	for( int i=0 ; i < (int)way[node].size() ; i++ )
		dfs( way[node][i] , depth+1 );
	
	for( int i=0 ; i < (int)query[node].size() ; i++ )
		ans[query[node][i]] ^= sum[h[query[node][i]]];
}

int main(){
	
	scanf("%d%d",&n,&m);
	
	for( int i=2,p ; i <= n ; i++ ){
		scanf("%d",&p);
		way[p].push_back(i);
	}
	
	scanf("%s",ar+1);
	
	for( int i=1,v ; i <= m ; i++ ){
		scanf("%d%d",&v,&h[i]);
		query[v].push_back(i);
	}
	
	dfs( 1 , 1 );
	
	for( int i=1 ; i <= m ; i++ )
		puts( __builtin_popcount( ans[i] ) <= 1 ? "Yes" : "No" );
	
	return 0;
}
