#include <bits/stdc++.h>
using namespace std;
#define Max 500010
vector <int >p[Max],dep[Max],v[Max];
int cnt,n,m,in[Max],out[Max];
char s[Max];
void dfs(int u,int step)
{
    in[u]=cnt++;
    dep[step].push_back(in[u]);
    int k=v[step][v[step].size()-1];
    v[step].push_back(k^(1<<(s[u]-'a')));
    for(int i=0;i<p[u].size();i++)
    {
        dfs(p[u][i],step+1);
    }
    out[u]=cnt;
}
int cal(int n)
{
    int res=0;
    while(n>0)
    {
        res+=n%2;
        n/=2;
    }
    return res;
}
int main()
{
    cin>>n>>m;int t;
    for(int i=2;i<=n;i++)
    {
        scanf("%d",&t);
        p[t].push_back(i);
    }
    scanf("%s",s+1);cnt=1;
    for(int i=1;i<=n;i++)
    {
        dep[i].push_back(0);
        v[i].push_back(0);
    }
    dfs(1,1);
    int x,d;
    for(int i=1;i<=m;i++)
    {
        scanf("%d %d",&x,&d);
        int a=lower_bound(dep[d].begin(),dep[d].end(),in[x])-dep[d].begin()-1;
        int b=lower_bound(dep[d].begin(),dep[d].end(),out[x])-dep[d].begin()-1;
        if(cal(v[d][a]^v[d][b])<=1) printf("Yes\n");
        else printf("No\n");
    }
    return 0;
}
