#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;
#define maxn 500005

int n;
vector<int> Map[maxn];
vector<int> G[maxn][30];
char str[maxn];
int in[maxn], out[maxn];
int dfs_c = 0;

void dfs(int u, int dep)
{
    dfs_c++;
    in[u] = dfs_c;
    G[dep][str[u]-'a'].push_back(dfs_c);
    int len = Map[u].size();
    for (int i = 0; i<len; i++)
        dfs(Map[u][i], dep+1);
    out[u] = dfs_c;
}

int main()
{
    int m, a, b;
    while (scanf("%d%d", &n, &m) != EOF)
    {
        for (int i = 2; i<=n; i++)
        {
            scanf("%d", &a);
            Map[a].push_back(i);
        }
        scanf("%s", str+1);
        dfs_c = 0;
        dfs(1, 1);
        while (m--)
        {
            scanf("%d%d", &a, &b);
            int ans = 0;
            for (int i = 0; i<26 && ans <= 1; i++)
            {
                int cnt = upper_bound(G[b][i].begin(), G[b][i].end(), out[a]) - lower_bound(G[b][i].begin(), G[b][i].end(), in[a]);
                if (cnt&1) ans++;
            }
            if (ans > 1) puts("No");
            else puts("Yes");
        }
    }
    return 0;
}
