#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define N 100001

int f[N], g[N];

int dfs(int x) {
	int &ret = f[x];
	if (ret != -1) return ret;
	int &mx = g[x];
	bool v[100] = {0};
	int y = x + x;
	mx = 0x7fffffff;
	for (int k = 2; k <= y; ++k)
		if (y % k == 0) {
			int a = y/k - k + 1;
			if (a > 0 && a % 2 == 0) {
				a /= 2;
				int s = 0;
				for (int j = 0; j < k; ++j)
					s ^= dfs(a + j);
				v[s] = 1;
				if (s == 0) mx = min(mx, k);
			}
		}
	for (int i = 0; i < 100; ++i)
		if (!v[i])
			return ret = i;
	return ret = 0;
}

int main() {
	memset(f, -1, sizeof(f));
	int n;
	scanf("%d", &n);
	if (!dfs(n))
		puts("-1");
	else
		printf("%d\n", g[n]);
	return 0;
}
