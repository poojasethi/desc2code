#include <iostream>
#include <assert.h>
#include <memory.h>

using namespace std;

int d[100001];
int best[100001];

int main() {
  int N;
  cin >> N;

  memset(best, -1, sizeof(best));
  int seen[100];
  for (int n=1; n <= N; n++) {
    memset(seen, 0, sizeof(seen));
    for (int k=2; n - (k*(k-1))/2 >= k; k++) {
      if ((n-(k*(k-1)/2))%k == 0) {
        int x = (n-(k*(k-1)/2))/k;
        int sum = 0;
        for (int j=0; j<k; j++)
          sum ^= d[x+j];
        seen[sum] = true;
        if (sum == 0 && best[n] == -1)
          best[n] = k;
      }
    }

    int v = 0;
    while (v < 100 && seen[v])
      v++;

    if (v == 100)
      assert(false);

    d[n] = v;
  }

  cout << best[N] << endl;
}
