#include <bits/stdc++.h>
#define MAX_N 100005
using namespace std;

int n, xors[MAX_N], best[MAX_N], grundy[MAX_N], rest;
set <int> S;

int main(){

  scanf("%d", &n);

  xors[0] = 0;
  grundy[0] = 1;
  memset(best, -1, sizeof best);
  
  for(int i = 1; i <= n; i ++){
    S.clear();
    for(int k = 2; (k * k + k) <= (2 * i); k ++){
      rest = i - ((k * k + k) / 2);

      if(rest % k) continue;
      rest /= k;

      if((xors[rest] ^ xors[rest + k]) == 0)
        if(best[i] == -1)
          best[i] = k;

      S.insert(xors[rest] ^ xors[rest + k]);
    }

    for(int j = 0; 1; j ++)
      if(S.count(j) == 0){
        grundy[i] = j;
        break;
      }
    
    xors[i] = xors[i - 1] ^ grundy[i];
  }

  printf("%d\n", best[n]);

  return 0;
}
