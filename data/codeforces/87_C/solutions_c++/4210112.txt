#include <iostream>
#include <set>

using namespace std;

const int maxN = 100000+10;

int n, g[maxN], partial[maxN], ans = -1;
set <int> s;

int main()
{
	cin >> n;
	if (n <= 2)
	{
		cout << -1 << endl;
		return 0;
	}
	g[1] = g[2] = 0;
	for (int i = 3 ; i <= n ; i++)
	{
		s.clear();
		for (int k = 2 ; i >= k*(k-1)/2 ; k++)
		{
			int temp = i - k*(k-1)/2;
			if (temp % k == 0)
			{
				int x = temp / k;
				int tt = partial[x+k-1] ^ partial[x-1];
				s.insert(tt);
				if (tt == 0 && i == n && ans == -1)
					ans = k;
			}
		}
		int mex = 0;
		for (; s.find(mex) != s.end() ; mex++);
		g[i] = mex;
		partial[i] = partial[i-1] ^ mex;
	}
	cout << ans << endl;
	return 0;
}
