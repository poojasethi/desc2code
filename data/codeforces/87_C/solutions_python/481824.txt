from operator import __xor__ as X
n = input()
a = [[] for _ in xrange(n+1)]
for k in xrange(2,n):
    for x in xrange(1,n):
        f = x*k+(k*k-k>>1)
        if f>n: break
        a[f].append((k,x))
q = [n]
s = set(q)
for j in q:
    l = set([])
    for k,x in a[j]: l.update(range(x,x+k))
    l -= s
    q.extend(l)
    s |= l
f = [0]*(n+1)
for i in sorted(s):
    z = set(reduce(X,f[x:x+k],0) for k,x in a[i])
    for j in xrange(n):
        if j not in z: break
    f[i]=j
print min(k for k,x in a[n] if reduce(X,f[x:x+k],0)==0) if f[n] else -1

