#include <iostream>
#include <deque>
using namespace std;

struct tree
{
	long long sum;
	int cost;
	double grad;
};

int main()
{
	int n;
	cin >> n;
	int a[n];
	for (int i = 0; i < n; ++i)
		cin >> a[i];

	deque<tree> q(1);
	q[0].sum = 0, cin >> q[0].cost, q[0].grad = 0;
	tree cur;
	for (int i = 1; i < n; ++i) {
		while (q.size() > 1 && a[i] >= q[1].grad) q.pop_front();
		cur.sum = q[0].sum+(long long)a[i]*q[0].cost;
		cin >> cur.cost;
		while (q.size() > 1 && q.back().grad > double(cur.sum-q.back().sum)/(q.back().cost-cur.cost)) q.pop_back();
		cur.grad = double(cur.sum-q.back().sum)/(q.back().cost-cur.cost);
		q.push_back(cur);
	}
	cout << q.back().sum;
	return 0;
}
