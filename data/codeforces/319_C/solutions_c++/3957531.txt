#include <iostream>

using namespace std;

const int max_n = 1e5 + 15;

int n, t, idx, s[max_n];
long long h[max_n], c[max_n], dp[max_n];

long long f(int i, int j) {return h[j] * c[i] + dp[i];}

double x(int i, int j) {return (dp[j] - dp[i]) / (1. * c[i] - c[j]);}

int main()
{
  cin >> n;
  for (int i = 0; i < n; i++)
    cin >> h[i];
  for (int i = 0; i < n; i++)
    cin >> c[i];
  *dp = 0;
  s[t++] = 0;
  for (int i = 1; i < n; i++)
  {
    while (idx + 1 < t && f(s[idx + 1], i) <= f(s[idx], i)) idx++;
    dp[i] = f(s[idx], i);
    while (t - 1 > idx && x(s[t - 1], i) <= x(s[t - 2], s[t - 1])) t--;
    s[t++] = i;
  }
  cout << dp[n - 1];
  return 0;
}
