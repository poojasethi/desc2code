#include <algorithm>
#include <iostream>
#include <deque>

using namespace std;

const int N=1E5+10;

long long n,a[N],b[N],dp[N];
deque<int>Q(1,0);

int main()
{
	ios::sync_with_stdio(0);
	cin>>n;
	for(int i=0;i<n;++i) cin>>a[i];
	for(int i=0;i<n;++i) cin>>b[i];
	for(int i=1;i<n;++i)
	{
		for(;(int)Q.size()>1 && dp[Q[1]]+b[Q[1]]*a[i]<=dp[Q[0]]+b[Q[0]]*a[i];Q.pop_front());
		dp[i]=dp[Q[0]]+b[Q[0]]*a[i];
		for(int s=(int)Q.size();s!=0 && double(dp[i]-dp[Q[s-1]])/(b[Q[s-1]]-b[i])<=(s>1 ? double(dp[Q[s-1]]-dp[Q[s-2]])/(b[Q[s-2]]-b[Q[s-1]]) : 0);Q.pop_back(),--s);
		Q.push_back(i);
	}
	cout<<dp[n-1]<<endl;
	return 0;
}