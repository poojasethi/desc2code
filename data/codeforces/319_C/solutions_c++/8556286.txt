#include <iostream>
using namespace std;
const int MAX = 100005;
long long dp[MAX], a[MAX], b[MAX], d[MAX], h, t;
long long get(int i, int j)
{
	return (dp[j] - dp[i] + b[i] - b[j] - 1) / (b[i] - b[j]);
}
int main()
{
	ios::sync_with_stdio(false);
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 0; i < n; i++)
		cin >> b[i];
	d[t++] = 0;
	for (int i = 1; i < n; i++)
	{
		while (t - h > 1 && get(d[h], d[h + 1]) <= a[i])
			h++;
		dp[i] = dp[d[h]] + a[i] * b[d[h]];
		while (t - h > 1 && get(i, d[t - 1]) <= get(d[t - 1], d[t - 2]))
			t--;
		d[t++] = i;
	}
	cout << dp[n - 1] << endl;
	return 0;
}
