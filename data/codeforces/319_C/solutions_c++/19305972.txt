#include<bits/stdc++.h>

int n, a[100005], b[100005], dq[100005], l, r;
long long dp[100005];

double m(int j, int k) {
	return 1. * (dp[j] - dp[k]) / (b[j] - b[k]);
}

int main() {
	scanf("%d", &n);
	for (int i = 1; i <= n; i++) scanf("%d", &a[i]);
	for (int i = 1; i <= n; i++) scanf("%d", &b[i]);
	dq[r++] = 1;
	for (int i = 2; i <= n; i++) {
		while(r - l >= 2 && m(dq[l], dq[l + 1]) > -a[i]) l++;
		dp[i] = dp[dq[l]] + 1ll * b[dq[l]] * a[i];
		while(r - l >= 2 && m(dq[r - 2], dq[r - 1]) < m(dq[r - 1], i)) r--;
		dq[r++] = i;
	}
	printf("%I64d\n", dp[n]);
	scanf("\n");
	return 0;
}
