#!/usr/bin/python

import sys, os
sys.setrecursionlimit(10000)

def readline():
	return sys.stdin.readline().strip()
def readrow():
	return readline().split(' ')

"""
TEXT ::= SENTENCE | SENTENCE SPACE TEXT
SENTENCE ::= WORD SPACE SENTENCE | WORD END
END ::= {'.', '?', '!'}
WORD ::= LETTER | LETTER WORD
LETTER ::= {'a'..'z', 'A'..'Z'}
SPACE ::= ' '
"""

def isEnd(): return len(s) <= p
def current() : return s[p] if not isEnd() else ''
def next(): 
	global p
	p += 1
	return isEnd()

def readSpace():
	if current() == ' ':
		next()
		return True
	else:
		return False
def readWord():
	word = ''
	while current().isalpha():
		word += current()
		next()
	return word
def readSentense():
	sentense = []
	while True:
		w = readWord()
		sentense.append(w)
		if current() in ['.', '?', '!']:
			next()
			break
		else:
			next()
	return ' '.join(sentense)
def readText():
	global p
	p = 0
	sentences = []
	while not isEnd():
		sentences.append(readSentense())
		if not readSpace():
			break
	return sentences

n = int(readline())
s = readline()
sentences = readText()
count = 0
buffer = -1
for sentence in sentences:
	l = len(sentence)+1
	if l > n:
		count = None
		break
	else:
		if buffer + l + 1<= n:
			buffer += l + 1
		else:
			buffer = l
			count += 1
if buffer > 0 and count is not None: count += 1

print('Impossible' if count is None else count)
