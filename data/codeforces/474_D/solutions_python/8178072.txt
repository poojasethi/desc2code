import sys

stdin=sys.stdin

def sol1():
    n=int(stdin.readline().strip())
    a=map(int,stdin.readline().strip().split())
    s=[0]*(10**6+1)

    curr=0

    for i in range(n):
        for j in range(a[i]):
            s[curr]=i
            curr+=1

    m=int(stdin.readline())

    for q in map(int,stdin.readline().strip().split()):
        print s[q-1]+1

def search(a,x):
    lo,hi=0,len(a)

    while lo<hi:
        m=lo+(hi-lo)/2

        if a[m]>=x:
            hi=m
        else:lo=m+1
    return lo

def sol2():
    n=int(stdin.readline().strip())
    a=map(int,stdin.readline().strip().split())

    for i in range(1,n):
        a[i]+=a[i-1]

    m=int(stdin.readline().strip())

    for q in map(int,stdin.readline().strip().split()):
        print search(a,q)+1

MOD=10**9+7




def sol3():
    global k
    t,k=map(int,stdin.readline().strip().split())
    ways=[0]*(10**5+5)

    

    for i in range(k):ways[i]=1

    for i in range(k,10**5+1):
        ways[i]=(ways[i-1]+ways[i-k])%MOD

    for i in range(2,10**5+1):
        ways[i]=(ways[i-1]+ways[i])%MOD

    ways[0]=0

    for tcase in range(t):
        a,b=map(int,stdin.readline().strip().split())

        print (ways[b]-ways[a-1]+MOD)%MOD




def main():
    sol3()
    

main()


