#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
ll x, k;
vector<ll> d, bd, ans;

void dfs(int ind, int depth) {
	if((int)ans.size() >= 100000)
		return;
	if(depth == k || d[ind] == 1) {
		ans.push_back(d[ind]);
		return;
	}
	for(int i = 0; i <= ind; i++)
		if(d[ind] % d[i] == 0)
			dfs(i, depth+1);
}

int main() {
	cin >> x >> k;
	for(ll i = 1; i * i <= x; i++)
		if(x % i == 0) {
			d.push_back(i);
			if(i != x/i)
				bd.push_back(x/i);
		}
	while(bd.size()) {
		d.push_back(bd.back());
		bd.pop_back();
	}
	dfs(d.size()-1, 0);
	for(int i = 0; i < (int)ans.size(); i++)
		cout << ans[i] << " ";
	cout << endl;
	return 0;
}
