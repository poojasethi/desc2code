#include<iostream>
#include<cmath>
#include<algorithm>
using namespace std;
typedef __int64 LL;
LL divisor[100000];
LL num;
LL cou=0;
void get(LL x){
	num=0;
	LL tmp=(LL)sqrt(x);
	for(LL i=1;i<=tmp;i++){
		if(x%i==0){
			divisor[num++]=i;
			if(x/i!=i)
				divisor[num++]=x/i;
		}
	}
	sort(divisor,divisor+num);
}
void dfs(LL x,LL k)
{
	if(cou>=100000) return;
	if(x==1||k==0){
		cout<<x<<" ";
		cou++;
		return;
	} 
	for(LL i=0;i<num&&divisor[i]<=x;i++){
		if(x%divisor[i]==0){
			dfs(divisor[i],k-1);
			if(cou>=100000)	return;
		}
	}
}
int main()
{
	LL x,k;
	while(cin>>x>>k)
	{
		get(x);
		dfs(x,k);
		cout <<endl;
	}
	return 0;
}
	 	 				      			 	 	    		