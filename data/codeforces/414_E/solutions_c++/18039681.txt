#include<bits/stdc++.h>
using namespace std;
#define rep(i,a,b) for(int i=(a);i<=(b);i++)
#define re(i,a,b) for(int i=(a);i<(b);i++)
#define repd(i,a,b) for(int i=(a);i>=(b);i--)
#define run(v) for(int k=head[v];k;k=e[k].ne)
//#define v e[k].t
#define ergomap(i,a) for(map<int,int>::iterator i=a.begin();i!=a.end();i++)
#define ergoset(i,a) for(set<int>::iterator i=a.begin();i!=a.end();i++)
#define ergo(i,a) for(int i=0;i<a.size();i++)
#define clr(a) memset(a,0,sizeof(a));
#define il inline
#define sz(a) ((int)a.size())
#define pb push_back 
#define w1 first
#define w2 second
#define adm(a,b,c) {a=a+b;if(a>=c)a-=c;else if(a<0)a+=c;}
typedef pair<int,int> pa;
typedef long long ll;typedef long double ld;typedef unsigned long long ull;
const int N=4e5+5,M=2e6+5,INF=1e9,mod=1e9+7;
const ll linf=1e18;const double eps=1e-8,pi=acos(-1);
il int gmin(int &a,int b){if(a>b)a=b;}il ll gmin(ll &a,ll b){if(a>b)a=b;}il int gmax(int &a,int b){if(a<b)a=b;}il ll gmax(ll &a,ll b){if(a<b)a=b;}
il void read(ll&x){ll f=1,t=0;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9'){t=t*10+ch-'0';ch=getchar();}x=t*f;}il ll read(ll&x,ll&y){read(x);read(y);}
il void read(int&x){int f=1,t=0;char ch=getchar();while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}while(ch>='0'&&ch<='9'){t=t*10+ch-'0';ch=getchar();}x=t*f;}il int read(int&x,int&y){read(x);read(y);}
il void read(int&a,int&b,int&c){read(a);read(b);read(c);}il void read(ll&a,ll&b,ll&c){read(a);read(b);read(c);}
il ll qpow(ll a,ll b,ll p){ll ret=1;for(;b;b>>=1,a=a*a%p)if(b&1)ret=ret*a%p;return ret;}il ll qpow(ll a,ll b){ll ret=1;for(;b;b>>=1,a=a*a%mod)if(b&1)ret=ret*a%mod;return ret;}
il ll qmul(ll a,ll b,ll p){ll ret=0;for(;b;b>>=1,a=(a<<1)%p)if(b&1)adm(ret,a,p);return ret;}il ll qmul(ll a,ll b){ll ret=0;for(;b;b>>=1,a=(a<<1)%mod)if(b&1)adm(ret,a,mod);return ret;}
il void judge(){
	freopen("data.in","r",stdin);
	freopen("data.out","w",stdout);}
il void gen(){freopen("data.in","w",stdout);}
int n,m,bin[30]={1};
struct zball{
	int id,val,mn,mx,tg;
	int rnd,sz,fa,l,r;
	il zball(){mn=INF;mx=-INF;sz=0;}
	il zball(int x,int dep){
		id=x;val=mn=mx=dep;
		tg=0;rnd=(rand()<<16)|rand();sz=1;fa=l=r=0;
	}
};
int sz,rt;
int l[N],r[N];
vector<int>son[N];
zball t[5*N];
#define ls t[x].l
#define rs t[x].r
il void pd(int x){
	if(!x||t[x].tg==0)return;
	t[x].val+=t[x].tg;t[x].mn+=t[x].tg;t[x].mx+=t[x].tg;
	if(ls)t[ls].tg+=t[x].tg;
	if(rs)t[rs].tg+=t[x].tg;
	t[x].tg=0;
}
il void pu(int x){
	pd(x);pd(ls);pd(rs);
	t[x].sz=t[ls].sz+t[rs].sz+1;
	t[x].mn=min(t[x].val,min(t[ls].mn,t[rs].mn));
	t[x].mx=max(t[x].val,max(t[ls].mx,t[rs].mx));
	t[x].fa=0;
	if(ls)t[ls].fa=x;
	if(rs)t[rs].fa=x;
}
il int merge(int a,int b){
	pd(a);pd(b);
	if(!a||!b)return a+b;
	if(t[a].rnd>t[b].rnd){
		t[a].r=merge(t[a].r,b);
		pu(a);return a;
	}else{
		t[b].l=merge(a,t[b].l);
		pu(b);return b;
	}
}il pa split(int x,int k){
	pd(x);
	if(!x)return pa(0,0);pa y;
	if(t[ls].sz>=k){
		y=split(ls,k);ls=y.w2;y.w2=x;
	}else{
		y=split(rs,k-t[ls].sz-1);rs=y.w1;y.w1=x;
	}pu(x);
	return y;
}
void dfs(int x,int dep){
	t[++sz]=zball(x,dep);rt=merge(rt,sz);l[x]=sz;
	re(i,0,sz(son[x])){
		dfs(son[x][i],dep+1);
		t[++sz]=zball(x,dep);rt=merge(rt,sz);
	}
	t[++sz]=zball(x,dep);rt=merge(rt,sz);
	r[x]=sz;
}
il int getnum(int x){
	int ret=t[ls].sz+1;
	while(t[x].fa){
		int fa=t[x].fa;
		if(t[fa].r==x)ret+=t[t[fa].l].sz+1;
		x=fa;
	}return ret;
}
il int getpos(int x){return getnum(l[x]);}
il int getdi(int x,int rk){
	pd(x);
	if(t[ls].sz+1==rk)return t[x].val;
	if(t[ls].sz+1>rk)return getdi(ls,rk);else
		return getdi(rs,rk-t[ls].sz-1);
}
il int getdi(int x){return getdi(rt,getnum(l[x]));}
il int getdis(int x,int y){
	int l=getpos(x),r=getpos(y);
	if(l>r)swap(l,r);
	pa p1=split(rt,r),p2=split(p1.w1,l-1);
	int ret=t[p2.w2].mn;
	rt=merge(merge(p2.w1,p2.w2),p1.w2);
	return getdi(x)+getdi(y)-ret*2;
}
il int findkth(int x,int k){
	pd(x);
	if(x==0)return -1;
	if(t[x].val==k){int ret=findkth(rs,k);if(ret==-1)ret=t[x].id;return ret;}
	pd(rs);
	if(rs&&t[rs].mn<=k&&t[rs].mx>=k)return findkth(rs,k);
	return findkth(ls,k);
}
int fa[N];
il void movetree(int x,int k){
	int h=getdi(x);pa y1,y2,y3;
	y1=split(rt,getpos(x)-1);
	int pv=findkth(y1.w1,h-k);
	y2=split(y1.w2,getnum(r[x]));
	t[y2.w1].tg-=(k-1);pd(y2.w1);
	rt=merge(y1.w1,y2.w2);
	y3=split(rt,getnum(r[pv])-1);
	t[++sz]=zball(pv,h-k);
	int p=merge(y2.w1,sz);
	rt=merge(y3.w1,merge(p,y3.w2));
}
int main(){
	read(n,m);
	rep(i,1,n){
		int x;read(x);rep(j,1,x){
			int y;read(y);son[i].pb(y);
		}
	}dfs(1,0);
	re(i,0,m){
		int opt;read(opt);if(opt==1){
			int x,y;read(x,y);
			cout<<getdis(x,y)<<endl;
		}else if(opt==2){
			int x,h;read(x,h);
			movetree(x,h);
		}else{
			int k;read(k);
			cout<<findkth(rt,k)<<endl;
		}
	}
}
