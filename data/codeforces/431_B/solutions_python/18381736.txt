#!/usr/bin/python

from collections import deque
from itertools   import permutations as perm

def ir():
    return int(raw_input())

def ia():
    line = raw_input()
    line = line.split()
    return map(int, line)

g = [ ]
for e in range(5):
    g.append(ia())

def hp(l):
    i0, i1, i2, i3, i4 = l
    return 2*g[i4][i3]+2*g[i3][i4]+2*g[i3][i2]+2*g[i2][i3]+g[i2][i1]+g[i1][i2]+g[i1][i0]+g[i0][i1]

def safe_max(a, b):
    if a==None: return b
    if b==None: return a
    return max(a, b)

ma = None
for l in perm(range(5)):
    ma = safe_max(ma, hp(l))

print ma    
