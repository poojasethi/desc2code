#include <bits/stdc++.h>
using namespace std;
long long n, visited[100010];
vector<pair<int,int> > adj[100010];
void dfs(int u, long long cost){
    if(visited[u]!=-1) return;
    visited[u]=cost;
    for(int i=0; i<adj[u].size(); i++){
        dfs(adj[u][i].first,cost+adj[u][i].second);
    }
}
int main(){
    memset(visited,-1,sizeof visited);
    cin >> n; long long sum=0;
    for(int i=1; i<n; i++){
        int u, v, w;
        cin >> u >> v >> w; sum+=w;
        adj[u].push_back(make_pair(v,w));
        adj[v].push_back(make_pair(u,w));
    } dfs(1,0); long long mmax=0;
    for(int i=1; i<=n; i++) mmax=max(mmax,visited[i]);
    cout << 2*sum-mmax << '\n';
    return 0;
}

