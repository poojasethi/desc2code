#include <iostream>
#include <vector>

using namespace std;

const int MAXN = 1000 * 100 + 10;
vector<int> ng[MAXN], w[MAXN];

long long dfs(int x, int p)
{
	long long ret = 0;
	for (int i = 0; i < ng[x].size(); i++)
	{
		int u = ng[x][i];
		if (u == p)
			continue;
		ret = max(ret, (long long)w[x][i] + dfs(u, x));
	}
	return ret;
}

int main()
{
	int n; long long ans = 0;
	cin >> n;
	for (int i = 0; i < n - 1; i++)
	{
		int a, b, c;
		cin >> a >> b >> c;
		a--; 
		b--;
		ng[a].push_back(b);
		ng[b].push_back(a);
		w[a].push_back(c);
		w[b].push_back(c);
		ans += 2 * c;
	}
	ans -= dfs(0, -1);
	cout << ans << endl;
	return 0;
}
