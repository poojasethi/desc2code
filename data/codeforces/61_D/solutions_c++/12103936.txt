#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;

typedef long long ll;
vector<pair<int,int> >q[100004];

ll dfs(int from,int dad,ll now)
{
	int i;
	ll res=now;
	for(i=0;i<q[from].size();i++)
	{

		int to=q[from][i].first;
		int v=q[from][i].second;
		if(to!=dad)
			res=max(res,dfs(to,from,now+v));
	}
	return res;
}

int main()
{
	int i,j,k;
	int from,to,v;
	int n;
	ll sum=0;
	cin>>n;
	for(i=1;i<n;i++)
	{
		scanf("%d%d%d",&from,&to,&v);
		sum+=v;
		q[from].push_back(make_pair(to,v));
		q[to].push_back(make_pair(from,v));
	}
	ll longroad=dfs(1,0,0);
	cout<<(2*sum-longroad)<<endl;
	return 0;
}
		    	      		  	  		  			  		