#include <iostream>
#include <cstdlib>
#include <vector>

using namespace std;
const long long mx=100000+200;
long long mark[mx],n,sum=0,x,y,w;
vector <long long> adj[mx],cost[mx];

long long dfs(long long v)
{
	mark[v]=1;
	long long ret=0,u;
	for(long long i=0,z=adj[v].size();i<z;i++)
	{
		u=adj[v][i];
		if(!mark[u])
		{
			ret=max(ret,dfs(u)+cost[v][i]);
		}
	}
	return ret;
}

 main()
{
	cin>>n;
	for(long long i=1;i<n;i++)
	{
		cin>>x>>y>>w;
		x--;
		y--;
		adj[x].push_back(y);
		adj[y].push_back(x);
		cost[x].push_back(w);
		cost[y].push_back(w);
		sum+=w;
	}
	long long k=dfs(0);
	cout<<sum*2-k<<endl;
	return 0;
}
