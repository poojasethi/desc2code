#include<iostream>
#include<vector>
using namespace std;
long long dp[1000*100+10];
vector <pair<int,long long> >adj[1000*100+10];
bool mark[1000*100+10];
void dfs(int v){
	mark[v]=1;
	for(int i=0;i<adj[v].size();i++){
		int x=adj[v][i].first;
		if(!mark[x]){
			dfs(x);
			dp[v]=max(dp[v],dp[x]+adj[v][i].second);
		}
	}
}
int main(){
	int n;
	cin>>n;
	long long  cnt=0;
	for(int i=1;i<=n-1;i++){
		int l,r;
		cin>>l>>r;
		long long w;
		cin>>w;
		adj[l].push_back(make_pair(r,w));
		cnt+=w;
		adj[r].push_back(make_pair(l,w));
	}
	dfs(1);
	cnt*=2;
	cnt-=dp[1];
	cout<<cnt;
}


