#! /usr/bin/env python
from sys import stdin, setrecursionlimit as recdepth

recdepth(1000000)

def min_cost(node,G, visited,max_cost,total_cost):
	visited[node]=True
	max_cost[node]=total_cost
	ret=0
	for next,cost in G[node]:
		if not visited[next]:
			ret+=2*cost+min_cost(next,G,visited,max_cost,total_cost+cost)
	return ret
			
if __name__=='__main__':
	n=int(stdin.readline())
	edges=[map(int,stdin.readline().split()) for i in xrange(n-1)]
	adj_list=[list() for i in xrange(n)]
	for x,y,w in edges:
		adj_list[x-1].append((y-1,w))
		adj_list[y-1].append((x-1,w))
	max_cost=[0 for i in xrange(n)]
	total=min_cost(0,adj_list,[False for i in xrange(n)],max_cost,0)
	longest_path=max(max_cost)
	print total-longest_path
