#include <iostream>
#include <algorithm>
#include <cstring>
using namespace std;
char name[10010][11];
int used[10010];
int len[10010];
int flag;
int
cmp(const void *p, const void *q) {
	char *s1 = (char *)p, *s2 = (char *)q;
	int l1 = strlen(s1), l2 = strlen(s2);
	if(l1 != l2 && strncmp(s1, s2, min(l1,l2)) == 0) {
		if(flag)
			return l1<l2?-1:1;
		return l1<l2?1:-1;
	}
	return strcmp(s1,s2);
}
int
main() {
	int n;
	cin >> n;
	int i, j;
	int tl = 0;
	for(i = 0; i < n; i++)
		cin >> name[i];
	char d[2];
	cin >> d;
	if(d[0] < 'a') flag = 1;
	qsort(name, n, sizeof(char)*11, cmp);
	for(i = 0; i < n; i++) {
		len[i] = strlen(name[i]);
		tl += len[i];
	}
	int ll = tl*2/n;
	for(i = 0; i < n; i++) {
		if(used[i]) continue;
		for(j = i + 1; j < n; j++)
			if(len[j] == ll - len[i] && !used[j])
				break;
		cout << name[i] << d[0] << name[j] << endl;
		used[i] = used[j] = 1;
	}
	return 0;
}
