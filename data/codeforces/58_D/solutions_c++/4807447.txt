#include <iostream>
#include <algorithm>
#include <set>

using namespace std;

const int MAXS = 20;
set<string> all[MAXS], withd;

int main()
{
	int n, l = 0;
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		string s;
		cin >> s;
		all[s.size()].insert(s);
		l += s.size();
	}
	l /= n / 2;
	char d;
	cin >> d;
	for (int i = 0; i < MAXS; i++)
	{
		for (set<string>::iterator it = all[i].begin(); it != all[i].end(); it++)
		{
			string cur = *it;
			cur += d;
			withd.insert(cur);
		}
	}
	for (int i = 0; i < n / 2; i++)
	{
		string s = *withd.begin();
		withd.erase(s);
		all[s.size() - 1].erase(s.substr(0, s.size() - 1));
		string t = *all[l - s.size() + 1].begin();
		all[l - s.size() + 1].erase(t);
		cout << s << t << endl;
		t += d;
		withd.erase(t);
	}
	return 0;
}
