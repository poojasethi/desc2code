#include<iostream>
#include<stdio.h>
#include<queue>
#include<algorithm>
#include<string>
using namespace std;
struct que
{
	string s;
	int p;
};
struct node
{
	string s;
	bool used;
}a[10010];
queue<que> qu[20];
bool cmp(node a,node b)
{
	return a.s<b.s;
}
int main()
{
	int n;
	char c;
	scanf("%d\n",&n);
	for(int i=0;i<n;i++)
		cin>>a[i].s;
	cin>>c;
	for(int i=0;i<n;i++)
		a[i].s.push_back(c);
	sort(a,a+n,cmp);
	for(int i=0;i<n;i++)
	{
		string x;
		for(int j=0;j<a[i].s.length()-1;j++)
			x.push_back(a[i].s[j]);
		a[i].s=x;
	}
	int count=0;
	for(int i=0;i<n;i++)
	{
		que x;
		x.p=i;
		x.s=a[i].s;
		qu[x.s.length()].push(x);
		count+=a[i].s.length();
	}
	count/=(n/2);
	for(int i=0;i<n;i++)
	{
		if(a[i].used)
			continue;
		a[i].used=1;
		qu[a[i].s.length()].pop();
		que x=qu[count-a[i].s.length()].front();
		qu[count-a[i].s.length()].pop();
		a[x.p].used=1;
		cout<<a[i].s<<c<<x.s<<endl;
	}
}
 			 		   			 			  			 		