#include<cstdio>
#include<set>
using namespace std;
typedef long long ll;

struct P
{
	ll x,y;
	P(ll x=0,ll y=0):x(x),y(y){};
	bool operator <(const P &b) const
	{
		if (x==b.x) return y<b.y;
		return x<b.x;
	}
}w;
set<P> up,dn;
set<P> ::iterator lt,rt,nt,cur;
int T,cmd,x,y;
inline ll det(P a,P b,P c)
{
	return (b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x);
}
bool In(set<P> &cn,P w)
{
	if (cn.size()<=1) return 0;
	if (w.x<(*cn.begin()).x || *cn.rbegin()<w) return 0;
	rt=cn.lower_bound(w);lt=rt;lt--;
	if (w.x==(*rt).x) return 1;
	return det(*lt,w,*rt)>=0;
}
void Add(set<P> &cn,P w)
{
	cn.insert(w);
	lt=rt=cur=cn.lower_bound(w);
	lt--;rt++;
	for(nt=rt,nt++; rt!=cn.end() && nt!=cn.end() ;rt=nt,nt++)
		if (det(w,*rt,*nt)>=0) cn.erase(rt); else break;
	for(nt=lt,nt--; cur!=cn.begin() && lt!=cn.begin(); lt=nt,nt--)
	    if (det(*nt,*lt,w)>=0) cn.erase(lt); else break;
}
int main()
{
	for(scanf("%d",&T);T--;)
	{
		scanf("%d%d%d",&cmd,&x,&y);
		if (cmd==1)
		{
			if (!In(up,P(x,y))) Add(up,P(x,y));
			if (!In(dn,P(x,-y))) Add(dn,P(x,-y));
		}
		else
			if (In(up,P(x,y)) && In(dn,P(x,-y))) puts("YES"); else puts("NO");
	}
	return 0;
}
