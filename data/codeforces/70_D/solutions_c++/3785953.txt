#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <algorithm>
#include <set> 
using namespace std;
typedef long long LL;

int Q;

struct Point
{
	LL x,y;double ang;
	Point(){}
	Point(LL _x,LL _y){x=_x,y=_y;}
	bool operator <(const Point&a)const{return ang<a.ang;}
	LL operator *(const Point&a)const{return x*a.y-y*a.x;}
	Point operator -(const Point&a)const{return Point(x-a.x,y-a.y);}
}P0;

set<Point> S;
typedef set<Point>::iterator setp;

int get()
{
	int f=0,v=0; char ch;
	while (!isdigit(ch=getchar()))if (ch=='-')break;
	if (ch=='-')f=1; else v=ch-48;
	while (isdigit(ch=getchar()))v=v*10+ch-48;
	if (f==1)return -v ;return v;
}

void init()
{
	Point p[4];P0.x=P0.y=0;
	Q=get()-3;
	for(int i=1;i<4;i++)get(),P0.x+=(p[i].x=get()),P0.y+=(p[i].y=get());
	for(int i=1;i<4;i++)p[i].x*=3,p[i].y*=3,p[i].ang=atan2(p[i].y-P0.y,p[i].x-P0.x);
	S.clear();
	S.insert(p+1,p+4);
}

setp getN(setp p){return p==--S.end()?S.begin():++p;}
setp getP(setp p){return p==S.begin()?--S.end():--p;}

int main()
{
	init();
	while(Q--)
	{
		Point p;int tp=get();
		p.x=get()*3,p.y=get()*3;p.ang=atan2(p.y-P0.y,p.x-P0.x);
		setp it1=S.lower_bound(p);if(it1==S.end())it1=S.begin();
		setp it2=getP(it1);
		if((p-*it2)*(*it1-*it2)<=0){if(tp==2)puts("YES");}
		else
		{
			if(tp==2){puts("NO");continue;}
			setp _it1=getN(it1),_it2=getP(it2);
			while((*it1-p)*(*_it1-p)<=0)S.erase(it1),it1=_it1,_it1=getN(it1);
			while((*it2-p)*(*_it2-p)>=0)S.erase(it2),it2=_it2,_it2=getP(it2);
			S.insert(it1,p);
		}
	}
	return 0;
}
