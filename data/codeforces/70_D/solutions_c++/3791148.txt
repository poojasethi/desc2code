#include<cstdio>
#include<set>
using namespace std;
struct point
{	long long x,y;
    point(long long x=0,long long y=0):x(x),y(y) {};
    bool operator <(const point &rhs) const
    {	return x<rhs.x||(x==rhs.x&&y<rhs.y);
    }
};
set<point> up,dn;
set<point> ::iterator lt,rt,nt,cur;
int q,opr,x,y;
inline long long det(point a,point b,point c)
{
    return (b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x);
}
bool in(set<point> &pset,point w)
{	if (pset.size()<=1)
		return 0;
    if (w.x<(*pset.begin()).x||*pset.rbegin()<w)
		return 0;
    rt=pset.lower_bound(w);
    lt=rt;
    --lt;
    if (w.x==(*rt).x)
		return 1;
    return det(*lt,w,*rt)>=0;
}
void ins(set<point> &pset,point w)
{	pset.insert(w);
    lt=rt=cur=pset.lower_bound(w);
    lt--;
    rt++;
    for (nt=rt,nt++;rt!=pset.end()&&nt!=pset.end();rt=nt,nt++)
        if (det(w,*rt,*nt)>=0)
			pset.erase(rt);
        else break;
    for (nt=lt,nt--;cur!=pset.begin()&&lt!=pset.begin();lt=nt,nt--)
        if (det(*nt,*lt,w)>=0)
			pset.erase(lt);
        else break;
}
int main()
{	int q,opr,x,y;
	scanf("%d",&q);
	while (q--)
    {	scanf("%d%d%d",&opr,&x,&y);
        if (opr==1)
        {	if (!in(up,point(x,y)))
				ins(up,point(x,y));
            if (!in(dn,point(x,-y)))
				ins(dn,point(x,-y));
        }
        else if (in(up,point(x,y))&&in(dn,point(x,-y)))
			     puts("YES");
        	 else puts("NO");
    }
    return 0;
}
		   	  		 			 		 	  	  	 	