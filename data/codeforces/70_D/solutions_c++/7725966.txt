#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <set>
#define db double
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	db x,y;
	inline bool operator < (const ww &A) const {
		return x<A.x||x==A.x&&y<A.y;
	}
	inline ww operator - (const ww &A) {
		return (ww){x-A.x,y-A.y};
	}
	inline db operator * (const ww &A) {
		return x*A.y-y*A.x;
	}
};
int i,j,k,n,m,ty,x,y;
set<ww> a,b;
typedef set<ww>::iterator w1;
inline bool ju(ww a,ww b,ww c) {
	return (b-a)*(c-a)>=0;
}
inline bool pan(set<ww> &a,ww A) {
	if (a.empty()) return 0;
	w1 B=a.lower_bound((ww){A.x,-1e15});
	if (B!=a.end()&&B->x==A.x) {
		if (B->y<A.y) return 0;
		return 1;
	}
	if (B==a.end()||B==a.begin()) return 0;
	w1 C=B; C--;
	return ju(A,*B,*C);
}
inline void insert(set<ww> &a,ww A) {
	if (a.empty()) {
		a.insert(A);
		return;
	}
	if (pan(a,A)) return;
	for (;;) {
		w1 B=a.lower_bound(A);
		if (B==a.end()) break;
		w1 C=B; C++;
		if (C==a.end()) break;
		if (ju(A,*B,*C)) a.erase(B);
		else break;
	}
	for (;;) {
		w1 B=a.lower_bound(A);
		if (B==a.begin()) break;
		B--;
		if (B->x==A.x) {
			a.erase(B);
			continue;
		}
		if (B==a.begin()) break;
		w1 C=B; C--;
		if (ju(A,*C,*B)) a.erase(B);
		else break;
	}
	a.insert(A);
}
int main() {
	//freopen("70d.in","r",stdin);
	scanf("%d",&n);
	For(i,1,n) {
		scanf("%d%d%d",&ty,&x,&y);
		if (ty==1) insert(a,(ww){x,y}),insert(b,(ww){x,-y});
		else printf("%s\n",pan(a,(ww){x,y})&&pan(b,(ww){x,-y})?"YES":"NO");
	}
	//for(;;);
	return 0;
}
