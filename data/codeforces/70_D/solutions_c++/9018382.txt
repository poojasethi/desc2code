#include<stdio.h>
#include<iostream>
#include<set>
using namespace std;
#define ll long long
struct P
{
    ll x,y;
    P(ll a=0,ll b=0):x(a),y(b){}
    bool operator <(const P &a)
    const{
        if(a.x==x) return y<a.y;
        else return x<a.x;
    }
    P operator -(const P &a)
    const{
        return P(x-a.x,y-a.y);
    }
    ll operator ^(const P &a)
    const{
        return (x*a.y)-(y*a.x);
    }
};
set<P>up,down;
set<P>::iterator l,r,cnt,cur;
int in(set<P>&cn,P w)
{
    if(cn.size()<=1) return 0;
    else if(w.x<(*cn.begin()).x||*cn.rbegin()<w) return 0;
    l=r=cn.lower_bound(w);
    l--;
    if(w.x==(*r).x) return 1;
    else return ((w-*l)^(*r-*l))>=0;
}
int add(set<P>&cn,P w)
{
    cn.insert(w);
    l=r=cur=cn.lower_bound(w);
    l--,r++;
    for(cnt=r,cnt++;cnt!=cn.end()&&r!=cn.end();r=cnt,cnt++)
    {
        if(((*r-w)^(*cnt-w))>=0) cn.erase(r);
        else break;
    }
    for(cnt=l,cnt--;l!=cn.begin()&&cur!=cn.begin();l=cnt,cnt--)
    {
        if(((*l-*cnt)^(w-*cnt))>=0) cn.erase(l);
        else break;
    }
}
int main()
{
    int t,cmd;
    int x,y;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d%d%d",&cmd,&x,&y);
        if(cmd==1)
        {
            if(!in(up,P(x,y))) add(up,P(x,y));
            if(!in(down,P(x,-y))) add(down,P(x,-y));
        }
        else
        {
            if(in(up,P(x,y))&&in(down,P(x,-y))) printf("YES\n");
            else printf("NO\n");
        }

    }
    return 0;
}
