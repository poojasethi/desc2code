#include<cstdio>
#include<map>
#include<algorithm>
using namespace std;

map<int,int> low,up;
long long res;
int n;

long long det(map<int,int> :: iterator a,map<int,int> :: iterator b,map<int,int> :: iterator c)
{return (long long)(b->first-a->first)*(c->second-a->second)-(long long)(b->second-a->second)*(c->first-a->first);}

long long det(int x1,int y1,int x2,int y2,int x3,int y3)
{return (long long)(x2-x1)*(y3-y1)-(long long)(x3-x1)*(y2-y1);}

map<int,int> :: iterator operator +(map<int,int> :: iterator it,int a)
{for (;a--;) it++;return it;}

map<int,int> :: iterator operator -(map<int,int> :: iterator it,int a)
{for (;a--;) it--;return it;}

void add(map<int,int> &t,int x,int y)
{
	if (t.count(x)) if(y<=t[x]) return;
	t[x]=y;
	map<int,int> :: iterator it=t.lower_bound(x);
	if (it!=t.begin() && (it+1)!=t.end() && det(it-1,it,it+1)>=0) {t.erase(x);return;}
	for (;it!=t.begin() && (it-1)!=t.begin();)
	if (det(it-2,it-1,it)>=0) t.erase((it-1)->first); else break;
	for (;(it+1)!=t.end() && it+2!=t.end();)
	if (det(it,it+1,it+2)>=0) t.erase((it+1)->first); else break;
}

bool check(map<int,int> &t,int x,int y)
{
	if ((x<t.begin()->first) || (x>(t.end()-1)->first)) return 0;
	map<int,int> :: iterator it=t.lower_bound(x);
	if (it->first==x) return y<=it->second;
	return det((it-1)->first,(it-1)->second,x,y,it->first,it->second)>=0;
}

int main()
{
	//freopen("input.txt","r",stdin);
	scanf("%d",&n);
	for (int s,x,y;n--;)
	{
		scanf("%d%d%d",&s,&x,&y);
		if (s==1)
		{
			add(up,x,y);
			add(low,x,-y);
		} else
		if (check(up,x,y) && check(low,x,-y))
			printf("YES\n");
		else printf("NO\n");
	}
}
