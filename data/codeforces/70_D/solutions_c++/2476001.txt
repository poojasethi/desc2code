#include<cstdio>
#include<map>
#define fi first
#define se second
#define mp make_pair
using namespace std;
typedef map<int,int> convex;
typedef convex::iterator ite;
convex e1,e2;
long long area(ite a,ite b,ite c)
{
    return (long long)(b->fi-a->fi)*(c->se-a->se)-(long long)(c->fi-a->fi)*(b->se-a->se);
}
ite pre(const ite i){ite j=i;return --j;}
ite suc(const ite i){ite j=i;return ++j;}
void add(convex&e,int x,int y)
{
    e[x]=y;
    ite it=e.lower_bound(x),i=suc(it),j=pre(it);
    for(i=pre(it),j=pre(i);it!=e.begin()&&i!=e.begin();i=j,j=pre(i))
        if(area(j,i,it)>=0)e.erase(i->fi);else break;
    for(i=suc(it),j=suc(i);i!=e.end()&&j!=e.end();i=j,j=suc(i))
        if(area(it,i,j)>=0)e.erase(i->fi);else break;
}
bool check(convex&e,int x,int y)
{
    if(!e.size())return 0;
    if(x<e.begin()->fi||x>pre(e.end())->fi) return 0;
    if(e.count(x))return y<=e[x];
    e[x]=y;
    ite i=e.lower_bound(x),j=pre(i),k=suc(i);
    bool res=area(j,i,k)>=0;
    e.erase(x);
    return res;
}
int main()
{
    int Q,p,x,y;
    scanf("%d",&Q);
    while(Q--)
    {
        scanf("%d%d%d",&p,&x,&y);
        if(p==1)
        {
            if(!check(e1,x,y))add(e1,x,y);
            if(!check(e2,x,-y))add(e2,x,-y);
            continue;
        }
        if(check(e1,x,y)&&check(e2,x,-y))
            puts("YES");
        else puts("NO");
    }
}