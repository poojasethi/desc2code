from collections import Counter
from itertools import cycle, product as prod, permutations as perm, combinations as comb, combinations_with_replacement as combr
from sys import stdin, stdout
read_ints = lambda: map(int, raw_input().split())
read_floats = lambda: map(float, raw_input().split())

equal = lambda a, b: abs(a-b)<1e-7

def main():
    a = read_ints()
    
    d = a[1] - a[0]
    if a[1]+d==a[2] and a[2]+d==a[3]:
        print a[3]+d
        return

    if a[0]!=0 and a[1]!=0 and a[0]!=a[1]:
        q = float(a[1]) / a[0]
        if equal(a[1]*q, a[2]) and equal(a[2]*q, a[3]):
            r = a[3] * q
            if equal(int(r+1e-9), r):
                print '%.0f' % r
                return

    print 42

if __name__ == '__main__':
    main()
