from bisect import *
def find_le(a, x):
    'Find rightmost value less than or equal to x'
    i = bisect_right(a, x)
    if i:
        return [a[i-1],i-1]
    raise ValueError

n,k = map(int,raw_input().split())
arr = map(int,raw_input().split())
if k==0:
    val = 0
    ma = 0
    for i in range(n):
        if arr[i]==1:
            val += 1
            if val>ma:
                ma = val
        else:
            val = 0
    print ma
    print " ".join(map(str,arr))
else:
    zeros = [0]
    for i in range(n):
        if arr[i]==0:
            zeros.append(zeros[-1]+1)
        else:
            zeros.append(zeros[-1])
    zeros.append(9999999999)
    st = 0
    end = 0
    ma = 0
    #print zeros
    for i in range(1,n+1):
        cur = zeros[i]
        upper = cur + k
        if zeros[i]-zeros[i-1]==1:
            upper -= 1
        val = find_le(zeros,upper)
        #print i,val[0],val[1],upper
        if (val[1]-i+1)>ma:
            ma = (val[1]-i+1)
            st = i
            end = val[1]
    print ma
    for i in range(st-1,end):
        arr[i] = 1
    print " ".join(map(str,arr))
