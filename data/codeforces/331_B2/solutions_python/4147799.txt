#include <stdio.h>
#include <algorithm>
using namespace std;
int loc[300005];
int str[300005];
int bittree[300005];
int st[300005];
int n;
void update(int k,int p)
{
    int cnt = p-st[k];
    st[k]=p;
    for(;k<=n;k+=(k&(-k))) bittree[k]+=cnt;
}
int getnum(int k)
{
    int ret=0;
    for(;k>0;k-=(k&(-k))) ret+=bittree[k];
    return ret;
}
void posupdate(int k)
{
    if(k>n) return;
    if(loc[k] < loc[k-1])
            update(k,1);
    else update(k,0);
}
int main()
{
    int i,j;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        scanf("%d",str+i);
        loc[str[i]] = i;
    }
    for(i=2;i<=n;i++)
    {
        if(loc[i] < loc[i-1])
            update(i,1);
    }
    int T;
    scanf("%d",&T);
    for(;T>0;T--)
    {
        int type,x,y;
        scanf("%d %d %d",&type,&x,&y);
        if(x>y) swap(x,y);
        if(type==1)
        {
            printf("%d\n",getnum(y)-getnum(x)+1);
        }
        else
        {
            int xx = str[x];
            int yy = str[y];
            swap(loc[xx],loc[yy]);
            swap(str[x],str[y]);
            posupdate(xx+1);
            posupdate(xx);
            posupdate(yy+1);
            posupdate(yy);
        }
    }
    return 0;
}
