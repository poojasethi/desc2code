#include <cstdio>
#include <algorithm>
using namespace std;

const int Sn = 300030;

int n, m;
int a[Sn], pos[Sn], ta[Sn];

void add(int x, int v) {
     for (int j = x; j <= n; j += j&-j) ta[j] += v;
}
int get(int x) {
     int ret = 0;
     for (int j = x; j; j -= j&-j) ret += ta[j];
     return ret;
}

void image(int x, int s, int t)
{
     if (x != 1) {
	  if (s > pos[x-1] && t < pos[x-1]) add(x,  1);
	  if (s < pos[x-1] && t > pos[x-1]) add(x, -1);
     }
     if (x != n) {
	  if (pos[x+1] > s && pos[x+1] < t) add(x+1,  1);
	  if (pos[x+1] < s && pos[x+1] > t) add(x+1, -1);
     }
}

int main()
{
#ifndef ONLINE_JUDGE
     freopen("cf.in" , "r", stdin);
     freopen("cf.out", "w", stdout);
#endif
     scanf("%d", &n);
     for (int i = 1; i <= n; i ++)
	  scanf("%d", a + i), pos[a[i]] = i;
     for (int x = 2; x <= n; x ++)
	  if (pos[x] < pos[x-1]) add(x, 1);

     scanf("%d", &m);
     for (int q, l, r; m --; ) {
	  scanf("%d%d%d", &q, &l, &r);
	  if (q == 1) printf("%d\n", get(r)-get(l)+1);
	  else {
	       image(a[l], l, r);
	       image(a[r], r, l);
	       if (a[l]+1 == a[r]) add(a[r],  1);
	       if (a[r]+1 == a[l]) add(a[l], -1);
	       swap(pos[a[l]], pos[a[r]]);
	       swap(a[l], a[r]);
	  }
     }
}
