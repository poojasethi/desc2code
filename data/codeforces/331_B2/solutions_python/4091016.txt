#include <cstdio>
#include <algorithm>
using namespace std;
int N;
int b[1 << 20];
int sum(int x) {
	int res = 0;
	while (x > 0) {
		res += b[x];
		x -= x & -x;
	}
	return res;
}
void add(int x, int v) {
	while (x < 1 << 19) {
		b[x] += v;
		x += x & -x;
	}
}
int main() {
	scanf("%d", &N);
	int a[301010], r[301010];
	for (int i = 1; i <= N; i++) {
		scanf("%d", &a[i]);
		r[a[i]] = i;
	}
	for (int i = 1; i < N; i++) {
		if (r[i] > r[i+1]) {
			add(i, 1);
		}
	}
	int Q;
	int t, x, y;
	scanf("%d", &Q);
	for (int q = 0; q < Q; q++) {
		scanf("%d%d%d", &t, &x, &y);
		if (t == 1) {
			printf("%d\n", 1 + sum(y-1) - sum(x-1));
		} else {
			int X = min(a[x], a[y]), Y = max(a[x], a[y]);
			int lx = r[X-1] > r[X], rx = r[X] > r[X+1];
			int ly = r[Y-1] > r[Y], ry = r[Y] > r[Y+1];
			r[a[x]] = y;
			r[a[y]] = x;
			swap(a[x], a[y]);
			if (X > 1) {
				add(X-1, (r[X-1] > r[X]) - lx);
			}
			if (X < N) {
				add(X, (r[X] > r[X+1]) - rx);
			}
			if (Y > 1 && Y - 1 != X) {
				add(Y-1, (r[Y-1] > r[Y]) - ly);
			}
			if (Y < N) {
				add(Y, (r[Y] > r[Y+1]) - ry);
			}
		}
	}
	return 0;
}
