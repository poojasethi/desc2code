#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#define MAXN 300005
using namespace std;

int N,Q,S[MAXN],T[MAXN],P[MAXN];
bool secure[MAXN];

inline void update(int x,int v){
  if(x == 0) return;
  for(;x<=N;x+=(x&-x)) T[x] += v;
}

inline int query(int x){
  if(x == 0) return 0;
  int sum = 0;
  for(;x>0;x-=(x&-x)) sum += T[x];
  return sum;
}

inline void clean(int x){
  update(x, -(query(x) - query(x-1)));
}

inline void addback(int x){
  if(secure[x]) return;
  if(P[x] > P[x+1]) update(x,1);
  secure[x] = 1;
}

int main(){
  scanf("%d",&N);
  for(int i=1;i<=N;++i) {
    scanf("%d",&S[i]);
    P[S[i]] = i;
  }
  for(int i=1;i<=N;++i) addback(i);
  scanf("%d",&Q);
  int d,a,b;
  for(int z=0;z<Q;++z) {
    scanf("%d%d%d",&d,&a,&b);
    if(d == 1) printf("%d\n",query(b-1) - query(a-1) + 1);
    else {
      int t1 = S[a], t2 = S[b];
      clean(t1-1);
      clean(t1);
      clean(t2-1);
      clean(t2);
      secure[t1-1] = secure[t1] = secure[t2-1] = secure[t2] = 0;
      swap(S[a],S[b]);
      P[t1] = b;
      P[t2] = a;
      addback(t1-1);
      addback(t1);
      addback(t2-1);
      addback(t2);
    }
  }
}
