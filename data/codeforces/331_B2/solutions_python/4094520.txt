
#include <cstdio>
#include <cstring>

const int N = 300010;
bool vis[N];
int d[N];
int n;
int a[N];
int Index[N];

int lowbit(int x)
{
    return x&(-x);
}

void add(int k, int val)
{
    while(k<=n){
	a[k] += val;
	k += lowbit(k); 
    }
}

int sum(int k)
{
    int res=0;
    while(k>0){
	res += a[k];
	k -= lowbit(k);
    }
    return res;
}

void move(int k, int x, int y)
{
    if(x<y){
        if(k>1 && Index[k-1] >= x && Index[k-1]<y) add(k,-1);	
	if(k<n && Index[k+1] >= x && Index[k+1]<y) add(k+1,1 ); 
    }
    else{
        if(k>1 && Index[k-1] <= x && Index[k-1]>y) add(k,1);	
	if(k<n && Index[k+1] <= x && Index[k+1]>y) add(k+1,-1 ); 
    }

    Index[k] = y;
}

void init()
{
    memset(a,0,sizeof(a));
    for(int i=0;i<n;++i) Index[ d[i] ] = i+1;
    Index[0]=n+1;
    for(int i=1;i<=n;++i)
	if( Index[i-1] > Index[i] ) add(i,1);
}

int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;++i)scanf("%d",d+i);
    init();


    int q;
    scanf("%d",&q);
    while(q--){
	int t,x,y;
	scanf("%d%d%d",&t,&x,&y);
	if(t==1){
	    int ans = sum(y) - sum(x)+1;
	    printf("%d\n", ans);
	}
	if(t==2){
	    if(x==y)continue;
	    move(d[x-1],x,y);
	    move(d[y-1],y,x);

	    x--;y--;
	    d[x]^=d[y];
	    d[y]^=d[x];
	    d[x]^=d[y];
	}
    }


    return 0;
}
