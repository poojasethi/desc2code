#include<bits/stdc++.h>

#define FP( ii,aa,bb )	for( int ii=aa;ii<=bb;ii++ )
#define FM( ii,aa,bb )	for( int ii=aa;ii<=bb;ii++ )

#define mid (bas+son)/2
#define lef	root*2+0,bas+0,mid
#define rig root*2+1,mid+1,son

using namespace std;

int n,q,a[1000000],loc[1000000],st[4000000];

int update( int root,int bas,int son,int x,int val ){
	if( x<bas or son<x )	return st[root];
	if( bas==son )	return st[root] = val;
	return st[root]	= update( lef,x,val )+update( rig,x,val );
}

int query( int root,int bas,int son,int x,int y ){
	if( son<x or y<bas )	return 0;
	if( x<=bas and son<=y )	return st[root];
	return query( lef,x,y )+query( rig,x,y );
}

void guncelle( int x ){
	
	update( 1,1,n,x,loc[x]>loc[x+1] );
	update( 1,1,n,x-1,loc[x-1]>loc[x] );

}

int main(){
	
	int p,x,y;

	scanf("%d",&n);
	FP( i,1,n ){
		scanf("%d",&x);
		a[i] = x;
		loc[x] = i;
	}

	FP( i,1,n )
		update( 1,1,n,i,loc[i]>loc[i+1] );

	loc[n+1] = n+1;

	scanf("%d",&q);

	while( q-- ){
		scanf("%d %d %d",&p,&x,&y);
		if( p==1 ){
			printf("%d\n",query(1,1,n,x,y-1)+1);
		}
		else{
			swap( loc[ a[x] ] , loc[ a[y] ] );
			swap( a[x] , a[y] );
			guncelle( a[x] );
			guncelle( a[y] );
		}
	}

}
