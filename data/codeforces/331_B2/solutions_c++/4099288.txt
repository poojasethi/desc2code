#include <iostream>
using namespace std;

typedef long long ll;
#define rep(i,s,e) for (int i=(s);i<(e);++i)
#define endl "\n"

const int maxn=3*100100;
int a[maxn];
int pos[maxn];
int n,m;

int tree[maxn+1];
int val[maxn];

// 1 <= idx <= n
int read(int idx){
  int sum = 0;
  for (; idx > 0; idx -= idx&-idx)
    sum += tree[idx];
  return sum;
}

void update(int idx, int x){
  int i=idx;
  for (; idx <= n; idx += idx&-idx)
    tree[idx] += x-val[i];
  val[i]=x;
}

int shave(int x, int y) {
  return 1+read(y)-read(x);
}
void check(int i) {
  if(i<=1 || i > n) return;
  update(i,pos[i]<pos[i-1]);
}
void swapit(int x, int y) {
  swap(a[x],a[y]);
  pos[a[x]]=x;
  pos[a[y]]=y;
  check(a[x]-1);
  check(a[x]);
  check(a[x]+1);
  check(a[y]-1);
  check(a[y]);
  check(a[y]+1);
}

int main() {
  ios::sync_with_stdio(0);
  cin >> n;
  rep(i,0,n) cin>>a[i],pos[a[i]]=i;
  rep(i,1,n+1) check(i);
  cin >> m;
  rep(i,0,m) {
    int p,x,y;cin>>p>>x>>y;
    if (p==1) {
      cout<<shave(x,y)<<endl;
    } else {
      x--,y--;
      swapit(x,y);
    }
  }
}
