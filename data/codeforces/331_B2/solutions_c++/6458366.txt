#include <iostream>
#include <cstdio>

using namespace std;

const int N = 3e5;

int a[N], p[N], t[4 * N];

void upd(int v, int tl, int tr, int pos, int val) {
    if (tl == tr) {
        p[tl] = val;
        t[v] = 1;
    }
    else {
        int tm = (tl + tr) / 2;
        if (pos <= tm)
            upd(v * 2 + 1, tl, tm, pos, val);
        else
            upd(v * 2 + 2, tm + 1, tr, pos, val);
        t[v] = t[v * 2 + 1] + t[v * 2 + 2] - (p[tm] < p[tm + 1]);
    }
}

int get(int v, int tl, int tr, int l, int r) {
    if (l > r)
        return 0;
    if (tl == l && tr == r)
        return t[v];
    int tm = (tl + tr) / 2;
    int g1 = get(v * 2 + 1, tl, tm, l, min(tm, r));
    int g2 = get(v * 2 + 2, tm + 1, tr, max(tm + 1, l), r);
    return g1 + g2 - (g1 && g2 && p[tm] < p[tm + 1]);
}

int main() {
    // freopen("input.txt", "r", stdin);
    int n, q;
    cin >> n;
    for (int i = 0 ; i < n; i++) {
        cin >> a[i];
        a[i]--;
        upd(0, 0, n - 1, a[i], i);
    }
    cin >> q;
    for (int i = 0; i < q; i++) {
        int cmd, x, y;
        cin >> cmd >> x >> y;
        x--, y--;
        if (cmd == 1)
            cout << get(0, 0, n - 1, x, y) << endl;
        else {
            upd(0, 0, n - 1, a[x], y);
            upd(0, 0, n - 1, a[y], x);
            swap(a[x], a[y]);
        }
    }
    return 0;
}
