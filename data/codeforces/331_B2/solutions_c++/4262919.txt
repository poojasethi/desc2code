#include <cstdio>
#include <iostream>
#include <cstring>

using namespace std;

const int MaxN = 300005;

struct Fenwick {
  int a [MaxN], n;

  void init (int _n) {
    n = _n;
    memset(a, 0, sizeof(a));
  }

  void update (int i, int val) {
    for (; i <= n; i += i & -i)
      a[i] += val;
  }

  int sum (int i) {
    int ret = 0;
    for (; i > 0; i -= i & -i)
      ret += a[i];
    return ret;
  }

  int sum (int i, int j) {
    if (i > j)
      return 0;
    if (i == 1)
      return sum(j);
    return sum(j) - sum(i - 1);
  }
} log;

int N, a [MaxN], pos [MaxN], niz [MaxN], tmp [MaxN], Q, tip, x, y;

void change (int x) {
  if (x > N) return;

  int t = 0;
  if (x == 1 || pos[x - 1] > pos[x])
    t = 1;

  int sad = log.sum(x, x);
  log.update(x, t - sad);  
}

int main (void) {
  scanf("%d",&N);
  for (int i = 0; i < N; ++i) {
    scanf("%d",&a[i]);
    pos[a[i]] = i;
  }

  log.init(N);

  for (int i = 0; i < N; ++i)
    if (a[i] == 1 || pos[a[i] - 1] > pos[a[i]]) 
      log.update(a[i], 1);     
  
  
  scanf("%d",&Q);
  while (Q-- > 0) {
    scanf("%d %d %d",&tip,&x,&y);
    if (tip == 1) 
      printf("%d\n",log.sum(x + 1, y) + 1);
    else {
      swap(a[x - 1], a[y - 1]);
      swap(pos[a[x - 1]], pos[a[y - 1]]);

      change(a[x - 1]);
      change(a[y - 1]);
      change(a[x - 1] + 1);
      change(a[y - 1] + 1); 
    }
  }
  return 0;
}
