# include <stdio.h>
# include <string.h>


int a[3*100010], pos[3*100010] ;
int idx[3*100010] ;
int n ;

int lowbit(int x){return x&(-x);}
int Sum(int x)
{
    int sum = 0 ;
    while (x) sum += idx[x], x -= lowbit(x) ;
    return sum ;
}


void add(int pos, int num)
{
    while (pos <= n)
        idx[pos] += num, pos += lowbit(pos) ;
}


void init()
{
    int i ;
    memset ( idx, 0, sizeof(idx)) ;
    for (i = 1 ; i <= n ; i++)
        if (pos[i] < pos[i-1]) add(i, 1) ;
}


void update(int p, int x)
{
    if (pos[p] < pos[p-1]) add(p, -1) ;
    if (x < pos[p-1]) add (p, 1) ;
    
    if (p == n) return ;
    
    if (pos[p+1] < pos[p]) add(p+1, -1) ;
    if (pos[p+1] < x) add(p+1, 1) ;
    
}


void change(int x, int y)
{
    int xx, yy, px, py ;
    xx = a[x], yy = a[y] ;
    a[x] = yy, a[y] = xx ;
    update(xx, y) ;
    pos[xx] = y ;
    update(yy, x) ;
    pos[yy] = x ;
    //pos[xx] = y, pos[yy] = x ;
}


int main ()
{
    int i, q, t, x, y ;
    while (~scanf ("%d", &n))
    {
        for (i = 1 ; i <= n ; i++)
            scanf ("%d", &a[i]), pos[a[i]] = i ;
        init() ;
        scanf ("%d", &q) ;
        while (q--)
        {
            scanf ("%d%d%d", &t, &x, &y) ;
            if (t == 1) printf ("%d\n", Sum(y) - Sum(x)+1) ;
            else change(x, y) ;
        }
    }
    return 0 ;
}
