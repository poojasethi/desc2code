#include <stdio.h>
#include <string.h>
#include <algorithm>
using namespace std;

const int MAXN = 300100;
const int INF = ~0u>>1;
int lp[MAXN<<2],rp[MAXN<<2];
int t[MAXN<<2];
int M;
int num[MAXN];

void update(int x, int pos)
{
	x += M;
	t[x] = 1;
	lp[x] = rp[x] = pos;
	for(x>>=1; x; x>>=1)
	{
		t[x] = t[x<<1] + t[x<<1|1];
		lp[x] = lp[x<<1];
		rp[x] = rp[x<<1|1];
		if(rp[x<<1] < lp[x<<1|1]) t[x] --;
	}
}

int query(int l, int r)
{
	int ans = 0;
	int lr,rl;
	rl = 0;
	lr = INF;
	for(l+=M-1,r+=M+1; l^r^1; l>>=1,r>>=1)
	{
		if(~l&1)
		{
			ans += t[l^1];
			if(lr < lp[l^1]) ans --;
			lr = rp[l^1];
		}
		if( r&1)
		{
			ans += t[r^1];
			if(rp[r^1] < rl) ans --;
			rl = lp[r^1];
		}
	}
	if(lr < rl) ans --;
	return ans;
}

int main()
{
	int n;
	int i;
	int q;
	int op,a,b;
	while(~scanf("%d", &n))
	{
		for(M=1; M<n+2; M<<=1);
		for(i=1; i<=n; i++)
		{
			scanf("%d", &num[i]);
			update(num[i],i);
		}
		scanf("%d", &q);
		while(q--)
		{
			scanf("%d%d%d", &op, &a, &b);
			if(op == 1)
			{
				printf("%d\n", query(a,b));
			}
			else
			{
				int temp1 = num[a];
				int temp2 = num[b];
				update(temp1,b);
				update(temp2,a);
				swap(num[a],num[b]);
			}
		}
	}
	return 0;
}