#include <cstdio>
#include <algorithm>
#include <set>
using namespace std;
#define N 100000

int vet[N][4], n, k, aux[4];

bool solve(int p)
{
	for (int i = 0; i < 4; ++i)
	{
		int x = max(0, min(8, p));
		p -= 8;
		aux[i] = ((1<<8)-1)-((1<<(8-x))-1);
	}
	set<unsigned int> s;
	for (int i = 0; i < n; ++i)
	{
		unsigned int x = 0;
		for (int j = 0; j < 4; ++j)
		{
			x <<= 8;
			x += aux[j]&vet[i][j];
		}
		s.insert(x);
	}
	return s.size() == k;
}

int main()
{
	scanf("%d%d", &n, &k);
	for (int i = 0; i < n; ++i)
		scanf(" %d.%d.%d.%d", &vet[i][0], &vet[i][1], &vet[i][2], &vet[i][3]);
	
	bool g = 0;
	for (int i = 1; i <= 31; ++i)
	{
		if (solve(i))
		{
			printf("%d.%d.%d.%d\n", aux[0], aux[1], aux[2], aux[3]);
			g = 1;
			break;
		}
	}
	if (!g) printf("-1\n");
}

