import sys
def netSets(data, i, porog):
    cnt = 0
    last = -1
    for x in data:
        if last != x/2**i:
            #print x/i
            cnt += 1
            last = x/2**i
            #evr
            if cnt > porog:
                break
    return cnt
        
    
def net(ip, mask):
    return 'hu'

n, k = map(int, sys.stdin.readline().split())

data = []
for i in xrange(n):
    values = map(int, sys.stdin.readline().split('.'))
    data.append(values[0]*256**3 + values[1]*256**2 + values[2]*256+values[3])
    #data.append(map(int, sys.stdin.readline().split('.')))

data.sort()
#print data

i_from = 1
i_to =  4*8-1
i = 2*8
ok = False
bidlo_cnt = 0
while True:
    bidlo_cnt += 1
    if bidlo_cnt>40:
        print "-1"
        exit()
    res = netSets(data, i, k)
    #print str(i_from) +":" + str(i) + ":" + str(i_to) + " -> " + str(res)
    if res < k:
        if ok:
            i -= 1
            break
        if i_from == i:
            print "-1"
            exit()
        i_to = i
        i = (i_to+i_from) / 2
    elif res > k:
        if i_to == i:
            print "-1"
            exit()
        i_from = i
        i = (i_to+i_from) / 2
        #blah
        if i==i_from:
            i=i_to
    else:
        #is this i max of suggested i?
        ok = True
        #print str(i) + " succes"
        if i!=i_to:
            i_from = i
            i = i + 1
        else:
            break
    
#print i
i = 2**i
i = 256**4-i

i0 = i/256**3
i -= i0*256**3
i1 = i/256**2
i -= i1*256**2
i2 = i/256
i -= i2*256

print '%d.%d.%d.%d' % (i0,i1,i2,i)
