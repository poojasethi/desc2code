from __future__ import print_function
import sys

def print_bin(mask):
	if mask < 2:
		print(mask, end = '')
	else:
		print_bin(int(mask / 2))
		print(mask % 2, end = '')

def format_ip(ip):
	ipv = list()
	for i in range(4):
		ipv = [str(ip % 256)] + ipv
		ip = ip / 256
	return ipv

def process_input(inp):
	n,k = [int(i) for i in inp.readline().split(' ')]
	ips = list()
	for ip_num in xrange(n):
		ipv = [int(i) for i in inp.readline().split('.')]
		ip = ((ipv[0] * 256 + ipv[1]) * 256 + ipv[2]) * 256 + ipv[3]
		ips.append(ip)
	for pos in range(1,32):
		networks = set()
		mask = 0
		for i in range(pos):
			mask *= 2
			mask += 1
		mask = mask << (32-pos)
		#print_bin(mask)
		#print()
		for ip in ips:
			network = (ip & mask)
			if network not in networks:
				networks.add(network)
				if len(networks) > k:
					break
		if len(networks) == k:
			return format_ip(mask)
	return -1

f = sys.stdin
#f = open("input.txt")
res = process_input(f)
if res == -1:
	print(res)
else:
	print('.'.join(res))
