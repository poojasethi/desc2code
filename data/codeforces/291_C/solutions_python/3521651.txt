def getBinCode(N):
    ret = bin(int(str(N)))[2:]
    return "0"*(8-len(ret)) + ret
    
def getBinIp(Ip):
    ip = Ip.split(".")
    ret = ""
    for item in ip:
        ret += getBinCode(item)
    return ret

def getDecMask(s):
    return str(int(s[:8],2)) + "." + str(int(s[8:16],2)) + "." + str(int(s[16:24],2)) + "." +str(int(s[24:],2))

if __name__=="__main__":
    iData= str(raw_input()).split(" ")
    n,k = int(iData[0]),int(iData[1])
    X = []
    for i in range(n):
        X.append(getBinIp(str(raw_input())))

    result = -1
    for i in range(1,33):
        S = set([y[:i] for y in X])
        if len(S) == k:
            result = getDecMask("1"*i+"0"*(32-i))
            break
    print(result)