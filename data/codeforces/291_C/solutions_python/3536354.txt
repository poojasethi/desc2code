# Hardcode X_X
masks = [(128, 0, 0, 0), (192, 0, 0, 0), (224, 0, 0, 0), (240, 0, 0, 0), (248, 0, 0, 0), (252, 0, 0, 0), (254, 0, 0, 0), (255, 0, 0, 0), (255, 128, 0, 0), (255, 192, 0, 0), (255, 224, 0, 0), (255, 240, 0, 0), (255, 248, 0, 0), (255, 252, 0, 0), (255, 254, 0, 0), (255, 255, 0, 0), (255, 255, 128, 0), (255, 255, 192, 0), (255, 255, 224, 0), (255, 255, 240, 0), (255, 255, 248, 0), (255, 255, 252, 0), (255, 255, 254, 0), (255, 255, 255, 0), (255, 255, 255, 128), (255, 255, 255, 192), (255, 255, 255, 224), (255, 255, 255, 240), (255, 255, 255, 248), (255, 255, 255, 252), (255, 255, 255, 254)]

n, k = map(int, raw_input().split())

ips = list()
res_ips = set()

for i in xrange(n):
	ip = tuple(map(int, raw_input().split('.')))
	ips.append(ip)

for mask in masks:
	for ip in ips:
		res = mask[0] & ip[0], mask[1] & ip[1], mask[2] & ip[2], mask[3] & ip[3]
		res_ips.add(res)
	if len(res_ips) == k:
		print("{0}.{1}.{2}.{3}".format(mask[0], mask[1], mask[2], mask[3]))
		exit(0)
	res_ips.clear()

print(-1)

