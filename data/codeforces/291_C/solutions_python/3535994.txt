(n, k) = raw_input().split(" ")
n = (int)(n)
k = (int)(k)

def get_bit_number(ip):
    v = 1
    i = 0

i = 0
ips = []
while i < n:
    ip = raw_input().split(".")
    ips.append(((int)(ip[0]) << 24) | ((int)(ip[1]) << 16) | ((int)(ip[2]) << 8) | (int)(ip[3]))
    i += 1

i = 0
maskes = [1 << 31]
while i < 31:
    maskes.append(maskes[i] | (1 << (30 - i)))
    i += 1

networks = set()
ok = False
mask = None

for m in maskes:
    for ip in ips:
        networks.add(ip & m)
        if len(networks) > k:
            break
    if len(networks) == k:
        ok = True
        mask = m
        break
    else:
        networks = set()

if ok:
    print (str)(mask >> 24) + "." + (str)((mask & (255 << 16)) >> 16) + "." + (str)((mask & (255 << 8)) >> 8) + "." + (str)(mask & 255)
else:
    print -1