def solve(IPs, K):
  subnet = 0
  for ind in range(31,-1,-1):
    subnet = subnet + 2**ind
    dic = {}
    numnets = 0
    for IP in IPs:
      net = IP & subnet
      if net not in dic:
        numnets = numnets + 1
        dic[net] = 1
    if numnets == K:
      return subnet
  return -1

N, K = map(int, raw_input().split())
IPs = []
mults = [2**24, 2**16, 2**8, 1]
for i in range(N):
  IPs.append(sum([mults[i] * v for i,v in enumerate(map(int,raw_input().split('.')))]))

res = solve(IPs, K)
if res == -1:
  print -1
else:
  print '.'.join([str((res & (255 * m)) / m) for m in mults])
  