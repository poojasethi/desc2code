n, k = map(int, raw_input().strip().split(' '))
ips = []

def form(l):
    res = 0
    for i in l:
        res*=256
        res+=int(i)
    return res

def reform(num):
    t = []
    while num != 0:
        t.append(num%256)
        num/=256
    t.reverse()
    res = ''
    l = len(t)
    for i in range(l-1):
        res+=str(t[i])+'.'
    res+=str(t[-1])
    return res

big = form([255,255,255,255])
for i in range(n):
    ips.append(form(raw_input().strip().split('.')))
ips.sort()
def n_n(m):
    mask = (big << m) & big
    n_ = map(lambda x: x & mask, ips)
    res = n
    i = 0
    while i < n-1:
        if n_[i] == n_[i+1]:
            res-=1
        i+=1
    return res
def binsearch(l,r):
#    print 'left '+ str(l)+', '+ str(n_n(l))
#    print 'right '+ str(r)+', '+ str(n_n(r))    
    if l == r:
        return l
    m = (l+r+1)/2
    val = n_n(m)
#    print 'mid '+ str(m)+', '+ str(val)
    if val < k:
#        print 'choose left'
#        print ''
        return binsearch(l, m-1)
    else:
#        print 'choose right'
#        print ''
        return binsearch(m, r)
b = binsearch(0, 31)
k_ = n_n(b)
if k != k_:
    print -1
else:
    print reform((big << b) & big)
