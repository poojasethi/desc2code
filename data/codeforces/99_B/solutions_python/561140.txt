#def gcd(a,b):
#   while b > 0: a,b = b, a%b
#   return a
#def lcm(a, b):
#   return a*b/gcd(a,b)

T = input()
#data = map(int, raw_input().split())
data2 = [ input() for i in xrange(T)]
t_data2 = set(data2)
if len(t_data2) == 1:
    print "Exemplary pages."
    exit()
    
if len(t_data2) == 2 and len(data2) == 2:
    if (float(max(data2))-min(data2))/2 == (max(data2)-min(data2))/2:
        print str((max(data2)-min(data2))/2) + " ml. from cup #" + str(data2.index(min(data2))+1) + " to cup #" + str(data2.index(max(data2))+1) +"."
    else:
        print "Unrecoverable configuration."
    exit()
           
if len(t_data2) == 2 and len(data2) != 2:
    print "Unrecoverable configuration."
    exit()
    
if len(t_data2) == 3:
    mini = min(t_data2)
    maxi = max(t_data2)
    t_data2.remove(mini)
    t_data2.remove(maxi)
    if (mini+maxi)/2 == min(t_data2) and data2.count(mini) == 1 and data2.count(maxi) == 1 and (float(maxi)-mini)/2 == (maxi-mini)/2:
        print str((maxi-mini)/2) + " ml. from cup #" + str(data2.index(mini)+1) + " to cup #" + str(data2.index(maxi)+1) +"."
    else:
        print "Unrecoverable configuration."
    exit()
    
print "Unrecoverable configuration."
