class Cup:
    def __init__(self, index, amount):
        self.index = index
        self.amount = amount
    def __str__(self):
        return str(self.index)

n = int(raw_input())
cups = []
data = {}
min_cup, max_cup  = None, None
for i in range(1, n + 1):
    new_cup = Cup(i, int(raw_input()))
    cups.append(new_cup)
    if data.has_key(new_cup.amount): data[new_cup.amount] += 1
    else: data[new_cup.amount] = 1
    if not min_cup or new_cup.amount < min_cup.amount:
        min_cup = new_cup
    if not max_cup or new_cup.amount > max_cup.amount:
        max_cup = new_cup

keys = sorted(data.keys())
if len(keys) == 1:
    print 'Exemplary pages.'
elif data[keys[0]] > 1 or data[keys[-1]] > 1 or (min_cup.amount + max_cup.amount) % 2 > 0:
    print 'Unrecoverable configuration.'
elif len(keys) == 2 or (len(keys) == 3 and (min_cup.amount + max_cup.amount)/2 in keys):
    print '{} ml. from cup #{} to cup #{}.'.format((max_cup.amount - min_cup.amount)/2, min_cup, max_cup)
else: print 'Unrecoverable configuration.'
    