
n = int(raw_input().strip())

cups = []
min_idx = -1
min = 111111
max_idx = -1
max = -111111
for i in range(n):
    cup = int(raw_input().strip())
    if cup < min:
        min, min_idx = cup, i
    if cup > max:
        max, max_idx = cup, i
    cups.append(cup)

s = sum(cups)

if s % n == 0:
    req = s / n   # must be in every glass
    untouched = len(filter(lambda x : x == req, cups))
    if untouched == n - 2:
        if req - min == max - req:
            print '%d ml. from cup #%d to cup #%d.' % (req - min, min_idx + 1, max_idx + 1)
            exit()
    elif untouched == n:
        print 'Exemplary pages.'
        exit()

print 'Unrecoverable configuration.'
        
    
