#!/usr/bin/env python
# -*- coding: utf-8 -*-
import sys
from collections import defaultdict

n = int(raw_input())
cups = sorted([(i+1, int(size)) for i, size in enumerate(sys.stdin.readlines())], key=lambda x: x[1])
s = sum([x for _, x in cups])/n
i = 0
while i != len(cups):
    if cups[i][1] == s:
        cups.pop(i)
    else:
        i += 1
if len(cups) == 0:
    print "Exemplary pages."
elif len(cups) == 2 and (cups[0][1] + cups[1][1])/2.0 == s:
    print "%d ml. from cup #%d to cup #%d." % ((cups[0][1]-s, cups[1][0], cups[0][0]) if cups[0][1] > cups[1][1] else (cups[1][1]-s, cups[0][0], cups[1][0]))
else:
    print "Unrecoverable configuration."
