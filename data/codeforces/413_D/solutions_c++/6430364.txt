#include <cstdio>
#include <cstring>
typedef long long ll;
const int mod = 1000000007;
const int N = 2100;
int dp[2][N];
int n, m;
int aadd(int a, int b) {
	if(a & (b - 1)) return b;
	a += b;
	if(a > m) return m;
	return a;
}
int main() {
	int k;
	scanf("%d%d", &n, &k);
	m = 1 << (k-1);
	dp[0][0] = 1;
	int f = 0;
	int x;
	for(int i = 0; i < n; i ++, f ^= 1) {
		scanf("%d", &x);
		x /= 2;
		if(x == 0) {
			for(int j = 0; j <= m; j ++) {
				if(dp[f][j] == 0) continue;
				int t = aadd(j, 1);
				dp[f^1][t] += dp[f][j];
				if(dp[f^1][t] >= mod) dp[f^1][t] -= mod;

				t = aadd(j, 2);
				dp[f^1][t] += dp[f][j];
				if(dp[f^1][t] >= mod) dp[f^1][t] -= mod;

			}
		} else {
			for(int j = 0; j <= m; j ++) {
				if(dp[f][j] == 0) continue;
				int t = aadd(j, x);
				dp[f^1][t] += dp[f][j];
				if(dp[f^1][t] >= mod) dp[f^1][t] -= mod;
			}
		}
//		for(int j = 0; j <= m; j ++)printf("%d ",dp[f][j]);
  //      printf("\n");
		for(int j = 0; j <= m; j ++) dp[f][j] = 0;
	}
	printf("%d\n", dp[n&1][m]);
	return 0;
}
		   		 		 			      						