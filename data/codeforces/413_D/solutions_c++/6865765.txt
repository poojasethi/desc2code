#include <iostream>
#include <cstring>

using namespace std;

const int MAXN = 2010;
const int MAXK = 12;
const int MOD = 1E9 + 7;

int N, K;
int A[MAXN];
int DP[MAXN][1 << MAXK][2];

int solve(int ind, int msk, int win) {
  if (ind == N) {
    return win;
  }

  int& ret = DP[ind][msk][win];
  if (ret < 0) {
    ret = 0;
    if (A[ind] == 0 || A[ind] == 2) {
      int nmsk = msk + 2;
      int nwin = win;
      if (nmsk >= (1 << K)) nwin = 1;
      ret += solve(ind + 1, nmsk & ((1 << K) - 1), nwin);
      ret %= MOD;
    }
    if (A[ind] == 0 || A[ind] == 4) {
      int nmsk = 4;
      if (msk % 4 == 0) nmsk += msk;
      int nwin = win;
      if (nmsk >= (1 << K)) nwin = 1;
      ret += solve(ind + 1, nmsk & ((1 << K) - 1), nwin);
      ret %= MOD;
    }
  }
  return ret;
}

int main() {
  cin >> N >> K;
  for (int i = 0; i < N; ++i) {
    cin >> A[i];
  }

  memset(DP, -1, sizeof(DP));
  int res = solve(0, 0, 0);
  cout << res << endl;
  return 0;
}
