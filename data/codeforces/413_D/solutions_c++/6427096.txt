#include <iostream>
#include <cstdio>
#include <vector>
using namespace std;

const int MAXN = 2001;
int a[MAXN];
long long f[1 << 10];
long long nf[1 << 11];
const long long MODULE = 1000 * 1000 * 1000 + 7;

int main()
{	
	long long r= 0;
	int n, k;
	cin >> n >> k;
	k--;
	for (int i = 0; i < (1 << k); i++) f[i] = 0;
	f[0] = 1;
	for (int i = 0; i < n; i++) cin >> a[i];
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < (1 << (k + 1)); j++)
		{
			nf[j] = 0;
		}
		for (int j = 0; j < (1 << k); j++)
		{
			if (a[i] != 4)
			{
				nf[j + 1] = (nf[j + 1] + f[j]) % MODULE;
			}
			if (a[i] != 2)
			{
				if (j % 2 == 1) nf[2] = (nf[2] + f[j]) % MODULE;
				else nf[j + 2] = (nf[j + 2] + f[j]) % MODULE;
			}
		}
		for (int j = 0; j < (1 << k); j++) f[j] = nf[j];
		long long ad = nf[1 << k];
		for (int j = i + 1; j < n; j++)
		{
			if (a[j] == 0)
			{
				ad = (ad * 2ll) % MODULE;
			}
		}
		r = (r + ad) % MODULE;
	}
	cout << r << endl;
	return 0;
}