#include <bits/stdc++.h>
using namespace std;
int N,K;
#define LL long long
LL dp[3010][1<<12];
int C[3010];
int A[3010];
LL P[3010];
#define MOD 1000000007
LL Preprocess()
{
	P[0] = 1;
	for(int i = 1;i<=3005;i++)
		P[i] = (P[i-1]*2)%MOD;
}
int hob (int num)
{
    if (!num)
    	return 0;

    int ret = 1;

    while (num >>= 1)
    	ret <<= 1;

    return ret;
}
LL calc(int idx,int mask)
{
	if(hob(mask)>=1<<K)
		return P[C[N] - C[idx-1]];
	if(idx==N+1)
		return 0;
	LL &Res = dp[idx][mask];
	if(Res==-1)
	{
		Res = 0;
		if(A[idx]<=2)
		{
			int val = (mask & ~(mask-1));
			if(val>=2)
			{
				Res+=calc(idx+1,mask+2);
			}
			else
			{
				Res+=calc(idx+1,2);
			}
			Res%=MOD;
		}
		if(A[idx]==0||A[idx]==4)
		{
			int val = (mask & ~(mask-1));
			if(val>=4)
			{
				Res+=calc(idx+1,mask+4);
			}
			else
			{
				Res+=calc(idx+1,4);
			}
			Res%=MOD;
		}
	}
	return Res;
}
int main()
{	
	Preprocess();

	memset(dp,-1,sizeof(dp));
	cin>>N>>K;
	for(int i = 1;i<=N;i++)
	{
		cin>>A[i];
		C[i] = C[i-1] + (A[i] == 0);
	}
	cout<<calc(1,1)<<endl;
}