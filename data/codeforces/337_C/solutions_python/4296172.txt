
modulo = 1000000009	
def qpow(base, p):
	
	if p == 0:
		return 1 % modulo
	elif p == 1:
		return base % modulo
	else:
		sub_res = qpow(base, p // 2)
		res = (sub_res * sub_res) % modulo
		if p % 2:
			res = (res * base) % modulo
		
		return res % modulo 
	

if __name__ == "__main__":
		
	[n,m,k] = [int(t) for t in raw_input().strip().split()]
	
	p = n - m
	if p * k >= m + m//k or k > m:
		print m
	else:			
		R = m - (p*k) + p
		
		h = R // k	
		
		res = (k * ((qpow(2, h+1) % modulo) - (2 % modulo))) % modulo
		res = (res + (R % k)) % modulo
		res = (res + (m-R) % modulo) % modulo
		print res
		
				
	
	
