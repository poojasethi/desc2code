#include<bits/stdc++.h>
using namespace std;
const int maxn = 1005;
char mp[maxn][maxn];
int cc[maxn][maxn];
int num[maxn*maxn];
int vis[maxn][maxn];
int dir[4][2]={{0,1},{0,-1},{1,0},{-1,0}};
int n,m;
set<int>s;
set<int>::iterator it;
void dfs(int x,int y,int c)
{
	cc[x][y]=c;
	num[c]++;
	for (int i = 0;i<4;i++)
	{
		int dx = x+dir[i][0];
		int dy = y+dir[i][1];
		if (dx>=n || dx<0 || dy<0 || dy>=m)
			continue;
		if (cc[dx][dy] || mp[dx][dy]!='.')
			continue;
		vis[dx][dy]=1;
		dfs(dx,dy,c);
	}
}
int solve(int x,int y)
{
	s.clear();
	int ans = 0;
	for (int i = 0;i<4;i++)
	{
		int dx = x+dir[i][0];
		int dy = y+dir[i][1];
		if (dx>=n || dx<0 || dy<0 || dy>=m)
			continue;
		if (mp[dx][dy]!='.')
			continue;
		s.insert(cc[dx][dy]);
	}
	for (it = s.begin();it!=s.end();it++)
	{
		ans+=num[*it];
	}
	return ans;
}
int main()
{
     scanf("%d%d",&n,&m);
	 for (int i = 0;i<n;i++)
		 scanf("%s",mp[i]);
	 int c = 1;
	 for (int i = 0;i<n;i++)
		 for (int j = 0;j<m;j++)
			 if (cc[i][j]==0 && mp[i][j]=='.')
			 {
				 num[c]=0;
				 dfs(i,j,c);
				 c++;
			 }
	 for (int i = 0;i<n;i++)
		 for (int j = 0;j<m;j++)
			 if (mp[i][j]=='*')
			 {
				 int ans = (solve(i,j)+1)%10;
				 mp[i][j]='0'+ans;
			 }
	 for (int i = 0;i<n;i++)
		 printf("%s\n",mp[i]);
}

 			  		 	 	   	 		 		   			  	