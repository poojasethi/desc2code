#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
char map[1010][1010];
int mark[1010][1010],cuntt[1000100],res[1010][1010],pre[4];
bool vis[1010][1010];
int dir[4][2]={{0,1},{1,0},{0,-1},{-1,0}};
int cunconec(int x,int y,int cunt)
{
	vis[x][y]=true;
	mark[x][y]=cunt;
	int i,ans=1;
	for(i=0;i<4;i++)
	{
		if(map[x+dir[i][0]][y+dir[i][1]]=='.'&&vis[x+dir[i][0]][y+dir[i][1]]==false)
		ans+=cunconec(x+dir[i][0],y+dir[i][1],cunt);
	}
	return ans;
}
int main()
{
	int n,m,i,j,cunt,k,t,u,v,l;
	scanf("%d%d",&n,&m);
	for(i=0;i<n;i++)
	{
		scanf("%s",map[i]);
	}
	cunt=0;
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			if(!vis[i][j]&&map[i][j]=='.')
			{
				cunt++;
				cuntt[cunt]=cunconec(i,j,cunt);
			}
		}
	}
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			if(map[i][j]=='*')
			{
				res[i][j]=1;
				for(k=0;k<4;k++)
				{
					t=1;
					u=i+dir[k][0];
					v=j+dir[k][1];
					pre[k]=mark[u][v];
					for(l=0;l<k;l++)
						if(mark[u][v]==pre[l])
						t=0;
					if(t>0) res[i][j]+=cuntt[mark[u][v]];
				}
			}
		}
	}
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			if(res[i][j]>0)
			printf("%d",res[i][j]%10);
			else
			printf(".");
		}
		printf("\n");
	}
	return 0;
}
