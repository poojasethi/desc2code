#include<iostream>
#include<algorithm>
#include<string>
#include<set>
#include<vector>
#include<stack>
#include<map>
using namespace std;
#define ll long long 
#define D double
#define LD long double
#define S string
#define mp make_pair
int s[1001][1001];
bool vis[1001][1001];
int n, m;
set<pair <int, int > > v;
int sum;
void visit(int i, int j)
{

	if (i<0 || i >= n || j< 0 || j >= m||vis[i][j])return;
	if (s[i][j] != -1) { v.insert(make_pair(i, j));return; }
	vis[i][j] = 1;
	sum++;
	visit(i + 1, j);
	visit(i - 1, j);
	visit(i, j + 1);
	visit(i, j - 1);
}
void dfs()
{
	for (int i = 0;i<n;i++)
		for (int j = 0;j<m;j++)
			if (!vis[i][j] && s[i][j] == -1)
			{
				v.clear();
				sum = 0;
				visit(i, j);
				for (set<pair <int, int > >::iterator it = v.begin(); it != v.end();++it)
				{
					s[it->first][it->second] += sum;
				}
			}
}

int main()
{
	int i, j;
	char e;
	cin >> n >> m;
	for (i = 0;i<n;i++)
		for (j = 0;j<m;j++)
		{
			cin >> e;
			if (e == '.')s[i][j] = -1;
		}
	dfs();
	for (i = 0;i<n;i++)
	{
		for (j = 0;j<m;j++)
		{
			if (s[i][j] == -1)cout << '.';
			else cout << (s[i][j] + 1)%10;
		}
		cout << endl;
	}
	return 0;
}