#include<iostream>
#include<set>
using namespace std;
const int maxn=1111;
int dx[4]={1,-1,0,0},dy[4]={0,0,1,-1};
int sz[maxn*maxn];
int used[maxn][maxn];
char map[maxn][maxn],map2[maxn][maxn];
int cnt=1;
int n,m;
void dfs(int x,int y)
{
	if(used[x][y])return;
	used[x][y]=cnt;
	sz[cnt]++;
	for(int i=0;i<4;i++){
		int nx=x+dx[i],ny=y+dy[i];
		if(nx>=0&&ny>=0&&nx<n&&ny<m&&map[nx][ny]=='.')
			dfs(x+dx[i],y+dy[i]);
	}
}
int main()
{
	cin>>n>>m;
	for(int i=0;i<n;i++)
		cin>>map[i];
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++)
			if(map[i][j]=='.'&&!used[i][j])
				dfs(i,j),cnt++;
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			if(map[i][j]=='.')
				map2[i][j]='.';
			else{
				set<int> q;
				set<int>::iterator ite;
				int ans=0;
				for(int k=0;k<4;k++)
					q.insert(used[i+dx[k]][j+dy[k]]);
				for(ite=q.begin();ite!=q.end();ite++)
					ans+=sz[*ite];
				map2[i][j]='0'+((ans+1)%10);
			}
		}
	}
	for(int i=0;i<n;i++)
		cout<<map2[i]<<endl;
}
   			 			    	  	  		 				 	