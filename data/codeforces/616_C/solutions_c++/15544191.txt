    #include <iostream>
    #include <string>
    #include <set>  
    #include <algorithm>
    #include <vector>
    #include <cmath>
    #include <queue>
    #include <cstring>
    #include <cstdio>
using namespace std;
char g[1111][1111];
int v[1111][1111],ans[1111111],cnt,n,m,di[4]={0,1,0,-1},dj[4]={1,0,-1,0};
bool in(int i,int j)
{
	return i>=0&&j>=0&&i<n&&j<m&&g[i][j]=='.';
}
int dfs(int x,int y,int c)
{
	if(!in(x,y))return -1;
	if(v[x][y])return v[x][y];
	v[x][y]=c;
	ans[c]++;
	dfs(x-1,y,c);dfs(x+1,y,c);dfs(x,y-1,c);dfs(x,y+1,c);
	return c;
}			
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;i++)scanf("%s",g[i]);
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++)
			if(!v[i][j]&&g[i][j]=='.')dfs(i,j,++cnt);
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++)
			if(g[i][j]=='*'){
				int a[4],t=0,x=1;
				for(int k=0;k<4;k++)
				{
					int ii=i+di[k],jj=j+dj[k];
					if(in(ii,jj))a[t++]=v[ii][jj];
				}
				sort(a,a+t);
				t=unique(a,a+t)-a;
				for(int k=0;k<t;k++)x+=ans[a[k]];
				g[i][j]='0'+x%10;}
	for(int i=0;i<n;i++)printf("%s\n",g[i]);
	return 0;
}
			
