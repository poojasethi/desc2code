#include <bits/stdc++.h>
using namespace std;
typedef int ll;
ll n,m,visited[1234][1234]={0},g=0,c=0,has[1234][1234]={0},f[1234567]={0};
char s[1234][1234]={0};
void dfs(ll x,ll y)
{
    if(x<0||y<0||y==m||x==n||visited[x][y]||s[x][y]=='*')
    return;
    if(s[x][y]=='.'){
    visited[x][y]=1;
    has[x][y]=g;
    f[g]++;
    //cout<<"ccc "<<g<<" "<<f[g]<<" "<<x<<","<<y<<"\n";
    dfs(x+1,y);
    dfs(x-1,y);
    dfs(x,y+1);
    dfs(x,y-1);
    }
}
int main()
{
    scanf("%d%d",&n,&m);
    for(ll i=0;i<n;i++)
    scanf(" %s",&s[i][0]);
    for(ll x=0;x<n;x++)
    {
        for(ll y=0;y<m;y++)
        if(s[x][y]=='.'&&!visited[x][y]){
        g++;
        dfs(x,y);
        }
    }

    for(ll x=0;x<n;x++)
    {
        for(ll y=0;y<m;y++)
        {
            set<ll>t;
            c=1;
            if(s[x][y]=='*')
            {
            if(x>0){t.insert(has[x-1][y]);}
            if(y>0){t.insert(has[x][y-1]);}
            if(y+1<m){t.insert(has[x][y+1]);}
            if(x+1<n){t.insert(has[x+1][y]);}
            for(set <ll> ::iterator  it=t.begin();it!=t.end();it++)
            c+=f[*it];
            printf("%d",c%10);
           }
            else
            printf(".");
            }
        printf("\n");
    }
    return 0;
}
