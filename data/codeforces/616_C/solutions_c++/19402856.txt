#define N (1<<10)

#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <queue>
#include <vector>
#include <stack>
#include <map>
#include <set>
#include <string>
#include <cstring>
using namespace std;

const int dx[]={-1,0,1,0};
const int dy[]={0,-1,0,1};

int n,m;
char a[N][N];
int c[N][N];
int cur;
int area[N*N];

void dfs(int x,int y)
{
	c[x][y]=cur;
	area[cur]++;
	for(int k=0;k<4;k++)
	{
		int nx=x+dx[k];
		int ny=y+dy[k];
		if(nx<0||nx>=n||ny<0||ny>=m)
		{
			continue;
		}
		else if(a[nx][ny]=='*'||c[nx][ny])
		{
			continue;
		}
		else
		{
			dfs(nx,ny);
		}
	}
}

int main()
{
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;i++)
	{
		scanf("%s",a[i]);
	}
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			if(!c[i][j]&&a[i][j]!='*')
			{
				cur++;
				dfs(i,j);
			}
		}
	}
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
		{
			if(a[i][j]=='.')
			{
				printf(".");
			}
			else
			{
				set<int> s;
				int Ans=1;
				for(int k=0;k<4;k++)
				{
					s.insert(c[i+dx[k]][j+dy[k]]);
				}
				for(set<int>::iterator it=s.begin();it!=s.end();it++)
				{
					Ans+=area[*it];
				}
				printf("%d",Ans%10);
			}
		}
		printf("\n");
	}
	return 0;
}