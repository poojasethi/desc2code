#include <bits/stdc++.h>
using namespace std;
int ans[1100][1100];
char s[1100][1100];
char res[1100][1100];
int visit[1100][1100];
int amt[1000005];
int n,m;
int cnt;
int xmove[4]={1,0,-1,0};
int ymove[4]={0,1,0,-1};
void dfs(int x,int y,int id)
{
visit[x][y]=id;
cnt++;
for(int i=0;i<4;i++)
{
int xx=x+xmove[i];
int yy=y+ymove[i];
if(xx>=0&&xx<n&&yy>=0&&yy<m&&visit[xx][yy]==0&&s[xx][yy]=='.')
dfs(xx,yy,id);
}
}
int fun(int x,int y)
{
int ans=1;
set<int>s1;
set<int>::iterator it;
for(int i=0;i<4;i++)
{
int xx=x+xmove[i];
int yy=y+ymove[i];
if(xx>=0&&xx<n&&yy>=0&&yy<m&&s[xx][yy]=='.')
{
int id=visit[xx][yy];
if(s1.find(id)==s1.end())
{
s1.insert(id);
ans=ans+amt[id];
}
}
}
return ans;
}
int main()
{
scanf("%d%d",&n,&m);
for(int i=0;i<n;i++)
{
scanf("%s",s[i]);
}
int id=0;
for(int i=0;i<n;i++)
{
for(int j=0;j<m;j++)
{
if(s[i][j]=='.'&&visit[i][j]==0)
{
cnt=0;
dfs(i,j,++id);
amt[id]=cnt;
}
}
}
for(int i=0;i<n;i++)
{
for(int j=0;j<m;j++)
{
if(s[i][j]=='.')
res[i][j]='.';
else
{
int c=fun(i,j);
c=c%10;
char ch=c+'0';
res[i][j]=ch;
}
}
}
for(int i=0;i<n;i++)
printf("%s\n",res[i]);
return 0;
}
