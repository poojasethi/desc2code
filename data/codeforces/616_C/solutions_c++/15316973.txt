#include <bits/stdc++.h>
using namespace std;
#define fo(i,n) for(int i=0;i<(n);i++)
typedef long long ll;

int R, C, G, seen[1005][1005], sz[1100100];
char g[1005][1005];
set<int> s;

int dr[] = {0, 0, 1, -1};
int dc[] = {1, -1, 0, 0};

bool out (int r, int c) {
	return r<0 || c<0 || r>=R || c>=C;
}
bool bad (int r, int c) {
	return out(r,c) || seen[r][c] || g[r][c] == '*';
}

void go (int r, int c) {
	seen[r][c] = G, sz[G]++;
	fo(i, 4) if (!bad(r+dr[i], c+dc[i])) {
		go(r+dr[i], c+dc[i]);
	}
}

int main () {
	scanf("%d %d", &R, &C);
	fo(r, R) scanf(" %s", g[r]);
	fo(r, R) fo(c, C) if (!bad(r,c)) {
		G++, go(r, c);
	}
	fo(r, R) {
		fo(c, C) {
			if (g[r][c] == '*') {
				s.clear();
				int ans = 0;
				fo(i, 4) if (!out(r+dr[i], c+dc[i])) s.insert(seen[r+dr[i]][c+dc[i]]);
				for (set<int>::iterator it = s.begin();it!=s.end();it++) ans += sz[*it];
				printf("%d", (1 + ans)%10);
			} else printf("%c", g[r][c]);
		}
		puts("");
	}
	return 0;
}
