#include <bits/stdc++.h>
using namespace std;
const int N = 1e3+5;
char board[N][N];
int dp[N][N],dx[4]={-1,1,0,0},dy[4]={0,0,1,-1},R,k,n;
map<int,int> hash;
void dfs(int y,int x){
	if(board[y][x]!='.')return;
	if(dp[y][x]!=-1)return;
	++R;dp[y][x]= k;int i,j;
	for(i=0;i<4;++i)
		dfs(y+dy[i],x+dx[i]);
}
int main(){
	int n,m,i,j;
	scanf("%d%d",&n,&m);
	for(i=1;i<=n;++i)
		scanf("%s",board[i]+1);
	memset(dp,-1,sizeof(dp));
	for(i=1;i<=n;++i)
		for(j=1;j<=m;++j)
			if(board[i][j]=='.' && dp[i][j]==-1){
				R=0,k = i*m+j;
				dfs(i,j);
				hash[k]= R;
			}
	vector<int> ret;
	int t;
	for(i=1;i<=n;++i){
		for(j=1;j<=m;++j){
			if(board[i][j]!='.'){
				ret.clear();
				for(k=0;k<4;++k){
					ret.push_back(dp[i+dy[k]][j+dx[k]]);
				}
				t=1;
				sort(ret.begin(),ret.end());
				ret.push_back(1e9);
				for(k=0;k<4;++k)
					if(ret[k]!=-1 && ret[k]!=ret[k+1])
						t+= hash[ret[k]];
				t%=10;
				printf("%d",t);
			}
			else putchar('.');
		}
		putchar('\n');
	}
}
