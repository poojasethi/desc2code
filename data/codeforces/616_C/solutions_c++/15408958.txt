#include <bits/stdc++.h>
using namespace std;

const int dx[4] = {0,0,-1,1};
const int dy[4] = {-1,1,0,0};

int x[1001][1001];
char mat[1001][1001];
map <int, int> comp, pom;
int n, m, cnt, sum;

void dfs(int i, int j)
{
  if (i >= n || i < 0 || j >= m || j < 0) return;
  if (x[i][j] == cnt || mat[i][j] == '*') return;
  x[i][j] = cnt;
  sum++;

  for (int l=0; l<4; l++)
   dfs(i+dx[l], j+dy[l]);
}

int main()
{
  scanf("%d%d", &n, &m);
  for (int i=0; i<n; i++)
    scanf("%s", mat[i]);

  cnt = 0;

  for (int i=0; i<n; i++)
   for (int j=0; j<m; j++)
    if (mat[i][j] == '.' && x[i][j] == 0){
      cnt++;
      sum = 0;
      dfs(i,j);
      comp[cnt] = sum;
    }

  for (int i=0; i<n; i++){
   for (int j=0; j<m; j++)
     if (mat[i][j] == '*'){
       sum = 1;
       pom.clear();
       for (int l=0; l<4; l++){
         if (i+dx[l] >= 0 && i+dx[l] < n && j+dy[l] >= 0 && j+dy[l] < m && pom[x[i+dx[l]][j+dy[l]]] == 0){
          sum += comp[x[i+dx[l]][j+dy[l]]];
          sum %= 10;
          pom[x[i+dx[l]][j+dy[l]]]++;
         }
       }
       printf("%d", sum);
      }
      else printf(".");
    printf("\n");
  }
}
