#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <string>
#include <set>
#include <vector>
#include <bitset>
#include <map>
#include <stack>
#include <queue>
#include <ios>
using namespace std;
string  s[1010];
int cc[1010][1010],sum[1010101];
int k=1,n,m;

int dfs(int i,int j,int c)
{
	if (i<0||j<0||i>=n||j>=m) return -1;
	if (s[i][j]=='*') return -1;
	if (cc[i][j]) return cc[i][j];
	cc[i][j]=c;
	sum[c]++;
	dfs(i+1,j,c);
	dfs(i-1,j,c);
	dfs(i,j+1,c);
	dfs(i,j-1,c);
	return c;
}
int main()
{
	cin>>n>>m;
	for (int i=0;i<n;i++) cin>>s[i];
	for (int i=0;i<n;i++)
	{
		for (int j=0;j<m;j++) dfs(i,j,k++);
	}
	for (int i=0;i<n;i++)
	{
		for (int j=0;j<m;j++)
		{
			if (s[i][j]=='.') cout<<'.';
			else 
			{
				set<int> f;
				f.insert(dfs(i-1,j,0));
				f.insert(dfs(i+1,j,0));
				f.insert(dfs(i,j-1,0));
				f.insert(dfs(i,j+1,0));
				int solution=1;
				for(set<int>::iterator it=f.begin();it!=f.end();it++)
				{
					if (sum[*it]>-1) solution+=sum[*it];
				}
				cout<<(char)('0'+(solution%10));
			}
		}
		cout<<endl;
	}
	return 0;
}
