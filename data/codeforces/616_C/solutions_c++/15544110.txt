    #include <iostream>
    #include <string>
    #include <set>  
    #include <algorithm>
    #include <vector>
    #include <cmath>
    #include <queue>
    #include <cstring>
    #include <cstdio>
using namespace std;
#define N 1100
char g[N][N];
int v[N*N],u[N][N],q[2*N*N],di[]={-1,1,0,0},dj[]={0,0,-1,1};
int n,m,col,ql,qr;
bool in(int i,int j){return i>=0&&i<n&&j>=0&&j<m&&g[i][j]=='.';}
void push(int i,int j)
{
	if(in(i,j)&&!u[i][j]){u[i][j]=col;q[qr++]=i;q[qr++]=j;}
}
void bfs(int i,int j)
{
	col++;
	ql=0;
	qr=0;
	push(i,j);
	for(;ql<qr;)
	{
		i=q[ql];ql++;
		j=q[ql];ql++;
		for(int k=0;k<4;k++)push(i+di[k],j+dj[k]);
	}
}
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;i++)scanf("%s",g[i]);
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++)
			if(g[i][j]=='.'&&!u[i][j])bfs(i,j);
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++)
			v[u[i][j]]++;
	for(int i=0;i<n;i++)
		for(int j=0;j<m;j++)
			if(g[i][j]=='*')
			{
				int a[4],t;
				t=0;
				for(int k=0;k<4;k++)
				{
					int ii=i+di[k],jj=j+dj[k];
					if(in(ii,jj))a[t++]=u[ii][jj];
				}
				sort(a,a+t);
				t=unique(a,a+t)-a;
				int x=1;
				for(int k=0;k<t;k++)x+=v[a[k]];
				g[i][j]='0'+x%10;
			}
	for(int i=0;i<n;i++)printf("%s\n",g[i]);
	return 0;
}
