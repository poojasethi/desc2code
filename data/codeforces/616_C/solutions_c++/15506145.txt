#include <cstdio>
#include <cstring>
#include <algorithm>
#define MAXN 1010

using namespace std;

char map[MAXN][MAXN];
int mark[MAXN][MAXN],sum[MAXN*MAXN];
int dx[]={1,-1,0,0},dy[]={0,0,-1,1};
int m,n;

bool ok(int x,int y)
{
	if(0<=x&&x<n&&0<=y&&y<m&&map[x][y]=='.')
	return true;
	return false;
}

void dfs(int x,int y,int z)
{
	mark[x][y]=z;
	sum[z]++;
	for(int i=0;i<4;i++){
		int nx=x+dx[i],ny=y+dy[i];
		if(ok(nx,ny)&&mark[nx][ny]==0){
			dfs(nx,ny,z);
		}
	}
	return ;
}

int main()
{
	scanf("%d%d",&n,&m);
	for(int i=0;i<n;i++){
		scanf("%s",map[i]);
	}
	memset(mark,0,sizeof(mark));
	memset(sum,0,sizeof(sum));
	int cnt=1;
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(map[i][j]=='.'&&mark[i][j]==0){
				dfs(i,j,cnt);
				cnt++;
			}
		}
	}
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(map[i][j]=='.')printf(".");
			else{
				int num=1;
				for(int a=0;a<4;a++){
					int nx=i+dx[a],ny=j+dy[a];
					if(ok(nx,ny)){
						bool flag=true;
						for(int b=0;b<a;b++){
							int nnx=i+dx[b],nny=j+dy[b];
							if(mark[nx][ny]==mark[nnx][nny]){
								flag = false;
								break;
							}
						}
						if(flag){
							num+=sum[mark[nx][ny]];
						}
					}
				}
				num%=10;
				printf("%d",num);
			}
		}
		printf("\n");
	}
	return 0;
}
 		  					 	 	  	  		   				  	