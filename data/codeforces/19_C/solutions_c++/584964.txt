#include <stdio.h>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;

map<int, int> id;
vector<int> a[100005];
vector<int> r[50005];
int p[100005];

int main(void) {
	int n, i, j, k;
	scanf("%d", &n);
	for(i=0;i<n;i++) {
		scanf("%d", &p[i]);
		if(id.count(p[i])==0) {
			int t = id.size();
			id[p[i]] = t;
		}
		a[id[p[i]]].push_back(i);
	}
	int m = id.size();
	for(i=0;i<m;i++)
		for(j=0;j<(int)a[i].size();j++)
			for(k=j+1;k<(int)a[i].size();k++)
				if(a[i][k]-a[i][j]<=n/2)
					r[a[i][k] - a[i][j]].push_back(a[i][j]);
	int head = 0, n2 = n/2;
	for(i=1;i<n;i++)
		if(p[i]==p[i-1])
			head = i;
	for(i=2;i<=n2;i++) {
		sort(r[i].begin(), r[i].end());
		int c=1;
		for(j=0;j<(int)r[i].size();j++)
			if(r[i][j] < head) {c = 1; r[i][j] = -100; continue;}
			else if(j && r[i][j]==r[i][j-1]+1) {
				if(++c == i) {
					head = r[i][j]+1;
					c = 0;
				}
			} else c = 1;
	}
	printf("%d\n", n - head);
	for(i=head;i<n;i++)
		printf("%d%c", p[i], (i==n-1?'\n':' '));
	return 0;
}
