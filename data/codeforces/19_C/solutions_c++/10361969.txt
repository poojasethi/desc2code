#include <bits/stdc++.h>
typedef long long LL;
#define rep(i,n) for(int i = 0;i < n;i ++)
#define repit(i, v) for(typeof(v.begin()) i = v.begin(); i!=v.end(); i ++)

const int N = 100010;
std::list<int> pos[N];
typedef std::pair<int, int> P;
std::map<int, int> Hash;
std::set<P> w;
int a[N];
int main() {
	int n;
	scanf("%d", &n);
	rep(i, n) {
		int x;
		scanf("%d", &x);
		if(Hash.count(x) == 0)
			Hash[x] = i;
		pos[Hash[x]].push_back(i);
		a[i] = x;
	}
	int s = 0;
	rep(i, n) {
		int p = Hash[a[i]];
		pos[p].pop_front();
		repit(it, pos[p]) {
			int x = i, y = *it;
			w.insert(std::make_pair(x, y));
			++ x;
			++ y;
			while(x < *it && a[x] == a[y] && w.count(std::make_pair(x, y)) == 0) {
				w.insert(std::make_pair(x, y));
				++ x;
				++ y;
			}
			if(x == *it) {
				i = *it - 1;
				s = *it;
				break;
			}
		}
	}
	printf("%d\n", n - s);
	for(int i = s; i < n; i ++)
		printf("%d%c", a[i], " \n"[i == n - 1]);
	return 0;
}

