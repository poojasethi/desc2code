#include <algorithm>
#include <cstring>
#include <cstdio>
#include <vector>
#include <map>

using namespace std;

typedef vector<int>::iterator ite;

vector<int> list[100000];
int data[100001];

int main()
  {
    map<int, vector<int> > pos;
    int n, i, j, k, cur;
    
    scanf("%d", &n);
    for (i = 1; i <= n; i ++) scanf("%d", &data[i]);
    
    for (i = n; i; i --)
      {
        vector<int> &now = pos[data[i]];
        for (ite p = now.begin(); p != now.end(); p ++)
          list[*p-i].push_back(i);
        pos[data[i]].push_back(i);
      }
    
    for (cur = 0, i = 1; i < n; i ++)
      if (list[i].size() >= i)
        {
          sort(list[i].begin(), list[i].end());
          for (j = 0; j < list[i].size(); j = k)
            {
              for (k = j + 1; k - j < i && k < list[i].size(); k ++)
                if (list[i][k] - list[i][j] != k - j) break;
              if (k - j >= i && list[i][j] > cur)
                cur = list[i][j] + i - 1;
            }
        }
    
    printf("%d\n", n - cur);
    for (i = cur + 1; i <= n; i ++)
      if (i < n) printf("%d ", data[i]); else printf("%d\n", data[i]);
    
    return 0;
  }