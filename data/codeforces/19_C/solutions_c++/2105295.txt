#include <iostream>
#include <vector>
#include <set>
#include <map>

using namespace std;

int f(const int* a, int size)
{
	vector<map<int, int> > matchvec(size);
	map<int, set<int> > positions;

	int startIndex = 0;
start:
	for (int i = startIndex; i < size; i++) {
		map<int, set<int> >::const_iterator psit = positions.find(a[i]);
		if (psit != positions.end()) {
			for (set<int>::const_iterator pit = psit->second.begin();
				 pit != psit->second.end();
				 pit++) {
				int j = *pit;
				if (j < startIndex) continue;
				if (j >= startIndex+1 && a[j-1] == a[i-1]) {
					matchvec[i][j] = matchvec[i-1][j-1] + 1;
				}
				else {
					matchvec[i][j] = 1;
				}
				if (matchvec[i][j] == i-j) {
					startIndex = j+1;
					goto start;
				}
			}
		}
		positions[a[i]].insert(i);
	}

	return startIndex;
}


int main()
{
	int n;
	cin >> n;
	int a[n];
	for (int i = 0; i < n; i++) {
		cin >> a[i];
	}

	int startIndex = f(a, n);
	cout << (n-startIndex) << endl;
	for (int i = startIndex; i < n; i++) {
		cout << a[i] << " ";
	}
	cout << endl;

	return 0;
}
