#include <algorithm>
#include <iostream>
#include <map>
#include <vector>

using namespace std;

const int INF = 1000000010;

int main() {
  int n;
  cin >> n;
  vector<int> v(n);
  map<int, vector<int> > m;
  for (int i = 0; i < n; ++i) {
    cin >> v[i];
    m[v[i]].push_back(i);
  }
  vector<pair<int, int> > rep;
  for (map<int, vector<int> >::iterator it = m.begin(); it != m.end(); ++it) {
    int c = it->first;
    vector<int> p = it->second;
    for (int i = 0; i < int(p.size()); ++i) {
      for (int j = i+1; j < int(p.size()); ++j) {
        rep.push_back(make_pair(p[j]-p[i], p[i]));
      }
    }
  }
  sort(rep.begin(), rep.end());
  int left = 0;
  for (int i = 0; i < int(rep.size()); ++i) if (rep[i].second >= left) {
    bool match = true;
    for (int j = 0; j < rep[i].first && match; ++j) {
      if (v[rep[i].second+j] != v[rep[i].second+rep[i].first+j]) match = false;
    }
    if (match) {
      left = rep[i].second+rep[i].first;
    }
  }
  cout << n-left << endl;
  for (int i = left; i < n; ++i) {
    if (i > left) cout << " ";
    cout << v[i];
  }
  cout << endl;
  cin >> n;
}
