#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
//#include "print.hpp"

using namespace std;
typedef map<int, vector<int > >::const_iterator ittype;

int main(){
  int n;
  while(cin >> n){
    vector<int > a(n);
    map<int , vector<int > > table;
    
    for(int i = 0;i<n;i++){
      cin >> a[i];
      table[a[i]].push_back(i);
    }
    vector<vector<int>  > d(n);
    for(ittype it = table.begin();it != table.end();it++){
      vector<int > poss = it->second;
      for(size_t i = 0;i<poss.size();i++){
	for(size_t j = i+1;j<poss.size();j++){
	  d[poss[j]-poss[i]].push_back(poss[i]);
	}
      }
    }
    int pos = 0;

    for(size_t i = 0;i<d.size();i++){
      sort(d[i].begin(), d[i].end());
    }
    //
    //print(table);
    //print(d);

    for(int i = 0; i < n; i++){
      int count = 0;
      int prev = -1;
      for(int j = 0;j < d[i].size();j++){
	if(d[i][j] < pos) continue;
	if(d[i][j] == prev +1 )
	  count ++;
	else count = 1;
	if(count == i){
	  pos = d[i][j] + 1;
	  prev = -1;
	  count = 0;
	}
	prev = d[i][j];
      }
    }
    cout << n - pos << endl; 
    for(int i = pos;i<n;i++){
      cout << a[i] << " ";
    }
    cout << endl;
    cout << endl;
  }
}
