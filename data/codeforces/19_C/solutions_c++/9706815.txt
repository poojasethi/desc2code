#include<cstdio>
#include<cstring>
#include<string>
#include<vector>
#include<map>
#include<algorithm>

using namespace std;

#define ll long long
#define N 100100
#define M 1000000007LL
#define pb push_back
#define pii pair<int, int>
#define fst first
#define snd second

int n, a[N];
map<int,int> m;
vector<int> pos[N];
vector<pii> ans;
ll pot[N], h[N];

int main() {
	scanf("%d", &n);
	
	pot[0] = 1;
	h[0] = 0;
	for (int i = 1, j = 0; i <= n; ++i) {
		scanf("%d", &a[i]);
		pot[i] = M * pot[i-1];
		h[i] = M * h[i-1] + a[i];
		if (!m[a[i]]) m[a[i]] = ++j;
		pos[m[a[i]]].pb(i);
	}
	
	for (map<int, int>::iterator it = m.begin(); it != m.end(); ++it) {
		for (int i = 0; i < pos[it->snd].size(); ++i) {
			for (int j = i+1; j < pos[it->snd].size(); ++j) {
				int s = pos[it->snd][j] - pos[it->snd][i];
				ll x = h[pos[it->snd][j]-1] - (pot[s] * h[pos[it->snd][i]-1]);
				ll y = h[pos[it->snd][j]+s-1] - (pot[s] * h[pos[it->snd][j]-1]);
				if (x == y) ans.pb(pii(s, pos[it->snd][i]));
			}
		}
	}
	
	sort(ans.begin(), ans.end());
	int ini = 1;
	for (int i = 0; i < ans.size(); ++i) {
		if (ans[i].snd >= ini) ini = ans[i].snd + ans[i].fst;
	}
	printf("%d\n", n - ini + 1);
	for (int i = ini; i <= n; ++i) {
		printf("%d ", a[i]);
	}
	printf("\n");
	return 0;
}