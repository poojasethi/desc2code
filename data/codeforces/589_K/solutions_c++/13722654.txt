#pragma comment(linker, "/STACK:102400000,102400000")
#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100005

template <class T,class U>inline void Max(T &a,U b){if(a<b)a=b;}
template <class T,class U>inline void Min(T &a,U b){if(a>b)a=b;}

struct node{
    int l,t,id;
    bool operator <(const node&a)const{
        return l>a.l||(l==a.l&&id>a.id);
    }
}a[N];
ll ans[N];
vi v[N];
int main(){
    //ios::sync_with_stdio(0);
    int T,i,j,k,m,ca=0,n;
    scanf("%d",&n);
    int mx=0;
    for(i=0;i<n;i++){
        scanf("%d%d",&a[i].l,&a[i].t);
        a[i].id=i;
        Max(mx,a[i].t);
    }
    sort(a,a+n);
    for(i=0;i<n;i++)v[a[i].t].pb(i);
    int pos=0;
    while(v[pos].size()==0)pos++;
    ll cur=pos;
    for(i=1;i<=n;i++){
        while(pos<=mx&&v[pos].empty())pos++;
        int x=v[pos].back(),y=pos;
        if(cur<pos)cur=pos;
        double res=a[x].l-1.*pos*pos+2.*pos*cur;
        for(k=pos+1;k<=mx;k++){
            if(k>cur)break;
            if(1-1.*k*k+2.*k*cur>res)break;
            if(v[k].empty())continue;
            j=v[k].back();
            double r=a[j].l-1.*k*k+2.*k*cur;
            if(r<res||(r==res&&a[j].id<a[x].id)){
                res=r;x=j,y=k;
            }
        }
        v[y].pop_back();
        cur+=a[x].l;
        ans[a[x].id]=cur;
    }
    for(i=0;i<n;i++)printf("%I64d ",ans[i]);
    return 0;
}