#include <cstdio>
#include <algorithm>
#include <cstring>
#include <iostream>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <bitset>
#include <ctime>
#include <utility>
#include <functional>
#include <numeric>
#include <stack>
#include <sstream>
#include <iomanip>
#include <memory.h>
#include <cassert>

using namespace std;
const int maxn=2e5;
vector <pair<int,int> > sl[maxn];
pair<int,int> a[maxn];
long long ans[maxn];
int n;
int main() {
    //freopen("input.txt","r",stdin);
    ios_base::sync_with_stdio(false);
    cin >> n;
    for (int i=1;i<=n;i++) {
        cin >> a[i].first >> a[i].second;
        sl[a[i].second].push_back(make_pair(-a[i].first,-i));
    }
    for (int i=0;i<=100000;i++) sort(sl[i].begin(),sl[i].end());
    int sz=0;
    int l=0;
    long long t=0;
    while (l<=100000) {
        while (l<=100000 && sl[l].size()==0) l++;
        if (l>100000) break;
        t=max(t,1ll*l);
        long long mx=-1ll*sl[l].back().first-1ll*(1ll*t-l)*(t-l);
        int nm=l;
        int nmm=-sl[l].back().second;
        for (int j=l+1;j<=min(1ll*l+700,t);j++)
            if (sl[j].size()>0) {
            long long ans=-1ll*sl[j].back().first-1ll*(1ll*t-j)*(t-j);
            if (ans<mx || (ans==mx && nmm>-sl[j].back().second)) {
                mx=ans;
                nm=j;
                nmm=-sl[j].back().second;
            }
        }
        if (nm!=-1) {
            t-=sl[nm].back().first;
            ans[-sl[nm].back().second]=t;
            sl[nm].pop_back();
        }
        else l++;
    }
    for (int i=1;i<=n;i++) cout << ans[i] << " ";
    cout << "\n";
    return 0;
}
