/***********************************
*                                  *
*    Auther Rhapsody               *
*    E-mail addf400@foxmail.com    *
*                                  *
***********************************/
#include <set>
#include <map>
#include <cmath>
#include <deque>
#include <queue>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>

#define MP make_pair
#define PB push_back

using namespace std;

typedef long long LL;
typedef pair<int, int> PII;

const int N = 1e5 + 7;
const int INF = 0x3f3f3f3f;
const int MOD = 1e9 + 7;

vector <PII> e[N];

LL Ans[N];

int main(void) {
	int n;
	while (scanf("%d", &n) == 1) {
		for (int i = 1; i <= n; ++i) {
			int u, v;
			scanf("%d%d", &u, &v);
			e[v].PB(MP(-u, -i));
		}
		for (int i = 0; i < N; ++i) {
			sort(e[i].begin(), e[i].end());
		}
		LL cur = 0;
		int pos = 0;
		for (int k = 1; k <= n; ++k) {
			while (pos < N && e[pos].empty())
				++pos;
			cur = max(cur, (LL)pos);
			double x = 1e100;
			int y = -1, w = -1;
			for (int i = pos; i <= cur && i < N; ++i)
			if (!e[i].empty()) {
				//printf("This is %d\n", i);
				PII t = e[i].back();
				int u = -t.first, v = -t.second;
				double tmp = u - (cur - i) * (LL)(cur - i);
				if (tmp - u > x) break;
				//cout << u << ' ' << v << ' ' << tmp << endl;
				if (x > tmp || (x == tmp && v < w)) {
					x = tmp;
					y = i;
					w = v;
				}
			}
			//printf("Now cur = %d\n", cur);
			if (e[y].empty()) continue;
			cur += -e[y].back().first;
			Ans[-e[y].back().second] = cur;
			e[y].pop_back();
		}
		for (int i = 1; i <= n; ++i) {
			printf("%I64d", Ans[i]);
			if (i < n)
				putchar(' ');
			else
				putchar('\n');
		}
	}
	return 0;
}
 		 				 		   	  	    	   			