#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <cstring>
#include <vector>
#include <queue>
#define CLR(x) memset(x,0,sizeof(x))
#define rep(i , a , b) for(int i=a;i<=b;i++)
#define X first
#define Y second
#define MP make_pair
#define PB push_back
#define LS k * 2 , l , mid
#define RS k * 2 + 1 , mid + 1,r
#define ll long long
#define pii pair<int,int>
using namespace std;
const int Maxn = 100010 , Maxm = 100010;
const ll oo = (1ll<<60);
const int Lim = 300;
int N , M , K;
ll ans[Maxn];
struct Rec{
    ll x, y;
    ll l, t, id;
    Rec(){}
    Rec(ll l ,ll t , int id):l(l),t(t),id(id){
        y = t * t - l;
        x = t * 2;
    }
}w[Maxn];
int cmp(Rec a, Rec b){
    return a.t < b.t || (a.t == b.t && a.y < b.y) || (a.t == b.t && a.y == b.y && a.id > b.id);
}

bool ck1(ll T , Rec a, Rec b){
    ll fz = b.y - a.y, fm = T * (b.x - a.x);    
    return fz < fm|| (fz == fm && a.id < b.id);
}
bool ck2(Rec a, Rec b,Rec c){
    ll fz1 = b.y - a.y , fm1 = b.x - a.x;
    ll fz2 = c.y - b.y , fm2 = c.x - b.x;
    return fz1 * fm2 < fz2 * fm1 || (fz1 * fm2 == fz2 * fm1 && c.id < b.id);
}
bool ck3(ll T , Rec a, Rec b){
    ll fz = b.y - a.y, fm = T * (b.x - a.x);    
    return fz > fm|| (fz == fm && a.id > b.id);
}
struct Block{
    vector<Rec> p;
    Rec Q[400];
    int h , t;
    void del(Rec x){
        vector<Rec>:: iterator i = p.begin();
        for (;i!= p.end();i++)
            if (x.id == i->id){                
                p.erase(i);
                break;
            }
        build();
    }    
    void add(Rec x){
        p.PB(x);
        build();
    }
    void build(){
        t = -1;
        if (!p.size()) return;        
        for(int i=0;i<p.size();i++){
            while( (p[i].x ==Q[t].x && p[i].y == Q[t].y) ||
                   (t>=1 && ck2(Q[t-1],Q[t],p[i]))
                ) t--;
            Q[++t] = p[i];
        }
        h = t;
    }
    Rec ask(ll T){
        if (t < 0) return Rec(oo,0,-1);        
        while(h && ck1(T,Q[h-1],Q[h])) h--;
        return Q[h];
    }
}F[Maxn/Lim + 1];

int main()
{
    ios::sync_with_stdio(0);
    cin >> N;
    int M = N / Lim;
    for (int i=0;i<N;i++){
        int l , t;
        cin >> l >> t;
        w[i] = Rec(l , t, i);
    }
    sort(w, w + N, cmp);    
    // for (int i=0;i<N;i++) cout << w[i].x<<" "<<w[i].y <<" "<<w[i].id<< endl;
    for (int i=0;i<=M;i++) F[i].build();    
    ll T = 0;
    for (int i=0,k=0;i<N;i++){
        T = max(T , (ll)w[i].t);        
        for(;k<N && w[k].t<= T;k++) F[k/Lim].add(w[k]);        
        Rec now = Rec(oo,0,-1);
        int nB;
        // if (i == 4){
        //         for (int rr = 0;rr<=F[0].p.size();rr++){
        //             cout <<"p"<< F[0].p[rr].x <<' '<<F[0].p[rr].y<<" "<<F[0].p[rr].id<<endl;
        //         }
        //         for (int rr = 0;rr<=F[0].t;rr++){
        //             cout <<"Q"<< F[0].Q[rr].x <<' '<<F[0].Q[rr].y<<" "<<F[0].Q[rr].id<<endl;
        //         }
        //         cout <<"H:"<<F[0].h<< endl;                    
        //         cout << F[0].ask(T).id << endl;
        //     }
        for (int j = 0; j <= M; j++){
            Rec tmp = F[j].ask(T);
            if(tmp.id < 0) continue;
            // if (i == 4) cout <<"!!"<<j<<" "<< tmp.x <<" "<<tmp.y << endl;
            if (ck3(T,now,tmp)){   
                now = tmp;
                nB = j;
            }
        }
        // cout << now.id << endl;
        T += now.l;
        ans[now.id] = T;
        F[nB].del(now);
    }
    for (int i=0;i<N;i++) cout << ans[i] <<" "; cout << endl;
} 