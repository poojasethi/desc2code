#include <bits/stdc++.h>
using namespace std;
const int MAXN = 100005;
deque <int> dq[MAXN];
int order[MAXN];
long long int t[MAXN], l[MAXN], ans[MAXN];
bool sorter(const int &x, const int &y)
{
	if(t[x] != t[y])
		return (t[x] < t[y]);
	if(l[x] != l[y])
		return (l[x] < l[y]);
	return (x < y);
}
int get_less(int x, int y, long long int T)
{
	long long int v = (l[x] - l[y]) + (t[y]*t[y] - t[x]*t[x]) + 2ll*(t[x] - t[y])*T;
	if(v < 0)
		return x;
	if(v == 0)
		return min(x,y);
	return y;
}
int main()
{
	// freopen("input.txt", "r", stdin);
	// ios_base::sync_with_stdio(0);
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
	{
		scanf("%lld %lld", &l[i], &t[i]);
		order[i] = i;
	}
	sort(order, order+n, sorter);
	for (int i = 0; i < n; ++i)
	{
		int idx = order[i];
		dq[t[idx]].push_back(idx);
	}
	int tmin = 0;
	long long int q_end = 0;
	while(tmin < MAXN)
	{
		if(dq[tmin].empty())
			tmin++;
		else
		{
			if(tmin > q_end)
				q_end = tmin;
			int tans = dq[tmin].front();
			for (int i = 1; i < 350; ++i)
			{
				if(tmin+i < MAXN && tmin+i <= q_end && !dq[tmin+i].empty())
					tans = get_less(tans,dq[tmin+i].front(),q_end);
			}
			ans[tans] = q_end + l[tans];
			q_end = ans[tans];
			dq[t[tans]].pop_front();
		}
	}
	for (int i = 0; i < n; ++i)
	{
		printf("%lld ", ans[i]);
	}
	printf("\n");
	return 0;
}