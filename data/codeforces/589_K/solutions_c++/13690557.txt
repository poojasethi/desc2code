#include <bits/stdc++.h>

#define FI(i,a,b) for(int i=(a);i<=(b);i++)
#define FD(i,a,b) for(int i=(a);i>=(b);i--)

#define LL long long
#define PI 3.14159265358979

#define PII pair<int,int>
#define PLL pair<LL,LL>
#define mp make_pair
#define fi first
#define se second

using namespace std;

LL put[100005],t=0;
int n,cp[100005],lim[100005];
struct task{
    int id,l;
    bool operator<(const task & k) const{
        if(l==k.l) return id<k.id;
        else return l<k.l;
    }
};
vector<task> V[100005];

int main(){
    scanf("%d",&n);
    memset(cp,0,sizeof(cp));
    memset(lim,0,sizeof(lim));
    FI(i,1,n){
        int a,b;
        scanf("%d %d",&a,&b);
        V[b].push_back((task){i,a});
        lim[b]++;
    }
    FI(i,0,100000) sort(V[i].begin(),V[i].end());
    int ct=0;
    FI(i,1,n){
        while(cp[ct]==lim[ct]) ct++;
        t=max(t,1LL*ct);
        int cur=ct;
        FI(j,ct+1,min(t,ct+320LL)){
            if(j>100000) break;
            if(cp[j]==lim[j]) continue;
            if(V[j][cp[j]].l-V[cur][cp[cur]].l < 1LL*(t+t-j-cur)*(cur-j)) cur=j;
            else if(V[j][cp[j]].l-V[cur][cp[cur]].l == 1LL*(t+t-j-cur)*(cur-j) && V[j][cp[j]].id<V[cur][cp[cur]].id) cur=j;
        }
        t+=V[cur][cp[cur]].l;
        put[V[cur][cp[cur]].id]=t;
        cp[cur]++;
    }
    FI(i,1,n) printf("%lld%c",put[i],i==n?'\n':' ');
    return 0;
}
