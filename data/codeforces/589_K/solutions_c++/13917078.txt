#include<bits/stdc++.h>
using namespace std;
const int MAXN = 100000 + 10;
int l[MAXN],t[MAXN];
long long ans[MAXN];
vector<int>v[MAXN];
bool cmp(int a,int b){
    if(l[a]!=l[b])return l[a]>l[b];
    return a>b;
}
int main(){
    int n,mt=0;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%d%d",l+i,t+i);
        v[t[i]].push_back(i);
        if(t[i]>mt)mt=t[i];
    }
    for(int i=0;i<=mt;i++)sort(v[i].begin(),v[i].end(),cmp);
    long long now=0;
    int c=0;
    for(int i=0;i<n;i++){
        while(v[c].empty())c++;
        if(now<c)now=c;
        int nn = v[c].back();
        long long tmp = l[nn] - (now - t[nn]) * (now - t[nn]);
        for(int j=c+1;j<=c+320&&j<=now&&j<=mt;j++){
            if(v[j].empty())continue;
            int tc = v[j].back();
            long long tmp2 = l[tc] - (now-t[tc])*(now-t[tc]);
            if(tmp2<tmp|| tmp2==tmp&&tc<nn){
                tmp=tmp2;
                nn=tc;
            }
        }
        now+=l[nn];
        ans[nn]=now;
        v[t[nn]].pop_back();
    }
    for(int i=0;i<n;i++)printf("%I64d ",ans[i]);
    puts("");
    return 0;
}
