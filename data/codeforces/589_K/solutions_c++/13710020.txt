#include "bits/stdc++.h"

using namespace std;

const int MAXT = 100007;
const int MAXN = 100007;
const int SQRT = sqrt(100000);

long long l[MAXN], t[MAXN];
long long ww[MAXN];
vector <int> V[MAXT];

const long long INF = 1LL<<62;

bool cmp(int a, int b)
{
  if(l[a] != l[b])
    return l[a] < l[b];
  return a<b;
}

int main()
{
  ios_base::sync_with_stdio(0);
  int n;
  cin >> n;
  for(int i=0; i<n; i++)
  {
    cin >> l[i] >> t[i];
    V[t[i]].push_back(i);
  }
  for(int i=0; i<MAXT; i++)
  {
    sort(V[i].begin(), V[i].end(), cmp);
    reverse(V[i].begin(), V[i].end()); 
  }
  unsigned long long T = 0;
  for(int i=0; i<MAXT; i++)
  {
    while(!V[i].empty())
    {
      T = max(T, (unsigned long long)i);
      double czas = l[V[i].back()] - pow((double)(T - t[V[i].back()]), 2.0);
      int ind = MAXN;
      for(int j=0; i+j<=min(T,(unsigned long long)(min(MAXT-1, i+SQRT))); j++)
      {
        if(!(V[i+j].empty()))
        {
          int w = V[i+j].back();
          double tmp = l[w] - pow((double)(T - t[w]), 2.0);
          if(tmp < czas or (tmp==czas and w < ind))
          {
            czas = tmp;
            ind = w;
          }
        }
      }
      T = max(T, (unsigned long long)t[ind]) + l[ind];
      ww[ind] = T;
      V[t[ind]].pop_back();
    }
  }
  for(int i=0; i<n; i++)
    cout << ww[i] << " ";
  return 0;
}