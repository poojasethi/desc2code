#include <bits/stdc++.h>

using namespace std;

const int maxn = 100008;
typedef long long ll;

vector<int> g[maxn];
int l[maxn], t[maxn];
ll ans[maxn];

bool cmp(int x, int y){
	if(l[x] == l[y]) return x > y;
	return l[x] > l[y];
}

int main(){
	int n;

	while(scanf("%d", &n) > 0){
		for(int i = 0; i < maxn; i++){
			g[i].clear();
			ans[i] = 0;
		}
		for(int i = 0; i < n; i++){
			scanf("%d%d", l + i, t + i);
			g[t[i]].push_back(i);
		}
		for(int i = 0; i < maxn; i++){
			sort(g[i].begin(), g[i].end(), cmp);
		}
		ll now = 0;
		int c = 0;
		for(int j = 0; j < n; j++){
			while(g[c].empty()) c++;
			if(now < c) now = c;
			int cc = g[c].back();
			ll res = l[cc] - (now - c) * (now - c);
			for(int i = c + 1; i < c + 333 && i < maxn && i <= now; i++){
				if(g[i].empty()) continue;
				int cc2 = g[i].back();
				ll temp = l[cc2] - (now - i) * (now - i);
				if(temp < res || (temp == res && cc2 < cc)){
					res = temp, cc = cc2;
				}
			}
			now += l[cc];
			ans[cc] = now;
			g[t[cc]].pop_back();
		}
		for(int i = 0; i < n; i++){
			printf("%I64d ", ans[i]);
		}
		printf("\n");
	}

	return 0;
}

	  	 	 		  	  		 		 	  		 	  	