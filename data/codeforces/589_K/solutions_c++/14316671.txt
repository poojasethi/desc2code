#include <bits/stdc++.h>

using namespace std;

#define type(x) __typeof((x).begin())
#define foreach(it, x) for(type(x) it = (x).begin(); it != (x).end(); it++)
typedef long long ll;
typedef pair < int, int > ii;

const int inf = 1e9 + 333;
const ll linf = 1e18 + inf;

const int N = 1e5 + 5;

int n;
ii a[N];
set < int > all;
set < ii > s[N];
ll ans[N];

int main() {

	scanf("%d", &n);

	for(int i = 1; i <= n; i++) {
		int x, y;
		scanf("%d %d", &x, &y);
		a[i] = ii(x, y);
		s[y].insert(ii(x, i));
	}

	int ptr = 0;

	ll t = 0;

	while(ptr != N or all.size()) {
		while(ptr < N and ptr <= t) {
			if(s[ptr].size())
				all.insert(ptr);
			ptr++;
		}
		if(!all.size()) {
			t++;
			continue;
		}
		ll mn;
		int id = -1;
		foreach(it, all) {
			int ti = *it;
			int li = s[ti].begin() -> first;
			int i = s[ti].begin() -> second;
			if(id != -1 and -(t - ti) * (t - ti) > mn)
				break;
			if(id == -1 or li - (t - ti) * (t - ti) < mn or (li - (t - ti) * (t - ti) == mn and i < id)) {
				mn = li - (t - ti) * (t - ti);
				id = i;
			}
		}
		ans[id] = t += a[id].first;
		s[a[id].second].erase(ii(a[id].first, id));
		if(s[a[id].second].size() == 0)
			all.erase(a[id].second);
	}

	for(int i = 1; i <= n; i++)
		printf("%lld ", ans[i]);

	puts("");

	return 0;

}
