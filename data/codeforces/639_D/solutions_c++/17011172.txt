#include <cstdio>
#include <iostream>
#include <set>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;
#define int64 long long
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#define sz(a) ((int) (a).size())

const int N = (int) 1e6;
const int64 INF = (int64) 1e18;
int t[N], n, k, B, C;
int64 a[N], b[N];

int main() {
	scanf("%d%d%d%d", &n, &k, &B, &C);
	B = min(B, 5 * C);
	for (int i = 0; i < n; ++i)
		scanf("%d", &t[i]);
	sort(t, t + n);
	int64 ans = INF;
	for (int r = 0; r < 5; ++r) {
		int64 amin = INF;
		for (int i = 0; i < n; ++i) {
			a[i] = t[i], b[i] = 0;
			while ((a[i] - r) % 5 != 0) ++a[i], ++b[i];
			amin = min(amin, a[i]);
		}
		int64 sum = 0;
		set< pair<int64, int> > what;
		for (int i = 0; i < n; ++i) {
			a[i] = (a[i] - amin) / 5;
			int64 cost = a[i] * B - b[i] * C;
			what.insert(mp(cost, i));
			sum += cost;
			while (sz(what) > k) {
				sum -= what.begin()->fs;
				what.erase(what.begin());
			}
			if (sz(what) == k)
				ans = min(ans, a[i] * (int64) k * B - sum);
		}
	}
	cout << ans << endl;
	return 0;
}   