#include <iostream>
#include <cstdio>
#include <queue>
#include <algorithm>
using namespace std;
const int maxn=4e5;
int a[maxn];
int cnt[maxn];
int n,k,b,c;
long long s;
long long sm[10];
priority_queue <long long> hp[10];
void add(int x) {
    for (int i=0;i<=4;i++) {
        int m=x%5;
        int t=(i-m);
        if (t<0) t+=5;
        long long kl=-1ll*t*c;
        kl+=(1ll*x/5)*b;
        if (i<m) kl+=b;
        if (hp[i].size()<k-1) {
            hp[i].push(-kl);
            sm[i]+=kl;
        }
        else {
            if (-hp[i].top()<kl) {
                sm[i]-=-hp[i].top();
                hp[i].pop();
                sm[i]+=kl;
                hp[i].push(-kl);
            }
        }
    }
    s+=x;
}
void del(int x) {
    s-=x;
}
int main() {
    ios_base::sync_with_stdio(0);
    cin >> n >> k >> b >> c;
    for (int i=1;i<=n;i++) {
        cin >> a[i];
        a[i]+=1e9;
    }
    sort(a+1,a+n+1);
    long long ans=2e18;
    for (int i=1;i<=n;i++) {
        if (i>k) del(a[i-k]);
        if (i>=k) {
            ans=min(ans,1ll*(1ll*a[i]*(k-1)-s)*c);
            ans=min(ans,(1ll*a[i]/5)*(k-1)*b-sm[a[i]%5]);
            for (int j=a[i]+1;j<a[i]+5;j++) ans=min(ans,(1ll*j/5)*(k-1)*b-sm[j%5]+(1ll*j-a[i])*c);
        }
        add(a[i]);
    }
    cout << ans << "\n";
    return 0;
}
