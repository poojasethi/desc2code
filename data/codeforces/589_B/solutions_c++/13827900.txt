#include <iostream>
#include <algorithm>
#include <map>
using namespace std;
const int N = 4444;
int W[N], H[N], tmp[N], w, h;
long long max_ans = -1;
int n;
void calc(int cur) {
    int z = 0;
    for(int i = 0; i < n; i++) {
        if(W[i] >= cur) tmp[z++] = H[i];
    }
    sort(tmp, tmp + z);
    for(int i = z - 1; i >= 0; i--) {
        long long t = tmp[i];
        long long f = 1LL * t * cur * (z - i);
        if(f > max_ans) {
            max_ans = f;
            w = cur;
            h = tmp[i];
        }
    }
}
int main() {
    cin >> n;
    for(int i = 0; i < n; i++) {
        cin >> W[i] >> H[i];
        if(W[i] > H[i]) swap(W[i], H[i]);
    }

    for(int i = 0; i < n; i++) {
        calc(W[i]);
    }

    cout << max_ans << endl;
    cout << w << " " << h << endl;

}
