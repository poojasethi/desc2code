#include <iostream>
#include <vector>
#include <string>
#include <cstring>
#include <fstream>
#include <sstream>
#include <stack>
#include <queue>
#include <utility>
#include <cmath>
#include <algorithm>
#include <limits.h>
#include <iterator>
#include <map>
#include <set>

using namespace std;

#define pb push_back
#define SIZE(x) (int)x.size()
#define MP make_pair

int n,d,S;
int c[100001];
int f[100001];
int l[100001];
vector<int> cr,ncr;

int main()
{
#ifdef LOCAL
	freopen("in.txt", "r", stdin);
#endif

	int ret1=0,fuel1=0;
	int ret2=0,fuel2=0;

	cin>>n>>d>>S;
	for(int i=1;i<=n;++i) scanf("%d%d%d",&c[i],&f[i],&l[i]);
	for(int i=1;i<=n;++i) if(l[i]>=d)
	{
		if(c[i]) cr.pb(f[i]);
		else ncr.pb(f[i]);
	}
	cr.pb(1000000001);ncr.pb(1000000001);
	sort(cr.begin(),cr.end());
	sort(ncr.begin(),ncr.end());

	for(int i=0;i<ncr.size();++i)
	{
		if(S<fuel1+ncr[i]) break;
		ret1++; fuel1+=ncr[i];
	}

	if(cr.size()>0&&cr[0]<=S)
	{
		int a=1,b=0;
		ret2=1; fuel2=cr[0];
		for(int i=1;i<=n;++i) ret2=min(n,ret2+c[i]);
		while(ret2<n)
		{
			if(min(cr[a],ncr[b])+fuel2>S) break;
			fuel2+=min(cr[a],ncr[b]);
			ret2++;
			if(cr[a]<ncr[b]) a++;
			else b++;
		}
	}

	if(ret1==ret2) cout<<ret1<<" "<<min(fuel1,fuel2)<<endl;
	else if(ret1>ret2) cout<<ret1<<" "<<fuel1<<endl;
	else cout<<ret2<<" "<<fuel2<<endl;

	return 0;
}
