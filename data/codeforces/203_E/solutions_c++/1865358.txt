#include <cstdio>
#include <algorithm>
using namespace std;

const int maxn = 100000 + 10;

struct robot {
    int c, f;
};

int n, d, s, sumc, m;
robot a[maxn];
int ans1, ans2, tmp1, tmp2;

bool cmp(const robot &a, const robot &b) {
    return a.f < b.f;
}

int main() {
    scanf("%d%d%d", &n, &d, &s);
    sumc = m = 0;
    for (int i = 0, c, f, l; i < n; ++i) {
        scanf("%d%d%d", &c, &f, &l);
        sumc += c;
        if (sumc > n) sumc = n;
        if (l >= d) {
            a[m].c = c;
            a[m++].f = f;
        }
    }
    
    ans1 = ans2 = 0;
    sort(a, a + m, cmp);
    while (ans1 < m) {
        if (ans2 + a[ans1].f > s) break;
        ans2 += a[ans1].f;
        ++ans1;
    }
    int head = -1;
    for (int i = 0; i < m; ++i)
        if (a[i].f <= s && a[i].c) {
            head = i;
            break;
        }
    if (head != -1) {
        tmp1 = min(sumc + 1, n); tmp2 = a[head].f;
        if (tmp1 > ans1 || tmp1 == ans1 && tmp2 < ans2) {
            ans1 = tmp1; ans2 = tmp2;
        }
        for (int i = 0; i < m; ++i)
            if (i != head) {
                if (tmp1 == n || tmp2 + a[i].f > s) break;
                ++tmp1; tmp2 += a[i].f;
                if (tmp1 > ans1 || tmp1 == ans1 && tmp2 < ans2) {
                    ans1 = tmp1; ans2 = tmp2;
                }
            }
    }
    printf("%d %d\n", ans1, ans2);
    
    return 0;
}
