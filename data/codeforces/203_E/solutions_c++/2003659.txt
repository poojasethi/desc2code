#include<cstdio>
#include<cstring>
#define mem(a,b) memset(a,b,sizeof(a))
#include<algorithm>
#include<cmath>
#include<cctype>
using namespace std;
typedef long long ll;

const int N = 100000+10, P = 1000000007;

struct Rob {
	int c,f,l;
	bool operator < (Rob b) const {
		return f<b.f;
	}
} a[N];

int main()
{
	int n,d,F;
	scanf("%d%d%d",&n,&d,&F);
	for(int i=0;i<n;i++) {
		scanf("%d%d%d",&a[i].c,&a[i].f,&a[i].l);
	}
	sort(a,a+n);

	ll ans=0,tf=0;
	for(int i=0;i<n;i++) {
		if(a[i].l>=d) {
			if(a[i].f+tf>F) break;
			tf+=a[i].f;
			ans++;
		}
	}

	ll ans1=0,tf1=0;
	for(int st=0;st<n;st++) {
		if(a[st].c&&a[st].l>=d&&a[st].f<=F) {

			ans1=1;
			tf1=a[st].f;

			ll ext=a[st].c;
			for(int i=0;i<n;i++) if(i!=st) {
				if(a[i].c) ext+=a[i].c-1,ans1++;
			}

			for(int i=0;i<n;i++) if(i!=st) {
				if(a[i].l<d) continue;
				if(a[i].f+tf1>F) break;
				if(n-ans1<=ext) break;
				tf1+=a[i].f;
				ans1++;
			}

			ans1+=min(ext,n-ans1);
			if(ans1>ans || (ans1==ans&&tf1<tf) ) {
				ans=ans1;
				tf=tf1;
			}

			break;
		}
	}

	printf("%I64d %I64d\n",ans,tf);

    return 0;
}
