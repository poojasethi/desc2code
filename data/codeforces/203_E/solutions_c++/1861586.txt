#include <cstdio>
#include <map>
#include <algorithm>

using namespace std;

#define N 100000
#define mp make_pair
#define F first
#define S second
#define LL long long

int n, d, s;
int si, sw;
pair<int, int> W[N], I[N];

int main()
{
	
	scanf("%d%d%d", &n, &d, &s);
	
	LL cz = 0, x = 0;
	int rz = 0, lz = 0;
	
	for (int i = 0; i < n; ++i)
	{
		int c, f, l;
		scanf("%d%d%d", &c, &f, &l);
		if (l >= d) 
		{
			if (c) W[sw++] = mp(f, c), x += c-1;
			else I[si++] = mp(f, c);
		}
		else 
		{
			if (c) cz += c-1, ++rz;
			else lz++;
		}
	}
	
	sort(W, W+sw);
	sort(I, I+si);
	int res = 0, fuel = 0, st = s, z = 0, p = -1;
	LL c = 0;
	
	for (int i = 0; i < sw; ++i)
	{
		if (W[i].F > st) break;
		if (c && c+cz+x-lz >= si) break;
		p = i;
		st -= W[i].F;
		++z;
		c += W[i].S;
		x -= W[i].S-1;
	}
	res = p < 0 ? 0 : sw+rz+min((LL)lz, c+cz+x);
	if (p >= 0 && c+cz+x > lz) res += min(c+cz+x-lz, (LL)si);
	fuel = s-st;
	
	for (int k = 0; k < si; ++k)
	{
		st -= I[k].F;
		while (st < 0) 
		{
			if (p < 0) break;
			st += W[p].F;
			c -= W[p].S;
			x += W[p--].S-1;
		}
		if (st < 0) break;
		int tmp = k+1 + ((p < 0) ? 0 : sw+rz+min((LL)lz, c+cz+x));
		if (p >= 0 && c+cz+x > lz) tmp += min(c+cz+x-lz, (LL)si-k-1);
		if (tmp > res || tmp == res && s-st < fuel) res = tmp, fuel = s-st;
	}
	
	printf("%d %d\n", res, fuel);
	
	return 0;
}

