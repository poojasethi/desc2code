#include<bits/stdc++.h>

using namespace std;
#define CLR(a,val) memset(a, val, sizeof(a))
#define SZ(V) (LL)V.size()
#define ALL(V) V.begin(),V.end()
#define RALL(V) V.rbegin(),V.rend()
#define FORN(i, n) for(LL i = 0; i < n; i++)
#define FORAB(i, a, b) for(LL i = a; i <= b; i++)
#define MOD 1000000007LL
#define PB push_back
#define MP make_pair
#define F first
#define S second

typedef long long LL;
typedef pair<LL,LL> pll;


LL c[100005],f[100005],l[100005],t[100005];
int main()
{
	LL n,d,F;
	cin >> n >> d >> F;
	LL allcarry=0;
	FORN(i,n){
		cin >> c[i] >> f[i] >> l[i];
		allcarry+=c[i];
	}
	allcarry=min(allcarry,n-1);
	LL minid=-1,minfuel=LLONG_MAX;
	FORN(i,n){
		if(l[i]>=d && c[i]>0 && f[i]<minfuel){
			minfuel=f[i];
			minid=i;
		}
	}
	LL allmove=0,fuelcost=0;
	if(minid==-1 || minfuel>F) allcarry=0;
	else{allmove=1;fuelcost=minfuel;}
	LL ct=0;
	FORN(i,n) if(l[i]>=d && i!=minid) t[ct++]=f[i];
	sort(t,t+ct);
	FORN(i,ct){
		if(fuelcost+t[i]<=F && allmove+allcarry<n){
			fuelcost+=t[i];
			allmove++;
		}
		else break;
	}
	LL ans=allmove+allcarry,anscost=fuelcost;
	ct=0;
	FORN(i,n) if(l[i]>=d && c[i]==0) t[ct++]=f[i];
	sort(t,t+ct);
	allmove=allcarry=fuelcost=0;
	FORN(i,ct){
		if(fuelcost+t[i]<=F){
			allmove++;
			fuelcost+=t[i];
		}
	}
	if(allmove>ans || (allmove==ans && fuelcost<anscost)){
		ans=allmove;
		anscost=fuelcost;
	}
	cout << ans << " " << anscost << endl;
	return 0;
}