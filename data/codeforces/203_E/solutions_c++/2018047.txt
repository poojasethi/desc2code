#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<vector>
using namespace std;
const int MAXN=100005;
struct Node
{
    int f,c;
    Node(){}
    Node(int f,int c):f(f),c(c){}
    bool operator < (const Node &a )const
    {
        if(f==a.f)
            return c<a.c;
        return f<a.f;
    }
};
vector<Node> a;
int min(int a,int b)
{
    return a>b?b:a;
}
int main()
{
    int n,d,s,i,j;
    scanf("%d%d%d",&n,&d,&s);
    int f,c,l,ld=0;
    for(i=0;i<n;i++)
    {
        scanf("%d%d%d",&c,&f,&l);
        if(l>=d)
            a.push_back(Node(f,c));
        ld=min(ld+c,n);
    }
    sort(a.begin(),a.end());
    int ans=0,cnt=0;
    for(i=0;i<a.size();i++)
    {
        if(ans+a[i].f>s)
            break;
        ans+=a[i].f;
        cnt++;
    }
    for(i=0;i<a.size();i++)
        if(a[i].c>0)
            break;
    if(i==a.size()||a[i].f>s)
    {
        printf("%d %d\n",cnt,ans);
        return 0;
    }
    int fin_cnt=min(ld+1,n),fin_ans=a[i].f,k=i;
    if(fin_cnt<cnt||(fin_cnt==cnt&&fin_ans>ans))
        fin_cnt=cnt,fin_ans=ans;
    cnt=1,ans=a[i].f;
    for(i=0;i<a.size();i++)
    {
        if(i==k)
            continue;
        if(ans+a[i].f>s)
            break;
        ans+=a[i].f;
        cnt++;
        if(min(ld+cnt,n)>fin_cnt)
            fin_cnt=min(cnt+ld,n),fin_ans=ans;
    }
    printf("%d %d\n",fin_cnt,fin_ans);
    return 0;
}