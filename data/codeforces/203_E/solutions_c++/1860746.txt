#include <stdio.h>
#include <string.h>
#include <algorithm>

using namespace std;

typedef pair<int,int> pii;
typedef long long ll;

int carry[111111];
int fuel[111111];
int limit[111111];

int pool[111111];

int main(void)
{
	int n = 0;
	int d = 0;
	int S = 0;
	scanf("%d %d %d",&n,&d,&S);

	int allcarry = 0;
	for(int i = 0;i < n;i++)
	{
		scanf("%d %d %d",&carry[i],&fuel[i],&limit[i]);
		allcarry += carry[i];
		if(allcarry >= n) allcarry = n-1;
	}

	int mincfuel = 0x7FFFFFFF;
	int minid = -1;
	for(int i = 0;i < n;i++)
	{
		if(limit[i] < d) continue;
		if(carry[i] > 0 && fuel[i] < mincfuel)
		{
			mincfuel = fuel[i];
			minid = i;
		}
	}

	int fuelcost = 0;
	int allmove = 0;
	if(minid == -1 || mincfuel > S) allcarry = 0;
	else { allmove++; fuelcost += mincfuel; }

	int ptop = 0;
	for(int i = 0;i < n;i++)
	{
		if(limit[i] < d || i == minid) continue;
		pool[ptop++] = fuel[i];
	}
	sort(pool,pool+ptop);

	for(int i = 0;i < ptop && allmove+allcarry < n;i++)
	{
		if(fuelcost + pool[i] <= S)
		{
			fuelcost += pool[i];
			allmove++;
		}
		else break;
	}
	
	int nocarry = 0;
	ptop = 0;
	for(int i = 0;i < n;i++)
	{
		if(limit[i] < d || carry[i]) continue;
		pool[ptop++] = fuel[i];
	}
	sort(pool,pool+ptop);
	int nocarrycost = 0;
	for(int i = 0;i < ptop;i++)
	{
		if(nocarrycost + pool[i] <= S)
		{
			nocarrycost += pool[i];
			nocarry++;
		}
		else break;
	}

	int ans = allmove+allcarry;
	int anscost = fuelcost;
	if(nocarry > ans || (nocarry == ans && nocarrycost < fuelcost))
	{
		ans = nocarry;
		anscost = nocarrycost;
	}

	printf("%d %d\n",ans,anscost);
	while(getchar() != EOF);
	return 0;
}
