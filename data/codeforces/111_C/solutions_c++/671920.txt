#include <stdio.h>
#include <string.h>
#include <string>
#include <algorithm>
using namespace std;

int n,m;
int dp[41][1<<6][1<<6];

int solve(int line, int pre, int need)
{
    if(line >= n) return need==0?0:n*m;

    int &ret = dp[line][pre][need];
    if(ret != -1) return ret;
    ret = m*n;
    for(int mk = 0;mk < (1<<m);mk++) if((mk & need) == need)
    {
        int next = pre | mk | (mk>>1) | (mk<<1);
        next &= (1<<m)-1;
        //printf("line : %d, choose : %d, cover : %d\n",line, mk, next);
        int t = solve(line+1, mk, ((1<<m)-1) ^ next) + __builtin_popcount(mk);
        ret = min(ret, t);
    }
    return ret;
}

int main()
{
    int i,j;
    while(scanf("%d%d",&n,&m) != EOF)
    {
        if(n < m) swap(n,m);
        memset(dp,-1,sizeof(dp));
        printf("%d\n",n*m - solve(0,0,0));
    }
    return 0;
}
