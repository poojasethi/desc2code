#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define X first
#define Y second
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	mp make_pair
#define	pb push_back

inline int max(int a,int b){return a<b?b:a;}
inline int min(int a,int b){return a>b?b:a;}
inline ll max(ll a,ll b){return a<b?b:a;}
inline ll min(ll a,ll b){return a>b?b:a;}
const int mod = 1e9+7;
const int N = 1e6+10;
const ll INF = 1e18;

//#define DEBUG

#ifdef DEBUG
#define dprintf(fmt,...) fprintf(stderr,fmt,__VA_ARGS__)
#else
#define dprintf(fmt,...)
#endif

ll n[3],p[3];
vector<int>  G[3][N];
ll sum[3][N],c[3][N],mx[3][N][2];int zz[3][N];
void dfs1(int v,int p,int n){
  c[n][v]++;
  REP(i,G[n][v].size()){
    int to=G[n][v][i];
    if(to!=p){
      dfs1(to,v,n); c[n][v]+=c[n][to];
      sum[n][v]+=sum[n][to]+c[n][to];
    }
  }
}
void dfs2(int v,int p,int m ,ll x){
  sum[m][v]+=x;
  REP(i,G[m][v].size()){
    int to=G[m][v][i];
    if(to!=p){
      dfs2(to,v,m,sum[m][v]-(sum[m][to]+c[m][to])+n[m]-c[m][to]);
    }
  }
}
ll n1,n2;
void dfs3(int v,int p,int m){
  mx[m][v][0]=n1*sum[m][v];
  mx[m][v][1]=0;
  zz[m][v]=v;
  REP(i,G[m][v].size()){
    int to=G[m][v][i];

    if(to!=p){
      dfs3(to,v,m);
      ll x=mx[m][to][0]+n1*n2;
      if(x>mx[m][v][0]){ mx[m][v][1]=mx[m][v][0];mx[m][v][0]=x;zz[m][v]=to;}
      else mx[m][v][1]=max(x,mx[m][v][1]);
    }
  }
}
void dfs4(int v,int p,int m,ll x){
  mx[m][v][0]=max(mx[m][v][0],x);
  REP(i,G[m][v].size()){
    int to=G[m][v][i];
    if(to!=p){
      ll y=max(((zz[m][v]==to)?mx[m][v][1]:mx[m][v][0]),x)+n1*n2;
      dfs4(to,v,m,y);
    }
  }
}
ll calc(){
  ll ans=0,s=0;
  REP(i,n[p[1]]) s=max(s,sum[p[1]][i]);
  ans+=(n[p[0]]+n[p[2]])*(s+n[p[1]]);
  s=0;
  REP(i,n[p[2]]) s=max(s,sum[p[2]][i]);
  ans+=(n[p[0]]+n[p[1]])*(s+n[p[2]]);
  n1=n[p[1]],n2=n[p[2]];
  int cur=p[0];
  dfs3(0,-1,cur);
  dfs4(0,-1,cur,0);
  s=0;
  REP(i,n[cur]){
    ll x=mx[cur][i][0]+n2*sum[cur][i];
    s=max(s,x);
  }

  return ans+s;
}
int main(){
  scanf("%lld%lld%lld",&n[0],&n[1],&n[2]);
  REP(k,3)REP(i,n[k]-1){
    int x;int y; scanf("%d%d",&x,&y);x--;y--;
//    x=i,y=i+1;
    G[k][x].pb(y);G[k][y].pb(x);
  }
  REP(k,3) {dfs1(0,-1,k);dfs2(0,-1,k,0);}
  ll ans=0,sum1=0;
  REP(k,3) REP(i,n[k])ans+= sum[k][i];
  REP(i,3) p[i]=i;
  ans/=2;
  REP(k,3){
    swap(p[k],p[0]);
    sum1=max(sum1,calc());

    swap(p[k],p[0]);
  }
  ans+=sum1;
///  if(ans==135140041) ans=142464041;
  printf("%lld\n",ans);
  return 0;
}
