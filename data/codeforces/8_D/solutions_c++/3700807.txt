#include<cstdio>
#include<algorithm>
#include<complex>
#include<cmath>
#define prec 1e-8
#define X real()
#define Y imag()
using namespace std;
typedef complex<double> point;
void read(point& a)
{	double x,y;
	scanf("%lf %lf",&x,&y);
	a=point(x,y);
}
int check(point a,double ra,point b,double rb,point c,double rc){
	if (abs(c-a)<=ra && abs(c-b)<=rb)
		return 1;
	b-=a;
	c-=a;
	point ang(b.X/abs(b),b.Y/abs(b));
	c /= ang;
	double x=rb*rb-ra*ra;
	x-=abs(b)*abs(b);
	x /= -2*abs(b);
	double y=ra*ra-x*x;
	if (y<-prec)
		return 0;
	y=max(y,0.0);
	y=sqrt(y);
	if (1e-7<abs(y*y+(x-abs(b))*(x-abs(b))-rb*rb))
		return 0;
	if (abs(c-point(x,y))<=rc+1e-12)
		return 1;
	if (abs(c-point(x,-y))<=rc+1e-12)
		return 1;
	return 0;
}

int can(point a,double ra,point b,double rb,point c,double rc)
{	if (ra<-prec || rb<-prec || rc<-prec)
		return 0;
	ra=max(ra,0.0);
	rb=max(rb,0.0);
	rc=max(rc,0.0);
	if (check(b,rb,a,ra,c,rc))
		return 1;
	if (check(a,ra,c,rc,b,rb))
		return 1;
	if (check(c,rc,b,rb,a,ra))
		return 1;
	return 0;
}
int main()
{	double t1,t2;
	point cinema,shop,home;
	scanf("%lf %lf",&t1,&t2);
	read(cinema);
	read(home);
	read(shop);
	t1+=abs(cinema-shop)+abs(shop-home);
	t2+=abs(cinema-home);
	if (abs(cinema-shop)+abs(shop-home)<=t2)
	{	printf("%0.5lf\n",min(t1,t2));
		return 0;
	}
	double s=0,e=min(t1,t2);
	while (prec<abs(s-e))
	{	double m=(s+e)/2;
		if (can(cinema,m,home,t2-m,shop,t1-m-abs(shop-home)))
			s=m;
		else e=m;
	}
	printf("%0.5lf\n",s);
	return 0;
}
			 	            		   	 	