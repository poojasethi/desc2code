#include<cstdio>
#include<cmath>
double t1,t2,l,r,m1,m2,eps=1e-10;
struct note {double x,y;void read(){scanf("%lf%lf",&x,&y);} } A,B,C,E,F;
double dist(double x,double y){return sqrt(x*x+y*y);}
double D(note A,note B){return dist(A.x-B.x,A.y-B.y);}
double min(double a,double b){return a<b?a:b;}
void get(note &C,note A,note B,double p)
{double d=D(A,B); C.x=A.x+p/d*(B.x-A.x),C.y=A.y+p/d*(B.y-A.y);}
double cal(double p)
{
	note E,F; get(E,B,C,p); double l=0,r=D(A,E),mid,d1,d2;
	if (r+D(E,C)<t1 && r+D(E,B)<t2) return r+min(t1-r-D(E,C),t2-r-D(E,B));
	while (l+eps<r){
		mid=(l+r)/2,get(F,A,E,mid),d1=D(F,C),d2=D(F,B);
		if (mid+d1-eps>t1 || mid+d2-eps>t2) r=mid; else l=mid;
		}
	get(F,A,E,1),d1=D(F,C),d2=D(F,B); return l;
}
int main()
{
	scanf("%lf%lf",&t1,&t2),A.read(),B.read(),C.read(); r=D(B,C),t1+=D(A,C),t2+=D(A,B);
	if (D(A,C)+D(C,B)<t2+eps) {printf("%lf\n",min(t1+D(C,B),t2)); return 0;}
	while (l+eps<r){m1=l+(r-l)/3,m2=r-(r-l)/3; if (cal(m1)>cal(m2)) r=m2; else l=m1;}
	printf("%.9lf\n",cal(l)); return 0;
}
