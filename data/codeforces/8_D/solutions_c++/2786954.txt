#include<iostream>
#include<cstdio>
#include<cmath>
#define fr(i,n) for (int i=0; i<n; i++)
using namespace std;
const double eps=1e-10;
struct Point {
    double x,y;
    Point(){}
    Point(double _x,double _y):x(_x),y(_y){}
    void ip() { cin>>x>>y; }
    Point operator+(const Point &a) { return Point(x+a.x,y+a.y); }
    Point operator-(const Point &a) { return Point(x-a.x,y-a.y); }
    Point operator*(const double &a){ return Point(x*a,y*a); }
    double l(const Point&a) { return hypot(x-a.x,y-a.y); }
} a,b,c,d,e;
double t1,t2;
double calc(double len)
{
    d=b+(c-b)*(len/b.l(c));
    double l=0, r=a.l(d), ret;
    fr(i,200)
    {
        double m=(l+r)/2.0;
        e=a+(d-a)*(m/a.l(d));
        if (e.l(a)+e.l(c)+c.l(b)<t1+eps && e.l(a)+e.l(b)<t2+eps) l=m;
        else r=m;
    }
    e=a+(d-a)*(l/a.l(d));
    ret=e.l(a)+min(t1-e.l(a)-e.l(c)-c.l(b),t2-e.l(a)-e.l(b));
    if (e.l(c)<1e-8) ret+=c.l(b);
    return ret;
}
int main()
{
    cin>>t1>>t2;
    a.ip(), b.ip(), c.ip();
    t1+=a.l(c)+b.l(c), t2+=a.l(b);
    double l=0, r=b.l(c);
    fr(i,200)
    {
        double m1=l+(r-l)/3.0, m2=m1+(r-l)/3.0;
        if (calc(m1)<calc(m2)) l=m1; else r=m2;
    }
    printf("%.10lf\n",max(calc(l),calc(b.l(c))));
    return 0;
}