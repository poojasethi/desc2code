#include<cmath>
#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#define sqr(a) ((a)*(a))
using namespace std;
const double eps=1e-10;
struct pt{double x,y;} a,b,c;
double t1,t2;
double dis(pt a,pt b){return sqrt(sqr(a.x-b.x)+sqr(a.y-b.y));}
pt operator-(pt a,pt b){return (pt){a.x-b.x,a.y-b.y};}
pt operator+(pt a,pt b){return (pt){a.x+b.x,a.y+b.y};}
pt operator*(pt a,double k){return (pt){a.x*k,a.y*k};}
double calc(double k){
    pt d=c+(b-c)*k,e;
    double l=0,r=1,mid;
    while(l+eps<r){
        mid=(l+r)*0.5;
        e=a+(d-a)*mid;
        if(dis(a,e)+dis(e,c)+dis(c,b)<t1+eps&&dis(a,e)+dis(e,b)<t2+eps)l=mid;
        else r=mid;
    }
    return dis(a,e)+min(t2-dis(a,e)-dis(e,b),t1-dis(a,e)-dis(e,c)-dis(c,b))+dis(e,b)*(fabs(c.x-e.x)<eps&&fabs(c.y-e.y)<eps);
}
int main(){
    //freopen("AC.in","r",stdin);
    //freopen("AC.out","w",stdout);
    cin>>t1>>t2>>a.x>>a.y>>b.x>>b.y>>c.x>>c.y;
    t1+=dis(a,c)+dis(c,b);
    t2+=dis(a,b);
    if(t2+eps>=dis(a,c)+dis(c,b))printf("%.12lf\n",min(t1,t2));
    else{
        double l=0,r=1;
        while(l+eps<r){
            double lm=l+(r-l)/3.0,rm=r-(r-l)/3.0;
            if(calc(lm)>calc(rm))r=rm;
            else l=lm;
        }
        printf("%.12lf\n",max(calc(l),max(calc(1),calc(0))));
    }
    return 0;
}
