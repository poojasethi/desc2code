#include<cstdio>
#include<cmath>

int ts,th,xc,yc,xh,yh,xs,ys;

double D_ch,D_cs,D_sh,Coss,Cosh,MaxRs,MaxRh,Rs,Rh,Left,Right,Middle,MaxCoss,MaxCosh,Dist,Min,C_x,C_y,Q_x,Q_y;

double MIN(double a,double b){return a<b?a:b;}

int main()
{	
	//freopen("8D.in","rb",stdin);
	//freopen("8D.out","wb",stdout);
	scanf("%d%d",&ts,&th);
	scanf("%d%d",&xc,&yc);
	scanf("%d%d",&xh,&yh);
	scanf("%d%d",&xs,&ys);
	D_ch=sqrt((xc-xh)*(xc-xh)+(yc-yh)*(yc-yh));
	D_cs=sqrt((xc-xs)*(xc-xs)+(yc-ys)*(yc-ys));
	D_sh=sqrt((xs-xh)*(xs-xh)+(ys-yh)*(ys-yh));
	if(D_ch+1.0*th-D_cs-D_sh>=0){printf("%.6lf\n",MIN(D_cs+D_sh+1.0*ts,D_ch+1.0*th));return 0;}
	MaxRs=D_cs+1.0*ts;
	MaxRh=D_ch+1.0*th;
	Left=0;Right=MIN(0.5*(MaxRs+MaxRh-D_sh),MIN(MaxRs,MaxRh));
	Coss=(D_cs*D_cs+D_sh*D_sh-D_ch*D_ch)/(2*D_sh*D_cs);
	Cosh=(D_ch*D_ch+D_sh*D_sh-D_cs*D_cs)/(2*D_sh*D_ch);
	C_x=D_cs*Coss;
	C_y=D_cs*sqrt(1.0-Coss*Coss);
	for(;Right-Left>(1e-8);)
	{	Middle=(Left+Right)*0.5;
		Rs=MaxRs-Middle;
		Rh=MaxRh-Middle;
		if(Rs-D_sh-Rh>=0)
		{	
			Min=D_ch-MaxRh;
		}
		else if(Rh-D_sh-Rs>=0)
		{	
			Min=D_cs-MaxRs;
		}
		else
		{	MaxCoss=(Rs*Rs+D_sh*D_sh-Rh*Rh)/(2*D_sh*Rs);
			MaxCosh=(Rh*Rh+D_sh*D_sh-Rs*Rs)/(2*D_sh*Rh);
			Min=1e20;
			if(Coss-MaxCoss>=0)Min=MIN(Min,D_cs-MaxRs);
			if(Cosh-MaxCosh>=0)Min=MIN(Min,D_ch-MaxRh);
			Q_x=Rs*MaxCoss;
			Q_y=Rs*sqrt(1.0-MaxCoss*MaxCoss);
			Dist=sqrt((C_x-Q_x)*(C_x-Q_x)+(C_y-Q_y)*(C_y-Q_y));
			Min=MIN(Min,Dist);
		}
		if(Middle-Min>=0)Left=Middle;
			else Right=Middle;
	}
	printf("%.6lf\n",Left);
	return 0;
}
