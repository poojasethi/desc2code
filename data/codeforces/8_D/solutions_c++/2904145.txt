#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <cmath>
using namespace std;

const double eps = 1e-10;
struct Tp { double x, y; } s, t, m;
double t1, t2, sm, mt, st, ans;

double dis(const Tp &a, const Tp &b) {
    return sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));
}

double calc(double k) {
    Tp q, p = (Tp){k * t.x + (1 - k) * m.x, k * t.y + (1 - k) * m.y};
    double sp = dis(s, p), pm = dis(p, m), pt = dis(p, t);
    if (t2 + eps > sp + pt && t1 + eps > sp + pm + mt)
        return min(t2 - pt, t1 - pm - mt);
    double l, r, mid; l = 0; r = 1;
    for (int i = 0; i < 70; ++i) {
        mid = (l + r) / 2;
        q = (Tp){mid * p.x + (1 - mid) * s.x, mid * p.y + (1 - mid) * s.y};
        double sq = dis(s, q), qm = dis(q, m), qt = dis(q, t);
        if (t2 + eps > sq + qt && t1 + eps > sq + qm + mt)
            l = mid;
        else r = mid;
    }
    return l * sp;
}

int main() {
    double l, r, lm, rm; int i;
    scanf("%lf%lf", &t1, &t2); scanf("%lf%lf", &s.x, &s.y);
    scanf("%lf%lf", &t.x, &t.y); scanf("%lf%lf", &m.x, &m.y);
    sm = dis(s, m); mt = dis(m, t); st = dis(s, t);
    t1 += sm + mt; t2 += st;
    if (t2 + eps > sm + mt)
        ans = min(t1, t2);
    else {
        l = 0; r = 1;
        for (i = 0; i < 70; ++i) {
            lm = (l + l + r) / 3; rm = (l + r + r) / 3;
            if (calc(lm) < calc(rm)) l = lm; else r = rm;
        }
        ans = calc(l);
    }
    printf("%.10lf\n", ans);
    return 0;
}
