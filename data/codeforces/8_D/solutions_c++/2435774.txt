#include <cstdio>
#include <cmath>
#include <algorithm>
using namespace std;
#define point pair<double,double>
#define C pair<double,point>
#define x first
#define y second
#define mp make_pair
C q[3];point c,h,s;double CH,SH,CS,t1,t2,r,l;
double dis(point a,point b) { return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));}
bool in(C a,C b) { return dis(a.y,b.y)<=abs(a.x-b.x)+1e-10;}
bool cross(C a,C b) { return dis(a.y,b.y)<=a.x+b.x+1e-10&&dis(a.y,b.y)+1e-10>=abs(a.x-b.x);}
point crss1(C a,C b) { double x=dis(a.y,b.y),t=atan2(b.y.y-a.y.y,b.y.x-a.y.x)+acos((a.x*a.x+x*x-b.x*b.x)/(2*a.x*x));
	return mp(a.x*cos(t)+a.y.x,a.x*sin(t)+a.y.y);}
point crss2(C a,C b) { double x=dis(a.y,b.y),t=atan2(b.y.y-a.y.y,b.y.x-a.y.x)-acos((a.x*a.x+x*x-b.x*b.x)/(2*a.x*x));
	return mp(a.x*cos(t)+a.y.x,a.x*sin(t)+a.y.y);}
bool check(double r) {
	q[0]=mp(r,c);q[1]=mp(max(0.,CH+t2-r),h);q[2]=mp(max(0.,CS+t1-r),s);sort(q,q+3);
	for (int i=0;i<2;i++) for (int j=i+1;j<=2;j++) {
		if (!in(q[j],q[i])&&!cross(q[j],q[i])) return 0;
		if (in(q[j],q[i])) return in(q[i],q[3-i-j])||cross(q[i],q[3-i-j]); else 
		if (cross(q[j],q[i])&&(in(q[3-i-j],mp(0,crss1(q[j],q[i]))))||in(q[3-i-j],mp(0,crss2(q[j],q[i]))))return 1;
	}
	return 0;
}
int main(){
	scanf("%lf%lf%lf%lf%lf%lf%lf%lf%lf",&t1,&t2,&c.x,&c.y,&h.x,&h.y,&s.x,&s.y);
	CH=dis(c,h);CS=dis(c,s);SH=dis(s,h);
	if (CH+t2>=CS+SH) { printf("%.10f\n",min(CH+t2,CS+SH+t1));return 0;}
	l=0;r=min(CH+t2,CS+SH+t1);
	while (r-l>1e-6)
		if (check((l+r)/2)) l=(l+r)/2; else r=(l+r)/2;
	printf("%.10f\n",r);
}