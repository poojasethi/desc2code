#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;
const double eps=1e-12;
double t1,t2;

/*void dp(double x)
{
	cout<<x<<endl;
}*/

struct point
{
	double x,y;
};
point c,h,s;
double ch,sh,cs;
double max(double a,double b)
{
	return a>b?a:b;
}

double min(double a,double b)
{
	return a<b?a:b;
}

double d(point a,point b)
{
	return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));
}


double calc(double k)
{
	point p;
	p.x=s.x*(1-k)+h.x*k;
	p.y=s.y*(1-k)+h.y*k;
	double cp=d(c,p),ph=d(p,h),ps=d(p,s);
	if (t2+eps>cp+ph && t1+eps>cp+ps+sh)
	{
		return min(t2-ph,t1-ps-sh);
	}
	double ll=0,rr=1,mid;
	while (rr-ll>eps)
	{
		mid=(ll+rr)/2;
		point f;
		f.x=c.x*(1-mid)+p.x*mid;
		f.y=c.y*(1-mid)+p.y*mid;
		if (d(c,f)+d(f,h)<t2+eps && d(c,f)+d(f,s)+sh<t1+eps)
			ll=mid;
		else
			rr=mid;
	}
	return cp*((ll+rr)/2);
}

int main()
{
	
	
	cin>>t1>>t2;

	cin>>c.x>>c.y;
	cin>>h.x>>h.y;
	cin>>s.x>>s.y;
	ch=d(c,h),sh=d(s,h),cs=d(c,s);
	
	cout.setf(ios::fixed,ios::floatfield);
	cout.precision(5);
	
	if (ch+t2+eps>cs+sh)
	{
		cout<<min(ch+t2,cs+sh+t1)<<endl;
		return 0;
	}
	t1=cs+sh+t1; t2=ch+t2;
	double ans=calc(0);
	ans=max(ans,calc(1));
	double ll=0,rr=1,ml,mr;
	while (rr-ll>eps)
	{
		ml=ll*2/3+rr/3;
		mr=ll/3+rr*2/3;
		if (calc(ml)>calc(mr))
			rr=mr;
		else
			ll=ml;
	}
	
	ans=max(ans,calc((ll+rr)/2));
	cout<<ans<<endl;
}
