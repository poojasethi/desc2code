#include<cstdio>
#include<algorithm>
#include<cmath>
using namespace std;
double t1,t2;
double s,S,c,C,h,H,x,y,z,a,b;
double dis(double x,double y,double X,double Y)
{
	return sqrt((x-X)*(x-X)+(y-Y)*(y-Y));
}
void Gans()
{
	double L=0,R=C,M,ans;
	while ( L+1e-9<R )
	{
		M=(L+R)*0.5;
		if ( C-M+sqrt(M*M+(h-c)*(h-c))>z+t1 ) L=M;else R=M;
	}
	ans=z+t1-sqrt(L*L+(h-c)*(h-c));
	printf("%.7lf\n",ans);
}
void change()
{
	h=x*0.5,s=-h;
	c=(x*x+y*y-z*z)*0.5/x;	
	C=sqrt(y*y-c*c);
	c+=s;
	a=(t2+y-t1-z)*0.5,b=x*x*0.25-a*a;
	bool K=0;
	double E=z+t1;
	if ( a<0 ) c=-c,a=-a,K=1,E=y+t2;
	if ( a<1e-9 ) {Gans();return;}
	double L=a,R=max(h,c),m1,m2,A1,A2,Y,LL=a*a/h;
	while( L+1e-9<R)
	{
		m1=L+(R-L)/3;
		Y=sqrt(m1*m1*b/(a*a)-b);
		A1=(m1-LL)*h/a+sqrt((c-m1)*(c-m1)+(C-Y)*(C-Y));
		m2=R-(R-L)/3;
		Y=sqrt(m2*m2*b/(a*a)-b);
		A2=(m2-LL)*h/a+sqrt((c-m2)*(c-m2)+(C-Y)*(C-Y));
		if ( A1<A2 ) R=m2;else L=m1;
	}
	R=L,L=a;
	for(int i=1;i<=300;++i)
	{
		m1=0.5*(R+L);
		Y=sqrt(m1*m1*b/(a*a)-b);
		A1=(m1-LL)*h/a+sqrt((c-m1)*(c-m1)+(C-Y)*(C-Y));
		if ( A1<E ) R=m1;else  L=m1;
	}	
	double X=L;
	Y=sqrt(X*X*b/(a*a)-b);
	if ( K ) X=-X,c=-c;
		A1=(X-LL)*h/a+sqrt((c-X)*(c-X)+(C-Y)*(C-Y));
	A1=	sqrt((X-s)*(X-s)+Y*Y)+sqrt((c-X)*(c-X)+(C-Y)*(C-Y));
	double ans=z+t1-sqrt((X-h)*(X-h)+Y*Y);
	printf("%.7lf\n",ans);
}
int main()
{
	scanf("%lf%lf",&t2,&t1);
	scanf("%lf%lf",&c,&C);
	scanf("%lf%lf",&h,&H);
	scanf("%lf%lf",&s,&S);
	z=dis(c,C,h,H),y=dis(c,C,s,S),x=dis(h,H,s,S);
	if ( x+y<=z+t1 ) {
		printf("%.5lf\n",min(x+y+t2,z+t1));		
		return 0;
	}
	if ( y+t2>=z+t1+x ){
		printf("%.5lf\n",z+t1);
		return 0;
	}
	change();
	return 0;
}