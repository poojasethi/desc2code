from math import *
ZERO = 1E-10
def getfloats(): return map(float, raw_input().split())

def inter((A, rA), (B, rB)):
	u = B - A
	l = abs(u)
	if abs(rA - rB) - ZERO >= l: return 1
	p = (l * l + rA * rA - rB * rB) / (2 * l)
	q = rA * rA - p * p
	if q < 0:
		if q < -ZERO: return
		q = 0
	u /= l
	v = u * 1j
	u *= p
	v *= sqrt(q)
	return [A + u + v, A + u - v]

def check():
	x, y, z = (A, m), (B, l2 - m), (C, l1 - m)
	for i in xrange(3):
		t = inter(x, y)
		if not t: return
		if t == 1: return inter(x if x[1] < y[1] else y, z)
		for P in t:
			if abs(P - z[0]) - ZERO <= z[1]: return True
		x, y, z = y, z, x

l1, l2 = getfloats()
A, B, C = [complex(*getfloats()) for i in xrange(3)]
a, b, c = abs(B - A), abs(C - A), abs(B - C)
l1 += b
l2 += a

l, r = 0, min(l1, l2)
if l2 >= b + c: l = min(l1 + c, l2)
while r - l > ZERO:
	m = (l + r) * 0.5
	if check(): l = m
	else: r = m

print l