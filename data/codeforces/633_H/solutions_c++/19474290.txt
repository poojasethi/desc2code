#include<cstdio>
#include<cstring>
#include<algorithm>
#define fi first
#define se second
using namespace std;
const int M=3e4+5;
int n,m,f[M];
struct node{
	int id,val;
	bool operator<(const node &tmp)const{
		return val<tmp.val;
	}
}A[M];
inline void rd(int &res){
	int k=1;char c;
	res=0;
	while(c=getchar(),c<48);
	do res=(res<<1)+(res<<3)+(c^48);
	while(c=getchar(),c>=48);
}
inline void print(long long x){
	if(x==0)return ;
	print(x/10);
	putchar((x%10)^48);
}
inline void sc(long long x){
	if(x==0)putchar('0');
	print(x);
	putchar('\n');
}
inline void Add(int &x,int y){
	x+=y;if(x>=m)x-=m;
}
int main(){
	int i,j,k,l,r,Q;
	rd(n);rd(m);
	for(i=1;i<=n;i++){
		rd(A[i].val);A[i].id=i;
	}
	f[1]=f[2]=1%m;
	for(i=3;i<=n;i++)f[i]=(f[i-1]+f[i-2])%m;
	sort(A+1,A+1+n);
	rd(Q);
	for(i=1;i<=Q;i++){
		rd(l);rd(r);
		int now=0,pre=-1;
		long long ans=0;
		for(j=1;j<=n;j++){
			if(A[j].id<=r&&A[j].id>=l&&A[j].val>pre){
				ans+=1ll*f[++now]*A[j].val;
				pre=A[j].val;
				if(now==r-l+1)break;
			}
		}
		ans%=m;
		sc(ans);
	}
	return 0;
} 