#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define fore(i, n) for(int i = 0; i < n; i++)
#define lop(i, n) for(int i = 1; i <= n; i++)
#define ops(i, n) for(int  i = n-1; i >= 0 ; i--)
#define forall(it, g)  for(typeof(g.begin()) it = g.begin(); it != g.end(); it++)
#define PI  3.141592653589793
#define mod  1000000007
#define inf 2000000000
#define INF -2000000000000000
#define modulo 1000000009
#define MH 1234533333333337
#define MH2 7779845079489377
#define enter endl
//ios_base::sync_with_stdio(0);cin.tie(0); cout.tie(0);
using namespace std;
typedef vector <int> vi;
typedef vector <vector <int> > vv;
typedef vector <pair <int,int > >vp;
typedef vector <vector <pair <int ,int > > > vvp;
typedef vector <pair <int ,pair <int ,int > > > vpp;
typedef pair<int,int> pp;
typedef long long ll;
const int M = 30005;
int f[M];
int n, m;
pp p[M];
inline void writeInt (int n)
{
  int N = n, rev, count = 0;
  rev = N;
  if (N == 0) { putchar('0'); putchar('\n'); return ;}
  while ((rev % 10) == 0) { count++; rev /= 10;}
  rev = 0;
  while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}
  while (rev != 0) { putchar(rev % 10 + '0'); rev /= 10;}
  while (count--) putchar('0');
  putchar('\n');
}
inline int FAST_IO()
{
  char ch;
  int val=0;
  ch=getchar();
  while(ch == '\n' || ch == ' ')
    ch=getchar();
  val=0;
  while(ch >= '0' && ch <= '9')
  {
    val=(val*10)+(ch-'0');
    ch=getchar();
  }
  return val;
}
void calc()
{
    f[0] = f[1] = 1;
    for(int i = 2; i <= n; i++)
    {
        f[i] = f[i - 1] + f[i - 2];
        if(f[i] > m)
        {
            f[i]-=m;
        }
    }
}
int main()
{
    //ios_base::sync_with_stdio(0);cin.tie(0); cout.tie(0);
    n = FAST_IO();
    m = FAST_IO();
    calc();
    fore(i, n)
    {
        p[i].f = FAST_IO();
        p[i].s = i + 1;
    }
    sort(p, p + n);
    int q;
    q = FAST_IO();
    while(q--)
    {
        int l, r;
        l = FAST_IO();
        r = FAST_IO();
        ll ans = 0;
        int c = 0;
        int last = -1;
        fore(i, n)
        {
            int x = p[i].s, y = p[i].f;
            if(x >= l && x <= r && y > last)
            {
                ans = ans + 1LL * y * f[c++];
                last = y;
            }
        }
        writeInt(ans%m);
    }
    return 0;
}
