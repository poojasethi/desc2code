#include <cstdio>
#include <cmath>
#include <cstring>
#include <algorithm>

using namespace std;

int x[100010], y[100010];
int h[2000010][2], sum[2000010];
__int64 num;

inline double sqr( double x )
{
	return x*x;
}

double solve( int n )
{
	memset(h, -1, sizeof(h));
	memset(sum, 0, sizeof(sum));

	double t;
	int i, j;
	for( i = 0; i < n; ++i )
	{
		if( x[i+1] > x[i] )
		{
			t = (y[i+1] - y[i] + 0.)/(x[i+1] - x[i]);
			for( int j = x[i]; j <= x[i+1]; ++j )
				h[j][0] = (int)ceil(y[i] + t*(j-x[i]));
		}
		else if( x[i+1] < x[i] )
		{
			t = (y[i+1] - y[i] + 0.)/(x[i+1] - x[i]);
			for( j = x[i+1]; j <= x[i]; ++j )
				h[j][1] = (int)floor(y[i] + t*(j-x[i]));
		}
	}

	for( i = 0; i <= 2000000; ++i )	if( h[i][0] >= 0 )
	{
		sum[ h[i][0] ] += 1;
		sum[ h[i][1]+1 ] += -1;
	}

	double t1 = 0, t2 = 0, s, res = 0;
	num = sum[0];
	for( i = 1; i <= 2000000; ++i )
		sum[i] += sum[i-1], num += sum[i];

	s = num;
	for( i = 0; i <= 2000000; ++i )	if( sum[i] )
	{
		t1 += sum[i]/s * sqr(i-1000000);
		t2 += sum[i]/s * (i-1000000);
	}

	for( i = 0; i <= 2000000; ++i )	if( sum[i] )
		res += sum[i]/s*(sqr(i-1000000) + t1 - 2*(i-1000000)*t2);

	return res;
}

void gao( int n )
{
	int i;
	__int64 area = 0;

	x[n] = x[0], y[n] = y[0];
	for( i = 0; i < n; ++i )
		area += (__int64)x[i]*y[i+1] - (__int64)y[i]*x[i+1];
	if( area < 0 )
	{
		reverse(x, x+n);
		reverse(y, y+n);
		x[n] = x[0], y[n] = y[0];
	}
}

int main()
{
	int n, i;
	double t, s1, s2;

	while( scanf("%d", &n) != EOF )
	{
		for( i = 0; i < n; ++i )
		{
			scanf("%d %d", &x[i], &y[i]);
			x[i] += 1000000;
			y[i] += 1000000;
		}

		gao(n);
		s1 = solve(n);
		for( i = 0; i <= n; ++i )
			swap(x[i], y[i]);

		gao(n);
		s2 = solve(n);

		printf("%.10lf\n", (s1+s2)*0.5/(num-1)*num);
	}

	return 0;
}