#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<cstdio> 
using namespace std;
#define N 2100000
#define INF 1000000000
#define eps 1e-9
int x[N],y[N],n,Min[N],Max[N];
long long s[N];
double ans=0,p[N],sum1[N],sum2[N];
void solved(){
     int m=0;
     for(int i=1;i<=n;i++)m=max(m,x[i]);
     x[n+1]=x[1];y[n+1]=y[1];
     for(int i=1;i<=m;i++)Min[i]=INF,Max[i]=0;
     for(int i=1;i<=n;i++){
       int t1=x[i],t2=x[i+1],t3=y[i],t4=y[i+1];
       if(t1>t2)swap(t1,t2),swap(t3,t4);
       if(t1==t2){
         Min[t1]=min(Min[t1],t3);
         Max[t1]=max(Max[t1],t3);
         Min[t1]=min(Min[t1],t4);
         Max[t1]=max(Max[t1],t4);
         continue;
       }
       for(int j=t1;j<=t2;j++){
         double y=(double)(t2-j)*t3/(t2-t1)+(double)(j-t1)*t4/(t2-t1);
         Max[j]=max(Max[j],(int)floor(y+eps));
         Min[j]=min(Min[j],(int)ceil(y-eps));
       }
     }
     for(int i=1;i<=m;i++)s[i]=Max[i]-Min[i]+1+s[i-1];
     for(int i=1;i<=m;i++){
             p[i]=(double)(s[i]-s[i-1])/(s[m]-1);
             sum1[i]=p[i]*i;
             sum2[i]=p[i]*i*i;
             sum1[i]+=sum1[i-1];
             sum2[i]+=sum2[i-1];
             p[i]+=p[i-1];
             }
     for(int i=1;i<=m;i++){
       double pp=(double)(s[i]-s[i-1])/s[m];
       ans+=pp*i*i*(p[i-1]+p[m]-p[i])
          +(sum2[m]-sum2[i]+sum2[i-1])*pp
          -2*(sum1[m]-sum1[i]+sum1[i-1])*i*pp;
     }
}
int main(){
    scanf("%d",&n);
    int minx=INF,miny=INF;
    for(int i=1;i<=n;i++){
      scanf("%d%d",&x[i],&y[i]);
      minx=min(minx,x[i]);
      miny=min(miny,y[i]);
      }
    minx--;
    miny--;
    for(int i=1;i<=n;i++)x[i]-=minx,y[i]-=miny;
    solved();
    for(int i=1;i<=n;i++)swap(x[i],y[i]);
    solved();
    printf("%.8lf\n",ans/2);
    return 0;
}
