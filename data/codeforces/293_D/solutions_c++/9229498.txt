#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

const int N = 2000005;
const double eps = 1e-6;

#define fo(i , st , en) for (int i = st; i <= en; i++)
#define Me(x , y) memset(x , y , sizeof(x))

struct _two{
	int a , b;
}a[N];

int n;
int num[N];
double Min[N] , Max[N] , sum[N] , sum1[N];
double ans , s;

void Work(_two x , _two y){
	if (x.a > y.a) swap(x , y);
	if (x.a == y.a) return;
	double t = (y.b - x.b) / (0. + y.a - x.a) , cur = x.b;
	fo (i , x.a , y.a){
		Min[i] = min(Min[i] , cur); Max[i] = max(Max[i] , cur);
		cur += t;
	}
}

void Calc(){
	a[0] = a[n];
	fo (i , 0 , N - 1) Min[i] = N , Max[i] = 0;
	fo (i , 1 , n) Work(a[i - 1] , a[i]);
	Me(num , 0); s = 0;
	fo (i , 0 , N - 1)
		if (Min[i] < Max[i] + eps){
			int L = (int)(Min[i] - eps) + 1 , R = (int)(Max[i] + eps);
			s += num[i] = R - L + 1;
		}
	sum[0] = sum1[0] = 0;
	fo (i , 1 , N - 1) sum[i] = sum[i - 1] + num[i];
	fo (i , 1 , N - 1) sum1[i] = sum1[i - 1] + sum[i] + sum[i - 1];
	double cur = 0;
	fo (i , 1 , N - 1){
		ans += num[i] * cur; cur += sum1[i];
	}
}

int main(){
	scanf("%d" , &n);
	fo (i , 1 , n){
		scanf("%d%d" , &a[i].a , &a[i].b);
		a[i].a += N / 2; a[i].b += N / 2;
	}
	Calc();
	fo (i , 1 , n) swap(a[i].a , a[i].b);
	Calc();
	printf("%.7lf\n" , ans / (s * (s - 1)));
	return 0;
}
