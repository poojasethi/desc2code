#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long LL;
#define L 3000005
int n,up[L],low[L],cnt[L];
double ans;
#define N 101000
struct point{
	int x,y;
}P[N];
double tot;
double solve(){
	double area=0;
	tot=0;
	for(int i=0;i<n;i++)
		area+=P[i].x*P[(i+1)%n].y-P[i].y*P[(i+1)%n].x;
	if(area<0)reverse(P,P+n);
	P[n]=P[0];
	int mx=0;
	for(int i=0;i<n;i++)mx=max(P[i].x,mx);
	for(int i=0;i<n;i++){
		LL x1=P[i].x,x2=P[i+1].x,y1=P[i].y,y2=P[i+1].y;
		if(x1<x2){
			for(int j=x1;j<=x2;j++)
				low[j]=(y1*(x2-x1)+((y2-y1)*(j-x1)+x2-x1-1))/(x2-x1);
		}else if(P[i].x>P[i+1].x){
			for(int j=P[i+1].x;j<=P[i].x;j++)
				up[j]=(y2*(x1-x2)+(y1-y2)*(j-x2))/(x1-x2);
		}
	}
	for(int i=0;i<=mx;i++){
		cnt[i]=up[i]-low[i]+1;
		tot+=cnt[i];
	}
	double ans1=0,ans2=0;
	for(int i=0;i<=mx;i++){
		ans1+=(double)cnt[i]*i*i;
		ans2+=(double)cnt[i]*i;
	}
	return (ans1*tot-ans2*ans2);
}
int main(){
	scanf("%d",&n);
	for(int i=0;i<n;i++)
		scanf("%d%d",&P[i].x,&P[i].y);
	int id=P[0].x;
	for(int i=0;i<n;i++)
		if(P[i].x<id)id=P[i].x;
	for(int i=0;i<n;i++)
		P[i].x-=id;
	id=P[0].y;
	for(int i=0;i<n;i++)
		if(P[i].y<id)id=P[i].y;
	for(int i=0;i<n;i++)
		P[i].y-=id;
	ans+=solve();
	for(int i=0;i<=n;i++)
		swap(P[i].x,P[i].y);
	ans+=solve();
	printf("%.10f\n",ans/tot/(tot-1));
}
