#include <iostream>
#include <cmath>
#include <cstdio>
#include <algorithm>
using namespace std;

#define maxn 100020

int n,i,x[maxn],y[maxn],c[2000010],low,high,kol[2000010],j;
double a1,b1,c1,a2,b2,c2,nx2,all,all2,ans,a[2000010][6];

void buildLine(double x1,double y1,double x2,double y2,double&a,double&b,double&c){
	a=y2-y1;
	b=x1-x2;
	c=-a*x1-b*y1;
}

void Solve(){
	for(i=1;i<=n;i++){
		buildLine(x[i],y[i],x[i+1],y[i+1],a1,b1,c1);
		if(x[i]!=x[i+1])for(j=min(x[i],x[i+1]);j<=max(x[i],x[i+1]);j++){
			buildLine(j,0,j,1,a2,b2,c2);
			nx2=-(1.0*a1*1.0*c2-1.0*a2*c1*1.0)/(1.0*a1*1.0*b2-1.0*a2*1.0*b1);
			a[j][++c[j]]=nx2;			
		}
	}
	for(i=0;i<=2000000;i++)if(c[i]){
		sort(a[i]+1,a[i]+c[i]+1);
		low=ceil(a[i][1]-1e-9);
		high=floor(a[i][c[i]]+1e-9);
		kol[i]=high-low+1;
		all+=kol[i];
		all2+=kol[i]*1.0*i;
	}
	for(i=0;i<=2000000;i++)if(c[i]){
		ans+=1.0*kol[i]*1.0*i*1.0*i*(1.0*all-1.0*kol[i]);
		ans-=1.0*kol[i]*1.0*i*(all2-kol[i]*1.0*i);
	}
}

int main (int argc, char * const argv[]) {
//	freopen("in.txt","r",stdin);
	scanf("%d",&n);
	for(i=1;i<=n;i++){
		scanf("%d%d",&x[i],&y[i]);
		x[i]+=1000000;y[i]+=1000000;
	}
	x[n+1]=x[1];y[n+1]=y[1];
	Solve();
	for(i=1;i<=n+1;i++)swap(x[i],y[i]);
	all=all2=0;
	for(i=0;i<=2000000;i++)c[i]=kol[i]=0;
	Solve();
	printf("%.10lf\n",ans/(1.0*all*(all-1)));
    return 0;
}
