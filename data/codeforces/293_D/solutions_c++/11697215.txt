#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
using namespace std;
typedef long long LL;
const int SIZEN=200010;
const LL INF=1e10;
class Point{
public:
	LL x,y;
};
void print(const Point &p){
	cout<<"("<<p.x<<" "<<p.y<<")";
}
LL cross(const Point &a,const Point &b){
	return a.x*b.y-b.x*a.y;
}
int N;
Point P[SIZEN];
double calc_cut(const Point &a,const Point &b,LL x){
	return a.y+(b.y-a.y)*(x-a.x+0.0)/(b.x-a.x);
}
double solve(void){//Ҫ��P[1]~P[N]��ʱ������,֮����һ�ݷ���P[]
	LL L=INF,R=-INF;
	for(int i=1;i<=N;i++){
		L=min(L,P[i].x);
		R=max(R,P[i].x);
	}
	double S0=0,S1=0,S2=0;//0~2�׼����
	int ld=1;
	for(int i=2;i<=N;i++) if(P[i].x<P[ld].x||(P[i].x==P[ld].x&&P[i].y<P[ld].y)) ld=i;
	for(LL x=L;x<=R;x++){
		while(P[ld].x<x) ld++;
		double y;
		if(P[ld].x==x) y=P[ld].y-1;
		else y=ceil(calc_cut(P[ld-1],P[ld],x))-1;
		S0-=y;
		S1-=y*x;
		S2-=y*x*x;
	}
	int lu=1;
	for(int i=2;i<=N;i++) if(P[i].x<P[lu].x||(P[i].x==P[lu].x&&P[i].y>P[lu].y)) lu=i;
	lu+=N;
	for(LL x=L;x<=R;x++){
		while(P[lu].x<x) lu--;
		double y;
		if(P[lu].x==x) y=P[lu].y;
		else y=floor(calc_cut(P[lu+1],P[lu],x));
		S0+=y;
		S1+=y*x;
		S2+=y*x*x;
	}
	return (S2*S0-S1*S1)/S0/(S0-1);
}
void init(void){
	scanf("%d",&N);
	LL area=0;
	for(int i=1;i<=N;i++){
		scanf("%I64d%I64d",&P[i].x,&P[i].y);
		P[i+N]=P[i];
	}
	for(int i=1;i<=N;i++) area+=cross(P[i],P[i+1]);
	if(area<0) reverse(P+1,P+1+2*N);
}
int main(){
	//freopen("t1.in","r",stdin);
	init();
	double ans=0;
	ans+=solve();
	for(int i=1;i<=2*N;i++) swap(P[i].x,P[i].y);
	reverse(P+1,P+1+2*N);
	ans+=solve();
	printf("%.10lf\n",ans);
	return 0;
}
