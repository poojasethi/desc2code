#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<cmath>
#define int64 long long
#define db double
#define N 1000001
using namespace std;
struct ppp{
	int x,y;
} p[370000];
int64 num,res;
db ans;
int i,j,k,D[N*2+10],n,l,r,maxx;
void workx(){
	num=0; res=0;
	k=n+1; maxx=p[1].x;
	for(i=n+2;i<=n+n;++i){
		if(p[i].x<p[k].x)k=i;
		maxx=max(maxx,p[i].x);
	}
	l=r=k;
	for(i=p[k].x;i<=maxx;++i){
		while(l-1>=1 && p[l-1].x>=p[l].x && p[l-1].x<=i)--l;
		while(r+1<=n*3 && p[r+1].x>=p[r].x && p[r+1].x<=i)++r;
		db u=db(p[l-1].y-p[l].y)/(p[l-1].x-p[l].x)*(i-p[l].x)+p[l].y;
		db d=db(p[r+1].y-p[r].y)/(p[r+1].x-p[r].x)*(i-p[r].x)+p[r].y;
		if(u<d)swap(u,d);
		D[i+N]=int(floor(u)-ceil(d))+1;
		num+=D[i+N];
		res+=(int64)i*D[i+N];
	}
	for(j=p[k].x;j<=maxx;++j){
		ans+=db(num-1)*j*j*D[j+N];
		ans-=db(res-j)*j*D[j+N];
	}
}
void worky(){
	num=0; res=0;
	k=n+1; maxx=p[1].y;
	for(i=n+2;i<=n+n;++i){
		if(p[i].y<p[k].y)k=i;
		maxx=max(maxx,p[i].y);
	}
	l=r=k;
	for(i=p[k].y;i<=maxx;++i){
		while(l-1>=1 && p[l-1].y>=p[l].y && p[l-1].y<=i)--l;
		while(r+1<=n*3 && p[r+1].y>=p[r].y && p[r+1].y<=i)++r;
		db u=db(p[l-1].x-p[l].x)/(p[l-1].y-p[l].y)*(i-p[l].y)+p[l].x;
		db d=db(p[r+1].x-p[r].x)/(p[r+1].y-p[r].y)*(i-p[r].y)+p[r].x;
		if(u<d)swap(u,d);
		D[i+N]=int(floor(u)-ceil(d))+1;
		num+=D[i+N];
		res+=(int64)i*D[i+N];
	}
	for(j=p[k].y;j<=maxx;++j){
		ans+=db(num-1)*j*j*D[j+N];
		ans-=db(res-j)*j*D[j+N];
	}
}

int main(){
	scanf("%d",&n);
	for(i=1;i<=n;++i){
		scanf("%d%d",&p[i].x,&p[i].y);
		p[i+n]=p[i+n+n]=p[i];
	}
	p[0]=p[n]; p[n+n+n+1]=p[1];
	workx();
	worky();
	printf("%.10lf\n",ans/num/(num-1));
}
