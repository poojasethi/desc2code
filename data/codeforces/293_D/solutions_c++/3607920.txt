//#pragma comment(linker, "/STACK:134217728")

#include <iostream>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <memory>
#include <cctype>
#include <string>
#include <vector>
#include <list>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
#include <algorithm>
#include <numeric>
using namespace std;

typedef long long Int;
typedef pair<int,int> PII;
typedef vector<int> VInt;

#define FOR(i, a, b) for(i = (a); i < (b); ++i)
#define RFOR(i, a, b) for(i = (a) - 1; i >= (b); --i)
#define CLEAR(a, b) memset(a, b, sizeof(a))
#define SIZE(a) int((a).size())
#define ALL(a) (a).begin(),(a).end()
#define PB push_back
#define MP make_pair

#define MAX (1 << 21)

int Min[MAX];
int Max[MAX];
int X[MAX];
int Y[MAX];

double f(int n)
{
	int i, j;
	FOR(i, 0, MAX)
	{
		Min[i] = MAX;
		Max[i] = 0;
	}

	FOR(i, 0, n)
	{
		int x1 = X[i];
		int y1 = Y[i];
		int x2 = X[(i + 1) % n];
		int y2 = Y[(i + 1) % n];

		if(PII(x1, y1) > PII(x2, y2))
		{
			swap(x1, x2);
			swap(y1, y2);
		}

		if(x1 == x2)
		{
			Min[x1] = min(Min[x1], y1 - 1);
			Max[x1] = max(Max[x1], y2 + 1);
			continue;
		}

		FOR(j, x1, x2 + 1)
		{
			Int l = x2 - j;
			Int r = j - x1;
			Int d = x2 - x1;
			Int v = y1*l + y2*r;

			Min[j] = min(Min[j], int((v - 1)/d));
			Max[j] = max(Max[j], int((v + d)/d));
		}
	}

	long double sum0 = 0;
	long double sum1 = 0;
	long double sum2 = 0;
	FOR(i, 0, MAX)
		if(Min[i] < Max[i])
		{
			Int cnt = Max[i] - Min[i] - 1;
			Int value = i;
			sum0 += cnt;
			sum1 += cnt*value;
			sum2 += cnt*value*value;
		}

	return sum0 < 1.5 ? 0.0 : (sum2*sum0 - sum1*sum1) / (sum0*(sum0 - 1));
}

int main()
{
	int n;
	scanf("%d", &n);

	int i, j;
	FOR(i, 0, n)
		scanf("%d%d", &X[i], &Y[i]);

	FOR(i, 0, n)
	{
		X[i] += MAX / 2;
		Y[i] += MAX / 2;
	}

	double res = 0;
	FOR(i, 0, 2)
	{
		res += f(n);
		FOR(j, 0, n)
			swap(X[j], Y[j]);
	}

	printf("%.11lf\n", res);
	return 0;
};
