#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
const int N = 105000;
const int T = 1000000;
const int M = 2005000;
const double mi = 1e-8;
const int inf = 1987654321;
int n;
int cha;
int a[N],b[N];
int minz[M],maxz[M];
int l,r;
int cc[M];
double ans=0.0;
long long m;
void getData()
{
	int i;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	{
		scanf("%d%d",&a[i],&b[i]);
		a[i]+=T;
		b[i]+=T;
	}
	a[n+1]=a[1];
	b[n+1]=b[1];
}
double fang()
{
	double res=0;
	int i;
	for(i=l;i<=r;i++)
	{
		double now=i-cha;
		now*=i-cha;
		now*=cc[i];
		now*=m;
		res+=now;
	}
	return res;
}
double ji()
{
	double res=0.0;
	int i;
	for(i=l;i<=r;i++)
	{
		double now=i-cha;
		now*=cc[i];
		res+=now;
	}
	res*=res;
	return res;
}
void Do(int x[],int y[])
{
	memset(minz,0x3f,sizeof minz);
	memset(maxz,0xc0,sizeof maxz);
	l=inf;
	r=-inf;
	int i,j;
	for(i=1;i<=n;i++)
	{
		int p=x[i];
		int q=y[i];
		int s=x[i+1];
		int t=y[i+1];
		if(p>s)
		{
			swap(p,s);
			swap(q,t);
		}
		l=min(l,p);
		r=max(r,s);
		for(j=p;j<=s;j++)
		{
			if(p==s)
			{
				if(q>t)
					swap(q,t);
				minz[j]=min(minz[j],q);
				maxz[j]=max(maxz[j],t);
				continue;
			}
			double now=t-q;
			now*=j-p;
			now/=s-p;
			now+=q;
			int zheng=floor(now+0.5);
			if(now-zheng<mi && zheng-now<mi)
			{
				minz[j]=min(minz[j],zheng);
				maxz[j]=max(maxz[j],zheng);
			}
			else
			{
				int qz=floor(now);
				minz[j]=min(minz[j],qz+1);
				maxz[j]=max(maxz[j],qz);
			}
		}
	}
	for(i=l;i<=r;i++)
		cc[i]=maxz[i]-minz[i]+1;
	m=0;
	for(i=l;i<=r;i++)
		m+=cc[i];
	int aim=(m+1)/2;
	for(i=l;i<=r;i++)
	{
		if(aim<=cc[i])
			break;
		aim-=cc[i];
	}
	cha=i;
	ans+=fang();
	ans-=ji();
}
void print()
{
	ans/=m;
	ans/=(m-1);
	printf("%.8f\n",ans);
}
int main()
{
	getData();
	Do(a,b);
	Do(b,a);
	print();
	return 0;
}
