#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <string>
using namespace std;
const double finf=1e208,eps=1e-9;
const int Maxn=100005,MaxN=2000005,N=1000000,inf=999999999+208;
int n;
double ans=0,min_y[MaxN],max_y[MaxN];
double *miny=min_y+N,*maxy=max_y+N;

inline int get() {
	bool f=0; char ch;
	while (!isdigit(ch=getchar())) f|=ch=='-';
	int v=ch-48;
	while (isdigit(ch=getchar())) v=v*10+ch-48;
	return f?-v:v;
}

template <class T,class T2>
inline void gmin(T &x,const T2 &y) {
	if (x>y) x=y;
}

template <class T,class T2>
inline void gmax(T &x,const T2 &y) {
	if (x<y) x=y;
}

struct Point{
	int x,y;
}p[Maxn];

double solve() {
	int minx=inf,maxx=-inf;
	for (int i=1;i<=n;i++) gmin(minx,p[i].x),gmax(maxx,p[i].x);
	for (int i=minx;i<=maxx;i++) miny[i]=finf,maxy[i]=-finf;
	for (int i=1;i<=n;i++) {
		Point s=p[i],t=p[i==n?1:i+1];
		if (s.x==t.x) {
			gmin(miny[s.x],min(s.y,t.y));
			gmax(maxy[s.x],max(s.y,t.y));
		}
		else {
			if (s.x>t.x) swap(s,t);
			double y,a=1./(t.x-s.x);
			for (int i=s.x;i<=t.x;i++) {
				y=s.y+(i-s.x)*a*(t.y-s.y);
				gmin(miny[i],y);
				gmax(maxy[i],y);
			}
		}
	}
	double tot=0,res=0,s1=0,s2=0,s3=0,cnt;
	for (int i=minx;i<=maxx;i++) {
		tot+=cnt=floor(maxy[i]+eps)-floor(miny[i]-eps);
		res+=cnt*(s1*i*i-2*s2*i+s3);
		s1+=cnt;
		s2+=cnt*i;
		s3+=cnt*i*i;
	}
	res/=tot*(tot-1)/2;
	return res;
}

int main() {
	n=get();
	for (int i=1;i<=n;i++)
		p[i].x=get(),p[i].y=get();
	ans+=solve();
	for (int i=1;i<=n;i++) swap(p[i].x,p[i].y);
	ans+=solve();
	printf("%.8lf\n",ans*0.5);
	return 0;
}