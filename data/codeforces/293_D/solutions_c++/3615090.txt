#include <cstdio>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cstdlib>
#include <queue>
#include <stack>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <algorithm>
#include <iostream>

using namespace std;

int x[100010],y[100010],n;
int CEIL(long long a,long long b)
{
    if(b<0)a=-a,b=-b;
    if(a<0)return -((-a)/b);
    return a/b+(a%b!=0);
}
int FLOOR(long long a,long long b)
{
    if(b<0)a=-a,b=-b;
    if(a>0)return a/b;
    a=-a;
    int ans=a/b;
    if(a%b)ans++;
    return -ans;
}
int CEIL(int p1,int p2,int Y)
{
    if(y[p1]==y[p2])return min(x[p1],x[p2]);
    return x[p1]+CEIL(1LL*(Y-y[p1])*(x[p2]-x[p1]),y[p2]-y[p1]);
}
int FLOOR(int p1,int p2,int Y)
{
    if(y[p1]==y[p2])return max(x[p1],x[p2]);
    return x[p1]+FLOOR(1LL*(Y-y[p1])*(x[p2]-x[p1]),y[p2]-y[p1]);
}
int num[2000010];
double cal()
{
    long long s=0;
    for(int i=0;i<n;i++)s+=1LL*x[i]*y[(i+1)%n]-1LL*y[i]*x[(i+1)%n];
    if(s<0)reverse(x,x+n),reverse(y,y+n);
    int p1=0,p2=0;
    for(int i=1;i<n;i++)if(y[i]>y[p1])p1=i,p2=i;
    int mi=(int)1e8;
    for(int i=0;i<n;i++)mi=min(mi,y[i]);
    memset(num,0,sizeof(num));
    for(int i=y[p1];i>=mi;i--)
    {
        int L=CEIL(p1,(p1+1)%n,i);
        int R=FLOOR(p2,(p2-1+n)%n,i);
        num[i]=R-L+1;
        if(num[i]<0)puts("fuck");
        if(i==y[(p1+1)%n])p1=(p1+1)%n;
        if(i==y[(p2-1+n)%n])p2=(p2-1+n)%n;
    }
    long long cnt=0;
    for(int i=0;i<2000000;i++)cnt+=num[i];
    s=0;
    for(int i=0;i<2000000;i++)s+=1LL*i*num[i];
    double ans=0;
    for(int i=0;i<2000000;i++)
        if(num[i])
            ans+=1.0*i*num[i]/(cnt-1)*(i-1.0*s/cnt);
    return ans;
}
int main()
{
    while(~scanf("%d",&n))
    {
        for(int i=0;i<n;i++)
            scanf("%d %d",&x[i],&y[i]);
        for(int i=0;i<n;i++)x[i]+=1000000,y[i]+=1000000;
        double ans=cal();
        for(int i=0;i<n;i++)swap(x[i],y[i]);
        ans+=cal();
        printf("%.10f\n",ans);
    }
}