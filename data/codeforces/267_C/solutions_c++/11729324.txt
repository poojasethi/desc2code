#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;
const double Eps = 1e-10;
double ans[5005], a[105][105], x[105], ANS;
int n,m,i,j,k,fa[105];
struct EDGE
{
  int x,y,w;
  void read(){
    scanf("%d%d%d",&x,&y,&w);
  }
} edge[5005];

void Gauss(){
  for (i=2;i<n;i++){
    if (a[i][i]<Eps){
      for (j=i+1;j<n;j++)
      if (a[j][i]>Eps) break;
      if (j==n) continue;
      for (k=1;k<=n;k++)
        swap(a[i][k],a[j][k]);
    }

    for (j=i+1;j<n;j++){
      double t = a[j][i]/a[i][i];
      for (k=i;k<=n;k++)
        a[j][k] = a[j][k]-t*a[i][k];
    }
  }
  x[n]=1; x[1]=0;
  for (i=n-1;i>1;i--)
  if (a[i][i]>Eps){
    for (j=i+1;j<n;j++)
      a[i][n] -= a[i][j]*x[j];
    x[i] = a[i][n]/a[i][i];
  }
}

void work(){
  double p=1e9;
  for (i=1;i<=m;i++){
    double t = x[edge[i].y] - x[edge[i].x];
    if (t<Eps && t>-Eps) continue;
    if (t<0) t = -t; t=edge[i].w/t;
    if (t<p) p = t;
  }
  for (i=1;i<=m;i++){
    ans[i] = x[edge[i].y] - x[edge[i].x];
    ans[i] *= p;
    if (edge[i].x==1 || edge[i].y==1)
      ANS += ans[i]>0?ans[i]:-ans[i];
  }
  printf("%.7lf\n",ANS);
  for (i=1;i<=m;i++)
    printf("%.7lf\n",ans[i]);
}

int gf(int x){
  int xx=x, xxx;
  while (xx!=fa[xx]) xx=fa[xx];
  while (x!=xx) xxx=x, x=fa[x], fa[xxx]=xx;
  return xx;
}

int main(){
  scanf("%d%d",&n,&m);
  for (i=1;i<=n;i++) fa[i]=i;
  for (i=1;i<=m;i++){
    edge[i].read();
    a[edge[i].x][edge[i].x] += 1;
    a[edge[i].x][edge[i].y] -= 1;
    a[edge[i].y][edge[i].y] += 1;
    a[edge[i].y][edge[i].x] -= 1;
    int m1=gf(edge[i].x), m2=gf(edge[i].y);
    if (m1!=m2) fa[m1]=m2;
  }
  if (gf(1)!=gf(n)){
    for (i=1;i<=m+1;i++) printf("0.00000000\n");
    return 0;
  }
  for (i=1;i<n;i++)
    a[i][n] = -a[i][n];
  Gauss();
  work();
  return 0;
}