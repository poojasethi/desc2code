#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef double ld;

const int MAX=100+10;
const int NUME=100000+10;

int n,m;
int A[NUME],B[NUME],C[NUME];
ld g[MAX][MAX];
ld a[MAX],up=1e10;
int d[MAX];

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
	int i,j,k;
	scanf("%d%d",&n,&m);
	REP(i,1,m)
	{
		scanf("%d%d%d",&A[i],&B[i],&C[i]);
		g[A[i]][B[i]]+=1;
		g[A[i]][A[i]]-=1;
		g[B[i]][A[i]]+=1;
		g[B[i]][B[i]]-=1;
	}
	memset(g[1],0,sizeof g[1]);
	g[1][1]=1;
	int now=1;
	REP(i,1,n)
	{
		REP(j,now,n)
			if(g[j][i]!=0)
			{
				REP(k,1,n)
					swap(g[now][k],g[j][k]);
				break;
			}
		if(g[now][i]==0)
			continue;
		d[now]=i;
		REP(j,now+1,n)
			if(g[j][i]!=0)
			{
				ld tmp=g[now][i]/g[j][i];
				REP(k,1,n)
					g[j][k]=g[j][k]*tmp-g[now][k];
			}
		++now;
	}
	REP(i,1,n)
		if(d[i]==n)
			break;
	a[n]=1;
	for(--i;i>=2;--i)
	{
		if(!d[i])
			continue;
		int p=d[i];
		REP(j,p+1,n)
			a[p]+=a[j]*g[i][j];
		a[p]=-a[p]/g[i][p];
	}
	REP(i,1,m)
	{
		int c=A[i];
		int d=B[i];
		//-k<=( a[c]-a[d] ) * x <= k
		ld dif=abs(a[c]-a[d]);
		if(dif<1e-10)
			continue;
		up=min(up,abs(C[i])/dif);
	}
	ld ans=0;
	REP(i,1,m)
	{
		if(A[i]==1)
			ans+=a[B[i]]*up;
		else if(B[i]==1)
			ans+=a[A[i]]*up;
	}
	printf("%lf\n",ans);
	REP(i,1,m)
		printf("%lf\n",( a[ B[i] ]-a[ A[i] ] ) * up );
	return 0;
}
