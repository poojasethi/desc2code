#include <cstdio>
#include <algorithm>
#include <cmath>
const int N = 109;
double x[N][N];
int a[N * N][3],n,m,v[N][N];
bool app[N];
void work()
{
	for (int i = 1,j,k; i <= n; ++i) {
		k = i;
		for (j = i + 1; j <= n; ++j)
			if (fabs(x[j][i]) > fabs(x[k][i])) k = j;
		if (k != i) std::swap(x[k],x[i]);
		if (fabs(x[i][i]) <= 1e-7) continue;
		for (j = i + 1; j <= n + 1; ++j) x[i][j] /= x[i][i];
		x[i][i] = 1;
		for (j = 1; j <= n; ++j) {
			if (j == i) continue;
			for (k = i + 1; k <= n + 1; ++k)
				x[j][k] -= x[j][i] * x[i][k];
			x[j][i] = 0;
		}
	}
}
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("267C.in","r",stdin);
	freopen("267C.out","w",stdout);
	#endif
	scanf("%d%d",&n,&m);
	for (int i = 1; i <= m; ++i) {
		scanf("%d%d%d",&a[i][0],&a[i][1],&a[i][2]);
		int A = a[i][0],B = a[i][1];
		x[A][A] += 1;
		x[A][B] -= 1;
		x[B][B] += 1;
		x[B][A] -= 1;
		// app[A] = app[B] = true;
		// v[A][++v[A][0]] = B;
		// v[B][++v[B][0]] = A;
	}
	for (int i = 1; i <= n; ++i) x[1][i] = 0;
	x[1][1] = 1;
	for (int i = 1; i <= n; ++i) x[n][i] = 0;
	x[n][n] = 1; x[n][n + 1] = 1;
	work();
	//for (int i = 1; i <= n; ++i) printf("%.5f\n",x[i][n + 1]);	puts("");
	double q = 1e100,ans = 0;
	for (int i = 1; i <= m; ++i) {
		double tmp = fabs(x[a[i][1]][n + 1] - x[a[i][0]][n + 1]);
		if (tmp < 1e-7) continue;
		q = std::min(q,a[i][2] / tmp);
		if (a[i][0] == n || a[i][1] == n) ans += tmp;
	}
	if (q > 1e10) q = 0;
	printf("%.5f\n",ans * q);
	for (int i = 1; i <= m; ++i)
		printf("%.5f\n",(x[a[i][1]][n + 1] - x[a[i][0]][n + 1]) * q);
}
