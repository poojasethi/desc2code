#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>

using namespace std;

const int MaxN = 110;
const double eps = 1e-9;

struct Node{int u,v,c;}g[5010];
int n,m;
int fa[MaxN];
double a[MaxN][MaxN],x[MaxN];
int d[MaxN][MaxN];

int init(){for(int i=1;i<=n;i++) fa[i]=i;}
int getfa(int u){return u==fa[u] ? u : fa[u]=getfa(fa[u]);}
void join(int u,int v){fa[getfa(u)]=getfa(v);}
void solve(){
	for(int i=1;i<=n;i++){
		int t=i;double maxt=0;
		for(int k=i;k<=n;k++) if(fabs(a[k][i])>maxt) maxt=fabs(a[k][i]),t=k;
		if(t!=i) {for(int j=1;j<=n+1;j++) swap(a[i][j],a[t][j]);}
		if(fabs(a[i][i])<eps) continue;
		for(int j=1;j<=n;j++) if(j!=i){
			double c=-a[j][i]/a[i][i];
			for(int k=i;k<=n+1;k++) a[j][k]+=c*a[i][k];
		}
	}
	for(int i=1;i<=n;i++) x[i]=a[i][n+1]/a[i][i];
}

int main()
{
	scanf("%d%d",&n,&m);
	init();
	for(int i=1;i<=m;i++) scanf("%d%d%d",&g[i].u,&g[i].v,&g[i].c),d[g[i].u][g[i].v]++,d[g[i].v][g[i].u]++,join(g[i].u,g[i].v);
	if(getfa(1)!=getfa(n)){
		for(int i=1;i<=m+1;i++) puts("0.000000000000");
		return 0;
	}
	for(int i=2;i<n;i++){
		int tmp=0;
		for(int j=1;j<=n;j++) a[i][j]+=d[i][j],tmp+=d[i][j];
		a[i][i]=-tmp;
	}
	a[1][1]=1;a[1][n+1]=2;
	a[n][n]=1;a[n][n+1]=1;
	solve();
	double aug=1e100,ans=0;
	for(int i=1;i<=m;i++) aug=min(aug,g[i].c/fabs(x[g[i].u]-x[g[i].v]));
	for(int i=1;i<=n;i++) x[i]*=aug;
	for(int i=1;i<=m;i++) ans+=(g[i].u==1 || g[i].v==1) ? fabs(x[g[i].u]-x[g[i].v]) : 0;
	printf("%.12lf\n",ans);
	for(int i=1;i<=m;i++) printf("%.12lf\n",x[g[i].u]-x[g[i].v]);
	return 0;
	
}
