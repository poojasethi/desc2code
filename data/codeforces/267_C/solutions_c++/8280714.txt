// by Î¾

#include <cmath>
#include <cstdio>
#include <algorithm>

#define zero(x) (fabs(x)<eps)

using namespace std;

typedef double D;
typedef int P[5005];

const D eps=1e-10;
int n,m;P u,v,w;
D Ans,mul,mtx[105][105];

inline void gs(int n){
	for(int i=1;i<n;++i){
		for(int k=i;k<n;++k)
		if(!zero(mtx[k][i])){
			for(int j=1;j<=n;++j)swap(mtx[i][j],mtx[k][j]);
			break;
		}
		if(zero(mtx[i][i]))continue;
		for(int j=n+1;j>=i;--j)mtx[i][j]/=mtx[i][i];
		for(int j=1;j<n;++j)if(i^j && !zero(mtx[j][i])){
			D _=-mtx[j][i];
			for(int k=1;k<=n;++k)mtx[j][k]+=_*mtx[i][k];
		}
	}
}

int main(){
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;++i){
		scanf("%d%d%d",u+i,v+i,w+i);
		if(v[i]^1 && v[i]^n)--mtx[v[i]][v[i]],++mtx[v[i]][u[i]];
		if(u[i]^1 && u[i]^n)++mtx[u[i]][v[i]],--mtx[u[i]][u[i]];
	}
	mtx[n][n]=mtx[n][n+1]=mtx[1][1]=1;
	gs(n+1);
	mul=123456789101112131415.;
	for(int i=1;i<=m;++i){
		D p=mtx[v[i]][n+1]-mtx[u[i]][n+1];
		mul=min(mul,fabs(w[i]/p));
	}if(zero(mul) || mul>100000000000000.)mul=0;
	for(int i=1;i<=m;++i)
	if(v[i]==1 || u[i]==1)Ans+=mtx[u[i]*v[i]][n+1]*mul;
	printf("%.7lf\n",Ans);
	for(int i=1;i<=m;++i)printf("%.7lf\n",(mtx[v[i]][n+1]-mtx[u[i]][n+1])*mul);
}