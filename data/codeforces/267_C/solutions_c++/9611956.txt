#include <cstdio>
#include <cmath>
#include <algorithm>
using namespace std;
const int N=105,M=5005;
typedef double db;
const db oo=1./0;
int n,m;
db U=oo,mat[N][N],res[N];
db fix(db x){
	return abs(x)<1e-9?0:x;
}
void add(int a,int b){
	if(a==1||a==n) return;
	mat[a][a]++;
	if(b==1) return;
	mat[a][b]--;
}
struct edge{
	int a,b,c;
	void read(){
		scanf("%d%d%d",&a,&b,&c);
		add(a,b);
		add(b,a);
	}
	void work(){
		U=min(U,c/fix(abs(res[a]-res[b])));
	}
	db calc(){
		return (res[b]-res[a])*U;
	}
} e[M];

void gauss(){
	for(int i=2;i<n;i++){
		for(int j=i;j<=n;j++) if(fix(mat[j][i])){
			for(int k=i;k<=n;k++) swap(mat[i][k],mat[j][k]);
			break;
		}
		if(!fix(mat[i][i]))
			continue;
		for(int k=n;k>=i;k--) mat[i][k]/=mat[i][i];
		for(int j=2;j<=n;j++) if(j!=i)
			for(int k=n;k>=i;k--) mat[j][k]-=mat[j][i]*mat[i][k];
	}
	res[1]=0;
	for(int i=2;i<n;i++)
		res[i]=-mat[i][n];
	res[n]=1;
}

int main(){
	scanf("%d%d",&n,&m);
	for(int i=0;i<m;i++) e[i].read();
	gauss();
	for(int i=0;i<m;i++) e[i].work();
	if(U==oo) U=0;
	db flow=0;
	for(int i=0;i<m;i++){
		if(e[i].a==1) flow+=e[i].calc();
		if(e[i].b==1) flow-=e[i].calc();
	}
	printf("%.9lf\n",flow);
	for(int i=0;i<m;i++)
		printf("%.9lf\n",e[i].calc());
}
