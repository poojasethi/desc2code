#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstring>
#include<algorithm>
using namespace std;
#define N 110
#define M 5100
#define eps 1e-9
double g[N][N];
int n,m;
struct rec{
       int x,y,z;
       }e[M];
void solved(){
     for(int i=1;i<=n;i++){
       int id=i;
       for(int j=i+1;j<=n;j++)
         if(fabs(g[j][i])>fabs(g[id][i]))id=j;
       if(fabs(g[id][i])<eps)continue;
       for(int j=0;j<=n;j++)swap(g[i][j],g[id][j]);
       double t=g[i][i];
       for(int j=0;j<=n;j++)g[i][j]/=t;
       for(int j=1;j<=n;j++)
         if(j!=i && fabs(g[j][i])>eps){
           t=g[j][i];
           for(int k=0;k<=n;k++)g[j][k]-=t*g[i][k];
         }
     }
     for(int i=1;i<=n;i++)
       if(fabs(g[i][i])<eps)g[i][0]=0;
}
int main(){
    scanf("%d%d",&n,&m);
    for(int i=1;i<=m;i++){
      scanf("%d%d%d",&e[i].x,&e[i].y,&e[i].z);
      g[e[i].x][e[i].x]++;g[e[i].x][e[i].y]--;
      g[e[i].y][e[i].y]++;g[e[i].y][e[i].x]--;
    }
    for(int i=1;i<=n;i++)g[1][i]=g[n][i]=0;
    g[1][1]=g[n][n]=1;g[1][0]=0;g[n][0]=1;
    solved();
    double t=1000000000,ans=0;
    for(int i=1;i<=m;i++){
            if(fabs(g[e[i].x][0]-g[e[i].y][0])>eps)
              t=min(t,e[i].z/fabs(g[e[i].x][0]-g[e[i].y][0]));
              }
    for(int i=1;i<=m;i++)
      if(e[i].x==1 || e[i].y==1)ans+=fabs(g[e[i].x][0]-g[e[i].y][0])*t;
    printf("%.6lf\n",ans);
    for(int i=1;i<=m;i++)printf("%.6lf\n",-t*(g[e[i].x][0]-g[e[i].y][0]));
    return 0;
}
