#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
using namespace std;
#define N 105
#define M 5005
#define eps 1e-11
double a[N][N],ans,dis[N],mi=1LL << 50;int n,m,ln[M][3];
inline int Read()
 {
    int x=0;char y;
    do y=getchar(); while (y<'0'||y>'9');
    do x=x*10+y-'0',y=getchar(); while (y>='0'&&y<='9');
    return x;
 }
void Gauss()
 {
    for (int i=1;i<=n;i++)
     {
        int k=i;
        while (fabs(a[k][i])<eps&&k<=n) k++;
        if (k>n) continue;
        swap(a[k],a[i]);
        for (int j=1;j<=n;j++)
         if (fabs(a[j][i])>eps&&j!=i)
          {
             double l=a[j][i]/a[i][i];
             for (int k=1;k<=n+1;k++)
               a[j][k]-=l*a[i][k];
          }
     }
    for (int i=1;i<=n;i++)
      if (fabs(a[i][i])>eps) dis[i]=a[i][n+1]/a[i][i];
 }
inline double min(double x,double y)
 {return x<y?x:y;}
int main()
 {
    n=Read();m=Read();
    for (int i=1;i<=m;i++)
     {
        ln[i][0]=Read();ln[i][1]=Read();ln[i][2]=Read();
        a[ln[i][0]][ln[i][0]]--;a[ln[i][0]][ln[i][1]]++;
        a[ln[i][1]][ln[i][1]]--;a[ln[i][1]][ln[i][0]]++;
     }
    memset(a[1],0x00,sizeof(a[1]));
    memset(a[n],0x00,sizeof(a[n]));
    a[1][1]=a[n][n]=a[n][n+1]=1;
    Gauss();double k;
    for (int i=1;i<=m;i++)
     if ((k=fabs(dis[ln[i][0]]-dis[ln[i][1]]))>eps)
       mi=min(mi,ln[i][2]/k);
    for (int i=1;i<=m;i++)
     if (ln[i][0]==1) ans+=dis[ln[i][1]]*mi; else
      if (ln[i][1]==1) ans+=dis[ln[i][0]]*mi;
    printf("%.8lf\n",ans);
    if (ans<=eps) ans=0;
    for (int i=1;i<=m;i++)
      printf("%.8lf\n",ans<eps?0:(dis[ln[i][1]]-dis[ln[i][0]])*mi);
    return 0;
 }