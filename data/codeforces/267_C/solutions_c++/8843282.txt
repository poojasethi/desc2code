#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstring>

#define rep(i,l,r) for (int i=l; i<=r; i++)
#define dep(i,r,l) for (int i=r; i>=l; i--)

using namespace std;

const int N=110,M=5010;
const double eps=1e-9;

int n,m;

struct eset{
	int u,v,w;
} e[M];

double c[N][N],x[N];

void setx(int i,int v){
	memset(c[i],0,sizeof(c[i]));
	c[i][i]++,c[i][0]=v;
}
void gauss(){
	rep(i,1,n){
		int id=i;
		rep(ii,i,n)
			if (fabs(c[ii][i])>fabs(c[id][i])) id=ii;
		if (fabs(c[id][i])<eps)
			continue;
		rep(j,i,n) swap(c[i][j],c[id][j]);
		swap(c[i][0],c[id][0]);

		rep(ii,i+1,n)
			if (fabs(c[ii][i])>=eps){
				c[ii][0]-=c[i][0]*(c[ii][i]/c[i][i]);
				dep(j,n,i)
					c[ii][j]-=c[i][j]*(c[ii][i]/c[i][i]);
			}
	}
	dep(i,n,1){
		if (fabs(c[i][i])<eps) continue;
		double tmp=c[i][0];
		rep(j,i+1,n)
			tmp-=c[i][j]*x[j];
		x[i]=tmp/c[i][i];
	}
}
int main(){
	scanf("%d%d",&n,&m);
	rep(i,1,m){
		int u,v,w;
		scanf("%d%d%d",&u,&v,&w);
		e[i]=(eset){u,v,w};
		c[u][u]++,c[u][v]--;
		c[v][v]++,c[v][u]--;
	}
	setx(1,0);
	setx(n,1);
	gauss();

	double ans=0,t=1e9;
	rep(i,1,m){
		double dx=x[e[i].v]-x[e[i].u];
		t=min(t,e[i].w/fabs(dx));
		if (e[i].u==1) ans+=dx;
		if (e[i].v==1) ans-=dx;
	}

	printf("%lf\n",ans*t);
	rep(i,1,m){
		printf("%lf\n",t*(x[e[i].v]-x[e[i].u]));
	}
}
