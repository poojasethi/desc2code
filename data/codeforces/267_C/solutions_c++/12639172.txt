#include<bits/stdc++.h>
using namespace std;
const int maxn=110,maxm=10010;
struct edge{
	int a,b,v;
}e[maxm];
double real_w[maxn][maxn],*w[maxn];
int n,m;

void init(){
	scanf("%d%d",&n,&m);
	memset(real_w,0,sizeof(real_w));
	for(int i=1;i<=n;++i)
		w[i]=real_w[i];
	for(int i=1;i<=m;++i){
		int &a=e[i].a,&b=e[i].b,&v=e[i].v;
		scanf("%d%d%d",&a,&b,&v);
		if(a!=1 && a!=n) --w[a][a],++w[a][b];
		if(b!=1 && b!=n) --w[b][b],++w[b][a];
	}
	w[1][1]=1,w[1][n+1]=0;
	w[n][n]=1,w[n][n+1]=1;
}

double E[maxn];
void gauss(){
	for(int k=1;k<=n;++k){
		int p=k;
		for(int i=k;i<=n;++i)
			if(fabs(w[i][k])>fabs(w[p][k])) p=i;
		swap(w[p],w[k]); if(!w[p][k]) continue;
		for(int i=k+1;i<=n;++i){
			double t=w[i][k]/w[k][k];
			for(int j=k;j<=n;++j)
				w[i][j]-=w[k][j]*t;
		}
	}
	for(int i=n;i>=1;--i)if(w[i][i]){
		E[i]=w[i][n+1];
		for(int j=n;j>i;--j)
			E[i]-=E[j]*w[i][j];
		E[i]/=w[i][i];
	}
	double t=1e10,flow=0;
	for(int i=1;i<=m;++i)
		t=min(t,fabs(e[i].v/(E[e[i].b]-E[e[i].a])));
	for(int i=1;i<=m;++i){
		if(e[i].a==1) flow+=(E[e[i].b]-E[e[i].a])*t;
		if(e[i].b==1) flow-=(E[e[i].b]-E[e[i].a])*t;
	}
	printf("%.5f\n",flow);
	for(int i=1;i<=m;++i)
		printf("%.5f\n",(E[e[i].b]-E[e[i].a])*t);
}

int main(){
	init();
	gauss();
	return 0;
}
