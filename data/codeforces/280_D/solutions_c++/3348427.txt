#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#define mk 20
#define inf 100000000
using namespace std;
int i,j,k,l,n,m,a[120000],x,y,type,fans;
struct seg{
	int f[21],lm[21],rm[21],cm[21];
} t[410000],ans;
void MAX(int &x,int y){ if(y>x)x=y; }
inline void renew(seg &a,seg b,seg &c){
	int i,j;
	//
/*	for(i=1;i<=mk;++i){
		for(j=1;j<i;++j)printf("%d ",b.lm[j]+c.rm[i-j]);
		printf("\n");
	}*/
	
	//
/*	for(i=1;i<=mk;++i){
		a.f[i]=0;
		for(j=0;j<=i;++j)
			MAX(a.f[i],b.f[j]+c.f[i-j]);
		for(j=1;j<=i;++j)MAX(a.f[i],b.rm[j]+c.lm[i+1-j]);
	}*/
	j=0;
	for(i=1;i<=mk;++i){
		while(j+1<=i && b.f[j+1]+c.f[i-j-1]>=b.f[j]+c.f[i-j])j++;
		a.f[i]=b.f[j]+c.f[i-j];
	}
	j=1;
	for(i=1;i<=mk;++i){
		while(j+1<=i && b.rm[j+1]+c.lm[i+1-j-1]>=b.rm[j]+c.lm[i+1-j])j++;
		MAX(a.f[i],b.rm[j]+c.lm[i+1-j]);
	}
	
/*	for(i=1;i<=mk;++i){
		a.lm[i]=a.rm[i]=-inf;
		for(j=1;j<=i;++j){
			MAX(a.lm[i],b.lm[j]+c.f[i-j]);
			MAX(a.rm[i],c.rm[j]+b.f[i-j]);
		}
		for(j=1;j<=i;++j){
			MAX(a.lm[i],b.cm[j]+c.lm[i+1-j]);
			MAX(a.rm[i],c.cm[j]+b.rm[i+1-j]);
		}
	}*/
	j=1;
	for(i=1;i<=mk;++i){
		while(j+1<=i && b.lm[j+1]+c.f[i-j-1]>=b.lm[j]+c.f[i-j])j++;
		a.lm[i]=b.lm[j]+c.f[i-j];
	}
	j=1;
	for(i=1;i<=mk;++i){
		while(j+1<=i && c.rm[j+1]+b.f[i-j-1]>=c.rm[j]+b.f[i-j])j++;
		a.rm[i]=c.rm[j]+b.f[i-j];
	}
	j=1;
	for(i=1;i<=mk;++i){
		while(j+1<=i && b.cm[j+1]+c.lm[i+1-j-1]>=b.cm[j]+c.lm[i+1-j])j++;
		MAX(a.lm[i],b.cm[j]+c.lm[i+1-j]);
	}
	j=1;
	for(i=1;i<=mk;++i){
		while(j+1<=i && c.cm[j+1]+b.rm[i+1-j-1]>=c.cm[j]+b.rm[i+1-j])j++;
		MAX(a.rm[i],c.cm[j]+b.rm[i+1-j]);
	}
	
/*	for(i=1;i<=mk;++i){
		a.cm[i]=-inf;
		for(j=1;j<i;++j)MAX(a.cm[i],b.lm[j]+c.rm[i-j]);
		for(j=1;j<=i;++j)MAX(a.cm[i],b.cm[j]+c.cm[i+1-j]);
	}*/
	j=1;
	for(i=1;i<=mk;++i){
		while(j+1<i && b.lm[j+1]+c.rm[i-j-1]>=b.lm[j]+c.rm[i-j])j++;
		if(i==1)a.cm[i]=-inf;
		else a.cm[i]=b.lm[j]+c.rm[i-j];
	}
	j=1;
	for(i=1;i<=mk;++i){
		while(j+1<=i && b.cm[j+1]+c.cm[i+1-j-1]>=b.cm[j]+c.cm[i+1-j])j++;
		MAX(a.cm[i],b.cm[j]+c.cm[i+1-j]);
	}
}	
void build(int p,int l,int r){
	int mid=(l+r)/2;
//	printf("%d %d %d\n",p,l,r);
	if(l==r){
		for(int i=1;i<=mk;++i){
			t[p].f[i]=max(a[l],0);
			t[p].lm[i]=t[p].rm[i]=t[p].cm[i]=a[l];
		}
		return;
	}
	build(p*2,l,mid);
	build(p*2+1,mid+1,r);
	renew(t[p],t[p*2],t[p*2+1]);
}
void change(int p,int l,int r,int x){
	int mid=(l+r)/2;
	if(l==r){
		for(int i=1;i<=mk;++i){
			t[p].f[i]=max(a[l],0);
			t[p].lm[i]=t[p].rm[i]=t[p].cm[i]=a[l];
		}
		return;
	}
	if(x<=mid)change(p*2,l,mid,x);
	else change(p*2+1,mid+1,r,x);
	renew(t[p],t[p*2],t[p*2+1]);
}
void calc(int p,int l,int r,int x,int y){
	int mid=(l+r)/2;
	if(x<=l && y>=r){
		renew(ans,ans,t[p]);
		return;
	}
	if(x<=mid)calc(p*2,l,mid,x,y);
	if(y>mid)calc(p*2+1,mid+1,r,x,y);
}
int main(){
//	freopen("kmss.in","r",stdin);
//	freopen("kmss.out","w",stdout);
    scanf("%d",&n);
    for(i=1;i<=n;++i)scanf("%d",&a[i]);
    build(1,1,n);
    scanf("%d",&m);
    for(i=1;i<=m;++i){
		scanf("%d",&type);
		if(type==0){
			scanf("%d%d",&x,&y);
			a[x]=y;
			change(1,1,n,x);
		}else{
			scanf("%d%d%d",&x,&y,&k);
			memset(&ans,0,sizeof(ans));
			calc(1,1,n,x,y);
			printf("%d\n",ans.f[k]);
		}
	}
//	system("pause");
}
