#include<cstdio>
#include<algorithm>
#include<cstring>
#include<iostream>
using namespace std;
#define maxn 2100
int d[maxn][maxn];
bool vis[maxn][maxn];
int n,m,k,x,y;
int fun()
{
    int l=max(1,x-d[x][y]);
    int r=min(n,x+d[x][y]);
    for (int i=l;i<=r;i++)
    {
        int j=d[x][y]-abs(i-x);
        int ny=y-j;
        if (ny>=1&&ny<=m&&!vis[i][ny])
        {
            vis[i][ny]=1;
            printf("%d %d\n",i,ny);
            return 1;
        }
        ny=y+j;
        if (ny>=1&&ny<=m&&!vis[i][ny])
        {
            vis[i][ny]=1;
            printf("%d %d\n",i,ny);
            return 1;
        }
    }
    return 0;
}
int main()
{
    scanf("%d%d%d",&n,&m,&k);
    memset(vis,0,sizeof(vis));
    memset(d,0,sizeof(d));
    while (k--)
    {
        scanf("%d%d",&x,&y);
        for (int i=-2;i<3;i++)
        {
            for (int j=-2;j<3;j++)
            {
                int nx=x+i;
                int ny=y+j;
                if (nx<1||nx>n||ny<1||ny>m) continue;
                d[x][y]=max(d[x][y],d[nx][ny]-abs(i)-abs(j));
            }
        }
        while (!fun()) d[x][y]++;
    }
    return 0;
}

	 	  		   	    		 		  	 	  	