#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
using namespace std;
int i,j,k,l,m,n,U[2100][2100],D[2100][2100],X,Y,ans,x,y,d;
bool flag;
int get(int fa[2100][2100],int x,int y){
	return fa[x][y]==x?x:(fa[x][y]=get(fa,fa[x][y],y));
}
void renew(int xx,int yy){
	if(xx<1 || xx>n || yy<1 || yy>m)return;
	int d=abs(xx-x)+abs(yy-y);
	if(flag && (d<ans || d==ans && yy<Y || d==ans && yy==Y && xx<X)){
		ans=d;
		X=xx; Y=yy;
	}
	if(!flag && (d<ans || d==ans && xx<X || d==ans && xx==X && yy<Y)){
		ans=d;
		X=xx; Y=yy;
	}
}
int main(){
	scanf("%d%d%d",&n,&m,&k);
	if(n<m)swap(n,m),flag=1;
	for(i=0;i<=n+1;++i)
		for(j=0;j<=m+1;++j)U[i][j]=D[i][j]=i;
	for(i=1;i<=k;++i){
		scanf("%d%d",&x,&y);
		if(flag)swap(x,y);
		ans=1000000;
		for(d=0;d<=ans;++d){
			if(y-d>=1)renew(get(U,x,y-d),y-d),renew(get(D,x,y-d),y-d);
			if(y+d<=m)renew(get(U,x,y+d),y+d),renew(get(D,x,y+d),y+d);
		}
		U[X][Y]=X-1;
		D[X][Y]=X+1;
		if(flag)swap(X,Y);
		printf("%d %d\n",X,Y);
	}
}
