#include<cstdio>
#include<cstring>
#include<iostream>
#include<cmath>
#include<set>
#include<queue>
#include<vector>
#include<algorithm>
#include<cstdlib>
#include<map>

using namespace std;

const int maxn = 2010;

#define MP make_pair
#define fi first
#define sc second
#define LL long long
#define LD long double

static int n,m;

bool flag=false;
bool vis[maxn][maxn];
int d[maxn][maxn],ansx,ansy,k;
bool find(int x,int y,int D){
	for (int i=max(x-D,1);i<=x+D&&i<=n;i++){
		int dy=D-abs(x-i);
		if (y-dy>0){
			if (vis[i][y-dy]==false){
				ansx=i;ansy=y-dy;
				vis[i][y-dy]=true;
				return false;
			}
		}
		if (y+dy<=m){
			if (vis[i][y+dy]==false){
				ansx=i;ansy=y+dy;
				vis[i][y+dy]=true;
				return false;
			}
		}
	}
	return true;
}
int main(){
	#ifdef ONLINE_JUDGE
	#else
	freopen("200A.in","r",stdin);
	freopen("200A.out","w",stdout);
	#endif
	scanf("%d%d%d",&n,&m,&k);
	for (int i=1;i<=k;i++){
		int x,y;scanf("%d%d",&x,&y);
		int D=0;
		for (int dx=-5;dx<=5;dx++)
			for (int dy=-5;dy<=5;dy++)
			if (x+dx>0&&x+dx<=n&&y+dy<=m&&y+dy>0){
				D=max(D,d[x+dx][y+dy]-abs(dx)-abs(dy));
			}
		while (find(x,y,D)) D++;
		d[x][y]=D;
		printf("%d %d\n",ansx,ansy);
	}
	return 0;
}

