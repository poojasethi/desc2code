dp = [[-1]*100 for i in range(100)];
def g(nb, k):
	if (k == 0): return 1;
	if (nb == 0): return (k==0);
	if (dp[nb][k] != -1): return dp[nb][k];
	dp[nb][k] = g(nb-1, k-1) + g(nb-1, k);
	return dp[nb][k];

def f(n, k):
	if (k == 0): return 1;
	if (n == 0): return (k==0);
	
	i = 0;
	while (1 << i) <= n:
		largest = (1<<i)
		i+=1
	
	return f(n-largest, k-1) + g(i-1, k);

def h(n, k):
	return f(2*n, k) - f(n, k);

#for i in range(32):
#	print "f(", 2*i,")-f(",i,"): ",f(2*i, 3)-f(i,3)

m, k = [int(x) for x in raw_input().split()]

l, r =1, 1000000000000000000;
while (r-l > 1):
	mid = (l+r)/2;
	if (h(mid, k) >= m):
		r = mid;
	else:
		l = mid+1;

if (h(l,k) >= m): print l
else: print r