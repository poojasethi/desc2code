#include <cstdio>
#include <cstring>

const int MAX_N = 67;
typedef long long ll;

int digit[MAX_N];
ll C[MAX_N][MAX_N]; 
ll m;
int k;

ll cal(ll x) {
	int cnt = 0;
	while (x > 0) {
		digit[cnt++] = x % 2;
		x >>= 1;
	} 
	ll sum = 0;
	int one = 0;
	for (int i = cnt - 1; i >= 0; --i) {
		if (digit[i] == 1) {
			if (k - one >= 0) sum += C[i][k - one];
			++one;
		}
	} 
	return sum;
}

int main() {
	C[0][0] = 1;
	for (int i = 1; i < MAX_N; ++i) {
		C[i][0] = C[i][i] = 1;
		for (int j = 1; j < i; ++j) {
			C[i][j] = C[i - 1][j] + C[i - 1][j - 1];
		} 
	} 
	scanf("%I64d%d", &m, &k);
	ll l = 0, r = 1e18;
	while (l + 1 < r) {
		ll mid = (l + r) >> 1;
		ll cnt = cal(mid << 1) - cal(mid);
		if (cnt < m) l = mid;
		else if (cnt >= m) r = mid;
	} 
	printf("%I64d\n", r);
	return 0;
}

			  	 		  	        		 	 	