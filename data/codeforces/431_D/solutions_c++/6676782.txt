#include<cstdio>
#include<cstring>
using namespace std;
int k,num[65];
long long dp[65][65];
long long dfs(int i,int j,bool d)
{
    if(!~i)
        return j==k;
    if(~dp[i][j]&&!d)
        return dp[i][j];
    long long res=0;
    int t=d?num[i]:1;
    for(int s=0; s<=t; ++s)
        res+=dfs(i-1,j+s,s==t&&d);
    return d?res:dp[i][j]=res;
}
long long calc(long long x)
{
    int len=0;
    while(x)
    {
        num[len++]=x&1;
        x>>=1;
    }
    memset(dp,0xff,sizeof(dp));
    return dfs(len-1,0,1);
}
int main()
{
    long long m,l=1,r=1000000000000000000LL;
    scanf("%I64d%d",&m,&k);
    while(l<r)
    {
        long long n=(l+r)>>1;
        if(calc(n+n)-calc(n)<m)
            l=n+1;
        else
            r=n;
    }
    printf("%I64d",l);
}
