#include <bits/stdc++.h>

using namespace std;

typedef long long int lint;
const int MAXN = 75;

lint N,K,at,ar[MAXN],dn[MAXN][MAXN][2];

lint find(lint bas,lint k,lint t){
	if(bas==at+1)
		return k==0;
	if(k<0) return 0;
	lint &ret=dn[bas][k][t];
	if(ret!=-1)
		return ret;
	ret=0;
	if(!t){
		ret+=find(bas+1,k-1,t);
		ret+=find(bas+1,k,t);
	}else if(t && !ar[bas])
		ret+=find(bas+1,k,t);
	else{
		ret+=find(bas+1,k-1,t);
		ret+=find(bas+1,k,1-t);
	}
	return ret;
}

lint f(lint a){
	at=0;
	while(a){
		ar[++at]=(a&1);
		a>>=1;
	}
	reverse(ar+1,ar+at+1);
	memset(dn,-1,sizeof dn);
	return find(1,K,1);
}

int main(){
	scanf(" %lld %lld",&N,&K);
	lint bas=0,son=1e18,o;
	while(bas!=son){
		o=(bas+son)/2+1;
		if(f(o*2)-f(o)>=N) son=o-1;
		else bas=o;
	}
	printf("%lld\n",bas+1);
	return 0;
}
