#include<cstdio>
#include<iostream>
#include<cstring>
using namespace std;
#define uLL unsigned long long
const int MX = 1000005;
const uLL INF = ~(uLL)0;

uLL dp[65][65][2];

uLL f(int p, int n, uLL msk){
	//if(p==1) return msk&1 | !n;
	if(p<n) return 0;
	if(!n) return 1;
	bool c=msk==INF;
	if(dp[p][n][c]) return dp[p][n][c];
	if(msk & (uLL)1<<p-1)
		return dp[p][n][c]=f(p-1, n-1, msk)+f(p-1, n, INF);
	else
		return dp[p][n][c]=f(p-1, n, msk);
	//return dp[p][n]=((x&((uLL)1<<p-1))? (f(p-1, n-1, x)+f(p-1, n, INF)):f(p-1, n, x));
}

int main(){
	uLL M; int K; cin>>M>>K;
	uLL l=1, r=~(uLL)0>>1;
	while(l<r){
		uLL x=(l+r)>>1;
		uLL a=f(64, K, x<<1);
		memset(dp, 0, sizeof(dp));
		uLL b=f(64, K, x);
		memset(dp, 0, sizeof(dp));
		if(a-b>=M) r=x;
		else l=x+1;
	}
	cout<<l<<endl;
	return 0;
}
