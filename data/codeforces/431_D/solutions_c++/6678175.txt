#include <bits/stdc++.h>
using namespace std;
typedef unsigned long long ull;
int k, dig[70];
bool f[70][70];
ull dp[70][70], m;
ull dfs(int c, int p, bool lim) {
	if(c < 0) return (p == k);
	if(!lim && f[c][p]) return dp[c][p];
	int up = lim ? dig[c] : 1;
	ull ans = 0;
	for(int i = 0; i <= up; i++) {
		ans += dfs(c - 1, p + (i == 1), lim && (i == up));
	}
	if(!lim) {
		f[c][p] = 1; dp[c][p] = ans;
	}
	return ans;
}
ull solve(ull x) {
	int cnt = 0;
	for(; x; dig[cnt++] = x & 1, x >>= 1);
	return dfs(cnt - 1, 0, 1);
}
bool judge(ull x, ull y) {
	return (solve(x << 1) - solve(x) >= m);
}
int main() {
	ull l = 1, r = (ull)(1e18), ans;
	cin >> m >> k;
	while(l <= r) {
		ull mid = (l + r) >> 1;
		if(judge(mid, m)) {
			ans = mid;
			r = mid - 1;
		} else l = mid + 1;
	}
	cout << ans << endl;
	return 0;
}
