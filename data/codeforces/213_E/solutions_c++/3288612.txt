#include<stdio.h>
#include<stdlib.h>
const long Max=200010;
long n,m,i,p,ans;
long pre[Max],next[Max],L[Max],R[Max];
long A[Max],B[Max],a[Max],b[Max];
long sh[Max];
bool cmp(long *x,long p,long i){
     return (L[p]==0 || x[i-p+L[p]]<x[i]) && (R[p]==0 || x[i-p+R[p]]>x[i]);
}
int main(){
    scanf("%ld%ld",&n,&m);
    for (i=1;i<=n;a[A[i]]=i,i++)
        scanf("%ld",&A[i]);
    for (i=1;i<=m;b[B[i]]=i,i++)
        scanf("%ld",&B[i]);
    for (i=0;i<=n;i++)
        pre[next[i]=i+1]=i;
    for (i=n;i>0;i--){
        L[i]=A[pre[a[i]]];
        R[i]=A[next[a[i]]];
        pre[next[a[i]]]=pre[a[i]];
        next[pre[a[i]]]=next[a[i]];
        }
    for (sh[1]=p=0,i=2;i<=n;i++){
        while (p && !cmp(a,p+1,i))
              p=sh[p];
        sh[i]=p+=cmp(a,p+1,i);
        }
    for (ans=p=0,i=1;i<=m;i++){
        while (p && !cmp(b,p+1,i))
              p=sh[p];
        if ((p+=cmp(b,p+1,i))==n){
            ans++;
            p=sh[p];
            }
        }
    printf("%ld\n",ans);
    return 0;
}
