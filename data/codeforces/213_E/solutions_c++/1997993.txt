#include<iostream>
#include<cstdio>
using namespace std;
typedef unsigned long long ull;
const int N = 200005;
const int B = 37;
ull val[N<<2],base[N];
int cnt[N<<2],a[N];
void upt(int v,int pos,int l,int r,int c){
	if(l== r) {
		cnt[pos] = !!(val[pos] = c); return;}
	int m = l+r >>1, ls = pos<<1, rs = pos<<1|1;
	if(v<=m) upt(v,ls,l,m,c);
	else upt(v,rs,m+1,r,c);
	val[pos] = val[ls] + val[rs] * base[cnt[ls]];
	cnt[pos] = cnt[ls] + cnt[rs];
}
int main(){
	int n,m;
	scanf("%d%d",&n,&m);
	base[0] = 1;
	for(int i=1;i<=n;i++)
		base[i] = base[i-1] * B;
	int x;
	ull flag = 0, sum = 0;
	for(int i=0;i<n;i++) {
		scanf("%d",&x);
		flag += x * base[i];
		sum += base[i];
	}
	for(int i=0;i<m;i++) {
		scanf("%d",&x);
		a[x-1] = i;
	}
	for(int i=0;i<n;i++){
		upt(a[i],1,0,m-1,i+1);
	}
	int ans = 0;
	if(val[1] == flag) ans ++;
	for(int i=n;i<m;i++) {
		upt(a[i-n],1,0,m-1,0);
		upt(a[i],1,0,m-1,i+1);
		if(val[1] == flag + sum*(i-n+1)) ans++;
	}
	cout<<ans<<endl;
}
