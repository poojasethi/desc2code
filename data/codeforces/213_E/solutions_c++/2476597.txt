#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;

const int MAXN = 200011;

int n, m, ans;
int a[MAXN], b[MAXN], c[MAXN], l[MAXN], r[MAXN], x[MAXN], y[MAXN], p[MAXN];

void init()
{
	ios::sync_with_stdio(false);
	cin >> n >> m;
	for (int i = 1; i <= n; ++i)
		cin >> a[i], c[a[i]] = i, l[i] = i - 1, r[i] = i + 1;
	for (int i = 1, A; i <= m; ++i)
		cin >> A, b[A] = i;
	for (int i = n; i > 0; --i)
	{
		if (l[c[i]] >= 1) x[i] = i - a[l[c[i]]], r[l[c[i]]] = r[c[i]];
		if (r[c[i]] <= n) y[i] = i - a[r[c[i]]], l[r[c[i]]] = l[c[i]];
	}
}

inline bool check(int i, int j, int *a)
{
	return (x[j+1] && a[i] < a[i-x[j+1]]) || (y[j+1] && a[i] > a[i-y[j+1]]);
}

void work()
{
	for (int i = 2, j; i <= n; ++i)
	{
		for (j = p[i-1]; j > 0 && check(i, j, c); j = p[j]);
		p[i] = check(i, j, c) ? 0 : j + 1;
	}
	for (int i = 1, j = 0; i <= m; ++i)
	{
		for (; j > 0 && check(i, j, b); j = p[j]);
		if (!check(i, j, b)) ++j;
		if (j == n) ++ans, j = p[j];
	}
	cout << ans << endl;
}

int main()
{
	init();
	work();
	return 0;
}
