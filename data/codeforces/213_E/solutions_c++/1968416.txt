#include<cstdio>
#include<cstring>
#define mem(a,b) memset(a,b,sizeof(a))
using namespace std;
typedef unsigned long long ull;

const int P = 9923, N = 200011;

ull pp[N];

int sz[N*20];
ull hash[N*20];

void insert(int l,int r,int t,int&L,int&R,int val,int d) {
	if(l>R||L>r) return;
	if(l==L&&r==R) {
		sz[t]+=d;
		hash[t]+=val*d;
		return;
	}
	int m=(l+r)/2;
	insert(l,m,t*2,L,R,val,d);
	insert(m+1,r,t*2+1,L,R,val,d);
	sz[t]=sz[t*2]+sz[t*2+1];
	hash[t]=hash[t*2]*pp[sz[t*2+1]]+hash[t*2+1];
}

int main()
{
	pp[0]=1;
	for(int i=1;i<N;i++) pp[i]=pp[i-1]*P;

	int n,m;
	scanf("%d%d",&n,&m);

	ull target=0,add=0;
	for(int i=1;i<=n;i++) {
		int a; scanf("%d",&a);
		target=target*P+a;
		add=add*P+1;
	}

	int pos[N];
	for(int i=1;i<=m;i++) {
		int a; scanf("%d",&a);
		pos[a]=i;
	}

	mem(sz,0); mem(hash,0);
	int ans=0;
	for(int i=1;i<=m;i++) {
		insert(1,m,1,pos[i],pos[i],i,1);
		if(i>n) insert(1,m,1,pos[i-n],pos[i-n],i-n,-1);
		if(i>=n) {
			ans+= hash[1]==target;
			target+=add;
		}
	}
	printf("%d\n",ans);

	return 0;
}
