#include<stdio.h>
#include<string.h>
int getint()
{
	int ret=0;bool ok=false;
	for(;;)
	{
		int c=getchar();
		if(c>='0'&&c<='9')ret=(ret<<3)+ret+ret+c-'0',ok=true;
		else if(ok)return ret;
	}
}
int n,m;
int a[200010],b[200010],_a[200010],fail[200010];
int BIT[200010];
inline void inc(int i,int x)
{
	for(;i<=m;i+=i&-i)BIT[i]+=x;
}
inline int sum(int i)
{
	int ret=0;
	for(;i;i-=i&-i)ret+=BIT[i];
	return ret;
}
int main()
{
	n=getint(),m=getint();
	for(int i=1;i<=n;i++)a[getint()]=i;
	for(int i=1;i<=m;i++)b[getint()]=i;
	for(int i=1;i<=n;i++)_a[i]=sum(a[i]),inc(a[i],1);
	memset(BIT,0,sizeof(BIT));
	int l=2,p=0;
	for(int i=2;i<=n;i++)
	{
		while(p&&sum(a[i])!=_a[p+1])
		{
			p=fail[p];
			while(i-l>p)inc(a[l],-1),l++;
		}
		if(sum(a[i])==_a[p+1])p++;
		fail[i]=p;
		inc(a[i],1);
	}
	memset(BIT,0,sizeof(BIT));
	int ans=n==1;
	l=1,p=1;
	inc(b[1],1);
	_a[n+1]=m+1;
	for(int i=2;i<=m;i++)
	{
		while(p&&sum(b[i])!=_a[p+1])
		{
			p=fail[p];
			while(i-l>p)inc(b[l],-1),l++;
		}
		if(sum(b[i])==_a[p+1])p++;
		inc(b[i],1);
		if(p==n)ans++;
	}
	printf("%d\n",ans);
	return 0;
}
