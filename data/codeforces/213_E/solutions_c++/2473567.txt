#include <cstdio>
#define MOD 1000007
inline int h(int a,int b)
{
  return (a+b)|(a!=b);
}
int size[1000000],a[200005],b[200005],pos[200005],cnt;
unsigned long long tot[1000000],sum,step[500005],hashA;
void insert(int l,int r,int p,int a,int sg)
{
  if(l == r)
    {
      size[h(l,r)] += sg;
      tot[h(l,r)] += a*sg;
      return;
    }
  int mid = (l+r)>>1;
  if(p <= mid)
    insert(l,mid,p,a,sg);
  else
    insert(mid+1,r,p,a,sg);
  tot[h(l,r)] = tot[h(l,mid)]*step[size[h(mid+1,r)]] + tot[h(mid+1,r)];
  size[h(l,r)] = size[h(l,mid)] + size[h(mid+1,r)];
}
int main()
{
  //freopen("e.in","r",stdin);
  //freopen("e.out","w",stdout);
  unsigned long long int i,n,m;
  scanf("%I64d%I64d",&n,&m);
  step[0] = 1;
  sum = 1; 
  for(i=1;i<=2*n;i++)
    {
      step[i] = step[i-1]*MOD;
      if(i < n) sum += step[i];
    }
  for(i=1;i<=n;i++)
    {
      scanf("%d",&a[i]);
      hashA = hashA*MOD + a[i];
    }
  for(i=1;i<=m;i++)
    {
      scanf("%d",&b[i]);
      pos[b[i]] = i;
    }
  for(i=1;i<=m;i++)
    {
      insert(1,m,pos[i],i,1);
      if(i > n)
	insert(1,m,pos[i-n],i-n,-1);
      if(i >= n)
	if(tot[h(1,m)] == (unsigned long long)(hashA + (i-n)*sum))
	  cnt++;
    }
  printf("%d\n",cnt);
}
