#include<cstdio>
#define N 200100
#define B 131
#define MID int mid=(l+r)>>1,ls=p<<1,rs=(p<<1)^1

int n,m,a,pos[N],ans;
unsigned int base[N],sum,hash,tree[N<<2],tot[N<<2];

void Change(int p,int l,int r,int f,int c)
{
	if (l==r){tot[p]=!!(tree[p]=c);return;}MID;
	if (f<=mid) Change(ls,l,mid,f,c);
	else Change(rs,mid+1,r,f,c);
	tree[p]=tree[ls]+tree[rs]*base[tot[ls]];
	tot[p]=tot[ls]+tot[rs];
}

int main()
{
	scanf("%d%d",&n,&m);
	base[0]=1;
	for (int i=1;i<m;i++) base[i]=base[i-1]*B;
	for (int i=1;i<=n;i++)
	{
		scanf("%d",&a);
		hash+=a*base[i-1];
		sum+=base[i-1];
	}
	for (int i=1;i<=m;i++)
	{
		scanf("%d",&a);
		pos[a]=i;
	}
	for (int i=1;i<=n;i++) Change(1,1,m,pos[i],i);
	if (hash==tree[1]) ans++;
	for (int i=n+1;i<=m;i++)
	{
		Change(1,1,m,pos[i-n],0);
		Change(1,1,m,pos[i],i);
		if (hash+sum*(i-n)==tree[1]) ans++;
	}
	printf("%d\n",ans);
	return 0;
}
