#include<cstdio>
#include<cstring>
#define maxn 200005
int a[maxn], b[maxn], next[maxn], bit[maxn], low[maxn], n, m, p;
int lowbit(int x) {
	return x & -x;
}
int sum(int i) {
	int s = 0;
	while(i > 0) {
		s += bit[i];
		i -= lowbit(i);
	}
	return s;
}
void add(int i, int x) {
	while(i < m) {
		bit[i] += x;
		i += lowbit(i);
	}
}
void init() {
	p = 0;
	memset(bit, 0 ,sizeof(bit));
}
bool judge(int i, int j, int *r) {
	while(p < i - j) add(r[p++], -1);
	int u = sum(r[i] - 1);
	return low[j] == u;
}
int main() {
	int t;
	scanf("%d%d", &n, &m);
	for(int i = 0; i < n; i++) {
		scanf("%d", &t);
		a[t - 1] = i + 1;
	}
	for(int i = 0; i < m; i++) {
		scanf("%d", &t);
		b[t - 1] = i + 1;
	}
	init();
	low[n] = maxn;
	for(int i = 0; i < n; i++) {
		low[i] = sum(a[i] - 1);
		add(a[i], 1);
	}
	init();
	for(int i = 0, j = -1; i <= n; i++) {
		next[i] = j;
		if(i == n) break;
		while(~j && !judge(i, j, a)) j = next[j];
		j++;
		add(a[i], 1);
	}
	int ans = 0;
	init();
	for(int i = 0, j = 0; i <= m; i++, j++) {
		if(j == n) ans++;	
		if(i == m) break;
			while(~j && !judge(i, j, b)) j = next[j];
		add(b[i], 1);
	}
	printf("%d\n", ans);
	return 0;
}

	 		    		   	 	 	 			 			