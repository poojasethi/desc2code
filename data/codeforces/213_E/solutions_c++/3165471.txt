#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <algorithm>
using namespace std;
const int MAXN=200005;

int ans=0,n,m,a[MAXN],b[MAXN],loc[MAXN],l[MAXN],r[MAXN],m1[MAXN],m2[MAXN],pre[MAXN];

int get()
{
	int f=0,v=0; char ch;
	while (!isdigit(ch=getchar()))if (ch=='-')break;
	if (ch=='-')f=1; else v=ch-48;
	while (isdigit(ch=getchar()))v=v*10+ch-48;
	if (f==1)return -v ;return v;
}

bool cmp(int x,int y,int *b)
{
	if(m1[x]>0&&b[y]<b[y-x+m1[x]])return 0;
	if(m2[x]>0&&b[y]>b[y-x+m2[x]])return 0;
	return 1;
}

int main()
{
	n=get(),m=get();
	int x;
	for(int i=1;i<=n;i++)x=get(),a[x]=i;
	for(int i=1;i<=m;i++)x=get(),b[x]=i;
	for(int i=1;i<=n;i++)loc[a[i]]=i,l[i]=i-1,r[i]=i+1;r[n]=0;
	for(int i=n;i>0;i--)
	{
		m1[i]=loc[l[a[i]]],m2[i]=loc[r[a[i]]];
		r[l[a[i]]]=r[a[i]],l[r[a[i]]]=l[a[i]];
	}
	pre[1]=0;int j=0;
	for(int i=2;i<=n;i++)
	{
		while(j>0&&!cmp(j+1,i,a))j=pre[j];
		if(cmp(j+1,i,a))j++;pre[i]=j;
	}
	j=0;
	for(int i=1;i<=m;i++)
	{
		while(j>0&&!cmp(j+1,i,b))j=pre[j];
		if(cmp(j+1,i,b))j++;
		if(j==n)ans++,j=pre[j];
	}
	printf("%d\n",ans);
	return 0;
}
