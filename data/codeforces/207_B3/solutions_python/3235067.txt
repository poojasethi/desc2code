#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#define fi "tanks.inp"
#define fo "tanks.out"
#define nmax 500000+5
#define mmax 20+2
#define INF 1000000000
using namespace std;
typedef long long ll;
const int delta=20;
//VARIABLES
int n,m,d[nmax][mmax],f[nmax][mmax],a[nmax];
ll res;
//FUNCTION PROTOTYPES

void Init();
void Process();

//MAIN
int main()
{
//       freopen(fi,"r",stdin);
//       freopen(fo,"w",stdout);
       Init();
       Process();
       return 0;
}

//FUNCTIONS AND PROCEDURES
void Init()
{
	scanf("%d",&n);
	for (int i=1;i<=n;++i)
	{
		scanf("%d",&a[i]);
		a[i+n]=a[i];
		f[i][0]=i;
		f[i+n][0]=i+n;
	}
}
int cmp(int p, int q)
{
	return (p-a[p]<q-a[q])?p:q;
}
int Cal(int k, int target)
{
	int S=2;
	if (k-a[k]<=target) return 1;
//	cout << k << "   "  << target << endl;
	for (int j=delta-1;j>=0;--j)
	if (d[k][j]-a[d[k][j]]>target)
	{
		k=d[k][j];
		S+=(1<<j);
	}
//	cout << S << endl;
	return S;
}
int Get(int p, int q)
{
	int t=0;
	while ((1<<(t+1))<=(q-p+1)) ++t;
	return cmp(f[q][t],f[p+(1<<t)-1][t]);
}
void Process()
{
	for (int j=1;j<delta;++j)
	for (int i=(1<<j);i<=n+n;++i)
	f[i][j]=cmp(f[i][j-1],f[i-(1<<(j-1))][j-1]);
	for (int i=1;i<=n+n;++i) 
	if (i-a[i]>0) d[i][0]=Get(i-a[i],i-1); else d[i][0]=1;
	for (int j=1;j<delta;++j)
	for (int i=1;i<=n+n;++i)
	d[i][j]=d[d[i][j-1]][j-1];
	for (int i=n;i<n+n;++i) res+=ll(Cal(i,i-n+1));
	cout << res << endl;
}
