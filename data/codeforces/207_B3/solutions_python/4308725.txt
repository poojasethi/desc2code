//Military Trainings
#include<cstdio>
#include<iostream>
#include<algorithm>
#define rep(i,l,r) for(int i=l;i<=r;i++)
#define red(i,r,l) for(int i=r;i>=l;i--)
#define db(x) cout<<#x<<"="<<(x)<<" "
#define el cout<<endl
using namespace std;
typedef long long LL;
const int MXN=500009;

int N,n;
int a[MXN];
int q[MXN]={},top=0;
int fa[MXN];

int g[30]={};
int log[MXN]={};
int st[MXN][21];
namespace LCA{
    void init(){
        rep(i,2,N)log[i]=log[i>>1]+1;
        rep(i,1,N)st[i][0]=fa[i];
        rep(k,0,19)
        rep(i,1,N)st[i][k+1]=st[st[i][k]][k];
    }
}

void solve(){
    scanf("%d",&n);N=n*2;
    rep(i,1,n)scanf("%d",a+i),a[i+n]=a[i];
    top=0;
    rep(i,1,N){
        while (top&&(q[top]-a[q[top]]>=i-a[i])) top--;
        if (i-a[i]<=1){
            fa[i]=1;
        }else{
            fa[i]=q[lower_bound(q+1,q+top+1,i-a[i])-q];
        }
        q[++top]=i;
    }
    LCA::init();
    LL ans=0;
    rep(i,1,n){
        int step=0;
        int u=i+n-1;
        if (u-a[u]>i){
            red(k,19,0){
                if (st[u][k]-a[st[u][k]]>i) u=st[u][k],step+=1<<k;
            }
            step++;
        }
        step++;
        ans+=step;
    }
    printf("%I64d\n",ans);
}

int main(){
    solve();
    return 0;
}
