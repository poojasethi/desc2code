//program 207-B

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

using namespace std;

struct Data
{
  int Far,Number;
};

bool operator <(Data A,Data B)
{
  return A.Far<B.Far;
}

int Get()
{
  char c;while(c=getchar(),c<'0'||c>'9');
  int X=0;while(c>='0'&&c<='9'){X=X*10+c-48;c=getchar();}
  return X;
}

int main()
{
  int N=Get();
  static int A[500000];
  for(int i=0;i<N;i++)
    A[i]=A[N+i]=Get();
  static Data ST[19][500000];
  for(int i=0;i<N*2;i++)
    ST[0][i]=(Data){max(i-A[i],0),i};
  for(int i=1,Len=1;i<19;i++,Len*=2)
    for(int j=0;j<=N*2-Len*2;j++)
      ST[i][j]=min(ST[i-1][j],ST[i-1][j+Len]);
  static int Log[500001],DP[19][500000];
  for(int i=1,j=0;i<=N*2;Log[i++]=j)
    if(i==(1<<(j+1)))j++;
  for(int i=0;i<N*2;i++)
    {
      int L=ST[0][i].Far,R=i,P=Log[R-L+1];
      DP[0][i]=min(ST[P][L],ST[P][R-(1<<P)+1]).Number;
    }
  for(int i=1;i<19;i++)
    for(int j=0;j<N*2;j++)
      DP[i][j]=DP[i-1][DP[i-1][j]];
  long long Ans=0;
  for(int i=0;i<N;i++)
    if(ST[0][i+N-1].Far<=i)
      Ans++;
    else
      {
        int P=i+N-1;
        for(int j=18;j>=0;j--)
          if(ST[0][DP[j][P]].Far>i)
            {P=DP[j][P];Ans+=1<<j;}
        Ans+=2;
      }
  cout<<Ans<<endl;
  return 0;
}
