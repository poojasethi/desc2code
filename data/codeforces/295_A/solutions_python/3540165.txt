#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import sys

MAXN = 100000

def ReadIn():
    data = [int(x) for x in sys.stdin.read().split()]
    offset = 0
    while offset < len(data):
        n, m, k = data[offset : offset + 3]
        offset += 3
        array = data[offset : offset + n]
        offset += n
        operations = [data[index : index + 3] for index in xrange(offset, offset + 3 * m, 3)]
        offset += 3 * m
        queries = [data[index : index + 2] for index in xrange(offset, offset + 2 * k, 2)]
        offset += 2 * k
        yield n, array, operations, queries

def Solve(n, array, operations, queries):
    cnt = [0] * (len(operations) + 2)
    for left, right in queries:
        cnt[left] += 1
        cnt[right + 1] -= 1
    for i in xrange(len(operations)):
        cnt[i + 1] += cnt[i]
        operations[i][2] *= cnt[i + 1]
    cnt = [0] * (len(array) + 2)
    for left, right, inc in operations:
        cnt[left] += inc
        cnt[right + 1] -= inc
    for i in xrange(len(array)):
        cnt[i + 1] += cnt[i]
        print array[i] + cnt[i + 1],
    print


if __name__ == '__main__':
    for n, array, operations, queries in ReadIn():
        Solve(n, array, operations, queries)
