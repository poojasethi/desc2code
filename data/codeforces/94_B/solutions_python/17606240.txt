re = [[False] * 5 for i in xrange(5)]
win = False
p = [0] * 3

def dfs(x, step):
	global re, win, p
	if win: return
	if 3 == step:
		a, b, c = p
		if re[a][b] == re[a][c] == re[b][c]: win = True
		return
	for i in xrange(x, 5):
		p[step] = i
		dfs(i + 1, step + 1)  

def main():
	m = input()
#	re = [[False] * 5 for i in xrange(5)]
	for i in xrange(m):
		a, b = map(int, raw_input().split())
		re[a - 1][b - 1] = True
		re[b - 1][a - 1] = True
	dfs(0, 0)
	global win
	print "WIN" if win else "FAIL"

if __name__ == "__main__": main()
