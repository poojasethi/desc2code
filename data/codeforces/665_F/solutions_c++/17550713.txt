#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#include<vector>
#define mo 1000007
#define N 1000005
#define PAIR pair<LL,int>
#define LL long long
#define oo (1<<30)
using namespace std;
vector<PAIR> H[mo];
LL n,val[N],ans,cnt[N]; int S[N];
int  m,up[N],p[N],len,b[N],mp[N];
void prepare()
{
	int i,j; b[1]=1;
	for(i=2;i<N;i++){
		if(!b[i]) p[++len]=i;
		for(j=1;j<=len;j++){
			if(1LL*i*p[j]>=N) break;
			b[1LL*i*p[j]]=1;
			if(i%p[j]==0) break;
		  }
	  }
	for(i=1;i<N;i++) S[i]=S[i-1]+(!b[i]);
	for(i=1;i<=len;i++) mp[p[i]]=i;
	for(i=N-1;i>=1;i--) mp[i]=mp[i] ? mp[i] : mp[i+1];
}
int SQRT(LL n)
{
	int p=(int)(sqrt(n));
	while(1LL*p*p<=n) p++;
	return p;
}
LL find(LL x,int t)
{
	int i,u=x%mo,p;
	for(i=0;i<H[u].size();i++)
		if(H[u][i].first==x) break;
	p=H[u][i].second;
	return t>up[p] ? cnt[p]+up[p]-t : cnt[p];
}
LL Pi(int t){ return cnt[t]+up[t]-1;}
void update(int t)
{
	LL i,x=val[t],l=n/(x+1)+1,r=n/x;
	r=min(r,(LL)(sqrt(n)));
	for(i=l;i<=r;i++)
		if(!b[i]) ans+=Pi(t)-S[i];
}
int main()
{
	LL i,j=1,q=1; LL x=0;
	cin>>n; prepare(),m=1;
	//p*p*p
	for(i=1;1LL*p[i]*p[i]*p[i]<=n;i++) ans++;
	//p1*p2(p1<p2)
	for(i=1;i<=n;i=n/(val[m++])+1)
		val[m]=n/i;
	m--,sort(val+1,val+m+1);
	for(i=1;i<=m;i++)
		H[val[i]%mo].push_back(PAIR(val[i],i));
	for(i=1;i<=m;i++)
		up[i]=mp[SQRT(val[i])];
	for(i=1;i<=up[m];i++){
		for(j=m;j>=q;j--){
			if(i!=1){
		  	x=find(val[j]/p[i-1],i-1);
		  	cnt[j]=cnt[j]-x-1;
			  }
			else cnt[j]=val[j]-1;
		  }
		while(q<=m&&i==up[q])
			update(q++);
	  }
	cout<<ans;
	return 0;
}
