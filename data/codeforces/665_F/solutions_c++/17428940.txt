//#pragma comment(linker,"/STACK:10240000,10240000")
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
using namespace std;
typedef long long LL;
typedef pair<int,int> PII;
typedef pair<LL,LL> PLL;
#define clr(a,b) memset(a,b,sizeof(a))
#define MP make_pair
#define PB push_back
#define lrt rt<<1
#define rrt rt<<1|1
#define lson l,m,lrt
using namespace std;
/*------------------------- template ------------------------------*/
LL sqrt2(LL x){
    LL r = (LL)sqrt(x-0.1);
    while(r*r<=x)   ++r;
    return r-1;
}
LL sqrt3(LL x){
    LL r = (LL)cbrt(x-0.1);
    while(r*r*r<=x)   ++r;
    return r-1;
}
const int N = 1e6+2;
LL L[N],R[N];
LL getans(LL n){ // n < 1e12
    LL rn = sqrt2(n);
    for(LL i=1;i<=rn;++i)   R[i]=n/i-1;
    LL ln = n/rn+1;
    for(LL i=1;i<=ln;++i)   L[i]=i-1;
    for(LL p=2;p<=rn;++p){
        if(L[p]==L[p-1])    continue;
        for(LL i=1,tn=min(n/(p*p),rn);i<=tn;++i){
            R[i] -= (i*p<=rn?R[i*p]:L[n/(i*p)])-L[p-1];
        }
        for(LL i=ln;i>=p*p;--i){
            L[i] -= L[i/p]-L[p-1];
        }
    }
    LL ans = L[sqrt3(n)];
    for(LL p=2;p<=rn;++p){
        if(L[p] == L[p-1])  continue;
        ans += R[p]-L[p];
    }
    return ans;
}
int main(){
//    freopen("/Users/dna049/Desktop/AC/in","r",stdin);
//    freopen("/Users/dna049/Desktop/AC/out","w",stdout);
//    int T;
    
//    scanf("%d",&T);
//    while(T--){
//        int n,m;
//        scanf("%d%d",&n,&m);
//
//    }
//    init();
    LL n;
    while(cin>>n){
        cout<<getans(n)<<endl;
    }
    return 0;
}