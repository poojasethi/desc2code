#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#define id(i,j,r) ((i-1)*4*m+(j-1)*4+(r))
using namespace std;
typedef long long LL;
inline int read()
{
	int f=0,x=0;char c=getchar();
	for (;c<'0'||c>'9';c=getchar()) f=c=='-'?1:0;
	for (;c>='0'&&c<='9';c=getchar()) x=x*10+c-'0';
	return f?-x:x;
}
const int N=1010,M=4000010;
const int dic[4][2]={{0,1},{1,0},{0,-1},{-1,0}};
int n,m,ds[M],dis[M],x1,x2,y1,y2,qu[M];
char in[N];

int bfs()
{
	int h=0,t=0;
	dis[id(x1,y1,0)]=1;qu[t++]=id(x1,y1,0);
	while (h!=t)
	{
		int s=qu[h++];
		int x=s/(4*m)+1,y=(s/4)%m+1,r=s%4,rr=(r+1)%4;
		if (x==x2&&y==y2) return dis[s]-1;
		if (!dis[id(x,y,rr)]) 
			dis[id(x,y,rr)]=dis[s]+1,qu[t++]=id(x,y,rr);
		for (int k=0;k<4;k++)
		{
			int xx=x+dic[k][0],yy=y+dic[k][1];
			if (!xx||xx>n||!yy||yy>m||dis[id(xx,yy,r)]) continue;
			if (!ds[id(x,y,(k-r+4)%4)]||!ds[id(xx,yy,(k-r+6)%4)]) continue;
			dis[id(xx,yy,r)]=dis[s]+1;
			qu[t++]=id(xx,yy,r);
		}
	}
	return -1;
}

int main()
{
	n=read();m=read();
	for (int i=1,dc[4];i<=n;i++)
	{
		scanf("%s",in+1);
		for (int j=1;j<=m;j++)
		{
			dc[0]=dc[1]=dc[2]=dc[3]=0;
			switch (in[j])
			{
				case '+': dc[0]=dc[1]=dc[2]=dc[3]=1;break;
				case '-': dc[0]=dc[2]=1;break;
				case '|': dc[1]=dc[3]=1;break;
				case '>': dc[0]=1;break;
				case 'v': dc[1]=1;break;
				case '<': dc[2]=1;break;
				case '^': dc[3]=1;break;
				case 'R': dc[1]=dc[2]=dc[3]=1;break;
				case 'D': dc[0]=dc[2]=dc[3]=1;break;
				case 'L': dc[0]=dc[1]=dc[3]=1;break;
				case 'U': dc[0]=dc[1]=dc[2]=1;break;
			}
			for (int k=0;k<4;k++) ds[id(i,j,k)]=dc[k];
		}
	}
	x1=read();y1=read();x2=read();y2=read();
	int ans=bfs();
	cout<<ans<<endl;
	return 0;
}
