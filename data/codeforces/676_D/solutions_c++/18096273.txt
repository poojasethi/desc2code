#include <bits/stdc++.h>
using namespace std;
#define inf 1<<30
char s[1010][1010];
int mat[1010][1010][4];
int mark[1010][1010][4];
int move[4][2]={{-1,0},{0,1},{1,0},{0,-1}};
int n,m,sx,sy,fx,fy;

char t[300];

struct p
{
	int x,y,z;
	p():x(0),y(0),z(0) {}
	p(int x,int y,int z) : x(x) ,y(y),z(z){}
};
queue <p> q;

char roda(char x,int y)
{
	return (15&(x<<y)) | (15&((x<<y)>>4)) ;
}

int bfs(int x,int y)
{
	p u;
	int d,mask,z,dest;
	mat[x][y][0]=0;
	q.push(p(x,y,0));
	while(!q.empty())
	{

		u=q.front();
		q.pop();
		d=mat[u.x][u.y][u.z];
		

		//printf("x%d y%d z%d d%d\n",u.x,u.y,u.z,d);
		if(u.x==fx && u.y==fy)
		{
			while(!q.empty()) q.pop();
			return d;
		}
		x=u.x;
		y=u.y;
		z=(u.z+1)%4;
		if(mat[x][y][z]==inf)
		{
			mat[x][y][z]=d+1;
			q.push(p(x,y,z));
		}
		mask=roda(s[u.x][u.y],u.z);

		z=u.z;
		for(int i=0;i<4;i++)
		{
			x=u.x+move[i][0];
			y=u.y+move[i][1];
			dest=roda(s[x][y],z);
			if((mask & (1<<i)) && (dest & (1 <<((i+2)%4))) && mat[x][y][z]==inf)
			{
				//printf("ax%d y%d z%d d%d\n",x,y,z);
				mat[x][y][u.z]=d+1;
				q.push(p(x,y,z));

			}

		}
	}
	return -1;
}

int main()
{
	t['^']=1;
	t['>']=2;
	t['v']=4;
	t['V']=4;
	t['<']=8;
	t['-']=t['<']|t['>'];
	t['|']=t['^']|t['v'];
	t['+']=15;
	t['*']=0;
	t[0]=0;
	t['L']=t['+']^t['<'];
	t['R']=t['+']^t['>'];
	t['D']=t['+']^t['V'];
	t['U']=t['+']^t['^'];
	
	// for(int i=0;i<4;i++)
	// {
	// 	printf("%d\n",(int)roda(t['<'],1));
	// }
	memset(s,'*',sizeof(s));
	scanf("%d %d",&n,&m);
	for(int i=1;i<=n;i++)
	{
		scanf(" %s", s[i]+1);
	}

	for(int i=0;i<=n+1;i++)
	{
		for(int j=0;j<=m+1;j++)
		{
			
			s[i][j]=t[s[i][j]];
			for(int k=0;k<4;k++)
			{
				mat[i][j][k]=inf;
			}
			//printf("%2d ",(int)s[i][j]);
		}
		// printf("\n");
	}
	scanf("%d %d %d %d",&sx,&sy,&fx,&fy);
	printf("%d\n",bfs(sx,sy));
	return 0;
}
	
