/*
coded by @just_code21
Â© to Prakhar Srivastava
*/
#include<bits/stdc++.h>
#define ll long long int
#define M 1000000007
#define MAX 1002
#define mp(a,b,c) make_pair(a,make_pair(b,c))
using namespace std;
typedef pair<int,int>pii;

int dist[4][MAX][MAX];
int arr[MAX][MAX];
int dx[]={-1,0,1,0};
int dy[]={0,1,0,-1};
int rev[]={2,3,0,1};

int get(char c)
{
	switch(c)
	{
		case '+': return 15;
		case '-': return 10;
		case '|': return 5;
		case '^': return 1;
		case '>': return 2;
		case 'v': return 4;
		case '<': return 8;
		case 'U': return 14;
		case 'R': return 13;
		case 'D': return 11;
		case 'L': return 7;
		case '*': return 0;
	}
}

int haspath(int x,int y,int state,int dir)
{
	return (arr[x][y]>>((4-state+dir)%4))&1;
}

int main()
{
	//ifstream fin("input.txt");
	int r,c,xs,ys,xe,ye;
	char ch;
	//fin>>r>>c;
	scanf("%d %d",&r,&c);
	for(int i=0;i<r;i++)
		for(int j=0;j<c;j++)
		{
			//fin>>ch;
			scanf(" %c",&ch);
			arr[i][j]=get(ch);
		}
	//fin>>xs>>ys>>xe>>ye;
	scanf("%d %d %d %d",&xs,&ys,&xe,&ye);
	xs--;ys--;xe--;ye--;
	queue<pair<int,pair<int,int> > >Q;
	for(int i=0;i<4;i++)
		for(int j=0;j<MAX;j++)
			for(int k=0;k<MAX;k++)
				dist[i][j][k]=-1;
	dist[0][xs][ys]=0;
	Q.push(mp(0,xs,ys));
	while(!Q.empty())
	{
		int state=Q.front().first;
		int x=Q.front().second.first;
		int y=Q.front().second.second;
		Q.pop();
		if(x==xe&&y==ye)
		{
			printf("%d\n",dist[state][x][y]);
			return 0;
		}
		int newstate=(state+1)%4;
		if(dist[newstate][x][y]<0)
		{
			dist[newstate][x][y]=dist[state][x][y]+1;
			Q.push(mp(newstate,x,y));
		}
		for(int i=0;i<4;i++)
		{
			int nx=x+dx[i];
			int ny=y+dy[i];
			if(nx>=0 && nx<r && ny>=0 && ny<c)
			{
				if(dist[state][nx][ny]<0 && haspath(x,y,state,i) && haspath(nx,ny,state,rev[i]))
				{
					dist[state][nx][ny]=dist[state][x][y]+1;
					Q.push(mp(state,nx,ny));
				}
			}
		}
	}
	printf("-1\n");
	return 0;
}
/*

*/

