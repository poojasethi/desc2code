
#include<bits/stdc++.h>

typedef long long LL;
using namespace std;
const int M = 1000000007;
const int N = 1002;

typedef struct pt {LL x;LL y;LL d;} pt;

const LL dx[]={-1,0,1,0};
const LL dy[]={0,1,0,-1};

char arr[N][N];
LL dp[N][N][4];

LL get(LL a,LL sh)
{
return ((a<<sh)&15) | (a>>(4-sh)) ;

}

int main()
{
LL n,m,i,j,k,a,b,c,d,nx,ny;
cin>>n>>m;
LL mk[N][N];

for(i=0;i<n;i++)
	for(j=0;j<m;j++)
		{
		cin>>arr[i][j];
		for(k=0;k<4;k++)
			dp[i][j][k] = -1;	

		if(arr[i][j]=='*')
			mk[i][j]=0;
		if(arr[i][j]=='^')
			mk[i][j]=1;
		if(arr[i][j]=='>')
			mk[i][j]=2;
		if(arr[i][j]=='v')
			mk[i][j]=4;
		if(arr[i][j]=='<')
			mk[i][j]=8;
		if(arr[i][j]=='+')
			mk[i][j]=15;	
		if(arr[i][j]=='-')	
			mk[i][j]=2+8;
		if(arr[i][j]=='|')
			mk[i][j]=1+4;
		if(arr[i][j]=='L')
			mk[i][j]=15-8;
		if(arr[i][j]=='R')
			mk[i][j]=15-2;
		if(arr[i][j]=='D')
			mk[i][j]=15-4;
		if(arr[i][j]=='U')
			mk[i][j]=15-1;

		}


queue <pt> q;

cin>>a>>b;
cin>>c>>d;
a--;b--;c--;d--;
pt p1 = {a,b,0};
q.push(p1);
LL ans=M;
dp[a][b][0] = 0;

while(!q.empty())
{
pt p1=q.front();
q.pop();

//cout<<p1.x<<' '<<p1.y<<endl;

if(p1.x==c && p1.y==d)
	ans=min(ans,dp[p1.x][p1.y][p1.d]);

if(dp[p1.x][p1.y][(p1.d+1)%4] == -1)
	{
	dp[p1.x][p1.y][(p1.d+1)%4] = dp[p1.x][p1.y][p1.d] + 1;	
	pt p2 = {p1.x,p1.y,(p1.d+1)%4};
	q.push(p2);	
	}

for(i=0;i<4;i++)
	{
	nx = p1.x + dx[i];	
	ny = p1.y + dy[i];

	if(nx<0 || ny<0 || nx>=n || ny>=m)
		continue;

	if(dp[nx][ny][p1.d]!= -1)  continue;

	
	//if(p1.d==2)
	

	 

	if(!( (get(mk[p1.x][p1.y],p1.d)&(1<<i)) && (get(mk[nx][ny],p1.d)&(1<<((i+2)%4)))))
		continue;
 
 	//cout<<p1.x<<' '<<p1.y<<' '<<nx<<' '<<ny<<' '<<p1.d<<endl;
 	//cout<<get(mk[p1.x][p1.y],p1.d)<<' '<<get(mk[nx][ny],p1.d)<<' '<<i<<endl;


	pt p3={nx,ny,p1.d};
	dp[nx][ny][p1.d] = dp[p1.x][p1.y][p1.d] + 1;

	q.push(p3);

	}


}


//for(i=0;i<4;i++)
//	cout<<dp[0][0][i]<<' '<<dp[0][1][i]<<endl;
if(ans==M)
	ans=-1;	

cout<<ans<<endl;

}

