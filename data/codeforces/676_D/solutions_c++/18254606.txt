#include <cstdio>
#include <iostream>
#include <queue>

#define FOR(x, a, b) for(int x = a; x <= b; ++x)
#define REP(x, a, b) for(int x = a; x < b; ++x)
#define fi first
#define se second

using namespace std;

const int MAXN = 1004;

typedef pair<int, int> II;
typedef pair<II, II> IIII;

int mask[13] = {15, 5, 10, 8, 1, 4, 2, 11, 14, 7, 13, 0};
int dx[] = {0, 1, 0, -1};
int dy[] = {1, 0, -1, 0};
int door[MAXN][MAXN], n, m, sx, sy, fx, fy, ans = 0;
queue <IIII> Q;
bool visit[MAXN][MAXN][5];

int getbit(int x, int p)
{
    return (x >> p & 1);
}

bool Inside(int x, int y)
{
    return (1 <= x && x <= n && 1 <= y && y <= m);
}

int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
    #endif // ONLINE_JUDGE
    string st = "+-|^><vLRUD*";
    scanf("%d%d\n", &n, &m);
    FOR(i, 1, n)
    {
      FOR(j, 1, m)
      {
          char c = getchar();
          door[i][j] = mask[st.find(c, 0)];

      }
      scanf("\n");
    }
   /* FOR(i, 1, n)
    {
        FOR(j, 1, m) printf("%d ", door[i][j]);
        printf("\n");
    }*/
    scanf("%d%d", &sx, &sy);
    scanf("%d%d", &fx, &fy);
    Q.push(IIII(II(sx, sy), II(0, 0)));
    while (Q.size())
    {
        IIII temp = Q.front();
        Q.pop();
        int x = temp.fi.fi, y = temp.fi.se, state = temp.se.fi, dist = temp.se.se;
        if (x == fx && y == fy)
        {
            printf("%d", dist);
            return 0;
        }
        if (visit[x][y][state]) continue;
        visit[x][y][state] = 1;
        Q.push(IIII(II(x, y), II((state + 3) % 4, dist + 1)));
        FOR(i, 0, 3)
        {
            int u = x + dx[i];
            int v = y + dy[i];
            if (Inside(u, v) && getbit(door[x][y], (state + i) % 4) && getbit(door[u][v], (i + state + 2) % 4)) Q.push(IIII(II(u, v), II(state, dist + 1)));
        }
    }
    printf("-1");
    return 0;




}
