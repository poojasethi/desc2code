#include<cstdio>
#include<queue>
using namespace std;
struct node
{
	int step,x,y,t;
	friend bool operator <(node a,node b)
	{
		return a.step>b.step;
	}
};
priority_queue <node> q;
int mp[300];
char g[1005][1005];
int n,m,sx,sy,ex,ey,vis[1005][1005][5],d[4][2]={-1,0,0,-1,1,0,0,1};
int cal(int x,int y,int t)
{
	int cnt=t%4,tmp=mp[g[x][y]];
	return (tmp>>cnt)|(tmp%(1<<cnt)<<(4-cnt));
}
int getbit(int k,int n)
{
	return ((k>>n)&1);
}
int bfs()
{
	node now,next;
	now.step=0;now.t=0;now.x=sx;now.y=sy;
	q.push(now);
	vis[sx][sy][0]=1;
	while(!q.empty())
	{
		now=q.top();
		q.pop();
		if(now.x==ex&&now.y==ey)
			return now.step;
		for(int i=0;i<4;i++)
		{
			int xx=now.x+d[i][0];
			int yy=now.y+d[i][1];
			if(xx<1||yy<1||xx>n||yy>m||vis[xx][yy][now.t%4])
				continue;
			int s1=cal(now.x,now.y,now.t),s2=cal(xx,yy,now.t);
			if(getbit(s1,i)&&getbit(s2,(i+2)%4))
			{
				next.x=xx;next.y=yy;next.t=now.t;next.step=now.step+1;
				vis[xx][yy][now.t%4]=1;
				q.push(next);
			}
		}
		next.x=now.x;next.y=now.y;next.step=now.step+1;next.t=now.t+1;
		if(!vis[now.x][now.y][next.t%4])
		{
			vis[now.x][now.y][next.t%4]=1;
			q.push(next);
		}
	}
	return -1;
}
int main()
{
	mp['+']=15;mp['-']=10;mp['|']=5;mp['^']=1;mp['>']=8;mp['<']=2;mp['v']=4;mp['L']=13;mp['R']=7;mp['U']=14;mp['D']=11;mp['*']=0;
	int i;
	scanf("%d%d",&n,&m);
	for(i=1;i<=n;i++)
		scanf("%s",g[i]+1);
	scanf("%d%d%d%d",&sx,&sy,&ex,&ey);
	printf("%d\n",bfs());
	return 0;
}
