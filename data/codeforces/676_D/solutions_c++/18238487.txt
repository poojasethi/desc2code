#include<bits/stdc++.h>
using namespace std;
#define MAXN 1100
#define inf 0x3f3f3f3f
#define eps 1e10
typedef long long LL;
struct node
{
    int x,y;
    int f,dis;
    node(int a,int b,int c,int d)
    {
        x = a;
        y = b;
        f = c;
        dis = d;
    }
};
int n,m;
int s1,s2;
int t1,t2;
char str[MAXN][MAXN];
int vis[MAXN][MAXN][10];
int dx[] = {-1,0,1,0},
    dy[] = {0,1,0,-1};
int check(char c,int f)
{
    if(!f) return c=='+'||c=='^'||c=='L'||c=='R'||c=='D'||c=='|';
    else if(f==1) return c=='+'||c=='-'||c=='>'||c=='L'||c=='U'||c=='D';
    else if(f==2) return c=='+'||c=='|'||c=='v'||c=='L'||c=='R'||c=='U';
    else return c=='+'||c=='<'||c=='-'||c=='R'||c=='U'||c=='D';
}
int BFS()
{
    queue<node> qur;
    memset(vis,0,sizeof(vis));
    qur.push(node(s1,s2,0,0));
    vis[s1][s2][0] = 1;
    while(!qur.empty())
    {
        node q1 = qur.front();
        qur.pop();

        if(q1.x == t1 && q1.y == t2)
            return q1.dis;
        if(!vis[q1.x][q1.y][(q1.f+1)%4])
        {
            qur.push(node(q1.x,q1.y,(q1.f+1)%4,q1.dis+1));
            vis[q1.x][q1.y][(q1.f+1)%4] = 1;
        }
        for(int i = 0; i < 4; ++i)
        {
            int nx = q1.x+dx[i];
            int ny = q1.y+dy[i];
//            cout << nx << ' ' <<  ny << endl;
//        cout << q1.f << endl;
            if(nx <= 0 || ny <= 0 || nx > n || ny > m )
                continue;
            if(!vis[nx][ny][q1.f] && check(str[q1.x][q1.y],(q1.f*3+i)%4) &&check(str[nx][ny],(q1.f*3+i+2)%4))
            {
                qur.push(node(nx,ny,q1.f,q1.dis+1));
                vis[nx][ny][q1.f] = 1;
            }
        }
    }
    return -1;
}
int main()
{
//    freopen("stdout.txt","w",stdout);
    while(scanf("%d%d",&n,&m)!=EOF)
    {
        for(int i = 1; i <= n; ++i)
            scanf(" %s",str[i]+1);
        scanf("%d%d%d%d",&s1,&s2,&t1,&t2);
        int ans = BFS();
        printf("%d\n",ans);
    }
    return 0;
}