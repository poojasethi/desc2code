/***********************************************
 |Author: Fry
 |Created Time: 2016/5/30 17:26:32
 |File Name: D.cpp
 |Copyright: 
 |  For personal use, feel free to use
 |  Otherwise call me at http://blog.csdn.net/fry_guest 
***********************************************/
#include <bits/stdc++.h>
using namespace std;
const int N=1005;
int n,m,a,b;
int maze[N][N];
bool dp[N][N][4];
int gox[4]={0,1,0,-1};
int goy[4]={-1,0,1,0};
struct point
{
	int x,y,d,t;
	point (int _x=0,int _y=0,int _d=0,int _t=0){
		x=_x; y=_y; d=_d; t=_t;
	}
};
queue<point>q;
bool check(int x,int y,int k,int d)
{
	int a=x+gox[k],b=y+goy[k];
	if (maze[x][y]&(1<<((k+d)%4)))
	{
		if (maze[a][b]&(1<<((k+2+d)%4))) return true;
	}
	return false;
}
int bfs(int x,int y)
{
	while (!q.empty()) q.pop();
	memset(dp,0,sizeof(dp));
	q.push(point(x,y,0,0));
	dp[x][y][0]=1;
	int d,t,nx,ny;
	while (!q.empty()){
		point p=q.front(); q.pop();
		x=p.x; y=p.y; d=p.d; t=p.t;
	//	printf("x=%d y=%d d=%d t=%d\n",x,y,d,t);
		if (x==a&&y==b) return t;
		for (int i=0;i<4;i++){
			nx=x+gox[i]; ny=y+goy[i];
			if (!dp[nx][ny][d]&&check(x,y,i,d)){
				dp[nx][ny][d]=1;
				q.push(point(nx,ny,d,t+1));
			}
		}
		if (!dp[x][y][(d+1)%4]){
			dp[x][y][(d+1)%4]=1;
			q.push(point(x,y,(d+1)%4,t+1));
		}
	}
	return -1;
}
int main()
{
	char c;	
	int x,y,ans;
	while (~scanf("%d%d",&n,&m)){
		for (int i=1;i<=n;i++){
			for (int j=1;j<=m;j++){
				scanf(" %c",&c);
				if (c=='+') maze[i][j]=15;//1111
				if (c=='-') maze[i][j]=5; //0101
				if (c=='|') maze[i][j]=10;//1010
				if (c=='^') maze[i][j]=8; //1000
				if (c=='<') maze[i][j]=1; //0001
				if (c=='>') maze[i][j]=4; //0100
				if (c=='v') maze[i][j]=2; //0010
				if (c=='L') maze[i][j]=14;//1110
				if (c=='R') maze[i][j]=11;//1011
				if (c=='U') maze[i][j]=7; //0111
				if (c=='D') maze[i][j]=13;//1101
				if (c=='*') maze[i][j]=0; //0000
			}
		}
		scanf("%d%d",&x,&y);
		scanf("%d%d",&a,&b);
		ans=bfs(x,y);
		printf("%d\n",ans);
	}
	return 0;
}


   			 	 	  		 	  	 		 			   	