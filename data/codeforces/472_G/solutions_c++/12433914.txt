#include <cstdio>
#include <cstring>

using namespace std;

const int N=200001;
const int M=6250;

char s1[N],s2[N];
unsigned int a[32][M],b[32][M];
int cnt[1<<16];
int ls1,ls2;

inline int popcount(unsigned int x) {
	return cnt[x&0xffff]+cnt[x>>16];
}
void init() {
	ls1=strlen(s1);
	ls2=strlen(s2);
	for (int j=0;j<32;j++)
		for (int i=j;i<ls1;i++)
			if (s1[i]=='1') a[j][i-j>>5]|=1u<<(i-j&31);
	for (int j=0;j<32;j++)
		for (int i=j;i<ls2;i++)
			if (s2[i]=='1') b[j][i-j>>5]|=1u<<(i-j&31);
}
int solve(int p1,int p2,int len) {
	unsigned int *p=a[p1&31]+(p1>>5),*q=b[p2&31]+(p2>>5);
	int ans=0,m=len>>5;
	for (int i=0;i<m;i++) ans+=popcount(p[i]^q[i]);
	for (int i=m<<5;i<len;i++) if (s1[p1+i]!=s2[p2+i]) ans++;
	return ans;
}
int main() {
	for (int i=0;i<(1<<16);i++)
		cnt[i]=__builtin_popcount(i);
	int q,p1,p2,len;
	scanf("%s%s",s1,s2);
	init();
	scanf("%d",&q);
	while (q--) {
		scanf("%d%d%d",&p1,&p2,&len);
		printf("%d\n",solve(p1,p2,len));
	}
	return 0;
}
