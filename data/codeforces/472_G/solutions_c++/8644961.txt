#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <vector>
#include <set>
using namespace std;

const int MAXN = 200005;
typedef unsigned int ui;
const int BIT = 31;
char a[MAXN];
char b[MAXN];
ui f1[33][MAXN/32];
ui f2[33][MAXN/32];
int bitnum[1<<16];

int getv(ui v)
{
    return bitnum[v&((1<<16)-1)]+bitnum[v>>16];
}

int main()
{
    int L1,L2;
    scanf("%s%s",a,b);
    L1=strlen(a);
    L2=strlen(b);
    for(int i=0;i<32;i++)
    for(int j=0;i+j<L1;j++){
        if(a[i+j]=='1')
            f1[i][j>>5]|=(1U<<(j&BIT));
    }
    for(int i=0;i<32;i++)
    for(int j=0;i+j<L2;j++){
        if(b[i+j]=='1')
            f2[i][j>>5]|=(1U<<(j&BIT));
    }
    for(int i=1;i<(1<<16);i++){
        bitnum[i]=bitnum[i&i-1]+1;
    }
    int m;
    scanf("%d",&m);
    for(int i=0;i<m;i++){
        int l,r,len;
        scanf("%d%d%d",&l,&r,&len);
        ui *p1=f1[l&BIT];
        ui *p2=f2[r&BIT];
        p1+=(l>>5);
        p2+=(r>>5);
        int ans=0;
        while(len>=32){
            len-=32;
            ans+=getv(*p1^*p2);
            p1++;
            p2++;
        }
        if(len){
            ans+=getv((*p1&((1U<<len)-1))^(*p2&((1U<<len)-1)));
        }
        printf("%d\n",ans);
    }
    return 0;
}