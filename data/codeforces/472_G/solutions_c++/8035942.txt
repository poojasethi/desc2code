#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <queue>
#include <map>
#include <set>
#include <cmath>
#include <sstream>
#include <stack>
#include <cassert>
#include <string.h>
#include <bitset>

#define pb push_back
#define mp make_pair
#define PI 3.1415926535897932384626433832795
#define sqr(x) (x)*(x)
#define forn(i, n) for(int i = 0; i < n; ++i)
#define ALL(x) x.begin(), x.end()
#define sz(x) int((x).size())
#define X first
#define Y second
typedef long long ll;
typedef unsigned long long ull;
typedef unsigned int uint;
typedef long double ld;
using namespace std;
typedef pair<int,int> pii;
const int INF = 2147483647;
const ll LLINF = 9223372036854775807LL;

const int maxlen = 200010;

uint a[33][maxlen];
uint b[33][maxlen];

int LUT[1<<16];


int bits(uint x) {
	return LUT[x&65535]+LUT[x>>16];
}

int main()
{
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif
	forn(i, (1<<16)) LUT[i] = LUT[i>>1]+(i&1);
	string s1; cin >> s1;
	string s2; cin >> s2;
	forn(i, 32) for (int j = 0; j + i < sz(s1); ++j) if (s1[j+i] == '1') a[i][j>>5] |= (1<<(j&31));
	forn(i, 32) for (int j = 0; j + i < sz(s2); ++j) if (s2[j+i] == '1') b[i][j>>5] |= (1<<(j&31));
	int q; scanf("%d", &q); forn(iter, q) {
		int p1, p2, len; scanf("%d%d%d", &p1, &p2, &len);
		int sh1 = p1&31;
		int sh2 = p2&31;
		int ans = 0;
		int j1 = (p1-sh1)>>5;
		int j2 = (p2-sh2)>>5;
		int cc = len>>5;
		uint* it1 = a[sh1]+j1;
		uint* it2 = b[sh2]+j2;
		while (cc--) {
			//ans += bits(a[sh1][j1++] ^ b[sh2][j2++]);
			ans += bits(*it1 ^ *it2);
			++it1;
			++it2;
		}
		cc = len>>5;
		int rem = len&31;
		p1 += cc<<5;
		p2 += cc<<5;
		while (rem--) {
			ans += s1[p1++]!=s2[p2++];
		}
		printf("%d\n", ans);
	}

	return 0;
}
