#include <bits/stdc++.h>

using namespace std;

#define dbgs(x) cerr << (#x) << " --> " << (x) << ' '
#define dbg(x) cerr << (#x) << " --> " << (x) << endl

#define foreach(i,x) for(type(x)i=x.begin();i!=x.end();i++)
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define ROF(ii,aa,bb) for(int ii=aa;ii>=bb;ii--)

#define type(x) __typeof(x.begin())

#define orta (bas + son >> 1)
#define sag (k + k + 1)
#define sol (k + k)

#define pb push_back
#define mp make_pair

#define nd second
#define st first

#define endl '\n'

typedef pair < int ,int > pii;

typedef long long ll;

const long long linf = 1e18+5;
const int mod = (int) 1e9 + 7;
const int logN = 17;
const int inf = 1e9;
const int N = 2e6 + 5;
const int T = (1 << 16) - 1;


int t1, q, n, m, cnt[N], x, y, len, t;
unsigned a[32][N >> 5], b[32][N >> 5]; 
char s1[N], s2[N];

int main() {
	scanf("%s %s", s1, s2);
	n = strlen(s1) - 1;
	m = strlen(s2) - 1;
	FOR(i, 0, (1 << 16) - 1)
		cnt[i] = __builtin_popcount(i);
	FOR(i, 0, n-1) {
		int t = i + 32;
		for(int j = i; j < i + 32; j++)
			a[i & 31][i>>5] = (a[i & 31][i>>5] << 1) | (s1[j] != '0');
	}
	FOR(i, 0, m-1) {
		for(int j = i; j < i + 32; j++)
			b[i & 31][i>>5] = (b[i & 31][i>>5] << 1) | (s2[j] != '0');
	}
	scanf("%d", &q);
	FOR(i, 1, q) {
		scanf("%d %d %d", &x, &y, &len);
		int ans = 0, ll = len, u = x + len, xx = x >> 5, yy = y >> 5, v1 = x & 31, v2 = y & 31; 
		while(x + 32 < u) {
			unsigned t1 = a[v1][xx] ^ b[v2][yy];
			ans = ans + cnt[t1 >> 16] + cnt[t1 & T];
			xx++; yy++; x+=32; y+=32;
		}
		while(x < u) { ans += s1[x] != s2[y]; x++; y++; len--; }
		printf("%d\n", ans);
		
	}
	return 0;
}
