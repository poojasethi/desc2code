#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

#define DEBUG(z, x) { cerr << setw(z) << "" << (#x) << " = " << (x) << '\n'; }

using namespace std;

const int N = 200010;

char a[N], b[N];
unsigned cc[1 << 16], aa[33][6666], bb[33][6666];

inline unsigned count(unsigned x) {
  return cc[(x >> 16) & 65535] + cc[x & 65535];
}

inline int query(int pa, int pb, int len) {
  int r = 0;
  int end = len + pa;
  int xa = pa & 31, ya = pa >> 5;
  int xb = pb & 31, yb = pb >> 5;
  for (int i = 0; i + 31 < len; i += 32, pa += 32, pb += 32, ++ya, ++yb) {
    r += count(aa[xa][ya] ^ bb[xb][yb]);
  }
  for (; pa < end; ++pa, ++pb) {
    r += (a[pa] - '0') ^ (b[pb] - '0');
  }
  return r;
}

int main() {
  //assert(freopen("input.txt", "r", stdin));
  //assert(freopen("output.txt", "w", stdout));
  //std::ios::sync_with_stdio(0);
  //std::cin.tie(0);
  scanf("%s %s", a, b);
  int na = strlen(a);
  int nb = strlen(b);
  for (int i = 0; i < 65536; ++i) {
    cc[i] = __builtin_popcount(i);
  }
  for (int i = 0; i < 32; ++i) {
    for (int j = 0, k = i; k + 31 < na; ++j, k += 32)
      for (int z = 0; z < 32; ++z)
        if (a[k + z] == '1')
          aa[i][j] |= 1U << z;
    for (int j = 0, k = i; k + 31 < nb; ++j, k += 32)
      for (int z = 0; z < 32; ++z)
        if (b[k + z] == '1')
          bb[i][j] |= 1U << z;
  }
  int m;
  scanf("%d", &m);
  while (m--) {
    int pa, pb, len;
    scanf("%d %d %d", &pa, &pb, &len);
    printf("%d\n", query(pa, pb, len));
  }
}