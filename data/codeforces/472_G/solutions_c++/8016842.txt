#pragma comment(linker, "/STACK:100000000")
#include <iostream>
#include <algorithm>
#include <memory.h>
#include <cstring>
#include <sstream>
#include <cstdlib>
#include <complex>
#include <string>
#include <bitset>
#include <vector>
#include <cstdio>
#include <ctime>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>
 
using namespace std;
 
typedef long long ll;
typedef long double ld;
typedef unsigned long long ull;
typedef complex < double > cd;
 
const bool db = false;
 
#define mp make_pair
#define pb push_back
#define ppb pop_back
#define sd second
#define fs first
 
#define inf 1000000007
#define nmax 210010
#define mmax 100010
#define eps 1e-9

unsigned a[32][nmax / 32], b[32][nmax / 32];
char aa[nmax], bb[nmax];
int n, m, h[1 << 16];
int l, r, q, len;

inline int H(const unsigned & x) {
	return h[x >> 16] + h[x & ((1 << 16) - 1)];
}

int main() {
	//freopen("input.txt", "r", stdin); freopen("output.txt", "w", stdout);
	//freopen("a.in", "r", stdin); freopen("a.out", "w", stdout);
	gets(aa); gets(bb);
	n = strlen(aa); m = strlen(bb);
	for(int i = 0; i < 32; ++i)
		for(int j = 0; i + j < n; ++j)
			if(aa[i + j] == '1')
				a[i][j >> 5] |= (1U << (j & 31));
	for(int i = 0; i < 32; ++i)
		for(int j = 0; i + j < m; ++j)
			if(bb[i + j] == '1')
				b[i][j >> 5] |= (1U << (j & 31));
	for(int i = 1; i < 1 << 16; ++i)
		h[i] = h[i >> 1] + (i & 1);
	scanf("%d", &q);
	while(q --> 0) {
		scanf("%d%d%d", &l, &r, &len);
		int ans = 0;
		unsigned * lb = a[l & 31], * rb = b[r & 31];
		lb += l >> 5; rb += r >> 5;
		while(len >= 32) {
			ans += H(*lb++ ^ *rb++);
			len -= 32;
		}
		//cout << ld << " " << a[ld][l] << " " << rd << " " << b[rd][r] << " " << len << endl;
		ans += H((*lb ^ *rb) & ((1U << len) - 1));
		printf("%d\n", ans);
	}
	cin.get(); cin.get();
	return 0;
}