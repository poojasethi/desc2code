#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;
typedef unsigned long long lag;
const int N = 200005, MASK = (1 << 16) - 1;

int bits[1 << 16];
int countBits(int x) {
	return bits[(int) x & MASK] + bits[(int) (x >> 16) & MASK];
}

char A[N], B[N];
int a[32][N / 32 + 1], b[32][N / 32 + 1];

int main() {
	for (int i = 0; i < (1 << 16); ++i)
		bits[i] = bits[i >> 1] + (i & 1);
	scanf("%s%s", A, B);
	int alen = strlen(A);
	int blen = strlen(B);
	for (int j = 0; j < 32; ++j)
		for (int i = 0; i + j < alen; ++i)
			if (A[i + j] == '1')
				a[j][i >> 5] |= (1u << (i & 31));
	for (int j = 0; j < 32; ++j)
		for (int i = 0; i + j < blen; ++i)
			if (B[i + j] == '1')
				b[j][i >> 5] |= (1u << (i & 31));
	int q; scanf("%d", &q);
	while (q--) {
		int ai, bi, len;
		scanf("%d%d%d", &ai, &bi, &len);
		int ax = ai >> 5, ay = ai & 31;
		int bx = bi >> 5, by = bi & 31;
		int total = 0;
		while (len >= 32) {
			total += countBits(a[ay][ax++] ^ b[by][bx++]);
			len -= 32;
		}
		if (len > 0) {
			total += countBits((a[ay][ax] ^ b[by][bx]) & ((1u << len) - 1));
		}
		printf("%d\n", total);
	}
}
