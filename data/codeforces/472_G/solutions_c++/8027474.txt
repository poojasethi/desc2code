#include <string>
#include <vector>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <map>
#include <set>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <queue>
#include <utility>
#include <cstring>
#include <list>
#include <stack>
using namespace std;

typedef long long LL;
typedef unsigned int UI;

const int MAXN = 511111;
const int MOD = 1e9 + 7;
const double eps = 1e-6;
const LL MAXL = (LL)(0x7fffffffffffffff);
const int MAXI = 0x7fffffff;

UI A[33][MAXN], B[33][MAXN];
int countOne[1 << 16];

void init(){
	for(int i = 1; i < (1 << 16); i++){
		countOne[i] = countOne[i >> 1] + (i & 1);
	}
}
int get(UI v){
	return countOne[v >> 16] + countOne[v & ((1 << 16) - 1)];
}

const int S = 32;

int main(){

#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif

	string a, b;
	int q;
	init();
	while(cin >> a >> b){
		int n, m;
		n = a.length();
		m = b.length();
		memset(A, 0, sizeof(A));
		memset(B, 0, sizeof(B));
		for(int i = 0; i < S; i++){
			for(int j = 0; i + j < n; j++){
				if(a[i + j] == '1') A[i][j >> 5] |= ((UI)1 << (j & 31));
			}
			for(int j = 0; i + j < m; j++){
				if(b[i + j] == '1') B[i][j >> 5] |= ((UI)1 << (j & 31));
			}
		}
		cin >> q;
		for(int t = 0; t < q; t++){
			int p1, p2, len;
			scanf("%d%d%d", &p1, &p2, &len);
			int ans = 0, l = len;
			int x1 = p1 & 31, x2 = p2 & 31;
			int y1 = p1 >> 5, y2 = p2 >> 5;
			while(len >= S){
				ans += get(A[x1][y1] ^ B[x2][y2]);
				len -= S;
				y1++, y2++;
			}
			for(int i = p1 + l -1, j = p2 + l - 1; len > 0; len--, i--, j--){
				ans += a[i] != b[j];
			}
			cout << ans << endl;
		}
	}	
}