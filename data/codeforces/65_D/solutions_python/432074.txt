import sys

n = int(sys.stdin.readline())
l = sys.stdin.readline()

decode = {'G': 0,
          'H': 1,
          'R': 2,
          'S': 3}
decode1 = ['Gryffindor', 'Hufflepuff', 'Ravenclaw', 'Slytherin']
          
def adjust(dir, state):
    if dir == 0:
        return (state[0] + 1, state[1], state[2], state[3])
    elif dir == 1:
        return (state[0], state[1] + 1, state[2], state[3])
    elif dir == 2:
        return (state[0], state[1], state[2] + 1, state[3])
    else:
        return (state[0], state[1], state[2], state[3] + 1)    
          
def news(selector, state):
    m = min(state)
    c = [i for i, v in enumerate(state) if state[i] == m]
    res = []
    if selector == '?':
        for dir in c:
            res.append(adjust(dir, state))
    else:
        res.append(adjust(decode[selector], state))
    return res    
                   
    
states = set([(0,0,0,0)])
for i in range(n):
    states1 = set()
    for s in states:
        map(states1.add, news(l[i], s))
    states = states1
    #print '-', len(states), states

result = set()
for s in states:
    m = min(s)
    s = [i for i, _ in enumerate(s) if s[i] == m]
    for s_ in s:
        result.add(decode1[s_])
        
print '\n'.join(sorted(result))