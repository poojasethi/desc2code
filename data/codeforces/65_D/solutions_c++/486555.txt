#include<cstdio>
#include<vector>
#include<algorithm>
#include<set>
using namespace std;

set< vector<int> > hash;
char st[1000000];
bool flag[4];
int n;

void dfs(int dep,vector<int> p)
{
    if (hash.find(p)!=hash.end()) return;
    hash.insert(p);
    int s=p[0];
    for (int i=1;i<4;i++) s=min(s,p[i]);
    if (!st[dep])
    {
        for (int i=0;i<4;i++)
        if (p[i]==s) flag[i]=1;
        return;
    }
    if (st[dep]!='?')
    {
        if (st[dep]=='G') p[0]++;else
        if (st[dep]=='R') p[1]++;else
        if (st[dep]=='H') p[2]++;else p[3]++;
        dfs(dep+1,p);
    } else
    {
        for (int i=0;i<4;i++)
        if (p[i]==s)
        {
            p[i]++;
            dfs(dep+1,p);
            p[i]--;
        }
    }
}

int main()
{
    scanf("%d%s",&n,st);
    vector<int> p (4,0);
    dfs(0,p);
    if (flag[0]) printf("Gryffindor\n");
    if (flag[2]) printf("Hufflepuff\n");
    if (flag[1]) printf("Ravenclaw\n");
    if (flag[3]) printf("Slytherin\n");
}
