#include<iostream>
#include<vector>
#include<set>
#include<cstdio>
#include<algorithm>
using namespace std;
set <vector<int> > vis;
int n,can[4];
char s[10010];
char ans[4][50]={"Gryffindor","Hufflepuff","Ravenclaw","Slytherin"};
void dp(int k,vector<int> v)
{
  if (vis.find(v)!=vis.end()) return;
  vis.insert(v);
  int i,Smin=*min_element(v.begin(),v.end());
  if (k==n)
    {
      for (i=0;i<4;i++)
        if (v[i]==Smin) can[i]=1;
      return;
    }
  if (s[k]!='?')
    {
      if (s[k]=='G') v[0]++;
      else if (s[k]=='H') v[1]++;
      else if (s[k]=='R') v[2]++;
      else if (s[k]=='S') v[3]++;
      dp(k+1,v);
      return;
    }
  for (i=0;i<4;i++)
    if (Smin==v[i])
      {
        v[i]++;
        dp(k+1,v);
        v[i]--;
      }
}
int main()
{
  int i;
  scanf("%d",&n);
  scanf("%s",s);
  dp(0,vector<int>(4,0));
  for (i=0;i<4;i++)
    if (can[i]) printf("%s\n",ans[i]);
  return 0;
}
