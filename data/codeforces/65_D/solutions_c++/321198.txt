#include<cstdio>
#include<cassert>
#include<cctype>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<string>
#include<cstring>
using namespace std;

const int N=10005;
char hat[N];
char choices[] = {'g','h','r','s', 0};
int n;

bool ans[] ={ 
	false, //G
	false, //H
	false, //R
	false //S
};

int tmp[257];
void simulate (){
	tmp['g']=0;
	tmp['h']=0;
	tmp['r']=0;
	tmp['s']=0;
	for(int i=0; i<n; i++){
		char house='?';
		if(hat[i]=='?'){
			int mn = 100000000;
			for(int j=0; j<4; j++){
				if(tmp[choices[j]]<mn) mn=tmp[choices[j]];
			}
			for(int j=0; j<4; j++){
				if(tmp[choices[j]]==mn){
					house = choices[j];
					break;
				}
			}
		} else {
			house = tolower(hat[i]);
		}
		assert(house!='?');
		//printf("%c", house);
		tmp[house]++;
	}
	//printf("\n");
	int mn = 100000000;
	for(int j=0; j<4; j++){
		if(tmp[choices[j]]<mn) mn=tmp[choices[j]];
	}
	for(int j=0; j<4; j++){
		if(tmp[choices[j]]==mn){
			char x = choices[j];
			if(x=='g') ans[0]=1;
			if(x=='h') ans[1]=1;
			if(x=='r') ans[2]=1;
			if(x=='s') ans[3]=1;
		}
	}
}

main(){
	scanf("%d",&n);
	scanf("%s", hat);
	do {
		//printf("%s\n",choices);
		simulate();
	} while(next_permutation(choices, choices+4));
	if(ans[0]) printf("Gryffindor\n");
	if(ans[1]) printf("Hufflepuff\n");
	if(ans[2]) printf("Ravenclaw\n");
	if(ans[3]) printf("Slytherin\n");
	return 0;
}
