#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <set>
using namespace std;

typedef vector<int> vi;

string NAMES[] = {"Gryffindor", "Hufflepuff", "Ravenclaw", "Slytherin"};
string GET = "GHRS?";

int N;
string S;
vi cnt(4,0);
bool ok[4];
set<vi> mem;
void dfs(int d) {
	if(mem.count(cnt)) {
		return;
	}
	mem.insert(cnt);
	int mn = *min_element(cnt.begin(), cnt.end());
	if(d == N) {
		for(int i = 0; i < 4; ++i) {
			if(mn == cnt[i]) {
				ok[i] = true;
			}
		}
		return;
	}
	int cur = GET.find(S[d]);
	if (cur != 4) {
		++cnt[cur];
		dfs(d + 1);
		--cnt[cur];
	} else {
		for(int i = 0; i < 4; ++i) {
			if(mn == cnt[i]) {
				++cnt[i];
				dfs(d + 1);
				--cnt[i];
			}
		}
	}
}
int main() {
	cin >> N >> S;
	dfs(0);
	for(int i = 0; i < 4; ++i) {
		if(ok[i]) {
			cout << NAMES[i] << endl;
		}
	}
}
