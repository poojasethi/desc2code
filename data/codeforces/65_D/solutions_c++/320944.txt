#include <cstdio>
#include <cstring>
#include <cmath>
#include <set>
#include <algorithm>
using namespace std;
typedef pair <int, int> pii;
typedef pair<pii,pii> p4;
set<p4> x;

const double Inf = 1e20;
const double eps = 1e-7;
const int MaxN = 10005;
int n;
char s[MaxN];

char name[4][30] = {"Gryffindor", "Hufflepuff", "Ravenclaw", "Slytherin"};

int m;

void sol(int a,int b,int c,int d)
{
    pii x1(a,b),x2(c,d);
    p4 xx(x1,x2);
    if(x.count(xx)) return;
    x.insert(xx);

    int q = a+b+c+d;
    if(q>=n)
    {
        int mn = min(min(a,b),min(c,d));
        if(a==mn) m|=1;
        if(b==mn) m|=2;
        if(c==mn) m|=4;
        if(d==mn) m|=8;
        return;
    }

    if(s[q]!='?')
    {
        if(s[q]=='G')a++;
        if(s[q]=='H')b++;
        if(s[q]=='R')c++;
        if(s[q]=='S')d++;
        sol(a,b,c,d);
    }
    else
    {
        int mn = min(min(a,b),min(c,d));
        if(a==mn) sol(a+1,b,c,d);
        if(b==mn) sol(a,b+1,c,d);
        if(c==mn) sol(a,b,c+1,d);
        if(d==mn) sol(a,b,c,d+1);
    }
}

int main()
{
//    freopen("in.txt","r",stdin);
//    freopen("out.txt","w",stdout);
    scanf("%d",&n);
    gets(s);
    gets(s);
    m = 0;
    sol(0,0,0,0);

    for(int i = 0; i < 4; i++)
        if(m&(1<<i))printf("%s\n",name[i]);

    return 0;
}
