#include <vector>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <string>
#include <bitset>
#include <complex>
#include <sstream>
#include <iostream>
#include <algorithm>
#include <functional>
#include <numeric>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <cctype>
using namespace std;

set<vector<int> > st;
bool ok[4];
char s[11111];
int n;

void dfs(int n, vector<int> ask) {
    if (st.count(ask)) return;
    st.insert(ask);
    int mn = *min_element(ask.begin(), ask.end());
    if (n == ::n) {
        for (int i = 0; i < 4; ++i) {
            if (ask[i] == mn) {
                ok[i] = 1;
            }
        }
        return;
    }
    if (s[n] != '?') {
        if (s[n] == 'G') ask[0]++;
        else if (s[n] == 'H') ask[1]++;
        else if (s[n] == 'R') ask[2]++;
        else ask[3]++;
        dfs(n + 1, ask);
    } else {
        for (int i = 0; i < 4; ++i) {
            if (ask[i] == mn) {
                vector<int> nask = ask;
                nask[i]++;
                dfs(n + 1, nask);
            }
        }
    }
}

int main() {
    cin >> n >> s;
    n = strlen(s);
    vector<int> ask(4, 0);
    dfs(0, ask);
    if (ok[0]) cout << "Gryffindor\n";
    if (ok[1]) cout << "Hufflepuff\n";
    if (ok[2]) cout << "Ravenclaw\n";
    if (ok[3]) cout << "Slytherin\n";
}


 	  	 		 	 	 	 	    	 				