#include<iostream>
#include<cstring>
#include<string>
#include<cstdio>
#include<algorithm>
#include<set>
#include<vector>
using namespace std;
string name[]={"Gryffindor", "Hufflepuff", "Ravenclaw", "Slytherin"};
typedef vector<int > vc;
vc dp(4,0);///dp状态
bool yes[4];
int n;
set<vc >has;///哈希判重
string get="GHRS?",s;
void dfs(int x)
{
  if(has.count(dp))return;///哈希判重减枝
  has.insert(dp);
  int _min=*min_element(dp.begin(),dp.end());///找最小元素
  if(x==n)///全部结束，记录答案
  {
    for(int i=0;i<4;++i)
      if(_min==dp[i])
      yes[i]=1;
  }
  int id=get.find(s[x]);
  /**状态转移*/
  if(id^4)
  {
    ++dp[id];dfs(x+1);--dp[id];
  }
  else
  {
    for(int i=0;i<4;++i)
      if(_min==dp[i])
     ++dp[i],dfs(x+1),--dp[i];
  }
}
int main()
{
  while(cin>>n>>s)
  { memset(yes,0,sizeof(yes));
    has.clear();
    dfs(0);
    for(int i=0;i<4;++i)
      if(yes[i])
      cout<<name[i]<<"\n";
  }
}