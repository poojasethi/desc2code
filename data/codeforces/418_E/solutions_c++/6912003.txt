#include<cstdio>
#include<iostream>
#include<algorithm>
#include<map>
#include<cmath>
#include<cstring>
using namespace std;

const int Q = 305 ; 
const int N = 200000 + 50 ;
map<int,int> Hash ;
int n,sqn,pn;
int a[N],back[N];
int st[Q],ed[Q];
int f[Q][N],g[Q][N];
int tot;

int geth(int x)
{
    if(Hash.count(x)) return Hash[x];
    else 
    Hash[x]=++tot;
    back[tot]=x;
    return Hash[x];
}

void print();

int main()
{
    scanf("%d",&n);
    sqn = min(200,(int) sqrt(n));
    pn = n / sqn ;
    for(int i=1 ; i<=sqn; i++)
    {
        st[i]=ed[i-1]+1;
        ed[i]=pn*i;
    }
    if(ed[sqn]<n)
    {sqn++;st[sqn]=ed[sqn-1]+1;ed[sqn]=n;}
    
    for(int i=1;i<=n;i++)
    {
        scanf("%d",&a[i]);
        a[i]=geth(a[i]);
    }
    for(int i=1;i<=sqn;i++)
    {
        for(int j=1;j<=tot;j++)
            f[i][j]=f[i-1][j];
        for(int j=1;j<=n;j++)
            g[i][j]=g[i-1][j];
        for(int j=st[i];j<=ed[i];j++)
            g[i][ ++f[i][a[j]] ]++; 
    }
    
    int T ; 
    scanf("%d",&T);
    int op,b,c;
    while(T--)
    {
        scanf("%d %d %d",&op,&b,&c);
        if(op==1)
        {
            int xp;
            for(int i=1;i<=sqn;i++)
                if(c>=st[i] && c<=ed[i]) xp=i;
            int ori=a[c];
            a[c]=geth(b);
            for(int i=xp;i<=sqn;i++)
            {
                g[i][f[i][ori]--]--,g[i][++f[i][a[c]]] ++ ;
            }
        }
        else 
        {
            int xp,ans;
            for(int i=1;i<=sqn;i++)
                if(c>=st[i] && c<=ed[i]) xp=i;
            xp--;
            int cnt=f[xp][a[c]];
            for(int i=st[xp+1];i<=c;i++)
                cnt+=(a[i]==a[c]);
            if(b==1) ans=back[a[c]];
            else if(b%2==0) ans=cnt;
            else 
            {
                ans=g[xp][cnt];
                for(int i=st[xp+1];i<=c;i++)
                    if(++f[xp][a[i]]==cnt) ans++;
                for(int i=st[xp+1];i<=c;i++)
                    --f[xp][a[i]];
            }
            //cout<<xp<<' '<<cnt<<' ';
            printf("%d\n",ans);
        }
    }
    
    return 0; 
}