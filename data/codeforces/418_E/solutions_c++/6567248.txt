#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <cmath>
#define REP(i,n) for (int i=1;i<=(n);++i)
#define FOR(i,a,b) for (int i=(a);i<=(b);++i)
#define ROF(i,a,b) for (int i=(a);i>=(b);--i)
#define FEC(p,u) for (edge*p=head[u];p;p=p->nxt)
using namespace std;
typedef long long LL;

int n, m, nq, len, nb, a[110000], b[110000], c[210000];
struct request{ int tp, x, y; }q[110000];

int s1[105][200005], s2[105][100005];

int *t1[210000], ori[210000];
bool cpr(int *x, int *y){ return *x < *y; }
void init(){
	scanf("%d", &n);
	len = 1000;
	nb = (n-1)/len+1;
	REP(i,n) scanf("%d", a+i);
	scanf("%d", &nq);
	REP(i,nq) scanf("%d%d%d", &q[i].tp, &q[i].x, &q[i].y);
	REP(i,n) t1[i] = a+i;
	int lt(n);
	REP(i,nq) if (q[i].tp == 1) t1[++lt] = &q[i].x;
	sort(t1+1, t1+lt+1, cpr);
	int t2(*t1[1]); *t1[1] = 1;
	ori[1] = t2;
	FOR(i,2,lt){
		if (*t1[i] == t2) *t1[i] = *t1[i-1]; else{ t2 = *t1[i]; *t1[i] = *t1[i-1]+1; }
		ori[*t1[i]] = t2;
	}
	m = *t1[lt];
}
void insert(int x, int y){
	FOR(i,(x-1)/len+1,nb){
		++s1[i][y];
		++s2[i][s1[i][y]];
	}
}
void erase(int x, int y){
	FOR(i,(x-1)/len+1,nb){
		--s2[i][s1[i][y]];
		--s1[i][y];
	}
}
void build(){
	REP(i,n) insert(i, a[i]);
}
void work(){
	REP(i,nq) if (q[i].tp == 1){
		erase(q[i].y, a[q[i].y]);
		a[q[i].y] = q[i].x;
		insert(q[i].y, a[q[i].y]);
	}else if (q[i].x == 1) printf("%d\n", ori[a[q[i].y]]);
	else if (q[i].x&1){
		int ib = (q[i].y-1)/len+1;
		FOR(j,(ib-1)*len+1,q[i].y) c[a[j]] = s1[ib-1][a[j]];
		FOR(j,(ib-1)*len+1,q[i].y) b[j] = ++c[a[j]];
		int y = b[q[i].y], t = s2[ib-1][y];
		FOR(j,(ib-1)*len+1,q[i].y) if (b[j] == y) ++t;
		printf("%d\n", t);
	}else{
		int y = a[q[i].y], t = s1[(q[i].y-1)/len][y];
		FOR(j,(q[i].y-1)/len*len+1,q[i].y) if (a[j] == y) ++t;
		printf("%d\n", t);
	}
}
int main(){
	init();
	build();
	work();
	return 0;
}

