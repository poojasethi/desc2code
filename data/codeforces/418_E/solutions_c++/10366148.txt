#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <climits>
#include <algorithm>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <cassert>
#include <vector>
#define all(x) x.begin() , x.end()
#define fi first
#define se second
#define pb push_back
#define umax( x , y ) x = max( x , (y) )
#define umin( x , y ) x = min( x , (y) )
#define For( i , a ) for(int i=1;i<=a;i++)
#define ort (b+s)/2
#define y2 asrwjaelkf
#define y1 asseopirwjaelkf

using namespace std;

const int maxn = 200020;
const int maxx = 10000;
const int maxk = 300;
const int MOd = 1e9+7;
const int K = 340;

typedef long long Lint;
typedef double db;
typedef pair<int,int> ii;
typedef pair<int,ii> iii;

int gs, end[maxn], fw[maxk][maxn], s[maxk][maxn], ar2[maxn];
int a, ar[maxn], cnt;
map <int,int> zip;

void add( int *f, int k, int x ) {
	if( !k ) return;
	//~ printf("%d %d\n",k,x);
	for(int i=k;i>0;i-=i&(-i))
		f[i] += x;
}
int look( int *f, int k ) {
	int t = 0;
	for(int i=k;i<=a;i+=i&(-i))
		t += f[i];
	return t;
}

void build() {
	for(int i=0;i<gs;i++)
		for(int j=i*K;j<=end[i];j++) {
			if( j == 0 ) continue;
			for(int k=i;k<gs;k++) {
				add( fw[k], s[k][ar[j]], -1 );
				//~ printf("asdasd %d %d %d\n\n",k,j,s[k][ar[j]]);
				s[k][ar[j]]++;
				add( fw[k], s[k][ar[j]], 1 );
			}
		}
}

int solve1( int y ) {
	int t = 0;
	if( y/K ) t += s[y/K-1][ar[y]];
	//~ printf("-------- %d(%d) %d\n",y,ar[y],t);
	for(int i=(y/K)*K;i<=y;i++)
		t += (ar[i] == ar[y]);
	return t;
}

int main() {
	
	scanf("%d",&a);
	
	gs = a/K+1;
	for(int i=0;i<gs;i++) end[i] = min( (i+1)*K-1, a );
	
	for(int i=1;i<=a;i++) {
		scanf("%d",&ar[i]);
		if( !zip.count( ar[i] ) ) zip[ar[i]] = ++cnt;
		ar2[i] = ar[i];
		ar[i] = zip[ar[i]];
	}
	
	for(int i=0;i<=gs;i++) s[i][0] = -5;
	build();
	int q;
	//~ printf("asads\n");
	scanf("%d",&q);
	while( q-- ) {
		int tp, x, y;
		scanf("%d %d %d",&tp,&x,&y);
		if( tp == 1 ) {
			swap( x, y );
			ar2[x] = y;
			if( !zip.count( y ) ) zip[y] = ++cnt;
			y = zip[y];
			for(int i=x/K;i<gs;i++) {
				add( fw[i], s[i][ar[x]], -1 );
				s[i][ar[x]]--;
				//~ printf("-------- dec %d %d %d\n",i,ar[x],s[i][ar[x]]);
				add( fw[i], s[i][ar[x]], +1 );
				add( fw[i], s[i][y], -1 );
				s[i][y]++;
				//~ printf("-------- inc %d %d %d\n",i,y,s[i][y]);
				add( fw[i], s[i][y], +1 );
			}
			ar[x] = y;
		}
		if( tp == 2 ) {
			if( x == 1 ) {
				printf("%d\n",ar2[y]);
			} else if( !(x&1) ) {
				printf("%d\n",solve1( y ));
			} else {
				int h = solve1( y );
				int g = y/K;
				int e = g-1;
				if( e == -1 ) e = gs;
				int t = 0;
				if( g ) t += look( fw[g-1], h );
				//~ printf("asdasd %d %d\n",t,h);
				for(int i=g*K;i<=y;i++) {
					s[e][ar[i]]++;
					//~ printf("asdasd %d %d\n",ar[i],s[e][ar[i]]);
					if( s[e][ar[i]] == h ) t++;
				}
				printf("%d\n",t);
				for(int i=g*K;i<=y;i++) s[e][ar[i]]--;
			}
		}
	}
	
	return 0;
}
