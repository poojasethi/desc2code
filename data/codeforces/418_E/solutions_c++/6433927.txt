#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<map>
#include<set>
#include<vector>

using namespace std;

typedef pair<int,int> pii;
typedef vector<pii> vii;
typedef vector<int> vi;

#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define DFOR(i,a,b) for(int i=a;i>=b;i--)
#define mp(x,y) make_pair((int)x,(int)y)
#define fi first
#define se second
#define all(a) (a).begin(),(a).end()
#define BUG(x) {cout << #x << " = " << x << endl;}
#define PR(x,a,b) {cout << #x << " = "; FOR(i,a,b) cout << x[i] << ' '; cout << endl;}
#define ll long long
#define DEBUG 0
#define nmax 100111
int n;
int a[nmax];

void readInput(){
    scanf("%d",&n);
    FOR(i,1,n){
        int value; scanf("%d",&value);
        a[i]=value;
    }
}
#define mmax 100111
int m;
int q[mmax][3];
void readQuery(){
    scanf("%d",&m);
    int type,u,v;
    FOR(i,1,m) {
        scanf("%d%d%d",&type,&u,&v);
        q[i][0]=type;
        q[i][1]=u;
        q[i][2]=v;
    }
}
int c[nmax+mmax];
map<int,int> ma;
map<int,int> mma;
int dem=0;
void solve1(){
    FOR(i,1,n) c[i]=a[i];
    dem=n;
    FOR(i,1,m) if (q[i][0]==1){
        dem++;
        c[dem]=q[i][1];
    }
    sort(c+1,c+(dem+1));
    int value=0;
    FOR(i,1,dem) if (ma[c[i]]==0){
        value++;
        ma[c[i]]=value;
        mma[value]=c[i];
    }
    FOR(i,1,n) a[i]=ma[a[i]];
    FOR(i,1,m) if (q[i][0]==1) q[i][1]= ma[q[i][1]];
    if (DEBUG==1){
        FOR(i,1,n) printf("%4d",a[i]); cout<<endl;
    }
}
#define H 50
int e1[H+2][nmax+mmax];
int e2[H+2][nmax+mmax];
int len;
void init(){
    FOR(i,1,H) FOR(j,1,dem) e1[i][j]=e2[i][j]=0;
    len = (n+H-1)/H;
    FOR(i,1,H-1){
        FOR(cs,1,dem) e1[i+1][cs]=e1[i][cs], e2[i+1][cs]=e2[i][cs];
        FOR(cs,(i-1)*len+1,min(n,i*len)){
            int value= a[cs];
            e1[i+1][value]++;
            e2[i+1][e1[i+1][value]]++;
        }
    }
}

void solveQuery(){
    FOR(i,1,m){
        if (DEBUG==1){
            printf("QUERY %2d: %2d %2d %2d\n",i,q[i][0],q[i][1],q[i][2]);
        }
        if (q[i][0]==1){
            int value= q[i][1];
            int pos= q[i][2];
            int v0= a[pos];
            int csH=(pos-1)/len+1;
            if (csH<H){
                FOR(cs,csH+1,(int)H){
                    e2[cs][e1[cs][v0]]--;
                    e1[cs][v0]--;
                    e1[cs][value]++;
                    e2[cs][e1[cs][value]]++;
                }
            }
            a[pos]=value;
            if (DEBUG==1){
                FOR(i,1,n) printf("%4d",a[i]); cout<<endl;
            }
        }else {
            int r= q[i][1];
            int pos= q[i][2];
            int csH= (pos-1)/len+1;
            int v0=a[pos];
            int v1=e1[csH][v0];
            FOR(i,(csH-1)*len+1,pos){
                if (a[i]==v0) v1++;
            }

            int v2= e2[csH][v1];
            FOR(i,(csH-1)*len+1,pos){
                e1[csH][a[i]]++;
                if (e1[csH][a[i]]==v1) v2++;
            }
            FOR(i,(csH-1)*len+1,pos){
                e1[csH][a[i]]--;
            }
            int res= mma[v0];
            if (r>1) if (r%2==0) res=v1; else res=v2;
            printf("%d\n",res);
        }
    }
}
int main(){
    if (DEBUG==1){
        freopen("input.txt","r",stdin);
        //freopen("output.txt","w",stdout);
    }
    readInput();
    readQuery();
    solve1();
    init();
    solveQuery();
    return 0;
}
