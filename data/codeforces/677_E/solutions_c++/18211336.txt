#include<bits/stdc++.h>
#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define endl '\n'
#define endll puts("")
#define mod 1000000007
#define mp3(x,y,z) mp(x,mp(y,z))
#define pii pair< int , int > 
#define ort ((bas+son)>>1)
#define sol (root+root)
#define sag (sol+1)
#define inf mod
using namespace std;
typedef long long ll;
const int N = 1e3+3;
ll n,m,i,j,k,l,t,d,ii,jj,x,y,z,u[N][N][5],s[N][N][5],solu[N][N][5],sagu[N][N][5],m3,m2,s0,s2,s3;
char a[N][N];
ll fe(int x,int y)
{
	if(!y)return 1;
	ll a=fe(x,y/2);
	a=a*a;
	if(y%2)a=a*x;
	return a%mod;
}
void f(int s2,int s3)
{
	if(!s2 and !s3 and !m2 and !m3)t=1;
	int d=1;
	double x=m2-s2;
	double y=m3-s3;
	if(x>=0 and y>=0)return;
	else if(x<=0 and y<=0)
	{
		m2=s2;m3=s3;
		t=fe(2,m2)*fe(3,m3)%mod;
		return;
	}
	else if(y<0)d=0;
	x=abs(x);
	y=abs(y);
	if((log2(3)*y>x) xor !d)
		return;
	else
	{
		m2=s2;m3=s3;
		t=fe(2,m2)*fe(3,m3)%mod;
	}
}
int main()
{
	cin>>n;
	for(i=1;i<=n;i++)
		scanf("%s",a[i]+1);
	for(i=1;i<=n;i++)
		for(j=1;j<=n;j++)
		{
			s[i][j][0]=s[i][j-1][0];
			s[i][j][2]=s[i][j-1][2];
			s[i][j][3]=s[i][j-1][3];
			s[i][j][a[i][j]-'0']++;
		}
	for(j=1;j<=n;j++)
		for(i=1;i<=n;i++)
		{
			u[i][j][0]=u[i-1][j][0];
			u[i][j][2]=u[i-1][j][2];
			u[i][j][3]=u[i-1][j][3];
			u[i][j][a[i][j]-'0']++;
		}
	for(i=1;i<=n;i++)
		for(j=1;j<=n;j++)
		{
			solu[i][j][0]=solu[i-1][j-1][0];
			solu[i][j][2]=solu[i-1][j-1][2];
			solu[i][j][3]=solu[i-1][j-1][3];
			solu[i][j][a[i][j]-'0']++;
		}
	for(i=1;i<=n;i++)
		for(j=n;j;j--)
		{
			sagu[i][j][0]=sagu[i-1][j+1][0];
			sagu[i][j][2]=sagu[i-1][j+1][2];
			sagu[i][j][3]=sagu[i-1][j+1][3];                 
			sagu[i][j][a[i][j]-'0']++;
		}
	for(i=1;i<=n;i++)
		for(j=1;j<=n;j++)
			if(a[i][j]=='0')
				continue;
			else
			{
				ll bas=0,son=n+1;
				k=0;
				while(bas<son)
				{
					if(ort+i>n or ort+j>n or i-ort<1 or j-ort<1){son=ort;continue;}
					s0=s[i][j+ort][0]-s[i][j-ort-1][0];
					s0+=u[i+ort][j][0]-u[i-ort-1][j][0];
					if(s0)son=ort;
					else k=ort,bas=ort+1;
				}
				s2=s[i][j+k][2]-s[i][j-k-1][2];
				s2+=u[i+k][j][2]-u[i-k-1][j][2];
				s3=s[i][j+k][3]-s[i][j-k-1][3];
				s3+=u[i+k][j][3]-u[i-k-1][j][3];
				if(a[i][j]=='2')s2--;
				if(a[i][j]=='3')s3--;
				f(s2,s3);
				k=0;
				bas=0;son=n+1;
				while(bas<son)
				{
					if(ort+i>n or ort+j>n or i-ort<1 or j-ort<1){son=ort;continue;}
					s0=solu[i+ort][j+ort][0]-solu[i-ort-1][j-ort-1][0];
					s0+=sagu[i+ort][j-ort][0]-sagu[i-ort-1][j+ort+1][0];
					if(s0)son=ort;
					else k=ort,bas=ort+1;
				}
				s2=solu[i+k][j+k][2]-solu[i-1-k][j-k-1][2];
				s3=solu[i+k][j+k][3]-solu[i-1-k][j-k-1][3];
				s2+=sagu[i+k][j-k][2]-sagu[i-k-1][j+1+k][2];
				s3+=sagu[i+k][j-k][3]-sagu[i-k-1][j+1+k][3];
				if(a[i][j]=='2')s2--;
				if(a[i][j]=='3')s3--;
				f(s2,s3);

			}
	cout<<t<<endl;
}
