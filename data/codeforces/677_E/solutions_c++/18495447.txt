#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<queue>
#include<cmath>
#include<stack>
#include<map>
#include<vector>
#define fi first
#define se second
#define pb push_back
#define mk make_pair
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
int read()
{
    int x=0,f=1;char ch=getchar();
    while(ch<'0'||ch>'9') {if(ch=='-') f=-1;ch=getchar();}
    x=ch-'0';
    while(1) {ch=getchar();if(ch<'0'||ch>'9') break;x=x*10+ch-'0';}
    return x*f;
}
const int maxn=1010;
const int mod=1e9+7;
const int dir[][2]={{1,1},{1,-1},{-1,-1},{-1,1},{0,1},{1,0},{-1,0},{0,-1}};
double lg[maxn][maxn],sum[9][maxn][maxn];
int n,b[9][maxn][maxn],a[maxn][maxn];
char a1[maxn][maxn];
bool check(int x) {return (x>=1)&&(x<=n);}
int minv(int x,int y) {if(x<y)y=x;return y;}
int main()
{
 //   freopen("work.in","r",stdin);
  //  freopen("work.out","w",stdout);
    double s,ans;
    int x,y,p,temp,tmp,K;
    n=read();
    for(int i=1;i<=n;i++) scanf("%s",&a1[i][1]);
    for(int i=1;i<=n;i++)
        for(int j=1;j<=n;j++)
        {
            if(a1[i][j]=='0') a[i][j]=0;
            if(a1[i][j]=='1') a[i][j]=1;
            if(a1[i][j]=='2') a[i][j]=2,lg[i][j]=log(2.0);
            if(a1[i][j]=='3') a[i][j]=3,lg[i][j]=log(3.0);
        }
    for(int k=0;k<8;k++)
        for(int i=1;i<=n;i++)
            for(int j=1;j<=n;j++)
                if(!(check(i-dir[k][0])&&check(j-dir[k][1])))
                {
                    s=p=0;
                    for(int x=i,y=j;check(x)&&check(y);x+=dir[k][0],y+=dir[k][1])
                    {
                        if(a[x][y]==0) s=0,p=0;
                        else s+=lg[x][y],p++;
                        sum[k][x][y]=s,b[k][x][y]=p;
                    }
                }
    ans=0;x=y=temp=1;K=0;
    for(int i=1;i<=n;i++)
        for(int j=1;j<=n;j++)
            if(a[i][j]!=0)
                for(int k=0;k<=4;k+=4)
                {
                    tmp=minv(minv(b[k][i][j],b[k+1][i][j]),minv(b[k+2][i][j],b[k+3][i][j]));
                    s=lg[i][j];
                    for(int p=0;p<=3;p++)
                        s+=sum[k+p][i+dir[k+p][0]*(tmp-1)][j+dir[k+p][1]*(tmp-1)]-sum[k+p][i][j];
                    if(s>ans)
                        ans=s,x=i,y=j,K=k,temp=tmp;
                }
    ll S=a[x][y];
    for(int k=K;k<=K+3;k++)
        for(int i=1;i<temp;i++)
            S=S*(a[x+dir[k][0]*i][y+dir[k][1]*i])%mod;
    printf("%I64d\n",S);
   // fclose(stdin);
 //   fclose(stdout);
    return 0;
}
