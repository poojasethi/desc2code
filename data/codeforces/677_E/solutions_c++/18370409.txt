#include <algorithm>
#include <cstdio>
#include <cmath>
using namespace std;
const int mo=1000000007;
int f[1010][1010][8],a[1010][1010],i,j,k,n,x,ansx,ansy,ansz,answ,ans;
double g[1010][1010][4],y,mx;char c;
int fx[8]={1,0,-1,0,1,1,-1,-1},fy[8]={0,1,0,-1,1,-1,1,-1};
void dp(int x,int y,int z)
{
	int now=0;f[x][y][z]=0;
	for (x+=fx[z],y+=fy[z];x && y && x<=n && y<=n;x+=fx[z],y+=fy[z])
		if (!a[x][y]) f[x][y][z]=now=0;
			else f[x][y][z]=++now;
}
void qsum(int x,int y,int z,int op)
{
	double sum=0;g[x][y][op]=0;
	for (x+=fx[z],y+=fy[z];x && y && x<=n && y<=n;x+=fx[z],y+=fy[z])
		if (!a[x][y]) g[x][y][op]=sum=0;
			else g[x][y][op]=(sum+=log(a[x][y]));
}
int main()
{
		scanf("%d\n",&n);
		for (i=1;i<=n;++i,scanf("\n"))
			for (j=1;j<=n;++j) scanf("%c",&c),a[i][j]=c-'0';
		for (i=1;i<=n;++i)
		{
			dp(0,i,0);qsum(0,i,0,0);
			dp(i,0,1);qsum(i,0,1,1);
			dp(n+1,i,2);
			dp(i,n+1,3);
			dp(i-1,0,4);dp(0,i-1,4);qsum(i-1,0,4,2);qsum(0,i-1,4,2);
			dp(0,i+1,5);dp(i-1,n+1,5);
			dp(i+1,0,6);dp(n+1,i-1,6);qsum(i+1,0,6,3);qsum(n+1,i-1,6,3);
			dp(n+1,i+1,7);dp(i+1,n+1,7);
		}
		mx=-1;
		for (i=1;i<=n;++i)
			for (j=1;j<=n;++j)
			{
				x=n;
				for (k=0;k<4;++k) x=min(x,f[i][j][k]);
				if (x)
				{
					y=g[i+x-1][j][0]-g[i-x][j][0]+g[i][j+x-1][1]
						-g[i][j-x][1]-log(a[i][j]);
					if (y>mx) mx=y,ansx=i,ansy=j,ansz=x,answ=0;
				}
				x=n;
				for (k=4;k<8;++k) x=min(x,f[i][j][k]);
				if (x)
				{
					y=g[i+x-1][j+x-1][2]-g[i-x][j-x][2]+g[i-x+1][j+x-1][3]
						-g[i+x][j-x][3]-log(a[i][j]);
					if (y>mx) mx=y,ansx=i,ansy=j,ansz=x,answ=4;
				}
			}
		ans=a[ansx][ansy];
		for (i=answ;i<answ+4;++i)
			for (j=1;j<ansz;++j)
			ans=1ll*ans*a[ansx+fx[i]*j][ansy+fy[i]*j]%mo;
		printf("%d\n",ans);
}