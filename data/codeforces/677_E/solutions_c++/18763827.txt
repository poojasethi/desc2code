#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iostream>
#include<algorithm>
#define maxn 2010
#define mod 1000000007

using namespace std;

int a[maxn][maxn],b[maxn][maxn];
char s[maxn];
int up[maxn][maxn],down[maxn][maxn],Left[maxn][maxn],Right[maxn][maxn];
int sum[2][4][maxn][maxn];
int ans0,ans1;
int n,m;

double cal(int x,int y)
{
	return x*log(2.0)+y*log(3.0);
}

void solve(int n)
{
	/*for (int i=1;i<=n;i++)
	{
		for (int j=1;j<=n;j++) printf("%d",b[i][j]);
		printf("\n");
	}*/
	memset(up,0,sizeof(up));memset(down,0,sizeof(down));memset(Left,0,sizeof(Left));memset(Right,0,sizeof(Right));
	for (int i=1;i<=n;i++) for (int j=1;j<=n;j++) if (b[i][j]) up[i][j]=up[i-1][j]+1;
	for (int i=n;i>=1;i--) for (int j=1;j<=n;j++) if (b[i][j]) down[i][j]=down[i+1][j]+1;	
	for (int j=1;j<=n;j++) for (int i=1;i<=n;i++) if (b[i][j]) Left[i][j]=Left[i][j-1]+1;	
	for (int j=n;j>=1;j--) for (int i=1;i<=n;i++) if (b[i][j]) Right[i][j]=Right[i][j+1]+1;
	memset(sum,0,sizeof(sum));
	for (int d=0;d<2;d++)
	{
		int op=d?3:2;
		for (int i=1;i<=n;i++) for (int j=1;j<=n;j++) sum[d][0][i][j]=sum[d][0][i-1][j]+(b[i][j]==op);
		for (int i=n;i>=1;i--) for (int j=1;j<=n;j++) sum[d][1][i][j]=sum[d][1][i+1][j]+(b[i][j]==op);
		for (int j=1;j<=n;j++) for (int i=1;i<=n;i++) sum[d][2][i][j]=sum[d][2][i][j-1]+(b[i][j]==op);
		for (int j=n;j>=1;j--) for (int i=1;i<=n;i++) sum[d][3][i][j]=sum[d][3][i][j+1]+(b[i][j]==op);
	}
	for (int i=1;i<=n;i++)
	  for (int j=1;j<=n;j++)
	  {
	  	if (b[i][j]==4 || b[i][j]==0) continue;
	  	int len=min(min(up[i-1][j],down[i+1][j]),min(Left[i][j-1],Right[i][j+1]));
	  	int now[2];
	  	now[0]=now[1]=0;
	  	for (int d=0;d<2;d++) 
		  now[d]+=sum[d][0][i-1][j]-sum[d][0][i-1-len][j]+sum[d][1][i+1][j]-sum[d][1][i+1+len][j],
		  now[d]+=sum[d][2][i][j-1]-sum[d][2][i][j-1-len]+sum[d][3][i][j+1]-sum[d][3][i][j+1+len];
		if (b[i][j]==2) now[0]++;if (b[i][j]==3) now[1]++;
		if (cal(now[0]-ans0,now[1]-ans1)>0) ans0=now[0],ans1=now[1];
	  }
}

int power(int x,int y)
{
	int ans=1;
	while (y)
	{
		if (y&1) ans=1ll*ans*x%mod;
		x=1ll*x*x%mod;
		y>>=1;
	}
	return ans;
}

int main()
{
	scanf("%d",&n);
	bool flag=1;
	for (int i=1;i<=n;i++)
	{
		scanf("%s",s+1);
		for (int j=1;j<=n;j++) {b[i][j]=a[i][j]=s[j]-'0';if (b[i][j]) flag=0;}
	}
	if (flag) {printf("0\n");return 0;}
	solve(n);
	//printf("%d %d\n",ans0,ans1);
	for (int i=1;i<=2*n;i++)
	  for (int j=1;j<=2*n;j++)
	    b[i][j]=0;
	for (int i=1;i<=n;i++) for (int j=n-i+1;j<=n+i-1;j++) b[i][j]=4;
	for (int i=n+1;i<=2*n-1;i++) for (int j=i-n+1;j<=3*n-i-1;j++) b[i][j]=4;
	for (int i=1;i<=n;i++)
	  for (int j=1;j<=n;j++)
	    b[i+j-1][i-j+n]=a[i][j];
	solve(2*n-1);
	//printf("%d %d\n",ans0,ans1);
	printf("%d\n",1ll*power(2,ans0)*power(3,ans1)%mod);
	return 0;
}
