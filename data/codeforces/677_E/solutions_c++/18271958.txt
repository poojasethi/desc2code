#include<bits/stdc++.h>
#define mod 1000000007
using namespace std;
double sum[1010][1010][8];
int num[1010][1010][8];
double val2[1010][1010];
char val[1010][1010];
int maxn[1010][1010][2];
int dir[8][2]= {{-1,-1},{-1,0},{-1,1},{0,1},{1,1},{1,0},{1,-1},{0,-1}};
int main()
{
    int n;
    scanf("%d",&n);
    memset(val2,0,sizeof(val2));
    for(int i=1; i<=n; i++)
        scanf("%s",val[i]+1);
    for(int i=1; i<=n; i++)
    {
        for(int j=1; j<=n; j++)
        {
            if(val[i][j]=='2')
                val2[i][j]=log(2);
            else if(val[i][j]=='3')
                val2[i][j]=log(3);
            else val2[i][j]=0;
        }
    }
    int sx,sy,x,y;
    for(int i=1; i<=n; i++)
    {
        for(int j=1; j<=n; j++)
        {
            for(int k=0; k<4; k++)
            {
                if(k==0)
                    sx=i,sy=j;
                else if(k==1)
                    sx=i,sy=n+1-j;
                else if(k==2)
                    sx=n+1-i,sy=n+1-j;
                else sx=n+1-i,sy=j;
                for(int l=k*2; l<k*2+2; l++)
                {
                    x=sx+dir[l][0],y=sy+dir[l][1];
                    if(val[sx][sy]=='0')
                        num[sx][sy][l]=0;
                    else num[sx][sy][l]=num[x][y][l]+1;
                    sum[sx][sy][l]=sum[x][y][l]+val2[sx][sy];
                }
            }
        }
    }
    double ans,maxns=0;
    int posx=1,posy=1,sign=0;
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=n;j++)
        {
            if(val[i][j]=='0')
                continue;
            maxn[i][j][0]=min(num[i][j][0],min(num[i][j][2],min(num[i][j][4],num[i][j][6])));
            x=maxn[i][j][0];
            ans=sum[i][j][0]-sum[i-x][j-x][0]+sum[i][j][2]-sum[i-x][j+x][2]+sum[i][j][4]-sum[i+x][j+x][4]+sum[i][j][6]-sum[i+x][j-x][6];
            ans-=3*val2[i][j];
            if(ans>maxns)
            {
                maxns=ans;
                posx=i;
                posy=j;
                sign=0;
            }
            maxn[i][j][1]=min(num[i][j][1],min(num[i][j][3],min(num[i][j][5],num[i][j][7])));
            x=maxn[i][j][1];
            ans=sum[i][j][1]-sum[i-x][j][1]+sum[i][j][3]-sum[i][j+x][3]+sum[i][j][5]-sum[i+x][j][5]+sum[i][j][7]-sum[i][j-x][7];
            ans-=3*val2[i][j];
            if(ans>maxns)
            {
                maxns=ans;
                posx=i;
                posy=j;
                sign=1;
            }
        }
    }
    long long fin=val[posx][posy]-'0';
    for(int i=1;i<maxn[posx][posy][sign];i++)
    {
        for(int j=0;j<4;j++)
        {
            x=posx+i*dir[j*2+sign][0],y=posy+i*dir[j*2+sign][1];
            fin*=val[x][y]-'0';
            fin%=mod;
        }
    }
    printf("%I64d\n",fin);
    return 0;
}
