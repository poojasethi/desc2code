#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<iostream>
using namespace std;

const int MOD = 1e9 + 7;

#define REP(i, x, y) for (int i = x, _ = y; i <= _; i ++)
#define rep(i, x, y) for (int i = x, _ = y; i >= _; i --)

#define LL long long

double Ans=0.0;
int X,Y,D,WAY;
int n,a[1010][1010];
int zj[1010][1010][8];
char s[1010];
double sum[1010][1010][8];
double lg[4];

int main()
{
    int i,j,k, PA = 1,flag=false;
    scanf("%d",&n);
    for (i=1;i<=n;i++)
	{
	    scanf("%s",s+1);
	    for (j=1;j<=n;j++){
		    a[i][j]=s[j]-'0';
		    if(a[i][j])
		        flag=true;
	    }
	}
	
	if(!flag){
	    puts("0");
	    exit(0);
	}

    lg[0]=-50000;
    lg[1]=0;
    lg[2]=log(2);
    lg[3]=log(3);

    REP (i, 1, n)
	REP (j, 1, n) {
	if (!a[i][j]) {
	    zj[i][j][1]=zj[i][j][4]=0;
	    zj[i][j][0]=zj[i][j][5]=0;
	}
	else {
	    zj[i][j][1]=zj[i][j-1][1]+1;
	    zj[i][j][4]=zj[i-1][j-1][4]+1;
	    zj[i][j][0]=zj[i-1][j][0]+1;
	    zj[i][j][5]=zj[i-1][j+1][5]+1;
	}
	sum[i][j][1]=sum[i][j-1][1]+lg[a[i][j]];
	sum[i][j][4]=sum[i-1][j-1][4]+lg[a[i][j]];
	sum[i][j][0]=sum[i-1][j][0]+lg[a[i][j]];
	sum[i][j][5]=sum[i-1][j+1][5]+lg[a[i][j]];
    }

    rep (i, n, 1)
	rep (j, n, 1) {
	if (!a[i][j]){
	    zj[i][j][6]=zj[i][j][3]=0;
	    zj[i][j][7]=zj[i][j][2]=0;
	}
	else {
	    zj[i][j][6]=zj[i+1][j-1][6]+1;
	    zj[i][j][3]=zj[i+1][j][3]+1;
	    zj[i][j][7]=zj[i+1][j+1][7]+1;
	    zj[i][j][2]=zj[i][j+1][2]+1;
	}
	sum[i][j][6]=sum[i+1][j-1][6]+lg[a[i][j]];
	sum[i][j][3]=sum[i+1][j][3]  +lg[a[i][j]];
	sum[i][j][7]=sum[i+1][j+1][7]+lg[a[i][j]];
	sum[i][j][2]=sum[i][j+1][2]  +lg[a[i][j]];
    }

    REP (i, 1, n)
	REP (j, 1, n) {
	int dis=10000;
	for (k=0;k<=3;k++)
	    dis=min(dis,zj[i][j][k]);
	if (!dis) continue;
	double tmp=0.0;
	tmp+=sum[i][j+dis-1][1]-sum[i][j-dis][1];
	tmp+=sum[i+dis-1][j][0]-sum[i-dis][j][0];
	tmp-=lg[a[i][j]];
	if (tmp>Ans) {
	    Ans=tmp;
	    X=i;
	    Y=j;
	    D=dis;
	    WAY=1;
	}
    }
    
    REP (i, 1, n)
	REP (j, 1, n) {
	int dis=10000;
	for (k=4;k<=7;k++)
	    dis=min(dis,zj[i][j][k]);
	if (!dis) continue;
	double tmp=0.0;
	tmp+=sum[i + dis - 1][j + dis - 1][4]-sum[i-dis][j-dis][4];
	tmp+=sum[i + dis - 1][j - dis + 1][5]-sum[i-dis][j+dis][5];
	tmp-=lg[a[i][j]];
	if (tmp>Ans) {
	    Ans=tmp;
	    X=i;
	    Y=j;
	    D=dis;
	    WAY=2;
	}
    }
    
    if (WAY==1) {
	REP (j, Y - D + 1, Y + D - 1)
	    PA=(LL)PA*a[X][j]%MOD;
	REP (i, X - D + 1, X + D - 1)
	    if (i!=X)
		PA=(LL)PA*a[i][Y]%MOD;
    } else {
	REP (i, -D+1, D-1)
	    PA=(LL)PA*a[X + i][Y + i]%MOD;
	REP (i, -D+1, D-1)
	    if (i)
		PA=(LL)PA*a[X + i][Y - i]%MOD;
    }
    std::cout << PA << std::endl;
}
