#include <bits/stdc++.h>
using namespace std;
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define INF 0x3f3f3f3f
#define sqr(x) ((x)*(x))
#define mem(a,x) memset(a,x,sizeof(a))
#define REP(i,n) for (int i=0; i<(n); i++)
#define rep(i,n) for (int i=1; i<=(n); i++)
#define For(i,s,t) for (int i=(s); i<=(t); i++)
#define FOR(i,s,t) for (int i=(s); i>=(t); i--)
#define foreach(j,x) for (int j=adj[x]; j>=0; j=E[j].nxt)
#define Foreach(it,v) for (__typeof((v).begin()) it=(v).begin(); it!=(v).end(); it++)
typedef long long lld;
typedef vector<int> vec;
typedef vector<int>::iterator vecIter;

const double lg2 = log(2);
const double lg3 = log(3);
const int N = 2009, mod = 1e9+7;
int n,ansx,ansy;
int c2[N][N],r2[N][N];
int c3[N][N],r3[N][N];
vec c0[N],r0[N];
char st[N][N],str[N][N];
bool mk[N][N];

void solve(int n) {
	rep(i,n) r0[i].clear(), c0[i].clear();
	mem(c2,0); mem(r2,0); mem(c3,0); mem(r3,0);
	rep(i,n) r0[i].pb(0), c0[i].pb(0);
	rep(i,n) rep(j,n) {
		if (st[i][j]=='0') r0[i].pb(j), c0[j].pb(i);
		r2[i][j]=r2[i][j-1]+(st[i][j]=='2');
		r3[i][j]=r3[i][j-1]+(st[i][j]=='3');
		c2[i][j]=c2[i-1][j]+(st[i][j]=='2');
		c3[i][j]=c3[i-1][j]+(st[i][j]=='3');
	}
	rep(i,n) r0[i].pb(n+1), c0[i].pb(n+1);
	int xx=0, yy=0;
	rep(i,n) rep(j,n) {
		if (mk[i][j]) continue;
		if (st[i][j]=='0') continue;
		vecIter ll,rr,uu,dd;
		rr=upper_bound(r0[i].begin(),r0[i].end(),j); ll=rr; ll--;
		dd=upper_bound(c0[j].begin(),c0[j].end(),i); uu=dd; uu--;
		int ri=min( min(*rr - j,j - *ll), min(i - *uu,*dd - i) );
		int cnt2=r2[i][j+ri-1]-r2[i][j-ri]+c2[i+ri-1][j]-c2[i-ri][j];
		int cnt3=r3[i][j+ri-1]-r3[i][j-ri]+c3[i+ri-1][j]-c3[i-ri][j];
		if (st[i][j]=='2') cnt2--;
		if (st[i][j]=='3') cnt3--;
		if (cnt2*lg2+cnt3*lg3 > xx*lg2+yy*lg3) xx=cnt2, yy=cnt3;
		/*if (cnt2==3 && cnt3==3) {
			printf("~~~~~~    %d %d\n",i,j);
			printf("         [%d,%d]\n",j-ri,j+ri-1);
			printf("         [%d,%d]\n",i-ri,i+ri-1);
		}*/
	}
	if (xx*lg2+yy*lg3 > ansx*lg2+ansy*lg3) ansx=xx, ansy=yy;
}

void rotate() {
	rep(i,n) rep(j,n) str[i][j]=st[i][j];
	rep(i,2*n-1) rep(j,2*n-1) st[i][j]='0';
	for (double i=1.5; i<n; i++)
		for (double j=1.5; j<n; j++)
		{
			int x=i+j-1, y=j-i+n;
			//printf("(%d,%d)\n",x,y);
			st[x][y]='1';
			mk[x][y]=true;
		}
	rep(i,n) rep(j,n) st[i+j-1][j-i+n]=str[i][j];
}

int main() {
#ifndef ONLINE_JUDGE
	freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
#endif
	scanf("%d",&n);
	rep(i,n) scanf("%s",st[i]+1);
	mem(mk,false);
	solve(n);
	//printf("%d %d\n",ansx,ansy);
	rotate();
	/*rep(i,2*n-1) {
		rep(j,2*n-1)
			printf("%c ",st[i][j]);
		printf("\n");
	}*/
	solve(2*n-1);
	//printf("%d %d\n",ansx,ansy);
	//return 0;
	int ans=0;
	rep(i,n) rep(j,n) 
		if (str[i][j]!='0') ans=1;
	rep(i,ansx) ans=ans*2%mod;
	rep(i,ansy) ans=(lld)ans*3%mod;
	printf("%d\n",ans);
	return 0;
}
