#include"cstdio"
#include"queue"
#include"cmath"
#include"stack"
#include"iostream"
#include"algorithm"
#include"cstring"
#include"queue"
#include"map"
#include"set"
#include"vector"
#define LL long long
#define ull unsigned long long
#define mems(a,b) memset(a,b,sizeof(a))
#define ls pos<<1
#define rs pos<<1|1
using namespace std;

const int N = 1e3+5;
const LL MOD = 1e9+7;
const int INF = 0x3f3f3f3f;

int n;
char s[N][N];
int dp[N][N][8];
int dx[8]={-1,-1,-1,0,0,1,1,1};
int dy[8]={-1,0,1,-1,1,-1,0,1};
double sum[N][N][8];
double Log[5];

bool ing(int x,int y){
    if(x<1||x>n) return false;
    if(y<1||y>n) return false;
    return true;
}

int main(){
    Log[1]=0;
    Log[2]=log(2);
    Log[3]=log(3);
    scanf("%d",&n);
    for(int i=1;i<=n;i++) scanf("%s",s[i]+1);
    mems(dp,0);
    mems(sum,0);
    for(int i=1;i<=n;i++)
    for(int j=1;j<=n;j++) if(s[i][j]!='0'){
        for(int k=0;k<4;k++){
            int nx=i+dx[k];
            int ny=j+dy[k];
            dp[i][j][k]=1;
            sum[i][j][k]=Log[s[i][j]-'0'];
            if(!ing(nx,ny)||s[nx][ny]=='0') continue;
            sum[i][j][k]+=sum[nx][ny][k];
            dp[i][j][k]+=dp[nx][ny][k];
        }
    }
    for(int i=n;i>0;i--)
    for(int j=n;j>0;j--) if(s[i][j]!='0'){
        for(int k=4;k<8;k++){
            int nx=i+dx[k];
            int ny=j+dy[k];
            dp[i][j][k]=1;
            sum[i][j][k]=Log[s[i][j]-'0'];
            if(!ing(nx,ny)||s[nx][ny]=='0') continue;
            sum[i][j][k]+=sum[nx][ny][k];
            dp[i][j][k]+=dp[nx][ny][k];
        }
    }

    double ans=-1,tmp;
    int len,l;
    int ex,ey,p;
    for(int i=1;i<=n;i++)
    for(int j=1;j<=n;j++){
        if(s[i][j]=='0') continue;
        tmp=0;
        len=INF;
        for(int k=0;k<=2;k+=2) len=min(len,min(dp[i][j][k],dp[i][j][7-k]));
        for(int k=0;k<=2;k+=2) tmp=tmp+sum[i][j][k]-sum[i+dx[k]*len][j+dy[k]*len][k]+sum[i][j][7-k]-sum[i+dx[7-k]*len][j+dy[7-k]*len][7-k];
        tmp-=3.0*Log[s[i][j]-'0'];
        if(ans<tmp){
            ex=i;
            ey=j;
            p=1;
            l=len;
            ans=tmp;
        }
        tmp=0;
        len=INF;
        for(int k=1;k<=3;k+=2) len=min(len,min(dp[i][j][k],dp[i][j][7-k]));
        for(int k=1;k<=3;k+=2) tmp+=sum[i][j][k]-sum[i+dx[k]*len][j+dy[k]*len][k]+sum[i][j][7-k]-sum[i+dx[7-k]*len][j+dy[7-k]*len][7-k];
        tmp-=3.0*Log[s[i][j]-'0'];
        if(ans<tmp){
            ex=i;
            ey=j;
            p=2;
            l=len;
            ans=tmp;
        }
    }
    //cout<<"ans:"<<ex<<' '<<ey<<' '<<p<<' '<<l<<endl;
    if(fabs(ans+1)<1e-6) return 0*printf("0\n");
    LL Ans=(LL)(s[ex][ey]-'0');
    if(p==1){
        for(int k=0;k<=2;k+=2)
        for(int i=1;i<l;i++){
            Ans=(Ans%MOD*(s[ex+dx[k]*i][ey+dy[k]*i]-'0'))%MOD;
            Ans=(Ans%MOD*(s[ex+dx[7-k]*i][ey+dy[7-k]*i]-'0'))%MOD;
        }
    }
    else{
        for(int k=1;k<=3;k+=2)
        for(int i=1;i<l;i++){
            Ans=(Ans*(s[ex+dx[k]*i][ey+dy[k]*i]-'0'))%MOD;
            Ans=(Ans*(s[ex+dx[7-k]*i][ey+dy[7-k]*i]-'0'))%MOD;
        }
    }
    cout<<Ans<<endl;
    return 0;
}
