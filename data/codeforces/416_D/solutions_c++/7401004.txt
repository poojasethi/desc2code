#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

typedef long long ll;

struct pro
{
	int num;
	vector<ll> v,p;
	void init()
	{
		num=0;
		v.clear();
		p.clear();
	}
	int size()
	{
		return num;
	}
	bool add(ll x)
	{
		num++;
		if (x!=-1 && v.size()<2)
		{
			v.push_back(x);
			p.push_back(num-1);
		}
		if (v.size()<2) return true;
		if (((v[1]-v[0])%(p[1]-p[0]))!=0) return false;
		ll inc=(v[1]-v[0])/(p[1]-p[0]);
		ll first=v[0]-p[0]*inc;
		ll last=v[0]+(num-1-p[0])*inc;
		if (x!=-1 && x!=last) return false;
		if (first<1 || last<1) return false;
		return true;
	}
};
int main()
{
	int n;
	cin>>n;
	pro p;
	p.init();
	int ans=0;
	for(int i=1;i<=n;i++)
	{
		int c;
		cin>>c;
		if (!p.add(c))
		{
			p.init();
			p.add(c);
			ans++;
		}
	}
	if (p.size()>0)
	{
		ans++;
	}
	cout<<ans<<endl;
	return 0;
}
