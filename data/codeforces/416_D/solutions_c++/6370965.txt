#include<stdio.h>
#define N 200005
__int64 s[N],n;
__int64 find(__int64 x)
{
    __int64 i;
    for(i=x;i<=n;i++)
        if(s[i]!=-1)
        return i;
        return n+1;
}
__int64 judge(__int64 x)
{
    __int64 mark1=find(x);
    __int64 mark2=find(mark1+1);
    if(mark1==n+1||mark2==n+1)
        return n+1;
    if((s[mark2]-s[mark1])%(mark2-mark1)!=0)
        return mark2;
    __int64 d=(s[mark2]-s[mark1])/(mark2-mark1);
    if(s[mark1]-d*(mark1-x)<1)
        return mark2;
    __int64 sum=s[mark2];
    for(__int64 i=mark2+1;i<=n;i++)
    {
        sum+=d;
        if(sum<1||s[i]!=-1&&s[i]!=sum)
            return i;
    }
    return n+1;
}
__int64 solve()
{
    __int64 ans=0,x=1;
    while(x<=n)
    {
        ans++;
        x=judge(x);
    }
    return ans;
}
int main()
{
    __int64 i,j;
    while(~scanf("%I64d",&n))
    {
        for(i=1;i<=n;i++)
            scanf("%I64d",&s[i]);
        printf("%I64d\n",solve());
    }
}
 	 	 	 	  				 								   	