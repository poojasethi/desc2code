#include <cstdio>

__int64 n;
__int64 a[200010];

void init() {
	scanf("%I64d", &n);
	for (__int64 i = 1; i <= n; i++)  scanf("%I64d", &a[i]);
}

__int64 check(__int64 f) {
	for (__int64 i = f; i <= n; i++)
		if (a[i] != -1)  return(i);
	return(n+1);
}

__int64 dfs(__int64 head) {
	__int64 i1=check(head);
	__int64 i2=check(i1+1);

	if (i1 > n || i2 > n)  return(n+1);

	if ((a[i2]-a[i1])%(i2-i1) != 0)  return(i2);
	__int64 d = (a[i2]-a[i1])/(i2-i1);

	if (a[i1]-d*(i1-head) < 1)  return(i2);

	__int64 sum = a[i2];
	__int64 i;
	for (i = i2+1; i <= n; i++) {
		sum += d;

		if (sum < 1)  return(i);
		if (a[i] != -1 && a[i] != sum)  return(i);
	}

	return(i);
}

void solve() {
	__int64 head = 1, ans = 0; 
	while (head <= n) {
		ans++;
		head = dfs(head);
	}

	printf("%I64d", ans);
}

int main() {
	init();
	solve();
}
