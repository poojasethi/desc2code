#include<cstdio>
#include<cmath>
#include<complex>
#include<algorithm>
#define fo(i,a,b) for(int i=a;i<=b;++i)
using namespace std;
typedef complex<double> node;
const double pi=3.1415926535897932384626433832795,step=0.5;
const node I(0,1);
const int mn=1010;
node a[mn];
int n;
double R,L;
int main()
{
    scanf("%d",&n);
    if(n<=4)
    {
        puts("No solution");
        return 0;
    }
    R=1000.0,L=0.0;
    if(n<=10)R=500;
    fo(i,0,n-1)
        a[i]=R*exp(2*pi*i/n*I);
    fo(i,0,n-1)
    {
        node u=a[(i+1)%n]-a[i],v=a[(i+2)%n]-a[(i+3)%n];
        L+=step;
        u=u/abs(u)*L,v=v/abs(v)*L;
        a[(i+1)%n]-=u,a[(i+2)%n]-=v;
    }
    fo(i,0,n-1)
        printf("%.8lf %.8lf\n",a[i].real(),a[i].imag());
    return 0;
}
