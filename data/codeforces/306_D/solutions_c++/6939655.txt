#include <iostream>
#include <cmath>
#include <iomanip>
const double pi = acos( -1 );
const double C = 0.99999;
using namespace std;

struct Vector
{
    double x , y;
};

Vector operator +( Vector A , Vector B )
{
    Vector R;
    R.x = A.x + B.x ;
    R.y = A.y + B.y;
    return R;
}

double Solve( Vector p , Vector q , Vector r )
{
    return ( ( p.x * r.y ) - ( r.x * p.y ) ) / ( ( p.x * q.y ) - ( p.y * q.x ) );
}

int main()
{
    int N;
    cin >> N;

    cout << fixed << setprecision( 10 ) ;

    if ( N < 5 )
    {
        cout << "No solution" << endl;
        return 0;
    }

    double R = 700;
    Vector Curr , p ;
    Curr.x = Curr.y = 0 ;
    double d = ( 2*pi ) / N;
    double alfa = 0;

    for( int i = 0 ; i < N - 1 ; i++ )
    {
        cout << Curr.x << " " << Curr.y << endl;

        p.x = R * cos( alfa );
        p.y = R * sin( alfa );

        if ( i != N - 2  )
            Curr = Curr + p;

        R = R * C;
        alfa += d;
    }

    Vector q ;
    q.x = R * cos( alfa );
    q.y = R * sin( alfa );

    double k = Solve( q , p , Curr );
    k = -k;

    p.x = p.x * k;
    p.y = p.y * k;

    Curr = Curr + p;
    cout << Curr.x << " " << Curr.y << endl;


    return 0;
}
