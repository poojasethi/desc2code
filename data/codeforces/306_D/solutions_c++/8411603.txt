#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int N = 105;

typedef double LD;
struct PI{LD x,y; PI(LD X=0, LD Y=0){x=X, y=Y;}};

PI operator+(PI a, PI b){return PI(a.x+b.x, a.y+b.y);}
PI operator-(PI a, PI b){return PI(a.x-b.x, a.y-b.y);}
PI operator*(PI a, LD b){return PI(a.x*b, a.y*b);}

LD len(PI a){return sqrt(a.x*a.x + a.y*a.y);}

int n;
PI a[N], b[N];

int R(){return (rand() << 16) + rand();}

int main()
{
	scanf("%d", &n);
	
	if(n<=4) {puts("No solution"); return 0;}
	
	LD ang(acos(-1) * 2 / n), L(500);
	for(int i=0; i<n; i++) a[i] = PI(cos(ang * i) * L, sin(ang * i) * L);
	
	srand(7007);
	for(int i=0; i<n; i+=2) 
	{
		if(i==n-1) {b[i] = a[i]; break;}
		PI x(a[(i-1+n)%n]), y(a[i]), z(a[i+1]), w(a[(i+2)%n]);
		x = (x + y) * 0.5, w = (z + w) * 0.5, y = y - x, z = z - w;
		LD tm = double(R() % int(1e6)) / 1e6;
		b[i] = x + y * tm, b[i+1] = w + z * tm;
	}
	
	for(int i=0; i<n; i++) printf("%.3lf %.3lf\n", b[i].x, b[i].y);
	
	return 0;
}
