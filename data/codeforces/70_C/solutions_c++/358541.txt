#include <cstdio>
#include <algorithm>
#include <cstring>
#include <map>
#include <cmath>
using namespace std;

struct dat{
	long long x,y;
	bool operator < (dat const &T) const{return x*T.y < y*T.x;}
	bool operator == (dat const &T) const{return x*T.y == y*T.x;}
}	T;

int rev(int x){
	int R=0,t;
	while (x>0){
		t = x%10;
		R = R*10 + t;
		x /= 10;
	}
	return R;
}

dat a[100005];
map<dat, int> X,Y;
int mx,my;
int ret=-1,rex,rey,par,n,t,pt;

int main(){

	scanf("%d%d%d",&mx,&my,&n);

	Y.clear();
	for (int i=1;i<=my;i++){
		a[i].x = i;
		a[i].y = rev(i);
		Y[a[i]] = Y[a[i]]+1;
	}

	X.clear();
	par = 0;
	pt = my;
	for (int i=1;i<=mx;i++){
		T.x = rev(i);
		T.y = i;
		par += Y[T];
		X[T] = X[T] + 1;
		
		if (par<n) continue;
		
		while (pt>=1){
			T.x = a[pt].x;
			T.y = a[pt].y;
			t = X[T];
			if (par-t>=n){
				par-=t;
				Y[a[pt]] = Y[a[pt]] - 1;
				pt--;
			}
			else break;
		}
		
		if (i*pt < ret || ret==-1){
			ret = i*pt;
			rex = i;
			rey = pt;
		}
		
	}
	
	if (ret==-1) printf("-1\n");
	else printf("%d %d\n", rex,rey);


	return 0;
}
