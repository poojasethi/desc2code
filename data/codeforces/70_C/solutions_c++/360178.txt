#include <iostream>
#include <algorithm>
#include <map>
using namespace std;

const int INF = 100013;
#define MP make_pair
typedef pair<int,int> PII;

map<PII, int> my, mx;

int gcd(int a, int b){
	if(b == 0) return a;
	return gcd(b, a % b);
}

PII inv(const PII &p){
	return MP(p.second, p.first);
}

int rev(int n){
	int k = 0;
	while(n > 0){
		k = k * 10 + n % 10;
		n /= 10;
	}
	return k;
}

int a[100011], b[100011];

int main(){
	int nx, ny, i, j, k, m, n, w;
	long long ansi, ansj;
	while(cin>>nx>>ny>>w){
		my.clear();
		mx.clear();
		m = max(ny, nx);
		for(i = 1; i <= m; i++){
			k = gcd(i, rev(i));
			a[i] = i / k;
			b[i] = rev(i) / k;
		}
		for(i = 1; i <= ny; i++)
			my[MP(a[i], b[i])]++;
		ansi = ansj = INF;
		int tt = 0;
		j = ny;
		for(i = 1; i <= nx; i++){
			mx[MP(b[i], a[i])]++;
			tt += my[MP(b[i], a[i])];
			while(tt - mx[MP(a[j], b[j])] >= w){
				tt -= mx[MP(a[j], b[j])];
				my[MP(a[j], b[j])]--;
				j--;
			}
			if(tt >= w){
				if(((long long)i) * j < ansi * ansj){
					ansi = i;
					ansj = j;
				}
			}

		}
		if(ansi == INF)
			cout<<"-1"<<endl;
		else
			cout<<ansi<<' '<<ansj<<endl;
	}

}
