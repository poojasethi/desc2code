#include<cstdio>
#include<map>
#include<algorithm>//by balroginfire
using namespace std;
map<pair<int,int>,int> A,B;
int	MA,MB,W;
int r1,r2;
int rev(int u)
{
	int v=0;
	for (;u;u/=10) v=v*10+u%10;
	return v;
}
int gcd(int a,int b){return !b?a:gcd(b,a%b);}
int main()
{
	scanf("%d%d%d",&MA,&MB,&W);
	for (int i=1;i<=MA;i++)
	{
		int u=i,v=rev(i);
		A[make_pair(u/gcd(u,v),v/gcd(u,v))]++;//use less bin
		// count i/rev(i),,for fixed A
	}
	r1=r2=-1;
	long long now=0;
	for (int i=MA,j=0;i;i--)
	{
		while (j<MB && now<W)
		{
			++j;//1 to MB
			int u=rev(j),v=j;//store in opposite manner
			pair<int,int> tmp=make_pair(u/gcd(u,v),v/gcd(u,v));
			now+=A[tmp];//a/rev[a] = rev[b]/b (both in simplest ratio)
			B[tmp]++;
		}//not necessary W pair ,but meet >=W && i*j smallest
		if (now>=W)
		{
			if (r1==-1 || (long long)r1*r2>(long long)i*j)
				r1=i,r2=j;//update answer
		}
		int u=i,v=rev(i);
		pair<int,int> tmp=make_pair(u/gcd(u,v),v/gcd(u,v));// a ratio ,,, 
		now-=B[tmp];//match corr. in B ,which is rev[bi]/bi
		A[tmp]--;//won't count from x again
	}
	if (r1==-1) printf("-1\n");
	else printf("%d %d\n",r1,r2);
}
