#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <cmath>
#include <string>
#include <algorithm>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <numeric>

using namespace std;

typedef long long i64;

const int INF = 0x3F3F3F3F;

map<pair<int,int>, int> MX, MY;

int maxx, maxy, w;

inline int rev(int A) {
    int ret = 0;
    while (A) ret = ret*10 + (A%10), A /= 10;
    return ret;
}

inline pair<int,int> par(int A, int B) {
    int d = __gcd(A,B);
    return make_pair(A/d, B/d);
}

int main() {

    scanf("%d %d %d", &maxx, &maxy, &w);

    for (int x = 1; x <= maxx; x++) MX[par(x,rev(x))]++;

    int x = maxx, y = 0;
    int c = 0, bx = INF, by = INF;
    while (x > 0 && y <= maxy) {
        if (c < w) {
            y++;
            c += MX[par(rev(y),y)];
            MY[par(rev(y),y)]++;
        }
        else {
            if (x*(i64)y < bx*(i64)by) bx = x, by = y;
            c -= MY[par(x,rev(x))];
            MX[par(x,rev(x))]--;
            x--;
        }
    }
    if (bx == INF) puts("-1");
    else printf("%d %d\n", bx, by);

    return 0;
}
