#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
using namespace std;

void read();
void solve();
void write();

int main() {
    read();
    solve();
    write();
}

const int MAX = 5 * 10e5 + 3;
int n, a[MAX];
vector<int> r, v;
multiset<int> c;
map<int, int> b;

void read() {
    cin >> n;
    for (int i = 1; i <= n; ++i) {
        cin >> a[i];
    }
}

inline void add(int x, int y) {
    r.push_back(x);
    r.push_back(y);
    r.push_back(x);
    r.push_back(y);
    v.clear();
    b.clear();
    c.clear();
}

void solve() {
    for (int i = 1; i <= n; ++i) {
        if (b[a[i]]) {
            add(b[a[i]], a[i]);
        } else {
            if (c.count(a[i])) {
                int ap = (c.count(a[i]) >= 2 ? 1 : 0);
                while (ap || v.back() != a[i]) {
                    if (v.back() == a[i]) {
                        --ap;
                    }
                    b[v.back()] = a[i];
                    v.pop_back();
                }
            }
            c.insert(a[i]);
            v.push_back(a[i]);
        }
    }
}

void write() {
    cout << (int)r.size() << '\n';
    for (int i = 0; i < (int)r.size(); ++i) {
        cout << r[i] << ' ';
    }
    cout << '\n';
}














































