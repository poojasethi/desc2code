#include <bits/stdc++.h>

#define	FP( ii,aa,bb ) for( int ii=aa;ii<=bb;ii++ )
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	pb	push_back

using namespace std;

int	n,arr[600000];
vector<int>	res;

int	f( int x ){
	stack<int>	S;
	map<int,int>	size,result;
	FP( i,x,n ){
		if( result.find( arr[i] )!=result.end() ){
			res.pb( result[ arr[i] ] );
			res.pb( arr[i] );
			res.pb( result[ arr[i] ] );
			res.pb( arr[i] );
			return	i;
		}
		while( S.size() and ( size[arr[i]]>1 or ( size[arr[i]]==1 and S.top()!=arr[i] ) ) ){
			result[ S.top() ] = arr[i];
			size[ S.top() ]--;
			S.pop();
		}
		S.push( arr[i] );
		size[arr[i]]++;
	}
	return	-1;
}

int main(){
	ios_base::sync_with_stdio( false );
	cin >> n;
	FP( i,1,n )	cin >> arr[i];
	int	t=0;
	while( (t=f(t+1))!=-1 );
	cout << res.size() << endl;
	foreach( res,it )	cout << *it << " ";
	cout << endl;
}
