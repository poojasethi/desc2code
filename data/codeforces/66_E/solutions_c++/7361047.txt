#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

const int MAXN = (int)1e5+10;

int n ;
long long a[MAXN],b[MAXN] ;
bool visit[MAXN];
int pos[MAXN];

void solve(){
    long long MIN=(long long)1e18 , now=0 ;
    for (int i=1;i<=n;i++){
        now+=a[i]-b[i] ;
        MIN=min(MIN,now);
    }
    for (int i=1;i<=n;i++){
        visit[pos[i]] |= (MIN>=0);
        MIN+=b[i]-a[i];
    }
}
void build(){
    for (int i=1;i+i<=n;i++) swap(pos[i],pos[n-i+1]),swap(a[i],a[n-i+1]);
    for (int i=1;i+i<=n-1;i++) swap(b[i],b[n-i]);
}

int main(){
    scanf("%d",&n);
    for (int i=1;i<=n;i++) scanf("%I64d",a+i);
    for (int i=1;i<=n;i++) scanf("%I64d",b+i),pos[i]=i;
    solve() ;
    build();
    solve();
    vector<int> res;
    for (int i=1;i<=n;i++)
        if (visit[i])
            res.push_back(i);
    printf("%d\n",res.size());
    for (int i=0;i<res.size();i++)
        printf("%d%c",res[i],((i==res.size()-1) ? '\n' : ' '));
    return 0;
}
