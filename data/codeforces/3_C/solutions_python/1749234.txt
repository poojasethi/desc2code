import sys

combinations = [set(x) for x in [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    
    [0, 4, 8],
    [2, 4, 6],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8]]]

def solve(data):
    if len(data['X']) - len(data['0']) not in [0, 1]:
        return 'illegal'
    if any(x.issubset(data['X']) for x in combinations) and any(x.issubset(data['0']) for x in combinations):
        return 'illegal'
        
    if any(x.issubset(data['X']) for x in combinations):
        if len(data['X']) - len(data['0']) == 1:
            return 'the first player won'
        else:
            return 'illegal'
    if any(x.issubset(data['0']) for x in combinations):
        if len(data['X']) == len(data['0']):
            return 'the second player won'
        else:
            return 'illegal'
    
    if len(data['X']) + len(data['0']) == 9:
        return 'draw'
    
    if len(data['X']) > len(data['0']):
        return 'second'
    
    if len(data['X']) == len(data['0']):
        return 'first'
    
    
    
if __name__ == '__main__':
    data = {'X': [], '0': []}
    pos = 0
    
    for i in range(3):
        for x in sys.stdin.readline().strip():
            if x != '.':
                data[x].append(pos)
            pos += 1
           
    sys.stdout.write(str(solve(data)))