input_data = [raw_input().strip() for i in range(3)]

lines_and_diagonals = [
    [(0, 0), (0, 1), (0, 2)],
    [(1, 0), (1, 1), (1, 2)],
    [(2, 0), (2, 1), (2, 2)],

    [(0, 0), (1, 0), (2, 0)],
    [(0, 1), (1, 1), (2, 1)],
    [(0, 2), (1, 2), (2, 2)],

    [(0, 0), (1, 1), (2, 2)],
    [(0, 2), (1, 1), (2, 0)],
]

def have_complete_lines(data):
    result = set()
    for line in lines_and_diagonals:
        line_mark = None
        for row, column in line:
            current_mark = data[row][column]
            if current_mark == '.':
                break
            if line_mark is None:
                line_mark = current_mark
                continue
            if line_mark != current_mark:
                break
        else:
            result.add(line_mark)
    return list(result)

def description(data):
    cross_count = sum(line.count('X') for line in data)
    zeros_count = sum(line.count('0') for line in data)

    if not (0 <= cross_count - zeros_count <= 1):
        return 'illegal'

    full_lines = have_complete_lines(data)

    if len(full_lines) > 0:
        if len(full_lines) > 1:
            return 'illegal'
        winner = full_lines[0]
        if winner == 'X' and not (cross_count - zeros_count) == 1:
            return 'illegal'
        elif winner == '0' and cross_count != zeros_count:
            return 'illegal'
        return 'the %s player won' % ('first' if winner == 'X' else 'second')
    
    if cross_count + zeros_count == 9:
        return 'draw'

    if cross_count == zeros_count:
        return 'first'
    else:
        return 'second'

print description(input_data)