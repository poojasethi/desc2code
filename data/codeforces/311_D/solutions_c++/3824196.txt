#include <cstdio>
#define mid (f+t>>1)
#define ls (x+x)
#define rs (x+x+1)
#define cube(x) ((ll(x)*ll(x)%mod*ll(x))%mod)
typedef long long ll;
const int MaxN = 100010;
const ll mod = 95542721;
int N, M, d[MaxN*4], p, l, r;
ll s[MaxN*4][48];

inline void updata(int x){
	for(int i = 0; i < 48; i++)
		s[x][i] = s[ls][(i+d[ls])%48] + s[rs][(i+d[rs])%48];
}

inline void build(int f, int t, int x){
	if(f != t){
		build(f, mid, ls);
		build(mid+1, t, rs);
		updata(x);
	}
	else{
		scanf("%I64d", &s[x][0]);
		for(int j = 1; j < 48; j++)
			s[x][j] = cube(s[x][j-1]);
	}
}

inline void push(int x){
	d[ls] += d[x];
	d[rs] += d[x];
	d[x] = 0; updata(x);
}

ll query(int f, int t, int x){
	if(l<= f && t<= r) return s[x][d[x]%48] % mod;
	if(f != t) push(x);
	if(r <= mid) return query(f, mid, ls) % mod;
	if(l > mid) return query(mid+1, t, rs) % mod;
	return (query(f, mid, ls) + query(mid+1, t, rs)) % mod;
}

void modify(int f, int t, int x){
	if(l <= f && t <= r) ++ d[x];
	else{
		push(x);
		if(l<= mid) modify(f, mid, ls);
		if(mid< r) modify(mid+1, t, rs);
		updata(x);
	}
}

int main (){
	scanf("%d", &N); build(1, N, 1);
	scanf("%d", &M);
	while(M --){
		scanf("%d%d%d", &p, &l, &r);
		if(p == 1) printf("%I64d\n", query(1, N, 1));
		else modify(1, N, 1);
	}
}
