//By momoâ„¢
#include <cstdio>
#define lc (id + id)
#define rc (id + id + 1)
#define mid ((l + r) >> 1)
#define cube(x) (((x*x)%M*x)%M)
typedef long long LL;

const int MXN = 100010;
const LL M = 95542721;

int a, b, cov[MXN * 4];
LL dat[MXN * 4][48];

void update(int id){
	for(int i = 0; i < 48; ++i)
		dat[id][i] = dat[lc][(i+cov[lc])%48] + dat[rc][(i+cov[rc])%48];
}

void init(int l, int r, int id){
	if(l == r){
		scanf("%I64d", &dat[id][0]);
		for(int j = 1; j < 48; ++j)
			dat[id][j] = cube(dat[id][j-1]);
		return;
	}
	init(l, mid, lc);
	init(mid+1, r, rc);
	update(id);
}

void push(int id){
	cov[lc] += cov[id];
	cov[rc] += cov[id];
	cov[id] = 0; update(id);
}

LL query(int l, int r, int id){
	if(a <= l && r <= b) return dat[id][cov[id]%48];
	if(l != r) push(id);
	if(b <= mid) return query(l, mid, lc) % M;
	if(a > mid) return query(mid+1, r, rc) % M;
	return (query(l, mid, lc) + query(mid+1, r, rc)) % M;
}

void insert(int l, int r, int id){
	if(a <= l && r <= b) ++cov[id];
	else{
		push(id);
		if(a <= mid) insert(l, mid, lc);
		if(mid+1 <= b) insert(mid+1, r, rc);
		update(id);
	}
}

int main (){
	int N; scanf("%d", &N); init(1, N, 1);
	int Q; scanf("%d", &Q);
	while(Q--){
		int T; scanf("%d%d%d", &T, &a, &b);
		if(T == 2) insert(1, N, 1);
		else printf("%I64d\n", query(1, N, 1));
	}
}
