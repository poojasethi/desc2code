#include<cstdio>
#include<iostream>
#include<cstring>
#define mo 95542721
typedef long long ll;
using namespace std;

ll a[600000][48];
int n,ori[100010],ans,l,r,lazy[800000];

void update(int x)
{
	lazy[x]=0;
	int g=x*2,h=g+1;
	for (int i=0; i<48; i++)
		a[x][i]=(a[g][(lazy[g]+i)%48]+a[h][(lazy[h]+i)%48])%mo;
	return;
}

void push(int x)
{
	int g=x*2,h=g+1;
	lazy[g]+=lazy[x];
	if (lazy[g]>=48) lazy[g]-=48;
	lazy[h]+=lazy[x];
	if (lazy[h]>=48) lazy[h]-=48;
	lazy[x]=0; return;
}

void build(int be,int en,int now)
{
	if (be==en)
	{
		lazy[now]=0;
		ll tmp=ori[be]%mo;
		for (int i=0; i<48; i++)
		{
			a[now][i]=tmp;
			tmp=((tmp*tmp)%mo*tmp)%mo;
		} return;
	} int mid=(be+en)/2;
	build(be,mid,now*2);
	build(mid+1,en,now*2+1);
	update(now); return;
}

void ask(int be,int en,int now)
{
	if (l<=be && en<=r)
	{
		ans+=a[now][lazy[now]];
		if (ans>=mo) ans-=mo;
		return;
	} int mid=(be+en)/2;
	if (lazy[now]>0) push(now);
	if (l<=mid) ask(be,mid,now*2);
	if (r>mid) ask(mid+1,en,now*2+1);
	update(now); return;
}

void change(int be,int en,int now)
{
	if (l<=be && en<=r)
	{
		lazy[now]++;
		if (lazy[now]>=48) lazy[now]-=48;
		return;
	} int mid=(be+en)/2;
	if (lazy[now]>0) push(now);
	if (l<=mid) change(be,mid,now*2);
	if (r>mid) change(mid+1,en,now*2+1);
	update(now); return;
}

int main()
{
	scanf("%d",&n);
	for (int i=1; i<=n; i++) scanf("%d",&ori[i]);
	build(1,n,1);
	int query;
	scanf("%d",&query);
	while (query--)
	{
		int t;
		scanf("%d %d %d",&t,&l,&r);
		if (t==1)
		{
			ans=0; ask(1,n,1);
			printf("%d\n",ans);
		} else change(1,n,1);
	}
}