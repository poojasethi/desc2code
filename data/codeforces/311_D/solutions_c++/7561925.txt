#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<cmath>
#include<set>
#include<vector>
#include<map>
#include<queue>
#include<deque>
#define mkp make_pair
#define pb push_back
using namespace std;

typedef long long ll;
typedef pair<int,int> pi;
typedef vector<int> vi;

const int maxn = 100001;
const int inf = 1<<29;
const int mod = 95542721;
const double eps = 1e-8;
const int ch = 48;

int n,sum[maxn<<2][ch],add[maxn<<2];ll ans;
int f(ll x)
{
    return x*x%mod*x%mod;
}

void modify(int pl,int pr,int l,int r,int rt)
{
    if(pl<=l&&r<=pr)
    {
        add[rt] = (add[rt]+1)%ch;
        return;
    }
    int m = (l+r)>>1;
    if(pl<=m)
        modify(pl,pr,l,m,rt<<1);
    if(pr>m)
        modify(pl,pr,m+1,r,rt<<1|1);
    for(int i=0;i<ch;i++)
        sum[rt][i] = (sum[rt<<1][(i+add[rt<<1])%ch]+sum[rt<<1|1][(i+add[rt<<1|1])%ch])%mod;
}

void query(int pl,int pr,int s,int l,int r,int rt)
{
    if(pl<=l&&r<=pr)
    {
        ans += sum[rt][(add[rt]+s)%ch];
        return ;
    }
    int m = (l+r)>>1;s += add[rt];
    if(pl<=m)
        query(pl,pr,s,l,m,rt<<1);
    if(pr>m)
        query(pl,pr,s,m+1,r,rt<<1|1);
}
void build(int l,int r,int rt)
{
    if(l==r)
    {
        scanf("%d",&sum[rt][0]);
        for(int i=1;i<ch;i++)
            sum[rt][i] = f(sum[rt][i-1]);
        return ;
    }
    int m =(l+r)>>1;build(l,m,rt<<1);build(m+1,r,rt<<1|1);
    for(int i=0;i<ch;i++)
        sum[rt][i] = (sum[rt<<1][i] + sum[rt<<1|1][i])%mod;
}

int main()
{
    int q,ty,l,r;scanf("%d",&n);build(1,n,1);scanf("%d",&q);
    while(q--)
    {
        scanf("%d%d%d",&ty,&l,&r);
        if(ty==1)
        {
            ans = 0;query(l,r,0,1,n,1);
            printf("%lld\n",ans%mod);
        }
        else
            modify(l,r,1,n,1);
    }
}
