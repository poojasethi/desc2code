#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
int n,m,a[100010],f[400010][50],tmp[50],lazy[400010],mod=95542721;
void build(int t,int l,int r){
    if(l==r){
        f[t][0]=a[l];
        for(int i=1;i<48;++i)f[t][i]=(long long)f[t][i-1]*f[t][i-1]%mod*f[t][i-1]%mod;
        return;
    }
    int mid=(l+r)/2;
    build(t+t,l,mid);
    build(t+t+1,mid+1,r);
    for(int i=0;i<48;++i)f[t][i]=(f[t+t][i]+f[t+t+1][i])%mod;
}
void push(int t){
    if(!lazy[t])return;
    lazy[t+t]=(lazy[t+t]+lazy[t])%48;
    lazy[t+t+1]=(lazy[t+t+1]+lazy[t])%48;
    for(int i=0;i<48;++i)tmp[i]=f[t+t][i];
    for(int i=0;i<48;++i)f[t+t][i]=tmp[(i+lazy[t])%48];
    for(int i=0;i<48;++i)tmp[i]=f[t+t+1][i];
    for(int i=0;i<48;++i)f[t+t+1][i]=tmp[(i+lazy[t])%48];
    lazy[t]=0;
}
void modify(int t,int l,int r,int x,int y){
    if(x<=l&&r<=y){
        lazy[t]=(lazy[t]+1)%48;
        for(int i=0;i<48;++i)tmp[i]=f[t][i];
        for(int i=0;i<48;++i)f[t][i]=tmp[(i+1)%48];
        return;
    }
    push(t);
    int mid=(l+r)/2,res=0;
    if(x<=mid)modify(t+t,l,mid,x,y);
    if(y>mid)modify(t+t+1,mid+1,r,x,y);
    for(int i=0;i<48;++i)f[t][i]=(f[t+t][i]+f[t+t+1][i])%mod;
}
int sum(int t,int l,int r,int x,int y){
    if(x<=l&&r<=y)return f[t][0];
    push(t);
    int mid=(l+r)/2,res=0;
    if(x<=mid)res+=sum(t+t,l,mid,x,y);
    if(y>mid)res+=sum(t+t+1,mid+1,r,x,y);
    for(int i=0;i<48;++i)f[t][i]=(f[t+t][i]+f[t+t+1][i])%mod;
    return res%mod;
}
int main(){
    scanf("%d",&n);
    for(int i=1;i<=n;++i)scanf("%d",&a[i]);
    build(1,1,n);
    scanf("%d",&m);
    for(int i=1;i<=m;++i){
        int o,l,r;
        scanf("%d%d%d",&o,&l,&r);
        if(o==1){
            printf("%d\n",sum(1,1,n,l,r));
        }else{
            modify(1,1,n,l,r);
        } 
    }
    return 0;
}
