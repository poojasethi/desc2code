#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define int64 long long
#define mo 95542721
#define N 100010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
	int cov,a[48];
} tr[N*4];
int i,j,k,n,m,type,l,r,an,a[N];
inline void Inc(int x,int y) {
	tr[x].cov=(tr[x].cov+y)%48;
	int i,a[48];
	For(i,0,47) a[i]=tr[x].a[i];
	For(i,0,47) tr[x].a[(i-y+48)%48]=a[i];
}
inline void update(int x) {
	int y=x*2,z=x*2+1,i;
	For(i,0,47) tr[x].a[i]=(tr[y].a[i]+tr[z].a[i])%mo;
}
inline void renew(int q) {
	if (tr[q].cov) Inc(q*2,tr[q].cov),Inc(q*2+1,tr[q].cov);
	tr[q].cov=0;
}
void cal(int q,int x,int y,int l,int r) {
	if (l<=x&&y<=r) {
		an=(an+tr[q].a[0])%mo;
		return;
	}
	renew(q);
	int mid=(x+y)/2;
	if (l<=mid) cal(q*2,x,mid,l,r);
	if (mid<r) cal(q*2+1,mid+1,y,l,r);
}
void inc(int q,int x,int y,int l,int r) {
	if (l<=x&&y<=r) {
		Inc(q,1); return;
	}
	renew(q);
	int mid=(x+y)/2;
	if (l<=mid) inc(q*2,x,mid,l,r);
	if (mid<r) inc(q*2+1,mid+1,y,l,r);
	update(q);
}
void build(int q,int x,int y) {
	if (x==y) {
		int i;
		tr[q].a[0]=a[x];
		For(i,1,47) tr[q].a[i]=(int64)tr[q].a[i-1]*tr[q].a[i-1]%mo*tr[q].a[i-1]%mo;
		return;
	}
	int mid=(x+y)/2;
	build(q*2,x,mid);
	build(q*2+1,mid+1,y);
	update(q);
}
int main() {
	scanf("%d",&n);
	For(i,1,n) scanf("%d",&a[i]);
	build(1,1,n);
	scanf("%d",&m);
	For(i,1,m) {
		scanf("%d%d%d",&type,&l,&r);
		if (type==1) {
			an=0; cal(1,1,n,l,r);
			printf("%d\n",an);
		}
		if (type==2) inc(1,1,n,l,r);
	}
	//for(;;);
	return 0;
}
