// by Î¾

#include <cctype>
#include <cstdio>
#include <algorithm>

using namespace std;

const int p=95542721;

int lim,n,m,opt,L,R;

struct bg{
    int _,a[48];
    void in(){
        scanf("%d",a);
        for(int i=1;i<48;++i)a[i]=1ll*a[i-1]*a[i-1]%p*a[i-1]%p;
    }
}t[262145];

inline void update(int u){
    int ls=u<<1,rs=u<<1|1;
    for(int i=0;i<48;++i)t[u].a[i]=(t[ls].a[i]+t[rs].a[i])%p;
}

inline void shift(int u,int step){
    int tmp[48];
    for(int i=0;i<48;++i)tmp[i]=t[u].a[i];
    for(int i=0;i<48;++i)t[u].a[i]=tmp[(i+step)%48];
}

inline void down(int u,int l,int r){
    if(t[u]._){
        shift(u,t[u]._);
        if(l^r)(t[u<<1]._+=t[u]._)%=48,(t[u<<1|1]._+=t[u]._)%=48;
        t[u]._=0;
    }
}

int Qs(int u,int l,int r){
    down(u,l,r);
    if(L<=l && r<=R)return *t[u].a;
    int mid=l+r>>1;
    if(L>mid)return Qs(u<<1|1,mid+1,r);
    if(R<=mid)return Qs(u<<1,l,mid);
    return (Qs(u<<1|1,mid+1,r)+Qs(u<<1,l,mid))%p;
}

void Modify(int u,int l,int r){
    if(L<=l && r<=R){
        (++t[u]._)%=48;
        down(u,l,r);
        return;
    }
    int mid=l+r>>1;
    down(u,l,r);
    if(L<=mid)Modify(u<<1,l,mid);else down(u<<1,l,mid);
    if(R>mid)Modify(u<<1|1,mid+1,r);else down(u<<1|1,mid+1,r);
    update(u);
}

int main(){
    scanf("%d",&n);
    for(lim=1;lim<n;lim<<=1);
    for(int i=1;i<=n;++i)t[lim+i-1].in();
    for(int i=lim-1;i;--i)update(i);
    for(scanf("%d",&m);m--;){
        scanf("%d%d%d",&opt,&L,&R);
        if(opt==1)printf("%d\n",Qs(1,1,lim));
        else Modify(1,1,lim);
    }
}