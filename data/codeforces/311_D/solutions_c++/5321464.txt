#include <cstdio>
#define mid (f+t>>1)
#define ls (x+x)
#define rs (x+x+1)
#define cube(x) ((ll(x)*ll(x)%mod*ll(x))%mod)
typedef long long ll;
const int MaxN = 100010;
const ll mod = 95542721;
int N, M, d[MaxN*4], p, l, r;
ll s[MaxN*4][48];
void updata(int x){
    for(int i= 0;i< 48;++ i)
        s[x][i]= s[ls][(i+d[ls])%48] + s[rs][(i+d[rs])%48];
}
void build(int f, int t, int x){
    if(f == t){
        scanf("%I64d", s[x]);
        for(int i= 1;i< 48;++ i)
            s[x][i]= cube(s[x][i-1]);
        d[x]= 0;
        return;
    }
    build(f, mid, ls);
    build(mid+1, t, rs);
    updata(x);
}
void push(int x){
    d[ls]+= d[x];
    d[rs]+= d[x];
    d[x]= 0;
    updata(x);
}
ll query(int f, int t, int x){
    if(l<= f && t<= r)
        return s[x][d[x]%48];
    if(f != t)
        push(x);
    if(r <= mid)
        return query(f, mid, ls) % mod;
    if(l > mid)
        return query(mid+1, t, rs) % mod;
    return (query(f, mid, ls) + query(mid+1, t, rs)) % mod;
}
void modify(int f, int t, int x){
    if(l<= f && t<= r)
        ++ d[x];
    else{
        push(x);
        if(l<= mid)
            modify(f, mid, ls);
        if(mid< r)
            modify(mid+1, t, rs);
        updata(x);
    }
}
int main(){
    scanf("%d", &N);
    build(1, N, 1);
    scanf("%d", &M);
    while(M --){
        scanf("%d%d%d", &p, &l, &r);
        if(p == 1)
            printf("%I64d\n", query(1, N, 1));
        else
            modify(1, N, 1);
    }
}