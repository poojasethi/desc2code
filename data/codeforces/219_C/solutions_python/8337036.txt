'''
Sun Oct 19 01:45:01 PDT 2014
135 Div2 prob c
'''
nums = map(int, raw_input('').split(' '))
n = nums[0]
k = nums[1]
pattern = raw_input('')


def first(ch):
    start = ord('A')
    while start <= ord('Z'):
        if chr(start) != ch:
            return chr(start)
        start += 1


def first1(ch, ch2):
    start = ord('A')
    while start <= ord('Z'):
        if chr(start) != ch and chr(start) != ch2:
            return chr(start)
        start += 1


def cnt(patternt, ans):
    count = 0
    for i in xrange(len(patternt)):
        if patternt[i] != ans[i]:
            count += 1
    return count

if k >= 3:
    seqs = []
    prev = -1
    cur = 0
    count = 0
    while cur < len(pattern):
        if prev == -1:
            prev = 0
            cur = 1
            count = 1
            seqs.append([pattern[0], 1])
        else:
            if pattern[cur] == pattern[prev]:
                seqs[count - 1][1] += 1
            else:
                count += 1
                seqs.append([pattern[cur], 1])
            cur += 1
            prev += 1
    num_repaint = 0
    cur = 0
    ans = ''
    for c in seqs:
        num_repaint += (c[1] / 2)
        for i in xrange(c[1]):
            if i % 2 == 1:
                if cur + 1 < len(seqs):
                    ans += first1(c[0], seqs[cur + 1][0])
                else:
                    ans += first(c[0])
            else:
                ans += c[0]
        cur += 1
    print num_repaint
    print ans
else:
    ans1 = 'AB' * (n / 2) + ('A' if n % 2 == 1 else '')
    ans2 = 'BA' * (n / 2) + ('B' if n % 2 == 1 else '')
    count1 = cnt(pattern, ans1)
    count2 = cnt(pattern, ans2)
    if count1 <= count2:
        print count1
        print ans1
    if count1 > count2:
        print count2
        print ans2
