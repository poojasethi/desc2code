#include <cstdio>
#include <cstring>
#define INFI 999999999
bool inq[1000]; int s,t,cost,flow,a[1000],num[1000],q[1000000],head,tail,dis[1000],next[1000],c[1000][1000],w[1000][1000],f[1000][1000];
int var[1000],val[1000],n;
int calc(int x)
{
  int re=0;
  for(int i=0;(long long int)(1<<i)<=x;i++)
    if((long long int)(1<<i) & x)
      re++;
  return re;
}
void addedge(int u,int v,int flo,int cos)
{
  w[u][v] = cos; w[v][u] = -cos;
  c[u][v] += flo;
}
bool SPFA()
{
  int u,v;
  head = tail = 0;
  q[head] = t; 
  for(u=0;u<t;u++)
    dis[u] = INFI,inq[u]=false;
  dis[t] = 0;
  while(head <= tail)
    {
      u = q[head]; head++; inq[u] = false;
      for(v=0;v<=t;v++)
	if(c[v][u] > f[v][u])
	if(w[v][u]+dis[u] < dis[v])
	  {
	    dis[v] = dis[u]+w[v][u];
	    next[v] = u;
	    if(!inq[v]){
	      q[++tail] = v;
	      inq[v] = true;
	    }
	  }
    }
  if(dis[s] == INFI) return false;
  return true;
}
void solve()
{
  while(SPFA())
    {
      int u,min = INFI;
      for(u=s;u!=t;u=next[u])
	if(c[u][next[u]] - f[u][next[u]] < min)
	  min = c[u][next[u]] - f[u][next[u]];
      for(u=s;u!=t;u=next[u])
	{
	  f[u][next[u]] += min; f[next[u]][u] -= min;
	  cost += w[u][next[u]]*min;
	}
      flow += min;
    }
}
void print()
{
  int i,j,newv=0,line=0;
  for(i=1;i<=n;i++)
    {
      if(f[0][i+n]) 
	var[i] = ++newv;
      else
	for(j=i-1;j>=1;j--)
	  if(f[j][i+n])
	    var[i] = var[j];
    }
  for(i=1;i<=n;i++)
    {line++;
      if(val[var[i]] != num[i])
	line++;
      val[var[i]] = num[i];
    }
  memset(val,-1,sizeof(val));
  printf("%d %d\n",line,cost);
  for(i=1;i<=n;i++)
    {
      if(val[var[i]] != num[i])
	printf("%c=%d\n",'a'+var[i]-1,num[i]);
      printf("print(%c)\n",'a'+var[i]-1);
      val[var[i]] = num[i];
    }
}
int main()
{
  //freopen("e.in","r",stdin);
  //freopen("e.out","w",stdout);
  int m,i,j;
  scanf("%d%d",&n,&m);
  for(i=1;i<=n;i++)
    {
      scanf("%d",&num[i]);
      a[i] = calc(num[i]);
    }
  s = 2*n+1; t = 2*n+2;
  addedge(s,0,m,0);
  for(i=1;i<=n;i++)
    {
      addedge(s,i,1,0);
      addedge(i+n,t,1,0);
      addedge(0,i+n,1,a[i]);
      for(j=i+1;j<=n;j++)
	addedge(i,j+n,1,num[i]==num[j]?0:a[j]);
    }
  solve();
  print();
}
