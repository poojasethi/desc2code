#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;
const int M=100100,inf=200000;
int n,m,cp=1,T,ans=0;
int hd[600],ot[M],nt[M],v[M],f[M],a[300];
void add(const int x,const int y,const int z,const int F)
{
	ot[++cp]=y,nt[cp]=hd[x],hd[x]=cp,v[cp]=z,f[cp]=F;
	ot[++cp]=x,nt[cp]=hd[y],hd[y]=cp,v[cp]=0,f[cp]=-F;
}
int Q(const int x)
{
	int p=0;
	for(int i=x;i>0;++p,i-=(i&(-i)));
	return p;
}
int b[1010000],dis[600],pre[600],u[600];
bool spfa()
{
	dis[0]=0;
	for(int i=1;i<=T;++i) dis[i]=inf,u[i]=0;
	int h=1,t=1,now;b[1]=0,u[0]=1;
	for(;h<=t;++h)
	{
		now=b[h];
		for(int i=hd[now];i!=0;i=nt[i] )
		if ( v[i]>0 && dis[ot[i]]>dis[now]+f[i] ) 
		{
			dis[ot[i]]=dis[now]+f[i];
			pre[ot[i]]=i;
			if ( u[ot[i]]==0 ) u[ot[i]]=1,b[++t]=ot[i];
		}
		u[now]=0;
	}
	if ( dis[T]<inf ) 
	{
		for(now=T;now!=0;now=ot[pre[now]^1] )
			--v[pre[now]],++v[pre[now]^1];
		ans+=dis[T];
		return 1;
	}
	return 0;
}
int c[30],d[600];
void Gans()
{
	int A=0,A1=n;
	for(int j=1;j<=n;++j)
	for(int i=hd[j];i!=0;i=nt[i] )
		if ( v[i]>0 && ot[i]!=j+n )
		{
			if ( ot[i]==0 || a[ot[i]-n]!=a[j] ) ++A1;
			break;
		}
	cout<<A1<<' '<<ans+n*inf<<endl;
	for(int j=1;j<=n;++j)
	for(int i=hd[j];i!=0;i=nt[i] )
		if ( v[i]>0 && ot[i]!=j+n )
		{
			if ( ot[i]==0 ) c[++A]=a[j],d[j]=A,printf("%c=%d\nprint(%c)\n",'a'+A-1,a[j],'a'+A-1);
			else{
				d[j]=d[ot[i]-n];
				if ( c[d[j]]!=a[j] )
					c[d[j]]=a[j],printf("%c=%d\n",'a'+d[j]-1,a[j]);
				printf("print(%c)\n",'a'+d[j]-1);
			}
			break;
		}
}
int main()
{
	scanf("%d%d",&n,&m);
	memset(hd,0,sizeof(hd));
	T=n+n+1;
	for(int i=1;i<=n;++i)
		scanf("%d",&a[i]),add(i,i+n,1,-inf),add(0,i,1,Q(a[i])),add(i+n,T,1,0);
	add(0,T,m,0);
	for(int i=1;i<=n;++i)
		for(int j=i+1;j<=n;++j)
			if ( a[i]!=a[j] ) add(i+n,j,1,Q(a[j]));
				else add(i+n,j,1,0);
	for(int i=1;i<=m;++i) if ( !spfa() ) break;
	Gans();
	
	
	return 0;
}