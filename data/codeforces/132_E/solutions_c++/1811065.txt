#include<cstdio>
#include<cstring>
#include<algorithm>

using namespace std;

const int oo=1000000;

int h,t,n,m,a[255],le[510][510],c[510][510],S,T,dis[510],cost[255],fa[510],
	ord[600][2],ans,l[510],v[255],let[30],td;

bool b[510];

void add(int u,int v,int ll,int cc)
{
	le[u][v]=ll; c[u][v]=cc;
	le[v][u]=0; c[v][u]=-cc;
}

void spfa()
{
	memset(dis,1,sizeof dis);
	dis[S]=0; b[S]=true;
	for (h=-1,l[t=0]=S;h!=t;)
	{
		h=(h+1)%510;
		for (int j=0;j<=T;j++)
			if (le[l[h]][j] && dis[l[h]]+c[l[h]][j]<dis[j])
			{
				dis[j]=dis[l[h]]+c[l[h]][j];
				fa[j]=l[h];
				if (!b[j])
				{
					t=(t+1)%510;
					b[l[t]=j]=true;
				}
			}
		b[l[h]]=false;
	}
}

int main()
{
//	freopen("bits.in","r",stdin); freopen("bits.out","w",stdout);
	scanf("%d%d",&n,&m);
	for (int i=1;i<=n;i++) 
	{
		scanf("%d",&a[i]);
		cost[i]=0;
		for (int j=a[i];j;j>>=1)
			if (j&1) cost[i]++;
	}
//	for (int i=1;i<=n;i++) printf("%d ",cost[i]);puts("");
	S=n*2+1; T=n*2+2;
	memset(le,0,sizeof le);
	add(S,0,m,0);
	for (int i=1;i<=n;i++) 
		add(i*2-1,i*2,1,-oo),add(0,i*2-1,1,cost[i]),add(i*2,T,1,0);
	for (int i=1;i<=n;i++)
		for (int j=i+1;j<=n;j++)
		if (a[i]==a[j]) add(i*2,j*2-1,1,0);
			else add(i*2,j*2-1,1,cost[j]);
	spfa();
	while (dis[T]<0)
	{
		td+=dis[T];
//		printf("%d\n",dis[T]);
		for (int j=T;j!=S;j=fa[j]) le[fa[j]][j]--,le[j][fa[j]]++;
		spfa();
	}
	memset(let,-1,sizeof let);
	memset(v,-1,sizeof v);
	int now=0;
	for (int i=1;i<=n;i++)
		if (!le[0][i*2-1]) v[i]=now++;
	for (int i=1;i<=n;i++)
		if (v[i]==-1)
			for (int j=1;j<i;j++)
				if (!le[j*2][i*2-1]) v[i]=v[j];
//	for (int i=1;i<=n;i++) printf("%d ",v[i]); puts("");
	ans=0;
	for (int i=1;i<=n;i++)
	{
		if (let[v[i]]!=a[i])
			ord[ans][0]=v[i],ord[ans++][1]=a[i],let[v[i]]=a[i];
		ord[ans][0]=-1; ord[ans++][1]=v[i];
	}
	printf("%d %d\n",ans,td+oo*n);
	for (int i=0;i<ans;i++)
		if (ord[i][0]==-1) printf("print(%c)\n",'a'+ord[i][1]);
		else printf("%c=%d\n",'a'+ord[i][0],ord[i][1]);
	return 0;
}
