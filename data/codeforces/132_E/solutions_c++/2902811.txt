#include<cstdio>
#include<cstring>
const int n=505,m=300005,One=100000;
int N,M,p,i,j,Num,Ans,St,Ed,Cnt;
int son[n],f[n],d[n],pre[n],road[n],A[n],ch[n];
int Q[1000005];
int ed[m],flow[m],cost[m],next[m];
int Get(int x)
{
	int s=0;
	for(;x;x>>=1) s+=x&1;
	return s;
}
void Addedge(int i,int j,int k,int l)
{
	ed[++p]=j,flow[p]=k,cost[p]=l,next[p]=son[i],son[i]=p;
	ed[++p]=i,flow[p]=0,cost[p]=-l,next[p]=son[j],son[j]=p;
}
bool Spfa()
{
	int l,r,i,j;
	memset(f,0,sizeof(f));
	memset(d,127,sizeof(d));
	Q[1]=St,d[St]=0,f[St]=1;
	for(l=0,r=1;l<r;)
	{
		i=Q[++l],f[i]=0;
		for(j=son[i];j;j=next[j])
			if(flow[j]>0&&d[i]+cost[j]<d[ed[j]])
			{
				d[ed[j]]=d[i]+cost[j],pre[ed[j]]=i,road[ed[j]]=j;
				if(!f[ed[j]]) f[ed[j]]=1,Q[++r]=ed[j];
			}
	}
	if(d[Ed]>=0) return 0;
	return 1;
}
void back()
{
	int i,Min=10000000;
	for(i=Ed;i!=St;i=pre[i])
		if(flow[road[i]]<Min) Min=flow[road[i]];
	Ans+=d[Ed]*Min;
	for(i=Ed;i!=St;i=pre[i])
		flow[road[i]]-=Min,flow[road[i]^1]+=Min;
}
int main()
{
	scanf("%d%d",&N,&M);
	for(i=1;i<=N;++i) scanf("%d",&A[i]);
	St=0,Ed=2*N+1,p=1;
	for(i=1;i<=N;++i)
	{
		Addedge(St,i,1,Get(A[i]));
		Addedge(i,i+N,1,-One);
		Addedge(i+N,Ed,1,0);
	}
	for(i=1;i<N;++i)
		for(j=i+1;j<=N;++j)
			if(A[i]==A[j]) Addedge(i+N,j,1,0);
			else Addedge(i+N,j,1,Get(A[j]));
	for(i=1;i<=M;++i) if(Spfa()) back();
	Ans+=N*One;
	for(i=1;i<=N;++i)
		for(j=son[i];j;j=next[j])
			if(flow[j]>0&&(j&1))
				if(ed[j]==St) Num+=2,ch[i]=Cnt++;
				else
				{
					if(A[ed[j]-N]==A[i]) ++Num;
					else Num+=2;
					ch[i]=ch[ed[j]-N];
				}
	printf("%d %d\n",Num,Ans);
	for(i=1;i<=N;++i)
	{
		for(j=son[i];j;j=next[j])
			if(flow[j]>0&&(j&1))
				if(ed[j]==St||A[ed[j]-N]!=A[i])
					printf("%c=%d\n",ch[i]+'a',A[i]);
		printf("print(%c)\n",ch[i]+'a');
	}
	return 0;
}
