#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>

#define assign(x) ((x)=++tot)

using std::min;
using std::max;

const int fin=0,maxn=300,maxt=maxn<<1,maxm=130000;
const int INF=1<<30;
int N,M,S,T,W,m=1,tot;
int a[maxn],b[maxn];
int fs[maxt],next[maxm],cap[maxm],cot[maxm],oth[maxm];
int q[maxt],dis[maxt],pren[maxt],pree[maxt];
bool v[maxt];
char bel[maxn],str[10000];

inline void add(int x,int y,int w,int f){
  //printf("%d %d %d %d\n",x,y,w,f);
  oth[++m]=y,cap[m]=w,cot[m]=f,next[m]=fs[x],fs[x]=m;
  oth[++m]=x,cap[m]=0,cot[m]=-f,next[m]=fs[y],fs[y]=m;
}

bool spfa(){
  int i,head,tail,u,t;
  for(i=1;i<=tot;++i)dis[i]=INF,v[i]=0;
  head=0,tail=1,q[1]=S,v[S]=1,dis[S]=0;
  while(head!=tail){
    if(++head,head==maxt)head=0;u=q[head],v[u]=0;
    for(i=fs[u];i;i=next[i])if(cap[i])
      if(t=oth[i],dis[t]>dis[u]+cot[i]){
        dis[t]=dis[u]+cot[i];
        pree[t]=i,pren[t]=u;
        if(!v[t]){
          v[t]=1;
          if(++tail,tail==maxt)tail=0;q[tail]=t;
        }
      }
  }
  return dis[T]!=INF;
}

void pre(){
  int i,t,j;
  scanf("%d%d",&N,&M);
  for(i=1;i<=N;++i)
    for(scanf("%d",a+i),t=a[i];t;t>>=1)
      b[i]+=t&1;
  W=2*N+1,S=W+1,tot=T=S+1;
  add(S,W,M,0);
  for(i=1;i<=N;++i){
    add(S,i,1,0),add(i+N,T,1,0),add(W,i+N,1,b[i]);
    for(j=i+1;j<=N;++j)add(i,j+N,1,a[i]==a[j]?0:b[j]);
  }
}

void sol(){
  int ans=0,i,j,row=0,len=0;
  char src='a';
  while(spfa()){
    ans+=dis[T];
    for(i=T;i!=S;i=pren[i])
      --cap[pree[i]],++cap[pree[i]^1];
  }
  for(j=1;j<=tot;++j)
    for(i=fs[j];i;i=next[i])
      if(!(i&1)&&!cap[i])pren[oth[i]]=j;
  for(i=1;i<=N;++i){
    j=pren[i+N];
    bel[i]=(j==W)?src++:bel[j];
    if(j==N+1||a[j]!=a[i])
      ++row,len+=sprintf(str+len,"%c=%d\n",bel[i],a[i]);
    ++row,len+=sprintf(str+len,"print(%c)\n",bel[i]);
  }
  printf("%d %d\n%s",row,ans,str);
}

int main(){
  if(fin){
    freopen("t.in","r",stdin);
    freopen("t.out","w",stdout);
  }
  pre();
  sol();
  return 0;
}
