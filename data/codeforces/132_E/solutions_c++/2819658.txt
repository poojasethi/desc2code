#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
using namespace std;
const int u=510,w=500000;
int ver[w],edge[w],cost[w],next[w],head[u],d[u],pre[u],a[u],v[u],p[u],b[u];
int n,m,tot,s,t,i,j,cnt,ans,x,y;

void add(int x,int y,int z,int w)
{
	ver[++tot]=y,edge[tot]=z,cost[tot]=w,next[tot]=head[x],head[x]=tot;
	ver[++tot]=x,edge[tot]=0,cost[tot]=-w,next[tot]=head[y],head[y]=tot;
}

bool spfa()
{
	memset(d,0x3f,sizeof(d));
	queue<int> q;
	q.push(s); d[s]=0; v[s]=1;
	while(q.size())
	{
		x=q.front(); q.pop(); v[x]=0;
		for(i=head[x];i;i=next[i])
			if(edge[i]&&d[y=ver[i]]>d[x]+cost[i])
			{
				d[y]=d[x]+cost[i];
				if(!v[y]) q.push(y),v[y]=1;
				pre[y]=i;
			}
	}
	if(d[t]==0x3f3f3f3f) return 0;
	return 1;
}

void update()
{
	for(x=t;x!=s;x=ver[pre[x]^1])
	{
		edge[pre[x]]--;
		edge[pre[x]^1]++;
	}
	ans+=d[t];
}

int main()
{
	cin>>n>>m;
	for(i=1;i<=n;i++)
	{
		scanf("%d",&a[i]);
		for(j=a[i];j;j-=j&-j) b[i]++;
	}
	s=n*2+1,t=s+1,tot=1;
	add(s,0,m,0);
	for(i=1;i<=n;i++) add(0,n+i,1,b[i]),add(s,i,1,0),add(n+i,t,1,0);
	for(i=1;i<n;i++)
		for(j=i+1;j<=n;j++)
			add(i,n+j,1,a[i]==a[j]?0:b[j]);
	while(spfa()) update();
	memset(v,0,sizeof(v));
	for(i=head[0];i;i=next[i])
		if(!(i&1)&&!edge[i]) v[ver[i]-n]=++cnt;
	for(i=1;i<=n;i++)
		for(j=head[i];j;j=next[j])
			if(!(j&1)&&!edge[j]) p[ver[j]-n]=i;
	for(i=1;i<=n;i++)
		cnt+=1+(p[i]&&a[i]!=a[p[i]]);
	cout<<cnt<<' '<<ans<<endl;
	for(i=1;i<=n;i++)
	{
		if(p[i]) v[i]=v[p[i]];
		if(a[i]!=a[p[i]]) printf("%c=%d\n",'a'+v[i]-1,a[i]);
		printf("print(%c)\n",'a'+v[i]-1);
	}
	return 0;
}