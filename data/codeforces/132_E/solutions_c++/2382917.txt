#include<cstdio>
#include<algorithm>
using namespace std;
const int inf = 1<< 28;
const int M = 556*556;
int tot = 1,n,m,S,T,mid,l,ans;
int lp[256],next[M],g[556],y1[M],v[M],u[556],lis[M],d[556];
int f[M],pr[556],c[256],b[256];

void ins(int x0, int y0, int fl, int cc) {
     next[++tot] = g[x0]; g[x0] = tot; y1[tot] = y0; f[tot] = fl; v[tot] = cc;
     next[++tot] = g[y0]; g[y0] = tot; y1[tot] = x0; f[tot] = 0; v[tot] = -cc;
}
void flash() {
     for (int i = T; i != S; i = y1[pr[i]^1])
         --f[pr[i]], ++f[pr[i]^1];
}
bool spfa() {
     fill(d, d + T + 1, inf);
     fill(u, u + T + 1, 0);
     d[S] = 0;
     lis[1] = S;
     u[S] = 1;
     for (int p1 = 1, q1 = 1; p1 <= q1; ++p1) {
         for (int p = g[lis[p1]]; p; p = next[p])
             if (f[p] > 0 && d[y1[p]] > d[lis[p1]]+ v[p]) {
                d[y1[p]] = d[lis[p1]] + v[p];
                pr[y1[p]] = p;
                if (!u[y1[p]]) {
                   lis[++q1] = y1[p];
                   u[y1[p]] = 1;
                }
             }
         u[lis[p1]] = 0;
     }
     return d[T] < inf;
}
int main() {
    scanf("%d%d", &n, &m);
    for (int i = 1; i <= n; ++i) {
        scanf("%d", c + i);
        for (int t = c[i]; t; t >>= 1) b[i] += t & 1;
    }
    mid = n+n+1; S = mid + 1; T = S + 1;
    ins(mid, T, m, 0);
    for (int i = 1; i <= n; ++i) ins(i, mid, 1, b[i]), ins(i + n, T, 1, 0), ins(S, i, 1, 0);
    for (int i = 1; i <= n; ++i)
        for (int j = 1; j < i; ++j) ins(i, j + n, 1, (c[i]!= c[j])*b[i]);
    
    while (spfa()) ans += d[T],flash();
    
    fill(u, u + T + 1, 0);
    for (int k,i = 1, t = 0; i <= n; ++i) {
        for (int p = g[i]; p; p = next[p]) if (f[p] == 0) {k = y1[p]; break;}
        if (k == mid) u[i] = ++t, ++l; else u[i] = u[k-n], l += (c[i]!= c[k-n]), lp[i] = c[i] == c[k - n];
    }
    printf("%d %d\n", l+n, ans);
    for (int i = 1; i <= n; ++i) {
        if (!lp[i]) printf("%c=%d\n", 'a'+u[i]-1, c[i]);
        printf("print(%c)\n", 'a'+u[i]-1);
    }
    return 0;
}
