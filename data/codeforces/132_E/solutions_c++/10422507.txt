#include <map>
#include <cmath>
#include <cstdio>
#include <vector>
#include <queue>
#include <cstring>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;

#define INF (1<<30)
#define ll long long
#define sz(x) ((int) (x.size()))
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define d(x) cout << x << endl
#define REP(i,x) for (int i = 0; i < (int)(x); ++i)
#define rep(i,a,b) for (int i = (int) a; i <= (int) b; ++i)
#define dep(i,a,b) for (int i = (int) a; i >= (int) b; --i)
#define foreach(it,x) for (typeof((x).begin()) it=(x).begin();it!=(x).end();++it)
#define PII pair<int,int>

const int inf=100000,nn=200010;
int other[nn],next[nn],g[nn],va[nn],cost[nn],d[nn],ft[nn],fe[nn],a[nn],v[nn];
char ch[nn];
int es,S,T,n,m,res;

void insert(int x,int y,int z,int w){
	other[++es]=y;next[es]=g[x];g[x]=es;va[es]=z;cost[es]=w;
	other[++es]=x;next[es]=g[y];g[y]=es;va[es]=0;cost[es]=-w;
}
bool spfa(){
	queue<int> Q;
	rep(i,S,T) d[i]=inf,v[i]=0;d[S]=0;Q.push(S);v[S]=1;
	while (Q.size()){
		int x=Q.front();Q.pop();v[x]=0;
		for (int p=g[x];p;p=next[p]) if (va[p]>0){
			int j=other[p];
			if (d[j]>d[x]+cost[p]){
				d[j]=d[x]+cost[p];
				fe[j]=p;ft[j]=x;
				if (!v[j]) v[j]=1,Q.push(j);
			}
		}
	}
	if (d[T]>=0) return 0;
	int Min=inf;
	for (int i=T;i!=S;i=ft[i])
		Min=min(Min,va[fe[i]]);
	for (int i=T;i!=S;i=ft[i]){
		va[fe[i]]-=Min;
		va[fe[i]^1]+=Min;
	}
	res+=Min*d[T];
	return 1;
}
int count(int x){
	return (x&1)+(x?count(x/2):0);
}
int G(int x){
	if (x>n) x-=n;
	return x;
}
int main(){
//	freopen("1.in","r",stdin);
	scanf("%d%d",&n,&m);
	rep(i,1,n) scanf("%d",&a[i]);
	S=0;T=2*n+1;es=1;
	rep(i,1,n) insert(S,i,1,count(a[i])),insert(i+n,T,1,0),insert(i,i+n,1,-inf);
	rep(i,1,n) rep(j,i+1,n)
		if (a[i]==a[j]) insert(i+n,j,1,0); else insert(i+n,j,1,count(a[j]));
	rep(i,1,m) if (!spfa()) break;
	res+=n*inf;
	int cnt=0;
	rep(i,1,n){
		cnt++;
		for (int p=g[i];p;p=next[p]) if (va[p]>0&&a[G(other[p])]!=a[i]&&p%2==1) cnt++;
	}
	printf("%d %d\n",cnt,res);
	char cur='a';
	rep(i,1,n){
		for (int p=g[i];p;p=next[p]) if (va[p]>0&&p%2==1){
			if (!G(other[p])) ch[i]=cur++; else ch[i]=ch[G(other[p])];
			if (a[i]!=a[G(other[p])]) printf("%c=%d\n",ch[i],a[i]);
		}
		printf("print(%c)\n",ch[i]);
	}
}