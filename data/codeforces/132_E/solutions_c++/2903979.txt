#include <cstring>
#include <cstdio>
using namespace std;

const int maxinf=1000000000;
const int inf=100000, maxn=1000000;

int next[maxn], son[maxn], point[maxn], cap[maxn], cost[maxn], last[maxn];
int inq[maxn], dist[maxn], a[maxn], q[maxn], lastedge[maxn], rk[maxn];
int tot, total, mincost, S, T, n, m, num;

void addedge(int x, int y, int ca, int co)
{
	next[++tot]=son[x]; son[x]=tot; point[tot]=y;
	cap[tot]=ca; cost[tot]=co;
}
void add(int x, int y, int ca, int co){addedge(x,y,ca,co),addedge(y,x,0,-co);}

int calc(int x)
{
	int res=0;
	for (;x; x>>=1) if (x&1) res++;
	return res;
}

bool spfa()
{
	for (int i=S; i<=T; i++) dist[i]=maxinf, inq[i]=0;
	dist[S]=0; inq[S]=1; int h=0, t=1, x,y; q[1]=S;
	for (;h<t;)
	{
		x=q[++h]; inq[x]=0;
		for (int p=son[x]; p; p=next[p])
		{
			y=point[p];
			if (cap[p]>0 && dist[x]+cost[p]<dist[y])
			{
				dist[y]=dist[x]+cost[p]; lastedge[y]=p; last[y]=x;
				if (!inq[y]) q[++t]=y, inq[y]=1;
			}
		}
	}
	
	return dist[T]<0; 
}

void pushflow()
{
	mincost+=dist[T];
	for (int p=T; p!=S; p=last[p])
	{
		int x=lastedge[p]; cap[x]--; cap[x^1]++;
	}
}

int main()
{
	//freopen("a.in","r",stdin);
	scanf("%d%d",&n,&m);
	for (int i=1; i<=n; i++) scanf("%d",&a[i]);
	
	tot=1;
	S=0, T=n+n+1;
	for (int i=1; i<=n; i++)
	{
		add(S,i,1,calc(a[i]));
		add(i,i+n,1,-inf);
		add(i+n,T,1,0);
	}
	for (int i=1; i<=n; i++)
	for (int j=i+1; j<=n; j++)
		if (a[i]==a[j]) add(i+n,j,1,0); else add(i+n,j,1,calc(a[j]));
	for (int i=1; i<=m; i++) if (spfa()) pushflow();
	
	for (int i=1; i<=n; i++)
	for (int p=son[i]; p; p=next[p])
	{
		if (cap[p]>0 && (p&1))
		{
			if (point[p]==S) rk[i]=++num, total+=2;
			else
			{
				rk[i]=rk[point[p]-n]; total+=2; last[i]=point[p]-n;
				if (a[i]==a[point[p]-n]) total--;
			}
		}
	}
	
	a[0]=-1;
	printf("%d %d\n",total,mincost+n*inf);
	for (int i=1; i<=n; i++)
	{
		if (a[last[i]]!=a[i]) 
			printf("%c=%d\n",rk[i]+'a'-1, a[i]), printf("print(%c)\n",rk[i]+'a'-1);
		else
			printf("print(%c)\n",rk[i]+'a'-1);
	}
	//for (;;);
}
