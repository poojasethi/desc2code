#include <iostream>
#include <vector>
#include <memory.h>

using namespace std;


int d[100001][3];

bool g(int a, int b, int c) {
  if (a == 0)
    return b == 0 && c == 0;
  if (b == 0)
    return c == 0;
  return !(a*c - b*b);
}

int main() {
  int n;
  cin >> n;
  vector<int> v(n);

  for (int i=0; i < n; i++)
    cin >> v[i];

  memset(d, 0, sizeof(d));

  d[0][0] = true;
  d[1][0] = v[0] != 0 || v[1] == 0;
  d[2][0] = g(v[0], v[1], v[2]);
  d[2][1] = v[0] != 0 || v[2] == 0; //skip 1
  d[2][2] = v[1] != 0 || v[2] == 0; //skip 0
  
  for (int i=3; i < v.size(); i++) {
    d[i][0] = d[i-1][0] && g(v[i-2], v[i-1], v[i]);
    d[i][1] = d[i-2][0] && g(v[i-3], v[i-2], v[i]);
    d[i][2] = d[i-1][1] && g(v[i-3], v[i-1], v[i]) || d[i-1][2] && g(v[i-2], v[i-1], v[i]);
  }

  if (d[n-1][0])
    cout << "0" << endl;
  else if (d[n-1][1] || d[n-1][2] || d[n-2][0])
    cout << "1" << endl;
  else
    cout << "2" << endl;
}
