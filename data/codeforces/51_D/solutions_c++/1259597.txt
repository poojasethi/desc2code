#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;

int a[100005];
int b[100005];
int n;
bool solve1(int m) {
	for(int i=1;i<m-1;i++)
		if(b[i]*1LL*b[i]!=b[i-1]*1LL*b[i+1]) {
			return false;
		}
	return true;
}

void solve() {
	//check if r=0
	if(n<=2 && a[0]!=0) { puts("0"); return; }
	int nzc=0;
	for(int i=1;i<n;i++) if(a[i]!=0) ++nzc;
	if(!nzc) { puts("0"); return; }
	if(nzc==1) { puts("1"); return; }

	int zc=0;
	for(int i=0;i<n;i++) if(a[i]==0) ++zc;
	if(zc>1) { puts("2"); return; }
	if(zc==1) {
		int m=0;
		for(int i=0;i<n;i++) {
			if(a[i]!=0) { b[m++] = a[i]; }
		}
		puts(solve1(m)? "1":"2");
		return ;
	}
	int m=0;
	for(int i=0;i<n;i++) b[m++]=a[i];
	if(solve1(m)) {
		puts("0"); return;
	}
	m=0;
	for(int i=1;i<n;i++) b[m++]=a[i];
	if(solve1(m)) { puts("1"); return; }
	m=0;
	for(int i=0;i<n;i++) if(i!=1) b[m++]=a[i];
	if(solve1(m)) { puts("1"); return; }
	m=0;
	
	b[m++]=a[0]; b[m++]=a[1];
	for(int i=2;i<n;i++) {
		b[m++]=a[i];
		if(b[m-2]*1LL*b[m-2]!=b[m-1]*1LL*b[m-3]) --m;
	}
	if(m>=n-1) puts("1");
	else puts("2");
}
int main(void) {
	scanf("%d", &n);
	for(int i=0;i<n;i++) scanf("%d", &a[i]);
	solve();
	return 0;
}

