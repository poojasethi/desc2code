#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cmath>
using namespace std;

const int MAXN = 210000;
const double eps = 1e-6;

int n, m;
int a[MAXN], pos, b[MAXN];

int check(int a[], int n, double d) {
	int last = a[1];
	int fail = 0;
	for(int i = 2; i <= n; i++) {
		if (fabs(last * d - a[i]) < eps)
			last = a[i];
		else
			fail++;
	}
	return fail;
}

int pd(int a[], int n) {
	int res = 0;
	for(int i = 1; i <= n; i++)
		if (a[i] != 0)
			res++;
	return res;
}

int main() {
	scanf("%d", &n);
	int flag = 0;
	for(int i = 1; i <= n; i++) {
		scanf("%d", &a[i]);
	}
	if (n == 1) {
		printf("0\n");
		return 0;
	}
	int tmp = check(a, n, a[1] == 0 ? 0 : (double)a[2] / a[1]);
	if (tmp == 0) {
		printf("0\n");
		return 0;
	}
	if (tmp == 1) {
		printf("1\n");
		return 0;
	}
	tmp = check(a, n, a[1] == 0 ? 0 : (double)a[3] / a[1]);
	if (tmp == 0) {
		printf("0\n");
		return 0;
	}
	if (tmp == 1) {
		printf("1\n");
		return 0;
	}
	for(int i = 1; i < n; i++)
		a[i] = a[i + 1];
	n--;
	tmp = check(a, n, a[1] == 0 ? 0 : (double)a[2] / a[1]);
	if (tmp == 0) {
		printf("1\n");
		return 0;
	}
	printf("2\n");
	return 0;	
}

 		  		  			 			   		   	