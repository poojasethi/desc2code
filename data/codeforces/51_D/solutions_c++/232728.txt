#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>

using namespace std;

typedef long double real;

const int MaxN = 100005, MaxC = 0x3F3F3F3F, NA = -1;
const real eps = 1E-9;

int a [MaxN];
int n;

int check (int first, int second)
{
 int i, res;
 res = 0;
 if (a[first] == 0)
 {
  for (i = second; i < n; i++)
   if (a[i] != 0)
    res++;
  return res;
 }
 real d;
 int cur;
 d = a[second] / (real) a[first];
 cur = a[second];
 for (i = second + 1; i < n; i++)
 {
  if (abs (cur * d - a[i]) < eps)
   cur = a[i];
  else
   res++;
 }
 return res;
}

int main (void)
{
 int i;
 while (scanf (" %d", &n) != EOF)
 {
  for (i = 0; i < n; i++)
   scanf (" %d", &a[i]);
  if (n == 1)
   printf ("0\n");
  else if ((i = check (0, 1)) <= 1)
   printf ("%d\n", i);
  else if (n >= 3 && (i = check (0, 2)) == 0)
   printf ("%d\n", 1);
  else if (n >= 3 && (i = check (1, 2)) == 0)
   printf ("%d\n", 1);
  else
   printf ("%d\n", 2);
 }
 return 0;
}
