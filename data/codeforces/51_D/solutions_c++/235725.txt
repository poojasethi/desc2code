#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <vector>
#include <cmath>
using namespace std;

#define EPS 1E-9

int H[100100];
int n;

bool geo(int f, int s) {

	double c = H[f];
	if(c == 0 ) {
		bool valid = H[s] == 0;
		for(int i=s+1 ; i<n && valid; i++) valid = valid && H[i]==0;
		return valid;
	}
	bool valid = true;
	double b = H[s]/c;
	double p = b*b;
	for(int i=s+1 ; i<n && valid ; i++) {
		valid = valid && fabs(H[i]-(c*p)) < EPS;
		p *= b;
	}
	
	return valid;
}

int main() {

	scanf("%d", &n);
	for(int i=0 ; i<n ; i++) {
		scanf("%d", H+i);
	}

	if(n == 1) {
		cout << 0 << endl;
		return 0;
	}

	if(n == 2) {
		if(H[0]==0) {
			cout << (H[1]==0 ? 0 : 1) << endl;
			return 0;
		}
		cout << 0 << endl;
		return 0;
	}
	//n>3
	if(geo(0, 1)) {
		cout << 0 << endl;
		return 0;
	}
	if(n == 3) {
		cout << 1 << endl;
		return 0;
	}

	if(geo(1, 2) || geo(0, 2)) {
		cout << 1 << endl;
		return 0;
	}

	double c = H[0];
	if(c == 0 ) {
		int cnt = 0;
		for(int i=1 ; i<n ; i++) cnt += H[i]!=0;
		if(cnt == 1) cout << 1 << endl;
		else cout << 2 << endl;
		return 0;
	}
	int cnt = 0;
	double b = H[1]/c;
	double p = b*b;
	for(int i=2 ; i<n ; i++) {
		if (! (fabs(H[i]-(c*p)) < EPS) )
			cnt ++;
		else
			p *= b;
	}

	if(cnt <= 1) cout << 1 << endl;
	else cout << 2 << endl;

	return 0;
}
