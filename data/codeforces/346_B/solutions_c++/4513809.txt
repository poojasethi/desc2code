#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <set>
using namespace std;
#define REP(i,n) for(int i=0;i<(n);i++)

char s1[101];
char s2[101];
char vi[101];

int to[101][26];
int p[101];

int dp[101][101][101];

int n;

int solve(int i, int j, int l)
{
	if(dp[i][j][l]==-1)
	{

		dp[i][j][l]=-10000;
		if(l!=n)
		{
			if(!s1[i] || !s2[j])
				dp[i][j][l]=0;
			else
			{
				dp[i][j][l]=max(solve(i+1,j,l),solve(i,j+1,l));
				if(s1[i]==s2[j])
					dp[i][j][l]=max(solve(i+1,j+1,to[l][s1[i]-'A'])+1,dp[i][j][l]);
			}
		}
	}
	return dp[i][j][l];
}

int main()
{
	scanf("%s%s%s",s1,s2,vi);
	n=strlen(vi);
	for(int i=1;i<n;i++)
	{
		int j=p[i-1];
		while(j>0 && vi[i]!=vi[j])
			j=p[j-1];
		if(vi[i]==vi[j])
			p[i]=j+1;
		else
			p[i]=0;
	}
	to[0][vi[0]-'A']=1;
	for(int i=1;i<=n;i++)
		for(int j=0;j<26;j++)
		{
			if(vi[i]==j+'A')
				to[i][j]=i+1;
			else
				to[i][j]=to[p[i-1]][j];
		}
	memset(dp,-1,sizeof(dp));
	if(solve(0,0,0)<=0)
		printf("0\n");
	else
	{
		int c[3]={0,0,0};
		while(s1[c[0]] && s2[c[1]])
		{
			if(solve(c[0],c[1],c[2])==solve(c[0]+1,c[1],c[2]))
				c[0]++;
			else if(solve(c[0],c[1],c[2])==solve(c[0],c[1]+1,c[2]))
				c[1]++;
			else
			{
				putchar(s1[c[0]]);
				c[2]=to[c[2]][s1[c[0]]-'A'];
				c[0]++;
				c[1]++;
			}
		}
		puts("");
	}
}
