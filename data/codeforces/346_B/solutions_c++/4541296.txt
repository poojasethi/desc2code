#include <cstdio>
#include <algorithm>
using namespace std;

char s1[128], s2[128], s3[128];

int f[128];
int table[101][101][101];


int tran(int a, int b, int c)
{
    while(c && s3[c] != s1[a])
        c = f[c - 1] + 1;
    return c + (s3[c] == s1[a]);
}

int go(int a, int b, int c)
{
    if(!s3[c])
        return -1;
    else if(!s1[a] || !s2[b])
        return 0;
    else if(table[a][b][c])
        return table[a][b][c] - 2;
    else
    {
        int& v = table[a][b][c];
        v = 0;
        v = max(go(a + 1, b, c), go(a, b + 1, c));
        if(s1[a] == s2[b])
            v = max(v, go(a + 1, b + 1, tran(a, b, c)) + 1);
        v += 2;
        return v - 2;
    }
}

bool go2(int a, int b, int c)
{
    if(go(a, b, c))
    {
        if(go(a + 1, b, c) == go(a, b, c))
            return go2(a + 1, b, c);
        else if(go(a, b + 1, c) == go(a, b, c))
            return go2(a, b + 1, c);
        else 
        {
            printf("%c", s1[a]), go2(a + 1, b + 1, tran(a, b, c));
            return true;
        }
    }
    return false;
}


int main()
{
    scanf("%s%s%s", s1, s2, s3);
    
    f[0] = -1;
    for(int i = 1; s3[i]; i++)
    {
        int idx = f[i - 1];
        while(idx >= 0 && s3[idx + 1] != s3[i])
            idx = f[idx];
        if(s3[idx + 1] == s3[i])
            f[i] = idx + 1;
        else
            f[i] = -1;
    }

    if(!go2(0, 0, 0))printf("0");
    printf("\n");

    return 0;
}
