#include<bits/stdc++.h>

#define FOR(a,b,c) for(int a=b;a<=c;a++)
#define ROF(a,b,c) for(int a=b;a>=c;a--)
#define pb push_back
#define mp make_pair
#define inf 2000000000
#define f first
#define s second
#define sqr(a) ((a)*(a))
#define ll long long
#define pii pair<int,int>
#define pdd pair<double,double>
using namespace std;

int N,M;
int way[105][105][105];
int dn[205][205],dp[105][105][105];
string A,B,vir;
int find(int n,int ch){
	if(dn[n][ch]!=-1) return dn[n][ch];
	ROF(i,n+1,1)
	{
		bool flag = 1;
		FOR(j,1,i-1)
			if(vir[j]!=vir[n-i+j+1]) {flag = 0; break;}
		if(flag && vir[i] == ch)
			return dn[n][ch] = i;
	}
	return dn[n][ch] = 0;
}
int F(int x,int y,int P){
	int &ret = dp[x][y][P] ;
	if(ret!=-1) return ret;
	if(P == vir.size()-1) return -inf;
	if(x == A.size() || y == B.size()) return 0;
	
	ret = 0;
	if(F(x+1,y,P) > ret) ret = F(x+1,y,P) , way[x][y][P] = 1;
	if(F(x,y+1,P) > ret) ret = F(x,y+1,P) , way[x][y][P] = 2;
	if(A[x] == B[y] && F(x+1,y+1,find(P,A[x]))+1 > ret )
	{
		ret = F(x+1,y+1,find(P,A[x]))+1;
		way[x][y][P] = 3;
	}
	return ret ;
}
void printway(int a,int b,int c){
	if(way[a][b][c]==1) printway(a+1,b,c);
	if(way[a][b][c]==2) printway(a,b+1,c);
	if(way[a][b][c]==3) cout << A[a]  , printway(a+1,b+1,find(c,A[a]));
}
int main()
{
	cin >> A >> B >> vir;
	memset(dp,-1,sizeof dp);
	memset(dn,-1,sizeof dn);
	A = '0' + A;
	B = '0' + B;
	vir = '0' + vir;
	if(F(1,1,0) <= 0){
		cout << 0 << endl;
		return 0; 
	}
	printway(1,1,0);
	return 0;
}
