#include <bits/stdc++.h>
#define fr(i,a,b) for(int i = (a); i < (b); ++i)

using namespace std;

const int inf = 1<<30;

string P;

int b[100010], m;

void prep() {
	int i=0,j=-1; b[0]=-1;
	while(i<m) {
		while(j>=0&&P[i]!=P[j])j=b[j];
		++i;++j;
		b[i]=j;
	}
}

int next(int j, char c) {
    while(j >= 0 && c != P[j]) {
        j=b[j];
    }
	++j;
	return j;
}

string S1, S2;

int memo[111][111][111];

int solve(int a, int b, int c) {
    if(c == m) return -inf;
    if(a == S1.size()) return 0;
    if(b == S2.size()) return 0;
    int &ret = memo[a][b][c];
    if(~ret) return ret;
    ret = -inf;
    if(S1[a] == S2[b]) ret = 1 + solve(a+1, b+1, next(c, S1[a]));
    ret = max(ret, solve(a+1, b, c));
    ret = max(ret, solve(a, b+1, c));
    return ret;
}

void print(int a, int b, int c) {
    if(a == S1.size()) return;
    if(b == S2.size()) return;
    bool cas1 = solve(a,b,c) == (1 + solve(a+1,b+1, next(c, S1[a])));
    if(cas1 && (S1[a] == S2[b])) {
        cout << S1[a];
        print(a+1,b+1, next(c, S1[a]));
    } else {
        int x = solve(a+1, b, c);
        int y = solve(a, b+1, c);
        if(x >= y) print(a+1,b,c);
        else print(a,b+1,c);
    }
}

int main() {
    cin >> S1 >> S2 >> P;
    m = P.size();
    prep();
    memset(memo,-1,sizeof memo);
    int length = solve(0,0,0);
    if(!length) cout << "0" << endl;
    else {
        print(0,0,0);
        cout << endl;
    }
    return 0;
}