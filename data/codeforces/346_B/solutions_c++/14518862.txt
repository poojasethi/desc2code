#include <bits/stdc++.h>
using namespace std;
int dp[101][101][101],n,m,lim;
int mask[101][101][101];
string a,b,v;
int sol(int x,int y,int z){
	if(z==lim)
		return -1e9;
	if(x>=n || y>=m)return 0;
	int &ret= dp[x][y][z],i;
	if(ret!=-1)return ret;
	ret=0;
	if(a[x]==b[y] ){
		int t= z;
		if(a[x]==v[z])++t;
		else{
			string s= string(v.begin(),v.begin()+t)+a[x];
			t=0;
			for(i=1;i<s.size();++i)
				if(s[i]==v[0]){
					int j=0;
					while(i+j<s.size() && s[i+j]==v[j])
						++j;
					if(i+j==s.size()){
						t=s.size()-i;
						break;
					}
				}
		}
		mask[x][y][z]=t;
		ret=1+sol(x+1,y+1,t);
	}
	return ret=max(ret,max(sol(x+1,y,z),sol(x,y+1,z)));
}
int main(){
	cin>>a>>b>>v;n=a.size(),m=b.size(),lim= v.size();
	memset(dp,-1,sizeof(dp));
	int ret= sol(0,0,0);
	if(ret<=0)
		cout<<0<<endl;
	else{
		int z= 0,x,y,l=0,r=0;
		while(ret){
			bool ok=false;
			for(x=l;x<n;++x){
				for(y=r;y<m;++y){
					if( (ret== sol(x,y,z) )&& (a[x]==b[y]) && (1+sol(x+1,y+1,mask[x][y][z]) == ret) ){
						--ret;
						putchar(a[x]);
						z= mask[x][y][z];
						l=x+1,r=y+1;
						ok=true;break;
					}
				}
				if(ok)break;
			}
		}
		putchar('\n');
	}
}
