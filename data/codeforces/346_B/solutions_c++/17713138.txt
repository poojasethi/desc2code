#include <iostream>
#include <vector>
#include <string>

using namespace std;

#define PB push_back
#define MAXN 110

vector<int> back;

string s1, s2, virus;

string maior(string a, string b){ return a.size()>b.size()?a:b; }

string dp[MAXN][MAXN][MAXN];

void preprocess(){
	
	back.PB(-1);
	
	int i=0, j=-1;
	
	while(i<virus.size()){
		
		while(j>=0 and virus[i]!=virus[j]) j=back[j];
		
		i++, j++;
		
		back.PB(j);
	}
}

string solve(int i=0, int j=0, int b=0){
	
	if(dp[i][j][b]!="-1") return dp[i][j][b];
	
	if(i>=s1.size() or j>=s2.size()) return dp[i][j][b]="";
	
	string n_pega=maior(solve(i+1,j,b), solve(i,j+1,b));
	
	if(s1[i]!=s2[j]) return dp[i][j][b]=n_pega;
	
	int b_=b;
	
	while(b>=0 and s1[i]!=virus[b]) b=back[b];
	
	b++;
	
	if(b==virus.size()) return dp[i][j][b_]=n_pega;
	
	return dp[i][j][b_]=maior(n_pega, s1[i]+solve(i+1,j+1,b));
}

int main(){
	
	ios_base::sync_with_stdio(false);
	
	cin >> s1 >> s2 >> virus;
	
	preprocess();
	
	for(int i=0; i<MAXN; i++)
		for(int j=0; j<MAXN; j++)
			for(int k=0; k<MAXN; k++)
				dp[i][j][k]="-1";
	
	cout << string(solve().size()?solve():"0") << "\n";
	
	return 0;
}