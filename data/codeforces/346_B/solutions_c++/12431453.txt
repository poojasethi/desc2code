#include <bits/stdc++.h>
using namespace std;
int longestPrefix[200005] ;
string a , b ,t ;
int W ;
int dp[101][101][101] ;
void lps(){
    for(int i = 1 , k = 0 ;i < W ; i++){
        while(k > 0 && t[i] != t[k]){
            k = longestPrefix[k-1] ;
        }
        if(t[i] == t[k]){
            longestPrefix[i] = ++k ;
        }
        else {
            longestPrefix[i] = k ;
        }
    }
}
int next(int k,char z){
    while(k > 0 && t[k] != z)k = longestPrefix[k-1] ;
    if(t[k] == z)k++ ;
    return k ;
}
int solve(int x , int y , int k){
    if(k == W)return -1000 ;
    if(!a[x] || !b[y])return 0 ;
    if(dp[x][y][k] != -1)return dp[x][y][k] ;
    int z = 0 ;
    z = max(solve(x+1,y,k),solve(x,y+1,k)) ;
    if(a[x] == b[y]){
        z = max(z,solve(x+1,y+1,next(k,a[x]))+1) ;
    }
    return dp[x][y][k] = z ;
}
void print(int x , int y , int k){
    if(!a[x] || !b[y])return ;
    if(solve(x+1,y,k) == dp[x][y][k])print(x+1,y,k) ;
    else if(solve(x,y+1,k) == dp[x][y][k])print(x,y+1,k) ;
    else {
        cout << a[x] ;
        print(x+1,y+1,next(k,a[x])) ;
    }
}
int main() {
    cin.tie(0) ;
    cin >> a >> b >> t ;
    W = t.size() ;
    lps() ;
    memset(dp,-1,sizeof(dp)) ;
    if(!solve(0,0,0))return cout << 0 , 0 ;
    print(0,0,0) ;
    return 0;
}