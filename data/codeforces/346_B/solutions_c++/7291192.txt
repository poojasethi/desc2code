#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int maxn = 110;
int d[maxn][maxn][maxn],p[maxn];
char a[maxn],b[maxn],c[maxn];
int len1,len2,len3;

void getp(){
    p[0] = p[1] = 0;
    int len = strlen(c);
    for(int i = 1;i < len;i++){
        int j = p[i];
        while(j && c[i] != c[j])    j = p[j];
        p[i+1] = c[i]==c[j]? j+1 : 0;
    }
}

int dp(int i,int j,int k){
    int &ans = d[i][j][k];
    if(ans != -1)   return ans;
    if(i >= len1 || j >= len2)    return ans = 0;
    ans = max(dp(i+1,j,k),dp(i,j+1,k));
    if(a[i] == b[j]){
        while(k > 0 && c[k] != a[i])    k = p[k];
        if(c[k] == a[i])    k++;
        if(k < len3)    ans = max(ans,dp(i+1,j+1,k)+1);
    }
    return ans;
}

void print(int i,int j,int k){
    if(i >= len1 || j >= len2)   return;
    if(dp(i,j,k) == dp(i+1,j,k))    print(i+1,j,k);
    else if(dp(i,j,k) == dp(i,j+1,k))   print(i,j+1,k);
    else if(a[i] == b[j]){
        while(k > 0 && c[k] != a[i])    k = p[k];
        if(c[k] == a[i])    k++;
        if(k < len3)    putchar(a[i]);
        print(i+1,j+1,k);
    }
}

int main(){
    scanf("%s %s %s",a,b,c);
    len1 = strlen(a),len2 = strlen(b),len3 = strlen(c);
    getp();
    memset(d,-1,sizeof(d));
    if(dp(0,0,0))   print(0,0,0);
    else    puts("0");
    return 0;
}
