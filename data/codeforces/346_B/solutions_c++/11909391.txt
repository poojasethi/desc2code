#include <bits/stdc++.h>

using namespace std;

const int maxn=111;
const int inf=1e9;

string s,t,v;
int sz_s,sz_t,sz_v,lpref[maxn][26];
int dp[maxn][maxn][maxn];
int par[maxn][maxn][maxn];
bool vis[maxn][maxn][maxn];

int solve(int a,int b,int c)
{
  int &res=dp[a][b][c];
  if(vis[a][b][c])
    return res;
  else if(c==sz_v)
    res=-inf;
  else if(a==sz_s||b==sz_t)
    res=0;
  else
    {
      int &baba=par[a][b][c];
      int ao=solve(a+1,b,c);
      int at=solve(a,b+1,c);
      if(ao>at)
	res=ao,baba=0;
      else
	res=at,baba=1;
      if(s[a]==t[b]&&res<solve(a+1,b+1,lpref[c][s[a]-'A'])+1)
	{
	  res=solve(a+1,b+1,lpref[c][s[a]-'A'])+1;
	  baba=2;
	}
    }
  vis[a][b][c]=true;
  return res;
}

int main()
{
  ios::sync_with_stdio(0);
  cin.tie(0);
  cin>>s>>t>>v;
  sz_s=s.size(),sz_t=t.size(),sz_v=v.size();
  for(int i=0;i<sz_v;++i)
    for(int j=0;j<26;++j)
      {
	string cur=v.substr(0,i)+char(j+'A');
	for(int k=0;k<i+1;++k)
	  if(cur.substr(k,i+1-k)==v.substr(0,i+1-k))
	    {
	      lpref[i][j]=i+1-k;
	      break;
	    }
      }
  int sz=solve(0,0,0);
  if(sz<=0)
    {
      cout<<"0\n";
      return 0;
    }
  int a=0,b=0,c=0;
  string ans;
  while(sz)
    {
      int baba=par[a][b][c];
      if(baba==0)
	a++;
      else if(baba==1)
	b++;
      else
	{
	  ans.push_back(s[a]);
	  sz--;
	  c=lpref[c][s[a]-'A'];
	  a++,b++;
	}
    }
  cout<<ans<<'\n';
  return 0;
}
