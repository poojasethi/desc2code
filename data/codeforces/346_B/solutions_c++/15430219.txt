#include<bits/stdc++.h>

using namespace std;

#define LL long long

int dp[100][100][101];
int f[101];
string s1,s2,v;

int gp(int i, char c)
{
    while(i && v[i]!=c) i = f[i-1];
    return i + ( c==v[i] );
}

int getlcs(int i, int j, int s)
{
    if(s==v.size())
        return INT_MIN;

    if(i==s1.size() || j==s2.size())
        return 0;

    if(dp[i][j][s]!=-1)
        return dp[i][j][s];

    dp[i][j][s] = max(getlcs(i+1,j,s),getlcs(i,j+1,s));
    if(s1[i]==s2[j])
        dp[i][j][s] = max(dp[i][j][s],1+getlcs(i+1,j+1,gp(s,s1[i])));

    return dp[i][j][s];
}

void buildlcs(int i, int j, int s)
{
    if(i==s1.size() || j==s2.size())
        return;
    if(dp[i][j][s]==getlcs(i+1,j,s))
        buildlcs(i+1,j,s);
    else if(dp[i][j][s]==getlcs(i,j+1,s))
        buildlcs(i,j+1,s);
    else
    {
        cout<<s1[i];
        buildlcs(i+1,j+1,gp(s,s1[i]));
    }
}

int main()
{
    int i,j;
    cin>>s1>>s2>>v;

    memset(dp,-1,sizeof(dp));
    j = 0;
    for(i=1;i<v.size();i++)
    {
        while(j && v[j]!=v[i])  j = f[j-1];
        if(v[i]==v[j])  j++;
        f[i] = j;
    }

    int ans = getlcs(0,0,0);

    if(!ans)
        cout<<0;
    else
        buildlcs(0,0,0);
    return 0;
}
