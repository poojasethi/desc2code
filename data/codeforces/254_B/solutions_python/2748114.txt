bpath = ''#'/home/lab/Workspace/'

def solve():
  months = (31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
  offset = [100]
  tasks = []
  for days in months:
    offset.append(offset[-1] + days)
  fin = open(bpath + 'input.txt', 'r')
  fin.readline()
  for line in fin:
    m, d, p, t = [int(x) for x in line.split()]
    tasks.append((offset[m - 1] + d - t, offset[m - 1] + d, p))
  fin.close()

  coming = sorted(tasks, key=lambda x: x[0], reverse=True)
  finish = sorted(tasks, key=lambda x: x[1], reverse=True)

  current = 0
  ans = -1
  for day in range(offset[-1]):
    while len(finish) > 0 and finish[-1][1] == day:
      current -= finish[-1][2]
      finish.pop()
    while len(coming) > 0 and coming[-1][0] == day:
      current += coming[-1][2]
      coming.pop()
    if ans < current:
      ans = current

  print ans
  fout = open(bpath + 'output.txt', 'w')
  fout.write('%d\n' % ans)
  fout.close()
        
solve()
