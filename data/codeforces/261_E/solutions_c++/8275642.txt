#include <cstdio>
#include <algorithm>

using namespace std;

const int SZ = 3000030;

int L, R, p, ans;
int flag[111], pr[111], pn;
int sv[SZ], f[SZ], can[SZ], svt;

void dfs(int i, int a) {
	if (i > pn) {
		sv[++svt] = a;
		return;
	}
	if (a <= R / pr[i]) dfs(i, a * pr[i]);
	dfs(i + 1, a);
}
int main() {
	scanf("%d %d %d", &L, &R, &p);
	for (int i = 2; i <= p; ++i) {
		if (!flag[i]) pr[++pn] = i;
		for (int j = i * 2; j <= p; j += i) flag[j] = 1;
	}
	dfs(1, 1);
	sort(sv + 1, sv + svt + 1);

	for (int i = 1; i <= svt; ++i) {
		f[i] = p + 1;
	}
	f[1] = 0;
	for (int mx = 2; mx <= p; ++mx) {
		for (int i = 1, q = 1; i <= svt; ++i) {
			while (q <= svt && sv[i] * mx > sv[q]) ++q;
			if (q <= svt && sv[i] * mx == sv[q] && f[i] + 1 < f[q]) {
				f[q] = f[i] + 1;
			}
			if (!can[i] && f[i] + mx <= p) {
				can[i] = 1;
				if (L <= sv[i] && sv[i] <= R) {
					++ans;
				}
			}
		}
	}

	printf("%d\n", ans);
}
