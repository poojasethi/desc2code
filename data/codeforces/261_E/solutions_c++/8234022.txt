#include <cstdio>
#include <algorithm>
using namespace std;
const int N=3000004,M=104;
int L,R,P,n,prime[M],tot,a[N],f[N];
bool isprime[M],ans[N];
void findprimes(int m)
{
	int i,j; n=0;
	for (i=2;i<=m;i++) isprime[i]=true;
	for (i=2;i<=m;i++)
	{
		if (!isprime[i]) continue;
		prime[++n]=i;
		for (j=2;j<=m/i;j++) isprime[i*j]=false;
	}
}
void dfs(int x,int p)
{
	if (p>n)
	{
		a[++tot]=x;
		return;
	}
	dfs(x,p+1);
	for (int i=1;R/prime[p]>=x;i++)
	{
		x*=prime[p];
		dfs(x,p+1);
	}
}
int main()
{
	int i,j;
	scanf("%d%d%d",&L,&R,&P);
	findprimes(P);
	tot=0; dfs(1,1);
	sort(a+1,a+tot+1);
	for (i=1;i<=tot;i++) ans[i]=false,f[i]=1000000000;
	f[1]=0;
	for (i=2;i<=P;i++)
	{
		int k=1;
		for (j=2;j<=tot;j++)
		    if (a[j]%i==0)
		    {
		    	if (f[k]+1<f[j]) f[j]=f[k]+1;
		    	if (f[j]+i<=P) ans[j]=true;
		    	k++;
		    }
	}
	int cnt=0;
	for (i=2;i<=tot;i++) if ((a[i]>=L)&&(ans[i])) cnt++;
	printf("%d\n",cnt);
	return 0;
}