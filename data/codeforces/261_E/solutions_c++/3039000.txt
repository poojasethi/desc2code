#include<iostream>
#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<cmath>
#define ll long long
using namespace std;
const int N=3000000,inf=(int)1e9;
int num[N],dp[N],can[N],prime[100];
int l,r,p,tot,cnt,ans;
void work(int p,int now)
{
	int tmp;
	num[cnt++]=now;
	for(++p;p<tot;++p)
	for(tmp=now;;)
	{
		if(r / prime[p] <tmp)break;
		tmp *= prime[p];
		work(p,tmp);
	}
}
int main()
{
//	freopen("a.in","r",stdin);
//	freopen("a.out","w",stdout);
	scanf("%d%d%d",&l,&r,&p);
	for(int i=2;i<p;++i)
	{
		bool flag=1;
		for(int j=2;j<i;++j)
		if(i%j==0)flag=0;
		if(flag)prime[tot++]=i;
	}
	work(-1,1);
	sort(num,num+cnt);
	fill(dp,dp+cnt,inf);
	dp[0]=0;
	for(int lim=2;lim < p;++ lim)
	{
		int k=0;
		for(int i=0;i<cnt;++i)
		{
			while( k < cnt && num[k]<num[i] * lim)++k;
			if(k == cnt)break;
			if(num[k] == num[i]*lim)
			{
				dp[k]=min(dp[k] , dp[i] + 1);
				if(dp[k]+lim <= p && num[k] >= l && !can[k])++ans,can[k]=1;
			}
		}
	}
	printf("%d", ans);
}
