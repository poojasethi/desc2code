#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cmath>
#include<cstring>

using namespace std;
typedef long long ll;

bool pz[111];
int zhi[101];
int sm[3000011];
int z,tot,i,j,mx,l,r,ans,bz;
bool can[3000011];
int f[3000011];

void Dfs(ll x,int last)
{
	if(x!=1){
		z++;
		sm[z]=x;
	}
	int i;
	for(i=last;i<=tot;i++)if(zhi[i]<=mx&&x*zhi[i]<=r)Dfs(x*zhi[i],i);
}

int main()
{
	scanf("%d%d%d",&l,&r,&mx);
	memset(pz,true,sizeof(pz));
	for(i=2;i<=100;i++)if(pz[i]){
		for(j=2;j<=100/i;j++)pz[i*j]=false;
	}
	for(i=2;i<=100;i++)if(pz[i]){
		tot++;
		zhi[tot]=i;
	}
	z=0;
	Dfs(1,1);
	sm[++z]=1;
	sort(sm+1,sm+1+z);
	memset(f,255,sizeof(f));
	f[1]=0;
	for(i=0;i<=mx;i++){
		bz=1;
		for(j=1;j<=z;j++)if(f[j]!=-1){
			if((ll)sm[j]*i>r)break;
			if(i){
				while(sm[bz]!=sm[j]*i)bz++;
				if(f[bz]==-1||f[j]+1<f[bz])f[bz]=f[j]+1;
			}
		}
		for(j=1;j<=z;j++)if(f[j]!=-1&&i+f[j]<=mx)can[j]=true;
	}
	for(i=1;i<=z;i++)if(can[i]==true&&sm[i]>=l&&sm[i]<=r)ans++;
	printf("%d\n",ans);
}