#include <cstdio>
#include <algorithm>
using namespace std;

const int maxn = 3000008, infi = 0x7ffffff;
int n, P, p[108], pt, a[maxn], l, r, f[maxn], ans;
bool isnp[108], flag[maxn];

void GetPrime() {
	for (int i = 2; i <= P; i++) {
		if (!isnp[i]) {
			p[pt++] = i;
			for (int j = i; j <= P; j += i)
				isnp[j] = true;
		}
	}
}

void Find(long long cur, int lp) {
	a[n++] = (int)cur;
	for (int i = lp; i < pt && cur * p[i] <= r; i++)
		Find(cur * p[i], i);
}

int main() {
	scanf("%d%d%d", &l, &r, &P);
	GetPrime(); Find(1, 0);
	sort(a, a + n);
	fill(f, f + n, infi); f[0] = 0;
	for (int i = 0; i < P; i++) {
		int ptr = 0; 
		for (int j = 0; j < n; j++) {
			while (ptr < n && a[ptr] < a[j] * i)
				ptr++; 
			if (ptr == n) break ;
			if (a[ptr] == a[j] * i) {
				f[ptr] = min(f[ptr], f[j] + 1);
				if (f[ptr] + i <= P && !flag[ptr] && a[ptr] >= l && a[ptr] <= r)
					ans++, flag[ptr] = true;
			}
		}
	}
	printf("%d\n", ans);
	return 0;
}
