#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
using namespace std;
#define N 3000050
int t[N],len,st,n,m,p,a[N],ans,f[N];bool b[N];
bool Is_Prime(int x)
 {
    for (int i=2;i*i<=x;i++)
     if (x%i==0) return 0;
    return 1;
 }
void DFS(int x,int y)
 {
    if (!y) {t[++len]=x;return;}
    DFS(x,y-1);
    for (int i=x;i<=m/a[y];i*=a[y]) DFS(i*a[y],y-1);
 }
int main()
 {
    cin >>n>>m>>p;
    for (int i=2;i<=p;i++)
     if (Is_Prime(i)) a[++st]=i;
    DFS(1,st);
    sort(t+1,t+len+1);
    memset(f,127,sizeof(f));
    f[1]=0;b[1]=1;
    for (int i=2;i<=p;i++)
     {
        for (int j=i,k=1;j<=len;j++)
         {
            while (t[k]*i<t[j]) k++;
            if (t[k]*i==t[j]&&f[j]>f[k]+1&&i+f[k]+1<=p)
              f[j]=f[k]+1,b[j]=1;
         }
     }
    for (int i=2;i<=len;i++)
     if (t[i]>=n&&t[i]<=m&&b[i]) ans++;
    cout <<ans<<endl;
    return 0;
 }