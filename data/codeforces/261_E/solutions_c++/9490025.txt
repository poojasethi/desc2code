#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int N = 3000100;
const int M = 101;
int xu[N];
int prime[M];
int l,r,p;
int dp[N];
bool ever[N];
void dfs(int x,int has)
{
	if(x>prime[0])
	{
		xu[++xu[0]]=has;
		return;
	}
	dfs(x+1,has);
	if(has<=r/prime[x])
		dfs(x,has*prime[x]);
}
void Init()
{
	int i,j;
	for(i=2;i<p;i++)
	{
		for(j=2;j<i;j++)
		{
			if(i%j==0)
				break;
		}
		if(j>=i)
			prime[++prime[0]]=i;
	}
	dfs(1,1);
	sort(xu+1,xu+xu[0]+1);
}
void Do()
{
	int i,j;
	memset(dp,0x3f,sizeof dp);
	dp[1]=0;
	ever[1]=1;
	p-=2;
	for(i=2;p;i++)
	{
		int t=1;
		for(j=2;j<=xu[0];j++)
		{
			if(xu[j]%i==0)
			{
				int s=xu[j]/i;
				while(xu[t]<s)
					t++;
				if(dp[j]>dp[t]+1)
				{
					dp[j]=dp[t]+1;
					if(dp[j]<=p)
						ever[j]=1;
				}
			}
		}
		p--;
	}
	int ans=0;
	for(i=1;xu[i]<l;i++);
	while(i<=xu[0])
	{
		if(ever[i])
			ans++;
		i++;
	}
	printf("%d\n",ans);
}
int main()
{
	scanf("%d%d%d",&l,&r,&p);
	Init();
	Do();
	return 0;
}
