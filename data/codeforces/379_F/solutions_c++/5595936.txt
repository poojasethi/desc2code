#include <iostream>
#include <cstring>
using namespace std;

const int MAXn = 1e6+100;
int par[MAXn][20];
int height[MAXn];

int dist(int v1, int v2) {
	int res = 0;
	if(height[v1] < height[v2])
		swap(v1, v2);
	for(int i = 19; i >= 0; i--)
		if((1<<i) <= height[v1]-height[v2]) {
			v1 = par[v1][i];
			res += (1<<i);
		}
	for(int i = 19; i >= 0; i--)
		if(par[v1][i] != par[v2][i]) {
			v1 = par[v1][i];
			v2 = par[v2][i];
			res += 2*(1<<i);
		}
	if(v1 != v2) res += 2;
	return res;
}

int diam, dv1, dv2;

void add(int v, int p) {
	height[v] = height[p]+1;
	par[v][0] = p;
	for(int i = 1; i < 20 && par[par[v][i-1]][i-1] != -1; i++)
		par[v][i] = par[par[v][i-1]][i-1]; 
	int d = dist(dv1, v);
	if(d > diam) {
		dv2 = v;
		diam = d;
	}
	d = dist(dv2, v);
	if(d > diam) {
		dv1 = v;
		diam = d;
	}
}


int main() {
	ios::sync_with_stdio(false);
	int c = 4;
	memset(par, -1, sizeof(par));
	add(1, 0); add(2, 0); add(3, 0);
	diam = 2; dv1 = 1; dv2 = 2;
	int q;
	for(cin >> q; q > 0; q--) {
		int v;
		cin >> v; v--;
		add(c++, v);
		add(c++, v);
		cout << diam << endl;
	}
	return 0;
}
