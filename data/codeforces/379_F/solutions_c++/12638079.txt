#include<stdio.h>
#include<algorithm>
using namespace std;
int q,d[1000010][22],cnt=4,p1,p2,lev[1000010];
void update(int x,int y){
    int i;
    for(i=0;i<=21;i++){
        d[x][i]=y;
        y=d[y][i];
    }
}
int LCA(int x,int y){
    int i,s,lev1=lev[x],lev2=lev[y];
    if(lev[x]<lev[y]) swap(x,y);
    s=lev[x]-lev[y];
    for(i=21;i>=0;i--) if(s&(1<<i)) x=d[x][i];
    for(i=21;i>=0;i--){
        if(d[x][i]==d[y][i]) continue;
        x=d[x][i], y=d[y][i];
    }
    if(x!=y) x=d[x][0];
    return lev1-lev[x]+lev2-lev[x];
}
int main()
{
    int i,p,x;
    scanf("%d",&q);
    lev[2]=lev[3]=lev[4]=1;
    d[2][0]=d[3][0]=d[4][0]=lev[2]=lev[3]=lev[4]=1; p1=2, p2=3;
    for(i=1;i<=q;i++){
        scanf("%d",&x);
        update(++cnt,x); lev[cnt]=lev[x]+1;
        update(++cnt,x); lev[cnt]=lev[x]+1;
        if(x==p1) p1=cnt;
        else if(x==p2) p2=cnt;
        else if(LCA(p1,cnt)>LCA(p1,p2)) p2=cnt;
        else if(LCA(p2,cnt)>LCA(p1,p2)) p1=cnt;
        printf("%d\n",LCA(p1,p2));
    }
    return 0;
}
