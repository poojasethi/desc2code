#include <cstdio>
#include <algorithm>
using namespace std;

#define N 1000005
#define M 20

int dis[N], lca[M][N];

void build(int j, int k)
{
	lca[0][j] = k;
	for (int i = 1; i < M; ++i)
		lca[i][j] = lca[i-1][lca[i-1][j]];
}

int query(int a, int b)
{
	if (dis[a] < dis[b]) swap(a, b);
	int d = dis[a]-dis[b];
	for (int i = 0; i < M; ++i) if (d&1<<i)
		a = lca[i][a];
	if (a == b) return a;
	for (int s = M-1; s >= 0; --s)
		if (lca[s][a] != lca[s][b])
			a = lca[s][a], b = lca[s][b];
	return lca[0][a];
}

int main()
{
	for (int i = 1; i <= 4; ++i) build(i, 1);
	dis[2] = dis[3] = dis[4] = 1;
	
	int n = 5, m, a = 2, b = 3, r = 2, z;
	scanf("%d", &m);
	for (int i = 0; i < m; ++i)
	{
		scanf("%d", &z);
		dis[n] = dis[n+1] = dis[z]+1;
		build(n, z); 
		build(n+1, z);
		int x = query(n, a);
		int y = query(n, b);
		int dx = dis[n]+dis[a]-2*dis[x];
		int dy = dis[n]+dis[b]-2*dis[y];
		if (dx > dy && dx > r) r = dx, b = n;
		else if (dy > r) r = dy, a = n;
		printf("%d\n", r);
		n += 2;
	}
}
