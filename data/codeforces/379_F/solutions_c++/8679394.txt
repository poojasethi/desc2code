#include<bits/stdc++.h>

using namespace std;

#define LOG 20
#define Update now++; dep[now] = dep[k]+1; L[now][0]=k; for(j=1 ; j<=LOG ; j++) L[now][j] = L[ L[now][j-1] ][j-1];
#define Beg  mx=2; mx2=3; lp=2; now=4;

int n,m,j,k,i,l,Case,qwe,now,ans,ans2,mx,mx2,lp;
int dep[1000005];
int L[1000005][LOG+1];

int f(int x,int y){

	int i;

	if(dep[x] < dep[y])
		swap(x,y);
	
	int dif = dep[x] - dep[y];

	for(i=0 ; i<=LOG ; i++)
		if(dif & (1<<i))
			x = L[x][i];

	if(x == y)
		return y;

	for(i=LOG ; i>=0 ; i--)
		if(L[x][i] != L[y][i])
		{
			x = L[x][i];
			y = L[y][i];
		}
		
	return L[x][0];
}

int main(){

	scanf("%d",&Case);

	dep[1] = 0;

	for(i=2 ; i<=4 ; i++)
		dep[i] = L[0][i] = 1;
		
	Beg

	for(qwe=1 ; qwe<=Case ; qwe++)
	{
		scanf("%d",&k);

		Update
		
		ans = dep[mx] + dep[now] - dep[f(mx,now)] * 2;
		ans2 = dep[mx2] + dep[now] - dep[f(mx2,now)] * 2;
	
		if(ans > lp)
		{
			lp = ans;
			mx2 = now;
		}

		else if(ans2 > lp)
		{
			lp = ans2;
			mx = now;
		}
		
		printf("%d\n",lp);

		Update	
	}

	return 0;
}
