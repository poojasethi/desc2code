#include<bits/stdc++.h>
using namespace std;

#define logn 20

int LCA[1000010][21];

int Dep[1000010];

int lp,sol,sag,q,w;

int dist(int x,int y){

	if(Dep[x]<Dep[y])
		swap(x,y);

	int diff=Dep[x]-Dep[y],lca,i,qwe=Dep[x]+Dep[y];

//	cout<<x<<' '<<y<<' ';

	for(i=0 ; i<=logn ; i++)
		if(diff & (1<<i))
			x=LCA[x][i];

	if(x==y)
		return qwe-Dep[x]*2;

	for(i=logn ; i>=0 ; i--)
		if(LCA[x][i]!=LCA[y][i]){
			x=LCA[x][i];
			y=LCA[y][i];
		}

	return qwe-Dep[LCA[x][0]]*2;
}

void update(int node,int ata){

	int i;

	Dep[node]=Dep[ata]+1;
	
	LCA[node][0]=ata;

	for(i=1 ; i<=logn ; i++)
		LCA[node][i]=LCA[ LCA[node][i-1] ][i-1];

	q=dist(node,sol);
	w=dist(node,sag);

	if(q>lp){
		lp=q;
		sag=node;
	}
	if(w>lp){
		lp=w;
		sol=node;
	}

}

int main(){

	int n,q,x,i;

	cin>>q;

	sol=2;
	sag=4;

	lp=2;

	n=4;

	Dep[2]=Dep[3]=Dep[4]=1;

	LCA[2][0]=LCA[3][0]=LCA[4][0]=1;

	for(i=1 ; i<=q ; i++){
		
		scanf("%d",&x);
		
		update(++n,x);
		update(++n,x);
		
		cout<<lp<<endl;
	}

	return 0;
}
