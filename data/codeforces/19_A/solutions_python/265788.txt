from __future__ import print_function
from itertools import *
from collections import defaultdict

class results:
    def __init__ (self):
        self.pts = 0
        self.goals = 0
        self.lose = 0
    
n = input ()
List = defaultdict (results)
[raw_input () for _ in xrange (n)]
for i in xrange (n * (n - 1) / 2):
    teams, goals = raw_input ().split ()
    [team1, team2], [goals1, goals2] = teams.split ('-'), map (int, goals.split (':'))
    List[team1].goals += goals1
    List[team2].goals += goals2
    List[team1].lose += goals2
    List[team2].lose += goals1
    if goals1 > goals2:
        List[team1].pts += 3
    elif goals2 > goals1:
        List[team2].pts += 3
    else:
        List[team2].pts += 1
        List[team1].pts += 1

def mycmp (a, b):
    if a.pts > b.pts or a.pts == b.pts and a.goals - a.lose > b.goals - b.lose or a.pts == b.pts and a.goals - a.lose == b.goals - b.lose and a.goals > b.goals:
        return -1
    elif a.pts == b.pts and a.goals - a.lose == b.goals - b.lose and a.goals == b.goals:
        return 0
    else:
        return 1

List = sorted ([i[0] for i in sorted (List.items (), key=lambda a: a[1],cmp=mycmp)[:n / 2]])
print (*List, sep='\n')
    
    
