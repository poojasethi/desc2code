import re

n = int(raw_input())

class Team :
	def __repr__(self) :
		return "%s : %d %d %d" % ( self.name, self.point, self.score-self.miss, self.miss )
	def cmpkey(self) :
		return ( self.point, self.score-self.miss, self.score )
teams = {}

for i in range(0, n) :
	team = Team()
	team.name = raw_input()
	team.point = 0
	team.score = 0
	team.miss = 0
	teams[ team.name ] = team; 
	
# print teams

match_num = n * (n-1) / 2

for i in range(0, match_num) :
	line = raw_input()
	tn1, tn2, s1, s2 = re.split("[- :]", line)
	s1 = int(s1)
	s2 = int(s2)
	#print tn1, tn2, s1, s2
	t1 = teams[tn1]
	t2 = teams[tn2]
	if s1>s2 :
		t1.point += 3
	elif s2>s1 :
		t2.point += 3
	else :
		t1.point += 1
		t2.point += 1
	
	t1.score += s1
	t2.miss += s1
	t2.score += s2
	t1.miss += s2

# print teams	
ranklist = teams.values()
ranklist.sort( key=lambda t : t.cmpkey(), reverse=True )

#print ranklist
ko = ranklist[0:n/2]
#print ko
ko = map(lambda t : t.name, ko)
ko.sort()
for tn in ko :
	print tn