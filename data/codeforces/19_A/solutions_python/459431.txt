# -*- coding: UTF-8 -*-

# from itertools import *
# from collections import defaultdict

# def gcd(a,b):
#     while b > 0: a,b = b, a%b
#     return a

# def baseN(num,b,numerals="0123456789abcdefghijklmnopqrstuvwxyz"):
#     return ((num == 0) and  "0" ) or ( baseN(num // b, b).lstrip("0") + numerals[num % b])
k = {}
i = input()
for j in xrange(i):
    k[raw_input()] = [0, 0, 0]
for j in xrange(i*(i-1)/2):
    ro = raw_input()
    t1, t2 = ro.split()[0].split("-")
    s1, s2 = map(int, ro.split()[1].split(":"))
    k[t1][1] += -s2+s1
    k[t2][1] += -s1+s2
    k[t1][2] += s1
    k[t2][2] += s2
    if s1>s2:
        k[t1][0] += 3
    if s2>s1:
        k[t2][0] += 3
    if s1 == s2:
        k[t1][0] += 1
        k[t2][0] += 1
        
k = [ i[1] for i in sorted([[k[i], i] for i in k])[(len(k)/2):]]
for i in sorted(k):
    print i
