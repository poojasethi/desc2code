#include <iostream>
#include <map>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;

map<string,int> score;
map<string,int> zade;
map<string,int> khorde;

bool sst(string a,string b)
{
	if(score[a]!=score[b])
		return score[a]>score[b];
	else if(zade[a]-khorde[a]!=zade[b]-khorde[b])
		return zade[a]-khorde[a]>zade[b]-khorde[b];
	else
		return zade[a]>zade[b];
}

int main()
{
	int n;
	cin>>n;
	vector<string> na(n);
	for(int i=0;i<n;++i)
		cin>>na[i];
	for(int i=0;i<n*(n-1)/2;++i)
	{
		string inp;
		cin>>inp;
		string first,second;
		bool seen=false;
		for(unsigned j=0;j<inp.length();++j)
		{
			if(inp[j]=='-')
			{
				seen=true;
			}
			else if(seen)
				second=second+inp.substr(j,1);
			else
				first=first+inp.substr(j,1);
		}
		int f,s;
		char temp;
		cin>>f>>temp>>s;
		zade[first]+=f;
		zade[second]+=s;
		khorde[first]+=s;
		khorde[second]+=f;
		if(s>f)
			score[second]+=3;
		else if(f>s)
			score[first]+=3;
		else
		{
			score[second]++;
			score[first]++;
		}
	}
	sort(&na[0],&na[0]+n,sst);
	sort(&na[0],&na[0]+n/2);
	for(int i=0;i<n/2;++i)
		cout<<na[i]<<endl;
	return 0;
}
