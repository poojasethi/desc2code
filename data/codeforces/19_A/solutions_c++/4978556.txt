#include <iostream>
#include <cstdio>
#include <map>
#include <string>
#include <algorithm>
using namespace std;

int n;
struct Team {
	string t;
	int pt, dff, sc; 
}t[50];
bool cmp(Team a, Team b)
{
	if(a.pt != b.pt)	return a.pt > b.pt;
	if(a.dff != b.dff)	return a.dff > b.dff;
	return a.sc > b.sc;
}
map<string, Team> a;

int main()
{
	cin >> n;
	for(int i = 0; i < n; i++)
	{
		string s;
		cin >> s;
		a[s].t = s;;
	}
	int m = n * (n-1) / 2;
	while(m--)
	{
		string s, s1, s2;
		int x, y;
		char c;
		cin >> s >> x >> c >> y;
		int p = s.find("-");
		s1 = s.substr(0, p);
		s2 = s.substr(p+1);
	
		a[s1].dff += x - y;
		a[s1].sc += x;
		a[s2].dff += y - x;
		a[s2].sc += y;
		if(x > y)
			a[s1].pt += 3;
		else if(x < y)
			a[s2].pt += 3;
		else
			a[s1].pt += 1, a[s2].pt += 1;
	}
	int i = 0;
	for(map<string, Team>::iterator it = a.begin(); it != a.end(); it++)
	{
		t[i] = it->second;
		i++;
	}
	sort(t, t + n, cmp);
	string ss[50];
	for(int i = 0; i < n/ 2; i++)
		ss[i] = t[i].t;
	sort(ss, ss + n/2);
	for(int i = 0; i < n/ 2; i++)
		cout << ss[i] << endl;
	return 0;
}
