#include <iostream>
#include <algorithm>
#include <map>
#include <vector>
#include <cstring>
#include <string>
using namespace std;
int n;
map <string,int> sc,mg,sg;
int main(){
	cin >> n;
	for (int i=1; i<=n; i++) { string s; cin >> s; }
	for (int i=1; i<=n; i++)
		for (int j=1; j<i; j++){
			string s; cin >> s;
			int p = s.find('-');
			string A = s.substr (0,p);
			string B = s.substr (p+1 , (int)s.size()-p-1);
			int a,b; char ch; cin >> a >> ch >> b; 
			mg[A]+=b; mg[B]+=a;
			sg[A]+=a; sg[B]+=b;
			if (a==b) {	sc[A]++; sc[B]++; }
			if (a<b)  { sc[B]+=3; }
			if (a>b)  { sc[A]+=3; }
		}

	vector < pair <pair<int,int> , pair<int,string> > > Q;

	for (map<string,int> :: iterator it = mg.begin(); it!=mg.end(); it++){
		string s = (it->first);
		Q.push_back (make_pair(make_pair(sc[s],sg[s]-mg[s]),make_pair(sg[s],s)));
	}

	sort (Q.begin() , Q.end());

	vector <string> P;

	for (int i=n/2; i<n; i++)
		P.push_back (Q[i].second.second);

	sort (P.begin() , P.end());

	for (int i=0; i<(int)P.size(); i++)
		cout << P[i] << endl;

	return 0;
}
