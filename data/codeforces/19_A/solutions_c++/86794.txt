#include<iostream>
#include<map>
#include<vector>
#include<string>
#include<sstream>
#include<algorithm>

using namespace std;

typedef pair<vector<int>,string> P;
map<string,vector<int> > M;

int main(){

  string ln;
  getline(cin,ln);
  int N;
  istringstream(ln)>>N;
  for(int i=0;i<N;i++){
    getline(cin,ln);
    M[ln]=vector<int>(3);
  }
  for(int i=0;i<N*(N-1)/2;i++){
    getline(cin,ln);
    for(int k=0;k<ln.size();k++){
      if(ln[k]=='-'||ln[k]==':')ln[k]=' ';
    }
    istringstream in(ln);
    string a,b;
    int n1,n2;
    in>>a>>b>>n1>>n2;
    if(n1>n2){
      M[a][0]+=3;
    }else if(n1<n2){
      M[b][0]+=3;
    }else{
      M[a][0]+=1;
      M[b][0]+=1;
    }
    M[a][1]+=(n1-n2);
    M[b][1]+=(n2-n1);
    M[a][2]+=n1;
    M[a][2]+=n2;
  }
  vector<P> res;
  for(map<string,vector<int> >::iterator i=M.begin();i!=M.end();i++){
    res.push_back(P(i->second,i->first));
  }
  sort(res.rbegin(),res.rend());
  vector<string> v;
  for(int i=0;i<N/2;i++){
    v.push_back(res[i].second);
  }
  sort(v.begin(),v.end());
  for(int i=0;i<v.size();i++){
    cout<<v[i]<<endl;
  }

  return 0;
}
