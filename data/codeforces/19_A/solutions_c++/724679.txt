#include <cstdio>
#include <algorithm>
#include <iostream>
#include <map>
#include <string>
#include <vector>

using namespace std;

struct team { int p, s, g; string name; };

bool comp(const team &A, const team &B) {
    if (A.p != B.p) return A.p > B.p;
    if (A.s != B.s) return A.s > B.s;
    return A.g > B.g;
}

map<string, int> M;
vector<team> T;

int main() {

    char a[100], b[100];
    int N, x, y;
    scanf("%d", &N);
    T.resize(N, (team){0,0,0,""});
    for (int i = 0; i < N; i++) scanf(" %s", a), M[a] = i, T[i].name = a;
    for (int i = 0; i < N*(N-1)/2; i++) {
        scanf(" %[^-]-%[^ ] %d:%d", a, b, &x, &y);
        int u = M[a], v = M[b];
        if (x > y) T[u].p += 3;
        else if (x < y) T[v].p += 3;
        else T[u].p++, T[v].p++;
        T[u].s += x-y; T[u].g += x;
        T[v].s += y-x; T[v].g += y;
    }
    sort(T.begin(), T.end(), comp);
    vector<string> ret;
    for (int i = 0; i < N/2; i++) ret.push_back(T[i].name);
    sort(ret.begin(), ret.end());
    for (int i = 0; i < N/2; i++) cout << ret[i] << endl;

    return 0;
}
