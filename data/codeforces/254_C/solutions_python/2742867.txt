import sys
from collections import Counter
def io():
    sys.stdin = open("input.txt", "r")
    sys.stdout = open("output.txt", "w")
def main():
    s = sys.stdin.readline().strip()
    t = sys.stdin.readline().strip()
    sc = [0] * 26
    tc = [0] * 26
    n = len(s)
    for i, j in zip(s, t):
        sc[ord(i)-ord('A')] += 1
        tc[ord(j)-ord('A')] += 1
    tf = []
    for i in xrange(25, -1, -1):
        if sc[i] < tc[i]:
            tf.extend([i] * (tc[i] - sc[i]))
    print len(tf)
    ard = list(s)
    sc_ = [0] * 26
    for i in xrange(n):
        a = ord(s[i]) - ord('A')
        sc_[a] += 1
        if sc[a] > tc[a]:
            if a >= tf[-1] or sc_[a] > tc[a]:
                ard[i] = chr(ord('A')+tf.pop())
                sc[a] -= 1
                sc_[a] -= 1
        if not tf: break
    sys.stdout.write("".join(ard))
    print
io()
main()
