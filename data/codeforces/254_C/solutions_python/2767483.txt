import sys
from collections import Counter

def smallestAnnagram(s, sToChange, sCounts, substitute):
    toSubstitute = len(substitute)
    for elem in s:
        if not toSubstitute or elem not in sToChange:
            yield elem
        else:
            if (elem <= substitute[-1] and sCounts[elem] > sToChange[elem]) or (sToChange[elem] == 0):
                yield elem
            else:
                sToChange[elem] -= 1
                toSubstitute -= 1
                yield substitute.pop()
            sCounts[elem] -= 1

def main():
    sys.stdin = open('input.txt', 'r')
    sys.stdout = open('output.txt', 'w')
    s = list(raw_input())
    t = list(raw_input())
    sCounts = Counter(s)
    tCounts = Counter(t)
    sToChange = sCounts - tCounts
    substitute = tCounts - sCounts
    substitute = reduce(lambda prev, cur: prev + [cur[0]] * cur[1], substitute.items(), [])
    substitute = sorted(substitute, reverse = True)

    print len(substitute)
    print ''.join(smallestAnnagram(s, sToChange, sCounts, substitute))

if __name__ == '__main__':
    main()
