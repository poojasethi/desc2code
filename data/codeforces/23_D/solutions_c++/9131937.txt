#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cmath>
using namespace std;
const double eps = 1e-7;
struct Pt{
	double x,y;
	inline void read(){scanf("%lf%lf",&x,&y);}
	inline void print(){printf("%.9lf %.9lf ",x,y);}
}a,b,c,v1,v2,v3,v4;
double A,B,C,D,val1,val2,val3,val4;

double crs(Pt a,Pt b,Pt c){
	return (b.x - a.x) * (c.y - b.y) - (c.x - b.x) * (b.y - a.y);
}

Pt sym(Pt a,Pt b){
	Pt ret; ret.x = 2 * b.x - a.x; ret.y = 2 * b.y - a.y;
	return ret;
}

bool chk(Pt a,Pt b,Pt c,Pt ini){
	if(fabs(crs(a,b,c)) <= eps) return false;
	A = a.x*a.x + a.y * a.y; B = b.x * b.x + b.y * b.y; C = c.x * c.x + c.y * c.y; D = 2 * (a.x * (b.y - c.y) + b.x * (c.y - a.y) + c.x * (a.y - b.y));
	v1.x = (A * (b.y - c.y) + B * (c.y - a.y) + C * (a.y - b.y)) / D;
	v1.y = (A * (c.x - b.x) + B * (a.x - c.x) + C * (b.x - a.x)) / D;
	v2.x = 2 * c.x - v1.x; v2.y = 2 * c.y - v1.y;
	v4.x = 2 * b.x - v1.x; v4.y = 2 * b.y - v1.y;
	v3.x = 2 * ini.x - v4.x; v3.y = 2 * ini.y - v4.y;
	val1 = crs(v1,v2,v3); val2 = crs(v2,v3,v4); val3 = crs(v3,v4,v1); val4 = crs(v4,v1,v2);
	if((val1 > eps && val2 > eps && val3 > eps && val4 > eps) || (val1 < -eps && val2 < -eps && val3 < -eps && val4 < -eps)){
		puts("YES");
		v1.print(); v2.print(); v3.print(); v4.print(); puts("");
		return true;
	}
	return false;
}

int main(){
	//freopen("input","r",stdin);
	int __;
	scanf("%d",&__);
	while(__--){
		a.read(); b.read(); c.read();
		if(chk(sym(b,a),a,c,b) || chk(sym(a,b),b,c,a) || chk(sym(a,c),c,b,a)) continue;
		puts("NO"); puts("");
	}
	return 0;
}
