#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <cmath>
using namespace std;

const double eps = 1e-10;
struct Tpoint { double x, y; };

Tpoint operator +(Tpoint a, Tpoint b) {
    return (Tpoint){a.x + b.x, a.y + b.y};
}

Tpoint operator -(Tpoint a, Tpoint b) {
    return (Tpoint){a.x - b.x, a.y - b.y};
}

double det(Tpoint a, Tpoint b) {
    return a.x * b.y - b.x * a.y;
}

double norm(Tpoint a) { return a.x * a.x + a.y * a.y; }

Tpoint get(Tpoint a, Tpoint b, Tpoint c) {
    double sa = norm(a), sb = norm(b), sc = norm(c);
    double d = a.x * (b.y - c.y) + b.x * (c.y - a.y) + c.x * (a.y - b.y);
    double rx = (a.y * (sb - sc) + b.y * (sc - sa) + c.y * (sa - sb)) / d;
    double ry = (a.x * (sb - sc) + b.x * (sc - sa) + c.x * (sa - sb)) / d;
    return (Tpoint){-rx * 0.5, ry * 0.5};
}

bool check(Tpoint a, Tpoint b, Tpoint c) {
    Tpoint d = b + b - c, A = get(a, b, d);
    Tpoint B = b + b - A, C = c + c - B, D = a + a - A;
    if (det(A - D, B - A) < eps || det(B - A, C - B) < eps ||
        det(C - B, D - C) < eps || det(D - C, A - D) < eps)
        return true;
    else {
        puts("YES");
        printf("%.10lf %.10lf ", A.x, A.y);
        printf("%.10lf %.10lf ", B.x, B.y);
        printf("%.10lf %.10lf ", C.x, C.y);
        printf("%.10lf %.10lf ", D.x, D.y);
        return false;
    }
}

int main() {
    int test; Tpoint a, b, c;
    for (scanf("%d", &test); test; --test) {
        scanf("%lf%lf", &a.x, &a.y);
        scanf("%lf%lf", &b.x, &b.y);
        scanf("%lf%lf", &c.x, &c.y);
        if (fabs(det(b - a, c - a)) < eps ||
            (check(a, b, c) && check(a, c, b) && check(b, a, c) &&
             check(b, c, a) && check(c, a, b) && check(c, b, a)))
            puts("NO");
        else puts("");
    }
    return 0;
}
