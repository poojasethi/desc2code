#include<cmath>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<algorithm>
#define x first
#define y second
#define mp make_pair
using namespace std;
const double eps = 1e-10;
typedef pair<double, double> Point;
Point za, zb, zc, zd;
Point a, b, c, d, e;
Point A, B, C, D;
double cha(Point a, Point b, Point c)
{
    return (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);
}
Point jiao(Point a, Point b, Point c, Point d)
{
    double t1 = cha(a, c, b), t2 = cha(a, b, d), t3 = cha(c, a, d), t4 = cha(c, d, b);
    return mp((c.x * t2 + d.x * t1) / (t1 + t2), (c.y * t2 + d.y * t1) / (t1 + t2));
}
void work(Point a, Point b, Point &c, Point &d)
{
    c.x = (a.x + b.x) / 2, c.y = (a.y + b.y) / 2;
    d.x = c.x + b.y - a.y, d.y = c.y + a.x - b.x;
}
bool get(Point a, Point b, Point c)
{
    work(a, b, za, zb), work(b, c, zc, zd);
    d.x = b.x + zd.x - zc.x, d.y = b.y + zd.y - zc.y;
    d = jiao(b, d, za, zb);
    e = jiao(za, zb, zc, zd);
    A.x = 2 * d.x - e.x, A.y = 2 * d.y - e.y;
    B.x = 2 * b.x - A.x, B.y = 2 * b.y - A.y;
    C.x = 2 * c.x - B.x, C.y = 2 * c.y - B.y;
    D.x = 2 * a.x - A.x, D.y = 2 * a.y - A.y;
    return cha(A, B, C) * cha(B, C, D) - eps > 0 && cha(B, C, D) * cha(C, D, A) - eps > 0 && cha(C, D, A) * cha(D, A, B) - eps > 0;
}
int main()
{
    int t;
    for(scanf("%d", &t); t--;)
    {
        scanf("%lf%lf%lf%lf%lf%lf", &a.x, &a.y, &b.x, &b.y, &c.x, &c.y);
        if(fabs(cha(a, b, c)) - eps < 0)
        {
            printf("NO\n");
            continue;
        }
        if(get(a, b, c) || get(a, c, b) || get(b, a, c))
        {
            printf("YES\n");
            printf("%.9f %.9f ", A.x, A.y);
            printf("%.9f %.9f ", B.x, B.y);
            printf("%.9f %.9f ", C.x, C.y);
            printf("%.9f %.9f\n", D.x, D.y);
        }
        else
            printf("NO\n");
    }
    return 0;
}