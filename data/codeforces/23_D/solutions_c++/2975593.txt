#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <set>
#define Db(x) cout<<#x<<"  "<<x<<endl;
#define rep(i,n) for(int i=0;i<n;i++)
#define sqr(x) x*x
using namespace std;
struct node{
    double x,y;
    node(){}
    node(double _x,double _y):x(_x),y(_y){}
    node operator - (const node &a)const{
        return node(x-a.x,y-a.y);
    }
    bool operator == (const node &a)const{
        return x==a.x&&y==a.y;
    }
}a[3],s[4];
double cross(node a,node b){
    return a.x*b.y-a.y*b.x;
}
double det(double a,double b,double c,double d){
    return a*d-b*c;
}
void Calc(double a,double b,double c,double d,double m,double n,double &x,double &y){
    double G=det(a,b,c,d);
    y=det(a,m,c,n)/G;
    x=-det(b,m,d,n)/G;
}
void Cirpoint(node a,node b,node c,node &p){
    Calc(2*(a.x-b.x),2*(a.y-b.y),2*(a.x-c.x),2*(a.y-c.y),sqr(a.x)-sqr(b.x)+sqr(a.y)-sqr(b.y),sqr(a.x)-sqr(c.x)+sqr(a.y)-sqr(c.y),p.x,p.y);
}
void symm(node a,node b,node &d){
    d=node(a.x*2-b.x,a.y*2-b.y);
}
bool Work(node a,node b,node c){
    node d,e;
    symm(a,b,d);symm(a,c,e);
    Cirpoint(a,b,e,s[1]);
    Cirpoint(a,c,d,s[2]);
    symm(b,s[1],s[0]);symm(c,s[2],s[3]);
    return (cross(s[1]-s[0],s[2]-s[0])*cross(s[3]-s[0],s[2]-s[0])<0 && cross(s[2]-s[3],s[1]-s[3])*cross(s[0]-s[3],s[1]-s[3])<0);
}
void Init(){
    rep(i,3){
        int x,y;
        scanf("%d%d",&x,&y);a[i]=node(double(x),double(y));
    }
}
int r ;
int main(){
    //freopen("in.txt","r",stdin);
    scanf("%d",&r);
    for(;r--;){
        Init();
        if(!Work(a[0],a[2],a[1]))
        if(!Work(a[1],a[0],a[2]))
        if(!Work(a[2],a[0],a[1])){printf("NO\n\n");continue;}
        {
            printf("YES\n");
            rep(i,4){
                printf("%.9lf %.9lf",s[i].x,s[i].y);if(i<3)cout<<' ';else cout<<endl;
            }
        }
    }
}
