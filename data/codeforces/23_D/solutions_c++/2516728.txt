#include<cstdio>
#include<cmath>

int TestCase;

double A,B,C,D,E,F,X[4],Y[4],x[4],y[4];

double XJ(double a,double b,double c,double d){return a*d-b*c;}

bool Solve(int i,int j,int k)
{
	A=2*(x[i]-x[j]);
	B=2*(y[i]-y[j]);
	C=x[i]*x[i]+y[i]*y[i]-x[j]*x[j]-y[j]*y[j];
	D=2*(x[i]-x[k]);
	E=2*(y[i]-y[k]);
	F=3*x[i]*x[i]+3*y[i]*y[i]+x[k]*x[k]+y[k]*y[k]-4*x[i]*x[k]-4*y[i]*y[k];
	if(fabs(XJ(A,B,D,E))<1e-8)return 1;
	X[0]=XJ(C,B,F,E)/XJ(A,B,D,E);
	Y[0]=XJ(A,C,D,F)/XJ(A,B,D,E);
	X[1]=2*x[i]-X[0];
	Y[1]=2*y[i]-Y[0];
	X[3]=2*x[j]-X[0];
	Y[3]=2*y[j]-Y[0];
	X[2]=2*x[k]-X[1];
	Y[2]=2*y[k]-Y[1];
	if(XJ(X[1]-X[0],Y[1]-Y[0],X[2]-X[0],Y[2]-Y[0])*XJ(X[3]-X[0],Y[3]-Y[0],X[2]-X[0],Y[2]-Y[0])<-(1e-8)
	&&XJ(X[0]-X[1],Y[0]-Y[1],X[3]-X[1],Y[3]-Y[1])*XJ(X[2]-X[1],Y[2]-Y[1],X[3]-X[1],Y[3]-Y[1])<-(1e-8))
	{
		printf("YES\n");
		for(i=0;i<4;i++)printf("%.9lf %.9lf ",X[i],Y[i]);
		printf("\n");
		return 0;
	}
	return 1;
}

int main()
{
	for(scanf("%d",&TestCase);TestCase--;)
	{	scanf("%lf%lf%lf%lf%lf%lf",x,y,x+1,y+1,x+2,y+2);
		if(Solve(0,1,2)&&Solve(1,0,2)&&Solve(2,0,1))
			printf("NO\n\n");
	}
	return 0;
}
