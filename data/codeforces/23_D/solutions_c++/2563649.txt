/*
Author: LJQ
PROG: Codeforces Contest #23 D. Tetragon
DATE: 2012.11.15
*/
#include <cstdio>

using namespace std;

const double eps = 1e-10;

struct Tpoint{
	double x, y;
} a, b, c, A, B, C, D;

bool flag;

double Fabs(double x){
	return x < 0 ? -x : x;
}

double Cross(Tpoint p0, Tpoint p1, Tpoint p2){
	return (p1.x - p0.x) * (p2.y - p0.y) - (p2.x - p0.x) * (p1.y - p0.y);
}

int sign(double x){
	if (Fabs(x) < eps) return 0;
	if (x < 0) return -1;
	return 1;
}

void init()
{
	scanf("%lf%lf%lf%lf%lf%lf", &a.x, &a.y, &b.x, &b.y, &c.x, &c.y);
}

bool check(Tpoint a, Tpoint b, Tpoint c)
{
	double xa = a.x, xb = b.x, xc = b.x * 2 - c.x;
	double ya = a.y, yb = b.y, yc = b.y * 2 - c.y;//the triangle
	double a1 = (xb - xa) * 2, b1 = (yb - ya) * 2, c1 = xa * xa + ya * ya - xb * xb - yb * yb;
	double a2 = (xb - xc) * 2, b2 = (yb - yc) * 2, c2 = xc * xc + yc * yc - xb * xb - yb * yb;
	if (Fabs(a1 * b2 - a2 * b1) < eps) return false;
	B.x = - (c1 * b2 - c2 * b1) / (a1 * b2 - a2 * b1);
	B.y = - (c1 * a2 - c2 * a1) / (a2 * b1 - a1 * b2);
	A.x = xa * 2 - B.x, A.y = ya * 2 - B.y;//a: midpoint of AB
	C.x = xb * 2 - B.x, C.y = yb * 2 - B.y;//b: midpoint of BC
	D.x = c.x * 2 - C.x, D.y = c.y * 2 - C.y;//c: midpoint of CD
	int tmp = sign(Cross(A, B, C)) + sign(Cross(B, C, D)) + sign(Cross(C, D, A)) + sign(Cross(D, A, B));
	return tmp == 4 || tmp == -4;
}

void work()
{
	flag = false;
	if (Fabs(Cross(a, b, c)) < eps) return;
	if (check(a, b, c) || check(a, c, b) || check(b, a, c)) flag = true;
}

void print()
{
	if (!flag){
		printf("NO\n\n");
	} else {
		printf("YES\n");
		printf("%.9lf %.9lf %.9lf %.9lf %.9lf %.9lf %.9lf %.9lf\n", A.x, A.y, B.x, B.y, C.x, C.y, D.x, D.y);
	}
}

int main()
{
	int T;
	scanf("%d", &T);
	while (T --){
		init();
		work();
		print();
	}
	return 0;
}
