#include<cstdio>
struct note{
	double x,y;
	void prt(int i){printf("%.9lf %.9lf%s",x,y,i<3?" ":"\n");}
} A,B,C,D,E,F,BA,CA,OD,OE,O,p[8];
void Read(note &A){scanf("%lf%lf",&A.x,&A.y);}
note Make(double x,double y){note A; A.x=x,A.y=y; return A;}
double Xot(note A,note B){return A.x*B.y-A.y*B.x;}
void Cal(note &E,note A,note AB,note C,note D)
{
	note AC=Make(C.x-A.x,C.y-A.y),AD=Make(AC.x+D.x,AC.y+D.y);
	double s1=Xot(AB,AC),s2=Xot(AB,AD),s3=s2-s1; s1/=s3,s2/=s3;
	E=Make(AC.x*s2-AD.x*s1+A.x,AC.y*s2-AD.y*s1+A.y);
}
bool Work(note A,note B,note C)
{
	D=Make((A.x+B.x)/2,(A.y+B.y)/2),E=Make((A.x+C.x)/2,(A.y+C.y)/2);
	BA=Make(A.x-B.x,A.y-B.y),CA=Make(A.x-C.x,A.y-C.y);
	OD=Make(BA.y,-BA.x),OE=Make(CA.y,-CA.x);
	Cal(O,D,OD,E,OE),F=Make(A.x*2-O.x,A.y*2-O.y);
	Cal(p[0],O,OD,F,OE),Cal(p[1],O,OE,F,OD);
	p[2]=Make(C.x*2-p[1].x,C.y*2-p[1].y),p[3]=Make(B.x*2-p[0].x,B.y*2-p[0].y);
	p[4]=p[0],p[5]=p[1]; int cnt=0;
	for (int i=0;i<4;i++){
		note A=p[i],B=p[i+1],C=p[i+2];
		double tmp=Xot(Make(C.x-B.x,C.y-B.y),Make(B.x-A.x,B.y-A.y));
		if (tmp<-1e-8) cnt--; if (tmp>1e-8) cnt++;
		}
	if (cnt-4 && cnt+4) return 0;
	printf("YES\n"); for (int i=0;i<4;i++) p[i].prt(i); return 1;
}
int main()
{
	int t; scanf("%d",&t);
	while (t--){
		Read(A),Read(B),Read(C);
		double tmp=Xot(Make(C.x-B.x,C.y-B.y),Make(B.x-A.x,B.y-A.y)); if (tmp<0) tmp=-tmp;
		if (tmp<1e-8 || !Work(A,B,C) && !Work(B,C,A) && !Work(C,A,B)) printf("NO\n\n");
		}
	return 0;
}
