#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iostream>
#include<algorithm>
#define x first
#define y second
#define mp make_pair
using namespace std;
typedef pair<double,double> PR;
const double eps=1e-9;
int _c;
double ch(const PR A,const PR B,const PR C){return (B.x-A.x)*(C.y-A.y)-(B.y-A.y)*(C.x-A.x);}
PR mid(const PR A,const PR B){return mp(0.5*(A.x+B.x),0.5*(A.y+B.y));}
PR G_point(const PR &A,const PR &B,const PR &C,const PR&D)
{
    double f=((C.x-A.x)*D.y-(C.y-A.y)*D.x)/(B.x*D.y-B.y*D.x);
    return mp(A.x+B.x*f,A.y+B.y*f);
}
PR G_mid(const PR&A,const PR&B){return mp(A.x*2-B.x,A.y*2-B.y);}
bool G(const PR &A,PR B,PR C)
{
    double p=ch(A,B,C);
    if ( abs(p)<1e-9 )  return 0;
    if ( p<0 ) swap(B,C);
    PR b=mid(A,B),c=mid(A,C);
    PR _b=mp(A.y-B.y,B.x-A.x),_c=mp(A.y-C.y,C.x-A.x);
    PR X=G_point(b,_b,c,_c);
    PR k2=G_point(A,_c,X,_b),k1=G_point(A,_b,X,_c);
    k2=G_mid(k2,X),k1=G_mid(k1,X);
    PR k3=G_mid(B,k2),k4=G_mid(C,k1);
    if ( ch(k1,k2,k3)>eps && ch(k2,k3,k4)>eps && ch(k3,k4,k1)>eps && ch(k4,k1,k2)>eps )
    {
        puts("YES");
        printf("%.10lf %.10lf %.10lf %.10lf %.10lf %.10lf %.10lf %.10lf\n",k1.x,k1.y,k2.x,k2.y,k3.x,k3.y,k4.x,k4.y);
        return 1;
    }
    return 0;
}
int main()
{
    PR a,b,c;
    for(scanf("%d",&_c);_c--;)
    {
        scanf("%lf%lf%lf%lf%lf%lf",&a.x,&a.y,&b.x,&b.y,&c.x,&c.y);
        if ( !G(a,b,c) && !G(b,a,c) && !G(c,a,b) ) puts("NO\n");
    }
    return 0;
}