#include <cmath>
#include <cstdio>
#define eps 1e-9
using namespace std;

struct point
{
	double x,y;
	point(double _x=0,double _y=0) {x=_x,y=_y;}
	friend point operator +(const point&A,const point&B) {return point(A.x+B.x,A.y+B.y);}
	friend point operator -(const point&A,const point&B) {return point(A.x-B.x,A.y-B.y);}
	friend double operator *(const point&A,const point&B) {return A.x*B.y-A.y*B.x;}
	point operator *(double k) {return point(x*k,y*k);}
} A,B,C,O;
bool ok;

point cross(point A,point u,point B,point v)
{
	point w=B-A;
	double t=-(w*v)/(v*u);
	return A+u*t;
}

void check(point A,point B,point C)
{
	if (ok) return;
	point D=(A+B)*0.5,E=(A+C)*0.5,u(B.y-A.y,A.x-B.x),v(C.y-A.y,A.x-C.x),O=cross(D,u,E,v),F=A+A-O,p[4];
	p[0]=cross(F,v,D,u),p[1]=cross(F,u,E,v),p[3]=B+B-p[0],p[2]=C+C-p[1];
	int t=0; double k;
	for (int i=0; i<4; i++) k=(p[(i+3)%4]-p[i])*(p[(i+1)%4]-p[i]),t+=k<-eps?-1:k>eps?1:0;
	if (t!=-4&&t!=4) return;
	ok=1,puts("YES");
	for (int i=0; i<4; i++) printf("%.9lf %.9lf%c",p[i].x,p[i].y,i==3?'\n':' ');
}

void doit()
{
	scanf("%lf%lf%lf%lf%lf%lf",&A.x,&A.y,&B.x,&B.y,&C.x,&C.y),ok=0;
	check(A,B,C),check(B,A,C),check(C,A,B);
	if (!ok) puts("NO\n");
}

int main()
{
	int T;
	for (scanf("%d",&T); T; T--) doit();
	return 0;
}