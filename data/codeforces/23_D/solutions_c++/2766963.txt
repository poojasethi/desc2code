#include<iostream>
#include<algorithm>
#include<iomanip>
#include<cstdio>
#include<cstdlib>
#include<cstring>

using namespace std;
typedef double lf;

const int fin=0;
int v[3],*c=v+1;

struct pt{
  lf x,y;
  pt(){}
  pt(lf x,lf y):x(x),y(y){}
  void Read(){scanf("%lf%lf",&x,&y);}
  void Print(){printf("%.9lf %.9lf ",x,y);}
}A,B,C,D,E,F,G,N,P0,P1,P2,P3;
pt operator +(pt a,pt b){
  return pt(a.x+b.x,a.y+b.y);
}
pt operator -(pt a,pt b){
  return pt(a.x-b.x,a.y-b.y);
}
pt operator *(lf k,pt a){
  return pt(k*a.x,k*a.y);
}
lf operator *(pt a,pt b){
  return a.x*b.y-a.y*b.x;
}
lf operator /(pt a,pt b){ 
  return a.x*b.x+a.y*b.y;
} //dot

int sgn(lf x){
  if(x==0)return 0;
  return x>0?1:-1;
}

bool sol(pt A,pt B,pt C){
  lf t;
  D=0.5*(A+B),E=0.5*(B+C);
  N=pt(A.y-B.y,B.x-A.x);
  F=2*B-D-E,G=B-C;
  if(N/G==0)return 0;
  t=(F/G)/(N/G);
  P1=D+t*N,P0=2*A-P1,P2=2*B-P1,P3=2*C-P2;
  c[-1]=c[0]=c[1]=0;
  ++c[sgn((P1-P0)*(P2-P1))];
  ++c[sgn((P2-P1)*(P3-P2))];
  ++c[sgn((P3-P2)*(P0-P3))];
  ++c[sgn((P0-P3)*(P1-P0))];
  if(c[0]!=0||c[1]!=0&&c[1]!=4)return 0;
  puts("YES"),P0.Print(),P1.Print(),P2.Print(),P3.Print(),puts("");
  return 1;
}

int main(){
  if(fin){
    freopen("t.in","r",stdin);
    freopen("t.out","w",stdout);
  }
  int T;
  scanf("%d",&T);
  while(T--){
    A.Read(),B.Read(),C.Read();
    if(sol(A,B,C))continue;
    if(sol(A,C,B))continue;
    if(sol(B,A,C))continue;
    if(sol(B,C,A))continue;
    if(sol(C,A,B))continue;
    if(sol(C,B,A))continue;
    puts("NO\n");
  }
  return 0;
}
