from collections import Counter
from itertools import cycle, product as prod, permutations as perm, combinations as comb, combinations_with_replacement as combr
from sys import stdin, stdout
read_ints = lambda: map(int, raw_input().split())
read_floats = lambda: map(float, raw_input().split())

def main():
    n = input()
    b = [None] * (n + 1)
    cur = 1
    if n % 4 == 0:
        for i in xrange(1, n/2+1, 2):
            o = (i, i+1, n-i+1, n-i)
            for j in xrange(4):
                b[o[j]] = o[j+1 & 3]
        print ' '.join(map(str, b[1:]))
    elif n % 4 == 1:
        for i in xrange(1, n/2+1, 2):
            o = (i, i+1, n-i+1, n-i)
            for j in xrange(4):
                b[o[j]] = o[j+1 & 3]
        b[n/2+1] = n/2+1
        print ' '.join(map(str, b[1:]))
    else:
        print -1

if __name__ == '__main__':
    main()
