#include <cstdio>
#include <cmath>
#include <iostream>
#include <algorithm>
using namespace std;

typedef long long ll;
ll sum[500500];
int n,k,a[500500],mn,mx,f;

bool checkp(int v)
{
	int p=lower_bound(a,a+n,v) - a - 1;
	if ((ll)v*(p+1)-sum[p]<=k)return true;
	return false;
}
bool checkr(int v)
{
	int p=upper_bound(a,a+n,v) - a;
	if ((ll)sum[n-1]-sum[p-1]-(ll)v*(n-p)<=k)return true;
	return false;
}

int main()
{
	scanf("%d%d",&n,&k);
	for (int i=0;i<n;i++)
	scanf("%d",&a[i]);
	sort(a,a+n);
	sum[0]=a[0];
	for (int i=1;i<n;i++)
	sum[i]=sum[i-1]+a[i];
	int ave=sum[n-1]/n;
	int l=1,r=ave+1;
	while (l+1<r){
		int mid=(l+r) >> 1;
		if (checkp(mid)) l=mid;
		else r=mid;
	}
	mn=l;
	if (sum[n-1]%n) l=ave+1;
	r=a[n-1];
	while (l<r){
		int mid=(l+r) >> 1;
		if (checkr(mid)) r=mid;
		else l=mid+1;
	}
	mx=r;
	printf("%d",mx-mn);
	return 0;
}
 	  				  	  	  					  	   	 		