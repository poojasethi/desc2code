#include <cstdio>
#include <algorithm>
#include <iostream>

using namespace std;

const int limite=1000000;

typedef long long int ll;

int n,k;
int c[limite];
ll sc[limite];

int calculahsup()
{
  int i=n;
  while (1<=i and sc[n]-sc[i]-ll(n-i)*c[i]<k) i--;
  if (i==-1) return c[1];
  if (i==n) return c[n];
  return c[i+1]-(k-(sc[n]-sc[i]-ll(n-i)*c[i+1]))/(n-i);
}

int calculahinf()
{
  int i=1;
  while (i<=n and ll(i)*c[i]-sc[i]<k) i++;
  if (i==n+1) return c[n];
  if (i==1) return c[1];
  return c[i-1]+(k-(ll(i-1)*c[i-1]-sc[i-1]))/(i-1);
}

int main()
{
  scanf("%d%d",&n,&k);
  for (int i=1;i<=n;i++)
    scanf("%d",&(c[i]));
  sort(c+1,c+(n+1));
  for (int i=1;i<=n;i++)
    sc[i]=sc[i-1]+c[i];
  int hsup=calculahsup();
  int hinf=calculahinf();
  if (hinf<hsup) cout<<hsup-hinf<<endl;
  else if (sc[n]%n==0) cout<<0<<endl;
  else cout<<1<<endl;
}
