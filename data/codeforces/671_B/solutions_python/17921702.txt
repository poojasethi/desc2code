def left_max(nums, n, k):
	# return the min value after the poorest get k coins.
	i, cnt = 0, 1
	while i + 1 < len(nums):
		if cnt * (nums[i + 1] - nums[i]) < k:
			k -= cnt * (nums[i + 1] - nums[i])
			i += 1
			cnt += 1
		else:
			return nums[i] + k // cnt
	return n


def right_min(nums, n, k):
	# return the max value after the richest lose k coins.
	i, cnt = n - 1, 1
	while i > 0:
		if cnt * (nums[i] - nums[i - 1]) < k:
			k -= cnt * (nums[i] - nums[i - 1])
			i -= 1
			cnt += 1
		else:
			return nums[i] - k // cnt
	return 0

if __name__ == "__main__":
	n, k = [int(t) for t in raw_input().split()]
	nums = [int(t) for t in raw_input().split()]
	nums.sort()
	left, right = left_max(nums, n, k), right_min(nums, n, k)
	# print left, right
	if left < right:
		print right - left
	else:
		if sum(nums) % n == 0:
			print 0
		else:
			print 1