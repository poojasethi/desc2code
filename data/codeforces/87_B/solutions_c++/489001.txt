#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <vector>
#include <map>
#include <iostream>
#define INF 1000000000
using namespace std;
map <string,int> M;
int eval(string A)
{
    if(M.find(A) == M.end())
			return -1 * INF;
		return M[A];
}
void TO(string A)
{
	int toadd = 0;
	for(;A.size()>=1 && A[0]=='&';A = A.substr(1))
		toadd--;
	for(;A.size()>=1 && A[A.size()-1]=='*';A = A.substr(0,A.size()-1))
		toadd++;
	int tot = eval(A) + toadd;
	if(tot < 0)
 		printf("errtype\n");
	else
	{
		printf("void");
		for(int i=0;i<tot;i++)
			printf("*");
		printf("\n");
	} 
}
void TD(string A, string B)
{
	int tot = 0;
	for(;A.size()>=1 && A[0]=='&';A = A.substr(1))
		tot--;
	for(;A.size()>=1 && A[A.size()-1]=='*';A = A.substr(0,A.size()-1))
		tot++;
	tot += eval(A);
	if(tot < 0)
		M[B] = -1 * INF;
	else
		M[B] = tot;
}
int main()
{
  M["void"] = 0;
  M["errtype"]= -1 * INF;
  int N;
  scanf("%d",&N);

  while(N--) {
    string op,A,B;
    cin>>op;
    if(op == "typedef")
    {
        cin>>A>>B;
        TD(A,B);
    }
    else
    {
        cin>>A;
        TO(A);
    }
  }
  return 0;
}
