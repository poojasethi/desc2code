#include <vector>
#include <map>
#include <cmath>
#include <string>
#include <cstring>
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <sstream>
#include <queue>

using namespace std;

map<string, string> M;

string resolve(string s){
	int am = 0, zv = 0;
	while (s[0] == '&'){
		am++;
		s = s.substr(1);
	}
	while (s[s.size()-1] == '*'){
		zv++;
		s = s.substr(0, s.size()-1);
	}
	if (M.find(s) == M.end()){
		return "errtype";
	} else {
		s = M[s];
	}
	while (s[s.size()-1] == '*'){
		zv++;
		s = s.substr(0, s.size()-1);
	}
	if (zv < am){
		return "errtype";
	} else {
		for (int i=0; i<zv - am; i++){
			s += '*';
		}
	}
	return s;
}

int main(){
	M["void"] = "void";
	int T;
	cin >> T;
	for (int i=0; i<T; i++){
		string s1, s2, s3;
		cin >> s1 >> s2;
		if (s1 == "typeof"){
			cout << resolve(s2) << endl;
		} else {
			cin >> s3;
			string result = resolve(s2);
			if (result != "errtype"){
				M[s3] = result;
			} else if (M.find(s3) != M.end()){
				M.erase(s3);
			}
		}
	}
	return 0;
}