#include <iostream>
#include <cstdio>
#include <string>
#include <vector>
#include <queue>
#include <map>
#include <algorithm>
#define REP(i,n) for(int i=0;i<int(n);++i)

using namespace std;

struct Sep
{
	int a,b;
	string s;
	Sep()
	{
		a = b = 0;
		s = "";
	}
};
Sep getSep(string s)
{
	Sep ans;
	REP(i,s.size())
	{
		if(s[i]=='&') ans.a++;
		else if(s[i]=='*') ans.b++;
		else ans.s+=s[i];
	}
	return ans;
}

string getString(int n)
{
	string s = "void";
	REP(i,n) s+='*';
	return s;
}
map<string,int> data;
int main()
{
	int n;
	string s;
	data["void"] = 0;
	cin>>n;
	while(n--)
	{
		cin>>s;
		if(s=="typeof")
		{
			cin>>s;
			Sep cnt = getSep(s);
			if(data.find(cnt.s)==data.end()) puts("errtype");
			else if(data[cnt.s]+cnt.b-cnt.a<0) puts("errtype");
			else puts(getString(data[cnt.s]+cnt.b-cnt.a).c_str());
		}
		else
		{
			cin>>s;
			Sep cnt = getSep(s);
			string st;
			cin>>st;
			if(data.find(cnt.s)==data.end())
			{
				data.erase(st);
			}
			else
			{
				int now = data[cnt.s];
				if(now+cnt.b-cnt.a<0) data.erase(st);
				else data[st] = now+cnt.b-cnt.a;
			}
		}
	}
	return 0;
}
