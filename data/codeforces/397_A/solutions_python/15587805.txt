def is_occupied(e, segments):
    for seg in segments:
        if e >= seg[0] and e < seg[1]:
            return True
    return False
def solve():
    n = input()
    segments = []
    mn = float("inf")
    mx = -float("inf")
    for i in range(n):
        s = map(int,raw_input().split())
        mn = min(s+[mn])
        mx = max(s+[mx])
        segments.append(s)
    first_seg = segments.pop(0)
    A = (mn)*[0]
    A += (mx-mn+1)*[0]
    for i in range(first_seg[0], first_seg[1]+1):
        if not is_occupied(i, segments):
            A[i] = 1
    count = 0
    st = first_seg[0]
    end = first_seg[1]
    i = st
    while i < end:
        if A[i] == 1:
            count += 1
        i+=1

    print count

solve()