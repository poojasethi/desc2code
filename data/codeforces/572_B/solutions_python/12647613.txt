from itertools   import *
from collections import *
from operator    import *
from bisect      import *
from fractions   import *

Ii = lambda: map(int, raw_input().split())
Is = lambda: raw_input().split()
ri = raw_input

n,s = Ii()
sell,buy = Counter(),Counter()
for on in xrange(n):
  d,p,q = raw_input().split()
  p,q = int(p),int(q)
  if d=='B':
    buy[p] += q
  else:
    sell[p] += q

sells = reversed(sorted(sell)[:min(s,len(sell))])
buys  = sorted(buy,reverse=True)[:min(s,len(buy))]
for k in sells:
  print 'S',k,sell[k]
for k in buys:
  print 'B',k,buy[k]