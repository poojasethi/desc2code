/* This answer is copied from used called ardent */
#include <iostream>
#include <vector>
#include <cmath>
#include <sstream>
#include <string>
#include <algorithm>
#include <queue>
#include <map>

using namespace std;

int main()
{   
    int v[51] = {0,25, 18, 15, 12, 10, 8, 6, 4, 2, 1};
    int race,players,i,j;   
    cin>>race;  
    vector<pair<vector<int>,string> > p;
    while(race--){      
        cin>>players;
        for(i=1;i<=players;i++){        
            string s;cin>>s;            
            for(j=0;j<p.size();j++) if(p[j].second==s) break; // find if exist          
            if(j==p.size()){
                vector<int> vec;vec.resize(51);
            p.push_back(make_pair(vec,s));
            }
            p[j].first[0]+=v[i];
            p[j].first[i]++;            
        }       
    }
        cout<<max_element(p.begin(),p.end())->second<<endl;
        for(int i=0;i<p.size();i++) swap(p[i].first[0],p[i].first[1]);      
        cout<<max_element(p.begin(),p.end())->second<<endl;             
        //system("pause");
    return 0;
}