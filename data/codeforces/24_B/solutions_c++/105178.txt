#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
using namespace std;

int points[] = {0, 25, 18, 15, 12, 10, 8, 6, 4, 2, 1};

typedef struct {
	int placed[51];
} score;

map<string, score> res;

int main(void)
{
	int t, n;
	cin >> t;
	for (int race = 1; race <= t; race++) {
		cin >> n;
		for (int i = 1; i <= n; ++i) {
			string driver;
			cin >> driver;
			if (i <= 10)
				res[driver].placed[0] += points[i];
			res[driver].placed[i]++;
		}
	}
	vector<pair<vector<int>, string> > st1, st2;
	for (map<string, score>::iterator it = res.begin(); it != res.end(); ++it) {
		vector<int> p;
		for (int i = 0; i <= 50; ++i)
			p.push_back(it->second.placed[i]);
		st1.push_back(make_pair(p, it->first));
		swap(p[0], p[1]);
		st2.push_back(make_pair(p, it->first));
	}
	sort(st1.begin(), st1.end());
	reverse(st1.begin(), st1.end());
	sort(st2.begin(), st2.end());
	reverse(st2.begin(), st2.end());
	cout << st1[0].second << endl;
	cout << st2[0].second << endl;

	return 0;
}
