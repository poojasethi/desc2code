#include <string>
#include <iostream>
#include <algorithm>
#include <map>
using namespace std;
const int Point[60]={0,25,18,15,12,10,8,6,4,2,1};
struct Count
{
	string name;
	int P[60];
}C[60];
map<string,Count> M;
int T,n;
inline bool Cmp(const Count& A,const Count& B)
{
	for (int i=0;i<60;i++)
	{
		if (A.P[i]<B.P[i]) return false;
		if (A.P[i]>B.P[i]) return true;
	}
	return false;
}
int main()
{
	cin>>T;
	while(T--)
	{
		cin>>n;
		string ss;
		for (int i=1;i<=n;i++)
		{
			cin>>ss;
			M[ss].P[0]+=Point[i];
			M[ss].P[i]++;
		}
	}
	n=0;
	for (map<string,Count>::iterator iter=M.begin();iter!=M.end();iter++)
	{
		C[++n]=(*iter).second;
		C[n].name=(*iter).first;
	}
	sort(C+1,C+n+1,Cmp);
	cout<<C[1].name<<endl;
	for (int i=1;i<=n;i++) swap(C[i].P[0],C[i].P[1]);
	sort(C+1,C+n+1,Cmp);
	cout<<C[1].name<<endl;
	return 0;
}
