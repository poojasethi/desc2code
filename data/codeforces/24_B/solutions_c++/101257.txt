#include<cstdio>
#include<string>
#include<map>
#include<iostream>
#include<algorithm>
using namespace std;

const int value[10]={25, 18, 15, 12, 10, 8, 6, 4, 2, 1};
struct node
{
	string name;
	int point,win[55];
} p[55];
map<string,int> hash;
int t,n;

bool cmp1(const node &a,const node &b)
{
	if (a.point>b.point) return 1;
	if (a.point<b.point) return 0;
	for (int i=0;i<50;i++)
	if (a.win[i]>b.win[i]) return 1;else
	if (a.win[i]<b.win[i]) return 0;
	return 1;
}

bool cmp2(const node &a,const node &b)
{
	if (a.win[0]>b.win[0]) return 1;
	if (a.win[0]<b.win[0]) return 0;
	if (a.point>b.point) return 1;
	if (a.point<b.point) return 0;
	for (int i=1;i<50;i++)
	if (a.win[i]>b.win[i]) return 1;else
	if (a.win[i]<b.win[i]) return 0;
	return 1;
}

int main()
{
	for (scanf("%d",&t);t--;)
	{
		int m;
		scanf("%d",&m);
		for (int i=0;i<m;i++)
		{
			string name;
			cin >> name;
			if (hash.count(name)==0) hash[name]=++n;
			int id=hash[name];
			if (i<10) p[id].point+=value[i];
			p[id].win[i]++;
			p[id].name=name;
		}
	}

	sort(p+1,p+1+n,cmp1);
	cout << p[1].name << endl;
	sort(p+1,p+1+n,cmp2);
	cout << p[1].name << endl;
}



