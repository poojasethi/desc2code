#include<iostream>
#include<map>
#include<string>
#include<algorithm>
#include<cstring>
using namespace std;
int Z,N,pt[60]={0},M=0;
string str;

struct man{
	string name;
	int point;
	int cnt[60];
}a[60];

bool cmp1(man a,man b){
	if (a.point != b.point) return a.point > b.point;
	int i = 1;
	while (a.cnt[i]==b.cnt[i]) ++i;
	return a.cnt[i] > b.cnt[i];
}

bool cmp2(man a,man b){
	if (a.cnt[1] != b.cnt[1]) return a.cnt[1] > b.cnt[1];
	if (a.point != b.point) return a.point > b.point;
	int i = 2;
	while (a.cnt[i]==b.cnt[i]) ++i;
	return a.cnt[i] > b.cnt[i];
}

int main(){
	pt[1] = 25;
	pt[2] = 18;
	pt[3] = 15;
	pt[4] = 12;
	pt[5] = 10;
	pt[6] = 8;
	pt[7] = 6;
	pt[8] = 4;
	pt[9] = 2;
	pt[10] = 1;
	cin >> Z;
	while (Z--){
		cin >> N;
		for (int i=1;i<=N;++i){
			cin >> str;
			int j = 0;
			
			while (j<M && a[j].name != str) ++j;
			if (j==M){
				a[M].name = str;
				a[M].point = 0;
				memset(a[M].cnt,0,sizeof(a[M].cnt));
				++M;
			}
			
			a[j].point += pt[i];
			a[j].cnt[i]++;
		}
	}
	
	sort(a,a+M,cmp1);
	cout << a[0].name<<endl;
	sort(a,a+M,cmp2);
	cout << a[0].name<<endl;

	return 0;
}
