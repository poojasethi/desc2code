#include <stdio.h>
#include <string>
#include <map>
#include <iostream>
#include <memory.h>
using namespace std;
struct node{
	int s,p[50];
	node(){
		s= 0;memset(p,0,sizeof(p));
	}
};
map<string,node> pp;
bool better1(node &a,node &b){
	if(a.s!=b.s)
		return a.s>b.s;
	for(int i=0;i<50;++i)
		if(a.p[i]!=b.p[i])
			return a.p[i]>b.p[i];
}
bool better2(node &a,node &b){
	if(a.p[0]!=b.p[0])
		return a.p[0]>b.p[0];
	return better1(a,b);
}
int score[10]= {25, 18, 15, 12, 10, 8, 6, 4, 2, 1};
int main(){
	int t,n;
	string s;
	map<string,node>::iterator it;
	cin>>t;
	for(int i=0;i<t;++i){
		cin>>n;
		for(int j=0;j<n;++j){
			cin>>s;
			if(j<10)
				pp[s].s += score[j];
			++pp[s].p[j];
		}
	}
	string x= pp.begin()->first, y= pp.begin()->first;
	for(it= pp.begin();it!=pp.end();++it){
		if(better1(it->second,pp[x]) ) x = it->first;
		if(better2(it->second,pp[y])) y= it->first;
	}
	cout<<x<<"\n"<<y<<endl;
}
