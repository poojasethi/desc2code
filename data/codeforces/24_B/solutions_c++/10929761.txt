#include<iostream>
#include<algorithm>
#include<cstring>
#include<string>
#include<map>
using namespace std;
struct ra
{
	int point;
	int posi[51];
};
string s,chap1,chap2;
map<string,ra> R;
int t,n; 
const int sc[10]={25,18,15,12,10,8,6,4,2,1};
bool cmp(ra r1,ra r2)
{
	if(r1.point!=r2.point)return r1.point<r2.point;
	for(int j=0;j<50;j++)
	    if(r1.posi[j]!=r2.posi[j])return r1.posi[j]<r2.posi[j];
	return false;
}
bool cmp_s(ra r1,ra r2)
{
	if(r1.posi[0]!=r2.posi[0])return r1.posi[0]<r2.posi[0];
	return cmp(r1,r2);
}
int main()
{
	cin>>t;
	while(t--)
	{
		cin>>n;
		for(int i=0;i<n;i++)
		{
			cin>>s;
			if(i<10)R[s].point +=sc[i];
			R[s].posi[i]++;
		}
	}
	chap1=R.begin()->first;
	chap2=R.begin()->first;
	for(map<string,ra>::iterator i=R.begin();i!=R.end();i++)
	{
		if(cmp(R[chap1],i->second))chap1=i->first;
		if(cmp_s(R[chap2],i->second))chap2=i->first;
	}
	cout<<chap1<<"\n"<<chap2;
	return 0;
}
