//F1 Championship
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <map>
using namespace std;
struct player
{
       short point;
       short cnt[50];
};
int p[50];
map<string,player> racer;
bool better1(player p1,player p2)
{
     if(p1.point!=p2.point)return p1.point>p2.point;
     for(int i=1;i<=50;i++)
       if(p1.cnt[i]!=p2.cnt[i])return p1.cnt[i]>p2.cnt[i];
}
bool better2(player p1,player p2)
{
     if(p1.cnt[1]!=p2.cnt[1])return p1.cnt[1]>p2.cnt[1];
     return better1(p1,p2);
}
int main()
{
    p[0]=25,p[1]=18,p[2]=15,p[3]=12,p[4]=10,p[5]=8,p[6]=6,p[7]=4,p[8]=2,p[9]=1;
    int t,n;
    cin>>t;
    while(t--)
    {
       cin>>n;
       for(int i=1;i<=n;i++)
       {
          string s;
          cin>>s;
          racer[s].point+=p[i-1];
          racer[s].cnt[i]++;
       }
    }
    string a1=racer.begin()->first,a2=racer.begin()->first;
    for(map<string,player>::iterator it=racer.begin();it!=racer.end();it++)
    {
       if(better1(it->second,racer[a1]))a1=it->first;
       if(better2(it->second,racer[a2]))a2=it->first;
    }
    cout<<a1<<endl<<a2;
    return 0;
}
