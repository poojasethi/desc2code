#include <stdio.h>
#include <iostream>
#include <map>
#include <string>
using namespace std;
struct node
{
    int s,p[60];
};
map <string,node> MAP;
bool better1(node &n,node &m)
{
    if (n.s!=m.s)
        return n.s>m.s;
    for (int i=1; i<=50; i++)
        if (n.p[i]!=m.p[i])
            return n.p[i]>m.p[i];
}
bool better2(node &n,node &m)
{
    if (n.p[1]!=m.p[1])
        return n.p[1]>m.p[1];
    return better1(n,m);
}
int main( )
{
    int m,n,l[11]= {0,25,18,15,12,10,8,6,4,2,1};
    string w,x,y;
    cin>>m;
    for (int k=1; k<=m; k++)
    {
        cin>>n;
        for (int i=1; i<=n; i++)
        {
            cin>>w;
            if (i<=10) MAP[w].s+=l[i];
            MAP[w].p[i]++;
        }
    }
    x=y=MAP.begin()->first;
    for (map<string,node>::iterator i=MAP.begin(); i!=MAP.end(); i++)
    {
        if (better1(i->second,MAP[x])) x=i->first;
        if (better2(i->second,MAP[y])) y=i->first;
    }
    cout<<x<<endl<<y<<endl;
    return 0;
}

	 		    	 						   	   			 				