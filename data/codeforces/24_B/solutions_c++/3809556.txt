#include<iostream>
#include<string>
#include<map>
#include<vector>
#include<algorithm>
#include<cstdlib>
#include<cstdio>
#include<cstring>
using namespace std;
#define cpla() if(a.pla!=b.pla)return a.pla>b.pla
#define cwin() for(int i=0;i<100;i++)if(a.win[i]!=b.win[i])return a.win[i]>b.win[i]
#define cwins() if(a.win[0]!=b.win[0])return a.win[0]>b.win[0]
struct racer{
	string str;
	int pla;
	int win[100];
};
int n;
int t;
map<string,racer> ma;
vector<racer> v;
const int sco[10]={25,18,15,12,10,8,6,4,2,1};
inline bool cmp(const racer&a,const racer&b){cpla();cwin();return 1;}
inline bool cmq(const racer&a,const racer&b){cwins();return cmp(a,b);}
int main()
{
	cin>>t;
	for(int j=0;j<t;j++)
	{
		cin>>n;
		cin.ignore();
		for(int i=0;i<n;i++)
		{
			string x;
			getline(cin,x);
			ma[x].str=x;
			if (i<10) ma[x].pla+=sco[i];
			ma[x].win[i]++;
		}
	}
	for(map<string,racer>::iterator it=ma.begin();it!=ma.end();it++)
	{
		v.push_back(it->second);
	}
	sort(v.begin(),v.end(),cmp);
	cout<<v.front().str<<endl;
	sort(v.begin(),v.end(),cmq);
	cout<<v.front().str<<endl;
}

