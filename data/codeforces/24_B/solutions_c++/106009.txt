#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <string>
#include <map>
#include <utility>

using namespace std;

const int pp[100] = {25, 18, 15, 12, 10, 8, 6, 4, 2, 1};

struct res {
	int points;
	int k[55];

	res() { points = 0; memset(k, 0, sizeof(k)); }
};

map<string, res> table;
map<string, res>::iterator it;

bool bigger1(const res & a, const res & b) {
	if (a.points != b.points)
		return (a.points>b.points);
	for (int i=0; i<51; ++i)
		if (a.k[i]!=b.k[i]) return a.k[i]>b.k[i];
	return false;
}

bool bigger2(const res & a, const res & b) {
	if (a.k[0]!=b.k[0])
		return (a.k[0]>b.k[0]);
	return bigger1(a, b);
}

int main() {
	int k; scanf("%d", &k);

	for (int i=0; i<k; ++i) {
		int n; scanf("%d", &n);
		for (int j=0; j<n; ++j) {
			string name; cin >> name;
			res & t = table[name];
			t.points += pp[j];
			t.k[j]++;
		}
	}

	pair<string, res> max1, max2;
	it = table.begin();
	max1 = max2 = *(it++);
	for ( ; it!=table.end(); ++it) {
		if (bigger1(it->second, max1.second))
			max1 = *it;
		
		if (bigger2(it->second, max2.second))
			max2 = *it;
	}

	cout << max1.first << "\n" << max2.first << "\n";
	return 0;
}

