#include <iostream>
#include <algorithm>
#include <map>
#include <vector>

using namespace std;

const int MAX_N = 50 + 10, score[MAX_N] = {25, 18, 15, 12, 10, 8, 6, 4, 2, 1};
map <string, int> sc, wins[MAX_N];
map <string, bool> exist;
vector <string> names;
bool second;

bool cmp(string x, string y)
{
	if (second)
	{
		if (wins[0][x] > wins[0][y])
			return true;
		if (wins[0][x] < wins[0][y])
			return false;
	}
	if (sc[x] > sc[y])
		return true;
	if (sc[x] < sc[y])
		return false;
	for (int i = 0; i < MAX_N - 10; i++)
	{
		if (wins[i][x] > wins[i][y])
			return true;
		if (wins[i][x] < wins[i][y])
			return false;
	}
	return true;
}

int main()
{
	int t;
	cin >> t;
	for (int q = 0; q < t; q++)
	{
		int n;
		cin >> n;
		for (int i = 0; i < n; i++)
		{
			string s;
			cin >> s;
			wins[i][s]++;
			sc[s] += score[i];
			if (!exist[s])
			{
				names.push_back(s);
				exist[s] = true;
			}
		}
	}
	sort(names.begin(), names.end(), cmp);
	cout << names[0] << endl;
	second = true;
	sort(names.begin(), names.end(), cmp);
	cout << names[0] << endl;
	return 0;
}
