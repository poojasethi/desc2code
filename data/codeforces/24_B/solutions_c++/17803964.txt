///	B : Coded by Choe Kwang

#include <bits/stdc++.h>
using namespace std;

int score[] = {0, 25, 18, 15, 12, 10, 8, 6, 4, 2, 1};

#define N 55
#define M 1010

int sco[M], a[M][N], m, n;
char s[N], name[M][N];
map <string, int> mp;
int cnt, id[M];

bool cmp1(int i, int j) {
	if (sco[i] != sco[j]) return sco[i] > sco[j];
	for (int k = 1; k <= 50; k ++) {
		if (a[i][k] != a[j][k]) return a[i][k] > a[j][k];
	}
}

bool cmp2(int i, int j) {
	if (a[i][1] != a[j][1]) return a[i][1] > a[j][1];
	if (sco[i] != sco[j]) return sco[i] > sco[j];
	for (int k = 2; k <= 50; k ++) {
		if (a[i][k] != a[j][k]) return a[i][k] > a[j][k];
	}
}

int main() {
//	freopen("b.in", "r", stdin);
	scanf("%d", &m);
	for (int i = 1; i <= m; i ++) {
		scanf("%d", &n);
		for (int i = 1; i <= n; i ++) {
			scanf("%s", s);
			if (!mp[s]) mp[s] = ++cnt, strcpy(name[cnt], s);
			a[mp[s]][i] ++;
			if (i <= 10) sco[mp[s]] += score[i];
		}
	}
	for (int i = 1; i <= cnt; i ++) id[i] = i;
	sort(id + 1, id + cnt + 1, cmp1);
	cout << name[id[1]] << endl;
	for (int i = 1; i <= cnt; i ++) id[i] = i;
	sort(id + 1, id + cnt + 1, cmp2);
	cout << name[id[1]] << endl;
	return 0;
}
