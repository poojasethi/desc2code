#include <iostream>
#include <string>
#include <map>
#include <memory.h>
using namespace std;
struct node{
    int p,arr[50];
    node(){
        p = 0,memset(arr,0,sizeof(arr));
    }
};
map<string,node>pp;
bool better1(node &a,node &b){
    if(a.p!=b.p)
        return a.p<b.p;
    for(int i=0;i<50;++i)
        if(a.arr[i]!=b.arr[i])
            return a.arr[i]<b.arr[i];
}
bool better2(node &a,node &b){
    if(a.arr[0]!=b.arr[0])
        return a.arr[0]<b.arr[0];
    return better1(a,b);
}
int score[10]={ 25, 18, 15, 12, 10, 8, 6, 4, 2, 1};
int main(){
    int t,n;
cin>>t;
    string s,x,y;
    for(int i=0;i<t;++i){
        cin>>n;
        for(int j=0;j<n;++j){
            cin>>s;
            if(j<10)
                pp[s].p+= score[j];
            ++pp[s].arr[j];
        }
    }
     y= pp.begin()->first;
     x= y;
    for(map<string,node>::iterator it = pp.begin();it!=pp.end();++it){
        if(better1(pp[x],it->second) ) x= it->first;
        if(better2(pp[y],it->second)) y= it->first;
    }
    cout<<x<<"\n"<<y<<endl;
}