#include <cstdio>
#include <cmath>
#include <cstring>
#include <map>
#include <string>
#include <iostream>
#include <algorithm>

using namespace std;

struct dr {
	string n;
	int pt;
	char w[60];
	dr() { pt = 0; for (int i = 0; i < 60; i++) w[i] = 1; w[50] = 0; }
};

bool cmp1(const dr &a, const dr &b) {
	if (a.w[0] == b.w[0]) {
		if (a.pt == b.pt)
			return strcmp(a.w, b.w) > 0;
		else
			return a.pt > b.pt;
	}
	return a.w[0] > b.w[0];
}

bool cmp2(const dr &a, const dr &b) {
	if (a.pt == b.pt)
		return strcmp(a.w, b.w) > 0;
	return a.pt > b.pt;
}

int main() {
	int t, n, k, di;
	dr v[55];
	map<string,int> m;
	int val[60] = {25, 18, 15, 12, 10, 8, 6, 4, 2, 1};
	for (int i = 10; i < 60; i++) val[i] = 0;
	scanf("%d", &t);
	di = 0;
	while (t--) {
		scanf("%d ", &n);
		for (k = 0; k < n; k++) {
			string s;
			cin >> s;
			if (m.find(s) == m.end()) { m[s] = di; v[di].n = s; di++; }
			v[m[s]].pt += val[k];
			v[m[s]].w[k]++;
		}
	}
	sort(v, v+di, cmp2);
	cout<<v[0].n<<endl;
	sort(v, v+di, cmp1);
	cout<<v[0].n << endl;
	return 0;
}
