#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

typedef struct p{
char name[51];
int score;
int wins[50];
}P;

char players[50][51];
int last;
p play[50];
int t,n;

bool comp1(p a,p b){
 int i;
 if(a.score>b.score) return true;
 if(b.score>a.score) return false;
 for(i=0;i<last;i++){
  if(a.wins[i]>b.wins[i]) return true;
  if(b.wins[i]>a.wins[i]) return false;
 }
 return false;
}

bool comp2(p a,p b){
 int i;
 if(a.wins[0]>b.wins[0]) return true;
 if(b.wins[0]>a.wins[0]) return false;
 return comp1(a,b);
}

int s[50];

int main(){
 int i,j;
 char now[51];

s[0]=25;s[1]=18;s[2]=15;s[3]=12;s[4]=10;s[5]=8;s[6]=6;s[7]=4;s[8]=2;s[9]=1;
for(i=10;i<50;i++) s[i]=0;

 scanf("%i",&t);
 while(t--){
  scanf("%i",&n);
  for(i=0;i<n;i++){
   scanf("%s",now);
   for(j=0;j<last;j++)
    if(strcmp(now,players[j])==0) break;
   if(j==last){
    strcpy(players[last++],now);
    strcpy(play[j].name,now);
   }
   play[j].score+=s[i];
   play[j].wins[i]++;
  }
 }
 sort(play,play+last,comp1);
 printf("%s\n",play[0].name);
 sort(play,play+last,comp2);
 printf("%s\n",play[0].name);

 return 0;
}
