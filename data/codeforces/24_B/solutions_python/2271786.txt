#!/usr/bin/python
import sys

SCORE = {1:25,
		 2:18,
		 3:15,
		 4:12,
		 5:10,
		 6:8,
		 7:6,
		 8:4,
		 9:2,
		 10:1}

for i in range (11, 51):
	SCORE[i] = 0

class Driver:
	def __init__(self, name):
		self.name  = name
		self.ranks = {}
		for i in range (1, 51):
			self.ranks[i] = 0
		self.score = 0
	
	def addRank(self, rank):
		self.ranks[rank] += 1
		self.score += SCORE[rank]

class Rule1:
	def compare(self, d1, d2):
		if d1.score > d2.score:
			return True
		elif d1.score < d2.score:
			return False
		else:
			for i in range(1, 51):
				if d1.ranks[i] > d2.ranks[i]:
					return True
				elif d1.ranks[i] < d2.ranks[i]:
					return False
		assert(False)
		return True

class Rule2:
	def compare(self, d1, d2):
		if d1.ranks[1] > d2.ranks[1]:
			return True
		elif d1.ranks[1] < d2.ranks[1]:
			return False
		elif d1.score > d2.score:
			return True
		elif d1.score < d2.score:
			return False
		else:
			for i in range(2, 51):
				if d1.ranks[i] > d2.ranks[i]:
					return True
				elif d1.ranks[i] < d2.ranks[i]:
					return False
		assert(False)
		return True

class ScoreBoard:
	def __init__(self):
		self.drivers = {}
	
	def addRank(self, driver, rank):
		if driver not in self.drivers:
			self.drivers[driver] = Driver(driver)
		self.drivers[driver].addRank(rank)
	
	def getChampion(self, rule):
		driversList = self.drivers.values()
		champion = driversList[0]
		for d in driversList[1:]:
			if rule.compare(d, champion):
				champion = d
		return champion.name

t = int(sys.stdin.readline())
scoreBoard = ScoreBoard()
for i in range(t):
	n = int(sys.stdin.readline())
	for j in range(1, n+1):
		driver = sys.stdin.readline().strip()
		scoreBoard.addRank(driver, j)
r1 = Rule1()
r2 = Rule2()
print scoreBoard.getChampion(r1)
print scoreBoard.getChampion(r2)
