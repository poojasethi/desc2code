#define N 1<<20
#include <bits/stdc++.h>
using namespace std;

char s[10];
vector<int> res;
int n,m,x,y,cur,l[N],r[N];
int al[N],bl[N],ar[N],br[N];

//vector<int> ans;

int dfs(int x,int mx)
{
	cur=x;
	if(al[x] && al[x]<=x)
		return 0;
	if(bl[x])
	{
		l[x]=x+1;
		if(!dfs(x+1,bl[x]))
			return 0;
	}
	res.push_back(x);
	if(ar[x] && ar[x]<=cur)
		return 0;
	if(br[x] || cur<mx)
	{
		r[x]=cur+1;
		return dfs(cur+1,max(mx,br[x]));
	}
	return 1;
}

//void dfs2(int x)
//{
//	if(l[x]) dfs2(l[x]);
//	res.push_back(x);
//	if(r[x]) dfs2(r[x]);
//}

int main()
{
	//freopen("in.txt","r",stdin);
	cin>>n>>m;
	for(int i=0;i<m;i++)
	{
		scanf("%d%d%s",&x,&y,s);
		if(s[0]=='L')
		{
			if(!al[x]) al[x]=y;
			else al[x]=min(al[x],y);
			bl[x]=max(bl[x],y);
		}
		else
		{
			if(!ar[x]) ar[x]=y;
			else ar[x]=min(ar[x],y);
			br[x]=max(br[x],y);
		}
	}
	if(dfs(1,n))
	{
//		dfs2(1);
		for(int i=0;i<n-1;i++)
			printf("%d ",res[i]);
		printf("%d\n",res[n-1]);
	}
	else
		puts("IMPOSSIBLE");
}
