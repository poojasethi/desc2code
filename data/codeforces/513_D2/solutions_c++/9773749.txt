#include<iostream>
#include<cstring>
#include<stdio.h>
#include<assert.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<queue>
#include<stack>
#include<map>
#include<set>
#define mp make_pair
#define pb push_back
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define F first
#define S second
#define ll long long
#define pp pair<int,int>
#define SS system("pause")
#define INF 200000000
using namespace std;
const int N=1000005;
int n,i,j,a[N],b[N],l[N],r[N],y;
int c,u,R[N];
bool ele;
char s[10];
vector<int> ans;

void go(int x,int y){
  //  if(u>n)return;
    if(u>=y)ele=1;

    x=MAX(x,R[u]);
    if(x>=y)ele=1;
    //cout<<u<<' '<<x<<' '<<y<<endl;SS;
    int o=u;
    if(l[o]>o){
        u++;
        go(l[o],MIN(y,r[o]));
    }

    ans.pb(o);

    if(u<x){
        u++;
        go(x,y);
    }
}

int main()
{scanf("%d%d",&n,&c);
 for(i=1;i<=n;i++)l[i]=R[i]=-INF,r[i]=INF;


 for(i=1;i<=c;i++){
    scanf("%d%d%s",&a[i],&b[i],&s);
    if(b[i]<=a[i])ele=1;
    if(s[0]=='L')
       l[a[i]]=MAX(l[a[i]],b[i]);
    else
       r[a[i]]=MIN(r[a[i]],b[i]),
       R[a[i]]=MAX(R[a[i]],b[i]);
 }


 for(i=1;i<=n;i++)
    if(r[i]<=l[i]){
        cout<<"IMPOSSIBLE"<<endl;
        return 0;
    }
 u=1;
 go(n,n+1);

 if(ele || ans.size()!=n){
    cout<<"IMPOSSIBLE"<<endl;
        return 0;
 }
 for(i=0;i<ans.size();i++)printf("%d ",ans[i]);
 printf("\n");
 return 0;
}
