/*
 * D.cpp
 *
 *  Created on: 11.02.2015
 *      Author: starwix
 */
#include <bits/stdc++.h>
using namespace std;

const int N = 1e6;
int n, c;
pair<int, int> t[N + 1], mn[N + 1], mx[N + 1];

void error() {
	puts("IMPOSSIBLE");
	exit(0);
}

int f(int l, int r) {
	int last = l;
	if (last + 1 <= mx[l].first) {
		last = f(l + 1, mx[l].first);
		t[l].first = l + 1;
	}
	if (last >= mn[l].second) {
		error();
	}

	if (last >= max(r, mx[l].second)) {
		return last;
	}

	t[l].second = last + 1;
	return f(last + 1, max(r, mx[l].second));
}

void ans(int x) {
	if (x == 0) {
		return;
	}
	ans(t[x].first);
	printf("%d ", x);
	ans(t[x].second);
}

int main() {
	scanf("%d%d", &n, &c);
	fill(mn, mn + n + 1, make_pair(INT_MAX, INT_MAX));
	for (int i = 0; i < c; i++) {
		int a, b;
		char d;
		scanf("%d%d %c%*s", &a, &b, &d);
		if (a >= b) {
			error();
		}
		if (d == 'L') {
			mn[a].first = min(mn[a].first, b);
			mx[a].first = max(mx[a].first, b);
		} else {
			mn[a].second = min(mn[a].second, b);
			mx[a].second = max(mx[a].second, b);
		}
	}
	f(1, n);
	ans(1);
}
