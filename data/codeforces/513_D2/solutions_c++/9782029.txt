#include <bits/stdc++.h> 

#define FOR(i, a, b) for(int i = a; i < b; ++i) 
#define FORR(i, n) FOR(i, 0, n) 
#define sz(v) int((v).size()) 
#define pb push_back 
#define all(e) (e).begin(), (e).end()
#define LSOne(S) (S & (-S)) // bit menos significativo

using namespace std;

#define ii pair<int,int>
#define ll long long

const int MAXN = 1000006;

int n, c;
int L[MAXN], R1[MAXN], R2[MAXN];

vector<int> ans;

bool dfs (int &v, int w) {
	int x = v;
	if (L[x]) {
		v++;
		if (!dfs (v, L[x])) return false;
		if (R1[x]&&v>=R1[x]) return false;
	}
	ans.pb (x);
	w = max(w,R2[x]);
	if (w>v) {
		v++;
		if (!dfs(v, w)) return false;
	}
	return true;
}

int main (){	
	while (cin>>n>>c) {
		memset (L, 0, sizeof L);
		memset (R1, 0, sizeof R1);
		memset (R2, 0, sizeof R2);
		ans.clear();
		bool ok = true;
		FORR (i, c) {
			int x, y;
			string s;
			cin>>x>>y>>s;
			if (x>=y) ok = false;
			if (s[0]=='L'){
				if (L[x]<y) L[x] = y;
			} else {
				if (R2[x]<y) R2[x] = y;
				if (R1[x]==0||R1[x]>y) R1[x] = y;
			}
		}		
		int v = 1;
		if (ok && dfs (v, n)) {
			FORR (i, n) cout << ans[i] << " ";
			cout << endl;
		} else {
			cout << "IMPOSSIBLE" << endl;
		}
	}
}