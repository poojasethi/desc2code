#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<vector>
#define MAXN 1000005
using namespace std ;
typedef long long LL ;

int N, M ;
vector<int> son[MAXN][2] ;
int stk[MAXN], top, vis[MAXN], in[MAXN], cnt ;

int Dfs(int x)
{
	int i, j, tmp = ++cnt ;
	if(son[tmp][0].size())
	{
		sort(son[tmp][0].begin(), son[tmp][0].end()) ;
		if(son[tmp][0].front() <= cnt || !Dfs(son[tmp][0].back())) return 0 ;
	}
	stk[++top] = tmp ;
	if(son[tmp][1].size())
	{
		sort(son[tmp][1].begin(), son[tmp][1].end()) ;
		if(son[tmp][1].front() <= cnt || !Dfs(max(x, son[tmp][1].back()))) return 0 ;
	}
	else if(x > cnt && !Dfs(x)) return 0 ;
	return 1 ;
}

int main()
{
	int i, j ;
	int fr, to ;
	char ss[20] ;
	scanf("%d %d", &N, &M) ;
	for(i = 1; i <= M; i ++)
	{
		scanf("%d %d %s", &fr, &to, ss) ;
		in[to] ++ ;
		son[fr][ss[0]=='R'].push_back(to) ;
	}
	if(Dfs(N))
	{
		for(i = 1; i <= N; i ++)
			printf("%d ", stk[i]) ;
	}
	else printf("IMPOSSIBLE") ;
	//system("pause") ;
	return 0 ;
}
