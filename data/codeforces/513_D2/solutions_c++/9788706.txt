#include <iostream>
#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <cmath>
#include <map>
#include <vector>
using namespace std;
#define x first
#define y second
#define pii pair<int,int>
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define FOREACH(it,x) for(typeof(x.begin())it=x.begin();it!=x.end();it++)
#define DBG(x) cerr<<#x<<"="<<x<<"\n";
#define ll long long
#define N 1000010

bool can;vi res;
int Lmin[N],Lmax[N],Rmin[N],Rmax[N];
int dfs(int a,int b)
{
	if(a>=b)return a;
	int f=a+1;
	if(Lmax[a]!=-1)f=dfs(a+1,Lmax[a]+1);
	if(!can)return -1;
	res.pb(a);
	if(Rmin[a]<f){can=false;return -1;}
	f=dfs(f,max(b,Rmax[a]+1));
	return f;
}
int main()
{
	int T,n,i,j,k,m;
	scanf("%d%d",&n,&m);
	int ok=1;
	for(i=0;i<n;i++)Lmax[i]=Rmax[i]=-1,Lmin[i]=Rmin[i]=n;
	while(m--)
	{
		int a,b;char c[10];
		scanf("%d%d%s",&a,&b,c);a--,b--;
		if(a>=b){ok=0;}
		if(c[0]=='L')Lmin[a]=min(Lmin[a],b),Lmax[a]=max(Lmax[a],b);
		else Rmin[a]=min(Rmin[a],b),Rmax[a]=max(Rmax[a],b);
	}
	if(!ok){puts("IMPOSSIBLE");return 0;}
	can=true;
	dfs(0,n);
	if(!can)puts("IMPOSSIBLE");
	else
	{
		for(i=0;i<res.size();i++)printf("%d ",res[i]+1);
		puts("");
	}
	return 0;
}