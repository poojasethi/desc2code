#!/usr/bin/python

from collections import deque

def ir():
    return int(raw_input())

def ia():
    line = raw_input()
    line = line.split()
    return map(int, line)

def hm2m(hs, ms):
    return hs * 60 + ms

a, ta = ia()
b, tb = ia()

hs, ms = map(int, raw_input().split(':'))
sim    = hm2m(hs, ms)

start = hm2m(5,   0)
end   = hm2m(11+12, 59)

end  -= start
sim  -= start

inf   = hm2m(100, 0)

def top(b): return b[-1]

ans  = 0 
srun = False
bus = deque()
for t in range(inf):
    if t == sim + ta: break

    if bus and top(bus)==t           : bus.pop()
    if t == sim: srun = True; ans += len(bus)
    
    if t <= end and t % b == 0       :
        if srun: ans += 1
        bus.appendleft(t + tb) # start a bus

print ans    
