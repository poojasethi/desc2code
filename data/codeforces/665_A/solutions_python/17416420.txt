from Queue import * # Queue, LifoQueue, PriorityQueue
from bisect import * #bisect, insort
from collections import * #deque, Counter,OrderedDict,defaultdict
#set([]) 
import math
import copy
import itertools
import string
import sys
import datetime
myread = lambda : map(int,raw_input().split())
def solver():
    A,Ta = myread()
    B, Tb = myread()
    h, m = map(int, raw_input().split(':'))
    d = datetime.datetime(year = 2001, month = 1, day = 1, hour=h, minute=m)
    fin = datetime.datetime(year = 2001, month = 1, day = 2, hour=0, minute=0)
    db = datetime.datetime(year = 2001, month = 1, day = 1, hour=5, minute=0)
    while db + datetime.timedelta(minutes=Tb) <= d:
        db = db + datetime.timedelta(minutes=B)
    #print db
    #print d
    da = d + datetime.timedelta(minutes=Ta)
    ans = 0
    while da > db and db < fin:
        ans += 1
        db = db + datetime.timedelta(minutes=B)
        #print db
    print ans
    


if __name__ == "__main__":
    solver()
    
