#include <algorithm>
#include <bitset>
#include <iostream>
#include <iterator>
#include <vector>

int main() {
  using namespace std;
  const int kMaxSum = 18003010;
  bitset<kMaxSum> p;
  p[1] = 1;
  for (int i = 2; i * i < kMaxSum; ++i)
    if (!p[i])
      for (int j = i * i; j < kMaxSum; j += i)
        p[j] = 1;
  int n;
  cin >> n;
  vector<int> color(n + 1, 1);
  int sum = n * (n + 1) / 2;
  if (n > 2) {
    if ((sum & 1) && !p[sum - 2]) color[2] = 2;
    else {
      int nxt = 2;
      if (sum & 1) { ++nxt; sum -= 3; color[3] = 2; }
      for (int i = 1; i <= n; ++i)
        if (color[i] == 1 && !p[i] && !p[sum - i]) {
          color[i] = nxt;
          break;
        }
    }
  }
  copy(color.begin() + 1, color.end(), ostream_iterator<int>(cout, " "));
  cout << endl;
  return 0;
}
