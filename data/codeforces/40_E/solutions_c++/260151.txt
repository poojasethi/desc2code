#include <iostream>

using namespace std;

const int maxk = 1000 + 5;

int n, m, k, p;
int x[maxk], y[maxk], c[maxk];
int t[maxk], s[maxk];
long long pow2[maxk];
long long ans, cnt;

int main()
{
	cin >> n >> m;
	cin >> k;
	for (int i = 0; i < k; i++)
		cin >> x[i] >> y[i] >> c[i], x[i]--, y[i]--, c[i] = (-c[i] + 1) / 2;
	cin >> p;

	pow2[0] = 1;
	for (int i = 1; i < maxk; i++)
		pow2[i] = (pow2[i-1] * 2) % p;

	if (n > m)
	{
		swap (n, m);
		for (int i = 0; i < k; i++)
			swap (x[i], y[i]);
	}
	for (int i = 0; i < k; i++)
		t[y[i]]++, s[y[i]] += c[i];

	ans = 1;
	cnt = 0;
	for (int i = 0; i < m; i++)
	{
		if (t[i] == n)
		{
			if (s[i] % 2 == 0)
				ans = 0;
			continue;
		}
		if (t[i] > 0)
			ans = (ans * pow2[n - t[i] - 1]) % p;
		else
			cnt++;
	}
	for (int i = 0; i < cnt-1; i++)
		ans = (ans * pow2[n-1]) % p;

	if ((n + m) % 2 == 1)
		ans = 0;
	cout << ans << endl;
}

