//By momo
#include<set>
#include<cstdio>
#include<algorithm>
#define F first
#define S second
#define N 200010
#define MP make_pair
#define INF 999999999
using namespace std;
typedef pair<int,int> PII;
typedef pair<int,PII> PIP;

set<PIP> s;
int n, t, L[N], R[N], prk[1000010];

PIP MK(int l, int r){
	if(l == 0 && r == n+1) return MP(-INF,MP(1,n+1));
	if(l == 0) return MP(-(r-1), MP(1, r));
	if(r == n+1) return MP(-(n-l), MP(n, n+1));
	return MP(-(r-l)/2, MP((l+r)/2, r));
}

int main(){
	scanf("%d%d", &n, &t);
	s.insert(MK(0,n+1));
	L[n+1] = 0; R[0] = n+1;
	while( t-- ){
		int ty, id;
		scanf("%d%d", &ty, &id);
		if(ty == 1){
			PII bst = s.begin()->S;
			s.erase(s.begin());
			int r = bst.S, m = bst.F, l = L[r];
			printf("%d\n", prk[id]=m);
			L[m] = l; R[m] = r;
			L[r] = m; R[l] = m;
			s.insert(MK(l,m));
			s.insert(MK(m,r));
		}
		else{
			int m = prk[id], l = L[m], r = R[m];
			L[r] = l; R[l] = r;
			s.erase(MK(l,m));
			s.erase(MK(m,r));
			s.insert(MK(l,r));
		}
	}
}