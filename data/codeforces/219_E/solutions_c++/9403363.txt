#include <bits/stdc++.h>
using namespace std;
struct node
{int sz,a,b;};
bool operator <(node x,node y)
{
    if(x.sz!=y.sz)  return x.sz>y.sz;
    if(x.a!=y.a)    return x.a<y.a;
    return x.b<y.b;
}
set<node> Q;
node x;
int n,m,t,id,place[1000010],in,pos;
pair<int,int>arr[1000010];

node Make_Node(int a,int b)
{
   int p=(a+b)/2;
   node ret;
   ret.a=a, ret.b=b;
   if(ret.b==n+1 || ret.a==0) ret.sz=ret.b-ret.a-1;
   else ret.sz=p-ret.a;
   return ret;
}

void Add(int a,int b)
{
   x=Make_Node(a,b);
   if(x.sz!=0)
      Q.insert(x);
}

void Remove(int a, int b)
{
    x=Make_Node(a,b);///delete X:pos
    Q.erase(x);
}

void In(int Start,int End)///X:Y ==> X:pos + pos:Y
{
    if(Start==0) pos=1;
    else if(End==n+1) pos=n;
    else pos=(Start+End)/2;
    place[id]=pos;

    Remove(Start,End);
    Add(Start, pos);
    Add(pos, End);

    arr[pos].first=Start, arr[pos].second=End;
    arr[Start].second=pos, arr[End].first=pos;

    printf("%d\n",pos);
}

void Out()/// X:pos + Y:POS ==> X:Y
{
    pos=place[id];
    int X=arr[pos].first, Y=arr[pos].second;

    Remove(X,pos);
    Remove(pos,Y);
    Add(arr[pos].first, arr[pos].second);

    arr[X].second=Y, arr[Y].first=X;
}

void First()
{
   arr[1].first=0, arr[1].second=n+1;
   arr[n].first=0, arr[n].second=n+1;
   Add(0,n+1);
}

int main()
{
   //freopen("r.txt","r",stdin);
   scanf("%d %d",&n,&m);
   First();
   for(int i=0;i<m;i++)
   {
       scanf("%d %d",&t,&id);
       if(t==1)
           In( (*Q.begin()).a, (*Q.begin()).b );
       else
           Out();
   }

    return 0;
}
