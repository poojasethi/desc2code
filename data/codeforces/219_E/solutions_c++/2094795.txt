/********************************************
Author: Yinthewind
Mon Sep 3 15:31:14 CST 2012
********************************************/
#include<cstdio>
#include<iostream>
#include<cstring>
#include<queue>
#include<set>
using namespace std;
#define dd double
#define ll long long
#define MAXN 1111111

class seg
{
	public:
		int l,r;
		seg init(int a,int b) {
			l=a;r=b;
			return *this;
		}
}t;

priority_queue<seg> q;
int N,M,p[MAXN];
set<int> s;

int cal(seg a)
{
	if(a.l==1) return a.r-1;
	else if(a.r==N) return N-a.l;
	else return (a.r-a.l)>>1;
}
bool operator<(seg a,seg b) {
	if(cal(a)!=cal(b)) return cal(a)<cal(b);
	return a.l>b.l;
}
set<int>::iterator next(int x)
{
	set<int>::iterator it=s.find(x);
	it++;
	return it;
}
set<int>::iterator prev(int x)
{
	set<int>::iterator it=s.find(x);
	it--;
	return it;
}
int main()
{
	cin>>N>>M;
	q.push(t.init(1,N));
	s.insert(0);
	s.insert(N+1);
	for(int i=1;i<=M;i++)
	{
		int op,n;
		scanf("%d%d",&op,&n);
		if(op==1)
		{
			for(t=q.top();*s.lower_bound(t.l)<=t.r;q.pop(),t=q.top());
			q.pop();
			//cout<<"*"<<t.l<<" "<<t.r<<endl;
			if(t.l==1) p[n]=1;
			else if(t.r==N) p[n]=N;
			else p[n]=(t.l+t.r)>>1;

			printf("%d\n",p[n]);
			s.insert(p[n]);
			q.push(t.init(*prev(p[n])+1,p[n]-1));
			q.push(t.init(p[n]+1,*next(p[n])-1));
		}
		else
		{
			q.push(t.init(*prev(p[n])+1,*next(p[n])-1));
			s.erase(p[n]);
		}
	}
	return 0;
}
