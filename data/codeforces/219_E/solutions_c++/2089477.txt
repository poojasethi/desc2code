#include<cstdio>
#include<algorithm>
#include<set>
using namespace std;
#define FOR(i,j,k) for(i=j;i<=k;i++)
#define MK make_pair
typedef pair<int, int> PII;
set<PII> park;
set<int> car;
int n,m,loc[1000006];

PII get(int l,int r)
{
    if(l==1)return MK(-r,1);
    if(r==n)return MK(-(n-l+1),n);
    return MK(-(r-l)/2-1,(r+l)/2);
}

int main()
{
    scanf("%d%d",&n,&m);
    park.insert(get(1,n));
    int i,op,id,tq,l,r;
    set<int>::iterator t1,t2;
    FOR(i,1,m)
    {
        scanf("%d%d",&op,&id);
        if(op==1)
        {
            tq=park.begin()->second;
            loc[id]=tq;
            park.erase(park.begin());
            t1=car.lower_bound(tq);
            t2=car.upper_bound(tq);
            if(t1==car.begin())l=1;else l=(*(--t1))+1;
            if(t2==car.end())r=n;else r=(*t2)-1;
            if(l<tq)park.insert(get(l,tq-1));
            if(tq<r)park.insert(get(tq+1,r));
            car.insert(tq);
            printf("%d\n",tq);
        }else
        {
            tq=loc[id];
            loc[id]=0;
            t1=car.lower_bound(tq);
            t2=car.upper_bound(tq);
            if(t1==car.begin())l=1;else l=(*(--t1))+1;
            if(t2==car.end())r=n;else r=(*t2)-1;
            car.erase(tq);
            if(l<tq)park.erase(get(l,tq-1));
            if(tq<r)park.erase(get(tq+1,r));
            if(l<=r)park.insert(get(l,r));
        }
    }
}
