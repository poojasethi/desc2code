#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cmath>
#include<ctime>
#include<algorithm>
#include<vector>
#include<map>
#include<queue>
#include<set>

#define N 200005
#define LL __int64
#define INF (1<<30)
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)>(b)?(b):(a))
#define EPS 1e-8
#define MOD 1000000007
#define L(x) (x*2+1)
#define R(x) (x*2+2)
#define MP make_pair
#define PI pair<int,int>
#define PII pair<int,PI>
using namespace std;
set<PII> se;
int L[N],R[N],id[N*10];
int n,m;
PII find(int l,int r)
{
	if(l==0&&r==n+1)
		return MP(-INF,MP(1,r));
	if(l==0)
		return MP(-r+1,MP(1,r));
	if(r==n+1)
		return MP(l-n,MP(n,r));
	return MP((l-r)/2,MP((r+l)/2,r));
}
void solve()
{
	int i,j,k,l,r;
	PI p;
	L[n+1]=0;
	R[0]=n+1;
	se.insert(MP(-INF,MP(1,n+1)));
	while(m--)
	{
		scanf("%d%d",&i,&j);
		if(i==1)
		{
			p=se.begin()->second;
			se.erase(se.begin());
			k=p.first;
			r=p.second;
			l=L[r];
			R[l]=k;
			L[r]=k;
			L[k]=l;
			R[k]=r;
			se.erase(find(l,r));
			se.insert(find(l,k));
			se.insert(find(k,r));
			printf("%d\n",k);
			id[j]=k;
		}
		else
		{
			k=id[j];
			l=L[k];
			r=R[k];
			R[l]=r;
			L[r]=l;
			se.erase(find(l,k));
			se.erase(find(k,r));
			se.insert(find(l,r));
		}
	}
}
int main()
{
	scanf("%d%d",&n,&m);
	solve();
	return 0;
}