#include <cstdio>
#include <set>
#include <map>
#include <queue>

#define st first
#define nd second
#define MAXN 200000

using namespace std;

typedef pair<int,int> ii;

int n,m;

struct node
{
	int x,y,k,l;
};

bool operator <(node a,node b)
{
	if(a.l != b.l) return a.l < b.l;
	return a.k > b.k;
}

priority_queue <node> q;

int pos[1000001];

set <int> st;
map <ii,bool> used;

void f(node &t)
{
	if(t.x && t.y != n+1)
	{
		t.k=(t.x+t.y)/2;
		t.l=(t.y-t.x)/2;
	}
	else
	{
		if(!t.x)
		{
			t.k=1;
			t.l=t.y-1;
		}
		else
		{
			t.k=n;
			t.l=n-t.x;
		}
	}
}
void add(int a)
{
	node t,t1,t2;
	do
	{
		t=q.top(); q.pop();
	}while(!used[make_pair(t.x,t.y)]);
		
	used[make_pair(t.x,t.y)]=0;
	
	
	st.insert(t.k);
	
	t1.x=t.x; t1.y=t.k;
	t2.x=t.k; t2.y=t.y;
	
	used[make_pair(t1.x,t1.y)]=1;
	used[make_pair(t2.x,t2.y)]=1;
	
	f(t1);
	f(t2);
	
	pos[a]=t.k;
	
	printf("%d\n",pos[a]);
	/*
	printf("%d %d %d %d\n",t.x,t.y,t.k,t.l);
	
	printf("%d %d %d %d\n",t1.x,t1.y,t1.k,t1.l);
	printf("%d %d %d %d\n\n",t2.x,t2.y,t2.k,t2.l);
	*/
	
	q.push(t1);
	q.push(t2);
}

void rem(int a)
{
	node t;
	set <int> :: iterator it,it1,it2;
	
	it=st.find(a);
	it1=it;
	it2=it;
	
	it1--;
	it2++;
	
	//printf("%d %d %d\n",*it1,*it,*it2);
	
	st.erase(it);
	
	used[make_pair(*it1,*it)]=0;
	used[make_pair(*it,*it2)]=0;
	used[make_pair(*it1,*it2)]=1;
	
	t.x=*it1; t.y=*it2;
	f(t);
	q.push(t);
	
}

int main()
{	
	int a,b;
	scanf(" %d %d",&n,&m);
	
	node t;
	
	t.x=0; t.y=n+1; f(t);
	used[make_pair(0,n+1)]=1;
	q.push(t);
	st.insert(0); st.insert(n+1);
	
	while(m--)
	{
		scanf(" %d %d",&b,&a);
		if(b==1) add(a);
		if(b==2)
		{
			//printf("%d:\n",a);
			rem(pos[a]);
		}
	}
	return 0;
}
