#include <cstdio>
#include <utility>
#include <set>

using namespace std;

typedef pair<int, int> PII;
typedef pair<int, PII> PPI;

const int MAXN = 200005;

set<PPI> gao;
int N, M, now[MAXN * 10], L[MAXN], R[MAXN];

PPI Inv(int l, int r){
	if(l == 0 && r == N + 1) return make_pair(-99999999, PII(0, 1));
	if(l == 0) return make_pair(-(r - 1), PII(0, 1));
	if(r == N + 1) return make_pair(-(N - l), PII(l, N));
	return make_pair(-(r - l) / 2, PII(l, l + (r - l) / 2));
}

int main(){
	scanf("%d%d", &N, &M);
	gao.insert(Inv(0, N + 1));
	R[0] = N + 1; L[N + 1] = 0;
	for(int i = 0; i < M; ++i){
		int x, y;
		scanf("%d%d", &x, &y);
		if(x == 1){
			PPI head = *gao.begin();
			PII tmp = head.second;
			int l = tmp.first;
			int m = tmp.second;
			int r = R[l];
			printf("%d\n", m);
			gao.erase(head);
			now[y] = m;
			L[m] = l; L[r] = m;
			R[l] = m; R[m] = r;
			gao.insert(Inv(l, m));
			gao.insert(Inv(m, r));
		}else{
			int m = now[y];
			int l = L[m]; 
			int r = R[m];
			now[y] = 0;
			gao.erase(Inv(l, m));
			gao.erase(Inv(m, r));
			L[r] = l; R[l] = r;
			gao.insert(Inv(l, r));
		}
	}
}
