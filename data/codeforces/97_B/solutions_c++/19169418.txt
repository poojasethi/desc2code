#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

#define f first
#define s second

const int MAXN = 10 * 1000 + 10;

vector <pair <int, int> > vec;
int n;

void F(int s, int e)
{
	if(e - s <= 1)
		return;

	int mid = (e + s) / 2;
	F(s, mid);
	F(mid + 1, e);

	int x = vec[mid].f;
	int sz = vec.size();

	for(int i = s; i < e; i ++)
		vec.push_back(make_pair(x, vec[i].s));

}

int main()
{
	cin>> n;

	for(int i = 0; i < n; i ++)
	{	
		int a, b;
		cin>> a >> b;
		vec.push_back(make_pair(a, b));
	}

	sort(vec.begin(), vec.end());

	F(0, n);

	sort(vec.begin(), vec.end());
	vector <pair <int, int> >::iterator it;
	it = unique(vec.begin(), vec.end());
	vec.resize(distance(vec.begin(), it));

	cout<< vec.size() << endl;

	for(int i = 0; i < vec.size(); i ++)
		cout<< vec[i].f << " " << vec[i].s << endl;

}