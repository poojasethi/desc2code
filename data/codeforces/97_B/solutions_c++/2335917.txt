#include <iostream>
#include <algorithm>
#include <set>
using namespace std;

typedef pair<int, int> Point;
const int MAX = 10000;

set<Point> st;
Point input[MAX];
int n;

void solve(int start, int end);

int main()
{
	ios_base::sync_with_stdio(false);

	cin >> n;

	int a, b;
	for (int i = 0; i < n; i++)
	{
		cin >> a >> b;
		input[i] = make_pair(a,b);
		st.insert(input[i]);
	}

	sort(input, input+n);

	solve(0, n);

	cout << st.size() << endl;
	for (set<Point>::iterator it = st.begin(); it != st.end(); it++)
		cout << it->first << ' ' << it->second << endl;

	return 0;
}

void solve(int start, int end)
{
	if (end-start < 2)
		return;

	int mid = (start+end)/2;
	int x = input[mid].first;

	solve(start, mid);
	solve(mid+1, end);

	for (int i = start; i < end; i++)
		st.insert(make_pair(x, input[i].second));
}
