#include <set>
#include <cstdio>
#include <iostream>
#include <algorithm>

#define SZ(x) (( int(x.size()) ))

using namespace std;

const int maxn = 10*1000 + 100;

int n;
pair <int, int> p[maxn];
set < pair<int, int> > super_set;
set < pair<int, int> >::iterator it;

void build(int l, int r)
{
	int mid = (l+r) >> 1, xmid = p[mid].first;
	for(int i = l; i <= r; i++)
		super_set.insert(make_pair(xmid, p[i].second));
	if(l < mid)
		build(l, mid-1);
	if(mid < r)
		build(mid+1, r);
	return;
}

int main()
{
    ios::sync_with_stdio(false);
	cin >> n;
	for(int i = 0; i < n; i++){
		cin >> p[i].first >> p[i].second;
		super_set.insert(p[i]);
	}
	sort(p, p+n);
	build(0, n-1);
	cout << SZ(super_set) << endl;

	for(it = super_set.begin(); it != super_set.end(); it++)
		cout << it->first << " " << it->second << endl;
	return 0;
}
					 	       	 	   			 	 		  	