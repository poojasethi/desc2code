

stdin_flag=1
if not stdin_flag:
  read_line_index=0
  testcasefilename="test.txt"
  Stestcase=open(testcasefilename).read()
  read_line_datas=Stestcase.split("\n")


if stdin_flag:
  casedata=open("input.txt")
  outdata=open("output.txt","wb")


def puts(s):
  if not stdin_flag:
    print s
  else:
    outdata.write(str(s)+"\n")

#####################################
######################################

def read_line():
  global read_line_index
  if stdin_flag:
    return casedata.readline().rstrip("\n")
    #return raw_input()
  else:
    s=read_line_datas[read_line_index]
    read_line_index+=1
    return s

def answer():
  if stdin_flag:
    return solve()
  else:
    while read_line_proceed():
      solve()
      

def read_line_proceed():
  global read_line_index
  print"##################"
  while 1:
    if read_line_index>= len (read_line_datas ):
      return False
    if read_line_datas[read_line_index]=="%%%":
      read_line_index+=1
      return True
    read_line_index+=1


def readint():
  return int (read_line() )


def readints():
  return map(int, read_line().split(" "))

def reads():
  return read_line()

###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################
###############################################################

def compute(n,x,data):
  m=[]
  for i,val in enumerate(data):
    m.append((n-i)*val)
  dd=sorted(m)
  s=0
  for i,v in enumerate(dd):
    s+=v
    if s>x:
      puts( i)
      return
  else:
    puts(n)

def solve():
  n,x=readints()
  data=readints()
  compute(n,x,data)

def test():
  pass

test()
answer()
