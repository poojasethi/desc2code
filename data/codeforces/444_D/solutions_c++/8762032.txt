#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<time.h>
#include<string>
#define cl(a,b)	memset(a,b,sizeof(a))
#define max(x,y) ((x)>(y)?(x):(y))
#define min(x,y) ((x)<(y)?(x):(y))
#define REP(i,n) for(int i=0;i<n;++i)
#define REP1(i,a,b) for(int i=a;i<=b;++i)
#define REP2(i,a,b) for(int i=a;i>=b;--i)
#define MP make_pair
#define P pair<int,int>
#define LL long long
#define ULL unsigned long long
#define X first
#define Y second
#define MAXN 100050
#define lson i<<1
#define rson i<<1|1
#define MOD 1000000007
using namespace std;
map<string,int>mp;
map<P,int>ans;
vector<int>e[MAXN*4];
char s[MAXN];
int main()
{
	scanf(" %s",s);
	int n=strlen(s);
	int cid=0;
	for(int i=0;i<n;++i)
	{
		string now="";
		for(int j=i;j<i+4&&j<n;++j)
		{
			now+=s[j];
			if(mp.find(now)==mp.end())
				mp[now]=cid++;
			e[mp[now]].push_back(i);
		}
	}

	int m;
	scanf("%d",&m);
	while(m--)
	{
		string a,b;
		cin>>a>>b;
		if(mp.find(a)==mp.end()||mp.find(b)==mp.end())
		{
			puts("-1");
			continue;
		}
		int l1=a.size(),l2=b.size();
		int x=mp[a],y=mp[b];
		if(x>y){
			swap(x,y);
			swap(l1,l2);
		}
		if(ans.find(MP(x,y))!=ans.end())
			printf("%d\n",ans[MP(x,y)]);
		else
		{
			int res=n;
			int l,r;
			l=0;r=0;
//			printf("%d %d\n",x,y);
			while(l<e[x].size()&&r<e[y].size()){
				int tmp=max(e[x][l]+l1,e[y][r]+l2)-min(e[x][l],e[y][r]);
				if(tmp<res)res=tmp;
//				printf("%d %d %d\n",e[x][l],e[y][r],tmp);
				if(e[x][l]<e[y][r])l++;
				else
					r++;
			}
			printf("%d\n",res);
			ans[MP(x,y)]=res;
		}
	}
}
