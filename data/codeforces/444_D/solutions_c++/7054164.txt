//By LH 
#include <iostream>
#include <string>
#include <map>
#include <vector>
#include <algorithm>
using namespace std;

const int INF = 1000000;

map<string, vector<int> > occ;
map<pair<string, string>, int> ans;
string s;

int main(){
	cin >> s;
	int l = s.size();
	for(int i = 0; i < l; i++){
		string tmp("");
		for(int j = 0; j < 4 && i + j < l; j++){
			tmp += s[i + j];
			occ[tmp].push_back(i);
		}
	}

	int q;
	cin >> q;
	while(q--){
		string a, b;
		cin >> a >> b;
		if(ans[make_pair(a, b)]){
			cout << ans[make_pair(a, b)] << endl;
			continue;
		}
		vector<int> va(occ[a]), vb(occ[b]);
		if(va.empty() || vb.empty()){
			ans[make_pair(a, b)] = -1;
			cout << "-1" << endl;
			continue;
		}
		int Ans = INF;
		vector<int>::iterator ia = va.begin(), ib = vb.begin();
		while(ia != va.end() && ib != vb.end()){
			Ans = min(Ans, int(max(a.size() + *ia, b.size() + *ib)) - min(*ia, *ib));
			if(*ia < *ib) ia++;
			else ib++;
		}
		cout << Ans << endl;
		ans[make_pair(a, b)] = Ans;
	}

	return 0;
}