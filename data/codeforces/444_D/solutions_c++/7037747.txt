#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
const int N = 550005;
char s[N];
vector <int> a[N];
map <pair <int , int> , int> mymap;
int main(){
#ifndef ONLINE_JUDGE
    freopen ("input.txt" , "r" , stdin);
    // freopen ("output.txt" , "w" , stdout);
#endif
    scanf ("%s" , s);
    for (int i = 0 ; s[i] ; i ++) {
        int hash = 0;
        for (int j = 0 ; j < 4 && s[i + j] ; j ++) {
            hash = hash * 27 + s[i + j] - 'a' + 1;
            a[hash].push_back (i);
        }
    }
    int q;scanf ("%d" , &q);
    while (q --) {
        char s1[10] , s2[10];
        scanf ("%s %s" , s1 , s2);
        int h1 = 0 , h2 = 0;
        for (int i = 0 ; s1[i] ; i ++)
            h1 = h1 * 27 + s1[i] - 'a' + 1;
        for (int i = 0 ; s2[i] ; i ++)
            h2 = h2 * 27 + s2[i] - 'a' + 1;
        if (a[h1].size () == 0 || a[h2].size () == 0) {
            puts ("-1");
            continue;
        }
        if (a[h1].size () > a[h2].size ()) {
            swap (h1 , h2);
            swap (s1 , s2);
        }
        if (mymap.find (make_pair (h1 , h2)) != mymap.end ()) {
            printf ("%d\n" , mymap[make_pair (h1 , h2)]);
            continue;
        }
        int ans = 1 << 26;
        for (int i = 0 ; i < a[h1].size () ; i ++) {
            int p = lower_bound (a[h2].begin () , a[h2].end () , a[h1][i]) - a[h2].begin ();
            for (int j = p - 1 ; j <= p + 1 ; j ++) {
                if (j < 0 || j >= a[h2].size ()) continue;
                int l1 = a[h1][i] , r1 = l1 + strlen (s1) - 1;
                int l2 = a[h2][j] , r2 = l2 + strlen (s2) - 1;
                ans = min (ans , max (r2 , r1) - min (l1 , l2) + 1);
            }
        }
        mymap[make_pair (h1 , h2)] = ans;
        printf ("%d\n" , ans);
    }
    return 0;
}