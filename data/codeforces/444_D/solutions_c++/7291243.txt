#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>

using namespace std;

typedef pair<int, int> PP;
typedef pair<string, string> SS;
typedef long long LL;
#define pb push_back
#define fr first
#define sc second

map<SS, int> ans;
map<string, vector<int> > m;

int main() {
	#ifdef _TEST_
	freopen("input.txt", "r", stdin);
	//freopen("out.txt", "w", stdout);
	#endif
	string s;
	cin >> s;
	int n = s.length();
	for (int i = 0; i < n; i ++){
		string tmp = "";
		for (int j = i; j < i + 4 && j < n; j ++)
			tmp += s[j], m[tmp].pb(i);
	}
	int k; cin >> k;
	for (int i = 0; i < k; i ++){
		string a, b; cin >> a >> b;
		if (ans[SS(a, b)]) {
			cout << ans[SS(a, b)] << endl;
			continue;
		}
		vector<int> va(m[a]), vb(m[b]);
		if (va.empty() || vb.empty()) {
			ans[SS(a, b)] = -1;
			cout << -1 << endl;
			continue;
		}
		int res = 10000000;
		int ia = 0, ib = 0;
		int la = a.length(), lb = b.length();
		while (ia < va.size() && ib < vb.size()) {
			res = min(res, max(va[ia] + la, vb[ib] + lb) - min(va[ia], vb[ib]));
			if (va[ia] < vb[ib]) ia ++;
			else ib ++;
		}
		cout << res << endl;
		ans[SS(a, b)] = res;
	}
	return 0;
}
