#include<stdio.h>
#include<vector>
#include<algorithm>
#include<iostream>
#include<math.h>
using namespace std;
typedef pair<int, int> pii;
const int p = 1000007;

string L;
string A, B;
int N;
vector<vector<int> > H;
void IH() {
	H.resize(1000006);
	for(int i = 1; i <= 4; i++) {
		if(i > L.size()) break;
		for(int j = 0; j < L.size() - i + 1; j++) {
			int h = 0;
			for(int k = 0; k < i; k++) {
				h *= 26; //h %= p;
				h += L[j+k]-'a'+1;
				//h %= p;
			}
			//cout << i << ' ' << j << ' ' << h << endl;
			H[h].push_back(j);
		}
	}
}
vector<vector<pii> > Q;
int main() {
	cin >> L;
	cin >> N;
	IH();
	Q.resize(1000007);
	for(int i = 0; i < N; i++) {
		cin >> A >> B;
		int a = 0;
		for(int k = 0; k < A.size(); k++) {
			a *= 26; //a %= p;
			a += A[k]-'a'+1;
			//a %= p;
		}
		int b = 0;
		for(int k = 0; k < B.size(); k++) {
			b *= 26; //b %= p;
			b += B[k]-'a'+1;
			//b %= p;
		}
		bool ok = false;
		for(int k = 0; k < Q[a].size(); k++) {
			if(Q[a][k].first == b) {
				cout << Q[a][k].second << endl;
				ok = true;
				break;
			}
		}
		if(ok) continue;
		if(H[a].size() == 0 || H[b].size() == 0) {
			Q[a].push_back(make_pair(b, -1));
			Q[b].push_back(make_pair(a, -1));
			cout << -1 << endl;
			continue;
		}
		int mini = 987654321;
		int pa = 0, pb = 0;
		while(true) {
			if(H[a][pa] < H[b][pb]) {
				int e = max(H[a][pa]+A.size(), H[b][pb]+B.size());
				mini = min(mini, e-H[a][pa]);
				pa++;
				if(pa == H[a].size()) break;
			}
			else {
				int e = max(H[a][pa]+A.size(), H[b][pb]+B.size());
				mini = min(mini, e-H[b][pb]);
				pb++;
				if(pb == H[b].size()) break;
			}
		}
		Q[a].push_back(make_pair(b, mini));
		Q[b].push_back(make_pair(a, mini));
		cout << mini << endl;
	}
}
