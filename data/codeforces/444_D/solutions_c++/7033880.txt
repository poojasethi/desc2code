#include <bits/stdtr1c++.h>

#define MAX 200010

using namespace std;
using namespace tr1;

int n, m = 0, q;
vector <unsigned short> v[MAX];
unordered_map <string, int> mp;
unordered_map <long long int, int> dp;
char str[50010], A[8], B[8], len[MAX];

void Pregenerate(){
    int i, j, k, l;
    for (l = 1; l <= 4; l++){
        for (i = 0; (i + l) <= n; i++){
            for (j = 0; j < l; j++) A[j] = str[i + j];
            A[l] = 0;

            k = mp[A];
            if (!k){
                mp[A] = ++m;
                k = m;
                len[k] = l;
            }
            v[k].push_back(i);
        }
    }
}

int C(int x, int y, int i, int j){
    int a = min(v[x][i], v[y][j]);
    int b = max(v[x][i] + len[x], v[y][j] + len[y]);
    return (b - a);
}

int F(int x, int y){
    long long int h = ((1LL << 20) * x) + y;
    int res = dp[h];
    if (res) return res;

    int i = 0, j = 0, l1 = v[x].size(), l2 = v[y].size();
    for (i = 0; i < l1; i++){
        int p = C(x, y, i, j);
        if ((!i && !j) || (p < res)) res = p;
        if ((j + 1) != l2 && C(x, y, i, j + 1) < p) j++, i--;
    }

    return (dp[h] = res);
}

int main(){
    int i, j, k;

    while (scanf("%s", str) != EOF){
        n = strlen(str);
        Pregenerate();

        scanf("%d", &q);
        for (i = 0; i < q; i++){
            scanf("%s %s", A, B);
            int x = mp[A], y = mp[B];
            if (!x || !y) puts("-1");
            else if (x == y) printf("%d\n", strlen(A));
            else{
                if (x > y) swap(x, y);
                printf("%d\n", F(x, y));
            }
        }
    }
    return 0;
}
