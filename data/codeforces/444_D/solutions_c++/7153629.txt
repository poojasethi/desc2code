#include<cstdio>
#include<cstring>
#include<vector>
#include<map>
#include<utility>
using namespace std;

const int maxn = 600000, maxs = 60000;
char str[maxs];
vector<int> pos[maxn];
map<pair<int, int>, int> ans;
int V(char str[], int j) {
  int k = 0;
  for (int i = 0; i < j; i++)
    k = k*27+(int)str[i]-(int)'a'+1;
  return k;
}
void Check(int &m, int x, int y) {
  int t = x>y?x:y;
  if (m<0 || t<m) m = t;
}
int Search(int x, int l0, int y, int l1) {
  if (pos[x].empty() || pos[y].empty()) return -1;
  int j = 0, min = -1;
  for (int i = 0; i < pos[x].size(); i++) {
    for (;j+1<pos[y].size() && pos[y][j+1]<=pos[x][i]; j++);
    if (pos[y][j] <= pos[x][i]) Check(min, pos[x][i]-pos[y][j]+l0, l1);
  }
  return min;
}
int main()
{
  scanf("%s", str);
  int Q, x, y, l0, l1, t0, t1, len = strlen(str);
  for (int i = 0; i < len; i++)
    for (int j = 1; j<=4 && i+j<=len; j++)
      pos[V(str+i, j)].push_back(i);
  scanf("%d", &Q);
  while (Q--) {
    scanf("%s", str);
    l0 = strlen(str), x = V(str, l0);
    scanf("%s", str);
    l1 = strlen(str), y = V(str, l1);
    if (ans.find(make_pair(x, y)) != ans.end()) {
      printf("%d\n", ans[make_pair(x, y)]);
      continue;
    }
    t0 = Search(x, l0, y, l1);
    t1 = Search(y, l1, x, l0);
    if (t0 < 0) {
      len = t1;
    } else {
      len = t0;
      if (t1>0 && t1<len) len = t1;
    }
    ans[make_pair(x, y)] = ans[make_pair(y, x)] = len;
    printf("%d\n", len);
  }
}
