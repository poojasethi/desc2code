
#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<map>
#include<string>
using namespace std;
typedef pair<int,int> ii;
int main(){
	string s;
	cin>>s;
	map<int ,vector<int> > a;
	for(int i=0;i<(int)s.length();i++){
		a[s[i]-'a'+1].push_back(i);
	}
	if(s.length()>1){
		for(int i=0;i<(int)s.length()-1;i++){
			a[s[i]-'a'+1+30*(s[i+1]-'a'+1)].push_back(i);
		}
	}
	if(s.length()>2){
		for(int i=0;i<(int)s.length()-2;i++){
			a[s[i]-'a'+1+30*(s[i+1]-'a'+1)+900*(s[i+2]-'a'+1)].push_back(i);
		}
	}
	if(s.length()>3){
		for(int i=0;i<(int)s.length()-3;i++){
			a[s[i]-'a'+1+30*(s[i+1]-'a'+1)+900*(s[i+2]-'a'+1)+27000*(s[i+3]-'a'+1)].push_back(i);
		}
	}
	int q;
	cin>>q;
	map<ii,int> dp;
	while(q--){
		string s1,s2;
		cin>>s1>>s2;
		int h1=0;
		int h2=0;
		for(int i=s1.length()-1;i>=0;i--){
			h1=h1*30+s1[i]-'a'+1;
		}
		for(int i=s2.length()-1;i>=0;i--){
			h2=h2*30+s2[i]-'a'+1;
		}
		if(dp[ii(h1,h2)]>0){
			cout<<dp[ii(h1,h2)]<<endl;
			continue;
		}
		if(a[h1].size()==0||a[h2].size()==0){
			cout<<-1<<endl;
			continue;
		}
		vector<int> va(a[h1]),vb(a[h2]);
		int ans=1000000000;
		int i=0,j=0;
		while(i<(int)va.size()&&j<(int)vb.size()){
			ans=min(ans,max((int)s1.length()+va[i],(int)s2.length()+vb[j])-min(va[i],vb[j]));
			if(va[i]<vb[j]) i++;
			else j++;
		}
		cout<<ans<<endl;
		dp[ii(h1,h2)]=ans;
	}
	return 0;
}

		 	    	  		   		     	  	 		