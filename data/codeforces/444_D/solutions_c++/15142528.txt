#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define S(x) scanf("%d",&x)
#define P(x) printf("%d\n",x)

typedef long long int LL;
typedef pair<int, int > pii;
string s;
vector<int > v[27*27*27*27+5];
map<pii, int > dp;

int _hash(int l, int r) {
	int res = 0;
	rep(i,l,r+1) res = res * 27 + s[i]-'a'+1;
	return res;
}

int _hash(string &x) {
	int res = 0;
	rep(i,0,x.size()) res = res * 27 + x[i]-'a'+1;
	return res;
}

void pre() {

	rep(i,0,s.size()) {
		for(int j = 0; j < 4 && i - j >= 0; j++) {
			int h = _hash(i-j, i);
			v[h].push_back(i-j);
		}
	}

}

int solve(int x, int y, int a, int b) {
	int res = 1000000;
	if(!v[x].size() || !v[y].size()) return -1;
	int id1 = 0;
	int id2 = 0;
	while(1) {
		// printf("%d %d %d %d\n",v[x][id1], v[y][id2], a, b);
		res = min(res, max(v[x][id1]+a, v[y][id2]+b) - min(v[x][id1], v[y][id2]));
		if(v[x][id1] <= v[y][id2]) {
			id1++;
		} else {
			id2++;
		}
		if(id1 == v[x].size()) break;
		if(id2 == v[y].size()) break;
	}
	return res;
}

int main() {
	cin >> s;
	pre();
	int q;
	scanf("%d",&q);
	while(q--) {
		string a,b;
		cin >> a >> b;
		int x = _hash(a);
		int y = _hash(b);
		if(x > y) {
			swap(x,y);
			swap(a,b);
		}
		pii p(x,y);
		int &res = dp[p];
		if(!res) 
			res = solve(x, y, a.size(), b.size());
		P(res);
	}
	return 0;
}