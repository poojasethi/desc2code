#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
using namespace std;

int p[100005], pw, lb[100005], T, a[10], ans;
bool b[100005];

void cop(int z, int I, int J) {
	int A = a[z];
	while ((--I) > z) {
		a[I] += A%10*J;
		A /= 10;
	}
}
void del(int z, int I, int J) {
	int A = a[z];
	while ((--I) > z) {
		a[I] -= A%10*J;
		A /= 10;
	}
}

void dfs(int z, int I, int J) {
	if (z == I) ans ++;
	int az = a[z];
	if (lb[a[z]] == -1) lb[a[z]] = (int)(lower_bound(p, p+pw, a[z]) - p);
	int x = lb[a[z]];
	if (lb[a[z]+J] == -1) lb[a[z]+J] = (int)(lower_bound(p, p+pw, a[z]+J) - p);
	int y = lb[a[z]+J];
	J /= 10;
	for (int i=x; i<y; ++i) {
		a[z] = p[i];
		cop(z, I, J);
		dfs(z+1, I, J);
		del(z, I, J);
	}
	a[z] = az;
}

int main() {
	memset(b, true, sizeof(b));
	for (int i=2; i<=316; ++i) 
		if (b[i]) 
			for (int j=i*i; j<=99999; j+=i) b[j] = false;
	pw = 0;
	for (int i=2; i<=99999; ++i) 
		if (b[i])
			p[pw++] = i;
	memset(lb, -1, sizeof(lb));
	scanf("%d", &T);
	while (T--) {
		memset(a, 0, sizeof(a));
		scanf("%d", &a[0]);
		ans = 0;
		for (int i=1, j=10; ; ++i, j*=10) {
			if (a[0] < j) {
				j /= 10;
				cop(0, i, j);
				dfs(1, i, j);
				break;
			}
		}
		printf("%d\n", ans);
	}
	return 0;
}
