//By Lin
#include<cstdio>
#include<cstring>
#include<vector>
#include<algorithm>
#define maxn 100000
using namespace std; 

vector<int> p[6][6][maxn];
int	prime[maxn/2],l[6],ans , len;

void	solve(int i)
{
	if ( i == len - 1 ) {
		ans += p[len][i][l[i]].size();
		return;
	}
	for (int k = 0; k<p[len][i][l[i]].size(); k++ )
	{
		int x = p[len][i][l[i]][k];
		bool flag = true; 
		for (int j = len-1; j>i; j--, x/=10 ){
			if ( p[len][i+1][l[j]*10+x%10].size() == 0 ) {
				flag = false; 
				break;
			}
		}
		if ( !flag ) continue; 
		x = p[len][i][l[i]][k];
		for (int j = len-1; j>i; j-- , x/= 10 ) l[j] = l[j]*10 + x%10;
		solve( i+1 );
		for (int j = len-1; j>i; j-- , x/= 10 ) l[j] /= 10;
	}
}
int main()
{
	int i , j, n =  100000, cnt = 0; 
	for ( i = 3; i*i<n; i+=2) if ( !prime[i>>1] )
		{
			for (j = i*i; j<n; j+= i<<1 )
				prime[j>>1]++; 
		}
	for ( i = 2; i<n; i+= 2 ) if ( !prime[i>>1] )
	{
		int x = i; 
		for ( len = 0; x ; x/= 10) l[len++] = x%10;  
		for (int j = len; j<6; j++ ) l[j] = 0; 
		for (int k = len; k<=5; k++)
			for (int j = 1 , w = 0; j<k; j++)
			{
				w = w*10 + l[k-j];
				p[k][j][w].push_back( i );
			}
		if ( i == 2 ) i = 1;
	}
	int cas; 
	scanf("%d" , &cas );
	while ( cas -- )	
	{
		int x; 
		scanf("%d", &x );
		for ( len = 0; x ; x/=10 )  l[len++] = x%10;
		reverse( l , l + len );
		ans = 0; 
		solve( 1 );
		printf("%d\n" , ans );
	}
	return 0; 
}
