#include<iostream>
#include<fstream>
#include<sstream>
#include<cstdio>
#include<algorithm>
#include<string>
#include<vector>
#include<map>
#include<cstring>
using namespace std;

#define FOR(I,A,B) for (int I=int(A);I<int(B);++I)
#define MEM(A,B) memset(A,B,sizeof(A));
#define CPY(A,B) memcpy(A,B,sizeof(B));
typedef __int64 LL;
const int N(100000);
int ans, m;
bool bo[N];
int a[6], d[6];
int cnt[6][N];
int cut(int x, int y)
{
    int t = d[y - 1];
    return x - x / t % 10 * t; 
}
void get_prime()
{
     FOR(i, 2, N)
	    if (!bo[i]) {
		   FOR(j, 1, 6) ++cnt[j][cut(i, j)];
		   for (int j = i + i; j < N; j += i) bo[j] = 1;
		}
}
void search(int x, int t)
{
     if (x == m + 1) {
	    ans += t;
	    return;
	 }
	 int y = m - x;
	 FOR(i, 0, d[y])
	    if (cnt[y + 1][a[x] * d[y + 1] + i]) {
		   FOR(j, x + 1, m + 1)
		      a[j] = a[j] * 10 + i / d[m - j] % 10; 
		   search(x + 1, t * cnt[y + 1][a[x] * d[y + 1] + i]);
		   FOR(j, x + 1, m + 1)
		      a[j] /= 10;
		}
}
int main()
{
    int i, ca, p;
    //freopen("in.txt", "r", stdin);
	for (i = d[0] = 1; i <= 5; ++i) d[i] = d[i - 1] * 10;
	get_prime();
	for (scanf("%d", &ca); ca; --ca) {
        scanf("%d", &a[1]);
		for (i = a[1], m = 0; i; i /= 10, ++m);
        FOR(i, 2, m + 1)
           a[i] = a[1] / d[m - i] % 10; 
		ans = 0;
		search(2, 1);
		printf("%d\n", ans);
	}
	return 0;
}
