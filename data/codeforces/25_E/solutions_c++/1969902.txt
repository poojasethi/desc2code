#include <string>
#include <algorithm>
#include <vector>
#include <iostream>
#include <cstring>
#define MAXN 1000 * 101

using namespace std;

string str[3];
int p[3];

string cal(string a, string b)
{
    int n = a.size(), m = b.size();
    string c = a + '$' + b;
    //cout<<c<<endl;
    int k = n + m + 1, next[3 * MAXN];
    next[0] = -1;
    for (int i = 1; i < k; i++)
    {
        int pre = next[i - 1];
        while (pre != -1 && c[i] != c[pre + 1])
            pre = next[pre];
        next[i] = pre;
        if (c[i] == c[pre + 1])
            next[i]++;
        if (next[i] + 1 == n && i > n)      //a是b的子串
            return b;
    }
    return b.substr(0, m - next[k - 1] - 1) + a;
}

int main()
{
    for (int i = 0; i < 3; i++)
    {
        cin>>str[i];
        p[i] = i;
    }
    int ans = 1e9;
    do{
        ans = min(ans, (int)(cal(cal(str[p[0]], str[p[1]]), str[p[2]]).size()));
    }while (next_permutation(p, p + 3));
    cout<<ans<<endl;
    return 0;
}
