#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

int longitud(string s1,string s2)
{
  string s=s2+"#"+s1;
  int n=int(s.size());
  int j=-1;
  vector<int> anterior(n);
  anterior[0]=-1;
  for (int i=1;i<n;i++) {
    while (j!=-1 and s[j+1]!=s[i]) j=anterior[j];
    if (s[j+1]==s[i])
      j++;
    anterior[i]=j;
    if (j==int(s2.size())-1) return int(s1.size());
  }
  return int(s1.size())+int(s2.size())-1-anterior[n-1];
}

int p[]={0,1,2};

int main()
{
  string v[3];
  for (int i=0;i<3;i++) cin>>v[i];
  int minimo=1000000000;
  do {
    if (longitud(v[p[0]],v[p[1]])==int(v[p[0]].size()))
      minimo=min(minimo,longitud(v[p[0]],v[p[2]]));
    else
      minimo=min(minimo,longitud(v[p[0]],v[p[1]])+longitud(v[p[1]],v[p[2]])-int(v[p[1]].size()));
  } while (next_permutation(p,p+3));
  cout<<minimo<<endl;
}
