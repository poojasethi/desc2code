#include <iostream>
#include <string>
#include <climits>
#include <algorithm>

using namespace std;

int id[ 3 ];
string ss[ 3 ];
int p[ 300000 ];

string solve(string a, string b){
	int n = a.length();
	int m = b.length();
	string c = a + '$' + b;
	int k = n + m + 1;
	
	p[0] = -1;
	for (int i=1; i<k; i++){
		int t = p[i-1];
		while ( t!=-1 && c[ t+1 ]!=c[i] ) t = p[t];
		if ( c[t+1]==c[i] ) t++;
		p[i] = t;
	}
	
	for (int i=n+1; i<k; i++)
		if ( p[i]+1 == n )
			return b;
	
	return b.substr( 0, m-p[k-1]-1 ) + a;
}

int main(){
	for (int i=0; i<3; i++){
		cin >> ss[i];
		id[i] = i;
	}
	
	int ans = INT_MAX;
	do{
		ans = min( ans, (int)(solve( ss[id[0]], solve( ss[id[1]], ss[id[2]] ) ).length()) );
	} while ( next_permutation( id, id+3 ) );

	cout << ans << endl;
	
	return 0;
}
