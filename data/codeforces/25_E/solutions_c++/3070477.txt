#include <iostream>
#include <algorithm>
using namespace std;
const long long mx=100005;
string st[5];
int f[mx];
void p(string s)
{
	int i,j,n;
	n=s.size();
	i=0;
	j=-1;
	f[i]=j;
	while(i<n)
	{
		while((j>=0)&&(s[i]!=s[j])) j=f[j];
		i++;
		j++;
		f[i]=j;
	}
}
string k(string t,string s)
{
	int i,j,nn,n;
	i=0;
	j=0;
	nn=t.size();
	n=s.size();
	while(i<nn)
	{
		while((j>=0)&&(t[i]!=s[j])) j=f[j];
		i++;
		j++;
		if(j==n) return t;
	}
	return t+s.substr(j);
}
int main()
{
	string s;
	int x,res=1000000000;
	cin>>st[0]>>st[1]>>st[2];
	sort(st,st+3);
	do
	{
		p(st[1]);
		s=k(st[0],st[1]);
		p(st[2]);
		s=k(s,st[2]);
		if(res>s.size()) res=s.size();
	}while(next_permutation(st,st+3));
	cout<<res<<endl;
	return 0;
}