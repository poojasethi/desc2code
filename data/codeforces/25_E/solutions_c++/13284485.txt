#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
vector<int> table(string s)
{
	vector<int> ret(s.size(),0);
	int pos=1,match=0;
	while(pos+match<s.size()){
		if(s[pos+match]==s[match]){
			++match;
			ret[pos+match-1]=match;
		}else{
			if(match==0)++pos;
			else{
				pos+= match-ret[match-1];
				match= ret[match-1];
			}
		}
	}
	return ret;
}
string kmp(string a,string b){
	vector<int> tab=table(b);
	int pos=0,match=0;
	while(pos+match<a.size() && match<b.size()){
		if(a[pos+match]==b[match])
			++match;
		else{
			if(match==0)++pos;
			else{
				pos += match-tab[match-1];
				match= tab[match-1];
			}
		}
	}
	string ret= a;
	for(int i=match;i<b.size();++i){
		ret+=b[i];
	}
	return ret;
}
int main(){
	int ret=1e9,arr[3]= {0,1,2}; string s[3];
	for(int i=0;i<3;++i)cin>>s[i];
	do{
		string a= kmp(s[arr[0]],s[arr[1]]);
		a= kmp(a,s[arr[2]]);
		ret= min(ret,(int)a.size());
	}
	while(next_permutation(arr,arr+3));
	cout<<ret<<endl;
}
