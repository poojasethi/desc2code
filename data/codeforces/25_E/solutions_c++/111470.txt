#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <string>

using namespace std;

const int N = 110000;
const int inf = 1000000000;
int q[(N << 2)];
string s[3];

string kmp(string a, string b){
	   int n = a.size();
	   int m = b.size();
	   int k = n + m + 1;
	   string c = a + '$'+ b;
	   q[0] = -1;
	   for (int i = 1; i < k; ++i){
	   	   int t = q[i - 1];
	   	   while (t != -1 && c[t + 1] != c[i]) t = q[t];
	   	   if (c[t + 1] == c[i]) t++;
	   	   q[i] = t;
	   }
	   for (int i = n; i < k; ++i)
	   	   if (q[i] + 1 == n) return b;
       return b.substr(0, m - q[k - 1] - 1) + a; 
}

int main(){
	vector<int> p;
	for (int i = 0; i < 3; ++i){
		p.push_back(i);
		cin >> s[i];
	}
	int ans = inf;
	do{
	   	ans = min(ans, (int)kmp(kmp(s[p[0]], s[p[1]]), s[p[2]]).size());
	}while (next_permutation(p.begin(), p.end()));	
	printf("%d\n",ans);
	return 0;
}
