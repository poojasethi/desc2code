#include <iostream>
#include <algorithm>

#define MAX 100005
using namespace std;

string S[5];
int F[MAX];

void preKMP(string s)
{
	int i,j,n;
//	for(i=0;i<MAX;i++) F[i]=false;
	n=s.size();
	i=0; j=-1;
	F[i]=j;
	while(i < n)
	{
		while(j>=0 && s[i] != s[j]) j=F[j];
		i++;  j++;
		F[i]=j;
	}
}

string KMP(string text,string s)
{
	int i,j,N,n;
	i=j=0;
	N=text.size();
	n=s.size();
	while(i < N)
	{
		while(j>=0 && text[i] != s[j]) j=F[j];
		i++; j++;
		if(j == n) return text;
	}
	return text+s.substr(j);
}

int main()
{
	string s;
	int x,res=1000000000;
	cin >> S[0] >> S[1] >> S[2];
	sort(S,S+3);
	do
	{
		preKMP(S[1]);
		s=KMP(S[0],S[1]);
		preKMP(S[2]);
		s=KMP(s,S[2]);
		if(res > s.size()) res=s.size();
	}while(next_permutation(S,S+3));
	cout << res << endl;
	return 0;
}
