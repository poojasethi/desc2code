#include <string>
#include <iostream>
#include <algorithm>
#define MAXLEN 1000000
#define MAXVAL 1000000000

using namespace std;

int perm[3];
int next[MAXLEN];
string str[3];

string KMP(string s1,string s2)
{
    string s=s1+"$"+s2;
    int n=s.size(),n1=s1.size(),n2=s2.size();
    next[0]=-1;
    for(int i=1;i<n;i++)
    {
        int t=next[i-1];
        while(t!=-1&&s[t+1]!=s[i])
            t=next[t];
        if(s[t+1]==s[i])
            t++;
        next[i]=t;
    }
    int ret=-1;
    for(int i=n1+1;i<n;i++)
        ret=max(ret,next[i]);
    if(ret==n1-1)
        return s2;
    else
        return s2+s1.substr(next[n-1]+1,n1-next[n-1]-1);
}

int main()
{
    int ret=MAXVAL;
    for(int i=0;i<3;i++)
    {
        cin>>str[i];
        perm[i]=i;
    }
    do{
        string cur=KMP(KMP(str[perm[0]],str[perm[1]]),str[perm[2]]);
        ret=min(ret,(int)cur.size());
    }while(next_permutation(perm,perm+3));
    cout<<ret<<endl;
    return 0;
}
