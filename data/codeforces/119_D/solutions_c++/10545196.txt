#include <bits/stdc++.h>

#define	st first
#define	nd second
#define	mp make_pair
#define	pb push_back
#define	lli long long int
#define	all( gg )	gg.begin(),gg.end()
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	FP( ii,aa,bb ) for( lli ii=aa;ii<=bb;ii++ )
#define	FM( ii,aa,bb ) for( lli ii=aa;ii>=bb;ii-- )
#define	debug(ccc)	cout << #ccc << " = " << ccc << endl;

#define	mod	1000000007LL

#define	maxn	2000005

using namespace std;

int	fail[maxn];

int	n;

lli	dh[maxn],th[maxn],pows[maxn]={1};

string	s,p;

lli	df( int x,int y ){
	return	dh[y]-dh[x-1]*pows[y-x+1];
}
lli	tf( int x,int y ){
	return	th[x]-th[y+1]*pows[y-x+1];
}

int main(){
	getline( cin,s );
	getline( cin,p );
	if( s.size()!=p.size() ){
		cout << -1 << " " << -1 << endl;
		return	0;
	}
	n = s.size();
	reverse( all(s) );
	s = " "+s+"\n"+p;
	int	k = 0;
	FP( i,2,2*n+1 ){
		while( k and s[k+1]!=s[i] )	k = fail[k];
		if( s[k+1]==s[i] )	k++;
		fail[i] = k;
	}

	FP( i,1,2*n+1 )	dh[i] = dh[i-1]*211+s[i];
	FM( i,2*n+1,1 )	th[i] = th[i+1]*211+s[i];
	FP( i,1,2*n+1 )	pows[i] = pows[i-1]*211;

	int	rx=0,ry=0;

	FM( i,2*n+1,n+3 ){
		if( s[i]!=s[i-n-1] )	break;
		int	f = fail[i-1];
		if( !f )	continue;
		if( df( f+1,i-n-2 )==tf( n+2,i-f-1 ) ){
			rx = 2*n+1-i+1;
			ry = n-f+1;
		}
	}

	cout << rx-1 << " " << ry-1 << endl;

}
