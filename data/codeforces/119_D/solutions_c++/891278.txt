#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <cmath>
#include <ctime>
#include <cstdlib>

#define LL long long
#define pb(x) push_back(x)
#define size(S) S.size()

using namespace std;

const int maxn=1000010;
int n,m;
int l[maxn], c[maxn], e[maxn], p[maxn*2];
char a[maxn], b[maxn], s[maxn*2], r[maxn];

int main(){
	gets(a); gets(b);
	int na=strlen(a), nb=strlen(b);
	if (na!=nb||na==1){cout<<"-1 -1"<<endl; return 0;}

	int n=na; e[0]=1; l[0]=a[0]; c[0]=b[0]; r[n-1]=a[0];
	for (int i=1; i<n; i++) 
		l[i]=l[i-1]*13+a[i], c[i]=c[i-1]*13+b[i], e[i]=e[i-1]*13, r[n-i-1]=a[i];
	strcpy(s, r); strcpy(s+n+1, b);
	p[0]=-1;
	for (int i=1, t=-1; i<=n+n; i++){
		while (t>=0 && s[t+1]!=s[i]) t=p[t];
		if (s[t+1]==s[i]) t++;
		p[i]=t;
	}

	bool find=false; int ansl=0, ansr=n;
	for (int i=0; i<n-1; i++){
		if (a[i]!=b[n-i-1]) break;
		int j=n-p[n+n-i-1]-1;
		if (j<0) continue;
		if (l[j-1]-l[i]*e[j-i-1]==c[j-i-2]){
			find=true;
			if (ansl<i||ansl==i&&ansr>j) ansl=i; ansr=j;
		}
	}

	if (!find) cout<<"-1 -1"<<endl; else cout<<ansl<<' '<<ansr<<endl;
	return 0;
}

