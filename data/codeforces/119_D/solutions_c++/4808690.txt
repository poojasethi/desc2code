#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;
const int maxn=1010000; 
const int INF=100000000;
char a[maxn],b[maxn];
void kmp(char a[],char b[],int zt[],int m,int n){
	static int len[maxn];
	for(int i=0;i<n;i++) len[i]=0;
	for(int i=1,p=0;i<n;i++) {
		if(i<=p+len[p]-1) len[i] = min(len[i-p],p+len[p]-i);
		if(i+len[i]-1>=p+len[p]-1) 
			for(p=i;i+len[i]<n && b[len[i]]==b[i+len[i]];len[i]++);
	}
	for(int i=0;i<m;i++) zt[i]=0;
	for(int i=0,p=0;i<n;i++) {
		if(i<=p+zt[p]-1) zt[i] = min(len[i-p],p+zt[p]-i);
		if(i+zt[i]-1>=p+zt[p]-1) 
			for(p=i;zt[i]<n && i+zt[i]<m && b[zt[i]]==a[i+zt[i]];zt[i]++);
	}
}
int zt[3][maxn];
int main(){
	gets(a),gets(b);
	int n = strlen(a),m = strlen(b);
	if(m!=n) {
		printf("-1 -1\n");
		return 0;
	}
	kmp(a,b,zt[0],m,n);
	reverse(b,b+n); 
	kmp(b,a,zt[1],n,m);
	reverse(b,b+n);
	reverse(a,a+m);
	kmp(b,a,zt[2],n,m);
	for(int i=0;i<n;i++) 
		if(zt[2][i]==0) 
			zt[2][i]=-INF;
	for(int i=1;i<n;i++) 
		zt[2][i] = max(zt[2][i]+i,zt[2][i-1]);
	int x=-1,y=-1;
	for(int i=m-2;i>=0;i--)	{
		if(min(zt[1][0],i+1)+zt[2][zt[0][i+1]]>=m) {
			x=i;
			for(int j=0;j<=zt[2][zt[0][i+1]] && j<m;j++) 
				if(zt[2][j]+min(zt[1][0],i+1)>=m) {
					y=i+j+1;
					break;
				}
			break;
		}
	}
	printf("%d %d\n",x,y);
}