#include <bits/stdc++.h>

#define mp make_pair
#define st first
#define nd second
#define pb push_back

using namespace std;

typedef long long ll;
typedef pair< ll,ll > pll;
typedef pair< int,int > pii;

const int inf = 1000000000, N = 1000000, base = 131, mod = 1000000007;

int n, f[2*N+5];
ll shash[2*N+5], rhash[2*N+5], pw[2*N+5];
char s[2*N+5];
string s1, s2;

int get_shash(int l, int r) {
	return ((shash[r] - shash[l-1] * pw[r-l+1]) % mod + mod) % mod;
}

int get_rhash(int l, int r) {
	return ((rhash[l] - rhash[r+1] * pw[r-l+1]) % mod + mod) % mod;
}

int main()
{
	getline(cin, s1);
	getline(cin, s2);

	if (s1.size() != s2.size()) {
		puts("-1 -1");
		return 0;
	}

	n = s1.size();

	for (int i = 1; i <= n; i++)
		s[i] = s1[n-i];

	s[n+1] = 31;
	
	for (int i = n+2; i <= 2*n+1; i++)
		s[i] = s2[i-n-2];
	
	pw[0] = 1;
	for (int i = 1; i <= 2*n+1; i++) {
		shash[i] = (shash[i-1] * base + s[i]) % mod;
		pw[i] = (pw[i-1] * base) % mod;
	}

	for (int i = 2*n+1; i >= 1; i--)
		rhash[i] = (rhash[i+1] * base + s[i]) % mod;

	for (int i = 2, j = 0; i <= 2*n+1; i++) {
		while (j > 0 && s[i] != s[j+1])
			j = f[j];

		if (s[i] == s[j+1])
			j++;

		f[i] = j;
	}

	pii ans = mp(-1, -1);

	for (int i = 1; i < n && s[n-i+1] == s[2*n+2-i]; i++) {
		if (f[2*n+1-i] && get_shash(n+2, 2*n+1-i - f[2*n+1-i]) == get_rhash(f[2*n+1-i] + 1, n-i)) {
			ans = mp(i-1, n-f[2*n+1-i]);
		}
	}

	cout << ans.st << " " << ans.nd << endl;

	return 0;
}
