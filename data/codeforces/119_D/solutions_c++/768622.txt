#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <climits>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <string>
#include <set>
#include <map>
#include <numeric>
#include <functional>
#define rep(i,n) for(int i=0;i<(n);++i)
#define foreach(i,v) for(__typeof(v.begin()) i=v.begin();i!=v.end();++i)
#define ass(v) (v)||++*(int*)0;
using namespace std;
typedef pair<int,int> PII;
typedef vector<PII> VPII;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<bool> VB;
typedef vector<double> VD;
const int prime=37;
const int maxn=1100000;
char a[maxn],b[maxn];
int ha[maxn],hb[maxn],hc[maxn],pp[maxn];
int ll[maxn],rr[maxn];
int n;
int main()
{
	gets(a);
	gets(b);
	n=strlen(a);
	if(n!=(int)strlen(b)||n<=1)
	{
		puts("-1 -1");
		return 0;
	}
	pp[0]=1;
	ha[0]=0;
	hb[0]=0;
	hc[n]=0;
	rep(i,n)
	{
		pp[i+1]=pp[i]*prime;
		ha[i+1]=ha[i]*prime+a[i];
		hb[i+1]=hb[i]*prime+b[i];
		hc[n-i-1]=hc[n-i]*prime+a[n-i-1];
	}
	//printf("%d %d\n",hc[n-3],hb[24+3]-hb[24]*pp[3]);
	rep(i,n)
	{
		int st=0,ed=n-i;
		while(st<=ed)
		{
			int mi=(st+ed)>>1;
			if(hc[n-mi]==hb[i+mi]-hb[i]*pp[mi]) st=mi+1; else ed=mi-1;
		}
		rr[i]=ed;
		//printf("%d: %d %c\n",i,ed,b[i]);
	}
	for(int i=0,j=0;i<n;i++)
	{
		while(j<rr[i]+i)
		{
			ll[j]=i;
			j++;
		}
	}
	//rep(i,n) printf("%2d: %c %d\n",i,b[i],ll[i]);
	int pi=-1,pj=-1;
	rep(i,n-1)
	{
		if(a[i]!=b[n-i-1]) break;
		int z=ll[n-i-2];
		if(z>n-i-2) continue;
		//printf("i=%d z=%d\n",i,z);
		//printf("%d %d\n",ha[i+z+1]-ha[i+1]*pp[z],hb[z]);
		if(ha[i+z+1]-ha[i+1]*pp[z]==hb[z])
		{
			pi=i;
			pj=i+z+1;
		}
	}
	printf("%d %d\n",pi,pj);
	return 0;
}
