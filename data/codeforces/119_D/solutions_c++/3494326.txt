#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int maxn = 1000010;
const int key = 1000000009, weight = 10007;

unsigned long long power[maxn];
char stra[maxn], strb[maxn];
int len;
pair<unsigned long long, int> vals[maxn];

int main()
{
	power[0] = 1;
	for (int i = 1; i < maxn; i++) power[i] = power[i - 1] * weight;
	
	gets(stra);
	gets(strb);
	len = strlen(stra);
	if (strlen(strb) != len) { printf("-1 -1\n"); return 0; }
	
	unsigned long long now = 0, rev = 0;
	for (int i = 0; i < len; i++) now = now * weight + stra[i];
	for (int i = len - 1; i >= 0; i--)
	{
		now -= stra[i] * power[len - i - 1];
		rev = rev * weight + stra[i];
		vals[i] = make_pair(now + rev, i);
	}
	
	sort(vals, vals + len);
	
	now = rev = 0;
	for (int i = len - 1; i >= 0; i--) rev = rev * weight + strb[i];
	int maxi = -1, minj = -1;
	for (int i = 0; i < len - 1; i++)
	{
		now = now * weight + strb[i];
		rev -= strb[i] * power[i];
		int it = lower_bound(vals, vals + len, make_pair(now + rev, len - i - 1)) - vals;
		if (it < len && vals[it].first == now + rev)
		{
			maxi = len - i - 2, minj = vals[it].second;
			break;
		}
	}
	
	printf("%d %d\n", maxi, minj);
	return 0;
}
