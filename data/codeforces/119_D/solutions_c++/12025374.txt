#include<bits/stdc++.h>
using namespace std ;
string a , b , ra , rb ;
int l ;
int z[2000000+5] ;
int f[2000000+5] ;
void Zcalc(string s ) {
  memset( z , 0 , sizeof z ) ;
  int L = 0, R = 0;
  int n = s.size() ;
  for (int i = 1; i < n ; i++) {
    if (i > R) {
      L = R = i;
      while (R < n && s[R-L] == s[R]) R++;
      z[i] = R-L;
      R--;
    } else {
      int k = i-L;
      if (z[k] < R-i+1) z[i] = z[k];
      else {
        L = i;
        while (R < n && s[R-L] == s[R]) R++;
        z[i] = R-L;
        R--;
      }
    }
  }
}

void failure(string s) {
  int q = 0 ;
  f[q] = 0 ;
  for( int i = 1; i < s.size() ; i++ ) {
    while( q > 0 && s[q] != s[i] ) {
      q = f[q-1] ;
    }
    if( s[q] == s[i] )q ++ ;
    f[i] = q ;
  }
}

int main() {

  while( getline(cin , a ) ) {

    getline(cin , b ) ;
    if( (a.size() != b.size()) ){
      cout << -1 << " " << -1 << endl ;
      continue ;
    }

    int n = a.size() ;
    string rab= a ;
    reverse( rab.begin() , rab.end() ) ;
    rab += '\x7F' + b ;
    failure(rab) ;
    Zcalc(b+'\x7F'+a) ;

    int ansI = -1 , ansJ = -1 ;
    for( int i = 0 ; i < n-1 ; i++ ){
      if( a[i] != b[n-i-1] )break ;
      if( z[n+1+i+1] >= (n-i-1-f[2*n-i-1]) ){
        ansI = i ;
        ansJ = n-f[2*n-i-1] ;
      }
    }
    cout << ansI << " " << ansJ << endl ;


  }
  return 0 ;
}

 				    					  							 	  	 		