#include <vector>
#include <list>
#include <map>
#include <math.h>
#include <cmath>
#include <set>
#include <queue>
#include <deque>
#include <string>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <string.h>
using namespace std;

int main()
{
    string a,b,s1,s2;
    getline(cin, a);
    getline(cin, b);
    if (a.length() != b.length())
    {
        cout << "-1 -1";
        return 0;
    }
    int n = a.length();
    s1 = a; reverse(s1.begin(),s1.end()); s1 += '\0' + b;
    s2 = b + '\0' + a;
    int *p = new int[2 * n + 1];
    p[0] = 0;
    for (int i = 1; i < 2 * n + 1; ++i)
    {
        p[i] = p[i - 1];
        while (p[i] > 0 && s1[p[i]] != s1[i])
            p[i] = p[p[i] - 1];
        if (s1[p[i]] == s1[i])
            ++p[i];
    }
    int *z = new int[2 * n + 1];
    z[0] = 0;
    for (int i = 1, l = 0, r = 0; i < 2 * n + 1; ++i)
    {
        z[i] = 0;
        if (i <= r)
            z[i] = min(z[i - l], r - i + 1);
        while (i + z[i] < 2 * n + 1 && s2[z[i]] == s2[i + z[i]])
            ++z[i];
        if (i + z[i] - 1 > r)
        {
            l = i;
            r = i + z[i] - 1;
        }
    }
    int ansi=-1,ansj=-1;
    for(int f=0;f<a.size()-1;f++)
    {
        if(a[f]!=b[n-f-1])
            break;
        if(z[f+n+2]+p[2*n-f-1]>=n-f-1)
            ansi=f,ansj=n-p[2*n-f-1];
    }
    cout<<ansi<<" "<<ansj<<endl;
}
