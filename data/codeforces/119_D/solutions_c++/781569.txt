#include <stdio.h>
#include <string.h>
#include <algorithm>
#define maxn 1000010
#define P 191

using namespace std;

typedef unsigned long long LLU;

char s[maxn],t[maxn];
LLU POW[maxn],Hs[maxn],Ht[maxn];
int next[maxn];
int n,m;
int ansx,ansy;
int check(int x,int y){
	int len2=x-y+1;
	if (len2>0 && Hs[0]-Hs[len2]*POW[len2]!=Ht[m]-Ht[m-len2]*POW[len2]) return 0;
	return 1;
}
int check2(int x,int y){
	int len1=n-x-1;
	if (len1>0 && Hs[x+1]!=Ht[y+len1]-Ht[y]*POW[len1]) return 0;
	return 1;
}
void updata(int x,int y){
	--x;
	++y;
	if (x<0 || y>=n) return;
	if (x>ansx || (x==ansx && y<ansy)){
		ansx=x;
		ansy=y;
	}
}
int main(){
	gets(s);
	gets(t);
	n=strlen(s);
	m=strlen(t);
	if (n!=m){
		puts("-1 -1");
		return 0;
	}
	next[0]=-1;
	for (int i=1,j=-1;i<m;i++){
		while (j>-1 && t[j+1]!=t[i]) j=next[j];
		if (t[j+1]==t[i]) ++j;
		next[i]=j;
	}
	POW[0]=1;
	for (int i=1;i<maxn;i++) POW[i]=POW[i-1]*P;
	Hs[n]=0;
	for (int i=n-1;i>=0;i--) Hs[i]=Hs[i+1]*P+s[i];
	
	Ht[0]=0;
	for (int i=1;i<=m;i++) Ht[i]=Ht[i-1]*P+t[i-1];
	
	ansx=ansy=-1;
	for (int i=0,j=-1;i<n;i++){
		while (j>-1 && t[j+1]!=s[i]) j=next[j];
		if (t[j+1]==s[i]) ++j;
		
		if (i>0){
			while (j>-1 && !check(i,j+1)) j=next[j];
			while (j>-1 && check2(i,j+1)){
				updata(i-j,i);
				j=next[j];
			}
		}
	}
	for (int i=0;i<n-1;i++){
		int len1=n-1-i;
		if (Hs[i+1]!=Ht[len1]) continue;
		int len2=i+1;
		if (Hs[0]-Hs[len2]*POW[len2]!=Ht[m]-Ht[m-len2]*POW[len2]) continue;
		updata(i+1,i);
	}
	printf("%d %d\n",ansx,ansy);
	return 0;
}