#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

const int N=2000010;
const int inf=0x3f3f3f3f;

using namespace std;

int A[N],B[N],s[N];
char s1[N],s2[N];

struct data
{
	int x,y;
	data() {}
	data(int x,int y) :x(x),y(y) {}
	bool operator < (const data &r) const {return x<r.x;}
}da[N];

void ex_kmp(int s[],int next[],int len)
{
	next[0]=0;
	for(int i=1,j=0;i<len;i++)
	{
		if(i+next[i-j]<j+next[j])
			next[i]=next[i-j];
		else
		{
			int t=max(0,j+next[j]-i);
			while(i+t<len && s[i+t]==s[t]) t++;
			next[i]=t;j=i;
		}
	}
}

int main()
{
	gets(s1);gets(s2);
	if(strlen(s1)!=strlen(s2))
	{
		puts("-1 -1");
		return 0;
	}
	int len=strlen(s1);
	for(int i=0;i<len;i++)
		s[i]=s2[i];
	s[len]=0;
	for(int i=0;i<len;i++)
		s[i+len+1]=s1[i];
	//for(int i=0;i<2*len+1;i++)
		//cout<<char(s[i]);cout<<endl;
	ex_kmp(s,A,2*len+1);
	//for(int i=0;i<2*len+1;i++)
		//cout<<A[i];cout<<endl;
	for(int i=0;i<len;i++)
		s[i]=s1[len-i-1];
	s[len]=0;
	for(int i=0;i<len;i++)
		s[i+len+1]=s2[i];
	//for(int i=0;i<2*len+1;i++)
		//cout<<char(s[i]);cout<<endl;
	ex_kmp(s,B,2*len+1);
	for(int i=0;i<len;i++)
		da[i]=data(i+B[i+len+1],i);
	sort(da,da+len);
	//for(int i=0;i<len;i++)
		//cout<<da[i].x<<" "<<da[i].y<<endl;
	int mn=inf,id=-1,jd=-1;
	for(int i=0,j=len-1;i<len-1 && s1[i]==s2[len-i-1];i++)
	{
		while(j>=0 && da[j].x>=len-i-1) mn=min(mn,da[j].y),j--;
		if(A[i+len+2]>=mn)
			id=i,jd=i+mn+1;
	}
	if(id==-1) puts("-1 -1");
	else printf("%d %d\n",id,jd);
	return 0;
}
