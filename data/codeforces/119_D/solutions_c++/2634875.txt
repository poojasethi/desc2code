#include<cstdio>
#include<algorithm>
#include<string>
#include<cstring>
#include<vector>
#define NN 1000001

using namespace std;

char s[NN] , r[NN];
string x, y;
vector<int> z, b;

void fz( string& t ){
	z.assign( t.size() , 0 );
	int l = 0 , r = 0 , n = t.size();
	for( int i= 0 ; i < n ; ++i ){
		if( i > r || ( z[i-l] >= r-i+1 )  ){
			l = i; r = max( r , i );
			while( r < n && t[r] == t[r-l]  ) ++r;
			z[i] = r---l;
		}else{
			z[i] = z[i-l];
		}
	}

}

void kmp( string& t ){

	int i = 0 , j = -1, n = t.size();
	b.assign( n+1 , 0 );
	b[i] = j;
	while( i < n ){
		while( j >= 0 && t[i] != t[j] ) j = b[j];
		++j;++i;
		b[i] = j;
	}
}

int main(){
	gets( s ); gets( r );

	int n = strlen( s ) , m =  strlen( r );
	if( n != m ){
		printf("-1 -1\n");
	}else{
		x = r; x += '\20';  x+= s;
		fz( x );

		y = s;
		reverse( y.begin() , y.end() );
		y += '\20';
		y += r;
		kmp( y );

		int p = -1 ,q = -1;
		for( int i = 0 , j ; i < n-1  ; ++i ){
			if( s[i] != r[ n-1-i ] ) break;
			j = n - b[ (n+1) + n-1-i ];
			if( j < n && ( i == j-1 || i + z[(n+1)+i+1] >= j-1 ) )
				p = i ,  q = j; 					
		}
		printf("%d %d\n" , p , q );
	}
	return 0;
}	
