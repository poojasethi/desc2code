#include "stdio.h"
#include <string.h>
#include<algorithm>
#include<iostream>
using namespace std;
const int N = 1000001;
const int MOD = 1000000000;
const int P = 207;
typedef __int64 ll;
ll h1[N],h2[N],pow[N];
void kmp(char str[],int p[])
{
int i,m,k;
m=strlen(str);
p[0]=-1;
for(i=1;i<m;i++)
{
k=i-1;
while(k!=-1&&str[i]!=str[p[k]+1])
k=p[k];
if(k==-1)p[i]=-1;
else p[i]=p[k]+1;
}
}
char s1[N+N],s2[N+N],s[N+N];
int p1[N+N],p2[N+N],p3[N+N];
int main()
{
int i,j;
gets(s1);
gets(s2);
if(strlen(s1)!=strlen(s2)){puts("-1 -1");return 0;}
int len=strlen(s1);
pow[0]=1;
for(i=1;i<=len;i++)pow[i]=pow[i-1]*P%MOD;
h1[0]=s1[0];
for(i=1;i<len;i++)
{
h1[i]=(h1[i-1]+pow[i]*s1[i])%MOD;
}

h2[0]=s2[0];
for(i=1;i<len;i++)
{
h2[i]=(h2[i-1]+pow[i]*s2[i])%MOD;
}
for(i=0;i<len;i++)s[i]=s2[len-1-i];
s[len]=31;
s[len+1]=0;    
strcat(s,s1);
kmp(s,p1);

for(i=0;i<len;i++)s[i]=s1[len-1-i];
s[len]=31;
s[len+1]=0;    
strcat(s,s2);
kmp(s,p2);

for(i=len-2;i>=0;i--)
{
if(p1[i+len+1]==i)
{
int k=p2[len-i-1+len];
j=-1;
int L=len-k-2,l2=len-(i+1)-(k+1);
if(L==i)j=i+1;
else
{
ll le,ri;
if(L+1==l2)ri=h1[L];
else ri=h1[L]-h1[L-l2];
if(ri<0)ri+=MOD;
le=h2[l2-1]*pow[L+1-l2]%MOD;
if(ri==le)j=L+1;
}
if(j!=-1){printf("%d %d\n",i,j);return 0;}
}               
}
puts("-1 -1");    
return 0;
}