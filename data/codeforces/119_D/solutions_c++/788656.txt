#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
using namespace std;
#define pb(a) push_back(a)
#define BASE 131
#define SIZE 1000010
typedef unsigned long long ll;
int L;
char a[SIZE],b[SIZE];
vector<char> C; vector<int> pf;
void preffix_function(){
  int sz=C.size(); pf.resize(sz);
  pf[0]=0;
  for(int i=1;i<sz;++i){
   int lpf=pf[i-1];
   while(lpf && C[i]!=C[lpf])lpf=pf[lpf-1];
   pf[i]=lpf+(C[i]==C[lpf]?1:0);
                       }
}
// HASH
ll HA[SIZE],HB[SIZE],step[SIZE+1];
bool compare(int sa,int ea,int sb,int eb){
  if(sa>ea)return true;
  ll ca=step[SIZE-sa]*(HA[ea]-((sa)?HA[sa-1]:0)),cb=step[SIZE-sb]*(HB[eb]-((sb)?HB[sb-1]:0));
  return (ca==cb);
}
int main(){
  step[0]=1; for(int i=1;i<=SIZE;++i)step[i]=step[i-1]*BASE;
  gets(a); gets(b);
  L=strlen(a);
  if(strlen(b)!=L){
   printf("-1 -1\n");
   //system("pause");
   return 0;
                  }
  HA[0]=a[0] , HB[0]=b[0];
  for(int i=1;i<L;++i)HA[i]=HA[i-1]+step[i]*a[i] , HB[i]=HB[i-1]+step[i]*b[i];
  for(int i=L-1;i>=0;--i)C.pb(a[i]);
  C.pb(1);
  for(int i=0;i<L;++i)C.pb(b[i]);
  preffix_function();
  int SC=1,N=C.size();
  while(SC<=L && C[N-SC]==C[L-SC])++SC;  --SC;
  int bi=-1,bj=-1;
  for(int i=L+1;i<N-1;++i){
   if(N-i-1>SC)continue;
   int lo=N-i-2,hi=L-pf[i];
   if(compare(lo+1,hi-1,0,hi-lo-2)){
    if(bi<lo)bi=lo , bj=hi;
                                   }
                          }
  printf("%d %d\n",bi,bj);
  //system("pause");
  return 0;
}
