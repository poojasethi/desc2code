#include<cstdio>
#include<cstring>
using namespace std;

const int N = int(2e6 + 9);

int S[N], T[N];
int X[N], Y[N];
int P[N], E[N];
int n;

void KMP(int *S, int *P, int n)
{
	P[0] = -1;
	for(int i=1, j=-1; i<n; i++)
	{
		while(j>=0 && S[j+1]!=S[i]) j = P[j];
		if(S[j+1]==S[i]) ++j;
		P[i] = j;
	}
	P[0] = 0;
}

void GUSFIELD(int *S, int *E, int n)
{
	int prev, pos, j(-1);
	E[0] = n;
	for(int i=1; i<n; i++, j--)
	{
		if(j<0 || i + E[i-prev] >= pos)
		{
			if(j<0) j=0, pos=i;
			for(;j<n && pos<n && S[j]==S[pos]; ++j, ++pos);
			E[i] = j, prev = i;
		}
		else E[i] = E[i-prev];
	}
}

void READ(int *F)
{
	char c; while(c=getchar(), c<32);
	F[F[0]=1] = c;
	while(c=getchar(), c>=32) F[++F[0]] = c;
}

int main()
{
	READ(S), READ(T);
	if(S[0] != T[0]) puts("-1 -1");
	else
	{
		
		n = S[0];
		for(int i=1; i<=n; i++) X[i-1] = S[n-i+1];
		for(int i=1; i<=n; i++) X[n+i] = T[i];
		KMP(X, P, n+n+1);
		
		for(int i=1; i<=n; i++) Y[i-1] = T[i];
		for(int i=1; i<=n; i++) Y[n+i] = S[i];
		GUSFIELD(Y, E, n+n+1);
		
		int ansi(-1), ansj(-1);
		for(int i=0; i<n-1; i++)
		{
			if(S[i+1] != T[n-i]) break;
			int lenc = P[n + n - i - 1];
			if(E[n+i+2] >= n - i - lenc - 2)
			{
				ansi = i;
				ansj = n - lenc - 1;
			}
		}
		printf("%d %d\n", ansi, ansj);
	}
	
	return 0;
}
