#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

vector<int> computa(string a,string b)
{
  reverse(a.begin(),a.end());
  string s=a+string(1,char(127))+b;
  int j=-1;
  vector<int> anterior(int(s.size()));
  anterior[0]=-1;
  for (int i=1;i<int(s.size());i++) {
    while (j!=-1 and s[j+1]!=s[i])
      j=anterior[j];
    if (s[j+1]==s[i]) j++;
    anterior[i]=j;
  }
  vector<int> v;
  for (int i=0;i<int(b.size());i++)
    v.push_back(anterior[int(a.size())+i+1]+1);
  return v;
}

typedef long long int lint;
lint modulo=1000000007;

int main()
{
  string a,b;
  getline(cin,a);
  getline(cin,b);
  if (int(a.size())!=int(b.size())) {
    cout<<-1<<" "<<-1<<endl;
  } else {
    vector<int> midapref=computa(a,b);
    int n=int(b.size());
    vector<lint> expo(n,1);
    for (int i=1;i<n;i++)
      expo[i]=(expo[i-1]*107)%modulo;
    vector<int> sumaa(n,a[0]);
    for (int i=1;i<n;i++)
      sumaa[i]=(sumaa[i-1]+expo[i]*a[i])%modulo;
    vector<int> sumab(n,b[0]);
    for (int i=1;i<n;i++)
      sumab[i]=(sumab[i-1]+expo[i]*b[i])%modulo;
    int imax=-1;
    int jj;
    for (int i=0;i<n-1 and a[i]==b[n-1-i];i++) {
      int pos=n-1-i-1;
      int len=midapref[pos];
      if (len==0) continue;
      int posleft=pos-len;
      int valora=(modulo+sumaa[i+posleft+1]-sumaa[i])%modulo;
      int valorb=(posleft<0)?0:(sumab[posleft]*expo[i+1])%modulo;
      if (valora==valorb) {
	imax=i;
	jj=i+posleft+2;
      }
    }
    if (imax==-1)
      cout<<-1<<" "<<-1<<endl;
    else
      cout<<imax<<" "<<jj<<endl;
  }
}
