#include<iostream>
#include<cstring>

using namespace std;
int n;
int pos[3010];
int cost[3010];

int dp[3010][3010];

int calc(int idx, int prev){
	if (dp[idx][prev] != -1) return dp[idx][prev];
	if (idx >= n)
		return 0;
	return dp[idx][prev] = min(calc(idx+1, idx)+cost[idx], calc(idx+1, prev) + (pos[idx] - pos[prev]));
}

int main(){
	cin >> n;
	for (int i = 0; i < n; ++i)
		cin >> pos[i] >> cost[i];
	for (int i = 0; i < n; ++i){
		for (int j = i+1; j < n; ++j){
			if(pos[j] < pos[i]){
				swap(pos[j],pos[i]);
				swap(cost[j],cost[i]);
			}
		}
	}
	memset(dp, -1, sizeof dp);
	cout << calc(1, 0) + cost[0] << endl;
	return 0;

}