#!/usr/bin/python
import sys

a = []

def gen (n, d):
	global a
	if n > 0:
		a += [n]
	if d > 0:
		gen (n * 10 + 4, d - 1)
		gen (n * 10 + 7, d - 1)

def go (l, r, pos, c):
	l = max (l, pos)
	r = min (r, c)
#	print l, r, c
	return max (r - l + 1, 0) * c

def fact (n):
	if n > 12:
		return 10 ** 9 + 1
	if n == 0:
		return 1
	return n * fact (n - 1)

gen (0, 9)
a.sort ()

while True:
	s = sys.stdin.readline ().strip ()
	if s == '':
		s = sys.stdin.readline ().strip ()
		if s == '':
			break
	n, k = [int (x) for x in s.split ()]
	if n <= 12:
		if k > fact (n):
			print -1
			continue
	m = max (n - 13, 0)
	d = n - m
	res = 0
	for c in a:
		if c <= m:
			res = res + 1
	b = range (n - d + 1, n + 1)
	p = range (n - d + 1, n + 1)
	q = []
	k -= 1
	for i in range (d)[::-1]:
		j = k / fact (i)
#		print k, fact (i), j
		k %= fact (i)
		q += [b[j]]
		b = b[:j] + b[j + 1:]
#		print p, q, b
	for i in range (d):
		if p[i] in a and q[i] in a:
			res += 1
	print res
