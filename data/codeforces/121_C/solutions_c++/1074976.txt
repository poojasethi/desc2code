#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>

using namespace std;
const int N=10000;
long long  s=0,a[N],d[100],v[100],b[100];

void dfs(long long p,long long x)
{
    if (p>10) return;
    a[++s]=x*10+4; dfs(p+1,x*10+4);
    a[++s]=x*10+7; dfs(p+1,x*10+7);
}

bool f(long long x)
{
    while (x>0)
    {
        if (x%10!=4 && x%10!=7) return false;
        x/=10;
    }
    return true;
}

int main()
{
     long long n,m,i,j,ans=0,x=0;
     dfs(1,0);
     sort(a+1,a+s+1);
     cin>>n>>m;
     d[0]=1;
     for (i=1; i<=13; i++) d[i]=d[i-1]*i;
     if (n<=13 && m>d[n]) { printf("-1\n"); return 0;}
     for (i=1; i<=13; i++)
     {
         for (j=1; j<=13; j++)
          if (v[j]==0)
          {
              if (x+d[13-i]>=m) break;
              x+=d[13-i];
          }
        v[j]=1; b[i]=j;
     }
   //  for (i=1; i<=13; i++) cout<<b[i]<<endl;
    for (i=1; i<=s; i++)
    {
        if (a[i]>n) break;
        if (a[i]<n-12) ans++;
        else
        {
            x=b[a[i]-n+13]+(n-13);
            //cout<<x<<endl;
            if (f(x)) ans++;
        }
    }
     cout<<ans<<endl;
}
