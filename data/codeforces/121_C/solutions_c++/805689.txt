#include<cstdio>
#include<set>
#include<algorithm>
using namespace std;

set<int> S;
int A[10000];
int na;
int n,k;

void gen(int i)
{
	A[++na] = i;
	S.insert( i );
	if( i <= 100000000 )
	{
		gen(10*i+4);
		gen(10*i+7);
	}
}

int fac[20];
int ans;
bool have[20];
int ps[20];

int main()
{
	gen(4); gen(7);
	sort( A+1 , A+na+1 );

	A[++na] = 1100000000;
	scanf("%d%d",&n,&k);

	fac[0] = 1;
	for(int c=1;c<13;c++) fac[c] = c*fac[c-1];
	fac[13] = 1100000000;

	if( n < 13 and k > fac[n] )
	{
		printf("-1\n");
		return 0;
	}

	int dak;
	for(dak=0;fac[dak]<k;dak++);

	int m = n - dak;
	for(int c=1;A[c]<=m;c++) ans ++;

	k --;

	for(int c=1;c<=dak;c++)
	{
		for(int d=1;d<=dak;d++) if( !have[d] )
		{
			if( fac[dak-c] <= k ) k -= fac[dak-c];
			else
			{
				have[d] = true;
				ps[c] = d;
				break;
			}
		}
	}
	//for(int c=1;c<=dak;c++) printf("%d ",ps[c]); printf("\n");
	for(int c=1;c<=dak;c++) if( S.count(m+c)==1 and S.count(m+ps[c])==1 ) ans ++;
	//for(int c=1;c<=na;c++) printf("%d\n",A[c]);
	printf("%d\n",ans);
	return 0;
}
