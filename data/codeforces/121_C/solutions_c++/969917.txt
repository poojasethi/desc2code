#include<iostream>
#include<algorithm>
#include<vector>
#define f(i,n) for (int i=0;i<n;i++)
#define ll long long
using namespace std;
ll F[20];
vector<int> L,E;
int N;
void get(ll num=0,int digitos=0){
    
    if (num>N)return;
    if (digitos)L.push_back(num);
    get(num*10+4,digitos+1);
    get(num*10+7,digitos+1);

}
void Permutar(vector <int>&X,int k){

    int tam=X.size();
    int quedan=tam-1;
    for (int i=0;i<tam;i++,quedan--){
        sort(X.begin()+i,X.end());
        int avanzar=0;
        
        while(k>F[quedan])k-=F[quedan],avanzar++;
        swap(X[i],X[i+avanzar]);
               
    }
    
}

int main(){
int P;
F[0]=1;
f(i,16)F[i+1]=(i+1)*F[i];
cin>>N>>P;

get();
sort(L.begin(),L.end());
for (int i=N;E.size()<15&&i>0;i--)E.push_back(i);
if (P>F[E.size()]){cout<<-1<<endl;return 0;}
Permutar(E,P);
int antes=N-E.size();
int resp=0;
for (int i=0;i<L.size();i++){
    if (L[i]<=antes){resp++;continue;}
    int pos=find(E.begin(),E.end(),L[i])-E.begin()+antes+1;
    resp+=binary_search(L.begin(),L.end(),pos);

}

cout<<resp<<endl;

return 0;}