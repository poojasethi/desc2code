#include <stdio.h>
#include <algorithm>
using namespace std;
int n,k;
long long fact[14]={1};
bool cmp(int p){
	if(p>13 || fact[p]>=k)
		return true;
	k-=fact[p];
	return false;
}
bool check(int x){
	while(x){
		if(x%10!=4 && x%10!=7)
			return false;
		x/=10;
	}
	return true;
}
bool used[16];
int s;
int calc(int i){
	if(i>n)
		return 0;
	for(int j=s;j<=n;++j)
		if(!used[j-s] && cmp(n-i)){
			used[j-s]=true;
			return (check(i) && check(j))+calc(i+1);
		}
	return -1;
}
long long all[2046]={4,7};
int allC=2;
int main()
{
	for(int i=1;i<14;++i)
		fact[i]=fact[i-1]*i;
	scanf("%d%d",&n,&k);
	if(n<14 && k>fact[n]){
		printf("-1");
		return 0;
	}
	s=1;
	if(n<14)
		printf("%d",calc(1));
	else{
		for(int i=0;all[allC-1]<7777777777LL;++i){
			all[allC++]=all[i]*10+4;
			all[allC++]=all[i]*10+7;
		}
		s=n-13;
		printf("%d",lower_bound(all,all+allC,s)-all+calc(s));
	}
	return 0;
}
