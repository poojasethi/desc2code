//#include "stdafx.h"
#include <iostream>
#include <algorithm>
using namespace std;

long long n,k,F[20];
int P[20];
int s=0;

long long X[10000];

void go(long long x) {
	if (x<=n) {
		X[s++]=x;
		go(x*10+4);
		go(x*10+7);
	}
}

int main(void)
{
	cin>>n>>k;
	go(0);
	sort(X,X+s);
	int r=13;
	F[0]=1;
	for (int i=1;i<=13;i++)
		F[i]=F[i-1]*i;
	if (n<=13 && k>F[n]) {
		cout<<-1;
	} else {
		if (n<=13) {
			r=(int)n;
			for (int i=1;i<=n;i++)
				P[i]=i;
		} else {
			for (int i=1;i<=13;i++)
				P[i]=(int)n-13+i;
		}
		k--;
		for (int i=1;i<=r;i++) {
			int s=(int)(k/F[r-i]);
			int t=P[i+s];
			for (int j=i+s;j>i;j--)
				P[j]=P[j-1];
			P[i]=t;
			k%=F[r-i];
		}
		int res=0;
		for (int i=1;i<s;i++) {
			if (X[i]<n-13)
				res++;
			else if (binary_search(X,X+s,P[X[i]+r-n]))
				res++;
		}
		cout<<res;
	}
	return 0;
}