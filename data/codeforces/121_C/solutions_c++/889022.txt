#include <iostream>
#include <set>
using namespace std;

const int MAXf = 14;
const int MAXn = 1e9;
long long f[MAXf+1];

set<int> s;
void bt(long long x)
{
	if(x > MAXn) return;
	if(x != 0) s.insert((int)x);
	bt(x*10+4);
	bt(x*10+7);
}

int a[MAXf];
bool mark[MAXf];
void find_per(int n, int k, int a[])
{
	k--;
	for(int i = 0; i < n; i++)
		mark[i] = false;
	for(int i = 0; i < n; i++)
	{
		int c = k / f[n-i-1];
		k %= f[n-i-1];
		int j;
		for(j = 0; c >= 0; j++)
			if(mark[j]==0)
				c--;
		mark[j-1]=true;
		a[i]=j;
	}
}

bool islucky(int x)
{
	while(x > 0)
	{
		int r = x % 10;
		if(r != 4 && r != 7)
			return false;
		x /= 10;
	}
	return true;
}

int main()
{
	f[0]=1;
	for(int i = 1; i <= MAXf; i++) f[i]=f[i-1]*i;
	bt(0);
	int n, k;
	cin >> n >> k;
	int x = 0;
	if(n <= MAXf && f[n] < k)
	{
		cout << -1 << endl;
		return 0;
	}
	for(x=0;f[x]<k;x++);
	find_per(x, k, a);
	//for(int i = 0; i < x; i++) cout << a[i] << " " ; cout << endl;
	int c = 0;
	for(set<int>::iterator it = s.begin(); it != s.end(); it++)
	{
		if(*it <= n - x)
		{
			c++;
		}
		else
			break;
	}
	for(int i = 0; i < x; i++)
		if(islucky(n-x+1+i) && islucky(n-x+a[i])) c++;
	cout << c << endl;
	return 0;
}
