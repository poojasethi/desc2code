#include <cstdio>
#include <cstring>
typedef __int64 lld;

int num[1023];

bool check(int x) {
	while (x) {
		if (x%10 != 4 && x%10 != 7)
			return false;
		x /= 10;
	}
	return true;
}
int bin(int x) {
	int l=0, r=1022, mid, best=-1;
	while (l <= r) {
		mid = (l+r)>>1;
		if (num[mid] <= x) {
			best = mid;
			l = mid + 1;
		}
		else
			r = mid - 1;
	}
	return best;
}
int main() {
	int n, m, k, i, j, len;
	int f[13];
	int d[14];
	bool mk[14];
	f[0] = 1;
	for (i=1; i < 13; i++) {
		f[i] = f[i-1]*i;
	}
	num[0] = 0;
	k = 1;
	for (i=0, len=1; len < 512; i+=len, len<<=1) {
		for (j=i; j < i+len; j++) {
			num[k++] = num[j]*10 + 4;
			num[k++] = num[j]*10 + 7;
		}
	}
	scanf("%d%d",&n,&k);
	if (n <= 12 && f[n] < k) {
		printf("-1\n");
	} 
	else {
		for (m=1; m < 13 && f[m] < k; m++);
		memset(mk, 0, sizeof(mk));
		//printf("m=%d\n",m);
		for (i=1; i <= m; i++) {
			for (j=1; j <= m; j++) if (!mk[j]) {
				if (f[m-i] >= k)
					break;
				k -= f[m-i];
			}
			d[i] = j + n-m;
			mk[j] = true;
			//printf("d[%d]=%d\n",i,j);
		}
		int ans = bin(n-m);
		for (i=1; i <= m; i++) if (check(i+n-m) && check(d[i])) {
			ans++;
		}
		printf("%d\n",ans);
	}
	return 0;
}