#include <bits/stdc++.h>

#define mp make_pair
#define st first
#define nd second
#define pb push_back

using namespace std;

typedef long long ll;
typedef pair< ll,ll > pll;
typedef pair< int,int > pii;

const int inf = 1000000000;

ll n, k, fac[20];
vector<int> v, lucky;

bool isLucky(ll n) {
	while (n) {
		if (n % 10 != 4 && n % 10 != 7)
			return false;
		
		n /= 10;
	}

	return true;
}

void generate(int num, int i) {
	if (i == 10)
		return;

	if (i)
		lucky.pb(num);

	generate(num*10 + 4, i+1);
	generate(num*10 + 7, i+1);
}

int main()
{
	cin >> n >> k;

	int from = max(1ll, n - 13);

	for (int i = from; i <= n; i++) {
		v.pb(i);
	}

	fac[0] = 1;
	for (int i = 1; i <= 15; i++)
		fac[i] = i * fac[i-1];

	int ans = 0;

	for (int i = from; i <= n; i++) {
		for (int j = v.size() - 1; j >= 0; j--) {
			if(fac[v.size() - 1] * j < k) {
				if (isLucky(i) && isLucky(v[j]))
					ans++;
				k -= fac[v.size() - 1] * j;
				
				v.erase(v.begin() + j);
				break;
			}
		}
	}

	if (k > 1) {
		puts("-1");
		return 0;
	}

	generate(0, 0);
	sort(lucky.begin(), lucky.end());
	
	cout << ans + lower_bound(lucky.begin(), lucky.end(), from) - lucky.begin() << endl;



	return 0;
}
