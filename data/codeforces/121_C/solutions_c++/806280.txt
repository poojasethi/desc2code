#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <algorithm>
using namespace std;

int n,m,t,tmp,num,ans;
bool u[20];
int a[20];

void dfs(long long x)
{
	++ans;
	long long y;
	y=x*10+4;
	if (y<=t-13) dfs(y);
	y+=3;
	if (y<=t-13) dfs(y);
}

int main()
{
	cin>>t>>m;
	n=min(t,13);
	if (t<13) {
		tmp=1;
		for (int i=2; i<=t; i++) tmp*=i;
		if (m>tmp) {
			cout<<-1<<endl;
			return 0;
		}
	}
	--m;
	ans=0;
	memset(u,sizeof(u),0);
	for (int i=1; i<=n; i++) {
		tmp=1;
		for (int j=2; j<=n-i; j++) tmp*=j;
		num=1;
		while (u[num]) ++num;
		while (m>=tmp) {
			m-=tmp;
			++num;
			while (u[num]) ++num;
		}
		a[i]=num;
		u[num]=true;
	}
		if (t<=13) {
			if ((a[4]==4)||(a[4]==7)) ++ans;
			if ((a[7]==4)||(a[7]==7)) ++ans;
		} else {
			dfs(4);
			dfs(7);
			bool p;
			for (int i=1; i<=13; i++) {
				num=t-13+i;
				p=true;
				while (num>0) {
					if ((num%10!=4)&&(num%10!=7)) {
						p=false;
						break;
					} else num/=10;
				}
				if (p) {
					a[i]=t-13+a[i];
					while (a[i]>0) {
						if ((a[i]%10!=4)&&(a[i]%10!=7)) {
							p=false;
							break;
						} else a[i]/=10;
					}
					if (p) ++ans;
				}
			}
		}
		cout<<ans<<endl;
	return 0;
}
