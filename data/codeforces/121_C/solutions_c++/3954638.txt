#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <cmath>
#include <cstdlib>
#include <numeric>
#include <bitset>
#include <cstring>
#include <sstream>
#include <utility>
#include <queue>
#include <cassert>
using namespace std;


typedef long long ll;
#define MAX 1000000007
ll fact[20];
bool used[20];
set<ll> s;

bool isLucky(ll x)
{
	bool ok = true;
	while(x)
	{
		if(x%10!=4&&x%10!=7){ ok = false; break; }
		x /= 10;
	}
	return ok;
}
void getLucky(ll x)
{
	if(x>MAX) return ;
	if(x!=0) s.insert(x);
	getLucky(10*x+4);
	getLucky(10*x+7);

}
int main()
{
	ll n,k;
	scanf("%I64d%I64d",&n,&k);
	fact[0] = 1;
	int i,j,m;
	for(i=0;fact[i]<k;i++)
		fact[i+1] = fact[i]*(i+1);
	m = i;
	if(n-m<0) { puts("-1"); return 0; }
	
	int ans = 0;
	getLucky(0);
	set<ll>::iterator it;
	for(it=s.begin();it!=s.end()&&*it<=n-m;it++)
		ans++;
	for(i=1;i<=m;i++)
	{
		int cnt = 1;
		while(fact[m-i]<k)
		{
			k -= fact[m-i];
			cnt++;
		}
		for(j=1;j<=m;j++)
			if(!used[j])
			{
				if(--cnt==0)
				{
					if(isLucky(n-m+i)&&isLucky(n-m+j))
						ans++;
					used[j] = true;
					break;
				}
			}
	}
	printf("%d\n",ans);
}
	 			 	  	    								  	