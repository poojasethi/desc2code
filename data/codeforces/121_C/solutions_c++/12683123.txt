#include<cstdio>
#include<map>
#include<algorithm>
using namespace std;
map<int,bool>hash;long long sum[105];
int a[1205],use[105],get,n,k,ans,i,m;
void dfs(int k,int now)
{
    if (now) a[++*a]=now;
    if (k<=9) dfs(k+1,now*10+4),dfs(k+1,now*10+7);
}
int find(int s)
{
    for (int i=s;i<=n;i++)
        if (!use[i-get]) return i;
}
int asknum(int x,int L) 
{
    if (n-x>m) return x;get=n-m;
    for (int i=get;i<=n;i++) use[i-get]=0;
    for (int i=get;i<=n;i++) 
    {
        int y=find(get);
        for (;L>=sum[n-i]+1;L-=sum[n-i]) 
            y=find(y+1);
        use[y-get]=1;if (i==x) return y;
  }
}
int main()
{
    scanf("%d%d",&n,&k);
    for (sum[m=0]=1;sum[m]<=k;sum[m+1]=sum[m]*(m+1),m++);m--;
    if (m>n||m==n&&k>sum[n]) return puts("-1"),0;
    dfs(1,0);sort(a+1,a+*a+1);
    for (i=1;i<=*a;i++) hash[a[i]]=1;
    for (i=1;i<=*a;i++) 
        if (a[i]>n) break;else 
        ans+=(hash.find(asknum(a[i],k))!=hash.end());
    printf("%d\n",ans);
}