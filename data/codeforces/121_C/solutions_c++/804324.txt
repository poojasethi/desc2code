#include <iostream>
#include <algorithm>

#define oo 2000000000LL

using namespace std;

long long a[200005]={0};
long long o=0;

void dfs(long long s)
{
 if(s)
  a[++o]=s;
 if(s<=oo)
  {
   dfs(s*10+4);
   dfs(s*10+7);
  }
}

long long p[25]={0};
long long q[25]={0};

long lucky(long long x)
{
 if(x==0)
  return 0;
 
 for(;x;x/=10)
   if(x%10!=4&&x%10!=7)
    return 0;
 return 1;
}

int main()
{
 long long n,k;
 long long s=1;
 long long i,j;
 long long ans=0;
 long long hash[25]={0};
 
 dfs(0);
 sort(a+1,a+o+1);
 
 cin>>n>>k;
 
 if(n<=15)
  {
   for(j=1;j<=n;j++)
     s*=j;
   if(s<k)
    {
     cout<<-1<<endl;
     return 0;
    }
  }
 
 p[0]=1;
 for(i=1;i<=15;i++)
   p[i]=p[i-1]*i;
 k--;
 for(i=15;i>=1;i--)
   {
    q[i]=k/p[i];
    k%=p[i];
   }
 
 for(i=15;i>=0;i--)
   if(q[i])
    break;
 
 for(j=1;j<=o&&a[j]<=n-i-1;j++);
 ans+=j-1;
 
 for(j=n-i;j<=n;j++)
   {
    for(k=0;hash[k];k++);
    for(;q[n-j];q[n-j]--)
      for(++k;hash[k];k++);
    hash[k]=1;
    if(lucky(n-i+k)&&lucky(j))
     ans++;
   }
 
 cout<<ans<<endl;
 
 return 0;
}
