#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;
const int maxn=400+10,maxk=50+5,inf=100000000;
int n,k,a[maxn],sum[maxn],dp[maxn][maxk],u[maxn][maxk],d[maxn][maxk],ans=-inf;
inline void solve(){
    memset(sum,0,sizeof(sum));
    for(int i=0;i<maxn;i++)    for(int j=0;j<maxk;j++)   dp[i][j]=d[i][j]=u[i][j]=-inf;  
    for(int i=1;i<=n;i++)   sum[i]=sum[i-1]+a[i];       
    for(int i=1;i<=n;i++)
        for(int j=1;j<=i;j++){
            dp[i][1]=max(dp[i][1],sum[i]-sum[j-1]); 
            u[i][1]=max(u[i][1],sum[i]-sum[j-1]);
            d[i][1]=max(d[i][1],sum[j-1]-sum[i]);
        }
    for(int i=2;i<=n;i++)
        for(int j=2;j<=min(k,i);j++)
            for(int l=i;l>=j;l--){
                int x=max(d[l-1][j-1]+sum[i]-sum[l-1],u[l-1][j-1]-sum[i]+sum[l-1]);
                dp[i][j]=max(dp[i][j],x);
                d[i][j]=max(d[i][j],x-sum[i]+sum[l-1]);
                u[i][j]=max(u[i][j],x+sum[i]-sum[l-1]); 
            }     
    for(int i=1;i<=n;i++)   ans=max(ans,dp[i][k]);  
}
int main(){
    cin>>n>>k;
    for(int i=1;i<=n;i++)   cin>>a[i];  
    solve();
    cout<<ans<<endl;
    return 0;   
}