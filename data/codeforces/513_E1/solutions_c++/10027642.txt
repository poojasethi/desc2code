#include<bits/stdc++.h>
using namespace std;
const int Maxn=402;
const int Maxk=52;
int n,K;
int sum[Maxn];
int dp[Maxn][Maxn][Maxk];
int maxid[Maxn][Maxn],minid[Maxn][Maxn];
inline void up(int &x,int y){if(x==-1||x<y)x=y;}
inline int abs(int x){return x<0?-x:x;}
int main()
{
    scanf("%d%d",&n,&K);
    for(int i=1;i<=n;i++)scanf("%d",sum+i),sum[i]+=sum[i-1];
    for(int i=1;i<=n;i++)
    {
        maxid[i][i-1]=minid[i][i-1]=i-1;
        for(int j=i-2;j>=0;j--)
        {
            maxid[i][j]=(sum[i]-sum[j])>(sum[i]-sum[maxid[i][j+1]])?j:maxid[i][j+1];
            minid[i][j]=(sum[i]-sum[j])<(sum[i]-sum[maxid[i][j+1]])?j:minid[i][j+1];
        }
    }
    for(int i=1;i<=n;i++)
        for(int j=0;j<i;j++)
            for(int k=1;k<=K;k++)
                dp[i][j][k]=k==1?0:-1;
    int ans=-1;
    for(int i=1;i<=n;i++)
        for(int j=0;j<i;j++)
        {
            int c=sum[i]-sum[j];
            for(int k=1;k<K;k++)
                if(dp[i][j][k]!=-1)
                {
                    for(int nxt=i+1;nxt<=n;nxt++)
                    {
                        int t1=abs(sum[nxt]-sum[maxid[nxt][i]]-c);
                        int t2=abs(sum[nxt]-sum[minid[nxt][i]]-c);
                        if(t1>t2)up(dp[nxt][maxid[nxt][i]][k+1],dp[i][j][k]+t1);
                        else up(dp[nxt][minid[nxt][i]][k+1],dp[i][j][k]+t2);
                    }
                }
            up(ans,dp[i][j][K]);
        }
   // for(int i=0;i<4;i++)
   //     printf("%d%c",dp[4][i][K-1],i==3?'\n':' ');
    printf("%d\n",ans);
}
/*
5 3
5 2 4 3 1
*/
