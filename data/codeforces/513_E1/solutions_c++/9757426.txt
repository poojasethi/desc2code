#include <bits/stdc++.h>
using namespace std;
#define all(c) (c).begin(),(c).end()
#define rrep(i,n) for(int i=(int)(n)-1;i>=0;i--)
#define REP(i,m,n) for(int i=(int)(m);i<(int)(n);i++)
#define rep(i,n) REP(i,0,n)
#define iter(c) __typeof((c).begin())
#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)
#define pb(a) push_back(a)
#define pr(a) cout<<(a)<<endl
#define PR(a,b) cout<<(a)<<" "<<(b)<<endl
#define R cin>>
#define F first
#define S second
#define ll long long
bool check(int n,int m,int x,int y){return (x<0||x>=n||y<0||y>=m)?false:true;}
const ll MAX=1000000007,MAXL=1LL<<60,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};
typedef pair<int,int> P;

int main() {
  int n,k;
  R n >> k;
  int a[n],d[n+1];
  d[0]=0;
  rep(i,n) {
    R a[i];
    d[i+1]=d[i]+a[i];
  }
  int dp[k+1][n+1][n+1],ans=0;
  memset(dp,-1,sizeof(dp));
  for(int j=0; j<=n; j++) {
    for(int i=1; i<=n; i++) dp[1][j][i]=0;
  }
  
  for(int i=1; i<k; i++) {
    for(int j=0; j<n; j++) {
      for(int j2=j+1; j2<=n; j2++) {
	if(dp[i][j][j2]!=-1) {
	  REP(l,j2+1,n+1) {
	    dp[i+1][j2][l]=max(dp[i+1][j2][l],dp[i][j][j2]+abs((d[j2]-d[j])-(d[l]-d[j2])));
	    if(i+1==k) ans=max(ans,dp[i+1][j2][l]);
	  }
	}
      }
    }
  }
  pr(ans);
  return 0;
}
