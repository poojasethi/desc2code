#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
using namespace std;
const int L_N=400+10;
const int L_K=50+5;
const int INF=1e9;
int a[L_N],S[L_N], f[L_N][L_K][2][2],N,K;
bool vis[L_N][L_N][2][2];
inline int co(int c){
    return c<0?0:1;
}
int F(int i,int j,int c1,int c2){
    if(j>K) return 0;
    if(i>N) return -INF;
    if(vis[i][j][co(c1)][co(c2)]) return f[i][j][co(c1)][co(c2)];
    else vis[i][j][co(c1)][co(c2)]=true;
    
    int ret=F(i+1,j,c1,c2);
    for(int p2=i;p2<=N;p2++){
        int s=S[p2]-S[i-1];
        int tmp=max(F(p2+1,j+1,c2,1),F(p2+1,j+1,c2,-1));
        if(j==1) tmp+=c2*s;
        else if(j==K) tmp+=-c1*s;
        else tmp+=-c1*s+c2*s;
        ret=max(ret,tmp);
    }
    
    //printf("f[%d][%d][%d][%d]=%d\n",i,j,c1,c2,ret);
    return f[i][j][co(c1)][co(c2)]=ret;
}
int main(){
    //freopen("in.txt","r",stdin);
    scanf("%d %d",&N,&K);
    for(int i=1;i<=N;i++){
        scanf("%d",&a[i]);
        S[i]=S[i-1]+a[i];
    }
    
    int ans=0;
    ans=max(ans,F(1,1,1,1));
    ans=max(ans,F(1,1,1,-1));
    ans=max(ans,F(1,1,-1,1));
    ans=max(ans,F(1,1,-1,-1));
    
    printf("%d\n",ans);
    return 0;
}