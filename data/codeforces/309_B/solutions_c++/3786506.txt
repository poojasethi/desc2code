#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<deque>
#include<set>
#include<map>
using namespace std;

const int MAXN = 1000*1000+1;
const int LOG = 20;

int next[LOG+2][MAXN+10];
string s[MAXN+10];
int best[MAXN+10];
int a[MAXN+10];

int n,r,c;

#define PU(x) (upper_bound(a,a+n+1,x)-a-1)

int main()
{
	ios::sync_with_stdio(false);
	cin >> n >> r >> c;
	a[0] = 0;
	for(int i=0; i<n; i++)
	{
		cin >> s[i];
		a[i+1] = a[i] + (int)s[i].size() + 1;
	}
	for(int i=0; i<n; i++)
	{
		next[0][i] = PU(c+a[i]+1);
		//cerr << s[i] << " -> " << s[next[0][i]] << endl;
	}
	for(int i=0; i<=LOG; i++)
		next[i][n] = n;
	for(int i=0; i<LOG; i++)
		for(int j=0; j<n; j++)
			next[i+1][j] = next[i][next[i][j]];

	int mxp = 0;
	for(int j=0; j<n; j++)
	{
		int now = j;
		for(int i=0; i<LOG; i++)
			if( r&(1<<i) )
				now = next[i][now];
		best[j] = now;
		if( best[j] - j > best[mxp] - mxp )
			mxp = j;
	}
	int first = mxp;
	for(int i=0; i<r; i++)
	{
		for(int j=first; j<next[0][first]-1; j++)
			cout << s[j] << " ";
		if( first != next[0][first] )
			cout << s[next[0][first]-1] << "\n";
		first = next[0][first];
	}
	return 0;
}
