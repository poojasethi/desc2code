#include <cstdio>
#include <cstring>
#include <algorithm>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define FOD(i,s,e) for (int i=(s)-1; i>=(e); i--)
#define CLR(a,x) memset(a, x, sizeof(a))
#define EXP(i,l) for (int i=(l); i; i=qn[i])
#define N 1000005
using namespace std;

int n, m, c, len, t, sz, ed, best, ret;
int ptr[N], l[N], qn[N], qd[N], stk[N], par[N], sum[N], w[N];
int word[6*N];
char s[6*N], v[N];

void dfs(int x){
	v[x] = 1;
	stk[++sz] = w[x];
	sum[sz] = sum[sz-1] + w[x];
	int cur = sum[sz] - (sz >= m ? sum[sz - m] : 0);
	if (cur > best) best = cur, ret = x;
	EXP(i,l[x]) dfs(qd[i]);
	--sz;
}

void bd(int x, int y){
	qd[++ed] = y, qn[ed] = l[x], l[x] = ed;
}

int main(){
	scanf("%d%d%d", &n, &m, &c);
	gets(s);
	gets(s);
	len = strlen(s);
	for (int i=0, j=-1; i<len; i++){
		if (i == 0 || s[i-1] == ' ') ptr[++j] = i;
		word[i] = j;
	}
	ptr[n] = len + 1;
	
	FOR(i,0,n){
		t = ptr[i] + c;
		if (t > len - 1) par[i] = n;
		else{
			if (s[t] == ' ') ++t;
			par[i] = word[t];
		}
		w[i] = par[i] - i;
		bd(par[i], i);
	}

	for (int i=n-1; i>=0; i--) if (!v[i] && w[i]) sz = 0, dfs(i);

	for (int i=ret, j=0; i<n && j<m; i=par[i], ++j){
		for (int k=ptr[i]; k<ptr[par[i]]-1; k++) printf("%c", s[k]);
		puts("");
	}
	return 0;
}
