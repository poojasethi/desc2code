#include <cstdio>
#include <algorithm>
using std::min;
#define MAXN 100005
char s[MAXN];
int dp[21][1 << 20], col[MAXN], n, m;
int main() {
    scanf("%d%d", &n, &m);
    for(int i = 0; i < n; ++ i) {
        scanf("%s", s);
        for(int j = 0; j < m; ++ j)
            col[j] |= (s[j]-'0') << i;
    }
    const int S = 1 << n;
    for(int i = 0; i < m; ++ i) ++ dp[0][col[i]];
    for (int k = 1; k <= n; k++)
        for (int msk = 0; msk < S; ++ msk) {
            int sum = k > 1 ? (k - 2 - n) * dp[k - 2][msk] : 0;
            for (int p = 0; p < n; p++)
                sum += dp[k - 1][msk ^ (1 << p)];
            dp[k][msk] = sum / k;
        }
    int ans = n * m;
    for (int msk = 0; msk < S; ++ msk) {
        int cnt = 0;
        for (int k = 0; k <= n; ++ k)
            cnt += min(k, n - k) * dp[k][msk];
        ans = min(ans, cnt);
    }
    printf("%d\n", ans);
    return 0;
}

  	    		 		  	 	  			 		 					