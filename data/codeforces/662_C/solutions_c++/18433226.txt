#include <iostream>

using namespace std;

int n,m;
int cols[100000];
int dp[21][1<<20];

int main()
{
	cin >> n >> m;
	
	int i,j,k;
	char c;
	for (j=0; j<m; j++)
		cols[j] = 0;
	
	for (i=0; i<n; i++)
	{
		for (j=0; j<m; j++)
		{
			cin >> c;
			cols[j] <<= 1;
			cols[j] += c - '0';
		}
	}
	
	for (j=0; j<(1<<n); j++)
		dp[0][j] = 0;
		
	for (j=0; j<m; j++)
		dp[0][cols[j]] += 1;
	
	for (j=0; j<(1<<n); j++)
	{
		dp[1][j] = 0;
		for (k=0; k<n; k++)
			dp[1][j] += dp[0][j ^ (1<<k)];
	}
	
	for (i=2; i<=n; i++)
	{
		for (j=0; j<(1<<n); j++)
		{
			dp[i][j] = 0;
			for (k=0; k<n; k++)
				dp[i][j] += dp[i-1][j ^ (1<<k)];
			dp[i][j] += (i-2-n)*dp[i-2][j];
			dp[i][j] /= i;
		}
	}
	
	int minOn = m*n;
	for (i=0; i<(1<<n); i++)
	{
		int minArrange=0;
		for (j=0; j<=n; j++)
		{
			minArrange += min(j,n-j)*dp[j][i];
		}
		minOn = min(minOn, minArrange);
	}
	
	cout << minOn << endl;
}