def primes(n): 
    if n==2: return [2]
    elif n<2: return []
    s=range(3,n+1,2)
    mroot = n ** 0.5
    half=(n+1)/2-1
    i=0
    m=3
    while m <= mroot:
        if s[i]:
            j=(m*m-3)/2
            s[j]=0
            while j<half:
                s[j]=0
                j+=m
        i=i+1
        m=2*i+3
    return [2]+[x for x in s if x]
B=primes(int((10**5)**0.5 )+1)
E=[0]*10**5
def f(t):
    C=[]
    if t==1:
        return C
    y=t
    for x in B:
        if x**2>t or y==1:
            break
        if y%x==0:
            while y%x==0:
                y/=x
            C.append(x)
    if y!=1:
        C.append(y)
    if y==t:
        C.append(t)
    return C
n,m=map(int,raw_input().split())
A=[0]*(n+1)
M={}
for i in range(m):
    s=raw_input().split()
    p=int(s[1])
    if s[0]=='+':
        if A[p]==1:
            print 'Already on'
            continue
        if p not in M:
            M[p]=f(p)
        for x in M[p]:
            if E[x]!=0:
                print 'Conflict with',E[x]
                break
        else:
            A[p]=1
            print 'Success'
            for x in M[p]:
                E[x]=p
    else:
        if A[p]==0:
            print 'Already off'
        else:
            print 'Success'
            A[p]=0
            for x in M[p]:
                E[x]=0