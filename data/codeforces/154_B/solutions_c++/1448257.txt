#include <iostream>
#include <set>
#include <cmath>
#include <vector>

#define MAXN 100010

using namespace std;

int N,M,status[MAXN];
set<int> factor[MAXN];
vector<int> divisor[MAXN];

void init()
{
	for (int i=2;i<=N;i++)
		for (int j=1;i*j<=N;j++)
			divisor[i*j].push_back(i);
}

void activate(int x)
{
	for (int i=0;i<divisor[x].size();i++)
		if (factor[divisor[x][i]].size())
		{
			cout << "Conflict with " << *factor[divisor[x][i]].begin() << endl;
			return;
		}
	for (int i=0;i<divisor[x].size();i++)
		factor[divisor[x][i]].insert(x);
	status[x]=1;
	cout << "Success" << endl;
}

void deactivate(int x)
{
	for (int i=0;i<divisor[x].size();i++)
		factor[divisor[x][i]].erase(x);
	status[x]=0;
	cout << "Success" << endl;
}

int main()
{
	cin >> N >> M;
	init();
	for (int i=0;i<M;i++)
	{
		char c;
		int j;
		cin >> c >> j;
		if (c=='+')
		{
			if (status[j])
				cout << "Already on" << endl;
			else
				activate(j);
		}
		else
		{
			if (!status[j])
				cout << "Already off" << endl;
			else
				deactivate(j);
		}
	}
	return 0;
}