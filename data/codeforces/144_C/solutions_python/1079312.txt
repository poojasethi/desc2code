s = raw_input()
p = raw_input()

from ctypes import *

class Collect:
	def __init__(self):
		self.a = (c_int * 26)()
	def __getitem__(self, ch):
		return self.a[ord(ch)-ord('a')]
	def __setitem__(self, ch, v):
		self.a[ord(ch)-ord('a')] = v


pCol = Collect()
sCol = Collect()

for c in p:
	pCol[c] = pCol[c] + 1

ans = 0
n = len(p)
satisfy = 26 # how many c, sCol[c] <= pCol[c]
for i, c in enumerate(s):
	j = i - n
	if c != '?':
		v = sCol[c]
		sCol[c] = v + 1
		if v == pCol[c]:
			satisfy -= 1

	if j >= 0 :
		c = s[j]
		if c != '?':
			v = sCol[c]
			sCol[c] = v - 1
			if v - 1 == pCol[c]:
				satisfy += 1

	if j + 1 >= 0 and satisfy == 26:
		ans += 1
	# print i,s[i],s[j+1],satisfy, j+1>=0

print ans

