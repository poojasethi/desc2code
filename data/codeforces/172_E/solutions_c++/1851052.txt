#include<cstdio>
#include<cctype>
#include<cstring>
#include<cassert>
#include<vector>
#include<stack>
using namespace std;
char H[1<<20],*p;
stack<unsigned> s;
unsigned n,a;
struct{
    unsigned hs;
    vector<unsigned> cd;
}tr[250002];
vector<unsigned> xx; 
unsigned hash(char* &s){
    static unsigned h=0;
    for(h=0;isalpha(*s);++s)h=h*27+*s-96;
    return h;
}
void gao(int x,unsigned h){
    if(h<xx.size()&&tr[x].hs==xx[h])++h;
    if(h==xx.size()&&tr[x].hs==*xx.rbegin())++a;
    for(__typeof(xx.end()) it=tr[x].cd.begin();it!=tr[x].cd.end();++it)
        gao(*it,h);
}
int main(){
    s.push(0);tr[0].hs=0;
    for(p=gets(H);*p;++p){
        assert(*p == '<' );
        if(*++p=='/'){
            s.pop();
            while(*++p!='>');
        }else{
            tr[s.top()].cd.push_back(++n);
            tr[n].hs=hash(p);
            s.push(n);
            if(*p=='/')s.pop(),++p;
        }
    }
    for(scanf("%d ",&n);n--;xx.clear()){
        for(p=gets(H);;++p){
            xx.push_back(hash(p));
            if(!*p)break;
        }
        gao(a=0,0);
        printf("%d\n",a);
    }
    return 0;
}