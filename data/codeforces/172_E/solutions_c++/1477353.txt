//SORU
//PROGRAM C++

/*
	ID: semihbasrik
	LANG: C++
	TASK:
*/
#include<iostream>
#include<fstream>
#include<algorithm>
#include<queue>
#include<stack>
#include<map>
#include<set>
#include<list>
#include<cstdio>
#include<cstring>
#include<string>
#include<cmath>
#include<cstdlib>
#include<vector>
#include<climits>
#define mp make_pair
#define pb push_back
#define st first
#define nd second
#define wait system("pause");
#define lint long long int
#define ABS(a)	 ( (a)>0 ? (a) : -(a) )
#define KARE(a)	 ( (a)*(a) )
#define MAX(a,b) ( (a)>(b) ? (a) : (b) )
#define MIN(a,b) ( (a)<(b) ? (a) : (b) )
#define INF		 INT_MAX
//#define cin fin
//#define cout fout
using namespace std;
ifstream fin("input.in");
ofstream fout("output.out");

stack<bool>S;
pair< string , bool >P[1000005];
string str;
int pind;

void add(string str){
	if(str[0]=='/'){
		str=str.substr(1);
		P[++pind]=mp(str,0);
	}
	else
	if(str[str.size()-1]=='/'){
		str.resize(str.size()-1);
		P[++pind]=mp(str,1),P[++pind]=mp(str,0);
	}
	else{
		P[++pind]=mp(str,1);
	}
}

void parcala(){
	int i;
	string temp;
	for(i=0;i<str.size();i++){
		if(str[i]=='>')
			add(temp),temp="";
		else
		if(str[i]!='<')
			temp+=str[i];
	}
}

void solve(){
	cin>>str;
	parcala();
	int i,j,g,M,res,n,t;
	string Q[205],q,temp;
	cin>>M;
	getline(cin,q);
	for(i=1;i<=M;i++){
		getline(cin,q);
		fill(Q,Q+202,"");
		n=0;
		for(j=0;j<=q.size();j++){
			if(q[j]==' ' || j==q.size())
				Q[++n]=temp,temp="";
			else
				temp+=q[j];
		}
		g=1,res=0;
		for(j=1;j<=pind;j++)
			if(P[j].nd==1){
				if(g<=n && P[j].st==Q[g])	S.push(1),g++;
				else				S.push(0);
				if(g==n+1 && P[j].st==Q[n])	res++;
			}
			else{
				t=S.top(),S.pop();
				if(t)	g--;
			}
		cout<<res<<endl;
	}
//	wait;
}

int main(){
	solve();
}
