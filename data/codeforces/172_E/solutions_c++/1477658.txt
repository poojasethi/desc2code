#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <fstream>
#include <set>
#include <map>
#include <cmath>
#pragma comment(linker,"/STACK:16777216")
#define inf 1000000000
#define MP make_pair
#define PI acos(-1.0)
#define eps 1e-9
using namespace std;
typedef long long i64;
typedef unsigned long long u64;
const int sz=1000100;
char A[sz];
vector<int> V[sz];
int P[sz],len,IND,qs,cnt;
i64 C[sz],Q[1000];

inline bool isbr(char ch){
    return (ch=='>'||ch=='<');
}

void recur(int idx){
    int art=0;
    if(C[idx]==Q[IND]){
        if(IND==qs-1)cnt++;
        else{art=1;IND++;}
    }

    for(int j=0;j<V[idx].size();j++)
        recur(V[idx][j]);
    if(art)IND--;
}

int main()
{

    cin.getline(A,sz,'\n');
    len=strlen(A);

    int idx=0,i=0,ta,nidx=0;

    while(i<len&&isbr(A[i]))i++;

    for(;i<len;){
        i64 num=0;

        ta=1;
        if(A[i]=='/'){ta=2;i++;}
        while(i<len&&(islower(A[i]))){num=num*27+(A[i]-'a'+1);i++;}
        if(A[i]=='/'){ta=0;i++;}

        if(ta<=1){
            nidx++;
            V[idx].push_back(nidx);
            C[nidx]=num;
            P[nidx]=idx;
            if(ta==1)idx=nidx;
        }
        else idx=P[idx];

        while(i<len&&isbr(A[i]))i++;
    }

    /*for(int i=0;i<=nidx;i++){
        cout<<i<<"  "<<C[i]<<":  ";
        for(int j=0;j<V[i].size();j++)cout<<" "<<V[i][j];
        cout<<endl;
    }*/
    int m,ind;

    cin>>m;
    cin.getline(A,sz,'\n');

    for(int ts=1;ts<=m;ts++){
        cin.getline(A,sz,'\n');
        len=strlen(A);

        int i=0,ind=0;
        i64 num=0;

        for(;i<len;){
            num=0;
            while(i<len&&islower(A[i])){num=num*27+(A[i]-'a'+1);i++;}
            while(i<len&&(!islower(A[i])))i++;
            Q[ind++]=num;
        }
        qs=ind; cnt=IND=0;

        recur(0);
        cout<<cnt<<endl;
    }


    return 0;
}
