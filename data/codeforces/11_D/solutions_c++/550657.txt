#include <stdio.h>
#include <string.h>

long long dp[19][1<<18];
int a[19][19], fin;

long long go(const int x, const int mask) {
	long long ret = 0;
	if (dp[x][mask] >= 0)
		return dp[x][mask];
	if (a[x][fin]) ret += 1;
	for(int i=0;i<fin;i++)
		if((mask&(1<<i)) && a[x][i])
			ret += go(i, mask-(1<<i));
	dp[x][mask] = ret;
	return ret;
}

int main(void) {
	int n, m, i, x, y;
	scanf("%d%d", &n, &m);
	for(i=0;i<m;i++) {
		scanf("%d%d", &x, &y);
		--x;--y;
		a[x][y]=a[y][x]=1;
	}
/*	for(i=0;i<n;i++)
		for(int j=0;j<n;j++)
			a[i][j]=(i!=j);*/
	long long ans = 0;
	for(fin=n-1;fin>=2;--fin) {
		memset(dp, -1, sizeof(dp));
		for(i=0;i<fin;i++)
			if(a[i][fin])
				ans--;
		ans += go(fin, (1<<fin)-1);
	}
	printf("%I64d\n", ans / 2);
	return 0;
}
