#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <set>
#include <map>
#include <vector>
#include <cstring>

using namespace std;
const int N = 19;
long long f[1<<N][N];
bool edge[N][N];
int main(){
	int n,m;
	cin>>n>>m;
	for (int i=0;i<m;i++){
		int a,b;
		cin>>a>>b;
		a--;b--;
		edge[a][b]=edge[b][a]=true;
		f[(1<<a)^(1<<b)][max(a,b)]=1;
	}
	long long ans=0;
	for (int mask=1;mask<(1<<n);mask++){
		int k=__builtin_ctz(mask);
		for (int j=k+1;j<n;j++){
			if (f[mask][j]==0) continue;
			if (edge[k][j]) ans+=f[mask][j];
			for (int lj=k+1;lj<n;lj++){
				if (edge[j][lj]&&(!(mask&(1<<lj))))
				f[mask^(1<<lj)][lj]+=f[mask][j];
			}
		}
	}
	ans=(ans-m)/2;
	cout<<ans<<endl;
}