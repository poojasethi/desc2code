#include <cstdio>
#include <cstring>
#include <vector>
using namespace std;

int N,A,B;

int H[20];

int temp[20];
int cnt[20];
int ans[20];
int mincnt;
void DFS(int I,int s){
  if(s>=mincnt) return;
  if(I==N-1 && temp[I-1]<0 && temp[I]<0){
    if(s<mincnt){
      mincnt=s;
      memcpy(ans,cnt,sizeof(ans));
    }
    return;
  }
  if(I==N-1) return;
  int c;
  bool done=false;
  for(c=0;!done;++c){
    temp[I-1]-=c*B;
    temp[I]-=c*A;
    temp[I+1]-=c*B;

    cnt[I]=c;
    if(temp[I-1]<0){
      DFS(I+1,s+c);
    }
    if(temp[I-1]<0 && temp[I]<0 && temp[I+1]<0) done=true;

    temp[I-1]+=c*B;
    temp[I]+=c*A;
    temp[I+1]+=c*B;
  }
}
int main(){
  while(scanf("%d%d%d",&N,&A,&B)==3){
    for(int i=0;i<N;++i){
      scanf("%d",H+i);
      temp[i]=H[i];
    }

    memset(cnt,0,sizeof(cnt));
    mincnt=100000000;
    DFS(1,0);

    printf("%d\n",mincnt);
    vector<int> hit;
    for(int i=1;i<N-1;++i){
      for(int j=0;j<ans[i];++j){
	hit.push_back(i+1);
      }
    }
    for(int i=0;i<hit.size();++i){
      if(i==hit.size()-1) printf("%d\n",hit[i]);
      else printf("%d ",hit[i]);
    }
  }
  return 0;
}

