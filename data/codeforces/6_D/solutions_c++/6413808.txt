#include <cstdio>
#include <cstring>
#include <iostream>
using namespace std;

int n,a,b,ans = 0x7FFFFFFF,tn = 0;
int h[20];
int p[20],pp[20];
bool f[20][100][100][150];
void DFS(int id,int pre,int now)
{
	if(f[id][pre+60][now+60][tn])return;
	f[id][pre+60][now+60][tn] = true;
	if(id == n)
	{
		if(now < 0 && tn <= ans)
		{
			ans = tn;
			memcpy(pp,p,sizeof(p));
		}
		return;
	}
	int times = 0;
	if(pre >= 0)times = pre / b + 1;
	for(int i = times;;i++)
	{
		int npre = now - a * i;
		int nnow = h[id+1] - b * i;
		p[id] = i;
		tn += i;
		DFS(id + 1,npre,nnow);
		tn -= i;
		p[id] = 0;
		if(npre < 0 && nnow < 0)break;
	}
}
int main()
{
	scanf("%d%d%d",&n,&a,&b);
	for(int i = 1;i <= n;i++)
		scanf("%d",&h[i]);
	memset(f,0,sizeof(f));
	DFS(2,h[1],h[2]);
	cout << ans << endl;
	for(int i = 2;i <= n;i++)
		for(int j = 0;j < pp[i];j++)
			printf("%d ",i);
	puts("");
	return 0;
}

