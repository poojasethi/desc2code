#include <iostream>
#include <vector>
using namespace std;

int n, a, b, x, minCount = 1000000;;
vector<int> h, ans, tmp;

void dfs(int level, int hit, int& count)
{
	if(hit >= count)	return;
	if(level == n-1)
	{
		if(h[n-1] < 0)
		{
			if(hit < count)
			{
				ans = tmp;
				count = hit;
			}
		}
		return;
	}
	for(int k = 0; k <= max(h[level+1]/ b + 1, max(h[level] / a + 1, h[level-1]/ b + 1)); ++k)
	{
		if(h[level-1] < k * b)
		{
			h[level-1] -= k * b;
			h[level+1] -= k * b;
			h[level] -= k * a;
			for(int i = 0; i < k; ++i)	tmp.push_back(level);
			dfs(level + 1, hit + k, count);
			for(int i = 0; i < k; ++i)	tmp.pop_back();
			h[level] += k * a;
			h[level-1] += k * b;
			h[level+1] += k * b;
		}
	}
}

int main()
{
	cin >> n >> a >> b;
	for(int i = 0; i < n; ++i)
	{
		cin >> x;
		h.push_back(x);
	}
	dfs(1, 0, minCount);
	cout << minCount << endl;
	for(int i = 0; i < ans.size(); ++i)
		cout << ans[i] + 1 << " ";
	cout << endl;
	return 0;
}
