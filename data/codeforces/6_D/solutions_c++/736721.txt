#include <cstdio>

int n, a, b;
int h[11];
int nHits, nBest;
int hits[222], best[222]; 

void hit(int k) {
    h[k] -= a;
    h[k-1] -= b;
    h[k+1] -= b;
    hits[nHits++] = k;
}

void heal(int k) {
    h[k] += a;
    h[k-1] += b;
    h[k+1] += b;
    --nHits;
}

void solve(int k) {
    if (k==n-1) {
        int t = 0;
        while (h[k]>=0) {
            ++t;
            hit(k-1);
        }
        if (h[k-1]<0) {
            if (nBest==-1 || nHits<nBest) {
                nBest=nHits;
                for (int i=0; i<nHits; ++i)
                    best[i]=hits[i];
            }
        }
        while (t--) heal(k-1);
        return;
    }

    int t = 0;
    while (h[k-1]>=0) {
        ++t;
        hit(k);
    }

    while (h[k]>=0) {
        ++t;
        solve(k+1);
        hit(k);
    }
    solve(k+1);

    while (t--) heal(k);
}

int main() {
    scanf("%d%d%d", &n, &a, &b);
    for (int i = 0; i < n; ++i)
        scanf("%d", &h[i]);
    nBest = -1;
    solve(1);
    printf("%d\n", nBest);
    for (int i = 0; i < nBest; ++i)
        printf("%d%c", best[i] + 1, " \n"[i + 1 == nBest]);
    return 0;
}
