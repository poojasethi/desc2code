#include <iostream>
#include <cstring>
#include <cstdio>

using namespace std;

const int N=16;

int hp[N], n, a, b, x[N], cnt[N];
int ans;

void dfs(int u, int tot)
{
	if(ans<=tot) return;
	if(u==n-1)
	{
		int a1=hp[u-1]/b+1;
		if(hp[u-1]<0) a1=0;

		int a2=hp[u]/a+1;
		if(hp[u]<0) a2=0;

		int a3=hp[u+1]/b+1;

		x[u]=max(a1, max(a2, a3));
		tot+=x[u];
		if(ans>tot)
		{
			ans=tot;
			for(int i=1; i<=n; i++) cnt[i]=x[i];
		}
		return;
	}

	int a1=hp[u-1]/b+1;
	if(hp[u-1]<0) a1=0;

	int a2=hp[u]/a+1;
	if(hp[u]<0) a2=0;

	int a3=hp[u+1]/b+1;

	int Min=a1;
	int Max=max(a1, max(a2, a3));

	for(int i=Min; i<=Max; i++)
	{
		x[u]=i;
		hp[u-1]-=b*x[u];
		hp[u]-=a*x[u];
		hp[u+1]-=b*x[u];

		dfs(u+1, tot+i);

		hp[u+1]+=b*x[u];
		hp[u]+=a*x[u];
		hp[u-1]+=b*x[u];
		x[u]=0;
	}
}

int main()
{
	scanf("%d%d%d", &n, &a, &b);
	for(int i=1; i<=n; i++) scanf("%d", &hp[i]);
	memset(x, 0, sizeof x);
	ans=0x3fffffff;
	dfs(2, 0);
	printf("%d\n", ans);
	for(int i=2; i<n; i++)
	{
		for(; cnt[i]>0; cnt[i]--) printf("%d ", i);
	}
	printf("\n");
	return 0;
}
