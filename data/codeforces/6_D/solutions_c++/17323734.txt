#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;
int n, a, b;
int h[20], p[200];
bool dfs(int tot, int id, int pos) {
	if (tot == 0) {
		for (int i = 1; i <= n; i++)
			if (h[i] >= 0) return false;
		return true;
	}
	if (h[id] < 0) return dfs(tot, id + 1, pos);
	if (id == n) {
		p[tot] = n - 1;
		h[n] -= b;
		if (dfs(tot - 1, id, pos)) return true;
		h[n] += b;
	} else {
		for (int i = max(id, pos); i <= id + 1; i++) {
			if (i <= 1 || i >= n) continue;

			p[tot] = i;
			h[i] -= a; h[i - 1] -= b; h[i + 1] -= b;
			if (dfs(tot - 1, id, i)) return true;
			h[i] += a; h[i - 1] += b; h[i + 1] += b;
		}
	}
	return false;
}
int main() {
	//freopen("test.in", "r", stdin);
	scanf("%d%d%d", &n, &a, &b);
	for (int i = 1; i <= n; i++)
		scanf("%d", &h[i]);
	bool flg = true;
	for (int ans = 1; flg; ans++) {
		if (dfs(ans, 1, 2)) {
			flg = false;
			printf("%d\n", ans);
			for (int i = 1; i <= ans; i++)
				printf("%d ", p[i]);
			printf("\n");
		}
	}
	return 0;
}

 			  		  		 			   					 		   	