n, a, b = map(int,raw_input().split())

hps = map(int,raw_input().split())
for i in range(len(hps)):
    hps[i] += 1
    
dp = [[[[-1,-1,-1,-1,-1] for i in range(17)] for j in range(17)] for k in range(11)]

for i in range(hps[n-2]+1):
    for j in range(hps[n-1]+1):
        dp[n-2][i][j][3] = dp[n-2][i][j][0] = max([0,(i+a-1)/a,(j+b-1)/b])

for i in range(n-3,0,-1):
    for j in range(hps[i]+1):
        m = (j + a-1) / a
        for k in range(hps[i+1]+1):
            for l in range(m+1):
                x = max([0,j - l*a])
                y = k - l*b
                needH = (x+b-1)/b
                y = max([0,y-needH*a])
                z = max([0,hps[i+2]-needH*b])
                #print i,j,k,i+1,y,z
                if dp[i][j][k][0] == -1 or (dp[i+1][y][z][0] != -1 and dp[i+1][y][z][0] + l + needH < dp[i][j][k][0]):
                    dp[i][j][k][0] = dp[i+1][y][z][0] + l + needH
                    dp[i][j][k][1] = y
                    dp[i][j][k][2] = z
                    dp[i][j][k][3] = l
                    dp[i][j][k][4] = needH
needH = (hps[0]+b-1)/b
x = max([0,hps[1]-needH*a])
y = max([0,hps[2]-needH*b])
ans = needH + dp[1][x][y][0]
hitNum = [0 for i in range(n+1)]
hitNum[1] += needH

for i in range(1,n-1):
    if dp[i][x][y][0] == -1:
        break;
    if dp[i][x][y][3] > 0:
        hitNum[i] += dp[i][x][y][3]
    if dp[i][x][y][4] > 0:
        hitNum[i+1] += dp[i][x][y][4]
    x,y = dp[i][x][y][1],dp[i][x][y][2]

print ans
for i in range(1,n):
    for j in range(hitNum[i]):
        print i+1,