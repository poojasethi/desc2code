def main():
    [n, a, b] = map(int, raw_input().split())
    h = map(lambda x: int(x) + 1, raw_input().split())
    dp = [[[1000 for i in xrange(17)] for i in xrange(17)] for i in xrange(n)]
    v = [[[-1 for i in xrange(17)] for i in xrange(17)] for i in xrange(n)]
    dp[0][h[0]][h[1]] = 0
    for i in xrange(n - 2):
        for j in xrange(17):
            for k in xrange(17):
                for l in xrange(17):
                    if j - l * b > 0:
                        continue
                    ii, jj, kk = i + 1, max(0, k - l * a), max(0, h[i + 2] - l * b)
                    if dp[i][j][k] + l < dp[ii][jj][kk]:
                        dp[ii][jj][kk] = dp[i][j][k] + l
                        v[ii][jj][kk] = ((i * 100 + j) * 100 + k) * 100 + l
    ans = []
    def dfs(i, j, k):
        if v[i][j][k] < 0:
            return
        ii = v[i][j][k] / (100 ** 3) % 100
        jj = v[i][j][k] / (100 ** 2) % 100
        kk = v[i][j][k] / 100 % 100
        ans.extend([(i + 1) for l in xrange(v[i][j][k] % 100)])
        dfs(ii, jj, kk)
    dfs(n - 2, 0, 0)
    print dp[n - 2][0][0]
    print ' '.join(map(str, ans))

if __name__ == '__main__':
    main()
