import sys, math
def rs():
    return sys.stdin.readline().strip()
def ri():
    return int(sys.stdin.readline().strip())
def ras():
    return list(sys.stdin.readline().strip())
def rai():
    return map(int,sys.stdin.readline().strip().split())




def solve():
#    n,k = rai()
#    arr = rai()
#    sa = [0]*n
#    msa = [(0,0)]*n
#    li = sum(arr[:k])
#    sa[k-1] = li
#    i = k
#    while i < n:
#        li = li + arr[i] - arr[i-k]
#        sa[i] = li
#        i += 1
#    i, mx, pos = k, 0, 0
#    while i < n:
#        if mx < sa[i-k]:
#            mx = sa[i-k]
#            pos = i-k
#        msa[i] = (mx, pos)
#        i += 1
#
#    mg, ag, bg, bi = 0, 0, 0, 0
#    while bi < n:
#        v, p = msa[bi]
#        if v + sa[bi] > mg:
#            bg = bi
#            ag = p
#            mg = v + sa[bi]
#        bi += 1
#    print ag-k+2, bg-k+2










    n,k = rai()
    arr = rai()

    results = [0]*n

    results[0] = sum(arr[:k])
    for x in xrange(1,n-k+1):
        results[x] = results[x-1] - arr[x-1] + arr[x+k-1]

    rr = [0]*n
    m = results[n-k]

    for x in xrange(n-k, -1, -1):
        if results[x] >= m:
            m = results[x]
        rr[x] = m


    si = 0
    m2 = 0
    mm = 0

    for x in xrange(n-k):
        if results[x] + rr[x+k] > mm:
            si = x
            mm = results[x] + rr[x+k]
            m2 = rr[x+k]

    se = si+k


    for x in xrange(si+k, n-k+1):
        if results[x] == m2:
            se = x
            break;

    print str(si+1) + " " + str(se+1)


solve()