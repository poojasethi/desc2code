#! /usr/bin/python

import sys


def compute_absurdity(laws, k):
  ret = [0 for i in xrange(len(laws))]
  total = 0
  for i in xrange(k):
    total += laws[i]
  for index, law in enumerate(laws):
    ret[index] = total
    if index + k >= len(laws):
      break
    total -= law
    total += laws[index + k]
  return ret


def compute_max(absurdities):
  l = len(absurdities)
  ret = [(0, 0) for i in xrange(l)]
  last = (0, l-1)
  for index, range_max in enumerate(reversed(absurdities)):
    value, idx = last
    if value < range_max or (value == range_max and idx > l - index - 1):
      ret[l - index - 1] = (range_max, l - index -1)
      last  = ret[l - index - 1]
    else:
      ret[l - index - 1] = last
  return ret


def solve(laws, k) :
  n = len(laws)
  range_sums = compute_absurdity(laws, k)
  max_sums = compute_max(range_sums)
  ret = (0, (n - 1, n -1) )
  for a in xrange(n - k):

    a_abs = range_sums[a]
    b_abs, b = max_sums[a + k]
    current = (a_abs + b_abs, (a, b))
    if ret[0] < current[0] or (ret[0] == current[0] and ret[1] > current[1]):
      ret = current
  return ret

 
def main():
  n, k = map(int, sys.stdin.readline().split())
  laws = map(int, sys.stdin.readline().split())
  max_abs, coords = solve(laws, k)
  a, b = coords
  print "%d %d" % (a + 1, b + 1)


if __name__ == '__main__':
  main()
