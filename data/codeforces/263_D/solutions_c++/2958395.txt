#include <iostream>
#include <cstring>
#include <cstdio>
#include <vector>
#include <cstdlib>
using namespace std;
const int M = 100010;
vector<int>v[M],ans;
bool visit[M],flag;
int n,m,k;

void dfs(int x,int f){
	ans.push_back(x);
	visit[x]=1;
	for(int i=0;i<v[x].size();i++){
		int y=v[x][i];
		if(y==f&&ans.size()>k){
			cout<<ans.size()<<endl;
			for(int j=0;j<ans.size();j++)
				cout<<ans[j]<<" ";
			cout<<endl;
			flag=1;
			exit(0);
		}
		if(!visit[y])
			dfs(y,f);
	}
//	visit[ans[ans.size()-1]]=0;
	ans.pop_back();
}
int main(){
	cin>>n>>m>>k;
	while(m--){
		int x,y;
		cin>>x>>y;
		v[x].push_back(y);
		v[y].push_back(x);
	}
	flag=0;
	for(int i=1;i<=n;i++){
		memset(visit,0,sizeof(visit));
		dfs(i,i);
		if(flag)	break;
	}
	return 0;
}
