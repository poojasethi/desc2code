#include <bits/stdc++.h>
using namespace std;
#define N 100005
vector <int> v[N];
int par[N];
int depth[N];
bool was[N];
int n,m,k;
int dfs(int cur , int time)
{
	depth[cur] = time;
	was[cur]=1;
	int to;
	for(int i=0 ;i<v[cur].size();i++)
	{
		to = v[cur][i];
		if(was[to])
		{
			if(depth[to] - depth[cur] >= k){
				int ans = depth[to] - depth[cur]+1;
				printf("%d\n",ans);
				while(to != cur)
				{
					printf("%d ",to+1);
					to = par[to];
				}
				printf("%d\n",cur+1);
				return 1;
			}
		}
		else
		{
			par[to] = cur;
			if(dfs(to,time+1))return 1;
		}
	}
	return 0;
}
int main()
{
	int x,y;
	cin>>n>>m>>k;
	for(int i=0;i<m;i++)
	{
		scanf("%d%d",&x,&y);
		x--;y--;
		v[x].push_back(y);
		v[y].push_back(x);
	}
	dfs(0,0);
	return 0;
}