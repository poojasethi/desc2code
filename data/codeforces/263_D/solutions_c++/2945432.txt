#include <iostream>
#include <cstdlib>
#include <cstring>
#include <stack>
#include <vector>

#define MAXN 100050

using namespace std;

int n, m, k;
int flag[MAXN]={0};
stack<int> s;
vector<int> v[MAXN];

void dfs(int u, int p)
{
//	cout<<u<<" "<<flag[u]<<endl;
	for(int i=0; i<v[u].size(); i++)
	{
		if(flag[v[u][i]]==0)
		{
			flag[v[u][i]]=p;
			s.push(v[u][i]);
			dfs(v[u][i], p+1);
			flag[v[u][i]]=0;
			s.pop();
		}
		else 
		{
			if(flag[u]-flag[v[u][i]]>=k)
			{
				cout<<flag[u]-flag[v[u][i]]+1<<endl;
				while(s.top()!=v[u][i]) cout<<s.top()<<" ", s.pop();
				cout<<v[u][i]<<endl;
				exit(0);
			}
		}
	}
}

int main()
{
	cin>>n>>m>>k;
	for(int i=0; i<m; i++)
	{
		int a, b;
		cin>>a>>b;
		v[a].push_back(b);
		v[b].push_back(a);
	}
	s.push(1); flag[1]=1;
	dfs(1, 2);
	return 0;
}
