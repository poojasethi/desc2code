#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <vector>
#include <stack>
#define pb push_back
#define maxn 100005
using namespace std;
vector < int > d[maxn];
int n,m,k,i,j,a,b,c,dep[maxn];
bool cnt;
stack <int > s;
void dfs(int x,int lv){
	 if(cnt)
	 return ;
	 dep[x]=lv;
	 s.push(x);
	 int i;
	 for(i=0;i<d[x].size();i++){
		 int nd=d[x][i];
		 if(!dep[nd]){
			 dfs(nd,lv+1);
	         if(cnt)
	         return ;
		 }
		 if(dep[x]-dep[nd]>=k){
			printf("%d\n",dep[x]-dep[nd]+1);
			int j=0;
			cnt=1;
			while(j<dep[x]-dep[nd]+1){
				printf("%d ",s.top());
				s.pop();
				j++;
			}
			return ;
		 }
	 }
	 s.pop();
}
int main(){
	scanf("%d %d %d",&n,&m,&k);
	for(i=1;i<=m;i++){
		scanf("%d %d",&a,&b);
		d[a].pb(b);
		d[b].pb(a);
	}
	for(i=1;i<=n;i++)
	if(!dep[i])
	dfs(i,1);
	return 0;
}
