// 10 monthes remaining for red =D
#include <iostream>
#include <vector>

using namespace std;

const int MAXN = 1e5 + 10;
vector<int> ng[MAXN], path;
int pos[MAXN];
bool mark[MAXN];

void dfs(int x) {
	pos[x] = path.size();
	path.push_back(x);
	mark[x] = true;
	for (int i = 0; i < ng[x].size(); i++) {
		int u = ng[x][i];
		if (!mark[u]) {
			dfs(u);
			return;
		}
	}
}

int main() {
	int n, m, k;
	cin >> n >> m >> k;
	for (int i = 0; i < m; i++) {
		int x, y;
		cin >> x >> y;
		x--; y--;
		ng[x].push_back(y);
		ng[y].push_back(x);
	}
	dfs(0);
	int u = path.back(), ans = 1e9;
	for (int i = 0; i < ng[u].size(); i++)
		ans = min(ans, pos[ng[u][i]]);
	cout << path.size() - ans << endl;
	for (int i = ans; i < path.size(); i++)
		cout << path[i] + 1 << " ";
	cout << endl;
	return 0;
}
