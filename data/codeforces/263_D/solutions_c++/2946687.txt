#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;
#define MAXN 100010
vector <int> vt[MAXN];
int n, m, k, a, b, vi[MAXN], stack[MAXN], index[MAXN], st, ed, cnt;
void dfs(int x){
	stack[++cnt] = x;
	index[x] = cnt;
	for(int i = 0; i < vt[x].size(); i++){
		int y = vt[x][i];
		if(index[y]){
			if(cnt - index[y] >= k){
				st = index[y], ed = cnt;
				return;
			}
		}
	}
	for(int i = 0; i < vt[x].size(); i++){
		int y = vt[x][i];
		if(!index[y]){
			dfs(y);
			return;
		}
	}
}
int main(){
	scanf("%d%d%d", &n, &m, &k);
	cnt = 0;
	for(int i = 0; i < m; i++){
		scanf("%d%d", &a, &b);
		vt[a].push_back(b);
		vt[b].push_back(a);
	}
	dfs(1);
	printf("%d\n", ed - st + 1);
	for(int i = st; i <= ed; i++)
		printf("%d ", stack[i]);
	return 0;
}
