//By momo
#include <cstdio>
#include <vector>
#include <algorithm>

#define N 100010
#define PB push_back
#define INF 999999999
#define FOR(it, c) for(__typeof((c).begin())it=(c).begin();it!=(c).end();it++)

using namespace std;

int n, m, k;
vector<int> G[N];
int vst[N], per[N], cnt, ans;

void dfs(int p){
	vst[p] = cnt;
	per[cnt++] = p;
	FOR(it, G[p]){
		if(vst[*it] <= vst[p]-k){
			ans = 1;
			printf("%d\n", vst[p]-vst[*it]+1);
			for(int i = vst[*it]; i <= vst[p]; i++)
				printf("%d%c", per[i]+1, i == vst[p]?'\n':' ');
		}
		else if(vst[*it] == INF) dfs(*it);
		if(ans) return;
	}
}

int main (){
	scanf("%d%d%d", &n, &m, &k);
	for(int i = 0; i < m; i++){
		int a, b; scanf("%d%d", &a, &b);
		a--, b--; G[a].PB(b); G[b].PB(a);
	}
	fill(vst, vst+n, INF);
	cnt = 0; dfs(0);
}
