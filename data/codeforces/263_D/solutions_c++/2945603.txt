#include<iostream>
#include<vector>
using namespace std;
vector<int> G[100100],C;bool mark[100100];int k;
void dfs(int x){
    int i,j; 
    mark[x]=1;C.push_back(x);
    for(i=0;i<G[x].size();i++){
       if(mark[G[x][i]]) continue; 
       dfs(G[x][i]);
       break; 
    }
}
int main()
{
    int i,j,n,m,v,u;
    cin>>n>>m>>k;
    for(i=0;i<m;i++){
       cin>>v>>u;
       G[v].push_back(u);G[u].push_back(v); 
    }
    dfs(1);
    bool neib[100100];j=C.back();
    for(i=0;i<G[j].size();i++) neib[G[j][i]]=1;
    while(!neib[C[0]]) C.erase(C.begin()+0); 
    cout<<C.size()<<endl;
    for(i=0;i<C.size();i++) cout<<C[i]<<" ";
    //system("pause");
    cout<<endl;
    return 0;
}
