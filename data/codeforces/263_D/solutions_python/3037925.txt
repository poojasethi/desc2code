#! /Library/Frameworks/Python.framework/Versions/2.6/bin/python

inp = raw_input().split()

n = int(inp[0])
m = int(inp[1])
k = int(inp[2])

adjList = [set() for i in range(n)]

for i in range(m):
	inp = raw_input().split()
	a = int(inp[0]) - 1
	b = int(inp[1]) - 1
	adjList[a].add(b)
	adjList[b].add(a)

path = [0]
visited = set()
desired = set()
loopFound = False;

while (not(loopFound)):
	for neighbour in adjList[path[-1]]:
		if (neighbour in desired):
			startNode = neighbour
			loopFound = True
			break
		elif (not(neighbour in visited)):
			nextNode = neighbour

	if (not(loopFound)):
		visited.add(path[-1])
		path += [nextNode]
		if (len(path) > k):
			desired.add(path[-(k+1)])

for i in range(len(path)):
	if (path[i] == startNode):
		startInd = i
		break

print len(path) - startInd
for i in range(startInd, len(path)):
	print path[i] + 1,