#!/usr/bin/python 

n, m, k = map(int, raw_input().split())

graph = [[] for i in range(n+1)]
for i in range(m) : 
    x, y = map(int, raw_input().split())
    graph[x].append(y)
    graph[y].append(x)

startPoint = max(zip(range(1, n+1), [len(graph[i]) for i in range(1, n+1)]), 
                key = lambda pair: pair[1])[0]
length = k + 1

timer = 0
visit = [0 for i in range(n+1)]
finish = [0 for i in range(n+1)]
pre = [0 for i in range(n+1)]
trace = []
result = []

stack = []
stack.append(startPoint)
flag = True
while len(stack) > 0 and flag : 
    cur = stack[-1]
    if finish[cur] > 0 : 
        stack.pop()
    elif visit[cur] > 0 : 
        timer += 1
        finish[cur] = timer
        trace.pop()
    else : 
        timer += 1
        visit[cur] = timer
        trace.append(cur)
        for adj in graph[cur] : 
            if adj == startPoint and len(trace) >= k+1 : 
                result = trace[:]
                flag = False
                break
            elif visit[adj] == 0 : 
                stack.append(adj)

print len(result)
print " ".join(map(str, result))
