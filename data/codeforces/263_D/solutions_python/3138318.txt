n, m, k = map(int, raw_input().strip().split(' '))
edges = [[] for _ in xrange(n)]

for _ in xrange(m):
    a, b = map(int, raw_input().strip().split(' '))
    a -= 1; b -= 1
    edges[a].append(b)
    edges[b].append(a)

for i in xrange(n):
    edges[i] = sorted(edges[i])

els = [len(edge) for edge in edges]
was = [False for _ in xrange(n)]
was[0] = True
stack = [(0, 0)]
nodes = [-1 for _ in xrange(n)]
nodes[0] = 0
indexes = [0 for _ in xrange(n)]
counter = 1

while stack:
    curr_node, curr_index = stack.pop()
    while curr_index == els[curr_node]:
        counter -= 1
        was[curr_node] = False
        curr_node, curr_index = stack.pop()

    neigh = edges[curr_node][curr_index]
    if was[neigh] and counter - indexes[neigh] >= k + 1:
        print counter - indexes[neigh]
        print ' '.join(map(lambda x: str(x + 1), nodes[indexes[neigh]:counter]))
        exit()
    elif not was[neigh]:
        was[neigh] = True
        nodes[counter] = neigh
        indexes[neigh] = counter
        counter += 1
        stack.append((curr_node, curr_index + 1))
        stack.append((neigh, 0))
    else:
        stack.append((curr_node, curr_index + 1))
