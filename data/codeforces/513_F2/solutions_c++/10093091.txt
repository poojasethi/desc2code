#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <vector>
#include <ctime>
#include <map>
#define fi first
#define se second
#define PA pair<int,int>
#define VI vector<int>
#define VP vector<PA >
#define mk(x,y) make_pair(x,y)
#define int64 long long
#define N 2000
#define M 1000000
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
const int a1[4]={0,0,1,-1},a2[4]={1,-1,0,0};
struct ww {
	int x,y,t;
	inline void read() {
		scanf("%d%d%d",&x,&y,&t);
	}
} d1[N],d2[N],O;
int i,j,k,n,m,n1,n2,s,num,S,T,t;
int dis[30][30][30][30];
char p[30][30];
PA e[N];
map<PA,int> d;
int bi[M],liu[M],ne[M],he[N],g[N],F[N],gg[N];
inline void add(int x,int y,int z) {
	bi[++t]=y,liu[t]=z,ne[t]=he[x],he[x]=t;
	bi[++t]=x,liu[t]=0,ne[t]=he[y],he[y]=t;
}
inline bool bfs() {
	int l,r,v;
	g[l=r=1]=S; gg[S]=0; F[S]=++num;
	for (;l<=r;l++) {
		int A=g[l];
		for (v=he[A];v;v=ne[v]) if (liu[v]&&F[bi[v]]!=num) {
			F[bi[v]]=num,g[++r]=bi[v],gg[bi[v]]=gg[A]+1;
			if (bi[v]==T) return 1;
		}
	}
	return 0;
}
int dfs(int x,int y) {
	if (x==T) return y;
	int w=0,v,re;
	for (v=he[x];v&&w<y;v=ne[v]) {
		int A=bi[v];
		if (liu[v]&&F[A]==num&&gg[A]==gg[x]+1&&(re=dfs(A,min(y-w,liu[v]))))
			liu[v]-=re,liu[v^1]+=re,w+=re;
	}
	if (!w) gg[x]=0;
	return w;
}
inline void fail() {
	printf("-1\n");
	exit(0);
}
inline void bfs(int x,int y) {
	int l,r,i;
	d.clear(); e[l=r=1]=mk(x,y); d[mk(x,y)]=0;
	for (;l<=r;l++) {
		PA A=e[l];
		dis[x][y][A.fi][A.se]=d[A];
		For(i,0,3) {
			int x=A.fi+a1[i],y=A.se+a2[i];
			if (x&&y&&x<=n&&y<=m&&p[x][y]=='.'&&!d.count(mk(x,y))) {
				e[++r]=mk(x,y); d[mk(x,y)]=d[A]+1;
			}
		}
	}
}
inline int C(int x,int y,int z) {
	return z*n*m+(x-1)*m+y-1;
}
inline bool ju(int64 ti) {
	int i,j,u,r,an=0;
	S=n*m*4+1,T=S+1,t=1;
	For(i,0,T) he[i]=0;
	For(i,1,n1) {
		add(S,i-1,1);
		int64 ci=ti/d1[i].t;
		For(u,1,n)For(r,1,m) {
			int A=dis[d1[i].x][d1[i].y][u][r];
			if (A<0||A>ci) continue;
			add(i-1,C(u,r,1),1);
		}
	}
	For(i,1,n)For(j,1,m) add(C(i,j,1),C(i,j,2),1);
	For(i,1,n2) {
		add(n*m*3+i-1,T,1);
		int64 ci=ti/d2[i].t;
		For(u,1,n)For(r,1,m) {
			int A=dis[d2[i].x][d2[i].y][u][r];
			if (A<0||A>ci) continue;
			add(C(u,r,2),n*m*3+i-1,1);
		}
	}
	for (;bfs();an+=dfs(S,N));
	return an==n1;
}
int main() {
	scanf("%d%d%d%d",&n,&m,&n1,&n2);
	if ((n1+n2)%2==0) fail();
	For(i,1,n) {
		scanf("%s",p[i]+1);
		For(j,1,m) s+=p[i][j]=='.';
	}
	O.read();
	For(i,1,n1) d1[i].read();
	For(i,1,n2) d2[i].read();
	if (n1>n2) {
		For(i,1,n1) swap(d1[i],d2[i]);
		swap(n1,n2);
	}
	if (n1+1!=n2||s<n2) fail();
	d1[++n1]=O;
	memset(dis,255,sizeof(dis));
	For(i,1,n)For(j,1,m) if (p[i][j]=='.') bfs(i,j);
	int64 l=0,r=(int64)1e18,mid;
	for (;l<=r;) {
		mid=(l+r)/2;
		if (ju(mid)) r=mid-1;
		else l=mid+1;
	}
	printf("%I64d\n",r>1e17?-1:r+1);
	return 0;
}
