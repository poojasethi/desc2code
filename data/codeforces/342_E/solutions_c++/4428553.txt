#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include<map>
#include<vector>
#include<string>
#include<algorithm>
#include<cmath>
#define eps 1e-10
#include<queue>
using namespace std;
const int maxn=100000+10;
const int maxc=1e9+7;
int n,m,size;
int head[maxn];
struct Edge
{
    int to,next;
}e[maxn << 1];
int d[maxn];
bool flag[maxn];
void clear()
{
    size=0;
    memset(head,-1,sizeof(head));
}
void _add(int a,int b)
{
    e[size].to=b;
    e[size].next=head[a];
    head[a]=size++;
}
void add(int a,int b)
{
    _add(a,b);
    _add(b,a);
}
queue<int> q;
void spfa()
{
    while(!q.empty())
    {
        int x=q.front();q.pop();
        flag[x]=false;
        for(int k=head[x];k!=-1;k=e[k].next)
        {
            int v=e[k].to;
            if(d[v]>d[x]+1)
            {
                d[v]=d[x]+1;
                if(flag[v]==false)
                {
                  q.push(v);
                  flag[v]=true;
                }
            }
        }
    }
}
int main()
{
    //freopen("in","r",stdin);
   int x,y;
   clear();
   scanf("%d %d",&n,&m);
   for(int i=0;i<n-1;i++)
   {
       scanf("%d %d",&x,&y);
       add(x,y);
   }
   for(int i=1;i<=n;i++){d[i]=maxc;flag[i]=false;}
   q.push(1);d[1]=0;
   spfa();
   while(m--)
   {
       scanf("%d %d",&x,&y);
       if(x==1)
       {
           d[y]=0;
           q.push(y);
           flag[y]=true;
       }
       else
       {
           spfa();
           printf("%d\n",d[y]);
           memset(flag,false,sizeof(flag));
       }
   }
   return 0;
}
