#define INF 2000000000
#include <cstdio>
#include <cstring>
#include <vector>

using namespace std;

int c[100001], d[100001];
vector<int> children[100001];
vector<int> to_color;

int visited[100001];
void colorFill(int dist) {
  vector<int> frontier;
  while (to_color.size()) {
    int v = to_color.back();
    to_color.pop_back();
    visited[v] = 1;
    if (d[v] <= dist) continue;
    d[v] = dist;
    for (int j = 0; j < children[v].size(); ++j) {
      if (visited[children[v][j]]) continue;
      frontier.push_back(children[v][j]);
    }
  }
  if (frontier.size()) {
    to_color = frontier;
    colorFill(dist+1);
  }
}

int main() {
  int i, n, m, a, b, t, v;
  scanf("%d %d", &n, &m);
  for (i = 0; i < n-1; ++i) {
    scanf("%d %d", &a, &b);
    children[a].push_back(b);
    children[b].push_back(a);
  }
  for (i = 1; i <= n; ++i) {
    d[i] = INF;
  }
  to_color.push_back(1);
  while (m--) {
    scanf("%d %d", &t, &v);
    if (t == 1) {
      to_color.push_back(v);
    } else {
      memset(visited, 0, sizeof(visited));
      colorFill(0);
      printf("%d\n", d[v]);
    }
  }
  return 0;
}
