#include<iostream>
#include<queue>
#include<vector>
using namespace std;
const int MAXN = 1e5+5;
const int INF = 1e9;
vector<int> adj[MAXN];
int N, M, d[MAXN];
queue<int> q;
void bfs(){
    int a,b;
    while (!q.empty()){
        a = q.front(); q.pop();
        for (int i =0; i<adj[a].size(); i++){
            b = adj[a][i];
            if (d[a]+1<d[b]){
                d[b] = d[a]+1;
                q.push(b);
            }
        }
    }
}
int main(){
    cin>>N>>M;
    for (int i =0; i<N-1; i++){
        int a,b; cin>>a>>b; a--; b--;
        adj[a].push_back(b); adj[b].push_back(a);
    }
    for (int i =1; i<N; i++) d[i] = INF;
    q.push(0);
    bfs();
    int t,v;
    for (int i =0; i<M; i++){
        cin>>t>>v;
        if (t==1){
            d[v-1] = 0;
            q.push(v-1);
        }
        else{
            bfs();
            cout<<d[v-1]<<endl;
        }
    }
}