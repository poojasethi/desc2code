#include <algorithm>
#include <stdio.h>
#include <vector>
#include <queue>
#define  maxn      100003
#define  pb		   push_back
using    namespace std;

int n,m;
int sz[maxn];
int dist[maxn];
queue<int>Q;
vector<int>adj[maxn];

void bfs()
{
  while(!Q.empty())
  {
    int node=Q.front();
    Q.pop();
    for(int i=0 ; i<sz[node] ; i++)
      if(dist[node]+1<dist[adj[node][i]])
      {
	    dist[adj[node][i]]=dist[node]+1;
	    Q.push(adj[node][i]);
	  }
  }
}

int main()
{
  scanf("%d%d",&n,&m);
  for(int i=1,a,b ; i<n ; i++)
  {
    scanf("%d%d",&a,&b);
    adj[a].pb(b);
    adj[b].pb(a);
    sz[a]++,sz[b]++;
  }
  for(int i=2 ; i<=n ; i++)  dist[i]=maxn;
  Q.push(1);
  bfs();
  for(int i=0,st,x ; i<m ; i++)
  {
    scanf("%d%d",&st,&x);
    if(st==1)
    {
      dist[x]=0;
      Q.push(x);
	}
	else
	{
	  bfs();
	  printf("%d\n",dist[x]);
	}
  }
  return 0;
}
