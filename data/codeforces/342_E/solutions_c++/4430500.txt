
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <sstream>
#include <queue>
#include <list>
#include <stack>
#include <cmath>
#include <map>
#include <set>
#include <cstring>
#include <cstdio>
#include <cstdlib>

using namespace std;

#define DEBUG
#define REP(i,a) for(i=0;i<a;i++)
#define FOR(i,a,b) for(i=a;i<b;i++)
#define VE vector<int>
#define SZ size()
#define PB push_back
#define all(i) (i).begin(), (i).end()
#define PI acos(-1.0)
#define ii pair<int,int>
#define inf_ll (((1LL<<62)-1)<<1)+1
#define inf_i 1<<31-1

vector<int> ady_list[100001];
queue<int> q;
static int dist[100001];

void BFS()
{
    int i;
    while(!q.empty())
    {
        int u=q.front();q.pop();
        REP(i,ady_list[u].size())
        {
            int v=ady_list[u][i];
            if(dist[v]>dist[u]+1)
            {
                dist[v]=dist[u]+1;
                q.push(v);
            }
        }
    }
}

int main()
{
/*
   freopen("input.txt","r",stdin);
   freopen("output.txt","w",stdout);
*/
    int n,m,i,u,v,a,b;
    scanf("%d %d",&n,&m);
    REP(i,n-1)
    {
        scanf("%d %d",&u,&v);
        ady_list[u].PB(v);
        ady_list[v].PB(u);
    }
    REP(i,n+1)
        dist[i]=inf_i;
    dist[1]=0;
    q.push(1);
    REP(i,m)
    {
        scanf("%d %d",&a,&b);
        if(a==1)
        {
            dist[b]=0;
            q.push(b);
        }
        else
        {
            BFS();
            printf("%d\n",dist[b]);
        }
    }
/*
    fclose(stdin);
    fclose(stdout);
*/
   return 0;
}
