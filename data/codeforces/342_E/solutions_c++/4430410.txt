#include <ctime>
#include <cmath>
#include <queue>
#include <cstdio>
#include <string>
#include <vector>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;
#define pb push_back

const int maxn = 100100;

vector <int> t[maxn];
bool c[maxn];
queue <int> q;
int dis[maxn];
int n, m;

void BFS() {
	int u, v;
	while(!q.empty()) {
		u = q.front();
		q.pop();
		for(vector <int>::iterator i = t[u].begin(); i != t[u].end(); i++) {
			v = *i;
			if(dis[v] > dis[u] + 1) {
				dis[v] = dis[u] + 1;
				q.push(v);
			}
		}
	}
}

int main() {
	scanf("%d %d\n", &n, &m);

	int u, v;
	for(int i = 1; i < n; i++) {
		scanf("%d %d\n", &u, &v);
		t[u].pb(v);
		t[v].pb(u);
	}

	for(int i = 1; i <= n; i++)
		dis[i] = n << 1;
	c[1] = 1;
	q.push(1);
	dis[1] = 0;
	for(int o = 1; o <= m; o++) {
		scanf("%d %d", &u, &v);
		if(u == 1) {
			q.push(v);
			dis[v] = 0;
		}
		else {
			BFS();
			printf("%d\n", dis[v]);
		}
	}

	return 0;
}
