#include <bits/stdc++.h>

using namespace std;

const int K=320;
int N,M,dn[110000],cnt=1,used[110000],dad[110000][20],der[110000];
vector <int> v[110000],sq;
queue <int> q;

void f( int x , int y ){
	used[x]=cnt;
	dn[x]=der[x]=y;
	for( int i=0 ; i<(int)v[x].size() ; i++ ) if( used[v[x][i]] != cnt ){
		f( v[x][i] , y+1 );
		dad[v[x][i]][0]=x;
	}
}

int len( int x , int y ){
	int res=0;
	if( der[x] < der[y] ) swap( x , y );
	for( int i=19 ; i>=0 ; i-- ) if( der[dad[x][i]] >= der[y] ){
		x=dad[x][i];
		res+=(1<<i);
	}
	if( x == y ) return res;
	for( int i=19 ; i>=0 ; i-- ) if( dad[x][i] != dad[y][i] ){
		x=dad[x][i];
		y=dad[y][i];
		res+=(1<<i)+(1<<i);
	}
	return res+2;
}

void upd(){
	while( !q.empty() ){
		int x=q.front();
		q.pop();
		for( int i=0 ; i<(int)v[x].size() ; i++ ) if( dn[v[x][i]] > dn[x]+1 ){
			dn[v[x][i]]=dn[x]+1;
			q.push( v[x][i] );
		}
	}
}

int main(){
	
	cin >> N >> M;
	for( int i=1,a,b ; i<N ; i++ ){
		scanf(" %d %d",&a,&b);
		v[a].push_back( b );
		v[b].push_back( a );
	}
	
	der[0]=-1;
	f( 1 , 0 );
	cnt++;
	for( int j=1 ; j<=19 ; j++ )
		for( int i=1 ; i<=N ; i++ ) dad[i][j]=dad[dad[i][j-1]][j-1];
	
	for( int i=1,j=0,a,b ; i<=M ; i++ ){
		scanf(" %d %d",&a,&b);
		if( a == 1 ){
			j++;
			sq.push_back( b );
			if( j%K == 0 ){
				for( int k=0 ; k<(int)sq.size() ; k++ ) q.push( sq[k] ),dn[sq[k]]=0;
				upd();
				sq.clear();
			}
		}else{
			int res=dn[b];
			for( int k=0 ; k<(int)sq.size() ; k++ ){
				res=min( res , len( b , sq[k] ) );
				
			}
			printf("%d\n",res);
		}
	}
	
	return 0;
	
}
