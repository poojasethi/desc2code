#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define all(a)  a.begin(), a.end()
#define allr(a) a.rbegin(), a.rend()

#define fill(a, x) memset(a, x, sizeof(a));
#define mod 1000000007

using namespace std;
typedef long long LL;
typedef vector <LL> VL;
typedef map <LL, LL> ML;
typedef pair<LL, LL> PL;
typedef vector <PL> VPL;

vector<vector<int> > Tree;
int Ans[1000005];

int Colors[100005];
int start = 0;
int End = 0;

int N, M;

int dfs(){
    int y;
    start = 0;
    while(start < End){
        y = Colors[start];
        start++;
        for(int i=0;i<Tree[y].sz;++i){
            if(Ans[y] + 1 < Ans[Tree[y][i]]){
                Ans[Tree[y][i]] = Ans[y] + 1;
                Colors[End] = Tree[y][i];
                End++;
            }
        }
    }
}

int main() {
    scanf("%d%d", &N, &M);
    Tree.resize(N + 5);
    int x, y;

    for(int n=0;n<(N-1);++n){
        scanf("%d%d", &x, &y);
        Tree[x].pb(y);
        Tree[y].pb(x);
    }
    for(int n=1;n<=N;++n){
        Ans[n] = 1e9;
    }
    Ans[1] = 0;
    Colors[End]= 1;
    End++;
    dfs();
    start = 0;
    End = 0;
    while(M--){
        scanf("%d%d", &x, &y);
        if(x == 1){
            Colors[End] = y;
            End++;
            Ans[y] = 0;
        }
        else if(x == 2){
            //cout << start << "  " << End << endl;
            dfs();
            printf("%d\n", Ans[y]);
            start = 0;
            End = 0;
        }
    }
    return 0;
}