#include<vector>
#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;

const int N = 100005, INF = 200000000;
int n, m, dis[N], head[N], next[N << 1], v[N << 1], qhead, qtail, q[N];
bool red[N];

void BFS(int s) {
	qhead = 0; qtail = 1;
	q[1] = s;
	dis[s] = 0;
	while (qhead < qtail) {
		int i = q[++qhead];
		for (int j = head[i]; ~j; j = next[j]) {
			int u = v[j];
			if (dis[u] > dis[i] + 1) {
				dis[u] = dis[i] + 1;
				q[++qtail] = u;
			}
		}
	}
}

int vc[N];
int rdis[N];

int rBFS(int s, int st) {
	if (red[s]) {
		return 0;
	}
	qhead = 0; qtail = 1;
	q[1] = s;
	vc[s] = st;
	rdis[s] = 0;
	while (qhead < qtail) {
		int i = q[++qhead];
		for (int j = head[i]; ~j; j = next[j]) {
			int u = v[j];
			if (vc[u] != st) {
				vc[u] = st;
				rdis[u] = rdis[i] + 1;
				if (red[u]) {
					return rdis[u];
				}
				q[++qtail] = u;
			}
		}
	}
}

int main() {
	int top = 0;
	memset(head, -1, sizeof(head));
	memset(vc, -1, sizeof(vc));
	scanf("%d%d", &n, &m);
	for (int i = 0; i < n - 1; ++i) {
		int t1, t2;
		scanf("%d%d", &t1, &t2);
		--t1, --t2;
		v[top] = t2; next[top] = head[t1]; head[t1] = top; ++top;
		v[top] = t1; next[top] = head[t2]; head[t2] = top; ++top;
	}
	for (int i = 0; i < n; ++i) {
		dis[i] = INF;
	}
	red[0] = true;
	BFS(0);
	int cnt = 1;
	for (int i = 0; i < m; ++i) {
		int t1, t2;
		scanf("%d%d", &t1, &t2);
		--t2;
		if (t1 == 1) {
			red[t2] = true;
			++cnt;
			if (cnt <= 300) {
				BFS(t2);
			}
		} else {
			if (cnt <= 300) {
				printf("%d\n", dis[t2]);
			} else {
				printf("%d\n", rBFS(t2, i));
			}
		}
	}
	return 0;
}
