#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

using namespace std;

const int MAXN = 200005;
int n,m,a,b;
int Q[MAXN],ds[MAXN],st[MAXN];
int V[MAXN*2],N[MAXN*2],F[MAXN];
int tot = 0,top;
bool v[MAXN];
void add(int a,int b)
{
    ++tot;
    V[tot] = b;
    N[tot] = F[a];
    F[a] = tot;
}
void spread()
{
    int hd = 0, tl = 0;
    for (int i = 1; i <= top; i ++)
        ds[Q[++tl] = st[i]] = 0;
    top = 0; // to make the stack empty.
    
    while (hd != tl)
    {
        int nw = Q[++hd];
        for (int p = F[nw]; p > 0; p = N[p])
            if (ds[V[p]] > ds[nw] + 1)
            {
                ds[V[p]] = ds[nw] + 1;
                Q[++tl] = V[p];
            }
    }
}
int main()
{
//    freopen("in.txt","r",stdin);
//    freopen("out.txt","w",stdout);
    memset(F,0,sizeof(F));
    memset(N,0,sizeof(N));
    scanf("%d%d",&n,&m);
    for (int i = 1; i < n; i ++)
       scanf("%d%d",&a,&b),add(a,b),add(b,a);
       
    for (int i =1; i <= n; i ++)
        ds[i] = n + 10;
    st[top = 1] = 1; // use stack to temporarily save the node need to change colour.
    
    for (int i =1; i <= m; i ++)
    {
        scanf("%d%d",&a,&b);
        if (a == 1)
            st[++top] = b;
        else spread(), printf("%d\n",ds[b]);
    }
    
    return 0;
}