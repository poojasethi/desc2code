#include<cstdio>
#include<vector>
#include<queue>
#include<algorithm>
#include<cstdlib>

using namespace std;

struct NODE{ int v, d; };

vector<int> G[100001];
int n, m, D[100001], sz[100001];
queue<NODE> Q;
void red(int v)
{
    NODE t;
    while(!Q.empty())
    {
        t = Q.front(); Q.pop();
        for(int i = 0 ; i < sz[t.v] ; i++ )
            if(  D[G[t.v][i]] > D[t.v]+1 ) D[G[t.v][i]] = t.d+1, Q.push({G[t.v][i], t.d+1});
    }
}

int main()
{
    int i, p, c;
    scanf("%d%d",&n,&m);
    for( i = 1 ; i < n ; i++ )
        scanf("%d%d",&p,&c), G[p].push_back(c), G[c].push_back(p), sz[p]++, sz[c]++, D[i] = 1<<30; D[i] = 1<<30;
    Q.push({1,0});
    D[1] = 0;
    red(1);
    for( i = 0 ; i < m ; i++ )
    {
        scanf("%d%d",&p,&c);
        if( p == 1 )
            Q.push({c,0}), D[c] = 0;
        else
            red(c), printf("%d\n", D[c]);
    }
}