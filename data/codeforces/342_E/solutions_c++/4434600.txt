#include<cstdio>
#include<cstring>
#include<climits>
#include<string>
#include<algorithm>
#include<cmath>
#include<iostream>
#include<queue>
#include<vector>
#include<stack>
#include<map>
#include<set>
#include<cstdlib>
#include<ctime>
using namespace std;
typedef long long ll;

void io_in_data() { freopen("data.in", "r", stdin);freopen("data1.out", "w", stdout); }

const int MAXN = 100007;
vector<int> nxt[MAXN];
queue<int> Q;
int d[MAXN];

void bfs() {
    int u, v, i, sz;
    while(!Q.empty()) {
        u = Q.front(); Q.pop();
        sz = nxt[u].size();
        for(i = 0; i < sz; i++) {
            v = nxt[u][i];
            if(d[v] > d[u]+1) {
                d[v] = d[u]+1;
                Q.push(v);
            }
        }
    }
}

int main() {
    int n, m;
    while(~scanf("%d%d", &n, &m)) {
        memset(d, 0x3f, sizeof(d));
        int u, v, i;
        for(i = 1; i <= n; i++) nxt[n].clear();
        for(i = 1; i < n; i++) {
            scanf("%d%d", &u, &v);
            nxt[u].push_back(v);
            nxt[v].push_back(u);
        }
        
        d[1] = 0;
        Q.push(1);
        while(m--) {
            scanf("%d%d", &u, &v);
            if(u == 1) d[v] = 0, Q.push(v);
            else {
                bfs();
                printf("%d\n", d[v]);
            }
        }
    }
    return 0;
}
        
