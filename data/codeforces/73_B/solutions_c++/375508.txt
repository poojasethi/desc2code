#include <iostream>
#include <cstdio>
#include <string>
#include <algorithm>

using namespace std;

int main() {
	int n;
	scanf("%d", &n);
	pair<int, string> v[n];
	for (int i = 0; i < n; ++i) {
		string s;
		int x;
		cin >> s >> x;
		v[i] = make_pair(-x, s);
	}
	sort(v, v + n);
	for (int i = 0; i < n; ++i) {
		v[i] = make_pair(-v[i].first, v[i].second);
	}
	int b[n];
	int m;
	scanf("%d", &m);
	for (int i = 0; i < n; ++i) {
		if (i < m) {
			scanf("%d", &b[i]);
		} else {
			b[i] = 0;
		}
	}
	int pos = -1;
	string s;
	cin >> s;
	for (int i = 0; i < n; ++i) {
		if (v[i].second == s) {
			pos = i;
		}
	}
	//cout << "pos = " << pos << endl;
	sort(b, b + n);
	int bestpos = pos, cur = n - 2;
	for (int i = pos - 1; i >= 0; --i) {
		while (cur >= 0 && make_pair(-v[pos].first - b[n - 1], v[pos].second) > make_pair(
				-v[i].first - b[cur], v[i].second)) {
			--cur;
		}
		if (cur >= 0) {
			--bestpos;
			--cur;
		} else {
			break;
		}
	}
	int worstpos = pos;
	cur = 1;
	for (int i = pos + 1; i < n; ++i) {
		while (cur < n && make_pair(-v[pos].first - b[0], v[pos].second) < make_pair(
				-v[i].first - b[cur], v[i].second)) {
			++cur;
		}
		if (cur < n) {
			++worstpos;
			++cur;
		} else {
			break;
		}
	}
	cout << bestpos + 1 << " " << worstpos + 1 << endl;
	return 0;
}
