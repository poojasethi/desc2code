#include <stdio.h>
#include <algorithm>
#include <functional>
#include <string>

const int kMaxN = 100000;

std::string name[kMaxN];
int org[kMaxN], b[kMaxN], id[kMaxN];
int n, m;

bool Cmp(int a, int b) {
  if (org[a] != org[b]) return org[a] > org[b];
  return name[a] < name[b];
}

int main() {
  static char str[20 + 1];
  scanf("%d", &n);
  for (int i = 0; i < n; ++i) {
    scanf("%s%d", str, org + i);
    name[i] = str;
  }
  scanf("%d", &m);
  for (int i = 0; i < m; ++i) {
    scanf("%d", b + i);
  }
  for (int i = m; i < n; ++i) b[i] = 0;
  std::sort(b, b + n, std::greater<int>());
  scanf("%s", str);
  std::string vasya = str;
  for (int i = 0; i < n; ++i) {
    if (name[i] == vasya) {
      std::swap(name[i], name[n - 1]);
      std::swap(org[i], org[n - 1]);
      break;
    }
  }
  for (int i = 0; i < n; ++i) id[i] = i;
  std::sort(id, id + n - 1, Cmp);
  // Calc min
  int val = org[n - 1] + b[0];
  int l = 1, r = n - 1, result = 0;
  for (int i = 0; i < n; ++i) {
    if (org[id[i]] + b[r] > val || (org[id[i]] + b[r] == val && name[id[i]] < vasya)) {
      ++l;
      ++result;
    } else {
      --r;
    }
  }
  printf("%d ", result + 1);
  val = org[n - 1] + b[n - 1];
  l = 0, r = n - 2;
  result = 0;
  for (int i = n - 2; i >= 0; --i) {
    if (org[id[i]] + b[l] > val || (org[id[i]] + b[l] == val && name[id[i]] < vasya)) {
      ++l;
      ++result;
    }
  }
  printf("%d\n", result + 1);
  return 0;
}
