#include <cstdio>
#include <map>
#include <string>
#include <algorithm>
using namespace std;
int i,x,y,n,p,r,z,m,a[100100],b[100100],k[100100];
map <string, int> mm;
string st[100100];
char s[44];
bool cmp(int i, int j) {
    return (a[i]<a[j] || (a[i]==a[j] && st[i]>st[j]));
}
int main() {
    scanf("%d",&n);
    for (i=0; i<n; i++) {
        scanf("%s",s);
        st[i]=s; mm[st[i]]=i+1;//id
        scanf("%d",&a[i]); k[i]=i;
    }
    sort(k,k+n,cmp);//less point first(lower rank) if same point cmp lex order
    scanf("%d",&m);
    for (i=0; i<m; i++) scanf("%d",&b[i]);
    sort(b,b+m);
    reverse(b,b+m);//由最大的給起
    scanf("%s",s);
    x=mm[s]-1; y=a[x]+b[0]; p=1; r=1;//x is index of st ,,, y is largest point
    for (i=0; i<n; i++) if (k[i]!=x) {
        if (st[k[i]]<st[x]) z=y-a[k[i]]-1; else z=y-a[k[i]];//原本低過我，給他使仍低過我，如果他name lexorder大，給他同樣的還在我身後
        if (b[p]>z) r++;//如果最大的prize給最少的人仍會大過我的分
        p++;
    }
    printf("%d ",r);
    y=a[x]+b[n-1]; p=0; r=1;//我是最少的
    for (i=0; i<n; i++) if (k[i]!=x) {//k[0]理應是最後的
        if (st[k[i]]<st[x]) z=y-a[k[i]]; else z=y-a[k[i]]+1;
        if (b[p]>=z) { p++; r++; }//要別人大過你(將大的留給加完剛剛大過你的第一個)
    }
    printf("%d\n",r);
    return 0;
}
