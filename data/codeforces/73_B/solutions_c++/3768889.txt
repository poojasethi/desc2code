#include<iostream>
#include<algorithm>
#include<vector>
#define ll long long
#define MAX 100010
using namespace std;
struct racer{
	string s;
	int a;
	racer(const string &ss="",int aa=0){s=ss;a=aa;}
	bool operator<(const racer &r)const{
		if(r.a!=a)return a<r.a;
		return r.s<s;
	}
};
int n,m;
vector<racer> r;
racer v;
int p[MAX];
int highest()
{
	int r1=0,vr=r.size()-1;
	int res=1;
	for(int i=n-2;i>=0;i--)
	{
		if(racer(r[r1].s,r[r1].a+p[i])<racer(v.s,v.a+p[n-1]))r1++;else{vr--;res++;}
	}
	return res;
}
int lowest()
{
	int r1=0,vr=r.size()-1;
	int res=n;
	for(int i=1;i<n;i++)
	{
		if(racer(v.s,v.a+p[0])<racer(r[vr].s,r[vr].a+p[i]))vr--;else{r1++;res--;}
	}
	return res;
}
int main()
{
	cin>>n;
	r.resize(n);
	for(int i=0;i<n;i++)
	{
		cin>>r[i].s>>r[i].a;
	}
	cin>>m;
	for(int i=0;i<m;i++)
	{
		cin>>p[i];
	}
	cin>>v.s;
	int t=0;
	while(r[t].s!=v.s)t++;
	v.a=r[t].a;
	r.erase(r.begin()+t);
	sort(r.begin(),r.end());
	sort(p,p+n);
	cout<<highest()<<" "<<lowest()<<endl;
	return 0;
}
