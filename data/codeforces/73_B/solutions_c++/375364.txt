#include<iostream>
#include<string.h>
#include<stdio.h>
#include<algorithm>
using namespace std;
struct data
{
	int x;
	bool flag;
	char name[22];
}pp[111111];
int b[111111];
bool cmp(const data &a,const data &b)
{
	if (a.x!=b.x)
	return a.x>b.x;
	return strcmp(a.name,b.name)<0;
}
bool cmp1(const data &a,const data &b)
{
	if (a.x!=b.x)
		return a.x<b.x;
	return strcmp(a.name,b.name)>0;
}
int main()
{
	int i,j,k,n,m;
	scanf("%d",&n);
	memset(pp,0,sizeof(pp));
	for (i=1;i<=n;i++)
		scanf("%s%d",pp[i].name,&pp[i].x);
	scanf("%d",&m);
	memset(b,0,sizeof(b));
	for (i=1;i<=m;i++)
		scanf("%d",&b[i]);
	char s[22];
	scanf("%s",s);

	for (i=1;i<=n;i++)
		if (strcmp(s,pp[i].name)==0)
			break;
	pp[i].flag=1;
	sort(b+1,b+1+n);
	int nowx=pp[i].x;
	int now=nowx+b[n];
	
	sort(pp+1,pp+1+n,cmp);

	int LL=1,RR=n-1,ans=1;
	for (i=1;i<=n;i++)
	{
		if (pp[i].flag) continue;
		if (pp[i].x+b[LL]>now||pp[i].x+b[LL]==now&&strcmp(pp[i].name,s)<0)
		{
			RR--;
			ans++;
		}
		else
		{
			LL++;
		}
	}
	printf("%d ",ans);
	sort(pp+1,pp+1+n,cmp1);
	now=nowx+b[1];
	LL=2;RR=n;ans=1;
	for (i=1;i<=n;i++)
	{
		if (pp[i].flag) continue;
		if (pp[i].x+b[RR]<now||pp[i].x+b[RR]==now&&strcmp(pp[i].name,s)>0)
		{
			LL++;
		}
		else
		{
			RR--;
			ans++;
		}
	}
	cout<<ans<<endl;
}

