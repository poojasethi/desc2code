#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

const int N = 100000 + 10;
char name[N][30];
int a[N], c[N];
int b[N];

int main()
{
	int n;
	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
		scanf("%s %d", name[i], a + i);
	int m;
	scanf("%d", &m);
	for (int i = 0; i < m; ++i)
		scanf("%d", b + i), b[i] *= 2;
	for (int i = m; i < n; ++i) b[i] = 0;
	sort(b, b + n);
	char str[30];
	int idx = -1;
	scanf("%s", str);
	m = 0;
	int sum, cnt;
	for (int i = 0; i < n; ++i)
	{
		int ret = strcmp(name[i], str);
		if (ret == 0)
		{
			idx = i;
		}
		else
		{
			c[m] = a[i];
			if (ret < 0) c[m] = c[m] * 2 + 1;
			else c[m] = c[m] * 2;
			++m;
		}
	}
	sort(c, c + m);
	// find highest rank
	sum = a[idx] * 2 + b[m];
	cnt = 0;
	for (int i = 0, j = m - 1; i < m && j >= 0; ++i, --j)
	{
		for (; j >= 0 && c[i] + b[j] > sum; --j);
		if (j >= 0) cnt++;
	}
	printf("%d", n - cnt);
	// find lowest rank
	sum = a[idx] * 2 + b[0];
	for (int i = 0; i < m; ++i) b[i] = b[i + 1];
	cnt = 0;
	for (int i = m - 1, j = 0; i >= 0 && j < m; --i, ++j)
	{
		for (; j < m && c[i] + b[j] <= sum; ++j);
		if (j < m) cnt++;
	}
	printf(" %d\n", cnt + 1);
	return 0;
}
