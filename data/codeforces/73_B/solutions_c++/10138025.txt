#include<bits/stdc++.h>

using namespace std;

#define val first
#define name second
#define y0 hi1
#define y1 hi2
#define ll long long
#define mp make_pair
#define pb push_back
#define sqr(a) (a)*(a)
#define ld long double
#define all(a) (a).begin(), (a).end()

using namespace std;

bool comp(pair<int, string> x, pair<int, string> y)
{
    return(x.val>y.val||(x.val==y.val&&x.name<y.name));
}

const int N=100005;

string t;
int me, best, worst, m, i, n, c[N];
pair<int, string> a[N], q[N];

main()
{
    cin.tie(0);
    ios_base::sync_with_stdio(0);
    cin>>n;
    for(i=0; i<n; i++)
        cin>>a[i].name>>a[i].val;
    cin>>m;
    for(i=0; i<m; i++)
        cin>>c[i];
    sort(c, c+m);
    cin>>t;
    for(i=0; i<n; i++)
        if(a[i].name==t)me=i;
    pair <int, string> x=a[me];
    for(i=0; i<n; i++)
        if(i<me)a[i]=a[i]; else
        if(i>me)a[i-1]=a[i]; else continue;
    n--;
    int cnt=m-2;
    sort(a, a+n, comp);

    for(i=0; i<n; i++)
        q[i]=a[i];
    for(i=n-1; i>=0; i--)
    {
        if(cnt<0)break;
        q[i].val+=c[cnt];
        cnt--;
    }
    best=1;
    for(i=0; i<n; i++)
        if(x.val+c[m-1]<q[i].val||(x.val+c[m-1]==q[i].val&&x.name>q[i].name))best++;

    for(i=0; i<n; i++)
        q[i]=a[i];
    if(n+1==m)
    {
        x.val+=c[0];
        cnt=1;
    } else cnt=0;
    i=0;
    while(cnt<m)
    {
        if(i==n)break;
        if(q[i].val>x.val||(q[i].val==x.val&&q[i].name<x.name))i++; else
        if(q[i].val+c[cnt]>x.val||(q[i].val+c[cnt]==x.val&&q[i].name<x.name))
        {
            q[i].val+=c[cnt];
            i++;
            cnt++;
        } else cnt++;
    }
    worst=1;
    for(i=0; i<n; i++)
        if(x.val<q[i].val||(x.val==q[i].val&&x.name>q[i].name))worst++;
    cout<<best<<" "<<worst;
}
