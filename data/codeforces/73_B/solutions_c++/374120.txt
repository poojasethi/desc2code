#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())

bool cmp(const pair<int,string> &a0,const pair<int,string> &a1){
	return a0.first<a1.first || (a0.first==a1.first && a0.second>a1.second);
}
int main(){
	int n,m,b[100005],tmp;
	char s[50];
	int res0,res1;
	vector<pair<int,string> > racer;
	scanf("%d",&n);
	rep(i,n){
		scanf("%s%d",s,&tmp);
		string str;
		str.assign(s);
		racer.pb(make_pair(tmp,str));
	}
	scanf("%d",&m);
	rep(i,m){
		scanf("%d",&b[i]);
	}
	rep(i,n-m){
		b[i+m]=0;
	}
	scanf("%s",s);
	string name;
	name.assign(s);
	sort(b,b+n);
	sort(racer.begin(),racer.end(),cmp);
//	cout<<racer[0].second<<endl;
	int num=0;
	while(racer[num].second!=name) num++;
//	cout<<"hoge"<<endl;
	tmp=num+1;
	int now=n-2;
	int maxi=racer[num].first+b[n-1];
	while(tmp!=n && now!=-1){
//cout<<tmp<<" "<<now<<" "<<maxi<<endl;
		if(maxi<racer[tmp].first+b[now] || 
			(maxi==racer[tmp].first+b[now] && racer[num].second>racer[tmp].second)){
			now--;
		}else{
			tmp++;
			now--;
		}
	}
//	cout<<"hoge"<<endl;
	res0=tmp;
	tmp=num-1;
	now=1;
	int mini=racer[num].first+b[0];
	while(tmp!=-1 && now!=n){
//cout<<tmp<<" "<<now<<" "<<mini<<endl;
		if(mini>racer[tmp].first+b[now] ||
			(mini==racer[tmp].first+b[now] && racer[num].second<racer[tmp].second)){
			now++;
		}else{
			tmp--;
			now++;
		}
	}
	res1=tmp+2;
	cout<<n-res0+1<<" "<<n+1-res1<<endl;
}

