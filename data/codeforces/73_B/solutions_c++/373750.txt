#include <list>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <cfloat>


 
using namespace std;
 
const int oo = 0x3f3f3f3f;
const double eps = 1e-9;

typedef long long ll;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int, int> pii;
 
#define sz(c) int((c).size())
#define all(c) (c).begin(), (c).end()
#define FOR(i,a,b) for (int i = (a); i < (b); i++)
#define FORD(i,a,b) for (int i = int(b)-1; i >= (a); i--)
#define FORIT(i,c) for (__typeof__((c).begin()) i = (c).begin(); i != (c).end(); i++)

pair<int,string> a[100100];
int b[100100],N;
int main(){
	cin >> N;
	FOR(i,0,N)cin >> a[i].second >> a[i].first;
	FOR(i,0,N)a[i].first = -a[i].first;
	memset(b,0,sizeof(b));
	int M;
	cin >> M;
	FOR(i,0,M)cin >> b[i];
	sort(b,b+N);
	sort(a,a+N);
	string name ;
	cin >> name;
	int id =0;
	FOR(i,0,N)if(a[i].second==name){
		id = i;
		break;
	}
	int mi=id+1;
	int u=1;
	int low = a[id].first-b[0];
	while(mi<N){
		while(u!=N){
			int sc = a[mi].first-b[u];
			if(sc<low||(sc==low&&a[mi].second<name))break;
			u++;
		}
		if(u==N)break;
		mi++;
		u++;
	}
	int ma = id;
	int hi = a[id].first-b[N-1];
	u = N-2;
	while(ma){
		while(u>=0){
			int sc = a[ma-1].first-b[u];
			if(sc>hi||(sc==hi&&a[ma-1].second>name))break;
			--u;
		}
		if(u<0)break;
		ma--;
		--u;
	}
	cout << (ma+1) << " "<< mi << endl;
	return 0;
}
