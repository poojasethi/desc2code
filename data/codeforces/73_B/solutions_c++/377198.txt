
#include <iostream>
#include <cstdio>
#include <vector>
#include <cstdlib>
#include <algorithm>
#include <cstring>

using namespace std;

const int maxN= 1000*100 + 5;

int n,m;
int b[maxN];
string handle;

struct team{
    int score;
    string name;

    team (){}

    team (int score, string name) : score(score), name(name) {}

    inline bool operator < (const team &sec) const{
        return (score!=sec.score) ? score>sec.score : name<sec.name;
    }

}a[maxN];
/********************************/
int main(){
    cin >> n;
    for (int i=1;i<=n;i++) 
        cin >> a[i].name >> a[i].score;
    cin >> m;
    for (int i=1;i<=m;i++)
        cin >> b[i];
    cin >> handle;

    sort (a+1, a+n+1);
    sort (b+1, b+m+1);

    int highRank=1, lowRank=n;
    int pos=-1;

    for (int i=1;i<=n;i++) if (a[i].name==handle)
        pos=i;

    int maxScore= a[pos].score + b[m];
    int minScore= a[pos].score + (m<n ? 0 : b[1]);

    for (int i=n, poi=m-1; i>0 ;i--) if (i!=pos){
        if (poi<1){
            if (a[i] < team (maxScore, a[pos].name))
                highRank++;
            continue;
        }

        if ( team(a[i].score+b[poi--],a[i].name) < team(maxScore,a[pos].name) )
            highRank++;
    }

    for (int i=n, poi=m; i>0 ;i--) if (i!=pos){
        
        if ((poi==0) || (poi==1 && m==n)){
            if (team (minScore, a[pos].name) < a[i])
                lowRank--;
            continue;
        }

        if (team(a[i].score+b[poi],a[i].name) < team(minScore, a[pos].name))
            poi--;
        else
            lowRank--;
    }

    cout << highRank << ' ' << lowRank << endl;

    return 0;   
}
