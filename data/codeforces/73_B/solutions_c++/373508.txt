#include <cstdio>
#include <vector>
#include <list>
#include <algorithm>
#include <string>
#include <map>
#include <iostream>
#include <cstring>
#include <set>
#define REP(i,n) for(int i=0; i<(n); i++)
#define FOR(i,a,b) for(int i = (a); i<=(b); i++)
#define X first
#define Y second

using namespace std;

typedef pair<int, int> PII;
typedef long long int ll;

bool cmp(pair<int, string> p1, pair<int, string> p2){
  if(p1.first>p2.first) return true;
  if(p1.first<p2.first) return false;  
  return p1.second<p2.second;
}

int main(){
  int N;
  scanf("%d",&N);
  pair<int, string> T[N];
  char buf[50];
  REP(i,N){
    scanf("%s%d",buf,&T[i].first);
    T[i].second = string(buf);  
  }
  sort(T, T+N, cmp);
  int M;
  scanf("%d",&M);
  int points[N];
  REP(i,M)
    scanf("%d",&points[i]);
  for(int i = M; i<N; i++)
    points[i] = 0;
  sort(points, points+N, greater<int>());
  
  scanf("%s",buf);
  string Vas(buf);
  
  int pos;
  REP(i,N)
    if(T[i].second == Vas) pos = i;
  
  int T2[N];
  REP(i,N){
    points[i] *= 3;  
    T2[i] = 3*T[i].first;
    if(i == pos)continue;
    if(T[i].second < Vas) T2[i]++;
    else T2[i]--;   
  }
  
  int Vasya = T2[pos] + points[0];
  int cur = 1;
  int mini = pos;
  while(mini>0){
    while(cur<N && T2[mini-1] + points[cur]>Vasya) cur++;
    if(cur == N) break;   
    mini--;
    cur++;
  }
  
  Vasya = T2[pos] + points[N-1];
  cur = N-2;
  int maxi = pos;
  while(maxi<N-1){
    while(cur>=0 && T2[maxi+1] + points[cur]<Vasya) cur--;
    if(cur == -1) break;
    maxi++;
    cur--;
  }  
  
  printf("%d %d\n",mini+1,maxi+1);
}
