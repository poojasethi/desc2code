#include<iostream>
#include<algorithm>
#include<vector>
#include<cstdio>
#include<cstdlib>
using namespace std;

#define PB push_back
#define MK make_pair
typedef pair<int, string> PIS;
const int maxn = 100100;

int n, s[maxn], key;
PIS p[maxn];

bool cmp(PIS a, PIS b){
	if(a.first != b.first)
		return a.first > b.first;
	return	a.second < b.second;
}
int best(){
//cerr << " BEST " << key << endl;
	p[key].first += s[n-1];
	int x = key-1, y = n-2;
	while(x >= 0 && y >= 0){
		while(y >= 0 && cmp(p[key], MK(p[x].first+s[y], p[x].second)) == false)
			y--;
			
		//cerr << "UP " << x << " " << y <<  "  |  " << p[key].first << " " << p[key].second << " Vs " << p[x].first+s[y] << " " << p[x].second << endl;
		if(y >= 0)
			x--;
		y--;
	}
	p[key].first -= s[n-1];
	return x+2;
}	

int worst(){
//cerr << "worst " << key << endl;
	p[key].first += s[0];
	int x = key+1, y = 1;
	while(x < n && y < n){
		while(y < n && cmp(p[key], MK(p[x].first+s[y], p[x].second)) == true)
			y++;
		//cerr << "down " << x << " " << y << endl;
		if(y < n)
			x++;
		y++;
	}
	p[key].first -= s[0];
	return x;
}


int main(){
	string keys;
	cin >> n;
	for(int i = 0; i < n; i++)
		cin >> p[i].second >> p[i].first;
	int num;
	cin >> num;
	for(int i = 0; i < num; i++)
		cin >> s[i];
	cin >> keys;
	sort(p, p+n, cmp);
	sort(s, s+n);
	
	for(int i = 0; i < n; i++)
		if(keys == p[i].second)
			key = i;
	
	cout << best() << " " << worst() << endl;
	return 0;
}