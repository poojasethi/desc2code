#include<cstdio>
#include<algorithm>
#define LL long long
using namespace std;
int q,n,m;
char s[5];
int X[2005],Y[2005],x[1005],y[1005];
bool b[2005][2005];
int r[4000005];
bool vis[1<<24];
int main()
{
	scanf("%d",&q);
	for(int i=1,d;i<=q;i++)
	{
		scanf("%s%d",s,&d);
		x[i]=x[i-1],y[i]=y[i-1];
		if(s[0]=='L')x[i]-=d;
		if(s[0]=='R')x[i]+=d;
		if(s[0]=='D')y[i]-=d;
		if(s[0]=='U')y[i]+=d;
		X[++n]=x[i];X[++n]=x[i]+1;
		Y[++m]=y[i];Y[++m]=y[i]+1;
	}
	x[q+1]=x[q],y[q+1]=y[q];q++;
	X[++n]=Y[++m]=1;
	X[++n]=Y[++m]=0;
	X[++n]=Y[++m]=1000000000;
	X[++n]=Y[++m]=-1000000000;
	sort(X+1,X+1+n);
	sort(Y+1,Y+1+m);
	n=unique(X+1,X+1+n)-X-1;
	m=unique(Y+1,Y+1+m)-Y-1;
	for(int i=0;i<=q;i++)
		x[i]=lower_bound(X+1,X+1+n,x[i])-X,
		y[i]=lower_bound(Y+1,Y+1+m,y[i])-Y;
	for(int i=1,lef,rig;i<=q;i++)
		if(x[i]==x[i-1])
		{
			lef=y[i],rig=y[i-1];
			if(lef>rig)swap(lef,rig);
			for(int j=lef;j<=rig;j++)
				b[x[i]][j]=1;
		}
		else
		{
			lef=x[i],rig=x[i-1];
			if(lef>rig)swap(lef,rig);
			for(int j=lef;j<=rig;j++)
				b[j][y[i]]=1;
		}
	int t=1;
	vis[r[1]=(1<<12)^1]=1;
	LL ans=(LL)(X[n]-X[1])*(Y[m]-Y[1]);
	n--;m--;
	for(int i=1;i<=t;i++)
	{
		int x=r[i]>>12,y=r[i]&4095;
		ans-=(LL)(X[x+1]-X[x])*(Y[y+1]-Y[y]);
		if(x<n&&!b[x+1][y]&&!vis[r[i]+4096])
			vis[r[++t]=r[i]+4096]=1;
		if(x>1&&!b[x-1][y]&&!vis[r[i]-4096])
			vis[r[++t]=r[i]-4096]=1;
		if(y<m&&!b[x][y+1]&&!vis[r[i]+1])
			vis[r[++t]=r[i]+1]=1;
		if(y>1&&!b[x][y-1]&&!vis[r[i]-1])
			vis[r[++t]=r[i]-1]=1;
	}
	printf("%I64d\n",ans);
}