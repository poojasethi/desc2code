#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
using namespace std;
const int inf=1000002;
const int F1[4]={0,0,-1,1};
const int F2[4]={1,-1,0,0};
long long ans;
int n,i,V[3015][3005],v[3015][3015],c1,c2,x[3015],y[3015],X[3015],Y[3015],nowx,nowy,cntx,cnty,A[3015],j;
char s[3015][5];
int cmp(int i,int j) {return i<j;}
void dfs(int x,int y)
{
    if (x<=0 || x>c1 || y<=0 || y>c2 || v[x][y] || V[x][y]) return;
    V[x][y]=1;
    for (int i=0; i<4; i++) dfs(x+F1[i],y+F2[i]);
}
int main()
{
    scanf("%d",&n);
    for (i=1; i<=n; i++)
    {
        scanf("%s",s[i]);
        scanf("%d",&A[i]);
        if (s[i][0]=='R') nowx+=A[i];
        if (s[i][0]=='U') nowy+=A[i];
        if (s[i][0]=='D') nowy-=A[i];
        if (s[i][0]=='L') nowx-=A[i];
        X[++cntx]=nowx; Y[++cnty]=nowy;
        X[++cntx]=nowx-1; Y[++cnty]=nowy-1;
        X[++cntx]=nowx+1; Y[++cnty]=nowy+1;
    }
    X[++cntx]=0; Y[++cnty]=0; X[++cntx]=-1; X[++cntx]=1; Y[++cnty]=1; Y[++cnty]=-1;
    X[++cntx]=-inf; X[++cntx]=inf; Y[++cnty]=-inf; Y[++cnty]=inf;
    sort(X+1,X+cntx+1,cmp); sort(Y+1,Y+cnty+1,cmp);
    x[c1=1]=X[1]; for (i=2; i<=cntx; i++) if (X[i]!=X[i-1]) x[++c1]=X[i];
    y[c2=1]=Y[1]; for (i=2; i<=cnty; i++) if (Y[i]!=Y[i-1]) y[++c2]=Y[i];
    for (i=1; i<=c1; i++) if (x[i]==0) nowx=i;
    for (i=1; i<=c2; i++) if (y[i]==0) nowy=i;
    v[nowx][nowy]=1;
    for (i=1; i<=n; i++)
    {
          while (A[i])
          {
              if (s[i][0]=='R') {nowx++; A[i]-=(x[nowx]-x[nowx-1]);}
              if (s[i][0]=='L') {nowx--; A[i]-=(x[nowx+1]-x[nowx]);}
              if (s[i][0]=='U') {nowy++; A[i]-=(y[nowy]-y[nowy-1]);}
              if (s[i][0]=='D') {nowy--; A[i]-=(y[nowy+1]-y[nowy]);}
              v[nowx][nowy]=1;
          }
    }
    dfs(1,1);
    for (i=1; i<=c1; i++) for (j=1; j<=c2; j++) if (!V[i][j]) ans+=1ll*(x[i]-x[i-1])*(y[j]-y[j-1]);
    cout<<ans;
    return 0;
}
