#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <queue>
using namespace std;
#define p(x) cerr<<#x<<":"<<x<<"\n"
#define lim 1001
#define lim2 2010
#define in(x,m) (x>=0 && x+1<m)
#define ll long long

ll n,i,j,m,s,x,y,k,m2;
char c;
ll A[lim],Z[lim],X[lim2],Y[lim2],B[lim2][lim2];
queue <pair<int,int> > Q;
ll dx[]={0,1,0,-1},dy[]={1,0,-1,0};

void push(ll x,ll y)
{
  if(in(x,m) && in(y,m2) && !B[x][y])
  {
    B[x][y]=2;
	Q.push(make_pair(x,y));
  }
}
int main()
{
  scanf("%I64d",&n);
  for(i=0;i<n;i++)
  {
    cin>>c>>A[i];  
    Z[i]=((string)"URDL").find(c);
	x+=A[i]*dx[Z[i]];
	y+=A[i]*dy[Z[i]];
	X[2*i]=x;
	X[2*i+1]=x+1;
	Y[2*i]=y;
	Y[2*i+1]=y+1;
  }
  X[2*n]=0;
  X[2*n+1]=1;
  X[2*n+2]=-5000000000ll;
  X[2*n+3]=5000000001ll;
  Y[2*n]=0;
  Y[2*n+1]=1;
  Y[2*n+2]=-5000000000ll;
  Y[2*n+3]=5000000001ll;
  m=2*n+4;
  sort(X,X+m);
  sort(Y,Y+m);
  for(i=j=0;i<m;i++)
    if(!i || Y[i]!=Y[i-1])
	  Y[j++]=Y[i];
  m2=j;
  for(i=j=0;i<m;i++)
    if(!i || X[i]!=X[i-1])
	  X[j++]=X[i];
  m=j;
  for(i=0;X[i]!=0 || X[i+1]!=1;i++);
  for(j=0;Y[j]!=0 || Y[j+1]!=1;j++);
  B[i][j]=1;
  for(k=x=y=0;k<n;k++)
  {
    x+=A[k]*dx[Z[k]];
	y+=A[k]*dy[Z[k]];
	while(X[i]!=x || X[i+1]!=x+1 || Y[j]!=y || Y[j+1]!=y+1)
	{
	  if(Z[k]==0)
	    j++;
	  else if(Z[k]==1)
	    i++;
	  else if(Z[k]==2)
	    j--;
	  else
	    i--;
	  B[i][j]=1;
	}
  }
  push(0,0);
  while(!Q.empty())
  {
    x=Q.front().first;
    y=Q.front().second;
    Q.pop();
	for(i=0;i<4;i++)
	  push(x+dx[i],y+dy[i]);
  }
  for(i=0;i+1<m;i++)
    for(j=0;j+1<m2;j++)
	  if(B[i][j]<=1)
	    s+=(X[i+1]-X[i])*(Y[j+1]-Y[j]);
  printf("%I64d\n",s);
  return 0;
}
