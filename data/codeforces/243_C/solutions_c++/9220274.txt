#include<stdio.h>
#include<algorithm>
using namespace std;
int xsz,ysz,n;
long long x[2010],y[2010],xnow,ynow,xt[2010],yt[2010],ans;
int xi[1010];char di[1010][3];
long long qx[2010*2010],qy[2010*2010];
bool v[2010][2010],w[2010][2010];
int main()
{
	scanf("%d",&n);
	x[++xsz]=0;x[++xsz]=1;
	y[++ysz]=0;y[++ysz]=1;
	for(int i=1;i<=n;i++)
	{
		scanf("%s%d",di[i],&xi[i]);
		switch(di[i][0])
		{
			case 'L':xnow-=xi[i];break;
			case 'R':xnow+=xi[i];break;
			case 'U':ynow+=xi[i];break;
			case 'D':ynow-=xi[i];break;
		}
		x[++xsz]=xnow;y[++ysz]=ynow;
		x[++xsz]=xnow+1;y[++ysz]=ynow+1;
	}
	x[++xsz]=y[++ysz]=10000000000ll+1;
	x[++xsz]=y[++ysz]=-10000000000ll-1;
	sort(x+1,x+xsz+1);sort(y+1,y+ysz+1);
	xsz=unique(x+1,x+xsz+1)-x-1;
	ysz=unique(y+1,y+ysz+1)-y-1;
	xnow=ynow=0;
	for(int i=1;i<=n;i++)
	{
		switch(di[i][0])
		{
			case 'L':xnow-=xi[i];break;
			case 'R':xnow+=xi[i];break;
			case 'U':ynow+=xi[i];break;
			case 'D':ynow-=xi[i];break;
		}
		xt[i]=lower_bound(x+1,x+xsz+1,xnow)-x;
		yt[i]=lower_bound(y+1,y+ysz+1,ynow)-y;
	}
	xt[0]=lower_bound(x+1,x+xsz+1,0)-x;
	yt[0]=lower_bound(y+1,y+ysz+1,0)-y;
	for(int i=0;i<n;i++)
		if(xt[i]==xt[i+1])
			for(int j=min(yt[i],yt[i+1]);j<=max(yt[i],yt[i+1]);j++)
				v[xt[i]][j]=true;
		else 
			for(int j=min(xt[i],xt[i+1]);j<=max(xt[i],xt[i+1]);j++)
				v[j][yt[i]]=true;
	int l=0,r=1;qx[r]=xsz;qy[r]=ysz;w[xsz][ysz]=true;
	while(l<r)
	{
		++l;int xx=qx[l],yy=qy[l];
		if(xx!=xsz&&!v[xx+1][yy]&&!w[xx+1][yy])
			w[qx[++r]=xx+1][qy[r]=yy]=true;
		if(xx!=1&&!v[xx-1][yy]&&!w[xx-1][yy])
			w[qx[++r]=xx-1][qy[r]=yy]=true;
		if(yy!=ysz&&!v[xx][yy+1]&&!w[xx][yy+1])
			w[qx[++r]=xx][qy[r]=yy+1]=true;
		if(yy!=1&&!v[xx][yy-1]&&!w[xx][yy-1])
			w[qx[++r]=xx][qy[r]=yy-1]=true;
	}
	for(int i=1;i<xsz;i++)
		for(int j=1;j<ysz;j++)
			if(!w[i][j])
				ans+=(x[i+1]-x[i])*(y[j+1]-y[j]);	
	printf("%I64d\n",ans);
}
