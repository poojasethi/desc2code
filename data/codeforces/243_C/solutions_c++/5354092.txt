#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
using namespace std;
int X[3100],Y[3100],xn,yn,vx[1200],vy[1200],i,j,k,x,y,n;
char c[120],a[3100][3100];
long long ans;
int Findx(int x){
    return lower_bound(X+1,X+xn+1,x)-X;
}
int Findy(int y){
    return lower_bound(Y+1,Y+yn+1,y)-Y;
}
void dfs(int x,int y){
    if(x<0 || x>xn+1 || y<0 || y>yn+1 || a[x][y])return;
    a[x][y]=2;
    dfs(x-1,y);
    dfs(x+1,y);
    dfs(x,y-1);
    dfs(x,y+1);
}
void add(int x,int y){
    X[++xn]=x-1;  X[++xn]=x; X[++xn]=x+1;
    Y[++yn]=y-1;  Y[++yn]=y; Y[++yn]=y+1;
}
void reper(int x[],int &xn){
    int m=xn,i;
    xn=1;
    for(i=2;i<=m;++i)if(x[i]!=x[xn])x[++xn]=x[i];
}
int main(){
    scanf("%d",&n);
    x=y=0;
    add(x,y);
    for(i=1;i<=n;++i){
        scanf("%s%d",c,&k);
        if(*c=='R')y+=k;
        if(*c=='L')y-=k;
        if(*c=='U')x-=k;
        if(*c=='D')x+=k;
        add(x,y);
        vx[i]=x; vy[i]=y;
    }
    sort(X+1,X+xn+1);
    sort(Y+1,Y+yn+1);
    reper(X,xn);
    reper(Y,yn);
    for(i=1;i<=n;++i){
        int sx=Findx(vx[i-1]),sy=Findy(vy[i-1]),tx=Findx(vx[i]),ty=Findy(vy[i]);
        if(sx==tx)
            for(j=min(sy,ty);j<=sy || j<=ty;++j) a[sx][j]=1;
        else
            for(j=min(sx,tx);j<=sx || j<=tx;++j) a[j][sy]=1;
    }
    dfs(0,0);
    for(i=1;i<=xn;++i)
        for(j=1;j<=yn;++j)if(a[i][j]!=2)
            ans+=(long long)(Y[j]-Y[j-1])*(X[i]-X[i-1]);
    printf("%I64d\n",ans);
}