#include<cmath>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<algorithm>
#define ll long long
using namespace std;

struct st
{	int x,p;
	bool operator <(const st&B) const {return x<B.x;}
} b[1005],c[1005];
const int Ffind[4][2]={{-1,0},{0,1},{1,0},{0,-1}};
int i,j,k,l,r,t,N,X,Y,lx[2005],rx[2005],ly[2005],ry[2005],x[1005],y[1005],e[256],q[1000005][2];
bool f[2005][2005],g[2005][2005];
char z[5];

inline ll S(ll a,ll b) { return (a<b)?a:b; }

int main()
{	scanf("%d",&N),e['U']=0,e['R']=1,e['D']=2,e['L']=3;
	for (i=1;i<=N;i++)
	{	scanf("%s%d",&z,&l),t=e[z[0]];
		x[i]=x[i-1]+l*Ffind[t][0],y[i]=y[i-1]+l*Ffind[t][1],b[i].x=x[i],b[i].p=i,c[i].x=y[i],c[i].p=i;
		} sort(b,b+N+1);
	for (i=0;i<=N;i++)
	{	if (i&&b[i-1].x+1<b[i].x) X++,lx[X]=b[i-1].x+1,rx[X]=b[i].x-1;
		if (!i||b[i].x!=b[i-1].x) X++,lx[X]=rx[X]=b[i].x; x[b[i].p]=X;
		} sort(c,c+N+1);
	for (i=0;i<=N;i++)
	{	if (i&&c[i-1].x+1<c[i].x) Y++,ly[Y]=c[i-1].x+1,ry[Y]=c[i].x-1;
		if (!i||c[i].x!=c[i-1].x) Y++,ly[Y]=ry[Y]=c[i].x; y[c[i].p]=Y;
		}
	for (i=1;i<=N;i++)
		for (j=S(x[i-1],x[i]);j<=x[i]||j<=x[i-1];j++)
			for (k=S(y[i-1],y[i]);k<=y[i]||k<=y[i-1];k++) f[j][k]=1;
	ll ans=1ll*(rx[X]-lx[1]+3)*(ry[Y]-ly[1]+3)-1; q[1][0]=0,q[1][1]=0,g[0][0]=1,X++,Y++;
	for (l=r=1;l<=r;l++)
	{	int x=q[l][0],y=q[l][1];
		for (i=0;i<4;i++)
		{	int xx=x+Ffind[i][0],yy=y+Ffind[i][1];
			if (xx<0||xx>X||yy<0||yy>Y||f[xx][yy]||g[xx][yy]) continue;
			q[++r][0]=xx,q[r][1]=yy,g[xx][yy]=1,ans-=1ll*(rx[xx]-lx[xx]+1)*(ry[yy]-ly[yy]+1);
			}
		} printf("%I64d\n",ans);
	return 0;
}