#include <bits/stdc++.h>

using namespace std;

typedef long long LL;

const int N = 2010;

int dx[4]={-1,0,1,0};
int dy[4]={0,1,0,-1};

int n,x[N],d[N];
char st[2];
int cx,cy;
int xx[N],yy[N],xc,yc;
int vis[N][N],lx[N],ly[N];
int xm,ym,nx[N],ny[N];
LL w[N][N],res;

void dfs(int x,int y,LL &s,int &flg){
	if(x<=0 || x>xm || y<=0 || y>ym) flg=0;
	else if(!vis[x][y]){
		vis[x][y]=1;s+=w[x][y];
		for(int i=0;i<4;i++) dfs(x+dx[i],y+dy[i],s,flg);
	}
}
int main()
{
	scanf("%d",&n);
	xx[++xc]=0;yy[++yc]=0;
	for(int i=1;i<=n;i++){
		scanf("%s%d",st,&x[i]);
		if(st[0]=='U') d[i]=0;
		else if(st[0]=='R') d[i]=1;
		else if(st[0]=='D') d[i]=2;
		else d[i]=3;
		cx+=dx[d[i]]*x[i];cy+=dy[d[i]]*x[i];
		xx[++xc]=cx;yy[++yc]=cy;
	}
	sort(xx+1,xx+xc+1);xc=unique(xx+1,xx+xc+1)-xx-1;
	sort(yy+1,yy+yc+1);yc=unique(yy+1,yy+yc+1)-yy-1;
	xm=0;
	for(int i=1;i<=xc;i++){
		lx[nx[i]=++xm]=1;if(i<xc && xx[i+1]!=xx[i]+1) lx[++xm]=xx[i+1]-xx[i]-1;
	}
	ym=0;
	for(int i=1;i<=yc;i++){
		ly[ny[i]=++ym]=1;if(i<yc && yy[i+1]!=yy[i]+1) ly[++ym]=yy[i+1]-yy[i]-1;
	}
	for(int i=1;i<=xm;i++)
		for(int j=1;j<=ym;j++)
			w[i][j]=LL(lx[i])*ly[j];
	cx=cy=0;
	for(int i=1;i<=n;i++){
		int tx=cx+dx[d[i]]*x[i],ty=cy+dy[d[i]]*x[i];
		int x1=nx[lower_bound(xx+1,xx+xc+1,cx)-xx],
			y1=ny[lower_bound(yy+1,yy+yc+1,cy)-yy],
			x2=nx[lower_bound(xx+1,xx+xc+1,tx)-xx],
			y2=ny[lower_bound(yy+1,yy+yc+1,ty)-yy];
		if(x1>x2) swap(x1,x2);
		if(y1>y2) swap(y1,y2);
		if(x1==x2) {for(int j=y1;j<=y2;j++) if(!vis[x1][j]) vis[x1][j]=1,res+=w[x1][j];}
		else {for(int j=x1;j<=x2;j++) if(!vis[j][y1]) vis[j][y1]=1,res+=w[j][y1];}
		cx=tx;cy=ty;
	}
	for(int i=1;i<=xm;i++)
		for(int j=1;j<=ym;j++) if(!vis[i][j]){
			LL t=0;int flg=1;
			dfs(i,j,t,flg);
			if(flg) res+=t;
		}
	printf("%I64d\n",res);
	return 0;
}
