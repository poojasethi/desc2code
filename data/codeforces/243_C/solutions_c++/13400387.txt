#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <queue>
using namespace std;
#define N 2050
#define ll long long
#define fr first
#define sc second
const int dir[4][2]={{0,1},{1,0},{-1,0},{0,-1}};
pair <int,int> li[N];ll ans;
int st[2],n,m,zb[N][4],sx[N][2];
bool b[N][N],d[N][N];char c[20];
queue <pair<int,int> > a;
void GetIn()
 {
 	int x=0,y=0,k;
 	for (int i=1;i<=n;i++)
 	 {
 	 	scanf("%s%d",c,&k);
 	 	zb[i][0]=x;zb[i][1]=y;zb[i][2]=x+1;zb[i][3]=y+1;
 	 	if (c[0]=='U') zb[i][3]+=k,y+=k; else
 	 	if (c[0]=='R') zb[i][2]+=k,x+=k; else
 	 	if (c[0]=='D') zb[i][1]-=k,y-=k; else
 	 	  zb[i][0]-=k,x-=k;
 	 }
 }
void Pretreat()
 {
 	for (int i=0;i<2;i++)
 	 {
 	 	for (int j=1;j<=n;j++)
 	 	  li[++st[i]].fr=zb[j][i],li[st[i]].sc=j,
 	 	  li[++st[i]].fr=zb[j][i+2],li[st[i]].sc=-j;
 	 	sort(li+1,li+n*2+1);st[i]=0;li[0].fr=li[1].fr-1;
 	 	for (int j=1;j<=n*2;j++)
 	 	 {
 	 	 	st[i]+=li[j].fr!=li[j-1].fr;
 	 	 	sx[st[i]][i]=li[j].fr;
 	 	 	if (li[j].sc<0)
 	 	 	  zb[-li[j].sc][i+2]=st[i]; else
 	 	 	  zb[li[j].sc][i]=st[i];
 	 	 }
 	 }
 }
inline bool Check(int x,int y)
 {return x>=0&&x<=st[0]&&y>=0&&y<=st[1];}
void Solve()
 {
 	for (int i=1;i<=n;i++)
 	 for (int j=zb[i][0];j<zb[i][2];j++)
 	  for (int k=zb[i][1];k<zb[i][3];k++)
 	    b[j][k]=1;
 	d[0][0]=1;a.push(make_pair(0,0));
 	while (!a.empty())
 	 {
 	 	pair <int,int> e=a.front();a.pop();
 	 	for (int i=0;i<4;i++)
 	 	 {
 	 	 	int k=e.fr+dir[i][0],l=e.sc+dir[i][1];
 	 	 	if (!Check(k,l)||d[k][l]||b[k][l]) continue;
 	 	 	d[k][l]=1;a.push(make_pair(k,l));
 	 	 }
 	 }
 	for (int i=1;i<st[0];i++)
 	 for (int j=1;j<st[1];j++)
 	  if (!d[i][j])
 	    ans+=(ll)(sx[i+1][0]-sx[i][0])*(sx[j+1][1]-sx[j][1]);
 }
int main()
 {
 	cin >>n;
 	GetIn();Pretreat();Solve();
 	cout <<ans<<endl;
 	return 0;
 }