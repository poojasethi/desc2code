#include <iostream>
#include <fstream>
#include <cstring>
#include <string>
#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <bitset>
#include <ctime>
#include <map>
#include <queue>
#include <set>
using namespace std;

const int maxn=3000+15;
char ch;
int n,b,x,y;
int xx[maxn],yy[maxn],sx,sy,vx[maxn],vy[maxn];
short boo[maxn][maxn];
int inser(int x,int y)
{
	xx[++sx]=x-1;
	xx[++sx]=x;
	xx[++sx]=x+1;
	yy[++sy]=y-1;
	yy[++sy]=y;
	yy[++sy]=y+1;
	return 0;
}
int fox(int x)
{
	int l=1,r=sx,midd;
	while (l<=r)
	{
		midd=(l+r)>>1;
		if (xx[midd]==x) return midd;
		 else if (xx[midd]>x) r=midd-1;
		  else l=midd+1;
	}
	return 0;
}
int foy(int y)
{
	int l=1,r=sy,midd;
	while (l<=r)
	{
		midd=(l+r)>>1;
		if (yy[midd]==y) return midd;
		 else if (yy[midd]>y) r=midd-1;
		  else l=midd+1;
	}
	return 0;
}
int dfs(int x,int y)
{
	if (x<=0 || x>=sx+1 || y<=0 || y>=sy+1 || boo[x][y]!=0) return 0;
	boo[x][y]=2;
	dfs(x,y-1);
	dfs(x,y+1);
	dfs(x+1,y);
	dfs(x-1,y);
	return 0;
}
int main()
{
	scanf("%d",&n);
	x=0;y=0;
	inser(x,y);
	for (int i=1;i<=n;i++)
	{
		scanf("%s%d",&ch,&b);
		if (ch=='R') x+=b;
		if (ch=='L') x-=b;
		if (ch=='U') y+=b;
		if (ch=='D') y-=b;
		inser(x,y);
		vx[i]=x;
		vy[i]=y;
	}
	sort(xx+1,xx+sx+1);
	int j=1;
	for (int i=2;i<=sx;i++)
	 if (xx[i]!=xx[j]) xx[++j]=xx[i];
	sx=j;
	sort(yy+1,yy+sy+1);
	j=1;
	for (int i=2;i<=sy;i++)
	 if (yy[i]!=yy[j]) yy[++j]=yy[i];
	sy=j;
	for (int i=1;i<=n;i++)
	{
		int lx=fox(vx[i-1]),rx=fox(vx[i]),ly=foy(vy[i-1]),ry=foy(vy[i]);
		if (lx>rx) swap(lx,rx);
		if (ly>ry) swap(ly,ry);
		if (lx==rx)
		 for (int j=ly;j<=ry;j++) boo[lx][j]=1;
		else for (int j=lx;j<=rx;j++) boo[j][ly]=1;
	}
	dfs(1,1);
	long long ans=0;
	for (int i=1;i<=sx;i++)
	 for (int j=1;j<=sy;j++)
	  if (boo[i][j]!=2) 
	   ans+=1ll*(xx[i]-xx[i-1])*(yy[j]-yy[j-1]);
	printf("%I64d\n",ans);
	return 0;
}