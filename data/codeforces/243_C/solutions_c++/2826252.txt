#include<stdio.h>
#include<string.h>
#include<iostream>
#include<map>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long lld;
#define inf (1LL)<<40
#define mp make_pair
#define X first
#define Y second
int ax[4]={0,1,0,-1};
int ay[4]={1,0,-1,0};//R,D,L,U
map<lld,int>mx;
map<lld,int>my;
map<int,lld>lx;
map<int,lld>ly;
map<lld,int>::iterator ll,rr;
int f(char x)
{
	if(x == 'R')
		return 0;
	if(x == 'D')
		return 1;
	if(x == 'L')
		return 2;
	if(x == 'U')
		return 3;
	return (int)"fuckme";
}
int n,m;
int g[5010][5010];
void dfs(int x,int y)
{
//	printf("%d %d\n",x,y);
	g[x][y]=0;
	for(int k=0;k<4;k++)
	{
		int xx=x+ax[k];
		int yy=y+ay[k];
		if(xx < 0 || xx >= n || yy < 0 || yy >= m)
			continue;
		if(g[xx][yy] != -1)
			continue;
		dfs(xx,yy);
	}
}
char str[10010];
lld x[1000010];
lld y[1000010];
int main()
{
	scanf("%d",&n);
	mx.clear();
	my.clear();
	mx[-inf]=0;
	my[-inf]=0;
	x[0]=y[0]=0;
	mx[0]=0;
	my[0]=0;
	for(int i=1;i<=n;i++)
	{
		int t;
		scanf("%s %d",str,&t);
		int k=f(str[0]);
		x[i]=x[i-1]+ax[k]*t;
		y[i]=y[i-1]+ay[k]*t;
		mx[min(x[i-1],x[i])]=0;
		mx[max(x[i-1],x[i])+1]=0;
		my[min(y[i-1],y[i])]=0;
		my[max(y[i-1],y[i])+1]=0;
	}
	int nn=0;
	int mm=0;
	lx.clear();
	ly.clear();
	for(ll=mx.begin(),rr=mx.end();ll!=rr;ll++)
	{
		ll->Y=nn;
		lx[nn]=ll->X;
		nn++;
	}
	for(ll=my.begin(),rr=my.end();ll!=rr;ll++)
	{
		ll->Y=mm;
		ly[mm]=ll->X;
		mm++;
	}
	memset(g,-1,sizeof(g));
	for(int i=1;i<=n;i++)
	{
		int sx=mx[min(x[i-1],x[i])];
		int ex=mx[max(x[i-1],x[i])+1];
		int sy=my[min(y[i-1],y[i])];
		int ey=my[max(y[i-1],y[i])+1];
		for(int a=sx;a<ex;a++)
			for(int b=sy;b<ey;b++)
				g[a][b]=1;
	}
	n=nn;
	m=mm;
	dfs(0,0);
	lld ans=0;
	for(int i=0;i<n-1;i++)
		for(int j=0;j<m-1;j++)
		{
//			cout << lx[i] << " " << ly[j] << endl;
			if(g[i][j] != 0)
			{
//				cout << lx[i] << " " << ly[j] << endl;
				ans+=(lx[i+1]-lx[i])*(ly[j+1]-ly[j]);
			}
		}
	cout << ans << endl;
	return 0;
}
