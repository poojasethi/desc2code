numRep = {'0': 0, '1':1, '2': 2, '3' : 3, '4':4, '5':5, '6': 6, '7': 7, '8': 8, '9' : 9,
                'A': 10, 'B': 11, 'C' : 12, 'D' : 13, 'E' : 14, 'F' : 15, 'G' : 16, 'H' : 17, 'I' : 18
                , 'J' : 19, 'K': 20, 'L' : 21, 'M' : 22, 'N' : 23, 'O' : 24, 'P' : 25, 'Q' : 26, 'R' : 27
                , 'S' : 28, 'T' : 29, 'U' : 30, 'V' : 31, 'W' : 32, 'X' : 33, 'Y':34 , 'Z' : 35,
                'a': 36, 'b': 37, 'c' : 38, 'd' : 39, 'e' : 40, 'f' : 41, 'g' : 42, 'h' : 43, 'i' : 44
                , 'j' : 45, 'k': 46, 'l' : 47, 'm' : 48, 'n' : 49, 'o' : 50, 'p' : 51, 'q' : 52, 'r' : 53
                , 's' : 54, 't' : 55, 'u' : 56, 'v' : 57, 'w' : 58, 'x' : 59, 'y':60 , 'z' : 61,
                '-': 62, '_': 63}


''' We can see that each 1 bit only gives us 1 pair (1,1) while a 0 gives us
3 pairs (1,0), (0,1) (0,0)  so each 0 in the representation can give us 3 different pairs

Each of the pairs of lets say an earlier 0 can be combined with each pair or a subsequent 0, so the total
amount becomes 3**(number of zeros)'''

amount_of_zeros = sum((6 - bin(numRep[c]).count("1") for c in raw_input().strip()))

print(3**amount_of_zeros % (10**9 + 7))
