#include<bits/stdc++.h>
using namespace std;
#define ll long long
vector<int>v[200020];
int visit[200020];
int out[200020];
int a[400020];
int timer=1;
int counter[200020];
int query(int node)
{
	int sum=0;
	while(node>0)
	{
		sum+=a[node];
		node-=(node&(-node));
	}
	return sum;
}
void update(int node,int x)
{
	while(node<=400000)
	{
		a[node]+=x;
		node+=(node&(-node));
	}
}
void dfs(int x)
{
	visit[x]=timer++;
	for(int i=0;i<v[x].size();i++)
	{
		if(visit[v[x][i]]==0)
		{
			counter[v[x][i]]=!counter[x];
			dfs(v[x][i]);
		}
	}
	out[x]=timer++;
}
int main()
{
	int n,m,x,y,i;
	scanf("%d",&n);
	scanf("%d",&m);
	int value[n+1],z;
	for(i=1;i<=n;i++)
		scanf("%d",&value[i]);
	for(i=1;i<n;i++)
	{
		scanf("%d%d",&x,&y);
		v[x].push_back(y);
		v[y].push_back(x);
	}	
	counter[1]=0;
	dfs(1);
	while(m--)
	{
		scanf("%d",&x);
		if(x==1)
		{
			scanf("%d%d",&y,&z);
			if(counter[y]%2==0)
			{
				update(visit[y],z);
				update(out[y]+1,-z);
			}
			else
			{
				update(visit[y],-z);
				update(out[y]+1,z);
			}
		}
		else
		{
			scanf("%d",&y);
			if(counter[y]%2==0)
				printf("%d\n",value[y]+query(visit[y]));
			else
				printf("%d\n",value[y]-query(visit[y]));
		}
	}
	return 0;
}
