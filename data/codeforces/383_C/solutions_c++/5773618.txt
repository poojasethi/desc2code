#include<stdio.h>
#include<vector>

struct BIT{
	int t[200005];
	int n;
	int read(int wi){
		int ans=0;
		while(wi>0){
			ans+=t[wi];
			wi-=wi&(-wi);
		}
		return ans;
	}
	void update(int wi,int x){
		while(wi<=n){
			t[wi]+=x;
			wi+=wi&(-wi);
		}
	}
}t[2];
int n,m,cnt;
int a[200005];
int ad[200005],end[200005],rev[200005];
int lev[200005];
std::vector<int> way[200005];

void DFS(int x,int lv)
{
	ad[x]=++cnt; lev[x]=lv;
	for(int i=0;i<way[x].size();i++){
		if(ad[way[x][i]]!=0)continue;
		DFS(way[x][i],lv+1);
	}
	end[x]=cnt;
}

int main()
{
	scanf("%d%d",&n,&m);
	t[0].n=t[1].n=n;
	for(int i=1;i<=n;i++){
		scanf("%d",a+i);
	}
	for(int i=1;i<n;i++){
		int a,b;
		scanf("%d%d",&a,&b);
		way[a].push_back(b);
		way[b].push_back(a);
	}
	DFS(1,1);
	for(int i=1;i<=m;i++){
		int o;
		scanf("%d",&o);
		if(o==1){
			int x,y;
			scanf("%d%d",&x,&y);
			int dir=lev[x]%2;
			t[dir].update(ad[x],y);  t[dir].update(end[x]+1,-y);
			t[!dir].update(ad[x],-y);  t[!dir].update(end[x]+1,y);
		}
		else{
			int x;
			scanf("%d",&x);
			printf("%d\n",a[x]+t[lev[x]%2].read(ad[x]));
		}
	}
}