#include <iostream>
#include <vector>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
using namespace std;
#define pb push_back
const int NN=222222;
int bit_2[2][NN*2+1];
int ALL_bit=NN*2;
int f[NN];
int clsfy[NN];
int sum_bit(int i,int bit[]){
	int s=0;while(i>0){s+=bit[i],i-= i & -i;}
	return s;
}
void add_bit(int i,int x,int bit[]){
	while(i<=ALL_bit){bit[i]+=x,i+= i & -i;}
}
vector<int> G[NN];
int m=1;
int l[NN],r[NN];
void dfs(int now,int fa,int k){
	l[now]=m++;
	clsfy[now]=k;
	for(int i=0;i<G[now].size();i++){
		int to=G[now][i];
		if(to==fa) continue;
		dfs(to,now,1-k);
	}
	r[now]=m++;
}
int main(){
#ifndef ONLINE_JUDGE
	freopen("/home/rainto96/in.txt","r",stdin);
#endif
	int n,m;cin>>n>>m;
	for(int i=1;i<=n;i++)	cin>>f[i];
	for(int i=1;i<=n-1;i++){
		int x,y;cin>>x>>y;
		G[x].pb(y);
		G[y].pb(x);
	}
	dfs(1,-1,0);
	while(m--){
		int kind;cin>>kind;
		if(kind==1){
			int pos,val;cin>>pos>>val;
			add_bit(l[pos],val,bit_2[clsfy[pos]]);
			add_bit(r[pos],-val,bit_2[clsfy[pos]]);
		}else{
			int pos;cin>>pos;
			cout<<f[pos]+sum_bit(l[pos],bit_2[clsfy[pos]])-sum_bit(l[pos],bit_2[1-clsfy[pos]])<<endl;
		}
	}
}

