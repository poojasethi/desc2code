#include <cstdio>
#include <vector>
#define LL long long
#define REP(i,n) for (int i=1;i<=n;++i)
#define FOR(i,n) for (__typeof(n.begin())i=n.begin();i!=n.end();++i)
using namespace std;

const int MAXN=200020;
vector<int> v[MAXN];
int n,m,x,y,tot;
int a[MAXN];
int depth[MAXN];
int l[MAXN],r[MAXN];
LL t[2][MAXN];

void Dfs(int k,int f) {
	depth[k]=(depth[f]^1);
	l[k]=++tot;
	FOR(p,v[k]) if (*p!=f) Dfs(*p,k);
	r[k]=tot;
}

void Modify(int w,int l,int r,int delta) {
	w=depth[w];
	for (int i=l;i<=n+1;i+=(i&(-i))) t[w][i]+=(LL)delta;
	for (int i=r+1;i<=n+1;i+=(i&(-i))) t[w][i]-=(LL)delta;
}

int Query(int w,int k) {
	LL ret=0;
	w=depth[w];
	for (int i=k;i;i-=(i&(-i))) ret+=t[w][i];
	for (int i=k;i;i-=(i&(-i))) ret-=t[w^1][i];
	return (int)ret;
}

int main() {
	scanf("%d%d",&n,&m);
	REP(i,n) scanf("%d",&a[i]);
	REP(i,n-1) {
		scanf("%d%d",&x,&y);
		v[x].push_back(y);
		v[y].push_back(x);
	}
	Dfs(1,0);
	REP(i,m) {
		int kind;
		scanf("%d",&kind);
		if (kind==1) {
			scanf("%d%d",&x,&y);
			Modify(x,l[x],r[x],y);
		} else {
			scanf("%d",&x);
			printf("%d\n",Query(x,l[x])+a[x]);
		}
	}
	return 0;
}
