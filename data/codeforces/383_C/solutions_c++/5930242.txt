#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;
typedef long long ll;
#define rep(i,n) for (int i=1;i<=n;++i)
const int N=400005;
int n,m,x,y,D,l,t,type,ed[N],next[N],son[N],a[N],c[2][N],d[N],L[N],R[N];
void add(int *c,int x,int v){for (;x<=n;x+=x&-x) c[x]+=v;}
int get(int *c,int x){int v=0; for (;x;x-=x&-x) v+=c[x]; return v;}
void dfs(int x)
{
	L[x]=++t;
	for (int p=son[x];p;p=next[p]){
		int y=ed[p];
		if (!d[y]) d[y]=d[x]+1,dfs(y);
	}
	R[x]=t;
}
int main()
{
	scanf("%d%d",&n,&m);
	rep(i,n) scanf("%d",a+i);
	rep(i,n-1) scanf("%d%d",&x,&y),
		ed[++l]=y,next[l]=son[x],son[x]=l,
		ed[++l]=x,next[l]=son[y],son[y]=l;
	d[1]=1,dfs(1);
	while (m--){
		scanf("%d%d",&type,&x),D=d[x]&1;
		if (type==1) scanf("%d",&y),
			add(c[D],L[x],y),add(c[D],R[x]+1,-y),
			add(c[D^1],L[x],-y),add(c[D^1],R[x]+1,y);
		else printf("%d\n",a[x]+get(c[D],L[x]));
	}
	return 0;
}
