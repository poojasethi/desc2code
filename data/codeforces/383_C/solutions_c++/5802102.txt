#include <cstdio>
#include <vector>
using namespace std;

typedef int T[200001];
T a, l, r, l2, r2, g, t[2];
int n, m, k[2] = {1, 1};
vector<int> e[200001];

void dfs(int u, int v, int f) {
	g[v] = f;
	l[v] = k[f]++;
	l2[v] = k[!f];
	for (int i = 0; i < e[v].size(); ++i)
		if (e[v][i] != u)
			dfs(v, e[v][i], !f);
	r[v] = k[f];
	r2[v] = k[!f];
}

int main() {
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; ++i)
		scanf("%d", a + i);
	for (int i = 1; i < n; ++i) {
		int v, u;
		scanf("%d%d", &v, &u);
		e[v].push_back(u);
		e[u].push_back(v);
	}
	dfs(0, 1, 0);
	while (m--) {
		int y, x, val;
		scanf("%d%d", &y, &x);
		if (y == 1) {
			scanf("%d", &val);
			for (int *p = t[g[x]], i = l[x]; i <= n; i += i & -i)
				p[i] += val;
			for (int *p = t[g[x]], i = r[x]; i <= n; i += i & -i)
				p[i] -= val;
			for (int *p = t[!g[x]], i = l2[x]; i <= n; i += i & -i)
				p[i] -= val;
			for (int *p = t[!g[x]], i = r2[x]; i <= n; i += i & -i)
				p[i] += val;
		} else {
			int ans = a[x];
			for (int *p = t[g[x]], i = l[x]; i; i ^= i & -i)
				ans += p[i];
			printf("%d\n", ans);
		}
	}
}
