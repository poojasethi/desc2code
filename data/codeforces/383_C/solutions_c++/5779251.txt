#include <iostream>
#include <algorithm>
#include <cstdio>
#include <vector>

#define FOR(i,n) for(int i=0,_n=n;i<_n;i++)
#define vi vector<int>

#define pb push_back
#define maxn 400010
using namespace std;
typedef long long ll;

int qt[2][maxn + 1],A[maxn];
int lv[maxn];
vi vtx[maxn];

int get(int x,int gfx){
	int y = 0;
	while(x){
		y += qt[gfx][x];
		x -= (x & -x);
	}
	return y;
}
int set(int x,int gfx,int dd){
	while(x <= maxn){
		qt[gfx][x] += dd;
		x += (x & -x);
	}
}

int start[maxn],end[maxn],cnt = 1;
void f1(int x,int y){
	if(y != -1) lv[x] = lv[y] ^ 1;
	start[x] = cnt++;
	FOR(i,vtx[x].size())
		if(vtx[x][i] != y)
			f1(vtx[x][i],x);
	end[x] = cnt++;
}

int main(){
	int n,m,x,v,t;
	scanf("%d %d",&n,&m);
	FOR(i,n) scanf("%d",A + i);
	FOR(i,n - 1){
		scanf("%d %d",&x,&v);
		vtx[--x].pb(--v);
		vtx[v].pb(x);
	}
	lv[0] = 1;
	f1(0,-1);
	
	while(m--){
		scanf("%d",&t);
		if(t == 1)
		{
			scanf("%d %d",&x,&v);
			x--;
			
			set(start[x],lv[x] & 1,v);
			set(end[x],lv[x] & 1,-v);
		}
		else{
			scanf("%d",&x);
			x--;
			printf("%d\n",A[x] + get(start[x],lv[x] & 1) - get(start[x],lv[x] ^ 1));
		}
	}
	return 0;
}
