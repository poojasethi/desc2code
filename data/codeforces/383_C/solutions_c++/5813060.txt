#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <vector>
#define Vi vector<int>
#define VI Vi::iterator
#define pb push_back
#define lbt(x) ((x) & (-(x)))
using namespace std;

int n, m, a[222222], fx[222222], posi[222222], ed[222222], dlt[222222], size;
Vi g[222222];

void dfs(int id, int fa){
    fx[id] = -fx[fa];
    posi[id] = ++size;
    for (VI ii = g[id].begin(); ii != g[id].end(); ii++)
	if (*ii != fa) dfs(*ii, id);
    ed[id] = size;
}

void add(int x, int y){
    for (; x <= n; x += lbt(x))	dlt[x] += y;
}

int sum(int x){
    int y;
    for (; x; x-= lbt(x)) y += dlt[x];
    return y;
}

int main(){
    scanf("%d%d", &n, &m);
    for (int i = 1; i <= n; i++)
	scanf("%d", &a[i]);
    fx[0] = -1;
    for (int i = 1; i < n; i++){
	int x, y;
	scanf("%d%d", &x, &y);
	g[x].pb(y); g[y].pb(x);
    }
    dfs(1, 0);
    
    while (m--){
	int fun, x, y;
	scanf("%d", &fun);
	if (fun == 1){
	    scanf("%d%d", &x, &y);
	    y *= fx[x];
	    add(posi[x], y);
	    add(ed[x] + 1, -y);
	}
	else{
	    scanf("%d", &x);
	    printf("%d\n", a[x] + sum(posi[x]) * fx[x]);
	}
    }
    return 0;
}
