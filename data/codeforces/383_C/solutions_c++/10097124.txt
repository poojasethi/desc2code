#include <cstdio>
#include <vector>
#define pb push_back

using namespace std;

int n,m,a,b,q,r,s,jaw,idx,arr[200200],aw[200200],ak[200200],bit[200200],grup[200200];
vector<int> adj[200200];
bool vis[200200];


void dfs(int x){
	aw[x]=++idx;
	//dis[idx]=x;
	vis[x]=true;
	for (int i=0;i<(int)adj[x].size();i++){
		if (!vis[adj[x][i]]){
			grup[adj[x][i]]=1-grup[x];
			dfs(adj[x][i]);
		}
	}
	ak[x]=idx;
}

void update(int x,int y){
	for (;x<=200100;x+=(x&(-x))) bit[x]+=y;
}

int query(int x){
	int jaw=0;
	for (;x;x-=(x&(-x))) jaw+=bit[x];
	return jaw;
}

int main(){
	scanf("%d %d",&n,&m);
	for (int i=1;i<=n;i++) scanf("%d",&arr[i]);
	for (int i=1;i<n;i++){
		scanf("%d %d",&a,&b);
		adj[a].pb(b); adj[b].pb(a);
	}
	dfs(1);
	for (int i=1;i<=m;i++){
		scanf("%d",&q);
		if (q==1){
			scanf("%d %d",&r,&s);
			if (grup[r]){
				update(aw[r],-s);
				update(ak[r]+1,s);
			} else {
				update(aw[r],s);
				update(ak[r]+1,-s);
			}

		} else {
			scanf("%d",&r);
			if (grup[r]) printf("%d\n",arr[r]-query(aw[r]));
			else printf("%d\n",arr[r]+query(aw[r]));
		}
	}
}