#include <cstdio>
#include <vector>
using namespace std;

int n, m, Time, x, y, i, t, a[210000], h[210000], b[2][210000], L[210000], R[210000];
vector <int> ve[210000];

void dfs(int k, int fa) {
	h[k] = h[fa] ^ 1;
	L[k] = ++Time;
	for (int i = 0; i < (int) ve[k].size(); i++)
		if (ve[k][i] != fa)	dfs(ve[k][i], k);
	R[k] = Time;
}

void modify(int t, int x, int y) {
	for (; x <= n; x += x & -x)	b[t][x] += y;
}

int query(int t, int x) {
	int ans = 0;
	for (; x; x -= x & -x)	ans += b[t][x];
	return ans;
}

int main() {
	scanf("%d%d", &n, &m);
	for (i = 1; i <= n; i++)	scanf("%d", &a[i]);
	for (i = 1; i < n; i++) {
		scanf("%d%d", &x, &y);
		ve[x].push_back(y);
		ve[y].push_back(x);
	}
	dfs(1, 0);
	while (m--) {
		scanf("%d", &t);
		if (t == 1) {
			scanf("%d%d", &x, &y);
			modify(h[x], L[x], y);
			modify(h[x], R[x] + 1, -y);
			modify(h[x] ^ 1, L[x], -y);
			modify(h[x] ^ 1, R[x] + 1, y);
		}else {
			scanf("%d", &x);
			printf("%d\n", query(h[x], L[x]) + a[x]);
		}
	}
}
