#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <queue>
#include <algorithm>
using namespace std;
typedef __int64 ll;
ll p[25][70];
struct Factor
{
    ll p,k;
}fa[25];
ll V,S,A,B,C;
int n;
ll top[25];
int cas;
void getAB(int x,ll b,ll ab)
{
    if(ab<b*b)return;
    if(x==n)
    {
        ll a=ab/b;
        ll c=V/ab;
        ll s=(ab+(b+a)*c);
        if(S>s)A=a,B=b,C=c,S=s;
        return;
    }
    ll k=fa[x].k-top[x];
    for(int j=k;j>=0;--j)
    {
        getAB(x+1,b*p[x][j],ab);
    }
}
void dfs(int x,ll c)
{
    if(V/c<c*c)return;
    if(x==n)
    {
        ll ab=V/c;
        if(sqrt(ab)*2*c+ab<=S)getAB(0,1,ab);
        return;
    }
    for(int j=fa[x].k;j>=0;--j)
    {
        top[x]=j;
        dfs(x+1,c*p[x][j]);
    }
}
int main()
{
  //  freopen("in.txt","r",stdin);
    scanf("%d",&cas);
    while(cas--)
    {
        scanf("%d",&n);
        V=1;
        for(int i=0;i<n;++i)
        {
            scanf("%I64d%I64d",&fa[i].p,&fa[i].k);
            p[i][0]=1;
            for(ll t=1;t<=fa[i].k;++t)
            {
                V*=fa[i].p;
                p[i][t]=p[i][t-1]*fa[i].p;
            }
        }
        S=2*V+1;A=V;B=C=1;
        dfs(0,1ll);
        printf("%I64d %I64d %I64d %I64d\n",2*S,A,B,C);
    }
    return 0;
}
