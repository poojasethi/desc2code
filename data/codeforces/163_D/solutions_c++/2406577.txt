#include<stdio.h>
#include<math.h>
typedef long long ll;
const double eps=1e-9;
ll P[65],PP[65][65];
int I[65],Iv[65];
int N;
ll A_upper,B_upper,C_upper;
ll V,_V;
ll ans,A,B,C;
void dfs_b(int,ll,ll);
void dfs_a(int i,ll a)
{
	if(a>A_upper)return;
	if(i>N)
	{
		_V=V/a;
		B_upper=floor(sqrtl((long double)_V+eps));
		if(4*a*B_upper+2*B_upper*B_upper<ans)dfs_b(1,1,a);
		return;
	}
	for(int j=I[i];j>=0;j--)Iv[i]=j,dfs_a(i+1,a*PP[i][j]);
}
void dfs_b(int i,ll b,ll a)
{
	if(b>B_upper)return;
	if(i>N)
	{
		ll c=V/a/b;
		ll t=2*(a*b+b*c+c*a);
		if(t<ans)ans=t,A=a,B=b,C=c;
		return;
	}
	for(int j=I[i]-Iv[i];j>=0;j--)dfs_b(i+1,b*PP[i][j],a);
}
int main()
{
	int T;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d",&N);
		for(int i=1;i<=N;i++)scanf("%I64d%d",P+i,I+i);
		V=1;
		for(int i=1;i<=N;i++)
		{
			PP[i][0]=1;
			for(int j=1;j<=I[i];j++)PP[i][j]=PP[i][j-1]*P[i];
			V*=PP[i][I[i]];
		}
		ans=4*V+2,A=1,B=1,C=V;
		A_upper=floor(powl((long double)V+eps,(long double)1/3));
		dfs_a(1,1);
		printf("%I64d %I64d %I64d %I64d\n",ans,A,B,C);
	}
	return 0;
}
