#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
using namespace std;
struct P
{
	long long x;
	int y;
	bool operator<(const P &I)const
	{
		return x<I.x;	
	}
}p[1002];
long long aa,V,K,b,A,B,C,S[1002][1002],s;
int tmp[10001];
void dfsb(int d,long long c)
{
	if(c>int(sqrt(V/aa)+0.5))return;
	if(d==0)
	{
		b=max(b,c);
		return;
	}
	for(int i=tmp[d];i>=0;i--)
		dfsb(d-1,c*S[d][i]);
}
void dfsa(int k,long long a)
{
	if((double)a*a*a>V)return;
	if(k==0)
	{
		aa=a;
		if(V/a+int(sqrt(V/a)+0.5)*a*2<s)
		{
			b=1;
			dfsb(K,1);
			if((b+(V/a)/b)*a+V/a<s)
			{
				s=(b+(V/a)/b)*a+V/a;
				B=b;
				A=a;
			}
		}
		return;
	}
	for(int i=p[k].y;i>=0;i--)
	{
		tmp[k]=p[k].y-i;
		dfsa(k-1,a*S[k][i]);
	}
}
int main()
{
	int test;
	scanf("%d",&test);
	while(test--)
	{
		scanf("%d",&K);
		V=1;
		s=9000000000000000001LL;
		for(int i=1;i<=K;i++)
			scanf("%I64d%d",&p[i].x,&p[i].y);
		sort(p+1,p+K+1);
		for(int i=1;i<=K;i++)
		{
			S[i][0]=1;
			for(int j=1;j<=p[i].y;j++)
			{
				V*=p[i].x;
				S[i][j]=S[i][j-1]*p[i].x;
			}
		}
		dfsa(K,1);
		printf("%I64d %I64d %I64d %I64d\n",s*2,A,B,(V/A)/B);
	}
}
