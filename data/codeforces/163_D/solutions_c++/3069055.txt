#include <cstdio>
#include <cmath>
int _,n;long long v,p[100][100],e[100],ans,p1,p2,p3,q1,q2,q3;
void dfs2(long long x,int d) {
	if (x*x*p1>v) return;
	if (d>n) {
		p2=x;p3=v/p1/p2;
		if (p1*p2+p1*p3+p2*p3<ans) ans=p1*p2+p1*p3+p2*p3,q1=p1,q2=p2,q3=p3;
	} else {
		for (int t=e[d];t>=0;t--) dfs2(x*p[d][t],d+1);
	}
}
void dfs(long long x,int d) {
	if (x*x*x>v) return;
	if (d>n) {
		p1=x;double t=sqrt(v/p1);
		if (p1*t*2+v/p1<=ans) dfs2(1,1);
	} else {
		int t=e[d];e[d]=0;
		for (;t>=0;e[d]++,t--) dfs(x*p[d][t],d+1);
		e[d]--;
	}
}
int main() {
	for(scanf("%d",&_);_;_--) {
		scanf("%d",&n);v=1;
		for (int i=1;i<=n;i++) {
			scanf("%I64d%I64d",&p[i][1],&e[i]);p[i][0]=1;
			for (int j=2;j<=e[i];j++) p[i][j]=p[i][j-1]*p[i][1];
			v*=p[i][e[i]];
		}
		ans=2*v+1;q1=1;q2=1;q3=v;
		dfs(1,1);
		printf("%I64d %I64d %I64d %I64d\n",ans*2,q1,q2,q3);
	}
}