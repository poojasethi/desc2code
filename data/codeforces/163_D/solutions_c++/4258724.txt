#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#include <cstring>
using namespace std;

const int MAXN = 50 + 10, MAXM = 100 + 10;
typedef long long LL;

LL fac[MAXN][MAXM], V, AA, BB, CC;
int n;

void init()
{
	scanf("%d", &n);
	V = 1;
	for (int i = 1; i <= n; ++i)
	{
		cin >> fac[i][1] >> fac[i][0];
		for (int j = 2; j <= fac[i][0]; ++j)
			fac[i][j] = fac[i][j - 1] * fac[i][1];
		V *= fac[i][fac[i][0]];
	}
}
LL S, A, B, C;
void DFS(int x, LL F, bool flag)
{
	if ((!flag && F * F * F > V) || (flag && A * F * F > V))
		return ;
	if (x > n)
	{
		if (!flag)
		{
			A = F;
			if (A <= sqrt(V / A) && 2 * sqrt(V / A) * A + V / A < S)
				DFS(1, 1, 1);
		}
		else
		{
			B = F;
			C = V / A / B;
			if (A * B + B * C + C * A < S)
				S = A * B + B * C + C * A,
				AA = A, BB = B, CC = C;
		}
		return ;
	}
	for (int i = fac[x][0]; i >= 1; --i)
		fac[x][0] -= i,
		DFS(x + 1, F * fac[x][i], flag),
		fac[x][0] += i;
	DFS(x + 1, F, flag);
}
void solve()
{
	S = V * 2 + 2;
	DFS(1, 1, 0);
	cout << S * 2 << " " << AA << " " << BB << " " << CC << endl;
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin), freopen("output.txt", "w", stdout);
#endif
	int test;
	scanf("%d", &test);
	while (test)
		init(),
		solve(),
		--test;
	fclose(stdin);
	fclose(stdout);
	return 0;
}

  	  				 		 	  	  		  	 	