#include <iostream>
#include <cstdio>
#include <cmath>
#define ll long long
#define inf ((ll)1<<62)-1
using namespace std;
struct point 
{
	ll x,a;
}p[100];
int n;
ll key[100][100];
ll k[100];
ll s[3],ans;
ll v;
void getb(ll ab,ll b,int cur)
{
	if(ab<b*b)return ;
	if(cur>n+1)return ;
	if(cur==n+1)
	{
		ll a=ab/b;
		ll c=v/ab;
		ll tmp=a*c+ab+b*c;
		if(tmp<ans)
		{
			ans=tmp;
			s[0]=a,s[1]=b,s[2]=c;
		}
		return ;
	}
	int t=p[cur].a-k[cur];
	for(int i=t;i>=0;i--)
	{
		getb(ab,b*key[cur][i],cur+1);
	}
}
void dfs(ll c,int cur)
{
	if(v/c<c*c||cur>n+1)return ;
	if(cur==n+1)
	{
		ll ab=v/c;
		if(ab+2*sqrt(1.0*v*c)<=ans)
		{
			getb(ab,1,1);
		}
			return ;
	}
	for(int i=p[cur].a;i>=0;i--)
	{
		k[cur]=i;
		dfs(c*key[cur][i],cur+1);
	}
}
int main()
{
    int cas;
    ll suma,sumb;
    scanf("%d",&cas);
    while(cas--)
    {
        scanf("%d",&n);
        v=1;
        for(int i=1;i<=n;i++)
        {
            cin>>p[i].x>>p[i].a;
			ll t=1;
			key[i][0]=1;
            for(int j=1;j<=p[i].a;j++)
			{
				t*=p[i].x;
				key[i][j]=t;
			}
			v*=t;
        }
		ans=2*v+1;
		s[0]=v,s[1]=s[2]=1;
        dfs(1,1);
        ans*=2;
        cout<<ans<<' '<<s[0]<<' '<<s[1]<<' '<<s[2]<<endl;
    }
    return 0;
}
