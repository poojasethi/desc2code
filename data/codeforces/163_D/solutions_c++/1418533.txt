#include <cstdio>
#include <iostream>
#include <cmath>
#include <algorithm>
using namespace std;

typedef long long ll;

ll tot;
int pnum;
ll prime[50];
ll mpow[50][50];
int pcount[50];

int rem[50];

ll ans, aA, aB, aC;
ll A, lim2;
void dfs2(int i, ll cur) {
	if (cur > lim2) return;
	if (i == pnum) {
		ll C = tot / A / cur;
		ll res = A * cur + cur * C + A * C;
		if (res < ans) {
			ans = res;
			aA = A;
			aB = cur;
			aC = C;
		}
		return;
	}
	for (int j = rem[i]; j >= 0; j--) {
		dfs2(i + 1, cur * mpow[i][j]);
	}
}

ll lim;
void dfs(int i, ll cur) {
	if (cur > lim) return;
	if (i == pnum) {
		ll oth = tot / cur;
		lim2 = (ll)pow(oth, 1./2) + 1;
		if (oth + cur * (lim2 - 1) * 2 >= ans) {
			return;
		}
		A = cur;
		dfs2(0, 1);
		return;
	}
	for (int j = pcount[i]; j >= 0; j--) {
		rem[i] = pcount[i] - j;
		dfs(i + 1, cur * mpow[i][j]);
	}
}

void go() {
	cin >> pnum;
	tot = 1;
	for (int i = 0; i < pnum; i++) {
		cin >> prime[i] >> pcount[i];
		mpow[i][0] = 1;
		for (int j = 0; j < pcount[i]; j++) {
			mpow[i][j + 1] = mpow[i][j] * prime[i];
			tot *= prime[i];
		}
	}
	ans = 1LL << 62;
	lim = (ll)pow(tot, 1./3) + 1;
	dfs(0, 1);
	cout << ans * 2 << ' ' << aA << ' ' << aB << ' ' << aC << '\n';
}

int main() {
	int tn;
	cin >> tn;
	while (tn--) {
		go();
	}
}
