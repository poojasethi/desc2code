#include<iostream>
#include<cstdio>
#include<cmath>
using namespace std;
__int64 p[50][100],a[50],S,V,A,B,C,ansA,ansB,ansC;
int n,t,i,j;
double D;

void dfs(int x,int y,__int64 z)
{
	if((x==1?z:A)*z*z>V) return;
	if(y>n)
	{
		if(x==1)
		{
			A=z,D=sqrt(V/z);
			if(A<=D&&2*A*D+D*D<S) dfs(2,1,1);
		}
		else{
			B=z,C=V/A/B;
			if(A*B+A*C+B*C<S) S=A*B+A*C+B*C,ansA=A,ansB=B,ansC=C;
		}
		return;
	}
	for(int i=a[y];i;i--)
		a[y]-=i,dfs(x,y+1,z*p[y][i]),a[y]+=i;
	dfs(x,y+1,z);
}

int main()
{
	cin>>t;
	while(t--)
	{
		cin>>n;
		for(i=V=1;i<=n;i++)
		{
			cin>>p[i][1]>>a[i];
			for(j=2;j<=a[i];j++) p[i][j]=p[i][j-1]*p[i][1];
			V*=p[i][a[i]];
		}
		S=2*V+2;
		dfs(1,1,1);
		cout<<S*2<<' '<<ansA<<' '<<ansB<<' '<<ansC<<endl;
	}
}