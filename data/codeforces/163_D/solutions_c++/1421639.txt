#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
using namespace std;

typedef long long LL;
LL d[20],k[20],ax[20][100];
int K;
LL ans,A,B,C,n;

void sol2(int pos, LL b, LL bc)
{
    if(b > bc/b)return;
    if(pos == K)
    {
        LL a = n/bc, c = bc/b;
        LL t = a*b+b*c+a*c;
        if(t < ans)
        {
            ans = t;
            A=a,B=b,C=c;
        }
        return;
    }
    for(int i = k[pos]; i >= 0; i--)
    {
        sol2(pos+1,b*ax[pos][i],bc);
    }
}

void sol(int pos, LL a)
{
    if(a*a > n/a)return;
    if(pos==K)
    {
        LL bc = n/a;
        if(sqrt(1.0*bc)*a*2+bc >= ans)return;
        sol2(0,1,bc);
        return;
    }
    int m = k[pos];
    for(int i = m; i >= 0; i--)
    {
        k[pos]-=i;
        sol(pos+1,a*ax[pos][i]);
        k[pos]+=i;
    }
}

int main()
{
    int T;scanf("%d",&T);
    while(T--)
    {
        scanf("%d",&K);
        n = 1;
        for(int i = 0; i < K; i++)
        {
            scanf("%I64d%I64d",&d[i],&k[i]);
            ax[i][0]=1;
            for(int j = 1; j <= k[i]; j++)
            {
                ax[i][j] = d[i]*ax[i][j-1];
                n*=d[i];
            }
        }
        ans = n*2+1; A=n,B=C=1;
        sol(0,1);
        printf("%I64d %I64d %I64d %I64d\n",2*ans,A,B,C);
    }

    return 0;
}
