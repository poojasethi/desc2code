#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
struct dat{
    ll x, y, z;
    dat(ll x = 0, ll y = 0, ll z = 0):x(x), y(y), z(z){}
};
#define N 101000
dat A[N];
#define inf 3000000000000000000ll
ll mn[10], mx[10], st[10], en[10], g[10], st1[10], en1[10];
ll f[N][4];
ll X, Y, Z;

bool doit(ll x) {
    if(x * 2 > en[0] + en[3] || x * 2 > en[1] + en[2]) return false;
    for(int i = 0; i < 4; i ++) st1[i] = st[i] - x, en1[i] = en[i] - x;
    for(int i = 0; i < 2; i ++) {
        int j = 3 - i;
        st1[i] = max(st1[i], -en1[j]);
        en1[i] = min(en1[i], -st1[j]);
        if(st1[i] > en1[i]) return false;
    }
    ll sum = st1[0];
    ll sum1 = st1[1];
    if((sum + sum1) % 2) {
        if(st1[0] == en1[0] && st1[1] == en1[1]) return false;
        if(st1[0] == en1[0]) sum1 ++;
        else sum ++;
    }
    ll z = -(sum + sum1) / 2;
    ll y = sum1 + z;
    X = x;
    Y = y;
    Z = z;
    return true;
}
bool Ok(ll val) {
    for(int i = 0; i < 4; i ++) {
        if(mx[i] - val > mn[i] + val) return false;
    }
    for(int i = 0; i < 4; i ++) st[i] = mx[i] - val, en[i] = mn[i] + val;
    ll x = max(st[0] + st[3], st[1] + st[2]);
    if(x % 2) x ++;
    x = x / 2;
    if(!doit(x)) {
        if(!doit(x + 1)) return false;
    }
    return true;
}

int main() {
    //freopen("1.in", "r", stdin);
    int T, n;
    for(scanf("%d", &T); T --;) {
        scanf("%d", &n);
        for(int i = 1; i <= n; i ++) scanf("%I64d%I64d%I64d", &A[i].x, &A[i].y, &A[i].z);
        for(int i = 1; i <= n; i ++) {
            for(int j = 0; j < 4; j ++) {
                int x = j % 2;
                int y = (j / 2) % 2;
                if(x == 0) x = -1;
                if(y == 0) y = -1;
                f[i][j] = A[i].x + x * A[i].y + y * A[i].z;
            }
        }
        for(int j = 0; j < 4; j ++) {
            mx[j] = f[1][j];
            mn[j] = f[1][j];
            for(int i = 2; i <= n; i ++) mx[j] = max(mx[j], f[i][j]), mn[j] = min(mn[j], f[i][j]);
        }
        ll st = -1;
        ll en = inf;
        while(en - st > 1) {
            ll mid = (en + st) >> 1;
            if(Ok(mid)) en = mid;
            else st = mid;
        }
        Ok(en);
        printf("%I64d %I64d %I64d\n", X, Y, Z);
    }
}
