#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
using namespace std;
const int N=100005;
typedef long long int64;
struct point{
    int64 x,y,z;
    int64 a[8];
}p[N];
int x[8]={1,-1,1,1,-1,-1,1,-1};
int y[8]={1,1,-1,1,-1,1,-1,-1};
int z[8]={1,1,1,-1,1,-1,-1,-1};
int64 maxa[8];int n;int64 r;
/*void getnext(int64 &rx){
    static char ch=0;
#define ans rx
    ans=0;
    while(ch<'0'||ch>'9')ch=getchar();
    while(ch>='0'&&ch<='9'){ans=(ans<<3)+(ans<<1)+ch-'0';ch=getchar();}
#undef ans
    //return ans;
}*/
int64 lim(int dir,int k){
    if(k==1)return maxa[dir]-r;
    else return -(maxa[7-dir]-r);
}
int64 ans[4];
bool check(){
    int k1,k2,k3;int64 po;int l1=0,r1=0,l2=0,r2=0;
    for(int i=0;i<4;i++)if(lim(i,1)>lim(i,-1)){
        //cout<<"F1 : ";
        return false;
    }
    for(k1=1;k1>=-1;k1-=2){
        for(k2=1;k2>=-1;k2-=2){
            for(k3=1;k3>=-1;k3-=2){
                po=lim(1,k1)+lim(2,k2)+lim(3,k3);
                if(po>=lim(0,1)&&po<=lim(0,-1)){
                    ans[1]=lim(1,k1);
                    ans[2]=lim(2,k2);
                    ans[3]=lim(3,k3);
                    ans[0]=po;
                    //cout<<"T1 : ";
                    return true;
                }
                if(po-lim(0,1)>0)r1=1;else l1=1;
                if(po-lim(0,-1)>0)r2=1;else l2=1;
            }
        }
    }
    if(l1*r1||l2*r2){
        ans[0]=lim(0,1);
        ans[1]=lim(1,1);
        ans[2]=lim(2,1);
        ans[3]=lim(3,1);
        if(lim(1,-1)+ans[2]+ans[3]>=ans[0]){ans[1]=ans[0]-ans[2]-ans[3];}
        else{
            ans[1]=lim(1,-1);
            if(ans[1]+lim(2,-1)+ans[3]>=ans[0]){ans[2]=ans[0]-ans[1]-ans[3];}
            else {
                ans[2]=lim(2,-1);
                ans[3]=ans[0]-ans[1]-ans[2];
            }
        }
                    //cout<<"T2 : ";
        return true;
    }
    //cout<<"F2 : ";
    return false;
}
inline int64 Abs(const int64 &A){return A>0? A:-A;}
int64 compr(int64 X,int64 Y,int64 Z){
    int64 ans=0;
    for(int i=0;i<8;i++){
        ans=max(Abs(maxa[i]-(x[i]*X+y[i]*Y+z[i]*Z)),ans);
    }
    return ans;
}
int main_(){
    memset(maxa,0x80,sizeof(maxa));
    cin>>n;//scanf("%d",&n);
    for(int i=1;i<=n;i++){
        cin>>p[i].x>>p[i].y>>p[i].z;//scanf("%I64d%I64d%I64d",&p[i].x,&p[i].y,&p[i].z);
        for(int k=0;k<8;k++){
            p[i].a[k]=p[i].x*x[k]+p[i].y*y[k]+p[i].z*z[k];
            maxa[k]=max(maxa[k],p[i].a[k]);
        }
    }
    //for(int k=0;k<8;k++){cout<<maxa[k]<<endl;}
    int64 lr=0,rr=0;//max(maxa[0],maxa[7]);;
    for(int i=0;i<4;i++){
        rr=max(rr,Abs(maxa[i]+maxa[7-i]));
    }
    r=rr;if(!check())cout<<"WTF!"<<endl;
    while(lr<rr){
        r=(lr+rr)/2;
        if(check()){
            rr=r;
        }
        else {
            lr=r+1;
        }
        //cout<<r<<endl;
    }
        r=(lr+rr)/2;check();//)/*puts("WTF!");//*/cout<<"WTF!!"<<endl;
    //cout<<r<<endl;
    int64 x2=ans[0]-ans[1],y2=ans[0]-ans[2],z2=ans[0]-ans[3];
    int64 X,Y,Z,cr=3.1e18;
    for(int i=-2;i<=2;i+=2)
        for(int j=-2;j<=2;j+=2)
            for(int k=-2;k<=2;k+=2){
        if(cr>compr((x2+i)/2,(y2+j)/2,(z2+k)/2)){
            cr=compr((x2+i)/2,(y2+j)/2,(z2+k)/2);
            X=(x2+i)/2,Y=(y2+j)/2,Z=(z2+k)/2;
        }
    }
    cout<<X<<" "<<Y<<" "<<Z<<endl;//printf("%I64d %I64d %I64d\n",X,Y,Z);
   //while(cin>>X>>Y>>Z&&X&&Y&&Z)cout<<compr(X,Y,Z)<<endl;
}
int main(){
    int T;
    ios::sync_with_stdio(0);
    cin>>T;//scanf("%d",&T);
    for(int i=1;i<=T;i++){
        main_();
    }
}

