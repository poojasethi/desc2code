#include <bits/stdc++.h>

using namespace std;

typedef long long LL;

#define N 100100
LL inf;

template <typename T>
inline void chkmax(T &a, T b) { if(a < b) a = b; }

template <typename T>
inline void chkmin(T &a, T b) { if(a > b) a = b; }

struct pnt {
	LL x, y, z, t;
	pnt (LL x = 0, LL y = 0, LL z = 0, LL t = 0) : x(x), y(y), z(z), t(t) {}
}p[N], q[N];

int n;
LL mnx, mny, mnz, mnt,   mxx, mxy, mxz, mxt;
LL xx, yy, zz, tt;
LL xxx, yyy, zzz;

bool ooo(LL d) {
	if((mnx & 1) != d && mnx == mxx) return 0;
	if((mny & 1) != d && mny == mxy) return 0;
	if((mnz & 1) != d && mnz == mxz) return 0;
	if((mnt & 1) != d && mnt == mxt) return 0;
	xx = mnx; if((xx & 1) != d) xx ++;
	yy = mny; if((yy & 1) != d) yy ++;
	zz = mnz; if((zz & 1) != d) zz ++;
	if(xx + yy > mxt - zz) return 0;
	xxx = mxx; if((xxx & 1) != d) xxx --;
	yyy = mxy; if((yyy & 1) != d) yyy --;
	zzz = mxz; if((zzz & 1) != d) zzz --;
	if(xxx + yyy  < mnt - zzz) return 0;
	return 1;
}

bool oo(LL d) {
	if((mnx & 1) != d && mnx == mxx) return 0;
	if((mny & 1) != d && mny == mxy) return 0;
	if((mnz & 1) != d && mnz == mxz) return 0;
	if((mnt & 1) != d && mnt == mxt) return 0;
	xx = mnx; if((xx & 1) != d) xx ++;
	yy = mny; if((yy & 1) != d) yy ++;
	zz = mnz; if((zz & 1) != d) zz ++;
	if(xx + yy > mxt - zz) return 0;
	xxx = mxx; if((xxx & 1) != d) xxx --;
	yyy = mxy; if((yyy & 1) != d) yyy --;
	zzz = mxz; if((zzz & 1) != d) zzz --;
	if(xxx + yyy  < mnt - zzz) return 0;
	if(xx + yy >= mnt - zz) return 1;
	xx = xxx;
	if(xxx + yy >= mnt - zz) {
		xx = mnt - zz - yy;
		if((mnt & 1) != d) xx ++;
		return 1;
	}
	xx = xxx;
	if(xx + yyy >= mnt - zz) {
		yy = mnt - zz - xx;
		if((mnt & 1) != d) yy ++;
		return 1;
	}
	yy = yyy;
	zz = mnt - xx - yy;
	if((mnt & 1) != d) zz ++;
	return 1;
}

bool ok(LL d) {
	mxx = inf, mxy = inf, mxz = inf; mxt = inf;
	mnx = -inf, mny = -inf, mnz = -inf; mnt = -inf;
	for(int i = 1; i <= n; i ++) {
		chkmax(mnx, q[i].x - d); chkmax(mny, q[i].y - d); chkmax(mnz, q[i].z - d); chkmax(mnt, q[i].t - d);
		chkmin(mxx, q[i].x + d); chkmin(mxy, q[i].y + d); chkmin(mxz, q[i].z + d); chkmin(mxt, q[i].t + d);
	}
	if(mxx < mnx) return 0;
	if(mxy < mny) return 0;
	if(mxz < mnz) return 0;
	if(mxt < mnt) return 0;
	if(ooo(0)) return 1;
	return ooo(1);
}

void print(LL d) {
	mxx = inf, mxy = inf, mxz = inf; mxt = inf;
	mnx = -inf, mny = -inf, mnz = -inf; mnt = -inf;
	for(int i = 1; i <= n; i ++) {
		chkmax(mnx, q[i].x - d); chkmax(mny, q[i].y - d); chkmax(mnz, q[i].z - d); chkmax(mnt, q[i].t - d);
		chkmin(mxx, q[i].x + d); chkmin(mxy, q[i].y + d); chkmin(mxz, q[i].z + d); chkmin(mxt, q[i].t + d);
	}
	if(!oo(0)) oo(1);
	printf("%I64d %I64d %I64d\n", (yy + zz) >> 1, (xx + zz) >> 1, (xx + yy) >> 1);
}

void run() {
	LL st = -1, en = 3000000000000000000LL;
	while(st + 1 < en) {
		LL md = (st + en) >> 1;
		if(ok(md)) en = md; else st = md;
	}
	print(en);
}

int main() {
	//freopen("in.txt", "r", stdin);
	inf = ((1LL << 62) - 1) << 1;
	int T;
	for(scanf("%d", &T); T --; ) {
		scanf("%d", &n);
		for(int i = 1; i <= n; i ++) {
			scanf("%I64d %I64d %I64d\n", &p[i].x, &p[i].y, &p[i].z);
			q[i] = pnt(- p[i].x + p[i].y + p[i].z, p[i].x - p[i].y + p[i].z, p[i].x + p[i].y - p[i].z, p[i].x + p[i].y + p[i].z);
			//assert(q[i].x + q[i].y + q[i].z == q[i].t);
		}
		run();
	}
	return 0;
}
