#include<cstdio>
using namespace std;
long long abs(long long x){return x>0?x:(-x);}
long long max(long long a,long long b){return a>b?a:b;}
long long min(long long a,long long b){return a<b?a:b;}
long long maxx[5],minn[5],A,B,C,a[5][3],x[100010],y[100010],z[100010];
int test,n,i,j;
/*  Amax-r<=AA<=Amin+r
    Bmax-r<=BB<=Bmin+r
    Cmax-r<=CC<=Cmin+r
    Bmax-r+Cmax-r-Amin-r<=BB+CC-AA<=Cmin+r+Bmin+r-Amax+r
                     Dmax-r=<DD<=Dmin+r*/
    /*x+y+z=A
        x-y+z=B
        x+y-z=C
        y=(A-B)/2
        z=(A-C)/2
        x=(B+C)/2*/
bool check1(long long r)
{
    long long M,m,temp,now,AM,BM,CM,DM,Am,Bm,Cm,Dm;
    Am=maxx[1]-r;Bm=maxx[2]-r;Cm=maxx[3]-r;Dm=maxx[4]-r;
    AM=minn[1]+r;BM=minn[2]+r;CM=minn[3]+r;DM=minn[4]+r;
    AM-=AM&1;BM-=BM&1;CM-=CM&1;DM-=DM&1;
    Am+=Am&1;Bm+=Bm&1;Cm+=Cm&1;Dm+=Dm&1;
    if (Am>AM||Bm>BM||Cm>CM||Dm>DM) return 0;
    M=max(Dm,Bm+Cm+Am);
    m=min(DM,BM+CM+AM);
    if (M>m) return 0;
    B=Bm;C=Cm;A=Am;
    temp=B+C+A;
    if (M==Dm)
    {
       now=M-temp;
       if (now>=BM-B) {now-=(BM-B);B=BM;}
       else {B+=now;now=0;}
       if (now==0) return 1;
       if (now>=CM-C) {now-=(CM-C);C=CM;}
       else {C+=now;now=0;}
       if (now==0) return 1;
       A+=now;
    }
    return 1;
}
bool check2(long long r)
{
    long long M,m,temp,now,AM,BM,CM,DM,Am,Bm,Cm,Dm;
    Am=maxx[1]-r;Bm=maxx[2]-r;Cm=maxx[3]-r;Dm=maxx[4]-r;
    AM=minn[1]+r;BM=minn[2]+r;CM=minn[3]+r;DM=minn[4]+r;
    AM-=!(AM&1);BM-=!(BM&1);CM-=!(CM&1);DM-=!(DM&1);
    Am+=!(Am&1);Bm+=!(Bm&1);Cm+=!(Cm&1);Dm+=!(Dm&1);
    if (Am>AM||Bm>BM||Cm>CM||Dm>DM) return 0;
    M=max(Dm,Bm+Cm+Am);
    m=min(DM,BM+CM+AM);
    if (M>m) return 0;
    B=Bm;C=Cm;A=Am;
    temp=B+C+A;
    if (M==Dm)
    {
       now=M-temp;
       if (now>=BM-B) {now-=(BM-B);B=BM;}
       else {B+=now;now=0;}
       if (now==0) return 1;
       if (now>=CM-C) {now-=(CM-C);C=CM;}
       else {C+=now;now=0;}
       if (now==0) return 1;
       A+=now;
    }
    return 1;
}
int main()
{
    a[1][0]=-1;a[1][1]=1;a[1][2]=1;//A
    a[2][0]=1;a[2][1]=-1;a[2][2]=1;//B
    a[3][0]=1;a[3][1]=1;a[3][2]=-1;//C
    a[4][0]=1;a[4][1]=1;a[4][2]=1;//D=A+B+C
    scanf("%d",&test);
    while (test--)
    {
        scanf("%d",&n);
        for (i=1;i<=n;i++) scanf("%I64d%I64d%I64d",&x[i],&y[i],&z[i]);
        long long l,r;
        l=0;r=0;
        for (i=2;i<=n;i++) r=max(r,abs(x[1]-x[i])+abs(y[1]-y[i])+abs(z[1]-z[i]));
        for (j=1;j<=4;j++)
        {
            maxx[j]=minn[j]=x[1]*a[j][0]+y[1]*a[j][1]+z[1]*a[j][2];
            for (i=2;i<=n;i++)
            {
               long long now=x[i]*a[j][0]+y[i]*a[j][1]+z[i]*a[j][2];
               maxx[j]=max(maxx[j],now);
               minn[j]=min(minn[j],now);
            }
        }
        if (l==r) {printf("%I64d %I64d %I64d\n",x[1],y[1],z[1]);continue;}
        while (l<r)
        {
            long long mid=(l+r)/2;
            if (check1(mid)||check2(mid)) r=mid;
            else l=mid+1;
        }
        if (!check1(l)) check2(l); 
        printf("%I64d %I64d %I64d\n",(B+C)/2,(A+C)/2,(A+B)/2);
    }
    return 0;
}