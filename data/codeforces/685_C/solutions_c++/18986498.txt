#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
#define INF LL(4e+18)
struct node {LL x, y, z;} a[100010], p;
struct extreme {LL Max, Min;} v[4], l[4], g[4];
/* v[0] +x+y+z a+b+c
   v[1] -x+y+z a
   v[2] +x-y+z b
   v[3] +x+y-z c */ 
int T, n;
LL f[4];

void get_v() {
	for(int i = 2; i <= n; i++) {
		v[0].Max = max(v[0].Max,+a[i].x+a[i].y+a[i].z);
		v[0].Min = min(v[0].Min,+a[i].x+a[i].y+a[i].z);
		v[1].Max = max(v[1].Max,-a[i].x+a[i].y+a[i].z);
		v[1].Min = min(v[1].Min,-a[i].x+a[i].y+a[i].z);
		v[2].Max = max(v[2].Max,+a[i].x-a[i].y+a[i].z);
		v[2].Min = min(v[2].Min,+a[i].x-a[i].y+a[i].z);
		v[3].Max = max(v[3].Max,+a[i].x+a[i].y-a[i].z);
		v[3].Min = min(v[3].Min,+a[i].x+a[i].y-a[i].z);
	}
}

LL calc(int r){
	LL sum = 0;
	for(int i = 1; i <= 3; i++) sum += f[i]*2+r;
	return sum;
}

void Make_p(int r){
	LL a = f[1]*2+r, b = f[2]*2+r, c = f[3]*2+r;
	p.x = (b+c)/2;p.y = (a+c)/2;p.z = (a+b)/2;
}

bool find(int r){
	for(int i = 1; i <= 3; i++) g[i] = l[i];
	for(int i = 1; i <= 3; i++) {
		if (((g[i].Max-r)&1) == 0) g[i].Max = (g[i].Max-r)/2;
		else g[i].Max = (g[i].Max-r-1)/2;
		if (((g[i].Min-r)&1) == 0) g[i].Min = (g[i].Min-r)/2;
		else g[i].Min = (g[i].Min-r+1)/2;
		if (g[i].Max < g[i].Min) return false;
		f[i] = g[i].Min;
	}
	LL now = calc(r);
	if (now > l[0].Max) return false;
	if ((now >= l[0].Min) && (now <= l[0].Max)) {Make_p(r);return true;}
	LL c = l[0].Min-now;
	if (c&1 != 0)
		if (l[0].Min < l[0].Max) c++;
		else return false;
	if (c <= (g[1].Max-g[1].Min)*2) {f[1] += c/2;Make_p(r);return true;}
	else {
		f[1] = g[1].Max;c -= (g[1].Max-g[1].Min)*2;
		if (c <= (g[2].Max-g[2].Min)*2) {f[2] += c/2;Make_p(r);return true;}
		else {
			f[2] = g[2].Max;c -= (g[2].Max-g[2].Min)*2;
			if (c <= (g[3].Max-g[3].Min)*2) {f[3] += c/2;Make_p(r);return true;}
		}
	}
	return false;
}

bool check(LL x){
	for (int i = 0; i <= 3; i++) {
		l[i].Max = v[i].Min+x;l[i].Min = v[i].Max-x;
		if (l[i].Max < l[i].Min) return false;
	}
	if (find(0)) return true;
	else if (find(1)) return true;
	return false;
}

int main(){
	scanf("%d", &T);
	while (T--) {
		scanf("%d", &n);
		for(int i = 1; i <= n; i++)
			scanf("%I64d%I64d%I64d", &a[i].x, &a[i].y, &a[i].z);
		v[0].Max = v[0].Min = +a[1].x+a[1].y+a[1].z;
		v[1].Max = v[1].Min = -a[1].x+a[1].y+a[1].z;
		v[2].Max = v[2].Min = +a[1].x-a[1].y+a[1].z;
		v[3].Max = v[3].Min = +a[1].x+a[1].y-a[1].z;
		get_v();
		LL l = 0, r = INF, ans = 0;
		while (l <= r) {
			check(2);
			LL mid = (l+r)/2;
			if (check(mid)) {ans = mid;r = mid-1;}
			else l = mid+1;
		}
		printf("%I64d %I64d %I64d\n", p.x, p.y, p.z);
	}
}
