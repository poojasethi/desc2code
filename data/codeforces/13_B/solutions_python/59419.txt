import sys, math
rl = lambda: sys.stdin.readline().strip()
def dot(a, b): return a[0]*b[0]+a[1]*b[1]
def cross(a, b): return a[0]*b[1]-b[0]*a[1]
def sub(a, b): return (a[0]-b[0], a[1]-b[1])
def on_segment(p, a, b):
    #print p, a, b
    if p[0] < min(a[0], b[0]) or max(a[0], b[0]) < p[0]: return False
    if p[1] < min(a[1], b[1]) or max(a[1], b[1]) < p[1]: return False
    pp = sub(p, a); bb = sub(b, a)
    if cross(pp, bb) != 0: return False
    pl = dot(pp, pp); bl = dot(bb, bb)
    # 0.2 <= sqrt(pl) / sqrt(bl) <= 0.8
    # 1/25 <= pl / bl <= 16/25
    #print pl, bl, math.sqrt(pl), math.sqrt(bl)
    return bl <= pl*25 and pl*25 <= bl*16

def check(seg3, seg1, seg2):
    a, b = seg1
    c, d = seg2
    e, f = seg3
    if a != c: c, d = d, c
    if a != c: a, b = b, a
    if a != c: c, d = d, c
    if a != c: return False
    #print "pass 1"
    if dot(sub(b, a), sub(d, a)) < 0: return False
    #print "pass 2"

    if False == on_segment(e, a, b):
        e, f = f, e

    ej = on_segment(e, a, b)
    fj = on_segment(f, c, d)
    if ej == False or fj == False: return False
    return True

def pnts(t):
    if len(t) != 4:
        while True: pass
    return (t[0], t[1]), (t[2], t[3])

t = int(rl())
for i in range(t):
    coords = [pnts(map(int, rl().split())) for i in range(3)]
    ok = (check(coords[0], coords[2], coords[1]) or
          check(coords[1], coords[0], coords[2]) or
          check(coords[2], coords[1], coords[0]))
    #print "========="
    print "YES" if ok else "NO"
