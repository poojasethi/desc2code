#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <sstream>
#include <fstream>
#include <cmath>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <complex>
using namespace std;

#define eps 1e-9

const double minn = 0.25;
const double maxx = 0.75;

typedef long long ll;
typedef complex<ll> point;
typedef pair<point,point> segment;

ll dot(point a, point b) {
	return a.real()*b.real() + a.imag()*b.imag();
}

ll cross(point a, point b) {
	return imag( conj(a)*b );
}

bool ison(point p, segment a) {
	point u,v;
	u = p-a.first;
	v = a.second-a.first;
	if( cross(u,v)!=0LL ) {
		return false;
	}
	double alpha;
	if(a.first.real() != a.second.real()) {
		alpha = (p.real()-a.second.real())/(double)(a.first.real()-a.second.real());
	}
	else {
		alpha = (p.imag()-a.second.imag())/(double)(a.first.imag()-a.second.imag());
	}
	//cout<<alpha<<endl;
	if(alpha <= 0.5) {
		alpha = alpha/(1.0-alpha);
	}
	else alpha = (1.0-alpha)/alpha;
	//cout<<alpha<<endl;
	if(alpha >= minn-eps) return true;
	return false;
}

bool checkk(segment a, segment b, segment c) {
	if(a.first == b.second) swap(b.first,b.second);
	else if(a.second == b.first) swap(a.first,a.second);
	else if(a.second == b.second) {
		swap(a.first,a.second);
		swap(b.first,b.second);
	}
	//cout<<a.first<<" "<<b.first<<endl;
	if(a.first != b.first)return false;
	point u,v;
	u = a.second-a.first;
	v = b.second-b.first;
//	cout<<dot(u,v)<<" "<<cross(u,v)<<endl;
	if( dot(u,v)>=0LL && cross(u,v) != 0LL ) {}
	else return false;
	//cout<<"fdfsd"<<endl;
	//cout<<c.first<<" "<<c.second<<" "<<a.first<<" "<<a.second<<" "<<b.first<<" "<<b.second<<endl;
	if( ison(c.first,a) && ison(c.second,b) ) return true;
	if( ison(c.second,a) && ison(c.first,b) ) return true;
	return false;
}

int main() {
	int T;
	cin>>T;
	segment a,b,c;
	ll x,y;
	while(T--) {
		cin>>x>>y;
		a.first = point(x,y);
		cin>>x>>y;
		a.second = point(x,y);
		cin>>x>>y;
		b.first = point(x,y);
		cin>>x>>y;
		b.second = point(x,y);
		cin>>x>>y;
		c.first = point(x,y);
		cin>>x>>y;
		c.second = point(x,y);
		bool ok = false;
		if( checkk(a,b,c) ) ok = true;
		if( checkk(a,c,b) ) ok = true;
		if( checkk(b,c,a) ) ok = true;
		if(ok)cout<<"YES"<<endl;
		else cout<<"NO"<<endl;
	}
	return 0;
}
