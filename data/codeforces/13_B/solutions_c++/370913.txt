#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>
#include <stack>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long ll;
int _x[10],_y[10],x[10],y[10];

ll dist(int a, int b){
    ll dx = x[a] - x[b];
    ll dy = y[a] - y[b];
    return dx*dx + dy*dy;
}

ll area(int a, int b, int c){
    ll dx1 = x[b] - x[a], dx2 = x[c] - x[a];
    ll dy1 = y[b] - y[a], dy2 = y[c] - y[a];
    return dx1 * dy2 - dx2 * dy1;
}

bool check(int a, int b, int c){
    if(area(a,b,c) != 0) return false;
    ll x = dist(a,b), y = dist(a,c), z = dist(b,c);
    if(y < x && z < x && 16*y >= z && 16*z >= y) return true;
    return false;
}

bool A(void){
    if(x[0] != x[2] || y[0] != y[2]) return false;
    if(!check(0,1,4)) return false;
    if(!check(2,3,5)) return false;
    
    ll x = dist(0,1), y = dist(0,3), z = dist(1,3);
    if(z > x+y) return false;
    
    if(area(0,1,3) == 0) return false;
    
    return true;
}

bool func(void){
    int mask,i,j;
    
    vector <int> p;
    REP(i,3) p.push_back(i);
    
    do {
        REP(i,3) REP(j,2) x[2*i+j] = _x[2*p[i]+j];
        REP(i,3) REP(j,2) y[2*i+j] = _y[2*p[i]+j];
        
        REP(mask,8){
            REP(i,3) if(mask&(1<<i)) {swap(x[2*i],x[2*i+1]); swap(y[2*i],y[2*i+1]);}
            if(A()) return true;
            REP(i,3) if(mask&(1<<i)) {swap(x[2*i],x[2*i+1]); swap(y[2*i],y[2*i+1]);}
        }
    } while(next_permutation(p.begin(),p.end()));
    
    return false;
}

int main(void){
    int T,t,i,j;
    
    cin >> T;
    REP(t,T){
        REP(i,6) cin >> _x[i] >> _y[i];
        cout << (func() ? "YES" : "NO") << endl;
    }
    
    return 0;
}
