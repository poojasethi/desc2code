#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>

struct Point
{
	Point() { x = 0, y = 0; }
	Point(int _x, int _y) { x = _x, y = _y; }
	int x, y;
};

using namespace std;

Point p[6], q[6];


long long area(Point a, Point b, Point c)
{
	long long pp = 0;
	pp = (long long)a.x * (long long)b.y + (long long)b.x * (long long)c.y + (long long)c.x * (long long)a.y;
	pp -= (long long)a.y * (long long)b.x + (long long)b.y * (long long)c.x + (long long)c.y * (long long)a.x;
	if (pp < 0) pp = -pp;
	return pp;
}

long long len(Point a, Point b)
{
	long long pp = 0;
	pp = (long long)(a.x - b.x) * (long long)(a.x - b.x) + (long long)(a.y - b.y) * (long long)(a.y - b.y);
	return pp;
}

bool go()
{
	int p1 = -1, p2, p3;
	int tt = 0;
	for (int i = 0; i < 6; ++i)
	{
		for (int j = i + 1; j < 6; ++j)
		{
			if (p[i].x == p[j].x && p[i].y == p[j].y)
			{
				p1 = i, p2 = j;
				tt++;
			}
		}
	}
	if (tt != 1) return false;
	if (p2 - p1 == 1 && p1 % 2 == 0) return false;

	p3 = (3 - (p1/2) - (p2/2)) * 2;
	q[0] = p[p1]; q[1] = p[p1 ^ 1];
	q[2] = p[p2]; q[3] = p[p2 ^ 1];
	q[4] = p[p3]; q[5] = p[p3 ^ 1];

	if (area(q[0], q[1], q[3]) == 0) return false;
	if (area(q[0], q[1], q[4]) != 0 || area(q[2], q[3], q[5]) != 0) swap(q[4], q[5]);
	if (area(q[0], q[1], q[4]) != 0 || area(q[2], q[3], q[5]) != 0) return false;
	if (len(q[0], q[1]) + len(q[2], q[3]) < len(q[1], q[3])) return false;

	if (len(q[0], q[1]) < len(q[0], q[4])) return false;
	if (len(q[0], q[1]) < len(q[1], q[4])) return false;
	if (len(q[2], q[3]) < len(q[2], q[5])) return false;
	if (len(q[2], q[3]) < len(q[3], q[5])) return false;
	
	long long aa = len(q[0], q[4]);
	long long ab = len(q[4], q[1]);
	if (aa > ab) swap(aa, ab);
	if (16 * aa < ab) return false;

	aa = len(q[2], q[5]);
	ab = len(q[5], q[3]);
	if (aa > ab) swap(aa, ab);
	if (16 * aa < ab) return false;

	return true;
}

int main()
{
	int T;
	scanf("%d", &T);
	while (T--)
	{
		for (int i = 0; i < 6; ++i)
			scanf("%d%d", &p[i].x, &p[i].y);
		if (go()) printf("YES\n"); else printf("NO\n");
	}
}
