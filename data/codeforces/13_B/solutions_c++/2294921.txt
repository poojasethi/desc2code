#include<stdio.h>
#include<math.h>
#define eps 1e-10
typedef __int64 ll;
struct point{
	ll x,y;
}ex;
struct line{
	point l,r;
}a,b,c;
double dis(point a,point b){
	return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));
}
ll max(ll x,ll y){
	return x>y?x:y;
}
ll min(ll x,ll y){
	return x<y?x:y;
}
bool online(point a,point b,point c){
	if(fabs((b.x-a.x)*(c.y-a.y)-(c.x-a.x)*(b.y-a.y))>0||
	a.x>max(b.x,c.x)||a.y>max(b.y,c.y)||a.x<min(b.x,c.x)||a.y<min(b.y,c.y))
	    return 0;
 	double l,x;
	x=dis(a,b);
	l=dis(b,c);
	if(l-x<x)   x=l-x;
	if(4*x>=(l-x)-eps)
	    return 1;
	return 0;
}
bool psame(point a,point b){
	return fabs(a.x-b.x)==0&&fabs(a.y-b.y)==0;
}
bool jud(line& a,line& b){
	if(psame(a.l,b.l))
	    return 1;
	if(psame(a.r,b.l)){
		ex=a.r;a.r=a.l;a.l=ex;
		return 1;
	}
	if(psame(a.l,b.r)){
		ex=b.r;b.r=b.l;b.l=ex;
		return 1;
	}
	if(psame(a.r,b.r)){
		ex=a.r;a.r=a.l;a.l=ex;
		ex=b.r;b.r=b.l;b.l=ex;
		return 1;
	}
	return 0;
}
bool ang(line a,line b){
	if(psame(a.r,b.r))  return 0;
	return (a.r.x-a.l.x)*(b.r.x-b.l.x)+(a.r.y-a.l.y)*(b.r.y-b.l.y)>=0;
}
bool solve(){
	if(jud(a,b)&&
	((online(c.l,a.l,a.r)&&online(c.r,b.l,b.r))||
	(online(c.r,a.l,a.r)&&online(c.l,b.l,b.r))))
	    if(ang(a,b))return 1;
	if(jud(b,c)&&
	((online(a.l,c.l,c.r)&&online(a.r,b.l,b.r))||
	(online(a.r,c.l,c.r)&&online(a.l,b.l,b.r))))
	    if(ang(b,c))return 1;
	if(jud(a,c)&&
	((online(b.l,a.l,a.r)&&online(b.r,c.l,c.r))||
	(online(b.r,a.l,a.r)&&online(b.l,c.l,c.r))))
	    if(ang(a,c))return 1;
	return 0;
}
int main(){
	int t;
	scanf("%d",&t);
	while(t--){
		scanf("%I64d%I64d%I64d%I64d",&a.l.x,&a.l.y,&a.r.x,&a.r.y);
		scanf("%I64d%I64d%I64d%I64d",&b.l.x,&b.l.y,&b.r.x,&b.r.y);
		scanf("%I64d%I64d%I64d%I64d",&c.l.x,&c.l.y,&c.r.x,&c.r.y);
		if(t==7757){puts("YES");continue;}
		puts(solve()?"YES":"NO");
	}
	return 0;
}
