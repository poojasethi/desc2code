import re
import itertools

checker = re.compile("^([a-z]{1,3})([a-z]{1,8})$")
parts = raw_input().strip().split('.')

if len(parts) <=  1:
    print "NO"
elif not (1 <= len(parts[0]) <= 8):
    print "NO"
elif not (1 <= len(parts[-1]) <= 3):
    print "NO"
elif any(map(lambda x: not (2 <= len(x) <= 11), parts[1:-1])):
    print "NO"
else:
    print "YES"
    fields = [parts[0]]
    for p in parts[1:-1]:
        ext, name = checker.findall(p)[0]
        fields.append(ext)
        fields.append(name)
    fields.append(parts[-1])
    for k in  map(lambda x: '.'.join(x), zip(fields[::2], fields[1::2])):
        print k
