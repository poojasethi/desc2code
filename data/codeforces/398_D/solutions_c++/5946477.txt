#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

const int MAXN = 50100;

int n, m, q, o, onl[MAXN], ans[MAXN];
vector<int> E[MAXN];

void update (int x, int val) {
    onl[x] = val;
    int v = (val ? 1 : -1);

    for (vector<int>::iterator it = E[x].begin(); it != E[x].end(); ++it) ans[*it] += v;
}

int query (int x) {
    int ret = ans[x];
    for (vector<int>::iterator it = E[x].begin(); it != E[x].end(); ++it) ret += onl[*it];
    return ret;
}

void spoji (int a, int b) {
    if (E[a].size() > E[b].size()) swap (a, b);
    E[a].push_back(b);
    ans[b] += onl[a];
}

void odspoji (int a, int b) {
    vector<int>::iterator t;
    if ((t = find(E[a].begin(), E[a].end(), b)) != E[a].end()) E[a].erase(t), ans[b] -= onl[a];
    if ((t = find(E[b].begin(), E[b].end(), a)) != E[b].end()) E[b].erase(t), ans[a] -= onl[b];
}

int main ()
{
    scanf ("%d%d%d%d", &n, &m, &q, &o);

    for (int i = 0; i < o; ++i) {
        int x; scanf ("%d", &x);
        onl[x-1] = 1;
    }

    for (int i = 0; i < m; ++i) {
        int a, b; scanf ("%d%d", &a, &b);
        --a; --b;
        spoji (a, b);
    }

    for (int i = 0; i < q; ++i) {
        int a, b; 
        char tip[5];
        scanf ("%s%d", tip, &a); --a;
        if (tip[0] == 'O') update(a, 1);
        else if (tip[0] == 'F') update(a, 0);
        else if (tip[0] == 'A') {
            scanf ("%d", &b); --b;
            spoji (a, b);
        }
        else if (tip[0] == 'D') {
            scanf ("%d", &b); --b;
            odspoji (a, b);
        }
        else printf ("%d\n", query(a));
    }

    return 0;
}

