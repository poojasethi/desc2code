#include <map>
#include <list>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#define maxn 50005
using namespace std;

typedef list<int>List;
typedef List::iterator it;
int N,M,P,Q,d[maxn],a[maxn],f[maxn],X[maxn*10],Y[maxn*10];
List e[maxn];
map<int,bool>F[maxn];

void add(int u,int v)
{
	f[v]+=a[u],F[u][v]=1;
	e[u].push_back(v);
}

void del(int u,int v)
{
	f[v]-=a[u],F[u][v]=0;
	for (it j=e[u].begin(); j!=e[u].end(); j++) if (*j==v) {e[u].erase(j); break;}
}

void init()
{
	scanf("%d%d%d%d",&N,&M,&Q,&P);
	for (int i=1,x; i<=P; i++) scanf("%d",&x),a[x]=1;
	for (int i=1; i<=M; i++) scanf("%d%d",&X[i],&Y[i]),d[X[i]]++,d[Y[i]]++;
	for (int i=1; i<=M; i++) if (d[X[i]]<d[Y[i]]) add(X[i],Y[i]); else add(Y[i],X[i]);
}

void doit()
{
	char s[2];
	for (int i=1,u,v; i<=Q; i++)
	{
		scanf("%s%d",s,&u);
		if (s[0]=='O')
		{
			a[u]=1;
			for (it j=e[u].begin(); j!=e[u].end(); j++) f[*j]++;
		}
		else if (s[0]=='F')
		{
			a[u]=0;
			for (it j=e[u].begin(); j!=e[u].end(); j++) f[*j]--;
		}
		else if (s[0]=='C')
		{
			v=f[u];
			for (it j=e[u].begin(); j!=e[u].end(); j++) v+=a[*j];
			printf("%d\n",v);
		}
		else if (s[0]=='A')
		{
			scanf("%d",&v),d[u]++,d[v]++;
			if (d[u]<d[v]) add(u,v); else add(v,u);
		}
		else if (s[0]=='D')
		{
			scanf("%d",&v),d[u]--,d[v]--;
			if (F[u][v]) del(u,v); else del(v,u);
		}
	}
}

int main()
{
	init();
	doit();
	return 0;
}