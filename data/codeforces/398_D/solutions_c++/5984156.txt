#include <cstdio>
#include <algorithm>
#include <vector>

using namespace std;

const int MAXN = 500005;

int n, m, q, o;
int alive[MAXN];
int ans[MAXN];

char A;
int B, C;

vector< int > E[MAXN];

void add_edge( int x, int y ){
  if( E[x].size() < E[y].size() ) swap( x, y );
  E[y].push_back( x );
  if( alive[y] ) ++ans[x];
}

void rem_edge( int x, int y ){
  if( count( E[x].begin(), E[x].end(), y ) ){ ans[y] -= alive[x]; E[x].erase( find( E[x].begin(), E[x].end(), y ) ); }
  if( count( E[y].begin(), E[y].end(), x ) ){ ans[x] -= alive[y]; E[y].erase( find( E[y].begin(), E[y].end(), x ) ); }
}

void update( int x, int v ){
  for( int i = 0; i < E[x].size(); ++i )
    ans[E[x][i]] += v;
}

int main( void ){
  scanf( "%d%d%d", &n, &m, &q );
  scanf( "%d", &o );

  for( int i = 0; i < o; ++i ){
    int x; scanf( "%d", &x );
    alive[x] = 1;
  }

  for( int i = 0; i < m; ++i ){
    scanf( "%d%d", &B, &C );
    add_edge( B, C );
  }

  for( int i = 0; i < q; ++i ){
    scanf( " %c ", &A );
    if( A == 'A' || A == 'D' ) scanf( "%d%d", &B, &C );
    else scanf( "%d", &B );

    if( A == 'O' ) update( B, +1 ), alive[B] = 1;
    if( A == 'F' ) update( B, -1 ), alive[B] = 0;
    if( A == 'C' ){
      int ret = ans[B];
      for( int j = 0; j < E[B].size(); ++j )
	ret += alive[E[B][j]];

      printf( "%d\n", ret );
    }
    if( A == 'A' ) add_edge( B, C );
    if( A == 'D' ) rem_edge( B, C );
  }

  return 0;
}
