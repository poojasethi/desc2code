#include <cstdio>
#include <iostream>
#include <cstring>
#include <climits>
#include <cstdlib>
#include <algorithm>
#include <cmath>
#include <vector>
using namespace std;
const int maxn = 50050;
int n, m, q, o, ans[maxn]; vector<int> E[maxn], D[maxn];
bool bla[maxn];
inline void read(char &ch)
{
    while (ch = getchar(), ch != 'O' && ch != 'F' && ch != 'A' && ch != 'D' && ch != 'C');
}
inline void add(int u, int v, int k)
{
    if (E[u].size() + D[u].size() > E[v].size() + D[v].size()) swap(u, v); 
    if (k == 1) E[u].push_back(v); else D[u].push_back(v);
    ans[v] += k*bla[u];
}
inline void rev(int x)
{
    int k = 1 - 2 * bla[x];
    bla[x] ^= 1;
    for (vector<int >::iterator i = E[x].begin(); i != E[x].end(); ++i)
        ans[*i] += k;
    for (vector<int >::iterator i = D[x].begin(); i != D[x].end(); ++i)
        ans[*i] -= k;
}
inline int query(int x)
{
    int res = ans[x];
    for (vector<int >::iterator i = E[x].begin(); i != E[x].end(); ++i)
        res += bla[*i];
    for (vector<int >::iterator i = D[x].begin(); i != D[x].end(); ++i)
        res -= bla[*i];
    return res;
}
int main()
{
    scanf("%d %d %d", &n, &m, &q);
    scanf("%d", &o);
    for (int i = 1, x; i <= o; ++i) scanf("%d", &x), bla[x] = 1;
    for (int i = 1; i <= m; ++i) {
        int u, v; scanf("%d %d", &u, &v);
        add(u, v, 1);
    }
    for (int i = 1; i <= q; ++i) {
        char cmd; read(cmd);
        if (cmd == 'O' || cmd == 'F') {
            int x; scanf("%d", &x); rev(x);
        }
        else if (cmd == 'A' || cmd == 'D') {
            int x, y; scanf("%d %d", &x, &y);
            add(x, y, cmd == 'A' ? 1 : -1);
        }
        else {
            int x; scanf("%d", &x); printf("%d\n", query(x));
        }
    }
    return 0;
}