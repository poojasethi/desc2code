//感叹一下CF支持的语言真多，另外这是什么鬼分块方法
#include<vector>
#include<algorithm>
#include<iostream>

#define MAX 50005

using namespace std ;

int n, m, q, o;
bool on[MAX];
vector <int> heavy[MAX];
int light[MAX];
//light[x]::online num of friends lighter than x
//heavy[x][]::friends heavier than x

void Online(int x);
void Offline(int x);
void Add(int x, int y);
void Del(int x, int y);
int Count(int x);

int main()
{
	#ifndef ONLINE_JUDGE
		freopen("in.txt","r",stdin);
//		freopen("out.txt","w",stdout);
	#endif
	ios::sync_with_stdio(false);
	
	int i, x, y;
	string op;
	cin >> n >> m >> q >> o;
	while(o--)
	{
		cin >> x;
		on[x]=true;
	}
	
	while(m--)
	{
		cin >> x >> y;
		Add(x,y);
	}
	
	while(q--)
	{
		cin >> op >> x;
		switch(op[0])
		{
			case 'O' : Online(x); break;
			case 'F' : Offline(x); break;
			case 'A' : cin >> y; Add(x,y); break;
			case 'D' : cin >> y; Del(x,y); break;
			case 'C' : cout << Count(x) << endl; break;
		}
	}
	return 0;
}

void Online(int x)
{
	on[x]=true;
	int i, l=heavy[x].size();
	for(i=0;i<l;i++) light[ heavy[x][i] ]++;
}

void Offline(int x)
{
	on[x]=false;
	int i, l=heavy[x].size();
	for(i=0;i<l;i++) light[ heavy[x][i] ]--;
}

void Add(int x, int y)
{
	if(heavy[x].size()>heavy[y].size()) swap(x,y);
	// x is lighter than y
	heavy[x].push_back(y);
	light[y]+=on[x];	
}

void Del(int x, int y)
{
	int i, v, l=heavy[x].size();
	for(i=0,v=-1;i<l;i++)
		if(heavy[x][i]==y) {v=i;break;}
	if(v==-1) // y is lighter than x
	{
		swap(x,y);	l=heavy[x].size();
		for(i=0,v=-1;i<l;i++)
			if(heavy[x][i]==y) {v=i;break;}
	}
	
	// x is lighter than y
	light[y]-=on[x];
	heavy[x][v]=heavy[x].back();
	heavy[x].pop_back();
}

int Count(int x)
{
	int i, res=0, l=heavy[x].size();
	res+=light[x];
	for(i=0;i<l;i++) res+=on[ heavy[x][i] ];
	return res;
}


				        	 		       	 			