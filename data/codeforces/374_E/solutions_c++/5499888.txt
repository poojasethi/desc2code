#include <stdio.h>
#include <string.h>
#include <algorithm>

using namespace std;

struct tt
{
    int x, y;
    int p, q;
    bool u;
} a[2048], b[2048];

int n = 0, m = 0;

bool my[2048][2048] = { 0 };

bool cmpa(const struct tt &s, const struct tt &t)
{
    if (s.x != t.x) {
        return s.x < t.x;
    }
    return s.y < t.y;
}

bool cmpb(const struct tt &s, const struct tt &t)
{
    if (s.y != t.y) {
        return s.y < t.y;
    }
    return s.x < t.x;
}

bool tt(int t)
{
    int i = 0, j = 0, k = 0, g = 0, lx[2048] = { 0 };

    for (i = 0; i < n; i ++) {
        a[i].p = a[i].y - (t + t);
        a[i].q = a[i].y + (t + t);
        a[i].u = true;
        if (i && a[i].x == a[i-1].x && a[i].p <= a[i-1].q) {
            a[i].p = a[i-1].p;
            a[i-1].u = false;
        }
    }
    
    for (i = 0; i < m; i ++) {
        b[i].p = b[i].x - (t + t);
        b[i].q = b[i].x + (t + t);
        b[i].u = true;
        if (i && b[i].y == b[i-1].y && b[i].p <= b[i-1].q) {
            b[i].p = b[i-1].p;
            b[i-1].u = false;
        }
    }

    memset(my, 0, sizeof(my));

    for (i = 0; i < n; i ++) {
        if (!a[i].u) {
            continue;
        }
        g = 0;
        for (j = 0; j < m; j ++) {
            if (!b[j].u) {
                continue;
            }
            if (a[i].p <= b[j].y && b[j].y <= a[i].q) {
                if (b[j].p <= a[i].x && a[i].x <= b[j].q) {
                    lx[g ++] = j;
                }
            }
        }

        for (j = 0; j < g; j ++) {
            for (k = j + 1; k < g; k ++) {
                if (my[lx[j]][lx[k]]) {
                    return true;
                }
                my[lx[j]][lx[k]] = my[lx[k]][lx[j]] = true;
            }
        }
    }

    return false;
}


int main()
{
    int p = 0, q = 0, x = 0, y = 0, mid = 0, i = 0;
    while (scanf("%d%d", &n, &m) == 2) {
        for (i = 0; i < n; i ++) {
            scanf("%d%d", &x, &y);
            a[i].x = y + x;
            a[i].y = y - x;
        }
        for (i = 0; i < m; i ++) {
            scanf("%d%d", &x, &y);
            b[i].x = y + x;
            b[i].y = y - x;
        }
        sort(a, a + n, cmpa);
        sort(b, b + m, cmpb);
        p = 1;
        q = 1 << 21;
        while (p <= q) {
            mid = (p + q) / 2;
            if (tt(mid)) {
                q = mid - 1;
            }
            else {
                p = mid + 1;
            }
        }
        if (p > (1 << 21)) {
            printf("Poor Sereja!\n");
        }
        else {
            printf("%d\n", p);
        }
    }
    return 0;
}

