#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<fstream>
#include<map>
#include<ctime>
#include<set>
#include<queue>
#include<cmath>
#include<vector>
#include<bitset>
#include<functional>
#define x first
#define y second
#define mp make_pair
#define pb push_back
#define REP(i,l,r) for((i)=(l);(i)<=(r);++(i))
#define REP2(i,l,r) for((i)=(l);(i)!=(r);++(i))
using namespace std;

typedef long long LL;
typedef double ld;

int n,m;
vector< pair<int,int> > A,B;

void merge(vector< pair<int,int> >& A)
{
	int i;
	REP2(i,0,A.size())
	{
		int tx=A[i].x,ty=A[i].y;
		A[i].x=tx+ty;
		A[i].y=tx-ty;
	}
}

vector< pair<int,pair<int,int> > > get(vector< pair<int,int> > A,int mid)
{
	vector< pair<int,pair<int,int> > > ans;
	size_t i;
	for(i=0;i<A.size();)
	{
		int l=A[i].y-mid;
		int r=A[i].y+mid;
		int x=A[i].x;
		for(;i<A.size() && A[i].x==x && A[i].y-mid<=r;++i)
			r=A[i].y+mid;
		ans.pb(mp(x,mp(l,r)));
	}
	return ans;
}

int check(int mid)
{
	size_t i,j;

	vector< pair<int, pair<int,int> > > X=get(A,mid);
	vector< pair<int, pair<int,int> > > Y=get(B,mid);

	REP2(i,0,X.size())
	{
		int l=X[i].y.x;
		int r=X[i].y.y;
		int x=X[i].x;

		vector< pair<int,int> > toAdd;
		set<int> hash;

		REP2(j,0,Y.size())
			if(Y[j].y.x<=x && x<=Y[j].y.y && l<=Y[j].x && Y[j].x<=r)
				toAdd.pb( mp(Y[j].y.x,Y[j].x) );

		sort(toAdd.begin(),toAdd.end());

		size_t now=0;
		REP2(j,0,i)
		{
			for(;now<toAdd.size() && toAdd[now].x<=X[j].x;++now)
				hash.insert(toAdd[now].y);
			int l=X[j].y.x;
			int r=X[j].y.y;

			set<int>::iterator it,ij;

			it=hash.lower_bound(l);
			ij=hash.lower_bound(r+1);
			if(it==ij)
				continue;
			if((++it)==ij)
				continue;
			return 1;
		}
	}
	return 0;
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#endif
	int i;
	int a,b;
	cin>>n>>m;
	REP(i,1,n)
	{
		cin>>a>>b;
		A.pb(mp(a,b));
	}
	REP(i,1,m)
	{
		cin>>a>>b;
		B.pb(mp(a,b));
	}
	merge(A);
	merge(B);

	REP2(i,0,(int)B.size())
		swap(B[i].x,B[i].y);

	sort(A.begin(),A.end());
	sort(B.begin(),B.end());

	int left=0,right=1e7;

	while(left<right)
	{
		int mid=(left+right)/2;
		if(check(mid*2))
			right=mid;
		else left=mid+1;
	}

	if(left==1e7)
		printf("Poor Sereja!\n");
	else printf("%d\n",left);

	return 0;
}
