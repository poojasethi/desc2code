#include <cstdio>
#include <vector>
#include <map>
#include <algorithm>

#define N 2000
#define MX 1000000000
#define itr std::map <int, std::vector<int> >::iterator

int ax[N], ay[N], bx[N], by[N], n, m, i, min = MX, ip[2][2], jp[2][2], t, t1, t2, t3;
std::map <int, std::vector<int> > wa, wb;
itr it, jt, it1, jt1;

int abs(int a)
{
	return a >= 0 ? a : -a;
}

int pit(itr it, itr jt, int c1 = 0, int c2 = 0)
{
	int t1 = (it->first - jt->first) / 2, p = abs(it->second[0] - t1), i, ll = 0, rr, t;
	ip[c1][c2] = 0;
	if ((rr = it->second.size()) > 1)
		while (ll + 1 < rr)
		{
			i = (ll + rr) >> 1;
			if ((t = abs(it->second[i] - t1)) < p)
				p = t, ip[c1][c2] = ll = i;
			else
				rr = i;
		}
	return p;
}

int pjt(itr it, itr jt, int c1 = 0, int c2 = 0)
{
	int t1 = (it->first - jt->first) / 2, p = abs(jt->second[0] - t1), i, ll = 0, rr, t;
	jp[c1][c2] = 0;
	if ((rr = jt->second.size()) > 1)
		while (ll + 1 < rr)
		{
			i = (ll + rr) >> 1;
			if ((t = abs(jt->second[i] - t1)) < p)
				p = t, jp[c1][c2] = ll = i;
			else
				rr = i;
		}
	return p;
}

int dit(itr it, int c = 0)
{
	int t = 0, p = 0;
	for (i = ip[c][0] + 1; i <= ip[c][1]; i ++)
		if ((p = it->second[i] - it->second[i - 1]) > t)
			t = p;
	return t;
}

int djt(itr jt, int c = 0)
{
	int t = 0, p = 0;
	for (i = jp[c][0] + 1; i <= jp[c][1]; i ++)
		if ((p = jt->second[i] - jt->second[i - 1]) > t)
			t = p;
	return t;
}

int main()
{
	scanf("%d%d", &n, &m);

	for (i = 0; i < n; i ++)
	{
		scanf("%d%d", &ax[i], &ay[i]);
		ax[i] <<= 1;
		ay[i] <<= 1;
		wa[ax[i] + ay[i]].push_back(ax[i]);
	}

	for (i = 0; i < m; i ++)
	{
		scanf("%d%d", &bx[i], &by[i]);
		bx[i] <<= 1;
		by[i] <<= 1;
		wb[by[i] - bx[i]].push_back(bx[i]);
	}

	if (wa.size() == 1 || wb.size() == 1)
	{
		printf("Poor Sereja!\n");
		return 0;
	}

	for (it = wa.begin(); it != wa.end(); ++ it)
		sort(wa[it->first].begin(), wa[it->first].end());

	for (it = wb.begin(); it != wb.end(); ++ it)
		sort(wb[it->first].begin(), wb[it->first].end());

	for (it = wa.begin(); it != wa.end(); ++ it)
		for (jt = wb.begin(); jt != wb.end(); ++ jt)
		{
			if ((t1 = pit(it, jt)) >= min)
				continue;
			if ((t = pjt(it, jt)) >= min)
				continue;
			if (t > t1)
				t1 = t;
			for (it1 = it, ++ it1; it1 != wa.end(); ++ it1)
			{
				if ((t2 = pit(it1, jt, 1)) >= min)
					continue;
				if ((t = pjt(it1, jt, 0, 1)) >= min)
					continue;
				if (t > t2)
					t2 = t;
				if ((t = djt(jt)) >= min)
					continue;
				if (t > t2)
					t2 = t;
				for (jt1 = jt, ++ jt1; jt1 != wb.end(); ++ jt1)
				{
					if ((t3 = pit(it, jt1, 0, 1)) >= min)
						continue;
					if ((t = pjt(it, jt1, 1)) >= min)
						continue;
					if (t > t3)
						t3 = t;
					if ((t = pit(it1, jt1, 1, 1)) >= min)
						continue;
					if (t > t3)
						t3 = t;
					if ((t = pjt(it1, jt1, 1, 1)) >= min)
						continue;
					if (t > t3)
						t3 = t;
					if ((t = djt(jt1, 1)) >= min)
						continue;
					if (t > t3)
						t3 = t;
					if ((t = dit(it1, 1)) >= min)
						continue;
					if (t > t3)
						t3 = t;
					if ((t = dit(it)) >= min)
						continue;
					if (t > t3)
						t3 = t;
					t = t1 >= t2 ? t1 : t2;
					if (t3 > t)
						t = t3;
					if (t < min)
						min = t;
				}
			}
		}

	printf("%d\n", min / 2 + min % 2);

	return 0;
}
