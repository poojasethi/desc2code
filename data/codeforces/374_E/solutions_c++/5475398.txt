/*
 * temp.cpp
 *
 *  Created on: 2012-7-18
 *      Author: BSBandme
 */
//#pragma comment(linker, "/STACK:1024000000,1024000000")
#include <iostream>
#include <fstream>
#include <string.h>
#include <vector>
#include <cstdio>
#include <algorithm>

using namespace std;

#define mpr make_pair
typedef vector <int> vi;

const int maxn = 2010;
const int inf = 1000000000;
struct point {
	point(int a = 0, int b = 0) : x(a), y(b) {}
	int x, y;
} orig[2][maxn];
int n[2];
int fa[2][maxn];
bool have[maxn][maxn], can[maxn][maxn];
int getfa(int f, int no) {
	if(fa[f][no] != no) return fa[f][no] = getfa(f, fa[f][no]);
	return fa[f][no];
}
void uni(int f, int a, int b){
	a = getfa(f, a); b = getfa(f, b);
	fa[f][a] = b;
}
bool justdoit(int tt) {
	int wei[2] = {1, -1};
	for(int t = 0; t < 2; t++) for(int i = 0; i < n[t]; i++)
		fa[t][i] = i;
	for(int t = 0; t < 2; t++)
		for(int i = 0; i < n[t]; i++) for(int j = i + 1; j < n[t]; j++) {
			if(orig[t][i].x - orig[t][j].x != (orig[t][i].y - orig[t][j].y) * wei[t]) continue;
			if((orig[t][i].x - orig[t][j].x + 1) / 2 > tt) continue;
			uni(t, i, j);
		}
	memset(have, 0, sizeof(have));
	memset(can, 0, sizeof(can));
	vi yiyou[maxn];
	for(int i = 0; i < n[0]; i++) yiyou[i].reserve(n[1]);
	for(int i = 0; i < n[0]; i++) for(int j = 0; j < n[1]; j++) {
		int i11 = getfa(0, i), j11 = getfa(1, j);
		if(have[i11][j11]) continue;
		int t1 = max(abs(orig[0][i].x - orig[0][i].y - orig[1][j].x + orig[1][j].y),
				       abs(orig[0][i].x + orig[0][i].y - orig[1][j].x - orig[1][j].y));
		t1 = (t1 + 1) / 2;
		if(t1 > tt) continue;
		have[i11][j11] = 1;
		for(int p = 0; p < (int)yiyou[i11].size(); p++) {
			if(can[yiyou[i11][p]][j11] || can[j11][yiyou[i11][p]])
				return 1;
			can[yiyou[i11][p]][j11] = can[j11][yiyou[i11][p]] = 1;
		}
		yiyou[i11].push_back(j11);
	}
	return 0;
}

int main(){
	ios_base::sync_with_stdio(0);
	scanf("%d%d", &n[1], &n[0]);
	for(int j = 1; j >= 0; j--) for(int i = 0; i < n[j]; i++) {
		int a, b;
		scanf("%d%d", &a, &b);
		orig[j][i].x = a;
		orig[j][i].y = b;
	}
	int be = 0, en = 2000000;
	while(be != en) {
		int mid = (be + en) / 2;
		if(justdoit(mid)) en = mid;
		else be = mid + 1;
	}
	if(be == 2000000) puts("Poor Sereja!");
	else cout << be << endl;

	return 0;
}



