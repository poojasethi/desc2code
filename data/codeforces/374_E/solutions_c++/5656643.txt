#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;

const int N = 2010;
int c[N][N];
int pre[N];

int find(int x)
{
    if(pre[x] == -1) return x;
    return pre[x] = find(pre[x]);
}

struct point
{
    int x,y;
    point() {}
    point(int x,int y):x(x),y(y) {}
    void read() {
        scanf("%d%d",&x,&y);
        int tmp = x - y;
        y = x + y;
        x = tmp;
    }
}a[N],b[N];

int X[2][N],Y[2][N];
bool check(int mid,int n,int m)
{
    vector<int> v,vv;
    for(int i = 1; i <= n; i ++) {
        X[0][i] = a[i].x - 2 * mid;
        X[1][i] = a[i].x + 2 * mid;
    }
    for(int i = 1; i <= m; i ++) {
        Y[0][i] = b[i].y - 2 * mid;
        Y[1][i] = b[i].y + 2 * mid;
    }
    memset(pre,-1,sizeof(pre));
    for(int i = 1; i <= n; i ++) {
        for(int j = i + 1; j <= n; j ++) {
            if(a[i].y != a[j].y) continue;
            if(X[0][i] <= X[1][j] && X[0][j] <= X[1][i]) {
                int x = find(i);
                int y = find(j);
                X[0][x] = min(X[0][x],X[0][y]);
                X[1][x] = max(X[1][x],X[1][y]);
                if(x != y) pre[y] = x;
            }
        }
    }
    for(int i = 1; i <= n; i ++)
        if(pre[i] == -1) v.push_back(i);
    memset(pre,-1,sizeof(pre));
    for(int i = 1; i <= m; i ++) {
        for(int j = i + 1; j <= m; j ++) {
            if(b[i].x != b[j].x) continue;
            if(Y[0][i] <= Y[1][j] && Y[0][j] <= Y[1][i]) {
                int x = find(i);
                int y = find(j);
                Y[0][x] = min(Y[0][x],Y[0][y]);
                Y[1][x] = max(Y[1][x],Y[1][y]);
                if(x != y) pre[y] = x;
            }
        }
    }    
    for(int i = 1; i <= m; i ++)
        if(pre[i] == -1) vv.push_back(i);  
    memset(c,0,sizeof(c));
    int re[N];
    for(int i = 0; i < vv.size(); i ++) {
        int ct = 0;
        for(int j = 0; j < v.size(); j ++) {
            if(Y[0][vv[i]] <= a[v[j]].y && Y[1][vv[i]] >= a[v[j]].y && X[0][v[j]] <= b[vv[i]].x && b[vv[i]].x <= X[1][v[j]])
                re[ct ++] = v[j];
        }
        for(int j = 0; j < ct; j ++)
            for(int k = j + 1; k < ct; k ++) {
                c[re[j]][re[k]] ++;
                if(c[re[j]][re[k]] == 2) return true;
            }
    }
    return false;
}

int main()
{
    int n,m;
    scanf("%d%d",&n,&m);
    for(int i = 1; i <= n; i ++) a[i].read();
    for(int i = 1; i <= m; i ++) b[i].read();
    int lt = 0,rt = 10000000,ans = -1,mid;
    while(lt <= rt) {
        mid = (lt + rt) / 2;
        if(check(mid,n,m)) ans = mid,rt = mid - 1;
        else lt = mid + 1;
    }
    if(ans == -1) cout << "Poor Sereja!" << endl;
    else cout << ans << endl;
    return 0;
}


	   				    	   	  		 	 	