#include<cstdio>
#include<algorithm>
#include<cstring>
#include<vector>
#define MAXN 2005
#define pr pair<int,int>
#define ppr pair<pr,pr>
using namespace std;
int n,m,x,y;
pr blue[MAXN],red[MAXN];
pr tb[MAXN][2],tr[MAXN][2];
int L,R,M,ans;
int inter[MAXN][MAXN];
vector<ppr>b,r;
bool cmp1(pr A,pr B)
{return (A.first==B.first)?(A.second<B.second):(A.first<B.first);}
bool cmp2(pr A,pr B)
{return (A.second==B.second)?(A.first<B.first):(A.second<B.second);}
bool intersect(ppr A,ppr B)
{return A.first.second<=B.first.second&&A.second.second>=B.first.second&&B.first.first<=A.first.first&&B.second.first>=A.first.first;}
bool exist(int t)
{
	int last=1;b.clear();
	for (int i=1;i<=n;i++)
	{
		tb[i][0]=make_pair(blue[i].first,blue[i].second-t*2);
		tb[i][1]=make_pair(blue[i].first,blue[i].second+t*2);
		if (i==1)continue;
		if (blue[i].first==blue[last].first&&tb[i][0]<=tb[last][1])
		tb[last][1]=tb[i][1];
		else b.push_back(make_pair(tb[last][0],tb[last][1])),last=i;
	}
	b.push_back(make_pair(tb[last][0],tb[last][1]));
	last=1;r.clear();
	for (int i=1;i<=m;i++)
	{
		tr[i][0]=make_pair(red[i].first-t*2,red[i].second);
		tr[i][1]=make_pair(red[i].first+t*2,red[i].second);
		if (i==1)continue;
		if (red[i].second==red[last].second&&tr[i][0]<=tr[last][1])
		tr[last][1]=tr[i][1];
		else r.push_back(make_pair(tr[last][0],tr[last][1])),last=i;
	}
	r.push_back(make_pair(tr[last][0],tr[last][1]));
	memset(inter,0,sizeof(inter));
	for (int i=0;i<b.size();i++)
	for (int j=0;j<r.size();j++)
	{
		if (!intersect(b[i],r[j]))continue;
		for (int k=j+1;k<r.size();k++)
		{
			if (!intersect(b[i],r[k]))continue;
			inter[j][k]++;
			if (inter[j][k]>=2)return 1;
		}
	}
	return 0;
}
int main()
{
	scanf("%d%d",&n,&m);
	for (int i=1;i<=n;i++)
	{
		scanf("%d%d",&x,&y);
		blue[i]=make_pair(x+y,x-y);
	}
	sort(blue+1,blue+n+1,cmp1);
	for (int i=1;i<=m;i++)
	{
		scanf("%d%d",&x,&y);
		red[i]=make_pair(x+y,x-y);
	}
	sort(red+1,red+m+1,cmp2);
	if (blue[1].first==blue[n].first||red[1].second==red[m].second)
	{puts("Poor Sereja!");return 0;}
	L=0;R=2000000;
	while (L<=R)
	{
		M=(L+R)>>1;
		if (exist(M))R=M-1;
		else L=M+1;
	}
	printf("%d\n",L);
}
