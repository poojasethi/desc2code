from bisect import *

def longest_increasing_subsequence(A):
  top_cards = [A[0]]
  
  for i in xrange(1, len(A)):
    if A[i] > top_cards[-1]:
      top_cards.append(A[i])
    else:
      top_cards[bisect_right(top_cards, A[i])] = A[i]

  return len(top_cards)

n = int(raw_input())
A = map(int, raw_input().split())
print longest_increasing_subsequence(A)