#include <iostream>
#include <stdio.h>
#include <string.h>
#include <vector>

const int MAXN=100010;
using namespace std;
int in[MAXN];
int vis[MAXN];
vector<int> edge[MAXN],s,e;

int dfs(int u)
{
    vis[u]=1;
    int v=edge[u][0];
    if (!vis[v]) return vis[u]=dfs(v);
    else return vis[u]=u;
}

int main()
{
    int n;
    while(~scanf("%d",&n))
    {
        for(int i=1; i<=n; i++)
        {
            int x;
            scanf("%d",&x);
            in[x]++;
            edge[i].push_back(x);
        }
        int cnt=0;
        for(int i=1; i<=n; i++)
        {
            if (!in[i])
            {
                s.push_back(i);
                e.push_back(dfs(i));
                cnt++;
            }
        }
        int tt=cnt;
        for(int i=1; i<=n; i++)
        {
            if (!vis[i])
            {
                s.push_back(i);
                e.push_back(dfs(i));
                cnt++;
            }
        }
        if (tt==0 && cnt==1) cnt=0;
        printf("%d\n",cnt);
        for (int i=0; i<cnt; i++)
            printf("%d %d\n", e[i], s[(i+1)%cnt]);
    }
    return 0;
}

 						 		   				  				     		