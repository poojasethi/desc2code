#include <bits/stdc++.h>

using namespace std;
ifstream fi ("scheme.inp");
ofstream fo ("scheme.out");
const int maxn=100005;
int n,k=0,goi[maxn]={0},bacvao[maxn]={0},start[maxn]={0},finish[maxn]={0},tham[maxn]={0};

void dfs(int u){
    if (finish[u]) return;
    if (tham[u]) {
        finish[u]=u;
        return;
    }
    tham[u]=1;
    dfs(goi[u]);
    finish[u]=finish[goi[u]];
    return;
}


int main()
{
    cin>>n;
    for (int i=1; i<=n; i++) {
        cin>>goi[i];
        bacvao[goi[i]]++;
    }
    for (int i=1; i<=n; i++)
        if (!bacvao[i]) {
            dfs(i);
            start[k++]=i;
        }
    for (int i=1; i<=n; i++)
        if (!tham[i]) {
            dfs(i);
            start[k++]=i;
        }
    if (k==1 && start[0]==finish[start[0]]) cout<<"0\n";
    else {
        cout<<k<<endl;
        for (int i=0; i<k;i++) cout<<finish[start[(i+1)%k]]<<' '<<start[i%k]<<endl;
    }
    return 0;
}