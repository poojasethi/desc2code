#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

const int N=100006;
int n, arc[N], s[N], t[N], in[N], ind, End[N], ans;
bool vs[N];

void DFS(int u)
{
	vs[u]=1;
	if(vs[arc[u]])
	{
		End[u]=u;
		return;
	}
	DFS(arc[u]);
	End[u]=End[arc[u]];
}

int main()
{
	scanf("%d", &n);
	for(int i=1; i<=n; i++)
	{
		scanf("%d", &arc[i]), vs[i]=0;
		in[arc[i]]++;
	}
	ind=ans=0;
	for(int i=1; i<=n; i++)
	{
		if(in[i]) continue;
		ans++;
		if(!vs[arc[i]])
		{
			s[ind]=i;
			DFS(i);
			t[ind++]=End[i];
		}
	}
	int circle=0;
	for(int i=1; i<=n; i++)
		if(in[i] && !vs[i])
		{
			circle++;
			s[ind]=i;
			DFS(i);
			t[ind++]=End[i];
		}
	if(circle==1 && ans==0)
	{
		printf("0\n");
		return 0;
	}
	else ans+=circle;
	printf("%d\n", ans);
	for(int i=0; i<ind-1; i++) printf("%d %d\n", t[i], s[i+1]);
	if(ans) printf("%d %d\n", t[ind-1], s[0]);
	for(int i=1; i<=n; i++)
	{
		if(in[i] || vs[i]) continue;
		printf("%d %d\n", arc[i], i);
	}
	return 0;
}

				  	  			 		 	 	 	 	 	