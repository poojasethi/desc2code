#include<iostream>
#include<vector>
using namespace std;

#define pb push_back

#define maxn 100009

int calls[maxn];
int indeg[maxn];

bool done[maxn];

int dfs( int x )
{
   if( done[x] )
    return x;

  done[x]=true;

  return dfs( calls[x] );
}

vector<int> x,y;

int n;

int main()
{

 cin>>n;

  for(int i=1;i<=n;i++)
    { cin>>calls[i];
       indeg[ calls[i] ]++;
     }

    for(int i=1;i<=n;i++)
     if(!indeg[i] ) //tail
      { x.pb(i);
        y.pb( dfs(i) );
       }

     for(int i=1;i<=n;i++)
      if(!done[i] ) //cycle wale
      { x.pb(i);
    y.pb(i);

        dfs(i);
      }


  if( x.size()==1 && x[0]==y[0] )
   { cout<<"0\n";
      return 0;
   }

  cout<<x.size()<<endl;

  for(int i=0;i<x.size();i++)
   cout<<y[i]<<" "<<x[ (i+1)%x.size() ]<<endl;
        



 return 0;
}







