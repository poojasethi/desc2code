#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <stack>
#define MAX 100010
using namespace std;
int in[MAX]; int f[MAX]; bool U[MAX];

int main(){
	int n,v;
	scanf("%d",&n); memset(in,0,sizeof in); memset(U,false,sizeof U);
	vector < int > A; 
	vector < int > B;
	for(int i = 0;i < n;i++){
		scanf("%d",&f[i]); f[i]--;
		in[f[i]]++;
	}
	// buscamos cuando tenga grado de entrada 0
	for(int i = 0;i < n;i++){
		if(in[i] == 0){
			A.push_back(i + 1);
			int r = i;
			while(!U[r]){
				U[r] = true;
				r = f[r];
			}
			B.push_back(r + 1);
		}
	}
	// ahora buscamos cuando es un ciclo
	for(int i = 0;i < n;i++){
		if(!U[i]){
			A.push_back(i + 1);
			B.push_back(i + 1);
			int r = i;
			while(!U[r]){
				U[r] = true;
				r = f[r];
			}
		}
	}
	// si es un ciclo completo entonces A[0] = B[0]
	if(A.size() == 1 && A[0] == B[0]){
		printf("0\n");
		return 0;
	}
	printf("%d\n",A.size());
	for(int i = 1;i < A.size();i++) printf("%d %d\n",B[i - 1],A[i]);
	printf("%d %d\n",B[B.size() - 1],A[0]);
	return 0;
}
