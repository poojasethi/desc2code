#include<stdio.h>
#include<string.h>
#include<iostream>
#include<queue>
#include<algorithm>
using namespace std;

const int maxn=200010;

int c[maxn];
int N;
void upd(int n)
{
	while(n<=N)
		c[n]++,n+=n&(-n);
}
int get(int n)
{
	int ans=0;
	while(n)
		ans+=c[n],n-=n&(-n);
	return ans;
}
int a[maxn],p[maxn];
vector<pair<pair<int,int>,pair<int,int> > >V[maxn];
int ans[maxn];

int main()
{
	int n,m,i,j,k;
	cin>>n>>m;
	N=n;

	int u,v;
	for(i=1;i<=n;i++)
		scanf("%d",&a[i]),p[a[i]]=i;
	for(i=1;i<=m;i++)
	{
		scanf("%d%d",&u,&v);
		V[u-1].push_back(make_pair(make_pair(u,v),make_pair(i,-1)));
		V[v].push_back(make_pair(make_pair(u,v),make_pair(i,1)));
	}
	for(int ii=0;ii<=n;ii++)
	{
		if(ii)
		{
			k=a[ii];
			for(i=k;i<=n;i+=k)
				upd(p[i]);
		}
		for(i=0;i<V[ii].size();i++)
			ans[V[ii][i].second.first]+=(get(V[ii][i].first.second)-get(V[ii][i].first.first-1))*V[ii][i].second.second;
	}
	for(i=1;i<=m;i++)
		printf("%d\n",ans[i]);
}