#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;
int head[200005],next[4000005],e[4000005],ans[200005],o,g[200005],A[200005],i,j,tree[200005],n,m,now,p;
struct node {int x,y,z;} t[200005];
int cmp(node i,node j) {return i.x<j.x;}
int bit(int k) {return k&-k;}
void add(int a,int b,int c)
{
    e[a]=c;
    next[a]=head[b];
    head[b]=a;
}
int main()
{
    scanf("%d%d",&n,&m);
    for (i=1; i<=n; i++)
    {
        scanf("%d",&A[i]);
        g[A[i]]=i;
    }
    for (i=1; i<=n; i++)
      for (j=A[i]; j<=n; j+=A[i])
        if (g[j]>=i) add(++o,i,g[j]); else add(++o,g[j],i);
    for (i=1; i<=m; i++)
      {scanf("%d%d",&t[i].x,&t[i].y); t[i].z=i;}
    sort(t+1,t+m+1,cmp); now=m;
    for (i=n; i>=1; i--)
    {
        p=head[i];
        while (p!=0) {for (j=e[p]; j<=n; j+=bit(j)) tree[j]++; p=next[p];}
        while (now && t[now].x==i) {for (j=t[now].y; j; j-=bit(j)) ans[t[now].z]+=tree[j]; now--;}
    }
    for (i=1; i<=m; i++) printf("%d\n",ans[i]);
    return 0;
}
