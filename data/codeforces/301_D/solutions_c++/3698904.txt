#include <cstdio>
#include <utility>
#include <vector>
using namespace std;

typedef pair<int, int> pii;

const int MX = (2e5)+3;
int p[MX];
vector<int> bro[MX];
vector<pii> que[MX];
int ans[MX];
int t[MX];
int n;

void update(int x)
{
	for( ; x <= n; x += (x & (-x)))
		++t[x];
}

int query(int x)
{
	int rv = 0;
	for( ; x > 0; x -= (x & (-x)))
		rv += t[x];
	return rv;
}


int main()
{
	int m;
	scanf("%d%d", &n, &m);
	for(int i = 1; i <= n; ++i) {
		int x;
		scanf("%d", &x);
		p[x] = i;
	}
	
	for(int i = 1; i <= n; ++i) {
		for(int j = i; j <= n; j += i) {
			if(p[i] < p[j]) bro[p[i]].push_back(p[j]);
			else bro[p[j]].push_back(p[i]);
		}
	}
	
	for(int i = 0; i < m; ++i) {
		int l, r;
		scanf("%d%d", &l, &r);
		que[l].push_back(pii(r, i));
	}
	
	for(int i = n; i > 0; --i) {
		for(vector<int>::iterator it = bro[i].begin(); it != bro[i].end(); ++it)
			update(*it);
		for(vector<pii>::iterator it = que[i].begin(); it != que[i].end(); ++it)
			ans[it->second] = query(it->first);
	}
	
	for(int i = 0; i < m; ++i)
		printf("%d\n", ans[i]);
	return 0;
}
