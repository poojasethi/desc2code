#include <bits/stdc++.h>
typedef long long LL;
#define rep(i,n) for(int i = 0;i < n;i ++)

const int N = 200010;
std::vector<int> L[N], R[N];
int pos[N], a[N];
LL answer[N];
int C[N];
int n;
void add(int x) {
	while(x <= n)	C[x] ++, x += x&-x;
}
LL get_sum(int x) {
	LL ret = 0;
	while(x)	ret += C[x], x -= x&-x;
	return ret;
}
int main() {
	int m;
	scanf("%d%d", &n, &m);
	for(int i = 1, x; i <= n; i ++) {
		scanf("%d", &a[i]);
		pos[a[i]] = i;
	}
	rep(i, m) {
		int l, r;
		scanf("%d%d", &l, &r);
		L[l].push_back(r);
		L[l].push_back(i);
		R[r].push_back(l);
		R[r].push_back(i);
	}
	for(int i = 1; i <= n; i ++) {
		for(int j = 0; j < L[i].size(); j += 2) {
			answer[L[i][j+1]] -= get_sum(L[i][j]) - get_sum(i - 1);
		}
		for(int f = 1; f * f <= a[i]; f ++) {
			if(a[i] % f == 0) {
				add(pos[f]);
				if(f * f != a[i])
					add(pos[a[i] / f]);
			}
		}
		for(int j = 0; j < R[i].size(); j += 2) {
			answer[R[i][j+1]] += get_sum(i) - get_sum(R[i][j] - 1);
		}
	}
	rep(i, m)
		printf("%I64d\n", answer[i]);
	return 0;
}
