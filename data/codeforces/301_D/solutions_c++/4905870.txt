#include <algorithm>
#include <stdio.h>
#include <vector>
#define  maxn      200005
#define  pb        push_back
using    namespace std;
typedef  long long LL;

int n,m;
int l[maxn];
int r[maxn];
int ar[maxn];
LL ans[maxn];
LL tree[maxn];
int pos[maxn];
vector<int>L[maxn];
vector<int>R[maxn];

LL Query(int x)
{
  LL res=0;
  while(x)
  {
    res+=tree[x];
    x-=(x&(-x));
  }
  return res;
}

void Update(int x)
{
  while(x<=n)
  {
    tree[x]++;
    x+=(x&(-x));
  }
}

int main()
{
  scanf("%d%d",&n,&m);
  for(int i=1 ; i<=n ; i++)
  {
    scanf("%d",&ar[i]);
    pos[ar[i]]=i;
  }
  for(int i=1 ; i<=m ; i++)
  {
    scanf("%d%d",&l[i],&r[i]);
    L[l[i]].pb(i);
    R[r[i]].pb(i);
  }
  for(int i=1 ; i<=n ; i++)
  {
    for(int j=0 ; j<(int)L[i].size() ; j++)  ans[L[i][j]]-=Query(r[L[i][j]])-Query(i-1);
    for(int j=ar[i] ; j<=n ; j+=ar[i])       Update(pos[j]);
    for(int j=0 ; j<(int)R[i].size() ; j++)  ans[R[i][j]]+=Query(i)-Query(l[R[i][j]]-1);
  }
  for(int i=1 ; i<=m ; i++)
    printf("%I64d\n",ans[i]);
  return 0;
}
