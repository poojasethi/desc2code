#include <bits/stdc++.h>
//Practice makes perfect

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;

const int MAXN = 2e5 + 100;

vector< int > inter[MAXN], s[MAXN], id[MAXN];
int pos[MAXN], ans[MAXN];

int fen[MAXN];

int get(int i){
	int sum = 0; i += 10;
	for (; i; i -= i & -i) sum += fen[i];
	return sum;
}

int add(int i, int x){
	i += 10;
	for (; i < MAXN; i += i & -i) fen[i] += x;
}

int main(){
	ios::sync_with_stdio( false );
	cout.tie(0); cin.tie(0);

	int n, q; cin >> n >> q;
	for (int i = 0; i < n; i++){
		int x; cin >> x;
		pos[x] = i;
	}

	for (int i = 1; i <= n; i++)
		for (int j = i; j <= n; j += i)
			inter[ max(pos[i], pos[j]) + 1].push_back( min(pos[i], pos[j]) );

	for (int i = 0; i < q; i++){
		int l, r; cin >> l >> r; l--;
		id[r].push_back(i);
		s[r].push_back(l);
	}

	for (int i = 1; i <= n; i++){
		for (int j = 0; j < inter[i].size(); j++)
			add( inter[i][j], 1 );

		for (int j = 0; j < s[i].size(); j++)
			ans[ id[i][j] ] = get(n) - get(s[i][j] - 1);
	}

	for (int i = 0; i < q; i++)
		cout << ans[i] << " ";

	
}
