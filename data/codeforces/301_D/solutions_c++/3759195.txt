#include "iostream"
#include "cstring"
#include "cstdio"
#include "vector"
#include "algorithm"
#define PB push_back
using namespace std;
const int N = 200010;
typedef long long LOL;
vector<int> e[N];
struct T
{
	int l,r;
	int op;
}tt[N];
LOL c[N],ans[N];
int a[N];
int n;
int lowbit(int x)
{
	return x&(-x);
}
void update(int x)
{
	while(x<=n){
		c[x]++;
		x+=lowbit(x);
	}
}
LOL get(int x)
{
	LOL sum=0;
	while(x>0){
		sum+=c[x];
		x-=lowbit(x);
	}
	return sum;
}
bool cmp(T a,T b)
{
	if(a.l==b.l){
		return a.r<b.r;
	}
	return a.l>b.l;
}
int main(void)
{
	int m,x;
	scanf("%d%d",&n,&m);
	for(int i=1;i<=n;i++){
		scanf("%d",&x);
		a[x]=i;
	}
	for(int i=1;i<=n;i++){
		for(int j=i;j<=n;j+=i){
			int u=a[i],v=a[j];
			if(u>v) swap(u,v);
			e[u].PB(v);
		}
	}
	for(int i=1;i<=m;i++){
		scanf("%d%d",&tt[i].l,&tt[i].r);
		tt[i].op=i;
	}
	sort(tt+1,tt+1+m,cmp);
	int now=n+1;
	for(int i=1;i<=m;i++){
		for(int j=tt[i].l;j<now;j++){
			for(int k=0;k<e[j].size();k++){
				update(e[j][k]);
			}
		}
		now=tt[i].l;
		ans[tt[i].op]=get(tt[i].r);
	}
	for(int i=1;i<=m;i++){
		cout<<ans[i]<<endl;
	}
	return 0;
}
 	 				   	 		       					