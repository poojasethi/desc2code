#!/usr/bin/env python


def _is_gym_day(day):
    return day in (2, 3)


def _is_contest_day(day):
    return day in (1, 3)


def calculate_rest_day_count(day_count, days):
    gym_days = (day_index for day_index, day in enumerate(days) if _is_gym_day(day))
    contest_days = (day_index for day_index, day in enumerate(days) if _is_contest_day(day))
    max_work_days_ending_gym = [0] * day_count
    max_work_days_ending_contest = [0] * day_count
    for day_index, day in enumerate(days):
        if _is_gym_day(day):
            max_work_days_ending_gym[day_index] = 1 + max(
                max([0] + list(max_work_days_ending_contest[i] for i in xrange(day_index))),
                max([0] + list(max_work_days_ending_gym[i] for i in xrange(day_index - 1))),
            )
        if _is_contest_day(day):
            max_work_days_ending_contest[day_index] = 1 + max(
                max([0] + list(max_work_days_ending_gym[i] for i in xrange(day_index))),
                max([0] + list(max_work_days_ending_contest[i] for i in xrange(day_index - 1))),
            )
    rest_day_count = day_count - max(max_work_days_ending_gym + max_work_days_ending_contest)       
    return rest_day_count


def read_input():
    day_count = int(raw_input().strip())
    days = map(int, raw_input().strip().split())
    return day_count, days


def main():
    day_count, days = read_input()
    rest_day_count = calculate_rest_day_count(day_count, days)
    print rest_day_count
    return rest_day_count


if __name__ == "__main__":
    main()
