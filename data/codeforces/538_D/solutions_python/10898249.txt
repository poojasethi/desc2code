n = int(raw_input())
x = set()
o = set()
chess = []
for i in xrange(n):
    s = raw_input()
    chess.append(s)
    for j in xrange(n):
        if s[j]=='x':
            x.add( (i,j) )
        elif s[j]=='o':
            o.add( (i,j) )
d = set()

def is_valid(dx,dy):
    for oi2,oj2 in o:
        if 0<=oi2+dx<n and 0<=oj2+dy<n and chess[oi2+dx][oj2+dy]=='.':
            return False#dx, dy is not valid for oi2,oj2
    return True #dx, dy is a valid choice
    
solved_x = set()
def f():
    for xi,xj in x:
        if (xi,xj) not in solved_x:
            for oi,oj in o:
                dx,dy = xi-oi, xj-oj
                if is_valid(dx,dy):
                    d.add((dx,dy))
                    for oi2,oj2 in o:
                        solved_x.add( (oi2+dx, oj2+dy) )
                    break
            else: # if for xi,xj there is no valid movement
                print 'NO'
                return 
    print 'YES'
    res = [ ['.' for _ in xrange(2*n-1)] for _2 in xrange(2*n-1) ] 
    res[n-1][n-1] = 'o'
    for dx,dy in d:
        res[n-1+dx][n-1+dy] = 'x'
    for r in res:
        print ''.join(r)

f()
