import sys
inp = sys.stdin.readlines()

n = int(inp[0].strip())

occupied = set()
attacked = set()

for i in range(n):
    for j in range(n):
        char = inp[1:][i][j]
        if char == 'o':
            occupied.add((i,j))
        if char == 'x':
            attacked.add((i,j))

moves = set()

to_examine = set(attacked)

def valid(i, j):
    return i >= 0 and i < n and j >= 0 and j < n

def attempt(foo, o):
    fi, fj = foo
    oi, oj = o
    movei, movej = fi - oi, fj - oj
    for occi, occj in occupied:
        occ_movedi, occ_movedj = occi + movei, occj + movej
        if not valid(occ_movedi, occ_movedj):
            continue
        occ_moved = occ_movedi, occ_movedj
        if occ_moved not in attacked and occ_moved not in occupied:
            return False
    moves.add((movei, movej))
    for occi, occj in occupied:
        occ_moved = occi + movei, occj + movej
        if occ_moved in to_examine:
            to_examine.remove(occ_moved)
    return True

ok = True

while to_examine:
    foo = to_examine.pop()
    ok = False
    for o in occupied:
        explained = attempt(foo, o)
        if explained:
            ok = True
            break
    if not ok:
        break

if not ok:
    print 'NO'
else:
    print 'YES'
    for i in range(-n + 1, n):
        line = ''
        for j in range(-n + 1, n):
            if i == 0 and j == 0:
                line += 'o'
            elif (i, j) in moves:
                line += 'x'
            else:
                line += '.'
        print line
